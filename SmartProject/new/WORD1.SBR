 CALL main()



















SUB WORD()
    oldErrorLabel$ = Superbase.ErrorTrapLabel
    errormessage$ = ""
 
    GLOBAL wordapplication AS AutoObject
    GLOBAL worddocument AS AutoObject 
    GLOBAL wordselection AS AutoObject
 
    ON ERROR GOTO nowordinstalled
    
    SET wordapplication = Servers.Add("Word.Application")
    wordapplication.Visible = 0
    wordversion$ = wordapplication.version
    a% = VAL (wordversion$)
    IF a% < 80 THEN GOTO wordistoold
    GOTO start 
 
 
 
wordistoold: 
 errormessage$ = "Ihre Wordversion ist zu alt. Sie mÅssen mindestens WinWord 97 installieren !
 GOTO wordend

nowordinstalled: 
 errormessage$ = "Es wurde keine Wordversion auf Ihrem Rechner gefunden!"
 GOTO wordend 
   
start: 
 errormessage$ = "OK"

wordend: 
 
 REM Superbase.ErrorTrapLabel = oldErrorLabel$
 END SUB 
 
 
 
 REM * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  
 REM
 REM * * * * *  F U N C T I O N L I B R A R Y  by Stephan MÅller (survion@web.de) May/June 2001  * * * * *
 REM
 REM * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  
 
 
 REM Wichtige benutzbare Funktionen
    '* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  
 
 REM new_doc()
 '   -> Erstellt ein neues Dokument
 
 REM open_doc("C:\Eigene Dateien\...\test.doc",passwort$)
 '   -> ôffnet ein bestehendes Dokument
 
 REM close_doc(speichern%)
 '   -> Schlie·t das aktuelle Dokument mit folgenden Optionen
 '      speichern% -> 0 -> speichert nicht die VerÑnderunge
 '                   -1 -> speichert die VerÑnderungen
 '                   -2 -> fragt,ob VerÑnderungen speichern               
                      
 REM del_all()
 '   -> lîscht gesamten Inhalt eines Dokuments                 
 
 REM write("hello world") 
 '   -> Schreibt TEXT an aktuelle POSITION 
 '      mit aktuellen Eigenschaften
  
 REM set_font("f1,k1,u2,enter22,tm,rot, ... ,times new roman,20)     
 '   -> Erlaubt die Texteigenschaften zu Ñndern, dabei kînnen 
 '      beliebig viele Parameter Åbergeben werden
 
 '      f0              -> nicht fett
 '      f1              -> fett
 '      k0              -> nicht kursiv
 '      k1              -> kursiv
 '      u0              -> nicht unterstrichen
 '      u1              -> einfach unterstrichen
 '      u2              -> doppelt unterstrichen
 
 '      23              -> Schriftgrî·e
 
 '      Times New Roman  -> Schriftart
  
 '      black   
 '      blue
 '      turquoise
 '      brightgreen
 '      pink
 '      red
 '      yellow
 '      white
 '      darkblue
 '      teal
 '      green
 '      violet
 '      darkred
 '      darkyellow
 '      gray50
 '      gray25
  
 
 '      l               -> Text ist linksbÅndig
 '      m               -> Text ist zentriert
 '      r               -> Text ist rechtsbÅndig
 '      b               -> Text ist ein Blocksatz
 
 '      enter           -> FÅgt 1 Zeilenumbruch ein
 '      enter22         -> FÅgt 22 ZeilenumbrÅche ein
 
 '      space           -> FÅgt 1 Leerzeile ein
 '      space12         -> FÅgt 12 Leerzeilen ein
 
 '      tabulator       -> FÅgt 1 Tabulatorzeichen ein
 '      tabulator22     -> FÅgt 22 Tabulatorzeichen ein
  
 REM picture("C:/Windows/.../*.jpg")
 '   -> FÅgt ein Bild an der aktuellen Position ein
 
 REM Background(background$)
 '   -> Erlaubt die Gestaltung des Hintergrundes, wobei
 '      folgende Aufrufe mîglich sind :
 '      black,blue,...,white (siehe set_font)
 '      0..16777
 '      "C:\Windows\ente3.bmp" -> Hintergrundbild
 
 
 REM tabulator(10)
 '   -> FÅgt angegebene Anzahl von Tabulatorzeichen ein
 
 REM space(10)
 '   -> FÅgt angegebene Anzahl von Leerzeichen ein  
 
 REM new_table(zeilen%,spalten%,left%,eigenschaft%)
 '   -> FÅgt neue Tabelle mit den an gegebenen Zeilen und Spalten 
 '      ein,und positioniert diese an der mit left%
 '      angegebenen Stelle,mit den angegebenen Eigenschaften 
 '      Folgende Eigenschaften kînnen bei
 
 '          TABELLEN + SPALTEN + ZEILEN + ZELLEN !!!!!
 
 '      angewendet werden:
 '      borderstyle0          -> kein Rand
 '      borderstyle13         -> verschiedenste Borderarten(1..24) 
 '      borderstylein2        -> verÑndert nur die inneren Rahmenelemente
 '      borderstyleout0       -> verÑndert nur die Ñu·eren Rahmenelemente
 '      texture-12            -> Zeichnet Textur, wobei Werte
 '                               von -12 bis 40 zulÑssig sind
 '      forecolor3343              -> zeichnet Vordergrundfarbe
 '                      wobei werte von 0..16777 zulÑssig sind
 '                      es kînnen jedoch auch die 8 Standartfarben
 '                      benutzt werden z.B. forecolorgreen
 '      backcolorred         siehe forecolor, hier jedoch die Hintergrundfarbe
 '
 '      text0                 -> Text steht waagerecht
 '      text1                 -> Text steht senkrecht/abwÑrts
 '      text2                 -> Text steht senkrecht/aufwÑrts
 
 '      width20               -> Legt die Breite fest, nur 
 '                               bei Spalten und Zellen !
 '      height20              -> Legt die Hîhe fest, nur bei 
 '                               Zeilen undn Zellen !
 
 '      autoformat30          -> Setzt die Eigenschaften, wie sie 
 '                               in im Autoformat definiert sind
 '                               (Werte von 0 bis 42)   
 '          
 '      bordercolorred        -> setzt Rahmenfarbe (Farben siehe set_font)
 '             
 '      borderwidth9          -> setzt RahmenstÑrke(0..9)
      
 REM behind_table(tabelle%)
 '   -> Setzt den Cursor hinter die angegebene Tabelle
 
 REM set_tablehead(tabelle%,zeile%)
 '   -> Definiert alle Zeilen in der angegebenen Tabelle
 '      von der ersten bis zur angegebenen Tabelle als Tabellen-
 '      Åberschrift ( wird bei neuer Seite wiederholt)

 REM new_row(tabelle%,zeile%,eigenschaft$)
 '   -> FÅgt eine neue Zeile in die angegebene Tabelle und
 '      unter der angegebenen zeile ein.
 '      Die Anzahl der Zeilen mu· ebenfalls angegeben werden

 REM new_col(tabelle%,spalte%,eigenschaft$)
 '   -> FÅgt eine neue Spalte in die angegebene Tabelle und
 '      hinter der angegebenen spalte ein.
 '      Die Anzahl der Spalten mu· ebenfalls angegeben werden 
 
 REM set_row(tabelle%,zeile%,eigenschaft$)
 '   -> éndert die Eigenschaft einer bestimmten Zeile in der
 '      angegebenen Tabelle (bisher nur die Hîhe, diese Funktion
 '      wird jedoch noch ausgebaut)

 REM set_col(tabelle%,spalte%,eigenschaft$)
 '   -> éndert die Eigenschaft einer bestimmten Spalte in der
 '      angegebenen Tabelle (bisher nur die Breite, diese Funktion
 '      wird jedoch noch ausgebaut) 
 
 REM set_cell(tabelle%,zeile%,spalte%,eigenschaft$)
 '   -> Springt in der angegebene Zelle der angegebenen Tabelle
 '      setzt dort die angegebenen Eigenschaften   
 '       von nun an kann in der aktuellen zellen geschrieben werden
 '      bzw. die Eigenschaft der Schrft verÑndert werden

 REM merge_cells(tabelle%,zeile1%,spalte1%,zeile2%,spalte2%)
 '   -> Verbindet alle zellen, die in dem angegebenen Bereich
 '      der angegebenen Tabelle liegen
 
 REM page_down()
 '   -> FÅhrt einen Seitenumbruch durch 

 REM move(unit%,direction$,extent%)
 '      unit% gibt an, um welche Einheit der Cursor bewegt werden
 '      soll :
 '       1 = Character (!! funktioniert bei Text und Tabellen ;-)
 '       2 = Word
 '       3 = Sentence
 '       4 = Paragraph
 '       5 = Line  (!! funktioniert bei text und Tabellen ;-) 
 '       6 = Story
 '       7 = Screen
 '       8 = Section
 '       9 = Column
 '      10 = Row
 '      11 = Window
 '      12 = Cell
 '      13 = CharacterFormatting
 '      14 = ParagraphFormatting
 '      15 = Table
 '      16 = Item

 '      direction$: 
 '  - > bewegt den Cursor in die angegebene POSITION 
 '      mit der angegebenen Anzahl.  
 '      move(5,"up,left3,down10,right2",1)

 '      extent% = 0 -> Cursor wird bewegt ohne zu markieren
 '      extent% = 1 -> Cursur wird bewegt und markiert dabei 

 REM paint(Object$,left,top,width,height,eigenschaft$)
 '      zeichnet ein Objekt wobei Object folgenden Wert annehmen kann:
 '       "line"     -> zeichnet Linie
 '       "arrow"    -> zeichnet Pfeil
 '       "circle"   -> zeichnet Kreis
 '       "rectangle -> zeichnet Rechteck
 '
 '      eigenschaft$ kann folgende Werte beinhalten
 '      fillcoloryellow bzw. fillcollor16777215
 '      linecolorred bzw linecolor2222
 '      linewidth1 ... linewidth1000
 '      linestyle1 ... linestyle5
 '      dashstyle1 ... dashstyle8
 
 REM set_password(passwort$)
 '   -> SchÅtzt das aktuelle Dokument vor öberarbeitungen
 
 REM remove_password(passwort$)
 '   -> Entfernt den Schreibschutz

 REM set_page(seekview%)
 '  0 -> gibt die Hauptseite zum bearbeiten frei
 '  1 -> springt zur Kopfzeile
 '  2 -> springt zur Fu·zeile 

 REM insert(objekt$)
 '  time        -> fÅgt die aktuelle Uhrzeit ein
 '  date        -> fÅgt das aktuelle Datum ein
 '  page        -> fÅgt Nummer der aktuellen Seite ein
 '  numpages    -> fÅgt Gesamtzahl der Seiten ein
 '  numchars    -> fÅgt Anzahl der Zeichen ein
 '  numwords    -> fÅgt Anzahl der Wîrter ein
 '  filename    -> fÅgt Dateinamen ein
 '  author      -> fÅgt Namen des Autors ein
 '  3..91       -> alle weiteren mîglichen Informationen

       
 
  

 REM Im Programm verwendete Funktionen
    '* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  
 
 REM font_action(style$) 
 '   -> Wird von SUB schrift mit einem Parameter aufgerufen und setzt diesen
 
 REM line_down(anzahl%)
 '   -> FÅhrt Zeilenumbruch durch
 
 REM RGB%(255,0,0) 
 '   -> wandelt RGB-Farbangaben in eine 24 bit Zahl   
   
 REM color(255,255,255) 
 '   -> setz die Textfarbe, ruft dabei RGB% auf
 
 REM align(0..3)
 '   -> setzt die Textausrichtung
 '      0 - > LinksbÅndig
 '      1 - > Zentriert
 '      2 - > rechtsbÅndig
 '      3 - > Blocksatz
 
 REM pos_table(tabelle%,left%)
 '   -> Schiebt die angegebene Tabelle an die angegebene Position
 
   
 REM * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   
 REM
 REM * * * * * * * * * * * *   P R O G R A M M C O D E   * * * * * * * * * * * * * * * * * * * * * * * * *  
 REM
 REM * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   
  

  
SUB new_doc()
  SET wordapplication = Servers.Add("Word.Application")
  wordapplication.Visible = 0
  SET worddocument = wordapplication.Documents.Add()
  SET wordselection = worddocument.ActiveWindow.Selection
  worddocument.ActiveWindow.View.Type = 3
 END SUB 
 
SUB open_doc(Pfad$,passwort$)
    SET wordapplication = Servers.Add("Word.Application")
    wordapplication.Visible = 0
  'ON ERROR GOTO passvorhanden
 
 ' wrongpass$ = CHR$ (1) + CHR$ (2) + CHR$ (3)
 ' SET worddocument = wordapplication.Documents.Open(Pfad$,0,0,1,wrongpass$)
 ' worddocument.saveas(Pfad$,0,0,passwort$ + "1")
 ' worddocument.save()
 ' worddocument.password = passwort$
 ' worddocument.save()
 ' CALL close_doc( - 1)
 ' SET worddocument = wordapplication.Documents.Open(Pfad$)',0,0,1,passwort$)
 ' GOTO passweiter

passvorhanden: 
  SET worddocument = wordapplication.Documents.Open(Pfad$,0,0,1,passwort$)
  
passweiter: 
  SET wordselection = worddocument.ActiveWindow.Selection
  worddocument.ActiveWindow.View.Type = 3
 END SUB 
 
SUB close_doc(speichern%)
  worddocument.close(speichern%)
 END SUB 
 
SUB del_all()
  wordselection.WholeStory()
  wordselection.delete()
 END SUB 
 
SUB write(s$)
 wordselection.TypeText(s$)
 END SUB 
  
SUB set_font(eigenschaft$)' PrÅft nach, wieviele Schrift-Anweisungen zu
                   ' bearbeiten sind und Åbergibt diese einzeln
                   ' der SUB schritaction, welche diese bearbeitet
  a% = 1
  b% = LEN (eigenschaft$)
  WHILE b% > 0
    c% = INSTR (a%,eigenschaft$,",")
    IF c% > 0 THEN b% = c% - 1
     END IF 
    IF a% > c% THEN 
      b% = 0
      CALL font_action( MID$ (eigenschaft$,a%, LEN (eigenschaft$) - a% + 1))
     ELSE CALL font_action( MID$ (eigenschaft$,a%,c% - a%))
     END IF 
    a% = b% + 2
  WEND 
 END SUB 
 
SUB picture(location$)
  wordselection.InlineShapes.AddPicture(location$)
 END SUB 
 
SUB background(background$)
 
  IF VAL (background$) > 0 THEN 
   worddocument.Background.Fill.ForeColor = VAL (background$)
   worddocument.Background.Fill.visible = - 1
   worddocument.Background.Fill.Solid()
 
  ELSE IF fillcolor%(background$) > - 1 THEN 
   worddocument.Background.Fill.ForeColor = fillcolor%(background$)
   worddocument.Background.Fill.visible = - 1
   worddocument.Background.Fill.Solid()
  
  ELSE 
   worddocument.Background.Fill.UserPicture(background$)
   
  END IF 
 
 END SUB 
 
 
SUB tabulator(i%)
  t$ = CHR$ (9)
  FOR a% = 1 TO i%
    CALL write(t$)
  NEXT 
 END SUB 
 
SUB space(i%)
 FOR a% = 1 TO i%
   CALL write(" ")
 NEXT 
 END SUB 
 
 
SUB new_table(zeilen%,spalten%,left%,eigenschaft$)
  DIM myTable AS AutoObject
  SET myTable = worddocument.Tables.Add(wordselection.Range,zeilen%,spalten%)
  myTable.Rows.SetLeftIndent(left%,1)
  CALL table_property(myTable,eigenschaft$)
 
 END SUB 
 
SUB behind_table(tabelle%)
  DIM myTable AS AutoObject
  SET myTable = worddocument.Tables(tabelle%)
  myTable.select()
  wordselection.movedown(5,2)
  END IF 
 END SUB 
   
SUB set_tablehead(tabelle%,zeile%)
 DIM myRow AS AutoObject
 SET myRow = worddocument.tables(tabelle%).Rows(zeile%)
 myRow.HeadingFormat = 1
 END SUB 
 
SUB new_row(tabelle%,zeile%,eigenschaft$)
  DIM myRow AS AutoObject
  SET myRow = worddocument.tables(tabelle%).Rows(zeile%)
  myRow.select()
  wordselection.Insertrows(1)
  SET myRow = worddocument.tables(tabelle%).Rows(zeile% + 1)
  myRow.select()
  CALL table_property(myRow,eigenschaft$)
 END SUB 
 
SUB new_col(tabelle%,spalte%,eigenschaft$)
  DIM myColumn AS AutoObject
  SET myColumn = worddocument.Tables(tabelle%).Columns(spalte%)
  myColumn.select()
  wordselection.Insertcolumns()
  SET myColumn = worddocument.Tables(tabelle%).Columns(spalte% + 1)
  myColumn.select()
  CALL table_property(myColumn,eigenschaft$)
 END SUB 
   
SUB set_row(tabelle%,zeile%,eigenschaft$)
 DIM myRow AS AutoObject
 SET myRow = worddocument.tables(tabelle%).Rows(zeile%)
 CALL table_property(myRow,eigenschaft$)
 END SUB 
 
SUB set_col(tabelle%,spalte%,eigenschaft$)
 DIM myColumn AS AutoObject
 SET myColumn = worddocument.tables(tabelle%).Columns(spalte%)
 CALL table_property(myColumn,eigenschaft$)
 END SUB 
 
SUB set_cell(tabelle%,zeile%,spalte%,eigenschaft$)
  DIM myCell AS AutoObject
  SET myCell = worddocument.Tables(tabelle%).Cell(zeile%,spalte%)
  myCell.select()
  CALL table_property(myCell,eigenschaft$)
 
 END SUB 
 
SUB pos_table(tabelle%,left%)
  DIM mytable AS AutoObject
  SET myTable = worddocument.Tables(tabelle%).Rows
  myTable.SetLeftIndent(left%,1)
 END SUB 
 
SUB merge_cells(tabelle%,zeile1%,spalte1%,zeile2%,spalte2%)
  IF zeile1% > zeile2% THEN 
   merker% = zeile2%
   zeile2% = zeile1%
   zeile1% = merker%
  END IF 
  IF spalte1% > spalte2% THEN 
    merker% = spalte2%
    spalte2% = spalte1%
    spalte1% = merker%
  END IF 
  CALL set_cell(tabelle%,zeile1%,spalte1%,"")
  wordselection.moveright(1,spalte2% - spalte1%,1)
  wordselection.movedown(5,zeile2% - zeile1%,1)
  wordselection.cells.merge()
 END SUB 

SUB page_down()
  wordselection.InsertBreak(7)
 END SUB 


SUB move(unit%,direction$,extent%)
 IF selection% < 0 OR selection% > 1 THEN 
  selection% = 0
 END IF 
 a% = 1
  b% = LEN (direction$)
  WHILE b% > 0
    c% = INSTR (a%,direction$,",")
    IF c% > 0 THEN b% = c% - 1
     END IF 
    IF a% > c% THEN 
      b% = 0
      CALL move_action(unit%, MID$ (direction$,a%, LEN (direction$) - a% + 1),extent%)
     ELSE CALL move_action(unit%, MID$ (direction$,a%,c% - a%),extent%)
     END IF 
    a% = b% + 2
  WEND 
 END SUB 

SUB paint(object$,left%,top%,width%,height%,eigenschaft$)
 SELECT CASE object$
  CASE "line"
   worddocument.Shapes.addline(left%,right%,left% + width%,top% + height%).select()
  CASE "arrow"
   worddocument.Shapes.addline(left%,right%,left% + width%,top% + height%).select()
   wordselection.ShapeRange.Line.EndArrowheadStyle = 2
   wordselection.ShapeRange.Line.EndArrowheadLength = 2
   wordselection.ShapeRange.Line.EndArrowheadWidth = 2
  CASE "circle"
   worddocument.Shapes.AddShape(9,left%,top%,left% + width%,top% + height%).select()
  CASE "rectangle"
   worddocument.Shapes.AddShape(1,left%,top%,left% + width%,top% + height%).select()
  END CASE 
  
  a% = 1
  b% = LEN (eigenschaft$)
  WHILE b% > 0
    c% = INSTR (a%,eigenschaft$,",")
    IF c% > 0 THEN b% = c% - 1
     END IF 
    IF a% > c% THEN 
      b% = 0
      CALL paint_action( MID$ (eigenschaft$,a%, LEN (eigenschaft$) - a% + 1))
     ELSE 
      CALL paint_action( MID$ (eigenschaft$,a%,c% - a%))
    END IF 
    a% = b% + 2
  WEND 
 END SUB 

SUB set_password(passwort$)
  IF passwort$ <> "" THEN 
    worddocument.protect(1,0,passwort$)
  END IF 
 END SUB 

SUB remove_password(passwort$)
  IF passwort$ <> "" THEN 
    worddocument.unprotect(passwort$)
  END IF 
 END SUB 

SUB set_page(seekview%)
  SELECT CASE seekview%
   CASE 0
    wordapplication.ActiveWindow.ActivePane.View.SeekView = 0
   CASE 1
    wordapplication.ActiveWindow.ActivePane.View.SeekView = 9
   CASE 2
    wordapplication.ActiveWindow.ActivePane.View.SeekView = 10
  END CASE 
 END SUB 
 
SUB insert(objekt$)
 
 IF VAL (objekt$) > 2 AND VAL (objekt$) < 92 THEN 
   indexnum% = VAL (objekt$)
 ELSE 
 
   SELECT CASE objekt$
     CASE "time"
       indexnum% = 32
     CASE "date"
       indexnum% = 31
     CASE "page"
       indexnum% = 33
     CASE "numpages"
       indexnum% = 26
     CASE "numwords"
       indexnum% = 28
     CASE "numchars"
       indexnum% = 27
     CASE "filename"
       indexnum% = 29
     CASE "author"
       indexnum% = 17
  

     CASE ELSE indexnum% = 0
   END CASE 
 END IF 
 wordselection.Fields.Add(wordselection.Range,indexnum%)
 END SUB 

  


















 
 REM Im Programm verwendete Funktionen
    '* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  
  
SUB table_property(tab AS autoobject,eigenschaft$)
  MOUSE OFF 
  a% = 1
  b% = LEN (eigenschaft$)
  WHILE b% > 0
    c% = INSTR (a%,eigenschaft$,",")
    IF c% > 0 THEN b% = c% - 1
     END IF 
    IF a% > c% THEN 
      b% = 0
      CALL table_action(tab, MID$ (eigenschaft$,a%, LEN (eigenschaft$) - a% + 1))
     ELSE 
      CALL table_action(tab, MID$ (eigenschaft$,a%,c% - a%))
    END IF 
    a% = b% + 2
  WEND 
 END SUB 
 
SUB table_action(tab AS autoobject,eigenschaft$)
 
   IF LEFT$ (eigenschaft$,13) LIKE "borderstylein" THEN 
     Tab.borders.InsideLineStyle = VAL ( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 13))
     GOTO endtabaction
   END IF 

   IF LEFT$ (eigenschaft$,14) LIKE "borderstyleout" THEN 
     Tab.borders.OutsideLineStyle = VAL ( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 14))
     GOTO endtabaction
   END IF 

   IF LEFT$ (eigenschaft$,11) LIKE "borderstyle" THEN 
     Tab.borders.enable = VAL ( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 11))
     GOTO endtabaction
   END IF 
         
   IF LEFT$ (eigenschaft$,11) LIKE "bordercolor" THEN 
     IF color%( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 11)) >= 0 THEN 'else 
      bordercolor% = color%( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 11))
     END IF 
     DIM myBorder AS AutoObject
     ON ERROR GOTO fehlercolor 
     FOR z% = - 6 TO - 1
       SET myBorder = tab.borders(z%)
       myBorder.colorindex = bordercolor%
       GOTO weitercolor 
fehlercolor: 
       RESUME weitercolor
weitercolor:     
     NEXT 
 
     ON ERROR GOTO programerror
     GOTO endtabaction
   END IF 
 
  IF LEFT$ (eigenschaft$,11) LIKE "borderwidth" THEN 
     DIM myBorder AS AutoObject
     ON ERROR GOTO fehlerwidth 
     FOR z% = - 6 TO - 1
       SET myBorder = tab.borders(z%)
       myBorder.linewidth = linewidth%( VAL ( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 11)))
       GOTO weiterwidth 
fehlerwidth: 
       RESUME weiterwidth
weiterwidth:     
     NEXT 
 
     ON ERROR GOTO programerror
     GOTO endtabaction
   END IF 
 
   IF LEFT$ (eigenschaft$,6) LIKE "height" THEN 
     tab.setheight( VAL ( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 6)),1)
     GOTO endtabaction
   END IF 
 
   IF LEFT$ (eigenschaft$,5) LIKE "width" THEN 
     tab.setwidth( VAL ( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 5)),1)
     GOTO endtabaction
   END IF 
 
   IF LEFT$ (eigenschaft$,7) LIKE "texture" THEN 
     texture% = VAL ( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 7))
     IF texture% >= - 12 AND texture% < 0 THEN 
       Tab.Shading.Texture = texture%
      ELSE 
       IF texture% <= 40 THEN 
           Tab.Shading.Texture = texture% * 25
       END IF 
     END IF 
     GOTO endtabaction
   END IF 
 
   IF LEFT$ (eigenschaft$,9) LIKE "backcolor" THEN 
    IF color%( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 9)) >= 0 THEN 
      tab.Shading.BackgroundPatternColorIndex = color%( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 9))
    END IF 
    GOTO endtabaction
   END IF 
 
   IF LEFT$ (eigenschaft$,9) LIKE "forecolor" THEN 
    IF color%( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 9)) >= 0 THEN 
      tab.Shading.ForegroundPatternColorIndex = color%( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 9))
    END IF 
     GOTO endtabaction
   END IF 
 
   IF LEFT$ (eigenschaft$,4) LIKE "text" THEN 
     tab.range.Orientation = VAL ( RIGHT$ (eigenschaft$,1))
     GOTO endtabaction 
   END IF 
 
   IF LEFT$ (eigenschaft$,10) LIKE "autoformat" THEN 
     tab.autoformat( VAL ( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 10)))
   END IF 
 
endtabaction: 
 
 END SUB 
 
 
SUB borderaction
 END SUB 
 
SUB font_action(style$)' Schreibt eine Anweisung
 DIM f AS AutoObject
 SET f = wordselection.Font
    a% = VAL (style$)
    IF a% = 0 THEN 
     IF LEFT$ (style$,5) LIKE "enter" THEN 
       b% = VAL ( RIGHT$ (style$, LEN (style$) - 5))
       IF b% = 0 THEN b% = 1
       CALL line_down(b%)
     
      ELSE IF LEFT$ (style$,5) LIKE "space" THEN 
       b% = VAL ( RIGHT$ (style$, LEN (style$) - 5))
       IF b% = 0 THEN b% = 1
       CALL space(b%)
      
      ELSE IF LEFT$ (style$,9) LIKE "tabulator" THEN 
       b% = VAL ( RIGHT$ (style$, LEN (style$) - 9))
       IF b% = 0 THEN b% = 1
       CALL tabulator(b%)
 
      ELSE IF color%(style$) >= 0 THEN 
       wordselection.Font.ColorIndex = color%(style$)
 
      ELSE 
       SELECT CASE style$
        CASE "f0"
               f.bold = 0
        CASE "f1"
               f.bold = 1
        CASE "k0"
               f.italic = 0
        CASE "k1"
               f.italic = 1
        CASE "u0"
               f.underline = 0
        CASE "u1"
               f.underline = 1
        CASE "u2"
               f.underline = 3
        CASE "l"
               CALL align(0)
        CASE "m"
               CALL align(1)
        CASE "r"
               CALL align(2)
        CASE "b"
               CALL align(3)
   
        CASE ELSE 
               f.name = style$
     END CASE 
    END IF 
   ELSE f.size = style$
 END IF 
 
 END SUB 
 
 
SUB line_down(anzahl%)
  FOR i% = 1 TO anzahl%
   wordselection.TypeText( CHR$ (13))
  NEXT 
 END SUB 
   
FUNCTION RGB%(r%,g%,b%)
  RGB% = r% + g% * 256 + b% * 256 * 256
 END FUNCTION 
 
FUNCTION linewidth%(width%)
 SELECT CASE width%
  CASE 1
    linewidth% = 2
  CASE 2
    linewidth% = 4
  CASE 3
    linewidth% = 6
  CASE 4
    linewidth% = 8
  CASE 5
    linewidth% = 12
  CASE 6
    linewidth% = 18
  CASE 7
    linewidth% = 24
  CASE 8
    linewidth% = 36
  CASE 9
    linewidth% = 48
  CASE ELSE 
    linewidth% = 2
  END CASE 
 END FUNCTION 
 
FUNCTION color%(color$)
 SELECT CASE color$
   CASE "auto"
     color% = 0
   CASE "black"
     color% = 1
   CASE "blue"
     color% = 2
   CASE "turquoise"
     color% = 3
   CASE "brightgreen"
     color% = 4
   CASE "pink"
     color% = 5
   CASE "red"
     color% = 6
   CASE "yellow"
     color% = 7
   CASE "white"
     color% = 8
   CASE "darkblue"
     color% = 9
   CASE "teal"
     color% = 10
   CASE "green"
     color% = 11
   CASE "violet"
     color% = 12
   CASE "darkred"
     color% = 13
   CASE "darkyellow"
     color% = 14
   CASE "gray50"
     color% = 15
   CASE "gray25"
     color% = 16
   CASE ELSE 
     color% = - 1
  END CASE 
 END FUNCTION 
 
FUNCTION fillcolor%(color$)
 SELECT CASE color$
   CASE "black"
     fillcolor% = RGB%(0,0,0)
   CASE "blue"
     fillcolor% = RGB%(0,0,255)
   CASE "turquoise"
     fillcolor% = RGB%(0,255,255)
   CASE "brightgreen"
     fillcolor% = RGB%(0,255,0)
   CASE "pink"
     fillcolor% = RGB%(255,0,255)
   CASE "red"
     fillcolor% = RGB%(255,0,0)
   CASE "yellow"
     fillcolor% = RGB%(255,255,0)
   CASE "white"
     fillcolor% = RGB%(255,255,255)
   CASE "darkblue"
     fillcolor% = RGB%(0,0,128)
   CASE "teal"
     fillcolor% = RGB%(0,128,128)
   CASE "green"
     fillcolor% = RGB%(0,128,0)
   CASE "violet"
     fillcolor% = RGB%(128,0,128)
   CASE "darkred"
     fillcolor% = RGB%(128,0,0)
   CASE "darkyellow"
     fillcolor% = RGB%(128,0,128)
   CASE "gray50"
     fillcolor% = RGB%(128,128,128)
   CASE "gray25"
     fillcolor% = RGB%(192,192,192)
   CASE ELSE 
     fillcolor% = - 1
  END CASE 
 END FUNCTION 

SUB align(allign%)
 wordselection.ParagraphFormat.Alignment = allign%
 END SUB 

SUB move_action(unit%,direction$,extent%)
 IF LEFT$ (direction$,2) LIKE "up" THEN 
  i% = VAL ( RIGHT$ (direction$, LEN (direction$) - 2))
  IF i% = 0 THEN 
   i% = 1
  END IF 
  wordselection.moveup(unit%,i%,extent%)
  GOTO endmoveaction
 END IF 
 
 IF LEFT$ (direction$,4) LIKE "down" THEN 
  i% = VAL ( RIGHT$ (direction$, LEN (direction$) - 4))
  IF i% = 0 THEN 
   i% = 1
  END IF 
  wordselection.movedown(unit%,i%,extent%)
  GOTO endmoveaction
 END IF 

 IF LEFT$ (direction$,4) LIKE "left" THEN 
  i% = VAL ( RIGHT$ (direction$, LEN (direction$) - 4))
  IF i% = 0 THEN 
   i% = 1
  END IF 
  wordselection.moveleft(unit%,i%,extent%)
  GOTO endmoveaction
 END IF 
 
 IF LEFT$ (direction$,5) LIKE "right" THEN 
  i% = VAL ( RIGHT$ (direction$, LEN (direction$) - 5))
  IF i% = 0 THEN 
   i% = 1
  END IF 
  wordselection.moveright(unit%,i%,extent%)
  GOTO endmoveaction
 END IF 

endmoveaction: 
 END SUB 

SUB paint_action(eigenschaft$)
  
 IF LEFT$ (eigenschaft$,9) LIKE "fillcolor" THEN 
   IF VAL ( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 9)) > 0 THEN 
    wordselection.ShapeRange.Fill.ForeColor = VAL ( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 9))
   ELSE 
    wordselection.ShapeRange.Fill.ForeColor = fillcolor%( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 9))
   END IF 
   wordselection.ShapeRange.Fill.Visible = - 1
   wordselection.ShapeRange.Fill.Solid()
  GOTO endpaintaction
  END IF 
  
  IF LEFT$ (eigenschaft$,9) LIKE "linecolor" THEN 
   IF VAL ( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 9)) > 0 THEN 
    wordselection.ShapeRange.Line.ForeColor = VAL ( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 9))
   ELSE 
    wordselection.ShapeRange.Line.ForeColor = RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 9)
   END IF 
   wordselection.ShapeRange.Line.Visible = - 1
  GOTO endpaintaction
  END IF 

  IF LEFT$ (eigenschaft$,9) LIKE "linewidth" THEN 
   wordselection.ShapeRange.Line.Weight = VAL ( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 9))
   wordselection.ShapeRange.Line.Visible = - 1
  GOTO endpaintaction
  END IF 
    
  IF LEFT$ (eigenschaft$,9) LIKE "linestyle" THEN 
   wordselection.ShapeRange.Line.Style = VAL ( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 9))
   wordselection.ShapeRange.Line.Visible = - 1
  GOTO endpaintaction
  END IF 

  IF LEFT$ (eigenschaft$,9) LIKE "dashstyle" THEN 
   wordselection.ShapeRange.Line.DashStyle = VAL ( RIGHT$ (eigenschaft$, LEN (eigenschaft$) - 9))
   wordselection.ShapeRange.Line.Visible = - 1
  GOTO endpaintaction
  END IF 
 
endpaintaction: 
 END SUB 

  

