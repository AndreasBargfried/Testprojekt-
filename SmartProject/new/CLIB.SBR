   CALL main()'                           ; Library Funktionen
 
 REM 'CLIB letzte énderungen
 '-------------------------------------------------------------------
 
  
 ' AppIDs fÅr Lizensierung Stand 21.10.1998
 ' ------------------------------------------------------------------
 REM OBEN sind die bisherigen AppID's, unten die ab 01.11.98 gÅltigen
 
 ' 35   PROJECT                       mit EURO
 ' ------------------------------------------------------------------ 
 
 ' Initialisierung der Bibliothek
 ' =======================================================================
 ' Zweck:       setzt alle allgemein benîtigen Variablen etc.
 ' Nutzung:     CALL LIBInit(pintname$,ptitle$,mode%,intID%)
 '              pintname$       = interner Programmname
 '              ptitle$         = offizieller Programmname
 '              mode%           = Programmmodus
 '                              0 = normale Version
 '                              1 = Test
 '              intID%          = interne Programm-ID
 ' =======================================================================
 ' 09.11.95    - Umstellung auf Remote-Zugriff
 ' 28.01.96    - Standardobjekte GLOBAL erzeugt
  
SUB LIBInit(pintname$,ptitle$,mode%,intID%)
 REGISTER CLEAR 
 ERASE 
 CLEAR GLOBAL 
 SET HEADING "SETUP"
 REGISTER "USER","FindWindow","HCC"
 REGISTER "USER","SetWindowLong","JHIJ"
 GLOBAL _projekt$,_netpath$,_netpathlw$,_netpathlw1$,_localpath$,_remotepath$,_ppath$,_docpath$,GTest%,plzfound%,stichworte$(300),DisplaySet%,HInstance%,HWnd%%
 GLOBAL inhouse$,inhouse1$,sep1$,_db%,suchopt$,textversch$,ergdatuma$,akquiseneu$,_debug%
 GLOBAL sm_x$,sm_y$,sm_dx$,sm_dy$,sm_x%,sm_y%,sm_dx%,sm_dy%
 GLOBAL Termine$(1),LastTermin%,tfound%,cmd$,AutoKeyword$,suna$,AdrFound$(1),tfoundadr%,adrfound%,LAuswahl1$(1),ADRFilter$
 GLOBAL Delphi%,RNotiz$,proserv$,Felder$(100)
 GLOBAL dlg AS DIALOG ,c AS DialogControl
 GLOBAL control AS DialogControl
 GLOBAL hdoc%,mleft%,mright%,mtop%,mbottom%,vzeil%,ueberpos%,listende%,czeile%,cPage%,cPageold%
 GLOBAL VFREE%,VRIGHT%,VLEFT%,VLEFTMARGIN%,VRIGHTMARGIN%,VTOP%,VBOTTOM%,VTOPMARGIN%,VBOTTOMMARGIN%
 GLOBAL wbericht$,nummer$,AutoAnrede$,AutoTitel$,AutoBeruf$,AutoHobbys$,AutoOrt$,AutoLand$,AutoFiForm$
 GLOBAL AutoFStand$,AutoAnstell$,AutoNational$,AutoStaat$,AutoPLZ$,nemany$,MATagest$,tpfad$,adrglob%
 GLOBAL eurosupport$,ProjectJN$,PrvVerfahr$,prv$,DokVor$,ProvBuch$,adrser%,gesser%,maser%,aqbearb$,reser%,mahnser%
 GLOBAL noserie%,codeadrt%,ag$,Workstation%,offVlLi%,offBMCh%,nomail%,minuteab%,TV%(10),TV$(10),ter1anz%,KonTest$
 GLOBAL GPPCS$,GMACodeDir$,GSerDir$,Vista$,GWemailAbr%
 ERASE ipaddress$,portnumber$,udpserver$,version%
 GLOBAL ipaddress$,portnumber$,udpserver$,version%
 GLOBAL terbyhand%,GCODIE%,GCODieRuf%,GCODieRuf1%,GCODieRuf2%
 GLOBAL GVorname$,GName$,GGebname$,GOrt$,GPLZ$,GStrasse$
 GLOBAL f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$,GGGcodeku$
 GLOBAL GMAName$,GMACodeMA%,GAppName$,GASP%,GMailBetreff$,GMailIn%,MALIST2$(1),MALIST2%(1)
 GLOBAL GEMAILRAUS$,GEMAIL%,GEMAILSer%,GBCC$(1,1),GEMAILJNAuto%,gemailinit%
 GLOBAL AutoKArt1$,AutoKArt2$,GAutoKArt1$(50),GAutoKArt2$(50),GTERArtSpez%
 GLOBAL GBildschirm%,GPrjForm$,GOFFForm$,GUpd%,GPN1$,sunaold$,GFiltTer%,GHerba%
 GLOBAL _codewgru%,Prodwagruppe$(1),_codewa%,ProdWarenart$(1),GRechSu1%,Gsuna1$,Gsuna2$,Gund$
 GLOBAL GCodeMA%,_codemail%,filtma%,GCODIEADR$,gvonadr%
 GLOBAL GDokName$,GDokNovi%,WinDir$,codekurech%,Positionen$(1),GposOld%
 GLOBAL GfromRA%,GfromRE%,GCodeDok%,Gcodeteil%,Gbodytxt$,GScanDir$,GTermAusw%
 GLOBAL GTerminfrage%,Gdokloevor$,Guebschrift$,gdrumitkunr$,GcodeAQ%,GcodeAQNeu%
 GLOBAL GCodeang%,GADRGrup$(1),GAktion$,GMahn$,GMahnDat%,GDirINI$,GRech$,GRechDat%
 GLOBAL GLizFirma$,GLizName$,Gpdemende$,Gpostanschrae$,GTerLispez%,_codeprgr%,_CodeProd%,gsuart%
 GLOBAL GImpExpAktiv%,GnachExp$,Gmaul$,GAnzAdrFound%,Grechtslinks$
 GLOBAL GCodeRE%,GCodeMS%,Gustdruck$
 GAnzAdrFound% = 0
 GImpExpAktiv% = 0
 GTerLispez% = 0
 GDirINI$ = ""
 GTerminfrage% = 0
 GTermAusw% = 0
 GFiltTer% = 0
 GEMAILSer% = 0
 GTERArtSpez% = 0
 GEMAILJNAuto% = 0
 GEMAILRAUS$ = ""
 GEMAILRAUS$ = ""
 GMailBetreff$ = ""
 GMailIn% = 0
 GGGcodeku$ = "":f1$ = "":f2$ = "":f3$ = "":f4$ = "":f5$ = "":f6$ = "":f7$ = "":f8$ = "":f9$ = "":f10$ = "":
 f11$ = "":f12$ = "":f13$ = "":f14$ = "":f15$ = "":f16$ = "":f17$ = "":f18$ = "":f19$ = "":f20$ = ""
 GAppName$ = _netpath$ + "DOCP\project.pdf"
 REM GASP% = - 1
 REM GCODIE% = - 1
 GCODieRuf% = 0
 GCODieRuf1% = 0
 terbyhand% = 0
 ter1anz% = 0
 minuteab% = 10
 nomail% = 0
 offBMCh% = 0
 offVlLi% = 0
 noserie% = 0
 aqbearb$ = "n"
 adrser% = 0
 maser% = 0
 gesser% = 0
 reser% = 0
 mahnser% = 0
 ProvBuch$ = "TRUE"
 ag$ = "n"
 IF intID% = 55 THEN ProvBuch$ = "FALSE"
 DokVor$ = "n"
 eurosupport$ = "TRUE"
 ProjectJN$ = "FALSE"
 PrvVerfahr$ = "STANDARD"
 IF intID% >= 40 AND intID% <= 43 OR intID% = 60 THEN PrvVerfahr$ = "ZAHLUNGSEINGANG"
 IF intID% = 25 OR intID% = 35 OR intID% = 42 OR intID% = 43 OR intID% = 47 OR intID% = 48 OR intID% = 51 OR intID% = 54 OR intID% = 55 THEN eurosupport$ = "TRUE"
 eurosupport$ = "TRUE"
 IF intID% = 30 OR intID% = 35 OR intID% = 36 THEN ProjectJN$ = "TRUE"
 IF intID% = 36 THEN 
   GASP% = - 1
 ELSE 
   GASP% = 0
 END IF 
 IF intID% = 60 THEN MAKLER$ = "TRUE"
 REM ag$="j" dann Agenturvariante und alle Funktionen sperren
 IF intID% = 43 THEN ag$ = "j"
 dokneu$ = ""
 wbsort$ = ""
 IF PrvVerfahr$ LIKE "Zahlungseingang" THEN 
    prv$ = "Real Cash"
 ELSE 
    PrvVerfahr$ = "STANDARD"
    prv$ = "STANDARD"
 END IF 
 _projekt$ = pintname$

 REM suchopt$ = "Nachname"
 IF FN sys(4) = 3 OR FN sys(4) = 2 THEN GTest% = 0 ELSE GTest% = mode%
 IF CALL ("FindWindow","ThunderForm","") > 0 THEN GTest% = 0
 _db% = 0
 Delphi% = 1
 Superbase.Ctl3D = - 1
 Superbase.MDIMode = - 1
 Superbase.MDIMode = 0
 Superbase.CenturyBase = 1930
 REM Datenbanken mit mehr als 16 Millionen Adressen
 SET FILE MAX ON 
 REM Alle lokalen Dateien fÅr gemeinsamen Zugriff îffnen
 Superbase.LocalFileLocking = - 1
 Superbase.FileHandlesTotal = 200
 Superbase.FileHandlesMaxOpen = 200
 REM Ein Verzîgerung von 5 Sekunden fÅr Wiederholungsversuche beim 
 
 REM Zugriff auf gesperrte Dateien einstellen
 REM Die Anzahl der Wiederholungsversuche einstellen
 REM Superbase.LockDelayFile = 500
 REM Superbase.LockRetryFile = 5
 REM Dieselbe Wartezeit und diesselbe Versuchsanzahl fÅr einen gesperrten 
 REM Datensatz angeben
 REM Superbase.LockDelayRecord = 500
 REM Superbase.LockRetryRecord = 5
 REM Dieselbe Wartezeit und diesselbe Versuchsanzahl fÅr die
 REM Systemsperren angeben
 REM Superbase.LockDelaySystem = 500
 REM Superbase.LockRetrySystem = 5
 
 REM Einstellen, da· meherer DatensÑtze auf einmal gesperrt werden kînnen
 
 REM Superbase.LockRetention = - 1
 
 Superbase.BufferCount = 1000




 REGISTER "USER","GetWindowWord","III"
 REGISTER "USER","MessageBox","IICCI"
 IF GTest% = 0 THEN ON ERROR GOTO ErrorHandler
 REGISTER "Kernel","GetWindowsDirectory","IFI"
 REGISTER "Kernel","GetSystemDirectory","IFI"
 WinDir$ = ""
 a% = CALL ("GetWindowsDirectory",WinDir$,128)
 SysDir$ = ""
 a% = CALL ("GetSystemDirectory",SysDir$,128)
 REGISTER "Kernel","GetPrivateProfileString","ICCCFIC"

  

 REM 050899 CALL Fehler ("Andi test","")
 Workstation% = VAL (ReadINI$("WORKSTATION","WORKSTATION"))
 GPPCS$ = UCASE$ (ReadINI$(pintname$,"PPCS"))

 Superbase.ShowLongFileNames = 0

 dir$ = DIRECTORY 
 _netpath$ = UCASE$ (dir$)
 pos% = INSTR (_netpath$,"CODIE")
 pfad$ = MID$ (_netpath$,1,pos% - 1)
 _netpathlw$ = pfad$ + "CDLABEL\0-Bilder\Pitt\"
 _netpathlw1$ = pfad$ + "Andi\"
 REM REQUEST dir$,"",0
 REM CALL Fehler(_netpath$,_netpathlw$)
 IF GTest% = 0 AND aa$ = "BBBBB" THEN 
   IF UCASE$ (ptitle$) LIKE "*PROJECT*" THEN 
     pintname$ = "PROJECT"
     _netpath$ = ReadINI$(pintname$,"NetDirectory")
     pintname$ = "FACTURA"
   ELSE 
     _netpath$ = ReadINI$(pintname$,"NetDirectory")
   END IF 
   
   _localpath$ = ReadINI$(pintname$,"localpath")
   _remotepath$ = ReadINI$(pintname$,"RemotePath")
 ELSE 
   REM _netpath$ = ReadINI$("DEBUG",pintname$ + "_net")
   REM _localpath$ = ReadINI$("DEBUG",pintname$ + "_local")
   REM _remotepath$ = ReadINI$("DEBUG",pintname$ + "_remote")
 END IF 
  
 
 REM ** Remote-Zugriff aktivieren **
 IF _remotepath$ LIKE "leer" THEN _remotepath$ = _netpath$

 _localpath$ = dir$
 _remotepath$ = dir$
 _localpath$ = dir$

 
 IF RIGHT$ (_netpath$,1) <> "\" THEN _netpath$ = _netpath$ + "\"
 IF RIGHT$ (_localpath$,1) <> "\" THEN _localpath$ = _localpath$ + "\"
 IF RIGHT$ (_remotepath$,1) <> "\" THEN _remotepath$ = _remotepath$ + "\"
 REM REQUEST _netpath$,"",0
 REM IF Delphi% <> 0 THEN dll$ = "APPSERV.DLL" ELSE dll$ = "SBTOOLS.DLL"
 REM REQUEST _netpath$,"",0
 REM CALL Fehler("GCodie","")
 codie$ = UCASE$ (ReadINI$("SYSTEM","NewSearch"))
 IF codie$ LIKE "leer" THEN 
   GDirINI$ = "C:\codie.tmp\"
   IF NOT EXISTS (GDirINI$ + "codieapp.ini") THEN 
     IF EXISTS (windir$ + "codieapp.ini" THEN 
       COPY windir$ + "codieapp.ini" TO GDirINI$ + "codieapp.ini"
     ELSE 
       IF EXISTS (_netpath$ + "LOCAL\codieapp.ini") THEN 
         COPY _netpath$ + "LOCAL\codieapp.ini" TO GDirINI$ + "codieapp.ini"
       ELSE 
         CALL Fehler("Es wurde keine gÅltige Datei codieapp.ini gefunden!","Bitte organisieren Sie, da· im aktuellen Windows-Ordner oder im Ordner C:\codie.tmp eine solche Datei vorhanden ist!")
       END IF 
     END IF 
   END IF 
 END IF 
 codie$ = UCASE$ (ReadINI$("SYSTEM","NewSearch"))
 IF codie$ LIKE "TRUE" OR codie$ LIKE "leer" THEN 
   REM REQUEST _netpath$,"",0
   REM SendEMAILAuto(char *quel) <- Name der INI-Datei
   
   REM SendEMAILForm(char *TO1, char *Host, char *Port, char *UserID, char *AbsenderFirma, char *AbsenderName, char *AbsenderEMAIL, char *BCC, char *Sendebericht, char *adresse, char *semail, char *Text1,char *Text2, char *BAnrede,char *Bersend1$)
   REM REGISTER _netpath$ + "CODieEMAILSend.dll","_SendEMAILAuto","IFFFFFFFFF"
   REM REGISTER _netpath$ + "CODieEMAILSend.dll","_SendEMAILForm","IFFFFFFFFFFFFFFFFFFFFF"
   REM SendEMAILTest(char *absenderemail,char *HostSMTP, char *UserIDSMTP, char *PortSMTP,
   REM  char * HostPOP3,char * UserIDPOP3,char * PortPOP3,char * PasswortPOP3,char * POPCon)
   REM REGISTER "CODieEMAILSend.dll","_SendEMAILTest","IFFFFFFFFF"
   REM REGISTER "CODieEMAILSend.dll","_SendEMAILSerie","IFFFFFFFFFF"
   GCODie% = - 1
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileExists","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileCopy","IFF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileCopyCall","IFF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileCall","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileDelete","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileDelete1","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileDelete2","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SearchInit","IFFFFFFFFFFFFFFFFFFFFF"
   REGISTER _netpath$ + "CODieLIB.dll","_SearchFill","IFFFFFFFFFFFFFFFFFFFFF"
   REGISTER _netpath$ + "CODieLIB.dll","_SearchShow","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SearchReShow","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SearchClose","I"
   REGISTER _netpath$ + "CODieLIB.dll","_SearchHide","I"
   REGISTER _netpath$ + "CODieLIB.dll","_SBCreateDir","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBSetCurrentDir","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_GetStringHash","ICCF"
   REM VerschlÅsselung
   REGISTER _netpath$ + "CODieLIB.dll","_EncryptToFile","IFFFI"
   REGISTER _netpath$ + "CODieLIB.dll","_DecryptFromFile","IFFFI"
   REGISTER _netpath$ + "CODieLIB.dll","_EncryptString","IFFF"
   REGISTER _netpath$ + "CODieLIB.dll","_DecryptString","IFFF"
   REGISTER _netpath$ + "CODieLIB.dll","_ExclusiveAccess","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_GetFileHash","IFFF"

   REM REGISTER _netpath$ + "CODieLIB.dll","_OpenUrl","IF"
   REM REGISTER _netpath$ + "CODieLIB.dll","_SelectFile","IFFF"
   REM SelectFile(char *title, char *initFilePath, char *filter)
 ELSE 
   GCODie% = 0
 END IF 
 Superbase.ShowLongFileNames = - 1
 IF GPPCS$ = "TRUE" THEN 
   ON ERROR GOTO dfufehler
      version% = superbase.buildno
      IF version% < 478 THEN 
        REQUEST "Sie benîtigen die Buildno 478","Ihre Version hat Buildno " + STR$ (version%,0)
        CLOSE ALL 
        Superbase.Connections.Clear()
        QUIT 
      END IF 
      ipaddress$ = UCASE$ (ReadINI$(pintname$,"IPADR"))
      portnumber$ = UCASE$ (ReadINI$(pintname$,"PORTNO"))
      iterations%% = 8000
      interval%% = 100
      REM ipaddress$ = "130.20.0.202"
      REM portnumber$ = "1280"
      udpserver$ = ipaddress$ + ":" + portnumber$
      REM CLOSE ALL 
      Superbase.Connections.Clear()
      Superbase.Connections.Add("CODIE","ConnectionUDPClient").ServerName = udpserver$
      Superbase.Connections.CODIE.Retry = 10000
      Superbase.Connections.CODIE.Timeout = 80000
      GOTO dfuende
dfufehler: 
    SELECT CASE ERRNO 
        CASE 0
 
        CASE 5
            CLOSE ALL 
            Superbase.Connections.Clear()
            REQUEST "DFö-Fehler zum Registrier-Server  Fehler-Nr. :" + STR$ ( ERRNO ,3,0), ERR$ ( ERRNO )100
            CLOSE ALL 
         CASE ELSE 
            CLOSE ALL 
            Superbase.Connections.Clear()
            REQUEST "DFö-Fehler zum Registrier-Server  Fehler-Nr. :" + STR$ ( ERRNO ,3,0), ERR$ ( ERRNO )100
            CLOSE ALL 
    END CASE 
dfuende: 
 ON ERROR GOTO ErrorHandler
 END IF 




 dll$ = "SBTOOLS.DLL"

 REGISTER _netpath$ + dll$,"crypt","CC"
 REGISTER _netpath$ + dll$,"GetLicense","IIC"
 REGISTER _netpath$ + dll$,"PutLicense","IIC"
 REGISTER _netpath$ + dll$,"AccessItemC","CIIC"
 REGISTER _netpath$ + dll$,"AccessItemI","IIII"
 REGISTER _netpath$ + dll$,"AccessItemL","JIIJ"
 REGISTER _netpath$ + dll$,"GetAppVersion","IJJ"
 REGISTER _netpath$ + dll$,"GetUserName","C"
 REGISTER _netpath$ + dll$,"GetUserCompany","C"
 REGISTER _netpath$ + dll$,"GetFileDate","CC"

 GScanDir$ = UCASE$ (ReadINI$("SYSTEM","ScanUndImportVerzeichnis"))
 look3d$ = ReadINI$("SYSTEM","3DLOOK")
 inhouse$ = ReadINI$("SYSTEM","INHOUSE")
 inhouse1$ = ReadINI$("SYSTEM","INHOUSE1")
 AutoKeyword$ = UCASE$ (ReadINI$("SYSTEM","AutoKeyword"))
 AutoAnrede$ = UCASE$ (ReadINI$("SYSTEM","AutoAnrede"))
 AutoTitel$ = UCASE$ (ReadINI$("SYSTEM","AutoTitel"))
 AutoBeruf$ = UCASE$ (ReadINI$("SYSTEM","AutoBeruf"))
 AutoHobbys$ = UCASE$ (ReadINI$("SYSTEM","AutoHobbys"))
 AutoOrt$ = UCASE$ (ReadINI$("SYSTEM","AutoOrt"))
 AutoPLZ$ = UCASE$ (ReadINI$("SYSTEM","AutoPLZ"))
 AutoLand$ = UCASE$ (ReadINI$("SYSTEM","AutoLand"))
 AutoFiForm$ = UCASE$ (ReadINI$("SYSTEM","AutoFirmenformForm"))
 AutoFStand$ = UCASE$ (ReadINI$("SYSTEM","AutoFamilienStand"))
 AutoAnstell$ = UCASE$ (ReadINI$("SYSTEM","AutoAnstellungsverh"))
 Vista$ = UCASE$ (ReadINI$("SYSTEM","MSVista"))
 AutoNational$ = UCASE$ (ReadINI$("SYSTEM","AutoNational"))
 AutoStaat$ = UCASE$ (ReadINI$("SYSTEM","AutoStaat"))
 MATagest$ = UCASE$ (ReadINI$("SYSTEM","MitarbeiterTagestermine"))
 AutoKArt1$ = UCASE$ (ReadINI$("SYSTEM","AutoTelefonart1"))
 AutoKArt2$ = UCASE$ (ReadINI$("SYSTEM","AutoTelefonart2"))
 AutoDokTer$ = UCASE$ (ReadINI$("SYSTEM","AutoDokTer"))
 IF AutoDokTer$ LIKE "TRUE" THEN GTerminfrage% = - 1
 Gdokloevor$ = UCASE$ (ReadINI$("SYSTEM","dokloevor"))

 GCODIEADR$ = ReadConfig$("FACTURA","CODIEADR")
 leervoradr% = VAL (ReadConfig$("FACTURA","ZPLEERVORADR"))
 textversch$ = ReadINI$("SYSTEM","TEXTVERSCHIEBUNG")
 ergdatuma$ = ReadINI$("SYSTEM","ERGDATUMAUTOMAT")
 sep1$ = ReadINI$("SYSTEM","SEP1&1EDV")
 ProServ$ = UCASE$ (ReadConfig$("PROVIS","PROSERV"))
 Gpostanschrae$ = UCASE$ (ReadINI$("SYSTEM","PostAnschrAend"))
 SET DISPLAY OFF 
 CALL SetSBWindow()
 REGISTER "SHELL","ShellExecute","IICCCCI"
 REGISTER "Kernel","GetProfileString","ICCCFI"
 REGISTER "Kernel","WritePrivateProfileString","ICCCC"
 REGISTER "Kernel","WriteProfileString","ICCC"
 cdir$ = DIRECTORY 
 DIRECTORY _netpath$


 CALL WriteINI(_projekt$,"NetDirectory",_netpath$)
 CALL WriteINI(_projekt$,"LocalPath",_localpath$)
 CALL WriteINI(_projekt$,"RemotePath",_remotepath$)
 CALL WriteINI("DEBUG",pintname$ + "_net",_netpath$)
 CALL WriteINI("DEBUG",pintname$ + "_local",_localpath$)
 CALL WriteINI("DEBUG",pintname$ + "_remote",_remotepath$)
 



 IF EXISTS ("CPR.DLL") THEN 
   REGISTER "CPR.DLL","SUCHEN","ICCCJI"
   REGISTER "CPR.DLL","SZURUECK","I"
   REGISTER "CPR.DLL","SWEITER","I"
   REGISTER "CPR.DLL","OZURUECK","I"
   REGISTER "CPR.DLL","OWEITER","I"
   REGISTER "CPR.DLL","GETORT","C"
   REGISTER "CPR.DLL","GETSTR","C"
   REGISTER "CPR.DLL","GETPLZ","C"
   plzfound% = 1
 ELSE 
   plzfound% = 0
 END IF 
 REGISTER "VPENGINE.DLL","VpeOpenDoc","JICIIJ"
 REGISTER "VPENGINE.DLL","VpePrint","IJIIC"
 REGISTER "VPENGINE.DLL","VpePreviewDoc","IJJI"
 REGISTER "VPENGINE.DLL","VpePrintDoc","IJA"
 REGISTER "VPENGINE.DLL","VpePageBreak","IJ"
 REGISTER "VPENGINE.DLL","VpeGetCurrentPage","IJ"
 REGISTER "VPENGINE.DLL","VpeGotoPage","IJI"
 REGISTER "VPENGINE.DLL","VpeStorePos","IJ"
 REGISTER "VPENGINE.DLL","VpeRestorePos","IJ"
 REGISTER "VPENGINE.DLL","VpeGet","IJI"
 REGISTER "VPENGINE.DLL","VpeWrite","IJIIIIC"
 REGISTER "VPENGINE.DLL","VpeLine","IJIIII"
 REGISTER "VPENGINE.DLL","VpeBox","IJIIII"
 REGISTER "VPENGINE.DLL","VpeSetPen","IJIIJ"
 REGISTER "VPENGINE.DLL","VpeSetBkgColor","IJJ"
 REGISTER "VPENGINE.DLL","VpeSetTransparentMode","IJI"
 REGISTER "VPENGINE.DLL","VpeSetAlign","IJI"
 REGISTER "VPENGINE.DLL","VpeSetAutoBreak","IJI"
 
 DIRECTORY cdir$
 REGISTER "User","GetSystemMetrics","II"
 IF FN sys(12) >= 480 THEN 
   STATUS ON 
 ELSE 
   statmode$ = ReadINI$("SYSTEM","StatusAutohide")
   IF statmode$ LIKE "true" THEN 
     STATUS OFF 
   ELSE 
     STATUS ON 
   END IF 
 END IF 
 Release$ = ReadConfig$(_projekt$,"Release")
 IF Release$ LIKE "*DEMO*" THEN ptitle$ = ptitle$ + " (DEMO)"
 SET HEADING ptitle$
 SET EDIT ATTR OFF 
 SET REQUEST HEADING ptitle$
 REMOVE DIALOG ALL 
 MOUSE OFF 
 DATEBASE "0d.mm.yyyy"
 GLOBAL PROVISsub%,WAWIsub%,IMMAKsub%,OFFICEsub%,PRICEsub%,MEDIAsub%,DOKsub%,HORTUSsub%,AKsub%,FORMsub%
 GLOBAL demo%,_help%,_formend%,befehl$
 GLOBAL knr%,cuma%,cuku%,sort$,cudo%,cuak%,cuaq%,cuakma$,termin%
 GLOBAL monate$(11),monates$(11),_dlg$(12),WoAnfang%(6)
 GLOBAL _fpw$
 GLOBAL ADRsub%
 GLOBAL title$,AppID%,iAppID%
 GLOBAL vcodema%,_vcodema%,_vcodeak%
 GLOBAL ht$
 GLOBAL AQsub%,SETUPsub%,SUPERVISsub%
 GLOBAL cudat$,monat2$,tag2$,jahr2$,datanz$
 GLOBAL vbezug$,bezug%
 GLOBAL _errormessages%,meterlength%,askonerror%,mousebutton%,_error%
 GLOBAL DOKU$(120),Auswahl$(500),Notizen$(120),BERICHTE$(120),BERNAME$(120)
 GLOBAL MALIST$(20),MALIST%(20),MADEST$(20),DOKGruppen$(50),AddOn$(50)
 GLOBAL ddeadr%,quickbar%,mnadr1%,mnadr2%,addon1%,addon2%,inhmen%,_WPSuffix$
 GLOBAL andidial$,userfile$,treq%,tString$
 andidial$ = ReadINI$("Modem","ISDNDial")
 SELECT CASE UCASE$ (_projekt$)
 CASE "OFFICE"
   AppID% = 10000
 CASE "AKTE"
   AppID% = 10000
 CASE "PROVIS"
   AppID% = 5000
 CASE "IMMAK"
   AppID% = 8000
 CASE "WAWI"
   AppID% = 5600
 CASE "FACTURA"
   AppID% = 1807
 CASE "MEDIA"
   AppID% = 2315
 CASE "HORTUS"
   AppID% = 3089
 END SELECT 
 iAppID% = intID%
 _WPSuffix$ = ReadINI$("SYSTEM","WPSuffix")
 GBildschirm% = VAL (ReadINI$("SYSTEM","Bildschirmaufloesung"))
 REM CALL Fehler( STR$ (GBildschirm%),"0")
 IF EXISTS (_netpath$ + "XCHANGE.SBR") THEN 
   REM -- Variablen fÅr XCHANGE
   GLOBAL AllFilesCount%,FilesCount%
 END IF 
 inhmen% = 0
 Videokarte$ = UCASE$ (ReadINI$(_projekt$,"Video"))
 _errormessages% = 1
 _fpw$ = ";paris"
 bezug% = 2
 vbezug$ = "Adre&sse"
 IF GTest% = 0 THEN BREAK OFF 
 BREAK QUIT OFF 
 title$ = ptitle$
 IF GTest% <> 0 THEN title$ = title$ + "*"
 _ppath$ = _netpath$ + _projekt$ + "\"
 IF Delphi% = 1 THEN 
   IF EXISTS (_netpath$ + "APPSERV.DLL") THEN 
     REGISTER _netpath$ + "APPSERV.DLL","ServerCMD","ICC"
     REGISTER _netpath$ + "APPSERV.DLL","GetReply","C"
   ELSE 
     Delphi% = 0
   END IF 
 END IF 
 CALL ServerInit()
 DIRECTORY _ppath$
 LOAD KEY _netpath$ + "KEYS"
 SET ICON _projekt$ + ".ICO"
 SET COPY NEWLINE ON 
 REM OPEN FORM _netpath$ + _projekt$ + "\" + _projekt$
 progname$ = title$
 SET STATUS "(c)'92-'2000 CODie software products e.K."
 PANEL OFF 
 SET MENU OFF 
 
 REM **************************************
 REM ******* Fenstergrî·e anpassen ********
 REM **************************************
 REM CALL Fehler( STR$ (GBildschirm%),"1")
 ScrWidth% = FN sys(6)
 ScrHeight% = FN sys(7)
 CapHeight% = CALL ("GetSystemMetrics",51)
 REM wenn kleiner 19 dann kleine Schriftart
 REM CALL Fehler( STR$ (CapHeight%,"9999"),"")
 REM CALL Fehler("Screen","")
 REM CALL Fehler( STR$ (CapHeight%,"9999"),"")
 IF (ScrWidth% < 800 OR ScrHeight% < 600) AND ( UCASE$ (_projekt$) LIKE "FACTURA" OR UCASE$ (_projekt$) LIKE "AKTE" OR UCASE$ (_projekt$) LIKE "PROVIS" OR UCASE$ (_projekt$) LIKE "OFFICE") THEN 
   CALL Fehler("Sie kînnen das Programm nicht unter der Bildschirmauflîsung 640*480 betreiben!","éndern Sie bitte Ihre Bildschirmauflîsung in 800 * 600 (kleine Schrift/Small Fonts)!")
 ELSE 
   SELECT CASE ScrWidth%
   CASE 640
     LargeFont$ = "FALSE"
     IF UCASE$ (_projekt$) LIKE "FACTURA" OR UCASE$ (_projekt$) LIKE "AKTE" OR UCASE$ (_projekt$) LIKE "PROVIS" OR UCASE$ (_projekt$) LIKE "OFFICE" THEN 
       CALL Fehler("Sie kînnen das Programm nicht unter der Bildschirmauflîsung 640*480 betreiben!","éndern Sie bitte Ihre Bildschirmauflîsung in 800 * 600 (kleine Schrift/Small Fonts)!")
       REM CALL EXIT()
     END IF 
   CASE 800
     IF CapHeight% >= 19 THEN LargeFont$ = "TRUE" ELSE LargeFont$ = "FALSE"
     IF LargeFont$ = "TRUE" THEN 
       CALL Fehler("Sie haben als Bildschirmfont ~Largefonts/Gro·e Schriftart~ eingestellt, dies fÅhrt zu Problemen, da die Programm-Masken fÅr Auflîsung 800*600 Kleine Schriftart erstellt wurden!","Bitte Ñndern Sie den Bildschirmfont!")
     END IF 
   CASE 1024
     IF CapHeight% >= 21 THEN 
       LargeFont$ = "TRUE"
       GBildschirm% = 800
     ELSE 
       LargeFont$ = "FALSE"
     END IF 
   CASE 1152
     IF CapHeight% >= 21 THEN 
       LargeFont$ = "TRUE"
       GBildschirm% = 800
     ELSE 
       LargeFont$ = "FALSE"
       GBildschirm% = 1024
     END IF 
     
   CASE 1280
     IF CapHeight% >= 21 THEN LargeFont$ = "TRUE" ELSE LargeFont$ = "FALSE"
     GBildschirm% = 1024
   CASE 1400
     IF CapHeight% >= 21 THEN LargeFont$ = "TRUE" ELSE LargeFont$ = "FALSE"
     GBildschirm% = 1024
   CASE 1600
     GBildschirm% = 1024
     IF CapHeight% >= 21 THEN LargeFont$ = "TRUE" ELSE LargeFont$ = "FALSE"
   CASE 2048
     GBildschirm% = 1024
     IF CapHeight% >= 21 THEN LargeFont$ = "TRUE" ELSE LargeFont$ = "FALSE"
   CASE ELSE 
     IF CapHeight% >= 21 THEN LargeFont$ = "TRUE" ELSE LargeFont$ = "FALSE"
   END SELECT 
   REM 060499
   large1$ = UCASE$ ( LTRIM$ (ReadINI$("SYSTEM","LARGEFONT")))
   IF UCASE$ (LargeFont$) = "FALSE" THEN 
     WndWidth% = 640
     WndHeight% = 480
     IF UCASE$ (_projekt$) LIKE "FACTURA" OR UCASE$ (_projekt$) LIKE "AKTE" OR UCASE$ (_projekt$) LIKE "PROVIS" OR UCASE$ (_projekt$) LIKE "OFFICE" OR UCASE$ (_projekt$) LIKE "IMMAK" OR UCASE$ (_projekt$) LIKE "MEDIA" THEN 
       REM 10052002
       IF ScrWidth% = 1024 THEN 
         WndWidth% = 1024
         WndHeight% = 700
        _t1% = FN sys(6) - 1024
        _t2% = FN sys(7) - 768
       ELSE 
         IF ScrWidth% >= 800 AND ScrWidth% < 1024 THEN 
           WndWidth% = 800
           WndHeight% = 600
           _t1% = FN sys(6) - 800
           _t2% = FN sys(7) - 600
           CALL WriteINI("SYSTEM","Bildschirmaufloesung", STR$ (800,"000"))
           GBildschirm% = 800
           REM CALL Fehler("Bitte stellen Sie Ihre Bildschirmauflîsung auf mindestens 1024*768 Bildpunkte (kleine Schriftarten), um alle neue Funktionen nutzen zu kînnen!","")
         ELSE 
           WndWidth% = ScrWidth%
           WndHeight% = ScrHeight%
          _t1% = FN sys(6)
          _t2% = FN sys(7)
          _t1% = FN sys(6) - 1024
          _t2% = FN sys(7) - 768
         END IF 
       END IF 
     END IF 
   ELSE 
     IF ScrWidth% = 1024 THEN 
       WndWidth% = 1024
       WndHeight% = 768
       _t1% = FN sys(6) - 1024
       _t2% = FN sys(7) - 768
     END IF 
     IF ScrWidth% = 1152 THEN 
       WndWidth% = 1000
       WndHeight% = 700
       _t1% = FN sys(6) - 1000
       _t2% = FN sys(7) - 700
     END IF 
     IF ScrWidth% = 1200 THEN 
       WndWidth% = 1040
       WndHeight% = 700
       _t1% = FN sys(6) - 1040
       _t2% = FN sys(7) - 700
     END IF 
     IF ScrWidth% = 1400 THEN 
       WndWidth% = 1400
       WndHeight% = 1050
       _t1% = FN sys(6) - 1040
       _t2% = FN sys(7) - 700
     END IF 
   END IF 
 IF WndWidth% > 1200 THEN 
   _wpx% = ( FN sys(6) - WndWidth%) / 2
   _wpy% = ( FN sys(7) - WndHeight%) / 2
 ELSE 
   IF UCASE$ (LargeFont$) = "FALSE" THEN 
     _wpx% = _t1% / 2
     _wpy% = _t2% / 2
   ELSE 
     _wpx% = _t1% / 4
     _wpy% = _t2% / 4
   END IF 
 END IF 
 REM 10052002
 REM SET POSITION _wpx%,_wpy%,WndWidth%,WndHeight%
 REM SET POSITION 
 END IF 
 DisplaySet% = 0
 REM CALL Fehler( STR$ (CapHeight%,"9999"),"")
 REM ***************************************************
 REM IF UCASE$ (_projekt$) LIKE "FACTURA1" THEN 
 IF (ScrWidth% <= 800 OR ScrHeight% <= 600) THEN 
   SET POSITION 0,0,ScrWidth%,ScrHeight%
   SET POSITION 
   SET DISPLAY 3
 END IF 
 REM CALL Fehler("","")
 REM IF EXISTS (_netpath$ + "IMMAK\Anfrage.sbf") THEN 
 IF GAFSK$ LIKE "TRUE" OR GLundWrigg$ LIKE "TRUE" OR GBildschirm% = 800 OR GBENE% = - 1 OR EXISTS (_netpath$ + "IMMAK\Anfrage.sbf") THEN 
   CALL WriteINI("SYSTEM","Bildschirmaufloesung", STR$ (800,"000"))
   GBildschirm% = 800
   _t1% = FN sys(6) - 800
   _t2% = FN sys(7) - 600
   IF UCASE$ (LargeFont$) = "FALSE" THEN 
     _wpx% = _t1% / 2
     _wpy% = _t2% / 2
   ELSE 
     _wpx% = _t1% / 4
     _wpy% = _t2% / 4
   END IF 
   REM SET POSITION _wpx%,_wpy%,WndWidth%,WndHeight%
   IF GAFSK$ LIKE "TRUE" OR GLundWrigg$ LIKE "TRUE" OR GBENE% = - 1 OR GBildschirm% = 800 OR EXISTS (_netpath$ + "IMMAK\Anfrage.sbf") THEN 
     CALL WriteINI("SYSTEM","Bildschirmaufloesung", STR$ (800,"000"))
     GBildschirm% = 800
     IF ScrWidth% = 1024 AND LargeFont$ LIKE "TRUE" THEN 
       SET POSITION 0,0,ScrWidth%,ScrHeight%
     ELSE 
       IF ScrWidth% = 1152 AND LargeFont$ LIKE "TRUE" THEN 
         SET POSITION _wpx%,_wpy%,1000,700
       ELSE 
         SET POSITION _wpx%,_wpy%,800,600
       END IF 
     END IF 
   ELSE 
     SET POSITION _wpx%,_wpy%,ScrWidth%,ScrHeight%
   END IF 
   SET POSITION 
   SET DISPLAY 0
   GScrWidth$ = LTRIM$ ( STR$ (800,"9999")) + ".SBV" + "\"
   GPrjForm$ = _ppath$ + GScrWidth$
   GOFFForm$ = _netpath$ + "OFFICE\" + GScrWidth$
 ELSE 
   IF ScrWidth% >= 1024 OR GBildschirm% = 1024 THEN 
     GScrWidth$ = LTRIM$ ( STR$ (1024,"9999")) + ".SBV" + "\"
     CALL WriteINI("SYSTEM","Bildschirmaufloesung", STR$ (1024,"0000"))
   ELSE 
     GScrWidth$ = LTRIM$ ( STR$ (800,"9999")) + ".SBV" + "\"
     CALL WriteINI("SYSTEM","Bildschirmaufloesung", STR$ (800,"000"))
     GBildschirm% = 800
   END IF 
 
   GPrjForm$ = _ppath$ + GScrWidth$
   GOFFForm$ = _netpath$ + "OFFICE\" + GScrWidth$
   IF (ScrWidth% < 800 OR ScrHeight% < 600) AND ( UCASE$ (_projekt$) LIKE "FACTURA" OR UCASE$ (_projekt$) LIKE "AKTE" OR UCASE$ (_projekt$) LIKE "PROVIS" OR UCASE$ (_projekt$) LIKE "OFFICE" OR UCASE$ (_projekt$) LIKE "IMMAK") THEN 
     SET POSITION 0,0,ScrWidth%,ScrHeight%
     SET POSITION 
     SET DISPLAY 3
   ELSE 
     IF ScrWidth% > 800 AND ScrHeight% > 600 THEN 
       IF Largefont$ = "TRUE" THEN 
         IF ScrWidth% > 1024 THEN 
           REM SET POSITION 0,0,ScrWidth%,ScrHeight%
           SET POSITION _t1% / 8,_t2% / 8,ScrWidth%,ScrHeight%
           SET POSITION 
           SET DISPLAY 3
         END IF 
         IF ScrWidth% = 1400 THEN 
           REM SET POSITION 0,0,ScrWidth%,ScrHeight%
           SET POSITION _t1% / 8,_t2% / 8,1300,960
           SET POSITION 
           SET DISPLAY 0
         END IF 
         IF ScrWidth% = 1024 THEN 
           REM 10052002
           SET POSITION 0,0,1024,738
           SET POSITION 
           SET DISPLAY 3
         END IF 
         REM SET DISPLAY 0
       ELSE 
       
         REM SET POSITION _wpx%,_wpy%,WndWidth%,WndHeight%
         IF ScrWidth% = 1152 THEN 
           SET POSITION _t1% / 2,_t2% / 2,1024,768
           REM SET POSITION 100,50,1024,768
           REM SET POSITION _wpx%,_wpy%,ScrWidth%,ScrHeight%
           REM SET POSITION _wpx%,_wpy%,800,600
           SET POSITION 
           SET DISPLAY 0
         ELSE 
           IF ScrWidth% = 1200 THEN 
             SET POSITION _t1% / 2,_t2% / 2,1024,768
             REM SET POSITION _wpx%,_wpy%,1024,768
             REM SET POSITION _wpx%,_wpy%,ScrWidth%,ScrHeight%
             REM SET POSITION _wpx%,_wpy%,800,600
             SET POSITION 
             SET DISPLAY 0
           ELSE 
             SET POSITION _t1% / 2,_t2% / 2,1024,738
             SET POSITION 
             SET DISPLAY 0
           END IF 
           REM SET DISPLAY MAX 
         END IF 
       
         REM 071098 Superbase.ShowLongFileNames = - 1
       END IF 
     ELSE 
       IF ScrWidth% = 800 AND ScrHeight% = 600 THEN 
         SET POSITION 0,0,800,600
         SET POSITION 
         SET DISPLAY 0
       ELSE 
         CALL Fehler("Bildschirmauflîsung ist nicht richtig eingestellt (Ihre Parameter Breite=" + STR$ (Scrwidth%,"9999") + ",Hîhe=" + STR$ (ScrHeight%,"9999"),"Korrekte Parameter wÑren: Breite>=800,Hîhe>=600)!")
         SET DISPLAY 3
       END IF 
     END IF 
   END IF 
 END IF 
 
 ddeadr% = 0
 REM -- globale CursorKonstanten --
 
 GLOBAL CrsLeft%,CrsRight%,PgUp%,PgDn%
 CrsLeft% = 177
 CrsRight% = 178
 PgUp% = 181
 PgDn% = 182
 
 NUMDELIM ",."
 END SUB 
 
 
 ' Gauge
 ' ===================================================================
 ' Zweck:       Prozentbalkengenerierung
 ' Nutzung:     Call Gauge(Prozent%,message$)
 '              Prozent%        = Breite des Balken
 ' ===================================================================
  
SUB Gauge(Level%,GaugeMessage$)
 Level% = INT (Level%)
 IF Level% < 0 THEN Level% = 0
 IF Level% > 100 THEN Level% = 100
 SELECT CASE Level%
 CASE 1
   CALL Server("GaugeInit","")
   CALL Server("GaugeMessage",GaugeMessage$)
   CALL Server("Gauge","0")
   CALL Server("GaugeShow","")
 CASE 0
   CALL Server("GaugeRelease","")
 CASE ELSE 
   CALL Server("Gauge", STR$ (Level%,"999"))
   IF GaugeMessage$ <> "" THEN 
     CALL Server("GaugeMessage",GaugeMessage$)
   END IF 
 END SELECT 
 END SUB 
 
 
 ' Hilfe
 ' ============================================================
 ' Zweck:   zeigt Inhaltsverzeichnis der aktuellen Hilfedatei
 ' Nutzung: Call Hilfe()
 ' ============================================================
 
SUB Hilfe1()
 HELP 
 END SUB 

 
SUB Hilfe()
 REM HELP 
 
 ON ERROR GOTO HilfeErr
 IF MID$ (GAppName$,2,1) <> ":" THEN GOTO HilfeErr
 a% = CALL ("ShellExecute",0,"open",GAppName$,"","",1)
 GOTO HilfeEnd
HilfeErr: 
 ON ERROR GOTO HilfeErr1
 GAppName$ = _netpath$ + "DOCP\project.pdf"
 
 GOTO HilfeEnd
HilfeErr1: 
 CALL Fehler ("Um den Hilfetext zu installieren, mÅssen Sie den AcrobatReader der Installations CD installieren!,"")
HilfeEnd: 
 ON ERROR GOTO ErrorHandler
 END SUB 
 
 ' DFile
 ' ============================================================
 ' Zweck:   îffnet eine SBF-Datei des Projektes
 ' Nutzung: Call DFile(filetype%,datei$)
 '          filetype%   = Dateityp
 '                        1: Systemdatei (Workstation)
 '                        2: Systemdatei (Server)
 '                        3: Projektdatei (Server)
 '                        4: Systemdatei exklusiv (Server)
 '          datei$      = Dateiname
 ' ============================================================
 ' 11.07.93    - Test auf TimeStamp und evtl. ErgÑnzung
 ' 10.10.94    - Autokorrektur von SERNUM
 ' 19.10.94    - 
 
SUB DFile(filetype%,datei$)
 MOUSE OFF 
 
 cfile$ = FILE 
 REM CALL Fehler("Dateien îffnen",datei$)
 IF INSTR (datei$,";") > 0 THEN 
   testname$ = UCASE$ ( FN name( LEFT$ (datei$, INSTR (datei$,";") - 1)))
 ELSE 
   testname$ = UCASE$ ( FN name(datei$))
 END IF 
 IF OPEN (testname$) THEN END SUB 
 IF NOT OPEN ("OPENFILE") AND blockab% = 99 THEN 
   DIM d$(1000)
   FILLARRAY d$,9,"CODIE:?*"
   FOR i%% = 0 TO 1000
      IF d$(i%%) <> "" THEN 
        OPEN FILE SHARE ,0"CODIE:" + d$(i%%)
        SET STATUS "îffne Datei: " + d$(i%%) + " " + STR$ (i%%,"999999")
      ELSE 
        i%% = 1001
      END IF 
   NEXT i%%
 END IF 
 notopen% = 0
 IF NOT OPEN (testname$) THEN 
   notopen% = - 1
   SET STATUS "Datei " + UCASE$ (testname$) + " îffnen..."
   REM ostart% = NOW 
   REM CALL Fehler("","")
   IF GPPCS$ <> "TRUE" THEN 
     SELECT CASE filetype%
     CASE 1
       IF EXISTS (_localpath$ + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr01
         REM DELETE _localpath$ + testname$ + ".sb!"
cerr01: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,0_localpath$ + datei$
       path$ = _localpath$
     CASE 2
       REM CALL Fehler("","")
       IF EXISTS (_netpath$ + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr02
         REM DELETE _netpath$ + testname$ + ".sb!"
cerr02: 
         ON ERROR GOTO ErrorHandler
       END IF 
       REM OPEN FILE SHARE ,0_netpath$ + datei$
       IF testname$ LIKE "ADRTEMP" THEN 
         IF EXISTS (GMACodeDir$ + "ADRTEMP.SBF") THEN 
           DELETE GMACodeDir$ + "ADRTEMP.*"
         END IF 
         COPY _netpath$ + "OFFICE\ADRTEMP.*" TO GMACodeDir$
         IF EXISTS (GMACodeDir$ + "ADRTEMP.SB!") THEN 
           DELETE GMACodeDir$ + "ADRTEMP.SB!"
         END IF 
         OPEN FILE GMACodeDir$ + "ADRTEMP;paris"
         GOTO dfileend06112002
       ELSE 
         IF testname$ LIKE "ADRTEMP1" THEN 
           IF EXISTS (GMACodeDir$ + "ADRTEMP1.SBF") THEN 
             DELETE GMACodeDir$ + "ADRTEMP1.*"
           END IF 
           COPY _netpath$ + "OFFICE\ADRTEMP1.*" TO GMACodeDir$
           IF EXISTS (GMACodeDir$ + "ADRTEMP1.SB!") THEN 
             DELETE GMACodeDir$ + "ADRTEMP1.SB!"
           END IF 
           OPEN FILE SHARE ,0GMACodeDir$ + "ADRTEMP1;paris"
           GOTO dfileend06112002
         ELSE 
           IF testname$ LIKE "AKQTMP" THEN 
             IF EXISTS (GMACodeDir$ + "AKQTMP.SBF") THEN 
               DELETE GMACodeDir$ + "AKQTMP.*"
             END IF 
             COPY _netpath$ + "OFFICE\AKQTMP.*" TO GMACodeDir$
             IF EXISTS (GMACodeDir$ + "AKQTMP.SB!") THEN 
               DELETE GMACodeDir$ + "AKQTMP.SB!"
             END IF 
             OPEN FILE SHARE ,0GMACodeDir$ + "AKQTMP;paris"
             GOTO dfileend06112002
           ELSE 
             IF testname$ LIKE "EMAILTMP" THEN 
               IF EXISTS (GMACodeDir$ + "EMAILTMP.SBF") THEN 
                 DELETE GMACodeDir$ + "EMAILTMP.*"
               END IF 
               COPY _netpath$ + "OFFICE\EMAILTMP.*" TO GMACodeDir$
               IF EXISTS (GMACodeDir$ + "EMAILTMP.SB!") THEN 
                 DELETE GMACodeDir$ + "EMAILTMP.SB!"
               END IF 
               OPEN FILE SHARE ,0GMACodeDir$ + "EMAILTMP;paris"
               GOTO dfileend06112002
             ELSE 
               ON ERROR GOTO ErrorHandler
               OPEN FILE SHARE ,0_netpath$ + datei$
             END IF 
           END IF 
         END IF 
       END IF 
       path$ = _netpath$
     CASE 22
       OPEN FILE SHARE ,0_netpath$ + "config;london8474"
       path$ = _netpath$
     CASE 3
       REM **alte Version** OPEN FILE SHARE ,0_ppath$ + datei$
       IF EXISTS (_netpath$ + _projekt$ + "\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr03
         REM DELETE _netpath$ + _projekt$ + "\" + testname$ + ".sb!"
cerr03: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,0_netpath$ + _projekt$ + "\" + datei$
       path$ = _netpath$ + _projekt$ + "\"
     CASE 4
       IF EXISTS (_netpath$ + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr04
         REM DELETE _netpath$ + testname$ + ".sb!"
cerr04: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,2_netpath$ + datei$
       path$ = _netpath$
     CASE 5
       IF EXISTS (_netpath$ + "EXPORT\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr05
         REM DELETE _netpath$ + "EXPORT\" + testname$ + ".sb!"
cerr05: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,2_netpath$ + "EXPORT\" + datei$
       path$ = _netpath$ + "EXPORT\"
     CASE 6
       IF EXISTS (_netpath$ + "EXPORT\OFFICE\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr06
         REM DELETE _netpath$ + "EXPORT\OFFICE\" + testname$ + ".sb!"
cerr06: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,2_netpath$ + "EXPORT\OFFICE\" + datei$
       path$ = _netpath$ + "EXPORT\OFFICE\"
     CASE 7
       IF EXISTS (_netpath$ + "EXPORT\PROVIS\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr07
         REM DELETE _netpath$ + "EXPORT\PROVIS\" + testname$ + ".sb!"
cerr07: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,2_netpath$ + "EXPORT\PROVIS\" + datei$
       path$ = _netpath$ + "EXPORT\PROVIS\"
     CASE 8
       IF EXISTS (_netpath$ + "GDV\GDV_DAT\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr08
         REM DELETE _netpath$ + "GDV\GDV_DAT\" + testname$ + ".sb!"
cerr08: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,0_netpath$ + "GDV\GDV_DAT\" + datei$
       path$ = _netpath$ + "GDV\GDV_DAT\"
     CASE 9
       IF EXISTS (_netpath$ + "Templeto\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr09
         REM DELETE _netpath$ + "Templeto\" + testname$ + ".sb!"
cerr09: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,0_netpath$ + "Templeto\" + datei$
       path$ = _netpath$ + "Templeto\"
     END SELECT 
   ELSE 
     SELECT CASE filetype%
     CASE 1
       IF EXISTS (_localpath$ + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr011
         DELETE _localpath$ + testname$ + ".sb!"
cerr011: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,0_localpath$ + datei$
       path$ = _localpath$
     CASE 2
       IF EXISTS (_netpath$ + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr021
         DELETE _netpath$ + testname$ + ".sb!"
cerr021: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,0_netpath$ + datei$
       
       path$ = _netpath$
     CASE 3
       REM **alte Version** OPEN FILE SHARE ,0_ppath$ + datei$
       IF EXISTS (_netpath$ + _projekt$ + "\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr031
         DELETE _netpath$ + _projekt$ + "\" + testname$ + ".sb!"
cerr031: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,0_netpath$ + _projekt$ + "\" + datei$
       path$ = _netpath$ + _projekt$ + "\"
     CASE 4
       IF EXISTS (_netpath$ + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr041
         DELETE _netpath$ + testname$ + ".sb!"
cerr041: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,2_netpath$ + datei$
       path$ = _netpath$
     CASE 5
       IF EXISTS (_netpath$ + "EXPORT\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr051
         DELETE _netpath$ + "EXPORT\" + testname$ + ".sb!"
cerr051: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,2_netpath$ + "EXPORT\" + datei$
       path$ = _netpath$ + "EXPORT\"
     CASE 6
       IF EXISTS (_netpath$ + "EXPORT\OFFICE\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr061
         DELETE _netpath$ + "EXPORT\OFFICE\" + testname$ + ".sb!"
cerr061: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,2_netpath$ + "EXPORT\OFFICE\" + datei$
       path$ = _netpath$ + "EXPORT\OFFICE\"
     CASE 7
       IF EXISTS (_netpath$ + "EXPORT\PROVIS\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr071
         DELETE _netpath$ + "EXPORT\PROVIS\" + testname$ + ".sb!"
cerr071: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,2_netpath$ + "EXPORT\PROVIS\" + datei$
       path$ = _netpath$ + "EXPORT\PROVIS\"
     CASE 8
       IF EXISTS (_netpath$ + "GDV\GDV_DAT\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr081
         DELETE _netpath$ + "GDV\GDV_DAT\" + testname$ + ".sb!"
cerr081: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,0_netpath$ + "GDV\GDV_DAT\" + datei$
       path$ = _netpath$ + "GDV\GDV_DAT\"
     CASE 9
       IF EXISTS (_netpath$ + "Templeto\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr091
         DELETE _netpath$ + "Templeto\" + testname$ + ".sb!"
cerr091: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,0_netpath$ + "Templeto\" + datei$
       path$ = _netpath$ + "Templeto\"
     END SELECT 
   END IF 
   REM oend% = NOW 
   REM ------ TimeStamp prÅfen/erzeugen ----------
   tsfound% = 0
   ON ERROR GOTO ErrDFile1
   a$ = FIELDINFO$ ("TimeStamp",0)
   tsfound% = 1
ErrDFile1: 
   IF GTest% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   IF tsfound% = 0 AND UCASE$ (testname$) <> "DTAUS" AND UCASE$ (testname$) <> "ZBERICHT" AND UCASE$ (testname$) <> "EINSIMPO" AND UCASE$ (testname$) <> "ADRTEMP" AND UCASE$ (testname$) <> "ADRTEMP1" THEN 
     IF UCASE$ (testname$) LIKE "000*" THEN 
     ELSE 
       IF UCASE$ (testname$) <> "OPENFILE" AND UCASE$ (testname$) <> "IMPOADR" THEN 
         ADD "TimeStamp; NUM; 0000000000."
         SAVE FILE FILE 
       END IF 
     END IF 
   END IF 
   REM ------ Sperre prÅfen/erzeugen ---------
   tsfound% = 0
   ON ERROR GOTO ErrDFile2
   a$ = FIELDINFO$ ("Sperre",0)
   tsfound% = 1
ErrDFile2: 
   IF GTest% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   IF tsfound% = 0 AND UCASE$ (testname$) <> "DTAUS" AND UCASE$ (testname$) <> "ZBERICHT" AND UCASE$ (testname$) <> "EINSIMPO" AND UCASE$ (testname$) <> "ADRTEMP" AND UCASE$ (testname$) <> "ADRTEMP1" THEN 
     IF UCASE$ (testname$) LIKE "000*" THEN 
     ELSE 
       IF UCASE$ (testname$) <> "OPENFILE" AND UCASE$ (testname$) <> "IMPOADR" THEN 
         ADD "Sperre; NUM; 000000."
         SAVE FILE FILE 
       END IF 
     END IF 
   END IF 
   REM ------ Workstation prÅfen/erzeugen ---------
   tsfound% = 0
   ON ERROR GOTO ErrDFile3
   a$ = FIELDINFO$ ("Workstation",0)
   tsfound% = 1
ErrDFile3: 
   IF GTest% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   IF tsfound% = 0 AND UCASE$ (testname$) <> "DTAUS" AND UCASE$ (testname$) <> "ZBERICHT" AND UCASE$ (testname$) <> "EINSIMPO" AND UCASE$ (testname$) <> "ADRTEMP" AND UCASE$ (testname$) <> "ADRTEMP1" THEN 
     IF UCASE$ (testname$) LIKE "000*" THEN 
     ELSE 
       IF UCASE$ (testname$) <> "OPENFILE" AND UCASE$ (testname$) <> "IMPOADR" THEN 
         ADD "Workstation; NUM; 000000."
         SAVE FILE FILE 
       END IF 
     END IF 
   END IF 
   REM ------ QWoNo prÅfen/erzeugen ---------
   tsfound% = 0
   ON ERROR GOTO ErrDFile4
   a$ = FIELDINFO$ ("QWoNo",0)
   tsfound% = 1
ErrDFile4: 
   IF GTest% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   IF tsfound% = 0 AND UCASE$ (testname$) <> "DTAUS" AND UCASE$ (testname$) <> "ZBERICHT" AND UCASE$ (testname$) <> "EINSIMPO" AND UCASE$ (testname$) <> "ADRTEMP" AND UCASE$ (testname$) <> "ADRTEMP1" THEN 
     IF UCASE$ (testname$) LIKE "000*" THEN 
     ELSE 
       IF UCASE$ (testname$) <> "OPENFILE" AND UCASE$ (testname$) <> "IMPOADR" THEN 
         ADD "QWoNo; TXT; 12"
         SAVE FILE FILE 
       END IF 
     END IF 
   END IF 
   REM ------ RecStatus prÅfen/erzeugen ---------
   tsfound% = 0
   ON ERROR GOTO ErrDFile5
   a$ = FIELDINFO$ ("RecStatus",0)
   tsfound% = 1
ErrDFile5: 
   IF GTest% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   IF tsfound% = 0 AND UCASE$ (testname$) <> "DTAUS" AND UCASE$ (testname$) <> "ZBERICHT" AND UCASE$ (testname$) <> "EINSIMPO" AND UCASE$ (testname$) <> "ADRTEMP" AND UCASE$ (testname$) <> "ADRTEMP1" THEN 
     IF UCASE$ (testname$) LIKE "000*" THEN 
     ELSE 
       IF UCASE$ (testname$) <> "OPENFILE" AND UCASE$ (testname$) <> "IMPOADR" THEN 
         ADD "RecStatus; TXT; 1"
         SAVE FILE FILE 
       END IF 
     END IF 
   END IF 
   SET STATUS "Datei " + UCASE$ (testname$) + " îffnen...OK"
   REM REQUEST FILE + ": " + TIME$ (oend% - ostart%,"hh:mm:ss.s")
 END IF 
 IF testname$ = "ARTIKTMP" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "umst" FROM FILE "ARTIKTMP"
   CLOSE FILE "ARTIKTMP"
   CREATE FILE MEMORY "ARTIKTMP" FROM FILE "umst"
   CLOSE FILE "umst"
 END IF 
 IF testname$ = "UMSTEMP1" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "umst" FROM FILE "UMSTEMP1"
   CLOSE FILE "UMSTEMP1"
   CREATE FILE MEMORY "UMSTEMP1" FROM FILE "umst"
   CLOSE FILE "umst"
 END IF 
 IF testname$ = "ADRTEMP" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "adrt" FROM FILE "ADRTEMP"
   CLOSE FILE "ADRTEMP"
   CREATE FILE MEMORY "ADRTEMP" FROM FILE "ADRT"
   CLOSE FILE "adrt"
 END IF 
 IF testname$ = "ADRTEMP1" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "adrt" FROM FILE "ADRTEMP1"
   CLOSE FILE "ADRTEMP1"
   CREATE FILE MEMORY "ADRTEMP1" FROM FILE "ADRT"
   CLOSE FILE "adrt"
 END IF 
 IF testname$ = "AKQTMP" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "aq" FROM FILE "AKQTMP"
   CLOSE FILE "AKQTMP"
   CREATE FILE MEMORY "AKQTMP" FROM FILE "AQ"
   CLOSE FILE "AQ"
 END IF 
 IF testname$ = "BUCHTEMP" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "BT" FROM FILE "BUCHTEMP"
   CLOSE FILE "BUCHTEMP"
   CREATE FILE MEMORY "BUCHTEMP" FROM FILE "BT"
   CLOSE FILE "BT"
 END IF 
 IF testname$ = "BUT" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "BT" FROM FILE "BUT"
   CLOSE FILE "BUT"
   CREATE FILE MEMORY "BUT" FROM FILE "BT"
   CLOSE FILE "BT"
 END IF 
 IF testname$ = "STATIST" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "ST" FROM FILE "STATIST"
   CLOSE FILE "STATIST"
   CREATE FILE MEMORY "STATIST" FROM FILE "ST"
   CLOSE FILE "ST"
 END IF 
 IF testname$ = "STATIST2" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "ST2" FROM FILE "STATIST2"
   CLOSE FILE "STATIST2"
   CREATE FILE MEMORY "STATIST2" FROM FILE "ST2"
   CLOSE FILE "ST2"
 END IF 
dfileend06112002: 
 modus% = SHARE 
 REM CALL Fehler(testname$,"Modus: " + STR$ (modus%,"9"))
 IF cfile$ <> "" THEN FILE cfile$
 
 END SUB 
 
 
 ' Fehler
 ' ============================================================
 ' Zweck:   Anzeigen von Fehlermeldungen
 ' Nutzung: Call Fehler(Z1$,Z2$)
 '          Z1$         = erste Zeile
 '          Z2$         = zweite Zeile
 ' ============================================================
 
SUB Fehler(Z1$,Z2$)
 msg$ = Z1$
 IF z2$ <> "" THEN msg$ = msg$ + CHR$ (13) + CHR$ (10) + Z2$
 v% = CALL ("MessageBox",hWnd%%, FN ansi(msg$), FN ansi(title$),48)
 END SUB 
 
SUB Info(Z1$,Z2$)
 msg$ = Z1$
 IF z2$ <> "" THEN msg$ = msg$ + CHR$ (13) + CHR$ (10) + Z2$
 v% = CALL ("MessageBox",hWnd%%, FN ansi(msg$), FN ansi(title$),64)
 END SUB 
 
 
 
 ' Funktion ReadINI
 ' ============================================================
 ' Zweck:   liest Eintrag aus CODIEAPP.INI
 ' Nutzung: x$=ReadINI$(topic$,item$)
 '          topic$      = Abschnitt
 '          item$       = Eintrag
 ' ============================================================
 ' 28.07.93    - umgestellt auf Kernel
 
FUNCTION ReadINI$(topic$,item$)
 i$ = ""
 a% = CALL ("GetPrivateProfileString",topic$,item$,"leer",i$,250,GDirINI$ + "CODIEAPP.INI")
 ReadINI$ = i$
 END FUNCTION 
 
FUNCTION ReadDesti$(topic$,item$,name$)
 i$ = ""
 a% = CALL ("GetPrivateProfileString",topic$,item$,"leer",i$,250,name$)
 ReadDesti$ = i$
 END FUNCTION 
 
FUNCTION ReadINIDes$(topic$,item$,datei$)
 i$ = ""
 a% = CALL ("GetPrivateProfileString",topic$,item$,"leer",i$,250,datei$)
 ReadINIDes$ = i$
 
 END FUNCTION 
 

  
 ' Funktion ReadConfig$
 ' ============================================================
 ' Zweck:   liest Eintrag aus CODIEAPP.NET
 ' Nutzung: x$=ReadConfig$(topic$,item$)
 '          topic$      = Abschnitt
 '          item$       = Eintrag
 ' ============================================================
 ' 28.07.93    - umgestellt auf Kernel
 
FUNCTION ReadConfig$(topic$,item$)
 i$ = ""
 a% = CALL ("GetPrivateProfileString",topic$,item$,"leer",i$,250,_netpath$ + "CODIEAPP.NET")
 ReadConfig$ = i$
 END FUNCTION 
 
 
 ' Funktion ReadWININI
 ' ============================================================
 ' Zweck:   liest Eintrag aus WIN.INI
 ' Nutzung: x$=ReadWININI$(topic$,item$)
 '          topic$      = Abschnitt
 '          item$       = Eintrag
 ' ============================================================
 ' 28.07.93    - umgestellt auf Kernel
 
FUNCTION ReadWININI$(topic$,item$)
 i$ = ""
 a% = CALL ("GetProfileString",topic$,item$,"leer",i$,250)
 ReadWININI$ = i$
 END FUNCTION 
 
  
 
 ' WriteINI
 ' ============================================================
 ' Zweck:   schreibt Eintrag in CODIEAPP.INI
 ' Nutzung: CALL WriteINI$(topic$,item$,value$)
 '          topic$      = Abschnitt
 '          item$       = Eintrag
 '          value$      = Wert
 ' ============================================================
 
SUB WriteINI(topic$,item$,value$)
 a% = CALL ("WritePrivateProfileString",topic$,item$,value$,GDirINI$ + "CODIEAPP.INI")
 END SUB 
 
SUB WriteINIDes(topic$,item$,value$,datei$)
 a% = CALL ("WritePrivateProfileString",topic$,item$,value$,datei$)
 END SUB 

 
 ' WriteConfig
 ' ============================================================
 ' Zweck:   schreibt Eintrag in gemeinsame CODIEAPP.INI
 ' Nutzung: CALL WriteConfig(topic$,item$,value$)
 '          topic$      = Abschnitt
 '          item$       = Eintrag
 '          value$      = Wert
 ' ============================================================
 
SUB WriteConfig(topic$,item$,value$)
 a% = CALL ("WritePrivateProfileString",topic$,item$,value$,_netpath$ + "CODIEAPP.NET")
 END SUB 
 
  
 ' WriteWININI
 ' ============================================================
 ' Zweck:   schreibt Eintrag in WIN.INI
 ' Nutzung: CALL WriteWININI$(topic$,item$,value$)
 '          topic$      = Abschnitt
 '          item$       = Eintrag
 '          value$      = Wert
 ' ============================================================
 
SUB WriteWININI(topic$,item$,value$)
 a% = CALL ("WriteProfileString",topic$,item$,value$)
 END SUB 
 
 
 ' FileDate
 ' ============================================================
 ' Zweck:   ermittelt Erstellungsdatum einer Datei
 ' Nutzung: x$=FileDate$(datei$)
 ' ============================================================
 
FUNCTION FileDate$(datei$)
 FileDate$ = CALL ("FileDate",datei$)
 END FUNCTION 
  
 


 ' LOGIN
 ' ========================================================================
SUB LOGIN()
 CALL DFile(3,"STAMM" + _fpw$)
 FILE "stamm"
 ON ERROR GOTO log2306031
 CALL FldAdd1("HRNo","TXT;50",0)
   ON ERROR GOTO log2306031
 CALL FldAdd1("USTNo","TXT;50",0)
   ON ERROR GOTO log2306031
 CALL FldAdd1("EinkNo","TXT;50",0)
   ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILSHost","TXT;150",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILSPort","NUM;999999.",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILSUserID","TXT;150",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILPHost","TXT;150",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILPPort","NUM;999999.",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILPUserID","TXT;150",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILPPasww","TXT;150",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILPOP3JN","TXT;5",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILSAFirma","TXT;150",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILJN","NUM;,0.",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILJNAuto","NUM;,0.",0)
     ON ERROR GOTO log2306031
 SAVE FILE "STAMM"
 
log2306031: 
 ON ERROR GOTO ErrorHandler
 CALL DFile(2,"OPENFILE" + _fpw$)
 CALL DFile(2,"ZERO" + _fpw$)
 CALL DFile(2,"supervis" + _fpw$)
 CALL DFile(2,"accode" + _fpw$)
 CALL DFile(2,"color" + _fpw$)
 FILE "supervis"
 ON ERROR GOTO log210520031
 CALL FldAdd1("NoAnzeigeJN","TXT;1",0)
   ON ERROR GOTO log2306031
 CALL FldAdd1("NoEmailJN","TXT;1",0)
   ON ERROR GOTO log210520031
 SAVE FILE "supervis"
log210520031: 
 ON ERROR GOTO ErrorHandler
 FILE "supervis"
 INDEX name
 SELECT FIRST 
 a% = 0
 REM 110197
 REDIM MALIST$( RECCOUNT ("supervis") + 1)
 REDIM MALIST%( RECCOUNT ("supervis") + 1)
 REDIM MALIST2$( RECCOUNT ("supervis") + 1)
 REDIM MALIST2%( RECCOUNT ("supervis") + 1)
 d% = 0
 ON ERROR GOTO w2706200301
 WHILE NOT EOF ("supervis")
   IF NoAnzeigeJN.supervis <> "j" THEN 
     MALIST$(a%) = name.supervis
     MALIST%(a%) = codema.supervis
     a% = a% + 1
   END IF 
   IF NoEmailJN.supervis <> "j" THEN 
     MALIST2$(d%) = name.supervis
     MALIST2%(d%) = codema.supervis
     d% = d% + 1
   END IF 
   SELECT NEXT 
 WEND 
 ON ERROR GOTO ErrorHandler
 GOTO w2706200302
w2706200301: 
 ON ERROR GOTO ErrorHandler
 FILE "supervis"
 INDEX name
 SELECT FIRST 
 a% = 0
 REM 110197
 REDIM MALIST$( RECCOUNT ("supervis") + 1)
 REDIM MALIST%( RECCOUNT ("supervis") + 1)
 REDIM MALIST2$( RECCOUNT ("supervis") + 1)
 REDIM MALIST2%( RECCOUNT ("supervis") + 1)
 d% = 0
 ON ERROR GOTO w2706200301
 WHILE NOT EOF ("supervis")
     MALIST$(a%) = name.supervis
     MALIST%(a%) = codema.supervis
     a% = a% + 1
     MALIST2$(d%) = name.supervis
     MALIST2%(d%) = codema.supervis
     d% = d% + 1
   SELECT NEXT 
 WEND 
w2706200302: 
 ON ERROR GOTO ErrorHandler
 SELECT FIRST 
 w% = 156:h% = 80
 d$ = "PASSWORD"
 name$ = ReadINI$(_projekt$,"lastuser")
 logon$ = ReadINI$(_projekt$,"autologon")
 passed% = 0
 IF UCASE$ (logon$) = "TRUE" THEN 
   SELECT KEY name$ LOCK FILE "SUPERVIS" INDEX name.supervis
   IF FOUND ("SUPERVIS") THEN 
     vcodema% = CodeMA.supervis
     letzterZugang.supervis = TODAY 
     CALL QuickStore("supervis")
     passed% = 1
   END IF 
 END IF 
 IF passed% = 0 THEN 
   SET STATUS "Nutzeranmeldung"
   CREATE DIALOG "LOGHELP",0,0,197,84,title$,"MS Sans Serif",8
   ADD DIALOG "LOGHELP",4,0,0,196,56,0,""
   ADD DIALOG "LOGHELP",9,5,12,19,21,4
   ADD DIALOG "LOGHELP",5,30,12,155,36,0,"Falls Sie die Anwendung das erstemal benutzen oder neu installiert haben, wÑhlen Sie als Mitarbeiter 'Supervisor' aus und geben Sie als Passwort 'supervisor' ein."
   ADD DIALOG "LOGHELP",1,69,64,54,14,1,"&OK",1,1
   CREATE DIALOG "LOGIN",0,0,193,150,title$,"MS Sans Serif",8
   ADD DIALOG "LOGIN",4,0,0,193,126,0,""
   ADD DIALOG "LOGIN",9,5,11,20,22,2
   ADD DIALOG "LOGIN",5,33,11,139,9,0,"Der Zugang zu diesem Programm ist durch "
   ADD DIALOG "LOGIN",5,33,20,68,10,0,"Passwort geschÅtzt."
   ADD DIALOG "LOGIN",5,33,30,151,11,0,"Bitte wÑhlen Sie aus der Liste der Mitarbeiter"
   ADD DIALOG "LOGIN",5,33,41,152,10,0,"Ihren Namen aus und geben Sie anschlie·end"
   ADD DIALOG "LOGIN",5,33,51,57,9,0,"Ihr Passwort ein."
   ADD DIALOG "LOGIN",5,33,97,32,12,0,"&Passwort:"
   ADD DIALOG "LOGIN",6,33,107,149,12,32,0,pw$,10
   ADD DIALOG "LOGIN",5,33,70,53,8,0,"&Mitarbeiterliste:"
   ADD DIALOG "LOGIN",8,33,80,149,195,259,2,name$,MALIST$
   ADD DIALOG "LOGIN",1,17,129,50,15,1,"Einloggen",1,1
   ADD DIALOG "LOGIN",1,68,129,50,15,0,"&Abbruch",0,0
   ADD DIALOG "LOGIN",1,119,129,50,15,0,"&Hilfe",0,2,"LOGHELP"


   WHILE passed% = 0
     PW$ = ""
     DIALOG "LOGIN",a%
     IF a% = 0 THEN 
       REMOVE DIALOG ALL 
       CALL HideStartup()
       CALL EXIT()
     END IF 
     name1$ = TRIM$ ( LEFT$ (name$,30))
     SELECT KEY name1$
     IF name1$ LIKE name.supervis THEN 
       vcodema% = CodeMA.supervis
       _vcodema% = vcodema%
       IF UCASE$ (PWDecoded$()) = UCASE$ (PW$) THEN 
         GMAName$ = LEFT$ (name.supervis,50)
         GMACodeMA% = CodeMA.supervis
         passed% = 1
         SELECT KEY vcodema% LOCK FILE "supervis" INDEX CodeMA.supervis
         letzterZugang.supervis = TODAY 
         CALL QuickStore("supervis")
         REM IF GZP% = - 1 THEN CALL ProtAll(0,"Anmeldung am Programm","",0,"",0,"")
       END IF 
     END IF 
     IF demo% = 1 THEN passed% = 1
     IF name1$ = "Supervisor" THEN passed% = 1
     IF passed% = 1 THEN 
       GMAName$ = LEFT$ (name.supervis,50)
       GMACodeMA% = CodeMA.supervis
       GMACodeDir$ = LEFT$ (windir$,2) + "\CODie.TMP"
       ON ERROR GOTO w300920042
       MAKE DIRECTORY GMACodeDir$
w300920042: 
     ON ERROR GOTO ErrorHandler 
       GMACodeDir$ = LEFT$ (windir$,2) + "\CODie.TMP\"
       GSerDir$ = GMACodeDir$
       IF GASP% = - 1 THEN 
         ON ERROR GOTO w2405051
         GSerDir$ = gserdir.stamm
w2405051: 
         ON ERROR GOTO ErrorHandler
         IF GSerDir$ = "" THEN GSerDir$ = "H:\"
       END IF 
       GAdministrator% = 0
       IF GASP% = - 1 OR GTERMINAL% = - 1 THEN 
         GMACodeDir$ = _netpath$ + STR$ (GMACodeMA%,"00000000") + "\"
         MACodeDir$ = _netpath$ + STR$ (GMACodeMA%,"00000000")
         ON ERROR GOTO crdir090320021
         MAKE DIRECTORY MACodeDir$
       END IF 
crdir090320021: 
       ON ERROR GOTO ErrorHandler
       IF GASP% = - 1 OR GTerminal% = - 1 THEN 
         GMACodeDir$ = _netpath$ + STR$ (GMACodeMA%,"00000000") + "\"
       END IF 
       IF EXISTS (GMACodeDir$ + "codiesf0.exe") THEN 
         DELETE GMACodeDir$ + "codiesf0.exe"
       END IF 
       COPY _netpath$ + "\local\CODieSF0.exe",GMACodeDir$ + "CODieSF0.exe"
       IF EXISTS (GMACodeDir$ + "search.dat") OR EXISTS (GMACodeDir$ + "search.idx") THEN 
         ON ERROR GOTO err061120021
         IF (GASP% = - 1 OR GTerminal% = - 1) AND GMACodeDir$ <> "C:\" AND GMACodeDir$ <> "c:\" THEN 
           DELETE GMACodeDir$ + "search.*"
         ELSE 
           DELETE GMACodeDir$ + "search.*"
         END IF 
err061120021: 
         ON ERROR GOTO ErrorHandler
         IF EXISTS (_netpath$ + "\local\search.dat") AND EXISTS (_netpath$ + "\local\search.idx") THEN 
           COPY _netpath$ + "\local\search.dat",GMACodeDir$ + "search.dat"
           COPY _netpath$ + "\local\search.idx",GMACodeDir$ + "search.idx"
         ELSE 
           GCodie% = 0
         END IF 
       ELSE 
         IF EXISTS (_netpath$ + "\local\search.dat") AND EXISTS (_netpath$ + "\local\search.idx") THEN 
           COPY _netpath$ + "\local\search.dat",GMACodeDir$ + "search.dat"
           COPY _netpath$ + "\local\search.idx",GMACodeDir$ + "search.idx"
         ELSE 
           GCodie% = 0
         END IF 
       END IF 
     END IF 
     IF passed% = 1 THEN CALL DFile(2,"OFFICE\adrtemp" + _fpw$)
     IF passed% = 0 THEN CALL Fehler("Keine Zugangsberechtigung!","Wechsel zwischen den Feldern mit Tabulatortaste, Abschlu· mit <ENTER> !")
   WEND 
 

   IF demo% = 1 THEN 
     vcodema% = 0
     kÅrzel$ = "Co"
   ELSE 
     kÅrzel$ = KÅrzel.supervis
   END IF 
   IF GScanDir$ LIKE "" OR GScanDir$ LIKE "LEER" THEN 
     GScanDir$ = GMACodeDir$
   END IF 
   REMOVE DIALOG ALL 
   CALL WriteINI(_projekt$,"lastuser",name.supervis)
 END IF 
 END SUB 
  




SUB LOGINalt()
 CALL DFile(3,"STAMM" + _fpw$)
 FILE "stamm"
 ON ERROR GOTO log2306031
 CALL FldAdd1("HRNo","TXT;50",0)
   ON ERROR GOTO log2306031
 CALL FldAdd1("USTNo","TXT;50",0)
   ON ERROR GOTO log2306031
 CALL FldAdd1("EinkNo","TXT;50",0)
   ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILSHost","TXT;150",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILSPort","NUM;999999.",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILSUserID","TXT;150",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILPHost","TXT;150",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILPPort","NUM;999999.",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILPUserID","TXT;150",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILPPasww","TXT;150",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILPOP3JN","TXT;5",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILSAFirma","TXT;150",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILJN","NUM;,0.",0)
     ON ERROR GOTO log2306031
   CALL FldAdd1("EMAILJNAuto","NUM;,0.",0)
     ON ERROR GOTO log2306031
 SAVE FILE "STAMM"

log2306031: 
 ON ERROR GOTO ErrorHandler
 CALL DFile(2,"OPENFILE" + _fpw$)
 CALL DFile(2,"ZERO" + _fpw$)
 CALL DFile(2,"supervis" + _fpw$)
 CALL DFile(2,"color" + _fpw$)
 FILE "supervis"
 ON ERROR GOTO log210520031
 CALL FldAdd1("NoAnzeigeJN","TXT;1",0)
   ON ERROR GOTO log2306031
 CALL FldAdd1("NoEmailJN","TXT;1",0)
   ON ERROR GOTO log210520031
 SAVE FILE "supervis"
log210520031: 
 ON ERROR GOTO ErrorHandler
 FILE "supervis"
 INDEX name
 SELECT FIRST 
 a% = 0
 REM 110197
 REDIM MALIST$( RECCOUNT ("supervis") + 1)
 REDIM MALIST%( RECCOUNT ("supervis") + 1)
 REDIM MALIST2$( RECCOUNT ("supervis") + 1)
 REDIM MALIST2%( RECCOUNT ("supervis") + 1)
 d% = 0
 ON ERROR GOTO w2706200301
 WHILE NOT EOF ("supervis")
   IF NoAnzeigeJN.supervis <> "j" THEN 
     MALIST$(a%) = name.supervis
     MALIST%(a%) = codema.supervis
     a% = a% + 1
   END IF 
   IF NoEmailJN.supervis <> "j" THEN 
     MALIST2$(d%) = name.supervis
     MALIST2%(d%) = codema.supervis
     d% = d% + 1
   END IF 
   SELECT NEXT 
 WEND 
 ON ERROR GOTO ErrorHandler
 GOTO w2706200302
w2706200301: 
 ON ERROR GOTO ErrorHandler
 FILE "supervis"
 INDEX name
 SELECT FIRST 
 a% = 0
 REM 110197
 REDIM MALIST$( RECCOUNT ("supervis") + 1)
 REDIM MALIST%( RECCOUNT ("supervis") + 1)
 REDIM MALIST2$( RECCOUNT ("supervis") + 1)
 REDIM MALIST2%( RECCOUNT ("supervis") + 1)
 d% = 0
 ON ERROR GOTO w2706200301
 WHILE NOT EOF ("supervis")
     MALIST$(a%) = name.supervis
     MALIST%(a%) = codema.supervis
     a% = a% + 1
     MALIST2$(d%) = name.supervis
     MALIST2%(d%) = codema.supervis
     d% = d% + 1
   SELECT NEXT 
 WEND 
w2706200302: 
 ON ERROR GOTO ErrorHandler
 SELECT FIRST 
 w% = 156:h% = 80
 d$ = "PASSWORD"
 name$ = ReadINI$(_projekt$,"lastuser")
 logon$ = ReadINI$(_projekt$,"autologon")
 passed% = 0
 IF UCASE$ (logon$) = "TRUE" THEN 
   SELECT KEY name$ LOCK FILE "SUPERVIS" INDEX name.supervis
   IF FOUND ("SUPERVIS") THEN 
     vcodema% = CodeMA.supervis
     letzterZugang.supervis = TODAY 
     CALL QuickStore("supervis")
     passed% = 1
   END IF 
 END IF 
 IF passed% = 0 THEN 
   SET STATUS "Nutzeranmeldung"
   CREATE DIALOG "LOGHELP",0,0,197,84,title$,"MS Sans Serif",8
   ADD DIALOG "LOGHELP",4,0,0,196,56,0,""
   ADD DIALOG "LOGHELP",9,5,12,19,21,4
   ADD DIALOG "LOGHELP",5,30,12,155,36,0,"Falls Sie die Anwendung das erstemal benutzen oder neu installiert haben, wÑhlen Sie als Mitarbeiter 'Supervisor' aus und geben Sie als Passwort 'supervisor' ein."
   ADD DIALOG "LOGHELP",1,69,64,54,14,1,"&OK",1,1
   CREATE DIALOG "LOGIN",0,0,193,150,title$,"MS Sans Serif",8
   ADD DIALOG "LOGIN",4,0,0,193,126,0,""
   ADD DIALOG "LOGIN",9,5,11,20,22,2
   ADD DIALOG "LOGIN",5,33,11,139,9,0,"Der Zugang zu diesem Programm ist durch "
   ADD DIALOG "LOGIN",5,33,20,68,10,0,"Passwort geschÅtzt."
   ADD DIALOG "LOGIN",5,33,30,151,11,0,"Bitte wÑhlen Sie aus der Liste der Mitarbeiter"
   ADD DIALOG "LOGIN",5,33,41,152,10,0,"Ihren Namen aus und geben Sie anschlie·end"
   ADD DIALOG "LOGIN",5,33,51,57,9,0,"Ihr Passwort ein."
   ADD DIALOG "LOGIN",5,33,97,32,12,0,"&Passwort:"
   ADD DIALOG "LOGIN",6,33,107,149,12,32,0,pw$,10
   ADD DIALOG "LOGIN",5,33,70,53,8,0,"&Mitarbeiterliste:"
   ADD DIALOG "LOGIN",8,33,80,149,65,259,2,name$,MALIST$
   ADD DIALOG "LOGIN",1,17,129,50,15,1,"&OK",1,1
   ADD DIALOG "LOGIN",1,68,129,50,15,0,"&Abbruch",0,0
   ADD DIALOG "LOGIN",1,119,129,50,15,0,"&Hilfe",0,2,"LOGHELP"
   WHILE passed% = 0
     PW$ = ""
     DIALOG "LOGIN",a%
     IF a% = 0 THEN 
       REMOVE DIALOG ALL 
       CALL HideStartup()
       CALL EXIT()
     END IF 
     SELECT KEY name$
     IF name$ = name.supervis THEN 
       vcodema% = CodeMA.supervis
       GCodeMA% = vcodema%
       IF UCASE$ (PWDecoded$()) = UCASE$ (PW$) THEN 
         GMAName$ = LEFT$ (name.supervis,50)
         GMACodeMA% = CodeMA.supervis
         passed% = 1
         SELECT KEY vcodema% LOCK FILE "supervis" INDEX CodeMA.supervis
         letzterZugang.supervis = TODAY 
         CALL QuickStore("supervis")
       END IF 
     END IF 
     IF demo% = 1 THEN passed% = 1
     IF name$ = "Supervisor" THEN passed% = 1
     IF passed% = 1 THEN 
       GMAName$ = LEFT$ (name.supervis,50)
       GMACodeMA% = CodeMA.supervis
       GMACodeDir$ = "C:\"
       IF GASP% THEN 
         GMACodeDir$ = _netpath$ + STR$ (GMACodeMA%,"00000000") + "\"
         MACodeDir$ = _netpath$ + STR$ (GMACodeMA%,"00000000")
         ON ERROR GOTO crdir090320021
         MAKE DIRECTORY MACodeDir$
       END IF 
crdir090320021: 
       ON ERROR GOTO ErrorHandler
       IF GASP% THEN 
         GMACodeDir$ = _netpath$ + STR$ (GMACodeMA%,"00000000") + "\"
       END IF 
       IF EXISTS (GMACodeDir$ + "search.dat") OR EXISTS (GMACodeDir$ + "search.idx") THEN 
         IF GASP% AND GMACodeDir$ <> "C:\" THEN 
           DELETE GMACodeDir$ + "*.*"
         ELSE 
           DELETE GMACodeDir$ + "search.*"
         END IF 
         IF EXISTS (_netpath$ + "\local\search.dat") AND EXISTS (_netpath$ + "\local\search.idx") THEN 
           COPY _netpath$ + "\local\search.dat",GMACodeDir$ + "search.dat"
           COPY _netpath$ + "\local\search.idx",GMACodeDir$ + "search.idx"
         ELSE 
           GCodie% = 0
         END IF 
       ELSE 
         IF EXISTS (_netpath$ + "\local\search.dat") AND EXISTS (_netpath$ + "\local\search.idx") THEN 
           COPY _netpath$ + "\local\search.dat",GMACodeDir$ + "search.dat"
           COPY _netpath$ + "\local\search.idx",GMACodeDir$ + "search.idx"
         ELSE 
           GCodie% = 0
         END IF 
       END IF 
     END IF 
     IF passed% = 0 THEN CALL Fehler("Keine Zugangsberechtigung!","Wechsel zwischen den Feldern mit Tabulatortaste, Abschlu· mit <ENTER> !")
   WEND 
   IF demo% = 1 THEN 
     vcodema% = 0
     kÅrzel$ = "Co"
   ELSE 
     kÅrzel$ = KÅrzel.supervis
   END IF 
   REMOVE DIALOG ALL 
   CALL WriteINI(_projekt$,"lastuser",name.supervis)
 END IF 
 END SUB 
 
 
 ' Undo
 ' ======================================================================
 ' Zweck:   VerÑnderungen des aktuellen Datensatzes zurÅcksetzen
 ' Nutzung: CALL UNDO()
 ' ======================================================================
 
SUB UNDO()
 IF MOD ("") OR NEW ("") THEN 
   REQUEST "énderungen wirklich verwerfen?","",130,req%
   IF req% = 1 THEN 
     IF NEW ("") THEN 
       BLANK 
     ELSE 
       SELECT FORM CURRENT 
     END IF 
   END IF 
 END IF 
 FORM 
 END SUB 
 
 
 ' Routinen fÅr Bewegung durch Datei
 ' ======================================================================
 ' ersetzt durch SB-interne Prozeduraufrufe
 
  
SUB ADRNext()
 SELECT WHERE FILE GTelDat$
 filtbutadr1$ = "Filter: ohne"
 CALL PSelectNext()
 CALL ADRFeldnamen()
 FORM 
 END SUB 
 
SUB ADRPrev()
 SELECT WHERE FILE GTelDat$
 filtbutadr1$ = "Filter: ohne"
 CALL PSelectPrev()
 CALL ADRFeldnamen()
 FORM 
 END SUB 
 
SUB ADRFirst()
 REM IF FileChanged%("adressen") = 1 THEN CALL FStore("adressen")
 SELECT WHERE FILE GTelDat$
 filtbutadr1$ = "Filter: ohne"
 CALL PSelectFirst()
 CALL ADRFeldnamen()
 FORM 
 END SUB 
 
SUB ADRLast()
 REM IF FileChanged%("adressen") = 1 THEN CALL FStore("adressen")
 SELECT WHERE FILE GTelDat$
 filtbutadr1$ = "Filter: ohne"
 CALL PSelectLast()
 CALL ADRFeldnamen()
 FORM 
 END SUB 
 
 
SUB PSelectNext()
 MOUSE OFF 
 cfile$ = FILE 
 SET STATUS "NÑchster Datensatz wird gesucht..."
 SELECT FORM NEXT 
 IF EOF (cfile$) THEN REQUEST "Letzter Datensatz","",2
 IF MNdisabled%("DATALOCK") THEN 
   REM -- öberspringen gesperrter DatensÑtze --
   cfile$ = FILE 
   WHILE Sperre.cfile$ <> 0 AND Sperre.cfile$ <> vcodema% AND NOT EOF (cfile$)
     SELECT FORM NEXT 
     IF EOF (cfile$) THEN 
       IF UCASE$ (cfile$) <> GAKQUIDAT$ THEN REQUEST "Letzter Datensatz","",2
     END IF 
   WEND 
 END IF 
 SET STATUS "Bereit"
 MOUSE ON 
 FORM 
 END SUB 
 
SUB PSelectPrev()
 MOUSE OFF 
 cfile$ = FILE 
 ON ERROR GOTO ErrorHandler
 SET STATUS "Vorheriger Datensatz wird gesucht..."
 SELECT FORM PREVIOUS 
 IF EOF (cfile$) THEN REQUEST "Erster Datensatz","",2
 IF MNdisabled%("DATALOCK") THEN 
   REM -- öberspringen gesperrter DatensÑtze --
   cfile$ = FILE 
   WHILE Sperre.cfile$ <> 0 AND Sperre.cfile$ <> vcodema% AND NOT EOF (cfile$)
     SELECT FORM PREVIOUS 
     IF EOF (cfile$) THEN 
       IF UCASE$ (cfile$) <> GAkquiDat$ THEN REQUEST "Erster Datensatz","",2
     END IF 
   WEND 
 END IF 
 SET STATUS "Bereit"
 MOUSE ON 
 FORM 
 END SUB 
 
 
SUB 1PSelectNext()
 MOUSE OFF 
 SELECT FORM NEXT 
 MOUSE ON 
 END SUB 
 
SUB 1PSelectPrev()
 MOUSE OFF 
 SELECT FORM PREVIOUS 
 MOUSE ON 
 END SUB 
 
SUB PSelectFirst()
 MOUSE OFF 
 SELECT FORM FIRST 
 MOUSE ON 
 END SUB 
 
SUB PSelectLast()
 MOUSE OFF 
 EXECUTE "SELECT FORM LAST"
 MOUSE ON 
 END SUB 
 
 
 ' Routine fÅr Adre·Åbernahme aus 1&1
 ' ======================================================================
SUB INHOUSE1()
 cdir$ = DIRECTORY 
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(2,"OFFICE\connect" + _fpw$)
 REM CALL DFile(2,"OFFICE\einsimpo" + _fpw$)
 OPEN FILE SHARE ,0_netpath$ + "OFFICE\einsimpo" + _fpw$
 REMOVE FROM FILE "einsimpo"
 DIRECTORY sep1$
 datei1$ = sep1$ + "\ffl.exp"
 IF EXISTS (datei$) THEN DELETE datei1$
 AppName1$ = sep1$ + "\ffl.pif"
 CALL AppName1$,1
 DIRECTORY cdir$
 datei1$ = sep1$ + "\ffl.exp"
 SET ANSICONVERT OFF 
 MOUSE OFF 
 IMPORT datei1$ TO FILE "einsimpo" USING FILE "", CHR$ (13) + CHR$ (10),"2"
 CLOSE FILE "einsimpo"
 MOUSE ON 
 REQUEST "Wollen Sie die Daten in die Adressdatei Åbernehmen ?","",130,req%
 MOUSE OFF 
 IF req% = 1 THEN 
   REM CALL DFile(2,"OFFICE\einsimpo" + _fpw$)
   OPEN FILE SHARE ,0_netpath$ + "OFFICE\einsimpo" + _fpw$
   req21% = 0
   WHILE req21% = 0
     FILE "supervis"
     REQUEST "Mitarbeiter auswÑhlen, fÅr den die Termine","eingetragen werden sollen!",25,req21%,_vma%,72,codema,nachname,vorname INDEX nachname.supervis
   WEND 
   SELECT KEY _vma% FILE "SUPERVIS" INDEX CodeMA.supervis
   nachn$ = nachname.supervis
   WHILE req27% = 0
     FILE "aktionen"
     REQUEST "Aktion auswÑhlen, fÅr die die Termine","eingetragen werden sollen!",25,req27%,codeak%,72,codeak,bezeichnung INDEX bezeichnung.aktionen
   WEND 
   SELECT KEY codeak% FILE "aktionen" INDEX Codeak.aktionen
   bezeich$ = bezeichnung.aktionen
   FILE "einsimpo"
   SELECT FIRST 
   WHILE NOT EOF ("einsimpo")
     SELECT FIRST LOCK FILE "stamm"
     LastKunr.stamm = LastKunr.stamm + 1
     STORE FILE "stamm"
     UNLOCK CURRENT FILE "stamm"
     nnum% = LastKunr.stamm
     FILE "adressen"
     BLANK 
     CodeKU.adressen = SER ("adressen",1)
     codeku% = CodeKU.adressen
     REM nnum% = VAL (ReadConfig$("NUMMERN","LASTKundennummer")) + 1
     REM CALL WriteConfig("NUMMERN","LASTKundennummer", LTRIM$ ( STR$ (nnum%,"999999")))
     IF projekt.einsimpo LIKE "18801245" THEN 
       Stichwort.adressen = "1&1 AUTOMATIK PROVIS/IMMAK"
       Kundennummer.adressen = "1&1KPI" + LTRIM$ ( STR$ (nnum%,"999999"))
     END IF 
     IF projekt.einsimpo LIKE "12451880" THEN 
       Stichwort.adressen = "1&1 AUTOMATIK PROVIS/IMMAK"
       Kundennummer.adressen = "1&1KPI" + LTRIM$ ( STR$ (nnum%,"999999"))
     END IF 
     IF projekt.einsimpo LIKE "1880" THEN 
       Stichwort.adressen = "1&1 AUTOMATIK PROVIS"
       Kundennummer.adressen = "1&1KP" + LTRIM$ ( STR$ (nnum%,"999999"))
     END IF 
     IF projekt.einsimpo LIKE "1245" THEN 
       Stichwort.adressen = "1&1 AUTOMATIK IMMAK"
       Kundennummer.adressen = "1&1KI" + LTRIM$ ( STR$ (nnum%,"999999"))
     END IF 
     Kunde_seit.adressen = TODAY 
     Debitorkto.adressen = LTRIM$ ( STR$ (nnum%,"999999"))
     AAKunde.adressen = "j"
     AAMakler.adressen = "n"
     AAMitarbeiter.adressen = "n"
     AAInteressent.adressen = "n"
     AALieferant.adressen = "n"
     FIPrivat.adressen = "n"
     FIATEC.adressen = "j"
     FIIMMAK.adressen = "n"
     briefanrede.adressen = "Sehr geehrte Damen und Herren"
     IF firma.einsimpo = "" THEN 
       anrede.adressen = "Herr"
       nachname.adressen = nachname.einsimpo
       vorname.adressen = vorname.einsimpo
     ELSE 
       anrede.adressen = "Firma"
       nachname.adressen = firma.einsimpo
       vorname.adressen = nachname.einsimpo
       Geburtsname.adressen = vorname.einsimpo
     END IF 
     IF firma1.einsimpo <> "" THEN 
       anrede.adressen = "Firma"
       nachname.adressen = firma.einsimpo
       Geburtsname.adressen = vorname.einsimpo + " " + nachname.einsimpo
     END IF 
      stra·e.adressen = strasse.einsimpo
     plz.adressen = plz.einsimpo
     ort.adressen = ort.einsimpo
     telefon1.adressen = telefon.einsimpo
     var1$ = "Datum der Anfrage: " + datumanfr.einsimpo + "   Zeitschrift: " + zeitschr.einsimpo
     notiz.adressen = var1$
     SET STATUS "öbernahme der Adresse: " + nachname.adressen
     CALL QuickStore("adressen")
     FILE "telefon"
     BLANK 
     codetel.telefon = SER ("telefon",1)
     codeku.telefon = codeku%
     art.telefon = "Telefon1"
     nummer.telefon = telefon.einsimpo
     Workstation.telefon = Workstation%
     QWoNo.telefon = STR$ (Workstation%,"000000") + STR$ (codetel.telefon,"000000")
     RecStatus.telefon = "c"
     STORE FILE "telefon"
     FILE GAkquiDat$
     BLANK 
     CodeAQ.GAkquiDat$ = SER (GAkquiDat$,1)
     CodeKu.GAkquiDat$ = CodeKu.adressen
     CodeMA.GAkquiDat$ = _vma%
     bearbeiter.GAkquiDat$ = Nachn$
     IF projekt.einsimpo LIKE "18801245" OR projekt.einsimpo LIKE "12451880" THEN 
       CodeAK = codeak%
       datum.GAkquiDat$ = TODAY 
       notiz.GAkquiDat$ = "1&1 Infos-automatisch PROVIS"
       termin.GAkquiDat$ = TODAY 
       Wertung.GAkquiDat$ = 00
       erledigt_Termin.GAkquiDat$ = "n"
       nachname.GAkquiDat$ = nachname.adressen
       CALL QuickStore(GAkquiDat$)
     ELSE 
       IF projekt.einsimpo LIKE "1880" THEN CodeAK = codeak%
       IF projekt.einsimpo LIKE "1245" THEN CodeAK = codeak%
       datum.GAkquiDat$ = TODAY 
       IF projekt.einsimpo LIKE "1880" THEN notiz.GAkquiDat$ = "1&1 Infos-automatisch PROVIS"
       IF projekt.einsimpo LIKE "1245" THEN notiz.GAkquiDat$ = "1&1 Infos-automatisch IMMAK"
       termin.GAkquiDat$ = TODAY 
       Wertung.GAkquiDat$ = 00
       erledigt_Termin.GAkquiDat$ = "n"
       nachname.GAkquiDat$ = nachname.adressen
       CALL QuickStore(GAkquiDat$)
     END IF 
     FILE "einsimpo"
     SELECT NEXT 
   WEND 
 ELSE 
   CALL DFile(2,"OFFICE\einsimpo" + _fpw$)
   FILE "einsimpo"
   REM REMOVE FROM FILE "einsimpo"
   CLOSE FILE "einsimpo"
 END IF 
 MOUSE ON 
 SET STATUS "HauptmenÅ"
 END SUB 
 
 
  
 
 
 ' FileChanged
 ' ======================================================================
 ' Zweck:       testet auf VerÑnderungen in einem Datensatz
 ' Nutzung:     x%=FileChanged%(datei$)
 '              datei$  = Dateiname der zu prÅfenden Datei
 ' Ergebnis:    0       = keine VerÑnderungen
 '              1       = Datensatz wurde verÑndert oder neu erstellt
 ' ======================================================================
 
FUNCTION FileChanged%(datei$)
 MOUSE OFF 
 FileChanged% = 0
 IF MOD (datei$) OR NEW (datei$) THEN 
   MOUSE ON 
   REQUEST "Datensatz wurde verÑndert/neu erstellt.","Soll der Datensatz gespeichert werden?",130,req%
   IF req% = 1 THEN FileChanged% = 1
 END IF 
 MOUSE ON 
 END FUNCTION 
 
FUNCTION SelSerZiel%()
    opt1% = 1
    DIM dlg AS Dialog
    DIM control AS DialogControl
 
    Superbase.Dialogs.Add("SELZIEL")
    SET dlg = Superbase.Dialogs.SELZIEL
    dlg.Move(0,0,222,84)
    dlg.Caption = "Ziel auswÑhlen"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(0,1,222,56)
    control.Caption = "Serienbrief erstellen mit"
 
    SET control = dlg.Add("DialogIcon1","DialogIcon")
    control.Move(2,16,20,22)
    control.Icon = 2
 
    SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
    control.Move(30,19,106,11)
    control.Caption = "dBASE-Datei"
    control.Bind("opt1%")
    control.ValueOn = 1
 
    SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
    control.Move(30,33,106,11)
    control.Caption = "Excel-Datei"
    control.Bind("opt1%")
    control.ValueOn = 2
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(56,62,64,16)
    control.Default = 1
    control.Caption = "&OK"
    control.ReturnValue = 1
    DIALOG "SELZIEL",req%
    REMOVE DIALOG ALL 
    SelSerZiel% = opt1%
 END FUNCTION 



 ' geÑnderten Datensatz sichern
 ' ======================================================================
 
SUB Sichern()
 cfile$ = FILE 
 IF NEW (cfile$) OR MOD (cfile$) THEN 
   REQUEST "Soll der aktuelle Datensatz gesichert werden?","",130,req%
   IF req% = 1 THEN CALL FStore(cfile$)
 END IF 
 ENTER END 
 END SUB 
 
 
 ' FStore
 ' ======================================================================
 ' Zweck:       Sichert Daten eines Datensatzes
 ' Nutzung:     CALL FStore(datei$)
 '              datei$  = Datei deren Datensatz gesichert werden soll
 ' Hinweis:     Es kînnen Routinen zur SatzprÅfung und QuickCode-Gene-
 '              rierung ergÑnzt werden.
 ' ======================================================================
 ' 11.07.93    - TimeStamp wird erzeugt
 
SUB FStore(datei$)
 IF datei$ LIKE "ADRESSEN" THEN 
   IF MOD (datei$) OR NEW (datei$) THEN 
   ELSE 
     knr% = codeku.adressen
     SELECT KEY knr% LOCK FILE "ADRESSEN" INDEX codeku.adressen
     RecStatus.ADRESSEN = "c"
   END IF 
 END IF 
 IF MOD (datei$) OR NEW (datei$) THEN 
   MOUSE OFF 
   _OK% = 0
   cfile$ = FILE 
   FILE datei$
   SET STATUS "Sichere Datensatz..."
   Hinweis$ = ""
   SELECT CASE UCASE$ (datei$)
   CASE "FONDS"
      req% = 0
      IF Bewertungssumme.kvertrag <> Bewertungssumme.fonds THEN 
        t$ = "Soll der Wert aus dem Feld Bewertungssumme(Fondsmaske): " + LTRIM$ (p$)
        REQUEST t$,"in das Feld Bewertung(Vertragsmaske) Åbernehmen?",130,req%
        IF req% = 1 THEN 
          SELECT KEY codevt.fonds LOCK FILE "KVERTRAG" INDEX lfdnr.kvertrag
          Bewertungssumme.kvertrag = Bewertungssumme.fonds
          Workstation.kvertrag = Workstation%
          QWoNo.kvertrag = STR$ (Workstation%,"000000") + STR$ (lfdnr.kvertrag,"000000")
          RecStatus.Kvertrag = "c"
          STORE FILE "Kvertrag"
        END IF 
      END IF 
   CASE UCASE$ ("SERIENR")
       IF serienr.serienr = "" THEN 
         _ok% = - 1
       ELSE 
         serienr$ = serienr.serienr
         IF NOT EXISTS (codear.artikel,codear.serienr) THEN 
           codear.serienr = codear.artikel
           codeser.serienr = SER ("serienr",1)
           serienr.serienr = "<ohne Zuordnung>"
           QuickARSER.serienr = STR$ (codear.serienr,"000000") + "<ohne Zuordnung>"
           QuickSerNumm.serienr = serienr.serienr + nummer.serienr
           STORE FILE "serienr"
           BLANK FILE "serienr"
           codear.serienr = codear.artikel
           codeser.serienr = SER ("serienr",1)
           serienr.serienr = serienr$
           QuickARSER.serienr = STR$ (codear.serienr,"000000") + serienr$
           QuickSerNumm.serienr = serienr.serienr + nummer.serienr
         ELSE 
           codear.serienr = codear.artikel
           codeser.serienr = SER ("serienr",1)
           QuickARSER.serienr = STR$ (codear.serienr,"000000") + serienr$
           QuickSerNumm.serienr = serienr.serienr + nummer.serienr
         END IF 
       END IF 
     CASE UCASE$ ("TELEFON")
       IF art.telefon <> "" OR nummer.telefon <> "" THEN 
         IF codetel.telefon < 1 THEN CodeTEL.TELEFON = SER ("TELEFON",1)
         IF art.telefon = "" THEN art.telefon = "Telefon:"
         codeku.telefon = codeku.adressen
       ELSE 
         _ok% = - 1
       END IF 
     CASE "SCHADEN"
       IF Kurznotiz.schaden <> "" THEN 
         IF codesch < 1 THEN codesch = SER ("SCHADEN",1)
       ELSE 
         hinweis$ = "Es mu· mindestens eine Kurznotiz eingegeben werden!"
         _ok% = - 1
       END IF 
     CASE "GRUPPEN"
       IF kurzbezeichnung <> "" THEN 
         IF codegr.gruppen < 1 THEN codegr.gruppen = SER ("gruppen",1)
       ELSE 
         _OK% = - 1
         Hinweis$ = "Es mu· mindestens eine Kurzbezeichnung eingegeben werden!"
       END IF 
     CASE "IMMOGRUP"
       IF bezeichnung <> "" THEN 
         IF codegr.immogrup < 1 THEN codegr.immogrup = SER ("immogrup",1)
       ELSE 
         _OK% = - 1
         Hinweis$ = "Es mu· mindestens eine Gruppenbezeichnung eingegeben werden!"
       END IF 
     CASE "FLOSKEL"
       IF floskel <> "" THEN 
         IF codefl.floskel < 1 THEN codefl.floskel = SER ("floskel",1)
       ELSE 
         _OK% = - 1
         Hinweis$ = "Es mu· mindestens die Floskelbezeichnung eingegeben werden!"
       END IF 
     CASE "ABZUGANG"
       QuickCodeAR.ABZUGANG = Art.ABZUGANG * 1000000 + CodeAR.ABZUGANG
     CASE "ADRESSEN"
       IF nachname.adressen <> "" THEN 
         IF CodeKU.adressen < 1 THEN Codeku.adressen = SER ("adressen",1)
         Hinweis$ = "Nachname ist erforderlich."
         IF DEFA$ = "MEGA" THEN 
           IF kostentrÑger.adressen <> "" AND kostenstelle.adressen <> 0 THEN 
             _OK% = - 1
             Hinweis$ = "Die Felder KostentrÑger und Kostenstelle dÅrfen nicht gleichzeitig ausgefÅllt sein!"
           END IF 
         END IF 
       ELSE 
         _OK% = - 1
         Hinweis$ = "Es mu· mindestens ein Name eingegeben werden!"
       END IF 
       req% = 0
       REM GVorname$,GName$,GGebname$,GOrt$,GPLZ$,GStrasse$
     CASE "AKTIONEN"
       IF bezeichnung.aktionen <> "" THEN 
         IF codeak.aktionen < 1 THEN codeak.aktionen = SER ("aktionen",1)
       ELSE 
         _OK% = - 1
         Hinweis$ = "Es mu· mindestens die Aktionsbezeichnung eingegeben werden!"
       END IF 
     CASE GAkquiDat$
       IF FORM LIKE "AKQUIBUG" THEN 
       ELSE 
         IF notiz.GAkquiDat$ = "" OR notiz.GAkquiDat$ LIKE "sende EMAIL*" THEN 
           notiz.GAkquiDat$ = "sende EMAIL: " + emailbetreff.GAkquiDat$
         END IF 
       END IF 
       Hinweis$ = ""
     CASE "ARTIKEL"
       IF _projekt$ LIKE "FACTURA" THEN 
         IF artikelnummer <> "" OR Bezeichnung <> "" THEN 
           IF DEFA$ = "MEGA" THEN 
             IF Bestandskonto.artikel <= 0 THEN 
               _ok% = - 1
               Hinweis$ = "Die Angabe fÅr die Bestandsnummer mu· eingegeben werden!"
             END IF 
           END IF 
         ELSE 
           _OK% = - 1
           Hinweis$ = "Es mu· mindestens eine Artikelnummer oder eine Artikelbezeichnung eingegeben werden!"
         END IF 
       END IF 
       IF _projekt$ LIKE "WAWI" THEN 
         IF bestellnummer.artikel = "" THEN 
          _OK% = - 1
          Hinweis$ = "Lieferanten-Artikelnummer mu· angegeben werden"
         END IF 
         IF _OK% <> - 1 THEN 
           REM SatzstatusNC n=new , c=change , d=delete , u=updated öbergabeparameter an die Kasse
           IF MOD ("artikel") THEN 
             IF SatzstatusNC.artikel = "u" THEN SatzstatusNC.artikel = "c"
           END IF 
           IF NEW ("artikel") THEN SatzstatusNC.artikel = "n"
           Hinweis$ = "Artikelnummer Lieferant ist erforderlich"
         END IF 
       END IF 
     CASE "GEADR"
       IF gesellschaft.geadr <> "" THEN 
         IF codege.geadr < 1 THEN codege.geadr = SER ("geadr",1)
       ELSE 
         _OK% = - 1
         Hinweis$ = "Name ist erforderlich."
       END IF 
     CASE "GEKOND"
       IF lfdnr.GEKOND < 1 THEN 
         _OK% = - 1
         Hinweis$ = ""
       END IF 
     CASE "GEKONDM"
       IF lfdnr.GEKONDM < 1 THEN 
         _OK% = - 1
         Hinweis$ = ""
       END IF 
     CASE "IMMOGRUP"
       IF bezeichnung.immogrup = "" THEN _OK% = 1
       Hinweis$ = "Bezeichnung fÅr die Immobiliengruppe ist erforderlich."
     CASE "MAADR"
       IF nachname.maadr <> "" THEN 
         IF codema.maadr < 1 THEN codema.maadr = SER ("maadr",1)
       ELSE 
         Hinweis$ = "Nachname ist erforderlich."
         _OK% = - 1
       END IF 
     CASE "MASTER"
       QuickCodeKU.MASTER = CodeKU.MASTER * 10 + Art.MASTER
     CASE "SPARTEN"
       IF sparte.sparten = "" THEN _OK% = - 1
       Hinweis$ = "Spartenbezeichnung ist erforderlich."
     CASE "SCHEIN"
       IF CodeMS.schein = 0 OR CodeAR.schein = 0 THEN _ok% = - 1
       IF DEFA$ = "MEGA" THEN 
         IF Bestandskonto.schein <= 0 THEN 
           _ok% = - 1
           Hinweis$ = "Das Bestandskonto mu· angegeben werden"
         END IF 
         IF Verbrauchskonto.schein <= 0 THEN 
           _ok% = - 1
           Hinweis$ = "Das Verbrauchsskonto mu· angegeben werden"
         END IF 
         IF _ok% = - 1 AND CodeMS.schein <> 0 AND CodeAR.schein <> 0 THEN SELECT REMOVE 
       END IF 
     CASE "OBJEKTE"
       IF Bezeichnung.objekte <> "" THEN 
         IF codeob.objekte < 1 THEN codeob.objekte = SER ("objekte",1)
       ELSE 
         Hinweis$ = "Bitte geben Sie erst eine Objektbezeichnung an."
         _OK% = - 1
       END IF 
     CASE "ANFRAGE"
       IF Bezeichnung.anfrage <> "" THEN 
         IF codeob.anfrage < 1 THEN codeob.anfrage = SER ("anfrage",1)
       ELSE 
         Hinweis$ = "Bitte geben Sie erst eine Objektbezeichnung an."
         _OK% = - 1
       END IF 
     CASE "SUPERVIS"
       IF Name.supervis = "" THEN _OK% = - 1
       Hinweis$ = "Bitte geben Sie einen Anmeldenamen ein."
       IF Nachname.supervis = "" THEN _OK% = - 1
       Hinweis$ = "Bitte geben Sie erst einen Nachnamen ein."
       KÅrzel.SUPERVIS = "XX"
     CASE "VERLEIH"
       QuickCodeKU.VERLEIH = DATE$ (datum.VERLEIH,"yymmdd") + STR$ (CodeKU.VERLEIH,"000000")
     END SELECT 
     IF _OK% = 0 THEN 
       FILE datei$
       CALL QuickStore(datei$)
       SET STATUS "Datensatz wurde gesichert..."
     ELSE 
       IF Hinweis$ <> "" THEN CALL Fehler("Datensatz konnte nicht gesichert werden!",Hinweis$)
     END IF 
     SELECT CASE UCASE$ ( FILE )
     CASE GAkquiDat$
       IF FORM LIKE "AKQ*" THEN CALL SHOWCal()
   END SELECT 
   FILE cfile$
 ELSE 
   ON ERROR GOTO FStUnl150620001
   UNLOCK CURRENT FILE datei$
   UNLOCK FORM 
FStUnl150620001: 
   ON ERROR GOTO ErrorHandler
 END IF 
 REM CALL BMCheckMail()
 MOUSE ON 
 END SUB 
 
 
 ' Speichern fÅr Massenverarbeitung
 ' ======================================================================
 
SUB QuickStore(datei$)
 NUMBASE "0000000000"
 DATEBASE "0d.mm.yyyy"
 timestamp$ = DATE$ ( TODAY ,"yymmdd") + STR$ ( HRS ( NOW ) * 100 + MINS ( NOW ),"0000")
 timestamp% = VAL (timestamp$)
 IF MOD (datei$) OR NEW (datei$) THEN 
   _OK% = 0
   cfile$ = FILE 
   FILE datei$
   SELECT CASE UCASE$ (datei$)
   CASE "MAIL"
     codemaan% = codema.mail
     codemavon% = codemavon.mail
     SELECT FIRST FILE "supervis" INDEX codema.supervis
     SELECT KEY codemaan% FILE "supervis" INDEX codema.supervis
     EmpfÑnger.mail = name.supervis
   CASE "HORTUS"
     QBotName.Hortus = VSNRPack$(Botanische_Bez.Hortus)
     QDeuName.Hortus = VSNRPack$(Deutscher_Name.Hortus)
     QPflanzFamil.Hortus = VSNRPack$(Pflanzenfamilie.Hortus)
   CASE "VPRODUKT"
     QCodeGEVA.vprodukt = STR$ (CodeGE.vprodukt,"000000") + STR$ (Codeva.vprodukt,"000000")
     GesSpa.Vprodukt = Gesellschaft.vprodukt + Sparte.vprodukt
     CALL VFormelAusw()
   CASE "CONNECT"
     Workstation.CONNECT = Workstation%
     QWoNo.CONNECT = STR$ (Workstation%,"000000") + STR$ (CodeKey.CONNECT,"000000")
     RecStatus.CONNECT = "c"
   CASE "WARENART"
     Workstation.WARENART = Workstation%
     QWoNo.WARENART = STR$ (Workstation%,"000000") + STR$ (CodeWA.WARENART,"000000")
     RecStatus.WARENART = "c"
   CASE "DOKUMENT"
     darf% = 1
     IF MNdisabled%("DOCHIDDEN") THEN 
       IF LEFT$ (GDokname$,2) LIKE "zz" THEN 
       ELSE 
         IF LEFT$ (dokument.dokument,2) LIKE "zz" AND GDokname$ <> "" THEN 
           dokument.dokument = GDokname$
           darf% = 0
         END IF 
       END IF 
       IF GDokNovi% <> 1 THEN 
         IF novi1.dokument = 1 THEN 
           novi1.dokument = 0
           darf% = 0
         END IF 
       END IF 
       IF darf% = 0 THEN 
         CALL Fehler("Sie haben nicht die Berechtigung ein Dokument auf HIDDEN (UNSICHTBAR) zu setzen!","")
       END IF 
     END IF 
     Workstation.DOKUMENT = Workstation%
     QuickCodekuGru.dokument = STR$ (codeku.dokument,"000000") + Gruppe.dokument
     QWoNo.DOKUMENT = STR$ (Workstation%,"000000") + STR$ (CodeDOK.DOKUMENT,"000000")
     RecStatus.DOKUMENT = "c"
   CASE "LIEFRUCK"
     Workstation.LIEFRUCK = Workstation%
     QWoNo.LIEFRUCK = STR$ (Workstation%,"000000") + STR$ (CodeAR.LIEFRUCK,"000000")
     RecStatus.LIEFRUCK = "c"
   CASE "FLOSKEL"
     IF Kurztext.floskel = "" THEN 
       Kurztext.floskel = LEFT$ (floskel.floskel,100)
     END IF 
     Workstation.FLOSKEL = Workstation%
     QWoNo.FLOSKEL = STR$ (Workstation%,"000000") + STR$ (CodeFL.FLOSKEL,"000000")
     RecStatus.FLOSKEL = "c"
   CASE "KKOPIE"
     Workstation.KKOPIE = Workstation%
     QWoNo.KKOPIE = STR$ (Workstation%,"000000") + STR$ (CodeKO.KKOPIE,"000000")
     RecStatus.KKOPIE = "c"
   CASE "GRUPPEN"
     Workstation.GRUPPEN = Workstation%
     QWoNo.GRUPPEN = STR$ (Workstation%,"000000") + STR$ (CodeGR.GRUPPEN,"000000")
     RecStatus.GRUPPEN = "c"
     STORE FILE "GRUPPEN"
     IF novi1.gruppen = 1 THEN 
        REQUEST "Sollen die zur Gruppe gehîrenden Artikel ebenfalls als","NICHT MEHR ANZEIGEN gekennzeichnet werden?",130,req%
        IF req% = 1 THEN 
          MOUSE OFF 
          codegr% = codegr.gruppen
          FILE "ARTIKEL"
          UPDATE novi1 = 1 WHERE codegr.artikel = codegr%
          END UPDATE 
          MOUSE ON 
          REQUEST "énderung beendet!"
        END IF 
     END IF 
   CASE "ADRESSEN"
     REM GVorname$,GName$,GGebname$,GOrt$,GPLZ$,GStrasse$
     zero.adressen = 0
     QVorstand = VSNRPack$(Vorstand.adressen)
     QGeschf.adressen = VSNRPack$(Geschf.adressen)
     QNachname.adressen = VSNRPack$(nachname.adressen)
     QVorname.adressen = VSNRPack$(vorname.adressen)
     QOrt.adressen = VSNRPack$(Ort.adressen)
     QOrtsteil.adressen = VSNRPack$(Ortsteil.adressen)
     QStra·e.adressen = VSNRPack$(Stra·e.adressen)
     QPLZ.adressen = VSNRPack$(PLZ.adressen)
     QGeburtsname.adressen = VSNRPack$(Geburtsname.adressen)
     QMatchcode.adressen = VSNRPack$(Matchcode.adressen)
     Workstation.adressen = Workstation%
     QWoNo.adressen = STR$ (Workstation%,"000000") + STR$ (codeku.adressen,"000000")
     RecStatus.adressen = "c"
 
     IF NEW ("telefon") OR MOD ("telefon") THEN 
       IF art.telefon <> "" OR nummer.telefon <> "" THEN 
         IF codetel.telefon < 1 THEN CodeTEL.TELEFON = SER ("TELEFON",1)
         IF art.telefon = "" THEN art.telefon = "Telefon:"
         codeku.telefon = codeku.adressen
         Workstation.telefon = Workstation%
         QWoNo.telefon = STR$ (Workstation%,"000000") + STR$ (CodeTEL.TELEFON,"000000")
         RecStatus.telefon = "c"
         STORE FILE "TELEFON"
         UNLOCK CURRENT FILE "TELEFON"
         IF GImpExpAktiv% = 1 THEN 
           CALL ExpImpCOdie("TELEFON")
         END IF 
       END IF 
     END IF 
     MOUSE ON 
   CASE "EINZPROV"
     QuickMSSch.EINZPROV = STR$ (codems.EINZPROV,"000000") + STR$ (codesch.EINZPROV,"000000")
     QuickMSSchMA.EINZPROV = STR$ (codems.EINZPROV,"000000") + STR$ (codesch.EINZPROV,"000000") + STR$ (codema.EINZPROV,"000000")
     QuickMSMASch.EINZPROV = STR$ (codems.EINZPROV,"000000") + STR$ (codema.EINZPROV,"000000") + STR$ (codesch.EINZPROV,"000000")
     Workstation.EINZPROV = Workstation%
     QWoNo.EINZPROV = STR$ (Workstation%,"000000") + STR$ (CodeMS.EINZPROV,"000000")
     RecStatus.EINZPROV = "c"
   CASE "VERTRETE"
     Workstation.VERTRETE = Workstation%
     QWoNo.VERTRETE = STR$ (Workstation%,"000000") + STR$ (CodeMA.VERTRETE,"000000")
     RecStatus.VERTRETE = "c"
     codema% = CodeMA.VERTRETE
     STORE FILE "VERTRETE"
     MOUSE OFF 
     REM REQUEST "Anpassung des Name in ARTPROV","",2
     REM CALL DFile(3,"ARTPROV" + _fpw$)
     REM UPDATE name.artprov = name.vertrete WHERE codema.artprov = codema%
     REM END UPDATE 
     MOUSE ON 
   CASE "PROVISIO"
     Workstation.PROVISIO = Workstation%
     QWoNo.PROVISIO = STR$ (Workstation%,"000000") + STR$ (Codepr.PROVISIO,"000000")
     RecStatus.PROVISIO = "c"
   CASE "UMSATZ"
     Workstation.umsatz = Workstation%
     QWoNo.umsatz = STR$ (Workstation%,"000000") + STR$ (Codeum.umsatz,"000000")
     RecStatus.umsatz = "c"
   CASE "RAUSGANG"
     IF Nummer2.rausgang < 1 THEN 
       nummer2.rausgang = codems.rausgang
     END IF 
     IF summeteil.rausgang = 0 THEN 
       summeteil.rausgang = 0.00
     END IF 
     IF summeteileu.rausgang = 0 THEN 
       summeteileu.rausgang = 0.00
     END IF 
     IF Gesmahn.rausgang = 0 THEN 
       Gesmahn.rausgang = 0.00
     END IF 
     IF Gesmahneu.rausgang = 0 THEN 
       Gesmahneu.rausgang = 0.00
     END IF 
     IF Summemahn.rausgang = 0 THEN 
       summemahn.rausgang = 0.00
     END IF 
     IF Summemahneu.rausgang = 0 THEN 
       summemahneu.rausgang = 0.00
     END IF 
     Workstation.RAUSGANG = Workstation%
     QWoNo.RAUSGANG = STR$ (Workstation%,"000000") + STR$ (Codere.RAUSGANG,"000000")
     RecStatus.RAUSGANG = "c"
   CASE "REINGANG"
     IF Nummer2.REINGANG < 1 THEN 
       nummer2.REINGANG = codere.REINGANG
     END IF 
     Workstation.REINGANG = Workstation%
     QWoNo.REINGANG = STR$ (Workstation%,"000000") + STR$ (Codere.REINGANG,"000000")
     RecStatus.REINGANG = "c"
   CASE "TEILRAUS"
     Workstation.teilraus = Workstation%
     QWoNo.teilraus = STR$ (Workstation%,"000000") + STR$ (Codeteil.teilraus,"000000")
     RecStatus.teilraus = "c"
   CASE "KPRODUKT"
     IF codekprod.kprodukt < 1 THEN codekprod.kprodukt = SER ("Kprodukt",1)
     IF produktname.kprodukt = "" THEN produktname.kprodukt = "NEU"
     zero.kprodukt = 0
     IF codeku.kprodukt < 1 THEN codeku.kprodukt = codeku.adressen
     Workstation.kprodukt = Workstation%
     QWoNo.kprodukt = STR$ (Workstation%,"000000") + STR$ (codekprod.kprodukt,"000000")
     RecStatus.kprodukt = "c"
   CASE "PRODUKT"
     IF codeprod.produkt < 1 THEN codeprod.produkt = SER ("produkt",1)
     IF produktname.produkt = "" THEN produktname.produkt = "NEU"
     Workstation.produkt = Workstation%
     QWoNo.produkt = STR$ (Workstation%,"000000") + STR$ (codeprod.produkt,"000000")
     RecStatus.produkt = "c"
     zero.produkt = 0
   CASE "PRCONADR"
     QuickPRKU.prconadr = STR$ (codepr.prconadr,"000000") + Nachname.prconadr
     CodePRKU.prconadr = STR$ (codepr.prconadr,"000000") + STR$ (codeku.prconadr,"000000")
     Workstation.prconadr = Workstation%
     QWoNo.prconadr = STR$ (Workstation%,"000000") + STR$ (codepr.prconadr,"000000")
     RecStatus.prconadr = "c"
   CASE "WAEHRUNG"
     IF codew.waehrung = 1 THEN 
       CALL Fehler("Beachten Sie, da· Sie bei der WÑhrung DM nur den Umrechnungsfaktor und/oder den Kommaentar Ñndern dÅrfen!","")
       waehrung.waehrung = "DM"
     END IF 
     IF codew.waehrung < 1 THEN 
       codew.waehrung = SER ("waehrung",1)
       zero.waehrung = 0
     END IF 
     Workstation.waehrung = Workstation%
     QWoNo.waehrung = STR$ (Workstation%,"000000") + STR$ (codew.waehrung,"000000")
     RecStatus.waehrung = "c"
   CASE "MAHNUNG"
     kalkart.mahnung = 0
     euro1% = umrechnung.mahnung
     IF codemahn.mahnung < 1 THEN 
       codemahn% = SER ("Mahnung",1)
       codemahn.mahnung = codemahn%
     END IF 
     IF euromaske% = 1 THEN 
       mz1% = mahnz1.mahnung
       IF mahnz1eu.mahnung <> 0 THEN mahnz1.mahnung = mahnz1eu.mahnung * euro1% ELSE mahnz1.mahnung = 0
       IF mahnp1eu.mahnung <> 0 THEN mahnp1.mahnung = mahnp1eu.mahnung * euro1% ELSE mahnp1.mahnung = 0
       IF mahnz2eu.mahnung <> 0 THEN mahnz2.mahnung = mahnz2eu.mahnung * euro1% ELSE mahnz2.mahnung = 0
       IF mahnp2eu.mahnung <> 0 THEN mahnp2.mahnung = mahnp2eu.mahnung * euro1% ELSE mahnp2.mahnung = 0
       IF mahnz3eu.mahnung <> 0 THEN mahnz3.mahnung = mahnz3eu.mahnung * euro1% ELSE mahnz3.mahnung = 0
       IF mahnp3eu.mahnung <> 0 THEN mahnp3.mahnung = mahnp3eu.mahnung * euro1% ELSE mahnp3.mahnung = 0
       IF mahnz4eu.mahnung <> 0 THEN mahnz4.mahnung = mahnz4eu.mahnung * euro1% ELSE mahnz4.mahnung = 0
       IF mahnp4eu.mahnung <> 0 THEN mahnp4.mahnung = mahnp4eu.mahnung * euro1% ELSE mahnp4.mahnung = 0
       IF mahnz5eu.mahnung <> 0 THEN mahnz5.mahnung = mahnz5eu.mahnung * euro1% ELSE mahnz5.mahnung = 0
       IF mahnp5eu.mahnung <> 0 THEN mahnp5.mahnung = mahnp5eu.mahnung * euro1% ELSE mahnp5.mahnung = 0
     ELSE 
       IF mahnz1.mahnung <> 0 THEN mahnz1eu = mahnz1 / euro1% ELSE mahnz1eu = 0
       IF mahnp1.mahnung <> 0 THEN mahnp1eu = mahnp1 / euro1% ELSE mahnp1eu = 0
       IF mahnz2.mahnung <> 0 THEN mahnz2eu = mahnz2 / euro1% ELSE mahnz2eu = 0
       IF mahnp2.mahnung <> 0 THEN mahnp2eu = mahnp2 / euro1% ELSE mahnp2eu = 0
       IF mahnz3.mahnung <> 0 THEN mahnz3eu = mahnz3 / euro1% ELSE mahnz3eu = 0
       IF mahnp3.mahnung <> 0 THEN mahnp3eu = mahnp3 / euro1% ELSE mahnp3eu = 0
       IF mahnz4.mahnung <> 0 THEN mahnz4eu = mahnz4 / euro1% ELSE mahnz4eu = 0
       IF mahnp4.mahnung <> 0 THEN mahnp4eu = mahnp4 / euro1% ELSE mahnp4eu = 0
       IF mahnz5.mahnung <> 0 THEN mahnz5eu = mahnz5 / euro1% ELSE mahnz5eu = 0
       IF mahnp5.mahnung <> 0 THEN mahnp5eu = mahnp5 / euro1% ELSE mahnp5eu = 0
     END IF 
     mstufe% = 0
     IF MahnDatum1.mahnung > 0 THEN mstufe% = 1
     IF MahnDatum2.mahnung > 0 THEN mstufe% = 2
     IF MahnDatum3.mahnung > 0 THEN mstufe% = 3
     IF MahnDatum4.mahnung > 0 THEN mstufe% = 4
     IF MahnDatum5.mahnung > 0 THEN mstufe% = 5
     Mahnstufe.mahnung = mstufe%

     Workstation.mahnung = Workstation%
     QWoNo.mahnung = STR$ (Workstation%,"000000") + STR$ (codemahn.mahnung,"000000")
     RecStatus.mahnung = "c"
     STORE FILE "mahnung"
     codere% = codere.mahnung
     SELECT FIRST FILE "rausgang" INDEX codere.rausgang
     SELECT KEY codere% LOCK FILE "rausgang" INDEX codere.rausgang
     Mahnstufe.rausgang = mahnstufe.mahnung
     STORE FILE "rausgang"
   CASE "ORT"
     PLZOrt.ort = FN NUMERIC(PLZ.ort) + TRIM$ ( LTRIM$ (ort.ort))
     OrtPLZ.ort = TRIM$ ( LTRIM$ (ort.ort)) + FN NUMERIC(PLZ.ort)
   CASE "SERIENR"
     IF serienr.serienr <> "" THEN 
       codear.serienr = codear.artikel
       QuickARSER.serienr = STR$ (codear.serienr,"000000") + serienr.serienr
       QuickSerNumm.serienr = serienr.serienr + nummer.serienr
       IF codeser.serienr < 1 THEN codeser.serienr = SER ("serienr",1)
       Workstation.serienr = Workstation%
       QWoNo.serienr = STR$ (Workstation%,"000000") + STR$ (codeser.serienr,"000000")
       RecStatus.serienr = "c"
     END IF 
   CASE "TELEFON"
     IF MOD ("ADRESSEN") THEN 
       STORE FILE "ADRESSEN"
       UNLOCK CURRENT FILE "ADRESSEN"
       IF GImpExpAktiv% = 1 THEN 
         CALL ExpImpCOdie("ADRESSEN")
       END IF 
     END IF 
     IF art.telefon <> "" OR nummer.telefon <> "" THEN 
       IF codetel.telefon < 1 THEN CodeTEL.TELEFON = SER ("TELEFON",1)
       IF art.telefon = "" THEN art.telefon = "Telefon:"
       Qart.telefon = VSNRPack$(art.telefon)

       enumm$ = nummer.telefon
       cr$ = CHR$ (13) + CHR$ (10)
       ri% = ASC (cr$)
       ri1% = ASC ( RIGHT$ (enumm$,2))
       IF ri1% = 13 THEN 
         lenge% = LEN (enumm$) - 2
         nummer$ = MID$ (enumm$,1,lenge%)
       ELSE 
         nummer$ = enumm$
       END IF 
       nummer.telefon = nummer$

       Qnummer.telefon = VSNRPack$(nummer.telefon)
       codeku.telefon = codeku.adressen
       Workstation.telefon = Workstation%
       QWoNo.telefon = STR$ (Workstation%,"000000") + STR$ (CodeTEL.TELEFON,"000000")
       RecStatus.telefon = "c"
     ELSE 
       ok% = 0
     END IF 
     MOUSE ON 
   CASE "ABZUGANG"
     Workstation.ABZUGANG = Workstation%
     QWoNo.ABZUGANG = STR$ (Workstation%,"000000") + STR$ (CodeAZ.ABZUGANG,"000000")
     RecStatus.ABZUGANG = "c"
     QuickCodeAR.ABZUGANG = Art.ABZUGANG * 1000000 + CodeAR.ABZUGANG
 
   CASE "AKTIONEN"
     IF MemberOf.AKTIONEN = "" THEN MemberOf.AKTIONEN = STR$ (CodeAK.AKTIONEN,"000000")
     Workstation.AKTIONEN = Workstation%
     QWoNo.AKTIONEN = STR$ (Workstation%,"000000") + STR$ (CodeAK.AKTIONEN,"000000")
     RecStatus.AKTIONEN = "c"
     IF GAktion$ <> Bezeichnung.aktionen THEN 
       STORE FILE "aktionen"
       REM CALL Fehler("Es werden jetzt die Termine, die diese Aktion beinhalten an den neuen Namen der Aktion angepasst!","Dies kann einige Minuten dauern!")
       GAktion$ = Bezeichnung.aktionen
       codeak% = codeak.aktionen
       FILE "akquiseb"
       MOUSE OFF 
       UPDATE Aktion.GAkquiDat$ = GAktion$ WHERE codeak.GAkquiDat$ = codeak%
       END UPDATE 
       CLOSE FILE "akquiseb"
       CALL DFile(2,"OFFICE\akquiseb" + _fpw$)
       FILE "akquise"
       MOUSE OFF 
       UPDATE Aktion.GAkquiDat$ = GAktion$ WHERE codeak.GAkquiDat$ = codeak%
       END UPDATE 
       CLOSE FILE "akquise"
       CALL DFile(2,"OFFICE\akquise" + _fpw$)
       MOUSE ON 
       GAktion$ = ""
       SET STATUS "alle Termine angepasst"
       FILE "aktionen"
     END IF 
   CASE "AKQUISE"
     IF erledigt_Termin.GAkquiDat$ = "" THEN erledigt_Termin.GAkquiDat$ = "n"
     IF PAGE = 3 AND LTRIM$ (EMAILTO.GAkquiDat$) <> "" AND emailraus.GAkquiDat$ <> "j" THEN 
       fehl$ = ""
       IF LTRIM$ (emailcc.GAkquiDat$) <> "" THEN 
         IF RIGHT$ (emailcc.GAkquiDat$,1) <> ":" THEN 
           emailcc.GAkquiDat$ = emailcc.GAkquiDat$ + ":"
         END IF 
       END IF 
       IF LTRIM$ (emailbcc.GAkquiDat$) <> "" THEN 
         IF RIGHT$ (emailbcc.GAkquiDat$,1) <> ":" THEN 
           emailbcc.GAkquiDat$ = emailbcc.GAkquiDat$ + ":"
         END IF 
       END IF 
       IF LTRIM$ (EMAILBETREFF.GAkquiDat$) = "" THEN 
         fehl$ = "Wenn die EMAIL versandt werden soll MUSS die Betreff-Zeile ausgefÅllt werden!" + CHR$ (13) + CHR$ (10)
       END IF 
       IF ErDatum.GAkquiDat$ < 1 THEN 
         fehl$ = fehl$ + "ACHTUNG der Vorlagetermin mu· eingetragen werden, wenn die EMAIL automatisch versandt werden soll!"
       END IF 
       IF fehl$ <> "" THEN CALL Fehler(fehl$,"")
     END IF 
     IF EMAILAutomat.GAkquiDat$ <> "j" AND EMAILRAUS.GAkquiDat$ <> "j" AND andimist$ = "YES" THEN 
       IF GEMAILRAUS$ <> EMAILRAUS.GAkquiDat$ THEN 
         IF GEMAILRAUS$ = "" OR GEMAILRAUS$ = "n" THEN 
           EMAILSendDat.GAkquiDat$ = TODAY 
           EMAILSendZeit.GAkquiDat$ = NOW 
           SELECT KEY FIRST FILE "supervis" INDEX codema.supervis
           SELECT KEY GMACodema% FILE "supervis" INDEX codema.supervis
           text1$ = DATE$ (EMAILSendDat.GAkquiDat$,"0d.mm.yyyy") + " " + TIME$ (EMAILSendZeit.GAkquiDat$,"hh:mm") + " EMAIL wurde per Hand von " + name.supervis + " als erledigt gekennzeichnet, "
           text2$ = "aber nicht gesendet!"
           ergebnis.GAkquiDat$ = LEFT$ (ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
           erledigt_Termin.GAkquiDat$ = "j"
           EMAILRAUS.GAkquiDat$ = "j"
           GEMAILRAUS$ = "j"
         ELSE 
           EMAILSendDat.GAkquiDat$ = 0
           EMAILSendZeit.GAkquiDat$ = 0
           SELECT KEY GMACodema% FILE "supervis" INDEX codema.supervis
           text1$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm") + " EMAIL wurde per Hand von " + name.supervis + " als NICHT erledigt gekennzeichnet, "
           text2$ = "aber nicht gesendet!"
           REM ergebnis.GAkquiDat$ = LEFT$ (ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
         END IF 
       END IF 
     END IF 
     STORE FILE GAkquiDat$
     UNLOCK CURRENT FILE GAkquiDat$
     codeaq% = codeaq.GAkquiDat$
     CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
     IF erledigt_termin.GAkquiDat$ <> "j" AND ErDatum.GAkquiDat$ > 0 AND ErDatum.GAkquiDat$ >= TODAY THEN 
       IF NOT EXISTS (codeaq%,codeaq.tvorlage) THEN 
         BLANK FILE "TVORLAGE"
         CodeTV.TVORLAGE = SER ("TVORLAGE",1)
         emailraus.tvorlage = emailraus.GAkquiDat$
         codeaq.TVORLAGE = codeaq.GAkquiDat$
         codema.TVORLAGE = codema.GAkquiDat$
         Termin.TVORLAGE = termin.GAkquiDat$
         Uhrzeit.TVORLAGE = Uhrzeit.GAkquiDat$
         Datum.TVORLAGE = ERDATUM.GAkquiDat$
         Zeit.TVORLAGE = ErZeit.GAkquiDat$
         Notiz.TVORLAGE = Notiz.GAkquiDat$
         Ergebnis.TVORLAGE = Ergebnis.GAkquiDat$
         Nachname.TVORLAGE = Nachname.GAkquiDat$
         Bearbeiter.TVORLAGE = Bearbeiter.GAkquiDat$
         erledigt_Termin.tvorlage = erledigt_termin.GAkquiDat$
         DTVorlage.TVORLAGE = STR$ (CodeMA.GAkquiDat$,"000000") + DATE$ (ErDatum.GAkquiDat$,"yyyymm0d") + TIME$ (ErZeit.GAkquiDat$,"hhmm")
         Workstation.TVORLAGE = Workstation%
         QWoNo.TVORLAGE = STR$ (Workstation%,"000000") + STR$ (CodeTV.TVORLAGE,"000000")
         RecStatus.TVORLAGE = "c"
         STORE FILE "TVORLAGE"
         UNLOCK CURRENT FILE "TVORLAGE"
         IF GImpExpAktiv% = 1 THEN 
           CALL ExpImpCOdie("TVORLAGE")
         END IF 
       ELSE 
         SELECT KEY codeaq% LOCK FILE "TVORLAGE" INDEX codeaq.tvorlage
         emailraus.tvorlage = emailraus.GAkquiDat$
         codema.TVORLAGE = codema.GAkquiDat$
         Termin.TVORLAGE = termin.GAkquiDat$
         Uhrzeit.TVORLAGE = Uhrzeit.GAkquiDat$
         Datum.TVORLAGE = ERDATUM.GAkquiDat$
         Zeit.TVORLAGE = ErZeit.GAkquiDat$
         Notiz.TVORLAGE = Notiz.GAkquiDat$
         Ergebnis.TVORLAGE = Ergebnis.GAkquiDat$
         Nachname.TVORLAGE = Nachname.GAkquiDat$
         Bearbeiter.TVORLAGE = Bearbeiter.GAkquiDat$
         erledigt_Termin.tvorlage = erledigt_termin.GAkquiDat$
         DTVorlage.TVORLAGE = STR$ (CodeMA.GAkquiDat$,"000000") + DATE$ (ErDatum.GAkquiDat$,"yyyymm0d") + TIME$ (ErZeit.GAkquiDat$,"hhmm")
         Workstation.TVORLAGE = Workstation%
         QWoNo.TVORLAGE = STR$ (Workstation%,"000000") + STR$ (CodeTV.TVORLAGE,"000000")
         RecStatus.TVORLAGE = "c"
         STORE FILE "TVORLAGE"
         UNLOCK CURRENT FILE "TVORLAGE"
         IF GImpExpAktiv% = 1 THEN 
           CALL ExpImpCOdie("TVORLAGE")
         END IF 
       END IF 
     ELSE 
       IF erledigt_termin.GAkquiDat$ LIKE "j" THEN 
         IF EXISTS (codeaq.GAkquiDat$,codeaq.tvorlage) THEN 
           codeaq% = codeaq.GAkquiDat$
           REMOVE FROM FILE "Tvorlage" WHERE codeaq.tvorlage = Codeaq%
           CALL DFile(2,"OFFICE\adrterm" + _fpw$)
         END IF 
       END IF 
     END IF 
     IF ErDatum.GAkquiDat$ < 1 AND EXISTS (codeaq%,codeaq.tvorlage) THEN 
       SELECT FIRST FILE "tvorlage" INDEX codeaq.tvorlage
       SELECT KEY codeaq% LOCK FILE "tvorlage" INDEX codeaq.tvorlage
       SELECT REMOVE FILE "tvorlage"
     END IF 
     SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
     IF aqbearb$ = "j" THEN 
       IF termin.GAkquiDat$ < TODAY THEN CALL Fehler("ACHTUNG der Termin den Sie eingegeben haben ist kleiner als das aktuelle Datum!","")
     END IF 
     aqbearb$ = "n"
     IF codema.GAkquiDat$ < 1 THEN 
       IF bearbeiter.GAkquiDat$ <> "" THEN 
         IF EXISTS (bearbeiter.GAkquiDat$,nachname.supervis) THEN 
           SELECT KEY bearbeiter.GAkquiDat$ FILE "Supervis" INDEX nachname.supervis
           codema.GAkquiDat$ = codema.supervis
           STORE FILE GAkquiDat$
           UNLOCK CURRENT FILE GAkquiDat$
           SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           IF GImpExpAktiv% = 1 THEN 
             CALL ExpImpCOdie(GAkquiDat$)
           END IF 
         END IF 
       END IF 
     END IF 
     IF NOT OPEN ("aktionen") THEN CALL DFile(2,"OFFICE\aktionen" + _fpw$)
     SELECT FIRST FILE "aktionen" INDEX codeak.aktionen
     SELECT KEY codeak.GAkquiDat$ FILE "aktionen" INDEX codeak.aktionen
     Aktion.GAkquiDat$ = Bezeichnung.aktionen
     QuickCodeMA.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (CodeMA.GAkquiDat$,"000000")
     QuickCodeMAZ.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (CodeMA.GAkquiDat$,"000000") + TIME$ (Uhrzeit.GAkquiDat$,"hhmm")
     QuickCodeKU.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (CodeKU.GAkquiDat$,"000000")
     QuickCodeAK.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (CodeAK.GAkquiDat$,"000000")
     QuickAKMA.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (codeak.GAkquiDat$,"000000") + STR$ (CodeMA.GAkquiDat$,"000000")
     CodeAKMA.GAkquiDat$ = STR$ (codeak.GAkquiDat$,"000000") + STR$ (CodeMA.GAkquiDat$,"000000")
     QuickKUDat.GAkquiDat$ = STR$ (CodeKU.GAkquiDat$,"000000") + UCASE$ (erledigt_Termin.GAkquiDat$) + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickMADat.GAkquiDat$ = STR$ (CodeMA.GAkquiDat$,"000000") + UCASE$ (erledigt_Termin.GAkquiDat$) + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickAKDat.GAkquiDat$ = STR$ (CodeAK.GAkquiDat$,"000000") + UCASE$ (erledigt_Termin.GAkquiDat$) + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickAKMADat.GAkquiDat$ = STR$ (codeak.GAkquiDat$,"000000") + STR$ (CodeMA.GAkquiDat$,"000000") + UCASE$ (erledigt_Termin.GAkquiDat$) + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickKuDatDiff.GAkquiDat$ = codeku.GAkquiDat$ * 1000000 + (1000000 - DAYS (termin.GAkquiDat$))
     IF codepr.GAkquiDat$ > 0 THEN 
       QuickPRDatDiff.GAkquiDat$ = codepr.GAkquiDat$ * 1000000 + (1000000 - DAYS (termin.GAkquiDat$))
     END IF 
     REM 221098 neu
     QuickAKTer.GAkquiDat$ = STR$ (CodeAK.GAkquiDat$,"000000") + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickMATer.GAkquiDat$ = STR$ (CodeMA.GAkquiDat$,"000000") + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickKUTer.GAkquiDat$ = STR$ (CodeKU.GAkquiDat$,"000000") + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickAKMATer.GAkquiDat$ = STR$ (codeak.GAkquiDat$,"000000") + STR$ (CodeMA.GAkquiDat$,"000000") + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     Workstation.GAkquiDat$ = Workstation%
     QWoNo.GAkquiDat$ = STR$ (Workstation%,"000000") + STR$ (CodeAQ.GAkquiDat$,"000000")
     RecStatus.GAkquiDat$ = "c"
     CALL DFile(2,"OFFICE\aktionen" + _fpw$)
     SELECT KEY CodeAK.GAkquiDat$ FILE "aktionen" INDEX CodeAK.aktionen
     MemberOf.GAkquiDat$ = MemberOf.aktionen

   CASE "AKQUISEB"
     IF NOT OPEN ("aktionen") THEN CALL DFile(2,"OFFICE\aktionen" + _fpw$)
     SELECT FIRST FILE "aktionen" INDEX codeak.aktionen
     SELECT KEY codeak.GAkquiDat$ FILE "aktionen" INDEX codeak.aktionen
     Aktion.GAkquiDat$ = Bezeichnung.aktionen
     QuickCodeMA.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (CodeMA.GAkquiDat$,"000000")
     QuickCodeMAZ.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (CodeMA.GAkquiDat$,"000000") + TIME$ (Uhrzeit.GAkquiDat$,"hhmm")
     QuickCodeKU.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (CodeKU.GAkquiDat$,"000000")
     QuickCodeAK.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (CodeAK.GAkquiDat$,"000000")
     QuickAKMA.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (codeak.GAkquiDat$,"000000") + STR$ (CodeMA.GAkquiDat$,"000000")
     CodeAKMA.GAkquiDat$ = STR$ (codeak.GAkquiDat$,"000000") + STR$ (CodeMA.GAkquiDat$,"000000")
     QuickKUDat.GAkquiDat$ = STR$ (CodeKU.GAkquiDat$,"000000") + UCASE$ (erledigt_Termin.GAkquiDat$) + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickMADat.GAkquiDat$ = STR$ (CodeMA.GAkquiDat$,"000000") + UCASE$ (erledigt_Termin.GAkquiDat$) + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickAKDat.GAkquiDat$ = STR$ (CodeAK.GAkquiDat$,"000000") + UCASE$ (erledigt_Termin.GAkquiDat$) + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickAKMADat.GAkquiDat$ = STR$ (codeak.GAkquiDat$,"000000") + STR$ (CodeMA.GAkquiDat$,"000000") + UCASE$ (erledigt_Termin.GAkquiDat$) + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickKuDatDiff.GAkquiDat$ = codeku.GAkquiDat$ * 1000000 + (1000000 - DAYS (termin.GAkquiDat$))
     IF codepr.GAkquiDat$ > 0 THEN 
       QuickPRDatDiff.GAkquiDat$ = codepr.GAkquiDat$ * 1000000 + (1000000 - DAYS (termin.GAkquiDat$))
     END IF 
     REM 221098 neu
     QuickAKTer.GAkquiDat$ = STR$ (CodeAK.GAkquiDat$,"000000") + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickMATer.GAkquiDat$ = STR$ (CodeMA.GAkquiDat$,"000000") + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickKUTer.GAkquiDat$ = STR$ (CodeKU.GAkquiDat$,"000000") + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickAKMATer.GAkquiDat$ = STR$ (codeak.GAkquiDat$,"000000") + STR$ (CodeMA.GAkquiDat$,"000000") + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     Workstation.GAkquiDat$ = Workstation%
     QWoNo.GAkquiDat$ = STR$ (Workstation%,"000000") + STR$ (CodeAQ.GAkquiDat$,"000000")
     RecStatus.GAkquiDat$ = "c"
     CALL DFile(2,"OFFICE\aktionen" + _fpw$)
     SELECT KEY CodeAK.GAkquiDat$ FILE "aktionen" INDEX CodeAK.aktionen
     MemberOf.GAkquiDat$ = MemberOf.aktionen
   CASE "ARTIKEL"
     IF _projekt$ LIKE "FACTURA" THEN 
       IF CodeAR.artikel < 1 THEN codeAR.artikel = SER ("artikel",1)
       QuickGRBez.artikel = STR$ (CodeGR.artikel,"000000") + LEFT$ ( TRIM$ (Bezeichnung.artikel),20)
       QuickGRArtnr.artikel = STR$ (CodeGR.artikel,"000000") + LEFT$ ( TRIM$ (Artikelnummer.artikel),20)
       QuickLiefBez.artikel = STR$ (Lieferant.artikel,"000000") + LEFT$ ( TRIM$ (Bezeichnung.artikel),20)
       QuickLiefArtnr.artikel = STR$ (Lieferant.artikel,"000000") + LEFT$ ( TRIM$ (Artikelnummer.artikel),20)
       IF InventurPreis.artikel = 0 THEN InventurPreis.artikel = ek.artikel
     END IF 
     IF _projekt$ LIKE "WAWI" THEN 
       IF MOD ("artikel") AND SatzstatusNC.artikel = "u" THEN SatzstatusNC.artikel = "c"
       IF NEW ("artikel") THEN SatzstatusNC.artikel = "n"
       QuickCodeArt.artikel = bestellnummer.artikel + STR$ (Lieferant.artikel,"000000")
       QuickCoLiefD.artikel = STR$ (Lieferant.artikel,"000000") + DATE$ (letzteLieferung.artikel,"ddmmyy")
       geseinkauf% = ek.artikel + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel
       VKNetto.artikel = geseinkauf%
       VKBrutto.artikel = VKNetto.artikel + (VKNetto.artikel * Mwst.artikel / 100)
       SatzStatusTrans.artikel = "n"
       Artikelnummer.artikel = LTRIM$ ( STR$ (Artikelcode.artikel,"9999999999"))
       LieferEK.artikel = EK.artikel
       QuickLiefBes.artikel = STR$ (Lieferant.artikel,"000000") + Bestellnummer.artikel
       QuickLiefArtc.artikel = STR$ (Lieferant.artikel,"000000") + STR$ (Artikelcode.artikel,"9999999999")
       Bestand.artikel = lagerbestand.artikel + bestand01.artikel + bestand02.artikel + bestand03.artikel + bestand04.artikel + bestand05.artikel + bestand06.artikel + bestand07.artikel + bestand08.artikel + bestand09.artikel
     END IF 
     Workstation.Artikel = Workstation%
     QWoNo.Artikel = STR$ (Workstation%,"000000") + STR$ (CodeAR.Artikel,"000000")
     RecStatus.Artikel = "c"
   CASE "BILDER"
     IF _projekt$ <> "HORTUS" THEN 
       QuickCode.BILDER = STR$ (ApplID.BILDER,"000000") + STR$ (topic.BILDER,"000000") + STR$ (link.BILDER,"000000")
     END IF 
   CASE "KOMBI"
     QuickCode.KOMBI = CodeKO.KOMBI * 1000000 + CodeAR.KOMBI
     Workstation.KOMBI = Workstation%
     QWoNo.KOMBI = STR$ (Workstation%,"000000") + STR$ (CodeKO.KOMBI,"000000")
     RecStatus.KOMBI = "c"
   CASE "ARTPROV"
     IF codeprov.artprov < 1 THEN codeprov.artprov = SER ("artprov",1)
     Quickarma.artprov = STR$ (codear.artprov,"000000") + STR$ (Codema.artprov,"000000")
     Workstation.artprov = Workstation%
     QWoNo.artprov = STR$ (Workstation%,"000000") + STR$ (codeprov.artprov,"000000")
     RecStatus.artprov = "c"
   CASE "MASTER"
     QuickCodeKU.MASTER = CodeKU.MASTER * 10 + Art.MASTER
     IF kalkart.master > 1 THEN 
       kalkart.master = 0
       rabattart.master = 0
     END IF 
     IF rabattart.master > 1 THEN 
       kalkart.master = 0
       rabattart.master = 0
     END IF 
     KTit$ = ""
     SELECT CASE msart%
     CASE 1
       KTit$ = KAng.stamm
     CASE 2
       KTit$ = KRech.stamm
     CASE 3
       KTit$ = KLief.stamm
     CASE 4
       KTit$ = KAuft.stamm
     CASE 5
       KTit$ = KBest.stamm
     CASE 7
       KTit$ = KGut.stamm
     CASE 8
       KTit$ = KAnfr.stamm
     END SELECT 
     IF nummer.master = "" THEN 
       IF BelegNrArt.stamm = 0 THEN 
         nummerok$ = "False"
         WHILE nummerok$ = "False"
           td$ = DATE$ ( TODAY ,"ddmmyy")
           td2$ = ReadConfig$("FACTURA","TODAY")
           IF td$ <> td2$ THEN 
             CALL WriteConfig("FACTURA","TODAY",td$)
             CALL WriteConfig("FACTURA","LASTNUM","1")
             nnum% = 1
           ELSE 
             nnum% = VAL (ReadConfig$("FACTURA","LASTNUM")) + 1
             CALL WriteConfig("FACTURA","LASTNUM", LTRIM$ ( STR$ (nnum%,"9999")))
           END IF 
           IF KTit$ = "" THEN 
             numm1$ = LEFT$ (msart$,1) + DATE$ ( TODAY ,"ddmmyy") + STR$ (nnum%,"000")
           ELSE 
             numm1$ = KTit$ + DATE$ ( TODAY ,"ddmmyy") + STR$ (nnum%,"000")
           END IF 
           IF NOT EXISTS (numm1$,nummer.master) THEN nummerok$ = "True"
           Nummer.master = numm1$
           Nummer2.master = VAL ( DATE$ ( TODAY ,"yyyymmdd") + STR$ (nnum%,"000"))
         WEND 
       END IF 
       IF BelegNrArt.stamm > 0 THEN 
         nummerok$ = "False"
         WHILE nummerok$ = "False"
           SELECT CASE MSart%
           CASE 1
             SELECT FIRST LOCK FILE "stamm"
             LASTAngebot.stamm = LASTAngebot.stamm + 1
             nnum% = LASTAngebot.stamm
             STORE FILE "stamm"
             UNLOCK CURRENT FILE "stamm"
           CASE 2
             SELECT FIRST LOCK FILE "stamm"
             LASTRechnung.stamm = LASTRechnung.stamm + 1
             nnum% = LASTRechnung.stamm
             STORE FILE "stamm"
             UNLOCK CURRENT FILE "stamm"
           CASE 3
             SELECT FIRST LOCK FILE "stamm"
             LASTLieferschei.stamm = LASTLieferschei.stamm + 1
             nnum% = LASTLieferschei.stamm
             STORE FILE "stamm"
             UNLOCK CURRENT FILE "stamm"
           CASE 4
             SELECT FIRST LOCK FILE "stamm"
             LASTAuftrag.stamm = LASTAuftrag.stamm + 1
             nnum% = LASTAuftrag.stamm
             STORE FILE "stamm"
             UNLOCK CURRENT FILE "stamm"
           CASE 5
             SELECT FIRST LOCK FILE "stamm"
             LASTBestellung.stamm = LASTBestellung.stamm + 1
             nnum% = LASTBestellung.stamm
             STORE FILE "stamm"
             UNLOCK CURRENT FILE "stamm"
           CASE 7
             SELECT FIRST LOCK FILE "stamm"
             LASTGutschrift.stamm = LASTGutschrift.stamm + 1
             nnum% = LASTGutschrift.stamm
             STORE FILE "stamm"
             UNLOCK CURRENT FILE "stamm"
           CASE 8
             SELECT FIRST LOCK FILE "stamm"
             LASTAnfrage.stamm = LASTAnfrage.stamm + 1
             nnum% = LASTAnfrage.stamm
             STORE FILE "stamm"
             UNLOCK CURRENT FILE "stamm"
           END SELECT 
           
           IF BelegNrArt.stamm = 2 THEN 
             IF KTit$ <> "" THEN 
               numm1$ = KTit$ + LTRIM$ ( STR$ (nnum%,"99999999999999"))
             ELSE 
               IF msart% <> 8 THEN 
                 numm1$ = LEFT$ (msart$,1) + LTRIM$ ( STR$ (nnum%,"99999999999999"))
               ELSE 
                 numm1$ = LEFT$ "EPA" + LTRIM$ ( STR$ (nnum%,"99999999999999"))
               END IF 
             END IF 
             Nummer2.master = nnum%
           END IF 
           IF BelegNrArt.stamm = 1 THEN 
             IF KTit$ <> "" THEN 
               numm1$ = KTit$ + DATE$ ( TODAY ,"ddmmyy") + "000/" + LTRIM$ ( STR$ (nnum%,"99999999999999"))
             ELSE 
               IF msart% <> 8 THEN 
                 numm1$ = LEFT$ (msart$,1) + DATE$ ( TODAY ,"ddmmyy") + "000/" + LTRIM$ ( STR$ (nnum%,"99999999999999"))
               ELSE 
                 numm1$ = "EPA" + DATE$ ( TODAY ,"ddmmyy") + "000/" + LTRIM$ ( STR$ (nnum%,"99999999999999"))
               END IF 
             END IF 
             Nummer2.master = nnum%
           END IF 
           IF NOT EXISTS (numm1$,nummer.master) THEN nummerok$ = "True"
           Nummer.master = numm1$
         WEND 
       END IF 
       IF defa$ = "MEGA" THEN 
         Nummer1$ = LEFT$ (msart$,1) + stationsnr$ + LEFT$ ( DATE$ ( TODAY ,"ddmmyy"),4) + STR$ (nnum%,"000")
         Nummer.master = nummer1$
       END IF 
     END IF 
     IF Nummer2.master < 1 THEN 
       nummer2.master = codems.master
     END IF 
     SELECT FIRST FILE "adressen" INDEX codeku.adressen
     codietest% = codeku.master
     SELECT KEY codeku.master FILE "adressen" INDEX codeku.adressen
     ustno.master = ustno.adressen
     IF Mahnsperre.adressen LIKE "j" THEN 
       Mahnsperre.master = Mahnsperre.adressen
       MahnsperBisdat.master = MahnsperBisdat.adressen
     END IF 
     IF EXISTS (codems.master,codems.rausgang) THEN 
       SELECT FIRST FILE "rausgang" INDEX codems.rausgang
       SELECT KEY codems.master LOCK FILE "rausgang" INDEX codems.rausgang
       TeilErlaubt.rausgang = TeilErlaubt.master
       Nummer2.rausgang = Nummer2.master
       Mahnsperre.rausgang = Mahnsperre.master
       MahnsperBisdat.rausgang = MahnsperBisdat.master
       IF GutschriftJN.rausgang LIKE "J" THEN 
         buchnrre.rausgang = buchnrre.master
       END IF 
       STORE FILE "rausgang"
     END IF 
     aaart% = art.master
     IF aaart% <> 1 THEN 
       IF EXISTS (codems.master,codems.mahnung) THEN 
         SELECT FIRST FILE "mahnung" INDEX codems.mahnung
         SELECT KEY codems.master LOCK FILE "mahnung" INDEX codems.mahnung
         Mahnsperre.mahnung = Mahnsperre.master
         MahnsperBisdat.mahnung = MahnsperBisdat.master
         STORE FILE "mahnung"
       END IF 
     END IF 
     IF Nummer.MASTER = "" THEN 
       _OK% = - 1
     ELSE 
       Workstation.MASTER = Workstation%
       QWoNo.MASTER = STR$ (Workstation%,"000000") + STR$ (codems.MASTER,"000000")
       RecStatus.MASTER = "c"
     END IF 
     IF art.master = 1 OR art.master = 4 OR art.master = 8 THEN 
       IF EXISTS (codems.master,codems.abzugang) THEN 
         SELECT FIRST FILE "abzugang" INDEX codems.abzugang
         SELECT KEY codems.master LOCK FILE "abzugang" INDEX codems.abzugang
         erledigt.abzugang = erledigt.master
         erledigtdatum.abzugang = erledigtdatum.master
         erledigtDatBis.abzugang = erledigtDatBis.master
         gebustor.abzugang = gebustor.master
         STORE FILE "abzugang"
       END IF 
     END IF 
     Hinweis$ = "Bitte geben Sie erst eine Nummer ein."
    CASE "SCHEIN"
     QuickCodePos.SCHEIN = CodeMS.SCHEIN * 1000 + PosNr.SCHEIN
     Workstation.Schein = Workstation%
     QWoNo.Schein = STR$ (Workstation%,"000000") + STR$ (codesch.Schein,"000000")
     RecStatus.Schein = "c"
  
   CASE "VERLEIH"
     QuickCodeKU.VERLEIH = DATE$ (datum.VERLEIH,"yymmdd") + STR$ (CodeKU.VERLEIH,"000000")
     Workstation.Verleih = Workstation%
     QWoNo.Verleih = STR$ (Workstation%,"000000") + STR$ (codeVl.Verleih,"000000")
     RecStatus.Verleih = "c"
   CASE "KUKTO"
     QuickCode.KUKTO = STR$ (CodeVT.KUKTO,"000000") + DATE$ (FÑlligkeit.KUKTO,"yyyymm0d")
     QuickCodeKU.KUKTO = STR$ (CodeKU.KUKTO,"000000") + DATE$ (FÑlligkeit.KUKTO,"yyyymm0d")
     QuickVSNR.KUKTO = VSNRPack$(VS_Nr.KUKTO)
     QVTDat.kukto = STR$ (Codevt.kukto,"000000") + DATE$ (FÑlligkeit.kukto,"yyyymm0d")
     zero.KuKto = 0
     Workstation.KUKTO = Workstation%
     QWoNo.KUKTO = STR$ (Workstation%,"000000") + STR$ (codeKUKO.KUKTO,"000000")
     RecStatus.KUKTO = "c"
   CASE "VERMOEG"
     QuickCodeRKU.vermoeg = STR$ (CodeRKU.vermoeg,"000000") + DATE$ (gezahltam.vermoeg,"yyyymm0d")
     QuickCodeKU.vermoeg = STR$ (CodeKU.vermoeg,"000000") + DATE$ (gezahltam.vermoeg,"yyyymm0d")
     zero.vermoeg = 0
     IF codeRku.vermoeg > 0 THEN 
       sh.vermoeg = "S"
     ELSE 
       sh.vermoeg = "H"
     END IF 
     Workstation.vermoeg = Workstation%
     QWoNo.vermoeg = STR$ (Workstation%,"000000") + STR$ (codeverm.vermoeg,"000000")
     RecStatus.vermoeg = "c"
   CASE "PROJECT"
     IF Grundwasser <> "J" THEN Grundwasser = "N"
     IF Wasserhaltung <> "J" THEN Wasserhaltung = "N"
     IF offeneBaugrube <> "J" THEN offeneBaugrube = "N"
     IF Altlasten <> "J" THEN Altlasten = "N"
     IF keller <> "J" THEN keller = "N"
     letzte_Bearb = TODAY 
     Workstation.project = Workstation%
     QWoNo.project = STR$ (Workstation%,"000000") + STR$ (codepr.project,"000000")
     RecStatus.project = "c"
   END SELECT 
   IF MOD (datei$) THEN 
     TimeStamp = TimeStamp%
     IF abbruch% <> - 1 THEN 
       STORE FILE datei$
       UNLOCK CURRENT FILE datei$
       ON ERROR GOTO Unl150620001
       UNLOCK FILE datei$ ALL 
       UNLOCK FORM 
Unl150620001: 
     ON ERROR GOTO ErrorHandler
     ELSE 
       abbruch% = 0
     END IF 
     IF GImpExpAktiv% = 1 THEN 
       CALL ExpImpCOdie(datei$)
     END IF 
   ELSE 
       ON ERROR GOTO Unl150620002
       UNLOCK CURRENT FILE datei$
       UNLOCK FILE datei$ ALL 
       UNLOCK FORM 
Unl150620002: 
     ON ERROR GOTO ErrorHandler 
   END IF 
   FILE cfile$
 END IF 
 MOUSE ON 
 END SUB 
 
 
 
 ' MStore
 ' ======================================================================
 ' Zweck:       gleiche Funktion wie FStore jedoch als MenÅaufruf ver-
 '              wendbar
 ' Hinweis:     Prozedur gilt nur fÅr aktuelle Datei
 ' ======================================================================
 ' 0000/10.01.93   
 
SUB MStore()
 CALL FStore( FILE )
 END SUB 
 
 
 ' ClearFile
 ' ======================================================================
 ' Zweck:       lîscht alle DatensÑtze einer Datei
 ' Aufruf:      CALL ClearFile(datei$)
 ' Parameter:   datei$  = Datei deren Inhalt gelîscht werden soll
 ' ======================================================================
 
SUB ClearFile(cldatei$)
 MOUSE OFF 
 cfile$ = FILE 
 REMOVE FROM FILE cldatei$
 FILE cfile$
 MOUSE ON 
 END SUB 
 
 
 ' DateOK%
 ' ======================================================================
 ' Zweck:       prÅft Variable auf korrektes Datum
 ' Aufruf:      if DateOK%(datvar$) then ...
 ' Parameter:   datvar$  = Variable mit zu prÅfendem Datum
 ' RÅckgabe:    -1 : Datum OK
 '              0  : Datumsformat fehlerhaft
 ' ======================================================================
 
FUNCTION DateOK%(datvar$)
 ON ERROR GOTO FalseDate
 _dateok% = 0
 _testdays% = DAYS (datvar$)
 _dateok% = - 1
FalseDate: 
 CLEAR ERRNO 
 IF GTest% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
 DateOK% = _dateok%
 END FUNCTION 
 
 
 '      **************************************
 '      ** Routinen fÅr Netzwerknachrichten **
 '      **************************************
 
 ' NETMAIL
 ' ======================================================================
 ' Zweck:       Nachrichten zwischen Mitarbeitern versenden
 ' Nutzung:     CALL NetMail()
 ' ======================================================================
 
SUB NetMailOld()
 IF disabled%("NETMAIL") THEN END SUB 
 CALL DFile(2,"OFFICE\mail" + _fpw$)
 cfile$ = FILE 
 w% = 280:h% = 100
 d$ = "NETMAIL"
 FILE "mail"
 BLANK 
 SET STATUS "Datensatz neu angelegt..."
 MADEST$ = MALIST$(0)
    DIM dlg AS Dialog
    DIM control AS DialogControl
 
    Superbase.Dialogs.Add("DIALOG")
    SET dlg = Superbase.Dialogs.DIALOG
    dlg.Move(0,0,280,153)
    dlg.Caption = "Nachricht senden"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(4,4,120,10)
    control.Caption = "Nachricht versenden an:"
 
    SET control = dlg.Add("DialogComboBox2","DialogComboBox")
    control.Move(4,14,120,130)
    control.Style = 0
    control.Bind("MALIST$","MADEST$")
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(4,30,120,8)
    control.Caption = "Nachricht:"
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(4,38,272,89)
    control.MultiLine = 1
    control.ScrollEnable = 3
    control.ScrollBars = 3
    control.MaxLength = 4000
    control.TextBinding = "nachricht.mail"
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(201,134,36,14)
    control.Default = 1
    control.Caption = "&Senden"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(241,134,36,14)
    control.Caption = "&Abbruch"
    control.ReturnValue = 2
    control.Cancel = 1
 REM CREATE DIALOG d$,0,0,w%,h%,title$,"MS Sans Serif",8
 REM ADD DIALOG d$,5,4,5,120,9,0,"Nachricht versenden an:"
 REM ADD DIALOG d$,8,4,14,120,80,256 + 3,2,MADEST$,MALIST$
 REM ADD DIALOG d$,5,4,30,120,9,0,"Nachricht:"
 REM ADD DIALOG d$,6,4,39,w% - 8,h% - 65,4,0,nachricht.mail,4000
 REM ADD DIALOG d$,1,W% - 80,h% - 18,36,14,1,"&Senden",1,1
 REM ADD DIALOG d$,1,w% - 40,h% - 18,36,14,0,"&Abbruch",2,0
 DIALOG "DIALOG",a%
 REMOVE DIALOG "DIALOG"
 IF a% = 1 THEN 
   SELECT KEY vcodema% FILE "supervis" INDEX codema.supervis
   absender.mail = name.supervis
   SELECT KEY MADEST$ FILE "supervis" INDEX Name.SUPERVIS
   codema.mail = codema.supervis
   codemavon.mail = vcodema%
   Datum.mail = TODAY 
   Zeit.mail = NOW 
   codeMAIL.mail = SER ("mail",1)
   CALL QuickStore( FILE )
   REQUEST "Nachricht wurde gesendet","",2
 END IF 
 FILE cfile$
 END SUB 
 
 
 ' BMCHECKMAIL
 ' =====================================================================
 ' Zweck:       Testet auf neue Nachrichten fÅr aktuellen Nutzer
 ' Nutzung:     CALL BMCheckMail(t%)
 ' Hinweis:     Diese Routine wird ereignisgesteuert aufgerufen.
 ' =====================================================================
 ' 11.07.93 - Umwandlung in ereignisgesteuerte Routine
 
SUB BMCheckMail()
 IF UCASE$ ( FORM ) LIKE "AKQ*" THEN 
   END SUB 
 END IF 
 CALL DFile(2,"OFFICE\mail" + _fpw$)
 cfile$ = FILE 
 w% = 280:h% = 100
 di2$ = "NETMAIL"
 FILE "mail"
 INDEX codema.mail
 SELECT FIRST 
 SELECT KEY vcodema% FILE "mail" INDEX codema.mail
 tfoundm% = 0
 SELECT KEY vcodema% FILE "Supervis" INDEX codema.supervis
 nn$ = Name.supervis
 DIM TM%( RECCOUNT ("mail"))
 DIM TM$( RECCOUNT ("mail"))
 WHILE vcodema% = codema.mail AND NOT EOF ("mail")
   IF gelîscht.mail <> 1 AND gelesen.mail <> 1 THEN 
     TM%(tfoundm%) = codemail.mail
     TM$(tfoundm%) = DATE$ (datum.mail,"0d.mm.yyyy") + " " + TIME$ (Zeit.mail,"hh:mm") + " " + LEFT$ (Absender,30) + "/" + nachricht.mail + SPACE$ (100) + STR$ (codemail.mail,"000000")
     tfoundm% = tfoundm% + 1
   END IF 
   SELECT NEXT 
 WEND 
 IF tfoundm% < 1 THEN 
   nomail% = 1
 END IF 
 IF tfoundm% > 1 THEN 

     prompt$ = TM$(0)
     DIM dlg1 AS Dialog
     DIM control1 AS DialogControl 
     GOTO BMCH100520002
BMCH100520001:  
     REDIM TM%( RECCOUNT ("mail"))
     REDIM TM$( RECCOUNT ("mail"))
     FOR a% = 0 TO RECCOUNT ("mail") - 1
       TM% = 0
       TM$ = ""
     NEXT a%
     FILE "MAIL"
     INDEX Codema.mail
     SELECT FIRST 
     SELECT KEY vcodema% FILE "mail" INDEX codema.mail
     tfoundm% = 0

      WHILE vcodema% = codema.mail AND NOT EOF ("mail")
       IF gelîscht.mail <> 1 AND gelesen.mail <> 1 THEN 
         TM%(tfoundm%) = codemail.mail
         TM$(tfoundm%) = DATE$ (datum.mail,"0d.mm.yyyy") + " " + TIME$ (Zeit.mail,"hh:mm") + " " + LEFT$ (Absender,30) + "/" + nachricht.mail + SPACE$ (100) + STR$ (codemail.mail,"000000")
         tfoundm% = tfoundm% + 1
       END IF 
       SELECT NEXT 
     WEND 
     REDIM Auswahl$(tfound1%)
BMCH100520002:   
     Superbase.Dialogs.Add("TERLISTE")
     SET dlg1 = Superbase.Dialogs.TERLISTE
     dlg1.Move(0,0,440,292)
     dlg1.Caption = "Nachrichten-öbersicht"
     dlg1.FontName = "MS Sans Serif"
     dlg1.FontSize = 8
 
     SET control1 = dlg1.Add("DialogLabel1","DialogLabel")
     control1.Move(3,3,255,9)
     control1.Caption = "Termin          Zeit   Name                          Notiz"
 
     SET control1 = dlg1.Add("DialogListBox1","DialogListBox")
     control1.Move(4,17,429,249)
     control1.MultiSelect = 1
     control1.ScrollBars = 2
     control1.Bind("TM$","Auswahl$","prompt$")
 
     SET control1 = dlg1.Add("DialogCommandButton1","DialogCommandButton")
     control1.Move(4,270,114,16)
     control1.Default = 1
     control1.Caption = "&Nachricht-Eintrag anzeigen"
     control1.ReturnValue = 1
 
     REM SET control1 = dlg1.Add("DialogCommandButton2","DialogCommandButton")
     REM control1.Move(121,270,56,16)
     REM control1.Caption = "&Drucken"
     REM control1.ReturnValue = 2
 
     REM SET control1 = dlg1.Add("DialogCommandButton3","DialogCommandButton")
     REM control1.Move(180,270,94,16)
     REM control1.Caption = "alle markierten Er&ledigen"
     REM control1.ReturnValue = 3

     SET control1 = dlg1.Add("DialogCommandButton4","DialogCommandButton")
     control1.Move(277,270,155,16)
     control1.Caption = "&öbersicht schlie·en"
     control1.ReturnValue = 0
     control1.Cancel = 1
  
     DIALOG "TERLISTE",req%
     REMOVE DIALOG ALL 
     IF req% = 0 THEN 
       GOTO BMCH04062000end
     END IF 
     IF req% = 1 THEN 
       codemail% = VAL ( RIGHT$ (Auswahl$(0),6))
       IF codemail% > 0 THEN CALL BMCheckEinz(codemail%)
       GOTO BMCH100520001
     END IF 
     GOTO BMCH100520001
 END IF 






 IF tfoundm% = 1 THEN 
   codemail% = TM%(0)
   CALL BMCheckEinz(codemail%)
 END IF 
 FILE cfile$
BMCH04062000end: 
 IF offBMCh% = 0 THEN CALL CheckTermin()
 offBMCh% = 0
 END SUB 

SUB BMCheckEinz(codemail%)
 cfile$ = FILE 
     SELECT KEY vcodema% FILE "Supervis" INDEX codema.supervis
     nn$ = Name.supervis
     SELECT KEY codemail% LOCK FILE "mail" INDEX CodeMAIL.mail
     DIM dlg AS Dialog
     DIM control AS DialogControl
 
     Superbase.Dialogs.Add("DIALOG")
     SET dlg = Superbase.Dialogs.DIALOG
     dlg.Move(0,0,400,214)
     dlg.Caption = "Nachricht empfangen"
     dlg.FontName = "MS Sans Serif"
     dlg.FontSize = 8
 
     SET control = dlg.Add("DialogLabel1","DialogLabel")
     control.Move(4,4,120,10)
     control.Caption = "Nachricht gesendet von:"
 
     SET control = dlg.Add("DialogTextBox3","DialogTextBox")
     control.Move(4,16,118,12)
     control.ReadOnly = 1
     control.MaxLength = 20
     control.TextBinding = "absender.mail"
 
     SET control = dlg.Add("DialogLabel2","DialogLabel")
     control.Move(4,30,120,8)
     control.Caption = "Nachricht:"
 
     SET control = dlg.Add("DialogTextBox1","DialogTextBox")
     control.Move(4,40,392,64)
     control.MultiLine = 1
     control.ReadOnly = 1
     control.ScrollEnable = 3
     control.ScrollBars = 3
     control.MaxLength = 4000
     control.TextBinding = "nachricht.mail"
 
     SET control = dlg.Add("DialogLabel3","DialogLabel")
     control.Move(4,105,120,8)
     control.Caption = "Antwort:"
 
     SET control = dlg.Add("DialogTextBox2","DialogTextBox")
     control.Move(4,116,392,72)
     control.MultiLine = 1
     control.ScrollEnable = 3
     control.ScrollBars = 3
     control.MaxLength = 4000
     control.TextBinding = "antwort.mail"
 
     SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
     control.Move(229,193,36,16)
     control.Default = 1
     control.Caption = "&OK"
     control.ReturnValue = 1
 
     SET control = dlg.Add("DialogCommandButton4","DialogCommandButton")
     control.Move(268,193,36,16)
     control.Caption = "&Lîschen"
     control.ReturnValue = 2
 
     SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
     control.Move(306,193,52,16)
     control.Caption = "&Beantworten"
     control.ReturnValue = 3
 
     SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
     control.Move(360,193,36,16)
     control.Caption = "&Abbruch"
     control.ReturnValue = 0
     DIALOG "DIALOG",req%
     REMOVE DIALOG "DIALOG"
     IF req% = 1 THEN 
       
       gelesen.mail = 1
       DatumGelesen.mail = TODAY 
       ZeitGelesen.mail = NOW 
       STORE FILE "mail"
       UNLOCK CURRENT FILE "mail"
     END IF 
     IF req% = 2 THEN 
       
       gelîscht.mail = 1
       DatumGelîscht.mail = TODAY 
       ZeitGelîscht.mail = NOW 
       STORE FILE "mail"
       UNLOCK CURRENT FILE "mail"
     END IF 
     IF req% = 3 THEN 
       DatumAntwort.mail = TODAY 
       ZeitAntwort.mail = NOW 
       gelesen.mail = 1
       DatumGelesen.mail = TODAY 
       ZeitGelesen.mail = NOW 
       von% = codemavon.mail
       notiz$ = nachricht.mail
       antwort$ = antwort.mail
       STORE FILE "mail"
       UNLOCK CURRENT FILE "mail"
       BLANK FILE "mail"
       codemail.mail = SER ("mail",1)
       codema.mail = von%
       codemavon.mail = vcodema%
       nachricht.mail = notiz$ + CHR$ (10) + CHR$ (13) + CHR$ (10) + CHR$ (13) + "ANTWORT: " + CHR$ (10) + CHR$ (13) + antwort$
       Datum.mail = TODAY 
       Zeit.mail = NOW 
       Absender.mail = nn$
       STORE FILE "mail"
       UNLOCK CURRENT FILE "mail"
     END IF 
   
 END IF 
 FILE cfile$
 END SUB 


 ' CheckTermin
 ' =====================================================================
 ' Zweck:       Testet auf Termine fÅr den aktuellen Nutzer in der TVORLAGE - Datei
 ' Nutzung:     CALL CheckTermin()
 ' Hinweis:     Diese Routine wird ereignisgesteuert aufgerufen.
 ' =====================================================================  
 
SUB CheckTermin()
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 REM GCODIE% = 0
 cfile$ = FILE 
 IF EXISTS (vcodema%,codema.tvorlage) THEN 
   SELECT KEY vcodema% FILE "supervis" INDEX codema.supervis
   TName$ = Name.supervis
   FILE "TVORLAGE"
   INDEX DTVorlage.tvorlage
   SELECT FIRST 
   REDIM TV%( RECCOUNT ("tvorlage"),1)
   REDIM TV$( RECCOUNT ("tvorlage"),1)
   REDIM TV%( RECCOUNT ("TVORLAGE"))
   REDIM TV$( RECCOUNT ("TVORLAGE"))
   REM FOR i% = 0 TO RECCOUNT ("tvorlage") - 1
     REM TV%(i%) = 0
     REM TV$(i%) = ""
   REM NEXT i%
   REM CALL Fehler("","")
   dtv$ = STR$ (vcodema%,"000000") + "000000000000"
   SELECT FIRST FILE "tvorlage" INDEX DTVorlage.tvorlage
   SELECT KEY dtv$ FILE "tvorlage" INDEX DTVorlage.tvorlage
   tfound1% = 0
   GCODieRuf1% = 0
   IF offVlLi% = 0 THEN 
     WHILE codema.tvorlage = vcodema% AND Datum.tvorlage <= TODAY AND NOT EOF ("TVORLAGE")
       IF zeit.tvorlage <= NOW AND Datum.tvorlage <= TODAY THEN 
         TV%(tfound1%) = codeaq.tvorlage
         nn$ = LEFT$ (Nachname.tvorlage,30)
         IF GCODie% <> - 1 THEN 
           l% = LEN (nn$)
           WHILE l% < 30
             nn$ = nn$ + " "
             l% = LEN (nn$)
           WEND 
         END IF 
         tt$ = DATE$ (termin.tvorlage,"0d.mm.yyyy") + " " + TIME$ (uhrzeit.tvorlage,"hh:mm") + "  "
         TV$(tfound1%) = DATE$ (datum.tvorlage,"0d.mm.yyyy") + " " + TIME$ (zeit.tvorlage,"hh:mm") + "  " + tt$ + nn$ + " / " + LEFT$ (Notiz.tvorlage,100) + CHR$ (100) + STR$ (codeaq.tvorlage,"000000")
           SELECT KEY GMAcodema% FILE "Supervis" INDEX codema.supervis
           SELECT KEY codeaq.tvorlage FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           IF EMAILRaus.tvorlage <> "j" AND GCODie% = - 1 THEN 
             IF LTRIM$ (emailshost.supervis) <> "" THEN 
               
               IF EMAILRaus.GAkquiDat$ <> "j" THEN 
                 IF LTRIM$ (EMAILTO.GAkquiDat$) <> "" THEN 
                    IF LTRIM$ (EMAILBETREFF.GAkquiDat$) <> "" THEN 
                      REM 10052003
                      REM IF Datum.tvorlage <= TODAY THEN CALL EMAILManSend(codeaq.tvorlage,0)
                    END IF 
                 END IF 
               END IF 
             END IF 
           END IF 
         IF GCODieRuf% = - 1 AND GCODieRuf1% <> - 1 THEN 
           REM ret% = CALL ("_SearchClose")
           GCODieRuf% = 0
           GCODieRuf1% = 0
           GCODieRuf2% = 0
         END IF 
         IF GCODIE% = - 1 THEN 
           IF GCodieRuf1% = 0 THEN CALL SearchInitAq2("tvorlage")
         END IF 
         IF GCODIE% = - 1 THEN CALL SearchVorbAq2("tvorlage")
         tfound1% = tfound1% + 1
       ELSE 
         IF Datum.tvorlage < TODAY THEN 
           TV%(tfound1%) = codeaq.tvorlage
           nn$ = LEFT$ (Nachname.tvorlage,30)
           IF GCODie% <> - 1 THEN 
             l% = LEN (nn$)
             WHILE l% < 30
               nn$ = nn$ + " "
               l% = LEN (nn$)
             WEND 
           END IF 
           tt$ = DATE$ (termin.tvorlage,"0d.mm.yyyy") + " " + TIME$ (uhrzeit.tvorlage,"hh:mm") + "  "
           TV$(tfound1%) = DATE$ (datum.tvorlage,"0d.mm.yyyy") + " " + TIME$ (zeit.tvorlage,"hh:mm") + "  " + tt$ + nn$ + " / " + LEFT$ (Notiz.tvorlage,100) + CHR$ (100) + STR$ (codeaq.tvorlage,"000000")
           SELECT KEY GMAcodema% FILE "Supervis" INDEX codema.supervis
           SELECT KEY codeaq.tvorlage FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           IF EMAILRaus.tvorlage <> "j" AND GCODie% = - 1 THEN 
             IF LTRIM$ (emailshost.supervis) <> "" THEN 
               IF EMAILRaus.GAkquiDat$ <> "j" THEN 
                 IF LTRIM$ (EMAILTO.GAkquiDat$) <> "" THEN 
                    IF LTRIM$ (EMAILBETREFF.GAkquiDat$) <> "" THEN 
                      REM 10052003
                      IF Datum.tvorlage <= TODAY THEN CALL EMAILManSend(codeaq.tvorlage,0)
                    END IF 
                 END IF 
               END IF 
             END IF 
           END IF 
           IF GCODieRuf% = - 1 AND GCODieRuf1% <> - 1 THEN 
             REM ret% = CALL ("_SearchClose")
             GCODieRuf% = 0
             GCODieRuf1% = 0
             GCODieRuf2% = 0
           END IF 
           IF GCODIE% = - 1 THEN 
             IF GCodieRuf1% = 0 THEN CALL SearchInitAq2("tvorlage")
           END IF 
           IF GCODIE% = - 1 THEN CALL SearchVorbAq2("tvorlage")
           tfound1% = tfound1% + 1
         END IF 
       END IF 
       SET STATUS LTRIM$ ( STR$ (tfound1%,",9999999")) + " Wiedervorlagetermine gefunden"
       SELECT NEXT FILE "TVORLAGE" INDEX DTVorlage.tvorlage
     WEND 
   ELSE 
     WHILE codema.tvorlage = vcodema% AND NOT EOF ("TVORLAGE")
       TV%(tfound1%) = codeaq.tvorlage
         nn$ = LEFT$ (Nachname.tvorlage,30)
         IF GCODie% <> - 1 THEN 
           l% = LEN (nn$)
           WHILE l% < 30
             nn$ = nn$ + " "
             l% = LEN (nn$)
           WEND 
         END IF 
       tt$ = DATE$ (termin.tvorlage,"0d.mm.yyyy") + " " + TIME$ (uhrzeit.tvorlage,"hh:mm") + "  "
       TV$(tfound1%) = DATE$ (datum.tvorlage,"0d.mm.yyyy") + " " + TIME$ (zeit.tvorlage,"hh:mm") + "  " + tt$ + nn$ + " / " + LEFT$ (Notiz.tvorlage,100) + CHR$ (100) + STR$ (codeaq.tvorlage,"000000")
           SELECT KEY GMAcodema% FILE "Supervis" INDEX codema.supervis
           SELECT KEY codeaq.tvorlage FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           IF EMAILRaus.tvorlage <> "j" AND GCODie% = - 1 THEN 
             IF LTRIM$ (emailshost.supervis) <> "" THEN 
               IF EMAILRaus.GAkquiDat$ <> "j" THEN 
                 IF LTRIM$ (EMAILTO.GAkquiDat$) <> "" THEN 
                    IF LTRIM$ (EMAILBETREFF.GAkquiDat$) <> "" THEN 
                      REM 10052003
                      IF Datum.tvorlage <= TODAY THEN CALL EMAILManSend(codeaq.tvorlage,0)
                    END IF 
                 END IF 
               END IF 
             END IF 
           END IF 
       IF GCODieRuf% = - 1 AND GCODieRuf1% <> - 1 THEN 
         REM ret% = CALL ("_SearchClose")
           GCODieRuf% = 0
           GCODieRuf1% = 0
           GCODieRuf2% = 0
       END IF 
       IF GCODIE% = - 1 THEN 
         IF GCodieRuf1% = 0 THEN CALL SearchInitAq2("tvorlage")
       END IF 
       IF GCODIE% = - 1 THEN CALL SearchVorbAq2("tvorlage")
       tfound1% = tfound1% + 1
       SET STATUS LTRIM$ ( STR$ (tfound1%,",9999999")) + " Wiedervorlagetermine gefunden"
       SELECT NEXT FILE "TVORLAGE" INDEX DTVorlage.tvorlage
     WEND 
   END IF 
   REDIM Auswahl$(tfound1%)
 
   ok% = 1
   IF ter1anz% = 1 AND tfound1% < 1 THEN 
     CALL Fehler("Keine Vorlagetermine gefunden!","")
   END IF 
   IF tfound1% > 1 THEN 
     REM CALL Fehler("Ausgabe des Termindialoges","")
     prompt$ = TV$(0)
 
     DIM dlg1 AS Dialog
     DIM control1 AS DialogControl 
     GOTO TCH100520002
 
TCH100520001:  
 
     REDIM TV%( RECCOUNT ("tvorlage"),1)
     REDIM TV$( RECCOUNT ("tvorlage"),1)
     REDIM TV%( RECCOUNT ("tvorlage"))
     REDIM TV$( RECCOUNT ("tvorlage"))
 
     
     REM FOR a% = 0 TO RECCOUNT ("tvorlage") - 1
       REM TV% = 0
       REM TV$ = ""
     REM NEXT a%
     FILE "TVORLAGE"
     INDEX DTVorlage.tvorlage
     SELECT FIRST 
     dtv$ = STR$ (vcodema%,"000000") + "000000000000"
     SELECT KEY dtv$ FILE "tvorlage" INDEX DTVorlage.tvorlage
     tfound1% = 0
     IF offVlLi% = 0 THEN 
       WHILE codema.tvorlage = vcodema% AND Datum.tvorlage <= TODAY AND NOT EOF ("TVORLAGE")
         IF zeit.tvorlage <= NOW OR Datum.tvorlage < TODAY THEN 
           TV%(tfound1%) = codeaq.tvorlage
           nn$ = LEFT$ (Nachname.tvorlage,30)
           l% = LEN (nn$)
           WHILE l% < 30
             nn$ = nn$ + " "
             l% = LEN (nn$)
           WEND 
           tt$ = DATE$ (termin.tvorlage,"0d.mm.yyyy") + " " + TIME$ (uhrzeit.tvorlage,"hh:mm") + "  "
           TV$(tfound1%) = DATE$ (datum.tvorlage,"0d.mm.yyyy") + " " + TIME$ (zeit.tvorlage,"hh:mm") + "  " + tt$ + nn$ + " / " + LEFT$ (Notiz.tvorlage,100) + CHR$ (100) + STR$ (codeaq.tvorlage,"000000")
           IF GCODieRuf% = - 1 AND GCODieRuf1% <> - 1 THEN 
             REM ret% = CALL ("_SearchClose")
             GCODieRuf% = 0
             GCODieRuf1% = 0
             GCODieRuf2% = 0
           END IF 
           IF GCODIE% = - 1 THEN 
             IF GCodieRuf1% = 0 THEN CALL SearchInitAq2("tvorlage")
           END IF 
           IF GCODIE% = - 1 THEN CALL SearchVorbAq2("tvorlage")
           tfound1% = tfound1% + 1
         END IF 
         SET STATUS LTRIM$ ( STR$ (tfound1%,",9999999")) + " Wiedervorlagetermine gefunden"
         SELECT NEXT FILE "TVORLAGE" INDEX DTVorlage.tvorlage
       WEND 
     ELSE 
       WHILE codema.tvorlage = vcodema% AND NOT EOF ("TVORLAGE")
         TV%(tfound1%) = codeaq.tvorlage
         nn$ = LEFT$ (Nachname.tvorlage,30)
         l% = LEN (nn$)
         WHILE l% < 30
           nn$ = nn$ + " "
           l% = LEN (nn$)
         WEND 
         tt$ = DATE$ (termin.tvorlage,"0d.mm.yyyy") + " " + TIME$ (uhrzeit.tvorlage,"hh:mm") + "  "
         TV$(tfound1%) = DATE$ (datum.tvorlage,"0d.mm.yyyy") + " " + TIME$ (zeit.tvorlage,"hh:mm") + "  " + tt$ + nn$ + " / " + LEFT$ (Notiz.tvorlage,100) + CHR$ (100) + STR$ (codeaq.tvorlage,"000000")
         IF GCODieRuf% = - 1 AND GCODieRuf1% <> - 1 THEN 
           REM ret% = CALL ("_SearchClose")
           GCODieRuf% = 0
           GCODieRuf1% = 0
           GCODieRuf2% = 0
         END IF 
         IF GCODIE% = - 1 THEN 
           IF GCodieRuf1% = 0 THEN CALL SearchInitAq2("tvorlage")
         END IF 
         IF GCODIE% = - 1 THEN CALL SearchVorbAq2("tvorlage")
         tfound1% = tfound1% + 1
         SET STATUS LTRIM$ ( STR$ (tfound1%,",9999999")) + " Wiedervorlagetermine gefunden"
         SELECT NEXT FILE "TVORLAGE" INDEX DTVorlage.tvorlage
       WEND 
     END IF 
     REDIM Auswahl$(tfound1%)
     aaaak% = 0
TCH100520002:   
     IF GCODIE% = - 1 THEN 
       c$ = "aa"
       REM CALL Fehler("","")
       IF aaaak% = 0 THEN 
         req3% = CALL ("_SearchShow",c$)
       ELSE 
         req3% = CALL ("_SearchReShow",c$)
       END IF 
       REM CALL Fehler( STR$ (req%),"")
       IF req3% = 3 THEN 
         REM drucken
         req% = 2
       ELSE 
         IF req3% > 3 THEN 
           REM alle Termine verschieben
           req% = 0
           minuteab% = req3%
         ELSE 
           IF VAL (c$) <> 0 THEN 
             req% = 1
             _cuaq% = VAL (c$)
             REM MENU 4,2,1,"aus Suchliste &wÑhlen,F7","DokKurzSuche","Auflistung aller vorher gesuchten Dokumente"
             ok% = 0
             SET STATUS "Termine gefunden..."
           ELSE 
             req% = 5
           END IF 
         END IF 
       END IF 
       aaaak% = aaaak% + 1
     ELSE 
       Superbase.Dialogs.Add("TERLISTE")
       SET dlg1 = Superbase.Dialogs.TERLISTE
       dlg1.Move(0,0,440,292)
       dlg1.Caption = "Termin-Wiedervorlagen-öbersicht"
       dlg1.FontName = "MS Sans Serif"
       dlg1.FontSize = 8
 
       SET control1 = dlg1.Add("DialogLabel1","DialogLabel")
       control1.Move(3,3,255,9)
       control1.Caption = "VDatum       VZeit   Termin        Zeit    Name                          Notiz"
 
       SET control1 = dlg1.Add("DialogListBox1","DialogListBox")
       control1.Move(4,17,429,249)
       control1.MultiSelect = 1
       control1.ScrollBars = 2
       control1.Bind("TV$","Auswahl$","prompt$")
 
       SET control1 = dlg1.Add("DialogCommandButton1","DialogCommandButton")
       control1.Move(3,270,114,16)
       control1.Default = 1
       control1.Caption = "&Wiedervorlage-Eintrag anzeigen"
       control1.ReturnValue = 1
 
       SET control1 = dlg1.Add("DialogCommandButton2","DialogCommandButton")
       control1.Move(120,270,56,16)
       control1.Caption = "&Drucken"
       control1.ReturnValue = 2
 
       SET control1 = dlg1.Add("DialogCommandButton3","DialogCommandButton")
       control1.Move(179,270,94,16)
       control1.Caption = "alle markierten Er&ledigen"
       control1.ReturnValue = 3
       IF offVlLi% = 0 THEN 
 
        SET control1 = dlg1.Add("DialogTextBox1","DialogTextBox")
        control1.Move(275,271,19,14)
        control1.MaxLength = 3
        control1.TextBinding = "minuteab%"
 
        SET control1 = dlg1.Add("DialogLabel11","DialogLabel")
        control1.Move(296,274,123,14)
        control1.Caption = "Minuten bis zur wiederholten Anzeige"
 
         SET control1 = dlg1.Add("DialogCommandButton4","DialogCommandButton")
         control1.Move(418,270,20,16)
         control1.Caption = "&Ok"
         control1.ReturnValue = 0
       
       ELSE 
         SET control1 = dlg1.Add("DialogCommandButton4","DialogCommandButton")
         control1.Move(277,270,155,16)
         control1.Caption = "&öbersicht schlie·en"
         control1.ReturnValue = 0
         control1.Cancel = 1
       END IF 
       DIALOG "TERLISTE",req%
       REMOVE DIALOG ALL 
     END IF 
     REM &Abbrechen (in 10 Minuten wieder anzeigen)
     IF req% = 0 THEN 
       IF offVlLi% = 0 THEN 
         FOR i% = 0 TO tfound1% - 1
           t1% = TV%(i%)
           IF TV%(i%) > 0 THEN 
             SELECT FIRST FILE "TVORLAGE" INDEX codeaq.TVORLAGE
             t1% = TV%(i%)
             SELECT KEY TV%(i%) FILE "TVORLAGE" INDEX codeaq.TVORLAGE
             IF Datum.tvorlage <= TODAY THEN 
               SELECT FIRST FILE "TVORLAGE" INDEX codeaq.TVORLAGE
               SELECT KEY t1% LOCK FILE "TVORLAGE" INDEX codeaq.TVORLAGE
               t2% = codeaq.TVORLAGE
               zeit.tvorlage = NOW + (60000 * minuteab%)
               Datum.tvorlage = TODAY 
               d$ = DATE$ (Datum.tvorlage,"0d.mm.yyyy")
               stunde% = VAL ( LEFT$ ( TIME$ (zeit.tvorlage,"hh:mm"),2))
               IF stunde% > 24 THEN 
                 zeit.tvorlage = 0
                 Datum.tvorlage = TODAY + 1
                 d$ = DATE$ (Datum.tvorlage,"0d.mm.yyyy")
               END IF 
               DTVorlage.TVORLAGE = STR$ (CodeMA.tvorlage,"000000") + DATE$ (Datum.tvorlage,"yyyymm0d") + TIME$ (Zeit.tvorlage,"hhmm")
               STORE FILE "TVORLAGE"
               UNLOCK CURRENT FILE "tvorlage"
               UNLOCK FILE "tvorlage"
               REM t$ = TIME$ (z%,"hh:mm")
               SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
               SELECT KEY TV%(i%) LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
               erdatum.GAkquiDat$ = datum.tvorlage
               erzeit.GAkquiDat$ = zeit.tvorlage
               STORE FILE GAkquiDat$
               UNLOCK CURRENT FILE GAkquiDat$
               UNLOCK FILE GAkquiDat$
             END IF 
           END IF 
         NEXT i%
       ELSE 
         terfound1% = 0
       END IF 
     END IF 
 
     REM zum einzelnen Wiedervorlagetermin springen
     IF req% = 1 THEN 
       ok% = 1
       IF GCODie% <> - 1 THEN 
         _cuaq% = VAL ( RIGHT$ (Auswahl$(0),6))
         prompt$ = Auswahl$(0)
       END IF 
       lastTermin% = _cuaq%
       SELECT KEY _cuaq% FILE "TVORLAGE" INDEX codeaq.TVORLAGE
       CALL DFile(2,"OFFICE\adressen" + _fpw$)
       CALL DFile(2,"OFFICE\Telefon" + _fpw$)
       FILE "adressen"
       INDEX codeku.adressen
       FILE GAkquiDat$
       INDEX codeaq.GAkquiDat$
       SELECT KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       knr% = codeku.GAkquiDat$
       SELECT KEY knr% FILE "adressen" INDEX codeku.adressen
       REM knr% = codeku.TVORLAGE
       REM _vcodema% = codema.TVORLAGE 
       REM CALL Fehler("Ausgabe des Termindialoges","")
       CALL TerLiSpez(_cuaq%)
       FILE "tvorlage"
       GOTO TCH100520002
       REM CALL Fehler("","")
       REM CALL VorlTermEinz(_cuaq%)
       REM _formend% = 0
       REM GOTO TCH100520001
     END IF 
 
     REM alle Drucken
     IF req% = 2 THEN 
       REM Drucken
       CALL DFile(2,"OFFICE\aktionen" + _fpw$)
       CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
       MOUSE OFF 
       IF OPEN ("AKQTMP") THEN CLOSE FILE "AKQTMP"
       IF EXISTS (GMACodeDir$ + "AKQTMP.sbf") THEN 
         DELETE GMACodeDir$ + "AKQTMP.*"
       END IF 
       COPY _netpath$ + "\OFFICE\AKQTMP.*" TO GMACodeDir$
       OPEN FILE SHARE ,0GMACodeDir$ + "AKQTMP;paris"
       FOR i% = 0 TO tfound1% - 1
         SET STATUS STR$ (i%,"9999999")
         codeaq% = VAL ( RIGHT$ (TV$(i%),6))
         SELECT KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         BLANK FILE "AKQTMP"
         codeku.AKQTMP = codeku.GAkquiDat$
         codeak.akqtmp = codeak.GAkquiDat$
         bearbeiter.AKQTMP = bearbeiter.GAkquiDat$
         codema.AKQTMP = codema.GAkquiDat$
         datum.AKQTMP = datum.GAkquiDat$
         notiz.AKQTMP = notiz.GAkquiDat$
         termin.AKQTMP = termin.GAkquiDat$
         erledigt_termin.AKQTMP = erledigt_termin.GAkquiDat$
         codeaq.AKQTMP = codeaq.GAkquiDat$
         Uhrzeit.AKQTMP = Uhrzeit.GAkquiDat$
         nachname.AKQTMP = nachname.GAkquiDat$
         ergebnis.AKQTMP = ergebnis.GAkquiDat$
         projekt.AKQTMP = projekt.GAkquiDat$
         codepr.AKQTMP = codepr.GAkquiDat$
         dauer.AKQTMP = dauer.GAkquiDat$
         DME.AKQTMP = dme.GAkquiDat$
         STORE FILE "AKQTMP"
         UNLOCK CURRENT FILE "akqtmp"
       NEXT i%
       cdir$ = DIRECTORY 
       DIRECTORY _netpath$ + "OFFICE"
       CALL ORep("TERMINE2")
       HEADING 
       SET REPORT PAGE "H_PAGE"
       OUTPUT REPORT PAGE 
       END HEADING 
       AFTER SELECT 
       SET REPORT PAGE "F_SELECT"
       OUTPUT REPORT PAGE 
       END SELECT 
       SET QUERY ON 
       SET QUERY LOCK ON 
       Ueberschr$ = "Vorlagetermine Mitarbeiter: " + TName$
       ON ERROR GOTO chkter040620001
       SELECT ;
       WHERE codeak.AKQTMP = codeak.aktionen AND CodeKU.AKQTMP = CodeKU.GAdrDat$
       ORDER Termin.AKQTMP,Uhrzeit.AKQTMP
       TO ASK 
       END SELECT 
chkter040620001: 
       ON ERROR GOTO ErrorHandler
       DIRECTORY cdir$
       MOUSE ON 
       GOTO TCH100520002
     END IF 
 
     REM alle markierten erledigen
     IF req% = 3 THEN 
       i% = 0
       WHILE Auswahl$(i%) <> ""
         _cuaq% = VAL ( RIGHT$ (Auswahl$(i%),6))
         IF _cuaq% > 0 THEN 
           SELECT FIRST FILE "TVORLAGE"
           SELECT KEY _cuaq% LOCK FILE "TVORLAGE" INDEX codeaq.TVORLAGE
           SELECT REMOVE 
           SELECT KEY _cuaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           erledigt_Termin.GAkquiDat$ = "j"
           CALL QuickStore(GAkquiDat$)
         END IF 
         i% = i% + 1
       WEND 
     END IF 
   ELSE 
   END IF 
 
   
 
 
   IF tfound1% = 1 THEN 
     DIM dlg AS Dialog
     DIM control AS DialogControl 
     FOR i% = 0 TO tfound1% - 1
       SELECT KEY TV%(i%) LOCK FILE "TVORLAGE" INDEX codeaq.tvorlage
       BELL 
       di2$ = "AA"
 
       Superbase.Dialogs.Add(di2$)
       SET dlg = Superbase.Dialogs(di2$)
       dlg.Move(0,0,389,292)
       dlg.Caption = "Termin am"
       dlg.FontName = "MS Sans Serif"
       dlg.FontSize = 8
 
       SET control = dlg.Add("DialogLabel1","DialogLabel")
       control.Move(4,4,273,10)
       control.Caption = "Kunde:"
 
       SET control = dlg.Add("DialogLabel2","DialogLabel")
       control.Move(4,16,274,12)
       control.CaptionBinding = "Nachname.tvorlage"
 
       SET control = dlg.Add("DialogLabel3","DialogLabel")
       control.Move(4,30,56,8)
       control.Caption = "Termin:"
 
       SET control = dlg.Add("DialogLabel8","DialogLabel")
       control.Move(153,30,56,8)
       control.Caption = "Vorlage:"
 
       SET control = dlg.Add("DialogTextBox5","DialogTextBox")
       control.Move(4,41,46,10)
       control.MaxLength = 20
       control.TextBinding = "Termin.tvorlage"
 
       SET control = dlg.Add("DialogTextBox3","DialogTextBox")
       control.Move(153,41,47,10)
       control.MaxLength = 20
       control.TextBinding = "Datum.tvorlage"
 
       SET control = dlg.Add("DialogTextBox6","DialogTextBox")
       control.Move(13,56,29,11)
       control.MaxLength = 20
       control.TextBinding = "UhrZeit.tvorlage"
 
       SET control = dlg.Add("DialogTextBox4","DialogTextBox")
       control.Move(158,56,30,11)
       control.MaxLength = 20
       control.TextBinding = "Zeit.tvorlage"
 
       SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
       control.Move(322,78,63,10)
       control.Caption = "Termin erledigt"
       control.Bind("erledigt_Termin.tvorlage")
       control.ValueOn = "j"
       control.ValueOff = "n"
 
       SET control = dlg.Add("DialogLabel4","DialogLabel")
       control.Move(4,81,56,8)
       control.Caption = "Notiz:"
 
       SET control = dlg.Add("DialogTextBox1","DialogTextBox")
       control.Move(2,92,384,63)
       control.MultiLine = 1
       control.ScrollEnable = 1
       control.ScrollBars = 2
       control.MaxLength = 4000
       control.TextBinding = "Notiz.tvorlage"
 
       SET control = dlg.Add("DialogLabel5","DialogLabel")
       control.Move(4,158,36,8)
       control.Caption = "Ergebnis:"
 
       SET control = dlg.Add("DialogTextBox2","DialogTextBox")
       control.Move(2,169,384,63)
       control.MultiLine = 1
       control.ScrollEnable = 1
       control.ScrollBars = 2
       control.MaxLength = 4000
       control.TextBinding = "Ergebnis.tvorlage"
 
       SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
       control.Move(2,235,109,16)
       control.Default = 1
       control.Caption = "&Vorlage nicht mehr anzeigen"
       control.ReturnValue = 1
 
       SET control = dlg.Add("DialogCommandButton4","DialogCommandButton")
       control.Move(116,235,109,16)
       control.Caption = "&Zum Termin springen"
       control.ReturnValue = 3
 
       SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
       control.Move(241,235,144,16)
       control.Caption = "&Neuen Vorlagetermin speichern"
       control.ReturnValue = 2
 
       SET control = dlg.Add("DialogCommandButton6","DialogCommandButton")
       control.Move(2,252,223,16)
       control.Caption = "Termin als erledigt kennzeichnen und Vorlage nicht mehr anzeigen"
       control.ReturnValue = 4
 
       SET control = dlg.Add("DialogCommandButton7","DialogCommandButton")
       control.Move(241,252,145,16)
       control.Caption = "Alle Angaben speichern"
       control.ReturnValue = 6
 
       SET control = dlg.Add("DialogCommandButton5","DialogCommandButton")
       control.Move(2,270,223,16)
       control.Caption = "Zum Termin springen und Vorlage lîschen"
       control.ReturnValue = 5
    
       SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
       control.Move(241,270,145,16)
       control.Caption = "&Abbrechen (in 5 Minuten wieder anzeigen)"
       control.ReturnValue = 0
       control.Cancel = 1
 
       DIALOG di2$,a%
       REMOVE DIALOG ALL 
       IF a% = 0 THEN 
         zeit.tvorlage = NOW + 300000
         Datum.tvorlage = TODAY 
         stunde% = VAL ( LEFT$ ( TIME$ (zeit.tvorlage,"hh:mm"),2))
         IF stunde% > 24 THEN 
           zeit.tvorlage = 0
           Datum.tvorlage = TODAY + 1
           d$ = DATE$ (Datum.tvorlage,"0d.mm.yyyy")
         END IF 
         DTVorlage.TVORLAGE = STR$ (CodeMA.tvorlage,"000000") + DATE$ (Datum.tvorlage,"yyyymm0d") + TIME$ (Zeit.tvorlage,"hhmm")
         STORE FILE "TVORLAGE"
         UNLOCK CURRENT FILE "tvorlage"
         UNLOCK FILE "tvorlage"
         REM t$ = TIME$ (z%,"hh:mm")
         IF EXISTS (TV%(i%),codeaq.GAkquiDat$) THEN 
           SELECT KEY TV%(i%) LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           erdatum.GAkquiDat$ = datum.tvorlage
           erzeit.GAkquiDat$ = zeit.tvorlage
           GErledTermin$ = erledigt_Termin.GAkquiDat$
           STORE FILE GAkquiDat$
           UNLOCK CURRENT FILE GAkquiDat$
           UNLOCK FILE GAkquiDat$
         END IF 
         REM CALL Fehler(t$,"")
       END IF 
       IF a% = 1 THEN 
         REM lîschen
         FILE "TVorlage"
         SELECT KEY TV%(i%) LOCK FILE "TVorlage" INDEX codeaq.Tvorlage
         SELECT REMOVE 
         IF EXISTS (TV%(i%),codeaq.GAkquiDat$) THEN 
           SELECT KEY TV%(i%) LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           knr% = codeku.GAkquiDat$
           erdatum.GAkquiDat$ = ""
           erzeit.GAkquiDat$ = ""
           GErledTermin$ = erledigt_Termin.GAkquiDat$
           STORE FILE GAkquiDat$
           UNLOCK CURRENT FILE GAkquiDat$
           UNLOCK FILE GAkquiDat$
         END IF 
       END IF 
       IF a% = 2 THEN 
         REM Neuen Vorlagetermin speichern
         DTVorlage.TVORLAGE = STR$ (CodeMA.tvorlage,"000000") + DATE$ (Datum.tvorlage,"yyyymm0d") + TIME$ (Zeit.tvorlage,"hhmm")
         STORE FILE "TVORLAGE"
         UNLOCK CURRENT FILE "tvorlage"
         IF EXISTS (TV%(i%),codeaq.GAkquiDat$) THEN 
           SELECT KEY TV%(i%) LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           erdatum.GAkquiDat$ = datum.tvorlage
           erzeit.GAkquiDat$ = zeit.tvorlage
           GErledTermin$ = erledigt_Termin.GAkquiDat$
           STORE FILE GAkquiDat$
           UNLOCK CURRENT FILE GAkquiDat$
           UNLOCK FILE GAkquiDat$
         END IF 
       END IF 
       IF a% = 3 THEN 
         REM zum Termin springen
         zeit.tvorlage = NOW + 300000
         Datum.tvorlage = TODAY 
               stunde% = VAL ( LEFT$ ( TIME$ (zeit.tvorlage,"hh:mm"),2))
               IF stunde% > 24 THEN 
                 zeit.tvorlage = 0
                 Datum.tvorlage = TODAY + 1
                 d$ = DATE$ (Datum.tvorlage,"0d.mm.yyyy")
               END IF 
         DTVorlage.TVORLAGE = STR$ (CodeMA.tvorlage,"000000") + DATE$ (Datum.tvorlage,"yyyymm0d") + TIME$ (Zeit.tvorlage,"hhmm")
         STORE FILE "TVORLAGE"
         UNLOCK CURRENT FILE "tvorlage"
         REM t$ = TIME$ (z%,"hh:mm")
         IF EXISTS (TV%(i%),codeaq.GAkquiDat$) THEN 
           SELECT KEY TV%(i%) LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           knr% = codeku.GAkquiDat$
           _vcodema% = codema.GAkquiDat$
           erzeit.GAkquiDat$ = zeit.tvorlage
           GErledTermin$ = erledigt_Termin.GAkquiDat$
           STORE FILE GAkquiDat$
           UNLOCK CURRENT FILE GAkquiDat$
           UNLOCK FILE GAkquiDat$
         END IF 
         REM 10042000                                             
         IF UCASE$ ( FORM ) <> GAkquiDat$ AND UCASE$ ( FORM ) <> "AKQUIPRJ" THEN 
           CALL TerLiSpez(TV%(i%))
         ELSE 
           _cuaq% = TV%(i%)
           IF EXISTS (TV%(i%),codeaq.GAkquiDat$) THEN 
             SELECT FORM KEY TV%(i%) FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
             FORM 
             SET DISPLAY ON 
             CALL AKQUISEIntro1()
             CALL AQButtUpdate()
           ELSE 
             CALL Fehler("Leider gibt es diesen Termin nicht in der Termindatei!","Lîschen Sie diese Terminvorlage aus der Wiedervorlagedatei!")
           END IF 
         END IF 
       END IF 
       IF a% = 4 THEN 
         REM Termin als erledigt kennzeichnen und Vorlage nicht mehr anzeigen
         SELECT REMOVE 
         IF EXISTS (TV%(i%),codeaq.GAkquiDat$) THEN 
           SELECT KEY TV%(i%) LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           GErledTermin$ = erledigt_Termin.GAkquiDat$
           erledigt_Termin.GAkquiDat$ = "j"
           CALL QuickStore(GAkquiDat$)
         END IF 
       END IF 
       IF a% = 5 THEN 
         REM zum Termin springen und Vorlage nicht mehr anzeigen
         FILE "TVorlage"
         SELECT KEY TV%(i%) LOCK FILE "TVorlage" INDEX codeaq.Tvorlage
         SELECT REMOVE 
         IF EXISTS (TV%(i%),codeaq.GAkquiDat$) THEN 
           SELECT KEY TV%(i%) LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           knr% = codeku.GAkquiDat$
           erdatum.GAkquiDat$ = ""
           erzeit.GAkquiDat$ = ""
           STORE FILE GAkquiDat$
           UNLOCK CURRENT FILE GAkquiDat$
           UNLOCK FILE GAkquiDat$
           _vcodema% = codema.GAkquiDat$
           IF UCASE$ ( FORM ) <> GAkquiDat$ AND UCASE$ ( FORM ) <> "AKQUIPRJ" THEN 
             CALL TerLiSpez(TV%(i%))
           ELSE 
             _cuaq% = TV%(i%)
             SELECT FORM KEY TV%(i%) FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
             FORM 
             SET DISPLAY ON 
             CALL AKQUISEIntro1()
             CALL AQButtUpdate()
           END IF 
         END IF 
       END IF 
       IF a% = 6 THEN 
         REM alle Angaben speichern
         DTVorlage.TVORLAGE = STR$ (CodeMA.tvorlage,"000000") + DATE$ (Datum.tvorlage,"yyyymm0d") + TIME$ (Zeit.tvorlage,"hhmm")
         STORE FILE "TVORLAGE"
         UNLOCK CURRENT FILE "tvorlage"
         IF EXISTS (TV%(i%),codeaq.GAkquiDat$) THEN 
           SELECT KEY TV%(i%) LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           termin.GAkquiDat$ = Termin.TVORLAGE
           Uhrzeit.GAkquiDat$ = Uhrzeit.TVORLAGE
           ERDATUM.GAkquiDat$ = Datum.TVORLAGE
           ErZeit.GAkquiDat$ = Zeit.TVORLAGE
           Notiz.GAkquiDat$ = Notiz.TVORLAGE
           Ergebnis.GAkquiDat$ = Ergebnis.TVORLAGE
           Nachname.GAkquiDat$ = Nachname.TVORLAGE
           Bearbeiter.GAkquiDat$ = Bearbeiter.TVORLAGE
           GErledTermin$ = erledigt_termin.GAkquiDat$
           erledigt_termin.GAkquiDat$ = erledigt_Termin.tvorlage
           CALL QuickStore(GAkquiDat$)
           IF erledigt_termin.GAkquiDat$ = "j" THEN 
             REMOVE FROM FILE "tvorlage" WHERE codeaq.tvorlage = TV%(i%)
           END IF 
         END IF 
       END IF 
     NEXT i%
   END IF 
 ELSE 
   IF terbyhand% = 1 THEN 
     CALL Fehler("Keine Wiedervorlagetermine gefunden!","")
   END IF 
 END IF 
ETCH100520002: 
 REM IF GCODieRuf% = - 1 THEN 
   REM ret% = CALL ("_SearchClose")
   REM GCODieRuf% = 0
 REM END IF 
 FILE cfile$
 offVlLi% = 0
 END SUB 
  

SUB OldCheckTermin()
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 cfile$ = FILE 
 IF EXISTS (vcodema%,codema.tvorlage) THEN 
   SELECT KEY vcodema% FILE "supervis" INDEX codema.supervis
   TName$ = Name.supervis
   FILE "TVORLAGE"
   INDEX DTVorlage.tvorlage
   SELECT FIRST 
   REDIM TV%( RECCOUNT ("tvorlage"))
   REDIM TV$( RECCOUNT ("tvorlage"))
   FOR i% = 0 TO RECCOUNT ("tvorlage") - 1
     TV%(i%) = 0
     TV$(i%) = ""
   NEXT i%
   dtv$ = STR$ (vcodema%,"000000") + "000000000000"
   SELECT KEY dtv$ FILE "tvorlage" INDEX DTVorlage.tvorlage
   tfound1% = 0
   IF offVlLi% = 0 THEN 
     WHILE codema.tvorlage = vcodema% AND Datum.tvorlage <= TODAY AND NOT EOF ("TVORLAGE")
       IF zeit.tvorlage <= NOW OR Datum.tvorlage < TODAY THEN 
         TV%(tfound1%) = codeaq.tvorlage
         nn$ = LEFT$ (Nachname.tvorlage,30)
         l% = LEN (nn$)
         WHILE l% < 30
           nn$ = nn$ + " "
           l% = LEN (nn$)
         WEND 
         tt$ = DATE$ (termin.tvorlage,"0d.mm.yyyy") + " " + TIME$ (uhrzeit.tvorlage,"hh:mm") + "  "
         TV$(tfound1%) = DATE$ (datum.tvorlage,"0d.mm.yyyy") + " " + TIME$ (zeit.tvorlage,"hh:mm") + "  " + tt$ + nn$ + " / " + LEFT$ (Notiz.tvorlage,100) + CHR$ (100) + STR$ (codeaq.tvorlage,"000000")
         tfound1% = tfound1% + 1
       END IF 
       SELECT NEXT FILE "TVORLAGE" INDEX DTVorlage.tvorlage
     WEND 
   ELSE 
     WHILE codema.tvorlage = vcodema% AND NOT EOF ("TVORLAGE")
       TV%(tfound1%) = codeaq.tvorlage
         nn$ = LEFT$ (Nachname.tvorlage,30)
         l% = LEN (nn$)
         WHILE l% < 30
           nn$ = nn$ + " "
           l% = LEN (nn$)
         WEND 
       tt$ = DATE$ (termin.tvorlage,"0d.mm.yyyy") + " " + TIME$ (uhrzeit.tvorlage,"hh:mm") + "  "
       TV$(tfound1%) = DATE$ (datum.tvorlage,"0d.mm.yyyy") + " " + TIME$ (zeit.tvorlage,"hh:mm") + "  " + tt$ + nn$ + " / " + LEFT$ (Notiz.tvorlage,100) + CHR$ (100) + STR$ (codeaq.tvorlage,"000000")
       tfound1% = tfound1% + 1
       SELECT NEXT FILE "TVORLAGE" INDEX DTVorlage.tvorlage
     WEND 
   END IF 
   REDIM Auswahl$(tfound1%)
 
   ok% = 1
   IF ter1anz% = 1 AND tfound% < 1 THEN 
     CALL Fehler("Keine Vorlagetermine gedunden!","")
   END IF 
   IF tfound1% > 1 THEN 
     
     prompt$ = TV$(0)
 
     
     SET STATUS "Bitte wÑhlen Sie einen Termin aus."
     REM CREATE DIALOG "TERLISTE",0,0,440,297,title$,"MS Sans Serif",8
     REM ADD DIALOG "TERLISTE",7,5,8,428,261,8,2,Termine$,LAuswahl1$,prompt$
     REM ADD DIALOG "TERLISTE",1,100,274,56,16,1,"&OK",1,1
     REM ADD DIALOG "TERLISTE",1,160,274,56,16,0,"&Drucken",2,0
     REM ADD DIALOG "TERLISTE",1,220,274,56,16,0,"Dat&ei",3,0
     REM ADD DIALOG "TERLISTE",1,280,274,56,16,0,"&Abbruch",0,0
 
     DIM dlg1 AS Dialog
     DIM control1 AS DialogControl 
     GOTO TCH100520002
TCH100520001:  
     REDIM TV%( RECCOUNT ("tvorlage"))
     REDIM TV$( RECCOUNT ("tvorlage"))
     FOR a% = 0 TO RECCOUNT ("tvorlage") - 1
       TV% = 0
       TV$ = ""
     NEXT a%
     FILE "TVORLAGE"
     INDEX DTVorlage.tvorlage
     SELECT FIRST 
     dtv$ = STR$ (vcodema%,"000000") + "000000000000"
     SELECT KEY dtv$ FILE "tvorlage" INDEX DTVorlage.tvorlage
     tfound1% = 0
     IF offVlLi% = 0 THEN 
       WHILE codema.tvorlage = vcodema% AND Datum.tvorlage <= TODAY AND NOT EOF ("TVORLAGE")
         IF zeit.tvorlage <= NOW OR Datum.tvorlage < TODAY THEN 
           TV%(tfound1%) = codeaq.tvorlage
           nn$ = LEFT$ (Nachname.tvorlage,30)
           l% = LEN (nn$)
           WHILE l% < 30
             nn$ = nn$ + " "
             l% = LEN (nn$)
           WEND 
           tt$ = DATE$ (termin.tvorlage,"0d.mm.yyyy") + " " + TIME$ (uhrzeit.tvorlage,"hh:mm") + "  "
           TV$(tfound1%) = DATE$ (datum.tvorlage,"0d.mm.yyyy") + " " + TIME$ (zeit.tvorlage,"hh:mm") + "  " + tt$ + nn$ + " / " + LEFT$ (Notiz.tvorlage,100) + CHR$ (100) + STR$ (codeaq.tvorlage,"000000")
           tfound1% = tfound1% + 1
         END IF 
         SELECT NEXT FILE "TVORLAGE" INDEX DTVorlage.tvorlage
       WEND 
     ELSE 
       WHILE codema.tvorlage = vcodema% AND NOT EOF ("TVORLAGE")
         TV%(tfound1%) = codeaq.tvorlage
         nn$ = LEFT$ (Nachname.tvorlage,30)
         l% = LEN (nn$)
         WHILE l% < 30
           nn$ = nn$ + " "
           l% = LEN (nn$)
         WEND 
         tt$ = DATE$ (termin.tvorlage,"0d.mm.yyyy") + " " + TIME$ (uhrzeit.tvorlage,"hh:mm") + "  "
         TV$(tfound1%) = DATE$ (datum.tvorlage,"0d.mm.yyyy") + " " + TIME$ (zeit.tvorlage,"hh:mm") + "  " + tt$ + nn$ + " / " + LEFT$ (Notiz.tvorlage,100) + CHR$ (100) + STR$ (codeaq.tvorlage,"000000")
         tfound1% = tfound1% + 1
         SELECT NEXT FILE "TVORLAGE" INDEX DTVorlage.tvorlage
       WEND 
     END IF 
     REDIM Auswahl$(tfound1%)
TCH100520002:   
     Superbase.Dialogs.Add("TERLISTE")
     SET dlg1 = Superbase.Dialogs.TERLISTE
     dlg1.Move(0,0,440,292)
     dlg1.Caption = "Termin-Wiedervorlagen-öbersicht"
     dlg1.FontName = "MS Sans Serif"
     dlg1.FontSize = 8
 
     SET control1 = dlg1.Add("DialogLabel1","DialogLabel")
     control1.Move(3,3,255,9)
     control1.Caption = "VDatum       VZeit   Termin        Zeit    Name                          Notiz"
 
     SET control1 = dlg1.Add("DialogListBox1","DialogListBox")
     control1.Move(4,17,429,249)
     control1.MultiSelect = 1
     control1.ScrollBars = 2
     control1.Bind("TV$","Auswahl$","prompt$")
 
     SET control1 = dlg1.Add("DialogCommandButton1","DialogCommandButton")
     control1.Move(3,270,114,16)
     control1.Default = 1
     control1.Caption = "&Wiedervorlage-Eintrag anzeigen"
     control1.ReturnValue = 1
 
     SET control1 = dlg1.Add("DialogCommandButton2","DialogCommandButton")
     control1.Move(120,270,56,16)
     control1.Caption = "&Drucken"
     control1.ReturnValue = 2
 
     SET control1 = dlg1.Add("DialogCommandButton3","DialogCommandButton")
     control1.Move(179,270,94,16)
     control1.Caption = "alle markierten Er&ledigen"
     control1.ReturnValue = 3
     offVlLi% = 1
     IF offVlLi% = 0 THEN 

      SET control1 = dlg1.Add("DialogTextBox1","DialogTextBox")
      control1.Move(275,271,19,14)
      control1.MaxLength = 3
      control1.TextBinding = "minuteab%"
 
      SET control1 = dlg1.Add("DialogLabel11","DialogLabel")
      control1.Move(296,274,123,14)
      control1.Caption = "Minuten bis zur wiederholten Anzeige"

       SET control1 = dlg1.Add("DialogCommandButton4","DialogCommandButton")
       control1.Move(418,270,20,16)
       control1.Caption = "&Ok"
       control1.ReturnValue = 0
       
     ELSE 
       SET control1 = dlg1.Add("DialogCommandButton4","DialogCommandButton")
       control1.Move(277,270,155,16)
       control1.Caption = "&öbersicht schlie·en"
       control1.ReturnValue = 0
       control1.Cancel = 1
     END IF 
  
     DIALOG "TERLISTE",req%
     REMOVE DIALOG ALL 

     REM &Abbrechen (in 10 Minuten wieder anzeigen)
     IF req% = 0 THEN 
       IF offVlLi% = 0 THEN 
         FOR i% = 0 TO tfound1% - 1
           IF TV%(i%) > 0 THEN 
             SELECT KEY TV%(i%) FILE "TVORLAGE" INDEX codeaq.TVORLAGE
             IF Datum.tvorlage <= TODAY THEN 
               SELECT FIRST FILE "TVORLAGE"
               SELECT KEY TV%(i%) LOCK FILE "TVORLAGE" INDEX codeaq.TVORLAGE
               zeit.tvorlage = NOW + (60000 * minuteab%)
               Datum.tvorlage = TODAY 
               stunde% = VAL ( LEFT$ ( TIME$ (zeit.tvorlage,"hh:mm"),2))
               IF stunde% > 24 THEN 
                 zeit.tvorlage = 0
                 Datum.tvorlage = TODAY + 1
                 d$ = DATE$ (Datum.tvorlage,"0d.mm.yyyy")
               END IF 
               DTVorlage.TVORLAGE = STR$ (CodeMA.tvorlage,"000000") + DATE$ (Datum.tvorlage,"yyyymm0d") + TIME$ (Zeit.tvorlage,"hhmm")
               STORE FILE "TVORLAGE"
               UNLOCK CURRENT FILE "TVORLAGE"
               REM t$ = TIME$ (z%,"hh:mm")
               SELECT KEY TV%(i%) LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
               erdatum.GAkquiDat$ = datum.tvorlage
               erzeit.GAkquiDat$ = zeit.tvorlage
               STORE FILE GAkquiDat$
               UNLOCK CURRENT FILE GAkquiDat$
             END IF 
           END IF 
         NEXT i%
       ELSE 
         terfound1% = 0
       END IF 
     END IF 

     REM zum einzelnen Wiedervorlagetermin springen
     IF req% = 1 THEN 
       ok% = 1
       _cuaq% = VAL ( RIGHT$ (Auswahl$(0),6))
       prompt$ = Auswahl$(0)
       lastTermin% = _cuaq%
       SELECT KEY _cuaq% FILE "TVORLAGE" INDEX codeaq.TVORLAGE
       REM knr% = codeku.TVORLAGE
       REM _vcodema% = codema.TVORLAGE
       REM 25072006
       CALL TerLiSpez(_cuaq%)
       REM CALL VorlTermEinz(_cuaq%)
       REM _formend% = 0
       GOTO TCH100520001
     END IF 

     REM alle Drucken
     IF req% = 2 THEN 
       REM Drucken
       CALL DFile(2,"OFFICE\aktionen" + _fpw$)
       CALL DFile(2,"OFFICE\adressen" + _fpw$)
       MOUSE OFF 
       IF OPEN ("AKQTMP") THEN CLOSE FILE "AKQTMP"
       IF EXISTS ("c:\AKQTMP.sbf") THEN 
         DELETE "c:\AKQTMP.*"
       END IF 
       COPY _netpath$ + "\OFFICE\AKQTMP.*" TO "c:\"
       OPEN FILE SHARE ,0"c:\AKQTMP;paris"
       FOR i% = 0 TO tfound1% - 1
         SET STATUS STR$ (i%,"9999999")
         codeaq% = VAL ( RIGHT$ (TV$(i%),6))
         SELECT KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         BLANK FILE "AKQTMP"
         codeku.AKQTMP = codeku.GAkquiDat$
         codeak.akqtmp = codeak.GAkquiDat$
         bearbeiter.AKQTMP = bearbeiter.GAkquiDat$
         codema.AKQTMP = codema.GAkquiDat$
         datum.AKQTMP = datum.GAkquiDat$
         notiz.AKQTMP = notiz.GAkquiDat$
         termin.AKQTMP = termin.GAkquiDat$
         erledigt_termin.AKQTMP = erledigt_termin.GAkquiDat$
         codeaq.AKQTMP = codeaq.GAkquiDat$
         Uhrzeit.AKQTMP = Uhrzeit.GAkquiDat$
         nachname.AKQTMP = nachname.GAkquiDat$
         ergebnis.AKQTMP = ergebnis.GAkquiDat$
         projekt.AKQTMP = projekt.GAkquiDat$
         codepr.AKQTMP = codepr.GAkquiDat$
         dauer.AKQTMP = dauer.GAkquiDat$
         DME.AKQTMP = dme.GAkquiDat$
         WTermin.AKQTMP = ErDatum.GAkquiDat$
         WZeit.AKQTMP = ErZeit.GAkquiDat$
         STORE FILE "AKQTMP"
         UNLOCK CURRENT FILE "AKQTMP"
       NEXT i%
       cdir$ = DIRECTORY 
       DIRECTORY _netpath$ + "OFFICE"
       CALL ORep("TERMINE2")
       HEADING 
       SET REPORT PAGE "H_PAGE"
       OUTPUT REPORT PAGE 
       END HEADING 
       AFTER SELECT 
       SET REPORT PAGE "F_SELECT"
       OUTPUT REPORT PAGE 
       END SELECT 
       SET QUERY ON 
       SET QUERY LOCK ON 
       Ueberschr$ = "Vorlagetermine Mitarbeiter: " + TName$
       ON ERROR GOTO chkter040620001
       SELECT ;
       WHERE codeak.AKQTMP = codeak.aktionen AND CodeKU.AKQTMP = CodeKU.ADRESSEN
       ORDER WTermin.AKQTMP,Wzeit.AKQTMP
       TO ASK 
       END SELECT 
chkter040620001: 
       ON ERROR GOTO ErrorHandler
       DIRECTORY cdir$
       MOUSE ON 

     END IF 

     REM alle markierten erledigen
     IF req% = 3 THEN 
       i% = 0
       WHILE Auswahl$(i%) <> ""
         _cuaq% = VAL ( RIGHT$ (Auswahl$(i%),6))
         IF _cuaq% > 0 THEN 
           SELECT FIRST FILE "TVORLAGE"
           SELECT KEY _cuaq% LOCK FILE "TVORLAGE" INDEX codeaq.TVORLAGE
           SELECT REMOVE 
           SELECT KEY _cuaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           erledigt_Termin.GAkquiDat$ = "j"
           CALL QuickStore(GAkquiDat$)
         END IF 
         i% = i% + 1
       WEND 
     END IF 
   ELSE 
   END IF 
 
   
 
 
   IF tfound1% = 1 THEN 
     DIM dlg AS Dialog
     DIM control AS DialogControl 
     FOR i% = 0 TO tfound1% - 1
       SELECT KEY TV%(i%) LOCK FILE "TVORLAGE" INDEX codeaq.tvorlage
       BELL 
       di2$ = "AA"
 
       Superbase.Dialogs.Add(di2$)
       SET dlg = Superbase.Dialogs(di2$)
       dlg.Move(0,0,389,292)
       dlg.Caption = "Termin am"
       dlg.FontName = "MS Sans Serif"
       dlg.FontSize = 8
 
       SET control = dlg.Add("DialogLabel1","DialogLabel")
       control.Move(4,4,273,10)
       control.Caption = "Kunde:"
 
       SET control = dlg.Add("DialogLabel2","DialogLabel")
       control.Move(4,16,274,12)
       control.CaptionBinding = "Nachname.tvorlage"
 
       SET control = dlg.Add("DialogLabel3","DialogLabel")
       control.Move(4,30,56,8)
       control.Caption = "Termin:"
 
       SET control = dlg.Add("DialogLabel8","DialogLabel")
       control.Move(153,30,56,8)
       control.Caption = "Vorlage:"
 
       SET control = dlg.Add("DialogTextBox5","DialogTextBox")
       control.Move(4,41,46,10)
       control.MaxLength = 20
       control.TextBinding = "Termin.tvorlage"
 
       SET control = dlg.Add("DialogTextBox3","DialogTextBox")
       control.Move(153,41,47,10)
       control.MaxLength = 20
       control.TextBinding = "Datum.tvorlage"
 
       SET control = dlg.Add("DialogTextBox6","DialogTextBox")
       control.Move(13,56,29,11)
       control.MaxLength = 20
       control.TextBinding = "UhrZeit.tvorlage"
 
       SET control = dlg.Add("DialogTextBox4","DialogTextBox")
       control.Move(158,56,30,11)
       control.MaxLength = 20
       control.TextBinding = "Zeit.tvorlage"
 
       SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
       control.Move(322,78,63,10)
       control.Caption = "Termin erledigt"
       control.Bind("erledigt_Termin.tvorlage")
       control.ValueOn = "j"
       control.ValueOff = "n"
 
       SET control = dlg.Add("DialogLabel4","DialogLabel")
       control.Move(4,81,56,8)
       control.Caption = "Notiz:"
 
       SET control = dlg.Add("DialogTextBox1","DialogTextBox")
       control.Move(2,92,384,63)
       control.MultiLine = 1
       control.ScrollEnable = 1
       control.ScrollBars = 2
       control.MaxLength = 4000
       control.TextBinding = "Notiz.tvorlage"
 
       SET control = dlg.Add("DialogLabel5","DialogLabel")
       control.Move(4,158,36,8)
       control.Caption = "Ergebnis:"
 
       SET control = dlg.Add("DialogTextBox2","DialogTextBox")
       control.Move(2,169,384,63)
       control.MultiLine = 1
       control.ScrollEnable = 1
       control.ScrollBars = 2
       control.MaxLength = 4000
       control.TextBinding = "Ergebnis.tvorlage"
 
       SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
       control.Move(2,235,109,16)
       control.Default = 1
       control.Caption = "&Vorlage nicht mehr anzeigen"
       control.ReturnValue = 1
 
       SET control = dlg.Add("DialogCommandButton4","DialogCommandButton")
       control.Move(116,235,109,16)
       control.Caption = "&Zum Termin springen"
       control.ReturnValue = 3
 
       SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
       control.Move(241,235,144,16)
       control.Caption = "&Neuen Vorlagetermin speichern"
       control.ReturnValue = 2
 
       SET control = dlg.Add("DialogCommandButton6","DialogCommandButton")
       control.Move(2,252,223,16)
       control.Caption = "Termin als erledigt kennzeichnen und Vorlage nicht mehr anzeigen"
       control.ReturnValue = 4
 
       SET control = dlg.Add("DialogCommandButton7","DialogCommandButton")
       control.Move(241,252,145,16)
       control.Caption = "Alle Angaben speichern"
       control.ReturnValue = 6
 
       SET control = dlg.Add("DialogCommandButton5","DialogCommandButton")
       control.Move(2,270,223,16)
       control.Caption = "Zum Termin springen und Vorlage lîschen"
       control.ReturnValue = 5
    
       SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
       control.Move(241,270,145,16)
       control.Caption = "&Abbrechen (in 5 Minuten wieder anzeigen)"
       control.ReturnValue = 0
       control.Cancel = 1
 
       DIALOG di2$,a%
       REMOVE DIALOG ALL 
       IF a% = 0 THEN 
         zeit.tvorlage = NOW + 300000
         Datum.tvorlage = TODAY 
               stunde% = VAL ( LEFT$ ( TIME$ (zeit.tvorlage,"hh:mm"),2))
               IF stunde% > 24 THEN 
                 zeit.tvorlage = 0
                 Datum.tvorlage = TODAY + 1
                 d$ = DATE$ (Datum.tvorlage,"0d.mm.yyyy")
               END IF 
         DTVorlage.TVORLAGE = STR$ (CodeMA.tvorlage,"000000") + DATE$ (Datum.tvorlage,"yyyymm0d") + TIME$ (Zeit.tvorlage,"hhmm")
         STORE FILE "TVORLAGE"
         UNLOCK CURRENT FILE "TVORLAGE"
         REM t$ = TIME$ (z%,"hh:mm")
         SELECT KEY TV%(i%) LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         erdatum.GAkquiDat$ = datum.tvorlage
         erzeit.GAkquiDat$ = zeit.tvorlage
         STORE FILE GAkquiDat$
         UNLOCK CURRENT FILE GAkquiDat$
         REM CALL Fehler(t$,"")
       END IF 
       IF a% = 1 THEN 
         REM lîschen
         FILE "TVorlage"
         SELECT KEY TV%(i%) LOCK FILE "TVorlage" INDEX codeaq.Tvorlage
         SELECT REMOVE 
         SELECT KEY TV%(i%) LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         knr% = codeku.GAkquiDat$
         erdatum.GAkquiDat$ = ""
         erzeit.GAkquiDat$ = ""
         STORE FILE GAkquiDat$
         UNLOCK CURRENT FILE GAkquiDat$
       END IF 
       IF a% = 2 THEN 
         REM Neuen Vorlagetermin speichern
         DTVorlage.TVORLAGE = STR$ (CodeMA.tvorlage,"000000") + DATE$ (Datum.tvorlage,"yyyymm0d") + TIME$ (Zeit.tvorlage,"hhmm")
         STORE FILE "TVORLAGE"
         UNLOCK CURRENT FILE "TVORLAGE"
         SELECT KEY TV%(i%) LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         erdatum.GAkquiDat$ = datum.tvorlage
         erzeit.GAkquiDat$ = zeit.tvorlage
         STORE FILE GAkquiDat$
         UNLOCK CURRENT FILE GAkquiDat$
       END IF 
       IF a% = 3 THEN 
         REM zum Termin springen
         zeit.tvorlage = NOW + 300000
         Datum.tvorlage = TODAY 
               stunde% = VAL ( LEFT$ ( TIME$ (zeit.tvorlage,"hh:mm"),2))
               IF stunde% > 24 THEN 
                 zeit.tvorlage = 0
                 Datum.tvorlage = TODAY + 1
                 d$ = DATE$ (Datum.tvorlage,"0d.mm.yyyy")
               END IF 
         DTVorlage.TVORLAGE = STR$ (CodeMA.tvorlage,"000000") + DATE$ (Datum.tvorlage,"yyyymm0d") + TIME$ (Zeit.tvorlage,"hhmm")
         STORE FILE "TVORLAGE"
         UNLOCK CURRENT FILE "TVORLAGE"
         REM t$ = TIME$ (z%,"hh:mm")
         SELECT KEY TV%(i%) LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         knr% = codeku.GAkquiDat$
         _vcodema% = codema.GAkquiDat$
         erzeit.GAkquiDat$ = zeit.tvorlage
         STORE FILE GAkquiDat$
         UNLOCK CURRENT FILE GAkquiDat$
         REM 10042000                                             
         IF UCASE$ ( FORM ) <> GAkquiDat$ AND UCASE$ ( FORM ) <> "AKQUIPRJ" THEN 
           CALL TerLiSpez(TV%(i%))
         ELSE 
           _cuaq% = TV%(i%)
           SELECT FORM KEY TV%(i%) FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           FORM 
           SET DISPLAY ON 
           CALL AKQUISEIntro1()
           CALL AQButtUpdate()
         END IF 
       END IF 
       IF a% = 4 THEN 
         REM Termin als erledigt kennzeichnen und Vorlage nicht mehr anzeigen
         SELECT REMOVE 
         SELECT KEY TV%(i%) LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         erledigt_Termin.GAkquiDat$ = "j"
         CALL QuickStore(GAkquiDat$)
       END IF 
       IF a% = 5 THEN 
         REM zum Termin springen und Vorlage nicht mehr anzeigen
         FILE "TVorlage"
         SELECT KEY TV%(i%) LOCK FILE "TVorlage" INDEX codeaq.Tvorlage
         SELECT REMOVE 
         SELECT KEY TV%(i%) LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         knr% = codeku.GAkquiDat$
         erdatum.GAkquiDat$ = ""
         erzeit.GAkquiDat$ = ""
         STORE FILE GAkquiDat$
         UNLOCK CURRENT FILE GAkquiDat$
         _vcodema% = codema.GAkquiDat$
         IF UCASE$ ( FORM ) <> GAkquiDat$ AND UCASE$ ( FORM ) <> "AKQUIPRJ" THEN 
           CALL TerLiSpez(TV%(i%))
         ELSE 
           _cuaq% = TV%(i%)
           SELECT FORM KEY TV%(i%) FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           FORM 
           SET DISPLAY ON 
           CALL AKQUISEIntro1()
           CALL AQButtUpdate()
         END IF 
       END IF 
       IF a% = 6 THEN 
         REM alle Angaben speichern
         DTVorlage.TVORLAGE = STR$ (CodeMA.tvorlage,"000000") + DATE$ (Datum.tvorlage,"yyyymm0d") + TIME$ (Zeit.tvorlage,"hhmm")
         STORE FILE "TVORLAGE"
         UNLOCK CURRENT FILE "TVORLAGE"
         SELECT KEY TV%(i%) LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         termin.GAkquiDat$ = Termin.TVORLAGE
         Uhrzeit.GAkquiDat$ = Uhrzeit.TVORLAGE
         ERDATUM.GAkquiDat$ = Datum.TVORLAGE
         ErZeit.GAkquiDat$ = Zeit.TVORLAGE
         Notiz.GAkquiDat$ = Notiz.TVORLAGE
         Ergebnis.GAkquiDat$ = Ergebnis.TVORLAGE
         Nachname.GAkquiDat$ = Nachname.TVORLAGE
         Bearbeiter.GAkquiDat$ = Bearbeiter.TVORLAGE
         erledigt_termin.GAkquiDat$ = erledigt_Termin.tvorlage
         CALL QuickStore(GAkquiDat$)
         IF erledigt_termin.GAkquiDat$ = "j" THEN 
           REMOVE FROM FILE "tvorlage" WHERE codeaq.tvorlage = TV%(i%)
         END IF 
       END IF 
     NEXT i%
   END IF 
 ELSE 
   IF terbyhand% = 1 THEN 
     CALL Fehler("Keine Wiedervorlagetermine gefunden!","")
   END IF 
 END IF 
ETCH100520002: 
 FILE cfile$
 offVlLi% = 0
 SET STATUS ""
 END SUB 
  
 
SUB VorlTermEinz(codeaq%)
     REMOVE DIALOG ALL 
     ON ERROR GOTO ErrorHandler
     REM DIM dlg AS Dialog
     DIM control AS DialogControl 
       SELECT KEY codeaq% LOCK FILE "TVORLAGE" INDEX codeaq.tvorlage
       BELL 
       di2$ = "AAaaa"
 
       Superbase.Dialogs.Add(di2$)
       SET dlg = Superbase.Dialogs(di2$)
       dlg.Move(0,0,389,292)
       dlg.Caption = "Termin am"
       dlg.FontName = "MS Sans Serif"
       dlg.FontSize = 8
 
       SET control = dlg.Add("DialogLabel1","DialogLabel")
       control.Move(4,4,273,10)
       control.Caption = "Kunde:"
 
       SET control = dlg.Add("DialogLabel2","DialogLabel")
       control.Move(4,16,274,12)
       control.CaptionBinding = "Nachname.tvorlage"
 
       SET control = dlg.Add("DialogLabel3","DialogLabel")
       control.Move(4,30,56,8)
       control.Caption = "Termin:"
 
       SET control = dlg.Add("DialogLabel8","DialogLabel")
       control.Move(153,30,56,8)
       control.Caption = "Vorlage:"
 
       SET control = dlg.Add("DialogTextBox5","DialogTextBox")
       control.Move(4,41,46,10)
       control.MaxLength = 20
       control.TextBinding = "Termin.tvorlage"
 
       SET control = dlg.Add("DialogTextBox3","DialogTextBox")
       control.Move(153,41,47,10)
       control.MaxLength = 20
       control.TextBinding = "Datum.tvorlage"
 
       SET control = dlg.Add("DialogTextBox6","DialogTextBox")
       control.Move(13,56,29,11)
       control.MaxLength = 20
       control.TextBinding = "UhrZeit.tvorlage"
 
       SET control = dlg.Add("DialogTextBox4","DialogTextBox")
       control.Move(158,56,30,11)
       control.MaxLength = 20
       control.TextBinding = "Zeit.tvorlage"
 
       SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
       control.Move(322,78,63,10)
       control.Caption = "Termin erledigt"
       control.Bind("erledigt_Termin.tvorlage")
       control.ValueOn = "j"
       control.ValueOff = "n"
 
       SET control = dlg.Add("DialogLabel4","DialogLabel")
       control.Move(4,81,56,8)
       control.Caption = "Notiz:"
 
       SET control = dlg.Add("DialogTextBox1","DialogTextBox")
       control.Move(2,92,384,63)
       control.MultiLine = 1
       control.ScrollEnable = 1
       control.ScrollBars = 2
       control.MaxLength = 4000
       control.TextBinding = "Notiz.tvorlage"
 
       SET control = dlg.Add("DialogLabel5","DialogLabel")
       control.Move(4,158,36,8)
       control.Caption = "Ergebnis:"
 
       SET control = dlg.Add("DialogTextBox2","DialogTextBox")
       control.Move(2,169,384,63)
       control.MultiLine = 1
       control.ScrollEnable = 1
       control.ScrollBars = 2
       control.MaxLength = 4000
       control.TextBinding = "Ergebnis.tvorlage"
 
       SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
       control.Move(2,235,109,16)
       control.Default = 1
       control.Caption = "&Vorlage nicht mehr anzeigen"
       control.ReturnValue = 1
 
       SET control = dlg.Add("DialogCommandButton4","DialogCommandButton")
       control.Move(116,235,109,16)
       control.Caption = "&Zum Termin springen"
       control.ReturnValue = 3
 
       SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
       control.Move(241,235,144,16)
       control.Caption = "&Neuen Vorlagetermin speichern"
       control.ReturnValue = 2
 
       SET control = dlg.Add("DialogCommandButton6","DialogCommandButton")
       control.Move(2,252,223,16)
       control.Caption = "Termin als erledigt kennzeichnen und Vorlage nicht mehr anzeigen"
       control.ReturnValue = 4
 
       SET control = dlg.Add("DialogCommandButton7","DialogCommandButton")
       control.Move(241,252,145,16)
       control.Caption = "Alle Angaben speichern"
       control.ReturnValue = 6
 
       SET control = dlg.Add("DialogCommandButton5","DialogCommandButton")
       control.Move(2,270,223,16)
       control.Caption = "Zum Termin springen und Vorlage lîschen"
       control.ReturnValue = 5
    
       SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
       control.Move(241,270,145,16)
       control.Caption = "&Abbrechen (in 5 Minuten wieder anzeigen)"
       control.ReturnValue = 0
       control.Cancel = 1
 
       DIALOG di2$,a%
       REMOVE DIALOG ALL 
       GCodieRuf1% = 0
       IF a% = 0 THEN 
         IF Datum.tvorlage <= TODAY THEN 
           zeit.tvorlage = NOW + 300000
           Datum.tvorlage = TODAY 
               stunde% = VAL ( LEFT$ ( TIME$ (zeit.tvorlage,"hh:mm"),2))
               IF stunde% > 24 THEN 
                 zeit.tvorlage = 0
                 Datum.tvorlage = TODAY + 1
                 d$ = DATE$ (Datum.tvorlage,"0d.mm.yyyy")
               END IF 
           DTVorlage.TVORLAGE = STR$ (CodeMA.tvorlage,"000000") + DATE$ (Datum.tvorlage,"yyyymm0d") + TIME$ (Zeit.tvorlage,"hhmm")
           STORE FILE "TVORLAGE"
           UNLOCK CURRENT FILE "TVORLAGE"
           REM t$ = TIME$ (z%,"hh:mm")
           SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           erdatum.GAkquiDat$ = datum.tvorlage
           erzeit.GAkquiDat$ = zeit.tvorlage
           STORE FILE GAkquiDat$
           UNLOCK CURRENT FILE GAkquiDat$
         END IF 
         REM CALL Fehler(t$,"")
       END IF 
       IF a% = 1 THEN 
         REM lîschen
         FILE "TVorlage"
         SELECT KEY codeaq% LOCK FILE "TVorlage" INDEX codeaq.Tvorlage
         SELECT REMOVE 
         SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         knr% = codeku.GAkquiDat$
         erdatum.GAkquiDat$ = ""
         erzeit.GAkquiDat$ = ""
         STORE FILE GAkquiDat$
         UNLOCK CURRENT FILE GAkquiDat$
       END IF 
       IF a% = 2 THEN 
         REM Neuen Vorlagetermin speichern
         DTVorlage.TVORLAGE = STR$ (CodeMA.tvorlage,"000000") + DATE$ (Datum.tvorlage,"yyyymm0d") + TIME$ (Zeit.tvorlage,"hhmm")
         STORE FILE "TVORLAGE"
         UNLOCK CURRENT FILE "TVORLAGE"
         SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         erdatum.GAkquiDat$ = datum.tvorlage
         erzeit.GAkquiDat$ = zeit.tvorlage
         STORE FILE GAkquiDat$
         UNLOCK CURRENT FILE GAkquiDat$
       END IF 
       IF a% = 3 THEN 
         REM zum Termin springen
         IF Datum.tvorlage < TODAY THEN 
           zeit.tvorlage = NOW + 300000
           Datum.tvorlage = TODAY 
               stunde% = VAL ( LEFT$ ( TIME$ (zeit.tvorlage,"hh:mm"),2))
               IF stunde% > 24 THEN 
                 zeit.tvorlage = 0
                 Datum.tvorlage = TODAY + 1
                 d$ = DATE$ (Datum.tvorlage,"0d.mm.yyyy")
               END IF 
           DTVorlage.TVORLAGE = STR$ (CodeMA.tvorlage,"000000") + DATE$ (Datum.tvorlage,"yyyymm0d") + TIME$ (Zeit.tvorlage,"hhmm")
           STORE FILE "TVORLAGE"
           UNLOCK CURRENT FILE "TVORLAGE"
         ELSE 
           IF Datum.tvorlage = TODAY AND zeit.tvorlage < NOW THEN 
             zeit.tvorlage = NOW + 300000
             Datum.tvorlage = TODAY 
               stunde% = VAL ( LEFT$ ( TIME$ (zeit.tvorlage,"hh:mm"),2))
               IF stunde% > 24 THEN 
                 zeit.tvorlage = 0
                 Datum.tvorlage = TODAY + 1
                 d$ = DATE$ (Datum.tvorlage,"0d.mm.yyyy")
               END IF 
             DTVorlage.TVORLAGE = STR$ (CodeMA.tvorlage,"000000") + DATE$ (Datum.tvorlage,"yyyymm0d") + TIME$ (Zeit.tvorlage,"hhmm")
             STORE FILE "TVORLAGE"
             UNLOCK CURRENT FILE "TVORLAGE"
           END IF 
         END IF 
         REM t$ = TIME$ (z%,"hh:mm")
         SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         knr% = codeku.GAkquiDat$
         _vcodema% = codema.GAkquiDat$
         erzeit.GAkquiDat$ = zeit.tvorlage
         STORE FILE GAkquiDat$
         UNLOCK CURRENT FILE GAkquiDat$
         REM 10042000                                             
         IF UCASE$ ( FORM ) <> GAkquiDat$ AND UCASE$ ( FORM ) <> "AKQUIPRJ" THEN 
           CALL TerLiSpez(codeaq%)
           _formend% = 1
         ELSE 
           IF GCODie% <> - 1 THEN 
             _cuaq% = TV%(i%)
             CALL TerLiSpez(_cuaq%)
           ELSE 
             CALL TerLiSpez(codeaq%)
           END IF 
           _formend% = 1
           REM SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           REM FORM 
           REM SET DISPLAY ON 
           REM CALL AKQUISEIntro1()
           REM CALL AQButtUpdate()
         END IF 
       END IF 
       IF a% = 4 THEN 
         REM Termin als erledigt kennzeichnen und Vorlage nicht mehr anzeigen
         SELECT REMOVE 
         SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         erledigt_Termin.GAkquiDat$ = "j"
         CALL QuickStore(GAkquiDat$)
       END IF 
       IF a% = 5 THEN 
         REM zum Termin springen und Vorlage nicht mehr anzeigen
         FILE "TVorlage"
         SELECT KEY codeaq% LOCK FILE "TVorlage" INDEX codeaq.Tvorlage
         SELECT REMOVE 
         SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         knr% = codeku.GAkquiDat$
         erdatum.GAkquiDat$ = ""
         erzeit.GAkquiDat$ = ""
         STORE FILE GAkquiDat$
         UNLOCK CURRENT FILE GAkquiDat$
         _vcodema% = codema.GAkquiDat$
         IF UCASE$ ( FORM ) <> GAkquiDat$ AND UCASE$ ( FORM ) <> "AKQUIPRJ" THEN 
           CALL TerLiSpez(codeaq%)
         ELSE 
           _cuaq% = codeaq%
           SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           FORM 
           SET DISPLAY ON 
           CALL AKQUISEIntro1()
           CALL AQButtUpdate()
         END IF 
       END IF 
       IF a% = 6 THEN 
         REM alle Angaben speichern
         DTVorlage.TVORLAGE = STR$ (CodeMA.tvorlage,"000000") + DATE$ (Datum.tvorlage,"yyyymm0d") + TIME$ (Zeit.tvorlage,"hhmm")
         STORE FILE "TVORLAGE"
         UNLOCK CURRENT FILE "TVORLAGE"
         SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         termin.GAkquiDat$ = Termin.TVORLAGE
         Uhrzeit.GAkquiDat$ = Uhrzeit.TVORLAGE
         ERDATUM.GAkquiDat$ = Datum.TVORLAGE
         ErZeit.GAkquiDat$ = Zeit.TVORLAGE
         Notiz.GAkquiDat$ = Notiz.TVORLAGE
         Ergebnis.GAkquiDat$ = Ergebnis.TVORLAGE
         Nachname.GAkquiDat$ = Nachname.TVORLAGE
         Bearbeiter.GAkquiDat$ = Bearbeiter.TVORLAGE
         erledigt_termin.GAkquiDat$ = erledigt_Termin.tvorlage
         CALL QuickStore(GAkquiDat$)
         IF erledigt_termin.GAkquiDat$ = "j" THEN 
           REMOVE FROM FILE "tvorlage" WHERE codeaq.tvorlage = codeaq%
         END IF 
       END IF 
   END IF 
 END SUB 
 


 ' Nummernvergabe im Netzwerk
 ' ======================================================================
 
FUNCTION sernum%(datei$)
 datei$ = UCASE$ (datei$)
 CALL DFile(2,"OFFICE\sernum" + _fpw$)
 SELECT KEY datei$ LOCK FILE "sernum" INDEX datei.sernum
 IF NOT FOUND ("sernum") THEN 
   BLANK FILE "sernum"
   CodeSN.sernum = SER ("sernum",1)
   Datei.sernum = datei$
   lastnum.sernum = SER (datei$,1) + 1
   sernum% = lastnum.sernum
   STORE FILE "sernum"
   UNLOCK CURRENT FILE "sernum"
 ELSE 
   lastnum.sernum = lastnum.sernum + 1
   sernum% = lastnum.sernum
   STORE FILE "sernum"
   UNLOCK CURRENT FILE "sernum"
 END IF 
 END FUNCTION 
 
 
 '      ******************************
 '      ** Handling von LOG-Dateien **
 '      ******************************
 
SUB LogDemo()
 CALL CreateLog()
 FOR a% = 1 TO 20
   CALL WriteLog( STR$ (a%,"9999") + ". Aufruf von WriteLog()")
 NEXT 
 CALL CloseLog()
 END SUB 
  
 
SUB CreateLog()
 OPEN _netpath$ + _projekt$ + ".LOG" FOR OUTPUT 
 ? "Datei " + UCASE$ (_netpath$ + _projekt$) + ".LOG erstellt am " + DATE$ ( TODAY ,"0d.mm.yyyy") + " / " + TIME$ ( NOW ,"hh:mm:ss")
 ? "-------------------------------------------------------------------------"
 ? 
 CLOSE OUTPUT 
 END SUB 
 
SUB CloseLog()
 OPEN _netpath$ + _projekt$ + ".LOG" FOR APPEND 
 ? 
 ? "-------------------------------------------------------------------------"
 ? "Eintragung beendet am " + DATE$ ( TODAY ,"0d.mm.yyyy") + "/" + TIME$ ( NOW ,"hh:mm:ss")
 CLOSE OUTPUT 
 CREATE DIALOG "PROT",0,0,244,154,title$,"MS Sans Serif",8
 ADD DIALOG "PROT",4,0,0,244,130,0,""
 ADD DIALOG "PROT",9,6,9,22,22,2
 ADD DIALOG "PROT",5,35,13,194,10,0,"WÑhrend der zuletzt durchgefÅhrten Aktion wurde eine"
 ADD DIALOG "PROT",5,35,23,194,10,0,"Protokolldatei erstellt, in der eventuelle Fehler und Zusatz-"
 ADD DIALOG "PROT",5,35,33,194,10,0,"information gespeichert wurden."
 ADD DIALOG "PROT",5,35,53,194,10,0,"WÑhlen Sie " + CHR$ (34) + "Ja" + CHR$ (34) + ", wenn Sie das Protokoll einsehen und"
 ADD DIALOG "PROT",5,35,63,194,10,0,"eventuell Drucken wollen."
 ADD DIALOG "PROT",5,35,83,194,10,0,"WÑhlen Sie " + CHR$ (34) + "Nein" + CHR$ (34) + ", wenn Sie das Protokoll nicht"
 ADD DIALOG "PROT",5,35,93,194,10,0,"einsehen mîchten."
 ADD DIALOG "PROT",5,35,113,194,10,0,"Wollen Sie das Protokoll einsehen?"
 ADD DIALOG "PROT",1,118,134,55,15,0,"&Nein",0,0
 ADD DIALOG "PROT",1,62,134,55,15,1,"&Ja",1,1
 DIALOG "PROT",req%
 REMOVE DIALOG "PROT"
 IF req% = 1 THEN CALL ShowLog()
 END SUB 
 
SUB WriteLog(logtext$)
 OPEN _netpath$ + _projekt$ + ".LOG" FOR APPEND 
 ? FN ansi(logtext$)
 CLOSE OUTPUT 
 END SUB 
 
SUB DeleteLog()
 IF EXISTS (_netpath$ + _projekt$ + ".LOG") THEN DELETE _netpath$ + _projekt$ + ". LOG "
 END SUB 
  
SUB ShowLog()
 SET STATUS "Anzeige des Fehlerprotokolls"
 IF EXISTS (_netpath$ + _projekt$ + ".LOG") THEN 
   LOAD TEXT _netpath$ + _projekt$ + ".LOG"
   EDIT TEXT 
 ELSE 
   CALL Fehler("Es konnte kein Fehlerprotokoll gefunden werden!","")
 END IF 
 SET STATUS "Bereit"
 END SUB 
  
SUB EditASCIIFile(asciifile$)
 IF EXISTS (asciifile$) THEN 
   LOAD TEXT asciifile$
   EDIT TEXT 
 ELSE 
   CALL Fehler("Die Datei " + UCASE$ (asciifile$) + " konnte nicht gefunden werden!","")
 END IF 
 END SUB 
 
 
 '      *********************************************
 '      ** allgemeine Routinen fÅr Adre·verwaltung **
 '      *********************************************
 
SUB ADRESSEN()
 IF disabled%("ADRESSEN") THEN END SUB 
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\adrhis" + _fpw$)
 CALL DFile(2,"OFFICE\adrstat" + _fpw$)
 CALL DFile(2,"OFFICE\adrgrup" + _fpw$)
 IF OPEN ("adrtemp") THEN CLOSE FILE "ADRTEMP"
 CALL DFile(2,"OFFICE\adrtemp" + _fpw$)
 CALL DFile(2,"color" + _fpw$)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(2,"OFFICE\connect" + _fpw$)
 CALL DFile(2,"OFFICE\banken" + _fpw$)
 REM CALL Fehler("","")
         CALL DFile(3,"TEILREIN" + _fpw$)
         CALL DFile(3,"REINGANG" + _fpw$)
         CALL DFile(3,"TEILRAUS" + _fpw$)
         CALL DFile(3,"RAUSGANG" + _fpw$)
   CALL DFile(3,"MASTER" + _fpw$)
   CALL DFile(3,"MAHNUNG" + _fpw$)
   CALL DFile(3,"UMSATZ" + _fpw$)
   CALL DFile(3,"VERTRETE" + _fpw$)
   CALL DFile(3,"PROVISIO" + _fpw$)
   CALL DFile(3,"VERLEIH" + _fpw$)
   CALL DFile(3,"JOURNAL" + _fpw$)
   IF DEFA$ = "MEGA" THEN 
     CALL DFile(3,"KSATZ" + _fpw$)
     CALL DFile(3,"SSATZ" + _fpw$)
   END IF 
   CALL DFile(2,"OFFICE\produkt" + _fpw$)
   CALL DFile(2,"OFFICE\prgruppe" + _fpw$)
   CALL DFile(2,"OFFICE\kprodukt" + _fpw$)
 MOUSE OFF 
 
 
 IF knr% = 0 THEN knr% = VAL (ReadINI$(_projekt$,"LastAdress"))
 _formend% = 0
 ADRsub% = 0

 adrmaske$ = "ADRESSEN"
 IF DEFA$ = "MEGA" THEN adrmaske$ = "ADRDEFA"
 IF ProjectJN$ = "TRUE" THEN adrmaske$ = "ADRPROJ"
 IF UCASE$ (mastform$) = "EUR" THEN 
   adrmaske$ = "ADRESSEE"
 ELSE 
   adrmaske$ = "ADRESSEN"
 END IF 
 IF ProjectJN$ = "TRUE" THEN 
   IF UCASE$ (mastform$) = "EUR" THEN 
     IF ProjectJN$ = "TRUE" THEN adrmaske$ = "ADRPROJE"
   ELSE 
     IF ProjectJN$ = "TRUE" THEN adrmaske$ = "ADRPROJ"
   END IF 
 END IF 
 
 REM CALL BMCheckMail()
 IF GCodieADR$ LIKE "TRUE" THEN 
   adrmaske$ = "ADRPROJC"
 ELSE 
   IF Gmaul$ LIKE "TRUE" THEN 
     adrmaske$ = "ADRPROJE"
   ELSE 
     REM Normalos
     IF GBildschirm% = 800 THEN 
       adrmaske$ = "ADRPROJE"
     ELSE 
       adrmaske$ = "ADRPROJI"
     END IF 
   END IF 
 END IF 
 adrmaskeorig$ = adrmaske$
 filtbutorg1$ = "Filter: ohne"
 WHILE _formend% = 0
   ADRsub% = 0
   REM adrmaske$ = "ADRESSEN"
   MOUSE OFF 

   IF FORM <> adrmaske$ THEN 
     SET HEADING title$ + " - Adre·verwaltung"
     OPEN FORM GPrjForm$ + adrmaske$ PAGE 1
     SET f = Superbase.Form
     IF _projekt$ LIKE "FACTURA" THEN 
       IF eurosupport$ = "FALSE" THEN 
         f.waehrmask.visible = 0
       ELSE 
         f.waehrmask.visible = - 1
       END IF 
     END IF 
     SET STATUS "Adre·verwaltung"
     CALL ADRIntro()
     MOUSE OFF 
     GAppName$ = _netpath$ + "DOCP\adressen.pdf"
     CALL MNADRESSEN()
     CALL ADRFeldnamen()
     filtbutadr1$ = filtbutorg1$
     FORM 
     MOUSE OFF 
     IF disabled%("ADRUMSATZ") THEN 
       f.umstzp.visible = - 1
       zeigums$ = "zeige Umsatz"
     ELSE 
       ON ERROR GOTO w240220091
       f.umstzp.visible = 0
       zeigums$ = "Umsatz ausblenden"
w240220091: 
       ON ERROR GOTO ErrorHandler
     END IF 
     SET DISPLAY ON 
     REM CALL BMCheckMail()
   END IF 
   REM CALL ADRFeldnamen()
   IF adrmaske$ = "ADRPRO*" THEN 
     IF Versionsverw$ = "TRUE" THEN 
       f.produ1.visible = - 1
       f.produ1.enabled = - 1
     ELSE 
       f.produ1.visible = 0
       f.produ1.enabled = 0
       f.produ1.visible = - 1
       f.produ1.enabled = - 1
     END IF 
     IF VerleihAdr$ = "j" THEN 
       f.verleih1.visible = - 1
       f.verleih1.enabled = - 1
     ELSE 
       f.verleih1.visible = 0
       f.verleih1.enabled = 0
     END IF 
   END IF 
   FILE "adressen"
   REM IF adrsub% <> 14 THEN CALL ADRFeldnamen()
   MOUSE ON 
   MENU ON mnadr1%,mnadr2%
   CALL ClearKBDBuffer()
   IF _projekt$ <> "WAWI" THEN 
     f.abbruch.visible = 0
     f.abbruch.enabled = 0
     f.suchen.enabled = - 1
     f.suchen.visible = - 1
     IF _projekt$ <> "AKTE" THEN 
       f.sperre.enabled = - 1
     END IF 
   END IF 
   IF RECCOUNT ("Adressen") < 1 THEN 
     BLANK FILE "adressen"
     codeku% = SER ("adressen",1)
     codeku.adressen = codeku%
     nachname.adressen = "NEU"
     Workstation.adressen = Workstation%
     QWoNo.adressen = STR$ (Workstation%,"000000") + STR$ (codeku%,"000000")
     RecStatus.adressen = "c"
     STORE FILE "adressen"
     UNLOCK CURRENT FILE "adressen"
     SELECT KEY codeku% LOCK FILE "adressen" INDEX codeku.adressen
   END IF 
   REM FORM 
   GVorname$ = Vorname.adressen
   GName$ = Nachname.adressen
   GGebname$ = Geburtsname.adressen
   GOrt$ = Ort.adressen
   GPLZ$ = PLZ.adressen
   GStrasse$ = Stra·e.adressen
   knr% = codeku.adressen
   MENU ON 
   ON ERROR GOTO err050620071
   IF GMACodema% = 2 THEN 
     f.news1.visible = - 1
     f.news1.enabled = - 1
     f.news2.visible = - 1
     f.news2.enabled = - 1
   ELSE 
     f.news1.visible = 0
     f.news1.enabled = 0
     f.news2.visible = 0
     f.news2.enabled = 0
   END IF 
err050620071:   
   ON ERROR GOTO ErrorHandler
   IF gvonadr% = - 1 OR GposOld% = - 1 THEN 
     f.termine.enabled = - 1
     f.terminliste.enabled = - 1
     f.suchen.enabled = - 1
   ELSE 
     f.termine.enabled = 0
     f.terminliste.enabled = 0
     f.suchen.enabled = 0
   END IF 
   ON ERROR GOTO f120620051
   IF GCODieADR$ LIKE "TRUE" THEN 
     f.Internetupd.visible = 0
     f.InternetUpdJN.enabled = - 1
     f.version.enabled = - 1
   ELSE 
     f.Internetupd.visible = - 1
     f.InternetUpdJN.enabled = 0
     f.version.enabled = 0
   END IF 
   IF Mahnsperre.adressen LIKE "J" THEN 
     f.mahnsperre.BackColor = 2
     mahnsperr$ = "Mahnsperre Æ"
   ELSE 
     f.mahnsperre.BackColor = 253
     mahnsperr$ = "Mahnsperre"
   END IF 
   IF GCodieADR$ LIKE "TRUE" THEN 
   ELSE 
     IF Rechsperre.adressen LIKE "J" THEN 
       f.rechsperr.BackColor = 2
       rechsperr$ = "Rechnungssperre Æ"
     ELSE 
       f.rechsperr.BackColor = 253
       rechsperr$ = "Rechnungssperre"
     END IF 
   END IF 
f120620051: 
   ON ERROR GOTO ErrorHandler
   IF rechadr.adressen <> "" THEN r1d1$ = "R"
   IF lieferadr.adressen <> "" THEN l1d1$ = "L"
   FORM 
   IF ADRsub% <> 99 THEN WAIT MOUSE OR KEY OR MENU OR FOR 600
   IF ADRsub% = 0 THEN 
     REM IF UCASE$ ( FORM ) = UCASE$ (adrmaske$) AND _formend% = 0 THEN CALL BMCheckMail()
     REM CALL UmsFuel1ab()
   END IF 
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL ADRPrev()
   CASE CrsRight%,PgDn%
     CALL ADRNext()
   CASE ASC ("T"), ASC ("t")
     CALL AKQUISE(2)
   END SELECT 
   IF k$ = CHR$ (27) THEN 
     IF PAGE = 1 THEN _formend% = 1
     IF PAGE > 1 THEN FORM 1
   END IF 
   SELECT CASE ADRsub%
   CASE 217
     REM AdressÅbersicht
     knr% = codeku.adressen
     CALL AdrUEB()
   CASE 216
     IF RIGHT$ (adrmaskeorig$,1) LIKE "C" THEN 
       adrmaske$ = "ADRPROJ4"
     ELSE 
       adrmaske$ = "ADRPROJ9"
     END IF 
     filtbutadr1$ = filtbutorg1$
   CASE 215
     IF RIGHT$ (adrmaskeorig$,1) LIKE "C" THEN 
       adrmaske$ = "ADRPROJ3"
     ELSE 
       adrmaske$ = "ADRPROJ8"
     END IF 
     filtbutadr1$ = filtbutorg1$
   CASE 214
     IF RIGHT$ (adrmaskeorig$,1) LIKE "C" THEN 
       adrmaske$ = "ADRPROJ2"
     ELSE 
       adrmaske$ = "ADRPROJ7"
     END IF 
     filtbutadr1$ = filtbutorg1$
   CASE 213
     IF RIGHT$ (adrmaskeorig$,1) LIKE "C" THEN 
       adrmaske$ = "ADRPROJ1"
     ELSE 
       adrmaske$ = "ADRPROJ6"
     END IF 
     filtbutadr1$ = filtbutorg1$
   CASE 212
     REM ohne Sortierung
     adrmaske$ = adrmaskeorig$
   CASE 211
     REM Filter
     IF filtbutadr1$ LIKE "Filter: ohne" THEN 
       CREATE DIALOG "ADRSUCH",0,0,225,100,title$,"MS Sans Serif",8
       ADD DIALOG "ADRSUCH",4,0,0,225,275,0,""
       ADD DIALOG "ADRSUCH",9,6,12,20,23,2
       ADD DIALOG "ADRSUCH",5,32,14,184,19,0,"Nach dem Filterbegriff wird in den Spalten Art und Nummer gesucht."
       ADD DIALOG "ADRSUCH",6,82,45,108,11,128,0,sunaa$,20
       ADD DIALOG "ADRSUCH",1,32,72,64,15,1,"&OK",1,1
       ADD DIALOG "ADRSUCH",1,130,72,64,15,0,"&Abbruch",0,0
       ADD DIALOG "ADRSUCH",5,32,45,50,10,0,"Filterbegriff:"
       DIALOG "ADRSUCH",req%
       REMOVE DIALOG "ADRSUCH"
       IF req% = 1 THEN 
         suna1$ = sunaa$
         IF LEFT$ (sunaa$,1) <> "*" THEN suna1$ = "*" + suna1$
         IF RIGHT$ (sunaa$,1) <> "*" THEN suna1$ = suna1$ + "*"
         FILE GTelDat$
         SELECT WHERE art.GTeldat$ LIKE suna1$ OR nummer.gteldat$ LIKE suna1$
         filtbutadr1$ = "Filter: " + sunaa$
         FILE GADRDat$
       END IF 
       CALL ADRFeldnamen()
       FORM 
     ELSE 
       filtbutadr1$ = "Filter: ohne"
       SELECT WHERE FILE GTelDat$
       CALL ADRFeldnamen()
       FORM 
     END IF 
     filtbutorg1$ = filtbutadr1$
   CASE 210
     REM VerlÑngerungsemail fÅr SmartPROVIS
     IF LTRIM$ (InternetEMAIL.adressen) <> "" THEN 
       IF LTRIM$ (LizenzNotiz.adressen) <> "" THEN 
         CALL SendEMAIL5(InternetEMAIL.adressen,codeku.adressen)
       ELSE 
         CALL Fehler("Bitte geben Sie in dem Feld <Update EMAIL> eine gÅltige email-Adresse ein!","")
       END IF 
     ELSE 
       CALL Fehler("Sie mÅssen erst einen Lizenzcode fÅr SmartPROVIS/SmartPROJECTerzeugen, bevor Sie ihn versenden kînnen!","")
     END IF 
   CASE 209
     REM Registrierungsemail CBFC
     IF LTRIM$ (InternetEMAIL.adressen) <> "" THEN 
       IF LTRIM$ (CBFCLizenzN.adressen) <> "" THEN 
         CALL SendEMAIL4(InternetEMAIL.adressen,codeku.adressen)
       ELSE 
         CALL Fehler("Bitte geben Sie in dem Feld <Update EMAIL> eine gÅltige email-Adresse ein!","")
       END IF 
     ELSE 
       CALL Fehler("Sie mÅssen erst einen Lizenzcode fÅr CBFC erzeugen, bevor Sie ihn versenden kînnen!","")
     END IF 
   CASE 208
     REM Registrierungsemail SmartPROVIS/SmartPROJECT
     IF LTRIM$ (InternetEMAIL.adressen) <> "" THEN 
       IF LTRIM$ (LizenzNotiz.adressen) <> "" THEN 
         CALL SendEMAIL3(InternetEMAIL.adressen,codeku.adressen)
       ELSE 
         CALL Fehler("Bitte geben Sie in dem Feld <Update EMAIL> eine gÅltige email-Adresse ein!","")
       END IF 
     ELSE 
       CALL Fehler("Sie mÅssen erst einen Lizenzcode fÅr SmartPROVIS/SmartPROJECTerzeugen, bevor Sie ihn versenden kînnen!","")
     END IF 
 
   CASE 207
     CALL VoiceDial1()
   CASE 206
     REM Google

     IF land.adressen <> "" THEN 
       IF land.adressen LIKE "deutsch*" OR land.adressen LIKE "brd*" OR land.adressen LIKE "germa*" OR land.adressen LIKE "D" THEN 
         land$ = "Germany"
       ELSE 
         land$ = FN ansi(land.adressen)
       END IF 
     ELSE 
       land$ = "Germany"
     END IF 

     nr$ = "http://maps.google.de/?Land=" + land$ + "&PLZ=" + plz.adressen + "+" + (ort.adressen) + "&Strasse=" + (stra·e.adressen) + "&q=" + (stra·e.adressen) + "%2c+" + plz.adressen + "+" + (ort.adressen)
     nr$ = FN ansi(nr$)
     IF NOT EXISTS (GMACodeDir$ + "openurl.exe") THEN COPY _netpath$ + "\local\openurl.exe" TO GMACodeDir$ + "openurl.exe"
     prg$ = GMACodeDir$ + "openurl.exe"
     IF EXISTS (GMACodeDir$ + "opurl.bat") THEN DELETE GMACodeDir$ + "opurl.bat"
     OPEN GMACodeDir$ + "opurl.bat" FOR APPEND 
     ? "echo OFF"
     ? prg$ + " " + CHR$ (34) + FN oem(nr$) + CHR$ (34)
     CLOSE OUTPUT 


     COPY FROM nr$
     CALL Fehler("Bitte im geîffneten Browser in der Eingabezeile STRG+V und anschlie·end ENTER drÅcken, dann wird Ihnen in Google-Maps die georgrafische Position der Adresse angezeigt!","")
     CALL (GMACodeDir$ + "opurl.bat"),0
 CASE 205
     REM Mahnsperre
     CALL MahnsperrADR(codeku.adressen)
   CASE 204
     REM ungÅltige mails verarbeiten
     
     CALL DFile(2,"OFFICE\ungmail" + _fpw$)
     CALL UngMail()
   CASE 203
     REM Aufruf Dial
     CALL VoiceDial1()
   CASE 202
     REM sende Werbeemail
     IF kart1.GTeldat$ LIKE "ZZ~" THEN 
       CALL Fehler("Dieser Kommunikationskontakt ist mit  ZZ~  gekennzeichnet und somit ungÅltig. Er kann nicht verwendet werden!","")
       GOTO wemail210220073
     END IF 
     codeku1% = codeku.adressen
     knr% = codeku1%
     IF Nummer.GTeldat$ LIKE "*@*" AND GCODie% THEN 
       enumm$ = Nummer.GTeldat$
       cr$ = CHR$ (13) + CHR$ (10)
       ri% = ASC (cr$)
       ri1% = ASC ( RIGHT$ (enumm$,2))
       IF ri1% = 13 THEN 
         lenge% = LEN (enumm$) - 2
         nummer$ = MID$ (enumm$,1,lenge%)
       ELSE 
         nummer$ = enumm$
       END IF 
       CALL SendEMAIL2(Nummer$,codeku.adressen)
       GOTO wemail210220073
     END IF 
     IF Nummer.GTeldat$ LIKE "*ww*" OR Nummer.GTeldat$ LIKE "ww*" THEN 
       IF NOT EXISTS (GMACodeDir$ + "openurl.exe") THEN COPY _netpath$ + "\local\openurl.exe" TO GMACodeDir$ + "openurl.exe"
       IF LEFT$ (Nummer.GTeldat$,3) LIKE "www" THEN 
         nr$ = "http://" + Nummer.GTeldat$
       END IF 
       IF LEFT$ (Nummer.GTeldat$,4) LIKE "http" THEN 
         nr$ = Nummer.GTeldat$
       END IF 
       prg$ = GMACodeDir$ + "openurl.exe"
       IF EXISTS (GMACodeDir$ + "opurl.bat") THEN DELETE GMACodeDir$ + "opurl.bat"
       OPEN GMACodeDir$ + "opurl.bat" FOR APPEND 
       ? "echo OFF"
       ? prg$ + " " + nr$
       CLOSE OUTPUT 
       CALL (GMACodeDir$ + "opurl.bat"),0
     END IF 
wemail210220073: 
   CASE 201
     IF disabled%("ADRUMSATZ") THEN 
       f.umstzp.visible = - 1
     ELSE 
       IF zeigums$ LIKE "zeige Umsatz" THEN 
         f.umstzp.visible = 0
         zeigums$ = "Umsatz ausblenden"
       ELSE 
         f.umstzp.visible = - 1
         zeigums$ = "zeige Umsatz"
       END IF 
       FORM 
     END IF 
   CASE 200
     REM email senden mit logindaten und Text das das Update bereitsteht
     IF LTRIM$ (InternetEMAIL.adressen) <> "" THEN 
       IF LTRIM$ (InternetName.adressen) <> "" THEN 
         IF LTRIM$ (InternetPasswo.adressen) <> "" THEN 
           CALL SendEMAIL1(InternetEMAIL.adressen,codeku.adressen)
         ELSE 
           CALL Fehler("Bitte geben Sie in dem Feld <Internet-Passwort> ein gÅltiges Passwort ein!","Achtung der Kunde wurde wahrscheinlich noch nicht in der Internetportalseite fÅr Downloads eingerichtet!")
         END IF 
       ELSE 
         CALL Fehler("Bitte geben Sie in dem Feld <Internet-Name> einen gÅltigen Namen ein!","Achtung der Kunde wurde wahrscheinlich noch nicht in der Internetportalseite fÅr Downloads eingerichtet!")
       END IF 
     ELSE 
       CALL Fehler("Bitte geben Sie in dem Feld <Update EMAIL> eine gÅltige email-Adresse ein!","Achtung der Kunde wurde wahrscheinlich noch nicht in der Internetportalseite fÅr Downloads eingerichtet!")
     END IF 
   CASE 199
     IF NOT disabled%("STAMMBLATT") THEN 
       FORM 5
     END IF 
   CASE 198
     REM Herbalife
     CALL Herba(codeku.adressen)

   CASE 197
     REM Rechnungsausgangsbuch
         CALL DFile(3,"RAUSGANG" + _fpw$)
         codeku1% = codeku.adressen
         IF EXISTS (codeku1%,codeku.rausgang) THEN 
           FILE "rausgang"
           INDEX belegnr.rausgang
           SELECT FIRST 
           CALL Reingang("RAUSGANG")
         ELSE 
           REQUEST "Keine Ausgangsrechnung fÅr diese Adresse vorhanden,"","
         END IF 
         CALL DFile(3,"TEILREIN" + _fpw$)
         CALL DFile(3,"REINGANG" + _fpw$)
         CALL DFile(3,"TEILRAUS" + _fpw$)
         CALL DFile(3,"RAUSGANG" + _fpw$)
         REM CALL ADRFeldnamen()
         knr% = codeku1%
   CASE 196
     REM Rechnungseingangsbuch
         CALL DFile(3,"REINGANG" + _fpw$)
         codeku1% = codeku.adressen
         IF EXISTS (codeku1%,codeku.reingang) THEN 
           FILE "reingang"
           INDEX Belegnr.reingang
           SELECT FIRST 
           CALL Reingang("reingang")
         ELSE 
           REQUEST "Keine Eingangsrechnung fÅr diese Adresse vorhanden,"","
         END IF 
         CALL DFile(3,"TEILREIN" + _fpw$)
         CALL DFile(3,"REINGANG" + _fpw$)
         CALL DFile(3,"TEILRAUS" + _fpw$)
         CALL DFile(3,"RAUSGANG" + _fpw$)
         REM CALL ADRFeldnamen()
         knr% = codeku1%
   CASE 195
     REM Adress-Such-Historie
     knr% = codeku.adressen
     CALL AdrHist()
   CASE 194
     ON ERROR GOTO BildErr150120032
     FORM 3
     FORM SHOW 
BildErr150120032: 
     ON ERROR GOTO ErrorHandler
   CASE 193
     IF maxim$ LIKE "maxi*" THEN 
       maxim$ = "minimieren"
       f.stichbig.Height = 5334
       f.stichbig.Top = 1323
     ELSE 
       maxim$ = "maximieren"
       f.stichbig.Height = 750
       f.stichbig.Top = 5907
     END IF 
   CASE 192
     REM Export nach Outlook
      MOUSE OFF 
     REM Export nach Outlook
     IF NOT disabled%("OUTLOOKEXPORT") THEN 
       t1$ = "Diese beiden Dateien dienen dann als Importdateien fÅr Outlook. (In Outlook MenÅ Datei/Importieren-Exportieren/Import aus anderen Programmen/Kommagetrennte Werte (Window))"
       REM CALL Fehler("Es werden nachfolgend alle Adressen, die fÅr den Export markiert wurden in die Datei c:\outadr.csv exportiert.","Weiterhin werden alle nichterledigten Termine dieser Adressen in die Datei c:\outkal.csv exportiert." + t1$)
       REM CALL ExpOutlGener(codeku.adressen)
       CALL ADRExpOutl(codeku.adressen)
     END IF 
   CASE 191
     CALL ADRConnect()
     IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
     ADRsub% = 0
   CASE 190
     CALL ADRSuchen()
   CASE 189
     CALL ADRStatusNeu()
   CASE 188
     CALL ADRPRJConnect()
   CASE 187
     CALL ADRConnect()
   CASE 186
     IF Nachname.ADRESSEN <> "" THEN FORM 2
   CASE 185
     CALL ADRDrucken()
   CASE 184
     CALL ADRNext()
   CASE 183
     CALL ADRPrev()
   CASE 182
     CALL FStore("adressen")
     CALL Fehler("","")
   CASE 181
     IF ProjectJN$ = "TRUE" THEN 
       IF UCASE$ ( FORM ) = "ADRPROJ" THEN 
         mastform$ = "EUR"
         adrmaske$ = "ADRPROJE"
         IF GCodieADR$ LIKE "TRUE" THEN 
           adrmaske$ = "ADRPROJC"
         ELSE 
           adrmaske$ = "ADRPROJE"
         END IF 
       ELSE 
         adrmaske$ = "ADRPROJ"
         mastform$ = ""
       END IF 
     ELSE 
       IF UCASE$ ( FORM ) = "ADRESSEN" THEN 
         adrmaske$ = "ADRESSEE"
       ELSE 
         adrmaske$ = "ADRESSEN"
       END IF 
     END IF 
   CASE 1
     CALL QuickStore("adressen")
     REM CALL AKQUISE(2)
     CALL ADRAkquiNew()
     IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
   CASE 2
     REM CALL ADRTelefon()
     CALL TelefonListe(CodeKU.ADRESSEN)
     IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
   CASE 3
     CALL QuickStore ("adressen")
     CALL ADRsub3():REM PROVIS VertrÑge
     IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
   CASE 4
     CALL QuickStore("adressen")
     CALL ADRsub4():REM IMMAK Angebote
     IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
   CASE 5
     CALL QuickStore("adressen")
     CALL ADRsub5():REM IMMAK Anfrage
     IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
   CASE 6
     CALL QuickStore("adressen")
     CALL ADRsub6():REM MEDIA Verleih
     IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
   CASE 7
     IF NOT disabled%("ANGEBOT") THEN 
       knr% = codeku.adressen
       CALL QuickStore("adressen")
       CALL ADRAngebot():REM FACTURA Angebotserfassung
       IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
     END IF 
   CASE 8
     IF NOT disabled%("RECHNUNG") THEN 
       knr% = codeku.adressen
       CALL QuickStore("adressen")
       CALL ADRRechnung():REM FACTURA Rechnungserfassung
       IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
     END IF 
   CASE 9
     IF NOT disabled%("LIEFERSCHEIN") THEN 
       knr% = codeku.adressen
       CALL QuickStore("adressen")
       CALL ADRLiefer():REM FACTURA Lieferscheinerfassung
       IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
     END IF 
   CASE 10
     IF NOT disabled%("AUFTRAG") THEN 
       knr% = codeku.adressen
       CALL QuickStore("adressen")
       CALL ADRAuftrag():REM FACTURA Auftragserfassung
       IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
     END IF 
   CASE 11
     IF NOT disabled%("BESTELLUNG") THEN 
       knr% = codeku.adressen
       CALL QuickStore("adressen")
       CALL ADRBestell():REM FACTURA Bestellungserfassung
       IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
     END IF 
   CASE 12
     IF NOT disabled%("GUTSCHRIFT") THEN 
       knr% = codeku.adressen
       CALL QuickStore("adressen")
       CALL ADRGutschr():REM FACTURA Gutschrift
       IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
     END IF 
   CASE 13
     CALL QuickStore("adressen")
     CALL TerArtSpez()
     CALL AQAdrHist(1):REM TerminÅbersicht aus Adressen heraus 
     IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
   CASE 14
     datei$ = "adressen"
     REM dindex$ = "nachname.adressen"
     dindex$ = UCASE$ ( INDEX )
     SELECT CASE dindex$
       CASE "ANREDE"
         Felder$(0) = "Anrede":Felder$(1) = "5"
         Felder$(2) = "Nachname":Felder$(3) = "19"
         Felder$(4) = "Vorname":Felder$(5) = "13"
         Felder$(6) = "Geburtsname":Felder$(7) = "13"
         Felder$(8) = "Ort":Felder$(9) = "13"
         Felder$(10) = "PLZ":Felder$(11) = "5"
         Felder$(12) = "Stra·e":Felder$(13) = "8"
         Felder$(20) = "Stichwort":Felder$(21) = "8"
         Felder$(22) = "Kundennummer":Felder$(23) = "8"
         Felder$(24) = "AALieferant":Felder$(25) = "2"
         Felder$(26) = "AAKunde":Felder$(27) = "2"
         Felder$(28) = "":Felder$(29) = ""
       CASE "NACHNAME"
         Felder$(0) = "Nachname":Felder$(1) = "19"
         Felder$(2) = "Vorname":Felder$(3) = "13"
         Felder$(4) = "Geburtsname":Felder$(5) = "13"
         Felder$(6) = "Ort":Felder$(7) = "13"
         Felder$(8) = "PLZ":Felder$(9) = "5"
         Felder$(10) = "Stra·e":Felder$(11) = "8"
         Felder$(18) = "Anrede":Felder$(19) = "5"
         Felder$(20) = "Stichwort":Felder$(21) = "8"
         Felder$(22) = "Kundennummer":Felder$(23) = "8"
         Felder$(24) = "AALieferant":Felder$(25) = "2"
         Felder$(26) = "AAKunde":Felder$(27) = "2"
         Felder$(28) = "":Felder$(29) = ""
       CASE "ORT"
         Felder$(0) = "Ort":Felder$(1) = "13"
         Felder$(2) = "PLZ":Felder$(3) = "5"
         Felder$(4) = "Nachname":Felder$(5) = "19"
         Felder$(6) = "Vorname":Felder$(7) = "13"
         Felder$(8) = "Geburtsname":Felder$(9) = "13"
         Felder$(10) = "Stra·e":Felder$(11) = "8"
         Felder$(18) = "Anrede":Felder$(19) = "5"
         Felder$(20) = "Stichwort":Felder$(21) = "8"
         Felder$(22) = "Kundennummer":Felder$(23) = "8"
         Felder$(24) = "AALieferant":Felder$(25) = "2"
         Felder$(26) = "AAKunde":Felder$(27) = "2"
         Felder$(28) = "":Felder$(29) = ""
       CASE "PLZ"
         Felder$(0) = "PLZ":Felder$(1) = "5"
         Felder$(2) = "Ort":Felder$(3) = "13"
         Felder$(4) = "Nachname":Felder$(5) = "19"
         Felder$(6) = "Vorname":Felder$(7) = "13"
         Felder$(8) = "Geburtsname":Felder$(9) = "13"
         Felder$(10) = "Stra·e":Felder$(11) = "8"
         Felder$(18) = "Anrede":Felder$(19) = "5"
         Felder$(20) = "Stichwort":Felder$(21) = "8"
         Felder$(22) = "Kundennummer":Felder$(23) = "8"
         Felder$(24) = "AALieferant":Felder$(25) = "2"
         Felder$(26) = "AAKunde":Felder$(27) = "2"
         Felder$(28) = "":Felder$(29) = ""
       CASE "STRA·E"
         Felder$(0) = "Stra·e":Felder$(1) = "15"
         Felder$(2) = "Ort":Felder$(3) = "13"
         Felder$(4) = "PLZ":Felder$(5) = "5"
         Felder$(6) = "Nachname":Felder$(7) = "19"
         Felder$(8) = "Vorname":Felder$(9) = "13"
         Felder$(10) = "Geburtsname":Felder$(11) = "13"
         Felder$(18) = "Anrede":Felder$(19) = "5"
         Felder$(20) = "Stichwort":Felder$(21) = "8"
         Felder$(22) = "Kundennummer":Felder$(23) = "8"
         Felder$(24) = "AALieferant":Felder$(25) = "2"
         Felder$(26) = "AAKunde":Felder$(27) = "2"
         Felder$(28) = "":Felder$(29) = ""
      CASE "KUNDENNUMMER"
         Felder$(0) = "Kundennummer":Felder$(1) = "10"
         Felder$(2) = "Nachname":Felder$(3) = "19"
         Felder$(4) = "Vorname":Felder$(5) = "13"
         Felder$(6) = "Geburtsname":Felder$(7) = "13"
         Felder$(8) = "Ort":Felder$(9) = "13"
         Felder$(10) = "PLZ":Felder$(11) = "5"
         Felder$(12) = "Stra·e":Felder$(13) = "8"
         Felder$(20) = "Stichwort":Felder$(21) = "8"
         Felder$(22) = "Anrede":Felder$(23) = "5"
         Felder$(24) = "AALieferant":Felder$(25) = "2"
         Felder$(26) = "AAKunde":Felder$(27) = "2"
         Felder$(28) = "":Felder$(29) = ""
       CASE ELSE 
         Felder$(0) = "Nachname":Felder$(1) = "19"
         Felder$(2) = "Vorname":Felder$(3) = "13"
         Felder$(4) = "Geburtsname":Felder$(5) = "13"
         Felder$(6) = "Ort":Felder$(7) = "13"
         Felder$(8) = "PLZ":Felder$(9) = "5"
         Felder$(10) = "Stra·e":Felder$(11) = "8"
         Felder$(18) = "Anrede":Felder$(19) = "5"
         Felder$(20) = "Stichwort":Felder$(21) = "8"
         Felder$(22) = "Kundennummer":Felder$(23) = "8"
         Felder$(24) = "AALieferant":Felder$(25) = "2"
         Felder$(26) = "AAKunde":Felder$(27) = "2"
         Felder$(28) = "":Felder$(29) = ""
     END SELECT 
     i% = 0
     CALL ADRTab(datei$,dindex$)
   CASE 15
     REM Drucken von Adressen
     CALL ADRDrucken()
     IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
   CASE 16
     CALL ADRSperre()
     IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
   CASE 17
     knr% = codeku.adressen
     CALL DFile(3,"sparten" + _fpw$)
     CALL DFile(3,"geadr" + _fpw$)
     CALL DFile(3,"maadr" + _fpw$)
     IF EXISTS (knr%,codeku.vorgang) THEN 
       FILE "Vorgang"
       CALL KUVorgang()
       SELECT FORM KEY knr% FILE "Vorgang" INDEX codeku.vorgang
     ELSE 
       CALL Fehler("Es sind keine Vertragsnachbearbeitungen/SchÑden zu dieser Adresse vorhanden!","")
     END IF 
     REM CALL VorgSuchKund()
     REM SELECT FORM KEY knr% FILE "Adressen" INDEX codeku.adressen
   CASE 18
     REM 080498
     knr% = codeku.adressen
     CALL ADRDokNew()
   CASE 19
     IF NOT disabled%("MAHNUNG") THEN 
       REM 10.11.98 Factura Mahnungen
       CALL QuickStore ("adressen")
       CALL ADRMahnung()
       IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
     END IF 
   CASE 20
     CALL KProdukt()
     OPEN FORM GPrjForm$ + adrmaske$ PAGE 1
     SET f = Superbase.Form
     IF _projekt$ LIKE "FACTURA" THEN 
       IF eurosupport$ = "FALSE" THEN 
         f.waehrmask.visible = 0
       ELSE 
         f.waehrmask.visible = - 1
       END IF 
     END IF 
     SET STATUS "Adre·verwaltung"
     CALL ADRIntro()
     MOUSE OFF 
     GAppName$ = _netpath$ + "DOCP\adressen.pdf"
     CALL MNADRESSEN()
     CALL ADRFeldnamen()
     FORM 5
   CASE 21
     CALL Verleih1()
   CASE 22
     IF NOT disabled%("ANFRAGE") THEN 
       knr% = codeku.adressen
       CALL QuickStore("adressen")
       CALL ADRAnfrage():REM FACTURA Bestellungserfassung
       IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
     END IF 
 
   CASE 23
     REM Kundenkonto
     knr% = codeku.adressen
     CALL DFile(3,"sparten" + _fpw$)
     CALL DFile(3,"geadr" + _fpw$)
     CALL DFile(3,"maadr" + _fpw$)
     
     IF EXISTS (knr%,codeku.KUKTO) THEN 
       Kukn$ = TRIM$ (nachname.adressen) + ", " + TRIM$ (vorname.adressen)
       FILE "KUKTO"
       CALL KUKundkonto()
       FILE "Adressen"
     ELSE 
       CALL Fehler("Es sind keine Kontoinformationen zu dieser Adresse vorhanden!","")
     END IF 
   CASE 24
   CASE 25
     REM Vermoegen-öbersicht
     IF EXISTS (knr%,codeku.VERMOEG) THEN 
       FILE "VERMOEG"
       CALL KUVermoeg()
       FILE "Adressen"
     ELSE 
       REQUEST "Es sind keine Zahlungsein-/ausgÑnge der Vermîgensverwaltung","zu dieser Adresse vorhanden! Zahlung erfassen?",130,req%
       IF req% = 1 THEN 
         knr% = codeku.adressen
         CALL VermNeu(knr%)
         FILE "VERMOEG"
         CALL KUVermoeg()
         FILE "Adressen"
       END IF 
     END IF 
   CASE 26
   CASE 27
   CASE 98
     CALL TelefonListe(CodeKU.ADRESSEN)
     IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
   CASE 99
     MOUSE OFF 
     IF NOT disabled%("ADRBEARB") THEN 
       IF title$ LIKE "*DEMO*" AND RECCOUNT ("ADRESSEN") >= 10 THEN 
         CALL DemoInfo()
       ELSE 
         GMahn$ = Mahnsperre.Adressen
         GMahnDat% = MahnsperBisdat.Adressen
         IF GCodieADR$ LIKE "TRUE" THEN 
         ELSE 
           GRech$ = Rechsperre.Adressen
           GRechDat% = RechBisdat.Adressen
         END IF 
         SELECT CASE PAGE 
         CASE 1
           MOUSE ON 
           REM ENTER Kundennummer.ADRESSEN,0 ELSE ENTER anrede.adressen,0
           CALL ButDesabled()
           MOUSE OFF 
           IF _projekt$ LIKE "PROVIS" THEN 
             f.vertraege.enabled = 0
             f.finanzen.enabled = 0
             f.sperre.enabled = 0
             f.drucken.enabled = 0
             IF nemany$ <> "TRUE" THEN 
               f.c1.enabled = 0
               f.c2.enabled = 0
               f.c3.enabled = 0
               f.c4.enabled = 0
               f.c5.enabled = 0
               f.c6.enabled = 0
               f.c7.enabled = 0
               f.c8.enabled = 0
               f.c9.enabled = 0
               f.c10.enabled = 0
               f.c11.enabled = 0
               f.c12.enabled = 0
             END IF 
             f.vorgang.enabled = 0
           END IF 
           IF _projekt$ LIKE "FACTURA" THEN 
             f.s1.enabled = 0
             f.s2.enabled = 0
             f.s3.enabled = 0
             f.s4.enabled = 0
             f.s5.enabled = 0
             f.s6.enabled = 0
             f.tabellenansicht.enabled = 0
             f.sperre.enabled = 0
             f.drucken.enabled = 0
           END IF 
           IF _projekt$ <> "WAWI" THEN f.notiz.enabled = 0
           IF _projekt$ <> "AKTE" AND _projekt$ <> "WAWI" THEN 
             f.terminliste.enabled = 0
             f.termine.enabled = 0
           f.liste.enabled = 0
           REM f.vorgaenger.enabled = 0
           END IF 
           IF _projekt$ <> "AKTE" AND _projekt$ <> "WAWI" THEN f.telefon.enabled = 0
           IF proserv$ = "TRUE" THEN 
             MENU OFF 
             SET EDIT SELECT ON 
             MOUSE ON 
             ENTER Kundennummer.adressen,0
             MOUSE OFF 
             SET EDIT SELECT OFF 
             MENU ON 
           ELSE 
             MENU OFF 
             SET EDIT SELECT ON 
               MOUSE ON 
               REM SELECT KEY codeku.adressen LOCK FILE "Adressen" INDEX codeku.adressen
               REM SELECT FORM CURRENT LOCK 
               ENTER Kundennummer.ADRESSEN,0 ELSE ENTER anrede.adressen,0
               REM SELECT NEXT 
               REM SELECT PREVIOUS 
               MOUSE OFF 
             SET EDIT SELECT OFF 
             MENU ON 
           END IF 
           IF _projekt$ <> "WAWI" THEN f.notiz.enabled = - 1
           IF _projekt$ <> "AKTE" AND _projekt$ <> "WAWI" THEN 
             f.terminliste.enabled = - 1
             f.termine.enabled = - 1
             f.liste.enabled = - 1
             REM f.vorgaenger.enabled = - 1
           END IF 
           IF _projekt$ <> "AKTE" AND _projekt$ <> "WAWI" THEN f.telefon.enabled = - 1
           IF _projekt$ LIKE "PROVIS" THEN 
             f.vertraege.enabled = - 1
             f.finanzen.enabled = - 1
             f.sperre.enabled = - 1
             f.drucken.enabled = - 1
             IF nemany$ <> "TRUE" THEN 
               f.c1.enabled = - 1
               f.c2.enabled = - 1
               f.c3.enabled = - 1
               f.c4.enabled = - 1
               f.c5.enabled = - 1
               f.c6.enabled = - 1
               f.c7.enabled = - 1
               f.c8.enabled = - 1
               f.c9.enabled = - 1
               f.c10.enabled = - 1
               f.c11.enabled = - 1
               f.c12.enabled = - 1
             END IF 
             f.vorgang.enabled = - 1
           END IF 
           IF _projekt$ LIKE "FACTURA" THEN 
             f.s1.enabled = - 1
             f.s2.enabled = - 1
             f.s3.enabled = - 1
             f.s4.enabled = - 1
             f.s5.enabled = - 1
             f.s6.enabled = - 1
             f.tabellenansicht.enabled = - 1
             f.sperre.enabled = - 1
             f.drucken.enabled = - 1
             REM 020699 énderungen in reingang und rausgang

           END IF 
           REM 020699 énderungen in connect
           IF ProjectJN$ = "TRUE" THEN 
             REM 020699 énderungen in prconadr
           END IF 
           CALL ButEnabled()
         CASE 2
           MOUSE ON 
           IF _projekt$ LIKE "PROVIS" OR _projekt$ LIKE "OFFICE" OR _projekt$ LIKE "HORTUS" THEN 
             MENU OFF 
             IF PAGE = 2 THEN 
               IF _projekt$ LIKE "PROVIS" THEN 
                 f.abbruch2.visible = - 1
                 f.abbruch2.enabled = - 1
               END IF 
               REM f.finanzen2.enabled = 0
               REM f.zurueck2.enabled = 0
               SET EDIT SELECT ON 
               MOUSE ON 
               ENTER EGAnrede.adressen,0
               MOUSE OFF 
               SET EDIT SELECT OFF 
               IF _projekt$ LIKE "PROVIS" THEN 
                 f.abbruch2.visible = 0
                 f.abbruch2.enabled = 0
                 f.finanzen2.enabled = - 1
                 f.zurueck2.enabled = - 1
               END IF 
             END IF 
             IF PAGE = 3 THEN 
               IF _projekt$ LIKE "PROVIS" THEN 
                 f.abbruch3.visible = - 1
                 f.abbruch3.enabled = - 1
               END IF 
               REM f.notiz3.enabled = 0
               REM f.zurueck3.enabled = 0
               SET EDIT SELECT ON 
               MOUSE ON 
               ENTER EinkKunde.adressen,0
               MOUSE OFF 
               SET EDIT SELECT OFF 
               IF _projekt$ LIKE "PROVIS" THEN 
                 f.abbruch3.visible = 0
                 f.abbruch3.enabled = 0
               END IF 
               f.notiz3.enabled = - 1
               f.zurueck3.enabled = - 1
 
             END IF 
             MENU ON 
           ELSE 
             MENU OFF 
             SET EDIT SELECT OFF 
             MOUSE ON 
             ENTER notiz.adressen,0
             MOUSE OFF 
             SET EDIT SELECT OFF 
             MENU ON 
           END IF 
         CASE 3
           MOUSE ON 
           IF _projekt$ LIKE "FACTURA" THEN 
             MOUSE ON 
             ENTER produktname.kprodukt,0
             MOUSE OFF 
           END IF 
           IF _projekt$ LIKE "PROVIS" OR _projekt$ LIKE "OFFICE" THEN 
             MENU OFF 
             IF _projekt$ LIKE "PROVIS" THEN 
               f.abbruch3.visible = - 1
               f.abbruch3.enabled = - 1
             END IF 
             REM f.notiz3.enabled = 0
             REM f.zurueck3.enabled = 0
             SET EDIT SELECT ON 
             MOUSE ON 
             ENTER EinkKunde.adressen,0
             MOUSE OFF 
             SET EDIT SELECT OFF 
             IF _projekt$ LIKE "PROVIS" THEN 
               f.abbruch3.visible = 0
               f.abbruch3.enabled = 0
             END IF 
             f.notiz3.enabled = - 1
             f.zurueck3.enabled = - 1
             MENU ON 
           END IF 
         CASE 4
           MOUSE ON 
           ENTER zweitanschrift.adressen,0
         CASE 5
           MOUSE ON 
           ENTER InternetUsr.adressen,0
         CASE 6
           IF NOT disabled%("MAHNSPERRE") THEN 
             MOUSE ON 
             GMahn$ = Mahnsperre.Adressen
             GMahnDat% = MahnsperBisdat.Adressen
             ENTER Mahnsperre.adressen,0
           END IF 
         CASE 7
           IF NOT disabled%("RECHSPERRE") THEN 
             MOUSE ON 
             GRech$ = Rechsperre.Adressen
             GRechDat% = RechBisdat.Adressen
             ENTER Rechsperre.adressen,0
           END IF 
         END SELECT 
       END IF 
       IF ( MOD ("adressen") OR NEW ("adressen")) AND Nachname.adressen <> "" AND abbruch% = 0 THEN 
         CALL QuickStore( FILE )
       ELSE 
         IF abbruch% = - 1 THEN 
           SELECT KEY codeku.adressen FILE "adressen" INDEX codeku.adressen
           FORM 
         END IF 
       END IF 
     END IF 
     IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
   END SELECT 
   offBMCh% = 1
   IF FORM = adrmaske$ AND PAGE = 1 AND GTerLispez% <> - 1 THEN 
     SELECT WHERE FILE GTelDat$
     CALL BMCheckMail()
   END IF 
 WEND 
 knr% = 0
 SELECT WHERE FILE GTelDat$
 IF ddeadr% = 1 THEN 
   CALL Server("AdrOff","")
   DDETERM 98
 END IF 
 REM IF FileChanged%("adressen") = 1 THEN CALL QuickStore ("adressen")
 _formend% = 0
 IF GTerLispez% <> - 1 THEN 
   IF GCODieRuf% <> 0 OR GCODieRuf1% <> 0 OR GCODieRuf2% <> 0 THEN 
     ret% = CALL ("_SearchClose")
           GCODieRuf% = 0
           GCODieRuf1% = 0
           GCODieRuf2% = 0
   END IF 
 END IF 
 IF ProjectJN$ = "TRUE" THEN maxproz% = maxproz% - 1
 CALL WriteINI(_projekt$,"LastAdress", STR$ (Codeku.adressen,"000000"))
 Lieferant$(0) = ""
 IF GCodieADR$ LIKE "TRUE" THEN 
   ziel$ = "C:\codie.tmp\Imno.exe"
   quelle$ = _netpathlw1$ + "Imno.dll"
   a% = CALL ("_SBFileExists",ziel$)
   IF a% = - 1 THEN 
     a% = CALL ("_SBFileDelete1",ziel$)
   END IF 
 END IF 
 END SUB 
  
 
 ' Intro
 ' ======================================================================
 
SUB ADRIntro()
 MOUSE OFF 
 IF RECCOUNT ("Adressen") < 1 THEN 
   BLANK FILE "adressen"
   codeku% = SER ("adressen",1)
   codeku.adressen = codeku%
   nachname.adressen = "NEU"
   Workstation.adressen = Workstation%
   QWoNo.adressen = STR$ (Workstation%,"000000") + STR$ (codeku%,"000000")
   RecStatus.adressen = "c"
   STORE FILE "adressen"
   UNLOCK CURRENT FILE "adressen"
   SELECT KEY codek% FILE "adressen" INDEX codeku.adressen
 END IF 
 FILE "adressen"
 SELECT WHERE 
 IF dfart$ = "Makler" OR dfart$ = "Mitarbeiter" THEN 
   SET FORM OFF ausk$
   SET FORM OFF angeb1$
   SET FORM OFF anfr$
 END IF 
 INDEX Nachname.adressen
 IF knr% <> 0 THEN 
   SELECT FIRST FILE "adressen" INDEX codeku.adressen
   SELECT KEY knr% FILE "adressen" INDEX codeku.adressen
   SELECT FORM KEY knr% FILE "telefon" INDEX codeku.telefon
   IF UCASE$ (_projekt$) LIKE "FACTURA" THEN 
     SELECT FORM KEY knr% FILE "umsatz" INDEX codeku.umsatz
     SELECT FORM KEY codema.adressen FILE "vertrete" INDEX codema.vertrete
   END IF 
   SET INDEX nachname.adressen
 ELSE 
   SELECT FIRST 
   knr% = codeku.adressen
   SELECT FORM KEY knr% FILE "telefon" INDEX codeku.telefon
   IF UCASE$ (_projekt$) LIKE "FACTURA" THEN 
     SELECT FORM KEY knr% FILE "umsatz" INDEX codeku.umsatz
     SELECT FORM KEY codema.adressen FILE "vertrete" INDEX codema.vertrete
   END IF 
 END IF 
 IF ProjectJN$ = "TRUE" THEN 
   SELECT KEY knr% FILE "prconadr" INDEX codeku.prconadr
 END IF 
 FORM 
 END SUB 
 
 
 ' Adresse Neu
 ' ======================================================================
 ' Zweck:       erzeugt neuen Datensatz fÅr Adre·erfassung
 ' Nutzung:     CALL ADRNeu()
 ' ======================================================================
 ' 0002/10.01.93    - Vergabe AAxx Åberarbeitet
 
SUB ADRNeu()
 IF disabled%("ADRNeu") THEN END SUB 
 MOUSE OFF 
 IF title$ LIKE "*DEMO*" AND RECCOUNT ("ADRESSEN") >= 10 THEN 
   CALL DemoInfo()
   END SUB 
 END IF 
 MOUSE OFF 
 SET STATUS "Lege neuen Datensatz an..."
 IF ( MOD ("adressen") OR NEW ("adressen")) AND Nachname.adressen <> "" THEN CALL FStore( FILE )
 IF title$ LIKE "*ffffffirststep*" THEN 
   IF RECCOUNT ( FILE ) > 250 THEN 
     CALL Fehler("In der FirstStep - Version kînnen maximal 250 Adressen erfa·t werden!","")
     END SUB 
   END IF 
 END IF 
 MOUSE OFF 
 FILE "adressen"
 miab$ = ""
 BLANK FILE "adressen"
 SET STATUS "Datensatz neu angelegt..."
 CodeKU% = SER ("adressen",1)
 CodeKU.adressen = codeku%
 IF Gmaul$ LIKE "true" THEN 
   rechsperre.adressen = "J"
 END IF 
 STORE FILE "Adressen"
 UNLOCK CURRENT FILE "adressen"
 SELECT KEY codeku% LOCK FILE "Adressen" INDEX codeku.adressen
 ADRStatus.adressen = "<OHNE ZUORDNUNG>"
 ADRGruppe.adressen = "<OHNE ZUORDNUNG>"
 IF _projekt$ <> "WAWI" THEN 
   codema.adressen = 999
   Kunde_seit.ADRESSEN = TODAY 
 END IF 
 nachname.adressen = "NEU"
 IF _projekt$ <> "AKTE" THEN 
   REM nnum% = VAL (ReadConfig$("NUMMERN","LASTKundennummer")) + 1
   REM CALL WriteConfig("NUMMERN","LASTKundennummer", LTRIM$ ( STR$ (nnum%,"999999")))
     SELECT FIRST LOCK FILE "stamm"
     LastKunr.stamm = LastKunr.stamm + 1
     STORE FILE "stamm"
     UNLOCK CURRENT FILE "stamm"
     nnum% = LastKunr.stamm
   MOUSE OFF 
   REM IF proserv$ <> "TRUE" THEN Kundennummer.ADRESSEN = "K" + LTRIM$ ( STR$ (nnum%,"999999"))
   Kundennummer.ADRESSEN = "K" + LTRIM$ ( STR$ (nnum%,"999999"))
   Debitorkto.adressen = LTRIM$ ( STR$ (nnum%,"999999"))
   AAKunde.adressen = "j"
   AAMakler.adressen = "n"
   AAMitarbeiter.adressen = "n"
   AAInteressent.adressen = "n"
   AALieferant.adressen = "n"
   FIPrivat.adressen = "n"
   FIATEC.adressen = "j"
   FIIMMAK.adressen = "n"
   IF _projekt$ <> "WAWI" THEN CodeMA.adressen = 999
 END IF 
 zero.adressen = 0
 QNachname.adressen = "NEU"
 Workstation.adressen = Workstation%
 QWoNo.adressen = STR$ (Workstation%,"000000") + STR$ (codeku.adressen,"000000")
 RecStatus.adressen = "c"
 STORE FILE "adressen"
 UNLOCK CURRENT FILE "adressen"
 MOUSE OFF 
 IF _projekt$ <> "AKTE" THEN 
 REM IF _projekt$ = "AKTENNNNNNNN" THEN 
   BLANK FILE "telefon"
   codeku.telefon = codeku%
   art.telefon = "Telefon:"
   Qart.telefon = VSNRPack$(art.telefon)
   codetel.telefon = SER ("telefon")
   Workstation.telefon = Workstation%
   QWoNo.telefon = STR$ (Workstation%,"000000") + STR$ (codetel.telefon,"000000")
   RecStatus.telefon = "c"
   STORE FILE "Telefon"
   UNLOCK CURRENT FILE "Telefon"
   BLANK FILE "telefon"
   codeku.telefon = codeku%
   art.telefon = "Telefax:"
   Qart.telefon = VSNRPack$(art.telefon)
   codetel.telefon = SER ("telefon")
   Workstation.telefon = Workstation%
   QWoNo.telefon = STR$ (Workstation%,"000000") + STR$ (codetel.telefon,"000000")
   RecStatus.telefon = "c"
   STORE FILE "Telefon"
   UNLOCK CURRENT FILE "Telefon"
   SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
 END IF 
 SELECT FORM KEY codeku% FILE "adressen" INDEX codeku.adressen
 FORM 
 MOUSE ON 
 ADRsub% = 99
 END SUB 
 
 REM **** Generierung Kundennummer.adressen wie Kreditkarte***
SUB ProServGen()
 knr% = codeku.adressen
 CALL FStore("adressen")
 FILE "adressen"
 SELECT FIRST 
 SELECT KEY knr% LOCK FILE "adressen" INDEX codeku.adressen
 ok% = 1
 sprung$ = "K1BLZ.adressen"
 IF Kundennummer.adressen = "" THEN 
   IF vorname.adressen = "" THEN 
     CALL Fehler("Es mu· erst ein Vorname eingegeben werden!","")
     ok% = 0
     sprung$ = "Vorname.adressen"
   END IF 
   IF geburtstag.adressen = 0 THEN 
     CALL Fehler("Es mu· erst das Geburtsdatum eingegeben werden!","")
     ok% = 0
     sprung$ = "Geburtstag.adressen"
   END IF 
   IF nachname.adressen = "" THEN 
     CALL Fehler("Es mu· erst ein Nachname eingegeben werden!","")
     ok% = 0
     sprung$ = "nachname.adressen"
   END IF 
   IF Kunde_seit.adressen = 0 THEN 
     CALL Fehler("Es mu· erst ein Datum bei Kunde seit eingegeben werden!","")
     ok% = 0
     sprung$ = "Kunde_seit.adressen"
   END IF 
   td$ = DATE$ ( TODAY ,"ddmmyy")
   td2$ = ReadConfig$("PROVIS","PROSERVDAT")
   IF ok% <> 0 THEN 
     IF td$ <> td2$ THEN 
       CALL WriteConfig("PROVIS","PROSERVDAT",td$)
       CALL WriteConfig("PROVIS","PROSERVNR","1")
       nnum% = 1
     ELSE 
       nnum% = VAL (ReadConfig$("PROVIS","PROSERVNR")) + 1
     END IF 
     CALL WriteConfig("PROVIS","PROSERVNR", LTRIM$ ( STR$ (nnum%,"99")))
     kundnr$ = LEFT$ (vorname.adressen,1)
     kundnr$ = kundnr$ + MID$ ( DATE$ (Kunde_seit.adressen,"ddmmyy"),1,2)
     kundnr$ = kundnr$ + LEFT$ ( DATE$ (geburtstag.adressen,"dd.mm.yy"),2)
     kundnr$ = kundnr$ + STR$ (nnum%,"00")
     kundnr$ = kundnr$ + MID$ ( DATE$ (geburtstag.adressen,"ddmmyy"),3,2)
     kundnr$ = kundnr$ + LEFT$ (Nachname.adressen,1)
     kundnr$ = kundnr$ + MID$ ( DATE$ (Kunde_seit.adressen,"ddmmyy"),3,2)
     kundnr$ = kundnr$ + MID$ ( DATE$ (Kunde_seit.adressen,"ddmmyy"),6,1)
     kundnr$ = kundnr$ + MID$ ( DATE$ (geburtstag.adressen,"ddmmyy"),5,2)
     Kundennummer.adressen = kundnr$
     CALL QuickStore("adressen")
     REM sprung$ = "Telefon1.adressen"
     sprung$ = "K1BLZ.adressen"
   END IF 
 END IF 
 MOUSE ON 
 MENU OFF 
 EXECUTE "ENTER " + sprung$ + ",0"
 MENU ON 
 FORM 
 END SUB 
  
 
 
 
 
 ' Adresse Kopieren
 ' ======================================================================
 ' Zweck:       kopiert Adresse
 ' Nutzung:     CALL ADRKopieren()
 ' ======================================================================
 ' 0003/26.09.94/AB
 
SUB ADRKopieren()
 IF disabled%("ADRNeu") THEN END SUB 
 IF title$ LIKE "*DEMO*" AND RECCOUNT ("ADRESSEN") >= 10 THEN 
   CALL DemoInfo()
   END SUB 
 END IF 
 REQUEST "Mîchten Sie diese Adresse duplizieren?","",130,req130%
 IF req130% = 1 THEN 
   SELECT WHERE FILE GTelDat$
   filtbutadr1$ = "Filter: ohne"
   codeku1% = Codeku.adressen
   SET STATUS "Lege neuen Datensatz an..."
     SELECT FIRST LOCK FILE "stamm"
     LastKunr.stamm = LastKunr.stamm + 1
     STORE FILE "stamm"
     UNLOCK CURRENT FILE "stamm"
     nnum% = LastKunr.stamm
   BLANK DUPLICATE 
   CodeKUneu% = SER ("adressen",1)
   CodeKU.adressen = CodeKUneu%
   ReGesGes.adressen = 0
   ReGesGesEU.adressen = 0
   LieGesGes.adressen = 0
   LieGesGesEu.adressen = 0

   AngGesGes.adressen = 0
   AngGesGesEu.adressen = 0

   AufGesGes.adressen = 0
   AufGesGesEu.adressen = 0

   BesGesGes.adressen = 0
   BesGesGesEu.adressen = 0

   GutGesGes.adressen = 0
   GutGesGesEu.adressen = 0
 
   REM nnum% = VAL (ReadConfig$("NUMMERN","LASTKundennummer")) + 1
   REM CALL WriteConfig("NUMMERN","LASTKundennummer", LTRIM$ ( STR$ (nnum%,"999999")))
   Kundennummer.ADRESSEN = "K" + LTRIM$ ( STR$ (nnum%,"999999")) + "*"
   CALL QuickStore("Adressen")
   SELECT FIRST FILE "adressen" INDEX codeku.adressen
   SELECT KEY CodeKUneu% LOCK FILE "adressen" INDEX codeku.adressen
   FILE "Telefon"
   INDEX codeku.telefon
   IF EXISTS (codeku1%,codeku.telefon) THEN 
     SELECT KEY codeku1% FILE "Telefon" INDEX codeku.telefon
   ELSE 
     SELECT LAST 
   END IF 
   DIM Telart$( RECCOUNT ("Telefon"))
   DIM TelNum$( RECCOUNT ("Telefon"))
   DIM FF$( RECCOUNT ("Telefon"))
   a% = 0
   WHILE NOT EOF ("Telefon") AND codeku.telefon = codeku1%
     Telart$(a%) = Art.telefon
     TelNum$(a%) = Nummer.Telefon
     FF$(a%) = FonOderFax.telefon
     a% = a% + 1
   SELECT NEXT FILE "Telefon"
   WEND 
   IF a% > 0 THEN 
     FOR i% = a% - 1 TO 0 STEP - 1
       BLANK FILE "Telefon"
       codetel.telefon = SER ("Telefon",1)
       codeku.telefon = codekuneu%
       art.telefon = TelArt$(i%)
       Qart.telefon = VSNRPack$(art.telefon)
       nummer.telefon = TelNum$(i%)
       Qnummer.telefon = VSNRPack$(nummer.telefon)
       FonOderFax.telefon = FF$(i%)
       Workstation.telefon = Workstation%
       QWoNo.telefon = STR$ (Workstation%,"000000") + STR$ (codetel.telefon,"000000")
       RecStatus.telefon = "c"
       STORE FILE "Telefon"
       UNLOCK CURRENT FILE "Telefon"
     NEXT i%
   END IF 
   SELECT FORM KEY codekuneu% INDEX Codeku.telefon
   FILE "Adressen"
   CALL ADRFeldnamen()
   SELECT FORM KEY codekuneu% INDEX Codeku.adressen
   
   FORM 
   MOUSE ON 
   ADRsub% = 99
 END IF 
 END SUB 
 
 
 
  
 ' Adresse sperren/freigeben
 ' ======================================================================
 
SUB ADRSperre()
 CALL DSSperre("CodeKU","ADRESSEN")
 END SUB 
 
  
 ' Adressenliste drucken
 ' ======================================================================
 
SUB ADRDrucken()
 IF disabled%("ADRDrucken") THEN END SUB 
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 FILE "ADRESSEN"
 ueberschr$ = ""
 knr% = CodeKU.adressen
 cdir$ = DIRECTORY 
 cindex$ = INDEX 
 DIRECTORY _netpath$ + "OFFICE"
 opt% = 1
 IF _projekt$ LIKE "PROVIS" THEN 
    CREATE DIALOG "ADRLIST",0,0,292,188,"WÑhlen Sie den Ausdruck","MS Sans Serif",8
    ADD DIALOG "ADRLIST",4,0,0,272,160,0,""
    ADD DIALOG "ADRLIST",9,4,9,20,21,2
    ADD DIALOG "ADRLIST",5,10,22,238,14,0,"WÑhlen Sie eine Option aus!"
    ADD DIALOG "ADRLIST",3,10,38,236,10,0,"nur die aktuelle Adresse",1,opt%
    ADD DIALOG "ADRLIST",3,10,49,234,10,0,"Adre·liste (alle Adressen)",2,opt%
    ADD DIALOG "ADRLIST",3,10,60,246,10,0,"Adre·liste (ausgewÑhlte Adressen) / EXPORT als Serienbriefdatei",3,opt%
    ADD DIALOG "ADRLIST",3,10,71,236,10,0,"Screenshot akt. Adresse",4,opt%
    ADD DIALOG "ADRLIST",3,10,82,236,10,0,"Geburtstagliste",5,opt%
    ADD DIALOG "ADRLIST",3,10,93,236,10,0,"Telefonliste",9,opt%
    ADD DIALOG "ADRLIST",3,10,104,234,10,0,"KundenvertrÑge",6,opt%
    ADD DIALOG "ADRLIST",3,10,115,236,10,0,"ProvisionsÅbersicht akt. Kunde",8,opt%
    ADD DIALOG "ADRLIST",3,10,126,236,10,0,"Adre·liste letzter Kontakt",12,opt%
    REM ADD DIALOG "ADRLIST",3,30,126,236,10,0,"ProvisionsÅbersicht akt. Vertrag",9,opt%
    ADD DIALOG "ADRLIST",1,79,168,51,14,1,"&Weiter",1,1
    ADD DIALOG "ADRLIST",1,131,168,51,14,0,"&Abbruch",0,0
 ELSE 
    IF _projekt$ LIKE "OFFICE" THEN 
      CREATE DIALOG "ADRLIST",0,0,292,100,"WÑhlen Sie den Ausdruck","MS Sans Serif",8
      ADD DIALOG "ADRLIST",9,4,9,20,21,2
      ADD DIALOG "ADRLIST",5,10,22,238,14,0,"WÑhlen Sie aus, in welcher Form die Adresse(n) gedruckt werden sollen"
      ADD DIALOG "ADRLIST",3,10,36,91,10,0,"nur die aktuelle Adresse",1,opt%
      ADD DIALOG "ADRLIST",3,10,47,96,10,0,"Adre·liste (alle Adressen)",2,opt%
      ADD DIALOG "ADRLIST",3,10,58,236,10,0,"Adre·liste (ausgewÑhlte Adressen) / EXPORT als Serienbriefdatei",3,opt%
      ADD DIALOG "ADRLIST",3,10,69,124,10,0,"Screenshot akt. Adresse",4,opt%
      ADD DIALOG "ADRLIST",1,38,80,51,14,1,"&Weiter",1,1
      ADD DIALOG "ADRLIST",1,130,80,51,14,0,"&Abbruch",0,0
    ELSE 
      REM CREATE DIALOG "ADRLIST",0,0,281,123,"WÑhlen Sie den Ausdruck","MS Sans Serif",8
      CREATE DIALOG "ADRLIST",0,0,292,188,"WÑhlen Sie den Ausdruck","MS Sans Serif",8
      REM ADD DIALOG "ADRLIST",4,0,0,272,99,0,""
      ADD DIALOG "ADRLIST",9,4,9,20,21,2
      ADD DIALOG "ADRLIST",5,10,22,238,14,0,"WÑhlen Sie aus, in welcher Form die Adresse(n) gedruckt werden sollen"
      ADD DIALOG "ADRLIST",3,10,36,91,10,0,"nur die aktuelle Adresse",1,opt%
      ADD DIALOG "ADRLIST",3,10,47,96,10,0,"Adre·liste (alle Adressen)",2,opt%
      ADD DIALOG "ADRLIST",3,10,58,276,10,0,"Adre·liste (ausgewÑhlte Adressen/Lieferanten) / EXPORT als Serienbriefdatei",3,opt%
      ADD DIALOG "ADRLIST",3,10,69,124,10,0,"Screenshot akt. Adresse",4,opt%
      IF _projekt$ <> "AKTE" THEN 
        ADD DIALOG "ADRLIST",3,10,80,124,10,0,"Geburtstagliste",5,opt%
        ADD DIALOG "ADRLIST",3,10,91,236,10,0,"Telefonliste",9,opt%
        IF _projekt$ <> "IMMAK" THEN 
          ADD DIALOG "ADRLIST",3,10,102,236,10,0,"UmsÑtze aktuelle Adresse",15,opt%
          ADD DIALOG "ADRLIST",3,10,113,236,10,0,"UmsÑtze alle Adressen",16,opt%
          ADD DIALOG "ADRLIST",3,10,124,236,10,0,"UmsÑtze ausgewÑhlte Adressen",17,opt%
          ADD DIALOG "ADRLIST",3,10,135,236,10,0,"Artikel-Umsatz aktuelle Adresse",18,opt%
          ADD DIALOG "ADRLIST",3,10,146,236,10,0,"aktuelle Lieferanten (XLS)",19,opt%
        END IF 
      END IF 
      ADD DIALOG "ADRLIST",1,78,168,51,14,1,"&Weiter",1,1
      ADD DIALOG "ADRLIST",1,130,168,51,14,0,"&Abbruch",0,0
    END IF 
 END IF 
 DIALOG "ADRLIST",req%
 REMOVE DIALOG "ADRLIST"
 IF req% = 1 THEN 
   knr% = Codeku.adressen
   MOUSE OFF 
   IF opt% = 6 THEN 
     CALL VLIST1()
   END IF 
   IF opt% = 7 THEN 
     CALL LIST7(knr%)
   END IF 
   IF opt% = 8 THEN 
     IF eurosupport$ = "TRUE" THEN 
       t1$ = "Wenn Sie in unterschiedlichen WÑhrungen erfa·t haben, sollten Sie die öbersicht in EURO ausgeben lassen,"
       t2$ = "da bei der Ausgabe der Belege in der OriginalwÑhrung zwar die einzelnen BetrÑge stimmen, aber keine der errechnten Summen richtig sein wird(z.B. DM+US$=?)!"
       CALL Fehler(t1$,t2$)
       REQUEST "öbersicht in EURO drucken?","",130,req1%
       IF req1% = 1 THEN 
         eu% = 1
         drwaehr$ = " in EUR"
       ELSE 
         eu% = 0
         drwaehr$ = " in allen WÑhrungen"
       END IF 
     END IF 
     IF PrvVerfahr$ <> "ZAHLUNGSEINGANG" THEN 
       CALL VLIST3(eu%)
     ELSE 
       CALL VLIST3Z(eu%)
     END IF 
   END IF 

   REM UmsÑtze einer Adresse
   IF opt% = 15 THEN 
     CALL AdrUmsOne()
   END IF 
   
   REM UmsÑtze aller Adressen
   IF opt% = 16 THEN 
     CALL AdrUmsAll()
   END IF 

   REM UmsÑtze ausgewÑhlte Adressen
   IF opt% = 17 THEN 
     CALL AdrUmsSel()
   END IF 
   IF opt% = 18 THEN 
     knr1% = codeku.adressen
     CALL ArtDruckNeu(1)
     knr% = knr1%
   END IF 
   IF opt% = 19 THEN 
     knr1% = codeku.adressen
     CALL liefakt()
     knr% = knr1%
   END IF 
   IF opt% = 12 THEN 
     REM 111297Adre·liste letzter Kontakt
     CREATE DIALOG "Konto1",0,0,221,165,"Datum letzter Kontakt","MS Sans Serif",8
     ADD DIALOG "Konto1",9,6,7,24,22,2
     ADD DIALOG "Konto1",5,34,8,170,9,0,"letzter Kontakt:"
     ADD DIALOG "Konto1",4,34,14,176,5,0,""
     ADD DIALOG "Konto1",5,34,22,175,16,0,"Bitte geben Sie ein, fÅr welchen Zeitraum Sie eine öbersicht wÅnschen."
     ADD DIALOG "Konto1",5,34,80,12,8,0,"von"
     ADD DIALOG "Konto1",6,53,79,45,11,0,0,von$,10
     ADD DIALOG "Konto1",5,102,80,12,8,0,"bis"
     ADD DIALOG "Konto1",6,116,79,45,11,0,0,bis$,10
     ADD DIALOG "Konto1",1,50,144,55,15,1,"&Weiter",1,1
     ADD DIALOG "Konto1",1,110,144,55,15,0,"&Abbruch",0,0
     DIALOG "Konto1",req%
     REMOVE DIALOG "Konto1"
     IF von$ <> "" OR bis$ <> "" THEN 
       IF von$ = "" THEN von$ = "1.1.1980"
       IF von$ <> "" AND bis$ = "" THEN 
         bis$ = von$
       END IF 

       SELECT WHERE FILE "Adressen"
       SELECT WHERE letzter_Kontakt >= von$ AND letzter_Kontakt <= bis$
       wbericht$ = "ADRESSEN"
       title2$ = "Adressliste selektiert nach letzter Kontakt von : " + von$ + " bis: " + bis$
       CALL VPEADRGr(Wbericht$,FormatPrint$,title2$,Terminejn$,KurzLang$)
     ELSE 
       CALL Fehler("Es mu· mindestens ein Datum fÅr - bis - eingegeben werden!","")
     END IF 
   END IF 
   SELECT WHERE FILE "Adressen"
   IF opt% = 1 THEN 
     IF _projekt$ <> "AKTE" THEN 
       REQUEST "Sollen alle VorgÑnge zu dieser Adresse gedruckt werden?","",135,cmplt%
     ELSE 
       cmplt% = 0
     END IF 
     _CodeKU% = CodeKU.adressen
     FILE "Telefon"
     INDEX codeku.telefon
     SELECT KEY _Codeku% FILE "Telefon" INDEX codeku.telefon
     FILE "adressen"
     MOUSE OFF 
     SELECT WHERE FILE "adressen"
     CALL Fehler("Bitte haben Sie einen Moment Geduld...","Filtererzeugung Adresse")
     MOUSE OFF 
     EXECUTE "SELECT WHERE codeku.adressen = _codeku%"
     REM 071098
     SELECT FIRST 
     KurzLang$ = "j"
     title2$ = "Adressangaben zu " + nachname.adressen
     IF cmplt% = 1 THEN 
       Terminejn$ = "j"
       FILE GAkquiDat$
       INDEX codeku.GAkquiDat$
       SELECT FIRST 
       SELECT KEY _codeku% FILE GAkquiDat$ INDEX codeku.GAkquiDat$
       SELECT WHERE FILE GAkquiDat$
       CALL Fehler("Bitte haben Sie einen Moment Geduld...","Filtererzeugung Termine")
       MOUSE OFF 
       EXECUTE "SELECT WHERE CodeKU.GAkquiDat$ = _CodeKU%"
       INDEX termin.GAkquiDat$
       SELECT FIRST 
       GFiltTer% = - 1
     END IF 
     FILE "adressen
     wbericht$ = "ADRESSEN"
     CALL VPEADRGr(Wbericht$,FormatPrint$,title2$,Terminejn$,KurzLang$)
     GFiltTer% = 0
     SELECT WHERE FILE "adressen"
     SELECT WHERE FILE GAkquiDat$
     REM IF cmplt% = 1 THEN 
       REM SELECT ;
         REM WHERE CodeKU.GAkquiDat$ = _CodeKU% AND codeak.GAkquiDat$ = codeak.aktionen
         REM ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
         REM TO ASK 
ErrADRDRUCK: 
       REM ON ERROR GOTO ErrorHandler
     REM END IF 
   END IF 
   IF opt% = 2 THEN 
     title2$ = "Adressliste alle Adressen"
     beding$ = ""
     KurzLang$ = "n"
     wbericht$ = "ADRESSEN"
     CALL VPEADRGr(Wbericht$,FormatPrint$,title2$,Terminejn$,KurzLang$)
   END IF 

   IF opt% = 3 THEN 
   REM ausgewÑhlte Adressen
     cfilt$ = WHERE 
     opt1% = 2
     stichw$ = "n"
     stichwort$ = ""
     option2% = 1
     CREATE DIALOG "ADRFilter",0,0,290,211,title$,"MS Sans Serif",8
     ADD DIALOG "ADRFilter",4,5,0,280,124,0," Suche nach "
     ADD DIALOG "ADRFilter",6,169,30,112,13,128,0,suna$,50
     ADD DIALOG "ADRFilter",6,169,46,112,13,128,0,suna1$,50
     ADD DIALOG "ADRFilter",3,14,11,72,11,0,"Kundennummer",6,opt1%
     ADD DIALOG "ADRFilter",3,14,25,34,11,0,"Anrede",1,opt1%
     ADD DIALOG "ADRFilter",3,14,38,68,11,0,"Nachname/Firma",2,opt1%
     ADD DIALOG "ADRFilter",3,14,52,22,10,0,"Ort",3,opt1%
     ADD DIALOG "ADRFilter",3,14,67,28,11,0,"PLZ",4,opt1%
     ADD DIALOG "ADRFilter",3,14,81,79,11,0,"Stra·e",5,opt1%
     ADD DIALOG "ADRFilter",5,169,16,111,12,0,"Bitte den Suchbegriff eingeben"
     ADD DIALOG "ADRFilter",5,150,32,14,11,0,"von"
     ADD DIALOG "ADRFilter",5,150,46,12,11,0,"bis"
     ADD DIALOG "ADRFilter",2,169,60,85,11,0,"Alle Angaben drucken","j","n",KurzLang$
     ADD DIALOG "ADRFilter",2,169,71,85,11,0,"Termine mitdrucken","j","n",Terminejn$
     IF _projekt$ LIKE "PROVIS" THEN 
       ADD DIALOG "ADRFilter",2,169,90,115,11,0,"VertrÑge zur Adresse drucken!","j","n",VertragJN$
     END IF 
     ADD DIALOG "ADRFilter",2,14,108,84,11,0,"Stichwort einbeziehen","j","n",stichw$

     IF _projekt$ LIKE "PROVIS" THEN 
       ADD DIALOG "ADRFilter",2,105,108,105,11,0,"Adressen einer Agentur","j","n",mitarb$
       ADD DIALOG "ADRFilter",2,14,96,105,11,0,"Adress-Status einbeziehen","j","n",adrstatus$
     END IF 
     IF _projekt$ LIKE "FACTURA" THEN 
       ADD DIALOG "ADRFilter",2,105,108,105,11,0,"Adressen eines Vertreters","j","n",vertret$
       ADD DIALOG "ADRFilter",2,201,108,80,11,0,"Lieferantenadressen","j","n",lief$
       REM ADD DIALOG "ADRFilter",2,160,86,105,11,0,"Vertreter einbeziehen","j","n",vertret$
       ADD DIALOG "ADRFilter",2,14,96,105,11,0,"Adress-Status einbeziehen","j","n",adrstatus$

       ADD DIALOG "ADRFilter",2,160,96,105,11,0,"Adress-Gruppe einbeziehen","j","n",adrgrup$

     END IF 
     ADD DIALOG "ADRFilter",4,5,125,279,60,0,"Ausgabeziel"
     ADD DIALOG "ADRFilter",3,14,139,124,11,0,"Ausgabe auf Drucker/Fenster",1,Option2%
     ADD DIALOG "ADRFilter",3,14,152,155,11,0,"Ausgabe in dBASE - Datei fÅr Serienbriefe",2,Option2%
     ADD DIALOG "ADRFilter",3,14,165,148,11,0,"Ausgabe in EXCEL - Datei",3,Option2%
     ADD DIALOG "ADRFilter",1,90,194,49,14,1,"&Weiter",1,1
     ADD DIALOG "ADRFilter",1,142,194,49,14,0,"&Abbruch",0,0
     DIALOG "ADRFilter",req%
     REMOVE DIALOG ALL 
     IF req% = 1 THEN 
       IF mitarb$ = "j" THEN 
         IF _projekt$ LIKE "PROVIS" THEN 
           FILE "maadr"
           INDEX nachname
           SELECT FIRST 
           a% = 0
           SELECT FIRST 
           REDIM AdrFound$( RECCOUNT ("maadr"))
           WHILE NOT EOF ("maadr")
             AdrFound$(a%) = LTRIM$ (nachname) + "," + LTRIM$ (vorname) + SPACE$ (80) + STR$ (codema,"000000")
             a% = a% + 1
             SELECT NEXT 
           WEND 
           AdrFound$(a%) = ""
           LAuswahl$ = AdrFound$(0)
           LAuswahl1$(0) = LAuswahl$
           CREATE DIALOG "ADRSTICHW",0,0,194,202,title$,"MS Sans Serif",8
           ADD DIALOG "ADRSTICHW",7,5,6,183,168,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
           ADD DIALOG "ADRSTICHW",1,33,180,55,16,1,"&OK",1,1
           ADD DIALOG "ADRSTICHW",1,93,180,55,16,0,"&Abbrechen",0,0
           DIALOG "ADRSTICHW",req5%
           MOUSE ON 
           REMOVE DIALOG "ADRSTICHW"
           IF req5% = 1 THEN 
             LAuswahl$ = LAuswahl1$(0)
             scodema% = VAL ( RIGHT$ (LAuswahl$,6))
             SELECT FIRST 
             SELECT KEY scodema% FILE "maadr" INDEX codema.maadr
             smaname$ = nachname.maadr + ", " + vorname.maadr
           ELSE 
             mitarb$ = "n"
             GOTO adrdr140996
           END IF 
         END IF 

         IF _projekt$ LIKE "FACTURA" THEN 
           FILE "vertrete"
           INDEX nachname
           SELECT FIRST 
           a% = 0
           SELECT FIRST 
           REDIM AdrFound$( RECCOUNT ("vertrete"))
           WHILE NOT EOF ("vertrete")
             AdrFound$(a%) = LTRIM$ (nachname) + "," + LTRIM$ (vorname) + SPACE$ (80) + STR$ (codema,"000000")
             a% = a% + 1
             SELECT NEXT 
           WEND 
           AdrFound$(a%) = ""
           LAuswahl$ = AdrFound$(0)
           LAuswahl1$(0) = LAuswahl$
           CREATE DIALOG "ADRSTICHW",0,0,194,202,title$,"MS Sans Serif",8
           ADD DIALOG "ADRSTICHW",7,5,6,183,168,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
           ADD DIALOG "ADRSTICHW",1,33,180,55,16,1,"&OK",1,1
           ADD DIALOG "ADRSTICHW",1,93,180,55,16,0,"&Abbrechen",0,0
           DIALOG "ADRSTICHW",req5%
           MOUSE ON 
           REMOVE DIALOG "ADRSTICHW"
           IF req5% = 1 THEN 
             LAuswahl$ = LAuswahl1$(0)
             scodema% = VAL ( RIGHT$ (LAuswahl$,6))
             SELECT FIRST 
             SELECT KEY scodema% FILE "vertrete" INDEX codema.vertrete
             smaname$ = nachname.vertrete + ", " + vorname.vertrete
           ELSE 
             mitarb$ = "n"
             GOTO adrdr140996
           END IF 
         END IF 
       END IF 
       FILE "adressen"
       IF adrstatus$ = "j" THEN 
         REDIM AdrFound$( RECCOUNT ("ADRStat"))
         FILE "ADRStat"
         INDEX keyword.adrstat
         SELECT FIRST 
         iii% = 0
         WHILE NOT EOF ("ADRStat")
           AdrFound$(iii%) = keyword.adrstat
           iii% = iii% + 1
           SELECT NEXT 
         WEND 
         CREATE DIALOG "ADRSTICHW",0,0,194,202,title$,"MS Sans Serif",8
         ADD DIALOG "ADRSTICHW",7,5,6,183,168,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRSTICHW",1,33,180,55,16,1,"&OK",1,1
         ADD DIALOG "ADRSTICHW",1,93,180,55,16,0,"&Abbrechen",0,0
         DIALOG "ADRSTICHW",req5%
         MOUSE ON 
         REMOVE DIALOG "ADRSTICHW"
         IF req5% = 1 THEN 
           LAuswahl$ = LAuswahl1$(0)
           adrstat$ = LEFT$ (LAuswahl$)
           IF LAuswahl$ = "leer" THEN adrstat$ = ""
         ELSE 
           adrstatus$ = "n"
           GOTO adrdr140996
         END IF 
         FILE "adressen"
       END IF 
       IF adrgrup$ = "j" THEN 
         REDIM AdrFound$( RECCOUNT ("ADRGrup"))
         FILE "ADRGrup"
         INDEX keyword.adrGrup
         SELECT FIRST 
         iii% = 0
         WHILE NOT EOF ("ADRGrup")
           AdrFound$(iii%) = keyword.adrGrup
           iii% = iii% + 1
           SELECT NEXT 
         WEND 
         CREATE DIALOG "ADRSTICHW",0,0,194,202,title$,"MS Sans Serif",8
         ADD DIALOG "ADRSTICHW",7,5,6,183,168,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRSTICHW",1,33,180,55,16,1,"&OK",1,1
         ADD DIALOG "ADRSTICHW",1,93,180,55,16,0,"&Abbrechen",0,0
         DIALOG "ADRSTICHW",req5%
         MOUSE ON 
         REMOVE DIALOG "ADRSTICHW"
         IF req5% = 1 THEN 
           LAuswahl$ = LAuswahl1$(0)
           adrgruppe$ = LEFT$ (LAuswahl$)
           IF LAuswahl$ = "leer" THEN adrgruppe$ = ""
         ELSE 
           adrgruppe$ = "n"
           GOTO adrdr140996
         END IF 
         FILE "adressen"
       END IF 
       IF vertret$ = "j" THEN 
         REDIM AdrFound$( RECCOUNT ("ADRGrup"))
         FILE "vertrete"
         INDEX nachname.vertrete
         SELECT FIRST 
         iii% = 0
         WHILE NOT EOF ("vertrete")
           AdrFound$(iii%) = nachname.vertrete + "," + vorname.vertrete + SPACE$ (100) + STR$ (codema.vertrete,"000000")
           iii% = iii% + 1
           SELECT NEXT 
         WEND 
         CREATE DIALOG "ADRSTICHW",0,0,194,202,title$,"MS Sans Serif",8
         ADD DIALOG "ADRSTICHW",7,5,6,183,168,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRSTICHW",1,33,180,55,16,1,"&OK",1,1
         ADD DIALOG "ADRSTICHW",1,93,180,55,16,0,"&Abbrechen",0,0
         DIALOG "ADRSTICHW",req5%
         MOUSE ON 
         REMOVE DIALOG "ADRSTICHW"
         IF req5% = 1 THEN 
           LAuswahl$ = LAuswahl1$(0)
           vertreter$ = LEFT$ (LAuswahl$,100)
           vertreter% = VAL ( RIGHT$ (LAuswahl$,6))
           IF LAuswahl$ = "leer" THEN 
             vertreter$ = ""
             vertreter% = 0
           END IF 
         ELSE 
           vertreter$ = "n"
           vertreter% = 0
           GOTO adrdr140996
         END IF 
         FILE "adressen"
       END IF 
       IF stichw$ = "j" THEN 
         CALL DFile(2,"OFFICE\keywords" + _fpw$)
         FILE "keywords"
         INDEX keyword
         SELECT FIRST 
         a% = 0
         SELECT WHERE keyword <> ""
         SELECT FIRST 
         REDIM AdrFound$( RECCOUNT ("keywords"))
         WHILE NOT EOF ("keywords")
           AdrFound$(a%) = LTRIM$ (keyword)
           a% = a% + 1
           SELECT NEXT 
         WEND 
         AdrFound$(a%) = ""
         LAuswahl$ = AdrFound$(0)
         LAuswahl1$(0) = LAuswahl$
         CREATE DIALOG "ADRSTICHW",0,0,194,202,title$,"MS Sans Serif",8
         ADD DIALOG "ADRSTICHW",7,5,6,183,168,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRSTICHW",1,33,180,55,16,1,"&OK",1,1
         ADD DIALOG "ADRSTICHW",1,93,180,55,16,0,"&Abbrechen",0,0
         DIALOG "ADRSTICHW",req5%
         MOUSE ON 
         REMOVE DIALOG "ADRSTICHW"
         IF req5% = 1 THEN 
           LAuswahl$ = LAuswahl1$(0)
           stichwort$ = "*" + LEFT$ (LAuswahl$) + "*"
         ELSE 
           stichw$ = "n"
           GOTO adrdr140996
         END IF 
         FILE "adressen"
       END IF 
       SELECT CASE opt1%
       CASE 1
         feld$ = "Anrede.adressen"
         IF suna1$ = "" THEN 
           REM suna$ = suna$ + "*"
           suna$ = UCASE$ (suna$)
           suna1$ = suna$
         ELSE 
           IF suna$ <> "" THEN 
             suna$ = UCASE$ (suna$)
             suna1$ = UCASE$ (suna1$)
           ELSE 
             suna$ = UCASE$ (suna1$)
             suna1$ = suna$
           END IF 
         END IF 
       CASE 2
         feld$ = "nachname.adressen"
         IF suna1$ = "" THEN 
           suna$ = UCASE$ (suna$)
           suna1$ = suna$
         ELSE 
           IF suna$ <> "" THEN 
             suna$ = UCASE$ (suna$)
             suna1$ = UCASE$ (suna1$)
           ELSE 
             suna$ = UCASE$ (suna1$)
             suna1$ = suna$
           END IF 
         END IF 
       CASE 3
         feld$ = "Ort.adressen"
         IF suna1$ = "" THEN 
           suna$ = UCASE$ (suna$)
           suna1$ = suna$
         ELSE 
           IF suna$ <> "" THEN 
             suna$ = UCASE$ (suna$)
             suna1$ = UCASE$ (suna1$)
           ELSE 
             suna$ = UCASE$ (suna1$)
             suna1$ = suna$
           END IF 
         END IF 
       CASE 4
         feld$ = "PLZ.adressen"
         IF suna1$ = "" THEN 
           suna$ = UCASE$ (suna$)
           suna1$ = suna$
         ELSE 
           IF suna$ <> "" THEN 
             suna$ = UCASE$ (suna$)
             suna1$ = UCASE$ (suna1$)
           ELSE 
             suna$ = UCASE$ (suna1$)
             suna1$ = suna$
           END IF 
         END IF 
       CASE 5
         feld$ = "Stra·e.adressen"
         IF suna1$ = "" THEN 
           suna$ = UCASE$ (suna$)
           suna1$ = suna$
         ELSE 
           IF suna$ <> "" THEN 
             suna$ = UCASE$ (suna$)
             suna1$ = UCASE$ (suna1$)
           ELSE 
             suna$ = UCASE$ (suna1$)
             suna1$ = suna$
           END IF 
         END IF 
       CASE 6
         feld$ = "Kundennummer.adressen"
         IF suna1$ = "" THEN 
           suna$ = UCASE$ (suna$)
           suna1$ = suna$
         ELSE 
           IF suna$ <> "" THEN 
             suna$ = UCASE$ (suna$)
             suna1$ = UCASE$ (suna1$)
           ELSE 
             suna$ = UCASE$ (suna1$)
             suna1$ = suna$
           END IF 
         END IF 
       CASE 7
         REM feld$="Telefon/Faxnummer"
       END SELECT 
       
       x% = ASC ( LEFT$ ( UCASE$ (suna$),1))
       SELECT CASE x%
         CASE 142
           sun$ = "A" + RIGHT$ (suna$, LEN (suna$) - 1)
           suna$ = sun$
         CASE 153
           sun$ = "O" + RIGHT$ (suna$, LEN (suna$) - 1)
           suna$ = sun$
         CASE 154
           sun$ = "U" + RIGHT$ (suna$, LEN (suna$) - 1)
           suna$ = sun$
       END SELECT 
 
       MOUSE OFF 
       SET STATUS "Bitte warten Adressdatei wird vorbereitet!"
       SELECT WHERE FILE "adressen"
       REM IF suna$ = "*" THEN suna$ = "**"
       stichwort$ = "*" + stichwort$ + "*"
       IF stichw$ = "j" THEN 
         IF opt1% = 1 THEN title2$ = "Adressliste selektiert nach Anrede von : " + suna$ + " bis: " + suna1$ + " und Stichwort: *" + stichwort$
         IF opt1% = 2 THEN title2$ = "Adressliste selektiert nach Nachname von: " + suna$ + " bis: " + suna1$ + " und Stichwort: *" + stichwort$
         IF opt1% = 3 THEN title2$ = "Adressliste selektiert nach Ort von: " + suna$ + " bis: " + suna1$ + " und Stichwort: *" + stichwort$
         IF opt1% = 4 THEN title2$ = "Adressliste selektiert nach PLZ von: " + suna$ + " bis: " + suna1$ + " und Stichwort: *" + stichwort$
         IF opt1% = 5 THEN title2$ = "Adressliste selektiert nach Stra·e von: " + suna$ + " bis: " + suna1$ + " und Stichwort: *" + stichwort$
         IF opt1% = 6 THEN title2$ = "Adressliste selektiert nach Kundennummer von: " + suna$ + " bis: " + suna1$ + " und Stichwort: *" + stichwort$
         IF suna$ = "" AND stichw$ = "j" THEN title2$ = "Adressliste selektiert nach Stichwort: *" + stichwort$
       ELSE 
         IF opt1% = 1 THEN title2$ = "Adressliste selektiert nach Anrede von: " + suna$ + " bis: " + suna1$
         IF opt1% = 2 THEN title2$ = "Adressliste selektiert nach Nachname von: " + suna$ + " bis: " + suna1$
         IF opt1% = 3 THEN title2$ = "Adressliste selektiert nach Ort von: " + suna$ + " bis: " + suna1$
         IF opt1% = 4 THEN title2$ = "Adressliste selektiert nach PLZ von: " + suna$ + " bis: " + suna1$
         IF opt1% = 6 THEN title2$ = "Adressliste selektiert nach Stra·e von: " + suna$ + " bis: " + suna1$
         IF opt1% = 6 THEN title2$ = "Adressliste selektiert nach Kundennummer von: " + suna$ + " bis: " + suna1$
         IF suna$ = "" AND stichw$ <> "j" THEN title2$ = "Adressliste alle Adressen"
       END IF 
       IF adrstatus$ = "j" THEN 
         IF adrstat$ = "" THEN 
           title2$ = title2$ + " /Adress-Status: leer"
         ELSE 
           title2$ = title2$ + " /Adress-Status:" + adrstat$
         END IF 
       END IF 
       IF adrgrup$ = "j" THEN 
         IF adrgruppe$ = "" THEN 
           title2$ = title2$ + " /Adress-Gruppe: leer"
         ELSE 
           title2$ = title2$ + " /Adress-Gruppe:" + adrstat$
         END IF 
       END IF 
       IF vertret$ = "j" THEN 
         IF vertreter$ = "" THEN 
           title2$ = title2$ + " /Vertreter: leer"
         ELSE 
           title2$ = title2$ + " /Vertreter:" + vertreter$
         END IF 
       END IF 


       x% = ASC ( LEFT$ (suna$,1))
       b1$ = "select where "
       IF lief$ = "j" THEN 
         b2$ = "aalieferant=~j~"
         title2$ = title2$ + " fÅr Lieferanten"
       END IF 
       IF mitarb$ = "j" THEN 
         title2$ = title2$ + " fÅr Mitarbeiter: " + smaname$
         IF stichw$ = "j" OR suna$ <> "" THEN 
           b1$ = "select where codema.adressen=scodema% AND "
         ELSE 
           beding$ = "select where codema.adressen=scodema%"
         END IF 
       END IF 
       IF stichw$ = "j" AND suna$ <> "" THEN 
         beding$ = b1$ + "LEFT$(UCASE$(feld$$),LEN(suna$)) >= suna$ and LEFT$(UCASE$(feld$$),LEN(suna$)) <= suna1$ AND Stichwort.adressen LIKE Stichwort$"
         SELECT CASE x%
           CASE 142,65
             beding$ = b1$ + "( LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna$)) <= suna1$ AND Stichwort.adressen LIKE Stichwort$) OR ASC ( LEFT$ ( UCASE$ (feld$$), LEN (suna$))) = 142"
           CASE 153,79
             beding$ = b1$ + "( LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna$)) <= suna1$ AND Stichwort.adressen LIKE Stichwort$) OR ASC ( LEFT$ ( UCASE$ (feld$$), LEN (suna$))) = 153"
           CASE 154,85
             beding$ = b1$ + "( LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna$)) <= suna1$ AND Stichwort.adressen LIKE Stichwort$) OR ASC ( LEFT$ ( UCASE$ (feld$$), LEN (suna$))) = 154"
           CASE 225
             beding$ = b1$ + "( LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna$)) <= suna1$ AND Stichwort.adressen LIKE Stichwort$) OR ASC ( LEFT$ ( UCASE$ (feld$$), LEN (suna$))) = 225"
         END SELECT 
       ELSE 
       END IF 
       IF stichw$ <> "j" AND suna$ <> "" THEN 
         beding$ = b1$ + "LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna1$)) <= suna1$"
         SELECT CASE x%
           CASE 142,65
             beding$ = b1$ + "( LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna$)) <= suna1$) OR ASC ( LEFT$ ( UCASE$ (feld$$), LEN (suna$))) = 142"
           CASE 153,79
             beding$ = b1$ + "( LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna$)) <= suna1$) OR ASC ( LEFT$ ( UCASE$ (feld$$), LEN (suna$))) = 153"
           CASE 154,85
             beding$ = b1$ + "( LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna$)) <= suna1$) OR ASC ( LEFT$ ( UCASE$ (feld$$), LEN (suna$))) = 154"
           CASE 225
             beding$ = b1$ + "( LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna$)) <= suna1$) OR ASC ( LEFT$ ( UCASE$ (feld$$), LEN (suna$))) = 225"
         END SELECT 
       ELSE 
       END IF 
       IF stichw$ = "j" AND suna$ = "" THEN 
         beding$ = b1$ + "stichwort.adressen LIKE Stichwort$"
       END IF 
       IF stichw$ <> "j" AND suna$ = "" AND mitarb$ <> "j" THEN beding$ = "select where"
       IF stichw$ <> "j" AND suna$ = "" AND mitarb$ <> "j" AND lief$ = "j" THEN beding$ = "select where aalieferant=~j~"
       IF stichw$ = "j" OR suna$ <> "" OR mitarb$ = "j" THEN 
         IF lief$ = "j" THEN beding$ = beding$ + "and aalieferant=~j~"
       END IF 
       IF adrstatus$ = "j" THEN 
         IF RIGHT$ (beding$,5) LIKE "where" THEN 
           beding$ = beding$ + " adrstatus.adressen = adrstat$"
         ELSE 
           beding$ = beding$ + " and adrstatus.adressen = adrstat$"
         END IF 
       END IF 
       IF vertret$ = "j" THEN 
         IF RIGHT$ (beding$,5) LIKE "where" THEN 
           beding$ = beding$ + " codema.adressen = " + STR$ (vertreter%,"000000")
         ELSE 
           beding$ = beding$ + " and codema.adressen = " + STR$ (vertreter%,"000000")
         END IF 
       END IF 
       IF adrgruppe$ = "j" THEN 
         IF RIGHT$ (beding$,5) LIKE "where" THEN 
           beding$ = beding$ + " adrgruppe.adressen = adrgruppe$"
         ELSE 
           beding$ = beding$ + " and adrgruppe.adressen = adrgruppe$"
         END IF 
       END IF 
       SELECT WHERE FILE "Adressen"
       EXECUTE beding$
       SELECT FIRST 
       wbericht$ = "ADRESSEN"
       
       IF option2% = 1 THEN 
         CALL VPEADRGr(Wbericht$,FormatPrint$,title2$,Terminejn$,KurzLang$)
         option2% = 0
       END IF 
       IF option2% > 0 THEN 
         MOUSE OFF 
         IF OPEN ("adrtemp") THEN CLOSE FILE "ADRTEMP"
         CALL DFile(2,"OFFICE\adrtemp" + _fpw$)
         REMOVE FROM FILE "adrtemp"
         FILE "adressen"
         SELECT FIRST 
         abz% = 0
         a% = 0
         b% = RECCOUNT ("ADRESSEN")
         IF b% > 20000 THEN 
           b% = 20000
           REDIM AdrFound$(20000)
         ELSE 
           REDIM AdrFound$( RECCOUNT ("ADRESSEN"))
         END IF 
         FOR a% = 0 TO b%
           AdrFound$(a%) = ""
         NEXT a%
         a% = 0
         WHILE NOT EOF ("adressen")
           abz% = abz% + 1
           SET STATUS "Anzahl der verarbeiteten Adressen: " + STR$ (abz%,"99999999")
           codeku% = codeku.adressen
           REM 200999
           BLANK FILE "adrtemp"
           codeadrt% = SER ("ADRTEMP",1)
           codeadrt.adrtemp = codeadrt%
           codeku.adrtemp = codeku%
           Kundennummer.adrtemp = Kundennummer.adressen
           Postanschrift.adrtemp = Postanschrift.adressen
           Anrede.adrtemp = Anrede.adressen
           ASerJN.adrtemp = ASerJN.adressen
           ADRStatus.adrtemp = ADRStatus.adressen
           ADRGruppe.adrtemp = ADRGruppe.adressen
           Vertreter.adrtemp = vertreter$
           IF anrede.adressen LIKE "Herr*" OR anrede.adressen LIKE "Fr*" THEN 
             Name2.adrtemp = Nachname.adressen
             Name1.adrtemp = Vorname.adressen
             REM Name3.adrtemp = Geburtsname.adressen
           ELSE 
             Name1.adrtemp = Nachname.adressen
             zuHaenden.adrtemp = Vorname.adressen
             Name2.adrtemp = Geburtsname.adressen
           END IF 
           IF Terminejn$ = "j" THEN 
             IF EXISTS (codeku%,codeku.akquise) THEN 
               quickkuter$ = STR$ (codeku%,"000000") + "00000000"
               SELECT FIRST FILE "Akquise" INDEX quickkuter.akquise
               SELECT KEY quickkuter$ FILE "Akquise" INDEX quickkuter.akquise
               f% = 1
               WHILE codeku.akquise = codeku% AND f% < 21 AND NOT EOF ("akquise")
                 IF codeku.akquise = codeku% THEN 
                   feld1$ = "TerminNotiz" + STR$ (f%,"00") + ".adrtemp"
                   feld2$ = "TerminErgebni" + STR$ (f%,"00") + ".adrtemp"
                   f1$ = "Datum: " + DATE$ (Datum.akquise,"0d.mm.yyyy") + "    Termin: " + DATE$ (Termin.akquise,"0d.mm.yyyy") + "   erledigt: " + erledigt_termin.akquise
                   feld1$$ = f1$ + CHR$ (13) + CHR$ (10) + Notiz.akquise
                   feld2$$ = ergebnis.akquise
                   f% = f% + 1
                   SELECT NEXT FILE "Akquise" INDEX quickkuter.akquise
                 END IF 
               WEND 
             END IF 
           END IF 
           Strasse.adrtemp = Stra·e.adressen
           PLZ.adrtemp = PLZ.adressen
           Ort.adrtemp = Ort.adressen
           NationalitÑt.adrtemp = NationalitÑt.adressen
           Staatsangehîrig.adrtemp = Staatsangehîrig.adressen
           Land.adrtemp = Land.adressen
           Geburtstag.adrtemp = DATE$ (Geburtstag.adressen,"0d.mm.yyyy")
           K1Bank.adrtemp = K1Bank.adressen
           K1BLZ.adrtemp = K1BLZ.adressen
           K1Konto.adrtemp = K1Konto.adressen
           K2Bank.adrtemp = K2Bank.adressen
           K2BLZ.adrtemp = K2BLZ.adressen
           K2Konto.adrtemp = K2Konto.adressen
           Kunde_seit.adrtemp = DATE$ (Kunde_seit.adressen,"0d.mm.yyyy")
           letzter_Kontakt.adrtemp = DATE$ (letzter_Kontakt.adressen,"0d.mm.yyyy")
           REM Notiz.adrtemp = Notiz.adressen
           
           Briefanrede.adrtemp = Briefanrede.adressen
           REM Geburtsname.adrtemp = Geburtsname.adressen
           feld1$ = "Telart"
           feld2$ = "Telnr"
           feld3$ = "FaxJN"
           codema% = Codema.adressen
           codema.adrtemp = codema%
           codepr.adrtemp = codepr.adressen
           REM 061196
           IF _projekt$ LIKE "FACTURA" THEN 
             IF EXISTS (codema%,codema.vertrete) THEN 
               FILE "vertrete"
               INDEX codema.vertrete
               SELECT FIRST 
               SELECT KEY codema% FILE "vertrete" INDEX codema.vertrete
               Mitarbeiter.adrtemp = TRIM$ (nachname.vertrete) + ", " + TRIM$ (vorname.vertrete)
               QuickMaKund.adrtemp = TRIM$ (nachname.vertrete) + TRIM$ (vorname.vertrete) + nachname.adressen
             END IF 
           END IF 
           IF _projekt$ LIKE "PROVIS" THEN 
             IF EXISTS (codema%,codema.maadr) THEN 
               FILE "maadr"
               INDEX codema.maadr
               SELECT FIRST 
               SELECT KEY codema% FILE "maadr" INDEX codema.maadr
               Mitarbeiter.adrtemp = TRIM$ (nachname.maadr) + ", " + TRIM$ (vorname.maadr)
               QuickMaKund.adrtemp = TRIM$ (nachname.maadr) + TRIM$ (vorname.maadr) + nachname.adressen
             END IF 
           END IF 
           IF EXISTS (codeku%,codeku.telefon) THEN 
             FILE "telefon"
             INDEX codeku.telefon
             SELECT FIRST 
             SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
             abi% = 0
             WHILE codeku.telefon = codeku% AND abi% < 20 AND NOT EOF ("telefon")
               abi% = abi% + 1
               IF abi% < 10 THEN 
                 feldart$ = feld1$ + STR$ (abi%,"9") + ".adrtemp"
                 feldnum$ = feld2$ + STR$ (abi%,"9") + ".adrtemp"
                 feldFax$ = TRIM$ (feld3$ + STR$ (abi%,"9") + ".adrtemp")
               ELSE 
                 feldart$ = feld1$ + STR$ (abi%,"99") + ".adrtemp"
                 feldnum$ = feld2$ + STR$ (abi%,"99") + ".adrtemp"
                 feldFax$ = TRIM$ (feld3$ + STR$ (abi%,"99") + ".adrtemp")
               END IF 
               feldart$$ = LEFT$ (art.telefon,60)
               feldnum$$ = LEFT$ (nummer.telefon,60)
               FeldFax$$ = FonOderFax.telefon
             SELECT NEXT FILE "telefon" INDEX codeku.telefon
             WEND 
           END IF 
           FILE "adrtemp"
           STORE FILE "adrtemp"
           UNLOCK CURRENT FILE "adrtemp"
           AdrFound$(a%) = Nachname.adressen + STR$ (codeadrt%,"000000")
           a% = a% + 1
         FILE "adressen"
         SELECT NEXT FILE "adressen"
         WEND 
         SELECT WHERE FILE "adressen"
       END IF 
       REM Serienbrief nach dbase
       REM 240999
       IF option2% = 2 THEN 
         SELECT WHERE FILE "adressen"
         adrser% = 1
         CALL SerieNeu1("ADRTEMP")
       END IF 
 
       IF option2% = 3 THEN 
         FILE "adrtemp"
         INDEX name2.adrtemp
         SELECT FIRST 
         REM EXPORT nach EXCEL aufrufen
         dir1$ = DIRECTORY 
         dateiname2$ = "*.xls"
         REQUEST "Speichern als EXCEL..."," ",27,req%,dateiname2$
         IF req% = 1 THEN 
           SET STATUS "EXPORT der gewÑhlten Adressen nach: " + dateiname2$
           Superbase.Converters.SBF.SourceFormat = "Superbase"
           Superbase.Converters.SBF.SourceFile = "ADRTEMP"
           Superbase.Converters.SBF.Descending = 0
           Superbase.Converters.SBF.Merge = 0
           Superbase.Converters.SBF.LogErrors = 0
           Superbase.Converters.SBF.MultiResponse = 0
           Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
           Superbase.Converters.XLS.DestFile = dateiname2$
           Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
           DIRECTORY dir1$
           REMOVE FROM FILE "adrtemp"
           SET STATUS "EXPORT beendet!"
         END IF 
       END IF 
       SELECT WHERE FILE "adressen"
ErrADRDR2: 
       ON ERROR GOTO ErrorHandler
     END IF 
   END IF 
   IF opt% = 4 THEN 
     CALL PrinterSetup()
     CALL SeiteDrucken()
   END IF 
   IF opt% = 5 THEN 
     IF NOT disabled%("ADRLISTE") THEN 
       CALL GEBLISTE()
     END IF 
   END IF 
   IF opt% = 9 THEN 
     IF NOT disabled%("ADRLISTE") THEN 
       REM Telefonliste 141196
       IF OPEN ("adrtemp") THEN CLOSE FILE "ADRTEMP"
       CALL DFile(2,"OFFICE\adrtemp" + _fpw$)
       REMOVE FROM FILE "adrtemp"
       FILE "Adressen"
       INDEX Nachname.adressen
       SELECT FIRST 
       CALL Server("LISTBOXINIT","Adre·auswahl fÅr Telefonliste")
       CALL Gauge(1,"Adre·datei wird durchsucht...")
       CALL Server("GAUGEENABLECANCEL","")
       _prozt% = 0
       _proz2% = 0
       _anz% = RECCOUNT ("adressen")
       abz% = 0
       WHILE NOT EOF ("adressen") AND ServerReply$() <> "CANCEL"
         codeku% = codeku.adressen
         _proz% = INT ((100 / _anz%) * _proz2%)
         IF _proz% > 100 THEN _proz% = 100
         IF _proz% < 2 THEN _proz% = 2
         IF _proz% <> _prozt% THEN 
           _prozt% = _proz%
           SET STATUS "Telefonliste... " + STR$ (_prozt%,"999") + " %"
           CALL Gauge(_proz%,"")
         END IF 
         _proz2% = _proz2% + 1
         anrede$ = LTRIM$ (Anrede.adressen)
         titel$ = LTRIM$ (Titel.adressen)
         IF anrede$ LIKE "Herr*" OR anrede$ LIKE "Fr*" OR anrede$ LIKE "Fam*" OR anrede$ LIKE "Ehe*" OR anrede$ LIKE "Kind*" THEN 
           nachname$ = LTRIM$ (nachname.adressen)
           vorname$ = LTRIM$ (vorname.adressen)
         ELSE 
           nachname$ = LTRIM$ (nachname.adressen)
           vorname$ = LTRIM$ (Geburtsname.adressen)
         END IF 
         gebdat% = Geburtstag.adressen
         CALL WriteAdrTemp(codeku%,anrede$,titel$,nachname$,vorname$,gebdat%)
         abz% = abz% + 1
         tmpzeile$ = LTRIM$ (Nachname.adressen) + ", " + LEFT$ ( LTRIM$ (Vorname.adressen),10)
         CALL Server("GaugeMessage","... " + STR$ (abz%,"999999") + " gefunden (" + tmpzeile$ + ")")
         CALL Server("LISTBOXADD",tmpZeile$)
         FILE "Adressen"
       SELECT NEXT FILE "Adressen
       WEND 
       CALL Gauge(0,"")
       IF abz% > 0 THEN 
         wbsort$ = "Nachname"
         listart% = 2
         title2$ = "Telefonliste "
         CALL VPEADRTemp("ADRTEMP",FormatPrint$,title2$,wbsort$,listart%)
       ELSE 
         CALL Fehler("Es waren keine Adressen zur Erstellung einer Telefonliste vorhanden!","")
       END IF 
     END IF 
   END IF 
 END IF 
adrdr140996: 
 FILE "adressen"
 SELECT KEY knr% FILE "adressen" INDEX CodeKU.adressen
 FORM 
 SET INDEX cindex$
 INDEX cindex$
 MOUSE ON 
 DIRECTORY cdir$
 END SUB 
  
 
 ' Adresse testen
 ' ======================================================================
 ' Zweck:       automatische Vergabe der Seriennummer
 ' Nutzung:     wird vom Adressenformular verwendet
 ' ======================================================================
 
SUB ADRTest()
 IF CodeKU.adressen = 0 THEN 
   CodeKU.adressen = SER ("adressen",1)
   FORM 
 END IF 
 REM CALL ADRFeldnamen()
  IF anrede.adressen LIKE "*herr*" OR anrede.adressen LIKE "*frau*" OR anrede.adressen LIKE "*frÑ*" OR anrede.adressen LIKE "*fam*" THEN 
    adrfn1$ = "Nachname"
    adrfn2$ = "Geburtsname"
    adrfn3$ = "Vorname"
  ELSE 
    adrfn1$ = "Firma"
    adrfn2$ = "Zusatz"
    adrfn3$ = "z.H."
 END IF 
 MOUSE ON 
 END SUB 
 
 
 ' Adressen Feldnamen
 ' ======================================================================
 ' Zweck:       VerÑndert die angezeigten Feldnamen dem Adre·typ 
 '              entsprechend; Adre·typ wird Åber Feld Anrede.adressen 
 '              ermittelt
 ' Nutzung:     CALL ADRFeldnamen()
 ' ======================================================================
 
SUB ADRFeldnamen()
 MOUSE OFF 
  codeku% = codeku.adressen
  IF MOD ("adressen") OR NEW ("adressen") THEN 
    IF nachname.adressen = "" THEN nachname.adressen = "NEU"
    CALL QuickStore("Adressen")
    SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
  END IF 
  IF anrede.adressen LIKE "*herr*" OR anrede.adressen LIKE "*frau*" OR anrede.adressen LIKE "*frÑ*" OR anrede.adressen LIKE "*fam*" THEN 
    adrfn1$ = "Nachname"
    adrfn2$ = "Geburtsname"
    adrfn3$ = "Vorname"
  ELSE 
    adrfn1$ = "Firma"
    adrfn2$ = "Zusatz"
    adrfn3$ = "z.H."
 END IF 

 IF _projekt$ LIKE "PROV*" THEN 
   IF FORM LIKE "ADR*" THEN 
     IF ADRFarbe.adressen < 1 THEN f.adrstat1.BackColor = 8
     IF ADRFarbe.adressen > 0 THEN f.adrstat1.BackColor = ADRFarbe.adressen
     adrst$ = STR$ (ADRFarbe.adressen,"000")
   END IF 
 ELSE 
   IF ProjectJN$ = "TRUE" AND _projekt$ LIKE "FACT*" THEN 
     IF FORM LIKE "ADR*" THEN 
       IF ADRFarbe.adressen < 1 THEN f.adrstat1.BackColor = 8
       IF ADRFarbe.adressen > 0 THEN f.adrstat1.BackColor = ADRFarbe.adressen
       farbe% = ADRFarbe.adressen
       adrst$ = STR$ (farbe%,"000")
       REM CALL Fehler( STR$ (farbe%,"000"),"")
     END IF 
   END IF 
 END IF 
 IF Bild1.adressen <> "" OR Bild2.adressen <> "" OR Bild3.adressen <> "" OR Bild4.adressen <> "" OR Bild5.adressen <> "" OR Bild6.adressen <> "" OR Bild7.adressen <> "" OR Bild8.adressen <> "" THEN 
   biiild$ = "Bilder Æ"
 ELSE 
   biiild$ = "Bilder"
 END IF 
 IF notiz.adressen <> "" THEN notiz$ = "Notiz Æ" ELSE notiz$ = "Notiz"
 IF VerleihAdr$ = "j" THEN 
   IF EXISTS (codeku.adressen,codeku.verleih) THEN 
     SELECT KEY codeku.adressen FILE "Verleih" INDEX codeku.verleih
     verleih$ = "Verleih Æ"
   ELSE 
     verleih$ = "Verleih"
   END IF 
 END IF 

    IF Mahnsperre.adressen LIKE "J" THEN 
     mahnsperr$ = "Mahnsperre Æ"
   ELSE 
     mahnsperr$ = "Mahnsperre"
   END IF 
   IF GCodieADR$ LIKE "TRUE" THEN 
   ELSE 
     IF Rechsperre.adressen LIKE "J" THEN 
       rechsperr$ = "Rechnungssperre Æ"
     ELSE 
       rechsperr$ = "Rechnungssperre"
     END IF 
   END IF 

 ON ERROR GOTO rech040120041 
 IF GHerba% = - 1 THEN 
   f.herba.visible = - 1
   f.herba.enabled = - 1
   CALL DFile(2,"OFFICE\herkopf" + _fpw$)
   CALL DFile(2,"OFFICE\herdata" + _fpw$)
   IF EXISTS (codeku.adressen,codeku.herkopf) THEN 
     herba$ = "HERBALIFE Æ"
   ELSE 
     herba$ = "HERBALIFE"
   END IF 
 ELSE 
   f.herba.visible = 0
   f.herba.enabled = 0
 END IF 
 IF EXISTS (codeku.adressen,codeku.reingang) THEN 
   eingre1$ = "Rech.Eingangsbuch Æ"
   IF GfromRE% <> - 1 THEN 
     f.recheing.enabled = - 1
   ELSE 
     f.recheing.enabled = 0
   END IF 
 ELSE 
   eingre1$ = "Rech.Eingangsbuch"
   f.recheing.enabled = 0
 END IF 

 REM CALL Fehler("Rech.Ausgangsbuch Æ","")
 IF EXISTS (codeku.adressen,codeku.rausgang) THEN 
   ausgr$ = "Rech.Ausgangsbuch Æ"
   IF GfromRA% <> - 1 THEN 
     f.rechaus.enabled = - 1
   ELSE 
     f.rechaus.enabled = 0
   END IF 
 ELSE 
   ausgr$ = "Rech.Ausgangsbuch"
   f.rechaus.enabled = 0
 END IF 
 
 IF MNdisabled%("Reingang") THEN 
   f.recheing.enabled = 0
   f.rechaus.enabled = 0
 END IF 
rech040120041: 
 ON ERROR GOTO ErrorHandler
 IF Zweitanschrift.adressen <> "" OR drittanschrift.adressen <> "" OR viertanschrift.adressen <> "" OR fuenftanschrift.adressen <> "" THEN 
   zweitan$ = "Zweitanschrift Æ"
 ELSE 
   zweitan$ = "Zweitanschrift"
 END IF 
 st$ = "Termine: "
 IF EXISTS (CodeKU.ADRESSEN,CodeKU.akquise) OR EXISTS (CodeKU.ADRESSEN,CodeKU.akquiseb) THEN 
   akquise$ = "&Termine Æ"
   cfile$ = FILE 
   FILE GAkquiDat$
   INDEX CodeKU.GAkquiDat$
   REM SELECT DUPLICATE 
   SELECT WHERE 
   SELECT FIRST INDEX codeku.GAkquiDat$
   SELECT KEY CodeKU.ADRESSEN FILE GAkquiDat$ INDEX CodeKU.GAkquiDat$
   a% = 0
   WHILE NOT EOF (GAkquiDat$):REM AND CodeKU.GAkquiDat$ = CodeKU.ADRESSEN
     a% = a% + 1
     REM SELECT NEXT FILE GAkquiDat$ INDEX CodeKU.GAkquiDat$
     SELECT DUPLICATE 
   WEND 
   SELECT WHERE FILE GAkquiDat$
   FILE cfile$
   st$ = st$ + LTRIM$ ( STR$ (a%,"999999"))
 ELSE 
   akquise$ = "&Termine"
   st$ = st$ + "0"
 END IF 
 IF _projekt$ <> "WAWI" THEN 
   IF EXISTS (CodeKU.ADRESSEN,CodeKU.Telefon) THEN 
     SELECT FORM KEY codeku.adressen FILE "Telefon" INDEX codeku.telefon
   END IF 
   IF EXISTS (CodeKU.ADRESSEN,codeku.connect) THEN 
     adrvliste$ = "Kontakte Æ"
   ELSE 
     adrvliste$ = "Kontakte"
   END IF 
   IF EXISTS (Codeku.adressen,codeku.dokument) THEN 
     dok1$ = "Dokumente Æ"
   ELSE 
     dok1$ = "Dokumente"
   END IF 
   IF PROJECTJN$ = "TRUE" THEN 
     IF EXISTS (Codeku.adressen,codeku.prconadr) THEN 
       adrvvorg$ = "Projekte Æ"
     ELSE 
       adrvvorg$ = "Projekte"
     END IF 
   END IF 
 END IF 
 IF _projekt$ = "IMMAK" THEN 
   IF EXISTS (CodeKU.ADRESSEN,CodeKU.ANFRAGE) THEN 
     anfragebuton$ = "&Anfrage Æ"
   ELSE 
     anfragebuton$ = "&Anfrage"
   END IF 
   IF EXISTS (CodeKU.ADRESSEN,CodeKU.OBJEKTE) THEN 
     angebotbuton$ = "An&gebot Æ"
   ELSE 
     angebotbuton$ = "An&gebot"
   END IF 
 END IF 


 

 IF Sperre.ADRESSEN <> 0 THEN 
   IF MNdisabled%("DATALOCK") THEN 
     AdrLock$ = "gesperrt"
   ELSE 
     SELECT KEY Sperre.ADRESSEN FILE "SUPERVIS" INDEX CodeMA.SUPERVIS
     AdrLock$ = "gesperrt durch " + Name.SUPERVIS
   END IF 
   MENU 2,7,2
 ELSE 
   AdrLock$ = "freier Zugriff"
   MENU 2,7,1
 END IF 
 IF _projekt$ = "FACTURA" OR _projekt$ = "WAWI" OR _projekt$ = "MEDIA" THEN CALL ADRUpdate()
 sort$ = INDEX 
 b$ = "                               DatensÑtze gesamt: " + STR$ ( RECCOUNT ("adressen"),"99999999")
 SET STATUS st$ + b$
 FORM 
 MOUSE ON 
 END SUB 
 
 
 ' Adressen - Briefanrede generieren
 ' ======================================================================
 ' Zweck:       generiert Briefanrede
 ' Nutzung:     CALL ADRAnrede()
 ' ======================================================================
 
SUB ADRAnrede()
 
   IF Briefanrede.adressen = "" THEN 
     SELECT CASE UCASE$ ( LEFT$ (anrede.adressen,3))
     CASE "HER"
       briefanrede.adressen = "Sehr geehrter Herr " + nachname.adressen + ","
     CASE "FRA","FR."
       briefanrede.adressen = "Sehr geehrte Frau " + nachname.adressen + ","
     CASE "FRé","FRL"
       briefanrede.adressen = "Sehr geehrtes FrÑulein " + nachname.adressen + ","
     CASE "FA.","FIR",""
       briefanrede.adressen = "Sehr geehrte Damen und Herren,"
     CASE "FAM"
       briefanrede.adressen = "Sehr geehrte Familie " + nachname.adressen + ","
     CASE "EHE"
       briefanrede.adressen = "Sehr geehrte Eheleute " + nachname.adressen + ","
     END SELECT 
   END IF 
   IF MOD ("ADRESSEN") THEN 
   ELSE 
     FORM 
   END IF 
 MOUSE ON 
 END SUB 
 
 
 ' Adressen - Postleitzahl ermitteln
 ' ======================================================================
 
FUNCTION GetPLZ$(PLZOrt$,PLZStrasse$)
 DIM StrListe$(400)
 tmpStrasse$ = PLZStrasse$
 IF PLZStrasse$ LIKE "*strasse*" OR PLZStrasse$ LIKE "*stra·e*" THEN 
   fpos% = INSTR ( UCASE$ (PLZStrasse$),"STRA")
   IF fpos% <> 1 THEN 
     tmpStrasse$ = LEFT$ (PLZStrasse$,fpos% + 2)
   END IF 
 END IF 
 cdir$ = DIRECTORY 
 DIRECTORY _netpath$
 i% = CALL ("SUCHEN","",PLZOrt$,tmpStrasse$,0, VAL ( FN numeric(PLZStrasse$)))
 _PLZ$ = CALL ("GETPLZ")
 GetPLZ$ = _PLZ$
 PSTR$ = CALL ("GETSTR")
 _str$ = PSTR$
 strfound% = 0
 StrListe$(strfound%) = PSTR$ + " [" + _PLZ$ + "]"
 WHILE PSTR$ = _STR$ AND PLZStra·e$ <> ""
   i% = CALL ("SWEITER")
   PSTR$ = CALL ("GETSTR")
   IF PSTR$ = _STR$ THEN 
     strfound% = strfound% + 1
     _PLZ$ = CALL ("GETPLZ")
     StrListe$(strfound%) = PSTR$ + " [" + _PLZ$ + "]"
   END IF 
 WEND 
 IF strfound% > 0 THEN 
   CREATE DIALOG "PLZ",0,0,304,161,title$,"MS Sans Serif",8
   ADD DIALOG "PLZ",4,0,0,302,137,0,""
   ADD DIALOG "PLZ",9,8,8,20,22,2
   ADD DIALOG "PLZ",5,32,8,230,9,0,"Zur aktuellen Adresse wurden mehrere Postleitzahlen gefunden."
   ADD DIALOG "PLZ",5,32,17,180,8,0,"Bitte wÑhlen Sie die zutreffende Postleitzahl aus:"
   ADD DIALOG "PLZ",7,31,29,263,90,0,0,StrListe$,Auswahl$
   ADD DIALOG "PLZ",1,93,142,55,15,1,"&OK",1,1
   ADD DIALOG "PLZ",1,150,142,55,15,0,"&Abbrechen",0,0
   DIALOG "PLZ",req%
   REMOVE DIALOG "PLZ"
   IF req% = 1 THEN 
     _PLZ$ = MID$ (Auswahl$(0), LEN (Auswahl$(0)) - 5,5)
     GetPLZ$ = _PLZ$
   ELSE 
     GetPLZ$ = ""
   END IF 
 END IF 
 DIRECTORY cdir$
 MOUSE ON 
 END FUNCTION 
 
 
 
 ' Postleitzahl suchen
 ' ====================================================================== 
 
SUB ADRPLZTest()
 IF plzfound% = 1 THEN 
   SET STATUS "PLZ wird ermittelt..."
   MOUSE OFF 
   IF PLZ.adressen = "" THEN PLZ.adressen = GetPLZ$(ort.adressen,stra·e.adressen)
   FORM 
   MOUSE ON 
   SET STATUS "Bereit"
 END IF 
 END SUB 
 
  
 ' Postleitzahl ergÑnzen
 ' ====================================================================== 
 ' mu· aus KompatibilitÑtsgrÅnden beibehalten werden!
 
SUB ADROrtTest()
 END SUB 
 
 
 ' ADRESSEN Suchen (neue Version)
 ' ====================================================================== 
 ' Zweck:       Suchen einer Adresse
 ' Nutzung:     wird vom Adressenformular verwendet
 ' ======================================================================
 
SUB ADRSuchen()
 SELECT WHERE FILE GTelDat$
 filtbutadr1$ = "Filter: ohne"
 SET STATUS "Adresse suchen"
 GAnzAdrFound% = 0
 adrser% = 0
 FILE "adressen"
 cuknr% = codeku.adressen
 adrglob% = 0
 adr% = 0
 adrhis% = 0
 IF ( MOD ("adressen") OR NEW ("adressen")) AND nachname.adressen <> "" THEN CALL QuickStore("adressen")
 adr% = ADRSuche%(0)
 IF adr% <> 0 THEN 
   cuknr% = adr%
   adrhis% = - 1
 END IF 
 IF adrglob% <> 0 THEN 
   cuknr% = adrglob%
   adrhis% = - 1
 END IF 
 SELECT FORM KEY cuknr% FILE "adressen" INDEX CodeKU.adressen
 SELECT FORM KEY cuknr% FILE "telefon" INDEX CodeKU.telefon
 IF UCASE$ (_projekt$) LIKE "FACTURA" THEN SELECT FORM KEY cuknr% FILE "umsatz" INDEX CodeKU.umsatz
 IF adrhis% = - 1 THEN 
   REM Suchergebnis in die Datei ADRHIS eintragen
   BLANK FILE "ADRHIS"
   codekey.adrhis = SER ("ADRHIS",1)
   codema.adrhis = GMACodeMA%
   codeku.adrhis = cuknr%
   name.adrhis = LEFT$ (Nachname.adressen + "/" + Vorname.adressen + "/" + Ort.adressen + "/" + Stra·e.adressen,200)
   QCodeMAKey.adrhis = STR$ (GMACodeMA%,"000000") + STR$ (codekey.adrhis,"000000")
   timestamp$ = DATE$ ( TODAY ,"yymmdd") + STR$ ( HRS ( NOW ) * 100 + MINS ( NOW ),"0000")
   timestamp% = VAL (timestamp$)
   Timestamp.adrhis = timestamp%
   STORE FILE "ADRHIS"
 END IF 
 knr% = cuknr%
 SET INDEX INDEX 

 IF FORM LIKE "ADR*" THEN CALL ADRFeldnamen()
 FORM 
 REM CALL BMCheckMail()
 MOUSE ON 
 END SUB 
 
 
 ' ADRESSEN Suchen (projektunabhÑngig)
 ' ====================================================================== 
 ' Zweck:       Suchen einer Adresse
 ' Nutzung:     wird vom Adressenformular verwendet
 ' Parameter:   filtertype%     0 - keine Filtergenerierung
 '                              1 - mit Filtergenerierung
 ' filtertyp%
 ' ======================================================================
 ' 13.07.94    - Dialog fertiggestellt / Schnellsuche & erweiterte Suche
 '               getrennt aufrufbar
 ' 10.09.95    - Unterbindung von Suchen ohne Suchbegriff
 
  
FUNCTION ADRSuche%(filtertype%)
 DIM aaa$(1)
 cfile$ = FILE 
 DIM Feldnamen$(142)
 DIM FeldN$(142)
 REM REMOVE FROM FILE "ADRLEER"
w140520063: 
 adrfound% = 0
 sw% = 0
 REM ** Feldnamen definieren
 IF _projekt$ <> "AKTE" THEN 
   IF _projekt$ <> "PROVIS" THEN 
     Feldnamen$(sw%) = "Nachname"
     sw% = sw% + 1
     Feldnamen$(sw%) = "Matchcode"
     sw% = sw% + 1
     Feldnamen$(sw%) = "Kundennummer"
     sw% = sw% + 1
     Feldnamen$(sw%) = "Stichwort"
     sw% = sw% + 1
     Feldnamen$(sw%) = "Adress-Status"
     sw% = sw% + 1
     Feldnamen$(sw%) = "Adress-Gruppe"
     sw% = sw% + 1
     Feldnamen$(sw%) = "PROJEKT"
     sw% = sw% + 1
     Feldnamen$(sw%) = "Vorname"
     sw% = sw% + 1
     Feldnamen$(sw%) = "Vorstand"
     sw% = sw% + 1
     Feldnamen$(sw%) = "GF"
     sw% = sw% + 1
     Feldnamen$(sw%) = "Stra·e"
     sw% = sw% + 1
     Feldnamen$(sw%) = "Ort"
     sw% = sw% + 1
     Feldnamen$(sw%) = "Ortsteil"
     sw% = sw% + 1
     Feldnamen$(sw%) = "Postleitzahl"
     sw% = sw% + 1
     Feldnamen$(sw%) = "Telefon/-fax"
     sw% = sw% + 1
     Feldnamen$(sw%) = "Telefon/-fax schnell"
     sw% = sw% + 1
     Feldnamen$(sw%) = "Vertreter"
     sw% = sw% + 1
     REM sw% = 13
     Feldnamen$(sw%) = "Kunde seit"
     sw% = sw% + 1
   END IF 
 ELSE 
   Feldnamen$(sw%) = "Aktenzeichen"
   sw% = sw% + 1
   Feldnamen$(sw%) = "HRB/HRA"
   sw% = sw% + 1
   Feldnamen$(sw%) = "Schuldner-Name"
   sw% = sw% + 1
   Feldnamen$(sw%) = "GeschÑftsfÅhrer"
   sw% = sw% + 1
   Feldnamen$(sw%) = "Schuldner-Ort"
   sw% = sw% + 1
   Feldnamen$(sw%) = "Schuldner-Stra·e"
   sw% = sw% + 1
   Feldnamen$(sw%) = "Schuldner-PLZ"
   sw% = sw% + 1
   Feldnamen$(sw%) = "GlÑubiger"
   sw% = sw% + 1
   Feldnamen$(sw%) = "Gutachter"
   sw% = sw% + 1
   Feldnamen$(sw%) = "Sequester"
   sw% = sw% + 1
   Feldnamen$(sw%) = "Verwalter"
   REM sw% = 10
   sw% = sw% + 1
 END IF 
 IF defa$ LIKE "MEGA" THEN 
   Feldnamen$(sw%) = "KostentrÑger"
   Feldnamen$(sw% + 1) = "Kostenstelle"
   sw% = sw% + 2
 END IF 
 

  
 IF _projekt$ LIKE "FACTURA" OR _projekt$ LIKE "PROJECT" THEN 
   Feldnamen$(sw%) = "Mahnsperre->ja"
   sw% = sw% + 1
   Feldnamen$(sw%) = "Kunde->ja"
   sw% = sw% + 1
   Feldnamen$(sw%) = "Mitarbeiter->ja"
   sw% = sw% + 1
   Feldnamen$(sw%) = "Lieferant->ja"
   sw% = sw% + 1
   Feldnamen$(sw%) = "Privat->ja"
   sw% = sw% + 1
   Feldnamen$(sw%) = "Firmenintern->ja"
   sw% = sw% + 1
   Feldnamen$(sw%) = "Datenaustausch->ja"
   sw% = sw% + 1
   IF GCODieADR$ LIKE "TRUE" THEN 
     Feldnamen$(sw%) = "Internetupdate->ja"
     sw% = sw% + 1
     Feldnamen$(sw%) = "Marketingselektion"
     sw% = sw% + 1
     Feldnamen$(sw%) = "Newsletter Versicherung->ja"
     sw% = sw% + 1
     Feldnamen$(sw%) = "Newsletter ISMAN->ja"
     sw% = sw% + 1
   END IF 
   REM InternetUpdJN
 END IF 


 SET STATUS "Adresse suchen"

 REM 070398
 datsu$ = "Adressen"

 REM suna$ = ""
 suna$ = sunaold$
 FILE "adressen":INDEX nachname.datsu$
 IF ProjectJN$ = "TRUE" THEN 
   IF suchopt$ = "" THEN suchopt$ = "Nachname"
 END IF 
 Auswahl$ = suchopt$
   CREATE DIALOG "ADRSUCH",0,0,225,275,title$,"MS Sans Serif",8
   ADD DIALOG "ADRSUCH",4,0,0,225,275,0,""
   ADD DIALOG "ADRSUCH",9,6,12,20,23,2
   ADD DIALOG "ADRSUCH",5,32,14,184,19,0,"Bitte wÑhlen Sie aus, in welchem Datenbankfeld gesucht werden soll."
   ADD DIALOG "ADRSUCH",5,32,35,184,33,0,"Bei der Suche Åber Stichwort/Vertreter kînnen Sie den Suchbegriff weglassen, um eine Liste aller Stichwîrter/Agenturen/Vertreter zu erhalten."
   ADD DIALOG "ADRSUCH",5,32,75,56,8,0,"Suchfeld:"
   ADD DIALOG "ADRSUCH",6,32,255,108,11,128,0,suna$,50
   ADD DIALOG "ADRSUCH",7,32,84,108,158,1,2,Feldnamen$,Auswahl$,suchopt$
   ADD DIALOG "ADRSUCH",1,150,116,64,15,1,"Suchmaske",3,1
   ADD DIALOG "ADRSUCH",1,150,133,64,15,1,"&Schnellsuche",1,1
   ADD DIALOG "ADRSUCH",1,150,150,64,15,0,"&erweiterte Suche",2,1
   ADD DIALOG "ADRSUCH",1,150,167,64,15,0,"&Abbruch",0,0
   ADD DIALOG "ADRSUCH",5,32,245,76,10,0,"Suchbegriff:"
   DIALOG "ADRSUCH",req%
   REMOVE DIALOG "ADRSUCH"
 IF req% = 1 THEN sunaold$ = suna$
 AdrSuche% = 0
 datsel% = 0
   IF NOT OPEN ("ADRLEER") THEN 
     CALL DFile(2,"OFFICE\ADRLEER" + _fpw$)
   END IF 
   ON ERROR GOTO w271120081
   REMOVE FROM FILE "ADRLEER"
w271120081: 
   ON ERROR GOTO ErrorHandler
 IF req% = 3 THEN CALL AdrGlobalSuch()
 IF suna$ = "" AND (Auswahl$(0) LIKE "Geburtstag*" OR Auswahl$(0) LIKE "letzter Kontakt*" OR Auswahl$(0) LIKE "Kunde seit*") THEN suna$ = "01.01.1900"
 IF Auswahl$(0) LIKE "KV Pflicht*" OR Auswahl$(0) LIKE "RV Pflicht*" OR Auswahl$(0) LIKE "Makler*" THEN suna$ = "#"
 IF Auswahl$(0) LIKE "Vollmacht*" OR Auswahl$(0) LIKE "Generalvollmacht*" THEN suna$ = "#"
 IF Auswahl$(0) LIKE "InternetUpd*" THEN suna$ = "#"
 IF Auswahl$(0) LIKE "Gesellschaft*" OR Auswahl$(0) LIKE "Agentur*" OR Auswahl$(0) LIKE "Adress-*" THEN suna$ = "#"
 IF Auswahl$(0) LIKE "Kunde->ja" OR Auswahl$(0) LIKE "Mitarbeiter->ja" OR Auswahl$(0) LIKE "Lieferant->ja" OR Auswahl$(0) LIKE "Privat->ja" OR Auswahl$(0) LIKE "Firmenintern->ja" OR Auswahl$(0) LIKE "Datenaustausch->ja" THEN suna$ = "j"
 IF Auswahl$(0) LIKE "Mahnsperre->ja" OR Auswahl$(0) LIKE "Newsletter Versicherung->ja" OR Auswahl$(0) LIKE "Newsletter ISMAN->ja" THEN suna$ = "j"
 IF req% <> 0 AND req% <> 3 AND (suna$ <> "" OR Auswahl$(0) LIKE "VERSNR/KFZ/Risiko/Tarif" OR Auswahl$(0) LIKE "Stichwort" OR Auswahl$(0) LIKE "Vertreter" OR Auswahl$(0) LIKE "Agentur" OR Auswahl$(0) LIKE "PROJEKT") THEN 

   suchopt$ = Auswahl$(0)
   MOUSE OFF 
   SELECT CASE suchopt$
   
   CASE "Aktenzeichen"
     feld$ = "Kundennummer"
   CASE "HRB/HRA"
     feld$ = "HRA"
   CASE "Schuldner-Name"
     feld$ = "Nachname"
   CASE "GeschÑftsfÅhrer"
     feld$ = "Geburtsname"
   CASE "Schuldner-Ort"
     feld$ = "Ort"
   CASE "Schuldner-Stra·e"
     feld$ = "Stra·e"
   CASE "Schuldner-PLZ"
     feld$ = "PLZ"
   CASE "GlÑubiger"
     feld$ = "AdresseGlaeubig"
   CASE "Gutachter"
     feld$ = "Gutachter"
   CASE "Sequester"
     feld$ = "Sequester"
   CASE "Verwalter"
     feld$ = "Verwalter"
   CASE "Telefon/-fax"
     feld$ = "Telefon1"
   CASE "Telefon/-fax schnell"
     feld$ = "Telefon2"
   CASE "Postleitzahl"
     feld$ = "QPLZ"
   CASE "Agentur"
     feld1ab$ = "Agentur"
     feld$ = "Codema"
   CASE "Adress-Status"
     feld1ab$ = "ADRStatus"
     feld$ = "ADRStatus"
   CASE "Adress-Gruppe"
     feld1ab$ = "ADRGruppe"
     feld$ = "ADRGruppe"
   CASE "PROJEKT"
     feld1ab$ = "CODEKU"
     feld$ = "CODEKU"
   CASE "Vertreter"
     feld1ab$ = "Vertreter"
     feld$ = "Codema"
   CASE "Nachname"
     feld1ab$ = "QNachname"
     feld$ = "QNachname"
     suna$ = VSNRPack$(suna$)
     IF suna$ = "" THEN suna$ = "*"
   CASE "Matchcode"
     feld1ab$ = "QMatchcode"
     feld$ = "QMatchcode"
     suna$ = VSNRPack$(suna$)
     IF suna$ = "" THEN suna$ = "*"
   CASE "Vorstand"
     feld1ab$ = "QVorstand"
     feld$ = "QVorstand"
     suna$ = VSNRPack$(suna$)
     IF suna$ = "" THEN suna$ = "*"
   CASE "GF"
     feld1ab$ = "QGeschf"
     feld$ = "QGeschf"
     suna$ = VSNRPack$(suna$)
     IF suna$ = "" THEN suna$ = "*"
   CASE "Vorname"
     feld1ab$ = "QVorname"
     feld$ = "QVorname"
     suna$ = VSNRPack$(suna$)
   CASE "Ort"
     feld1ab$ = "QOrt"
     feld$ = "QOrt"
     suna$ = VSNRPack$(suna$)
   CASE "Ortsteil"
     feld1ab$ = "QOrtsteil"
     feld$ = "QOrtsteil"
     suna$ = VSNRPack$(suna$)
   CASE "Stra·e"
     feld1ab$ = "QStra·e"
     feld$ = "QStra·e"
     suna$ = VSNRPack$(suna$)
   CASE "PLZ"
     feld1ab$ = "QPLZ"
     feld$ = "QPLZ"
     suna$ = VSNRPack$(suna$)
   CASE "Kunde->ja"
     feld1ab$ = "AAKunde"
     feld$ = "AAKunde"
   CASE "Mahnsperre->ja"
     feld1ab$ = "Mahnsperre"
     feld$ = "Mahnsperre"
   CASE "Lieferant->ja"
     feld1ab$ = "AALieferant"
     feld$ = "AALieferant"
   CASE "Privat->ja"
     feld1ab$ = "FIprivat"
     feld$ = "FIprivat"
   CASE "Firmenintern->ja"
     feld1ab$ = "FIATEC"
     feld$ = "FIATEC"
   CASE "Datenaustausch->ja"
     feld1ab$ = "FIIMMAK"
     feld$ = "FIIMMAK"
   CASE "Newsletter Versicherung->ja"
     feld1ab$ = "NEWS1"
     feld$ = "NEWS1"
   CASE "Newsletter ISMAN->ja"
     feld1ab$ = "NEWS2"
     feld$ = "NEWS2"
   CASE "Mitarbeiter->ja"
     feld1ab$ = "AAMitarbeiter"
     feld$ = "AAMitarbeiter"
  
   CASE "VERSNR/KFZ/Risiko/Tarif"
     feld1ab$ = "Vertragsnummer"
     feld$ = "Vertragsnummer"
   CASE "Land"
     feld1ab$ = "Land"
     feld$ = "Land"
   CASE "Kunde seit"
     feld1ab$ = "Kunde_seit"
     feld$ = "Kunde_seit"
     datsel% = 1
   CASE "Geburtstag"
     feld1ab$ = "Geburtstag"
     feld$ = "Geburtstag"
     datsel% = 1
   CASE "letzter Kontakt"
     feld1ab$ = "letzter_Kontakt"
     feld$ = "letzter_Kontakt"
     datsel% = 1
   CASE "NationalitÑt"
     feld1ab$ = "NationalitÑt"
     feld$ = "NationalitÑt"
   CASE "Staatsangehîrigkeit"
     feld1ab$ = "Staatsangehîrig"
     feld$ = "Staatsangehîrig"
   CASE "Firmenform"
     feld1ab$ = "Firmenform"
     feld$ = "Firmenform"
   CASE "Beruf"
     feld1ab$ = "Beruf"
     feld$ = "Beruf"
   CASE "Hobbys"
     feld1ab$ = "Hobbys"
     feld$ = "Hobbys"
   CASE "Familienstand"
     feld1ab$ = "Familienstand"
     feld$ = "Familienstand"
   CASE "AnstellungsverhÑltnis"
     feld1ab$ = "Anstellungsverh"
     feld$ = "Anstellungsverh"
   CASE "Anzahl Kinder"
     feld1ab$ = "Anzahl_Kinder"
     feld$ = "Anzahl_Kinder"
   CASE "Kunde seit"
     feld1ab$ = "Kunde_seit"
     feld$ = "Kunde_seit"
     datsel% = 1
   CASE "Geburtstag"
     feld1ab$ = "Geburtstag"
     feld$ = "Geburtstag"
     datsel% = 1
   CASE "Internetupdate->ja"
     feld1ab$ = "InternetUpdJN"
     feld$ = "InternetUpdJN"
     suna$ = "j"
   CASE "Marketingselektion"
     feld1ab$ = "adrselect"
     feld$ = "adrselect"
     IF suna$ = "0" OR suna$ = "1" OR suna$ = "2" OR suna$ = "3" OR suna$ = "4" OR suna$ = "5" OR suna$ = "6" OR suna$ = "7" THEN 
     ELSE 
       CALL Fehler("Sie mÅssen bei der <Marketingselektion> Werte zwischen 0 und 7 eingeben!","")
       GOTO w140520063
     END IF 
   CASE ELSE 
     feld$ = Auswahl$(0)
   END SELECT 
anf230120031: 
   IF datsel% = 1 THEN 
datfehl200620021: 
     CREATE DIALOG "Konto1",0,0,221,135,title$,"MS Sans Serif",8
     ADD DIALOG "Konto1",9,6,7,24,22,2
     ADD DIALOG "Konto1",5,34,8,170,9,0,"Suche nach Datum:"
     ADD DIALOG "Konto1",4,34,14,176,5,0,""
     ADD DIALOG "Konto1",5,34,22,175,16,0,"Bitte geben Sie ein, fÅr welchen Zeitraum Sie suchen mîchten."
     ADD DIALOG "Konto1",5,34,40,175,32,0,"Wenn Sie keine Angaben zum Zeitraum eintragen, werden alle DatensÑtze aufgelistet."
     ADD DIALOG "Konto1",5,34,80,12,8,0,"von"
     ADD DIALOG "Konto1",6,53,79,45,11,0,0,suna$,10
     ADD DIALOG "Konto1",5,102,80,12,8,0,"bis"
     ADD DIALOG "Konto1",6,116,79,45,11,0,0,bis$,10
     ADD DIALOG "Konto1",1,50,114,55,15,1,"&Weiter",1,1
     ADD DIALOG "Konto1",1,110,114,55,15,0,"&Abbruch",0,0
     DIALOG "Konto1",reqdatum%
     REMOVE DIALOG "Konto1"
     IF reqdatum% = 0 THEN 
       GOTO Ende1
     END IF 
     IF suna$ = "" OR VAL (suna$) < 1 THEN 
       vondat$ = "0"
       suna$ = vondat$
     ELSE 
       vondat$ = suna$
     END IF 
     IF bis$ = "" THEN bisdat$ = DATE$ ( TODAY ) ELSE bisdat$ = bis$
     IF NOT DateOK%(vondat$) OR NOT DateOK%(bisdat$) THEN 
       CALL Fehler("Sie mÅssen das Datum in der Form jj.mm.yyyy angeben!","")
       GOTO datfehl200620021
     END IF 
     IF reqdatum% = 0 THEN GOTO Ende1 
   END IF 

   IF datsel% = 99999999 AND andi$ = "doof" THEN 
     CREATE DIALOG "Konto1",0,0,221,135,title$,"MS Sans Serif",8
     ADD DIALOG "Konto1",9,6,7,24,22,2
     ADD DIALOG "Konto1",5,34,8,170,9,0,"Suche nach Datum:"
     ADD DIALOG "Konto1",4,34,14,176,5,0,""
     ADD DIALOG "Konto1",5,34,22,175,16,0,"Bitte geben Sie ein, fÅr welchen Zeitraum Sie suchen mîchten."
     ADD DIALOG "Konto1",5,34,40,175,32,0,"Wenn Sie keine Angaben zum Zeitraum eintragen, werden alle DatensÑtze aufgelistet."
     ADD DIALOG "Konto1",5,34,80,12,8,0,"von"
     ADD DIALOG "Konto1",6,53,79,45,11,0,0,suna$,10
     ADD DIALOG "Konto1",5,102,80,12,8,0,"bis"
     ADD DIALOG "Konto1",6,116,79,45,11,0,0,bis$,10
     ADD DIALOG "Konto1",1,50,114,55,15,1,"&Weiter",1,1
     ADD DIALOG "Konto1",1,110,114,55,15,0,"&Abbruch",0,0
     DIALOG "Konto1",reqdatum%
     REMOVE DIALOG "Konto1"
     IF suna$ = "" THEN 
       vondat$ = "1.1.1900"
       suna$ = vondat$
     ELSE 
       vondat$ = suna$
     END IF 
     IF bis$ = "" THEN bisdat$ = DATE$ ( TODAY ) ELSE bisdat$ = bis$
     IF reqdatum% = 0 THEN GOTO Ende1 
   END IF 
   REM SET STATUS "Adre·suche nach " + feld$ + " = " + suna$
   SET STATUS "Adre·suche lÑuft..."
   feld$ = feld$ + ".ADRESSEN"
   a% = 0
   b% = RECCOUNT ("ADRESSEN")
   IF b% > 20000 THEN 
     b% = 20000
     REDIM AdrFound$(20000 + 1)
     REDIM aaa$(20000)

   ELSE 
     REDIM AdrFound$( RECCOUNT ("ADRESSEN") + 1)
     REDIM aaa$( RECCOUNT ("ADRESSEN"))
   END IF 
   MOUSE OFF 
   REM FOR a% = 0 TO b%
     REM AdrFound$(a%) = ""
   REM NEXT a%
   REM 280999
   REM CALL Fehler("Suche","")
   a% = 0
   REM CALL Fehler("V-Suche","")
   IF feld$ <> "Telefon1.ADRESSEN" AND feld$ <> "Telefon2.ADRESSEN" THEN INDEX feld$$
   ok% = 1
   IF req% = 1 THEN 
tel181096: 
     GTermAusw% = 0
     IF feld$ LIKE "Vertragsnummer.ADRESSEN" THEN 
       CALL VISuchen1()
       IF nvtab% <> 0 AND kontoinf% = 0 THEN 
         codeku% = codeku.kvertrag
         adrglob% = codeku%
         SELECT FORM KEY codeku% FILE "Adressen" INDEX codeku.adressen
         FORM 
         CALL VINFBearb()
       END IF 
       IF nvtab% <> 0 AND kontoinf% <> 0 THEN 
         codeku% = codeku.kvertrag
         adrglob% = codeku%
         SELECT FORM KEY codeku% FILE "Adressen" INDEX codeku.adressen
         FORM 
         SELECT KEY nvtab% FILE "Kvertrag" INDEX lfdnr.kvertrag
         SELECT KEY nvtab% FILE "kukto" INDEX codevt.kukto
         cuvt% = nvtab%
         CALL KuKto()
       END IF 
       suna$ = ""
     END IF 
     IF feld$ LIKE "Telefon1*" THEN 
       suna1$ = VSNRPack$(suna$)
       IF suna1$ = "" THEN suna1$ = suna$
       suna2$ = "*" + suna1$ + "*"
       IF RIGHT$ (suna1$,1) <> "*" THEN suna1$ = suna1$ + "*"
       REM IF LEFT$ (suna$,1) <> "*" THEN 
         REM suna1$ = "*" + suna$
         REM IF RIGHT$ (suna1$,1) <> "*" THEN suna1$ = suna1$ + "*"
       REM ELSE 
         REM IF RIGHT$ (suna1$,1) <> "*" THEN suna1$ = suna1$ + "*"
       REM END IF 
       FILE "Telefon"
       INDEX nummer.telefon
       SELECT FIRST 
       SET STATUS "Adre·suche lÑuft..."
       wi% = 0
       CALL Server("LISTBOXINIT","Adre·auswahl")
       MOUSE OFF 
       CALL Gauge(1,"Adre·datei wird durchsucht...")
       CALL Server("GAUGEENABLECANCEL","")
       _prozt% = 0
       _proz2% = 0
       _anz% = RECCOUNT ("telefon")
       REDIM AdrFound$( RECCOUNT ("telefon"))
       a% = 0
       codekuold% = - 1

       IF GCODIE% = - 1 THEN 
         CALL SearchInitADR()
       END IF 
       WHILE NOT EOF ("telefon") AND ServerReply$() <> "CANCEL"
         _proz% = INT ((100 / _anz%) * _proz2%)
         IF _proz% > 100 THEN _proz% = 100
         IF _proz% < 2 THEN _proz% = 2
         IF _proz% <> _prozt% THEN 
           _prozt% = _proz%
           SET STATUS "Suche... " + STR$ (_prozt%,"999") + " %"
           CALL Gauge(_proz%,"")
         END IF 
         _proz2% = _proz2% + 1
         adrfound% = 0
         pc% = pc% + 1
         cp% = INT (100 / adrmax% * pc%)
         
         IF Qnummer.telefon LIKE suna1$ OR qnummer.telefon LIKE suna2$ OR qart.telefon LIKE suna1$ OR qart.telefon LIKE suna2$ THEN 
           codeku% = Codeku.telefon
           SELECT KEY codeku% FILE "Adressen" INDEX codeku.Adressen
     AdrFound$(a%) = LTRIM$ (nummer.telefon) + ",   " + LTRIM$ (nachname.datsu$) + ", " + LTRIM$ (vorname.datsu$) + ", " + LTRIM$ (ort.datsu$) + ", " + PLZ.datsu$ + ", " + LTRIM$ (Stra·e.datsu$) + ", " + SPACE$ (120) + STR$ (codeku%,"000000")
            tmpZeile$ = AdrFound$(a%)
            GTelDat$ = "TELEFON"
            IF GCODIE% = - 1 THEN 
              CALL SearchVorbAdr("ADRESSEN")
              IF _projekt$ <> "WAWI" THEN CALL SearchVorbTel("ADRESSEN")
            END IF 
            
            a% = a% + 1
           CALL Server("GaugeMessage","Adre·datei wird durchsucht... " + TRIM$ ( STR$ (a%,"9999")) + " gefunden (" + Nachname.datsu$ + ", " + LEFT$ (Vorname.datsu$,1) + ".)")
           CALL Server("LISTBOXADD",tmpZeile$)
           IF GCODIE% = - 1 THEN 
             ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
           END IF 
         END IF 
         MOUSE OFF 
         SELECT NEXT FILE "telefon"
       WEND 
       AdrFound$(a%) = ""
       GAnzAdrFound% = a%
       tmpZeile$ = AdrFound$(a%)
       CALL Gauge(0,"")
       FILE "adressen"
       IF a% > 0 THEN 
         adrfound% = a%
         REM MENU 4,6,1,"aus Suchliste &wÑhlen,F7","ADRWahl"
       END IF 
       GOTO Telf190896
     END IF 

     IF feld$ LIKE "Telefon2*" THEN 
       suna1$ = VSNRPack$(suna$)
       suna3$ = suna1$
       IF suna1$ = "" THEN suna1$ = suna$
       suna2$ = "*" + suna1$ + "*"
       IF RIGHT$ (suna1$,1) <> "*" THEN suna1$ = suna1$ + "*"
       REM IF LEFT$ (suna$,1) <> "*" THEN 
         REM suna1$ = "*" + suna$
         REM IF RIGHT$ (suna1$,1) <> "*" THEN suna1$ = suna1$ + "*"
       REM ELSE 
         REM IF RIGHT$ (suna1$,1) <> "*" THEN suna1$ = suna1$ + "*"
       REM END IF 
       lae% = LEN (suna3$)
       IF lae% > 4 THEN lae% = 4
       ls$ = LEFT$ (suna3$,lae%)
       FILE "Telefon"
       INDEX Qnummer.telefon
       SELECT FIRST 
       SELECT KEY ls$ FILE "telefon" INDEX qnummer.telefon
       SET STATUS "Adre·suche lÑuft..."
       wi% = 0
       CALL Server("LISTBOXINIT","Adre·auswahl")
       MOUSE OFF 
       CALL Gauge(1,"Adre·datei wird durchsucht...")
       CALL Server("GAUGEENABLECANCEL","")
       _prozt% = 0
       _proz2% = 0
       _anz% = RECCOUNT ("telefon")
       REDIM AdrFound$( RECCOUNT ("telefon"))
       a% = 0
       codekuold% = - 1
 
       IF GCODIE% = - 1 THEN 
         CALL SearchInitADR()
       END IF 
       lq$ = LEFT$ (qnummer.telefon,lae%)
       WHILE NOT EOF ("telefon") AND ServerReply$() <> "CANCEL" AND LEFT$ (qnummer.telefon,lae%) = LEFT$ (suna1$,lae%)
         _proz% = INT ((100 / _anz%) * _proz2%)
         IF _proz% > 100 THEN _proz% = 100
         IF _proz% < 2 THEN _proz% = 2
         IF _proz% <> _prozt% THEN 
           _prozt% = _proz%
           SET STATUS "Suche... " + STR$ (_prozt%,"999") + " %"
           CALL Gauge(_proz%,"")
         END IF 
         _proz2% = _proz2% + 1
         adrfound% = 0
         pc% = pc% + 1
         cp% = INT (100 / adrmax% * pc%)
         
         IF Qnummer.telefon LIKE suna1$ OR qnummer.telefon LIKE suna2$ OR qart.telefon LIKE suna1$ OR qart.telefon LIKE suna2$ THEN 
           codeku% = Codeku.telefon
           SELECT KEY codeku% FILE "Adressen" INDEX codeku.Adressen
     AdrFound$(a%) = LTRIM$ (nummer.telefon) + ",   " + LTRIM$ (nachname.datsu$) + ", " + LTRIM$ (vorname.datsu$) + ", " + LTRIM$ (ort.datsu$) + ", " + PLZ.datsu$ + ", " + LTRIM$ (Stra·e.datsu$) + ", " + SPACE$ (120) + STR$ (codeku%,"000000")
            tmpZeile$ = AdrFound$(a%)
            GTelDat$ = "TELEFON"
            IF GCODIE% = - 1 THEN 
              CALL SearchVorbAdr("ADRESSEN")
              IF _projekt$ <> "WAWI" THEN CALL SearchVorbTel("ADRESSEN")
            END IF 
            
            a% = a% + 1
           CALL Server("GaugeMessage","Adre·datei wird durchsucht... " + TRIM$ ( STR$ (a%,"9999")) + " gefunden (" + Nachname.datsu$ + ", " + LEFT$ (Vorname.datsu$,1) + ".)")
           CALL Server("LISTBOXADD",tmpZeile$)
           IF GCODIE% = - 1 THEN 
             ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
           END IF 
         END IF 
         MOUSE OFF 
         SELECT NEXT FILE "telefon"
       WEND 
       AdrFound$(a%) = ""
       GAnzAdrFound% = a%
       tmpZeile$ = AdrFound$(a%)
       CALL Gauge(0,"")
       FILE "adressen"
       IF a% > 0 THEN 
         adrfound% = a%
         GAnzAdrFound% = a%
         REM MENU 4,6,1,"aus Suchliste &wÑhlen,F7","ADRWahl"
       END IF 
       GOTO Telf190896
     END IF 

     IF feld1ab$ LIKE "ADRStatus" THEN 
       datei1$ = "ADRStat"
       
       z% = RECCOUNT (datei1$)
       IF z% < RECCOUNT ("ADRessen") THEN 
         z% = RECCOUNT ("ADRessen")
       END IF 
       IF z% > 20000 THEN z% = 20000
       REDIM AdrFound$(z%)
       REM FOR i% = 0 TO z% - 1
         REM AdrFound$(i%) = ""
       REM NEXT i%
       CALL DFile(3,datei1$ + _fpw$)
       FILE datei1$
       INDEX keyword.datei1$
       SELECT FIRST 
       a% = 0
       SELECT WHERE keyword.datei1$ <> ""
       SELECT FIRST 
       WHILE NOT EOF (datei1$)
         AdrFound$(a%) = keyword
         a% = a% + 1
         SELECT NEXT 
       WEND 
       AdrFound$(a%) = ""
       LAuswahl$ = AdrFound$(0)
       LAuswahl1$(0) = LAuswahl$
       CREATE DIALOG "ADRLISTE",0,0,340,397,"Adress-Status wÑhlen","MS Sans Serif",8
       REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
       ADD DIALOG "ADRLISTE",7,5,8,328,361,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
       ADD DIALOG "ADRLISTE",1,104,374,56,16,1,"&OK",1,1
       ADD DIALOG "ADRLISTE",1,164,374,56,16,0,"&Abbrechen",0,0
       DIALOG "ADRLISTE",req5%
       MOUSE ON 
       REMOVE DIALOG "ADRLISTE"
       IF req5% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         suna$ = LAuswahl$
         REM FOR i% = 0 TO z% - 1
           REM AdrFound$(i%) = ""
         REM NEXT i%
       ELSE 
         ok% = 0
         AdrSuche% = 0
         REDIM AdrFound$( RECCOUNT ("ADRESSEN"))
         GOTO Ende1
       END IF 
       MOUSE OFF 
       FILE "adressen"
       datsu$ = "adressen"
       INDEX ADRStatus.datsu$
       a% = 0
       SELECT FIRST 
       SELECT KEY suna$ INDEX ADRStatus.datsu$
       adrmax% = RECCOUNT ("ADRESSEN")
       cp% = 0
       lp% = 0
       pc% = 0
       IF GCODIE% = - 1 THEN 
         CALL SearchInitADR()
       END IF 
       WHILE NOT EOF ("adressen") AND ADRStatus.datsu$ = suna$
         pc% = pc% + 1
         cp% = INT (100 / adrmax% * pc%)
         IF cp% <> lp% THEN 
           SET STATUS "Verarbeitung: " + STR$ (cp%,"999") + "%"
           lp% = cp%
         END IF 
           sok% = - 1
           IF MNdisabled%("DATALOCK") THEN 
             IF Sperre.datsu$ <> 0 AND Sperre.datsu$ <> vcodema% THEN sok% = 0
           END IF 
           IF sok% THEN 
             codeku% = codeku.datsu$
             IF GCODIE% = - 1 THEN 
               CALL SearchVorbAdr("ADRESSEN")
             END IF 
             IF EXISTS (codeku%,codeku.telefon) THEN 
               FILE "telefon"
               INDEX codetel.telefon
               SELECT FIRST 
               SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
               telefon$ = nummer.telefon
               GTELDAT$ = "TELEFON"
               IF _projekt$ <> "WAWI" THEN CALL SearchVorbTel("ADRESSEN")
               FILE "adressen"
             END IF 
             AdrFound$(a%) = LTRIM$ (nachname) + ", " + LTRIM$ (vorname) + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Stra·e) + ", " + LTRIM$ (telefon$) + SPACE$ (120) + STR$ (codeku,"000000")
             a% = a% + 1
             IF GCODIE% = - 1 THEN 
               ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
             END IF 
           END IF 
         SELECT NEXT FILE "ADRESSEN"
         SET STATUS nachname.adressen
       WEND 
       AdrFound$(a%) = ""
       GAnzAdrFound% = a%
       SET STATUS "Bereit"
       IF a% = 0 THEN 
         CALL Fehler("Es wurde keine Adresse gefunden!","")
         AdrSuche% = 0
         ok% = 0
         GAnzAdrFound% = 0
       END IF 
       GOTO Telf190896
     END IF 


     IF feld1ab$ LIKE "ADRGruppe" THEN 
       datei1$ = "ADRGrup"
       
       z% = RECCOUNT (datei1$)
       IF z% < RECCOUNT ("Adressen") THEN 
         z% = RECCOUNT ("Adressen")
       END IF 
       IF z% > 20000 THEN z% = 20000
       REDIM AdrFound$(z%)
       REM FOR i% = 0 TO z% - 1
         REM AdrFound$(i%) = ""
       REM NEXT i%
       CALL DFile(3,datei1$ + _fpw$)
       FILE datei1$
       INDEX keyword.datei1$
       SELECT FIRST 
       a% = 0
       SELECT WHERE keyword.datei1$ <> ""
       SELECT FIRST 
       WHILE NOT EOF (datei1$)
         AdrFound$(a%) = keyword
         a% = a% + 1
         SELECT NEXT 
       WEND 
       AdrFound$(a%) = ""
       LAuswahl$ = AdrFound$(0)
       LAuswahl1$(0) = LAuswahl$
       CREATE DIALOG "ADRLISTE",0,0,340,397,"Adress-Gruppe wÑhlen","MS Sans Serif",8
       REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
       ADD DIALOG "ADRLISTE",7,5,8,328,361,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
       ADD DIALOG "ADRLISTE",1,104,374,56,16,1,"&OK",1,1
       ADD DIALOG "ADRLISTE",1,164,374,56,16,0,"&Abbrechen",0,0
       DIALOG "ADRLISTE",req5%
       MOUSE ON 
       REMOVE DIALOG "ADRLISTE"
       IF req5% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         suna$ = LAuswahl$
         REM FOR i% = 0 TO z% - 1
           REM AdrFound$(i%) = ""
         REM NEXT i%
       ELSE 
         ok% = 0
         AdrSuche% = 0
         REDIM AdrFound$( RECCOUNT ("ADRESSEN"))
         GOTO Ende1
       END IF 
       MOUSE OFF 
       REDIM AdrFound$( RECCOUNT ("ADRESSEN"),1)
       REDIM AdrFound$( RECCOUNT ("ADRESSEN"))
       FILE "adressen"
       datsu$ = "adressen"
       INDEX ADRGruppe.datsu$
       a% = 0
       SELECT FIRST 
       SELECT KEY suna$ INDEX ADRGruppe.datsu$
       adrmax% = RECCOUNT ("ADRESSEN")
       cp% = 0
       lp% = 0
       pc% = 0
       IF GCODIE% = - 1 THEN 
         CALL SearchInitADR()
       END IF 
       WHILE NOT EOF ("adressen") AND ADRGruppe.datsu$ = suna$
         pc% = pc% + 1
         cp% = INT (100 / adrmax% * pc%)
         IF cp% <> lp% THEN 
           SET STATUS "Verarbeitung: " + STR$ (cp%,"999") + "%"
           lp% = cp%
         END IF 
           sok% = - 1
           IF MNdisabled%("DATALOCK") THEN 
             IF Sperre.datsu$ <> 0 AND Sperre.datsu$ <> vcodema% THEN sok% = 0
           END IF 
           IF sok% THEN 
             codeku% = codeku.datsu$
             IF GCODIE% = - 1 THEN 
               CALL SearchVorbAdr("ADRESSEN")
             END IF 
             IF EXISTS (codeku%,codeku.telefon) THEN 
               FILE "telefon"
               INDEX codetel.telefon
               SELECT FIRST 
               SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
               telefon$ = nummer.telefon
               GTELDAT$ = "TELEFON"
               IF _projekt$ <> "WAWI" THEN CALL SearchVorbTel("ADRESSEN")
               FILE "adressen"
             END IF 
             AdrFound$(a%) = LTRIM$ (nachname) + ", " + LTRIM$ (vorname) + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Stra·e) + ", " + LTRIM$ (telefon$) + SPACE$ (120) + STR$ (codeku,"000000")
             a% = a% + 1
             IF GCODIE% = - 1 THEN 
               ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
             END IF 
           END IF 
         SELECT NEXT FILE "ADRESSEN"
         SET STATUS nachname.adressen
       WEND 
       REM CALL Fehler("","")
       AdrFound$(a%) = ""
       GAnzAdrFound% = a%
       SET STATUS "Bereit"
       IF a% = 0 THEN 
         CALL Fehler("Es wurde keine Adresse gefunden!","")
         AdrSuche% = 0
         GAnzAdrFound% = 0
         ok% = 0
       END IF 
       GOTO Telf190896
     END IF 



     IF suchopt$ LIKE "PROJEKT" THEN 
       datei1$ = "Project"
       datsu$ = "ADRESSEN"
       z% = RECCOUNT (datei1$)
       IF z% < RECCOUNT ("Adressen") THEN 
         z% = RECCOUNT ("Adressen")
       END IF 
       IF z% > 20000 THEN z% = 20000
       REDIM AdrFound$(z%)
       REM FOR i% = 0 TO z% - 1
         REM AdrFound$(i%) = ""
       REM NEXT i%
       CALL DFile(3,datei1$ + _fpw$)
       CALL DFile(3,"PRCONADR" + _fpw$)
anfsu150120061: 
       FILE datei1$
       INDEX name1.datei1$
       SELECT FIRST 
       a% = 0
       SELECT WHERE name1.datei1$ <> ""
       SELECT FIRST 
       REM CALL Fehler(suna$,"")

       WHILE NOT EOF (datei1$)
         IF LTRIM$ (suna$) <> "" AND LTRIM$ (suna$) <> "*" THEN 
           IF RIGHT$ (suna$,1) <> "*" THEN suna$ = "*" + suna$ + "*"
           IF projektnummer LIKE suna$ OR name1 LIKE suna$ OR name2 LIKE suna$ THEN 
             AdrFound$(a%) = Projektnummer + " / " + name1 + SPACE$ (200) + STR$ (codepr.datei1$,"000000")
             a% = a% + 1
           END IF 
         ELSE 
           AdrFound$(a%) = Projektnummer + " / " + name1 + SPACE$ (200) + STR$ (codepr.datei1$,"000000")
           a% = a% + 1
         END IF 
         SELECT NEXT 
       WEND 
       IF a% = 0 THEN 
         suna$ = ""
         GOTO anfsu150120061
       END IF 
       AdrFound$(a%) = ""
       LAuswahl$ = AdrFound$(0)
       LAuswahl1$(0) = LAuswahl$
       CREATE DIALOG "ADRLISTE",0,0,340,397,"Projekt wÑhlen","MS Sans Serif",8
       REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
       ADD DIALOG "ADRLISTE",7,5,8,328,361,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
       ADD DIALOG "ADRLISTE",1,104,374,56,16,1,"&OK",1,1
       ADD DIALOG "ADRLISTE",1,164,374,56,16,0,"&Abbrechen",0,0
       DIALOG "ADRLISTE",req5%
       MOUSE ON 
       REMOVE DIALOG "ADRLISTE"
       codepr% = 0
       IF req5% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         suna$ = LAuswahl$
         codepr% = VAL ( RIGHT$ (LAuswahl$,6))
         REM FOR i% = 0 TO z% - 1
           REM AdrFound$(i%) = ""
         REM NEXT i%
       ELSE 
         ok% = 0
         AdrSuche% = 0
         REDIM AdrFound$( RECCOUNT ("ADRESSEN"))
         GOTO Ende1
       END IF 
       MOUSE OFF 
       IF codepr% < 1 THEN 
         ok% = 0
         AdrSuche% = 0
         GOTO Ende1
       END IF 
       FILE "PRCONADR"
       INDEX codepr
       SELECT FIRST 
       SELECT KEY codepr% FILE "PRCONADR" INDEX codepr.prconadr
       IF GCODIE% = - 1 THEN 
         CALL SearchInitADR()
       END IF 
       a% = 0
       adrmax% = RECCOUNT ("ADRESSEN")
       cp% = 0
       lp% = 0
       pc% = 0
       WHILE NOT EOF ("PRCONADR") AND codepr.prconadr = codepr%
         codeku% = codeku.prconadr
         FILE "adressen"
         datsu$ = "adressen"
         INDEX codeku.datsu$
         sok% = 0
         SELECT FIRST 
         SELECT KEY codeku% FILE "ADRESSEN" INDEX codeku.datsu$
         IF codeku.adressen = codeku% AND codeku% > 0 THEN 
           sok% = - 1
         END IF 

         IF sok% THEN 
           codeku% = codeku.datsu$
           IF GCODIE% = - 1 THEN 
             CALL SearchVorbAdr("ADRESSEN")
           END IF 
           IF EXISTS (codeku%,codeku.telefon) THEN 
             FILE "telefon"
             INDEX codetel.telefon
             SELECT FIRST 
             SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
             telefon$ = nummer.telefon
             GTELDAT$ = "TELEFON"
             IF _projekt$ <> "WAWI" THEN CALL SearchVorbTel("ADRESSEN")
             FILE "adressen"
           END IF 
           AdrFound$(a%) = LTRIM$ (nachname) + ", " + LTRIM$ (vorname) + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Stra·e) + ", " + LTRIM$ (telefon$) + SPACE$ (120) + STR$ (codeku,"000000")
           a% = a% + 1
           IF GCODIE% = - 1 THEN 
             ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
           END IF 
         END IF 
         FILE "PRCONADR"
         SELECT NEXT FILE "PRCONADR"
         SET STATUS nachname.adressen
       WEND 
       AdrFound$(a%) = ""
       GAnzAdrFound% = a%
       SET STATUS "Bereit"
       IF a% = 0 THEN 
         CALL Fehler("Es wurde keine Adresse gefunden!","")
         AdrSuche% = 0
         GAnzAdrFound% = 0
         ok% = 0
       END IF 
       GOTO Telf190896
     END IF 




     IF feld1ab$ LIKE "Agentur" OR feld1ab$ LIKE "Vertreter" THEN 
       IF feld1ab$ LIKE "Agentur" THEN datei1$ = "MAADR"
       IF feld1ab$ LIKE "Vertreter" THEN datei1$ = "VERTRETE"
       
       z% = RECCOUNT (datei$)
       IF z% < RECCOUNT ("Adressen") THEN 
         z% = RECCOUNT ("Adressen")
       END IF 
       IF z% > 20000 THEN z% = 20000
       REDIM AdrFound$(z%)
       REM FOR i% = 0 TO z% - 1
         REM AdrFound$(i%) = ""
       REM NEXT i%
       CALL DFile(3,datei1$ + _fpw$)
       FILE datei1$
       INDEX nachname.datei1$
       SELECT FIRST 
       a% = 0
       SELECT WHERE nachname.datei1$ <> ""
       SELECT FIRST 
       WHILE NOT EOF (datei1$)
         AdrFound$(a%) = LTRIM$ (nachname) + "," + LTRIM$ (vorname) + SPACE$ (140) + STR$ (codema,"000000")
         a% = a% + 1
         SELECT NEXT 
       WEND 
       AdrFound$(a%) = ""
       LAuswahl$ = AdrFound$(0)
       LAuswahl1$(0) = LAuswahl$
       CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"MS Sans Serif",8
       REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
       ADD DIALOG "ADRLISTE",7,5,8,328,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
       ADD DIALOG "ADRLISTE",1,74,174,56,16,1,"&OK",1,1
       ADD DIALOG "ADRLISTE",1,134,174,56,16,0,"&Abbrechen",0,0
       IF noserie% = 0 THEN ADD DIALOG "ADRLISTE",1,194,174,56,16,0,"&Serienbrief",2,0
       DIALOG "ADRLISTE",req5%
       MOUSE ON 
       REMOVE DIALOG "ADRLISTE"
       IF req5% = 2 THEN 
         adrser% = 1
         CALL SerieNeu1("ADRESSEN")
         GOTO Ende1
       END IF 
       IF req5% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         suna% = VAL ( RIGHT$ (LAuswahl$,6))
         REM FOR i% = 0 TO z% - 1
           REM AdrFound$(i%) = ""
         REM NEXT i%
       ELSE 
         ok% = 0
         AdrSuche% = 0
         REDIM AdrFound$( RECCOUNT ("ADRESSEN"))
         GOTO Ende1
       END IF 
       MOUSE OFF 
       REM FOR cl% = 0 TO RECCOUNT ("ADRESSEN")
       REM   AdrFound$(cl%) = ""
       REM NEXT cl%
       FILE "adressen"
       INDEX codema.datsu$
       a% = 0
       SELECT FIRST 
       SELECT KEY suna% INDEX codema.datsu$
       adrmax% = RECCOUNT ("ADRESSEN")
       cp% = 0
       lp% = 0
       pc% = 0
       IF GCODIE% = - 1 THEN 
         CALL SearchInitADR()
       END IF 
       WHILE NOT EOF ("adressen") AND codema.datsu$ = suna%
         pc% = pc% + 1
         cp% = INT (100 / adrmax% * pc%)
         IF cp% <> lp% THEN 
           SET STATUS "Verarbeitung: " + STR$ (cp%,"999") + "%"
           lp% = cp%
         END IF 
           sok% = - 1
           IF MNdisabled%("DATALOCK") THEN 
             IF Sperre.datsu$ <> 0 AND Sperre.datsu$ <> vcodema% THEN sok% = 0
           END IF 
           IF sok% THEN 
             codeku% = codeku.datsu$
             IF GCODIE% = - 1 THEN 
               CALL SearchVorbAdr("ADRESSEN")
             END IF 
             IF EXISTS (codeku%,codeku.telefon) THEN 
               FILE "telefon"
               INDEX codetel.telefon
               SELECT FIRST 
               SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
               GTELDAT$ = "TELEFON"
               IF _projekt$ <> "WAWI" THEN CALL SearchVorbTel("ADRESSEN")
               telefon$ = nummer.telefon
               FILE "adressen"
             END IF 
             AdrFound$(a%) = LTRIM$ (nachname) + ", " + LTRIM$ (vorname) + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Stra·e) + ", " + LTRIM$ (telefon$) + SPACE$ (120) + STR$ (codeku,"000000")
             a% = a% + 1
             IF GCODIE% = - 1 THEN 
               ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
             END IF 
           END IF 
           MOUSE OFF 
         SELECT NEXT FILE "adressen"
         SET STATUS Nachname.adressen
       WEND 
       AdrFound$(a%) = ""
       GAnzAdrFound% = a%
       SET STATUS "Bereit"
       IF a% = 0 THEN 
         CALL Fehler("Es wurde keine Adresse gefunden!","")
         AdrSuche% = 0
         GAnzAdrFound% = 0
         ok% = 0
       END IF 
       GOTO Telf190896
     END IF 
     IF feld$ LIKE "Stichwort*" THEN 
       CALL DFile(2,"OFFICE\keywords" + _fpw$)
       FILE "keywords"
       INDEX keyword
       SELECT FIRST 
       a% = 0
       datei$ = "keywords"
       z% = RECCOUNT (datei$) + 1
       IF z% < RECCOUNT ("Adressen") THEN z% = RECCOUNT ("Adressen") + 1
       IF z% < 20000 THEN 
         REDIM AdrFound$(z%)
       ELSE 
         z% = 20000
         REDIM AdrFound$(z%)
       END IF 
       REM FOR i% = 0 TO z% - 1
         REM AdrFound$(i%) = ""
       REM NEXT i%
       SELECT WHERE keyword <> ""
       SELECT FIRST 
       WHILE NOT EOF ("keywords")
         AdrFound$(a%) = LTRIM$ (keyword)
         a% = a% + 1
         SELECT NEXT 
       WEND 
       AdrFound$(a%) = ""
       LAuswahl$ = AdrFound$(0)
       LAuswahl1$(0) = LAuswahl$
       CREATE DIALOG "ADRLISTE",0,0,340,397,"Stichwortauswahl","MS Sans Serif",8
       REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
       ADD DIALOG "ADRLISTE",7,5,8,328,361,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
       ADD DIALOG "ADRLISTE",1,104,374,56,16,1,"&OK",1,1
       ADD DIALOG "ADRLISTE",1,164,374,56,16,0,"&Abbrechen",0,0
       REM IF noserie% = 0 THEN ADD DIALOG "ADRLISTE",1,194,174,56,16,0,"&Serienbrief",2,0
       DIALOG "ADRLISTE",req5%
       MOUSE ON 
       REMOVE DIALOG "ADRLISTE"
       IF req5% = 2 THEN 
         adrser% = 1
         CALL SerieNeu1("ADRESSEN")
         GOTO Ende1
       END IF 
       IF req5% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         suna$ = "*" + LEFT$ (LAuswahl$) + "*"
       ELSE 
         ok% = 0
         AdrSuche% = 0
         REDIM AdrFound$(z%)
         GOTO Ende1
       END IF 
       MOUSE OFF 
       REM FOR cl% = 0 TO RECCOUNT ("ADRESSEN")
       REM   AdrFound$(cl%) = ""
       REM NEXT cl%
       FILE "adressen"
       INDEX feld$$
       a% = 0
       SELECT FIRST 
       SELECT KEY suna$ INDEX feld$$
       adrmax% = RECCOUNT ("ADRESSEN")
       cp% = 0
       lp% = 0
       pc% = 0
       wi% = 0
       CALL Server("LISTBOXINIT","Adre·auswahl")
       MOUSE OFF 
       CALL Gauge(1,"Adre·datei wird durchsucht...")
       CALL Server("GAUGEENABLECANCEL","")
       _prozt% = 0
       _proz2% = 0
       _anz% = RECCOUNT ("adressen")
       REM FOR i% = 0 TO z% - 1
         REM AdrFound$(i%) = ""
       REM NEXT i%

       IF GCODIE% = - 1 THEN 
         CALL SearchInitADR()
       END IF 
 
       WHILE NOT EOF ("adressen") AND ServerReply$() <> "CANCEL"
         _proz% = INT ((100 / _anz%) * _proz2%)
         IF _proz% > 100 THEN _proz% = 100
         IF _proz% < 2 THEN _proz% = 2
         IF _proz% <> _prozt% THEN 
           _prozt% = _proz%
           SET STATUS "erweiterte Suche... " + STR$ (_prozt%,"999") + " %"
           CALL Gauge(_proz%,"")
         END IF 
         _proz2% = _proz2% + 1
         adrfound% = 0
         pc% = pc% + 1
         cp% = INT (100 / adrmax% * pc%)
         IF Stichwort.datsu$ LIKE suna$ THEN 
           sok% = - 1
           IF MNdisabled%("DATALOCK") THEN 
             IF Sperre.datsu$ <> 0 AND Sperre.datsu$ <> vcodema% THEN sok% = 0
           END IF 
           IF sok% THEN 
             codeku% = codeku.datsu$
             IF GCODIE% = - 1 THEN 
               CALL SearchVorbAdr("ADRESSEN")
             END IF 
             IF EXISTS (codeku%,codeku.telefon) THEN 
               FILE "telefon"
               INDEX codetel.telefon
               SELECT FIRST 
               SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
               GTELDAT$ = "TELEFON"
               IF _projekt$ <> "WAWI" THEN CALL SearchVorbTel("ADRESSEN")
               telefon$ = nummer.telefon
               FILE "adressen"
             END IF 
             tmpZeile$ = LTRIM$ (nachname) + ", " + LTRIM$ (vorname) + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Stra·e) + ", " + LTRIM$ (telefon$) + SPACE$ (120) + STR$ (codeku,"000000")
             AdrFound$(a%) = tmpZeile$
             CALL Server("GaugeMessage","Adre·datei wird durchsucht... " + TRIM$ ( STR$ (a%,"9999")) + " gefunden (" + LTRIM$ (Nachname.datsu$) + ", " + LEFT$ ( LTRIM$ (Vorname.datsu$),13) + ".)")
             CALL Server("LISTBOXADD",tmpZeile$)
             a% = a% + 1
             IF GCODIE% = - 1 THEN 
               ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
             END IF 
           END IF 
         END IF 
         MOUSE OFF 
         SET STATUS nachname.adressen
         SELECT NEXT FILE "adressen"
       WEND 
       AdrFound$(a%) = ""
       GAnzAdrFound% = a%
       CALL Gauge(0,"")
       SET STATUS "Bereit"
       IF a% = 0 THEN 
         CALL Fehler("Es wurde keine Adresse mit diesem Stichwort gefunden!","")
         AdrSuche% = 0
         GAnzAdrFound% = 0
         ok% = 0
       END IF 
       GOTO Telf190896
     ELSE 
       IF feld$ <> "Kostenstelle.adressen" AND feld$ <> "Vertragsnummer.ADRESSEN" THEN 
         IF GCODIE% = - 1 THEN 
           CALL SearchInitADR()
         END IF 
         a% = 0
         locktest% = MNdisabled%("DATALOCK")
         INDEX feld$$
         SELECT FIRST 
         okab% = - 1
         ta% = 0
         x% = ASC ( LEFT$ ( UCASE$ (suna$),1))
         SELECT CASE x%
           CASE 142
             sun$ = "A" + RIGHT$ (suna$, LEN (suna$) - 1)
             suna$ = sun$
             ta% = - 1
           CASE 153
             sun$ = "O" + RIGHT$ (suna$, LEN (suna$) - 1)
             suna$ = sun$
             ta% = - 1
           CASE 154
             sun$ = "U" + RIGHT$ (suna$, LEN (suna$) - 1)
             suna$ = sun$
             ta% = - 1
         END SELECT 
         IF feld$ LIKE "Anzahl*" THEN 
           SELECT KEY VAL (suna$) INDEX feld$$
         ELSE 
           SELECT KEY suna$ INDEX feld$$
         END IF 
         REM 200998
         IF feld$ LIKE "letzter_Kontakt*" OR feld$ LIKE "Kunde_seit*" OR feld$ LIKE "Geburtst*" THEN 
           IF feld$$ >= DAYS (vondat$) AND feld$$ <= DAYS (bisdat$) THEN 
             okab% = - 1
           ELSE 
             okab% = 0
           END IF 
         ELSE 
           IF feld$ LIKE "Anzahl*" THEN 
             IF feld$$ = VAL (suna$) THEN 
               okab% = - 1
             ELSE 
               okab% = 0
             END IF 
           ELSE 
             IF feld$ LIKE "KV*" OR feld$ LIKE "RV*" OR feld$ LIKE "AA*" THEN 
               ttab$ = feld$$
               IF suna$ LIKE "j" THEN 
                 IF feld$$ LIKE suna$ THEN 
                   okab% = - 1
                 ELSE 
                   okab% = 0
                 END IF 
               END IF 
               IF suna$ LIKE "n" THEN 
                 IF feld$$ LIKE suna$ OR LTRIM$ (feld$$) = "" THEN 
                   okab% = - 1
                 ELSE 
                   okab% = 0
                 END IF 
               END IF 
             ELSE 
               IF feld$$ LIKE suna$ + "*" THEN 
                 okab% = - 1
               ELSE 
                 IF ta% = - 1 THEN 
                   okab% = - 1
                 ELSE 
                   okab% = 0
                   REM Hier jetzt testen, ob in dem gefundenen Feldinhalt ein Umlaut existiert und deshalb nicht
                   REM vernÅnftig auf suna$ positioniert wurde
                   REM 280999
                   lenab% = LEN (suna$)
                   umlaut% = - 1
                   WHILE (umlaut%)
                     umlaut% = 0
                     testfel$ = LEFT$ (feld$$,lenab%)
                     FOR i% = 1 TO lenab%
                       x% = ASC ( MID$ ( UCASE$ (testfel$),i%,1))
                       SELECT CASE x%
                         CASE 142
                           umlaut% = - 1
                         CASE 153
                           umlaut% = - 1
                         CASE 154
                           umlaut% = - 1
                       END SELECT 
                     NEXT i%
                     IF umlaut% = - 1 THEN 
                       SELECT NEXT INDEX feld$$
                       IF feld$$ LIKE suna$ + "*" THEN 
                         okab% = - 1
                         umlaut% = 0
                       END IF 
                     END IF 
                   WEND 
                 END IF 
               END IF 
             END IF 
           END IF 
         END IF 
         REM 071098
         length% = LEN (suna$)
         IF feld$ LIKE "Anzahl*" OR feld$ LIKE "letzter_Kontakt*" OR feld$ LIKE "Kunde_seit*" OR feld$ LIKE "Geburtst*" THEN 
         ELSE 
           atest$ = feld$$
         END IF 
         WHILE okab% AND NOT EOF ("adressen")
           
           IF feld$ LIKE "Anzahl*" OR feld$ LIKE "letzter_Kontakt*" OR feld$ LIKE "Kunde_seit*" OR feld$ LIKE "Geburtst*" THEN 
             sok% = - 1
           ELSE 
             IF feld$ LIKE "ADRStatus*" THEN 
               IF feld$$ LIKE suna$ + "*" THEN 
                 sok% = - 1
               ELSE 
                 sok% = 0
               END IF 
             ELSE 
               atest$ = feld$$
               IF feld$$ LIKE suna$ + "*" THEN 
               ELSE 
                 okab% = 0
               END IF 
               sok% = - 1

               IF locktest% THEN 
                 IF Sperre.ADRESSEN <> 0 AND Sperre.ADRESSEN <> vcodema% THEN sok% = 0
               END IF 
               IF okab% = 0 THEN sok% = 0
             END IF 
           END IF 
           IF sok% THEN 
             codeku% = codeku.adressen
             AdrFound1$ = LTRIM$ (nachname)
             IF LTRIM$ (vorname) <> "" THEN AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (vorname)
             AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Stra·e) + ", "
             datsu$ = "Adressen"
             IF GCODIE% = - 1 THEN 
               CALL SearchVorbAdr("ADRESSEN")
             END IF 
             IF EXISTS (codeku%,codeku.telefon) THEN 
               FILE "telefon"
               SELECT FIRST 
               SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
               WHILE NOT EOF ("telefon") AND codeku.telefon = codeku%
                 AdrFound1$ = AdrFound1$ + LTRIM$ (nummer.telefon) + ","
                 GTELDAT$ = "TELEFON"
                 IF _projekt$ <> "WAWI" THEN CALL SearchVorbTel("ADRESSEN")
               SELECT NEXT FILE "Telefon" INDEX codeku.telefon
               WEND 
             END IF 
             FILE "adressen"
             AdrFound$(a%) = AdrFound1$ + SPACE$ (120) + STR$ (codeku,"000000")
             a% = a% + 1
             IF GCODIE% = - 1 THEN 
               ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
             END IF 
           END IF 
           MOUSE OFF 
           SET STATUS "Adresen gefunden " + LTRIM$ ( STR$ (a%,",9999999")) + "       " + nachname.adressen
           SELECT NEXT FILE "adressen"
         WEND 
         IF a% = 0 THEN 
           IF feld1ab$ LIKE "QNachname" THEN 
             REQUEST "Es wurde kein Eintrag unter diesem Namen gefunden!","In den Feldern Matchcode,Vorname/z.H.,Geburtsname/Zusatz/GF suchen?",130,req21%
             IF req21% <> 1 THEN GOTO weiasu230120032
             feld1ab$ = "QVorname"
             feld$ = "QVorname"
             suna$ = VSNRPack$(suna$)
             GOTO anf230120031
            ELSE 
              IF feld1ab$ LIKE "QVorname" THEN 
                feld1ab$ = "QGeburtsname"
                feld$ = "QGeburtsname"
                suna$ = VSNRPack$(suna$)
                GOTO anf230120031
              ELSE 
                REM QMatchcode
                IF feld1ab$ LIKE "QGeburtsname" THEN 
                  feld1ab$ = "QMatchcode"
                  feld$ = "QMatchcode"
                  suna$ = VSNRPack$(suna$)
                  GOTO anf230120031 
                ELSE 
                  REM QMatchcode
                  IF feld1ab$ LIKE "QMatchcode" THEN 
                    feld1ab$ = "QVostand"
                    feld$ = "QVorstand"
                    suna$ = VSNRPack$(suna$)
                    GOTO anf230120031 
                  ELSE 
                    IF feld1ab$ LIKE "QVorstand" THEN 
                      feld1ab$ = "QGeschf"
                      feld$ = "QGeschf"
                      suna$ = VSNRPack$(suna$)
                      GOTO anf230120031 
                    END IF 
                  END IF 
                END IF 
              END IF 
            END IF 
            REM INDEX GAdrDat$
         END IF 
weiasu230120032: 
  
         AdrFound$(a%) = ""
       ELSE 
         IF feld$ <> "Vertragsnummer.ADRESSEN" THEN 
           a% = 0
           INDEX feld$$
           SELECT FIRST 
           suna% = VAL (suna$)
           SELECT KEY suna% INDEX feld$$
           WHILE feld$$ = suna% AND NOT EOF ("adressen")
            sok% = - 1
            IF MNdisabled%("DATALOCK") THEN 
              IF Sperre.datsu$ <> 0 AND Sperre.datsu$ <> vcodema% THEN sok% = 0
            END IF 
            IF sok% THEN 
              AdrFound$(a%) = LTRIM$ (nachname) + ", " + LTRIM$ (vorname) + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Stra·e) + ", " + LTRIM$ (telefon1) + SPACE$ (120) + STR$ (codeku,"000000")
              a% = a% + 1
             END IF 
             SELECT NEXT 
           WEND 
         END IF 
         AdrFound$(a%) = ""
       END IF 
     END IF 
     GAnzAdrFound% = a%
Telf190896: 
     LAuswahl$ = AdrFound$(0)
     LAuswahl1$(0) = LAuswahl$
     req3% = 0
     IF GAnzAdrFound% <> 0 THEN 
       REM CALL Fehler("","")
       IF GCODIE% = - 1 THEN 
         c$ = "aa"
         req3% = CALL ("_SearchShow",c$)
         REM REQUEST c$,"",2
         REM ret% = CALL ("_SearchClose")
         IF VAL (c$) <> 0 THEN 
           AdrSuche% = VAL (c$)
           adrfound% = VAL (c$)
           ok% = 0
           SET STATUS "Adresse gefunden..."
         END IF 
         IF req3% = 2 THEN 
           adrser% = 1
           CALL SerieNeu1(GAdrDat$)
           GOTO Ende1
         END IF 
         ja% = - 1
         IF disabled%("ADRDrucken") THEN ja% = 0
         IF req3% = 3 AND ja% = - 1 THEN 
           GADRDat$ = "ADRESSEN"
           CALL DFile(2,"OFFICE\aktionen" + _fpw$)
           REM drucken
           ON ERROR GOTO adrdr190620021
           DIM dlg AS Dialog
           DIM control AS DialogControl
adrdr190620021: 
           ON ERROR GOTO ErrorHandler
           Superbase.Dialogs.Add("ADRFilter")
           SET dlg = Superbase.Dialogs.ADRFilter
           dlg.Move(0,0,158,111)
           dlg.Caption = title$
           dlg.FontName = "MS Sans Serif"
           dlg.FontSize = 8
 
           SET control = dlg.Add("DialogFrame2","DialogFrame")
           control.Move(5,7,141,77)
           control.Caption = "Druckoptionen"
 
           SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
           control.Move(11,24,85,10)
           control.Caption = "Alle Angaben drucken"
           control.Bind("KurzLang$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCheckBox2","DialogCheckBox")
           control.Move(11,38,85,11)
           control.Caption = "Termine mitdrucken"
           control.Bind("Terminejn$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           REM SET control = dlg.Add("DialogCheckBox3","DialogCheckBox")
           REM control.Move(11,53,115,11)
           REM control.Caption = "VertrÑge zur Adresse drucken!"
           REM control.Bind("VertragJN$")
           REM control.ValueOn = "j"
           REM control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCheckBox4","DialogCheckBox")
           control.Move(11,68,105,11)
           control.Caption = "als Telefonliste"
           control.Bind("adrtelefon$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
           control.Move(22,89,48,15)
           control.Default = 1
           control.Caption = "&Weiter"
           control.ReturnValue = 1
 
           SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
           control.Move(74,89,48,15)
           control.Caption = "&Abbruch"
           control.ReturnValue = 0
           control.Cancel = 1
           DIALOG "ADRFilter",req%
           REMOVE DIALOG ALL 
           IF req% = 1 THEN 
             REM jetzt das Array auslesen und in eine Datei speichern
             FILE GADRDat$
             cindex$ = INDEX 
             INDEX codeku.Gadrdat$
             IF NOT OPEN ("ADRLEER") THEN 
               CALL DFile(2,"OFFICE\ADRLEER" + _fpw$)
             END IF 
             ON ERROR GOTO w271120082
             REMOVE FROM FILE "ADRLEER"
w271120082: 
             ON ERROR GOTO ErrorHandler
             FOR xi% = 0 TO GAnzAdrFound% - 1
               codeku% = VAL ( RIGHT$ (AdrFound$(xi%),6))
               SELECT FIRST FILE GADRDat$ INDEX codeku.GADRDat$
               SELECT KEY codeku% FILE GADRDat$ INDEX codeku.GADRDat$
               anrede$ = Anrede.GadrDat$
               titel$ = Titel.GADRDat$
               IF anrede$ LIKE "Herr*" OR anrede$ LIKE "Fr*" OR anrede$ LIKE "Fam*" OR anrede$ LIKE "Ehe*" OR anrede$ LIKE "Kind*" THEN 
                 nachname$ = LTRIM$ (nachname.GAdrDat$)
                 vorname$ = LTRIM$ (vorname.GAdrDat$)
               ELSE 
                 nachname$ = LTRIM$ (nachname.GAdrDat$)
                 vorname$ = LTRIM$ (Geburtsname.GAdrDat$)
               END IF 
               gebdat% = Geburtstag.GAdrDat$
               REM CALL WriteAdrTemp(codeku%,anrede$,titel$,nachname$,vorname$,gebdat%)
               BLANK FILE "ADRLEER"
               a% = CopyRecord%(GADRDat$,"ADRLEER")
               Nachname.adrleer = nachname$
               Vorname.adrleer = Vorname$
               STORE FILE "ADRLEER"
               UNLOCK FILE "ADRLEER"
               SET STATUS STR$ (xi%,",999999") + " Adressen fÅr Druck aufbereitet!"
             NEXT xi%
             REM dann drucken auslîsen
             Wbericht$ = "ADRLEER"
             title2$ = "Adressliste "
             CALL VPEADRGr(Wbericht$,FormatPrint$,title2$,Terminejn$,KurzLang$)
             WAIT MOUSE OR KEY OR MENU 
             MOUSE OFF 
             INDEX cindex$
             REM REMOVE FROM FILE "ADRLEER"
             MOUSE ON 
             REM CALL Fehler("Druck beendet!","")
             GOTO Telf190896
           END IF 
         END IF 
       ELSE 
         IF _projekt$ LIKE "PROVIS" THEN 
           MENU 3,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
         ELSE 
           MENU 4,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
         END IF 
         CREATE DIALOG "ADRLISTE",0,0,440,197,title$,"MS Sans Serif",8
         REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
         ADD DIALOG "ADRLISTE",7,5,8,428,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRLISTE",1,124,174,56,16,1,"&OK",1,1
         ADD DIALOG "ADRLISTE",1,184,174,56,16,0,"&Abbrechen",0,0
         IF noserie% = 0 THEN ADD DIALOG "ADRLISTE",1,244,174,56,16,0,"&Serienbrief",2,0
         DIALOG "ADRLISTE",req3%
         MOUSE ON 
         REMOVE DIALOG "ADRLISTE"
         REM 200999 Serienbrief
         IF req3% = 2 THEN 
           adrser% = 1
           IF NOT disabled%("MAILING") THEN 
             CALL SerieNeu1("ADRESSEN")
           END IF 
           GOTO Ende1
         END IF 
         IF req3% = 1 THEN 
           LAuswahl$ = LAuswahl1$(0)
           AdrSuche% = VAL ( RIGHT$ (LAuswahl$,6))
           adrfound% = VAL ( RIGHT$ (LAuswahl$,6))
           ok% = 0
           SET STATUS "Adresse gefunden..."
         END IF 
       ELSE 
         AdrSuche% = 0
       END IF 
     ELSE 
       adrfound% = 0
       IF _projekt$ LIKE "PROVIS" THEN 
         MENU 3,6,0
       ELSE 
         REM MENU 4,6,0
       END IF 
     END IF 
     IF AdrSuche% = 0 AND ok% = 1 THEN 
       AdrSuche% = 0
       ok% = 1
       IF feld$ LIKE "Telefon1*" THEN 
         REQUEST "Keine Telefonnummer gefunden!","",2
         ok% = 0
       ELSE 
         IF feld$ LIKE "Telefon2*" THEN 
           REQUEST "Keine Telefonnummer gefunden!","",2
           ok% = 0
         ELSE 
           IF feld$ <> "Vertragsnummer.ADRESSEN" THEN 
             REQUEST "Eintrag nicht gefunden!","Erweiterte Suche durchfÅhren?",135,req2%
           ELSE 
             req2% = 0
           END IF 
           IF req2% = 1 THEN 
             ok% = 1
           ELSE 
             ok% = 0
           END IF 
         END IF 
       END IF 
     END IF 
     REM REDIM AdrFound$( RECCOUNT ("ADRESSEN"))
   END IF 
   IF AdrSuche% = 0 AND ok% = 1 THEN 

     IF feld1ab$ LIKE "Agentur" OR feld1ab$ LIKE "Vertreter" THEN 
       IF feld1ab$ LIKE "Agentur" THEN datei1$ = "MAADR"
       IF feld1ab$ LIKE "Vertreter" THEN datei1$ = "VERTRETE"
       CALL DFile(3,datei1$ + _fpw$)
       FILE datei1$
       INDEX nachname.datei1$
       SELECT FIRST 
       a% = 0
       SELECT WHERE nachname.datei1$ <> ""
       SELECT FIRST 
       WHILE NOT EOF (datei1$)
         AdrFound$(a%) = LTRIM$ (nachname) + "," + LTRIM$ (vorname) + SPACE$ (120) + STR$ (codema,"000000")
         a% = a% + 1
         SELECT NEXT 
       WEND 
       AdrFound$(a%) = ""
       LAuswahl$ = AdrFound$(0)
       LAuswahl1$(0) = LAuswahl$
       CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"MS Sans Serif",8
       REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
       ADD DIALOG "ADRLISTE",7,5,8,328,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
       ADD DIALOG "ADRLISTE",1,74,174,56,16,1,"&OK",1,1
       ADD DIALOG "ADRLISTE",1,134,174,56,16,0,"&Abbrechen",0,0
       IF noserie% = 0 THEN ADD DIALOG "ADRLISTE",1,194,174,56,16,0,"&Serienbrief",2,0
       DIALOG "ADRLISTE",req5%
       MOUSE ON 
       REMOVE DIALOG "ADRLISTE"
       IF req5% = 2 THEN 
         adrser% = 1
         CALL SerieNeu1("ADRESSEN")
         GOTO Ende1
       END IF 
       IF req5% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         suna% = VAL ( RIGHT$ (LAuswahl$,6))
       ELSE 
         ok% = 0
         AdrSuche% = 0
         REDIM AdrFound$( RECCOUNT ("ADRESSEN"))
         GOTO Ende1
       END IF 
     END IF 


     IF feld$ LIKE "Stichwort.ADRESSEN" THEN 
       CALL DFile(2,"OFFICE\keywords" + _fpw$)
       FILE "keywords"
       INDEX keyword
       SELECT FIRST 
       a% = 0
       SELECT WHERE keyword <> ""
       SELECT FIRST 
       WHILE NOT EOF ("keywords")
         AdrFound$(a%) = LTRIM$ (keyword)
         a% = a% + 1
         SELECT NEXT 
       WEND 
       AdrFound$(a%) = ""
       LAuswahl$ = AdrFound$(0)
       LAuswahl1$(0) = LAuswahl$
       CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"MS Sans Serif",8
       REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
       ADD DIALOG "ADRLISTE",7,5,8,328,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
       ADD DIALOG "ADRLISTE",1,74,174,56,16,1,"&OK",1,1
       ADD DIALOG "ADRLISTE",1,134,174,56,16,0,"&Abbrechen",0,0
       IF noserie% = 0 THEN ADD DIALOG "ADRLISTE",1,194,174,56,16,0,"&Serienbrief",2,0
       DIALOG "ADRLISTE",req5%
       MOUSE ON 
       REMOVE DIALOG "ADRLISTE"
       REM FOR i% = 0 TO a%
         REM AdrFound$(i%) = ""
       REM NEXT i%
       REM CALL Fehler("","")
       IF req5% = 2 THEN 
         adrser% = 1
         CALL SerieNeu1("ADRESSEN")
         GOTO Ende1
       END IF 
       IF req5% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         suna$ = LEFT$ (LAuswahl$)
       ELSE 
         ok% = 0
         AdrSuche% = 0
         REDIM AdrFound$( RECCOUNT ("ADRESSEN"))
         GOTO Ende1
       END IF 
       MOUSE OFF 
     END IF 

     REM 200999
     IF (Auswahl$(0) LIKE "Geburtstag*" OR Auswahl$(0) LIKE "letzter Kontakt*" OR Auswahl$(0) LIKE "Kunde seit*" OR Auswahl$(0) LIKE "Anzahl*") THEN 
     ELSE 
       IF Auswahl$(0) LIKE "KV Pflicht*" OR Auswahl$(0) LIKE "RV Pflicht*" OR Auswahl$(0) LIKE "Makler*" OR Auswahl$(0) LIKE "Vollmacht*" OR Auswahl$(0) LIKE "Generalvollmacht*" THEN 
       ELSE 
         IF Auswahl$(0) LIKE "Gesellschaft*" OR Auswahl$(0) LIKE "Agentur*" OR Auswahl$(0) LIKE "InternetUpd*" THEN 
         ELSE 
           suna$ = "*" + suna$ + "*"
         END IF 
       END IF 
     END IF 
     REM SET STATUS "Adre·suche nach " + feld$ + " = " + suna$
     SET STATUS "Adre·suche lÑuft..."
     wi% = 0
     CALL Server("LISTBOXINIT","Adre·auswahl")
     FILE "adressen"
     SELECT FIRST 
     MOUSE OFF 
     CALL Gauge(1,"Adre·datei wird durchsucht...")
     CALL Server("GAUGEENABLECANCEL","")
     _prozt% = 0
     _proz2% = 0
     _anz% = RECCOUNT ("adressen")
     IF feld$ LIKE "Telefon*" THEN GOTO tel181096
     a% = 0
     REM CALL Fehler("Lange suche","")
     IF GCODIE% = - 1 THEN 
       CALL SearchInitADR()
     END IF 
     WHILE NOT EOF ("adressen") AND ServerReply$() <> "CANCEL"
       _proz% = INT ((100 / _anz%) * _proz2%)
       IF _proz% > 100 THEN _proz% = 100
       IF _proz% < 2 THEN _proz% = 2
       IF _proz% <> _prozt% THEN 
         _prozt% = _proz%
         SET STATUS "erweiterte Suche... " + STR$ (_prozt%,"999") + " %"
         CALL Gauge(_proz%,"")
       END IF 
       _proz2% = _proz2% + 1
       adrfound% = 0
       REM CALL Fehler(feld$,"")
       SELECT CASE feld$
       CASE "Hobbys.ADRESSEN"
         IF Hobbys.adressen LIKE suna$ THEN adrfound% = 1
       CASE "Kundennummer.ADRESSEN"
         IF Kundennummer.adressen LIKE suna$ THEN adrfound% = 1
       CASE "QNachname.ADRESSEN","Vorname.ADRESSEN","QMatchcode.ADRESSEN","QVorname.ADRESSEN","QVorstand.ADRESSEN","QGeschf.adressen"
         IF QNachname.adressen LIKE suna$ THEN adrfound% = 1
         IF QMatchcode.adressen LIKE suna$ THEN adrfound% = 1
         IF _projekt$ <> "AKTE" THEN 
           IF QVorname.adressen LIKE suna$ THEN adrfound% = 1
           IF QGeburtsname.adressen LIKE suna$ THEN adrfound% = 1
         END IF 
         IF QVorstand.adressen LIKE suna$ THEN adrfound% = 1
         IF QGeschf.adressen LIKE suna$ THEN adrfound% = 1
       CASE "QStra·e.ADRESSEN"
         IF QStra·e.adressen LIKE suna$ THEN adrfound% = 1
         REM IF ASStra·e.adressen LIKE suna$ THEN adrfound% = 1
       CASE "QOrt.ADRESSEN"
         IF QOrt.adressen LIKE suna$ THEN adrfound% = 1
       CASE "QOrtsteil.ADRESSEN"
         IF QOrtsteil.adressen LIKE suna$ THEN adrfound% = 1
         REM IF ASOrt.adressen LIKE suna$ THEN adrfound% = 1
       CASE "QPLZ.ADRESSEN"
         IF QPLZ.adressen LIKE suna$ THEN adrfound% = 1
         REM IF ASPLZ.adressen LIKE suna$ THEN adrfound% = 1
       CASE "Stichwort.ADRESSEN"
         IF Stichwort.adressen LIKE suna$ THEN adrfound% = 1
         IF Notiz.adressen LIKE suna$ THEN adrfound% = 1
       CASE "HRA.ADRESSEN"
         IF HRA.ADRESSEN LIKE suna$ THEN adrfound% = 1
       CASE "QGeburtsname.ADRESSEN"
         IF QGeburtsname.ADRESSEN LIKE suna$ THEN adrfound% = 1
       CASE "AdresseGlaeubig.ADRESSEN"
         IF AdresseGlaeubig.ADRESSEN LIKE suna$ THEN adrfound% = 1
       CASE "Verwalter.ADRESSEN"
         IF Verwalter.ADRESSEN LIKE suna$ THEN adrfound% = 1
       CASE "Sequester.ADRESSEN"
         IF Sequester.ADRESSEN LIKE suna$ THEN adrfound% = 1
       CASE "Gutachter.ADRESSEN"
         IF Gutachter.ADRESSEN LIKE suna$ THEN adrfound% = 1
       REM 200999
       CASE "Land.ADRESSEN"
         IF Land.ADRESSEN LIKE suna$ THEN adrfound% = 1
       CASE "Kunde_seit.ADRESSEN"
         IF feld$$ >= DAYS (vondat$) AND feld$$ <= DAYS (bisdat$) THEN adrfound% = 1
       CASE "Geburtstag.ADRESSEN"
         IF feld$$ >= DAYS (vondat$) AND feld$$ <= DAYS (bisdat$) THEN adrfound% = 1
       CASE "letzter_Kontakt.ADRESSEN"
         IF feld$$ >= DAYS (vondat$) AND feld$$ <= DAYS (bisdat$) THEN adrfound% = 1
       CASE "Firmenform.ADRESSEN"
         IF Firmenform.ADRESSEN LIKE suna$ THEN adrfound% = 1
    END SELECT 
       IF adrfound% = 1 THEN 
         ok% = - 1
         IF MNdisabled%("DATALOCK") THEN 
           IF Sperre.ADRESSEN <> 0 AND Sperre.ADRESSEN <> vcodema% THEN ok% = 0
         END IF 
         IF ok% THEN 
           IF _projekt$ <> "AKTE" THEN 
             datsu$ = "Adressen"
             codeku% = codeku.adressen
             IF GCODIE% = - 1 THEN 
               CALL SearchVorbAdr("ADRESSEN")
             END IF 
             tmpZeile$ = LTRIM$ (nachname)
             IF LTRIM$ (vorname) <> "" THEN tmpZeile$ = tmpZeile$ + ", " + LTRIM$ (vorname)
             tmpZeile$ = tmpZeile$ + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Stra·e) + ", " + SPACE$ (100) + " (" + STR$ (CodeKU.adressen,"000000") + ")"
             REM tmpZeile$ = Nachname.adressen + ", " + Vorname.adressen + ", " + ort.adressen + " (" + STR$ (CodeKU.adressen,"000000") + ")"
             AdrFound$(a%) = tmpZeile$
             REM CALL Fehler(AdrFound$(a%),"")
             a% = a% + 1
             IF EXISTS (codeku%,codeku.adressen) THEN 
               SELECT FIRST FILE "Telefon" INDEX codeku.telefon
               SELECT KEY codeku% FILE "Telefon" INDEX codeku.telefon
               WHILE NOT EOF ("Telefon") AND codeku.telefon = codeku%
                 GTELDAT$ = "TELEFON"
                 IF _projekt$ <> "WAWI" THEN CALL SearchVorbTel("ADRESSEN")
                 SELECT NEXT FILE "Telefon" INDEX codeku.telefon
               WEND 
             
             END IF 
           ELSE 
             SELECT CASE feld$
               CASE "HRA.ADRESSEN"
                 tmpZeile$ = HRA.ADRESSEN + ", " + Nachname.adressen + ", " + Vorname.adressen + ", " + ort.adressen + " (" + STR$ (CodeKU.adressen,"000000") + ")"
               CASE "QGeburtsname.ADRESSEN"
                 tmpZeile$ = LEFT$ (Geburtsname.ADRESSEN,40) + "...,SCHULDNER: " + Nachname.adressen + ", " + Vorname.adressen + ", " + ort.adressen + " (" + STR$ (CodeKU.adressen,"000000") + ")"
               CASE "AdresseGlaeubig.ADRESSEN"
                 tmpZeile$ = LEFT$ (AdresseGlaeubig.ADRESSEN,40) + "...,SCHULDNER: " + Nachname.adressen + ", " + Vorname.adressen + ", " + ort.adressen + " (" + STR$ (CodeKU.adressen,"000000") + ")"
               CASE "Verwalter.ADRESSEN"
                 tmpZeile$ = LEFT$ (Verwalter.ADRESSEN,40) + "...,SCHULDNER: " + Nachname.adressen + ", " + Vorname.adressen + ", " + ort.adressen + " (" + STR$ (CodeKU.adressen,"000000") + ")"
               CASE "Sequester.ADRESSEN"
                 tmpZeile$ = LEFT$ (Sequester.ADRESSEN,40) + "...,SCHULDNER: " + Nachname.adressen + ", " + Vorname.adressen + ", " + ort.adressen + " (" + STR$ (CodeKU.adressen,"000000") + ")"
               CASE "Gutachter.ADRESSEN"
                 tmpZeile$ = LEFT$ (Gutachter.ADRESSEN,40) + "...,SCHULDNER: " + Nachname.adressen + ", " + Vorname.adressen + ", " + ort.adressen + " (" + STR$ (CodeKU.adressen,"000000") + ")"
               CASE ELSE 
                 tmpZeile$ = Nachname.adressen + ", " + Vorname.adressen + ", " + ort.adressen + " (" + STR$ (CodeKU.adressen,"000000") + ")"
             END SELECT 
           END IF 
           wi% = wi% + 1
           CALL Server("GaugeMessage","Adre·datei wird durchsucht... " + TRIM$ ( STR$ (wi%,"9999")) + " gefunden (" + Nachname.Adressen + ", " + LEFT$ (Vorname.ADRESSEN,1) + ".)")
           CALL Server("LISTBOXADD",tmpZeile$)
         END IF 
         IF GCODIE% = - 1 THEN 
           ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
         END IF 
       END IF 
       MOUSE OFF 
       SET STATUS nachname.adressen
       SELECT NEXT FILE "adressen"
     WEND 
     AdrFound$(a%) = ""
     CALL Gauge(0,"")
     SET STATUS "Bereit"
     IF wi% <> 0 THEN 
       SET STATUS "Bitte wÑhlen Sie eine Adresse aus"
       IF _projekt$ LIKE "PROVIS" THEN 
         REM MENU 3,6,1,"aus Suchliste &wÑhlen,F7","ADRWahl"
         IF a% <> 0 THEN MENU 3,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
       ELSE 
         IF _projekt$ <> "AKTE" THEN MENU 4,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche"
         IF _projekt$ = "AKTE" THEN MENU 4,1,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche"
       END IF 
       REM 200999
       REM CALL Server("LISTBOXSHOW","Bitte wÑhlen Sie die gewÅnschte Adresse aus:")
       REM erg$ = ServerReply$()
       REM IF erg$ <> "" THEN 
         REM ADRSuche% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
       REM ELSE 
         REM ADRSuche% = 0
       REM END IF 
       IF GCODIE% = - 1 THEN 
         c$ = "aa"
         req3% = CALL ("_SearchShow",c$)
         REM REQUEST c$,"",2
         REM ret% = CALL ("_SearchClose")
         IF VAL (c$) <> 0 THEN 
           AdrSuche% = VAL (c$)
           adrfound% = VAL (c$)
           ok% = 0
           SET STATUS "Adresse gefunden..."
         END IF 
         IF req3% = 2 THEN 
           adrser% = 1
           CALL SerieNeu1(GAdrDat$)
           GOTO Ende1
         END IF 
       ELSE 
         CREATE DIALOG "ADRLISTE",0,0,440,197,title$,"MS Sans Serif",8
         REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
         ADD DIALOG "ADRLISTE",7,5,8,428,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRLISTE",1,124,174,56,16,1,"&OK",1,1
         ADD DIALOG "ADRLISTE",1,184,174,56,16,0,"&Abbrechen",0,0
         IF noserie% = 0 THEN ADD DIALOG "ADRLISTE",1,244,174,56,16,0,"&Serienbrief",2,0
         DIALOG "ADRLISTE",req4%
         MOUSE ON 
         REMOVE DIALOG "ADRLISTE"
         REM 200999 Serienbrief
         IF req4% = 2 THEN 
           adrser% = 1
           CALL SerieNeu1("ADRESSEN")
           GOTO Ende1
         END IF 
         IF req4% = 1 THEN 
           LAuswahl$ = LAuswahl1$(0)
           AdrSuche% = VAL ( RIGHT$ (LAuswahl$,6))
           adrfound% = VAL ( RIGHT$ (LAuswahl$,6))
           ok% = 0
           SET STATUS "Adresse gefunden..."
         ELSE 
           AdrSuche% = 0
         END IF 
       END IF 
     ELSE 
       CALL Fehler("Keine entsprechende Adresse gefunden!","")
       ADRSuche% = 0
     END IF 
   END IF 
   tfoundadr% = a%
 ELSE 
   REM 020799 adrglob%
   IF adrglob% > 0 THEN 
     ADRSuche% = adrglob%
     tfoundadr% = adrglob%
     adrglob% = 0
   ELSE 
     tfoundadr% = 0
   END IF 
   IF _projekt$ LIKE "PROVIS" THEN 
     REM MENU 3,6,0,"aus Suchliste &wÑhlen,F7","ADRWahl"
     MENU 3,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
   ELSE 
     IF _projekt$ <> "AKTE" THEN 
       IF tfoundadr% = 0 THEN 
         REM MENU 4,6,0,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
       ELSE 
         MENU 4,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
       END IF 
     IF _projekt$ = "AKTE" THEN MENU 4,1,0,"aus Suchliste &wÑhlen,F7","ADRKurzSuche"
   END IF 
 END IF 
Ende1: 
 SET STATUS "Bereit"
 MOUSE ON 
 FILE cfile$
 END FUNCTION 
 
 
 
 
FUNCTION ADRSuche1%(filtertype%)
 cfile$ = FILE 
 adrfound% = 0
 REM ** Feldnamen definieren
 DIM Feldnamen$(12)
 Feldnamen$(0) = "Nachname"
 Feldnamen$(1) = "Kundennummer"
 Feldnamen$(2) = "Vorname"
 Feldnamen$(3) = "Stra·e"
 Feldnamen$(4) = "Ort"
 Feldnamen$(5) = "Postleitzahl"
 Feldnamen$(6) = "Telefon/-fax"
 Feldnamen$(7) = "Firmenform"
 sw% = 8
 IF filtertype% <> 0 THEN 
   Feldnamen$(sw%) = "Hobby"
   sw% = 9
 END IF 
 IF defa$ LIKE "MEGA" THEN 
   Feldnamen$(sw%) = "KostentrÑger"
   Feldnamen$(sw% + 1) = "Kostenstelle"
   sw% = sw% + 2
 END IF 
 Feldnamen$(sw%) = "Stichwort"
 SET STATUS "Adresse suchen"
 FILE "adressen":INDEX nachname.adressen
 Auswahl$ = suchopt$
 REM CREATE DIALOG "ADRSUCH",0,0,202,142,title$,"MS Sans Serif",8
 REM ADD DIALOG "ADRSUCH",4,0,0,202,142,0,""
 REM ADD DIALOG "ADRSUCH",9,6,12,20,23,2
 REM ADD DIALOG "ADRSUCH",5,32,14,164,19,0,"Bitte wÑhlen Sie aus, in welchem Datenbankfeld gesucht werden soll."
 REM ADD DIALOG "ADRSUCH",5,32,35,164,26,0,"Bei der Suche Åber das Stichwort kînnen Sie den Suchbegriff weglassen, um eine Liste aller Stichwîrter zu erhalten."
 REM ADD DIALOG "ADRSUCH",5,34,112,62,10,0,"Suchbegriff:"
 REM ADD DIALOG "ADRSUCH",6,34,122,88,11,128,0,suna$,50
 REM ADD DIALOG "ADRSUCH",5,34,83,56,8,0,"Suchfeld:"
 REM ADD DIALOG "ADRSUCH",8,34,93,88,60,3,2,Auswahl$,Feldnamen$
 REM REM ADD DIALOG "ADRSUCH",1,130,67,64,15,1,"&Schnellsuche",1,1
 REM REM ADD DIALOG "ADRSUCH",1,130,84,64,15,0,"&erweiterte Suche",2,1
 REM REM ADD DIALOG "ADRSUCH",1,130,101,64,15,0,"&Hilfe",3,1
 REM REM ADD DIALOG "ADRSUCH",1,130,118,64,15,0,"&Abbruch",0,0
 REM ADD DIALOG "ADRSUCH",1,130,84,64,15,1,"&Schnellsuche",1,1
 REM ADD DIALOG "ADRSUCH",1,130,101,64,15,0,"&erweiterte Suche",2,1
 REM REM ADD DIALOG "ADRSUCH",1,130,101,64,15,0,"&Hilfe",3,1
 REM ADD DIALOG "ADRSUCH",1,130,118,64,15,0,"&Abbruch",0,0
 REM DIALOG "ADRSUCH",req%
 REM REMOVE DIALOG "ADRSUCH"
 
 
     opt1% = 2
     stichw$ = "n"
     stichwort$ = ""
     option2% = 1
     CREATE DIALOG "ADRFilter",0,0,290,164,title$,"MS Sans Serif",8
     ADD DIALOG "ADRFilter",4,5,0,280,124,0," Suche nach "
     ADD DIALOG "ADRFilter",6,169,30,112,13,128,0,suna$,50
     ADD DIALOG "ADRFilter",6,169,46,112,13,128,0,suna1$,50
     ADD DIALOG "ADRFilter",3,14,11,72,11,0,"Kundennummer",6,opt1%
     ADD DIALOG "ADRFilter",3,14,25,34,11,0,"Anrede",1,opt1%
     ADD DIALOG "ADRFilter",3,14,38,68,11,0,"Nachname/Firma",2,opt1%
     ADD DIALOG "ADRFilter",3,14,52,22,11,0,"Ort",3,opt1%
     ADD DIALOG "ADRFilter",3,14,67,28,11,0,"PLZ",4,opt1%
     ADD DIALOG "ADRFilter",3,14,81,79,11,0,"Stra·e",5,opt1%
     ADD DIALOG "ADRFilter",3,14,94,79,11,0,"Telefon/Fax",7,opt1%
     ADD DIALOG "ADRFilter",5,169,16,111,12,0,"Bitte den Suchbegriff eingeben"
     ADD DIALOG "ADRFilter",5,150,32,14,11,0,"von"
     ADD DIALOG "ADRFilter",5,150,46,12,11,0,"bis"
     REM ADD DIALOG "ADRFilter",2,169,60,85,12,0,"Alle Angaben drucken","j","n",KurzLang$
     REM ADD DIALOG "ADRFilter",2,169,75,85,12,0,"Termine mitdrucken","j","n",Terminejn$
     ADD DIALOG "ADRFilter",2,14,108,84,12,0,"Stichwort einbeziehen","j","n",stichw$
     REM ADD DIALOG "ADRFilter",3,4,128,125,11,0,"Ausgabe auf Drucker/Fenster",1,Option2%
     REM ADD DIALOG "ADRFilter",3,136,128,148,11,0,"Ausgabe in dBASE - Datei fÅr Serienbriefe",2,Option2%
     ADD DIALOG "ADRFilter",1,89,147,49,14,1,"&Weiter",1,1
     ADD DIALOG "ADRFilter",1,141,147,49,14,0,"&Abbruch",0,0
     DIALOG "ADRFilter",req%
     REMOVE DIALOG ALL 
 
 
 
 AdrSuche% = 0
 IF req% <> 0 AND (suna$ <> "" OR suna1$ <> "" OR stichw$ = "j") THEN 
   IF stichw$ = "j" THEN feld1$ = "Stichwort.adressen"
     SELECT CASE opt1%
     CASE 1
       feld$ = "Anrede.adressen"
       INDEX feld$$
       IF suna1$ = "" THEN 
         REM suna$ = suna$ + "*"
         suna$ = UCASE$ (suna$)
         suna1$ = suna$
       ELSE 
         IF suna$ <> "" THEN 
           suna$ = UCASE$ (suna$)
           suna1$ = UCASE$ (suna1$)
         ELSE 
           suna$ = UCASE$ (suna1$)
           suna1$ = suna$
         END IF 
       END IF 
     CASE 2
       feld$ = "nachname.adressen"
       INDEX feld$$
       IF suna1$ = "" THEN 
         suna$ = UCASE$ (suna$)
         suna1$ = suna$
       ELSE 
         IF suna$ <> "" THEN 
           suna$ = UCASE$ (suna$)
           suna1$ = UCASE$ (suna1$)
         ELSE 
           suna$ = UCASE$ (suna1$)
           suna1$ = suna$
         END IF 
       END IF 
     CASE 3
       feld$ = "Ort.adressen"
       INDEX feld$$
       IF suna1$ = "" THEN 
         suna$ = UCASE$ (suna$)
         suna1$ = suna$
       ELSE 
         IF suna$ <> "" THEN 
           suna$ = UCASE$ (suna$)
           suna1$ = UCASE$ (suna1$)
         ELSE 
           suna$ = UCASE$ (suna1$)
           suna1$ = suna$
         END IF 
       END IF 
     CASE 4
       feld$ = "PLZ.adressen"
       INDEX feld$$
       IF suna1$ = "" THEN 
         suna$ = UCASE$ (suna$)
         suna1$ = suna$
       ELSE 
         IF suna$ <> "" THEN 
           suna$ = UCASE$ (suna$)
           suna1$ = UCASE$ (suna1$)
         ELSE 
           suna$ = UCASE$ (suna1$)
           suna1$ = suna$
         END IF 
       END IF 
     CASE 5
       feld$ = "Stra·e.adressen"
       INDEX feld$$
       IF suna1$ = "" THEN 
         suna$ = UCASE$ (suna$)
         suna1$ = suna$
       ELSE 
         IF suna$ <> "" THEN 
           suna$ = UCASE$ (suna$)
           suna1$ = UCASE$ (suna1$)
         ELSE 
           suna$ = UCASE$ (suna1$)
           suna1$ = suna$
         END IF 
       END IF 
     CASE 6
       feld$ = "Kundennummer.adressen"
       INDEX feld$$
       IF suna1$ = "" THEN 
         suna$ = UCASE$ (suna$)
         suna1$ = suna$
       ELSE 
         IF suna$ <> "" THEN 
           suna$ = UCASE$ (suna$)
           suna1$ = UCASE$ (suna1$)
         ELSE 
           suna$ = UCASE$ (suna1$)
           suna1$ = suna$
         END IF 
       END IF 
     CASE 7
       feld$ = "Telefon/Faxnummer"
       IF suna1$ = "" THEN 
         suna$ = UCASE$ (suna$)
         suna1$ = suna$
       ELSE 
         IF suna$ <> "" THEN 
           suna$ = UCASE$ (suna$)
           suna1$ = UCASE$ (suna1$)
         ELSE 
           suna$ = UCASE$ (suna1$)
           suna1$ = suna$
         END IF 
       END IF 
     END SELECT 
     x% = ASC ( LEFT$ ( UCASE$ (suna$),1))
     SELECT CASE x%
       CASE 142
         sun$ = "A" + RIGHT$ (suna$, LEN (suna$) - 1)
         suna$ = sun$
       CASE 153
         sun$ = "O" + RIGHT$ (suna$, LEN (suna$) - 1)
         suna$ = sun$
       CASE 154
         sun$ = "U" + RIGHT$ (suna$, LEN (suna$) - 1)
         suna$ = sun$
     END SELECT 
 
 
 
   SET STATUS "Adre·suche lÑuft..."
   REM feld$ = feld$ + ".ADRESSEN"
   a% = 0
   REDIM AdrFound$( RECCOUNT ("ADRESSEN"))
   b% = RECCOUNT ("ADRESSEN")
   
   ok% = 1
   IF req% = 1 THEN 
     IF feld$ LIKE "Telefon/Faxnummer" THEN 
       suna1$ = suna$
       REM IF RIGHT$ (suna1$,1) <> "*" THEN suna1$ = suna1$ + "*"
       FILE "Telefon"
       INDEX nummer.telefon
       SELECT FIRST 
       SELECT KEY suna1$ FILE "telefon" INDEX nummer.telefon
       a% = 0
       codekuold% = - 1
       WHILE NOT EOF ("telefon") AND LEFT$ (nummer.telefon, LEN (suna$)) >= suna$ AND LEFT$ (nummer.telefon, LEN (suna1$)) <= suna1$
         codeku% = Codeku.telefon
         IF codeku% <> codekuold% THEN 
           codekuold% = codeku%
           SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
           IF stichw$ <> "j" THEN 
     AdrFound$(a%) = LTRIM$ (nummer.telefon) + ",   " + + LTRIM$ (nachname.adressen) + ", " + LTRIM$ (vorname.adressen) + ", " + LTRIM$ (ort.adressen) + ", " + PLZ.adressen + ", " + LTRIM$ (Stra·e.adressen) + ", " + SPACE$ (120) + STR$ (codeku%,"000000")
           a% = a% + 1
           ELSE 
             IF stichwort.adressen LIKE sunast$ THEN 
     AdrFound$(a%) = LTRIM$ (nummer.telefon) + ",   " + + LTRIM$ (nachname.adressen) + ", " + LTRIM$ (vorname.adressen) + ", " + LTRIM$ (ort.adressen) + ", " + PLZ.adressen + ", " + LTRIM$ (Stra·e.adressen) + ", " + SPACE$ (120) + STR$ (codeku%,"000000")
           a% = a% + 1
             END IF 
           END IF 
         END IF 
         SELECT NEXT FILE "telefon"
       WEND 
       FILE "adressen"
       GOTO Telf070796
     END IF 
     IF feld1$ LIKE "Stichwort.ADRESSEN" THEN 
       CALL DFile(2,"OFFICE\keywords" + _fpw$)
       FILE "keywords"
       INDEX keyword
       SELECT FIRST 
       a% = 0
       SELECT WHERE keyword <> ""
       SELECT FIRST 
       WHILE NOT EOF ("keywords")
         AdrFound$(a%) = LTRIM$ (keyword)
         a% = a% + 1
         SELECT NEXT 
       WEND 
       AdrFound$(a%) = ""
       LAuswahl$ = AdrFound$(0)
       LAuswahl1$(0) = LAuswahl$
       CREATE DIALOG "ADRSTICHW",0,0,194,202,title$,"MS Sans Serif",8
       ADD DIALOG "ADRSTICHW",7,5,6,183,168,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
       ADD DIALOG "ADRSTICHW",1,33,180,55,16,1,"&OK",1,1
       ADD DIALOG "ADRSTICHW",1,93,180,55,16,0,"&Abbrechen",0,0
       DIALOG "ADRSTICHW",req5%
       MOUSE ON 
       REMOVE DIALOG "ADRSTICHW"
       IF req5% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         sunast$ = "*" + LEFT$ (LAuswahl$) + "*"
       ELSE 
         ok% = 0
         AdrSuche% = 0
         REDIM AdrFound$( RECCOUNT ("ADRESSEN"))
         GOTO Ende1adrsu
       END IF 
       MOUSE OFF 
       FILE "adressen"
       IF suna$ = "" AND suana1$ = "" THEN 
         FILE "adressen"
         INDEX feld$$
         a% = 0
         SELECT FIRST 
         SELECT KEY suna$ INDEX feld$$
         adrmax% = RECCOUNT ("ADRESSEN")
         cp% = 0
         lp% = 0
         pc% = 0
         WHILE NOT EOF ("adressen")
           pc% = pc% + 1
           cp% = INT (100 / adrmax% * pc%)
           IF cp% <> lp% THEN 
             SET STATUS "Verarbeitung: " + STR$ (cp%,"999") + "%"
             lp% = cp%
           END IF 
           IF Stichwort.ADRESSEN LIKE sunast$ THEN 
             sok% = - 1
             IF MNdisabled%("DATALOCK") THEN 
               IF Sperre.ADRESSEN <> 0 AND Sperre.ADRESSEN <> vcodema% THEN sok% = 0
             END IF 
             IF sok% THEN 
               AdrFound$(a%) = LTRIM$ (nachname) + ", " + LTRIM$ (vorname) + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Stra·e) + ", " + LTRIM$ (telefon1) + SPACE$ (120) + STR$ (codeku,"000000")
               a% = a% + 1
             END IF 
           END IF 
           SELECT NEXT 
         WEND 
         AdrFound$(a%) = ""
         SET STATUS "Bereit"
         IF a% = 0 THEN 
           CALL Fehler("Es wurde keine Adresse mit diesem Stichwort gefunden!","")
           AdrSuche% = 0
           ok% = 0
         END IF 
       END IF 
     END IF 
     IF feld$ <> "Kostenstelle.ADRESSEN" THEN 
         a% = 0
         locktest% = MNdisabled%("DATALOCK")
         INDEX feld$$
         i% = 1
         ok% = 1
         SELECT FIRST 
         z% = LEN (suna$)
         suna2$ = suna$
         WHILE i% <= z% AND ok% = 1
           SELECT FIRST 
           x% = ASC ( MID$ ( UCASE$ (suna$),i%,1))
           SELECT CASE x%
             CASE 142
               SELECT KEY suna$ INDEX feld$$
               ok% = 0
             CASE 153
               SELECT KEY suna$ INDEX feld$$
               ok% = 0
             CASE 154
               SELECT KEY suna$ INDEX feld$$
               ok% = 0
             CASE ELSE 
               SELECT FIRST 
               suna2$ = suna$
               SELECT KEY suna2$ INDEX feld$$
           END SELECT 
           i% = i% + 1
         WEND 
         IF suna1$ = suna$ THEN suna1$ = suna2$
         suna$ = suna2$
         lensuna% = LEN (suna$)
         lensuna1% = LEN (suna1$)
         IF suna$ <> suna1$ THEN 
           x% = ASC ( LEFT$ ( UCASE$ (suna$),1))
           SELECT CASE x%
             CASE 142,65
             suna3$ = suna$ + "*"
             suna4$ = suna1$ + "*"
             EXECUTE "select where feld$$ like suna3$ or feld$$ like suna4$ OR LEFT$ ( UCASE$ (feld$$),lensuna1%) <= suna1$ OR ASC ( LEFT$ ( UCASE$ (feld$$),1)) = 142"
             REM 071098
             SELECT FIRST 
             WHILE NOT EOF ("adressen")
             CASE 153,79
             EXECUTE "select where feld$$ like suna3$ or feld$$ like suna4$ OR LEFT$ ( UCASE$ (feld$$),lensuna1%) <= suna1$ OR ASC ( LEFT$ ( UCASE$ (feld$$),1)) = 153"
             REM 071098
             SELECT FIRST 
             WHILE NOT EOF ("adressen")
             CASE 154,85
             EXECUTE "select where feld$$ like suna3$ or feld$$ like suna4$ OR LEFT$ ( UCASE$ (feld$$),lensuna1%) <= suna1$ OR ASC ( LEFT$ ( UCASE$ (feld$$),1)) = 154"
             REM 071098
             SELECT FIRST 
             WHILE NOT EOF ("adressen")
             CASE ELSE 
             EXECUTE "select where feld$$ like suna3$ or feld$$ like suna4$ OR LEFT$ ( UCASE$ (feld$$),lensuna1%) <= suna1$
             REM 071098
             SELECT FIRST 
             WHILE NOT EOF ("adressen")
           END SELECT 
           REM WHILE (feld$$ LIKE suna$ + "*" OR feld$$ LIKE suna1$ + "*" OR LEFT$ ( UCASE$ (feld$$),lensuna1%) <= suna1$) AND NOT EOF ("adressen")
         END IF 
         IF suna$ = suna1$ THEN 
           x% = ASC ( LEFT$ ( UCASE$ (suna$),1))
           suna3$ = suna$ + "*"
           SELECT CASE x%
             CASE 142,65
             EXECUTE "select where feld$$ like suna3$ OR ASC ( LEFT$ ( UCASE$ (feld$$),1)) = 142"
             REM 071098
             SELECT FIRST 
             WHILE NOT EOF ("adressen")
             CASE 153,79
              EXECUTE "select where feld$$ like suna3$ OR ASC ( LEFT$ ( UCASE$ (feld$$),1)) = 153"
             REM 071098
             SELECT FIRST 
             WHILE NOT EOF ("adressen")
             CASE 154,85
              EXECUTE "select where feld$$ like suna3$ OR ASC ( LEFT$ ( UCASE$ (feld$$),1)) = 154"
             REM 071098
             SELECT FIRST 
             WHILE NOT EOF ("adressen")
             CASE ELSE 
             REM IF RIGHT$ (suna$,1) <> "*" THEN suna$ = suna$ + "*"
             SELECT FIRST 
             SELECT KEY suna$ INDEX feld$$
             suna3$ = suna$ + "*"
             EXECUTE "select where feld$$ like suna3$"
             WHILE LEFT$ ( UCASE$ (nachname.adressen), LEN (suna1$)) <= suna1$ AND NOT EOF ("adressen")
           END SELECT 
         END IF 
           sok% = - 1
           IF locktest% THEN 
             IF Sperre.ADRESSEN <> 0 AND Sperre.ADRESSEN <> vcodema% THEN sok% = 0
           END IF 
           IF sok% THEN 
             codeku% = codeku.adressen
             IF suna$ <> suna1$ THEN 
               y% = ASC ( LEFT$ ( UCASE$ (feld$$),1))
               SELECT CASE y%
                 CASE 142,65
                   y% = 142
                 CASE 153,79
                   y% = 153
                 CASE 154,85
                   y% = 154
               END SELECT 
               IF LEFT$ ( UCASE$ (feld$$),lensuna1%) <= suna1$ OR ASC ( LEFT$ ( UCASE$ (feld$$),1)) = y% THEN 
                 IF stichw$ <> "j" THEN 
                   AdrFound1$ = LTRIM$ (nachname) + ", " + LTRIM$ (vorname) + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Stra·e) + ", "
                   IF EXISTS (codeku,codeku.telefon) THEN 
                     SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
                     WHILE NOT EOF ("telefon") AND codeku.telefon = codeku%
                       AdrFound1$ = AdrFound1$ + LTRIM$ (nummer.telefon) + ","
                       SELECT NEXT FILE "Telefon" INDEX codeku.telefon
                     WEND 
                   END IF 
                   AdrFound$(a%) = AdrFound1$ + SPACE$ (120) + STR$ (codeku,"000000")
                   a% = a% + 1
                   SET STATUS "Anzahl gefundene Adressen: " + STR$ (a%,"99999999") + " " + nachname.adressen
                 ELSE 
                   IF stichwort.adressen LIKE sunast$ THEN 
                     AdrFound1$ = LTRIM$ (nachname) + ", " + LTRIM$ (vorname) + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Stra·e) + ", "
                     IF EXISTS (codeku,codeku.telefon) THEN 
                       SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
                       WHILE NOT EOF ("telefon") AND codeku.telefon = codeku%
                         AdrFound1$ = AdrFound1$ + LTRIM$ (nummer.telefon) + ","
                         SELECT NEXT FILE "Telefon" INDEX codeku.telefon
                       WEND 
                     END IF 
                     AdrFound$(a%) = AdrFound1$ + SPACE$ (120) + STR$ (codeku,"000000")
                     a% = a% + 1
                     SET STATUS "Anzahl gefundene Adressen: " + STR$ (a%,"99999999") + " " + nachname.adressen
                   END IF 
                 END IF 
               END IF 
             ELSE 
               IF stichw$ <> "j" THEN 
                 AdrFound1$ = LTRIM$ (nachname) + ", " + LTRIM$ (vorname) + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Stra·e) + ", "
                 IF EXISTS (codeku,codeku.telefon) THEN 
                   SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
                   WHILE NOT EOF ("telefon") AND codeku.telefon = codeku%
                     AdrFound1$ = AdrFound1$ + LTRIM$ (nummer.telefon) + ","
                     SELECT NEXT FILE "Telefon" INDEX codeku.telefon
                   WEND 
                 END IF 
                 AdrFound$(a%) = AdrFound1$ + SPACE$ (120) + STR$ (codeku,"000000")
                 a% = a% + 1
                 SET STATUS "Anzahl gefundene Adressen: " + STR$ (a%,"99999999") + " " + nachname.adressen
               ELSE 
                 IF stichwort.adressen LIKE sunast$ THEN 
                   AdrFound1$ = LTRIM$ (nachname) + ", " + LTRIM$ (vorname) + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Stra·e) + ", "
                   IF EXISTS (codeku,codeku.telefon) THEN 
                     SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
                     WHILE NOT EOF ("telefon") AND codeku.telefon = codeku%
                       AdrFound1$ = AdrFound1$ + LTRIM$ (nummer.telefon) + ","
                       SELECT NEXT FILE "Telefon" INDEX codeku.telefon
                     WEND 
                   END IF 
                   AdrFound$(a%) = AdrFound1$ + SPACE$ (120) + STR$ (codeku,"000000")
                   a% = a% + 1
                   SET STATUS "Anzahl gefundene Adressen: " + STR$ (a%,"99999999") + " " + nachname.adressen
                 END IF 
               END IF 
             END IF 
           END IF 
           FILE "adressen"
           SELECT NEXT FILE "adressen" INDEX feld$$
           x% = ASC ( LEFT$ ( UCASE$ (feld$$),1))
         WEND 
         SELECT WHERE FILE "adressen"
         AdrFound$(a%) = ""
       ELSE 
         a% = 0
         INDEX feld$$
         SELECT FIRST 
         suna% = VAL (suna$)
         SELECT KEY suna% INDEX feld$$
         WHILE feld$$ = suna% AND NOT EOF ("adressen")
           sok% = - 1
           IF MNdisabled%("DATALOCK") THEN 
             IF Sperre.ADRESSEN <> 0 AND Sperre.ADRESSEN <> vcodema% THEN sok% = 0
           END IF 
           IF sok% THEN 
             AdrFound$(a%) = LTRIM$ (nachname) + ", " + LTRIM$ (vorname) + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Stra·e) + ", " + LTRIM$ (telefon1) + SPACE$ (120) + STR$ (codeku,"000000")
             a% = a% + 1
           END IF 
           SELECT NEXT 
         WEND 
         AdrFound$(a%) = ""
       END IF 
     END IF 
Telf070796: 
     LAuswahl$ = AdrFound$(0)
     LAuswahl1$(0) = LAuswahl$
     req3% = 0
     IF a% <> 0 THEN 
     IF _projekt$ LIKE "PROVIS" THEN 
       MENU 3,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
     ELSE 
       MENU 4,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
     END IF 
       CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"MS Sans Serif",8
       ADD DIALOG "ADRLISTE",7,5,8,328,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
       ADD DIALOG "ADRLISTE",1,114,174,56,16,1,"&OK",1,1
       ADD DIALOG "ADRLISTE",1,174,174,56,16,0,"&Abbrechen",0,0
       DIALOG "ADRLISTE",req3%
       MOUSE ON 
       REMOVE DIALOG "ADRLISTE"
       IF req3% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         AdrSuche% = VAL ( RIGHT$ (LAuswahl$,6))
         adrfound% = VAL ( RIGHT$ (LAuswahl$,6))
         ok% = 0
         SET STATUS "Adresse gefunden..."
       ELSE 
         AdrSuche% = 0
       END IF 
     ELSE 
       adrfound% = 0
       IF _projekt$ LIKE "PROVIS" THEN 
         MENU 3,6,0
       ELSE 
         MENU 4,6,0
       END IF 
     END IF 
     IF AdrSuche% = 0 AND ok% = 1 THEN 
       AdrSuche% = 0
       ok% = 1
       REQUEST "Eintrag nicht gefunden!","Erweiterte Suche durchfÅhren?",135,req2%
       IF req2% = 1 THEN 
         ok% = 1
       ELSE 
         ok% = 0
       END IF 
     END IF 
     REM REDIM AdrFound$( RECCOUNT ("ADRESSEN"))
   END IF 
   IF AdrSuche% = 0 AND ok% = 1 THEN 
     suna$ = "*" + suna$ + "*"
     REM SET STATUS "Adre·suche nach " + feld$ + " = " + suna$
     SET STATUS "Adre·suche lÑuft..."
     wi% = 0
     CALL Server("LISTBOXINIT","Adre·auswahl")
     FILE "adressen"
     SELECT FIRST 
     MOUSE OFF 
     CALL Gauge(1,"Adre·datei wird durchsucht...")
     CALL Server("GAUGEENABLECANCEL","")
     _prozt% = 0
     _proz2% = 0
     _anz% = RECCOUNT ("adressen")
     WHILE NOT EOF ("adressen") AND ServerReply$() <> "CANCEL"
       _proz% = INT ((100 / _anz%) * _proz2%)
       IF _proz% > 100 THEN _proz% = 100
       IF _proz% < 2 THEN _proz% = 2
       IF _proz% <> _prozt% THEN 
         _prozt% = _proz%
         SET STATUS "erweiterte Suche... " + STR$ (_prozt%,"999") + " %"
         CALL Gauge(_proz%,"")
       END IF 
       _proz2% = _proz2% + 1
       adrfound% = 0
       SELECT CASE feld$
       CASE "Kundennummer.ADRESSEN"
         IF Kundennummer.adressen LIKE suna$ THEN adrfound% = 1
       CASE "Telefon1.ADRESSEN"
         IF Telefon1.adressen LIKE suna$ THEN adrfound% = 1
         IF Telefon2.ADRESSEN LIKE suna$ THEN adrfound% = 1
         IF Telefax.ADRESSEN LIKE suna$ THEN adrfound% = 1
         REM IF ASTelefax.ADRESSEN LIKE suna$ THEN adrfound% = 1
         REM IF ASTelefon1.ADRESSEN LIKE suna$ THEN adrfound% = 1
         REM IF ASTelefon2.ADRESSEN LIKE suna$ THEN adrfound% = 1
       CASE "Nachname.ADRESSEN","Vorname.ADRESSEN"
         IF Nachname.adressen LIKE suna$ THEN adrfound% = 1
         IF Vorname.adressen LIKE suna$ THEN adrfound% = 1
         IF Geburtsname.adressen LIKE suna$ THEN adrfound% = 1
       CASE "Stra·e.ADRESSEN"
         IF Stra·e.adressen LIKE suna$ THEN adrfound% = 1
         REM IF ASStra·e.adressen LIKE suna$ THEN adrfound% = 1
       CASE "Ort.ADRESSEN"
         IF Ort.adressen LIKE suna$ THEN adrfound% = 1
         REM IF ASOrt.adressen LIKE suna$ THEN adrfound% = 1
       CASE "PLZ.ADRESSEN"
         IF PLZ.adressen LIKE suna$ THEN adrfound% = 1
         REM IF ASPLZ.adressen LIKE suna$ THEN adrfound% = 1
       CASE "Stichwort.ADRESSEN"
         IF Stichwort.adressen LIKE suna$ THEN adrfound% = 1
         IF Notiz.adressen LIKE suna$ THEN adrfound% = 1
       END SELECT 
       IF adrfound% = 1 THEN 
         ok% = - 1
         IF MNdisabled%("DATALOCK") THEN 
           IF Sperre.ADRESSEN <> 0 AND Sperre.ADRESSEN <> vcodema% THEN ok% = 0
         END IF 
         IF ok% THEN 
           tmpZeile$ = Nachname.adressen + ", " + Vorname.adressen + ", " + ort.adressen + " (" + STR$ (CodeKU.adressen,"000000") + ")"
           wi% = wi% + 1
           CALL Server("GaugeMessage","Adre·datei wird durchsucht... " + TRIM$ ( STR$ (wi%,"9999")) + " gefunden (" + Nachname.Adressen + ", " + LEFT$ (Vorname.ADRESSEN,1) + ".)")
           CALL Server("LISTBOXADD",tmpZeile$)
         END IF 
       END IF 
       SELECT NEXT FILE "adressen"
     WEND 
     CALL Gauge(0,"")
     SET STATUS "Bereit"
     IF wi% <> 0 THEN 
       SET STATUS "Bitte wÑhlen Sie eine Adresse aus"
       IF _projekt$ LIKE "PROVIS" THEN 
         MENU 3,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche"
       ELSE 
         MENU 4,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche"
       END IF 
       CALL Server("LISTBOXSHOW","Bitte wÑhlen Sie die gewÅnschte Adresse aus:")
       erg$ = ServerReply$()
       IF erg$ <> "" THEN 
         ADRSuche% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
       ELSE 
         ADRSuche% = 0
       END IF 
     ELSE 
       CALL Fehler("Keine entsprechende Adresse gefunden!","")
       ADRSuche% = 0
     END IF 
   END IF 
   tfoundadr% = a%
   adrglob% = 0
 ELSE 
   tfoundadr% = 0
   IF _projekt$ LIKE "PROVIS" THEN 
     REM MENU 3,6,0,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
   ELSE 
     REM MENU 4,6,0,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
   END IF 
   adrglob% = 0
 END IF 
 MENU 3,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
Ende1adrsu: 
 SET STATUS "Bereit"
 MOUSE ON 
 FILE cfile$
 END FUNCTION 
  
SUB ADRKurzSuche()
 GTermAusw% = 0
 IF GCODIE% = - 1 THEN 
   c$ = "aa"
   req3% = CALL ("_SearchReShow",c$)
   REM REQUEST c$,"",2
   REM ret% = CALL ("_SearchClose")
   IF VAL (c$) <> 0 THEN 
     AdrSuche% = VAL (c$)
     adrfound% = VAL (c$)
     adr% = VAL (c$)
     ok% = 0
     SET STATUS "Adresse gefunden..."
   END IF 
   IF req3% = 2 THEN 
     adrser% = 1
     CALL SerieNeu1(GAdrDat$)
     GOTO andadrkurz
     END IF 
   ELSE 
     IF adrfound% < 1 THEN END SUB 
     prompt% = 0
     FOR a% = 0 TO tfoundadr%
       IF AdrFound$(a%) <> "" AND VAL ( RIGHT$ (Adrfound$(a%),6)) = adrfound% THEN 
         IF prompt% = 0 THEN prompt% = a%
       END IF 
     NEXT a%
   cuknr% = Codeku.GAdrDat$
   LAuswahl$ = LAuswahl1$(0)
   AdrFound$ = LAuswahl$
   adrfound% = 1
   CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"MS Sans Serif",8
   REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
   ADD DIALOG "ADRLISTE",7,5,8,328,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(prompt%)
   ADD DIALOG "ADRLISTE",1,74,174,56,16,1,"&OK",1,1
   ADD DIALOG "ADRLISTE",1,134,174,56,16,0,"&Abbrechen",0,0
   IF noserie% = 0 THEN ADD DIALOG "ADRLISTE",1,194,174,56,16,0,"&Serienbrief",2,0
   DIALOG "ADRLISTE",req3%
   MOUSE ON 
   REMOVE DIALOG "ADRLISTE"
   IF req3% = 1 THEN 
     LAuswahl$ = LAuswahl1$(0)
     adr% = VAL ( RIGHT$ (LAuswahl$,6))
     adrfound% = adr%
     ok% = 0
     SET STATUS "Adresse gefunden..."
   ELSE 
     adr% = 0
   END IF 
 END IF 
 adrhis% = 0
 IF adr% <> 0 THEN 
   cuknr% = adr%
   REM 22072003
   adrhis% = - 1
 END IF 
 SELECT KEY cuknr% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
 IF adrhis% = - 1 THEN 
   BLANK FILE "ADRHIS"
   codekey.adrhis = SER ("ADRHIS",1)
   codema.adrhis = GMACodeMA%
   codeku.adrhis = cuknr%
   name.adrhis = LEFT$ (Nachname.adressen + "/" + Vorname.adressen + "/" + Ort.adressen + "/" + Stra·e.adressen,200)
   QCodeMAKey.adrhis = STR$ (GMACodeMA%,"000000") + STR$ (codekey.adrhis,"000000")
   timestamp$ = DATE$ ( TODAY ,"yymmdd") + STR$ ( HRS ( NOW ) * 100 + MINS ( NOW ),"0000")
   timestamp% = VAL (timestamp$)
   Timestamp.adrhis = timestamp%
   STORE FILE "ADRHIS"
 END IF 
 knr% = cuknr%
 CALL ADRFeldnamen()
 SET INDEX INDEX 
 FORM 
 MOUSE ON 
andadrkurz: 
 END SUB 
  
SUB TERKurzSuche()
      IF GCODIE% = - 1 THEN 
       c$ = "aa"
       REM CALL Fehler("","")
       req3% = CALL ("_SearchReShow",c$)
       REM CALL Fehler( STR$ (req%),"")
       IF req3% = 3 THEN 
         req% = 2
       ELSE 
         IF VAL (c$) <> 0 THEN 
           req% = 1
           _cuaq% = VAL (c$)
           REM MENU 4,2,1,"aus Suchliste &wÑhlen,F7","DokKurzSuche","Auflistung aller vorher gesuchten Dokumente"
           ok% = 0
           SET STATUS "Termine gefunden..."
         ELSE 
           IF req3% = 2 THEN 
             req% = 3
           ELSE 
             req% = 0
           END IF 
         END IF 
       END IF 
       aaaak% = aaaak% + 1
     ELSE 
       Superbase.Dialogs.Add("TERLISTE")
       SET dlg = Superbase.Dialogs.TERLISTE
       dlg.Move(0,0,440,297)
       dlg.Caption = "TerminÅbersicht"
       dlg.FontName = "MS Sans Serif"
       dlg.FontSize = 8
 
       SET control = dlg.Add("DialogListBox1","DialogListBox")
       control.Move(4,8,429,256)
       control.MultiSelect = 1
       control.ScrollBars = 2
       control.Bind("Termine$","Auswahl$","prompt$")
 
       SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
       control.Move(10,273,124,16)
       control.Default = 1
       control.Caption = "&zum einzelnen Termin springen"
       control.ReturnValue = 1
 
       SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
       control.Move(140,273,56,16)
       control.Caption = "&Drucken"
       control.ReturnValue = 2
 
       SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
       control.Move(201,273,56,16)
       control.Caption = "Dat&ei"
       control.ReturnValue = 3
 
       SET control = dlg.Add("DialogCommandButton6","DialogCommandButton")
       control.Move(261,273,56,16)
       control.Caption = "EXCEL"
       control.ReturnValue = 5
 
       SET control = dlg.Add("DialogCommandButton5","DialogCommandButton")
       control.Move(321,273,56,16)
       control.Caption = "Er&ledigen"
       control.ReturnValue = 4
 
       SET control = dlg.Add("DialogCommandButton4","DialogCommandButton")
       control.Move(381,273,56,16)
       control.Caption = "&Abbruch"
       control.ReturnValue = 0
       control.Cancel = 1
       DIALOG "TERLISTE",req%
       REMOVE DIALOG ALL 
     END IF 
     IF req% = 0 THEN 
       _formend% = 0
       GOTO e240520021
     END IF 
     IF req% = 1 THEN 
       ok% = 1
       IF GCODIE% <> - 1 THEN 
         _cuaq% = VAL ( RIGHT$ (Auswahl$(0),6))
       END IF 
       prompt$ = Auswahl$(0)
       lastTermin% = _cuaq%
       SELECT KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       knr% = codeku.GAkquiDat$
       _vcodema% = codema.GAkquiDat$
       IF FORM LIKE "Akqui*" THEN 
           SELECT KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           SELECT KEY codeku.GAkquiDat$ FILE "Adressen" INDEX codeku.adressen
           SELECT KEY codeku.GAkquiDat$ FILE "telefon" INDEX codeku.telefon
           CALL AKQUISEIntro()
           SELECT FORM KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           FORM 
           SET DISPLAY ON 
           CALL AQButtUpdate()
       ELSE 
         CALL TerLiSpez(_cuaq%)
         _formend% = 0
       END IF 
       REM GOTO TLi260320003
     END IF 
     REM EXCEL-Datei erzeugen
     IF req% = 5 THEN 
       ON ERROR GOTO ErrorHandler
       IF OPEN ("AKQTMP1") THEN CLOSE FILE "AKQTMP1"
       IF EXISTS (GMACodeDir$ + "AKQTMP1.sbf") THEN 
         DELETE GMACodeDir$ + "AKQTMP1.*"
       END IF 
       COPY _netpath$ + "\OFFICE\AKQTMP1.*" TO GMACodeDir$
       OPEN FILE SHARE ,0GMACodeDir$ + "AKQTMP1;paris"
       FOR i% = 0 TO tfound% - 1
         SET STATUS STR$ (i%,"9999999")
         codeaq% = VAL ( RIGHT$ (Termine$(i%),6))
         SELECT KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         SELECT FIRST FILE GAdrDat$ INDEX codeku.GAdrDat$
         IF codeku.GAkquiDat$ > 0 AND EXISTS (codeku.GAkquiDat$,codeku.GADRDat$) THEN 
           SELECT KEY codeku.GAkquiDat$ FILE GAdrDat$ INDEX codeku.GAdrDat$
           BLANK FILE "AKQTMP1"
           ber.AKQTMP1 = LEFT$ (bearbeiter.GAkquiDat$,3)
           REM datum.AKQTMP1 = datum.GAkquiDat$
           REM notiz.AKQTMP1 = notiz.GAkquiDat$
           IF termin.GAkquiDat$ > 0 THEN termin.AKQTMP1 = termin.GAkquiDat$
           IF Uhrzeit.GAkquiDat$ > 0 THEN Uhrzeit.AKQTMP1 = Uhrzeit.GAkquiDat$
           Kunde.AKQTMP1 = LTRIM$ (nachname.GAkquiDat$)
           ergebnis.AKQTMP1 = ergebnis.GAkquiDat$
           REM tnr.akqtmp1 = terminnr.GAkquiDat$
           AkquiseTag.akqtmp1 = AkquiseTag.GAkquiDat$
           Ft1.akqtmp1 = Folgetermin1.GAkquiDat$
           IF Folgezeit1.GAkquiDat$ <> 0 THEN zeit1.akqtmp1 = Folgezeit1.GAkquiDat$
           Ft2.akqtmp1 = Folgetermin2.GAkquiDat$
           IF Folgezeit2.GAkquiDat$ <> 0 THEN zeit2.akqtmp1 = Folgezeit2.GAkquiDat$
           IF ErDatum.GAkquiDat$ > 0 THEN 
             VorlageTermin.akqtmp1 = ErDatum.GAkquiDat$
             IF ErZeit.GAkquiDat$ <> 0 THEN Vorlagezeit.akqtmp1 = ErZeit.GAkquiDat$
           END IF 
           ort.akqtmp1 = ort.GAkquiDat$
           az.akqtmp1 = az.GAkquiDat$
           bba.akqtmp1 = bba.GAkquiDat$
           sonstiges.akqtmp1 = sonstiges.GAkquiDat$
           STORE FILE "AKQTMP1"
         END IF 
       NEXT i%
       REM CALL Fehler("","")
       FILE "AKQTMP1"
       INDEX Termin.AKQTMP1
       IF RECCOUNT ("AKQTMP1") > 0 THEN 
         SELECT FIRST LOCK FILE "AKQTMP1"
       ELSE 
         SELECT LAST FILE "AKQTMP1"
       END IF 
       k% = 0
       WHILE NOT EOF ("AKQTMP1")
         k% = k% + 1
         nr.akqtmp1 = k%
         STORE FILE "AKQTMP1"
         SELECT NEXT LOCK 
       WEND 
       REM OPEN FIELDS Nr,AkquiseTag,Ber,Kunde,Termin,Uhrzeit,FT1,Zeit1,FT2,Zeit2,Vorlagedatum,Vorlagezeit,Ergebnis
       IF GRiese$ LIKE "TRUE" THEN 
         OPEN FIELDS Nr,AkquiseTag,Ber,Kunde,Ort,AZ,BBA,Sonstiges,Termin,Uhrzeit,FT1,Zeit1,FT2,Zeit2,VorlageTermin,Ergebnis
       ELSE 
         OPEN FIELDS Nr,AkquiseTag,Ber,Kunde,Ort,Termin,Uhrzeit,FT1,Zeit1,FT2,Zeit2,VorlageTermin,VorlageZeit,Ergebnis
       END IF 
       SELECT FIRST FILE "AKQTMP1"
       IF EXISTS (GMACodeDir$ + "AKQTMP1.xls") THEN 
         DELETE GMACodeDir$ + "AKQTMP1.xls"
       END IF 
       DIRECTORY GMACodeDir$:REM     
       ON ERROR GOTO TagestErrExc011
       Superbase.Converters.SBF.SourceFormat = "Superbase"
       Superbase.Converters.SBF.SourceFile = "AKQTMP1"
       Superbase.Converters.SBF.Descending = 0
       Superbase.Converters.SBF.Merge = 0
       Superbase.Converters.SBF.LogErrors = 0
       Superbase.Converters.SBF.MultiResponse = 0
       Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
       Superbase.Converters.XLS.DestFile = GMACodeDir$ + "AKQTMP1.XLS"
       Superbase.Converters.XLS.StartRow = 2
       Superbase.Converters.XLS.StartCol = 1
       Superbase.Converters.XLS.EndRow = - 1
       Superbase.Converters.XLS.EndCol = - 1
       Superbase.Converters.XLS.UseLabels = - 1
       Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
       WAIT FOR 3
       CALL Fehler("Excel-Termindatei wurde erstellt!",GMACodeDir$ + "AKQTMP1.XLS")
       IF EXISTS (GMACodeDir$ + "AKQTMP1.xls") THEN 
         a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "AKQTMP1.XLS","","",1)
       END IF 
       GOTO TagestErrExc021
TagestErrExc011: 
       ON ERROR GOTO ErrorHandler
       CALL Fehler("Es ist ein Fehler aufgetreten!","Bitte prÅfen Sie, ob die Datei " + GMACodeDir$ + "AKQTMP1.XLS in EXCEL geîffnet ist, ggf. bitte schlie·en und nochmal probieren!")
TagestErrExc021: 
       cdir$ = DIRECTORY 
     END IF 
     IF req% = 2 THEN 
       REM Drucken
       MOUSE OFF 
       IF OPEN ("AKQTMP") THEN CLOSE FILE "AKQTMP"
       IF EXISTS (GMACodeDir$ + "AKQTMP.sbf") THEN DELETE GMACodeDir$ + "AKQTMP.*")
       COPY _netpath$ + "\OFFICE\AKQTMP.*" TO GMACodeDir$
       OPEN FILE SHARE ,0GMACodeDir$ + "AKQTMP;paris"
       FOR i% = 0 TO tfound% - 1
         SET STATUS STR$ (i%,"9999999")
         codeaq% = VAL ( RIGHT$ (Termine$(i%),6))
         SELECT KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         BLANK FILE "AKQTMP"
         codeku.AKQTMP = codeku.GAkquiDat$
         codeak.akqtmp = codeak.GAkquiDat$
         bearbeiter.AKQTMP = bearbeiter.GAkquiDat$
         codema.AKQTMP = codema.GAkquiDat$
         datum.AKQTMP = datum.GAkquiDat$
         notiz.AKQTMP = notiz.GAkquiDat$
         termin.AKQTMP = termin.GAkquiDat$
         erledigt_termin.AKQTMP = erledigt_termin.GAkquiDat$
         codeaq.AKQTMP = codeaq.GAkquiDat$
         Uhrzeit.AKQTMP = Uhrzeit.GAkquiDat$
         nachname.AKQTMP = nachname.GAkquiDat$
         ergebnis.AKQTMP = ergebnis.GAkquiDat$
         projekt.AKQTMP = projekt.GAkquiDat$
         codepr.AKQTMP = codepr.GAkquiDat$
         dauer.AKQTMP = dauer.GAkquiDat$
         DME.AKQTMP = dme.GAkquiDat$
         terminnr.akqtmp = terminnr.GAkquiDat$
         STORE FILE "AKQTMP"
       NEXT i%
       cdir$ = DIRECTORY 
       DIRECTORY _netpath$ + "OFFICE"
       CALL ORep("TERMINE2")
       HEADING 
       SET REPORT PAGE "H_PAGE"
       OUTPUT REPORT PAGE 
       END HEADING 
       AFTER SELECT 
       SET REPORT PAGE "F_SELECT"
       OUTPUT REPORT PAGE 
       END SELECT 
       SET QUERY ON 
       SET QUERY LOCK ON 
       Ueberschr$ = "TerminÅbersicht Åber " + tart$ + " von: " + von$ + " bis: " + bis$ + " fÅr Mitarbeiter: " + ma$ + " und Aktion: " + ak$
       ON ERROR GOTO TD0104200011
       SELECT ;
       WHERE codeak.AKQTMP = codeak.aktionen AND CodeKU.AKQTMP = CodeKU.GAdrDat$
       ORDER Termin.AKQTMP,Uhrzeit.AKQTMP
       TO ASK 
       END SELECT 
TD0104200011: 
       ON ERROR GOTO ErrorHandler
       DIRECTORY cdir$
       MOUSE ON 
       REM GOTO TLi260320003
     END IF 
 
     IF req% = 3 THEN 
       CALL TagestExp(Termine$(),tfound%)
       GOTO TLi260320003
     END IF 
     REM markierte erledigen 04052001
     IF req% = 4 THEN 
       i% = 0
       MOUSE OFF 
       WHILE Auswahl$(i%) <> ""
         _cuaq% = VAL ( RIGHT$ (Auswahl$(i%),6))
         SELECT KEY _cuaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         GErledTermin$ = erledigt_Termin.GAkquiDat$
         erledigt_Termin.GAkquiDat$ = "j"
         CALL QuickStore(GAkquiDat$)
         MOUSE OFF 
         i% = i% + 1
       WEND 
       MOUSE ON 
       REDIM Termine$(tfound%,1)
       REDIM Termine$(tfound%)
       REM FOR a% = 0 TO tfound% - 1
         REM Termine$(a%) = ""
       REM NEXT a%
       CALL Fehler("Termin(e) wurden als erledigt gekennzeichnet","")
       REM GOTO A060420001
     END IF 
   ELSE 
     CALL Fehler("Es wurden keine Termine gefunden, die den Auswahlkriterien entsprachen!","")
   END IF 
 END IF 
e240520021: 
 MOUSE ON 
 REM IF GCODieRuf% = - 1 THEN 
   REM ret% = CALL ("_SearchClose")
   REM GCODieRuf% = 0
 REM END IF 
 END SUB 


SUB PROKurzSuche()
 codepr% = codepr.project
 IF GCODIE% = - 1 THEN 
   c$ = "aa"
   req3% = CALL ("_SearchReShow",c$)
   REM REQUEST c$,"",2
   REM ret% = CALL ("_SearchClose")
   IF VAL (c$) <> 0 THEN 
     PRJSuche% = VAL (c$)
     adrfound% = VAL (c$)
     adr% = VAL (c$)
     ok% = 0
     SET STATUS "Projekt gefunden..."
   END IF 
   IF req3% = 2 AND adrfound% > 0 THEN 
     CALL Fehler("Diese Funktion wird nur innerhalb der Adressmaske unterstÅtzt!","")
     GOTO andadrkurzp1
   END IF 
 ELSE 
   LAuswahl$ = LAuswahl1$(0)
   AdrFound$ = LAuswahl$
   adrfound% = 1
   CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"MS Sans Serif",8
   REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
   ADD DIALOG "ADRLISTE",7,5,8,328,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(prompt%)
   ADD DIALOG "ADRLISTE",1,74,174,56,16,1,"&OK",1,1
   ADD DIALOG "ADRLISTE",1,134,174,56,16,0,"&Abbrechen",0,0
   REM IF noserie% = 0 THEN ADD DIALOG "ADRLISTE",1,194,174,56,16,0,"&Serienbrief",2,0
   DIALOG "ADRLISTE",req3%
   MOUSE ON 
   REMOVE DIALOG "ADRLISTE"
   IF req3% = 1 THEN 
     LAuswahl$ = LAuswahl1$(0)
     adr% = VAL ( RIGHT$ (LAuswahl$,6))
     adrfound% = adr%
     ok% = 0
     SET STATUS "Projekt gefunden..."
   ELSE 
     adr% = 0
   END IF 
 END IF 
andadrkurzp1: 
 IF adr% <> 0 THEN codepr% = adr%
 SELECT KEY codepr% FILE "PROJECT" INDEX CodePR.PROJECT
 CALL PRJFeldnamen()
 SET INDEX INDEX 
 FORM 
 MOUSE ON 
andadrkurzp: 
 END SUB 
 
SUB ADRWahl()
 MOUSE OFF 
 CALL Server("LISTBOXSHOW","Bitte wÑhlen Sie die gewÅnschte Adresse aus:")
 cfile$ = FILE 
 FILE "ADRESSEN"
 cindex$ = INDEX 
 erg$ = ServerReply$()
 IF erg$ <> "" THEN 
   cuknr% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
   SELECT KEY cuknr% FILE "adressen" INDEX CodeKU.adressen
   SELECT FORM KEY cuknr% FILE "adressen" INDEX CodeKU.adressen
   CALL ADRFeldnamen()
   SET INDEX cindex$$
   FORM 
 END IF 
 INDEX cindex$$
 MOUSE ON 
 END SUB 
 
 
 ' Filter fÅr Adressen setzen
 ' ====================================================================== 
  
SUB ADRFilter1()
 CALL DFile(2,"OFFICE\keywords" + _fpw$)
 IF WHERE = "" THEN 
   opt% = 1
   stichw$ = "n"
   stichwort$ = ""
   CREATE DIALOG "ADRFilter",0,0,109,110,title$,"MS Sans Serif",8
   ADD DIALOG "ADRFilter",4,4,1,101,77,0," Suche nach "
   ADD DIALOG "ADRFilter",3,8,12,34,12,0,"Anrede",1,opt%
   ADD DIALOG "ADRFilter",3,8,24,69,12,0,"Nachname/Firma",2,opt%
   ADD DIALOG "ADRFilter",3,8,36,22,12,0,"Ort",3,opt%
   ADD DIALOG "ADRFilter",3,8,48,29,12,0,"PLZ",4,opt%
   ADD DIALOG "ADRFilter",6,8,61,91,13,128,0,suna$,30
   ADD DIALOG "ADRFilter",2,4,80,85,11,0,"Stichwort einbeziehen","j","n",stichw$
   ADD DIALOG "ADRFilter",1,4,92,50,15,1,"&Weiter",1,1
   ADD DIALOG "ADRFilter",1,56,92,50,15,0,"&Abbruch",0,0
   DIALOG "ADRFilter",req%
   REMOVE DIALOG ALL 
   IF req% = 1 THEN 
     IF stichw$ = "j" THEN 
       REQUEST "Nach welchem Stichwort soll gesucht werden?","WÑhlen Sie ein Stichwort aus!",25,req%,stichwort$,72,keyword.keywords INDEX keyword.keywords
       IF req% = 0 THEN 
         stichw$ = "n"
       END IF 
     END IF 
     SELECT CASE opt%
     CASE 1
       feld$ = "Anrede.adressen"
       suna$ = suna$ + "*"
     CASE 2
       feld$ = "nachname.adressen"
       suna$ = suna$ + "*"
     CASE 3
       feld$ = "Ort.adressen"
       suna$ = suna$ + "*"
     CASE 4
       feld$ = "PLZ.adressen"
       suna$ = suna$ + "*"
     END SELECT 
     MOUSE OFF 
     SELECT WHERE FILE "adressen"
     IF suna$ = "*" THEN suna$ = "**"
     stichwort$ = "*" + stichwort$ + "*"
     IF stichw$ = "j" THEN 
       EXECUTE "SELECT WHERE FILE ~adressen~ " + feld$ + " LIKE ~" + suna$ + "~ AND Stichwort.adressen LIKE ~" + Stichwort$ + "~"
       SELECT FIRST 
     ELSE 
       EXECUTE "SELECT WHERE FILE ~adressen~ " + feld$ + " LIKE ~" + suna$ + "~"
       SELECT FIRST 
     END IF 
     SET STATUS "Suche erste öbereinstimmung..."
     SELECT FORM FIRST FILE "adressen"
     FORM 
   END IF 
 ELSE 
   SELECT WHERE FILE "adressen"
 END IF 
 MOUSE ON 
 IF WHERE <> "" THEN 
   MENU 4,3,2
 ELSE 
   MENU 4,3,1
 END IF 
 END SUB 
 
 
SUB ADRFilter2()
 CALL SelectFilter()
 IF WHERE <> "" THEN 
   MENU 4,3,2
 ELSE 
   MENU 4,3,1
 END IF 
 END SUB 
 
 
 ' Dokumentenverwaltung (Adre·bezogen mit direktem MenÅaufruf)
 ' ============================================================================
 
SUB ADRDOK()
 IF DOKsub% <> 1 THEN 
   Gruppe$ = DOKGruppen$(mnadr2% - 1)
 ELSE 
   Gruppe$ = "allgemeine Schreiben"
 END IF 
 Doksub% = 0
 knr% = CodeKU.adressen
 CALL DOKUMENT(Gruppe$,knr%)
 END SUB 
 
 
 ' Dokumentenverwaltung (Adre·bezogen Optionen|Dokumente)
 ' ============================================================================
 
SUB ADRDok()
 knr% = CodeKU.adressen
 CALL DOKUMENT(DOKGruppen$(0),knr%)
 END SUB 
 
 
 ' Eintrag eines adressenbezogenen Dokumentes in die Termindatei
 ' ============================================================================
SUB ADRDokRegister1(textdatei%,codeak%)
 SET STATUS "Eintrag in Termindatei..."
 cfile$ = FILE 
 cdir$ = DIRECTORY 
 FILE GAkquiDat$
 _vcodeak% = codeak%
 SELECT KEY textdatei% FILE "dokument" INDEX CodeDOK.dokument
 RNotiz$ = "Dokument (" + Gruppe.dokument + "): " + Dokument.dokument
 CALL AQRegister1()
 FILE cfile$
 DIRECTORY cdir$
 END SUB 
 
SUB ADRDokRegister(textdatei%)
 SET STATUS "Eintrag in Termindatei..."
 cfile$ = FILE 
 cdir$ = DIRECTORY 
 SELECT KEY textdatei% FILE "dokument" INDEX CodeDOK.dokument
 RNotiz$ = "Dokument (" + Gruppe.dokument + "): " + Dokument.dokument
 CALL AQRegister()
 FILE GAkquiDat$
 SELECT KEY cuaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 CodeDOK.GAkquiDat$ = textdatei%
 CALL QuickStore(GAkquiDat$)
 SELECT FIRST FILE "dokument" INDEX CodeDOK.dokument
 SELECT KEY textdatei% LOCK FILE "dokument" INDEX CodeDOK.dokument
 codeaq.dokument = cuaq%
 CALL QuickStore("dokument")
 FILE cfile$
 DIRECTORY cdir$
 END SUB 
 
 
 ' Adressen TelefonÅbersicht
 ' ======================================================================
 ' Zweck:       Anzeige der verfÅgbaren Telefon-/Faxnummern
 '              wahleiser Versand von Mitteilungen per FAX
 ' Nutzung:     CALL ADRTelefon()
 ' ======================================================================
 ' 0001 - Reihenfolge der Felder und Buttons geÑndert
 ' 0002 - Auswertung Fax-/Telefonnummer; öbergang zu FAX:
SUB ADRTelefon1()
  CALL TelefonListe(CodeKU.ADRESSEN)
  CALL ADRFeldnamen()
 END SUB 
 
SUB ADRTelefon()
 SET STATUS "Telefon-/FAX-Nummern..."
 SELECT CASE UCASE$ ( FORM )
 CASE GAkquiDat$
   knr% = CodeKU.GAkquiDat$
 CASE "ADRESSEN","ADRDEFA"
   knr% = CodeKU.adressen
   IF NEW ("adressen") OR MOD ("adressen") THEN CALL FStore("adressen")
 END SELECT 
 SELECT KEY knr% LOCK FILE "adressen" INDEX CodeKU.adressen
 d$ = "TELSEL"
 CREATE DIALOG d$,0,0,229,195,title$,"MS Sans Serif",8
 REM -- Rahmen --
 ADD DIALOG d$,4,4,0,220,84,0,"Hauptanschrift"
 ADD DIALOG d$,4,4,86,220,84,0,"Zweitanschrift"
 REM -- Beschriftungen --
 Voicedial$ = ReadINI$("MODEM","VoiceDial")
 VoiceISDNdial$ = ReadINI$("SYSTEM","VoiceISDNdial")
 FaxDial$ = ReadINI$("System","FAXavailable")
 ADD DIALOG d$,5,8,14,35,10,0,"Telefon 1"
 ADD DIALOG d$,5,8,27,34,10,0,"Telefon 2"
 ADD DIALOG d$,5,8,40,39,10,0,"Autotelefon"
 ADD DIALOG d$,5,8,53,16,10,0,"Fax"
 ADD DIALOG d$,5,8,66,18,10,0,"BTX"
 ADD DIALOG d$,5,8,101,32,10,0,"Telefon 1"
 ADD DIALOG d$,5,8,114,33,10,0,"Telefon 2"
 ADD DIALOG d$,5,8,127,39,10,0,"Autotelefon"
 ADD DIALOG d$,5,8,140,15,10,0,"Fax"
 ADD DIALOG d$,5,8,153,18,10,0,"BTX"
 REM -- Felder --
 ADD DIALOG d$,6,50,12,120,12,0,0,telefon1.adressen,30
 ADD DIALOG d$,6,50,25,120,12,0,0,telefon2.adressen,30
 ADD DIALOG d$,6,50,38,120,12,0,0,Autotelefon.adressen,30
 ADD DIALOG d$,6,50,51,120,12,0,0,telefax.adressen,30
 ADD DIALOG d$,6,50,64,120,12,0,0,btx.adressen,30
 ADD DIALOG d$,6,50,99,120,12,0,0,astelefon1.adressen,30
 ADD DIALOG d$,6,50,112,120,12,0,0,astelefon2.adressen,30
 ADD DIALOG d$,6,50,125,120,12,0,0,asAutotelefon.adressen,30
 ADD DIALOG d$,6,50,138,120,12,0,0,astelefax.adressen,30
 ADD DIALOG d$,6,50,151,120,12,0,0,asbtx.adressen,30
 IF VoiceDial$ LIKE "true" THEN ADD DIALOG d$,1,174,12,45,12,0,"wÑhlen",2,1
 IF VoiceDial$ LIKE "true" THEN ADD DIALOG d$,1,174,25,45,12,0,"wÑhlen",3,1
 IF VoiceDial$ LIKE "true" THEN ADD DIALOG d$,1,174,38,45,12,0,"wÑhlen",4,1
 IF FaxDial$ LIKE "true" THEN ADD DIALOG d$,1,174,51,45,12,0,"senden",5,1
 IF VoiceDial$ LIKE "true" THEN ADD DIALOG d$,1,174,99,45,12,0,"wÑhlen",6,1
 IF VoiceDial$ LIKE "true" THEN ADD DIALOG d$,1,174,112,45,12,0,"wÑhlen",7,1
 IF VoiceDial$ LIKE "true" THEN ADD DIALOG d$,1,174,125,45,12,0,"wÑhlen",8,1
 IF FaxDial$ LIKE "true" THEN ADD DIALOG d$,1,174,138,45,12,0,"senden",9,1
 ADD DIALOG d$,1,122,176,50,14,1,"&OK",1,1
 ADD DIALOG d$,1,174,176,50,14,0,"&Abbruch",0,0
 DIALOG d$,a%
 REMOVE DIALOG d$
 IF a% <> 0 THEN 
   IF NEW ("adressen") OR MOD ("adressen") THEN 
     cfile$ = FILE 
     CALL QuickStore("adressen")
     FILE cfile$
   ELSE 
     UNLOCK CURRENT FILE "adressen"
   END IF 
   SELECT CASE a%
   CASE 2
     CALL Telefon(Telefon1.adressen)
   CASE 3
     CALL Telefon(Telefon2.adressen)
   CASE 4
     CALL Telefon(Autotelefon.adressen)
   CASE 5
     CALL FAX(Telefax.adressen)
   CASE 6
     CALL Telefon(ASTelefon1.adressen)
   CASE 7
     CALL Telefon(ASTelefon2.adressen)
   CASE 8
     CALL Telefon(ASAutotelefon.adressen)
   CASE 9
     CALL FAX(ASTelefax.adressen)
   END SELECT 
 END IF 
 SELECT KEY knr% FILE "adressen" INDEX codeku.adressen
 FORM 
 MOUSE ON 
 END SUB 
 
 
 ' FÅhren von TelefongesprÑchen
 ' ======================================================================
 ' Zweck:       Herstellung einer Telefonverbindung
 ' Nutzung:     CALL Telefon(nummer$)
 '              nummer$ = anzuwÑhlende Telefonnummer
 ' ======================================================================
 
SUB Telefon(nummer$)
 IF nummer$ = "" THEN 
   CALL Fehler("Es wurde keine Telefonnummer angegeben!","")
 ELSE 
   nummer1$ = FN NUMERIC(nummer$)
   nummer$ = nummer1$
   CALL Server("LOADMESSAGE","")
   CALL Server("MESSAGE","Bitte warten, die Telefonnummer wird gewÑhlt...")
   SET STATUS "Bitte warten: Telefonnummer wird gewÑhlt..."
   Port$ = ReadINI$("Modem","Port")
   IF Port$ LIKE "COM1" THEN port% = 0
   IF Port$ LIKE "COM2" THEN port% = 1
   IF Port$ LIKE "COM3" THEN port% = 2
   IF Port$ LIKE "COM4" THEN port% = 3
   init$ = ReadINI$("Modem","Init")
   setup$ = ReadINI$("Modem","Setup")
   dial$ = ReadINI$("Modem","Dial")
   Baudrate% = VAL (ReadINI$("Modem","Baudrate"))
 
   REM OPEN COMMS USING 1....,2400.....,0,1,8,0,1,0,0,0,0,"0123123456",""
   OPEN COMMS USING port%,Baudrate%,0,1,8,1,1,0,0,0,0,"",init$
   REM COMMS ? Setup$ + CHR$ (13)
   COMMS ? dial$ + nummer$ + ";" + CHR$ (13)
   a$ = ""
   _ok% = 0
   inbuffer$ = ""
   WHILE _ok% = 0
     COMMS GET a$
     IF a$ <> CHR$ (13) AND a$ <> CHR$ (10) AND a$ <> "" THEN 
       inbuffer$ = inbuffer$ + a$
     ELSE 
       IF ASC (a$) = 13 THEN 
         IF inbuffer$ LIKE "OK" THEN 
           CALL Server("UNLOADMESSAGE","")
           SET STATUS "Bitte Telefonhîrer abnehmen!"
           REQUEST "Die gewÅnschte Telefonnummer wurde gewÑhlt.","Bitte nehmen Sie den Telefonhîrer ab!",113
           _ok% = 1
         END IF 
         IF inbuffer$ LIKE "NO CARRIER" THEN 
           CALL Server("UNLOADMESSAGE","")
           SET STATUS "Fehler beim WÑhlen!"
           REQUEST "Bei der Anwahl trat ein Fehler auf (NO CARRIER)","",139
           _ok% = 1
         END IF 
         IF inbuffer$ LIKE "NO DIALTONE" THEN 
           CALL Server("UNLOADMESSAGE","")
           SET STATUS "Fehler beim WÑhlen!"
           REQUEST "Bei der Anwahl trat ein Fehler auf (NO DIALTONE)","",139
           _ok% = 1
         END IF 
         IF inbuffer$ LIKE "BUSY" THEN 
           CALL Server("UNLOADMESSAGE","")
           SET STATUS "Fehler beim WÑhlen!"
           REQUEST "Der angewÑhlte Anschlu· ist besetzt.","",139
           _ok% = 1
         END IF 
         inbuffer$ = ""
       END IF 
     END IF 
   WEND 
   SET STATUS "Modem-Port wird geschlossen..."
   COMMS ? "ATH" + CHR$ (13)
   CLOSE COMMS 
   SET STATUS "Bereit"
 END IF 
 MOUSE ON 
 END SUB 
 
   
 ' FAX-Versand
 ' ======================================================================
 ' Zweck:       Versenden von FAX-Mitteilungen
 ' Nutzung:     CALL FAX(dest%)
 '              dest%   = EmpfÑnger
 ' ======================================================================
 
SUB FAX(nummer$)
 direction% = VAL ( FN Numeric(nummer$))
 CALL DFile(2,"OFFICE\FAX" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 IF ReadINI$("SYSTEM","FAXavailable") = "TRUE" THEN 
   MOUSE OFF 
   REM ** Absender testen 
   cfile$ = FILE 
   FILE "ADRESSEN"
   cuku% = CodeKU.ADRESSEN
   SELECT KEY "1" FILE "ADRESSEN" INDEX Kundennummer.ADRESSEN
   IF FOUND ("ADRESSEN") THEN 
     SET HEADING title$ + " - Kurzfax"
     IF EXISTS (GOFFForm$ + "FAX.sbv") THEN 
       OPEN FORM GOFFForm$ + "FAX"
     ELSE 
       OPEN FORM GOFFForm$ + "FAX"
     END IF 
     SET STATUS "Kurzfax"
     dest% = direction%
     BLANK 
     SET STATUS "Datensatz neu angelegt..."
     CodeFA.fax = SER ("fax",1)
     CodeKU.fax = cuku%
     faxnummer.fax = nummer$
     SELECT KEY cuku% FILE "adressen" INDEX codeku.adressen
     FORM 
     _formend% = 0
     WHILE _formend% = 0
       faxnummer$ = FN numeric(nummer$)
       FAXsub% = 0
       MOUSE ON 
       MENU OFF 
       ENTER Mitteilung.fax,0
       MENU ON 
     WEND 
   ELSE 
     CALL Fehler("Sie haben noch keine Absenderadresse erfa·t!","Bitte erfassen Sie eine Adresse mit der Kundennummer 1 - diese wird im Fax als Absender verwendet.")
   END IF 
   SELECT KEY cuku% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
   FILE cfile$
 ELSE 
   CALL Fehler("Ihr System ist nicht fÅr den FAX-Versand vorbereitet!","")
 END IF 
 _formend% = 0
 END SUB 
 
 REM SUB FAXSenden(nummer$)
SUB FAXSenden()
 Adresse1$ = MakeAdr$(Cuku%,0, - 1,0)
 _knr% = CodeKU.adressen
 nr$ = "1"
 faxnummer$ = faxnummer.fax
 SELECT KEY nr$ FILE "adressen" INDEX kundennummer.adressen
 nr% = codeku.adressen
 Absender$ = MakeAdr$(nr%,0, - 1,0)
 Adresse$ = Adresse1$
 CREATE DIALOG "FAXSEND",0,0,222,161,title$,"MS Sans Serif",8
 ADD DIALOG "FAXSEND",9,6,8,19,20,4
 ADD DIALOG "FAXSEND",5,34,9,144,8,0,"Vor dem Versenden kînnen Sie die Adresse"
 ADD DIALOG "FAXSEND",5,34,19,130,9,0,"und FAX-Nummer bei Bedarf verÑndern."
 ADD DIALOG "FAXSEND",6,34,30,180,67,4,2,Adresse1$,400
 ADD DIALOG "FAXSEND",5,35,97,28,8,0,"Adresse"
 ADD DIALOG "FAXSEND",6,35,112,178,12,0,0,faxnummer$,20
 ADD DIALOG "FAXSEND",5,36,126,44,8,0,"FAX-Nummer"
 ADD DIALOG "FAXSEND",1,114,140,51,16,1,"&Senden",1,1
 ADD DIALOG "FAXSEND",1,166,140,50,16,0,"&Abbrechen",0,0
 DIALOG "FAXSEND",req%
 REMOVE DIALOG "FAXSEND"
 IF req% = 1 THEN 
   CALL Server("LOADMESSAGE","")
   CALL Server("MESSAGE","Bitte warten, das Fax wird Åbertragen...")
   FILE "fax"
   Datum.fax = TODAY 
   Zeit.fax = NOW 
   CodeMA.fax = vcodema%
   cprinter$ = PRINTER 
   DDETERM 1
   SELECT KEY _knr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
   FaxDriv$ = ReadINI$("SYSTEM","FAXDRIVER")
   CALL FaxDriv$,2
   DDEINIT 1,"FAXMNG","TRANSMIT"
   DDEPOKE 1,"RECEIVER", LEFT$ (nachname.adressen,31)
   DDEPOKE 1,"FAX NUMBER", LEFT$ (faxnummer$,47)
   DDETERM 1
   SET PRINTER ReadINI$("SYSTEM","FAXDEVICE")
   FORM 2
   PRINT CURRENT USING 0,1,1,1,1,1,1
   CALL Server("MESSAGE","Das Fax wurde an die Faxsoftware Åbergeben" + CHR$ (13) + CHR$ (10) + "und wird augenblicklich als Termin registriert...")
   FORM 1
   SET PRINTER cprinter$
   MOUSE OFF 
   SET STATUS "Eintragung in Termindatei..."
   FILE GAkquiDat$
   BLANK 
   CodeAQ.GAkquiDat$ = SER (GAkquiDat$,1)
   CodeMA.GAkquiDat$ = vcodema%
   SELECT KEY vcodema% FILE "supervis" INDEX CodeMA.supervis
   Bearbeiter.GAkquiDat$ = Nachname.supervis
   Codeku.GAkquiDat$ = _knr%
   SELECT KEY _knr% FILE "adressen" INDEX Codeku.adressen
   Nachname.GAkquiDat$ = Nachname.adressen
   Datum.GAkquiDat$ = TODAY 
   Termin.GAkquiDat$ = TODAY 
   Uhrzeit.GAkquiDat$ = NOW 
   erledigt_Termin.GAkquiDat$ = "j"
   Notiz.GAkquiDat$ = "FAX gesendet:" + lf$ + Mitteilung.FAX
   CALL QuickStore(GAkquiDat$)
   CALL Server("UNLOADMESSAGE","")
   SET STATUS "Bereit"
 END IF 
 _formend% = 1
 END SUB 
   
 ' ========================================================================
 ' Bankleitzahlen-Verwaltung
 ' ========================================================================
 
SUB BLZ1()
 CALL BLZ(1)
 END SUB 
 
SUB BLZ2()
 CALL BLZ(2)
 END SUB 
 
SUB BLZ(BLZID%)
 MOUSE OFF 
 CALL DFile(2,"OFFICE\BANKEN" + _fpw$)
 SELECT CASE BLZID%
   CASE 1
     BLZField$ = "K1BLZ.ADRESSEN"
     BankField$ = "K1Bank.ADRESSEN"
   CASE 2
     BLZField$ = "K2BLZ.ADRESSEN"
     BankField$ = "K2Bank.ADRESSEN"
   CASE 3
     BLZField$ = "K3BLZ.ADRESSEN"
     BankField$ = "K3Bank.ADRESSEN"
   END SELECT 
 IF BLZField$$ <> "" AND BankField$$ = "" THEN 
   blz% = VAL (BLZField$$)
   cfile$ = FILE 
   FILE "BANKEN"
   INDEX BLZ.BANKEN
   SELECT FIRST 
   SELECT KEY blz% FILE "BANKEN" INDEX BLZ.BANKEN
   DIM Banken$( RECCOUNT ("BANKEN"))
   a% = 0
   prompt% = 9999999999
   prompt$ = ""
   WHILE BLZ.BANKEN = blz% AND NOT EOF ("BANKEN")
     Banken$(a%) = LTRIM$ ( STR$ (BLZ.BANKEN,"99999999")) + " " + Bank.BANKEN + " " + Ort.BANKEN + SPACE$ (80) + STR$ (CodeBLZ.BANKEN,"000000")
     IF BLZ.BANKEN < prompt% THEN 
       prompt% = BLZ.BANKEN
       prompt$ = Banken$(a%)
     END IF 
     SELECT NEXT 
     a% = a% + 1
   WEND 
   IF a% = 1 THEN 
     SELECT KEY VAL ( RIGHT$ (Banken$(0),6)) FILE "BANKEN" INDEX CodeBLZ.BANKEN
     BankField$$ = Bank.BANKEN
   END IF 
   IF a% > 1 THEN 
     CREATE DIALOG "BANKEN2",0,0,269,152,title$,"MS Sans Serif",8
     ADD DIALOG "BANKEN2",4,0,0,269,124,0,""
     ADD DIALOG "BANKEN2",9,9,11,23,23,2
     ADD DIALOG "BANKEN2",5,41,13,156,11,0,"Bitte wÑhlen Sie eine Bank aus:"
     ADD DIALOG "BANKEN2",7,41,27,221,89,130,2,Banken$,Auswahl$,prompt$
     ADD DIALOG "BANKEN2",1,74,131,55,15,1,"&Weiter",1,1
     ADD DIALOG "BANKEN2",1,133,131,55,15,0,"&Abbrechen",0,0
     DIALOG "BANKEN2",req%
     REMOVE DIALOG "BANKEN2"
     IF req% = 1 THEN 
       nblz% = VAL ( RIGHT$ (Auswahl$(0),6))
       SELECT KEY nblz% FILE "BANKEN" INDEX CodeBLZ.BANKEN
       BankField$$ = Bank.BANKEN
     END IF 
   END IF 
   FILE cfile$
 ELSE 
   IF BankField$$ = "" THEN 
     blz% = GetBLZ%(Ort.ADRESSEN)
     IF blz% <> 0 THEN 
       SELECT KEY blz% FILE "BANKEN" INDEX CodeBLZ.BANKEN
       BankField$$ = Bank.BANKEN
       BLZField$$ = LTRIM$ ( STR$ (BLZ.BANKEN,"99999999"))
     END IF 
   END IF 
 END IF 
 FORM 
 MOUSE ON 
 END SUB 
  
 
FUNCTION GetBLZ%(Ort$)
 DIM Banken$( RECCOUNT ("BANKEN"))
 DIM Auswahl$(0)
 cfile$ = FILE 
 CREATE DIALOG "BANKEN1",0,0,195,82,title$,"MS Sans Serif",8
 ADD DIALOG "BANKEN1",4,0,0,194,59,0,""
 ADD DIALOG "BANKEN1",9,5,8,20,22,2
 ADD DIALOG "BANKEN1",5,34,11,154,21,0,"Bitte geben Sie den Ort ein, dessen Banken aufgelistet werden sollen:"
 ADD DIALOG "BANKEN1",6,56,39,132,11,0,0,Ort$,20
 ADD DIALOG "BANKEN1",5,34,41,19,10,0,"Ort:"
 ADD DIALOG "BANKEN1",1,38,62,55,15,1,"&Suchen",1,1
 ADD DIALOG "BANKEN1",1,97,62,55,15,0,"&Abbrechen",0,0
 ok% = 0
 WHILE NOT ok%
   DIALOG "BANKEN1",req%
   IF req% = 1 THEN 
     IF Ort$ = "" THEN 
       REQUEST "Bitte geben Sie einen Ort ein!","Sie kînnen auch die Anfangsbuchstaben des Ortes eingeben.",113,req2%
     ELSE 
       ok% = - 1
     END IF 
   ELSE 
     ok% = - 1
   END IF 
 WEND 
 REMOVE DIALOG "BANKEN1"
 IF req% = 1 AND Ort$ <> "" THEN 
   FILE "BANKEN"
   INDEX Ort
   SELECT FIRST 
   SELECT KEY ort$
   a% = 0
   prompt% = 99999999999999
   MOUSE OFF 
   WHILE Ort.BANKEN LIKE Ort$ + "*" AND NOT EOF ("BANKEN")
     Banken$(a%) = LTRIM$ ( STR$ (BLZ.BANKEN,"99999999")) + CHR$ (9) + Bank.BANKEN + SPACE$ (80) + STR$ (CodeBLZ.BANKEN,"000000")
     IF BLZ.BANKEN < prompt% THEN 
       prompt% = BLZ.BANKEN
       prompt$ = Banken$(a%)
     END IF 
     SELECT NEXT 
     a% = a% + 1
   WEND 
   IF a% = 0 THEN 
     REQUEST "Zu diesem Ort konnten keine Banken gefunden werden!","",113,req2%
     GetBLZ% = 0
   ELSE 
     CREATE DIALOG "BANKEN2",0,0,269,152,title$,"MS Sans Serif",8
     ADD DIALOG "BANKEN2",4,0,0,269,124,0,""
     ADD DIALOG "BANKEN2",9,9,11,23,23,2
     ADD DIALOG "BANKEN2",5,41,13,156,11,0,"Bitte wÑhlen Sie eine Bank aus:"
     ADD DIALOG "BANKEN2",7,41,27,221,89,130,2,Banken$,Auswahl$,prompt$
     ADD DIALOG "BANKEN2",1,74,131,55,15,1,"&Weiter",1,1
     ADD DIALOG "BANKEN2",1,133,131,55,15,0,"&Abbrechen",0,0
     MOUSE ON 
     DIALOG "BANKEN2",req%
     REMOVE DIALOG "BANKEN2"
     IF req% = 1 THEN 
       GetBLZ% = VAL ( RIGHT$ (Auswahl$(0),6))
     ELSE 
       GetBLZ% = 0
     END IF 
   END IF 
 ELSE 
   GetBLZ% = 0
 END IF 
 FILE cfile$
 END IF 
 END FUNCTION 
 
SUB ADRConnectOld()
 DIM AdrListe$( RECCOUNT ("ADRESSEN"))
 knr% = CodeKU.ADRESSEN
 FILE "ADRESSEN"
 INDEX VorgÑnger.ADRESSEN
 SELECT FIRST 
 SELECT KEY knr%
 prompt$ = "ZZZZZZZZ"
 a% = 0
 WHILE VorgÑnger.ADRESSEN = knr% AND NOT EOF ("ADRESSEN")
   aok% = - 1
   IF MNdisabled%("DATALOCK") THEN 
     IF Sperre.ADRESSEN <> 0 AND Sperre.ADRESSEN <> vcodema% THEN aok% = 0
   END IF 
   IF aok% THEN 
     AdrListe$(a%) = Nachname + ", " + Vorname + ", " + Ort + SPACE$ (120) + STR$ (CodeKU,"000000")
     IF Nachname < prompt$ THEN prompt$ = AdrListe$(a%)
     a% = a% + 1
   END IF 
   SELECT NEXT 
 WEND 
 SELECT KEY knr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 CREATE DIALOG "ADRCON1",0,0,241,182,title$,"MS Sans Serif",8
 ADD DIALOG "ADRCON1",4,0,0,241,158,0,""
 ADD DIALOG "ADRCON1",9,5,9,20,21,2
 ADD DIALOG "ADRCON1",5,30,10,206,28,0,"Bitte wÑhlen Sie eine der untergeordneten Adressen aus oder wÑhlen Sie 'Neu' um eine neue Adresse in die Gruppe aufzunehmen."
 ADD DIALOG "ADRCON1",5,30,40,205,20,0,"Mit 'Lîschen' kînnen Sie die VerknÅpfung zur angewÑhlten Adresse lîschen."
 ADD DIALOG "ADRCON1",7,30,64,204,89,2,2,AdrListe$,Auswahl$,prompt$
 ADD DIALOG "ADRCON1",1,3,162,55,15,1,"&WÑhlen",1,1
 ADD DIALOG "ADRCON1",1,63,162,55,15,0,"&Neu",2,1
 ADD DIALOG "ADRCON1",1,123,162,55,15,0,"&Lîschen",3,1
 ADD DIALOG "ADRCON1",1,183,162,55,15,0,"&Abbrechen",0,0
 DIALOG "ADRCON1",req%
 REMOVE DIALOG "ADRCON1"
 MOUSE OFF 
 nknr% = VAL ( RIGHT$ (Auswahl$(0),6))
 SELECT CASE req%
 CASE 1
   IF nknr% <> 0 THEN SELECT KEY nknr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 CASE 2
   nachfolger% = ADRSuche%(0)
   IF nachfolger% <> 0 THEN 
     SELECT KEY nachfolger% LOCK FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
     ok% = - 1
     IF VorgÑnger.ADRESSEN <> 0 AND VorgÑnger.ADRESSEN <> knr% THEN 
       REQUEST "Die gewÑhlte Adresse gehîrt bereits zu einer anderen Gruppe!","Trotzdem Åbernehmen?",134,req2%
       IF req2% <> 1 THEN ok% = 0
     END IF 
     IF ok% THEN VorgÑnger.ADRESSEN = knr%
     CALL QuickStore("ADRESSEN")
   END IF 
   SELECT KEY knr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 CASE 3
   IF nknr% <> 0 THEN 
     SELECT KEY nknr% LOCK FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
     VorgÑnger.ADRESSEN = 0
     CALL QuickStore("ADRESSEN")
   END IF 
   SELECT KEY knr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 END SELECT 
 SET INDEX Nachname.ADRESSEN
 INDEX Nachname.ADRESSEN
 CALL ADRFeldnamen()
 MOUSE ON 
 END SUB 

 
SUB ADRConnect()
 knr% = CodeKU.ADRESSEN
 FILE "connect"
 INDEX codeku.connect
 CALL ADRKontakt()
 
 END SUB 
  


SUB ADRConnectOld()
 DIM AdrListe$( RECCOUNT ("ADRESSEN"))
 knr% = CodeKU.ADRESSEN
 FILE "connect"
 INDEX codeku.connect
 
 REM FILE "ADRESSEN"
 REM INDEX VorgÑnger.ADRESSEN
 SELECT FIRST 
 SELECT KEY knr%
 prompt$ = "ZZZZZZZZ"
 a% = 0
 WHILE codeku.connect = knr% AND NOT EOF ("connect")
   aok% = - 1
   IF MNdisabled%("DATALOCK") THEN 
     IF Sperre.ADRESSEN <> 0 AND Sperre.ADRESSEN <> vcodema% THEN aok% = 0
   END IF 
   IF aok% THEN 
     AdrListe$(a%) = Typ.connect + ", " + Nachname + ", " + Vorname + ", " + Ort + ", " + Strasse + SPACE$ (120) + STR$ (CodeCon,"000000")
     IF Nachname < prompt$ THEN prompt$ = AdrListe$(a%)
     a% = a% + 1
   END IF 
   SELECT NEXT 
 WEND 
 SELECT KEY knr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 CREATE DIALOG "ADRCON1",0,0,341,182,title$,"MS Sans Serif",8
 ADD DIALOG "ADRCON1",4,0,0,341,158,0,""
 ADD DIALOG "ADRCON1",9,5,9,20,21,2
 ADD DIALOG "ADRCON1",5,30,10,306,28,0,"Bitte wÑhlen Sie eine der untergeordneten Adressen aus oder wÑhlen Sie 'Neu' um eine neue Adresse in die Gruppe aufzunehmen."
 ADD DIALOG "ADRCON1",5,30,40,305,20,0,"Mit 'Lîschen' kînnen Sie die VerknÅpfung zur angewÑhlten Adresse lîschen."
 ADD DIALOG "ADRCON1",7,30,64,304,89,2,2,AdrListe$,Auswahl$,prompt$
 ADD DIALOG "ADRCON1",1,30,162,55,15,1,"&WÑhlen",1,1
 ADD DIALOG "ADRCON1",1,90,162,55,15,0,"&Details",4,1
 ADD DIALOG "ADRCON1",1,150,162,55,15,0,"&Neu",2,1
 ADD DIALOG "ADRCON1",1,210,162,55,15,0,"&Lîschen",3,1
 ADD DIALOG "ADRCON1",1,270,162,55,15,0,"&Abbrechen",0,0
 DIALOG "ADRCON1",req%
 REMOVE DIALOG "ADRCON1"
 MOUSE OFF 
 nknr% = VAL ( RIGHT$ (Auswahl$(0),6))
 IF req% = 1 THEN knr% = nknr%
 SELECT CASE req%
 CASE 1
   IF nknr% <> 0 THEN SELECT KEY nknr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 CASE 2
   nachfolger% = ADRSuche%(0)
   IF nachfolger% <> 0 THEN 
     SELECT KEY nachfolger% LOCK FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
     BLANK FILE "connect"
     codekey.connect = SER ("CONNECT",1)
     codeku.connect = knr%
     codecon.connect = nachfolger%
     CodeKUCon.connect = STR$ (knr%,"000000") + STR$ (nachfolger%,"000000")
     Nachname.connect = Nachname.adressen
     vorname.connect = Vorname.adressen
     Ort.connect = Ort.adressen
     Strasse.connect = Stra·e.adressen
     Typ.connect = "N"
     CALL QuickStore("connect")
     SELECT KEY knr% LOCK FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
     BLANK FILE "connect"
     codekey.connect = SER ("CONNECT",1)
     codeku.connect = nachfolger%
     codecon.connect = knr%
     CodeConKU.connect = STR$ (nachfolger%,"000000") + STR$ (knr%,"000000")
     Nachname.connect = Nachname.adressen
     vorname.connect = Vorname.adressen
     Ort.connect = Ort.adressen
     Strasse.connect = Stra·e.adressen
     Typ.connect = "V"
     CALL QuickStore("connect")
      SELECT KEY CodeKUCon$ LOCK FILE "connect" INDEX CodeKUCon.connect
     Adr$ = Typ.connect + ", " + Nachname + ", " + Vorname + ", " + Ort + ", " + Strasse
     notiz1$ = Notiz.connect
     CREATE DIALOG "ADRCON1",0,0,341,182,"Details zur VerknÅpfung","MS Sans Serif",8
     ADD DIALOG "ADRCON1",4,0,0,341,158,0,""
     ADD DIALOG "ADRCON1",9,5,9,20,21,2
     ADD DIALOG "ADRCON1",5,30,10,306,28,0,"Tragen Sie hier Kommentare zur aktuellen AdressverknÅpfung ein und bestÑtigen Sie mit éndern"
     ADD DIALOG "ADRCON1",5,30,40,305,20,0,adr$
     ADD DIALOG "ADRCON1",6,30,64,304,89,4,2,Notiz.connect,4000
     REM ADD DIALOG "ADRCON1",7,30,64,304,89,2,2,AdrListe$,Auswahl$,prompt$
     ADD DIALOG "ADRCON1",1,30,162,55,15,1,"&WÑhlen",1,1
     ADD DIALOG "ADRCON1",1,90,162,55,15,0,"é&ndern",4,1
     ADD DIALOG "ADRCON1",1,270,162,55,15,0,"&Abbrechen",0,0
     DIALOG "ADRCON1",req%
     REMOVE DIALOG "ADRCON1"
     IF req% = 1 THEN 
       IF notiz1$ <> Notiz.connect THEN 
         REQUEST "Der Kommentar wurde geÑndert!","Soll die énderung Åbernommen werden?",130,req1%
         IF req1% = 1 THEN CALL QuickStore("CONNECT")
       END IF 
       SELECT KEY nachfolger% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
     END IF 
     IF req% = 4 THEN 
       CALL QuickStore("connect")
       SELECT KEY knr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
       REM SELECT KEY nachfolger% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
     END IF 
   END IF 
 CASE 3
   IF nknr% <> 0 THEN 
     FILE "connect"
     loe1$ = STR$ (knr%,"000000") + STR$ (nknr%,"000000")
     loe2$ = STR$ (nknr%,"000000") + STR$ (knr%,"000000")
     REMOVE FROM FILE "Connect" WHERE CodeKUCon.connect = loe1$
     REMOVE FROM FILE "Connect" WHERE CodeConKU.connect = loe2$
   END IF 
   SELECT KEY knr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
  CASE 4
   REM Details
   nknr% = VAL ( RIGHT$ (Auswahl$(0),6))
   FILE "Connect"
   INDEX codecon.connect
   SELECT KEY nknr% LOCK FILE "connect" INDEX codecon.connect
   Adr$ = Typ.connect + ", " + Nachname + ", " + Vorname + ", " + Ort + ", " + Strasse
   notiz1$ = Notiz.connect
   CREATE DIALOG "ADRCON1",0,0,341,182,"Details zur VerknÅpfung","MS Sans Serif",8
   ADD DIALOG "ADRCON1",4,0,0,341,158,0,""
   ADD DIALOG "ADRCON1",9,5,9,20,21,2
   ADD DIALOG "ADRCON1",5,30,10,306,28,0,"Tragen Sie hier Kommentare zur aktuellen AdressverknÅpfung ein und bestÑtigen Sie mit éndern"
   ADD DIALOG "ADRCON1",5,30,40,305,20,0,adr$
   ADD DIALOG "ADRCON1",6,30,64,304,89,4,2,Notiz.connect,4000
   REM ADD DIALOG "ADRCON1",7,30,64,304,89,2,2,AdrListe$,Auswahl$,prompt$
   ADD DIALOG "ADRCON1",1,30,162,55,15,1,"&WÑhlen",1,1
   ADD DIALOG "ADRCON1",1,90,162,55,15,0,"é&ndern",4,1
   ADD DIALOG "ADRCON1",1,270,162,55,15,0,"&Abbrechen",0,0
   DIALOG "ADRCON1",req%
   REMOVE DIALOG "ADRCON1"
   IF req% = 0 THEN END SUB 
   IF req% = 1 THEN 
     IF notiz1$ <> Notiz.connect THEN 
       REQUEST "Der Kommentar wurde geÑndert!","Soll die énderung Åbernommen werden?",130,req1%
       IF req1% = 1 THEN CALL QuickStore("CONNECT")
     END IF 
     SELECT KEY nknr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
   END IF 
   IF req% = 4 THEN 
     CALL QuickStore("connect")
     SELECT KEY nknr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
   END IF 
 END SELECT 
 FILE "Adressen"
 SET INDEX Nachname.ADRESSEN
 INDEX Nachname.ADRESSEN
 CALL ADRFeldnamen()
 MOUSE ON 
 END SUB 
 
 REM 240398
SUB ADRConnUpd()
 CALL DFile(2,"OFFICE\connect" + _fpw$)
 FILE "ADRESSEN"
 INDEX VorgÑnger.ADRESSEN
 SELECT FIRST 
 WHILE NOT EOF ("Adressen")
 knr% = Codeku.adressen
 IF vorgÑnger.adressen > 0 THEN 
     nachfolger% = vorgÑnger.adressen
     vorgÑnger.adressen = 0
     CALL QuickStore("Adressen")
     SELECT KEY nachfolger% LOCK FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
     BLANK FILE "connect"
     codekey.connect = SER ("CONNECT",1)
     codeku.connect = knr%
     codecon.connect = nachfolger%
     CodeKUCon.connect = STR$ (knr%,"000000") + STR$ (nachfolger%,"000000")
     Nachname.connect = Nachname.adressen
     vorname.connect = Vorname.adressen
     Ort.connect = Ort.adressen
     Strasse.connect = Stra·e.adressen
     Typ.connect = "V"
     CALL QuickStore("connect")
     SELECT KEY knr% LOCK FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
     BLANK FILE "connect"
     codekey.connect = SER ("CONNECT",1)
     codeku.connect = nachfolger%
     codecon.connect = knr%
     CodeConKU.connect = STR$ (nachfolger%,"000000") + STR$ (knr%,"000000")
     Nachname.connect = Nachname.adressen
     vorname.connect = Vorname.adressen
     Ort.connect = Ort.adressen
     Strasse.connect = Stra·e.adressen
     Typ.connect = "N"
     CALL QuickStore("connect")
     SELECT KEY knr% FILE "Adressen" INDEX codeku.adressen
 END IF 
 SELECT NEXT FILE "Adressen" INDEX VorgÑnger.adressen
 WEND 
 END SUB 
 




SUB ADRVorgaenger()
 IF VorgÑnger.ADRESSEN <> 0 THEN 
   cuadr% = CodeKU.ADRESSEN
   SELECT KEY VorgÑnger.ADRESSEN FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
   ok% = - 1
   IF MNdisabled%("DATALOCK") THEN 
     IF Sperre.ADRESSEN <> 0 AND Sperre.ADRESSEN <> vcodema% THEN 
       SELECT KEY cuadr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
       CALL Fehler("Die Daten der Adresse des VorgÑngers sind fÅr den Zugriff gesperrt!","")
     END IF 
   END IF 
   SET INDEX Nachname.ADRESSEN
   INDEX Nachname.ADRESSEN
 END IF 
 CALL ADRFeldnamen()
 FORM 
 END SUB 
 
 
 
SUB ADRLoeschen()
 IF title$ LIKE "*DEMO*" AND RECCOUNT ("ADRESSEN") >= 10 THEN 
   CALL DemoInfo()
   END SUB 
 END IF 
 IF disabled%("ADRLoeschen") THEN END SUB 
 cuku% = CodeKU.adressen
 REQUEST "Adresse wirklich lîschen?","",135,req%
 IF req% = 1 THEN 
   IF EXISTS (cuku%,codeku.adressen) THEN 
     SET STATUS "Lîsche die Adresse!"
     SELECT KEY cuku% LOCK FILE "ADRESSEN" INDEX CodeKU.adressen
     IF cuku% = codeku.adressen THEN SELECT REMOVE 
     FILE "Telefon"
     INDEX codeku.telefon
     SELECT FIRST 
     IF EXISTS (cuku%,codeku.telefon) THEN 
       SET STATUS "Lîsche die Telefonnummern zur Adresse!"
       REMOVE FROM FILE "Telefon" WHERE codeku.telefon = cuku%
     END IF 
     IF EXISTS (cuku%,codeku.GAkquiDat$) THEN 
       SET STATUS "Lîsche die Termine zur Adresse!"
       REMOVE FROM FILE GAkquiDat$ WHERE codeku.GAkquiDat$ = cuku%
     END IF 
     FILE "Adressen"
     SELECT FORM NEXT 
     codeku% = codeku.adressen
     SELECT FORM KEY codeku% FILE "Telefon" INDEX codeku.telefon
     FORM 
   END IF 
   FORM 
 END IF 
 CALL ADRFeldnamen()
 FORM 
 END SUB 
 
 
 
 '      ************************
 '      ** Stichworterfassung **
 '      ************************
 
SUB ADRStichwort()
 IF MOD ("ADRESSEN") THEN 
   STORE FILE "ADRESSEN"
   codeku% = codeku.adressen
   SELECT FIRST FILE "adressen" INDEX codeku.adressen
   SELECT KEY codeku% LOCK FILE "adressen" INDEX codeku.adressen
 END IF 
 IF AutoKeyword$ LIKE "TRUE" AND stichwort.adressen = "" THEN CALL AStichNeu("keyword","Keywords","Stichwîrter",20)
 END SUB 

SUB ADRStichw1():
 CALL AStichNeu("keyword","Keywords","Stichwîrter",20)
 END SUB 
  
SUB AnredeStichwort()
 IF AutoAnrede$ LIKE "TRUE" AND anrede.adressen = "" THEN CALL AStichNeu("Anrede","Anrede","Anrede",20)
 END SUB 

SUB BerufStichwort()
 IF AutoBeruf$ LIKE "TRUE" AND Beruf.adressen = "" THEN CALL AStichNeu("Beruf","Beruf","Beruf",50)
 END SUB 

 
SUB TitelStichwort()
 IF AutoTitel$ LIKE "TRUE" AND Titel.adressen = "" THEN CALL AStichNeu("Titel","Titel","Titel",30)
 END SUB 

SUB LandStichwort()
 IF AutoLAND$ LIKE "TRUE" AND LAND.adressen = "" THEN CALL AStichNeu("Land","Land","Land",50)
 END SUB 

SUB HobbysStichwort()
 IF AutoHobbys$ LIKE "TRUE" AND Hobbys.adressen = "" THEN CALL AStichNeu("Hobbys","Hobbys","Hobby",40)
 END SUB 
 
SUB FiFormStichwort()
 IF AutoFiForm$ LIKE "TRUE" AND Firmenform.adressen = "" THEN CALL AStichNeu("Firmenform","FiForm","Firmenform",15)
 END SUB 
  
SUB FStandStichwort()
 IF AutoFStand$ LIKE "TRUE" AND Familienstand.adressen = "" THEN CALL AStichNeu("Familienstand","FStand","Familienstand",15)
 END SUB 
 
SUB AnStStichwort()
 IF AutoAnstell$ LIKE "TRUE" AND Anstellungsverh.adressen = "" THEN CALL AStichNeu("Anstellungsverh","Anstell","AnstellungsverhÑltnis",15)
 END SUB 
  
 
SUB OrtStichwort()
 IF AutoOrt$ LIKE "TRUE" AND Ort.adressen = "" THEN CALL OrtStichNeu(1)
 END SUB 


SUB PLZStichwort()
 IF AutoPLZ$ LIKE "TRUE" AND PLZ.adressen = "" THEN CALL OrtStichNeu(2)
 END SUB 

SUB NationalStich()
 IF AutoNational$ LIKE "TRUE" AND NationalitÑt.adressen = "" THEN CALL AStichNeu("NationalitÑt","National","NationalitÑt",10)
 END SUB 

SUB StaatStichwort()
 IF AutoStaat$ LIKE "TRUE" AND Staatsangehîrig.adressen = "" THEN CALL AStichNeu("Staatsangehîrig","Staat","Staatsangehîrig",10)
 END SUB 

SUB MaGruppe1Stich()
  cuku% = Codema.maadr
  fdat$ = "maadrgru"
  feld$ = "MAGRUPPE"
 feldold$ = feld$
 IF NEW ("maadr") OR MOD ("maadr") THEN CALL FStore("maadr")
 SET STATUS tit$ + " erzeugen"
 titel$ = tit$ + " erzeugen"
 cfile$ = FILE 
  CALL DFile(3,"maadrgru" + _fpw$)
 DIM Keyword$( RECCOUNT (fdat$))
 DIM Auswahl$(1)
 MOUSE OFF 
 FILE fdat$
 SELECT FIRST 
 a% = 0
 feld2$ = feld$ + "." + fdat$
 feld3$ = feld$ + ".maadr"
 feld$ = feld2$
 IF feld3$ LIKE "keyword*" THEN 
   prompt$ = ""
 ELSE 
   prompt$ = feld3$$
 END IF 
 IF prompt$ = "" THEN prompt$ = "ZZZZZZZ"
 WHILE NOT EOF (fdat$)
   Keyword$(a%) = feld$$
   IF prompt$ = "ZZZZZZZ" THEN prompt$ = Keyword$(a%)
   a% = a% + 1
   SELECT NEXT 
 WEND 
 MOUSE ON 
 CREATE DIALOG "KEYWORD",0,0,233,200,title$,"MS Sans Serif",8
 ADD DIALOG "KEYWORD",4,0,1,233,176,0,""
 ADD DIALOG "KEYWORD",9,4,12,21,24,2
 ADD DIALOG "KEYWORD",5,31,14,189,19,0,"Bitte wÑhlen Sie den Eintrag aus, der in die aktuelle Agentur aufgenommen werden soll:"
 ADD DIALOG "KEYWORD",7,31,38,188,122,2,2,Keyword$,Auswahl$,prompt$
 ADD DIALOG "KEYWORD",6,31,158,188,12,0,0,KW$,laenge%
 IF MNdisabled%("SUPERVISOR") THEN 
   ADD DIALOG "KEYWORD",1,57,182,55,15,1,"&OK",1,1
   ADD DIALOG "KEYWORD",1,113,182,55,15,0,"&Abbrechen",0,0
 ELSE 
   ADD DIALOG "KEYWORD",1,32,182,55,15,1,"&OK",1,1
   ADD DIALOG "KEYWORD",1,88,182,55,15,0,"&Abbrechen",0,0
   ADD DIALOG "KEYWORD",1,144,182,55,15,0,"&Lîschen",2,1
 END IF 
 DIALOG "KEYWORD",req%
 REMOVE DIALOG "KEYWORD"
 IF req% <> 0 THEN 
   IF kw$ = "" THEN kw$ = Auswahl$(0)
   REM 030697
   IF feld3$ LIKE "keyword*" THEN 
     kw$ = UCASE$ (kw$)
   END IF 
   IF req% = 1 THEN 
     REM ** ANREDE neu aufnehmen
     IF NOT EXISTS (kw$,feld$$) THEN 
       BLANK 
       codemagr% = SER ("maadrgru")
       IF feld3$ LIKE "keyword*" THEN 
         feld$$ = UCASE$ (kw$)
       ELSE 
         feld$$ = UCASE$ (kw$)
       END IF 
       codemagr.maadrgru = codemagr%
       CALL FStore(fdat$)
     END IF 
     FILE "maadr"
     SELECT KEY cuku% LOCK FILE "maadr" INDEX Codema.maadr
     feld1$ = feldold$ + "." + "maadr"
     feld1$$ = UCASE$ (kw$)
     codemagr.maadr = codemagr.maadrgru
     CALL FStore("maadr")
   END IF 
   IF req% = 2 THEN 
     REM ** Stichwort aus Datei Anrede lîschen
     IF EXISTS (kw$,feld$$) THEN 
       SELECT KEY kw$ LOCK FILE fdat$ INDEX feld$$
       REQUEST "Wollen Sie den Eintrag wirklich lîschen?","",130,req2%
       IF req2% = 1 THEN 
         SELECT REMOVE 
         SET STATUS "Eintrag gelîscht"
       END IF 
     ELSE 
       CALL Fehler("Der eingegebene Eintrag ist nicht in der Auswahl - Liste enthalten!","")
     END IF 
   END IF 
 END IF 
 SET STATUS "Bereit"
 FILE cfile$
 MOUSE ON 
 END SUB 

SUB Anrede1Stich()
 CALL AStichNeu("Anrede","Anrede","Anrede",20)
 END SUB 
 
SUB Beruf1Stich()
 CALL AStichNeu("Beruf","Beruf","Beruf",50)
 END SUB 
 
SUB Titel1Stich()
 CALL AStichNeu("Titel","Titel","Titel",30)
 END SUB 
 
SUB Land1Stich()
 CALL AStichNeu("Land","Land","Land",50)
 END SUB 
 
SUB Hobbys1Stich()
 CALL AStichNeu("Hobbys","Hobbys","Hobby",40)
 END SUB 
 
SUB FiForm1Stich()
 CALL AStichNeu("Firmenform","FiForm","Firmenform",15)
 END SUB 
  
SUB FStand1Stich()
 CALL AStichNeu("Familienstand","FStand","Familienstand",15)
 END SUB 
 
SUB AnSt1Stich()
 CALL AStichNeu("Anstellungsverh","Anstell","AnstellungsverhÑltnis",15)
 END SUB 
  
 
SUB Ort1Stich()
 CALL OrtStichNeu(1)
 END SUB 
 
SUB PLZ1Stich()
 CALL OrtStichNeu(2)
 END SUB 
 
SUB SProjectNeu()
  CALL AStichNeu("project","sproject","Softwareproject",30)
 END SUB 

SUB SCategoryNeu()
  CALL AStichNeu("category","SCATEGOR","Softwarecategory",30)
 END SUB 

SUB SStatusNeu()
  CALL AStichNeu("SStatus","sstatus","Softwarestatus",30)
 END SUB 
 
SUB SLoesungNeu()
  CALL AStichNeu("SLoesung","SLoesung","Loesung",30)
 END SUB 


SUB SKomponNeu()
  CALL AStichNeu("SKompon","SKompon","Komponente",30)
  FORM 
 END SUB 

SUB STestNeu()
  CALL AStichNeu("STest","STest","Softwaretest",30)
  FORM 
 END SUB 
 


SUB National1Stich()
 CALL AStichNeu("NationalitÑt","National","NationalitÑt",10)
 END SUB 
 
SUB Staat1Stich()
 CALL AStichNeu("Staatsangehîrig","Staat","Staatsangehîrigkeit",10)
 END SUB 
 
SUB ADRStatusNeu()
 IF disabled%("ADRSTATUS") THEN END SUB 
 CALL AStichNeu("keyword","ADRStat","Adress-Status",20)
 IF FORM LIKE "ADR*" THEN CALL ADRFeldnamen()
 UNLOCK FORM 
 END SUB 

SUB ADRGruppeNeu()
 IF disabled%("ADRGRUP") THEN END SUB 
 CALL AStichNeu("keyword","ADRGRUP","Adress-Gruppe",20)
 IF FORM LIKE "ADR*" THEN CALL ADRFeldnamen()
 UNLOCK FORM 
 END SUB 


SUB TerFloskNeu()
 IF disabled%("TERFLOSKNEU") THEN END SUB 
 CALL AStichNeu("keyword","TERFLOSK","Termin-Floskel",20)
 UNLOCK FORM 
 END SUB 

SUB AbzFloskNeu()
 IF disabled%("ABZFLOSKNEU") THEN END SUB 
 CALL AStichNeu("keyword","ABZFLOSK","Kommentar-Floskel",20)
 UNLOCK FORM 
 END SUB 
 

SUB AStichNeu(feld$,fdat$,tit$,laenge%)
 IF fdat$ LIKE "TERFLOSK" THEN 
   cuku% = codeku.GAkquiDat$
   cuko% = codeku.GAkquiDat$
   codeaq% = codeaq.GAkquiDat$
   laenge% = 200
   IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
 ELSE 
   cuku% = CodeKU.adressen
   cuko% = CodeKU.adressen
 END IF 
 knr% = cuku%

 DIM tt$( RECCOUNT ("Color"))
 feldold$ = feld$
 IF NEW ("adressen") OR MOD ("adressen") THEN CALL FStore("adressen")
 SET STATUS tit$ + " erzeugen"
 titel$ = tit$ + " erzeugen"
 cfile$ = FILE 
 CALL DFile(2,"OFFICE\" + fdat$ + _fpw$)
 DIM Keyword$( RECCOUNT (fdat$))
 DIM Keyword%( RECCOUNT (fdat$))
 DIM Auswahl$(1)
 DIM Farbe$(1)
 MOUSE OFF 
 FILE fdat$
 SELECT FIRST 
 a% = 0
 feld2$ = feld$ + "." + fdat$
 feld3$ = feld$ + ".adressen"
 feld$ = feld2$
 IF feld3$ LIKE "keyword*" THEN 
   prompt$ = ""
 ELSE 
   ON ERROR GOTO err170720091
   prompt$ = feld3$$
err170720091: 
   ON ERROR GOTO ErrorHandler
 END IF 
 IF prompt$ = "" THEN prompt$ = "ZZZZZZZ"
 WHILE NOT EOF (fdat$)
   IF fdat$ LIKE "ADRStat" THEN 
     Keyword$(a%) = feld$$
     Keyword%(a%) = farbewert.adrstat
   ELSE 
     Keyword$(a%) = feld$$
   END IF 
   IF prompt$ = "ZZZZZZZ" THEN prompt$ = Keyword$(a%)
   a% = a% + 1
   SELECT NEXT 
 WEND 
 MOUSE ON 
 IF fdat$ LIKE "TERFLOSK" OR fdat$ LIKE "ABZFLOSK" THEN 
   CREATE DIALOG "KEYWORD",0,0,333,200,title$,"MS Sans Serif",8
   ADD DIALOG "KEYWORD",4,0,1,333,176,0,""
   ADD DIALOG "KEYWORD",9,4,12,21,24,2
 ELSE 
   CREATE DIALOG "KEYWORD",0,0,233,200,title$,"MS Sans Serif",8
   ADD DIALOG "KEYWORD",4,0,1,233,176,0,""
   ADD DIALOG "KEYWORD",9,4,12,21,24,2
 END IF 
 IF fdat$ LIKE "TERFLOSK" OR fdat$ LIKE "ABZFLOSK" THEN 
   ADD DIALOG "KEYWORD",5,31,14,189,19,0,"Bitte wÑhlen Sie den Eintrag aus, der in den aktuelle Termin aufgenommen werden soll:"
   ADD DIALOG "KEYWORD",7,31,38,288,122,2,2,Keyword$,Auswahl$,prompt$
   ADD DIALOG "KEYWORD",6,31,158,288,12,0,0,KW$,laenge%
 ELSE 
   ADD DIALOG "KEYWORD",5,31,14,189,19,0,"Bitte wÑhlen Sie den Eintrag aus, der in die aktuelle Adresse aufgenommen werden soll:"
   ADD DIALOG "KEYWORD",7,31,38,188,122,2,2,Keyword$,Auswahl$,prompt$
   ADD DIALOG "KEYWORD",6,31,158,188,12,0,0,KW$,laenge%
 END IF 
 IF MNdisabled%("SUPERVISOR") THEN 
   ADD DIALOG "KEYWORD",1,57,182,55,15,1,"&OK",1,1
   ADD DIALOG "KEYWORD",1,113,182,55,15,0,"&Abbrechen",0,0
   IF fdat$ LIKE "ADRStat" THEN ADD DIALOG "KEYWORD",1,180,182,45,15,0,"&Farbe",3,1
 ELSE 
   ADD DIALOG "KEYWORD",1,12,182,45,15,1,"&OK",1,1
   ADD DIALOG "KEYWORD",1,68,182,45,15,0,"&Abbrechen",0,0
   ADD DIALOG "KEYWORD",1,124,182,45,15,0,"&Lîschen",2,1
   IF fdat$ LIKE "ADRStat" THEN ADD DIALOG "KEYWORD",1,180,182,45,15,0,"&Farbe",3,1
 END IF 
 DIALOG "KEYWORD",req%
 REMOVE DIALOG "KEYWORD"
  IF req% = 0 AND (fdat$ LIKE "SProject" OR fdat$ LIKE "SCateg*" OR fdat$ LIKE "SStatu*" OR fdat$ LIKE "SLoesung" OR fdat$ LIKE "SKompon") THEN GOTO end170720092

 IF req% = 3 THEN 
   kw$ = Auswahl$(0)
   req% = 1
   GOTO setzeFarbe
 END IF 
 IF req% <> 0 THEN 
   IF kw$ = "" THEN 
     kw$ = Auswahl$(0)
     IF fdat$ LIKE "ADRStat" THEN 
       FOR i% = 0 TO a% - 1
         IF Keyword$(i%) = kw$ THEN 
           farbe% = Keyword%(i%)
           i% = a% + 1
         END IF 
       NEXT i%
     END IF 
   END IF 
   REM 030697
   IF feld3$ LIKE "keyword*" THEN 
     IF fdat$ LIKE "TERFLOSK" OR fdat$ LIKE "ABZFLOSK" THEN 
     ELSE 
       kw$ = UCASE$ (kw$)
     END IF 
   END IF 
   IF req% = 1 THEN 
     REM ** ANREDE neu aufnehmen
     IF NOT EXISTS (kw$,feld$$) THEN 
       BLANK 
       codeKey = SER (fdat$,1)
       neuneu% = 1
       Workstation.fdat$ = Workstation%
       QWoNo.fdat$ = STR$ (Workstation%,"000000") + STR$ (codekey.fdat$,"000000")
       RecStatus.fdat$ = "c"
       IF feld3$ LIKE "keyword*" THEN 
         IF fdat$ LIKE "TERFLOSK" OR fdat$ LIKE "ABZFLOSK" THEN 
           feld$$ = kw$
         ELSE 
           feld$$ = UCASE$ (kw$)
         END IF 
       ELSE 
         feld$$ = kw$
       END IF 
       CALL FStore(fdat$)
     END IF 
     IF fdat$ LIKE "TERFLOSK" OR fdat$ LIKE "ABZFLOSK" THEN 
       IF fdat$ LIKE "TERFLOSK" THEN 
         FILE GAkquiDat$
         SELECT FIRST FILE "Supervis" INDEX codema.supervis
         SELECT KEY GMACodeMA% FILE "Supervis" INDEX codema.supervis
         SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         ON ERROR GOTO w080820071
         IF kuerzel.supervis <> "" THEN 
           na$ = " - " + kuerzel.supervis
         ELSE 
w080820071: 
           na$ = " - " + name.supervis
         END IF 
         ON ERROR GOTO ErrorHandler
         temptxt$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh.mm") + " " + kw$ + na$
         ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + temptxt$
         STORE FILE GAkquiDat$
         FORM 
       END IF 
       IF fdat$ LIKE "ABZFLOSK" THEN 
         SELECT FIRST FILE "Supervis" INDEX codema.supervis
         SELECT KEY GMACodeMA% FILE "Supervis" INDEX codema.supervis
         codeaz% = codeaz.abzugang
         codems% = codems.abzugang
         SELECT FIRST FILE "abzugang" INDEX codeaz.abzugang
         SELECT KEY codeaz% LOCK FILE "abzugang" INDEX codeaz.abzugang
         SELECT FIRST FILE "master" INDEX codems.master
         SELECT KEY codems% FILE "master" INDEX codems.master
         codeaq% = codeaq.master
         IF codeaq% > 0 AND EXISTS (codeaq%,codeaq.GAkquiDat$) THEN 
           SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           ON ERROR GOTO w080820071a
           IF kuerzel.supervis <> "" THEN 
             na$ = " - " + kuerzel.supervis
           ELSE 
w080820071a: 
             na$ = " - " + name.supervis
           END IF 
           ON ERROR GOTO ErrorHandler
           temptxt$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh.mm") + " " + kw$ + na$
           ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + temptxt$
           STORE FILE GAkquiDat$
         END IF 
         temptxt$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh.mm") + " " + kw$ + na$
         kommentar.abzugang = kommentar.abzugang + CHR$ (13) + CHR$ (10) + temptxt$
         STORE FILE "abzugang"

       END IF 
     ELSE 
       IF fdat$ LIKE "SProject" OR fdat$ LIKE "SCateg*" OR fdat$ LIKE "SStatu*" OR fdat$ LIKE "SLoesung" OR fdat$ LIKE "SKompon" THEN 
        GOTO end170720091
       END IF 
       FILE "Adressen"
       SELECT KEY cuku% LOCK FILE "adressen" INDEX CodeKU.adressen
       feld1$ = feldold$ + "." + "adressen"
       IF feld1$ LIKE "Keyword*" THEN 
         IF fdat$ LIKE "ADRStat" THEN 
           ADRStatus.adressen = kw$
           ADRFarbe.adressen = farbe%
         ELSE 
           IF fdat$ LIKE "ADRGrup" THEN 
             ADRGruppe.adressen = kw$
           ELSE 
             IF stichwort.adressen = "" THEN 
               stichwort.adressen = kw$
             ELSE 
               stichwort.adressen = Stichwort.adressen + ", " + kw$
             END IF 
           END IF 
         END IF 
       ELSE 
         feld1$$ = kw$
       END IF 
       CALL QuickStore("adressen")
     END IF 
end170720091: 
     IF fdat$ LIKE "ADRStat" AND farbewert.adrstat < 1 THEN 
      
       REQUEST "Mîchten Sie dem Eintrag eine Farbe zuordnen?","",130,req%
setzeFarbe:  
       IF disabled%("ADRSTATUSFARBE") THEN req% = 0
 
       IF req% = 1 THEN 
         FILE fdat$
         SELECT FIRST 
         a% = 0
         WHILE NOT EOF (fdat$)
           Keyword$(a%) = feld$$
           Keyword%(a%) = farbewert.adrstat
           a% = a% + 1
           SELECT NEXT 
         WEND 
         farbe1% = - 1
         FOR i% = 0 TO a% - 1
           IF Keyword$(i%) = kw$ THEN 
             farbe1% = Keyword%(i%)
             i% = a% + 1
           END IF 
         NEXT i%
         cc$ = FILE 
         FILE "Color"
         INDEX color.color
         SELECT FIRST 
         FOR i% = 0 TO RECCOUNT ("Color") - 1
           tt$(i%) = color.color + SPACE$ (200) + STR$ (colorno.color,"000")
           SELECT NEXT 
         NEXT i%
         CREATE DIALOG "EYWORD",0,0,233,200,title$,"MS Sans Serif",8
         ADD DIALOG "EYWORD",4,0,1,233,176,0,""
         ADD DIALOG "EYWORD",9,4,12,21,24,2
         ADD DIALOG "EYWORD",5,31,14,189,19,0,"Bitte wÑhlen Sie die gewÅnschte Farbe aus:"
         ADD DIALOG "EYWORD",7,31,38,188,122,2,2,tt$,Farbe$,prompt$
         ADD DIALOG "EYWORD",1,57,182,55,15,1,"&OK",1,1
         ADD DIALOG "EYWORD",1,113,182,55,15,0,"&Abbrechen",0,0
         DIALOG "EYWORD",reqc%
         REMOVE DIALOG "EYWORD"
         IF reqc% = 1 THEN 
           farbe% = VAL ( RIGHT$ (Farbe$(0),3))
           IF farbe% <> farbe1% THEN 
             SELECT KEY kw$ LOCK FILE "ADRStat" INDEX keyword.adrstat
             IF keyword.adrstat = kw$ THEN 
               farbewert.adrstat = farbe%
                
               STORE FILE "ADRSTAT"
               UNLOCK CURRENT FILE "adrstat"
             END IF 
             FILE "Adressen"
             SELECT KEY cuko% LOCK FILE "Adressen" INDEX codeku.adressen
             ADRFarbe.adressen = farbe%
             STORE FILE "Adressen"
             UNLOCK CURRENT FILE "ADRESSEN"
             REQUEST "Mîchten Sie allen Adressen mit diesem Adress-Status die Farbe zuordnen?","",130,req2%
             IF req2% = 1 THEN 
               indold$ = INDEX 
               INDEX adrstatus.adressen
               IF RECCOUNT ("Adressen") > 0 THEN 
                 SELECT FIRST LOCK 
               ELSE 
                 SELECT LAST 
               END IF 
               SELECT KEY kw$ LOCK FILE "Adressen" INDEX adrstatus.adressen
               WHILE NOT EOF ("Adressen") AND adrstatus.adressen = kw$
                 IF adrstatus.adressen = kw$ THEN 
                   adrfarbe.adressen = farbe%
                   STORE FILE "Adressen"
                   UNLOCK CURRENT FILE "ADRESSEN"
                 END IF 
                 SELECT NEXT LOCK 
               WEND 
               INDEX indold$
               SELECT KEY cuko% LOCK FILE "Adressen" INDEX codeku.adressen
             END IF 
           END IF 
         END IF 
         FILE cc$

       END IF 
     END IF 
   END IF 
   IF req% = 2 THEN 
     REM ** Stichwort aus Datei Anrede lîschen
     IF EXISTS (kw$,feld$$) THEN 
       SELECT KEY kw$ LOCK FILE fdat$ INDEX feld$$
       REQUEST "Wollen Sie den Eintrag wirklich lîschen?","",130,req2%
       IF req2% = 1 THEN 
         SELECT REMOVE 
         SET STATUS "Eintrag gelîscht"
       END IF 
     ELSE 
       CALL Fehler("Der eingegebene Eintrag ist nicht in der Auswahl - Liste enthalten!","")
     END IF 
   END IF 
 END IF 
 SET STATUS "Bereit"
 FILE cfile$
 IF fdat$ LIKE "SProject" OR fdat$ LIKE "SCateg*" OR fdat$ LIKE "SStatu*" OR fdat$ LIKE "SLoesung" OR fdat$ LIKE "SKompon" THEN GOTO end170720092
   SELECT FIRST FILE "adressen" INDEX CodeKU.adressen
   SELECT KEY knr% LOCK FILE "adressen" INDEX CodeKU.adressen
   REM SELECT FORM KEY knr% LOCK FILE "adressen" INDEX CodeKU.adressen
   FORM 
 MOUSE ON 
end170720092: 
 REM CALL Fehler("","")
 END SUB 
  
 REM 1=Ort
 REM 2=PLZ
SUB OrtStichNeu(art%)
 cuku% = CodeKU.adressen
 IF NEW ("adressen") OR MOD ("adressen") THEN CALL FStore("adressen")
 SET STATUS "Ort erzeugen"
 cfile$ = FILE 
 CALL DFile(2,"OFFICE\Ort" + _fpw$)
 DIM Keyword$( RECCOUNT ("Ort"))
 DIM Auswahl$(1)
 MOUSE OFF 
 FILE "Ort"
 prompt$ = ""
 IF art% = 1 THEN 
   INDEX OrtPLZ.ort
   IF ort.adressen <> "" THEN 
     ok% = 0
     IF plz.adressen <> "" THEN 
       plz$ = plz.adressen
       IF EXISTS (plz$,plz.ort) THEN 
         SELECT KEY plz$ FILE "ort" INDEX plz.ort
         ok% = 1
       ELSE 
         ort$ = ort.adressen
         IF EXISTS (ort$,ort.ort) THEN 
           SELECT KEY ort$ FILE "Ort" INDEX ort.ort
           ok% = 1
         ELSE 
           ok% = 0
         END IF 
       END IF 
     ELSE 
       ort$ = ort.adressen
       IF EXISTS (ort$,ort.ort) THEN 
         SELECT KEY ort$ FILE "Ort" INDEX ort.ort
         ok% = 1
       ELSE 
         ok% = 0
       END IF 
     END IF 
     IF ok% = 1 THEN prompt$ = Ort.adressen + " ," + FN NUMERIC(PLZ.ort) + SPACE$ (160) + STR$ (codeort.ort,"999999")
   END IF 
 END IF 
 IF art% = 2 THEN 
   INDEX PLZOrt.ort
   IF plz.adressen <> "" THEN 
     plz$ = plz.adressen
     IF EXISTS (plz$,plz.ort) THEN 
       SELECT KEY plz$ FILE "ort" INDEX plz.ort
       prompt$ = FN NUMERIC(PLZ.ort) + " ," + ort.ort + SPACE$ (160) + STR$ (codeort.ort,"999999")
     END IF 
   END IF 
 END IF 
 SELECT FIRST 
 a% = 0
 IF prompt$ = "" THEN prompt$ = "ZZZZZZZ"
 
 WHILE NOT EOF ("Ort")
   IF art% = 1 THEN Keyword$(a%) = Ort.Ort + " ," + FN NUMERIC(PLZ.ort) + SPACE$ (160) + STR$ (codeort.ort,"999999")
   IF art% = 2 THEN Keyword$(a%) = FN NUMERIC(PLZ.ort) + " ," + ort.ort + SPACE$ (160) + STR$ (codeort.ort,"999999")
   IF prompt$ = "ZZZZZZZ" THEN prompt$ = Keyword$(a%)
   a% = a% + 1
   SELECT NEXT 
 WEND 
ort301296: 
 MOUSE ON 
 CREATE DIALOG "KEYWORD",0,0,310,200,title$,"MS Sans Serif",8
 ADD DIALOG "KEYWORD",4,0,1,292,176,0,""
 ADD DIALOG "KEYWORD",9,4,12,21,24,2
 ADD DIALOG "KEYWORD",5,30,14,190,19,0,"Bitte wÑhlen Sie den Ort aus, der in die aktuelle Adresse aufgenommen werden soll:"
 ADD DIALOG "KEYWORD",7,30,38,260,105,2,2,Keyword$,Auswahl$,prompt$
 ADD DIALOG "KEYWORD",6,50,158,40,12,0,0,KWPLZ$,8
 ADD DIALOG "KEYWORD",6,110,158,175,12,0,0,KW$,50
 ADD DIALOG "KEYWORD",5,30,158,20,10,0,"PLZ:"
 ADD DIALOG "KEYWORD",5,95,158,12,10,0,"Ort:"
 IF MNdisabled%("SUPERVISOR") THEN 
   ADD DIALOG "KEYWORD",1,92,180,54,15,1,"&OK",1,1
   ADD DIALOG "KEYWORD",1,148,180,54,15,0,"&Abbrechen",0,0
 ELSE 
   ADD DIALOG "KEYWORD",1,92,180,54,15,1,"&OK",1,1
   ADD DIALOG "KEYWORD",1,148,180,54,15,0,"&Abbrechen",0,0
   ADD DIALOG "KEYWORD",1,204,180,54,15,0,"&Lîschen",2,1
 END IF 
 DIALOG "KEYWORD",req%
 REMOVE DIALOG "KEYWORD"
 IF req% <> 0 THEN 
   neu1% = 0
   IF kw$ = "" THEN 
     codeort% = VAL ( RIGHT$ (Auswahl$(0),6))
     SELECT KEY codeort% FILE "ort" INDEX codeort.ort
     kw$ = ort.ort
     kwplZ$ = plz.ort
     IF req% <> 2 THEN 
       SELECT KEY cuku% LOCK FILE "adressen" INDEX CodeKU.adressen
       Ort.adressen = kw$
       plz.adressen = kwplz$
       CALL FStore("adressen")
        
     END IF 
   ELSE 
     neu1% = 1
     IF kw$ = "" OR kwplz$ = "" THEN 
       REQUEST "Bitte PLZ und Ort eintragen!","",2
       GOTO ort301296
     END IF 
   END IF 
   IF neu1% = 1 THEN 
     REM ** Ort neu aufnehmen
     plzort$ = FN NUMERIC(kwPLZ$) + TRIM$ ( LTRIM$ (kw$))
     IF NOT EXISTS (plzort$,PLZOrt.Ort) THEN 
       BLANK 
       codeort.ort = SER ("ort",1)
       fdat$ = "Ort"
       codeKey = SER (fdat$,1)
       Workstation.fdat$ = Workstation%
       QWoNo.fdat$ = STR$ (Workstation%,"000000") + STR$ (codekey.fdat$,"000000")
       RecStatus.fdat$ = "c"
       Ort.Ort = kw$
       plz.ort = kwplz$
       CALL FStore("Ort")
     END IF 
     SELECT KEY cuku% LOCK FILE "adressen" INDEX CodeKU.adressen
     REM IF Ort.adressen = "" THEN 
       Ort.adressen = kw$
       plz.adressen = kwplz$
     REM END IF 
     CALL FStore("adressen")
   END IF 
   IF req% = 2 THEN 
     REM ** Stichwort aus Datei KEYWORDS lîschen

     IF EXISTS (codeort%,codeOrt.Ort) THEN 
       SELECT KEY codeort% LOCK FILE "Ort" INDEX codeort.Ort
       REQUEST "Wollen Sie den Ort " + CHR$ (34) + kw$ + CHR$ (34),"wirklich aus der Orts - Liste entfernen?",135,req2%
       IF req2% = 1 THEN 
         SELECT REMOVE 
         SET STATUS "Ort gelîscht"
       END IF 
     ELSE 
       CALL Fehler("Der eingegebene Ort ist nicht in der Orts - Liste enthalten!","")
     END IF 
   END IF 
 END IF 
 SET STATUS "Bereit"
 FILE cfile$
 MOUSE ON 
 FORM 
 END SUB 
 
  
  
  


 ' Anzeige der Kundendaten als Fenster
 ' ======================================================================
 
SUB SHOWAdr()
 w% = 120:h% = 120:st% = NOW 
 d$ = "ShowCustoms"
 CREATE DIALOG d$,0,0,w%,h%,title$,"MS Sans Serif",8
 Kunde$ = vorname.adressen + " " + nachname.adressen
 Ort$ = Plz.adressen + " " + ort.adressen
 ADD DIALOG d$,5,4,20,90,9,0,anrede.adressen
 ADD DIALOG d$,5,4,28,90,9,0,kunde$
 ADD DIALOG d$,5,4,36,90,9,0,stra·e.adressen
 ADD DIALOG d$,5,4,44,90,9,0,ort$
 ADD DIALOG d$,5,4,58,90,9,0,"Telefon 1"
 ADD DIALOG d$,5,40,58,90,9,0,telefon1.adressen
 ADD DIALOG d$,5,4,66,90,9,0,"Telefon 2"
 ADD DIALOG d$,5,40,66,90,9,0,telefon2.adressen
 ADD DIALOG d$,5,4,74,90,9,0,"Telefax"
 ADD DIALOG d$,5,40,74,90,9,0,telefax.adressen
 ADD DIALOG d$,5,4,82,90,9,0,"BTX"
 ADD DIALOG d$,5,40,82,90,9,0,btx.adressen
 ADD DIALOG d$,1,w% - 40,h% - 18,36,14,1,"OK",1,1
 DIALOG d$,a%
 REMOVE DIALOG d$
 END SUB 
 
 
 ' Ausgabe Geburtstagsliste
 ' ======================================================================

 
SUB GEBLISTE()
 IF disabled%("ADRDrucken") THEN END SUB 
   IF OPEN ("adrtemp") THEN CLOSE FILE "ADRTEMP"
   CALL DFile(2,"OFFICE\adrtemp" + _fpw$)
   REMOVE FROM FILE "adrtemp"
 SET STATUS "Geburtstagsliste ausgeben"
 IF _projekt$ LIKE "PROVIS*" THEN 
   CALL DFile(3,"MAADR" + _fpw$)
 END IF 
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 opt% = 2
 opt2% = 1
 sort% = 2
 listart% = 1
 ok1% = - 1
 GOTO Geb1Dial150996
GebDial150996: 
 REQUEST "Die Datumseingabe von: bis: war falsch","Bitte geben Sie das Datum in der Form: tt.mm.jjjj ein!",0
Geb1Dial150996: 
    CREATE DIALOG "GBLISTE",0,0,236,239,"Geburtstagsliste","MS Sans Serif",8
    ADD DIALOG "GBLISTE",4,0,0,229,215,0,""
    ADD DIALOG "GBLISTE",9,6,9,22,23,2
    ADD DIALOG "GBLISTE",5,37,9,105,11,0,"Ausgabe einer Geburtstagsliste:"
    ADD DIALOG "GBLISTE",5,37,22,184,19,0,"Bitte geben Sie an, welche Art von Geburtstagsliste Sie wÅnschen."
    ADD DIALOG "GBLISTE",4,37,43,84,112,0," Liste fÅr ... "
    ADD DIALOG "GBLISTE",3,42,52,70,10,0,"ganzes Jahr",1,opt%
    ADD DIALOG "GBLISTE",3,42,63,70,10,0,"diesen Monat",2,opt%
    ADD DIALOG "GBLISTE",3,42,73,70,9,0,"nÑchsten Monat",3,opt%
    ADD DIALOG "GBLISTE",3,42,84,70,9,0,"wahlfreier Monat",7,opt%
    ADD DIALOG "GBLISTE",6,67,96,13,11,0,0,mon1%,2
    ADD DIALOG "GBLISTE",5,42,96,20,8,0,"Monat:"
    ADD DIALOG "GBLISTE",3,42,114,81,9,0,"freie Wahl Datum",6,opt%
    ADD DIALOG "GBLISTE",6,57,127,53,11,0,0,von$,10
    ADD DIALOG "GBLISTE",5,42,128,15,8,0,"von:"
    ADD DIALOG "GBLISTE",6,57,139,53,12,0,0,bis$,10
    ADD DIALOG "GBLISTE",5,42,141,12,8,0,"bis:"
    ADD DIALOG "GBLISTE",4,121,43,104,53,0," Ausgabeziel ... "
    ADD DIALOG "GBLISTE",3,126,57,99,8,0,"Bildschirm/Drucker",1,opt2%
    ADD DIALOG "GBLISTE",3,126,67,100,9,0,"Serienbriefdatei (dBASE)",2,opt2%
    ADD DIALOG "GBLISTE",3,126,77,71,9,0,"EXCEL - Tabelle",3,opt2%
    ADD DIALOG "GBLISTE",4,121,98,107,57,0,"Sortierung ... "
    ADD DIALOG "GBLISTE",3,126,113,99,8,0,"Alphabetisch Kunde",1,sort%
    IF _projekt$ LIKE "PROVIS" THEN ADD DIALOG "GBLISTE",3,126,123,100,9,0,"Alphabetisch Agentur/Kunde",2,sort%
    IF _projekt$ LIKE "FACTURA" THEN ADD DIALOG "GBLISTE",3,126,123,100,9,0,"Alphabetisch Mitarb./Kunde",2,sort%
    ADD DIALOG "GBLISTE",3,126,133,71,10,0,"Geburtsdatum",3,sort%
    ADD DIALOG "GBLISTE",4,37,155,189,41,0,"Listenart ... "
    ADD DIALOG "GBLISTE",3,42,168,176,9,0,"Ausdruck mit allen Angaben zur Adresse",1,listart%
    IF _projekt$ LIKE "PROVIS" THEN ADD DIALOG "GBLISTE",3,42,179,178,9,0,"nur Kurzausdruck mit Name, Geb.datum, Agentur",2,listart%
    IF _projekt$ LIKE "FACTURA" THEN ADD DIALOG "GBLISTE",3,42,179,178,9,0,"nur Kurzausdruck mit Name, Geb.datum, Mitarb.",2,listart%
    IF _projekt$ LIKE "PROVIS" THEN ADD DIALOG "GBLISTE",2,37,198,184,13,0,"Kunden einer bestimmten Agentur","j","n",mitarb$
    IF _projekt$ LIKE "FACTURA" THEN ADD DIALOG "GBLISTE",2,37,198,184,13,0,"Kunden eines bestimmten Mitarbeiters","j","n",mitarb$
    ADD DIALOG "GBLISTE",1,61,219,53,15,1,"&OK",1,1
    ADD DIALOG "GBLISTE",1,117,219,56,15,0,"&Abbrechen",0,0
 DIALOG "GBLISTE",req%
 REMOVE DIALOG "GBLISTE"
  IF req% = 1 THEN 
       IF mitarb$ = "j" THEN 
         IF _projekt$ LIKE "PROVIS" THEN 
           FILE "maadr"
           INDEX nachname
           SELECT FIRST 
           a% = 0
           SELECT FIRST 
           REDIM AdrFound$( RECCOUNT ("maadr"))
           WHILE NOT EOF ("maadr")
             AdrFound$(a%) = LTRIM$ (nachname) + "," + LTRIM$ (vorname) + SPACE$ (80) + STR$ (codema,"000000")
             a% = a% + 1
             SELECT NEXT 
           WEND 
           AdrFound$(a%) = ""
           LAuswahl$ = AdrFound$(0)
           LAuswahl1$(0) = LAuswahl$
           CREATE DIALOG "ADRSTICHW",0,0,194,202,title$,"MS Sans Serif",8
           ADD DIALOG "ADRSTICHW",7,5,6,183,168,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
           ADD DIALOG "ADRSTICHW",1,33,180,55,16,1,"&OK",1,1
           ADD DIALOG "ADRSTICHW",1,93,180,55,16,0,"&Abbrechen",0,0
           DIALOG "ADRSTICHW",req5%
           MOUSE ON 
           REMOVE DIALOG "ADRSTICHW"
           IF req5% = 1 THEN 
             LAuswahl$ = LAuswahl1$(0)
             scodema% = VAL ( RIGHT$ (LAuswahl$,6))
             SELECT FIRST 
             SELECT KEY scodema% FILE "maadr" INDEX codema.maadr
             smaname$ = nachname.maadr + ", " + vorname.maadr
           ELSE 
             mitarb$ = "n"
             req% = 0
             GOTO gebend061196
           END IF 
         END IF 
 
         IF _projekt$ LIKE "FACTURA" THEN 
           FILE "vertrete"
           INDEX nachname
           SELECT FIRST 
           a% = 0
           SELECT FIRST 
           REDIM AdrFound$( RECCOUNT ("vertrete"))
           WHILE NOT EOF ("vertrete")
             AdrFound$(a%) = LTRIM$ (nachname) + "," + LTRIM$ (vorname) + SPACE$ (80) + STR$ (codema,"000000")
             a% = a% + 1
             SELECT NEXT 
           WEND 
           AdrFound$(a%) = ""
           LAuswahl$ = AdrFound$(0)
           LAuswahl1$(0) = LAuswahl$
           CREATE DIALOG "ADRSTICHW",0,0,194,202,title$,"MS Sans Serif",8
           ADD DIALOG "ADRSTICHW",7,5,6,183,168,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
           ADD DIALOG "ADRSTICHW",1,33,180,55,16,1,"&OK",1,1
           ADD DIALOG "ADRSTICHW",1,93,180,55,16,0,"&Abbrechen",0,0
           DIALOG "ADRSTICHW",req5%
           MOUSE ON 
           REMOVE DIALOG "ADRSTICHW"
           IF req5% = 1 THEN 
             LAuswahl$ = LAuswahl1$(0)
             scodema% = VAL ( RIGHT$ (LAuswahl$,6))
             SELECT FIRST 
             SELECT KEY scodema% FILE "vertrete" INDEX codema.vertrete
             smaname$ = nachname.vertrete + ", " + vorname.vertrete
           ELSE 
             req% = 0
             mitarb$ = "n"
             GOTO gebend061196
           END IF 
         END IF 
       END IF 
 
   IF req% = 1 AND opt% = 6 THEN 
     ON ERROR GOTO GebDial150996
     IF von$ = "" THEN von$ = "01.01.1901"
     IF bis$ = "" THEN bis$ = DATE$ ( TODAY ,"0d.mm.yyyyy")
     tagvon% = DAYS (von$)
     tagbis% = DAYS (bis$)
   END IF 
   MOUSE OFF 
   cdir$ = DIRECTORY 
   DIRECTORY _netpath$ + "OFFICE"
   Ueberschrift$ = "Geburtstagsliste "
   SELECT CASE opt%
   CASE 1
     hd$ = "(ganzes Jahr)"
   CASE 2
     hd$ = "(Monat " + MONTH$ ( TODAY ) + ")"
   CASE 3
     hd$ = "(Monat " + MONTH$ ( TODAY + 30) + ")"
   CASE 4
     hd$ = "(diese Woche)"
   CASE 5
     hd$ = "(nÑchste Woche)"
   CASE 6
     hd$ = "vom: " + von$ + " bis: " + bis$
   CASE 7
     IF mon1% = 1 THEN monlang$ = "Januar"
     IF mon1% = 2 THEN monlang$ = "Februar"
     IF mon1% = 3 THEN monlang$ = "MÑrz"
     IF mon1% = 4 THEN monlang$ = "April"
     IF mon1% = 5 THEN monlang$ = "Mai"
     IF mon1% = 6 THEN monlang$ = "Juni"
     IF mon1% = 7 THEN monlang$ = "Juli"
     IF mon1% = 8 THEN monlang$ = "August"
     IF mon1% = 9 THEN monlang$ = "September"
     IF mon1% = 10 THEN monlang$ = "Oktober"
     IF mon1% = 11 THEN monlang$ = "November"
     IF mon1% = 12 THEN monlang$ = "Dezember"

     hd$ = "Monat: " + monlang$
   END SELECT 
   Ueberschrift$ = Ueberschrift$ + hd$
   title2$ = Ueberschrift$
   MOUSE OFF 
   CALL DFile(2,"OFFICE\telefon" + _fpw$)
   CALL DFile(2,"OFFICE\connect" + _fpw$)
   IF OPEN ("adrtemp") THEN CLOSE FILE "ADRTEMP"
   CALL DFile(2,"OFFICE\adrtemp" + _fpw$)
   REMOVE FROM FILE "adrtemp"
   FILE "adressen"
   INDEX codema.adressen
   SELECT FIRST 
   abz% = 0
   ok% = 1
   CALL Server("LISTBOXINIT","Adre·auswahl")
   CALL Gauge(1,"Adre·datei wird durchsucht...")
   CALL Server("GAUGEENABLECANCEL","")
   _prozt% = 0
   _proz2% = 0
   _anz% = RECCOUNT ("adressen")
   REM 240999
   a% = 0
   b% = RECCOUNT ("ADRESSEN")
   IF b% * 6 > 32690 THEN 
     b% = 32690
     REDIM AdrFound$(32690)
   ELSE 
     b% = b% * 6
     REDIM AdrFound$(b%)
   END IF 
   FOR a% = 0 TO b%
     AdrFound$(a%) = ""
   NEXT a%
   a% = 0
   WHILE NOT EOF ("adressen") AND ServerReply$() <> "CANCEL"
     codeku% = codeku.adressen
     _proz% = INT ((100 / _anz%) * _proz2%)
     IF _proz% > 100 THEN _proz% = 100
     IF _proz% < 2 THEN _proz% = 2
     IF _proz% <> _prozt% THEN 
       _prozt% = _proz%
       SET STATUS "erweiterte Suche... " + STR$ (_prozt%,"999") + " %"
       CALL Gauge(_proz%,"")
     END IF 
     _proz2% = _proz2% + 1
     SELECT CASE opt%
       CASE 1
         IF geburtstag.adressen > 0 THEN 
           anrede$ = anrede.adressen
           titel$ = titel.adressen
           IF anrede$ LIKE "Herr*" OR anrede$ LIKE "Fr*" OR anrede$ LIKE "Fam*" OR anrede$ LIKE "Ehe*" OR anrede$ LIKE "Kind*" THEN 
             nachname$ = LTRIM$ (nachname.adressen)
             vorname$ = LTRIM$ (vorname.adressen)
           ELSE 
             nachname$ = LTRIM$ (nachname.adressen)
             vorname$ = LTRIM$ (Geburtsname.adressen)
           END IF 
           gebdat% = Geburtstag.adressen
           ok% = - 1
           IF mitarb$ = "j" THEN 
             IF codema.adressen = scodema% THEN 
               ok% = - 1
             ELSE 
               ok% = 0
             END IF 
           END IF 
           IF ok% = - 1 THEN 
             CALL WriteAdrTemp(codeku%,anrede$,titel$,nachname$,vorname$,gebdat%)
             AdrFound$(a%) = nachname$ + STR$ (codeadrt%,"000000")
             a% = a% + 1
             abz% = abz% + 1
             CALL Server("GaugeMessage","... " + TRIM$ ( STR$ (abz%,"9999")) + " gefunden (" + LTRIM$ (Nachname$) + ", " + LEFT$ ( LTRIM$ (Vorname$),10) + ")")
             tmpzeile$ = LTRIM$ (Nachname$) + ", " + LEFT$ ( LTRIM$ (Vorname$),10)
             CALL Server("LISTBOXADD",tmpZeile$)
             REM SET STATUS "Anzahl gefundener Geburtstage: " + STR$ (abz%,"99999999")
           END IF 
         END IF 
       CASE 2
         IF geburtstag.adressen > 0 AND MONTH (geburtstag.adressen) = MONTH ( TODAY ) THEN 
           anrede$ = anrede.adressen
           titel$ = titel.adressen
           nachname$ = nachname.adressen
           vorname$ = vorname.adressen
           gebdat% = Geburtstag.adressen
           ok% = - 1
           IF mitarb$ = "j" THEN 
             IF codema.adressen = scodema% THEN 
               ok% = - 1
             ELSE 
               ok% = 0
             END IF 
           END IF 
           IF ok% = - 1 THEN 
             CALL WriteAdrTemp(codeku%,anrede$,titel$,nachname$,vorname$,gebdat%)
             AdrFound$(a%) = nachname$ + STR$ (codeadrt%,"000000")
             a% = a% + 1
             abz% = abz% + 1
             CALL Server("GaugeMessage","... " + TRIM$ ( STR$ (abz%,"9999")) + " gefunden (" + LTRIM$ (Nachname$) + ", " + LEFT$ ( LTRIM$ (Vorname$),10) + ")")
             tmpzeile$ = LTRIM$ (Nachname$) + ", " + LEFT$ ( LTRIM$ (Vorname$),10)
             CALL Server("LISTBOXADD",tmpZeile$)
           END IF 
           REM SET STATUS "Anzahl gefundener Geburtstage: " + STR$ (abz%,"99999999")
         END IF 
       CASE 3
         nextmonat% = MONTH ( TODAY ) + 1
         IF nextmonat% = 13 THEN nextmonat% = 1
         IF geburtstag.adressen > 0 AND MONTH (geburtstag.adressen) = nextmonat% THEN 
           anrede$ = anrede.adressen
           titel$ = titel.adressen
           nachname$ = nachname.adressen
           vorname$ = vorname.adressen
           gebdat% = Geburtstag.adressen
           ok% = - 1
           IF mitarb$ = "j" THEN 
             IF codema.adressen = scodema% THEN 
               ok% = - 1
             ELSE 
               ok% = 0
             END IF 
           END IF 
           IF ok% = - 1 THEN 
             CALL WriteAdrTemp(codeku%,anrede$,titel$,nachname$,vorname$,gebdat%)
             AdrFound$(a%) = nachname$ + STR$ (codeadrt%,"000000")
             a% = a% + 1
             abz% = abz% + 1
             CALL Server("GaugeMessage","... " + TRIM$ ( STR$ (abz%,"9999")) + " gefunden (" + LTRIM$ (Nachname$) + ", " + LEFT$ ( LTRIM$ (Vorname$),10) + ")")
             tmpzeile$ = LTRIM$ (Nachname$) + ", " + LEFT$ ( LTRIM$ (Vorname$),10)
             CALL Server("LISTBOXADD",tmpZeile$)
           END IF 
           REM SET STATUS "Anzahl gefundener Geburtstage: " + STR$ (abz%,"99999999")
         END IF 
       CASE 4
       CASE 5
       CASE 6
         IF geburtstag.adressen > 0 AND geburtstag.adressen >= tagvon% AND geburtstag.adressen <= tagbis% THEN 
           anrede$ = anrede.adressen
           titel$ = titel.adressen
           nachname$ = nachname.adressen
           vorname$ = vorname.adressen
           gebdat% = Geburtstag.adressen
           ok% = - 1
           IF mitarb$ = "j" THEN 
             IF codema.adressen = scodema% THEN 
               ok% = - 1
             ELSE 
               ok% = 0
             END IF 
           END IF 
           IF ok% = - 1 THEN 
             CALL WriteAdrTemp(codeku%,anrede$,titel$,nachname$,vorname$,gebdat%)
             AdrFound$(a%) = nachname$ + STR$ (codeadrt%,"000000")
             a% = a% + 1
             abz% = abz% + 1
             CALL Server("GaugeMessage","... " + TRIM$ ( STR$ (abz%,"9999")) + " gefunden (" + LTRIM$ (Nachname$) + ", " + LEFT$ ( LTRIM$ (Vorname$),10) + ")")
             tmpzeile$ = LTRIM$ (Nachname$) + ", " + LEFT$ ( LTRIM$ (Vorname$),10)
             CALL Server("LISTBOXADD",tmpZeile$)
           END IF 
           REM SET STATUS "Anzahl gefundener Geburtstage: " + STR$ (abz%,"99999999")
         END IF 
       CASE 7
         nextmonat% = mon1%
         IF nextmonat% = 13 THEN nextmonat% = 1
         IF geburtstag.adressen > 0 AND MONTH (geburtstag.adressen) = nextmonat% THEN 
           anrede$ = anrede.adressen
           titel$ = titel.adressen
           nachname$ = nachname.adressen
           vorname$ = vorname.adressen
           gebdat% = Geburtstag.adressen
           ok% = - 1
           IF mitarb$ = "j" THEN 
             IF codema.adressen = scodema% THEN 
               ok% = - 1
             ELSE 
               ok% = 0
             END IF 
           END IF 
           IF ok% = - 1 THEN 
             CALL WriteAdrTemp(codeku%,anrede$,titel$,nachname$,vorname$,gebdat%)
             AdrFound$(a%) = nachname$ + STR$ (codeadrt%,"000000")
             a% = a% + 1
             abz% = abz% + 1
             CALL Server("GaugeMessage","... " + TRIM$ ( STR$ (abz%,"9999")) + " gefunden (" + LTRIM$ (Nachname$) + ", " + LEFT$ ( LTRIM$ (Vorname$),10) + ")")
             tmpzeile$ = LTRIM$ (Nachname$) + ", " + LEFT$ ( LTRIM$ (Vorname$),10)
             CALL Server("LISTBOXADD",tmpZeile$)
           END IF 
           REM SET STATUS "Anzahl gefundener Geburtstage: " + STR$ (abz%,"99999999")
         END IF 
   END SELECT 
     FILE "adressen"
     SELECT NEXT FILE "adressen"
   WEND 
   SELECT WHERE FILE "adressen"
   CALL Gauge(0,"")
   IF opt2% = 1 THEN 
     REM Ausgabe auf Bildschirm
     REM listart%=1 ausfÅhrliche Liste
     REM listart%=2 Kurzliste
     IF sort% = 1 THEN 
       wbsort$ = "Nachname"
       CALL VPEADRTemp("ADRTEMP",FormatPrint$,title2$,wbsort$,listart%)
     END IF 
     IF sort% = 2 THEN 
       wbsort$ = "QuickMaKund"
       CALL VPEADRTemp("ADRTEMP",FormatPrint$,title2$,wbsort$,listart%)
     END IF 
     IF sort% = 3 THEN 
       wbsort$ = "Gebsort"
       CALL VPEADRTemp("ADRTEMP",FormatPrint$,title2$,wbsort$,listart%)
     END IF 

     wbsort$ = ""
   END IF 
   IF opt2% = 2 THEN 
     adrser% = 1
     CALL SerieNeu1("ADRTEMP")
     REM 240999 Ausgabe nach dBASE
     REM FILE "adrtemp"
     REM INDEX nachname.adrtemp
     REM SELECT FIRST 
     REM EXPORT nach dBase aufrufen
     REM dir1$ = DIRECTORY 
     REM dateiname2$ = "*.dbf"
     REM REQUEST "Speichern als dBase-Datei..."," ",27,req%,dateiname2$
     REM IF req% = 1 THEN 
       REM SET STATUS "EXPORT der gewÑhlten Adressen nach: " + dateiname2$
       REM Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
       REM Superbase.Converters.SBF.SourceFile = "ADRTEMP"
       REM Superbase.Converters.SBF.Descending = 0
       REM Superbase.Converters.SBF.Merge = 0
       REM Superbase.Converters.SBF.LogErrors = 0
       REM Superbase.Converters.SBF.MultiResponse = 0
       REM Superbase.Converters.DBF.DestFormat = "dBase III+ / IV"
       REM Superbase.Converters.DBF.DestFile = dateiname2$
       REM Superbase.Converters.DBF.Convert(Superbase.Converters.SBF)
       REM DIRECTORY dir1$
       REM REMOVE FROM FILE "adrtemp"
       REM SET STATUS "EXPORT beendet!"
     REM END IF 

   END IF 
   IF opt2% = 3 THEN 
     REM Ausgabe nach Excel
     FILE "adrtemp"
     INDEX name1.adrtemp
     SELECT FIRST 
     REM EXPORT nach EXCEL aufrufen
     dir1$ = DIRECTORY 
     dateiname2$ = "*.xls"
     REQUEST "Speichern als EXCEL..."," ",27,req%,dateiname2$
     IF req% = 1 THEN 
       SET STATUS "EXPORT der gewÑhlten Adressen nach: " + dateiname2$
       Superbase.Converters.SBF.SourceFormat = "Superbase"
       Superbase.Converters.SBF.SourceFile = "ADRTEMP"
       Superbase.Converters.SBF.Descending = 0
       Superbase.Converters.SBF.Merge = 0
       Superbase.Converters.SBF.LogErrors = 0
       Superbase.Converters.SBF.MultiResponse = 0
       Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
       Superbase.Converters.XLS.DestFile = dateiname2$
       Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
       DIRECTORY dir1$
       REMOVE FROM FILE "adrtemp"
       SET STATUS "EXPORT beendet!"
     END IF 
   END IF 
 END IF 
gebend061196: 
 FILE "Adressen"
 END SUB 

SUB WriteAdrTemp(codeku%,anrede$,titel$,nachname$,vorname$,gebdat%)
  BLANK FILE "adrtemp"
  codeku.adrtemp = codeku%
  codeadrt% = SER ("ADRTEMP",1)
  codeadrt.adrtemp = codeadrt%
  Kundennummer.adrtemp = Kundennummer.adressen
  anrede.adrtemp = anrede$
  titel.adrtemp = titel$
  ASerJN.adrtemp = ASerJN.adressen
  IF anrede$ LIKE "Herr*" OR anrede$ LIKE "Fr*" OR anrede$ LIKE "Fam*" OR anrede$ LIKE "Ehe*" OR anrede$ LIKE "Kind*" THEN 
    Name2.adrtemp = Nachname$
    Name1.adrtemp = Vorname$
    REM Name3.adrtemp = Geburtsname.adressen
  ELSE 
    REM 24072000
    REM Name1.adrtemp = Nachname$
    REM Name2.adrtemp = Vorname$
    Name2.adrtemp = Nachname$
    Name1.adrtemp = Vorname$
    zuHaenden.adrtemp = Vorname.adressen
  END IF 
  Strasse.adrtemp = Stra·e.adressen
  PLZ.adrtemp = PLZ.adressen
  Ort.adrtemp = Ort.adressen
  Postanschrift.adrtemp = Postanschrift.adressen
  NationalitÑt.adrtemp = NationalitÑt.adressen
  Staatsangehîrig.adrtemp = Staatsangehîrig.adressen
  Land.adrtemp = Land.adressen
  Geburtstag.adrtemp = DATE$ (gebdat%,"0d.mm.yyyy")
  mon1% = MONTH (gebdat%)
  tag1% = DAY (gebdat%)
  TagMon.adrtemp = (tag1% * 100) + mon1%
  Gebsort.adrtemp = VAL ( LEFT$ ( DATE$ (gebdat%,"mm0dyy"),4))
  K1Bank.adrtemp = K1Bank.adressen
  K1BLZ.adrtemp = K1BLZ.adressen
  K1Konto.adrtemp = K1Konto.adressen
  K2Bank.adrtemp = K2Bank.adressen
  K2BLZ.adrtemp = K2BLZ.adressen
  K2Konto.adrtemp = K2Konto.adressen
  Kunde_seit.adrtemp = DATE$ (Kunde_seit.adressen,"0d.mm.yyyy")
  REM Notiz.adrtemp = Notiz.adressen
  
  Briefanrede.adrtemp = Briefanrede.adressen
  REM Geburtsname.adrtemp = Geburtsname.adressen
  feld1$ = "Telart"
  feld2$ = "Telnr"
  feld3$ = "FaxJn"
  codema% = codema.adressen
  IF EXISTS (codeku%,codeku.telefon) THEN 
    FILE "telefon"
    INDEX codeku.telefon
    SELECT FIRST 
    SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
    abi% = 0
    WHILE codeku.telefon = codeku% AND abi% < 20 AND NOT EOF ("telefon")
      abi% = abi% + 1
      IF abi% < 10 THEN 
        feldart$ = feld1$ + STR$ (abi%,"9") + ".adrtemp"
        feldnum$ = feld2$ + STR$ (abi%,"9") + ".adrtemp"
        feldfax$ = feld3$ + STR$ (abi%,"9") + ".adrtemp"
      ELSE 
        feldart$ = feld1$ + STR$ (abi%,"99") + ".adrtemp"
        feldnum$ = feld2$ + STR$ (abi%,"99") + ".adrtemp"
        feldfax$ = feld3$ + STR$ (abi%,"99") + ".adrtemp"
      END IF 
      feldart$$ = art.telefon
      feldnum$$ = nummer.telefon
      feldfax$ = FonOderFax.telefon
      SELECT NEXT FILE "telefon" INDEX codeku.telefon
    WEND 
  END IF 
  IF _projekt$ LIKE "FACTURA" THEN 
    IF EXISTS (codema%,codema.vertrete) THEN 
      FILE "vertrete"
      INDEX codema.vertrete
      SELECT FIRST 
      SELECT KEY codema% FILE "vertrete" INDEX codema.vertrete
      Mitarbeiter.adrtemp = TRIM$ (nachname.vertrete) + ", " + TRIM$ (vorname.vertrete)
      QuickMaKund.adrtemp = TRIM$ (nachname.vertrete) + TRIM$ (vorname.vertrete) + nachname.adressen
    END IF 
  END IF 
  IF _projekt$ LIKE "PROVIS" THEN 
    IF EXISTS (codema%,codema.maadr) THEN 
      FILE "maadr"
      INDEX codema.maadr
      SELECT FIRST 
      SELECT KEY codema% FILE "maadr" INDEX codema.maadr
      Mitarbeiter.adrtemp = TRIM$ (nachname.maadr) + ", " + TRIM$ (vorname.maadr)
      QuickMaKund.adrtemp = TRIM$ (nachname.maadr) + TRIM$ (vorname.maadr) + nachname.adressen
    END IF 
  END IF 
  FILE "adrtemp"
  STORE FILE "adrtemp"
  UNLOCK CURRENT FILE "adrtemp"
 END SUB 



  
 '      **************************************
 '      ** Routinen fÅr Formular "SUPERVIS" **
 '      **************************************
 
SUB SUPERVIS()
 IF disabled%("SUPERVIS") THEN END SUB 
 cuvc% = Codema.supervis
 CALL DFile(2,"access" + _fpw$)
 CALL DFile(2,"accode" + _fpw$)
 CALL DFile(3,"VERTRETE" + _fpw$)
 _formend% = 0
 SET STATUS "Bereit"
 ON ERROR GOTO ErrorHandler
 WHILE _formend% = 0
   SUPERVISsub% = 0
   IF FORM <> "SUPERVIS" THEN 
     SET HEADING title$ + " - Mitarbeiterverwaltung"
     OPEN FORM GOFFForm$ + "SUPERVIS"
     SET f = Superbase.Form
     SET STATUS "Mitarbeiterverwaltung"
     FILE "SUPERVIS"
     INDEX nachname.supervis
     SELECT FIRST 
     SELECT FORM KEY codema.supervis FILE "access" INDEX codema.access
 
     CALL MNSUPERVIS()
     FORM 
   END IF 
   MENU ON 
   MOUSE ON 
   FORM 
   CALL SVUpdate()
   ON ERROR GOTO ErrorHandler
   f.suchen.enabled = - 1
   f.abbruch.enabled = 0
   f.abbruch.visible = 0
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL SVPrev()
   CASE CrsRight%,PgDn%
     CALL SVNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   CALL ClearKBDBuffer()
   SELECT CASE SUPERVISsub%
   CASE 2
     REM Zugriffsrechte Åbernehmen
     codema% = codema.supervis
     CALL MAZugriff(codema%)
     SELECT FORM KEY codema% FILE "supervis" INDEX codema.supervis
     FORM 
   CASE 99
     CALL ButDesabled()
     f.freigeben.enabled = 0
     f.sperren.enabled = 0
     MENU OFF 
     ENTER nachname.supervis,0
     MENU ON 
     f.freigeben.enabled = - 1
     f.sperren.enabled = - 1
     IF GEMAILJNAuto% = - 1 AND GMACodeMA% = codema.supervis THEN 
       GEMAILJNAuto% = EMAILJNAuto.supervis
     END IF 
     CALL ButEnabled()
     IF abbruch% = - 1 THEN 
       SELECT KEY codema.supervis FILE "supervis" INDEX codema.supervis
       FORM 
       abbruch% = 0
     END IF 
     SELECT FORM KEY codema.supervis FILE "supervis" INDEX codema.supervis
     FORM 
   END SELECT 
 WEND 
 _formend% = 0
 IF FileChanged%("supervis") = 1 THEN CALL FStore("supervis")
 SELECT KEY cuvc% FILE "supervis" INDEX CodeMA.supervis
 END SUB 
 

 '  Mitarbeiter mit Zugriffsrechten drucken
 ' ====================================================================== 
SUB SVDrucken()
    ma% = Codema.supervis
    DIM dlg AS Dialog
    DIM control AS DialogControl
    opt% = 0
    Superbase.Dialogs.Add("Dialogname")
    SET dlg = Superbase.Dialogs.Dialogname
    dlg.Move(0,0,222,84)
    dlg.Caption = "Art des Druckes"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(2,8,219,54)
    control.Caption = " WÑhlen Sie eine Option "
 
    SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
    control.Move(6,20,159,10)
    control.Caption = "aktuellen Mitarbeiter drucken"
    control.Bind("opt%")
    control.ValueOn = 0
 
    SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
    control.Move(6,32,214,9)
    control.Caption = "Gesamtliste der Mitarbeiter drucken"
    control.Bind("opt%")
    control.ValueOn = 1
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(58,64,43,16)
    control.Default = 1
    control.Caption = "OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(104,64,42,16)
    control.Caption = "Abbruch"
    control.ReturnValue = 0
    DIALOG "Dialogname",req%
    REMOVE DIALOG "Dialogname"
    IF req% = 0 THEN END SUB 
  
    FILE "supervis"
    SELECT FIRST LOCK 
    WHILE NOT EOF ("Supervis")
      IF NOT EXISTS (codema.supervis,codema.access) THEN 
        BLANK FILE "access"
        codema.access = codema.supervis
        STORE FILE "ACCESS"
      END IF 
      SELECT NEXT LOCK FILE "Supervis"
    WEND 
 p$ = DIRECTORY 
 DIRECTORY _netpath$ + "OFFICE"
 CALL ORep("SVDRUCK")

 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 GROUP Name.SUPERVIS
 BEFORE GROUP Name.SUPERVIS
     SET REPORT PAGE "H_Name.SUPER002"
     OUTPUT REPORT PAGE 
 END GROUP 
 
 AFTER GROUP Name.SUPERVIS
     SET REPORT PAGE "F_Name.SUPER002"
     OUTPUT REPORT PAGE 
     EJECT REPORT 
 END GROUP 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 ON ERROR GOTO SVDruckend
 SET QUERY ON 
 SET QUERY LOCK OFF 
 IF opt% = 0 THEN 
   SELECT ;
     WHERE CodeMA.SUPERVIS = CodeMA.access AND codema.supervis = ma%
     ORDER REPORT Name.SUPERVIS,Beschreibung.ACCESS
     TO ASK 
   END SELECT 
 ELSE 
   SELECT ;
     WHERE CodeMA.SUPERVIS = CodeMA.access
     ORDER REPORT Name.SUPERVIS,Beschreibung.ACCESS
     TO ASK 
   END SELECT 
 END IF 
 
SVDruckend: 
 DIRECTORY p$
 ON ERROR GOTO ErrorHandler
 END SUB 
 
 
SUB PROVEuroDM()
 MOUSE OFF 
 aa% = 0
 FILE "waehrung"
 WHILE NOT EOF ("WAEHRUNG")
   IF UCASE$ (waehrung.waehrung) = zweitwaehr$ THEN 
     euro% = umrechnung.waehrung
     aa% = 1
   END IF 
   SELECT NEXT 
 WEND 
 IF aa% = 0 THEN 
   SELECT FIRST INDEX codew.waehrung
   zweitwaehr$ = waehrung.waehrung
   euro% = umrechnung.waehrung
 END IF 
 FILE "Provisio"
 INDEX codepr.provisio
 IF RECCOUNT ("provisio") > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 j% = 0
 WHILE NOT EOF ("provisio")
   j% = j% + 1
   SET STATUS STR$ (j%,"9999999") + " Umrechnung der Euro-Werte in Ihre StandarwÑhrung in Datei Provision!"
   FOR i% = 1 TO 12
     feld$ = "Ang" + STR$ (i%,"00")
     feldEU$ = "Ang" + STR$ (i%,"00") + "EU"
     feld$$ = feldEU$$ * euro%
     feld$ = "Rec" + STR$ (i%,"00")
     feldEU$ = "Rec" + STR$ (i%,"00") + "EU"
     feld$$ = feldEU$$ * euro%
     feld$ = "Lie" + STR$ (i%,"00")
     feldEU$ = "Lie" + STR$ (i%,"00") + "EU"
     feld$$ = feldEU$$ * euro%
     feld$ = "Auf" + STR$ (i%,"00")
     feldEU$ = "Auf" + STR$ (i%,"00") + "EU"
     feld$$ = feldEU$$ * euro%
     feld$ = "Bes" + STR$ (i%,"00")
     feldEU$ = "Bes" + STR$ (i%,"00") + "EU"
     feld$$ = feldEU$$ * euro%
     feld$ = "Gut" + STR$ (i%,"00")
     feldEU$ = "Gut" + STR$ (i%,"00") + "EU"
     feld$$ = feldEU$$ * euro%
     feld$ = "Pro" + STR$ (i%,"00")
     feldEU$ = "Pro" + STR$ (i%,"00") + "EU"
     feld$$ = feldEU$$ * euro%
   NEXT i%
   ReGesJahr = ReGesJahrEU * euro%
   ReGesGes = ReGesGesEU * euro%
   AngGesJahr = AngGesJahrEU * euro%
   AngGesGes = AngGesGesEU * euro%
   BesGesJahr = BesGesJahrEU * euro%
   BesGesGes = BesGesGesEU * euro%
   AufGesJahr = AufGesJahrEU * euro%
   AufGesGes = AufGesGesEU * euro%
   LieGesJahr = LieGesJahrEU * euro%
   LieGesGes = LieGesGesEU * euro%
   GutGesJahr = GutGesJahrEU * euro%
   GutGesGes = GutGesGesEU * euro%
   STORE FILE "provisio"
   UNLOCK CURRENT FILE "provisio"
   SELECT NEXT LOCK FILE "Provisio" INDEX codepr.provisio
 WEND 
 FILE "vertrete"
 INDEX codema.vertrete
 IF RECCOUNT ("vertrete") > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 SET STATUS "Umrechnung der Euro-Werte in Ihre StandarwÑhrung in Datei Vertrete"
 j% = 0
 WHILE NOT EOF ("vertrete")
   j% = j% + 1
   SET STATUS STR$ (j%,"9999999") + " Umrechnung der Euro-Werte in Ihre StandarwÑhrung in Datei Vertreter!"
   ReGesJahr = ReGesJahrEU * euro%
   ReGesGes = ReGesGesEU * euro%
   AngGesJahr = AngGesJahrEU * euro%
   AngGesGes = AngGesGesEU * euro%
   BesGesJahr = BesGesJahrEU * euro%
   BesGesGes = BesGesGesEU * euro%
   AufGesJahr = AufGesJahrEU * euro%
   AufGesGes = AufGesGesEU * euro%
   LieGesJahr = LieGesJahrEU * euro%
   LieGesGes = LieGesGesEU * euro%
   GutGesJahr = GutGesJahrEU * euro%
   GutGesGes = GutGesGesEU * euro%
   STORE FILE "vertrete"
   UNLOCK CURRENT FILE "vertrete"
   SELECT NEXT LOCK FILE "vertrete" INDEX codema.vertrete
 WEND 
 SET STATUS ""
 MOUSE ON 
 END SUB 
 
SUB VERTRETER()
 IF disabled%("SUPERVIS") THEN END SUB 
 cuvc% = Codema.vertrete
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "VERTRET"
 IF eurosupport$ = "TRUE" THEN maske$ = "VERTRETE"
 FILE "VERTRETE"
 INDEX nachname.VERTRETE
 vnachn$ = name.vertrete
 SELECT FIRST 
 WHILE _formend% = 0
   SUPERVISsub% = 0
   IF FORM <> maske$ THEN 
     SET HEADING title$ + " - Vertreterverwaltung"
     OPEN FORM GPRJForm$ + maske$
     SET f = superbase.form
     IF eurosupport$ = "TRUE" THEN 
       f.waehrmask.visible = - 1
       f.Labelwaehr.visible = - 1
     ELSE 
       f.waehrmask.visible = 0
       f.Labelwaehr.visible = 0
     END IF 
     SET STATUS "Vertreterverwaltung"
     REM FILE "provisio"
     REM INDEX codema.provisio
     SELECT FORM KEY vnachn$ FILE "vertrete" INDEX name.vertrete
     FORM 
     CALL MNVERTRETE()
     REM FORM 
   END IF 
   MENU ON 
   MOUSE ON 
   FORM 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL VTPrev()
   CASE CrsRight%,PgDn%
     CALL VTNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   CALL ClearKBDBuffer()
   SELECT CASE SUPERVISsub%
   CASE 1
     codema1% = codema.vertrete
     CALL UmsFuel()
     SELECT FIRST FILE "vertrete" INDEX codema.vertrete
     SELECT KEY codema1% FILE "vertrete" INDEX codema.vertrete

   CASE 99
     MENU OFF 
     CALL ButDesabled()
     MOUSE ON 
     ENTER nachname.VERTRETE,0
     CALL ButEnabled()
     MENU ON 
     IF abbruch% = - 1 THEN 
       SELECT KEY codema.vertrete FILE "vertrete" INDEX codema.vertrete
       FORM 
       abbruch% = 0
     END IF 
     CASE 991
        vnachn$ = name.vertrete
        IF UCASE$ ( FORM ) = "VERTRET" THEN 
          maske$ = "VERTRETE"
        ELSE 
          maske$ = "VERTRET"
          REM CALL Fehler("Es ist notwendig die Provisionen von Euro in Ihre ZweitwÑhrung umzurechnen!","Wenn Sie diese Operation gerade durchgefÅhrt haben, ist diese Operation nicht notwendig!")
          REM REQUEST "Mîchten Sie die Umrechnung jetzt vornehmen?","",130,req%
          REM IF req% = 1 THEN CALL PROVEuroDM()
        END IF 
   END SELECT 
 WEND 
 _formend% = 0
 IF MOD ("VERTRETE") OR NEW ("VERTRETE") THEN CALL FStore("VERTRETE")
 SELECT KEY cuvc% FILE "VERTRETE" INDEX CodeMA.VERTRETE
 END SUB 
 
 
 
 ' Felder in Maske updaten
 ' ======================================================================
 
SUB SVUpdate()
 pawo$ = CALL ("crypt",Pa·wort.SUPERVIS)
 FORM 
 END SUB 
 
 ' Mitarbeiter neu erfassen
 ' ======================================================================
 
SUB SVNeu()
 IF nachname.supervis <> "" THEN CALL FStore("supervis")
 BLANK 
 SET STATUS "Datensatz neu angelegt..."
 CodeMA = SER ("supervis",1)
 SUPERVISsub% = 99
 FORM 
 END SUB 
 
 
 ' Mitarbeiter suchen
 ' ======================================================================
 
SUB SVSuchen()
 REM REQUEST "WÑhlen Sie einen Bearbeiter aus:","",25,req%,ma%,72,codeMA.Supervis,nachname.supervis,vorname.supervis INDEX nachname.supervis
  codemaold% = codema.supervis
  ma% = MitSuchen%()
 IF ma% > 0 THEN 
   SELECT FORM KEY ma% FILE "supervis" INDEX codema.supervis
 END IF 
 FORM 
 END SUB 
 
 
SUB SVNext()
 FILE "SUPERVIS"
 SET INDEX Nachname.supervis
 INDEX Nachname.supervis
 CALL PSelectNext()
 FORM 
 END SUB 
 
SUB SVPrev()
 FILE "SUPERVIS"
 SET INDEX Nachname.supervis
 INDEX Nachname.supervis
 CALL PSelectPrev()
 FORM 
 END SUB 
 
 
SUB SVLoeschen()
 cuma% = CodeMA.supervis
 REQUEST "Mitarbeiter wirklich lîschen?","",135,req%
 IF req% = 1 THEN 
   SELECT KEY cuma% LOCK FILE "SUPERVIS" INDEX CodeMA.supervis
   SELECT REMOVE 
   SELECT NEXT 
   FORM 
 END IF 
 FORM 
 END SUB 
 
 
 
SUB VTNeu()
 IF nachname.vertrete <> "" THEN CALL FStore("vertrete")
 BLANK FILE "vertrete"
 SET STATUS "Datensatz neu angelegt..."
 CodeMA.vertrete = SER ("vertrete",1)
 SUPERVISsub% = 99
 FORM 
 END SUB 

SUB MAVTCopy()
 IF NOT EXISTS (name.supervis,name.vertrete) THEN 
   BLANK FILE "vertrete"
   SET STATUS "Datensatz neu angelegt..."
   CodeMA.vertrete = SER ("vertrete",1)
   Nachname.vertrete = nachname.supervis
   Vorname.vertrete = vorname.supervis
   name.vertrete = name.supervis
   STORE FILE "vertrete"
   CALL Fehler("Datensatz wurde erfolgreich kopiert!","")
 ELSE 
   CALL Fehler("Mitarbeiter existiert bereits in der Vertretertabelle!","")
 END IF 
 END SUB 
 
SUB MAzuVT()
 REQUEST "Mitarbeiter wirklich zu Vertreter kopieren?","",135,req%
 IF req% = 1 THEN 
   BLANK FILE "vertrete"
   CodeMA.vertrete = SER ("vertrete",1)
   Nachname.vertrete = Nachname.supervis
   Vorname.vertrete = Vorname.supervis
   Name.vertrete = name.supervis
   CALL QuickStore("vertrete")
 END IF 
 END SUB 

 
 ' Mitarbeiter suchen
 ' ======================================================================
 
SUB VTSuchen()
 REQUEST "WÑhlen Sie einen Vertreter aus:","",25,req%,ma%,72,codeMA.vertrete,nachname.vertrete,vorname.vertrete INDEX nachname.vertrete
 IF req% = 1 THEN 
   SELECT FORM KEY ma% FILE "vertrete" INDEX codema.vertrete
 END IF 
 FORM 
 END SUB 
 
 
SUB VTNext()
 FILE "vertrete"
 SET INDEX Nachname.vertrete
 INDEX Nachname.vertrete
 CALL PSelectNext()
 FORM 
 END SUB 
 
SUB VTPrev()
 FILE "vertrete"
 SET INDEX Nachname.vertrete
 INDEX Nachname.vertrete
 CALL PSelectPrev()
 FORM 
 END SUB 
 
 
SUB VTLoeschen()
 cuma% = CodeMA.vertrete
 REQUEST "Wollen Sie den Vertreter wirklich lîschen?","",130,req%
 IF req% <> 1 THEN END SUB 
 MOUSE OFF 
 REMOVE FROM FILE "ARTPROV" WHERE codema.artprov = cuma%
 REQUEST "Vertreter wirklich lîschen?","",135,req%
 IF req% = 1 THEN 
   SELECT KEY cuma% LOCK FILE "vertrete" INDEX CodeMA.vertrete
   name$ = "ZZZ GELôSCHT" + name.vertrete
   name.vertrete = name$
   STORE FILE "vertrete"
   UNLOCK CURRENT FILE "vertrete"
   SELECT FIRST 
   FORM 
 END IF 
 FORM 
 MOUSE ON 
 REQUEST "Vertreter wurde als gelîscht markiert!","Alle Provisionseintragungen in der Artikeldatei wurden ebenfalls gelîscht",2
 END SUB 
 
 
 
 
 
 
 
SUB ACAdd()
 cuma% = CodeMA.SUPERVIS
 DIM Auswahl$(500)
 DIM Rechte$(500)
 FILE "accode"
 SELECT FIRST 
 a% = 0
 WHILE NOT EOF ("accode")
   scode$ = STR$ (CodePR.ACCODE,"000000") + STR$ (cuma%,"000000") + ACCODE.ACCODE
   SELECT KEY scode$ FILE "ACCESS" INDEX QuickCode.ACCESS
   IF NOT FOUND ("ACCESS") THEN 
     IF CodePR.ACCODE = 0 OR CodePR.ACCODE = AppID% THEN 
       Rechte$(a%) = Beschreibung.ACCODE
       a% = a% + 1
     END IF 
   END IF 
   SELECT NEXT 
 WEND 
 CREATE DIALOG "ACCESS",0,0,345,212,title$,"MS Sans Serif",8
 ADD DIALOG "ACCESS",9,6,8,20,20,2
 ADD DIALOG "ACCESS",5,36,9,152,8,0,"Bitte markieren Sie die Funktionen, die Sie fÅr"
 ADD DIALOG "ACCESS",5,36,17,152,10,0,"den aktuellen Mitarbeiter sperren wollen:"
 ADD DIALOG "ACCESS",7,36,28,246,185,10,2,Rechte$,Auswahl$
 ADD DIALOG "ACCESS",1,286,173,55,15,1,"&OK",1,1
 ADD DIALOG "ACCESS",1,286,191,55,15,0,"&Abbrechen",0,0
 DIALOG "ACCESS",req%
 REMOVE DIALOG "ACCESS"
 IF req% = 1 THEN 
   SET STATUS "Mitarbeiterdatei wird aktualisiert..."
   MOUSE OFF 
   a% = 0
   WHILE Auswahl$(a%) <> ""
     SELECT KEY Auswahl$(a%) FILE "ACCODE" INDEX Beschreibung.ACCODE
     IF FOUND ("ACCODE") THEN 
       BLANK FILE "ACCESS"
       CodeMA.ACCESS = cuma%
       CodePR.ACCESS = CodePR.ACCODE
       ACCODE.ACCESS = ACCODE.ACCODE
       QuickCode.ACCESS = STR$ (CodePR.ACCODE,"000000") + STR$ (cuma%,"000000") + ACCODE.ACCODE
       Beschreibung.ACCESS = Beschreibung.ACCODE
       CALL QuickStore("ACCESS")
     END IF 
     a% = a% + 1
   WEND 
 END IF 
 SET STATUS "Bereit"
 FILE "SUPERVIS"
 SELECT FORM KEY cuma% FILE "SUPERVIS" INDEX CodeMA.SUPERVIS
 SET INDEX Nachname.SUPERVIS
 INDEX Nachname.SUPERVIS
 FORM 
 MOUSE ON 
 END SUB 
 
 
SUB ACLoeschen()
 cuma% = CodeMA.SUPERVIS
 DIM Auswahl$(500)
 DIM Rechte$(500)
 FILE "ACCESS"
 SELECT FIRST 
 a% = 0
 WHILE NOT EOF ("ACCESS")
   IF CodeMA.ACCESS = cuma% AND (CodePR.ACCESS = 0 OR CodePR.ACCESS = AppID%) THEN 
     Rechte$(a%) = Beschreibung.ACCESS
     a% = a% + 1
   END IF 
   SELECT NEXT 
 WEND 
 CREATE DIALOG "ACCESS",0,0,255,212,title$,"MS Sans Serif",8
 ADD DIALOG "ACCESS",9,6,8,20,20,2
 ADD DIALOG "ACCESS",5,36,9,152,8,0,"Bitte markieren Sie die Funktionen, die Sie fÅr"
 ADD DIALOG "ACCESS",5,36,17,152,10,0,"den aktuellen Mitarbeiter freigeben wollen:"
 ADD DIALOG "ACCESS",7,36,28,156,185,10,2,Rechte$,Auswahl$
 ADD DIALOG "ACCESS",1,196,173,55,15,1,"&OK",1,1
 ADD DIALOG "ACCESS",1,196,191,55,15,0,"&Abbrechen",0,0
 DIALOG "ACCESS",req%
 REMOVE DIALOG "ACCESS"
 IF req% = 1 THEN 
   SET STATUS "Mitarbeiterdatei wird aktualisiert..."
   MOUSE OFF 
   a% = 0
   WHILE Auswahl$(a%) <> ""
     SELECT KEY Auswahl$(a%) FILE "ACCODE" INDEX Beschreibung.ACCODE
     scode$ = STR$ (CodePR.ACCODE,"000000") + STR$ (cuma%,"000000") + ACCODE.ACCODE
     SELECT KEY scode$ LOCK FILE "ACCESS" INDEX QuickCode.ACCESS
     IF FOUND ("ACCESS") THEN SELECT REMOVE FILE "ACCESS"
     a% = a% + 1
   WEND 
 END IF 
 SET STATUS "Bereit"
 FILE "SUPERVIS"
 SELECT FORM KEY cuma% FILE "SUPERVIS" INDEX CodeMA.SUPERVIS
 SET INDEX Nachname.SUPERVIS
 INDEX Nachname.SUPERVIS
 FORM 
 MOUSE ON 
 END SUB 
 
 
 ' Zugriffsberechtigung testen
 ' ======================================================================
  
FUNCTION disabled%(topic$)
 cfile$ = FILE 
 CALL DFile(2,"access" + _fpw$)
 scode$ = STR$ (AppID%,"000000") + STR$ (vcodema%,"000000") + topic$
 SELECT KEY scode$ FILE "ACCESS" INDEX QuickCode.ACCESS
 disabled% = 0
 IF FOUND ("ACCESS") THEN 
   disabled% = - 1
   funktion$ = Beschreibung.ACCESS
 ELSE 
   scode$ = "000000" + STR$ (vcodema%,"000000") + topic$
   SELECT KEY scode$ FILE "ACCESS" INDEX QuickCode.ACCESS
   IF FOUND ("ACCESS") THEN 
     disabled% = - 1
     funktion$ = Beschreibung.ACCESS
   END IF 
 END IF 
 IF disabled% = - 1 THEN CALL Fehler("Die Funktion " + CHR$ (34) + funktion$ + CHR$ (34) + " ist fÅr Sie gesperrt!","")
 FILE cfile$
 END FUNCTION 
 
 
 
 ' Zugriffsberechtigung fÅr MenÅfunktionen
 ' ======================================================================
  
FUNCTION MNdisabled%(topic$)
 cfile$ = FILE 
 CALL DFile(2,"access" + _fpw$)
 scode$ = STR$ (AppID%,"000000") + STR$ (vcodema%,"000000") + topic$
 SELECT KEY scode$ FILE "ACCESS" INDEX QuickCode.ACCESS
 MNdisabled% = 0
 IF FOUND ("ACCESS") THEN 
   MNdisabled% = - 1
 ELSE 
   scode$ = "000000" + STR$ (vcodema%,"000000") + topic$
   SELECT KEY scode$ FILE "ACCESS" INDEX QuickCode.ACCESS
   IF FOUND ("ACCESS") THEN 
     MNdisabled% = - 1
   END IF 
 END IF 
 FILE cfile$
 END FUNCTION 
 
 
 ' Pa·wort entschlÅsseln
 ' ======================================================================
 
FUNCTION PWDecoded$()
 IF KÅrzel.SUPERVIS = "XX" THEN PWDecoded$ = CALL ("crypt",pa·wort.supervis) ELSE PWDecoded$ = Pa·wort.SUPERVIS
 END FUNCTION 
 
   
 
 '      *******************************
 '      ** Programm und System-Setup **
 '      *******************************
 
SUB SETUP()
 CALL DFile(2,"ZERO" + _fpw$)
 IF disabled%("SETUP") THEN END SUB 
 SET STATUS "Einstellungen"
 CREATE DIALOG "SETUP",0,0,173,199,title$,"MS Sans Serif",8
 ADD DIALOG "SETUP",9,2,6,19,21,3
 ADD DIALOG "SETUP",5,26,8,139,8,0,"WÑhlen Sie aus, welche Einstellungen Sie"
 ADD DIALOG "SETUP",5,26,17,63,8,0,"vornehmen wollen:"
 ADD DIALOG "SETUP",1,34,30,110,16,1,"Programmkonfiguration",1,1
 ADD DIALOG "SETUP",1,34,48,110,16,0,"&Mitarbeiterverwaltung",2,1
 ADD DIALOG "SETUP",1,34,65,110,16,0,"&Vertreterverwaltung",3,1
 ADD DIALOG "SETUP",1,34,83,110,16,0,"&Firmen - Stammdaten",5,1
 ADD DIALOG "SETUP",1,34,101,110,16,0,"&WÑhrungstabelle",4,1
 ADD DIALOG "SETUP",1,34,119,110,16,0,"lokale Rechnereinstellungen",6,1
 
 ADD DIALOG "SETUP",1,34,137,110,16,0,"Export Adressen nach Outlook",7,1
 ADD DIALOG "SETUP",1,34,155,110,16,0,"Export Termine nach Outlook",8,1
 ADD DIALOG "SETUP",1,34,175,110,16,0,"&Abbrechen",0,0
 DIALOG "SETUP",req%
 REMOVE DIALOG "SETUP"
 SELECT CASE req%
 CASE 1
   IF Delphi% <> 1 THEN 
     AppName$ = _netpath$ + _projekt$ + "\CONFIG.EXE"
     a% = CALL ("ShellExecute",0,"open",AppName$,"","",1)
   ELSE 
     CALL Server("SETUP",_netpath$ + _projekt$ + "\CONFIG.EXE")
   END IF 
 CASE 2
   CALL SUPERVIS()
 CASE 3
   IF _projekt$ LIKE "FACTURA" THEN 
     CALL DFile(3,"VERTRETE" + _fpw$)
     CALL DFile(3,"PROVISIO" + _fpw$)
     CALL Fehler("Um eine genaue öbersicht der Provisionen und UmsÑtze zu erhalten","mÅssen Sie UNBEDINGT in der Maske Vertreter den Button <UmsÑtze und Provisionen neu berechnen> betÑtigen!")
     CALL VERTRETER()
   END IF 
   IF _projekt$ LIKE "PROVIS" THEN 
     IF disabled%("PROVISVERFAHREN") THEN END SUB 
     t1$ = "Die Umstellung des Provisionierungsverfahren kann schwerwiegende énderungen in der gesamten Provosionsabrechnung nachsich ziehen! Haben Sie einen ordnungsgemÑ·en Monatsabschlu· getÑtigt? "
     t2$ = "Wenn Sie von PROVIS STANDARD auf PROVIS REAL CASH umstellen, drucken Sie anschlie·end Åber den Button <Liste> der Hauptmaske die - Abgleichsliste fÅr die Umstellung auf PROVIS Real Cash - und beachten Sie die dort gegebenen Hinweise !!!"
     CALL Fehler(t1$,t2$)
     REQUEST "Momentanes Provisionierungsverfahren: " + prv$,"Wollen Sie umstellen?",130,req%
     CALL PROVVERFA()
   END IF 
 CASE 4
   CALL Waehrtab()
 CASE 5
   IF NOT disabled%("FITMSTAMM") THEN 
     CALL Stamm()
   END IF 
 CASE 6
   REM lokale Einstellungen aus der codieapp.ini
   CALL LokalSetup()
 CASE 7
   REM Export Adressen nach Outlook
   MOUSE OFF 
   IF disabled%("ADRESSEN") THEN END SUB 
   CALL DFile(2,"OFFICE\adressen" + _fpw$)
   CALL DFile(2,"OFFICE\adrhis" + _fpw$)
   CALL DFile(2,"OFFICE\adrstat" + _fpw$)
   CALL DFile(2,"OFFICE\adrgrup" + _fpw$)
   IF OPEN ("adrtemp") THEN CLOSE FILE "ADRTEMP"
   CALL DFile(2,"OFFICE\adrtemp" + _fpw$)
   CALL DFile(2,"color" + _fpw$)
   CALL DFile(2,"OFFICE\dokument" + _fpw$)
   CALL DFile(2,"OFFICE\akquise" + _fpw$)
   CALL DFile(2,"OFFICE\telefon" + _fpw$)
   CALL DFile(2,"OFFICE\connect" + _fpw$)
   CALL DFile(2,"OFFICE\banken" + _fpw$)
   REM CALL Fehler("","")
         CALL DFile(3,"TEILREIN" + _fpw$)
         CALL DFile(3,"REINGANG" + _fpw$)
         CALL DFile(3,"TEILRAUS" + _fpw$)
         CALL DFile(3,"RAUSGANG" + _fpw$)
   CALL DFile(3,"MASTER" + _fpw$)
   CALL DFile(3,"MAHNUNG" + _fpw$)
   CALL DFile(3,"UMSATZ" + _fpw$)
   CALL DFile(3,"VERTRETE" + _fpw$)
   CALL DFile(3,"PROVISIO" + _fpw$)
   CALL DFile(3,"VERLEIH" + _fpw$)
   CALL DFile(3,"JOURNAL" + _fpw$)
   IF DEFA$ = "MEGA" THEN 
     CALL DFile(3,"KSATZ" + _fpw$)
     CALL DFile(3,"SSATZ" + _fpw$)
   END IF 
   CALL DFile(2,"OFFICE\produkt" + _fpw$)
   CALL DFile(2,"OFFICE\prgruppe" + _fpw$)
   CALL DFile(2,"OFFICE\kprodukt" + _fpw$)
   IF NOT disabled%("OUTLOOKEXPORT") THEN 
     CALL ADRExpOutl(0)
   END IF 
   MOUSE ON 
 CASE 8
   REM Export Termine nach Outlook
   MOUSE OFF 
   IF disabled%("ADRESSEN") THEN END SUB 
   CALL DFile(2,"OFFICE\adressen" + _fpw$)
   CALL DFile(2,"OFFICE\aktionen" + _fpw$)
   CALL DFile(2,"OFFICE\adrhis" + _fpw$)
   CALL DFile(2,"OFFICE\adrstat" + _fpw$)
   CALL DFile(2,"OFFICE\adrgrup" + _fpw$)
   IF OPEN ("adrtemp") THEN CLOSE FILE "ADRTEMP"
   CALL DFile(2,"OFFICE\adrtemp" + _fpw$)
   CALL DFile(2,"color" + _fpw$)
   CALL DFile(2,"OFFICE\dokument" + _fpw$)
   CALL DFile(2,"OFFICE\akquise" + _fpw$)
   CALL DFile(2,"OFFICE\telefon" + _fpw$)
   CALL DFile(2,"OFFICE\connect" + _fpw$)
   CALL DFile(2,"OFFICE\banken" + _fpw$)
   REM CALL Fehler("","")
         CALL DFile(3,"TEILREIN" + _fpw$)
         CALL DFile(3,"REINGANG" + _fpw$)
         CALL DFile(3,"TEILRAUS" + _fpw$)
         CALL DFile(3,"RAUSGANG" + _fpw$)
   CALL DFile(3,"MASTER" + _fpw$)
   CALL DFile(3,"MAHNUNG" + _fpw$)
   CALL DFile(3,"UMSATZ" + _fpw$)
   CALL DFile(3,"VERTRETE" + _fpw$)
   CALL DFile(3,"PROVISIO" + _fpw$)
   CALL DFile(3,"VERLEIH" + _fpw$)
   CALL DFile(3,"JOURNAL" + _fpw$)
   IF DEFA$ = "MEGA" THEN 
     CALL DFile(3,"KSATZ" + _fpw$)
     CALL DFile(3,"SSATZ" + _fpw$)
   END IF 
   CALL DFile(2,"OFFICE\produkt" + _fpw$)
   CALL DFile(2,"OFFICE\prgruppe" + _fpw$)
   CALL DFile(2,"OFFICE\kprodukt" + _fpw$)
   IF NOT disabled%("OUTLOOKEXPORT") THEN 
     CALL TerExpOutl(0,1)
   END IF 
   MOUSE ON 
 END SELECT 
 SET STATUS "Bereit"
 END SUB 
 

 ' Bearbeitung der WÑhrungstabelle
SUB Waehrtab()
 CALL DFile(3,"waehrung" + _fpw$)
 
 IF disabled%("SUPERVIS") THEN END SUB 
 
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "WAEHRUNG"
 IF eurosupport$ = "TRUE" THEN maske$ = "WAEHRUNG"
 FILE "WAEHRUNG"
 INDEX WAEHRUNG.WAEHRUNG
 SELECT FIRST 
 vnachn$ = WAEHRUNG.WAEHRUNG
 SELECT FIRST 
 aend% = 0
 WHILE _formend% = 0
   SUPERVISsub% = 0
   IF FORM <> maske$ THEN 
     SET HEADING title$ + " - WÑhrungsmaske"
     OPEN FORM GPrjForm$ + maske$
     SET f = superbase.form
     SET STATUS "WÑhrungsmaske"
     REM FILE "provisio"
     REM INDEX codema.provisio
     SELECT FORM KEY vnachn$ FILE "waehrung" INDEX WAEHRUNG.WAEHRUNG
     FORM 
     CALL MNProgramm()
     CALL ButEnabled()
     REM FORM 
   END IF 
   MENU ON 
   f.suchen.visible = 0
   f.suchen.enabled = 0
   MOUSE ON 
   FORM 
   CALL ClearKBDBuffer()
   SELECT WHERE FILE "waehrung"
   SELECT FORM FIRST 
   FORM 
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL PSelectPrev()
   CASE CrsRight%,PgDn%
     CALL PSelectNext()()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   CALL ClearKBDBuffer()
   SELECT CASE SUPERVISsub%
   CASE 90
     REM Datensatz neu
     codew% = SER ("WAEHRUNG",1)
     BLANK FILE "Waehrung"
     codew.waehrung = codew%
     zero.waehrung = 0
     waehrung.waehrung = "Neu"
     Workstation.waehrung = Workstation%
     QWoNo.waehrung = STR$ (Workstation%,"000000") + STR$ (codew.waehrung,"000000")
     RecStatus.waehrung = "c"
     STORE FILE "Waehrung"
     UNLOCK CURRENT FILE "waehrung"
     SELECT FORM KEY codew% FILE "Waehrung" INDEX codew.waehrung
     CALL ButDesabled()
     MOUSE ON 
     ENTER waehrung.waehrung,0
     aend% = 1
     CALL ButEnabled()
     f.suchen.visible = 0
     f.suchen.enabled = 0
     MENU ON 
     IF abbruch% = - 1 THEN 
       SELECT KEY WAEHRUNG.WAEHRUNG FILE "WAEHRUNG" INDEX WAEHRUNG.WAEHRUNG
       FORM 
       abbruch% = 0
     END IF 
   CASE 99
     CALL Fehler("Die Eintragungen fÅr DM,ôS und Euro dÅrfen nicht verÑndert werden!","Deshalb werden sie jetzt ausgeblendet!")
     FILE "WAEHRUNG"
     SELECT WHERE codew.WAEHRUNG <> 1 AND codew.WAEHRUNG <> 3 AND codew.WAEHRUNG <> 5
     SELECT FORM FIRST 
     FORM 
     MENU OFF 
     CALL ButDesabled()
     MOUSE ON 
     ENTER WAEHRUNG.WAEHRUNG,0
     REM aend% = 1
     CALL ButEnabled()
     f.suchen.visible = 0
     f.suchen.enabled = 0
     MENU ON 
     
     IF abbruch% = - 1 THEN 
       SELECT KEY WAEHRUNG.WAEHRUNG FILE "WAEHRUNG" INDEX WAEHRUNG.WAEHRUNG
       FORM 
       abbruch% = 0
     END IF 
 END SELECT 
 IF aend% = 1 THEN 
   aend% = 0
   IF _projekt$ LIKE "Factu*" THEN 
     REQUEST "In der WÑhrungsdatei wurden énderungen vorgenommen!","énderungen in die Artikeldatei Åbernehmen?",130,req%
     IF req% = 1 THEN 
       FILE "waehrung"
       SELECT WHERE FILE "waehrung"
       INDEX codew.waehrung
       SELECT FIRST 
       WHILE NOT EOF ("waehrung")
         CALL DFile(3,"artikel" + _fpw$)
         FILE "artikel"
         INDEX codew.artikel
         SELECT FIRST 
         IF RECCOUNT ("") > 0 THEN SELECT KEY codew.waehrung LOCK FILE "artikel" INDEX codew.artikel
         i% = 0
         IF RECCOUNT ("") < 1 THEN SELECT LAST 
         WHILE NOT EOF ("Artikel") AND codew.artikel = codew.waehrung
           i% = i% + 1
           SET STATUS STR$ (i%,"999999") + " Artikel angepa·t"
           IF umrechnung.artikel <> umrechnung.waehrung THEN 
             umrechnung.artikel = umrechnung.waehrung
             waehrung.artikel = waehrung.waehrung
             CALL ArtDMEuro()
             Workstation.artikel = Workstation%
             QWoNo.artikel = STR$ (Workstation%,"000000") + STR$ (codear.artikel,"000000")
             RecStatus.artikel = "c"
             STORE FILE "Artikel"
             UNLOCK CURRENT FILE "artikel"
           END IF 
     
           SELECT NEXT LOCK 
         WEND 
         FILE "waehrung"
         SELECT NEXT INDEX codew.waehrung
       WEND 
     END IF 
     REM
     f1$ = "Sie kînnen im Anschlu· diese énderungen und Umrechnungen auf Ihre Rechnungsdateien(master,schein), RE-Eingangs-/Ausgangsbuch und Mahndatei(mahnung) anwenden."
     f2$ = "Bedenken Sie aber, da· Sie damit alle alten Rechnungen usw. VERFéLSCHEN, da sie ursprÅnglich mit einem anderen Umrechnungskurs gerechnet wurden!!!"
     CALL Fehler(f1$,f2$)
     REQUEST "Wollen Sie diese Manipulation wirklich durchfÅhren?","",147,req%
     IF req% = 2 OR req% = 0 THEN 
        CALL Fehler("Manipulation wird nicht durchgefÅhrt!!!","")
        _formend% = 2
        GOTO end031298
     END IF 
     REQUEST "In der WÑhrungsdatei wurden énderungen vorgenommen!","énderungen in Master- und Scheindatei Åbernehmen?",130,req%

     IF req% = 1 THEN 
       FILE "waehrung"
       INDEX codew.waehrung
       SELECT FIRST 
       WHILE NOT EOF ("waehrung")
         CALL DFile(3,"master" + _fpw$)
         FILE "master"
         
         INDEX codew.master
         SELECT FIRST 
         IF RECCOUNT ("") > 0 THEN SELECT KEY codew.waehrung LOCK FILE "master" INDEX codew.master
         IF RECCOUNT ("") < 1 THEN SELECT LAST 
         i% = 0
         WHILE NOT EOF ("master") AND codew.master = codew.waehrung
           i% = i% + 1
           SET STATUS STR$ (i%,"999999") + " MasterdatensÑtze angepa·t"
           IF umrechnung.master <> umrechnung.waehrung OR waehrung.master <> waehrung.waehrung THEN 
             umrechnung.master = umrechnung.waehrung
             waehrung.master = waehrung.waehrung
             CALL MADMEuro()
             Workstation.master = Workstation%
             QWoNo.master = STR$ (Workstation%,"000000") + STR$ (codems.master,"000000")
             RecStatus.master = "c"
             STORE FILE "master"
             UNLOCK CURRENT FILE "master"
           END IF 
     
           SELECT NEXT LOCK 
         WEND 
         CALL DFile(3,"schein" + _fpw$)
         FILE "schein"
         INDEX codew.schein
         SELECT FIRST 
         IF RECCOUNT ("") > 0 THEN SELECT KEY codew.waehrung LOCK FILE "schein" INDEX codew.schein
         IF RECCOUNT ("") < 1 THEN SELECT LAST 
         i% = 0
         WHILE NOT EOF ("schein") AND codew.schein = codew.waehrung
           i% = i% + 1
           SET STATUS STR$ (i%,"999999") + " ScheindatensÑtze angepa·t"
           IF umrechnung.schein <> umrechnung.waehrung OR waehrung.schein <> waehrung.waehrung THEN 
             umrechnung.schein = umrechnung.waehrung
             waehrung.schein = waehrung.waehrung
             CALL SCHDMEuro()
             Workstation.schein = Workstation%
             QWoNo.schein = STR$ (Workstation%,"000000") + STR$ (codesch.schein,"000000")
             RecStatus.schein = "c"
             STORE FILE "schein"
             UNLOCK CURRENT FILE "schein"
           END IF 
     
           SELECT NEXT LOCK 
         WEND 
         FILE "waehrung"
         SELECT NEXT INDEX codew.waehrung
       WEND 
     END IF 
     REQUEST "In der WÑhrungsdatei wurden énderungen vorgenommen!","énderungen in RE- Ein/Ausgangsbuch Åbernehmen?",130,req%
     IF req% = 1 THEN 
       FILE "waehrung"
       INDEX codew.waehrung
       SELECT FIRST 
       WHILE NOT EOF ("waehrung")
         CALL DFile(3,"rausgang" + _fpw$)
         FILE "rausgang"
         INDEX codew.rausgang
         SELECT FIRST 
         IF RECCOUNT ("") > 0 THEN SELECT KEY codew.waehrung LOCK FILE "rausgang" INDEX codew.rausgang
         IF RECCOUNT ("") < 1 THEN SELECT LAST 
         i% = 0
         WHILE NOT EOF ("rausgang") AND codew.rausgang = codew.waehrung
           i% = i% + 1
           SET STATUS STR$ (i%,"999999") + " RechnungsausgangsdatensÑtze angepa·t"
           IF umrechnung.rausgang <> umrechnung.waehrung THEN 
             umrechnung.rausgang = umrechnung.waehrung
             waehrung.rausgang = waehrung.waehrung
             CALL REDMEuro("rausgang")
             Workstation.rausgang = Workstation%
             QWoNo.rausgang = STR$ (Workstation%,"000000") + STR$ (codere.rausgang,"000000")
             RecStatus.rausgang = "c"
             STORE FILE "rausgang"
             UNLOCK CURRENT FILE "rausgang"
           END IF 
     
           SELECT NEXT LOCK 
         WEND 
         CALL DFile(3,"reingang" + _fpw$)
         FILE "reingang"
         INDEX codew.reingang
         SELECT FIRST 
         IF RECCOUNT ("") > 0 THEN SELECT KEY codew.waehrung LOCK FILE "reingang" INDEX codew.reingang
         IF RECCOUNT ("") < 1 THEN SELECT LAST 
         i% = 0
         WHILE NOT EOF ("reingang") AND codew.reingang = codew.waehrung
           i% = i% + 1
           SET STATUS STR$ (i%,"999999") + " RechnungseingangsdatensÑtze angepa·t"
           IF umrechnung.reingang <> umrechnung.waehrung THEN 
             umrechnung.reingang = umrechnung.waehrung
             waehrung.reingang = waehrung.waehrung
             CALL REDMEuro("reingang")
             Workstation.reingang = Workstation%
             QWoNo.reingang = STR$ (Workstation%,"000000") + STR$ (codere.reingang,"000000")
             RecStatus.reingang = "c"
             STORE FILE "reingang"
             UNLOCK CURRENT FILE "reingang"
           END IF 
           SELECT NEXT LOCK 
         WEND 
         FILE "waehrung"
         SELECT NEXT INDEX codew.waehrung
       WEND 
     END IF 
     REQUEST "In der WÑhrungsdatei wurden énderungen vorgenommen!","énderungen in die Mahnungsdatei Åbernehmen?",130,req%
     IF req% = 1 THEN 
       FILE "waehrung"
       INDEX codew.waehrung
       SELECT FIRST 
       WHILE NOT EOF ("waehrung")
         CALL DFile(3,"mahnung" + _fpw$)
         FILE "mahnung"
         INDEX codew.mahnung
         SELECT FIRST 
         IF RECCOUNT ("") > 0 THEN SELECT KEY codew.waehrung LOCK FILE "mahnung" INDEX codew.mahnung
         IF RECCOUNT ("") < 1 THEN SELECT LAST 
         i% = 0
         WHILE NOT EOF ("mahnung") AND codew.mahnung = codew.waehrung
           i% = i% + 1
           SET STATUS STR$ (i%,"999999") + " Mahnungen angepa·t"
           IF umrechnung.mahnung <> umrechnung.waehrung THEN 
             umrechnung.mahnung = umrechnung.waehrung
             waehrung.mahnung = waehrung.waehrung
             kalkart.mahnung = 0
             euro1% = umrechnung.mahnung
             IF mahnz1.mahnung <> 0 THEN mahnz1eu = mahnz1 / euro1% ELSE mahnz1eu = 0
             IF mahnp1.mahnung <> 0 THEN mahnp1eu = mahnp1 / euro1% ELSE mahnp1eu = 0
             IF mahnz2.mahnung <> 0 THEN mahnz2eu = mahnz2 / euro1% ELSE mahnz2eu = 0
             IF mahnp2.mahnung <> 0 THEN mahnp2eu = mahnp2 / euro1% ELSE mahnp2eu = 0
             IF mahnz3.mahnung <> 0 THEN mahnz3eu = mahnz3 / euro1% ELSE mahnz3eu = 0
             IF mahnp3.mahnung <> 0 THEN mahnp3eu = mahnp3 / euro1% ELSE mahnp3eu = 0
             IF mahnz4.mahnung <> 0 THEN mahnz4eu = mahnz4 / euro1% ELSE mahnz4eu = 0
             IF mahnp4.mahnung <> 0 THEN mahnp4eu = mahnp4 / euro1% ELSE mahnp4eu = 0
             IF mahnz5.mahnung <> 0 THEN mahnz5eu = mahnz5 / euro1% ELSE mahnz5eu = 0
             IF mahnp5.mahnung <> 0 THEN mahnp5eu = mahnp5 / euro1% ELSE mahnp5eu = 0
             IF EKNetto <> 0 THEN EKNettoEu = EKNetto / euro% ELSE EKNettoEu = 0
             IF PreisNetto <> 0 THEN PreisNettoEu = PreisNetto / euro% ELSE PreisNettoEu = 0
             IF PreisBrutto <> 0 THEN PreisBruttoEu = PreisBrutto / euro% ELSE PreisBruttoEu = 0
             IF GesNetto <> 0 THEN GesNettoEu = GesNetto / euro% ELSE GesNettoEu = 0
             IF GesBrutto <> 0 THEN GesBruttoEu = GesBrutto / euro% ELSE GesBruttoEu = 0
             IF Skonto <> 0 THEN SkontoEu = Skonto / euro% ELSE SkontoEu = 0
             IF Rabatt <> 0 THEN RabattEu = Rabatt / euro% ELSE RabattEu = 0
             IF BuchBrutto <> 0 THEN BuchBruttoEu = BuchBrutto / euro% ELSE BuchBruttoEu = 0
             IF ProvisDM <> 0 THEN ProvisEu = ProvisDM / euro% ELSE ProvisEu = 0
             IF BuchProv <> 0 THEN BuchProvEu = BuchProv / euro% ELSE BuchProvEu = 0
             IF ProvisGesDM <> 0 THEN ProvisGesEu = ProvisGesDM / euro% ELSE ProvisGesEu = 0
             IF ProvisausPosDM <> 0 THEN ProvisausPosEu = ProvisausPosDM / euro% ELSE ProvisausPosEu = 0
             IF frachtfrei <> 0 THEN frachtfreiEu = frachtfrei / euro% ELSE frachtfreiEu = 0
             Workstation.mahnung = Workstation%
             QWoNo.mahnung = STR$ (Workstation%,"000000") + STR$ (codemahn.mahnung,"000000")
             RecStatus.mahnung = "c"
             STORE FILE "mahnung"
             UNLOCK CURRENT FILE "mahnung"
           END IF 
           SELECT NEXT LOCK 
         WEND 
         FILE "waehrung"
         SELECT NEXT INDEX codew.waehrung
       WEND 
     END IF 
   END IF 
   IF _projekt$ LIKE "PROVIS*" THEN 
     f1$ = "Sie kînnen im Anschlu· diese énderungen und Umrechnungen auf Ihre Vertagsdatei, Buchungsdatei, Zahlungsdatei usw. anwenden."
     f2$ = "Bedenken Sie aber, da· Sie damit alle alten Buchungen usw. VERFéLSCHEN, da sie ursprÅnglich mit einem anderen Umrechnungskurs gerechnet wurden!!!"
     CALL Fehler(f1$,f2$)
     REQUEST "Wollen Sie diese Manipulation wirklich durchfÅhren?","",147,req%
     IF req% = 2 OR req% = 0 THEN 
        CALL Fehler("Manipulation wird nicht durchgefÅhrt!!!","")
        _formend% = 2
        GOTO end031298
     END IF 
     REQUEST "In der WÑhrungsdatei wurden énderungen vorgenommen!","énderungen in die Vertragsdatei Åbernehmen?",130,req%
     IF req% = 1 THEN 
       FILE "waehrung"
       INDEX codew.waehrung
       SELECT FIRST 
       WHILE NOT EOF ("waehrung")
         CALL DFile(3,"kvertrag" + _fpw$)
         FILE "kvertrag"
         INDEX codew.kvertrag
         SELECT FIRST 
         IF RECCOUNT ("") > 0 THEN SELECT KEY codew.waehrung LOCK FILE "kvertrag" INDEX codew.kvertrag
         IF RECCOUNT ("") < 1 THEN SELECT LAST 
         i% = 0
         WHILE NOT EOF ("kvertrag") AND codew.kvertrag = codew.waehrung
           i% = i% + 1
           SET STATUS STR$ (i%,"999999") + " VertrÑge angepa·t"
           IF umrechnung.kvertrag <> umrechnung.waehrung THEN 
             umrechnung.kvertrag = umrechnung.waehrung
             waehrung.kvertrag = waehrung.waehrung
             REM CALL ArtDMEuro()
             Workstation.kvertrag = Workstation%
             QWoNo.kvertrag = STR$ (Workstation%,"000000") + STR$ (lfdnr.kvertrag,"000000")
             RecStatus.kvertrag = "c"
             STORE FILE "kvertrag"
             UNLOCK CURRENT FILE "kvertrag"
           END IF 
           SELECT NEXT LOCK 
         WEND 
         FILE "waehrung"
         SELECT NEXT INDEX codew.waehrung
       WEND 
     END IF 

 
     REQUEST "In der WÑhrungsdatei wurden énderungen vorgenommen!","énderungen in die Buchungsdatei Åbernehmen?",130,req%
     IF req% = 1 THEN 
       FILE "waehrung"
       INDEX codew.waehrung
       SELECT FIRST 
       WHILE NOT EOF ("waehrung")
         CALL DFile(3,"buchung" + _fpw$)
         FILE "buchung"
         INDEX codew.buchung
         SELECT FIRST 
         IF RECCOUNT ("") > 0 THEN SELECT KEY codew.waehrung LOCK FILE "buchung" INDEX codew.buchung
         IF RECCOUNT ("") < 1 THEN SELECT LAST 
         i% = 0
         WHILE NOT EOF ("buchung") AND codew.buchung = codew.waehrung
           i% = i% + 1
           SET STATUS STR$ (i%,"999999") + " BuchungssÑtze angepa·t"
           IF umrechnung.buchung <> umrechnung.waehrung THEN 
             umrechnung.buchung = umrechnung.waehrung
             waehrung.buchung = waehrung.waehrung
             euro1% = umrechnung.waehrung
             CALL BUDMEuro(euro1%)
             Workstation.buchung = Workstation%
             QWoNo.buchung = STR$ (Workstation%,"000000") + STR$ (codebu.buchung,"000000")
             RecStatus.buchung = "c"
             STORE FILE "buchung"
           END IF 
           SELECT NEXT LOCK 
         WEND 
         FILE "waehrung"
         SELECT NEXT INDEX codew.waehrung
       WEND 
       IF EXISTS ("buchung1.sbf") THEN 
         FILE "waehrung"
         INDEX codew.waehrung
         SELECT FIRST 
         WHILE NOT EOF ("waehrung")
           CALL DFile(3,"buchung1" + _fpw$)
           FILE "buchung1"
           INDEX codew.buchung1
           SELECT FIRST 
           IF RECCOUNT ("") > 0 THEN SELECT KEY codew.waehrung LOCK FILE "buchung1" INDEX codew.buchung1
           IF RECCOUNT ("") < 1 THEN SELECT LAST 
           i% = 0
           WHILE NOT EOF ("buchung1") AND codew.buchung1 = codew.waehrung
             i% = i% + 1
             SET STATUS STR$ (i%,"999999") + " BuchungssÑtze angepa·t"
             IF umrechnung.buchung1 <> umrechnung.waehrung THEN 
               umrechnung.buchung1 = umrechnung.waehrung
               waehrung.buchung1 = waehrung.waehrung
               euro1% = umrechnung.waehrung
               CALL BU1DMEuro(euro1%)
               Workstation.buchung1 = Workstation%
               QWoNo.buchung1 = STR$ (Workstation%,"000000") + STR$ (codebu.buchung1,"000000")
               RecStatus.buchung1 = "c"
               STORE FILE "buchung1"
             END IF 
             SELECT NEXT LOCK 
           WEND 
           FILE "waehrung"
           SELECT NEXT INDEX codew.waehrung
         WEND 
       END IF 
     END IF 
     REQUEST "In der WÑhrungsdatei wurden énderungen vorgenommen!","énderungen in die Zahlungsdatei Åbernehmen?",130,req%
     IF req% = 1 THEN 
       FILE "waehrung"
       INDEX codew.waehrung
       SELECT FIRST 
       WHILE NOT EOF ("waehrung")
         CALL DFile(3,"ZEINGANG" + _fpw$)
         FILE "ZEINGANG"
         INDEX codew.ZEINGANG
         SELECT FIRST 
         IF RECCOUNT ("") > 0 THEN SELECT KEY codew.waehrung LOCK FILE "ZEINGANG" INDEX codew.ZEINGANG
         i% = 0
         IF RECCOUNT ("") < 1 THEN SELECT LAST 
         WHILE NOT EOF ("ZEINGANG") AND codew.ZEINGANG = codew.waehrung
           i% = i% + 1
           SET STATUS STR$ (i%,"999999") + " ZahlungseingangssÑtze angepa·t"
           IF umrechnung.ZEINGANG <> umrechnung.waehrung THEN 
             umrechnung.ZEINGANG = umrechnung.waehrung
             waehrung.ZEINGANG = waehrung.waehrung
             euro1% = umrechnung.waehrung
             BetragEU.ZEINGANG = Betrag_gezahlt.ZEINGANG / euro1%
             Workstation.ZEINGANG = Workstation%
             QWoNo.ZEINGANG = STR$ (Workstation%,"000000") + STR$ (codeAZ.ZEINGANG,"000000")
             RecStatus.ZEINGANG = "c"
             STORE FILE "ZEINGANG"
           END IF 
           SELECT NEXT LOCK 
         WEND 
         FILE "waehrung"
         SELECT NEXT INDEX codew.waehrung
       WEND 
       IF EXISTS ("zeingan1.sbf") THEN 
         FILE "waehrung"
         INDEX codew.waehrung
         SELECT FIRST 
         WHILE NOT EOF ("waehrung")
           CALL DFile(3,"zeingan1" + _fpw$)
           FILE "zeingan1"
           INDEX codew.zeingan1
           SELECT FIRST 
           IF RECCOUNT ("") > 0 THEN SELECT KEY codew.waehrung LOCK FILE "zeingan1" INDEX codew.zeingan1
           IF RECCOUNT ("") < 1 THEN SELECT LAST 
           i% = 0
           WHILE NOT EOF ("zeingan1") AND codew.zeingan1 = codew.waehrung
             i% = i% + 1
             SET STATUS STR$ (i%,"999999") + " ZahlungseingangssÑtze angepa·t"
             IF umrechnung.zeingan1 <> umrechnung.waehrung THEN 
               umrechnung.zeingan1 = umrechnung.waehrung
               waehrung.zeingan1 = waehrung.waehrung
               euro1% = umrechnung.waehrung
               BetragEU.zeingan1 = Betrag.zeingan1 / euro1%
               BetraggezEU.zeingan1 = Betrag_gezahlt.zeingan1 / euro1%
               gezahltEU.zeingan1 = gezahlt.zeingan1 / euro1%
               SREU.zeingan1 = SR.zeingan1 / euro1%
               SRAuszahlungEU.zeingan1 = SRAuszahlung.zeingan1 / euro1%
               BewertungEU.zeingan1 = Bewertung.zeingan1 / euro1%
               Workstation.ZEINGAN1 = Workstation%
               QWoNo.ZEINGAN1 = STR$ (Workstation%,"000000") + STR$ (codeAZ.ZEINGAN1,"000000")
               RecStatus.ZEINGAN1 = "c"
               STORE FILE "zeingan1"
             END IF 
             SELECT NEXT LOCK 
           WEND 
           FILE "waehrung"
           SELECT NEXT INDEX codew.waehrung
         WEND 
       END IF 
     END IF 
   END IF 
 END IF 
end031298: 
 SET STATUS ""
 WEND 
 _formend% = 0
 REM IF MOD ("waehrung") OR NEW ("waehrung") THEN CALL FStore("waehrung")
 END SUB 


 
 ' EXIT
 ' ================================================================
 ' Zweck:    Programmende
 ' Nutzung: CALL EXIT()
 ' ================================================================
 
SUB EXIT()
 REMOVE DIALOG ALL 
 DIRECTORY _netpath$
 CALL HideStartup()
 ON ERROR GOTO e061020041
 IF GCODieRuf% = - 1 OR GCODieRuf1% = - 1 THEN 
   ret% = CALL ("_SearchClose")
           GCODieRuf% = 0
           GCODieRuf1% = 0
           GCODieRuf2% = 0
 END IF 
 IF GCODieRuf1% = - 1 THEN 
   REM ret% = CALL ("_SearchClose")
   GCODieRuf1% = 0
           GCODieRuf% = 0
           GCODieRuf1% = 0
           GCODieRuf2% = 0
 END IF 

 ON ERROR GOTO e061020041
 REM ret% = CALL ("_SearchClose")
e061020041: 
 ON ERROR GOTO ErrorHandler
 IF FN sys(2) < 48 THEN '                                            ; Test auf Superbase95
   look3d$ = ReadINI$("SYSTEM","3DLOOK")
   IF look3d$ = "TRUE" THEN 
     IF HInstance% <> 0 THEN 
       a% = CALL ("Ctl3dUnRegister",HInstance%)
     END IF 
   END IF 
 END IF 
 CALL ServerDown()
 IF GTest% = 1 THEN 
   SET DISPLAY ON 
   SET DISPLAY 7
   SET MENU ON 
   REGISTER CLEAR 
   Superbase.SelectionBar = - 1
   END 
 ELSE 
   ON ERROR GOTO lasterr170205
   IF MOD ("MAIL") THEN STORE FILE "mail"
   CLOSE ALL 
 END IF 
 SET DISPLAY OFF 
 REGISTER CLEAR 
 SET DISPLAY 7
 IF GPPCS$ = "TRUE" THEN 
   Superbase.Connections.Clear()
 END IF 
 ON ERROR GOTO lasterr170205
 IF MOD ( FILE ) THEN STORE FILE FILE 
lasterr170205: 
 QUIT 
 END SUB 
 
SUB FormEnd()
 _formend% = 1
 END SUB 
 
SUB PEND()
 END 
 END SUB 
 
 
 '      *******************************************
 '      ** Routinen fÅr CoDIE Application Server **
 '      *******************************************
 
 ' Server initialisieren
 ' =================================================================
 
SUB ServerInit()
 IF Delphi% <> 1 THEN 
   CALL _netpath$ + "SERVER.DLL"
   DDEINIT 99,"SERVER","Server"
   CALL Server("SETPROJECT",title$)
 ELSE 
   v% = CALL ("ServerCMD","SETPROJECT",title$)
 END IF 
 END SUB 
 
 
 ' Server beenden
 ' =================================================================
 
SUB ServerDown()
 IF Delphi% <> 1 THEN 
   REM DDEINIT 3,"SERVER","Server"
   REM DDEPOKE 3,"DDECmd","Down"
   DDETERM 99
 END IF 
 END SUB 
 
 
 ' Serverbefehl ausfÅhren
 ' =================================================================
 
SUB Server(cmd$,Value$)
 IF delphi% = 1 THEN 
   r% = CALL ("ServerCMD", UCASE$ ( FN ansi(cmd$)), FN ansi(Value$))
 ELSE 
   REM DDEINIT 99,"SERVER","Server"
   DDEPOKE 99,"DDEValue1",Value$
   DDEPOKE 99,"DDECmd",cmd$
   DDEPOKE 99,"DDECmd",""
   REM DDETERM 99
 END IF 
 END SUB 
 
 ' Serverergebnis abfragen
 ' =================================================================
 
FUNCTION ServerReply$()
 IF delphi% = 1 THEN 
   ServerReply$ = CALL ("GetReply")
 ELSE 
   REM WAIT FOR 1
   REM DDEINIT 99,"SERVER","Server"
   DDEPOKE 99,"DDEReply","WAIT"
   DDEREQ 99,"DDEReply",tmpZeile$
   WHILE tmpZeile$ = "WAIT"
     DDEREQ 99,"DDEReply",tmpZeile$
   WEND 
   REM DDETERM 99
   ServerReply$ = tmpZeile$
 END IF 
 END FUNCTION 
 
  
 ' SUMME%
 ' =================================================================
 ' Zweck:   Summenbildung eines Feldes aller DatensÑtze einer Datei
 ' Nutzung: x%=SUMME%(datei$,feld$)
 '          datei$      = Name der SB-Datei
 '          feld$       = Name des zu summierenden Feldes
 ' =================================================================
 
FUNCTION SUMME%(datei$,feld$)
 FILE datei$
 feld$ = feld$ + "." + datei$
 REPORT feld$$
 AFTER REPORT 
   SUMME% = SUM (feld$$)
 END REPORT 
 SELECT 
   TO "NUL"
 END SELECT 
 END FUNCTION 
 
 
 'ErrorHandler 
 
 ' =================================================================
 ' Zweck:   Behandlung von Laufzeitfehlern
 ' Nutzung: Aktivierung durch ON ERROR GOTO ErrorHandler
 ' =================================================================
 ' 0000/21.02.93   
 
ErrorHandler: 
 _error% = ERRNO 
    REM ? ERRNO 
  REM ? ERR$ ( ERRNO )
 SELECT CASE _error%
 CASE 8
   REQUEST "Kein eineindeutiges Suchergebnis!"
   RESUME NEXT 
 CASE 10
   SET STATUS "Dateiende!"
   WAIT FOR 0.05
   SET STATUS "Bereit"
   RESUME NEXT 
 CASE 11
   REM IF askonerror% = 1 THEN REQUEST "Funktion abgebrochen!","",2
   REM CALL Fehler("Funktion abgebrochen!","")
   req% = 0
   RESUME NEXT 
 CASE 19,73
   CALL Fehler("Bitte geben Sie ein Datum in der Form TT.MM.JJJJ ein (z.B. " + DATE$ ( TODAY ,"dd.mm.yyyy") + ")","")
   RESUME NEXT 
 CASE 34
   RESUME NEXT 
 CASE 156
   RESUME NEXT 
 CASE 177
   CALL Fehler("Datensatz ist nicht gesperrt!","Operation wurde nicht durchgefÅhrt.")
   RESUME NEXT 
 CASE 130
   IF _errormessages% = 1 THEN CALL Fehler("Datensatz wird zur Zeit benutzt","durch: " + ERR$ (0))
   RESUME NEXT 
 CASE 140,132
   REM Datei ist fÅr gemeinsamen Schreibzugriff geîffnet
   RESUME NEXT 
 CASE 160
   REQUEST "Ende?"
 END CASE 
 Fehler% = ERRNO 
 Fehler$ = "[" + LTRIM$ ( STR$ (Fehler%,"9999999")) + "] " + ERR$ (Fehler%) + "/" + ERR$ (0)
 IF testname$ <> "" THEN fehler$ = Fehler$ + "   evt.Datei: " + testname$
 CREATE DIALOG "PROBHILFE",0,0,245,180,title$,"MS Sans Serif",8
 ADD DIALOG "PROBHILFE",5,34,11,133,9,0,"Hinweise"
 ADD DIALOG "PROBHILFE",9,5,12,20,21,4
 ADD DIALOG "PROBHILFE",4,34,18,203,5,0,""
 ADD DIALOG "PROBHILFE",5,34,30,56,10,0,"Wiederholen:"
 ADD DIALOG "PROBHILFE",5,40,40,197,32,0,"Falls die Fehlermeldung z.B. durch eine nicht eingelegte Diskette oder einem Ñhnlichen Fehler verursacht wurde, kînnen Sie die letzte Aktion vom Programm wiederholen lassen."
 ADD DIALOG "PROBHILFE",5,34,76,60,10,0,"Ignorieren:"
 ADD DIALOG "PROBHILFE",5,40,86,196,30,0,"Die Fehlermeldung wird ignoriert und das Programm versucht eine andere Mîglichkeit zur WeiterfÅhrung der aktuellen Funktion zu finden."
 ADD DIALOG "PROBHILFE",5,34,115,60,10,0,"Beenden:"
 ADD DIALOG "PROBHILFE",5,40,125,196,31,0,"WÑhlen Sie diese Mîglichkeit um das Programm ordnungsgemÑ· zu beenden, falls 'Wiederholen' und 'Ignorieren' keine Wirkung zeigten."
 ADD DIALOG "PROBHILFE",1,90,159,55,15,1,"&OK",0,0
 CREATE DIALOG "REQ",0,0,261,99,title$,"MS Sans Serif",8
 ADD DIALOG "REQ",9,4,11,22,22,3
 ADD DIALOG "REQ",5,30,12,156,10,0,"Problem bei der Programmabarbeitung!"
 ADD DIALOG "REQ",4,30,22,155,5,0,""
 ADD DIALOG "REQ",5,30,30,52,11,0,"Fehlermeldung:"
 ADD DIALOG "REQ",5,30,43,155,45,0,Fehler$
 ADD DIALOG "REQ",1,197,12,55,15,1,"&Wiederholen",1,1
 ADD DIALOG "REQ",1,197,30,55,15,0,"&Ignorieren",0,0
 ADD DIALOG "REQ",1,197,48,55,15,0,"&Beenden",2,1
 ADD DIALOG "REQ",1,197,73,55,15,0,"&Hilfe",4,2,"PROBHILFE"
 DIALOG "REQ",req%
 REMOVE DIALOG "PROBHILFE"
 REMOVE DIALOG ALL 
 IF req% = 1 THEN RESUME 
 IF req% = 0 THEN RESUME NEXT 
 IF req% = 2 THEN CALL EXIT()
 CALL EXIT()
 


 REM ltyp%=0 endgÅltige Lizensierung, LizDatBis=31.12.2199,    GenerierName(
 REM ltyp%=1 VerlÑngerung, LizDatBis=Today+30
SUB LizenzGenerate(codeku%,ltyp%)
 REM CALL Fehler("LizenzGenerate","")
 pw$ = "london8474"
 REM CALL FldAdd("Lizenzfirma","TXT;100",0)
 REM CALL FldAdd("LizenzName","TXT;100",0)
 REM CALL FldAdd("LizDatBis","DAT;0d.mm.yyyy",0)
 REM CALL FldAdd("LizenzNotiz","TXT;400 R",0)
 SELECT FIRST FILE "adressen" INDEX codeku.adressen
 SELECT KEY codeku% LOCK FILE "adressen" INDEX codeku.adressen
 IF Lizenzfirma.adressen = "" OR LizenzName.adressen = "" THEN 
   CALL GenerierName(codeku%)
 END IF 
 SELECT FIRST FILE "adressen" INDEX codeku.adressen
 SELECT KEY codeku% LOCK FILE "adressen" INDEX codeku.adressen
 decfirma$ = Lizenzfirma.adressen
 decname$ = LizenzName.adressen
 IF ltyp% = 0 THEN 
   LizDatBis.adressen = "31.12.2199"
   diatyp$ = "endgÅltiger Lizensierungscode"
 END IF 
 IF ltyp% = 1 THEN 
   LizDatBis.adressen = TODAY + 30
   diatyp$ = "VerlÑngerungscode"
 END IF 
 decdatum$ = DATE$ (LizDatBis.adressen,"0d.mm.yyyy")
 ap$ = LTRIM$ ( STR$ (LizenzAP.adressen,"999"))
 REM Dialog hier rein
anfdecdat180220091: 
     CREATE DIALOG "Konto1",0,0,261,110,diatyp$,"MS Sans Serif",8
     ADD DIALOG "Konto1",9,6,7,24,22,2
     ADD DIALOG "Konto1",5,34,8,170,9,0,"Bitte die Angaben komplettieren"
     ADD DIALOG "Konto1",4,34,14,176,5,0,""
     REM ADD DIALOG "Konto1",5,34,22,175,16,0,"Bitte geben Sie ein, fÅr welchen Zeitraum Sie eine öbersicht wÅnschen."
     ADD DIALOG "Konto1",5,15,28,42,8,0,"Firma"
     ADD DIALOG "Konto1",6,63,27,185,11,0,0,decfirma$,100
     ADD DIALOG "Konto1",5,15,42,42,8,0,"Name"
     ADD DIALOG "Konto1",6,63,42,185,11,0,0,decname$,100
     ADD DIALOG "Konto1",5,15,55,42,8,0,"Anzahl AP"
     ADD DIALOG "Konto1",6,63,55,18,11,0,0,ap$,2

     ADD DIALOG "Konto1",5,15,68,42,8,0,"Laufzeit bis..."
     ADD DIALOG "Konto1",6,63,68,42,11,0,0,decdatum$,10

     ADD DIALOG "Konto1",1,70,92,55,15,1,"&Weiter",1,1
     ADD DIALOG "Konto1",1,130,92,55,15,0,"&Abbruch",0,0
     DIALOG "Konto1",req%
     REMOVE DIALOG "Konto1"
     IF req% <> 1 THEN GOTO eliz230120081
     LizenzNotiz.adressen = ""
     IF NOT DateOK%(decdatum$) THEN GOTO anfdecdat180220091
     Lizenzfirma.adressen = decfirma$
     LizenzName.adressen = decname$
     LizenzAP.adressen = VAL (ap$)
     LizDatBis.adressen = decdatum$
 aa% = CALL ("_EncryptString",decfirma$,encfirma1$,pw$)
 a1% = CALL ("_GetStringHash",encfirma1$,pw$,hash1$)
 aa% = CALL ("_EncryptString",decname$,encname1$,pw$)
 a1% = CALL ("_GetStringHash",encname1$,pw$,hash2$)
 aa% = CALL ("_EncryptString",decdatum$,encdatum1$,pw$)
 a1% = CALL ("_GetStringHash",encdatum1$,pw$,hash3$)
 aa% = CALL ("_EncryptString",ap$,encap1$,pw$)
 a1% = CALL ("_GetStringHash",encap1$,pw$,hash4$)
 GOTO al230120082
 DIRECTORY _netpaht$
 IF EXISTS (_netpaht$ + "sbcode30.DLL") THEN DELETE _netpaht$ + "sbcode30.DLL"
 OPEN _netpaht$ + "sbcode30.DLL" FOR OUTPUT 
 ? encfirma1$
 ? hash1$
 ? encname1$
 ? hash2$
 ? encdatum1$
 ? hash3$
 ? encap1$
 ? hash4$
 CLOSE OUTPUT 
al230120082: 
 LizenzNotiz.adressen = encfirma1$ + CHR$ (13) + CHR$ (10)
 LizenzNotiz.adressen = LizenzNotiz.adressen + hash1$ + CHR$ (13) + CHR$ (10)
 LizenzNotiz.adressen = LizenzNotiz.adressen + encname1$ + CHR$ (13) + CHR$ (10)
 LizenzNotiz.adressen = LizenzNotiz.adressen + hash2$ + CHR$ (13) + CHR$ (10)
 LizenzNotiz.adressen = LizenzNotiz.adressen + encdatum1$ + CHR$ (13) + CHR$ (10)
 LizenzNotiz.adressen = LizenzNotiz.adressen + hash3$ + CHR$ (13) + CHR$ (10)
 LizenzNotiz.adressen = LizenzNotiz.adressen + encap1$ + CHR$ (13) + CHR$ (10)
 LizenzNotiz.adressen = LizenzNotiz.adressen + hash4$ + CHR$ (13) + CHR$ (10)
 STORE FILE "adressen"
eliz230120081: 
 FORM 
 END SUB 



  

 

 
 ' Lizensierung
 ' =================================================================
 ' Zweck:       Lizensierung einer CoDIE-Anwendung
 ' Nutzung:     CALL Lizensierung()
 ' =================================================================
 ' 22.04.93    - Testzeitraum auf 14 Tage eingeschrÑnkt
 ' 31.01.95    - Umstellung auf neues Lizensierungsverfahren
 ' 07.09.95    - Fehler bei Neulizensierung einer geÑnderten Netz-
 '               werk-AP-Zahl
 
  
SUB Lizensierung()
 IF NOT EXISTS (_netpath$ + "LICENSE.DLL") THEN 
   CALL Fehler("Fehler in Superbase-Runtime!","Bitte wenden Sie sich an Ihren HÑndler oder an die Hotline.")
   CALL EXIT()
 END IF 
 mp% = 0
 licfound% = CALL ("GetLicense",iAppID%,_netpath$ + "LICENSE.DLL")
 IF licfound% = 1 THEN 
   DiskSize&% = CALL ("AccessItemL",0,0,0)'                                     ; == auf Manipulation testen ==
   lDiskSize&% = CALL ("AccessItemL",11,0,0)
   IF DiskSize&% <> lDiskSize&% THEN mp% = - 1'                                 ; Festplatte gewechselt
   IF CALL ("AccessItemI",12,0,0) <> FN sys(5) THEN mp% = - 1'                  ; andere Netzwerk-Version
   timeout% = CALL ("AccessItemL",9,0,0)
   IF timeout% - 30 > DAYS ( TODAY ) THEN mp% = - 1'                            ; Systemzeit manipuliert?
   IF mp% THEN 
     a% = CALL ("AccessItemL",9,1,0)'                                           ; AppLicense.Timeout = 0
     a% = CALL ("PutLicense",iAppID%,_netpath$ + "LICENSE.DLL")'                ; TimeOut sperren
   END IF 
 ELSE '                                                                         ; == Basisdaten schreiben ==
   a% = CALL ("AccessItemI",8,1,0)'                                             ; AppLicense.Licensed = 0
   a% = CALL ("AccessItemL",9,1, DAYS ( TODAY ) + 30)'                          ; AppLicense.Timeout
   a% = CALL ("AccessItemL",10,1,0)'                                            ; AppLicense.SerialNo = 0
   a% = CALL ("AccessItemL",11,1, CALL ("AccessItemL",0,0,0))'                  ; AppLicense.SysParam = 0
   a% = CALL ("AccessItemI",12,1, FN sys(5))'                                   ; AppLicense.NetCount = 0
   a% = CALL ("PutLicense",iAppID%,_netpath$ + "LICENSE.DLL")
 END IF 
 timeout% = 0
 IF licfound% = 1 THEN 
   a% = CALL ("GetLicense",iAppID%,_netpath$ + "LICENSE.DLL")
   timeout% = CALL ("AccessItemL",9,0,0)
   IF timeout% <= DAYS ( TODAY ) THEN timeout% = - 1 ELSE timeout% = 0'         ; Probezeit abgelaufen ? 
 END IF 
 IF CALL ("AccessItemI",8,0,0) = 255 - FN sys(5) AND NOT mp% THEN END SUB '     ; Lizensierung OK! - Austritt
 REMOVE DIALOG ALL 
 IF licfound% = 0 OR mp% OR CALL ("AccessItemL",10,0,0) = 0 THEN 
   msg$ = "Registrieren"
 ELSE 
   msg$ = "Freischalten"
 END IF 
 cmReg$ = "&" + msg$
 msg$ = "Wenn Sie das Programm kÑuflich erworben haben oder erwerben wollen, klicken Sie auf die SchaltflÑche '" + msg$ + "'."
 IF NOT timeout% THEN 
   CALL DFile(2,"OFFICE\adressen" + _fpw$)
   FILE "Adressen"
   INDEX codeku.adressen
   SELECT FIRST LOCK 
   IF prioritÑt.adressen = 3 THEN timeout% = - 1
   FILE "Supervis"
 END IF 
 IF timeout% THEN 
   CALL DFile(2,"OFFICE\adressen" + _fpw$)
   FILE "Adressen"
   INDEX codeku.adressen
   SELECT FIRST LOCK 
   prioritÑt.adressen = 3
   STORE FILE "Adressen"
   UNLOCK CURRENT FILE "adressen"
   FILE "Supervis"
   HtlFirma$ = ReadConfig$(_projekt$,"HotlineFirma")
   HtlTelefon$ = ReadConfig$(_projekt$,"HotlinePhone")'                         ; Hotlinedaten aus
   HtlTelefax$ = ReadConfig$(_projekt$,"HotlineFax")'                           ; CODIEAPP.NET auslesen und
   IF HtlTelefon$ LIKE "leer" THEN HtlTelefon$ = "(0331) 28 00 28 1"'           ; notfalls auf Standardwerte
   IF HtlTelefax$ LIKE "leer" THEN HtlTelefax$ = "(0331) 28 00 28 2"'           ; setzen
   CREATE DIALOG "Demo2",0,0,193,117,title$,"MS Sans Serif",8'                  ; == Dialog fÅr Timeout erzeugen ==
   ADD DIALOG "Demo2",4,0,0,193,96,0,""
   ADD DIALOG "Demo2",9,4,8,20,22,3
   ADD DIALOG "Demo2",5,30,11,159,11,0,"Der Testzeitraum fÅr diese Demo ist abgelaufen."
   ADD DIALOG "Demo2",5,30,25,158,29,0,"Um das Programm zu erwerben oder den Testzeitraum der Demo zu verlÑngern, setzen Sie sich bitte mit der Hotline in Verbindung."
   ADD DIALOG "Demo2",5,30,58,106,10,0,"Hotline (Mo - Fr, 10:00 - 18:00):"
   ADD DIALOG "Demo2",5,30,68,30,10,0,"Telefon:"
   ADD DIALOG "Demo2",5,71,68,119,10,0,HtlTelefon$
   ADD DIALOG "Demo2",5,30,78,17,10,0,"Fax:"
   ADD DIALOG "Demo2",5,71,78,117,10,0,HtlTelefax$
   ADD DIALOG "Demo2",1,61,99,55,15,1,"&OK",1,2
 END IF 
 CREATE DIALOG "Demo",0,0,217,98,title$,"MS Sans Serif",8'                      ; == Regist/Demo-Dialog erzeugen ==
 ADD DIALOG "Demo",4,0,0,216,74,0,""
 ADD DIALOG "Demo",9,4,11,22,22,4
 ADD DIALOG "Demo",5,31,13,152,10,0,"Diese Anwendung wurde noch nicht lizensiert!"
 ADD DIALOG "Demo",5,31,25,178,18,0,"Wenn Sie das Programm als Demo erhalten haben, klicken Sie bitte auf die SchaltflÑche 'Demo starten'."
 ADD DIALOG "Demo",5,31,45,178,24,0,msg$
 IF NOT timeout% THEN 
   ADD DIALOG "Demo",1,14,78,65,15,1,"&Programm starten",1,1
 ELSE 
   ADD DIALOG "Demo",1,14,78,65,15,1,"&Programm starten",1,2,"Demo2"
 END IF 
 ADD DIALOG "Demo",1,81,78,55,15,0,cmReg$,2,1
 ADD DIALOG "Demo",1,138,78,55,15,0,"&Beenden",0,0
 DIALOG "Demo",req%
 REMOVE DIALOG ALL 
 IF req% = 0 THEN CALL EXIT()
 IF req% = 2 THEN 
   IF licfound% = 0 OR mp% OR CALL ("AccessItemL",10,0,0) = 0 THEN 
     Name$ = TRIM$ ( CALL ("GetUserName"))
     Firma$ = TRIM$ ( CALL ("GetUserCompany"))
     CREATE DIALOG "LIZENZ",0,0,250,160,title$,"MS Sans Serif",8
     ADD DIALOG "LIZENZ",4,0,0,250,137,0,""
     ADD DIALOG "LIZENZ",9,8,10,19,21,3
     ADD DIALOG "LIZENZ",5,32,10,214,10,0,"Registrierung/Lizensierung:"
     ADD DIALOG "LIZENZ",5,32,20,214,20,0,"Zur ordnungsgemÑ·en Lizensierung dieser Anwendung fÅllen Sie bitte die nachfolgenden Eingabefelder vollstÑndig aus."
     ADD DIALOG "LIZENZ",5,32,36,214,30,0,"Wenn Sie Fragen zum Lizensierungsverfahren haben, klicken Sie mit der Maus auf die SchaltflÑche 'Hilfe' oder lesen Sie den Abschnitt 'Lizensierung' in der Programmdokumentation."
     ADD DIALOG "LIZENZ",5,32,63,214,10,0,"(Die Seriennummer finden Sie auf der Registrierkarte!)"
     ADD DIALOG "LIZENZ",5,32,74,70,10,0,"Lizensierungsdaten:"
     ADD DIALOG "LIZENZ",5,32,93,23,10,0,"Name:"
     ADD DIALOG "LIZENZ",6,90,89,154,11,0,0,Name$,50
     ADD DIALOG "LIZENZ",5,32,108,24,10,0,"Firma:"
     ADD DIALOG "LIZENZ",6,90,104,154,11,0,0,Firma$,50
     ADD DIALOG "LIZENZ",5,32,123,50,10,0,"Seriennummer:"
     ADD DIALOG "LIZENZ",6,90,119,154,11,0,0,Seriennummer$,50
     ADD DIALOG "LIZENZ",1,36,142,55,15,1,"&Weiter",1,1
     ADD DIALOG "LIZENZ",1,93,142,55,15,0,"&Abbruch",0,0
     ADD DIALOG "LIZENZ",1,150,142,55,15,0,"&Hilfe",2,2
     ok% = 0
     WHILE NOT ok%
       DIALOG "LIZENZ",req%
       SELECT CASE req%
       CASE 1
         fehler$ = ""
         IF Name$ = "" THEN fehler$ = fehler$ + ", Name"
         IF Firma$ = "" THEN fehler$ = fehler$ + ", Firma"
         IF Seriennummer$ = "" OR VAL (Seriennummer$) = 0 OR LEFT$ (Seriennummer$,1) <> "0" OR LEN (Seriennummer$) < 4 OR LEN (Seriennummer$) > 6 THEN fehler$ = fehler$ + ", Seriennummer"
         IF fehler$ <> "" THEN 
           REQUEST "Die Lizensierungsdaten sind noch nicht vollstÑndig oder fehlerhaft!","Es fehlen die Angaben: " + RIGHT$ (fehler$, LEN (fehler$) - 1),139,req1%
         ELSE 
           CREATE DIALOG "LIZENZ2",0,0,254,82,title$,"MS Sans Serif",8
           ADD DIALOG "LIZENZ2",4,0,0,253,60,0,""
           ADD DIALOG "LIZENZ2",9,7,10,20,23,2
           ADD DIALOG "LIZENZ2",5,34,10,202,11,0,"Sind die eingegebenen Daten richtig?"
           ADD DIALOG "LIZENZ2",5,34,21,23,11,0,"Name:"
           ADD DIALOG "LIZENZ2",5,88,21,157,11,0,Name$
           ADD DIALOG "LIZENZ2",5,34,32,24,11,0,"Firma:"
           ADD DIALOG "LIZENZ2",5,88,32,157,11,0,Firma$
           ADD DIALOG "LIZENZ2",5,34,44,51,11,0,"Seriennummer:"
           ADD DIALOG "LIZENZ2",5,88,44,157,11,0,Seriennummer$
           ADD DIALOG "LIZENZ2",1,68,64,55,15,1,"&Weiter",1,1
           ADD DIALOG "LIZENZ2",1,125,64,55,15,0,"é&ndern",0,0
           DIALOG "LIZENZ2",req2%
           REMOVE DIALOG "LIZENZ2"
           IF req2% = 1 THEN ok% = - 1 ELSE ok% = 0
         END IF 
       CASE 2
         REM ** ? "Hilfetext zu LIZ1 anzeigen"
       CASE ELSE 
         ok% = - 1
         CALL EXIT()
       END SELECT 
     WEND 
     REMOVE DIALOG "LIZENZ"
     a$ = CALL ("AccessItemC",1,1,name$)
     a$ = CALL ("AccessItemC",2,1,Firma$)
     IF mp% THEN 
       a% = CALL ("AccessItemL",9,1,0)
     ELSE 
       a% = CALL ("AccessItemL",9,1, DAYS ( TODAY ) + 30)
     END IF 
     a% = CALL ("AccessItemL",10,1, VAL (Seriennummer$))
     a% = CALL ("AccessItemL",11,1, CALL ("AccessItemL",0,0,0))
     a% = CALL ("AccessItemI",12,1, FN sys(5))
     DiskSize% = CALL ("AccessItemL",0,0,0)
     lizcode$ = MakeCode$(Name$,DiskSize%, VAL (Seriennummer$),iAppID%)
     lizcode&% = VAL ( RIGHT$ (lizcode$,6))
     a% = CALL ("AccessItemL",7,1,lizcode&%)
     a% = CALL ("AccessItemI",8,1,0)
     a% = CALL ("PutLicense",iAppID%,_netpath$ + "LICENSE.DLL")
   END IF 
   IF CALL ("AccessItemI",8,0,0) <> 255 - FN sys(5) THEN 
     a% = CALL ("GetLicense",iAppID%,_netpath$ + "LICENSE.DLL")
     Seriennummer$ = STR$ ( CALL ("AccessItemL",10,0,0),"000000")
     name$ = CALL ("AccessItemC",1,0,"")
     firma$ = CALL ("AccessItemC",2,0,"")
     DiskSize% = CALL ("AccessItemL",0,0,0)
     lizcode$ = MakeCode$(Name$,DiskSize%, VAL (Seriennummer$),iAppID%)
     name$ = CALL ("AccessItemC",1,0,"")
     CREATE DIALOG "LIZENZ",0,0,248,156,title$,"MS Sans Serif",8
     ADD DIALOG "LIZENZ",4,0,0,248,134,0,""
     ADD DIALOG "LIZENZ",9,8,12,20,23,2
     ADD DIALOG "LIZENZ",5,33,12,210,10,0,"Bitten geben Sie den Freischaltcode ein:"
     ADD DIALOG "LIZENZ",5,33,23,210,28,0,"Sollten Sie noch keinen Freischaltcode erhalten haben, tragen Sie bitte den unten aufgefÅhrten Lizensierungscode auf der Registrierkarte ein und versenden diese per Post oder per Fax."
     ADD DIALOG "LIZENZ",5,33,51,210,18,0,"Den Freischaltcode erhalten Sie dann von uns telefonisch, per Fax oder per Post."
     ADD DIALOG "LIZENZ",5,33,70,210,26,0,"Innerhalb der ersten 14 Tage nach Installation des Programmes, kînnen Sie das Programm auch ohne Eingabe des Freischaltcodes starten."
     ADD DIALOG "LIZENZ",5,33,102,63,11,0,"Lizensierungscode:"
     ADD DIALOG "LIZENZ",5,103,102,140,11,0,lizcode$
     ADD DIALOG "LIZENZ",6,103,115,135,11,0,0,fscode$,50
     ADD DIALOG "LIZENZ",5,33,118,50,10,0,"Freischaltcode:"
     ADD DIALOG "LIZENZ",1,65,139,55,15,1,"&Weiter",1,1
     ADD DIALOG "LIZENZ",1,122,139,55,15,0,"&Ende",0,0
     DIALOG "LIZENZ",req%
     REMOVE DIALOG "LIZENZ"
     IF req% = 1 THEN 
       IF fscode$ LIKE "V" THEN CALL LizV()
       lizcode&% = VAL ( RIGHT$ (lizcode$,6))
       fscode&% = VAL (fscode$)
       a% = CALL ("GetAppVersion",lizcode&%,fscode&%)
       IF a% = 1 THEN 
         a% = CALL ("AccessItemI",8,1,255 - FN sys(5))
         a% = CALL ("AccessItemL",11,1, CALL ("AccessItemL",0,0,0))
         a% = CALL ("AccessItemI",12,1, FN sys(5))
         a% = CALL ("PutLicense",iAppID%,_netpath$ + "LICENSE.DLL")
         CREATE DIALOG "LIZENZ",0,0,222,190,title$,"MS Sans Serif",8
         ADD DIALOG "LIZENZ",4,0,0,222,168,0,""
         ADD DIALOG "LIZENZ",9,6,12,20,23,4
         ADD DIALOG "LIZENZ",5,30,12,182,8,0,"Herzlichen GlÅckwunsch!"
         ADD DIALOG "LIZENZ",5,30,20,182,8,0,"Das Programm wurde erfolgreich lizensiert."
         ADD DIALOG "LIZENZ",5,30,32,182,30,0,"Bitte notieren Sie sich die nachfolgenden Daten, um im Falle einer Neuinstallation die Software wieder freischalten zu kînnen."
         ADD DIALOG "LIZENZ",5,30,60,182,25,0,"Bedenken Sie aber bitte, da· der Freischaltcode nur fÅr diesen Computer gilt. Die Installation auf einen anderen Computer ist mit diesem Freischaltcode nicht mîglich."
         ADD DIALOG "LIZENZ",4,30,91,187,72,0,""
         ADD DIALOG "LIZENZ",4,30,91,187,18,0,""
         ADD DIALOG "LIZENZ",5,35,98,88,10,0,"Lizensierungsdaten"
         ADD DIALOG "LIZENZ",5,35,112,47,10,0,"Name:"
         ADD DIALOG "LIZENZ",5,90,112,125,10,0,Name$
         ADD DIALOG "LIZENZ",5,35,122,46,10,0,"Firma:"
         ADD DIALOG "LIZENZ",5,90,122,125,10,0,Firma$
         ADD DIALOG "LIZENZ",5,35,132,46,10,0,"Programm:"
         ADD DIALOG "LIZENZ",5,90,132,125,10,0,title$
         ADD DIALOG "LIZENZ",5,35,142,48,10,0,"Seriennummer:"
         ADD DIALOG "LIZENZ",5,90,142,125,10,0,Seriennummer$
         ADD DIALOG "LIZENZ",5,35,152,50,10,0,"Freischaltcode:"
         ADD DIALOG "LIZENZ",5,90,152,125,10,0,fscode$
         ADD DIALOG "LIZENZ",1,52,172,55,15,1,"&Weiter",1,1
         ADD DIALOG "LIZENZ",1,108,172,55,15,0,"&Drucken",2,1
         DIALOG "LIZENZ",req%
         REMOVE DIALOG "LIZENZ"
         REM 160698
         CALL DFile(2,"OFFICE\adressen" + _fpw$)
         FILE "Adressen"
         INDEX codeku.adressen
         SELECT FIRST LOCK 
         prioritÑt.adressen = 0
         STORE FILE "Adressen"
         UNLOCK CURRENT FILE "adressen"
         FILE "Supervis"
       ELSE 
         a% = CALL ("GetLicense",iAppID%,_netpath$ + "LICENSE.DLL")
         timeout% = CALL ("AccessItemL",9,0,0)
         IF timeout% <= DAYS ( TODAY ) THEN timeout% = - 1 ELSE timeout% = 0
         IF fscode$ <> "" OR timeout% THEN 
           IF timeout% THEN 
             a% = CALL ("AccessItemL",9,1,0)
             a% = CALL ("PutLicense",iAppID%,_netpath$ + "LICENSE.DLL")
             cmOK$ = "&Ende"
             msg$ = "Ein Fortfahren ohne Eingabe des richtigen Freischaltcodes ist nicht mehr mîglich."
           ELSE 
             cmOK$ = "&Weiter"
             CALL DFile(2,"OFFICE\adressen" + _fpw$)
             FILE "Adressen"
             INDEX codeku.adressen
             SELECT FIRST LOCK 
             IF prioritÑt.adressen = 3 THEN cmOK$ = "&Ende"
             msg$ = "Bitte geben Sie beim nÑchsten Programmstart den korrekten Freischaltcode ein."
           END IF 
           CREATE DIALOG "LIZENZ",0,0,198,69,title$,"MS Sans Serif",8
           ADD DIALOG "LIZENZ",4,0,0,198,45,0,""
           ADD DIALOG "LIZENZ",9,6,10,20,22,1
           ADD DIALOG "LIZENZ",5,34,9,155,10,0,"Der eingegebene Freischaltcode ist fehlerhaft!"
           ADD DIALOG "LIZENZ",5,34,20,156,20,0,msg$
           ADD DIALOG "LIZENZ",1,66,50,55,15,0,cmOK$,0,0
           DIALOG "LIZENZ"
           REMOVE DIALOG "LIZENZ"
           IF cmOK$ LIKE "*Ende*" THEN CALL EXIT()
         END IF 
       END IF 
     ELSE 
       CALL EXIT()
     END IF 
   END IF 
 END IF 
 END SUB 
 
FUNCTION MakeCode$(UsrName$,DiskSize%,Sernum%,AppID%)
 UsrName$ = LTRIM$ ( TRIM$ ( UCASE$ (UsrName$)))
 sernum$ = STR$ (Sernum% * AppID%,"00000000")
 tser$ = ""
 FOR a% = LEN (sernum$) TO 1 STEP - 1
   tser$ = tser$ + STR$ (9 - VAL ( MID$ (Sernum$,a%,1)) - FN sys(5),"0")
 NEXT a%
 nser% = VAL ( LEFT$ (tser$,6))
 ds$ = RIGHT$ ( STR$ (DiskSize%,"00000000000"),6)
 tds$ = ""
 FOR a% = LEN (ds$) TO 1 STEP - 1
   tds$ = tds$ + STR$ (9 - VAL ( MID$ (ds$,a%,1)),"0")
 NEXT a%
 qs% = 0
 FOR a% = 1 TO LEN (UsrName$)
   qs% = qs% + ASC ( MID$ (UsrName$,a%,1)) * a%
 NEXT a%
 qs% = qs% + VAL ( RIGHT$ (tds$,6))
 qs$ = STR$ (qs% + nser%,"00000000")
 qs% = VAL ( RIGHT$ (qs$,6))
 IF FN sys(5) = 1 THEN nc$ = "E" ELSE nc$ = "N"
 MakeCode$ = STR$ (sernum%,"000000") + "-" + LTRIM$ ( STR$ (AppID%,"999")) + nc$ + LTRIM$ ( STR$ ( FN sys(5),"99999")) + "-" + RIGHT$ ( STR$ (qs% - ((sernum% * 2.1) * 10),"00000000"),6)
 END FUNCTION 
 
SUB LizV()
 VCode$ = RIGHT$ ( STR$ ( TIMEVAL ( NOW ),"00000000000"),6)
 pcode$ = title$ + DATE$ ( TODAY ,"yymmdd") + "-" + VCode$ + "-" + TIME$ ( NOW ,"hh:mm")
 CREATE DIALOG "LIZ7",0,0,278,90,title$,"MS Sans Serif",8
 ADD DIALOG "LIZ7",4,0,0,275,68,0,""
 ADD DIALOG "LIZ7",9,6,11,21,23,2
 ADD DIALOG "LIZ7",5,30,11,202,17,0,"Bitte geben Sie den Gegencode ein, um die Testzeit fÅr diese Anwendung zu verlÑngern."
 ADD DIALOG "LIZ7",5,30,35,33,10,0,"PrÅfcode:"
 ADD DIALOG "LIZ7",5,82,35,240,10,0,pcode$
 ADD DIALOG "LIZ7",5,30,49,42,10,0,"Gegencode:"
 ADD DIALOG "LIZ7",6,82,47,147,11,0,0,gcode$,50
 ADD DIALOG "LIZ7",1,90,72,55,15,1,"&OK",1,1
 ADD DIALOG "LIZ7",1,147,72,55,15,0,"&Abbrechen",0,0
 DIALOG "LIZ7",req%
 REMOVE DIALOG "LIZ7"
 IF req% = 1 THEN 
   a% = CALL ("GetAppVersion", VAL (vcode$), VAL (gcode$))
   IF a% = 1 THEN 
     a% = CALL ("GetLicense",iAppID%,_netpath$ + "License.DLL")
     a% = CALL ("AccessItemL",9,1, DAYS ( TODAY ) + 30)
     a% = CALL ("PutLicense",iAppID%,_netpath$ + "License.DLL")
     REQUEST "Die Probezeit wurde verlÑngert!"
     REM 160698
     CALL DFile(2,"OFFICE\adressen" + _fpw$)
     FILE "Adressen"
     INDEX codeku.adressen
     SELECT FIRST LOCK 
     prioritÑt.adressen = 0
     STORE FILE "Adressen"
     UNLOCK CURRENT FILE "adressen"
     FILE "Supervis"
   ELSE 
     REQUEST "Falscher VerlÑngerungscode!"
   END IF 
 END IF 
 CALL EXIT()
 END SUB 
 
 
 
 '      *********************************
 '      ** Routinen fÅr BÅromanagement **
 '      ** OFFICE V2.1                 **
 '      *********************************
 
  
 
SUB OFFICE()
 IF title$ LIKE "*FACTURA*" OR title$ LIKE "*price*" THEN 
   CALL Fehler("Funktion wird in dieser Programm-Version nicht unterstÅtzt!","")
   END SUB 
 END IF 
 _formend% = 0
 WHILE _formend% = 0
   Upd$ = UCASE$ (ReadConfig$(_projekt$,"UPDATE"))
   OFFICEsub% = 0
   IF FORM <> "OFFICE" THEN 
cst3004981: 
     IF quickbar% = 1 THEN 
       IF _projekt$ = "OFFICE" OR _projekt$ = "AKTE" THEN CALL Server("OFFICEON","&Ende") ELSE CALL Server("OFFICEON","&ZurÅck")
       SET DISPLAY OFF 
     ELSE 
       
       
       IF _projekt$ = "OFFICE" OR _projekt$ = "FACTURA" OR _projekt$ = "WAWI" OR _projekt$ = "IMMAK" OR _projekt$ = "MEDIA" OR _projekt$ = "HORTUS" THEN 
         OPEN FORM GOFFForm$ + "OFFICE"
         SET HEADING title$ + " - HauptÅbersicht"
         SET STATUS "HauptÅbersicht"
         ende$ = "&Ende"
       ELSE 
         IF _projekt$ = "AKTE" THEN 
           IF EXISTS (_netpath$ + "AKTE\AKTE.sbv") THEN 
             OPEN FORM _netpath$ + "AKTE\AKTE"
           ELSE 
             OPEN FORM _netpath$ + "AKTE\AKTE"
           END IF 
           SET HEADING title$
           SET STATUS "CoDIEAKTE"
           ende$ = "&ZurÅck"
         ELSE 
           SET HEADING title$ + " - BÅromanager"
           SET STATUS "BÅromanager"
           ende$ = "&ZurÅck"
         END IF 
       END IF 
       CALL MNOFFICE()
       REM SELECT WHERE FILE "adressen"
       REM SELECT WHERE FILE GAkquiDat$
       MENU ON addon1%,addon2%
       FORM 
       SET DISPLAY ON 
       CALL HideStartup()
    END IF 
   END IF 
   CALL ClearKBDBuffer()
   IF MATagest$ = "TRUE" AND fir% = 0 AND upd$ <> "TRUE" AND _projekt$ = "OFFICE" THEN 
     REQUEST "Mîchten Sie Ihre Tagestermine sehen?","",130,req%
     IF req% = 1 THEN CALL TagestMA()
     fir% = 1
   END IF 
   IF Upd$ LIKE "TRUE" THEN 
     IF NOT PROGRAMFILE ("UPDATE") THEN LOAD _netpath$ + "UPDATE.SBR", NEW 
     CALL DoUpdate()
     Upd$ = UCASE$ (ReadConfig$(_projekt$,"UPDATE"))
   END IF 
   IF FN sys(5) > 1 THEN Variante$ = "Netzwerk mit " + LTRIM$ ( STR$ ( FN sys(5),"99")) + " PlÑtzen" ELSE Variante$ = "Einzelplatz"
   Version$ = "Version: " + ReadConfig$(_projekt$,"Version")
   Release$ = "Release: " + ReadConfig$(_projekt$,"Release") + " - Variante: " + Variante$
   FORM 
   IF UCASE$ ( FORM ) <> "OFFICE" THEN GOTO cst3004981
   WAIT MOUSE OR KEY OR MENU OR FOR 600
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE OFFICEsub%
   CASE 1
     CALL ADRESSEN()
   CASE 2
     CALL MAILING()
   CASE 3
     CALL DOKallg()
   CASE 4
     termin% = 1
     CALL AKQUISE(1)
   CASE 5
     CALL SETUP()
   CASE 6
     CALL BMKurzbericht()
   CASE 7
     CALL AKTIONEN()
   END SELECT 
   CALL BMCheckMail()
 WEND 
 _formend% = 0
 END SUB 
  
 
 ' Erstellen von Kurzberichten
 ' ====================================================================
SUB BMKurzbericht()
 pfad1$ = DIRECTORY 
 IF disabled%("BERICHTE") THEN END SUB 
 IF disabled%("DATALOCK") THEN END SUB 
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\banken" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(2,"OFFICE\connect" + _fpw$)
 IF _projekt$ LIKE "PROVIS" THEN 
   CALL DFile(3,"sparten" + _fpw$)
   CALL DFile(3,"geadr" + _fpw$)
   CALL DFile(3,"gekond" + _fpw$)
   CALL DFile(3,"maadr" + _fpw$)
   CALL DFile(3,"kvertrag" + _fpw$)
   CALL DFile(3,"spgruppe" + _fpw$)
 END IF 
 CALL FClose("ACCESS")
 CALL FClose("ACCODE")
 CALL FClose("FAX")
 CALL FClose("KEYWORDS")
 CALL FClose("SUPERVIS")
 CALL FClose("MAIL")
 CLEAR ERRNO 
 ok% = - 1
 opt% = 1
 berdatei$ = "*.sbq"
 ON ERROR GOTO ErrBericht 
 WHILE ok%
   IF berdatei$ = "*.sbq" THEN 
     Stat$ = "kein Bericht geladen"
   ELSE 
     Stat$ = "Bericht " + FN name(berdatei$) + " geladen"
   END IF 
   CREATE DIALOG "BER",0,0,183,146,title$,"MS Sans Serif",8
   ADD DIALOG "BER",4,0,0,182,121,0,""
   ADD DIALOG "BER",9,8,9,21,21,2
   ADD DIALOG "BER",5,36,11,134,16,0,"Bitte wÑhlen Sie eine der nachfolgenden Optionen aus:"
   ADD DIALOG "BER",5,36,32,27,10,0,"Status:"
   ADD DIALOG "BER",5,65,32,106,18,0,Stat$
   ADD DIALOG "BER",3,36,57,132,11,0,"Kurzbericht bearbeiten/ausfÅhren",1,opt%
   ADD DIALOG "BER",3,36,69,132,11,0,"Kurzbericht laden",2,opt%
   ADD DIALOG "BER",3,36,81,132,11,0,"Kurzbericht speichern",3,opt%
   ADD DIALOG "BER",3,36,93,134,11,0,"Bericht nach Excel exportieren",4,opt%
   ADD DIALOG "BER",3,36,105,134,11,0,"Bericht nach dBase III/IV exportieren",5,opt%
   ADD DIALOG "BER",1,30,125,55,15,1,"&OK",1,1
   ADD DIALOG "BER",1,86,125,55,15,0,"&Beenden",0,0
   DIALOG "BER",req%
   REMOVE DIALOG "BER"
   IF req% = 1 THEN 
     SELECT CASE opt%
     CASE 1
       SET STATUS "Bericht bearbeiten/ausfÅhren..."
       EDIT QUERY ,ziel%%
       MOUSE OFF 
       SELECT CASE ziel%%
       CASE 1' Drucker
         ? QUERY TO PRINTER 
       CASE 2' Datei auf Platte
         dat$ = "*.asc"
         REQUEST "Bericht speichern als"," ",27,req2%,dat$
         IF req2% = 1 THEN ? QUERY TO dat$
       CASE 3' Datenbankdatei
         dat$ = "*.sbf"
         REQUEST "Dateinamen fÅr Bericht"," ",27,req2%,dat$
         
         IF RIGHT$ (dat$,4) LIKE ".sbf" THEN 
           d$ = LEFT$ (dat$, LEN (dat$) - 4)
           IF EXISTS (dat$) THEN DELETE d$ + ".*"
         ELSE 
           d$ = dat$
           IF EXISTS (dat$) THEN DELETE d$ + ".*"
         END IF 
         IF req2% = 1 THEN ? QUERY TO FILE d$
       CASE 4' Zwischenablage
         COPY QUERY 
       CASE 0,5,6' Fenster
         ? QUERY TO WINDOW ,"Kurzbericht"
       END CASE 
     CASE 2
       SET STATUS "Kurzbericht laden..."
       REQUEST "Kurzbericht laden"," ",26,req%,berdatei$
       IF req% = 1 THEN LOAD QUERY berdatei$
     CASE 3
       SET STATUS "Kurzbericht speichern..."
       REQUEST "Kurzbericht speichern als..."," ",27,req%,berdatei$
       IF req% <> 0 THEN SAVE QUERY berdatei$
     CASE 4,5
       IF opt% = 4 THEN 
         dateiname1$ = "*.xls"
         REQUEST "Speichern als Excel-Datei..."," ",27,req%,dateiname1$
       END IF 
       IF opt% = 5 THEN 
         dateiname2$ = "*.dbf"
         REQUEST "Speichern als dBase-Datei..."," ",27,req%,dateiname2$
       END IF 
       IF req% <> 0 THEN 
         CALL Server("LOADMESSAGE","")
         CALL Server("MESSAGE","Erstellen einer temporÑren Ausgabedatei!")
         MOUSE OFF 
         dat$ = "tempfile"
         IF EXISTS (dat$ + ".sbf") THEN DELETE dat$ + ".*"
         SET STATUS "Erstellen einer temporÑren Ausgabedatei!"
         ? QUERY TO FILE dat$
         IF opt% = 4 THEN 
           msg$ = "öbergabe der Daten an die Excel-Datei!"
           SET STATUS msg$
           CALL Server("MESSAGE",msg$)
           REM EXPORT FILE dat$ TO dateiname1$ USING LABELS 
           Superbase.Converters.SBF.SourceFormat = "Superbase"
           Superbase.Converters.SBF.SourceFile = "TEMPFILE"
           Superbase.Converters.SBF.Descending = 0
           Superbase.Converters.SBF.Merge = 0
           Superbase.Converters.SBF.LogErrors = 0
           Superbase.Converters.SBF.MultiResponse = 0
           Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
           Superbase.Converters.XLS.DestFile = dateiname1$
           Superbase.Converters.XLS.StartRow = 2
           Superbase.Converters.XLS.StartCol = 1
           Superbase.Converters.XLS.EndRow = - 1
           Superbase.Converters.XLS.EndCol = - 1
           Superbase.Converters.XLS.UseLabels = - 1
           Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
         END IF 
         IF opt% = 5 THEN 
           msg$ = "öbergabe der Daten an die dBASE III/IV-Datei!"
           SET STATUS msg$
           CALL Server("MESSAGE",msg$)
           REM EXPORT FILE dat$ TO dateiname2$ USING "3"
           Superbase.Converters.SBF.SourceFormat = "Superbase"
           Superbase.Converters.SBF.SourceFile = "TEMPFILE"
           Superbase.Converters.SBF.Descending = 0
           Superbase.Converters.SBF.Merge = 0
           Superbase.Converters.SBF.LogErrors = 0
           Superbase.Converters.SBF.MultiResponse = 0
           Superbase.Converters.DBF.DestFormat = "dBase III+ / IV"
           Superbase.Converters.DBF.DestFile = dateiname2$
           Superbase.Converters.DBF.Convert(Superbase.Converters.SBF)
         END IF 
         CALL Server("UNLOADMESSAGE","")
       END IF 
       IF OPEN ("TEMPFILE") THEN CLOSE FILE "TEMPFILE"
       dat$ = "tempfile"
       IF EXISTS (dat$ + ".sbf") THEN DELETE dat$ + ".*"
     END SELECT 
     SET STATUS "Bereit"
     MOUSE ON 
   ELSE 
     ok% = 0
   END IF 
   GOTO ErrBericht1 
 
ErrBericht: 
 ok% = 0
 CALL Fehler("Bei der Erstellung des Berichtes ist ein Fehler aufgetreten!","PrÅfen Sie, ob sie Felder mit gleichem Namen exportieren, wenn ja benennen Sie diese Åber den Button Eigenschaften um!")
 ON ERROR GOTO ErrorHandler
ErrBericht1: 
 WEND 
 ON ERROR GOTO ErrorHandler
 REM CALL Server("UNLOADMESSAGE","")
 CALL DFile(2,"supervis" + _fpw$)
 MOUSE ON 
 DIRECTORY pfad1$
 SET STATUS "Bereit"
 END SUB 
 
  
SUB FClose(Datei$)
 IF OPEN (datei$) THEN CLOSE FILE datei$
 END SUB 
 
 
 
 ' QBE
 ' ====================================================================
 
SUB BMQBE()
 CALL DFile(2,"OFFICE\FAX" + _fpw$)
 CALL DFile(2,"OFFICE\mail" + _fpw$)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CLEAR ERRNO 
 IF FN sys(4) = 3 OR FN sys(4) = 2 THEN 
   CALL Fehler("Diese Funktion steht innerhalb des","RUNTIME-Systems nicht zur VerfÅgung!")
 ELSE 
   EDIT QBE QUERY 
   IF ERRNO <> 11 THEN 
     ON ERROR GOTO ErrQBE
     ? QBE QUERY TO ASK 
ErrQBE: 
     ON ERROR GOTO ErrorHandler
   END IF 
 END IF 
 END SUB 
  
 
 ' Aufruf externer Anwendungen
 ' ====================================================================
 
SUB ADDON()
 Anwendung$ = ReadINI$("AddOn", LTRIM$ ( STR$ (addon2%,"99")))
 StartUp$ = ReadINI$("AddOnProgs",Anwendung$)
 IF UCASE$ ( RIGHT$ (startup$,3)) LIKE "SB*" THEN 
   cdir$ = DIRECTORY 
   DIRECTORY _netpath$ + "REPORT"
   IF NOT PROGRAMFILE (startup$) THEN LOAD + startup$, NEW 
   startup$ = UCASE$ ( FN name(startup$))
   startup1$ = startup$
   startup$ = LEFT$ (startup$, LEN (startup$) - 4) + "()"
   MOUSE OFF 
   CALL DFile(2,"OFFICE\adressen" + _fpw$)
   CALL DFile(2,"OFFICE\akquise" + _fpw$)
   CALL DFile(2,"OFFICE\aktionen" + _fpw$)
   REM ******CALL DFile(2,"OFFICE\dokgroup" + _fpw$)
   CALL DFile(2,"OFFICE\dokument" + _fpw$)
   CALL DFile(2,"OFFICE\fax" + _fpw$)
   CALL DFile(2,"OFFICE\keywords" + _fpw$)
   CALL DFile(2,"OFFICE\mail" + _fpw$)
   CALL DFile(2,"OFFICE\notiz" + _fpw$)
   CALL DFile(2,"OFFICE\sernum" + _fpw$)
   IF _projekt$ LIKE "FACTURA" OR _projekt$ LIKE "BUSINESS" THEN 
     CALL DFile(3,"abzugang" + _fpw$)
     CALL DFile(3,"artikel" + _fpw$)
     CALL DFile(3,"floskel" + _fpw$)
     CALL DFile(3,"gruppen" + _fpw$)
     CALL DFile(3,"kombi" + _fpw$)
     CALL DFile(3,"master" + _fpw$)
     CALL DFile(3,"schein" + _fpw$)
     CALL DFile(3,"ARTPROV" + _fpw$)
     CALL DFile(3,"LIEFRUCK" + _fpw$)
     CALL DFile(3,"UMSATZ" + _fpw$)
     CALL DFile(3,"VERTRETE" + _fpw$)
     CALL DFile(3,"PROVISIO" + _fpw$)
     IF DEFA$ = "MEGA" THEN 
       CALL DFile(3,"KSATZ" + _fpw$)
       CALL DFile(3,"SSATZ" + _fpw$)
     END IF 
   END IF 
   IF _projekt$ LIKE "PROVIS" THEN 
     CALL DFile(3,"buchung" + _fpw$)
     CALL DFile(3,"geadr" + _fpw$)
     CALL DFile(3,"gekond" + _fpw$)
     CALL DFile(3,"gekondm" + _fpw$)
     CALL DFile(3,"kvertrag" + _fpw$)
     CALL DFile(3,"maadr" + _fpw$)
     CALL DFile(3,"protokol" + _fpw$)
     CALL DFile(3,"schaden" + _fpw$)
     CALL DFile(3,"sparten" + _fpw$)
     CALL DFile(3,"zeingang" + _fpw$)
   END IF 
   IF _projekt$ LIKE "IMMAK" THEN 
     CALL DFile(3,"anfrage" + _fpw$)
     CALL DFile(3,"gruppen" + _fpw$)
     CALL DFile(3,"immogrup" + _fpw$)
     CALL DFile(3,"ob" + _fpw$)
     CALL DFile(3,"objekte" + _fpw$)
   END IF 
   ON ERROR GOTO Endeproz
   EXECUTE "call " + startup$
 
   CLOSE PROGRAMFILE startup1$
   SET STATUS "HauptmenÅ"
   MOUSE ON 
   DIRECTORY cdir$
 ELSE 
   CALL StartUp$
 END IF 
Endeproz: 
 END SUB 
 
 
 '      *************************
 '      ** Formular "AKTIONEN" **
 '      *************************
 '
  
SUB AKTIONEN()
 IF disabled%("AKTIONEN") THEN END SUB 
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 MOUSE OFF 
 _formend% = 0
 SET STATUS "Bereit"
 AKsub% = 0
 WHILE _formend% = 0
   AKsub% = 0
   IF FORM <> "AKTIONEN" THEN 
     SET HEADING title$ + " - Aktionen"
     OPEN FORM GOFFForm$ + "AKTIONEN"
     SET f = Superbase.Form
     SET STATUS "Aktionen"
     CALL MNAKTIONEN()
     CALL AKIntro()
     SET DISPLAY ON 
   END IF 
   MENU ON 
   MOUSE ON 
   FILE "aktionen"
   SET STATUS "Bereit"
   GAppName$ = _netpath$ + "DOCP\aktionen.pdf"
   CALL AKUpdate()
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1

   SELECT CASE AKsub%
   CASE 1
     REM -- Auflistung aller Termine
     CALL AKTermine()
   CASE 2
     REM -- Auflistung aller Kunden
     CALL AKKunden()
   CASE 3
     REM -- alle Termine als erledigt kennzeichnen
   CASE 4
     REM -- allgemeine Auswertung
   CASE 5
     REM -- alle Dokumente auflisten
   CASE 6
     CALL AKQUISE(3)
   CASE 99
     SELECT CASE PAGE 
     CASE 1
       MENU OFF 
       CALL ButDesabled()
       MOUSE ON 
       GAktion$ = Bezeichnung.aktionen
       ENTER Bezeichnung.aktionen,0
       CALL ButEnabled()
       MENU ON 
     END SELECT 
   END SELECT 
 WEND 
 cuak% = 0
 IF FileChanged%("aktionen") = 1 THEN CALL FStore("aktionen")
 _formend% = 0
 END SUB 
  
 
 ' Aktionen-Intro
 ' ======================================================================
 
SUB AKIntro()
 MOUSE OFF 
 FILE "aktionen"
 INDEX Bezeichnung.aktionen
 IF cuak% <> 0 THEN 
   SELECT KEY cuak% FILE "aktionen" INDEX codeak.aktionen
   SET INDEX Bezeichnung.aktionen
 ELSE 
   SELECT FIRST 
 END IF 
 FORM 
 MOUSE ON 
 END SUB 
 
 
 ' AKTIONEN Formular updaten
 ' ======================================================================
 
SUB AKUpdate()
 _cuak% = CodeAK.AKTIONEN
 SET INDEX Bezeichnung.AKTIONEN
 INDEX Bezeichnung.AKTIONEN
 IF LEN (MemberOf.AKTIONEN) <= 6 THEN 
   akvorg$ = "<keine Zuordnung>"
 ELSE 
   scode% = VAL ( MID$ (MemberOf.AKTIONEN, LEN (MemberOf.AKTIONEN) - 11,6))
   SELECT KEY scode% FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
   akvorg$ = Bezeichnung.AKTIONEN
 END IF 
 SELECT KEY _cuak% FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
 FORM 
 END SUB 
 
 ' Aktion neu
 ' ======================================================================
 
SUB AKNeu()
 IF disabled%("AKNEU") THEN END SUB 
 FILE "aktionen"
 BLANK 
 SET STATUS "Datensatz neu angelegt..."
 CodeAK.aktionen = SER ("aktionen",1)
 AKsub% = 99
 FORM 
 END SUB 
 
 
 ' nÑchste Aktion
 ' ======================================================================
 
SUB AKNext()
 FILE "aktionen"
 SET INDEX Bezeichnung.aktionen
 INDEX Bezeichnung.aktionen
 CALL PSelectNext()
 FORM 
 END SUB 
 
  
 ' FORM "AKTIONEN" - Aktion auswÑhlen
 ' ======================================================================
 
SUB AKVorg()
 _cuak% = CodeAK.AKTIONEN
 a% = AKSelect%(MemberOf.AKTIONEN)
 IF a% <> 0 THEN 
   MOUSE OFF 
   SELECT KEY a% FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
   MemberOf$ = MemberOf.AKTIONEN
   SELECT KEY _cuak% LOCK FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
   MemberOf.AKTIONEN = MemberOf$ + STR$ (CodeAK.AKTIONEN,"000000")
   CALL FStore("AKTIONEN")
   CALL WriteConfig("OFFICE","UpdAkquise","TRUE")
   CALL AKAQUpd()
 END IF 
 SELECT KEY _cuak% FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
 FORM 
 MOUSE ON 
 END SUB 
 
 ' Aufforderung zum Update der Akquisedatei
 ' ======================================================================
 
SUB AKAQUpd()
 CREATE DIALOG "AKINFO",0,0,218,139,title$,"MS Sans Serif",8
 ADD DIALOG "AKINFO",9,5,6,24,22,1
 ADD DIALOG "AKINFO",5,34,8,174,20,0,"Die énderung der Struktur der Aktionsgruppen erfordert eine Reorganisation der Termindatei."
 ADD DIALOG "AKINFO",5,33,30,173,24,0,"Sie kînnen die Reorganisation entweder sofort oder erst nach Abschlu· aller énderungen der Aktionsgruppen durchfÅhren."
 ADD DIALOG "AKINFO",5,34,59,172,18,0,"Der Zugriff auf die Terminverwaltung ist erst nach Abschlu· der Reorganisation wieder mîglich."
 ADD DIALOG "AKINFO",5,34,86,173,13,0,"Wann wollen Sie die Reorganisation durchfÅhren?"
 ADD DIALOG "AKINFO",1,116,112,55,15,0,"s&pÑter",0,0
 ADD DIALOG "AKINFO",1,54,112,52,15,1,"&sofort",1,1
 DIALOG "AKINFO",req%
 REMOVE DIALOG "AKINFO"
 IF req% = 1 THEN CALL AQFileUpdate()
 END SUB 
 
 
 ' Akquise-Datei nach énderung von AKTIONEN.SBF anpassen
 ' ======================================================================
 
SUB AQFileUpdate()
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 stime% = NOW 
 MOUSE OFF 
 FILE GAkquiDat$
 INDEX CodeAQ.GAkquiDat$
 SELECT FIRST LOCK 
 fmax% = RECCOUNT (GAkquiDat$)
 cp% = 0
 lp% = 0
 cr% = 0
 WHILE NOT EOF (GAkquiDat$)
   cr% = cr% + 1
   cp% = INT (100 / fmax% * cr%)
   IF lp% <> cp% THEN 
     lp% = cp%
     SET STATUS "Verarbeitung: " + LTRIM$ ( STR$ (lp%,"9999")) + "%"
   END IF 
   SELECT KEY CodeAK.GAkquiDat$ FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
   MemberOf.GAkquiDat$ = MemberOf.AKTIONEN
   Workstation.GAkquiDat$ = Workstation%
   QWoNo.GAkquiDat$ = STR$ (Workstation%,"000000") + STR$ (codeAQ.GAkquiDat$,"000000")
   RecStatus.GAkquiDat$ = "c"
   STORE FILE GAkquiDat$
   UNLOCK CURRENT FILE GAkquiDat$
   SELECT NEXT LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
 WEND 
 SET STATUS "Bereit"
 ftime% = NOW 
 REQUEST "Start: " + TIME$ (stime%,"hh:mm:ss") + ", Ende: " + TIME$ (ftime%,"hh:mm:ss") + ", Dauer: " + TIME$ (ftime% - stime%,"hh:mm:ss"),"",100
 CALL WriteConfig("OFFICE","UpdAkquise","FALSE")
 MOUSE ON 
 END SUB 
 
 
 ' Aktion auswÑhlen
 ' ======================================================================
  
FUNCTION AKSelect%(MemberOf$)
 _MemberOf$ = MemberOf$
 cfile$ = FILE 
 FILE "AKTIONEN"
 _cuak% = CodeAK.AKTIONEN
 cindex$ = INDEX 
 DIM Liste$( RECCOUNT ("AKTIONEN"))
 ok% = 0
 WHILE ok% = 0
   INDEX MemberOf

   SELECT FIRST 
   IF _MemberOf$ <> "" THEN 
     Liste$(0) = ".."
     a% = 1
   ELSE 
     a% = 0
   END IF 
   msg$ = "Bitte wÑhlen Sie eine Aktion aus."
   IF _MemberOf$ = "" THEN 
     _MemberOf$ = "*"
     msg$ = CHR$ (13) + msg$
     butofs% = 64
   ELSE 
     msg$ = msg$ + CHR$ (13) + "Um weitere Åbergeordnete Aktionen einzublenden, drÅcken Sie bitte die SchaltflÑche " + CHR$ (34) + "Obergruppen" + CHR$ (34) + "."
     butofs% = 92
   END IF 
   WHILE NOT EOF ("AKTIONEN")
     IF MemberOf.AKTIONEN LIKE _MemberOf$ + "*" THEN 
       IF LEN (_MemberOf$) < 6 THEN 
         space% = LEN (MemberOf) - 6
       ELSE 
         space% = LEN (MemberOf) - LEN (_memberOf$)
       END IF 
       IF noAnzeige.aktionen LIKE "J" THEN 
       ELSE 
         Liste$(a%) = SPACE$ (space%) + Bezeichnung.aktionen + SPACE$ (150) + STR$ (CodeAK.aktionen,"000000")
         a% = a% + 1
       END IF 
     END IF 
     SELECT NEXT 
   WEND 
   CREATE DIALOG "TERLISTE",0,0,323,314,title$,"MS Sans Serif",8
   ADD DIALOG "TERLISTE",4,0,0,319,190,0,""
   ADD DIALOG "TERLISTE",9,8,9,22,22,2
   ADD DIALOG "TERLISTE",5,39,9,274,26,128,msg$
   ADD DIALOG "TERLISTE",7,5,41,308,237,0,2,Liste$,Auswahl$,Liste$(0)
   ADD DIALOG "TERLISTE",1,butofs% + 58,295,55,15,1,"&OK",1,1
   ADD DIALOG "TERLISTE",1,butofs% + 116,295,55,15,0,"&Abbrechen",0,0
   IF _MemberOf$ <> "*" THEN ADD DIALOG "TERLISTE",1,butofs%,295,55,15,0,"&Obergruppen",2,1
   DIALOG "TERLISTE",req%
   REMOVE DIALOG "TERLISTE"
   IF req% > 0 THEN 
     IF Auswahl$(0) = ".." OR req% = 2 THEN 
       _MemberOf$ = LEFT$ (_MemberOf$, LEN (_MemberOf$) - 6)
     ELSE 
       AKSelect% = VAL ( RIGHT$ (Auswahl$(0),6))
       ok% = 1
     END IF 
   ELSE 
     ok% = 1
     AKSelect% = 0
   END IF 
 WEND 
 SELECT KEY _cuak% FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
 INDEX cindex$$
 FILE cfile$
 END FUNCTION 
 
 
FUNCTION AKSelectC%(MemberOf$)
 _MemberOf$ = MemberOf$
 cfile$ = FILE 
 FILE "AKTIONEN"
 _cuak% = CodeAK.AKTIONEN
 cindex$ = INDEX 
 INDEX Bezeichnung.aktionen
 SELECT FIRST 
 DIM Liste$( RECCOUNT ("AKTIONEN"))
   WHILE NOT EOF ("AKTIONEN")
       IF noAnzeige.aktionen LIKE "J" THEN 
       ELSE 
         Liste$(a%) = SPACE$ (space%) + Bezeichnung.aktionen + SPACE$ (150) + STR$ (CodeAK.aktionen,"000000")
         a% = a% + 1
       END IF 
     SELECT NEXT 
   WEND 
   CREATE DIALOG "TERLISTE",0,0,323,314,title$,"MS Sans Serif",8
   ADD DIALOG "TERLISTE",4,0,0,319,290,0,"Aktionsauswahl"
   ADD DIALOG "TERLISTE",9,8,9,22,22,2
   ADD DIALOG "TERLISTE",5,39,9,274,26,128,msg$
   ADD DIALOG "TERLISTE",7,5,41,308,237,0,2,Liste$,Auswahl$,Liste$(0)
   ADD DIALOG "TERLISTE",1,98,295,55,15,1,"&OK",1,1
   ADD DIALOG "TERLISTE",1,156,295,55,15,0,"&Abbrechen",0,0
   REM IF _MemberOf$ <> "*" THEN ADD DIALOG "TERLISTE",1,butofs%,295,55,15,0,"&Obergruppen",2,1
   DIALOG "TERLISTE",req%
   REMOVE DIALOG "TERLISTE"
   IF req% > 0 THEN 
       AKSelectC% = VAL ( RIGHT$ (Auswahl$(0),6))
       ok% = 1
   ELSE 
     ok% = 1
     AKSelectC% = 0
   END IF 
 SELECT FIRST FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
 SELECT KEY _cuak% FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
 INDEX cindex$$
 FILE cfile$
 END FUNCTION 
 
 
 
 ' Termine einer Aktion auflisten
 ' ======================================================================
 ' 22.09.94    - angepa·t an MemberOf-Strukturen
 
SUB AKTermine()
 cuak% = CodeAK.aktionen
 cMember$ = MemberOf.AKTIONEN
 REQUEST "Sollen die Untergruppen der aktuellen Aktion auch durchsucht werden?","",130,opt1%
 IF cuak% <> 1 THEN 
   MOUSE OFF 
   IF RECCOUNT (GAkquiDat$) < 23000 THEN 
     REDIM Termine$( RECCOUNT (GAkquiDat$))
   ELSE 
     REDIM Termine$(23000)
   END IF 
   REM FOR a% = 0 TO RECCOUNT (GAkquiDat$):Termine$(a%) = "":NEXT a%
   fMember$ = cMember$
   caption$ = "Terminauswahl Aktion: " + Bezeichnung.AKTIONEN
   IF opt1% = 1 THEN 
     fMember$ = cMember$ + "*"
     caption$ = caption$ + " und Unteraktionen"
   END IF 
   FILE GAkquiDat$
   INDEX MemberOf.GAkquiDat$
   SET STATUS "Setze Filter..."
   z$ = "SELECT WHERE MemberOf.GAkquiDat$ LIKE fMember$"
   EXECUTE z$
   INDEX Termin.GAkquiDat$
   SELECT FIRST 
   tfound% = 0
   SET STATUS "Durchsuche Termindatei..."
   WHILE NOT EOF (GAkquiDat$)
     Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + ";  " + LEFT$ ( TRIM$ (notiz.GAkquiDat$),50) + SPACE$ (120) + STR$ (CodeAQ.GAkquiDat$,"000000")
     tfound% = tfound% + 1
     SELECT NEXT FILE GAkquiDat$ INDEX Termin.GAkquiDat$
   WEND 
   Termine$(tfound%) = ""
   IF tfound% <> 0 THEN 
     CREATE DIALOG "TERLISTE",0,0,340,197,title$,"MS Sans Serif",8
     ADD DIALOG "TERLISTE",7,5,8,328,161,0,2,Termine$,Auswahl$,Termine$(0)
     ADD DIALOG "TERLISTE",1,114,174,56,16,1,"&OK",1,1
     ADD DIALOG "TERLISTE",1,174,174,56,16,0,"&Abbrechen",0,0
     SET STATUS "Bitte wÑhlen Sie einen Termin aus."
     DIALOG "TERLISTE",req%
     REMOVE DIALOG "TERLISTE"
     IF req% = 1 THEN 
       _cuaq% = VAL ( RIGHT$ (Auswahl$(0),6))
       SELECT KEY _cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
       cuaq% = _cuaq%
       cuak% = CodeAK.GAkquiDat$
       CALL AKQUISE(3)
       SELECT WHERE FILE GAkquiDat$
       FILE "aktionen"
     END IF 
   ELSE 
     CALL Fehler("Es wurden keine Termine gefunden!","")
   END IF 
 ELSE 
   CALL Fehler("Anzeige fÅr Termine des allgemeinen Terminkalenders nicht mîglich!","")
 END IF 
 END SUB 
 
 
 ' Kunden einer Aktion auflisten
 ' ======================================================================
 
SUB AKKunden()
 ON ERROR GOTO ErrorHandler
 IF disabled%("AKKUNDEN") THEN END SUB 
 MOUSE OFF 
 cdir$ = DIRECTORY 
 DIRECTORY _netpath$ + "OFFICE"
 cuak% = CodeAK.aktionen
 IF cuak% <> 1 THEN 
   CALL ORep("AKLIST")
   BEFORE REPORT 
     SET REPORT PAGE "H_REPORT"
     OUTPUT REPORT PAGE 
   END REPORT 
   HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
   END HEADING 
   FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
   END FOOTING 
   AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
   END SELECT 
   SET QUERY OFF 
   SET QUERY LOCK OFF 
   ON ERROR GOTO ErrAKKUND
   SELECT ;
     WHERE CodeAK.AKTIONEN = CodeAK.GAkquiDat$ AND CodeKU.GAkquiDat$ = CodeKU.ADRESSEN AND CodeAK.GAkquiDat$ = cuak%
     ORDER Nachname.adressen,Termin.GAkquiDat$
     TO ASK 
    END SELECT 
ErrAKKUND: 
   ON ERROR GOTO ErrorHandler
   MOUSE ON 
 ELSE 
   CALL Fehler("Ausgabe fÅr aktuelle Aktion nicht mîglich","")
 END IF 
 DIRECTORY cdir$
 END SUB 
 
 
 ' vorherige Aktion
 ' ======================================================================
 
SUB AKPrev()
 FILE "aktionen"
 SET INDEX Bezeichnung.aktionen
 INDEX Bezeichnung.aktionen
 CALL PSelectPrev()
 FORM 
 END SUB 
 
 
 ' Aktion suchen
 ' ======================================================================
 
SUB AKSuchen()
 cuak% = CodeAK.aktionen
 cuak$ = STR$ (CodeAK.aktionen,"000000")
 IF GCodieADR$ LIKE "TRUE" THEN 
   _cuak% = AKSelectC%(cuak$)
 ELSE 
   _cuak% = AKSelect%(MemberOf.AKTIONEN)
 END IF 
 IF _cuak% <> 0 THEN cuak% = _cuak%
 SELECT KEY cuak% FILE "AKTIONEN" INDEX CodeAK.aktionen
 SET INDEX Bezeichnung.aktionen
 INDEX Bezeichnung.aktionen
 FORM 
 END SUB 

 
 ' Aktion lîschen
 ' ======================================================================
 
SUB AKLoeschen()
 cuak% = CodeAK.AKTIONEN
 REQUEST "Aktion wirklich lîschen?","",135,req%
 IF req% = 1 THEN 
   SELECT KEY cuak% LOCK FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
   SELECT REMOVE 
   MOUSE OFF 
   SET STATUS "Termine der Aktion werden gelîscht..."
   REMOVE FROM FILE GAkquiDat$ WHERE CodeAK.GAkquiDat$ = cuak%
   REM SELECT REMOVE 
   SELECT NEXT 
 END IF 
 SET STATUS "Bereit"
 MOUSE ON 
 FORM 
 END SUB 
 
 
 '      ************************
 '      ** Formular GAkquiDat$ **
 '      ************************
 '
 
SUB AKQUISE1()
 CALL AKQUISE(1)
 END SUB 
 
SUB AKQUISE2()
 CALL AKQUISE(2)
 END SUB 
 
SUB AKQUISE3()
 CALL AKQUISE(3)
 END SUB 
 
SUB AKQUISE4()
 CALL AKQUISE(4)
 END SUB 
 
FUNCTION AQFileOK%()
 aqok$ = ReadConfig$("OFFICE","UpdAkquise")
 IF aqok$ LIKE "TRUE" THEN 
   CALL AKAQUpd()
 END IF 
 aqok$ = ReadConfig$("OFFICE","UpdAkquise")
 IF aqok$ LIKE "TRUE" THEN 
   AQFileOK% = 0
 ELSE 
   AQFileOK% = - 1
 END IF 
 END FUNCTION 
 
 
 ' TerminbezÅge:
 '      1=Mitarbeiter
 '      2=Kunde
 '      3=Aktion
 '      4=Aktion/Mitarbeiter
 
 
SUB AKQUISE(bez%)
 IF disabled%(GAkquiDat$) THEN END SUB 
 IF NOT AQFileOK%() THEN END SUB 
 IF title$ LIKE "*FACTURA*" OR title$ LIKE "*price*" THEN 
   CALL Fehler("Funktion wird in dieser Programm-Version nicht unterstÅtzt!","")
   END SUB 
 END IF 
 IF NOT OPEN ("adressen") THEN CALL DFile(2,"OFFICE\adressen" + _fpw$)
 IF NOT OPEN ("adrterm") THEN CALL DFile(2,"OFFICE\adrterm" + _fpw$)
 IF NOT OPEN ("dokument") THEN CALL DFile(2,"OFFICE\dokument" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 IF NOT OPEN (GAkquiDat$) THEN CALL DFile(2,"OFFICE\akquise" + _fpw$)
 IF NOT OPEN ("akquiseb") THEN CALL DFile(2,"OFFICE\akquiseb" + _fpw$)
 IF NOT OPEN ("aktionen") THEN CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 IF NOT OPEN ("telefon") THEN CALL DFile(2,"OFFICE\telefon" + _fpw$)
 IF NOT OPEN ("connect") THEN CALL DFile(2,"OFFICE\connect" + _fpw$)
 _continue% = 1
 bezug% = bez%
 notfound% = 0
 FILE GAkquiDat$
 IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
 
  
 REM ** genereller Check, ob Åberhaupt EintrÑge vorhanden sind **
 SELECT WHERE 
 SELECT CASE bezug%
 CASE 1
   vbezug$ = "&Mitarbeiter"
   _vcodema% = vcodema%
   SELECT KEY _vcodema% FILE GAkquiDat$ INDEX CodeMA.GAkquiDat$
   IF codema.GAkquiDat$ <> _vcodema% THEN notfound% = - 1
 CASE 2
   knr% = codeku.adressen
   IF NEW ("adressen") OR MOD ("adressen") THEN CALL FStore("adressen")
   vbezug$ = "Adre&sse"
   _vcodema% = GMAcodema%
   qui$ = STR$ (knr%,"000000") + "N"
   
   REM SELECT KEY knr% FILE GAkquiDat$ INDEX CodeKU.GAkquiDat$
   IF GCodeaq% = 0 THEN 
     SELECT FIRST FILE GAkquiDat$ INDEX QuickKUDat.GAkquiDat$
     SELECT KEY qui$ FILE GAkquiDat$ INDEX QuickKUDat.GAkquiDat$
   ELSE 
     SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
     SELECT KEY gcodeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
   END IF 
   IF codeku.GAkquiDat$ <> knr% THEN 
     qui$ = STR$ (knr%,"000000")
     SELECT FIRST FILE GAkquiDat$ INDEX QuickKUDat.GAkquiDat$
     SELECT KEY qui$ FILE GAkquiDat$ INDEX QuickKUDat.GAkquiDat$
     IF codeku.GAkquiDat$ <> knr% THEN 
       SELECT FIRST FILE GAkquiDat$ INDEX codeku.GAkquiDat$
       SELECT KEY knr% FILE GAkquiDat$ INDEX codeku.GAkquiDat$
     END IF 
   END IF 
   IF codeku.GAkquiDat$ <> knr% THEN 
     notfound% = - 1
   END IF 
 
 CASE 3
   cuak% = codeak.aktionen
   IF NEW ("aktionen") OR MOD ("aktionen") THEN CALL FStore("aktionen")
   vbezug$ = "Aktion&en"
   REM _vcodema% = vcodema%
   SELECT KEY cuak% FILE GAkquiDat$ INDEX CodeAK.GAkquiDat$
   IF codeak.GAkquiDat$ <> cuak% THEN notfound% = - 1
 
 CASE 4
   IF termin% = 1 THEN 
     cuak% = 1
     _vcodema% = vcodema%
     cuakma$ = "000001" + STR$ (vcodema%,"000000")
     SELECT KEY cuakma$ FILE GAkquiDat$ INDEX CodeAKMA.GAkquiDat$
     termin% = 0
     IF codeakma.GAkquiDat$ <> cuakma$ THEN notfound% = - 1
 
   ELSE 
     cuakma$ = codeakma.GAkquiDat$
     IF NEW ("aktionen") OR MOD ("aktionen") THEN CALL FStore("aktionen")
     IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
     IF NEW ("adressen") OR MOD ("adressen") THEN CALL FStore("adressen")
     SELECT KEY cuakma$ FILE GAkquiDat$ INDEX CodeAKMA.GAkquiDat$
     IF codeakma.GAkquiDat$ <> cuakma$ THEN notfound% = - 1
   END IF 
   vbezug$ = "&Mitarbeiter+Aktion"
   _vcodema% = vcodema%
 END SELECT 
 akquiseneu$ = "n"
 IF notfound% = - 1 THEN 
   IF bezug% = 4 THEN 
     CALL Fehler("Es wurden fÅr diesen Mitarbeiter zu dieser Aktion noch keine Termine erfa·t !","Erfassen Sie die Termine Åber Adressen oder Mailing !")
   ELSE 
     IF bezug% = 3 THEN 
       CALL Fehler("Es wurden fÅr diese Aktion noch keine Termine erfa·t !","Erfassen Sie die Termine Åber Adressen oder Mailing !")
     ELSE 
       REM 170398
       REM REQUEST "Es wurden noch keine Termine erfa·t.","Neuen Termin erfassen ?",130,req%
       req% = 1
       IF codeku.GAkquiDat$ <> knr% THEN 
         akquiseneu$ = "j"
       END IF 
     END IF 
     IF req% = 0 THEN _continue% = 0
   END IF 
 END IF 
 IF _continue% <> 0 THEN 
   cudat$ = DATE$ ( TODAY ,"0d.mm.yyyy")
   datanz$ = DATE$ ( TODAY ,"0d.mm.yyyy")
   SET STATUS "Bereit"
   _formend% = 0
   akmaske$ = GAkquiDat$
   akmaske$ = aquimask.GAkquiDat$
   IF akmaske$ = "" THEN akmaske$ = "AKQUIPRJ"
   

   REM IF GcodieADR$ LIKE "TRUE" THEN akmaske$ = "AKQUIPRJ"
   WHILE _formend% = 0
     AQsub% = 0
     IF UCASE$ ( FORM ) <> akmaske$ THEN 
       SET HEADING title$ + " - Termine"
       IF akmaske$ = "" THEN 
         akmaske$ = "AKQUIPRJ"
       END IF 
       OPEN FORM GOFFForm$ + akmaske$
       SET f = Superbase.Form
       akmaskeold$ = akmaske$
       SELECT CASE bezug%
       CASE 1
         SELECT FIRST FILE GAkquiDat$ INDEX CodeMA.GAkquiDat$
         SELECT FORM KEY _vcodema% FILE GAkquiDat$ INDEX CodeMA.GAkquiDat$
       CASE 2
         REM SELECT FORM KEY knr% FILE GAkquiDat$ INDEX CodeKU.GAkquiDat$
         qui$ = STR$ (knr%,"000000") + "N"
         REM SELECT KEY knr% FILE GAkquiDat$ INDEX CodeKU.GAkquiDat$
         IF gcodeaq% = 0 THEN 
           SELECT FIRST FILE GAkquiDat$ INDEX QuickKUDat.GAkquiDat$
           SELECT FORM KEY qui$ FILE GAkquiDat$ INDEX QuickKUDat.GAkquiDat$
         ELSE 
           SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           SELECT FORM KEY gcodeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         END IF 
         IF codeku.GAkquiDat$ <> knr% THEN 
           qui$ = STR$ (knr%,"000000")
           SELECT FIRST FILE GAkquiDat$ INDEX QuickKUDat.GAkquiDat$
           SELECT FORM KEY qui$ FILE GAkquiDat$ INDEX QuickKUDat.GAkquiDat$
           IF codeku.GAkquiDat$ <> knr% THEN 
             SELECT FIRST FILE GAkquiDat$ INDEX codeku.GAkquiDat$
             SELECT FORM KEY knr% FILE GAkquiDat$ INDEX codeku.GAkquiDat$
           END IF 
         END IF 
       CASE 3
         SELECT FIRST FILE GAkquiDat$ INDEX CodeAK.GAkquiDat$
         SELECT FORM KEY cuak% FILE GAkquiDat$ INDEX CodeAK.GAkquiDat$
       CASE 4
         IF termin% = 1 THEN 
           SELECT FIRST FILE GAkquiDat$ INDEX CodeAKMA.GAkquiDat$
           SELECT FORM KEY cuakma$ FILE GAkquiDat$ INDEX CodeAKMA.GAkquiDat$
         ELSE 
           SELECT FIRST FILE GAkquiDat$ INDEX CodeAKMA.GAkquiDat$
           SELECT FORM KEY cuakma$ FILE GAkquiDat$ INDEX CodeAKMA.GAkquiDat$
         END IF 
       END SELECT 
       IF aquimask.GAkquiDat$ <> "" THEN 
         IF aquimask.GAkquiDat$ <> "AKQUIPRJ" THEN 
           akmaske$ = aquimask.GAkquiDat$
           IF akmaske$ <> akmaskeold$ THEN 
             SET HEADING title$ + " - Termine"
             OPEN FORM GOFFForm$ + akmaske$
             SET f = Superbase.Form
             akmaskeold$ = akmaske$
           END IF 
         END IF 
       END IF 
       FORM 
       SET STATUS "Termine"
       CALL MNAKQUISE()
       MENU ON 
       CALL AKQUISEIntro1()
       REM CALL AKQUISEIntro()
       FORM 
       SET DISPLAY ON 
     END IF 
       ON ERROR GOTO em2305200301
       IF GEMAIL% = - 1 THEN 
         IF GEMAILJNAuto% = - 1 THEN 
           f.emailauto.visible = - 1
           f.emailauto.enabled = - 1
         ELSE 
           f.emailauto.visible = - 1
           f.emailauto.enabled = 0
         END IF 
       ELSE 
         f.emailbearb.visible = 0
         f.emailbearb.enabled = 0
       END IF 
em2305200301: 
       ON ERROR GOTO ErrorHandler 
     CALL AQButtUpdate()
     SET STATUS "Bereit"
     IF NOT NEW (GAkquiDat$) THEN 
       MENU ON 
       MOUSE ON 
       IF gvonadr% = - 1 THEN 
         f.adrmaske.enabled = 0
         f.adrmaske.visible = 0
       ELSE 
         f.adrmaske.enabled = - 1
         f.adrmaske.visible = - 1
       END IF 
         f.suchen.enabled = - 1
         f.suchen.visible = - 1
         f.abbruch.enabled = 0
         f.abbruch.visible = 0
         f.abbruch2.enabled = 0
         f.abbruch2.visible = 0
       IF _projeKt$ LIKE "PROVIS" THEN 
         f.vertrag.enabled = - 1
         f.vertrag.visible = - 1
       ELSE 
         f.vertrag.enabled = 0
         f.vertrag.visible = 0
       END IF 
       GAppName$ = _netpath$ + "DOCP\termine.pdf"
       CALL ClearKBDBuffer()
       IF GcodeAQNeu% > 0 THEN 
         GcodeAQNeu% = 0
         ENTER termin.GAkquiDat$,0
       END IF 
       WAIT MOUSE OR KEY OR UPDATE OR MENU 
       GET k$
       SELECT CASE ASC (k$)
       CASE CrsLeft%,PgUp%
         CALL AQPrev()
       CASE CrsRight%,PgDn%
         CALL AQNext()
       END SELECT 
       IF k$ = CHR$ (27) THEN 
         IF PAGE > 1 THEN 
           FORM 1
         ELSE 
           _formend% = 1
         END IF 
       END IF 
 
     ELSE 
       AQsub% = 99
     END IF 
     SELECT CASE AQsub%
       CASE 110
           REM Dokument schÅtzen
           codedok% = codedok.dokument
           IF dokpass.dokument = "" THEN 
             SELECT FIRST FILE "Stamm"
             passw$ = DokPass.stamm
             REQUEST "Soll das Dokument jetzt geschÅtzt werden?","",135,req%
             IF req% = 1 THEN 
               SELECT FIRST FILE "Dokument" INDEX codedok.dokument
               SELECT KEY codedok% LOCK FILE "Dokument" INDEX codedok.dokument
               IF EXISTS (_netpath$ + Dateiname.dokument) THEN 
                 ON ERROR GOTO Doc501220032
                 IF RIGHT$ (Dateiname.dokument,3) LIKE "doc" OR RIGHT$ (Dateiname.dokument,3) LIKE "dot" THEN 
                   CALL open_doc(_netpath$ + Dateiname.dokument,"")
                   CALL set_password(passw$)
                   CALL close_doc( - 1)
                 END IF 
Doc501220032: 
                 ON ERROR GOTO ErrorHandler
                 DokPass.dokument = passw$
                 STORE FILE "Dokument"
               END IF 
             END IF 
           ELSE 
 
             IF NOT MNdisabled%("DOKSCHUTZAUFHEBEN") THEN 
               REQUEST "Soll der Dokumentenschutz jetzt aufgehoben werden?","",135,req%
               IF req% = 1 THEN 
                 SELECT FIRST FILE "Dokument" INDEX codedok.dokument
                 SELECT KEY codedok% LOCK FILE "Dokument" INDEX codedok.dokument
                 IF EXISTS (_netpath$ + Dateiname.dokument) THEN 
                   passw$ = DokPass.dokument
                   ON ERROR GOTO Doc501220031
                   IF RIGHT$ (Dateiname.dokument,3) LIKE "doc" OR RIGHT$ (Dateiname.dokument,3) LIKE "dot" THEN 
                     CALL open_doc(_netpath$ + Dateiname.dokument,"")
                     CALL remove_password(passw$)
                     CALL close_doc( - 1)
                   END IF 
Doc501220031: 
                   ON ERROR GOTO ErrorHandler
                   DokPass.dokument = ""
                   STORE FILE "Dokument"
                 END IF 
               END IF 
           ELSE 
             CALL Fehler("Das Dokument wurde bereits geschÅtzt","")
           END IF 
         END IF 
         mssub% = 0
         CASE 109
           REM Dokument bearbeiten
           MENU OFF 
           GDokName$ = Dokument.dokument
           GDoknovi% = novi1.dokument
           ENTER Dokument.dokument,0
           MENU ON 
         CASE 108
           codeaq% = codeaq.GAkquiDat$
           SELECT FORM KEY codeaq% FILE "DOKUMENT" INDEX CodeAQ.dokument
           FORM 4
         CASE 107
           REM Dokument scannen
           REM CALL Fehler("Dokument einscannen","")
           IF FORM LIKE "AKQUIBUG" THEN 
             GAkquiDat$ = "AKQUISEB"
           ELSE 
             GAkquiDat$ = "AKQUISE"
           END IF 
           GCodeAQ% = codeaq.GAkquiDat$
           knr% = codeku.GAkquiDat$
           codeku% = codeku.GAkquiDat$
           knr% = codeku.GAkquiDat$
           CALL ScanDok(codeku%)
           SELECT FORM KEY Gcodeaq% FILE "DOKUMENT" INDEX CodeAQ.dokument
           FORM 4
         CASE 106
           REM Dokument vom Termin abkoppeln
           IF FORM LIKE "AKQUIBUG" THEN 
             GAkquiDat$ = "AKQUISEB"
           ELSE 
             GAkquiDat$ = "AKQUISE"
           END IF 
           GCodeAQ% = codeaq.GAkquiDat$
           knr% = codeku.Adressen
           codedok% = codedok.dokument
           SELECT FIRST FILE "Dokument" INDEX Codedok.Dokument
           SELECT KEY codedok% LOCK FILE "Dokument" INDEX Codedok.Dokument
           CodeAQ.dokument = 0
           CALL QuickStore("dokument")
           CALL Fehler("Dokument wurde vom Termin entkoppelt","")
         CASE 105
           REM Dokumentenverwaltung in Akquise
           IF FORM LIKE "AKQUIBUG" THEN 
             GAkquiDat$ = "AKQUISEB"
           ELSE 
             GAkquiDat$ = "AKQUISE"
           END IF 
           GCodeAQ% = codeaq.GAkquiDat$
           knr% = codeku.Adressen
           SELECT FORM KEY Gcodeaq% FILE "DOKUMENT" INDEX CodeAQ.dokument
           FORM 4
         CASE 104
           IF FORM LIKE "AKQUIBUG" THEN 
             GAkquiDat$ = "AKQUISEB"
           ELSE 
             GAkquiDat$ = "AKQUISE"
           END IF 
           codeaq% = codeaq.GAkquiDat$
           adr% = ADRSuche%(0)
           IF adr% > 0 THEN 
             SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
             SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
             SELECT FIRST FILE "Adressen" INDEX codeku.adressen
             SELECT KEY adr% FILE "Adressen" INDEX codeku.adressen
             codeku.GAkquiDat$ = adr%
             knr% = adr%
             nachname.GAkquiDat$ = nachname.adressen
             CALL QuickStore(GAkquiDat$)
           END IF 
           SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           knr% = codeku.GAkquiDat$
           IF codedok.GAkquiDat$ > 0 THEN 
             codedok% = codedok.GAkquiDat$
             SELECT FIRST FILE "Dokument" INDEX codedok.Dokument
             SELECT KEY codedok% LOCK FILE "Dokument" INDEX codedok.Dokument
             CodeMA.dokument = codema.GAkquiDat$
             Bearbeiter.dokument = Bearbeiter.GAkquiDat$
             letzte_Bearbeit.DOKUMENT = TODAY 
             Codeku.dokument = knr%
             Link .dokument = knr%
             CALL QuickStore("Dokument")
           END IF 
           IF FORM LIKE "AKQUIBUG" THEN 
             GAkquiDat$ = "AKQUISEB"
           ELSE 
             GAkquiDat$ = "AKQUISE"
           END IF 
     CASE 99
        FILE GAkquiDat$
        GEMAILRAUS$ = EMAILRAUS.GAkquiDat$
        IF UCASE$ (ergdatuma$) = "TRUE" AND NOT ( NEW (GAkquiDat$) OR MOD (GAkquiDat$)) THEN 
          codeaq% = CodeAQ.GAkquiDat$
          SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
          SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX CodeAq.GAkquiDat$
          IF notiz.GAkquiDat$ = "" AND emailto.GAkquiDat$ <> "" THEN 
            notiz.GAkquiDat$ = "sende EMAIL: " + emailbetreff.GAkquiDat$
          ELSE 
            IF emailto.GAkquiDat$ <> "" THEN 
              notiz.GAkquiDat$ = "sende EMAIL: " + emailbetreff.GAkquiDat$
            END IF 
          END IF 
         SELECT FIRST FILE "Supervis" INDEX codema.supervis
         SELECT KEY GMACodeMA% FILE "Supervis" INDEX codema.supervis
         IF kuerzel.supervis <> "" THEN 
           na$ = " - " + kuerzel.supervis + " -  "
         ELSE 
           na$ = " - " + name.supervis + " -  "
         END IF 
          IF ergebnis.GAkquiDat$ <> "" THEN 
            ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh.mm") + na$
          ELSE 
            ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + DATE$ ( TODAY ) + " " + TIME$ ( NOW ,"hh.mm") + na$
          END IF 
          CALL QuickStore(GAkquiDat$)
        END IF 
       MOUSE ON 
       aqbearb$ = "j"
       IF PAGE = 1 THEN 
         CALL ButDesabled()
         IF _projekt$ <> "HORTUS" THEN 
           f.email.enabled = 0
           f.projekt.enabled = 0
           f.seite2.enabled = 0
           f.offenetermine.enabled = 0
           f.terminplan.enabled = 0
           f.sprache.enabled = 0
           f.brief.enabled = 0
           f.telefon.enabled = 0
           f.mitarbeiter.enabled = 0
           f.bezug.enabled = 0
           f.aktion.enabled = 0
           f.kundeninfo.enabled = 0
           f.Monat.enabled = 0
           f.Juli.enabled = 0
           f.Jahr.enabled = 0
           f.W1.enabled = 0
           f.W2.enabled = 0
           f.W3.enabled = 0
           f.W4.enabled = 0
           f.W5.enabled = 0
           f.W6.enabled = 0
           f.vertrag.enabled = 0
           f.vertrag.visible = 0
         END IF 
       END IF 
       IF PAGE = 2 THEN 
         f.bearb2.enabled = 0
         f.abbruch2.enabled = - 1
         f.abbruch2.visible = - 1
         f.kundeninfo2.enabled = 0
         f.seite1.enabled = 0
       END IF 
       IF PAGE < 3 THEN 
         IF form1$ LIKE "AKQUIPRJ" OR form1$ LIKE GAkquiDat$ THEN 
           IF UCASE$ (ergdatuma$) = "TRUE" AND notiz.GAkquiDat$ <> "" THEN 
             MENU OFF 
             ENTER ergebnis.GAkquiDat$,0
           END IF 
           MENU ON 
         ELSE 
           MENU OFF 
           ENTER datum.GAkquiDat$,0
           MENU ON 
         END IF 
       END IF 
       IF PAGE = 3 THEN 
         GEMAILRAUS$ = EMAILRAUS.GAkquiDat$
         ENTER emailto.GAkquiDat$,0
       END IF 
       aqbearb$ = "n"
       REM CALL Fehler("testakquise","")
       IF aquimask.GAkquiDat$ <> akmaskeold$ THEN 
           akmaske$ = aquimask.GAkquiDat$
             REM SET HEADING title$ + " - Termine"
             REM OPEN FORM GOFFForm$ + akmaske$
             REM SET f = Superbase.Form
             REM akmaskeold$ = akmaske$
       END IF 
       REM FORM 
 
       IF PAGE = 1 THEN 
         CALL ButEnabled()
         f.projekt.enabled = - 1
         f.seite2.enabled = - 1
         f.offenetermine.enabled = - 1
         f.terminplan.enabled = - 1
         f.sprache.enabled = - 1
         f.brief.enabled = - 1
         f.telefon.enabled = - 1
         f.mitarbeiter.enabled = - 1
         f.bezug.enabled = - 1
         f.aktion.enabled = - 1
         f.kundeninfo.enabled = - 1
         f.Monat.enabled = - 1
         f.Juli.enabled = - 1
         f.Jahr.enabled = - 1
         f.W1.enabled = - 1
         f.W2.enabled = - 1
         f.W3.enabled = - 1
         f.W4.enabled = - 1
         f.W5.enabled = - 1
         f.W6.enabled = - 1
         IF _projeKt$ LIKE "PROVIS" THEN 
           f.vertrag.enabled = - 1
           f.vertrag.visible = - 1
         ELSE 
           f.vertrag.enabled = 0
           f.vertrag.visible = 0
         END IF 
       END IF 
       IF PAGE = 2 THEN 
         f.bearb2.enabled = - 1
         f.abbruch2.enabled = 0
         f.abbruch2.visible = 0
         f.kundeninfo2.enabled = - 1
         f.seite1.enabled = - 1
       END IF 
     CASE 100
       REM VertragsÅbersicht
       SELECT KEY codeku.GAkquiDat$ FILE "Kvertrag" INDEX codeku.kvertrag
       SELECT KEY codeku.GAkquiDat$ FILE "Adressen" INDEX codeku.adressen
       CALL KVERTRAGGR()
     CASE 101
       REM TerminÅbersicht Kunde 12082003
       codeku% = codeku.GAkquiDat$
       codeaq% = codeaq.GAkquiDat$
       CALL KunTer1()
       knr% = codeku%
       GCodieruf2% = 0
       MOUSE OFF 
       SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
       SELECT KEY codeku% FILE "ADRESSEN" INDEX codeku.adressen
       IF UCASE$ ( FORM ) <> akmaske$ THEN 
         SET HEADING title$ + " - Termine"
         OPEN FORM GOFFForm$ + akmaske$
         SET f = Superbase.Form
         SELECT CASE bezug%
         CASE 1
           SELECT FORM KEY _vcodema% FILE GAkquiDat$ INDEX CodeMA.GAkquiDat$
           FORM 
         CASE 2
           SELECT FORM KEY knr% FILE GAkquiDat$ INDEX CodeKU.GAkquiDat$
           FORM 
         CASE 3
           SELECT FORM KEY cuak% FILE GAkquiDat$ INDEX CodeAK.GAkquiDat$
           FORM 
         CASE 4
           IF termin% = 1 THEN 
             SELECT FORM KEY cuakma$ FILE GAkquiDat$ INDEX CodeAKMA.GAkquiDat$
             FORM 
           ELSE 
             SELECT FORM KEY cuakma$ FILE GAkquiDat$ INDEX CodeAKMA.GAkquiDat$
             FORM 
           END IF 
         END SELECT 
         SET STATUS "Termine"
         CALL MNAKQUISE()
         MENU 6,3,1,"Liste erneut &anzeigen,F7","AQTermineO2","Suchliste erneut anzeigen"
         MENU ON 
         
         REM CALL AKQUISEIntro()
         FORM 
         SET DISPLAY ON 
       END IF 
       MOUSE OFF 
       SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       FORM 
       CALL AKQUISEIntro1()
       MOUSE ON 
     CASE 102
       REM Termin an Outlook
       codeaq% = codeaq.GAkquiDat$
       MOUSE OFF 
       CALL TerExpOutl(codeaq%,0)
       SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       FORM 
       CALL AKQUISEIntro1()
       MOUSE ON 
     CASE 103
       REM sende Werbeemail
       IF Nummer.GTeldat$ LIKE "*@*" AND GCODie% THEN 
         CALL SendEMAIL2(Nummer.GTeldat$,codeku.adressen)
         GOTO wemail210220073a
       END IF 
       IF Nummer.GTeldat$ LIKE "*ww*" OR Nummer.GTeldat$ LIKE "ww*" THEN 
         IF NOT EXISTS (GMACodeDir$ + "openurl.exe") THEN COPY _netpath$ + "\local\openurl.exe" TO GMACodeDir$ + "openurl.exe"
         IF LEFT$ (Nummer.GTeldat$,3) LIKE "www" THEN 
           nr$ = "http://" + Nummer.GTeldat$
         END IF 
         IF LEFT$ (Nummer.GTeldat$,4) LIKE "http" THEN 
           nr$ = Nummer.GTeldat$
         END IF 
         prg$ = GMACodeDir$ + "openurl.exe"
         IF EXISTS (GMACodeDir$ + "opurl.bat") THEN DELETE GMACodeDir$ + "opurl.bat"
         OPEN GMACodeDir$ + "opurl.bat" FOR APPEND 
         ? "echo OFF"
         ? prg$ + " " + nr$
         CLOSE OUTPUT 
         CALL (GMACodeDir$ + "opurl.bat"),0
       END IF 
wemail210220073a: 
     END SELECT 
     REM CALL BMCheckMail()
   WEND 
 END IF 
 cuaq% = 0
 _formend% = 0
 GCodeDok% = 0
 IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) AND CodeAQ.GAkquiDat$ <> 0 THEN CALL QuickStore (GAkquiDat$)
 END SUB 
 
 
 ' GAkquiDat$ Intro Button Termine 221098
 ' ====================================================================
 
SUB AKQUISEIntro1()
 IF NOT OPEN ("vertrete") THEN CALL DFile(3,"VERTRETE" + _fpw$)
 MOUSE OFF 
 CALL SHOWCal()
 IF akquiseneu$ = "j" THEN vbezug$ = "Adre&sse"
 REM IF akquiseneu$ <> "j" THEN CALL AKQUISEFilter()
 MOUSE OFF 
 SELECT FORM KEY knr% FILE "telefon" INDEX codeku.telefon
 SELECT CASE bezug%
 CASE 1
   IF _vcodema% <> CodeMA.GAkquiDat$ THEN CALL AQNeu()
 CASE 2
   vbezug$ = "Adre&sse"
   IF knr% <> CodeKU.GAkquiDat$ THEN 
     t% = CodeKU.GAkquiDat$
     CALL AQNeu()
   ELSE 
      REM INDEX QuickKuDatDiff
      REM SELECT FORM KEY knr% * 1000000 INDEX QuickKuDatDiff
   END IF 
 CASE 3
   IF cuak% <> 0 AND cuaq% <> 0 THEN 
     SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
   ELSE 
     IF cuak% <> 0 THEN 
       SELECT FORM KEY cuak% FILE GAkquiDat$ INDEX CodeAk.GAkquiDat$
     ELSE 
       IF CodeAK.GAkquiDat$ <> cuak% THEN CALL AQNEU()
     END IF 
   END IF 
 CASE 4
   IF cuakma$ = "" THEN 
     SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
   ELSE 
     IF CodeAKMA.GAkquiDat$ <> cuakma$ THEN CALL AQNEU()
   END IF 
 END SELECT 
 codeku% = codeku.GAkquiDat$
 SELECT FIRST FILE "adressen" INDEX codeku.adressen
 SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
 codev% = codema.adressen
 vertreter$ = ""
 IF GCodieADR$ LIKE "TRUE" OR UCASE$ (GMAUL$) <> "TRUE" THEN 
   IF codev% > 0 AND EXISTS (codev%,codema.vertrete) THEN 
     SELECT FIRST FILE "vertrete" INDEX codema.vertrete
     SELECT KEY codev% FILE "vertrete" INDEX codema.vertrete
     vertreter$ = Vorname.vertrete + " " + Nachname.vertrete
   END IF 
 ELSE 
   IF codev% > 0 AND EXISTS (codev%,codema.supervis) THEN 
     SELECT FIRST FILE "supervis" INDEX codema.supervis
     SELECT KEY codev% FILE "supervis" INDEX codema.supervis
     vertreter$ = Vorname.supervis + " " + Nachname.supervis
   END IF 
 END IF 
 FORM 
 MOUSE ON 
 END SUB 

 
SUB AKQUISEIntro()
 MOUSE OFF 
 CALL SHOWCal()
 IF akquiseneu$ = "j" THEN vbezug$ = "Adre&sse"
 IF akquiseneu$ <> "j" THEN CALL AKQUISEFilter()
 MOUSE OFF 
 SELECT FORM KEY codeku.adressen FILE "telefon" INDEX codeku.telefon
 SELECT CASE bezug%
 CASE 1
   IF _vcodema% <> CodeMA.GAkquiDat$ THEN CALL AQNeu()
 CASE 2
   IF knr% <> CodeKU.GAkquiDat$ THEN 
     CALL AQNeu()
   ELSE 
      REM INDEX QuickKuDatDiff
      REM SELECT FORM KEY knr% * 1000000 INDEX QuickKuDatDiff
   END IF 
 CASE 3
   IF cuak% <> 0 AND cuaq% <> 0 THEN 
     SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
   ELSE 
     IF cuak% <> 0 THEN 
       SELECT FORM KEY cuak% FILE GAkquiDat$ INDEX CodeAk.GAkquiDat$
     ELSE 
       IF CodeAK.GAkquiDat$ <> cuak% THEN CALL AQNEU()
     END IF 
   END IF 
 CASE 4
   IF cuakma$ = "" THEN 
     SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
   ELSE 
     IF CodeAKMA.GAkquiDat$ <> cuakma$ THEN CALL AQNEU()
   END IF 
 END SELECT 
 FORM 
 MOUSE ON 
 END SUB 
  

 
 ' Filter fÅr Termine auf Kunden/Mitarbeiter setzen
 ' ========================================================================
 
SUB AKQUISEFilter()
 MOUSE OFF 
 SET STATUS "Setze Filter fÅr Termindatei..."
 FILE GAkquiDat$
 SELECT WHERE FILE GAkquiDat$
 SELECT CASE bezug%
 CASE 0
   vbezug$ = "alle Termine"
 CASE 1
   vbezug$ = "&Mitarbeiter"
   INDEX CodeMa.GAkquiDat$
   SELECT FIRST 
   b$ = "SELECT WHERE Codema.GAkquiDat$ = _vcodema%"
   EXECUTE b$
 CASE 2
   vbezug$ = "Adre&sse"
   INDEX CodeKU.GAkquiDat$
   b$ = "SELECT WHERE CodeKU.GAkquiDat$ = knr%"
   EXECUTE b$
 CASE 3
   vbezug$ = "Aktion&en"
   INDEX CodeAK.GAkquiDat$
   b$ = "SELECT WHERE CodeAK.GAkquiDat$ = cuak%"
   EXECUTE b$
 CASE 4
   vbezug$ = "Mitarbeiter+Aktion"
   INDEX CodeAKMA.GAkquiDat$
   b$ = "SELECT WHERE CodeAKMA.GAkquiDat$ = cuakma$"
   EXECUTE b$
 END SELECT 
 EXECUTE "INDEX termin.GAkquiDat$"
 CALL PSelectLast()
 SET STATUS "Bereit"
 MOUSE ON 
 END SUB 
 
 
 ' Datensatz fÅr neuen Termin vorbereiten
 ' ========================================================================
 ' 0001 28.10.92/23.32/AB
 
SUB AQNeu()
 SET STATUS "Lege neuen Termin an..."
 SELECT WHERE FILE GAkquiDat$
 IF ( MOD (GAkquiDat$) OR NEW (GAkquiDat$)) AND notiz.GAkquiDat$ <> "" THEN CALL FStore(GAkquiDat$)
 vknr% = codeku.GAkquiDat$
 vcuak% = CodeAK.GAkquiDat$
 vcuma% = CodeMA.GAkquiDat$
 BLANK FILE GAkquiDat$
 SET STATUS "Datensatz neu angelegt..."
 codeaq% = SER (GAkquiDat$,1)
 codeaq.GAkquiDat$ = codeaq%
 aquimask.GAkquiDat$ = "AKQUIPRJ"
 IF bezug% = 2 THEN 
   CodeKU.GAkquiDat$ = knr%
 END IF 
 IF bezug% = 1 THEN 
   opt% = 1
   CREATE DIALOG "AKQNEU",0,0,134,81,title$,"MS Sans Serif",8
   ADD DIALOG "AKQNEU",9,9,6,27,22,2
   ADD DIALOG "AKQNEU",5,40,6,82,8,0,"Wie soll der neue Termin"
   ADD DIALOG "AKQNEU",5,40,16,50,8,0,"erfa·t werden?"
   ADD DIALOG "AKQNEU",3,40,30,80,10,0,"fÅr aktuelle Adresse",1,opt%
   ADD DIALOG "AKQNEU",3,40,41,61,10,0,"eigener Termin",2,opt%
   ADD DIALOG "AKQNEU",1,40,60,50,15,1,"&OK",1,1
   DIALOG "AKQNEU",req%
   REMOVE DIALOG "AKQNEU"
   IF opt% = 1 THEN 
     CodeKU.GAkquiDat$ = vknr%
   ELSE 
     CodeKU.GAkquiDat$ = 1
   END IF 
 END IF 
 IF bezug% > 2 THEN 
   CodeKU.GAkquiDat$ = vknr%
 END IF 
 IF vcuak% = 0 THEN 
   CodeAK.GAkquiDat$ = 1
 ELSE 
   REM CodeAK.GAkquiDat$ = vcuak%
   CodeAK.GAkquiDat$ = 1
 END IF 
 Aktion.GAkquiDat$ = "<<<allgemeiner Terminkalender>>>"
 CodeMA.GAkquiDat$ = _vcodema%
 Wertung.GAkquiDat$ = 0
 Sprachnotiz.GAkquiDat$ = "n"
 Datum.GAkquiDat$ = TODAY 
 Termin.GAkquiDat$ = TODAY 
 erledigt_Termin.GAkquiDat$ = "n"
 erledigt_Vorg.GAkquiDat$ = "n"
 cuaq% = codeaq.GAkquiDat$
 SELECT KEY CodeKU.GAkquiDat$ FILE "adressen" INDEX codeku.adressen
 nachname.GAkquiDat$ = nachname.adressen
 SELECT KEY codema.GAkquiDat$ FILE "supervis" INDEX codema.supervis
 Bearbeiter.GAkquiDat$ = nachname.supervis
 akquiseneu$ = "n"
 REM CALL QuickStore(GAkquiDat$)
 STORE FILE GAkquiDat$
 FILE GAkquiDat$
 IF FORM LIKE "AKQUIPRJ" THEN 
   SELECT FIRST 
   SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
   CALL AKQUISEIntro1()
   CALL AQButtUpdate()
   FORM 
   ENTER termin.GAkquiDat$,0
 ELSE 
   GCodeaq% = codeaq%
   GcodeAQNeu% = codeaq%
   CALL AKQUISE(2)
 END IF 
 REM 150699
 END SUB 
 


 ' Datensatz fÅr neuen Bug vorbereiten
 ' ========================================================================
 ' 0001 17.07.2009
 
SUB AQBugNeu()
 SET STATUS "Lege neuen Bug an..."
 SELECT WHERE FILE GAkquiDat$
 IF ( MOD (GAkquiDat$) OR NEW (GAkquiDat$)) AND notiz.GAkquiDat$ <> "" THEN CALL FStore(GAkquiDat$)
 SELECT FIRST LOCK FILE "stamm"
 lastbug% = lastbug.stamm
 lastbug% = lastbug% + 1
 lastbug.stamm = lastbug%
 STORE FILE "stamm"

 vknr% = codeku.GAkquiDat$
 vcuak% = CodeAK.GAkquiDat$
 vcuma% = CodeMA.GAkquiDat$
 BLANK FILE GAkquiDat$
 SET STATUS "Datensatz neu angelegt..."
 codeaq% = SER (GAkquiDat$,1)
 codeaq.GAkquiDat$ = codeaq%
 lastbug.GAkquiDat$ = lastbug%
 aquimask.GAkquiDat$ = "AKQUIBUG"
 scategory.GAkquiDat$ = "<no Category>"
 sloesung.GAkquiDat$ = "<keine Lîsung>"
 stest.GAkquiDat$ = "Nicht ausgefÅhrt"
 IF bezug% = 2 THEN 
   CodeKU.GAkquiDat$ = knr%
 END IF 
 IF bezug% = 1 THEN 
   opt% = 1
   CREATE DIALOG "AKQNEU",0,0,134,81,title$,"MS Sans Serif",8
   ADD DIALOG "AKQNEU",9,9,6,27,22,2
   ADD DIALOG "AKQNEU",5,40,6,82,8,0,"Wie soll der neue Termin"
   ADD DIALOG "AKQNEU",5,40,16,50,8,0,"erfa·t werden?"
   ADD DIALOG "AKQNEU",3,40,30,80,10,0,"fÅr aktuelle Adresse",1,opt%
   ADD DIALOG "AKQNEU",3,40,41,61,10,0,"eigener Termin",2,opt%
   ADD DIALOG "AKQNEU",1,40,60,50,15,1,"&OK",1,1
   DIALOG "AKQNEU",req%
   REMOVE DIALOG "AKQNEU"
   IF opt% = 1 THEN 
     CodeKU.GAkquiDat$ = vknr%
   ELSE 
     CodeKU.GAkquiDat$ = 1
   END IF 
 END IF 
 IF bezug% > 2 THEN 
   CodeKU.GAkquiDat$ = vknr%
 END IF 
 CodeAK.GAkquiDat$ = 999982
 Aktion.GAkquiDat$ = "<<BUGTracker>>"
 sstatus.GAkquiDat$ = "Neu"
 sproject.GAkquiDat$ = "<KEIN PROJECT>"
 skompon.GAkquiDat$ = "<nicht spezifiziert>"
 CodeMA.GAkquiDat$ = _vcodema%
 Wertung.GAkquiDat$ = 0
 Sprachnotiz.GAkquiDat$ = "n"
 Datum.GAkquiDat$ = TODAY 
 Termin.GAkquiDat$ = TODAY 
 erledigt_Termin.GAkquiDat$ = "n"
 erledigt_Vorg.GAkquiDat$ = "n"
 cuaq% = codeaq.GAkquiDat$
 SELECT KEY CodeKU.GAkquiDat$ FILE "adressen" INDEX codeku.adressen
 nachname.GAkquiDat$ = nachname.adressen
 SELECT KEY codema.GAkquiDat$ FILE "supervis" INDEX codema.supervis
 Bearbeiter.GAkquiDat$ = nachname.supervis
 akquiseneu$ = "n"
         IF kuerzel.supervis <> "" THEN 
           na$ = " - " + kuerzel.supervis + " -  "
         ELSE 
           na$ = " - " + name.supervis + " -  "
         END IF 
          IF ergebnis.GAkquiDat$ <> "" THEN 
            ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh.mm") + na$ + " BUG erfasst "
          ELSE 
            ergebnis.GAkquiDat$ = DATE$ ( TODAY ) + " " + TIME$ ( NOW ,"hh.mm") + na$ + " BUG erfasst "
          END IF 
        END IF 
 REM 29032010

 IF FORM LIKE "AKQUIBUG" THEN GCodeDok% = 0
 IF GCodeDok% > 0 THEN 
   REM Dokumnteninfo zufÅgen
   GDoksu1% = GCodeDok%
   IF GDoksu1% > 0 THEN 
     REM SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
     SELECT FIRST FILE "dokument" INDEX codedok.dokument
     SELECT KEY GDoksu1% LOCK FILE "dokument" INDEX codedok.dokument
     notiz.GAkquiDat$ = "Dokument(" + gruppe.dokument + ")" + Dokument.dokument + CHR$ (13) + CHR$ (10) + notiz.GAkquiDat$
     CodeDOK.GAkquiDat$ = GDoksu1%
     CodeAQ.dokument = codeaq%
     STORE FILE "dokument"
     GDoksu1% = 0
   END IF 
 END IF 

 STORE FILE GAkquiDat$
 FILE GAkquiDat$
 IF FORM LIKE "AKQUIBUG" THEN 
   SELECT FIRST 
   SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
   CALL AKQUISEIntro1()
   CALL AQButtUpdate()
   FORM 
   ENTER termin.GAkquiDat$,0
 ELSE 
   GCodeaq% = codeaq%
   GcodeAQNeu% = codeaq%
   CALL AKQUISE(2)
 END IF 
 REM 150699
 END SUB 
 


SUB ImpBugs()
 FILE "bugs"
 INDEX id
 SELECT FIRST 
 CALL Fehler("ImpBugs()","")
 WHILE NOT EOF ("bugs")
   SELECT FIRST FILE "adressen" INDEX codeku.adressen
   SELECT KEY organization.bugs FILE "adressen" INDEX codeku.adressen
   vknr% = codeku.adressen
   SELECT FIRST FILE "supervis" INDEX codema.supervis
   SELECT KEY assigned_to.bugs FILE "supervis" INDEX codema.supervis
   vcuma% = codema.supervis


 BLANK FILE GAkquiDat$
 REM SET STATUS "Datensatz neu angelegt..."
 codeaq% = SER (GAkquiDat$,1)
 codeaq.GAkquiDat$ = codeaq%
 lastbug.GAkquiDat$ = id.bugs
 CodeKU.GAkquiDat$ = vknr%
 aquimask.GAkquiDat$ = "AKQUIBUG"
 scategory.GAkquiDat$ = category.bugs
 sloesung.GAkquiDat$ = "<keine Lîsung>"
 stest.GAkquiDat$ = "Nicht ausgefÅhrt"
 CodeAK.GAkquiDat$ = 999982
 Aktion.GAkquiDat$ = "<<BUGTracker>>"
 sstatus.GAkquiDat$ = status_.bugs
 sproj$ = project.bugs
 sproject.GAkquiDat$ = LEFT$ (project.bugs,30)
 skompon.GAkquiDat$ = komponente.bugs
 CodeMA.GAkquiDat$ = vcuma%
 IF priority.bugs LIKE "Niedrig" OR LTRIM$ (priority.bugs) = "" THEN Wertung.GAkquiDat$ = 0
 IF priority.bugs LIKE "Mittel" THEN Wertung.GAkquiDat$ = 1
 IF priority.bugs LIKE "Hoch" THEN Wertung.GAkquiDat$ = 2
 Sprachnotiz.GAkquiDat$ = "n"
 repo$ = reported_on.bugs
 pos1% = INSTR (repo$,"\")
 pos2% = INSTR (pos1% + 1,repo$,"\")

 d1$ = MID$ (repo$,1,pos1% - 1)
 d2$ = MID$ (repo$,pos1% + 1,2)
 d3$ = RIGHT$ (repo$,2)
 datu1$ = MID$ (repo$,1,pos1% - 1) + "." + MID$ (repo$,pos1% + 1,2) + ".20" + RIGHT$ (repo$,2)
 Datum.GAkquiDat$ = LTRIM$ (datu1$)
 repo$ = last_updated_on.bugs
 pos1% = INSTR (repo$,"\")
 pos2% = INSTR (pos1% + 1,repo$,"\")
 datu1$ = MID$ (repo$,1,pos1% - 1) + "." + MID$ (repo$,pos1% + 1,2) + ".20" + RIGHT$ (repo$,2)
 Termin.GAkquiDat$ = LTRIM$ (datu1$)
 erledigt_Termin.GAkquiDat$ = "n"
 IF status_.bugs LIKE "Erledigt" OR status_.bugs LIKE "Abgeschlossen" THEN erledigt_Termin.GAkquiDat$ = "j"
 Notiz.GAkquiDat$ = desc.bugs
 ergebnis.GAkquiDat$ = "gemeldet von " + Person.bugs
 erledigt_Vorg.GAkquiDat$ = "n"
 cuaq% = codeaq.GAkquiDat$
 nachname.GAkquiDat$ = nachname.adressen
 Bearbeiter.GAkquiDat$ = name.supervis
 Dauer.GAkquiDat$ = VAL (hours.bugs)
 DME.GAkquiDat$ = "Stunden"
 CALL QuickStore(GAkquiDat$)

 SELECT NEXT FILE "bugs" INDEX id.bugs
 SET STATUS STR$ (id.bugs)
 WEND 
 END SUB 








 END SUB 



SUB AQNeu1()
 aqbearb$ = "n"
 SET STATUS "Lege neuen Datensatz an..."
 IF ( MOD (GAkquiDat$) OR NEW (GAkquiDat$)) AND notiz.GAkquiDat$ <> "" THEN CALL FStore(GAkquiDat$)
 vknr% = codeku.GAkquiDat$
 vcuak% = CodeAK.GAkquiDat$
 vcuma% = CodeMA.GAkquiDat$
 BLANK 
 SET STATUS "Datensatz neu angelegt..."
 codeaq% = SER (GAkquiDat$,1)
 codeaq.GAkquiDat$ = codeaq%
 IF bezug% = 2 THEN 
   CodeKU.GAkquiDat$ = knr%
 END IF 
 IF bezug% = 1 THEN 
   opt% = 1
   CREATE DIALOG "AKQNEU",0,0,134,81,title$,"MS Sans Serif",8
   ADD DIALOG "AKQNEU",9,9,6,27,22,2
   ADD DIALOG "AKQNEU",5,40,6,82,8,0,"Wie soll der neue Termin"
   ADD DIALOG "AKQNEU",5,40,16,50,8,0,"erfa·t werden?"
   ADD DIALOG "AKQNEU",3,40,30,80,10,0,"fÅr aktuelle Adresse",1,opt%
   ADD DIALOG "AKQNEU",3,40,41,61,10,0,"eigener Termin",2,opt%
   ADD DIALOG "AKQNEU",1,40,60,50,15,1,"&OK",1,1
   DIALOG "AKQNEU",req%
   REMOVE DIALOG "AKQNEU"
   IF opt% = 1 THEN 
     CodeKU.GAkquiDat$ = vknr%
   ELSE 
     CodeKU.GAkquiDat$ = 1
   END IF 
 END IF 
 IF bezug% > 2 THEN 
   CodeKU.GAkquiDat$ = vknr%
 END IF 
 IF vcuak% = 0 THEN 
   CodeAK.GAkquiDat$ = 1
 ELSE 
   CodeAK.GAkquiDat$ = vcuak%
 END IF 
 CodeMA.GAkquiDat$ = _vcodema%
 Wertung.GAkquiDat$ = 0
 Sprachnotiz.GAkquiDat$ = "n"
 Datum.GAkquiDat$ = TODAY 
 REM Termin.GAkquiDat$ = TODAY 
 erledigt_Termin.GAkquiDat$ = "n"
 erledigt_Vorg.GAkquiDat$ = "n"
 cuaq% = codeaq.GAkquiDat$
 SELECT KEY CodeKU.GAkquiDat$ FILE "adressen" INDEX codeku.adressen
 nachname.GAkquiDat$ = nachname.adressen
 SELECT KEY codema.GAkquiDat$ FILE "supervis" INDEX codema.supervis
 Bearbeiter.GAkquiDat$ = nachname.supervis
 akquiseneu$ = "n"
 CALL QuickStore(GAkquiDat$)
 FILE GAkquiDat$
 SELECT FIRST 
 SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 REM 150699
 CALL AKQUISEIntro1()
 CALL AQButtUpdate()
 
 FORM 
 aqbearb$ = "j"
 ENTER termin.GAkquiDat$,0
 END SUB 
 
  
 ' vorherigen Termin anzeigen
 ' ===========================================================================
 
SUB AQPrev()
 IF ( MOD (GAkquiDat$) OR NEW (GAkquiDat$)) AND notiz.GAkquiDat$ <> "" THEN CALL FStore(GAkquiDat$)
 cuaq% = codeaq.GAkquiDat$
 MOUSE OFF 
 ok% = - 1
 REM CALL PSelectPrev()
 SELECT CASE bezug%
  CASE 0
   vbezug$ = "alle Termine"
   CALL PSelectPrev()
 CASE 1
   vbezug$ = "&Mitarbeiter"
   b$ = "SELECT WHERE Codema.GAkquiDat$ = _vcodema%"
   SET INDEX QuickMATer.GAkquiDat$
   INDEX QuickMATer.GAkquiDat$
   CALL PSelectPrev()
   IF EOF (GAkquiDat$) OR Codema.GAkquiDat$ <> _vcodema% THEN ok% = 0
 CASE 2
   vbezug$ = "Adre&sse"
   b$ = "SELECT WHERE CodeKU.GAkquiDat$ = knr%"
   REM SET INDEX QuickKuDatDiff.GAkquiDat$
   REM INDEX QuickKuDatDiff.GAkquiDat$
   SET INDEX QuickKuTer.GAkquiDat$
   INDEX QuickKuTer.GAkquiDat$
   CALL PSelectPrev()
   IF EOF (GAkquiDat$) OR CodeKU.GAkquiDat$ <> knr% THEN ok% = 0
 CASE 3
   vbezug$ = "Aktion&en"
   b$ = "SELECT WHERE CodeAK.GAkquiDat$ = cuak%"
   SET INDEX QuickAKTer.GAkquiDat$
   INDEX QuickAKTer.GAkquiDat$
   CALL PSelectPrev()
   IF EOF (GAkquiDat$) OR CodeAK.GAkquiDat$ <> cuak% THEN ok% = 0
 CASE 4
   vbezug$ = "Mitarbeiter+Aktion"
   b$ = "SELECT WHERE CodeAKMA.GAkquiDat$ = cuakma$"
   SET INDEX QuickAKMATer.GAkquiDat$
   INDEX QuickAKMATer.GAkquiDat$
   CALL PSelectPrev()
   IF EOF (GAkquiDat$) OR CodeAKMA.GAkquiDat$ <> cuakma$ THEN ok% = 0
 END SELECT 
 
 IF ok% = 0 THEN 
   CALL PSelectNext()
   REQUEST "Erster Datensatz","",2
 END IF 
 CALL AQButtUpdate()
 MOUSE ON 
 END SUB 
 
 
 ' nÑchsten Termin anzeigen
 ' ==========================================================================
 
SUB AQNext()
 MOUSE OFF 
 IF ( MOD (GAkquiDat$) OR NEW (GAkquiDat$)) AND notiz.GAkquiDat$ <> "" THEN CALL FStore(GAkquiDat$)
 cuaq% = codeaq.GAkquiDat$
 MOUSE OFF 
 ok% = - 1
 REM CALL PSelectNext()
 SELECT CASE bezug%
  CASE 0
   vbezug$ = "alle Termine"
   CALL PSelectNext()
 CASE 1
   vbezug$ = "&Mitarbeiter"
   b$ = "SELECT WHERE Codema.GAkquiDat$ = _vcodema%"
   REM INDEX Codema.GAkquiDat$
   SET INDEX QuickMATer.GAkquiDat$
   INDEX QuickMATer.GAkquiDat$
   CALL PSelectNext()
   IF EOF (GAkquiDat$) OR Codema.GAkquiDat$ <> _vcodema% THEN ok% = 0
 CASE 2
   vbezug$ = "Adre&sse"
   b$ = "SELECT WHERE CodeKU.GAkquiDat$ = knr%"
   REM SET INDEX QuickKuDatDiff.GAkquiDat$
   REM INDEX QuickKuDatDiff.GAkquiDat$
   SET INDEX QuickKuTer.GAkquiDat$
   INDEX QuickKuTer.GAkquiDat$
   CALL PSelectNext()
   REM SELECT NEXT 
   IF EOF (GAkquiDat$) OR CodeKU.GAkquiDat$ <> knr% THEN ok% = 0
 CASE 3
   vbezug$ = "Aktion&en"
   REM INDEX CodeAK.GAkquiDat$
   b$ = "SELECT WHERE CodeAK.GAkquiDat$ = cuak%"
   SET INDEX QuickAKTer.GAkquiDat$
   INDEX QuickAKTer.GAkquiDat$
   CALL PSelectNext()
   IF EOF (GAkquiDat$) OR CodeAK.GAkquiDat$ <> cuak% THEN ok% = 0
 CASE 4
   vbezug$ = "Mitarbeiter+Aktion"
   b$ = "SELECT WHERE CodeAKMA.GAkquiDat$ = cuakma$"
   REM INDEX CodeAKMA.GAkquiDat$
   SET INDEX QuickAKMATer.GAkquiDat$
   INDEX QuickAKMATer.GAkquiDat$
   CALL PSelectNext()
   IF EOF (GAkquiDat$) OR CodeAKMA.GAkquiDat$ <> cuakma$ THEN ok% = 0
 END SELECT 
 IF ok% = 0 THEN 
   CALL PSelectPrev()
   REQUEST "Letzter Datensatz","",2
 END IF 
 CALL AQButtUpdate()
 MOUSE ON 
 END SUB 
 
 
 ' diverse Drucklisten
 ' ============================================================================
 
SUB AQDrucken()
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 cuaq% = CodeAQ.GAkquiDat$
 opt1% = 1
 cdir$ = DIRECTORY 
 DIRECTORY _netpath$ + "OFFICE"
 CREATE DIALOG "AQDRUCK",0,0,178,89,title$,"MS Sans Serif",8
 ADD DIALOG "AQDRUCK",5,30,4,140,10,0,"Bitte wÑhlen Sie aus, welche Art von Liste"
 ADD DIALOG "AQDRUCK",9,5,6,19,21,2
 ADD DIALOG "AQDRUCK",5,30,14,72,8,0,"Sie drucken mîchten:"
 ADD DIALOG "AQDRUCK",3,30,30,78,11,0,"alle offenen Termine",1,opt1%
 ADD DIALOG "AQDRUCK",3,30,43,130,11,0,"offene Termine des akt. Mitarbeiters",2,opt1%
 ADD DIALOG "AQDRUCK",1,44,64,54,14,1,"&OK",1,1
 ADD DIALOG "AQDRUCK",1,100,64,54,14,0,"&Abbrechen",0,0
 DIALOG "AQDRUCK",req%
 REMOVE DIALOG ALL 
 IF req% = 1 THEN 
   SET STATUS "Druck: offene Termine"
   CALL ORep("TERMINE")
   HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
   END HEADING 
   AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
   END SELECT 
   SET QUERY ON 
   SET QUERY LOCK OFF 
   Ueberschr$ = "offene Termine"
   ON ERROR GOTO ErrAQDR1
   IF opt1% = 1 THEN 
     SELECT ;
     WHERE erledigt_Termin.GAkquiDat$ = "n" AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.ADRESSEN
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   ELSE 
     SELECT ;
     WHERE erledigt_Termin.GAkquiDat$ = "n" AND CodeMA.GAkquiDat$ = _vcodema% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.ADRESSEN
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
ErrAQDR1: 
   ON ERROR GOTO ErrorHandler
 END IF 
 DIRECTORY cdir$
 SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
 FORM 
 END SUB 
  
 
 ' Info-Knopf fÅr Akquisemaske
 ' ============================================================================
 
SUB AQADRInfo()
 cfile$ = FILE 
 FILE "adressen"
 cuku% = CodeKU.adressen
 SELECT KEY cuku% LOCK FILE "adressen" INDEX CodeKU.adressen
 CREATE DIALOG "ADRInfo",0,0,277,339,title$,"MS Sans Serif",8
 ADD DIALOG "ADRInfo",4,33,0,180,51,0,""
 ADD DIALOG "ADRInfo",5,37,8,171,11,0,Anrede.adressen
 ADD DIALOG "ADRInfo",5,37,17,171,11,0,Nachname.adressen
 ADD DIALOG "ADRInfo",5,37,28,171,10,0,Geburtsname.adressen
 ADD DIALOG "ADRInfo",5,37,38,171,11,0,Vorname.adressen
 ADD DIALOG "ADRInfo",9,6,9,22,21,4
 ADD DIALOG "ADRInfo",1,218,15,54,14,1,"&Weiter",0,1
 IF GCodieADR$ LIKE "TRUE" THEN 
   ADD DIALOG "ADRInfo",5,37,52,188,10,0,"CBFC Benutzername:           CBFC Passwort:"
   ADD DIALOG "ADRInfo",6,37,63,80,10,0,0,CBFCBenutzer.adressen,50
   ADD DIALOG "ADRInfo",6,127,63,80,10,0,0,CBFCPasswort.adressen,50
 END IF 

 ADD DIALOG "ADRInfo",4,33,82,180,100,0,"Stichwîrter"
 ADD DIALOG "ADRInfo",6,37,92,172,85,76,0,Stichwort.adressen,400
 ADD DIALOG "ADRInfo",1,218,116,54,14,0,"&ErgÑnzen",1,1

 ADD DIALOG "ADRInfo",4,33,184,180,80,0,"Notiz"
 ADD DIALOG "ADRInfo",6,38,195,171,65,68,0,Notiz.adressen,4000
 ADD DIALOG "ADRInfo",4,33,270,180,30,0,"Adress-Status:"
 ADD DIALOG "ADRInfo",5,37,281,171,11,0,ADRStatus.adressen
 ADD DIALOG "ADRInfo",1,218,280,54,14,0,"&ErgÑnzen",2,2
 ADD DIALOG "ADRInfo",4,33,301,180,30,0,"Adress-Gruppe:"
 ADD DIALOG "ADRInfo",5,37,311,171,11,0,ADRGruppe.adressen
 ADD DIALOG "ADRInfo",1,218,310,54,14,0,"&ErgÑnzen",3,0
 DIALOG "ADRInfo",req%
 REMOVE DIALOG "ADRInfo"
 IF req% = 1 THEN 
   CALL ADRStichw1()
   CALL QuickStore("adressen")
 END IF 
 IF req% = 2 THEN 
   REM adrstatus ergÑnzen 
   CALL ADRStatusNeu()
   CALL QuickStore("adressen")
 END IF 
 IF req% = 3 THEN 
   REM adrgruppe ergÑnzen 
   CALL ADRGruppeNeu()
   CALL QuickStore("adressen")
 END IF 
 CALL QuickStore("adressen")
 FILE cfile$
 END SUB 
 
 
 ' Aktionen zuordnen/auswÑhlen
 ' ============================================================================
 
SUB AQAktionen()
 IF disabled%("AQAKTIONEN") THEN END SUB 
 cuaq% = CodeAQ.GAkquiDat$
 _cuak% = CodeAK.GAkquiDat$
 cuak$ = STR$ (CodeAK.GAkquiDat$,"000000")
 IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
 IF GCodieADR$ LIKE "TRUE" THEN 
   selak% = AKSelectC%(cuak$)
 ELSE 
   selak% = AKSelect%(MemberOf.GAkquiDat$)
 END IF 
 FILE GAkquiDat$
 IF selak% <> 0 THEN 
   cuak% = selak%
   IF _cuak% <> cuak% THEN 
     REQUEST "Soll der aktuelle Termin der gewÑhlten Aktion zugeordnet werden ?","",130,req1%
     IF req1% = 1 THEN 
       SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       SELECT KEY cuaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       CodeAK.GAkquiDat$ = cuak%
       CALL FStore(GAkquiDat$)
     END IF 
   END IF 
   bezug% = 3
   vbezug$ = "Aktion&en"
   _vcodema% = vcodema%
   SELECT FORM KEY cuak% FILE GAkquiDat$ INDEX CodeAK.GAkquiDat$
   SELECT WHERE CodeAK.GAkquiDat$ = cuak%
 ELSE 
   FILE GAkquiDat$
   SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
 END IF 
 REM  SET INDEX Termin.GAkquiDat$
 REM INDEX Termin.GAkquiDat$
 CALL AQButtUpdate()
 CALL SHOWCal()
 FORM 
 END SUB 
 
 
 
 ' Sprachnotiz aufnehmen
 ' ============================================================================
 REM andi 21.12.95 
SUB AQSprache()
 IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
 cuaq% = CodeAQ.GAkquiDat$
 SoundRec$ = ReadINI$("SOUNDREC","Programm")
 IF ReadINI$("SOUNDREC","available") = "TRUE" THEN 
   SET STATUS "Sprachnotiz aufnehmen/abspielen..."
   sound$ = _netpath$ + "WAVES\" + STR$ (codeaq.GAkquiDat$,"00000000") + ".wav"
   vorlage$ = _netpath$ + "default.wav"
   IF NOT EXISTS (sound$) THEN 
     REQUEST "Es wurde noch keine Sprachnotiz erfa·t!","Wollen Sie eine Sprachnotiz erfassen?",130,req%
     IF req% = 1 THEN 
       COPY vorlage$ TO sound$
       CALL Soundrec$ + " " + sound$
       SELECT KEY cuaq% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
       Sprachnotiz.GAkquiDat$ = "j"
       CALL FStore(GAkquiDat$)
     END IF 
   ELSE 
     CREATE DIALOG "SPRNOT",0,0,119,30,title$,"MS Sans Serif",8
     ADD DIALOG "SPRNOT",4,0,0,119,29,0,""
     ADD DIALOG "SPRNOT",1,2,10,55,15,1,"&Abspielen",1,1
     ADD DIALOG "SPRNOT",1,60,10,55,15,0,"&Bearbeiten",2,1
     DIALOG "SPRNOT",req%
     REMOVE DIALOG "SPRNOT"
     SELECT CASE req%
     CASE 1
       REM CALL Server("PLAYSOUND",sound$)
       CALL SoundRec$ + " " + sound$
     CASE 2
       CALL SoundRec$ + " " + sound$
     END SELECT 
   END IF 
   SET STATUS "Bereit"
 ELSE 
   CALL Fehler("Sprachoption ist nicht aktiviert!","")
 END IF 
 SELECT FORM KEY cuaq% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
 SELECT KEY cuaq% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
 CALL AQButtUpdate()
 END SUB 
 
 
 ' DokumentenÅbersicht fÅr aktuellen Kunden
 ' ============================================================================
 
SUB AQDOKLIST()
 IF disabled%("AQDOKLIST") THEN END SUB 
 aqnr% = codeaq.GAkquiDat$
 knr% = codeku.GAkquiDat$
 CALL DOKLIST(knr%)
 SELECT FORM KEY aqnr% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 END SUB 
 
 
 ' Kundenhistorie
 ' ============================================================================
 
SUB AQKundenHist()
 GADRDat$ = "ADRESSEN"
 GAkquiDat$ = GAkquiDat$
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 IF disabled%("AQKUNDENHIST") THEN END SUB 
 IF title$ LIKE "*FACTURA*" OR title$ LIKE "*price*" THEN 
    CALL Fehler("Funktion wird in dieser Programm-Version nicht unterstÅtzt!","")
   END SUB 
 END IF 
 cfile$ = FILE 
 FILE GAkquiDat$
 cdir$ = DIRECTORY 
 DIRECTORY _netpath$ + "OFFICE"
 opt% = 2
 d$ = "Terminliste"
  CREATE DIALOG d$,0,0,165,112,title$,"MS Sans Serif",8
    ADD DIALOG d$,4,0,0,165,88,0,""
    ADD DIALOG d$,9,5,13,19,21,2
    ADD DIALOG d$,3,31,14,86,14,0,"Termin - AuswahlmenÅ",1,opt%
    ADD DIALOG d$,3,31,54,68,14,0,"&Terminliste",2,opt%
    ADD DIALOG d$,5,41,28,121,10,0,"Auflistung aller Termine und Auswahl"
    ADD DIALOG d$,5,41,38,119,10,0,"eines einzelnen Termins"
    ADD DIALOG d$,5,41,70,114,10,0,"Ausdruck der Termine"
    ADD DIALOG d$,1,28,91,54,14,1,"&OK",1,1
    ADD DIALOG d$,1,84,91,54,14,0,"&Abbruch",0,1
 DIALOG d$,req%
 REMOVE DIALOG d$
 IF req% = 0 THEN END SUB 
 IF opt% = 2 THEN 
   IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
   cuaq% = CodeAQ.GAkquiDat$
   REQUEST "Wollen Sie den Notizteil der Adresse mit ausgeben?","",130,reqnot%
   IF reqnot% > 0 THEN 
     IF GAkquiDat$ LIKE GAkquiDat$ THEN 
       CALL ORep("TERMINE")
     END IF 
     IF GAkquiDat$ LIKE "AKQUIBC*" THEN 
       CALL ORep("TERBCK")
     END IF 
     IF GAkquiDat$ LIKE "AKQUI1" THEN 
       CALL ORep("TERADR1")
     END IF 
   ELSE 
     IF GAkquiDat$ LIKE GAkquiDat$ THEN 
       CALL ORep("TERMINE1")
     END IF 
     IF GAkquiDat$ LIKE "AKQUIBC*" THEN 
       CALL ORep("TER1BC")
     END IF 
     IF GAkquiDat$ LIKE "AKQUI1" THEN 
       CALL ORep("TER1AD")
     END IF 
   END IF 
   SELECT KEY CodeMA.GAkquiDat$ FILE "supervis" INDEX CodeMA.supervis
   SELECT CASE bezug%
   CASE 1
     Ueberschr$ = "Mitarbeiterhistorie: " + nachname.supervis
     _vcodema% = CodeMA.GAkquiDat$
   CASE 2
     Ueberschr$ = "Adresshistorie: " + nachname.GAdrDat$
     knr% = CodeKU.GAkquiDat$
   CASE 3
     vcuak% = CodeAK.GAkquiDat$
     SELECT KEY vcuak% FILE "AKTIONEN" INDEX CodeAK.aktionen
     Ueberschr$ = "Aktionshistorie: " + Bezeichnung.aktionen
   CASE 4
     vcuak% = CodeAK.GAkquiDat$
     vcuakma$ = CodeAKMA.GAkquiDat$
     SELECT KEY vcuak% FILE "AKTIONEN" INDEX CodeAK.aktionen
     Ueberschr$ = "Aktionshistorie/Mitarbeiter: " + Bezeichnung.aktionen + "/" + nachname.supervis
   END SELECT 
   HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
   END HEADING 
   AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
   END SELECT 
   SET QUERY ON 
   SET QUERY LOCK OFF 
   MOUSE OFF 
   ON ERROR GOTO ErrAQKHIST
   IF bezug% = 2 THEN 
     SELECT ;
       WHERE CodeKU.GAkquiDat$ = knr% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
       ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
       TO ASK 
   END IF 
   IF bezug% = 1 THEN 
     SELECT ;
       WHERE CodeMA.GAkquiDat$ = _vcodema% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
       ORDER nachname.GAkquiDat$,termin.GAkquiDat$,uhrzeit.GAkquiDat$
       TO ASK 
   END IF 
   IF bezug% = 3 THEN 
     SELECT ;
       WHERE CodeAK.GAkquiDat$ = vcuak% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
       ORDER termin.GAkquiDat$
       TO ASK 
   END IF 
   IF bezug% = 4 THEN 
     SELECT ;
       WHERE CodeAKMA.GAkquiDat$ = vcuakma$ AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
       ORDER termin.GAkquiDat$
       TO ASK 
   END IF 
ErrAQKHIST: 
   ON ERROR GOTO ErrorHandler
   SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
   DIRECTORY cdir$
   MOUSE ON 
 ELSE 
   CALL AQTerminListe()
 END IF 
 DIRECTORY cdir$
 FILE cfile$
 END SUB 
 



 
SUB AQAdrHist1()
 ADRsub% = 13
 END SUB 
 
SUB AQAdrHist(art%)
 GCodieRuf% = 0
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 REM art%=1 aus adressmaske heraus
 REM art%=2 aus Terminmaske heraus
 REM art%=3 aus Projektmaske heraus
 IF disabled%("AQKUNDENHIST") THEN END SUB 
 IF title$ LIKE "*FACTURA*" OR title$ LIKE "*price*" THEN 
    CALL Fehler("Funktion wird in dieser Programm-Version nicht unterstÅtzt!","")
   END SUB 
 END IF 
 IF art% = 1 THEN _cuku% = CodeKU.adressen
 IF art% = 2 THEN 
   _cuku% = CodeKU.GAkquiDat$
   codeaq% = codeaq.GAkquiDat$
   index1$ = INDEX 
   select1$ = WHERE 
 END IF 
 IF art% = 3 THEN 
   prj% = Codepr.project
   codepr% = prj%
   index1$ = "codepr"
   select1$ = WHERE 
 END IF 
 cfile$ = FILE 
 IF art% = 1 THEN 
   CALL DFile(2,"OFFICE\dokument" + _fpw$)
   REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
   CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 END IF 
 FILE GAkquiDat$
 SELECT WHERE 
 cdir$ = DIRECTORY 
 DIRECTORY _netpath$ + "OFFICE"
 DIM Auswahl1$(1)
 IF RECCOUNT (GAkquiDat$) < 23000 THEN 
   DIM Termine1$( RECCOUNT (GAkquiDat$))
 ELSE 
   DIM Termine1$(23000)
 END IF 
 b% = RECCOUNT (GAkquiDat$)
 REM FOR a% = 0 TO b%:Termine1$(a%) = "":NEXT a%
 IF art% < 3 THEN 
   qindex$ = "QuickKUDatDiff"
   qfield$ = "CodeKU"
   SELECT FIRST FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
   SELECT KEY _cuku% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
   caption$ = "Adresse: " + Nachname.ADRESSEN + ", " + LEFT$ (Vorname.ADRESSEN,1) + "."
   scode% = _cuku%
 END IF 
 IF art% = 3 THEN 
   qindex$ = "QuickPRDatDiff"
   qfield$ = "CodePR"
   SELECT FIRST FILE "project" INDEX Codepr.project
   SELECT KEY prj% FILE "project" INDEX Codepr.project
   caption$ = "Projekt: " + name1.project + ", " + LEFT$ (name2.project,10) + "."
   scode% = prj%
 END IF 
 
 tfilter1% = scode% * 1000000
 tfilter2% = (scode% + 1) * 1000000
 FILE GAkquiDat$
 INDEX qindex$$
 REM SELECT WHERE codeku.GAkquiDat$ = _cuku%
 SELECT FIRST FILE GAkquiDat$ INDEX qindex$$
 SELECT KEY tfilter1% FILE GAkquiDat$ INDEX qindex$$
 tfound1% = 0
 SET STATUS "Durchsuche Termindatei..."
 aq$ = GAkquiDat$
 
 IF art% < 3 THEN WHILE NOT EOF (GAkquiDat$) AND quickKuDatDiff >= tfilter1% AND quickKuDatDiff < tfilter2%
 IF art% = 3 THEN WHILE NOT EOF (GAkquiDat$) AND quickPRDatDiff >= tfilter1% AND quickPRDatDiff < tfilter2%
   REM 100597
   IF art% <> 3 THEN 
     IF GTerArtSpez% = - 1 THEN 
       aq$ = GAkquiDat$
       IF UCASE$ (erledigt_Termin.aq$) <> "J" THEN 
         Termine1$(tfound1%) = DATE$ (Termin.aq$,"0d.mm.yyyy") + "; " + "[" + erledigt_Termin.aq$ + "]" + ";  " + "[" + LTRIM$ ( STR$ (Wertung.aq$,"99")) + "]" + "; " + LEFT$ ( TRIM$ (notiz.aq$),150) + SPACE$ (120) + STR$ (CodeAQ.aq$,"000000")
         IF GCODIE% = - 1 THEN 
           IF GCodieRuf% <> - 1 THEN CALL SearchInitAq1(GAkquiDat$)
         END IF 
         IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
         REM CALL Fehler( UCASE$ (erledigt_Termin.aq$), STR$ (tfound1%))
         tfound1% = tfound1% + 1
       END IF 
     ELSE 
 Termine1$(tfound1%) = DATE$ (Termin.aq$,"0d.mm.yyyy") + "; " + "[" + erledigt_Termin.aq$ + "]" + ";  " + "[" + LTRIM$ ( STR$ (Wertung.aq$,"99")) + "]" + "; " + LEFT$ ( TRIM$ (notiz.aq$),150) + SPACE$ (120) + STR$ (CodeAQ.aq$,"000000")
      IF GCODIE% = - 1 THEN 
         IF GCodieRuf% <> - 1 THEN CALL SearchInitAq1(GAkquiDat$)
      END IF 
      IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
      tfound1% = tfound1% + 1
    END IF 
   END IF 
   IF art% = 3 THEN 
 Termine1$(tfound1%) = DATE$ (Termin,"0d.mm.yyyy") + "; " + "[" + erledigt_Termin + "]" + ";  " + LTRIM$ ( LEFT$ (nachname,30)) + ";  " + LEFT$ ( TRIM$ (notiz.aq$),150) + SPACE$ (120) + STR$ (CodeAQ.aq$,"000000")
    IF GCODIE% = - 1 THEN 
       IF GCodieRuf% <> - 1 THEN CALL SearchInitAq1(GAkquiDat$)
    END IF 
    IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
    tfound1% = tfound1% + 1
   END IF 
   
   SET STATUS LTRIM$ ( STR$ (tfound1%,",9999999")) + " Termine gefunden"
   SELECT NEXT FILE GAkquiDat$ INDEX qindex$$
 WEND 
 Termine1$(tfound1%) = ""
 IF tfound1% <> 0 THEN 
  req% = 99
  aaaak% = 0
  WHILE req% <> 0
   
   IF GCODIE% = - 1 THEN 
     c$ = "aa"
     REM CALL Fehler("","")
     IF aaaak% = 0 THEN 
       req3% = CALL ("_SearchShow",c$)
     ELSE 
       req3% = CALL ("_SearchReShow",c$)
     END IF 
     REM CALL Fehler( STR$ (req%),"")
     IF req3% = 3 THEN 
       req% = 2
     ELSE 
       IF VAL (c$) <> 0 THEN 
         req% = 1
         _cuaq% = VAL (c$)
         FILE GAkquiDat$
         INDEX codeaq.GAkquiDat$
         SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         SELECT KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         knr% = codeku.GAkquiDat$
         SELECT FIRST FILE "adressen" INDEX codeku.adressen
         SELECT KEY knr% FILE "adressen" INDEX codeku.adressen
         REM MENU 4,2,1,"aus Suchliste &wÑhlen,F7","DokKurzSuche","Auflistung aller vorher gesuchten Dokumente"
         ok% = 0
         SET STATUS "Termine gefunden..."
       ELSE 
         IF req3% = 2 THEN 
           req% = 3
         ELSE 
           req% = 0
         END IF 
       END IF 
     END IF 
     aaaak% = aaaak% + 1
   ELSE 
     SET STATUS "Bitte wÑhlen Sie einen Termin aus."
     CREATE DIALOG "TERLISTE",0,0,440,196,title$,"MS Sans Serif",8
     ADD DIALOG "TERLISTE",5,6,3,319,8,0,"Termin erledigt Wertung       Notiz"
     ADD DIALOG "TERLISTE",7,6,16,429,153,0,2,Termine1$,Auswahl1$,Termine1$(0)
     ADD DIALOG "TERLISTE",1,114,174,56,16,0,"&OK",1,1
     ADD DIALOG "TERLISTE",1,174,174,56,16,0,"&Abbrechen",0,0
     ADD DIALOG "TERLISTE",1,234,174,56,16,1,"&Terminliste",2,0
     DIALOG "TERLISTE",req%
     REMOVE DIALOG "TERLISTE"
   END IF 
   knr% = codeku.adressen
   IF req% = 0 AND art% = 2 THEN 
     REM INDEX index1$$
     z1$ = "select where " + select1$
     REM EXECUTE z1$
     FILE GAkquiDat$
     SELECT FORM KEY codeaq% INDEX codeaq.GAkquiDat$
   END IF 
   IF req% = 3 THEN 
     CALL TagestExp1(Termine1$(),tfound1%)
   END IF 
   IF req% = 1 THEN 
     IF GCODIE% <> - 1 THEN 
       _cuaq% = VAL ( RIGHT$ (Auswahl1$(0),6))
     END IF 
     lastT1% = _cuaq%
     IF NEW ("adressen") OR MOD ("adressen") THEN CALL FStore("adressen")
     IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
     SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
     SELECT KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
     _continue% = 1
     IF _continue% <> 0 THEN 
       cudat$ = DATE$ ( TODAY ,"0d.mm.yyyy")
       datanz$ = DATE$ ( TODAY ,"0d.mm.yyyy")
       SET STATUS "Bereit"
       _formend% = 0
       WHILE _formend% = 0 AND (art% = 1 OR art% = 3)
         REM vbezug$ = "Adre&sse"
         _vcodema% = vcodema%
         AQsub% = 0
         akmaske$ = GAkquiDat$
         IF ProjectJN$ = "TRUE" THEN akmaske$ = "AKQUIPRJ"
 
         IF UCASE$ ( FORM ) <> akmaske$ THEN 
           SET HEADING title$ + " - Termine"
           OPEN FORM GOFFForm$ + akmaske$
           SET f = Superbase.Form
           SELECT FORM KEY _cuaq% INDEX codeaq.GAkquiDat$
           SET STATUS "Termine"
           CALL MNAKQUISE()
           MENU 5,4,0,"&Adresshistorie,F10","AQAdrHistT","Adresshistorie anzeigen/drucken"
           MENU ON 
           CALL AKQUISEIntro1()
           SELECT FORM KEY _cuaq% INDEX codeaq.GAkquiDat$
           FORM 
           SET DISPLAY ON 
           CALL AQButtUpdate()
         ELSE 
           CALL AQButtUpdate()
         END IF 
         SET STATUS "Bereit"
         IF NOT NEW (GAkquiDat$) THEN 
           MENU ON 
           MOUSE ON 
           f.suchen.enabled = - 1
           f.suchen.visible = - 1
           f.abbruch.enabled = 0
           f.abbruch.visible = 0
           f.abbruch2.enabled = 0
           f.abbruch2.visible = 0
           IF _projeKt$ LIKE "PROVIS" THEN 
             f.vertrag.enabled = - 1
             f.vertrag.visible = - 1
           ELSE 
             f.vertrag.enabled = 0
             f.vertrag.visible = 0
           END IF 
       ON ERROR GOTO em1806200401
       IF GEMAIL% = - 1 THEN 
         IF GEMAILJNAuto% = - 1 THEN 
           f.emailauto.visible = - 1
           f.emailauto.enabled = - 1
         ELSE 
           f.emailauto.visible = - 1
           f.emailauto.enabled = 0
         END IF 
       ELSE 
         f.emailbearb.visible = 0
         f.emailbearb.enabled = 0
       END IF 
em1806200401:  

           FORM 
           WAIT MOUSE OR KEY OR UPDATE OR MENU 
           GET k$
           SELECT CASE ASC (k$)
           CASE CrsLeft%,PgUp%
             CALL AQPrev()
           CASE CrsRight%,PgDn%
             CALL AQNext()
           END SELECT 
           IF k$ = CHR$ (27) THEN 
             IF PAGE > 1 THEN 
               FORM 1
             ELSE 
               _formend% = 1
             END IF 
           END IF 
         ELSE 
           AQsub% = 99
         END IF 
         SELECT CASE AQsub%
         CASE 99
           IF ergdatuma$ = "TRUE" AND NOT ( NEW (GAkquiDat$) OR MOD (GAkquiDat$)) THEN 
             codeaq% = CodeAQ.GAkquiDat$
             SELECT KEY codeaq% LOCK INDEX CodeAq.GAkquiDat$
             IF ergebnis.GAkquiDat$ <> "" THEN 
               ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + DATE$ ( TODAY ) + " " + TIME$ ( NOW ,"hh.mm")
             ELSE 
               ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + DATE$ ( TODAY ) + " " + TIME$ ( NOW ,"hh.mm")
             END IF 
             CALL QuickStore(GAkquiDat$)
           END IF 
           MOUSE ON 
           IF PAGE = 1 THEN 
             CALL ButDesabled()
             f.seite2.enabled = 0
             f.offenetermine.enabled = 0
             f.terminplan.enabled = 0
             f.sprache.enabled = 0
             f.brief.enabled = 0
             f.telefon.enabled = 0
             f.mitarbeiter.enabled = 0
             f.bezug.enabled = 0
             f.aktion.enabled = 0
             f.kundeninfo.enabled = 0
             f.Monat.enabled = 0
             f.Juli.enabled = 0
             f.Jahr.enabled = 0
             f.W1.enabled = 0
             f.W2.enabled = 0
             f.W3.enabled = 0
             f.W4.enabled = 0
             f.W5.enabled = 0
             f.W6.enabled = 0
             f.vertrag.enabled = 0
             f.vertrag.visible = 0
           END IF 
           IF PAGE = 2 THEN 
             f.bearb2.enabled = 0
             f.abbruch2.enabled = - 1
             f.abbruch2.visible = - 1
             f.kundeninfo2.enabled = 0
             f.seite1.enabled = 0
           END IF 
           MENU OFF 
           IF PAGE < 3 THEN 
             ENTER datum.GAkquiDat$,0
           ELSE 
             ENTER EMAILBETREFF.GAkquiDat$,0
           END IF 
           MENU ON 
           IF PAGE = 1 THEN 
             CALL ButEnabled()
             f.seite2.enabled = - 1
             f.offenetermine.enabled = - 1
             f.terminplan.enabled = - 1
             f.sprache.enabled = - 1
             f.brief.enabled = - 1
             f.telefon.enabled = - 1
             f.mitarbeiter.enabled = - 1
             f.bezug.enabled = - 1
             f.aktion.enabled = - 1
             f.kundeninfo.enabled = - 1
             f.Monat.enabled = - 1
             f.Juli.enabled = - 1
             f.Jahr.enabled = - 1
             f.W1.enabled = - 1
             f.W2.enabled = - 1
             f.W3.enabled = - 1
             f.W4.enabled = - 1
             f.W5.enabled = - 1
             f.W6.enabled = - 1
             f.suchen.enabled = - 1
             f.suchen.visible = - 1
             IF _projeKt$ LIKE "PROVIS" THEN 
               f.vertrag.enabled = - 1
               f.vertrag.visible = - 1
             ELSE 
               f.vertrag.enabled = 0
               f.vertrag.visible = 0
             END IF 
           END IF 
           IF PAGE = 2 THEN 
             f.bearb2.enabled = - 1
             f.abbruch2.enabled = 0
             f.abbruch2.visible = 0
             f.kundeninfo2.enabled = - 1
             f.seite1.enabled = - 1
           END IF 
         CASE 100
          REM VertragsÅbersicht
          SELECT KEY codeku.GAkquiDat$ FILE "Kvertrag" INDEX codeku.kvertrag
          SELECT KEY codeku.GAkquiDat$ FILE "Adressen" INDEX codeku.adressen
          CALL KVERTRAGGR()
         END SELECT 
         REM CALL BMCheckMail()
       WEND 
       IF art% = 2 THEN 
         SELECT FORM KEY _cuaq% INDEX codeaq.GAkquiDat$
         REM cuaq% = _cuaq%
       END IF 
     END IF 
     IF art% = 1 THEN 
       cuaq% = 0
      _formend% = 0
     END IF 
     IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) AND CodeAQ.GAkquiDat$ <> 0 THEN CALL FStore(GAkquiDat$)
   END IF 
   IF req% = 2 THEN 
     fo$ = UCASE$ ( FORM )
     IF UCASE$ ( FORM ) LIKE "PROJECT*" THEN 
       prj% = codepr.project
       initjn$ = "j"
       wbericht$ = "Project"
       CALL VPETermineJ(initjn$,prj%)
       Ueberschr$ = "Projekthistorie: " + nachname.adressen
     ELSE 
       REM ab adresshist
       knr% = _cuku%
       initjn$ = "j"
       wbericht$ = "Adressen"
       CALL VPETermineJ(initjn$,_cuku%)
       Ueberschr$ = "Adresshistorie: " + nachname.adressen
     END IF 
   END IF 
  WEND 
 ELSE 
   SET STATUS "Bereit"
   CALL Fehler("Es wurden keine Termine gefunden!","")
   lastT1% = 0
 END IF 
 
 SET STATUS "Bereit"
  
ErrAQKHIST: 
   ON ERROR GOTO ErrorHandler
 DIRECTORY cdir$
 FILE cfile$
 knr% = _cuku%
 REM SELECT FORM KEY _cuku% FILE "adressen" INDEX codeku.adressen
 REM FORM 
 DIRECTORY cdir$
 MOUSE ON 
 END SUB 
 
 
 
  
 ' Anschreiben verfassen
 ' ============================================================================
 ' 04.06.93    - Netzwerkanpassung (LOCK)
 

SUB AQAnschreiben()
 IF NOT OPEN ("Dokument") THEN CALL DFile(2,"OFFICE\Dokument" + _fpw$)
 GAkquiDat$ = GAkquiDat$
 GDokDat$ = "Dokument"
 SET STATUS "Dokumentenverwaltung"
 cuaq% = CodeAQ.GAkquiDat$
 IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
 _OK% = 1
 opt% = 1
 IF CodeDOK.GAkquiDat$ > 0 THEN 
   CREATE DIALOG "ANSCHR",0,0,105,93,title$,"MS Sans Serif",8
   ADD DIALOG "ANSCHR",4,1,3,101,66,0," Brief/Anschreiben "
   ADD DIALOG "ANSCHR",3,4,16,78,14,0,"Dokument einsehen",1,opt%
   ADD DIALOG "ANSCHR",3,4,30,76,14,0,"Dokument lîschen",2,opt%
   ADD DIALOG "ANSCHR",3,4,44,96,14,0,"Dokument entkoppeln",3,opt%
   ADD DIALOG "ANSCHR",1,2,74,48,16,1,"&Weiter",1,1
   ADD DIALOG "ANSCHR",1,54,74,48,16,0,"&Abbruch",0,0
   DIALOG "ANSCHR",req%
   REMOVE DIALOG "ANSCHR"
   IF req% = 1 THEN 
     SELECT CASE opt%
     CASE 1
       CALL DOKBearbeiten(CodeDOK.GAkquiDat$,0)
     CASE 2
       CALL DOKLoeschen(CodeDOK.GAkquiDat$)
       SELECT KEY CodeDOK.GAkquiDat$ FILE GDokDat$ INDEX CodeDOK.GDokDat$
       IF NOT FOUND (GDokDat$) THEN 
         SELECT KEY cuaq% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
         CodeDOK.GAkquiDat$ = 0
         CALL QuickStore(GAkquiDat$)
       END IF 
     CASE 3
       REM dokument entkoppeln
       SELECT KEY cuaq% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
       CodeDOK.GAkquiDat$ = 0
       CALL QuickStore(GAkquiDat$)
       CALL Fehler("Dokument wurde vom Termin entkoppelt","")
     END SELECT 
   END IF 
 ELSE 
   CALL Fehler("Es ist kein Dokument zu diesem Termin erfa·t worden!","")
   IF GAkquiDat$ LIKE GAkquiDat$ THEN 
     REQUEST "Wollen Sie dem Termin ein Dokument zuordnen?","",130,req%
     IF req% = 1 THEN 
       GDoksu1% = 0
       codeaq% = codeaq.GAkquiDat$
       optemail% = 1
       REM ***********************************************************************************
          REM Abfrage, ob internes oder externes Dokument

       DIM dlg1 AS Dialog
       DIM control AS DialogControl 
 
       Superbase.Dialogs.Add("Dialogname")
       SET dlg1 = Superbase.Dialogs.Dialogname
       dlg1.Move(0,0,150,73)
       dlg1.Caption = "Dokumentenwahl"
       dlg1.FontName = "MS Sans Serif"
       dlg1.FontSize = 8
 
       SET control = dlg1.Add("DialogFrame1","DialogFrame")
       control.Move(2,8,150,44)
       control.Caption = " WÑhlen Sie eine Option "
 
       SET control = dlg1.Add("DialogOptionButton1","DialogOptionButton")
       control.Move(6,20,114,10)
       control.Caption = "internes Kundendokument"
       control.Bind("optemail%")
       control.ValueOn = 1
 
       SET control = dlg1.Add("DialogOptionButton2","DialogOptionButton")
       control.Move(6,32,114,9)
       control.Caption = "externes Dokument"
       control.Bind("optemail%")
       control.ValueOn = 2
 
 
 
       SET control = dlg1.Add("DialogCommandButton1","DialogCommandButton")
       control.Move(39,54,43,16)
       control.Default = 1
       control.Caption = "OK"
       control.ReturnValue = 1
 
       SET control = dlg1.Add("DialogCommandButton2","DialogCommandButton")
       control.Move(85,54,42,16)
       control.Caption = "Abbruch"
       control.ReturnValue = 0
 
       DIALOG "Dialogname",reqemail%
       REMOVE DIALOG "Dialogname"
       REM ***********************************************************************************
       IF reqemail% = 1 THEN 
         IF optemail% = 1 THEN 
           GDoksu1% = DokSuchen%(codeku.GAkquiDat$,"")
           IF GDoksu1% > 0 THEN 
             SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
             SELECT FIRST FILE "dokument" INDEX codedok.dokument
             SELECT KEY GDoksu1% FILE "dokument" INDEX codedok.dokument
             notiz.GAkquiDat$ = "Dokument(" + gruppe.dokument + ")" + Dokument.dokument + CHR$ (13) + CHR$ (10) + notiz.GAkquiDat$
             CodeDOK.GAkquiDat$ = GDoksu1%
             STORE FILE GAkquiDat$
             GDoksu1% = 0
             CALL Fehler("Dokument wurde an den Termin angehÑngt","")
           END IF 
         ELSE 
           REM Dokument importieren 
           GCodeDok% = 0
           CALL DOKImport()
           GDoksu1% = GCodeDok%
           IF GDoksu1% > 0 THEN 
             SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
             SELECT FIRST FILE "dokument" INDEX codedok.dokument
             SELECT KEY GDoksu1% FILE "dokument" INDEX codedok.dokument
             notiz.GAkquiDat$ = "Dokument(" + gruppe.dokument + ")" + Dokument.dokument + CHR$ (13) + CHR$ (10) + notiz.GAkquiDat$
             CodeDOK.GAkquiDat$ = GDoksu1%
             STORE FILE GAkquiDat$
             SELECT FIRST FILE "dokument" INDEX codedok.dokument
             SELECT KEY GDoksu1% LOCK FILE "dokument" INDEX codedok.dokument
             CodeAQ.dokument = codeaq%
             STORE FILE "dokument"
             GDoksu1% = 0
             CALL Fehler("Dokument wurde an den Termin angehÑngt","")
           END IF 
         END IF 
       END IF 
     END IF 
   END IF 
 END IF 
 FILE GAkquiDat$
 SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
 CALL AQButtUpdate()
 END SUB 
 


 
 
 ' Beschriftung fÅr Buttons Sprachnotiz u. Brief/FAX generieren
 ' ============================================================================
 
SUB AQButtUpdate()
 REM CALL Fehler("AQButtonUpdate","")
 IF sprachnotiz.GAkquiDat$ = "j" THEN sprnot$ = "Sprachnotiz Æ" ELSE sprnot$ = "Sprachnotiz"
 codedok% = CodeDOK.GAkquiDat$
 codeaq% = codeaq.GAkquiDat$
 codems% = codems.GAkquiDat$
 IF CodeDOK.GAkquiDat$ > 0 OR EXISTS (codeaq.GAkquiDat$,codeaq.dokument) THEN 
   anschr1$ = "Brief/F&ax Æ"
 ELSE 
   anschr1$ = "Brief/F&ax"
 END IF 
 aqma$ = Bearbeiter.GAkquiDat$
 SELECT KEY CodeAK.GAkquiDat$ FILE "AKTIONEN" INDEX CodeAK.aktionen
 aktion$ = Bezeichnung.aktionen
 datanz$ = DATE$ ( TODAY ,"0d.mmm.yyyy")
 IF ProjectJN$ = "TRUE" THEN 
   IF projekt.GAkquiDat$ <> "" THEN 
     proj$ = Projekt.GAkquiDat$
   ELSE 
     proj$ = "<ohne Zuordnung>"
   END IF 
   IF EMAILTO.GAkquiDat$ <> "" AND EMAILBETREFF.GAkquiDat$ <> "" THEN 
     IF EMAILRAUS.GAkquiDat$ = "j" THEN 
       IF EMAILAutomat.GAkquiDat$ = "j" THEN 
         s3e$ = "EMAIL aut.erl.Æ"
       ELSE 
         s3e$ = "EMAIL man.erl.Æ"
       END IF 
     ELSE 
       IF EMAILAutomat.GAkquiDat$ = "j" THEN 
         s3e$ = "EMAIL autom.Æ"
       ELSE 
         s3e$ = "EMAIL man.Æ"
       END IF 
     END IF 
   ELSE 
     s3e$ = "EMAIL"
   END IF 
 END IF 
 FORM 
 END SUB 
 
 
 ' Bezug wechseln Mitarbeiter/Kunde
 ' ============================================================================
 
SUB BEZUGWechseln()
 IF disabled%("AQBEZUGWECHSELN") THEN END SUB 
 codeaq% = codeaq.GAkquiDat$
 FILE GAkquiDat$
 SELECT WHERE FILE GAkquiDat$
 SELECT CASE bezug%
 CASE 1
   knr% = CodeKU.GAkquiDat$
   bezug% = 2
   vbezug$ = "Adre&sse"
   _vcodema% = vcodema%
   SELECT WHERE CodeKU.GAkquiDat$ = knr%
   
 CASE 2
   vbezug$ = "Aktion&en"
   cuak% = CodeAK.GAkquiDat$
   bezug% = 3
   SELECT WHERE CodeAK.GAkquiDat$ = cuak%
 CASE 3
   vbezug$ = "Mitarbeiter+Aktion"
   _vcodema% = CodeMA.GAkquiDat$
   cuakma$ = CodeAKMA.GAkquiDat$
   bezug% = 4
   SELECT WHERE CodeAKMA.GAkquiDat$ = cuakma$
 CASE 4
   vbezug$ = "&Mitarbeiter"
   _vcodema% = CodeMA.GAkquiDat$
   knr% = CodeKU.GAkquiDat$
   bezug% = 1
   SELECT WHERE Codema.GAkquiDat$ = _vcodema%
   END SELECT 
 CALL SHOWCal()
 REM 100999
       SELECT CASE bezug%
       CASE 1
         REM SELECT FORM KEY _vcodema% FILE GAkquiDat$ INDEX CodeMA.GAkquiDat$
         SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         FORM 
       CASE 2
         REM SELECT FORM KEY knr% FILE GAkquiDat$ INDEX CodeKU.GAkquiDat$
         SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         FORM 
       CASE 3
         REM SELECT FORM KEY cuak% FILE GAkquiDat$ INDEX CodeAK.GAkquiDat$
         SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         FORM 
       CASE 4
         IF termin% = 1 THEN 
           REM SELECT FORM KEY cuakma$ FILE GAkquiDat$ INDEX CodeAKMA.GAkquiDat$
           SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           FORM 
         ELSE 
           REM SELECT FORM KEY cuakma$ FILE GAkquiDat$ INDEX CodeAKMA.GAkquiDat$
           SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           FORM 
         END IF 
       END SELECT 
 FORM 
 END SUB 
 
 
 ' Mitarbeiter suchen aus Termine heraus
 ' ============================================================================
 
SUB AQMASuchen()
 IF disabled%("MAWECHSELN") THEN END SUB 
 FILE "supervis"
 IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
 SET STATUS "Suche Mitarbeiter..."
 REM REQUEST "Mitarbeiter auswÑhlen","",25,req%,_vma%,72,codema,nachname,vorname INDEX nachname.supervis
 codemaold% = codema.GAkquiDat$
 _vma% = GetSupervis%(codemaold%)
 IF _vma% > 0 THEN req% = 1
 FILE GAkquiDat$
 IF req% = 1 THEN 
   knr% = CodeKU.GAkquiDat$
   codeaq% = codeaq.GAkquiDat$
   _vcodema% = _vma%
   bezug% = 1
   vbezug$ = "&Mitarbeiter"
   IF CodeMA.GAkquiDat$ <> _vcodema% THEN 
     REQUEST "Soll der ausgewÑhlte Mitarbeiter in den","aktuellen Termin aufgenommen werden?",130,req%
     IF req% = 1 THEN 
       _CodeAQ% = CodeAQ.GAkquiDat$
       SELECT KEY _CodeAQ% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
       CodeMA.GAkquiDat$ = _vcodema%
       SELECT KEY _vcodema% FILE "SUPERVIS" INDEX CodeMA.supervis
       bearbeiter.GAkquiDat$ = Nachname.supervis
       CALL FStore(GAkquiDat$)
       SELECT FORM KEY _CodeAQ% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
     ELSE 
       SELECT WHERE Codema.GAkquiDat$ = _vcodema%
       SELECT FORM LAST 
     END IF 
   ELSE 
     SELECT WHERE Codema.GAkquiDat$ = _vcodema%
     REM SELECT codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
   END IF 
   REM SELECT WHERE Codema.GAkquiDat$ = _vcodema%
   REM SELECT FORM LAST 
 
 END IF 
 CALL SHOWCal()
 CALL AQButtUpdate()
 FORM 
 SET STATUS "Bereit"
 END SUB 
 
 
 
 ' Kalenderbeschriftung generieren 
 ' ============================================================================
 ' 0001 3.11.92/16.40/AB
 
SUB SHOWCal()
 SET STATUS "Generiere Kalender..."
 vcuaq% = CodeAQ.GAkquiDat$
 monat$ = MONTH$ (cudat$)
 jahr$ = STR$ ( YEAR (cudat$),"9999")
 MOUSE OFF 
 wtag$ = DAY$ ("1. " + monat$ + " " + jahr$)
 SELECT CASE wtag$
 CASE "Sonntag","Sunday"
   spalte% = 7
   wtag% = 0
 CASE "Montag","Monday"
   spalte% = 6
   wtag% = 1
 CASE "Dienstag","Tuesday"
   spalte% = 5
   wtag% = 2
 CASE "Mittwoch","Wednesday"
   spalte% = 4
   wtag% = 3
 CASE "Donnerstag","Thursday"
   spalte% = 3
   wtag% = 4
 CASE "Freitag","Friday"
   spalte% = 2
   wtag% = 5
 CASE "Samstag","Saturday"
   spalte% = 1
   wtag% = 6
 END CASE 
 wmonanf% = DAYS ("1. " + monat$ + " " + jahr$)
 wochmonanfang% = wmonanf% - wtag%
 WoAnfang%(1) = wochmonanfang%
 FOR a% = 2 TO 6
   WoAnfang%(a%) = WoAnfang%(a% - 1) + 7
 NEXT a%
 monatanfang% = 8 - spalte%
 zw2% = DAYS ("26. " + monat$ + " " + jahr$)
 m1$ = monat$
 zw3% = 0
 WHILE m1$ = monat$
   zw3% = zw3% + 1
   zw2% = zw2% + 1
   m1$ = MONTH$ (zw2%)
 WEND 
 monatende% = 26 + zw3% - 1
 FOR i% = 1 TO monatanfang% - 1 STEP 1
   tagx$ = "d" + LTRIM$ ( STR$ (i%,"99")) + "$"
   tagx$$ = ""
 NEXT i%
 i% = 0
 FOR y% = monatanfang% TO monatanfang% + monatende% - 1 STEP 1
   tagx$ = "d" + LTRIM$ ( STR$ (y%,"99")) + "$"
   i% = i% + 1
   termine1$ = STR$ (i%,"99") + "." + monat$ + " " + jahr$
   zwi4% = DAYS (termine1$)
   tagx$$ = STR$ (i%,"99 ") + LTRIM$ (DAYMark$(zwi4%))
 NEXT y%
 FOR y% = monatende% + monatanfang% TO 37 STEP 1:REM +1
   tagx$ = "d" + LTRIM$ ( STR$ (y%,"99")) + "$"
   tagx$$ = ""
 NEXT y%
 REM 200999 SELECT FORM KEY vcuaq% INDEX codeaq.GAkquiDat$
  MOUSE ON 
 FORM 
 END SUB 
 
 
 ' verplante Tage markieren
 ' ==================================================================
 ' Zweck:       liefert Markierung fÅr ein bestimmtes Datum
 ' Nutzung:     x$=DAYMark$(datum$)
 '              datum$  = zu testendes Tagesdatum
 ' ==================================================================
 
FUNCTION DAYMark$(datum%)
 DAYMark$ = " "
 IF akquiseneu$ <> "j" THEN 
   SELECT CASE bezug%
   CASE 0
     IF EXISTS (scode$,termin.GAkquiDat$) THEN DAYMark$ = "Æ"
     REM SELECT KEY datum% FILE GAkquiDat$ INDEX termin.GAkquiDat$
   CASE 1
     scode$ = DATE$ (datum%,"0dmmyyyy") + STR$ (_vcodema%,"000000")
     REM SELECT KEY scode$ FILE GAkquiDat$ INDEX QuickCodeMA
     IF EXISTS (scode$,QuickCodeMA.GAkquiDat$) THEN DAYMark$ = "Æ"
   CASE 2
     scode$ = DATE$ (datum%,"0dmmyyyy") + STR$ (knr%,"000000")
     REM SELECT KEY scode$ FILE GAkquiDat$ INDEX QuickCodeKU
     IF EXISTS (scode$,QuickCodeKU.GAkquiDat$) THEN DAYMark$ = "Æ"
   CASE 3
     scode$ = DATE$ (datum%,"0dmmyyyy") + STR$ (cuak%,"000000")
     REM SELECT KEY scode$ FILE GAkquiDat$ INDEX QuickCodeAK
     IF EXISTS (scode$,QuickCodeAK.GAkquiDat$) THEN DAYMark$ = "Æ"
   CASE 4
     scode$ = DATE$ (datum%,"0dmmyyyy") + STR$ (cuak%,"000000") + STR$ (_vcodema%,"000000")
     REM SELECT KEY scode$ FILE GAkquiDat$ INDEX QuickAKMA
    IF EXISTS (scode$,QuickAKMA.GAkquiDat$) THEN DAYMark$ = "Æ"
   END SELECT 
   REM IF FOUND (GAkquiDat$) THEN DAYMark$ = "Æ"
   REM IF EXISTS (scode$) THEN DAYMark$ = "Æ"
 END IF 
 END FUNCTION 
 
 
 ' TagesÅbersicht anzeigen/Termin auswÑhlen
 ' ==================================================================================
 
TerminListe: 
 cfilt$ = WHERE 
 cindex$ = INDEX 
 SELECT WHERE FILE GAkquiDat$
 SET STATUS "Terminliste anzeigen..."
 cuaq% = CodeAQ.GAkquiDat$
 IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
 datum$ = FN numeric(tag$) + "." + monat$ + " " + jahr$
 zugopt% = 1
 CREATE DIALOG "ZUGART",0,0,134,65,title$,"MS Sans Serif",8
    ADD DIALOG "ZUGART",9,6,1,20,21,2
    ADD DIALOG "ZUGART",9,6,1,20,21,2
    ADD DIALOG "ZUGART",4,27,2,90,41,0,"Terminliste/Festlegung"
    ADD DIALOG "ZUGART",3,33,16,77,10,0,"Tagesterminliste",1,zugopt%
    ADD DIALOG "ZUGART",3,33,27,77,10,0,"Terminfestlegung",2,zugopt%
    ADD DIALOG "ZUGART",1,13,46,55,15,1,"&OK",1,1
    ADD DIALOG "ZUGART",1,70,46,55,15,0,"&Abbrechen",0,0
    DIALOG "ZUGART",req%
    REMOVE DIALOG "ZUGART"
 IF req% = 0 THEN 
   EXECUTE "SELECT WHERE " + cfilt$
             REM 071098
             SELECT FIRST 
   SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
   SET INDEX cindex$
   INDEX cindex$
   MOUSE ON 
   FORM 
   _cuaq% = cuaq%
   RETURN 
 END IF 
 IF zugopt% = 1 AND tag$ <> "" AND RIGHT$ (tag$,1) <> "Æ" THEN 
   CALL Fehler("Es sind keine Tagestermine vorhanden!","")
   EXECUTE "SELECT WHERE " + cfilt$
             REM 071098
             SELECT FIRST 
   SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
   SET INDEX cindex$
   INDEX cindex$
   MOUSE ON 
   FORM 
   _cuaq% = cuaq%
   RETURN 
 END IF 
 
 IF zugopt% = 1 AND tag$ <> "" AND RIGHT$ (tag$,1) = "Æ" THEN 
   tfound% = 0
   REM ** Termine$() Grî·e anpassen und lîschen
   IF RECCOUNT (GAkquiDat$) < 23000 THEN 
     REDIM Termine$( RECCOUNT (GAkquiDat$))
   ELSE 
     REDIM Termine$(23000)
   END IF 
   REM b% = RECCOUNT (GAkquiDat$)
   REM FOR a% = 0 TO b%:Termine$(a%) = "":NEXT a%
 
   CALL Server("LISTBOXINIT","TagesÅbersicht")
   cuaqtmp% = cuaq%
   MOUSE OFF 
   IF bezug% = 1 THEN 
     tfound% = 0
     INDEX QuickCodeMA.GAkquiDat$
     scode$ = DATE$ ( DAYS (datum$),"0dmmyyyy") + STR$ (_vcodema%,"000000")
     SELECT FIRST 
     SELECT KEY scode$
     WHILE NOT EOF (GAkquiDat$) AND QuickCodeMA.GAkquiDat$ = scode$
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + nachname.GAkquiDat$ + ", " + notiz.GAkquiDat$ + " (" + STR$ (CodeAQ.GAkquiDat$,"000000") + ")"
       IF LEFT$ (entry$,1) = " " THEN ent$ = "0" ELSE ent$ = LEFT$ (entry$,1)
       entry$ = ent$ + RIGHT$ (entry$, LEN (entry$) - 1)
       Termine$(tfound%) = entry$
       tfound% = tfound% + 1
       REM CALL Server("LISTBOXADD",entry$)
       REM tfound% = tfound% + 1
       SELECT NEXT FILE GAkquiDat$ INDEX QuickCodeMA.GAkquiDat$
     WEND 
     Termine$(tfound%) = ""
     caption$ = "Termine auf den Mitarbeiter bezogen"
   END IF 
   IF bezug% = 2 THEN 
     tfound% = 0
     INDEX QuickCodeKU.GAkquiDat$
     scode$ = DATE$ ( DAYS (datum$),"0dmmyyyy") + STR$ (CodeKU.GAkquiDat$,"000000")
     SELECT FIRST 
     SELECT KEY scode$
     WHILE NOT EOF (GAkquiDat$) AND QuickCodeKU.GAkquiDat$ = scode$
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + Bearbeiter.GAkquiDat$ + ", " + notiz.GAkquiDat$ + " (" + STR$ (CodeAQ.GAkquiDat$,"000000") + ")"
       IF LEFT$ (entry$,1) = " " THEN ent$ = "0" ELSE ent$ = LEFT$ (entry$,1)
       entry$ = ent$ + RIGHT$ (entry$, LEN (entry$) - 1)
       Termine$(tfound%) = entry$
       REM CALL Server("LISTBOXADD",entry$)
       tfound% = tfound% + 1
       SELECT NEXT FILE GAkquiDat$ INDEX QuickCodeKU.GAkquiDat$
     WEND 
     Termine$(tfound%) = ""
     caption$ = "Termine auf die Adresse bezogen"
   END IF 
   IF bezug% = 3 THEN 
     tfound% = 0
     INDEX QuickCodeAK.GAkquiDat$
     scode$ = DATE$ ( DAYS (datum$),"0dmmyyyy") + STR$ (CodeAK.GAkquiDat$,"000000")
     SELECT FIRST 
     SELECT KEY scode$
     WHILE NOT EOF (GAkquiDat$) AND QuickCodeAK.GAkquiDat$ = scode$
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + Nachname.GAkquiDat$ + ", " + notiz.GAkquiDat$ + " (" + STR$ (CodeAQ.GAkquiDat$,"000000") + ")"
       IF LEFT$ (entry$,1) = " " THEN ent$ = "0" ELSE ent$ = LEFT$ (entry$,1)
       entry$ = ent$ + RIGHT$ (entry$, LEN (entry$) - 1)
       Termine$(tfound%) = entry$
       REM CALL Server("LISTBOXADD",entry$)
       tfound% = tfound% + 1
       SELECT NEXT FILE GAkquiDat$ INDEX QuickCodeAK.GAkquiDat$
     WEND 
     Termine$(tfound%) = ""
     caption$ = "Termine auf die Aktion bezogen"
   END IF 
   IF bezug% = 4 THEN 
     tfound% = 0
     INDEX QuickAKMA.GAkquiDat$
     scode$ = DATE$ ( DAYS (datum$),"0dmmyyyy") + STR$ (CodeAK.GAkquiDat$,"000000") + STR$ (_vcodema%,"000000")
     SELECT FIRST 
     SELECT KEY scode$
     WHILE NOT EOF (GAkquiDat$) AND QuickAKMA.GAkquiDat$ = scode$
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + Nachname.GAkquiDat$ + ", " + notiz.GAkquiDat$ + " (" + STR$ (CodeAQ.GAkquiDat$,"000000") + ")"
       IF LEFT$ (entry$,1) = " " THEN ent$ = "0" ELSE ent$ = LEFT$ (entry$,1)
       entry$ = ent$ + RIGHT$ (entry$, LEN (entry$) - 1)
       Termine$(tfound%) = entry$
       REM CALL Server("LISTBOXADD",entry$)
       tfound% = tfound% + 1
       SELECT NEXT FILE GAkquiDat$ INDEX QuickAKMA.GAkquiDat$
     WEND 
     Termine$(tfound%) = ""
     caption$ = "Termine auf den Mitarbeiter und die Aktion bezogen"
   END IF 
 
   IF tfound% <> 0 THEN 
     SET STATUS "Bitte wÑhlen Sie einen Termin aus."
     CREATE DIALOG "TERLISTE",0,0,340,197,title$,"MS Sans Serif",8
     ADD DIALOG "TERLISTE",7,5,8,328,161,0,2,Termine$,Auswahl$,Termine$(0)
     ADD DIALOG "TERLISTE",1,114,174,56,16,1,"&OK",1,1
     ADD DIALOG "TERLISTE",1,174,174,56,16,0,"&Abbrechen",0,0
     DIALOG "TERLISTE",req%
     REMOVE DIALOG "TERLISTE"
     IF req% = 1 THEN 
       cuaq% = VAL ( RIGHT$ (Auswahl$(0),6))
       lastTermin% = cuaq%
     END IF 
     MENU 6,3,1
   ELSE 
     SET STATUS "Bereit"
     CALL Fehler("Es wurden keine unerledigten Termine gefunden!","")
     MENU 6,3,0
     lastTermin% = 0
   END IF 
 
 
 
 ELSE 
   IF tag$ <> "" THEN 
     IF termin.GAkquiDat$ > 1 THEN 
       SELECT KEY cuaq% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
       REQUEST "Soll der aktuelle Termin auf den " + datum$,"festgesetzt werden?",130,req1%
       IF req1% = 1 THEN 
         IF termin.GAkquiDat$ > 1 AND textversch$ <> "FALSE" THEN 
           notiz.GAkquiDat$ = notiz.GAkquiDat$ + "; (verschoben am " + DATE$ ( TODAY ,"0d.mm.yyyy") + " vom " + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy") + " auf den " + DATE$ ( DAYS (datum$),"0d.mm.yyyy") + ")"
         END IF 
         Termin.GAkquiDat$ = datum$
       END IF 
     ELSE 
       termin.GAkquiDat$ = datum$
       CALL QuickStore(GAkquiDat$)
       CALL SHOWCal()
       MENU OFF 
       ENTER uhrzeit.GAkquiDat$,0
       MENU ON 
     END IF 
     CALL QuickStore(GAkquiDat$)
     CALL SHOWCal()
   END IF 
 END IF 
 EXECUTE "SELECT WHERE " + cfilt$
             REM 071098
             SELECT FIRST 
 SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
 SET INDEX cindex$
 INDEX cindex$
 MOUSE ON 
 FORM 
 _cuaq% = cuaq%
 RETURN 
 
  
 ' Tagestermine anzeigen (Datum im Formular angeklickt)
 ' ====================================================================
 
SUB TagesTermine()
 _cuaq% = CodeAQ.GAkquiDat$
 SELECT CASE bezug%
 CASE 0
   SELECT KEY TODAY FILE GAkquiDat$ INDEX termin.GAkquiDat$
 CASE 1
   scode$ = DATE$ ( TODAY ,"0dmmyyyy") + STR$ (_vcodema%,"000000")
   SELECT KEY scode$ FILE GAkquiDat$ INDEX QuickCodeMA
 CASE 2
   scode$ = DATE$ ( TODAY ,"0dmmyyyy") + STR$ (knr%,"000000")
   SELECT KEY scode$ FILE GAkquiDat$ INDEX QuickCodeKU
 CASE 3
   scode$ = DATE$ ( TODAY ,"0dmmyyyy") + STR$ (cuak%,"000000")
   SELECT KEY scode$ FILE GAkquiDat$ INDEX QuickCodeAK
 CASE 4
   scode$ = DATE$ ( TODAY ,"0dmmyyyy") + STR$ (cuak%,"000000") + STR$ (_vcodema%,"000000")
   SELECT KEY scode$ FILE GAkquiDat$ INDEX QuickAKMA
 END SELECT 
 IF FOUND (GAkquiDat$) THEN 
   tag$ = LTRIM$ ( STR$ ( DAY ( TODAY ),"99")) + "Æ"
   GOSUB TerminListe:
 END IF 
 SELECT KEY _cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
 FORM 
 END SUB 
 
 
 
 ' Optionsauswahl Terminlisten
 ' ====================================================================
 
FUNCTION TListeOpt$(caption$)
 opt1% = 2
 opt2% = 3
 par1$ = "j"
 CREATE DIALOG "TLISTE",0,0,207,116,title$,"MS Sans Serif",8
 ADD DIALOG "TLISTE",4,0,0,206,94,0,""
 ADD DIALOG "TLISTE",5,40,11,162,9,0,"Bitte wÑhlen Sie die gewÅnschten Kategorien aus:"
 ADD DIALOG "TLISTE",9,9,14,20,21,2
 ADD DIALOG "TLISTE",4,40,22,97,61,0,"Terminart"
 ADD DIALOG "TLISTE",3,46,33,52,12,0,"alle Termine",1,opt1%
 ADD DIALOG "TLISTE",3,46,50,80,12,0,"alle offenen Termine",2,opt1%
 ADD DIALOG "TLISTE",3,46,67,87,12,0,"alle erledigten Termine",3,opt1%
 ADD DIALOG "TLISTE",4,138,22,64,61,0,"Bezug"
 ADD DIALOG "TLISTE",3,146,33,39,12,0,"gesamt",1,opt2%
 ADD DIALOG "TLISTE",3,146,44,40,12,0,"Adresse",2,opt2%
 ADD DIALOG "TLISTE",3,146,56,51,12,0,"Mitarbeiter",3,opt2%
 ADD DIALOG "TLISTE",3,146,67,51,12,0,"Aktion",4,opt2%
 ADD DIALOG "TLISTE",1,49,97,55,15,1,"&Weiter",1,1
 ADD DIALOG "TLISTE",1,105,97,55,15,0,"&Abbrechen",0,0
 DIALOG "TLISTE",req%
 REMOVE DIALOG "TLISTE"
 IF req% = 1 THEN 
   tmp$ = STR$ (opt1%,"0") + STR$ (opt2%,"0") + par1$
   TListeOpt$ = tmp$
 ELSE 
   TListeOpt$ = ""
 END IF 
 END FUNCTION 
 
 
 
 ' WochenÅbersicht
 ' ======================================================================
 
SUB WOUebersicht(woche%)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\adrterm" + _fpw$)
 opt$ = TListeOpt$("WochenÅbersicht")
 IF opt$ <> "" THEN 
   MOUSE OFF 
   opt1% = VAL ( LEFT$ (opt$,1))
   opt2% = VAL ( MID$ (opt$,2,1))
   par1$ = RIGHT$ (opt$,1)
   tknr% = CodeKU.GAkquiDat$
   cdir$ = DIRECTORY 
   DIRECTORY _netpath$ + "OFFICE"
   cuaq% = codeaq.GAkquiDat$
   cuak% = CodeAK.GAkquiDat$
   CALL ORep("TERMINE1")
   HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
   END HEADING 
   AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
   END SELECT 
   SET QUERY ON 
   SET QUERY LOCK OFF 
   Ueberschr$ = "WochenÅbersicht vom " + DATE$ (WoAnfang%(woche%)) + " bis " + DATE$ (WoAnfang%(woche%) + 7)
  
   ON ERROR GOTO ErrWOUEB
   REM -- alle Termine/gesamt --
   IF opt1% = 1 AND opt2% = 1 THEN 
     Ueberschr$ = Ueberschr$ + " aller Termine"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.adressen
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
  
   REM -- alle Termine/Kunde
   IF opt1% = 1 AND opt2% = 2 THEN 
     Ueberschr$ = Ueberschr$ + " aller Termine des Kunden"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND CodeKU.GAkquiDat$ = tknr% AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.adressen
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
  
   REM -- alle Termine/Mitarbeiter --
   IF opt1% = 1 AND opt2% = 3 THEN 
     Ueberschr$ = Ueberschr$ + " aller Termine des Mitarbeiters"
     SELECT ;
     WHERE (Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND CodeMA.GAkquiDat$ = _vcodema%) AND (codeak.GAkquiDat$ = codeak.aktionen) AND codeku.GAkquiDat$ = codeku.adressen
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
     
   REM -- alle Termine/Aktion --
   IF opt1% = 1 AND opt2% = 4 THEN 
     Ueberschr$ = Ueberschr$ + " aller Termine der Aktion"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND CodeAK.GAkquiDat$ = cuak% AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.adressen
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
 
   REM ****************************
 
   REM -- offene Termine/gesamt --
   IF opt1% = 2 AND opt2% = 1 THEN 
     Ueberschr$ = Ueberschr$ + " aller offenen Termine"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND erledigt_Termin.GAkquiDat$ <> "j" AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.adressen
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
     
   REM -- erledigte Termine/gesamt --
   IF opt2% = 3 AND opt2% = 1 THEN 
     Ueberschr$ = Ueberschr$ + " aller erledigten Termine"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND erledigt_Termin.GAkquiDat$ = "j" AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.adressen
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
 
   REM -- offene Termine/Kunde --
   IF opt1% = 2 AND opt2% = 2 THEN 
     Ueberschr$ = Ueberschr$ + " aller offenen Termine des Kunden"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND erledigt_Termin.GAkquiDat$ <> "j" AND CodeKU.GAkquiDat$ = tknr% AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.adressen
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
  
   REM -- erledigte Termine/Kunde --
   IF opt1% = 3 AND opt2% = 2 THEN 
     Ueberschr$ = Ueberschr$ + " aller offenen Termine"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND erledigt_Termin.GAkquiDat$ = "j" AND CodeKU.GAkquiDat$ = tknr% AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.adressen
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
 
   REM -- offene Termine/Mitarbeiter --
   IF opt1% = 2 AND opt2% = 3 THEN 
     Ueberschr$ = Ueberschr$ + " aller offenen Termine des Mitarbeiters"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND erledigt_Termin.GAkquiDat$ <> "j" AND CodeMA.GAkquiDat$ = _vcodema% AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.adressen
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
   
   REM -- erledigte Termine/Mitarbeiter --
   IF opt1% = 3 AND opt2% = 3 THEN 
     Ueberschr$ = Ueberschr$ + " aller erledigten Termine des Mitarbeiters"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND erledigt_Termin.GAkquiDat$ = "j" AND CodeMA.GAkquiDat$ = _vcodema% AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.adressen
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
 
   REM -- offene Termine/Aktion --
   IF opt1% = 2 AND opt2% = 4 THEN 
     Ueberschr$ = Ueberschr$ + " aller offenen Termine der Aktion"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND erledigt_Termin.GAkquiDat$ <> "j" AND CodeAK.GAkquiDat$ = cuak% AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.adressen
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
   
   REM -- erledigte Termine/Aktion --
   IF opt1% = 3 AND opt2% = 4 THEN 
     Ueberschr$ = Ueberschr$ + " aller erledigten Termine der Aktion"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND erledigt_Termin.GAkquiDat$ = "j" AND CodeAK.GAkquiDat$ = cuak% AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.adressen
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
ErrWOUEB: 
   ON ERROR GOTO ErrorHandler
   DIRECTORY cdir$
   CALL AKQUISEFilter()
   SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
   FORM 
 END IF 
 MOUSE ON 
 END SUB 
 
 
 ' MonatsÅbersicht
 ' ====================================================================
 ' 16.02.93    - umgestellt auf allgemeine Ausgaberoutine
 ' 10.08.93    - Aufruf der allgemeinen Terminlistenroutinen
 
SUB MOUebersicht()
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 opt$ = TListeOpt$("MonatsÅbersicht")
 IF opt$ <> "" THEN 
   MOUSE OFF 
   opt1% = VAL ( LEFT$ (opt$,1))
   opt2% = VAL ( MID$ (opt$,2,1))
   par1$ = RIGHT$ (opt$,1)
   tknr% = CodeKU.GAkquiDat$
   cdir$ = DIRECTORY 
   DIRECTORY _netpath$ + "OFFICE"
   cuaq% = codeaq.GAkquiDat$
   cuak% = codeak.GAkquiDat$
   CALL ORep("TERMINE1")
   HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
   END HEADING 
   AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
   END SELECT 
   SET QUERY ON 
   SET QUERY LOCK OFF 
   monanf% = DAYS ("1. " + monat$ + " " + jahr$)
   monende% = DAYS ("1. " + MONTH$ (monanf% + 32) + " " + STR$ ( YEAR (monanf% + 32),"9999"))
   Ueberschr$ = "MonatsÅbersicht " + monat$
 
   ON ERROR GOTO ErrMOUEB
   REM -- alle Termine/gesamt --
   IF opt1% = 1 AND opt2% = 1 THEN 
     Ueberschr$ = Ueberschr$ + " alle Termine"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.ADRESSEN
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
 
   REM -- alle Termine/Kunde
   IF opt1% = 1 AND opt2% = 2 THEN 
     Ueberschr$ = Ueberschr$ + " alle Termine des Kunden"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND CodeKU.GAkquiDat$ = tknr% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.ADRESSEN
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
 
   REM -- alle Termine/Mitarbeiter --
   IF opt1% = 1 AND opt2% = 3 THEN 
     Ueberschr$ = Ueberschr$ + " alle Termine des Mitarbeiters"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND CodeMA.GAkquiDat$ = _vcodema% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.ADRESSEN
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
 
   REM -- alle Termine/Aktion --
   IF opt1% = 1 AND opt2% = 4 THEN 
     Ueberschr$ = Ueberschr$ + " alle Termine der Aktion"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND CodeAK.GAkquiDat$ = cuak% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.ADRESSEN
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
 
   REM -- offene Termine/gesamt --
   IF opt1% = 2 AND opt2% = 1 THEN 
     Ueberschr$ = Ueberschr$ + " nichterledigte Termine gesamt"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND erledigt_Termin.GAkquiDat$ <> "j" AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.ADRESSEN
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
   
   REM -- erledigte Termine/gesamt --
   IF opt2% = 3 AND opt2% = 1 THEN 
     Ueberschr$ = Ueberschr$ + " erledigte Termine gesamt"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND erledigt_Termin.GAkquiDat$ = "j" AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.ADRESSEN
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
 
   REM -- offene Termine/Kunde --
   IF opt1% = 2 AND opt2% = 2 THEN 
     Ueberschr$ = Ueberschr$ + " nichterledigte Termine des Kunden"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND erledigt_Termin.GAkquiDat$ <> "j" AND CodeKU.GAkquiDat$ = tknr% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.ADRESSEN
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
 
   REM -- erledigte Termine/Kunde --
   IF opt1% = 3 AND opt2% = 2 THEN 
     Ueberschr$ = Ueberschr$ + " erledigte Termine des Kunden"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND erledigt_Termin.GAkquiDat$ = "j" AND CodeKU.GAkquiDat$ = tknr% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.ADRESSEN
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
 
   REM + - - offene Termine / Mitarbeiter - - 
   IF opt1% = 2 AND opt2% = 3 THEN 
     Ueberschr$ = Ueberschr$ + " nichterledigte Termine des Mitarbeiter"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND erledigt_Termin.GAkquiDat$ <> "j" AND CodeMA.GAkquiDat$ = _vcodema% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.ADRESSEN
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
   
   REM -- erledigte Termine/Mitarbeiter --
   IF opt1% = 3 AND opt2% = 3 THEN 
     Ueberschr$ = Ueberschr$ + " erledigte Termine des Mitarbeiter"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND erledigt_Termin.GAkquiDat$ = "j" AND CodeMA.GAkquiDat$ = _vcodema% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.ADRESSEN
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
 
    REM -- offene Termine/Aktion --
   IF opt1% = 2 AND opt2% = 4 THEN 
     Ueberschr$ = Ueberschr$ + " nichterledigte Termine der Aktion"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND erledigt_Termin.GAkquiDat$ <> "j" AND CodeAK.GAkquiDat$ = cuak% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.ADRESSEN
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
   
   REM -- erledigte Termine/Aktion --
   IF opt1% = 3 AND opt2% = 4 THEN 
     Ueberschr$ = Ueberschr$ + " erledigte Termine der Aktion"
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND erledigt_Termin.GAkquiDat$ = "j" AND CodeAK.GAkquiDat$ = cuak% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.ADRESSEN
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
     END SELECT 
   END IF 
ErrMOUEB: 
   ON ERROR GOTO ErrorHandler
   DIRECTORY cdir$
   CALL AKQUISEFilter()
   SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
   FORM 
 END IF 
 MOUSE ON 
 END SUB 
 
  
 ' Termine lîschen
 ' =====================================================================
 ' 0001 10.11.92/04:30    - REMOVE FROM durch SELECT REMOVE ersetzt
 
SUB AQLoeschen()
 IF disabled%("AQLOESCHEN") THEN END SUB 
 SET STATUS "Termin lîschen"
 REQUEST "Wollen Sie den angezeigten Termin lîschen?","",130,req%
 IF req% = 1 THEN 
   MOUSE OFF 
   FILE GAkquiDat$
   _CodeAQ% = CodeAQ.GAkquiDat$
   SELECT KEY _CodeAQ% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
   IF req% = 1 THEN 
     SELECT REMOVE FILE GAkquiDat$
     REQUEST "Termin gelîscht !","",2
     cuaq% = 0
   END IF 
 END IF 
 
 SELECT CASE bezug%
 CASE 1
   IF EXISTS (_vcodema%,CodeMA.GAkquiDat$) THEN 
     CALL AKQUISEFilter()
   ELSE 
     _formend% = 1
   END IF 
 CASE 2
   IF EXISTS (knr%,CodeKU.GAkquiDat$) THEN 
     CALL AKQUISEFilter()
   ELSE 
     _formend% = 1
   END IF 
 CASE 3
   IF EXISTS (cuak%,CodeAK.GAkquiDat$) THEN 
     CALL AKQUISEFilter()
   ELSE 
     _formend% = 1
   END IF 
 CASE 4
   IF EXISTS (cuakma$,CodeAKMA.GAkquiDat$) THEN 
     CALL AKQUISEFilter()
   ELSE 
     _formend% = 1
   END IF 
 END SELECT 
 
 IF _formend% = 1 THEN 
   REQUEST "Keine weiteren Termine vorhanden!","",113
 ELSE 
   FORM 
   MOUSE ON 
 END IF 
 END SUB 
 
 
 ' Monat auswÑhlen
 ' ========================================================================
 ' 0001/16.02.93    - Monatsauswahl Åber Dialog
 
SUB AQMonat()
 SET STATUS "WÑhlen Sie einen Monat aus."
 cuaq% = codeaq.GAkquiDat$
 d$ = "MONAT"
 CREATE DIALOG d$,0,0,56,129,title$,"MS Sans Serif",8
 ADD DIALOG d$,7,0,0,55,99,0,0,monate$,monates$,monat$
 ADD DIALOG d$,1,1,101,53,12,1,"&OK",1,1
 ADD DIALOG d$,1,1,114,53,12,0,"&Abbruch",0,0
 DIALOG d$,req%
 REMOVE DIALOG d$
 IF req% = 1 THEN 
   MOUSE OFF 
   monat$ = monates$(0)
   cudat$ = "1. " + monat$ + " " + jahr$
   CALL SHOWCal()
   MOUSE ON 
 END IF 
 SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
 FORM 
 END SUB 
 
 
 ' Jahr auswÑhlen
 ' ========================================================================
 
SUB AQJahr()
 SET STATUS "Geben Sie das gewÅnschte Jahr ein."
 cuaq% = codeaq.GAkquiDat$
 _continue% = 1
 DIM jahre$(403)
 DIM jahres$(1)
 j% = 0
 FOR i% = 1900 TO 2300
   jahre$(j%) = STR$ (i%,"0000")
   j% = j% + 1
 NEXT i%
 d$ = "JAHR"
 jahr$ = STR$ ( YEAR ( TODAY ),"0000")
 CREATE DIALOG d$,0,0,56,129,title$,"MS Sans Serif",8
 ADD DIALOG d$,7,0,0,55,99,0,2,jahre$,jahres$,jahr$
 ADD DIALOG d$,1,1,101,53,12,1,"&OK",1,1
 ADD DIALOG d$,1,1,114,53,12,0,"&Abbruch",0,0
 DIALOG d$,req%
 REMOVE DIALOG d$

   IF req% = 1 THEN 
       _continue% = 0
       jahr$ = jahres$(0)
       MOUSE OFF 
       jahr1$ = jahr$
       cudat$ = "1. " + monat$ + " " + jahr$
       CALL SHOWCal()
       MOUSE ON 
   ELSE 
     _continue% = 0
   END IF 
 SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
 FORM 
 END SUB 
 
 
 ' Anzeige der offenen(unerledigten) Termine
 ' ===========================================================================
 
SUB AQTermineO()
 GCodieRuf% = 0
 SET STATUS "Auflistung offener Termine"
 MOUSE OFF 
 cfilt$ = WHERE 
 _cuaq% = CodeAQ.GAkquiDat$
 _cuma% = CodeMA.GAkquiDat$
 _cuku% = CodeKU.GAkquiDat$
 _cuak% = CodeAK.GAkquiDat$
 IF ( MOD (GAkquiDat$) OR NEW (GAkquiDat$)) AND notiz.GAkquiDat$ <> "" THEN CALL FStore(GAkquiDat$)
 REM ** Akquise-Filter kurzristig aufheben
 SELECT WHERE FILE GAkquiDat$
 tfound% = 0
 REM ** Termine$() Grî·e anpassen und lîschen
 IF RECCOUNT (GAkquiDat$) < 23000 THEN 
   REDIM Termine$( RECCOUNT (GAkquiDat$))
 ELSE 
   REDIM Termine$(23000)
 END IF 
 REM b% = RECCOUNT (GAkquiDat$)
 REM FOR a% = 0 TO b%:Termine$(a%) = "":NEXT a%
 
 REM ** Bezug ermitteln, Suchvariablen setzen
 SELECT CASE bezug%
 CASE 1
   REM ** Bezug Mitarbeiter **
   qindex$ = "QuickMADat"
   qfield$ = "CodeMA"
   SELECT KEY _cuma% FILE "SUPERVIS" INDEX CodeMA.SUPERVIS
   caption$ = "Mitarbeiter: " + Nachname.SUPERVIS + ", " + LEFT$ (Vorname.SUPERVIS,1) + "."
 CASE 2
   REM ** Bezug Adresse **
   qindex$ = "QuickKUDat"
   qfield$ = "CodeKU"
   SELECT KEY _cuku% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
   caption$ = "Adresse: " + Nachname.ADRESSEN + ", " + LEFT$ (Vorname.ADRESSEN,1) + "."
 CASE 3
   REM ** Bezug Aktionen **
   qindex$ = "QuickAKDat"
   qfield$ = "CodeAK"
   SELECT KEY _cuak% FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
   caption$ = "Aktion: " + Bezeichnung.AKTIONEN
 CASE 4
   REM ** Bezug Mitarbeiter/Aktion **
   qindex$ = "QuickAKMADat"
   REM qfield$ = "CodeAK"
   SELECT KEY _cuak% FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
   SELECT KEY _cuma% FILE "SUPERVIS" INDEX CodeMA.SUPERVIS
   caption$ = "Mitarbeiter: " + Nachname.SUPERVIS + ", " + LEFT$ (Vorname.SUPERVIS,1) + "., Aktion: " + Bezeichnung.AKTIONEN
 END SELECT 
 
 IF bezug% = 4 THEN 
   scode$ = STR$ (_cuak%,"000000") + STR$ (_cuma%,"000000") + "N"
   tfilter$ = scode$
   FILE GAkquiDat$
   INDEX qindex$$
   SELECT FIRST 
   SELECT KEY scode$ FILE GAkquiDat$ INDEX qindex$$
   tfound% = 0
   SET STATUS "Durchsuche Termindatei..."
   WHILE NOT EOF (GAkquiDat$) AND UCASE$ (qindex$$) LIKE UCASE$ (tfilter$) + "*"
     IF Termin.GAkquiDat$ <= TODAY THEN 
       ok% = 1
       SELECT KEY codeku.GAkquiDat$ FILE "Adressen" INDEX codeku.adressen
       IF bezug% = 4 AND CodeMA.GAkquiDat$ <> _cuma% THEN ok% = 0
       IF ok% = 1 THEN 
         Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + LEFT$ ( TRIM$ (nachname.adressen)) + "/" + LEFT$ ( TRIM$ (vorname.adressen)) + " ;" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (120) + STR$ (CodeAQ.GAkquiDat$,"000000")
         IF GCODIE% = - 1 THEN 
           IF GCodieRuf% <> - 1 THEN CALL SearchInitAq1(GAkquiDat$)
         END IF 
         IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
         tfound% = tfound% + 1
       END IF 
     END IF 
     SET STATUS LTRIM$ ( STR$ (tfound%,",9999999")) + " Termine gefunden"
     SELECT NEXT FILE GAkquiDat$ INDEX qindex$$
   WEND 
   Termine$(tfound%) = ""
 END IF 
 REM 020398
 IF bezug% <> 4 THEN 
   tfilter% = qfield$$
   scode$ = STR$ (qfield$$,"000000") + "N"
   FILE GAkquiDat$
   INDEX qindex$$
   SELECT FIRST 
   SELECT KEY scode$ FILE GAkquiDat$ INDEX qindex$$
   tfound% = 0
   SET STATUS "Durchsuche Termindatei..."
   WHILE NOT EOF (GAkquiDat$) AND qfield$$ = tfilter% AND UCASE$ (erledigt_Termin.GAkquiDat$) = "N"
     IF Termin.GAkquiDat$ <= TODAY THEN 
       ok% = 1
       SELECT KEY codeku.GAkquiDat$ FILE "Adressen" INDEX codeku.adressen
       IF bezug% = 4 AND CodeMA.GAkquiDat$ <> _cuma% THEN ok% = 0
       IF ok% = 1 THEN 
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + LEFT$ ( TRIM$ (nachname.adressen)) + "/" + LEFT$ ( TRIM$ (vorname.adressen)) + " ;" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (120) + STR$ (CodeAQ.GAkquiDat$,"000000")
         IF GCODIE% = - 1 THEN 
           IF GCodieRuf% <> - 1 THEN CALL SearchInitAq1(GAkquiDat$)
         END IF 
         IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
         tfound% = tfound% + 1
       END IF 
       
     END IF 
     SET STATUS LTRIM$ ( STR$ (tfound%,",9999999")) + " Termine gefunden"
     SELECT NEXT FILE GAkquiDat$ INDEX qindex$$
   WEND 
   Termine$(tfound%) = ""
 END IF 
 
 ok% = 0
 aaaak% = 0
 IF tfound% <> 0 THEN 
   IF GCODIE% = - 1 THEN 
     c$ = "aa"
     REM CALL Fehler("","")
     IF aaaak% = 0 THEN 
       req3% = CALL ("_SearchShow",c$)
     ELSE 
       req3% = CALL ("_SearchReShow",c$)
     END IF 
     REM CALL Fehler( STR$ (req%),"")
     IF req3% = 3 THEN 
       req% = 2
     ELSE 
       IF VAL (c$) <> 0 THEN 
         req% = 1
         _cuaq% = VAL (c$)
         REM MENU 4,2,1,"aus Suchliste &wÑhlen,F7","DokKurzSuche","Auflistung aller vorher gesuchten Dokumente"
         ok% = 0
         SET STATUS "Termine gefunden..."
       ELSE 
         IF req3% = 2 THEN 
           req% = 3
         ELSE 
           req% = 0
         END IF 
       END IF 
     END IF 
     aaaak% = aaaak% + 1
   ELSE 
     SET STATUS "Bitte wÑhlen Sie einen Termin aus."
     CREATE DIALOG "TERLISTE",0,0,440,297,title$,"MS Sans Serif",8
     ADD DIALOG "TERLISTE",7,5,8,428,261,0,2,Termine$,Auswahl$,Termine$(0)
     ADD DIALOG "TERLISTE",1,164,274,56,16,1,"&OK",1,1
     ADD DIALOG "TERLISTE",1,244,274,56,16,0,"&Abbrechen",0,0
     DIALOG "TERLISTE",req%
     REMOVE DIALOG "TERLISTE"
   END IF 
   IF req% = 1 THEN 
     ok% = 1
     IF GCODIE% <> - 1 THEN 
       _cuaq% = VAL ( RIGHT$ (Auswahl$(0),6))
     END IF 
     lastTermin% = _cuaq%
     MENU 6,3,1
   END IF 
   IF req% = 0 THEN 
     SET STATUS "Bereit"
     CALL Fehler("Es wurden keine unerledigten Termine gefunden!","")
     MENU 6,3,0
     lastTermin% = 0
   END IF 
   IF req% = 3 THEN 
     CALL TagestExp(Termine$(),tfound%)
   END IF 
 
   IF req% = 2 THEN 
     fo$ = UCASE$ ( FORM )
     IF UCASE$ ( FORM ) LIKE "PROJECT*" THEN 
       prj% = codepr.project
       initjn$ = "j"
       wbericht$ = "Project"
       CALL VPETermineJ(initjn$,prj%)
       Ueberschr$ = "Projekthistorie: " + nachname.adressen
     ELSE 
       REM ab adresshist
       knr% = _cuku%
       initjn$ = "j"
       wbericht$ = "Adressen"
       CALL VPETermineJ(initjn$,_cuku%)
       Ueberschr$ = "Adresshistorie: " + nachname.adressen
     END IF 
   END IF 
 END IF 
 SET STATUS "Bereit"
 cuaq% = _cuaq%
 IF ok% = 1 THEN 
   REM EXECUTE "SELECT WHERE " + cfilt$
   REM SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
   REM 071098
   REM SELECT FIRST 
 END IF 
 CALL AQButtUpdate()
 SELECT FORM KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 MOUSE ON 
 END SUB 
 
 
 ' letzte Ergebnisliste von AQTermineO erneut anzeigen
 ' ===========================================================================
 
SUB AQTermineO2()
 MOUSE OFF 
 _cuaq% = CodeAQ.GAkquiDat$
 IF LastTermin% <> 0 THEN 
   prompt% = 0
   FOR a% = 0 TO tfound%
     IF Termine$(a%) <> "" AND VAL ( RIGHT$ (Termine$(a%),6)) = LastTermin% THEN 
       IF prompt% = 0 THEN prompt% = a%
     END IF 
   NEXT a%
   CREATE DIALOG "TERLISTE",0,0,440,297,title$,"MS Sans Serif",8
   ADD DIALOG "TERLISTE",7,5,8,428,261,0,2,Termine$,Auswahl$,Termine$(prompt%)
   ADD DIALOG "TERLISTE",1,164,274,56,16,1,"&OK",1,1
   ADD DIALOG "TERLISTE",1,234,274,56,16,0,"&Abbrechen",0,0
   DIALOG "TERLISTE",req%
   MOUSE ON 
   REMOVE DIALOG "TERLISTE"
   IF req% = 1 THEN 
     _cuaq% = VAL ( RIGHT$ (Auswahl$(0),6))
     lastTermin% = _cuaq%
   END IF 
   MENU 6,3,1
 ELSE 
   CALL Fehler("Es wurden keine unerledigten Termine gefunden!","")
   MENU 6,3,0
   lastTermin% = 0
 END IF 
 cuaq% = _cuaq%
 CALL AQButtUpdate()
 SELECT FORM KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 MOUSE ON 
 END SUB 
  
 
 ' Anzeige der geplanten Termine
 ' ===========================================================================
 ' 23.02.2000  
 
SUB AQTermineP()
 SET STATUS "Auflistung Terminplan"
 MOUSE OFF 
 cfilt$ = WHERE 
 _cuaq% = CodeAQ.GAkquiDat$
 _cuma% = CodeMA.GAkquiDat$
 _cuku% = CodeKU.GAkquiDat$
 _cuak% = CodeAK.GAkquiDat$
 IF ( MOD (GAkquiDat$) OR NEW (GAkquiDat$)) AND notiz.GAkquiDat$ <> "" THEN CALL FStore(GAkquiDat$)
 REM ** Akquise-Filter kurzristig aufheben
 SELECT WHERE FILE GAkquiDat$
 tfound% = 0
 REM ** Termine$() Grî·e anpassen und lîschen
 IF RECCOUNT (GAkquiDat$) < 23000 THEN 
   REDIM Termine$( RECCOUNT (GAkquiDat$))
 ELSE 
   REDIM Termine$(23000)
 END IF 
 REM b% = RECCOUNT (GAkquiDat$)
 REM FOR a% = 0 TO b%:Termine$(a%) = "":NEXT a%
 
 REM ** Bezug ermitteln, Suchvariablen setzen
 SELECT CASE bezug%
 CASE 1
   REM ** Bezug Mitarbeiter **
   qindex$ = "QuickMADat"
   qfield$ = "CodeMA"
   SELECT KEY _cuma% FILE "SUPERVIS" INDEX CodeMA.SUPERVIS
   caption$ = "Mitarbeiter: " + Nachname.SUPERVIS + ", " + LEFT$ (Vorname.SUPERVIS,1) + "."
 CASE 2
   REM ** Bezug Adresse **
   qindex$ = "QuickKUDat"
   qfield$ = "CodeKU"
   SELECT KEY _cuku% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
   caption$ = "Adresse: " + Nachname.ADRESSEN + ", " + LEFT$ (Vorname.ADRESSEN,1) + "."
 CASE 3
   REM ** Bezug Aktionen **
   qindex$ = "QuickAKDat"
   qfield$ = "CodeAK"
   SELECT KEY _cuak% FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
   caption$ = "Aktion: " + Bezeichnung.AKTIONEN
 CASE 4
   REM ** Bezug Mitarbeiter/Aktion **
   qindex$ = "QuickAKMADat"
   REM qfield$ = "CodeAK"
   SELECT KEY _cuak% FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
   SELECT KEY _cuma% FILE "SUPERVIS" INDEX CodeMA.SUPERVIS
   caption$ = "Mitarbeiter: " + Nachname.SUPERVIS + ", " + LEFT$ (Vorname.SUPERVIS,1) + "., Aktion: " + Bezeichnung.AKTIONEN
 END SELECT 
 
 IF bezug% = 4 THEN 
   scode$ = STR$ (_cuak%,"000000") + STR$ (_cuma%,"000000") + "N"
   tfilter$ = scode$
   FILE GAkquiDat$
   INDEX qindex$$
   SELECT FIRST 
   SELECT KEY scode$ FILE GAkquiDat$ INDEX qindex$$
   tfound% = 0
   SET STATUS "Durchsuche Termindatei..."
   WHILE NOT EOF (GAkquiDat$) AND UCASE$ (qindex$$) LIKE UCASE$ (tfilter$) + "*"
     IF Termin.GAkquiDat$ >= TODAY THEN 
       ok% = 1
       SELECT KEY codeku.GAkquiDat$ FILE "Adressen" INDEX codeku.adressen
       IF bezug% = 4 AND CodeMA.GAkquiDat$ <> _cuma% THEN ok% = 0
       IF ok% = 1 THEN 
         Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + LEFT$ ( TRIM$ (nachname.adressen)) + "/" + LEFT$ ( TRIM$ (vorname.adressen)) + " ;" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (120) + STR$ (CodeAQ.GAkquiDat$,"000000")
         tfound% = tfound% + 1
       END IF 
     END IF 
     SELECT NEXT FILE GAkquiDat$ INDEX qindex$$
   WEND 
   Termine$(tfound%) = ""
 END IF 
 REM 020398
 IF bezug% <> 4 THEN 
   tfilter% = qfield$$
   scode$ = STR$ (qfield$$,"000000") + "N"
   FILE GAkquiDat$
   INDEX qindex$$
   SELECT FIRST 
   SELECT KEY scode$ FILE GAkquiDat$ INDEX qindex$$
   tfound% = 0
   SET STATUS "Durchsuche Termindatei..."
   WHILE NOT EOF (GAkquiDat$) AND qfield$$ = tfilter% AND UCASE$ (erledigt_Termin.GAkquiDat$) = "N"
     IF Termin.GAkquiDat$ >= TODAY THEN 
       ok% = 1
       SELECT KEY codeku.GAkquiDat$ FILE "Adressen" INDEX codeku.adressen
       IF bezug% = 4 AND CodeMA.GAkquiDat$ <> _cuma% THEN ok% = 0
       IF ok% = 1 THEN 
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + LEFT$ ( TRIM$ (nachname.adressen)) + "/" + LEFT$ ( TRIM$ (vorname.adressen)) + " ;" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (120) + STR$ (CodeAQ.GAkquiDat$,"000000")
 
       END IF 
       tfound% = tfound% + 1
     END IF 
     SELECT NEXT FILE GAkquiDat$ INDEX qindex$$
   WEND 
   Termine$(tfound%) = ""
 END IF 
 
 ok% = 0
 IF tfound% <> 0 THEN 
   SET STATUS "Bitte wÑhlen Sie einen Termin aus!"
   CREATE DIALOG "TERLISTE",0,0,440,297,title$,"MS Sans Serif",8
   ADD DIALOG "TERLISTE",7,5,8,428,261,0,2,Termine$,Auswahl$,Termine$(0)
   ADD DIALOG "TERLISTE",1,164,274,56,16,1,"&OK",1,1
   ADD DIALOG "TERLISTE",1,244,274,56,16,0,"&Abbrechen",0,0
   DIALOG "TERLISTE",req%
   REMOVE DIALOG "TERLISTE"
   IF req% = 1 THEN 
     ok% = 1
     _cuaq% = VAL ( RIGHT$ (Auswahl$(0),6))
     lastTermin% = _cuaq%
   END IF 
   MENU 6,3,1
 ELSE 
   SET STATUS "Bereit"
   CALL Fehler("Es wurden keine unerledigten Termine gefunden!","")
   MENU 6,3,0
   lastTermin% = 0
 END IF 
 SET STATUS "Bereit"
 cuaq% = _cuaq%
 IF ok% = 1 THEN 
   REM EXECUTE "SELECT WHERE " + cfilt$
   REM SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
   REM 071098
   REM SELECT FIRST 
 END IF 
 CALL AQButtUpdate()
 SELECT FORM KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 MOUSE ON 
 END SUB 
 



SUB AQTerminePO()
 SET STATUS "Auflistung der Termine"
 MOUSE OFF 
 cfilt$ = WHERE 
 cuaq% = codeaq.GAkquiDat$
 codeakma$ = CodeAKMA.GAkquiDat$
 IF ( MOD ("") OR NEW ("")) AND notiz.GAkquiDat$ <> "" THEN CALL FStore(GAkquiDat$)
 zwi33% = TODAY 
 aqnr% = cuaq%
 SELECT WHERE FILE GAkquiDat$
 aqnr% = 0
 IF bezug% = 1 THEN 
   REQUEST "kommende Termine (Mitarbeiterbezogen)","lfd.Nr, Termin, Adresse",25,req%,aqnr%,72,codeaq,termin,nachname,notiz INDEX termin WHERE codema = _vcodema% AND termin >= zwi33% AND erledigt_termin <> "j"
 END IF 
 IF bezug% = 2 THEN 
   REQUEST "kommende Termine (Adressenbezogen)","lfd.Nr, Termin, Adresse",25,req%,aqnr%,72,codeaq,termin,nachname,notiz INDEX termin WHERE termin >= zwi33% AND codeku = knr% AND erledigt_Termin <> "j"
 END IF 
 IF bezug% = 3 THEN 
   REQUEST "kommende Termine (Aktionsbezogen)","lfd.Nr, Termin, Adresse",25,req%,aqnr%,72,codeaq,termin,nachname,notiz INDEX termin WHERE termin >= zwi33% AND codeak = cuak% AND erledigt_Termin <> "j"
 END IF 
 IF bezug% = 4 THEN 
   REQUEST "kommende Termine (Mitarbeiter+Aktionsbezogen)","lfd.Nr, Termin, Adresse",25,req%,aqnr%,72,codeaq,termin,nachname,notiz INDEX termin WHERE termin >= zwi33% AND CodeAKMA.GAkquiDat$ = codeakma$ AND erledigt_Termin <> "j"
 END IF 
 IF req% = 1 THEN cuaq% = aqnr%
 REM SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
 EXECUTE "SELECT WHERE " + cfilt$
             REM 071098
             SELECT FIRST 
 SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
 FORM 
 
 CALL AQButtUpdate()
 MOUSE ON 
 END SUB 
 
SUB AQTerminListe()
 SET STATUS "Auflistung aller Termine"
 MOUSE OFF 
 cfilt$ = WHERE 
 cuaq% = codeaq.GAkquiDat$
 IF ( MOD ("") OR NEW ("")) AND notiz.GAkquiDat$ <> "" THEN CALL FStore(GAkquiDat$)
 REM aqnr% = cuaq%
 aqnr% = 0
 codema% = codema.GAkquiDat$
 knr% = CodeKU.GAkquiDat$
 cuak% = CodeAK.GAkquiDat$
 codeakma$ = CodeAKMA.GAkquiDat$
 SELECT WHERE FILE GAkquiDat$
 IF bezug% = 1 THEN 
   REQUEST "Termine (Mitarbeiterbezogen)","lfd.Nr, Termin, Adresse",25,req%,aqnr%,72,codeaq,termin,nachname,notiz INDEX termin WHERE codema = codema%
 END IF 
 IF bezug% = 2 THEN 
   REQUEST "Termine (Adressenbezogen)","lfd.Nr, Termin, Adresse",25,req%,aqnr%,72,codeaq,termin,notiz INDEX termin WHERE codeku = knr%
 END IF 
 IF bezug% = 3 THEN 
   REQUEST "Termine (Aktionsbezogen)","lfd.Nr, Termin, Adresse",25,req%,aqnr%,72,codeaq,termin,nachname,notiz INDEX termin WHERE codeak = cuak%
 END IF 
  IF bezug% = 4 THEN 
   REQUEST "Termine (Mitarbeiter+Aktionsbezogen)","lfd.Nr, Termin, Adresse",25,req%,aqnr%,72,codeaq,termin,nachname,notiz INDEX termin WHERE CodeAKMA.GAkquiDat$ = codeakma$
 END IF 
 
 IF req% = 1 THEN cuaq% = aqnr%
 SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
 EXECUTE "SELECT WHERE " + cfilt$
             REM 071098
             REM SELECT FIRST 
 CALL AQButtUpdate()
 MOUSE ON 
 END SUB 
 
  
 
 
 
 ' Test auf Eingabefehler bei Termin
 ' ===========================================================================
 
 
SUB AQTerminTest()
 IF ABS ( TODAY - DAYS (termin.GAkquiDat$)) > 181 THEN 
   REM CALL Fehler("Hinweis:","Der eingegebene Termin entspricht einer Zeitspanne > 6 Monate")
 END IF 
 END SUB 
  
 
 ' Test auf Eingabefehler bei Termin
 ' ===========================================================================
 
SUB AQDatumTest()
 IF ABS ( TODAY - DAYS (datum.GAkquiDat$)) > 181 THEN 
   REM CALL Fehler("Hinweis:","Das eingegebene Datum entspricht einer Zeitspanne > 6 Monate")
 END IF 
 END SUB 
 
 
 ' Registrierung von Terminen
 ' ===========================================================================
  
SUB AQRegister()
 cfile$ = FILE 
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 DIM Aktionen$(300)
 FILE "AKTIONEN"
 INDEX CodeAK.Aktionen
 SELECT FIRST FILE "AKTIONEN" INDEX CodeAK.Aktionen
 a% = - 1
 WHILE NOT EOF ("AKTIONEN")
   IF noAnzeige.Aktionen LIKE "J" THEN 
   ELSE 
     a% = a% + 1
     Aktionen$(a%) = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
   END IF 
   SELECT NEXT FILE "AKTIONEN" INDEX CodeAK.Aktionen
 WEND 
 SELECT FIRST FILE "AKTIONEN" INDEX CodeAK.Aktionen
 SELECT KEY 1 FILE "AKTIONEN" INDEX CodeAK.Aktionen
 Aktion$ = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
 DIM Mitarbeiter$(300)
 FILE "SUPERVIS"
 INDEX CodeMA.supervis
 SELECT FIRST FILE "SUPERVIS" INDEX CodeMA.supervis
 
 a% = - 1
 WHILE NOT EOF ("SUPERVIS")
   IF NoAnzeigeJN.supervis LIKE "j" THEN 
   ELSE 
     a% = a% + 1
     Mitarbeiter$(a%) = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
   END IF 
   SELECT NEXT FILE "SUPERVIS" INDEX CodeMA.supervis
 WEND 
 SELECT FIRST FILE "SUPERVIS" INDEX CodeMA.supervis
 SELECT KEY vcodema% FILE "SUPERVIS" INDEX CodeMA.supervis
 MANachname$ = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
 datum$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 Termin$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 Nachname$ = Nachname.ADRESSEN
 Vorname$ = Vorname.ADRESSEN
 Stra·e$ = Stra·e.ADRESSEN
 Ort$ = PLZ.ADRESSEN + " " + Ort.ADRESSEN
 tmpku% = CodeKU.ADRESSEN
 REM RNotiz$ = ""
    DIM dlg AS Dialog
    DIM control AS DialogControl
    prj11$ = "Projekt"
 ON ERROR GOTO dokt140420001 
   GOTO dokt140420002
dokt140420001: 
   CALL Fehler("Die Werte fÅr Datum oder Uhrzeit scheinen falsch zu sein!","Bitte prÅfen")
dokt140420002: 
    Superbase.Dialogs.Add("AQREGISTER")
    SET dlg = Superbase.Dialogs.AQREGISTER
    dlg.Move(0,0,354,235)
    dlg.Caption = title$
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(5,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Datum$"
 
    SET control = dlg.Add("DialogTextBox2","DialogTextBox")
    control.Move(49,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Termin$"
 
    SET control = dlg.Add("DialogTextBox3","DialogTextBox")
    control.Move(93,8,25,12)
    control.MaxLength = 5
    control.TextBinding = "Zeit$"
 
    SET control = dlg.Add("DialogTextBox4","DialogTextBox")
    control.Move(130,8,24,12)
    control.MaxLength = 5
    control.TextBinding = "Dauer$"
 
    SET control = dlg.Add("DialogTextBox6","DialogTextBox")
    control.Move(185,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "VTermin$"
 
    SET control = dlg.Add("DialogTextBox7","DialogTextBox")
    control.Move(235,8,25,12)
    control.MaxLength = 5
    control.TextBinding = "VZeit$"
 
    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(130,22,28,11)
    control.Caption = "Dauer"
 
    SET control = dlg.Add("DialogLabel19","DialogLabel")
    control.Move(185,22,45,13)
    control.Caption = "Vorlagetermin"
 
    SET control = dlg.Add("DialogLabel20","DialogLabel")
    control.Move(235,22,54,13)
    control.Caption = "Vorlagezeit"
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(5,22,32,13)
    control.Caption = "Datum"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(49,22,28,13)
    control.Caption = "Termin"
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(93,22,28,13)
    control.Caption = "Uhrzeit"
 
    SET control = dlg.Add("DialogLabel5","DialogLabel")
    control.Move(5,36,123,12)
    control.Caption = "Zuordnung zur Aktion"
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(186,44,160,81)
    control.Caption = "Adresse"
 
    SET control = dlg.Add("DialogLabel8","DialogLabel")
    control.Move(190,59,39,12)
    control.Caption = "Nachname"
 
    SET control = dlg.Add("DialogLabel14","DialogLabel")
    control.Move(230,59,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Nachname$"
 
    SET control = dlg.Add("DialogLabel9","DialogLabel")
    control.Move(190,69,32,12)
    control.Caption = "Vorname"
 
    SET control = dlg.Add("DialogLabel15","DialogLabel")
    control.Move(230,69,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Vorname$"
 
    SET control = dlg.Add("DialogLabel10","DialogLabel")
    control.Move(190,79,24,12)
    control.Caption = "Stra·e"
 
    SET control = dlg.Add("DialogLabel16","DialogLabel")
    control.Move(230,79,116,12)
    control.CaptionBinding = "Stra·e$"
 
    SET control = dlg.Add("DialogLabel11","DialogLabel")
    control.Move(190,89,19,12)
    control.Caption = "Ort"
 
    SET control = dlg.Add("DialogLabel17","DialogLabel")
    control.Move(230,89,116,12)
    control.CaptionBinding = "Ort$"
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(190,104,152,14)
    control.Caption = "Auswahl"
    control.ReturnValue = 2
 
    SET control = dlg.Add("DialogComboBox1","DialogComboBox")
    control.Move(5,46,169,183)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Aktionen$","Aktion$")
 
    SET control = dlg.Add("DialogLabel6","DialogLabel")
    control.Move(5,65,139,8)
    control.Caption = "Eintragen in den Kalender des Mitarbeiters"
 
    SET control = dlg.Add("DialogComboBox2","DialogComboBox")
    control.Move(5,76,169,190)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Mitarbeiter$","MANachname$")
 
    SET control = dlg.Add("DialogLabel7","DialogLabel")
    control.Move(5,96,139,8)
    control.Caption = "Notiz"
 
    SET control = dlg.Add("DialogTextBox5","DialogTextBox")
    control.Move(5,105,169,128)
    control.MultiLine = 1
    control.ScrollBars = 2
    control.MaxLength = 4000
    control.TextBinding = "RNotiz$"
 
    SET control = dlg.Add("DialogLabel12","DialogLabel")
    control.Move(186,133,162,29)
    control.Caption = "Wenn Sie diesen Termin nur zu Informationszwecken aufnehmen mîchten, markieren Sie bitte die Option 'Termin erledigt'."
 
    SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
    control.Move(186,165,76,12)
    control.Caption = "Termin erledigt"
    control.Bind("Terminerl$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
 
    SET control = dlg.Add("DialogLabel13","DialogLabel")
    control.Move(186,178,159,37)
    control.Caption = "Nach BetÑtigung der SchaltflÑche 'OK' wird der Eintrag in der Termindatei erzeugt."
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(186,217,78,15)
    control.Caption = "&OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
    control.Move(268,217,78,15)
    control.Caption = "&Abbrechen"
    control.ReturnValue = 0
    control.Cancel = 1
 
    SET control = dlg.Add("DialogCommandButton4","DialogCommandButton")
    control.Move(190,200,152,14)
    control.Caption = prj11$
    control.ReturnValue = 3
 



 _ok% = 0
 WHILE _ok% = 0
   DIALOG "AQREGISTER",req%
   IF req% = 2 THEN 
     kunr% = ADRSuche%(0)
     IF kunr% <> 0 THEN 
       SELECT KEY kunr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
       Nachname$ = Nachname.ADRESSEN
       Vorname$ = Vorname.ADRESSEN
       Stra·e$ = Stra·e.ADRESSEN
       Ort$ = PLZ.ADRESSEN + " " + Ort.ADRESSEN
       tmpku% = CodeKU.ADRESSEN
     END IF 
   END IF 
   IF req% = 3 THEN 
     nachfolger% = PRJSuche%(0)
     IF nachfolger% <> 0 THEN 
       SELECT KEY nachfolger% FILE "project" INDEX codepr.project
       codeprdok% = nachfolger%
       Projektdok$ = LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
       prj11$ = LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
     END IF 
     REMOVE DIALOG "AQREGISTER"
     GOTO dokt140420002
   END IF 
   IF req% = 0 THEN _ok% = 2
   IF req% = 1 THEN _ok% = 1
 WEND 
 REMOVE DIALOG "AQREGISTER"
 IF _ok% = 1 THEN 
   FILE GAkquiDat$
   BLANK 
   cuaq% = SER (GAkquiDat$,1)
   codeaq.GAkquiDat$ = cuaq%
   codeKU.GAkquiDat$ = tmpku%
   codeak% = VAL ( MID$ (Aktion$, LEN (Aktion$) - 6,6))
   codema% = VAL ( MID$ (MANachname$, LEN (MANachname$) - 6,6))
   CodeAK.GAkquiDat$ = VAL ( MID$ (Aktion$, LEN (Aktion$) - 6,6))
   CodeMA.GAkquiDat$ = VAL ( MID$ (MANachname$, LEN (MANachname$) - 6,6))
   SELECT KEY tmpku% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
   nachname.GAkquiDat$ = nachname.adressen
   Wertung.GAkquiDat$ = 0
   Datum.GAkquiDat$ = Datum$
   dauer.GAkquiDat$ = VAL (dauer$)
   Uhrzeit.GAkquiDat$ = zeit$
   CodeDOK.GAkquiDat$ = 0
   ErDatum.GAkquiDat$ = VTermin$
   ErZeit.GAkquiDat$ = VZeit$
   SELECT KEY codema.GAkquiDat$ FILE "supervis" INDEX codema.supervis
   Bearbeiter.GAkquiDat$ = nachname.supervis
   IF PROJECTJN$ = "TRUE" THEN 
     codepr.GAkquiDat$ = codeprdok%
     projekt.GAkquiDat$ = projektdok$
     codeprdok% = 0
     projektdok$ = ""
   END IF 
   notiz.GAkquiDat$ = rnotiz$
   termin.GAkquiDat$ = Termin$
   erledigt_Termin.GAkquiDat$ = Terminerl$
   CALL FStore(GAkquiDat$)
 END IF 
 FILE cfile$
 ON ERROR GOTO ErrorHandler
 MOUSE ON 
 END SUB 
 
 
 
 '      ****************************************
 '      ** Anschreiben / Dokumentenverwaltung **
 '      ****************************************
 
SUB DOKUMENT(Gruppe$,link%)
 Gsuna1$ = ""
 Gsuna2$ = ""
 IF disabled%("DOKUMENT") THEN END SUB 
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 SET STATUS "Dokumentenverwaltung"
 _OK% = 1
 REM 261198
 DIM Gruppe$(1)
 Gsuna1$ = "":GSuna2$ = ""
 CREATE DIALOG "ANSCHR",0,0,380,293,title$,"MS Sans Serif",8
 ADD DIALOG "ANSCHR",4,0,0,379,293,0,""
 ADD DIALOG "ANSCHR",9,6,14,20,22,2
 ADD DIALOG "ANSCHR",5,37,14,277,11,0,"Bitte markieren Sie die Dokumentengruppe, in der Sie arbeiten wollen und wÑhlen"
 ADD DIALOG "ANSCHR",5,37,25,276,11,0,"Sie anschlie·end die Art der Bearbeitung."
 ADD DIALOG "ANSCHR",5,38,44,28,10,0,"&Gruppe"
 ADD DIALOG "ANSCHR",7,37,54,147,229,2,2,DOKGruppen$,Gruppe$,Gruppe$
 ADD DIALOG "ANSCHR",1,193,54,160,15,0,"&neues Dokument (ohne Vorlage)",1,1
 ADD DIALOG "ANSCHR",1,193,70,160,15,0,"neues Dokument (mit &Vorlage)",2,1
 ADD DIALOG "ANSCHR",1,193,86,160,15,0,"neues Dokument (Vorlage von anderer Adresse)",4,1
 ADD DIALOG "ANSCHR",1,193,102,160,15,0,"bestehendes Dokument &bearbeiten",3,1
 ADD DIALOG "ANSCHR",1,193,118,160,15,0,"freie Vorlage verwenden",5,1
 ADD DIALOG "ANSCHR",2,193,134,160,10,0,"Vorlage vom aktuellen Kunden","j","n",Kontrollfeld$
 REM 301296
 REM ADD DIALOG "ANSCHR",1,193,114,120,15,0,"Dokument &suchen",4,1
 ADD DIALOG "ANSCHR",1,193,268,160,15,0,"&Abbruch",0,0
 DIALOG "ANSCHR",req%
 REMOVE DIALOG "ANSCHR"
 DokVor$ = Kontrollfeld$
 SELECT CASE req%
 CASE 0
   adrser% = 0
   maser% = 0
   gesser% = 0
   reser% = 0
   mahnser% = 0
 CASE 1
   textdatei% = DOKNeu%(0,Gruppe$(0),link%)
   IF textdatei% <> - 1 THEN CALL DOKBearbeiten(textdatei%,1)
 CASE 2
   IF DokVor$ = "j" THEN 
     codeku% = codeku.adressen
     vorlage% = DOKAuswahl%(Gruppe$(0),link%,1)
   ELSE 
     REM vorlage% = DOKAuswahl%(Gruppe$(0),0,1)
     prompt$ = gruppe$(0)
     REM **********************************************************************
     CREATE DIALOG "DOK",0,0,300,338,title$,"MS Sans Serif",8
     ADD DIALOG "DOK",9,2,4,22,23,2
     ADD DIALOG "DOK",5,26,11,236,9,0,"WÑhlen Sie eine Dokumentengruppe aus:"
     ADD DIALOG "DOK",7,25,25,263,250,2,2,DOKGruppen$,Auswahl$,prompt$
     ADD DIALOG "DOK",6,25,300,98,11,128,0,Gsuna1$,50
     ADD DIALOG "DOK",2,130,300,28,10,0,"UND","J","N",Gund$
     ADD DIALOG "DOK",6,160,300,108,11,128,0,Gsuna2$,50
     ADD DIALOG "DOK",5,25,270,250,30,0,"Geben Sie hier bis zu 2 Bestandteile des Dokumentennamens ein, den Sie suchen: Die Begriffe kînne mit UND verknÅpft werden. Die Eingabe von Suchbegriffen ist optional!"
     ADD DIALOG "DOK",1,106,317,48,16,1,"&Weiter",1,1
     ADD DIALOG "DOK",1,158,317,48,16,0,"&Abbruch",0,0
     ADD DIALOG "DOK",1,210,317,48,16,0,"Alle",2,2
     DIALOG "DOK",req%
     REMOVE DIALOG "DOK"
     IF req% > 0 THEN 
       vorlage% = DOKAuswahl%(Auswahl$(0),0,req%)
     END IF 
     REM **********************************************************************
   END IF 
   IF vorlage% <> - 1 THEN 
     textdatei% = DOKNeu%(vorlage%,Gruppe$(0),link%)
     IF textdatei% <> - 1 THEN CALL DOKBearbeiten(textdatei%,1)
   END IF 
 CASE 3
   textdatei% = DOKAuswahl%(Gruppe$(0),link%,1)
   IF textdatei% <> - 1 THEN CALL DOKBearbeiten(textdatei%,1)
 CASE 4
   REM Dokument suchen
   cuknr% = codeku.adressen
   adr% = ADRSuche%(0)
   IF adr% <> 0 THEN 
     REM vorlage% = DOKAuswahl%(Gruppe$(0),adr%,1)
     REM **********************************************************************
     CREATE DIALOG "DOK",0,0,300,338,title$,"MS Sans Serif",8
     ADD DIALOG "DOK",9,2,4,22,23,2
     ADD DIALOG "DOK",5,26,11,236,9,0,"WÑhlen Sie eine Dokumentengruppe aus:"
     ADD DIALOG "DOK",7,25,25,263,250,2,2,DOKGruppen$,Auswahl$,Gruppe.dokument
     ADD DIALOG "DOK",6,25,300,98,11,128,0,Gsuna1$,50
     ADD DIALOG "DOK",2,130,300,28,10,0,"UND","J","N",Gund$
     ADD DIALOG "DOK",6,160,300,108,11,128,0,Gsuna2$,50
     ADD DIALOG "DOK",5,25,270,250,30,0,"Geben Sie hier bis zu 2 Bestandteile des Dokumentennamens ein, den Sie suchen: Die Begriffe kînne mit UND verknÅpft werden. Die Eingabe von Suchbegriffen ist optional!"
     ADD DIALOG "DOK",1,106,317,48,16,1,"&Weiter",1,1
     ADD DIALOG "DOK",1,158,317,48,16,0,"&Abbruch",0,0
     ADD DIALOG "DOK",1,210,317,48,16,0,"Alle",2,2
     DIALOG "DOK",req%
     REMOVE DIALOG "DOK"
     IF req% > 0 THEN 
       vorlage% = DOKAuswahl%(Auswahl$(0),adr%,req%)
     END IF 
     REM **********************************************************************
   END IF 
     IF vorlage% <> - 1 THEN 
       SELECT FORM KEY cuknr% FILE "Adressen" INDEX codeku.adressen
       textdatei% = DOKNeu%(vorlage%,Gruppe$(0),link%)
       IF textdatei% <> - 1 THEN CALL DOKBearbeiten(textdatei%,1)
     END IF 
   END IF 
   adr% = cuknr%
   SELECT FORM KEY adr% FILE "Adressen" INDEX codeku.adressen
   cuknr% = codeku.adressen
 CASE 5
   REM freie vorlage
   vorlage% = 0
   vorlage% = GetFreeVorl%()
   IF vorlage% <> 0 THEN 
     textdatei% = DOKNeu%(vorlage%,Gruppe$(0),link%)
     IF textdatei% <> - 1 THEN CALL DOKBearbeiten(textdatei%,1)
   END IF 
 END SELECT 
 END SUB 
 
 
 ' Aufruf der allgemeinen Dokumentenverwaltung
 ' ===========================================================================
 
SUB DOKallg()
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DOKUMENT("allgemeine Schreiben",0)
 END SUB 
 
 
 
 ' Dokumenten-/Vorlagenauswahl
 ' ===========================================================================
 ' Zweck:       Auswahl eines Dokumentes zur Bearbeitung
 ' Nutzung:     x%=DOKAuswahl%(filter$,linkfield%)
 '              Åbergibt Dokumentennummer
 ' Hinweis:     bei RÅckgabewert -1 wurde die Auswahl abgebrochen
 ' ===========================================================================
 
FUNCTION DOKAuswahl%(filter$,linkfield%,alle%)
  IF alle% = 1 THEN alle$ = "n"
  IF alle% = 2 THEN alle$ = "j"
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 SET STATUS "Dokumenten-/Vorlagenauswahl"
 cfile$ = FILE 
 _cuko% = CodeKU.Adressen
 
 DIM DokList$(25000)
 REM 261198-1
a240120051: 
 FILE "Dokument"
 INDEX Gruppe.DOKUMENT
 SELECT WHERE FILE "dokument"
 SELECT FIRST 
 IF filter$ LIKE "<ALLE DOKUMENTENGRUPPEN>" THEN 
   filter$ = ""
   FILE "Dokument"
   INDEX codedok.DOKUMENT
   SELECT WHERE FILE "dokument"
   SELECT FIRST 
 
 ELSE 
   SELECT FIRST FILE "DOKUMENT" INDEX Gruppe.DOKUMENT
   SELECT KEY filter$ FILE "DOKUMENT" INDEX Gruppe.DOKUMENT
   IF linkfield% > 0 THEN 
     FILE "Dokument"
     INDEX QuickCodekuGru.dokument
     filt$ = STR$ (linkfield%,"000000") + UCASE$ (filter$)
     SELECT FIRST FILE "DOKUMENT" INDEX QuickCodekuGru.dokument
     SELECT KEY filt$ FILE "DOKUMENT" INDEX QuickCodekuGru.dokument
   END IF 
 END IF 
 a% = 0
 
      IF GCODIE% = - 1 THEN 
        CALL SearchInitDo1("dokument")
      END IF 

   MOUSE OFF 
   IF filter$ <> "" AND linkfield% > 0 THEN WHILE NOT EOF ("DOKUMENT") AND QuickCodekuGru.dokument LIKE filt$
   IF filter$ <> "" AND linkfield% = 0 THEN WHILE NOT EOF ("DOKUMENT") AND Gruppe.DOKUMENT LIKE filter$
   IF filter$ = "" THEN WHILE NOT EOF ("DOKUMENT")
     ok% = - 1
     IF alle$ = "n" THEN 
       IF novi1.dokument = 1 THEN ok% = 0
     END IF 
     IF Gsuna1$ <> "" OR Gsuna2$ <> "" THEN 
       IF Gsuna1$ <> "" AND Gsuna2$ <> "" THEN 
         IF Gund$ = "J" THEN 
           REM beide suchbegriffe ausgefÅllt und mit UND verknÅpft
           IF dokument.dokument LIKE "*" + Gsuna1$ + "*" AND dokument.dokument LIKE "*" + Gsuna2$ + "*" THEN 
           ELSE 
             ok% = 0
           END IF 
         ELSE 
           IF dokument.dokument LIKE "*" + Gsuna1$ + "*" OR dokument.dokument LIKE "*" + Gsuna2$ + "*" THEN 
           ELSE 
             ok% = 0
           END IF 
         END IF 
       ELSE 
         IF Gsuna1$ <> "" THEN 
           IF dokument.dokument LIKE "*" + Gsuna1$ + "*" THEN 
           ELSE 
             ok% = 0
           END IF 
         END IF 
         IF Gsuna2$ <> "" THEN 
           IF dokument.dokument LIKE "*" + Gsuna2$ + "*" THEN 
           ELSE 
             ok% = 0
           END IF 
         END IF 
       END IF 
     END IF 
     IF ok% = - 1 THEN 
       IF filter$ <> "" THEN 
         IF Gruppe.DOKUMENT LIKE filter$ AND (linkfield% = 0 OR link.DOKUMENT = linkfield%) OR codeku.dokument = linkfield% THEN 
           IF CodeKU.DOKUMENT <> 0 THEN 
             SELECT KEY CodeKU.DOKUMENT FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
             Name$ = Nachname.ADRESSEN + ", " + Vorname.ADRESSEN
           ELSE 
             Name$ = "(ohne Zuordnung)"
           END IF 
           IF GCODIE% = - 1 THEN CALL SearchVorbDO1("dokument")
           DokList$(a%) = Dokument.DOKUMENT + ", " + LTRIM$ ( DATE$ (erstellt_am.DOKUMENT,"0d.mm.yyyy")) + "/" + LTRIM$ ( DATE$ (letzte_Bearbeit.DOKUMENT,"0d.mm.yyyy")) + ", " + Name$ + SPACE$ (100) + STR$ (CodeDOK.DOKUMENT,"000000")
           a% = a% + 1
         END IF 
       ELSE 
         IF (linkfield% = 0 OR link.DOKUMENT = linkfield%) OR codeku.dokument = linkfield% THEN 
           IF CodeKU.DOKUMENT <> 0 THEN 
             SELECT KEY CodeKU.DOKUMENT FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
             Name$ = Nachname.ADRESSEN + ", " + Vorname.ADRESSEN
           ELSE 
             Name$ = "(ohne Zuordnung)"
           END IF 
           IF GCODIE% = - 1 THEN CALL SearchVorbDO1("dokument")
           DokList$(a%) = Dokument.DOKUMENT + ", " + LTRIM$ ( DATE$ (erstellt_am.DOKUMENT,"0d.mm.yyyy")) + "/" + LTRIM$ ( DATE$ (letzte_Bearbeit.DOKUMENT,"0d.mm.yyyy")) + ", " + Name$ + SPACE$ (100) + STR$ (CodeDOK.DOKUMENT,"000000")
           a% = a% + 1
         END IF 
       END IF 
     END IF 
     SET STATUS STR$ (a%,",9999999") + " gefunden " + Dokument.DOKUMENT
     SELECT NEXT FILE "dokument"
   WEND 
 MOUSE ON 
 DOKAuswahl% = - 1
 IF a% <> 0 THEN 
   IF GCODIE% = - 1 THEN 
     c$ = "aa"
     req3% = 0
     DOKAuswahl% = 0
     REM CALL Fehler("","")
     req3% = CALL ("_SearchShow",c$)
     IF VAL (c$) <> 0 THEN 
       DOKAuswahl% = VAL (c$)
       ok% = 0
       SET STATUS "Dokument gefunden..."
     END IF 
     IF VAL (c$) = 0 AND req3% = 33 THEN 
       ret% = CALL ("_SearchClose")
       GCODieRuf% = 0
       GCODieRuf1% = 0
       GCODieRuf2% = 0
       alle$ = "j"
       req3% = 0
       GOTO a240120051
     END IF 
   ELSE 
     CREATE DIALOG "DOK",0,0,426,304,title$,"MS Sans Serif",8
     ADD DIALOG "DOK",4,0,0,426,280,0,""
     ADD DIALOG "DOK",5,40,12,160,10,0,"Bitte wÑhlen Sie das gewÅnschte Dokument aus:"
     ADD DIALOG "DOK",9,6,14,22,22,2
     ADD DIALOG "DOK",5,40,24,160,10,0,"Bezeichnung, erstellt/bearbeitet, Adressat"
     ADD DIALOG "DOK",7,19,35,400,239,2,1,DokList$,Auswahl$
     ADD DIALOG "DOK",1,210,287,55,15,0,"&Abbrechen",0,0
     ADD DIALOG "DOK",1,154,287,55,15,1,"&OK",1,1
     DIALOG "DOK",req%
     REMOVE DIALOG "DOK"
     IF req% = 1 THEN 
       DOKAuswahl% = VAL ( RIGHT$ (Auswahl$(0),6))
     END IF 
   END IF 
 ELSE 
   CALL Fehler("Keine Dokumente in dieser Gruppe gefunden!","")
 END IF 
 SELECT KEY _cuko% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 FILE cfile$
 END FUNCTION 
 
  
 ' Dokument neu anlegen
 ' ===========================================================================
 ' Zweck:       legt neues Dokumente an
 ' Nutzung:     x%=DOKNeu%(vorlage%,Gruppe$,Linkfield%)
 '              vorlage%        =Nummer der Vorlage in der Dokumentendatei
 ' Hinweis:     bei RÅckgabewert -1 wurde die Auswahl abgebrochen
 '              die Zieldatei hat das gleiche Format wie die Vorlage
 ' ===========================================================================
 ' 18.07.93    - Texte werden nach Gruppen abgelegt
 ' 03.11.95    - Fehlerunterbindung bei nicht gefundener Vorlage, die im Ab-
 '               schnitt [Vorlagen] definiert wurde
 
FUNCTION DOKNeu%(vorlage%,Gruppe$,Linkfield%)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 cfile$ = FILE 
 REM _WPSuffix$ = ReadINI$("SYSTEM","WPSuffix")
 IF _WPSuffix$ LIKE "leer" THEN 
   CALL Fehler("Keine Textverarbeitung ausgewÑhlt!","Bitte starten Sie Åber den Hauptbildschirm die Funktion 'Einstellungen' und wÑhlen Sie dort eine Textverarbeitung aus.")
   DOKNeu% = - 1
 ELSE 
   IF vorlage% = 0 THEN 
     IF wxp$ = "TRUE" THEN 
       _vorlage$ = ReadConfig$("VORLAGENWordXP",Gruppe$)
     END IF 
     IF w97$ <> "TRUE" AND wxp$ <> "TRUE" THEN 
       _vorlage$ = ReadConfig$("VORLAGEN",Gruppe$)
     ELSE 
       IF wxp$ <> "TRUE" THEN 
         _vorlage$ = ReadConfig$("VORLAGENWord97",Gruppe$)
       END IF 
     END IF 
     IF _vorlage$ <> "leer" THEN 
       REM textvorlage$ = ReadConfig$("DOKUMENTE", FN ansi(Gruppe$)) + _vorlage$
       textvorlage$ = ReadConfig$("DOKUMENTE", FN ansi(Gruppe$))
       IF LEFT$ (textvorlage$,1) = "#" THEN 
         tt1$ = MID$ (textvorlage$,2)
         textvorlage$ = UCASE$ (tt1$)
       ELSE 
         pfad$ = MID$ ( UCASE$ (_netpath$),3)
         l1% = 0
         l1% = LEN (pfad$)
         pos% = 0
         pos% = INSTR (textvorlage$,pfad$)
         IF pos% > 0 THEN 
           dateiname1$ = MID$ (textvorlage$,pos% + l1%)
           textvorlage$ = dateiname1$
           IF RIGHT$ (textvorlage$,1) <> "\" THEN textvorlage$ = textvorlage$ + "\"
           IF LEFT$ (textvorlage$,1) = "\" THEN textvorlage$ = MID$ (textvorlage$,2)
           CALL WriteConfig("DOKUMENTE", FN ansi(Gruppe$),"#" + textvorlage$)
         ELSE 
           t1% = INSTR (4,textvorlage$,"\")
           zw1$ = MID$ (textvorlage$,t1%)
           textvorlage$ = zw1$
           IF RIGHT$ (textvorlage$,1) <> "\" THEN textvorlage$ = textvorlage$ + "\"
           IF LEFT$ (textvorlage$,1) = "\" THEN textvorlage$ = MID$ (textvorlage$,2)
           CALL WriteConfig("DOKUMENTE", FN ansi(Gruppe$),"#" + textvorlage$)
         END IF 
       END IF 
       IF RIGHT$ (textvorlage$,1) <> "\" THEN textvorlage$ = textvorlage$ + "\"
       IF LEFT$ (textvorlage$,1) = "\" THEN textvorlage$ = MID$ (textvorlage$,2)
       textvorlage$ = _netpath$ + textvorlage$ + _vorlage$
       IF NOT EXISTS (textvorlage$) THEN 
         REM 081098
         REM CALL Fehler("ADRSER","")
         IF w97$ <> "TRUE" THEN textvorlage$ = _netpath$ + "OFFICE\TEXT\0." + _WPSuffix$
         IF w97$ = "TRUE" THEN 
           IF adrser% = 1 THEN 
             REM REQUEST "Mîchten Sie die dBASE-Datei als Serienbrief nutzen -> JA oder","die EXCEL-Datei -> NEIN",130,req%
             req% = SelSerZiel%()
             IF req% = 1 THEN 
               textvorlage$ = _netpath$ + "OFFICE\TEXT\ADRSER1.DOC"
             ELSE 
               textvorlage$ = _netpath$ + "OFFICE\TEXT\ADRSER1x.DOC"
             END IF 
           ELSE 
             IF gesser% = 1 THEN 
               REM REQUEST "Mîchten Sie die dBASE-Datei als Serienbrief nutzen -> JA oder","die EXCEL-Datei -> NEIN",130,req%
               req% = SelSerZiel%()
               IF req% = 1 THEN 
                 textvorlage$ = _netpath$ + "OFFICE\TEXT\GESSER1.DOC"
               ELSE 
                 textvorlage$ = _netpath$ + "OFFICE\TEXT\GESSER1x.DOC"
               END IF 
             ELSE 
               IF maser% = 1 THEN 
                 REM REQUEST "Mîchten Sie die dBASE-Datei als Serienbrief nutzen -> JA oder","die EXCEL-Datei -> NEIN",130,req%
                 req% = SelSerZiel%()
                 IF req% = 1 THEN 
                   textvorlage$ = _netpath$ + "OFFICE\TEXT\MASER1.DOC"
                 ELSE 
                   textvorlage$ = _netpath$ + "OFFICE\TEXT\MASER1x.DOC"
                 END IF 
               ELSE 
                 IF reser% = 1 THEN 
                   REM REQUEST "Mîchten Sie die dBASE-Datei als Serienbrief nutzen -> JA oder","die EXCEL-Datei -> NEIN",130,req%
                   req% = SelSerZiel%()
                   IF req% = 1 THEN 
                     textvorlage$ = _netpath$ + "OFFICE\TEXT\RECHDRU1.DOC"
                   ELSE 
                     textvorlage$ = _netpath$ + "OFFICE\TEXT\RECHDR1x.DOC"
                   END IF 
                 ELSE 
                   IF mahnSER% = 1 THEN 
                     REM REQUEST "Mîchten Sie die dBASE-Datei als Serienbrief nutzen -> JA oder","die EXCEL-Datei -> NEIN",130,req%
                     req% = SelSerZiel%()
                     IF req% = 1 THEN 
                       textvorlage$ = _netpath$ + "OFFICE\TEXT\MahnSer.DOC"
                     ELSE 
                       textvorlage$ = _netpath$ + "OFFICE\TEXT\MahnSerX.DOC"
                     END IF 
                   ELSE 
                     textvorlage$ = _netpath$ + "OFFICE\TEXT\0w97." + _WPSuffix$
                   END IF 
                 END IF 
               END IF 
             END IF 
           END IF 
         END IF 
       END IF 
     ELSE 
       IF w97$ <> "TRUE" THEN textvorlage$ = _netpath$ + "OFFICE\TEXT\0." + _WPSuffix$
         IF w97$ = "TRUE" THEN 
           IF adrser% = 1 THEN 
             REM REQUEST "Mîchten Sie die dBASE-Datei als Serienbrief nutzen -> JA oder","die EXCEL-Datei -> NEIN",130,req%
             req% = SelSerZiel%()
             IF req% = 1 THEN 
               textvorlage$ = _netpath$ + "OFFICE\TEXT\ADRSER1.DOC"
             ELSE 
               textvorlage$ = _netpath$ + "OFFICE\TEXT\ADRSER1x.DOC"
             END IF 
           ELSE 
             IF gesser% = 1 THEN 
               REM REQUEST "Mîchten Sie die dBASE-Datei als Serienbrief nutzen -> JA oder","die EXCEL-Datei -> NEIN",130,req%
               req% = SelSerZiel%()
               IF req% = 1 THEN 
                 textvorlage$ = _netpath$ + "OFFICE\TEXT\GESSER1.DOC"
               ELSE 
                 textvorlage$ = _netpath$ + "OFFICE\TEXT\GESSER1x.DOC"
               END IF 
             ELSE 
               IF maser% = 1 THEN 
                 REM REQUEST "Mîchten Sie die dBASE-Datei als Serienbrief nutzen -> JA oder","die EXCEL-Datei -> NEIN",130,req%
                 req% = SelSerZiel%()
                 IF req% = 1 THEN 
                   textvorlage$ = _netpath$ + "OFFICE\TEXT\MASER1.DOC"
                 ELSE 
                   textvorlage$ = _netpath$ + "OFFICE\TEXT\MASER1x.DOC"
                 END IF 
               ELSE 
                 IF reser% = 1 THEN 
                   REM REQUEST "Mîchten Sie die dBASE-Datei als Serienbrief nutzen -> JA oder","die EXCEL-Datei -> NEIN",130,req%
                   req% = SelSerZiel%()
                   IF req% = 1 THEN 
                     textvorlage$ = _netpath$ + "OFFICE\TEXT\RECHDRU1.DOC"
                   ELSE 
                     textvorlage$ = _netpath$ + "OFFICE\TEXT\RECHDR1x.DOC"
                   END IF 
                 ELSE 
                   IF mahnSER% = 1 THEN 
                     REM REQUEST "Mîchten Sie die dBASE-Datei als Serienbrief nutzen -> JA oder","die EXCEL-Datei -> NEIN",130,req%
                     req% = SelSerZiel%()
                     IF req% = 1 THEN 
                       textvorlage$ = _netpath$ + "OFFICE\TEXT\MahnSer.DOC"
                     ELSE 
                       textvorlage$ = _netpath$ + "OFFICE\TEXT\MahnSerX.DOC"
                     END IF 
                   ELSE 
                     textvorlage$ = _netpath$ + "OFFICE\TEXT\0w97." + _WPSuffix$
                   END IF 
                 END IF 
               END IF 
             END IF 
           END IF 
         END IF 
     END IF 
   ELSE 
     SELECT KEY vorlage% FILE "dokument" INDEX CodeDOK.dokument
     REM  **FEHLER?** textvorlage$ = LEFT$ (_netdirectory$,2) + Dateiname.DOKUMENT
     textvorlage$ = _netpath$ + Dateiname.DOKUMENT
   END IF 
   IF GMailIn% THEN 
     textvorlage$ = _netpath$ + "OFFICE\TEXT\0.txt"
     IF NOT EXISTS (textvorlage$) THEN 
       OPEN textvorlage$ FOR OUTPUT 
       CLOSE OUTPUT 
     END IF 
   END IF 
   Auswahl$ = Gruppe$
   IF ProjectJN$ <> "TRUE" THEN 
     IF GMailIn% THEN 
       dokname$ = "EMAIL OUT " + GMailBetreff$
     END IF 
     CREATE DIALOG "DOKNEU",0,0,253,147,title$,"MS Sans Serif",8
     ADD DIALOG "DOKNEU",4,0,0,253,123,0,""
     ADD DIALOG "DOKNEU",9,6,14,20,21,2
     ADD DIALOG "DOKNEU",5,30,10,205,10,0,"Bitte geben Sie fÅr das neue Dokument eine Bezeichnung ein."
     ADD DIALOG "DOKNEU",5,30,20,134,10,0,"(diese kann bis zu 60 Zeichen enthalten)"
     ADD DIALOG "DOKNEU",5,30,35,214,10,0,"Bei Bedarf kînnen Sie auch die Zuordnung zu einer Dokumenten-"
     ADD DIALOG "DOKNEU",5,30,45,53,10,0,"gruppe Ñndern."
     ADD DIALOG "DOKNEU",5,30,94,79,10,0,"&Bezeichnung"
     ADD DIALOG "DOKNEU",6,30,104,208,12,0,0,dokname$,60
     ADD DIALOG "DOKNEU",5,30,64,65,8,0,"&Gruppe"
     ADD DIALOG "DOKNEU",8,30,73,140,48,259,2,Auswahl$,DOKGruppen$
     ADD DIALOG "DOKNEU",1,75,127,50,15,1,"&OK",1,1
     ADD DIALOG "DOKNEU",1,130,127,50,15,0,"&Abbrechen",0,0
     DIALOG "DOKNEU",req%
     REMOVE DIALOG "DOKNEU"
   ELSE 
dokprj200498:  
     IF prj11$ = "" THEN prj11$ = "Projekt"
     Auswahl$ = Gruppe$
     IF GMailIn% THEN 
       dokname$ = "EMAIL OUT " + GMailBetreff$
     END IF 
     CREATE DIALOG "DOKNEU",0,0,253,177,title$,"MS Sans Serif",8
     ADD DIALOG "DOKNEU",4,0,0,253,153,0,""
     ADD DIALOG "DOKNEU",9,6,14,20,21,2
     ADD DIALOG "DOKNEU",5,30,10,205,10,0,"Bitte geben Sie fÅr das neue Dokument eine Bezeichnung ein."
     ADD DIALOG "DOKNEU",5,30,20,134,10,0,"(diese kann bis zu 60 Zeichen enthalten)"
     ADD DIALOG "DOKNEU",5,30,35,214,10,0,"Bei Bedarf kînnen Sie auch die Zuordnung zu einer Dokumenten-"
     ADD DIALOG "DOKNEU",5,30,45,53,10,0,"gruppe Ñndern."
     ADD DIALOG "DOKNEU",5,30,94,79,10,0,"&Bezeichnung"
     ADD DIALOG "DOKNEU",6,30,104,208,12,0,0,dokname$,60
     ADD DIALOG "DOKNEU",5,30,64,65,8,0,"&Gruppe"
     ADD DIALOG "DOKNEU",8,30,73,140,220,259,2,Auswahl$,DOKGruppen$
     ADD DIALOG "DOKNEU",1,30,127,208,15,1,prj11$,2,1
     ADD DIALOG "DOKNEU",1,75,157,50,15,1,"&OK",1,1
     ADD DIALOG "DOKNEU",1,130,157,50,15,0,"&Abbrechen",0,0
     DIALOG "DOKNEU",req%
     REMOVE DIALOG "DOKNEU"
     IF req% = 2 THEN 
      nachfolger% = PRJSuche%(0)
      IF nachfolger% <> 0 THEN 
        SELECT KEY nachfolger% FILE "project" INDEX codepr.project
        codeprdok% = nachfolger%
        Projektdok$ = LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
        prj11$ = LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
      END IF 
      GOTO dokprj200498
     END IF 
     
   END IF 
   IF req% = 1 THEN 
     Gruppe$ = Auswahl$
     REM docpath$ = LEFT$ (_netpath$,2) + ReadConfig$("DOKUMENTE", FN ansi(Gruppe$))
     docpath$ = GetDocPath$(Gruppe$)
     IF RIGHT$ (docpath$,1) <> "\" THEN docpath$ = docpath$ + "\"
     MOUSE OFF 
     SET STATUS "Dokument wird vorbereitet..."
     FILE "dokument"
     BLANK FILE "dokument"
     CodeDOK.dokument = SER ("dokument",1)
     REM codeErs.dokument = GMACodema%
     Creator.dokument = GMAName$
     dokument.dokument = dokname$
     erstellt_am.dokument = TODAY 
     letzte_Bearbeit.dokument = TODAY 
     CodeMA.dokument = _vcodema%
     IF adrser% = 0 AND gesser% = 0 AND maser% = 0 THEN 
       afo$ = FORM 
       IF afo$ LIKE "DOKEPRJ" THEN 
         knr% = 0
         Linkfield% = 0
       ELSE 
         CodeKU.dokument = knr%
       END IF 
     ELSE 
       knr% = 0
     END IF 
     SELECT KEY codema.dokument FILE "supervis" INDEX codema.supervis
     Bearbeiter.dokument = nachname.supervis
     docpath$ = GetDocPath$(Gruppe$)
     IF GMailIn% THEN 
       textdatei$ = docpath$ + LTRIM$ ( STR$ (CodeDOK.dokument,"999999")) + ".txt"
     ELSE 
       endung$ = GetDateiendung$(textvorlage$)
       textdatei$ = docpath$ + LTRIM$ ( STR$ (CodeDOK.dokument,"999999")) + "." + endung$
     END IF 
     Dateiname.dokument = textdatei$
     Gruppe.dokument = Gruppe$
     link.dokument = Linkfield%
     codepr.dokument = codeprdok%
     Projekt.dokument = Projektdok$
     CALL QuickStore("DOKUMENT")
     
     cudoc% = CodeDOK.dokument
     SELECT FORM KEY cudoc% FILE "DOKUMENT" INDEX codeDok.DOKUMENT
     FORM 
     a% = CALL ("_SBFileExists",textvorlage$)
     IF a% = - 1 THEN 
       REM IF EXISTS (textvorlage$) THEN 
       REM COPY textvorlage$,
       ziel$ = _netpath$ + textdatei$
       a% = CALL ("_SBFileCopy",textvorlage$,ziel$)
       DOKNeu% = CodeDOK.dokument
       IF knr% > 0 THEN 
         IF GEMAILSer% <> - 1 THEN 
           IF GTerminfrage% <> - 1 THEN 
             REQUEST "Eintrag in Termindatei vornehmen?","",130,raa%
           ELSE 
             raa% = 1
           END IF 
           IF raa% = 1 THEN CALL ADRDokRegister(CodeDOK.dokument)
         END IF 
       END IF 
     ELSE 
       CALL Fehler("Textvorlage " + textvorlage$ + " konnte nicht gefunden werden!","Eintrag wird aus Dokumentenverwaltung entfernt.")
       SELECT KEY cudoc% LOCK FILE "dokument" INDEX CodeDOK.dokument
       SELECT REMOVE FILE "DOKUMENT"
       DOKNeu% = - 1
     END IF 
   ELSE 
     DOKNeu% = - 1
   END IF 
 END IF 
 MOUSE ON 
 FILE cfile$
 END FUNCTION 
 
 
 ' Dokument bearbeiten
 ' ===========================================================================
 ' Zweck:       Bearbeiten eines Dokumentes aus der Dokumentendatei
 ' Nutzung:     CALL DOKBearbeiten(dok%)
 '              dok%    = Nummer des Textes in der Dokumentendatei
 '              x%      = 1 Anzeige Adressdialog
 '              x%      = 0 Nicht Anzeige Adressdialog
 ' ===========================================================================
 ' Stand: 12.09.93   
 
SUB DOKBearbeiten(dok%,x%)
 MOUSE OFF 
 IF NOT OPEN ("dokument") THEN CALL DFile(2,"OFFICE\dokument" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 IF NOT OPEN ("adressen") THEN CALL DFile(2,"OFFICE\adressen" + _fpw$)
 MOUSE OFF 
 SET STATUS "Dokument bearbeiten..."
 cfile$ = FILE 
 cdir$ = DIRECTORY 
 FILE "adressen"
 MOUSE OFF 
 maske$ = "ADRESSEN"
 IF ProjectJN$ = "TRUE" THEN maske$ = "ADRPROJ"
 IF FORM LIKE "AKQUI*" THEN maske$ = FORM 
 REM 081099
 IF UCASE$ ( FORM ) LIKE maske$ + "*" OR UCASE$ ( FORM ) LIKE "DOKGES*" OR UCASE$ ( FORM ) LIKE "ADR*" THEN 
   IF x% = 1 THEN 
     Adresse$ = MakeAdr$(CodeKU.ADRESSEN, - 1,0,0)
     COPY FROM Adresse$
   END IF 
 END IF 
 SELECT KEY vcodema% FILE "SUPERVIS" INDEX CodeMA.supervis
 FILE "DOKUMENT"
 SELECT KEY dok% LOCK FILE "DOKUMENT" INDEX CodeDOK.dokument
 IF FOUND ("DOKUMENT") THEN 
   MOUSE OFF 
   GDokName$ = Dokument.dokument
   GDoknovi% = novi1.dokument
   CodeMA.dokument = vcodema%
   Bearbeiter.dokument = Nachname.supervis
   letzte_Bearbeit.DOKUMENT = TODAY 
   textdatei$ = _netpath$ + Dateiname.dokument
   a% = CALL ("_SBFileExists",textdatei$)
   IF a% = - 1 THEN 
     REM IF EXISTS (textdatei$) THEN 
     CALL QuickStore("dokument")
     REM CALL textdatei$,1
     REM CALL Fehler(textdatei$,"")
     REM a% = CALL ("_SBFileCall",textdatei$)
     MOUSE OFF 
     CALL TextAnz(textdatei$)
     
     REM CALL Fehler("Serie","")
     IF i% <= 32 THEN 
       IF (i% = 31) OR (i% = 2) THEN 
         CALL Fehler("Das benîtigte Bearbeitungsprogramm konnte nicht gefunden werden!","Bitte wÑhlen Sie das Bearbeitungsprogramm aus.")
         WordProc$ = "*.EXE"
         endung$ = GetDateiendung$(textdatei$)
         REQUEST "Programm fÅr " + UCASE$ (endung$) + "-Dateien...","",26,req%,WordProc$
         IF req% = 1 THEN 
           CALL WordProc$ + " " + textdatei$
         END IF 
       END IF 
     ELSE 
       IF adrser% = 1 THEN 
         REM wenn serienbrief
         APPACTIVATE "Microsoft Word"
         REM DDEINIT 5,"WINWORD","SYSTEM"
         REM IF w97$ = "TRUE" THEN 
           REM DDEEXEC 5,"[ToolsMacro " + g$ + "DoMakro97.ADRSER" + g$ + ",1]"
         REM END IF 
         REM DDETERM 5
         adrser% = 0
         gesser% = 0
         maser% = 0
       END IF 

     END IF 
     
     IF knr% > 0 THEN 
       dok$ = STR$ (dok%,"000000")
       APPACTIVATE ""
       REM SELECT FORM KEY knr% FILE "Adressen" INDEX codeku.adressen
       REM SELECT FORM CURRENT 
       FORM 
       REM CALL Fehler(nachname.adressen,"")
     END IF 
     IF _projekt$ LIKE "FACTURA" THEN dokfehl% = 0
   ELSE 
     CALL Fehler("Die benîtigte Dokumentendatei konnte nicht gefunden werden!","")
   END IF 
 ELSE 
   CALL Fehler("Das entsprechende Dokument konnte nicht gefunden werden!","Es wurde wahrscheinlich innerhalb der Dokumentenverwaltung gelîscht.")
   IF _projekt$ LIKE "FACTURA" THEN 
     CALL DFile(3,"MASTER" + _fpw$)
     FILE "master"
     IF EXISTS (dok%,codedok.MASTER) THEN 
       INDEX codedok.master
       SELECT FIRST 
       SELECT KEY dok% LOCK FILE "master" INDEX CodeDOK.master
       codedok.master = 0
       CALL Fehler("Beim nÑchsten Aufruf der Winwordausgabe wird ein neues Dokument angelegt!","")
       CALL QuickStore("master")
       dokfehl% = 1
     END IF 
   END IF 
 END IF 
 MOUSE ON 
 FILE cfile$
 DIRECTORY cdir$
 END SUB 
   
 
                   
 ' Adre·string erstellen
 ' ===========================================================================
 ' mode%=0      keine Abfrage der Optionen
 ' mode%=-1     Dialog mit Optionen wird angezeigt
 ' opt1%        Telefon/Fax aufnehmen Ja:-1/Nein:0
 ' opt2%        Briefanrede aufnehmen Ja:-1/Nein:0
 ' bei mode%=-1 werden opt1% und opt2% ignoriert
 
FUNCTION MakeAdraa$(kn%,mode%,opt1%,opt2%)
 MakeAdraa$ = ""
 DIM TElSp$(100)
 reqpo% = 0
 IF mode% <> 0 THEN 
   REM REQUEST "Adresse aus dem Postanschriftsfeld Åbernehmen?","",130,reqpo%
    DIM dlg AS Dialog
    DIM control AS DialogControl
    opt% = 1
    Superbase.Dialogs.Add("Dialogname")
    SET dlg = Superbase.Dialogs.Dialogname
    dlg.Move(0,0,222,119)
    dlg.Caption = "Art der Adresse"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(2,8,219,90)
    control.Caption = " WÑhlen Sie eine Option "
 
    SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
    control.Move(6,20,159,10)
    control.Caption = "Adresse aus dem Postanschriftsfeld nehmen"
    control.Bind("opt%")
    control.ValueOn = 1
 
    SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
    control.Move(6,32,214,9)
    control.Caption = "Adresse aus den Feldern der Adressmaske Seite 1 nehmen"
    control.Bind("opt%")
    control.ValueOn = 0
 
      SET control = dlg.Add("DialogOptionButton3","DialogOptionButton")
      control.Move(6,44,200,10)
      control.Caption = "Zweitanschrift verwenden"
      control.Bind("opt%")
      control.ValueOn = 2
 
      SET control = dlg.Add("DialogOptionButton4","DialogOptionButton")
      control.Move(6,56,200,10)
      control.Caption = "Drittanschrift verwenden"
      control.Bind("opt%")
      control.ValueOn = 3
 
      SET control = dlg.Add("DialogOptionButton5","DialogOptionButton")
      control.Move(6,68,200,10)
      control.Caption = "Viertanschrift verwenden"
      control.Bind("opt%")
      control.ValueOn = 4
 
      SET control = dlg.Add("DialogOptionButton6","DialogOptionButton")
      control.Move(6,80,200,10)
      control.Caption = "FÅnftanschrift verwenden"
      control.Bind("opt%")
      control.ValueOn = 5
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(59,100,43,16)
    control.Default = 1
    control.Caption = "OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(105,100,42,16)
    control.Caption = "Abbruch"
    control.ReturnValue = 0
 
    DIALOG "Dialogname",req%
    REMOVE DIALOG "Dialogname"
    IF req% = 1 THEN 
      reqpo% = opt%
    ELSE 
      GOTO madrend250220021
    END IF 
 ELSE 
   reqpo% = 1
 END IF 
 cfile$ = FILE 
 FILE GAdrDat$
 SELECT FIRST 
 cuadr% = kn%
 SELECT KEY kn% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
 lf$ = CHR$ (13) + CHR$ (10)
 
 IF anrede.GAdrDat$ LIKE "*herr*" OR anrede.GAdrDat$ LIKE "*frau*" OR anrede.GAdrDat$ LIKE "*frÑ*" OR anrede.GAdrDat$ LIKE "*fam*" THEN 
   IF UCASE$ ( FORM ) LIKE "MASTER" THEN 
     Adresse$ = Anrede.GAdrDat$ + lf$ + IF (Titel.GAdrDat$ <> "",Titel.GAdrDat$ + " ","") + IF (Vorname.GAdrDat$ <> "",Vorname.GAdrDat$ + " ","") + Nachname.GAdrDat$ + lf$
   ELSE 
     IF _projekt$ <> "PROVIS" THEN 
       Adresse$ = Kundennummer.GAdrDat$ + lf$ + Anrede.GAdrDat$ + lf$ + IF (Titel.GAdrDat$ <> "",Titel.GAdrDat$ + " ","") + IF (Vorname.GAdrDat$ <> "",Vorname.GAdrDat$ + " ","") + Nachname.GAdrDat$ + lf$
     ELSE 
       REM 200398
       Adresse$ = Anrede.GAdrDat$ + lf$ + IF (Titel.GAdrDat$ <> "",Titel.GAdrDat$ + " ","") + IF (Vorname.GAdrDat$ <> "",Vorname.GAdrDat$ + " ","") + Nachname.GAdrDat$ + lf$
       Adresse$ = IF (Vorname.GAdrDat$ <> "",Vorname.GAdrDat$ + " ","") + Nachname.GAdrDat$ + lf$
       anrede$ = anrede.GAdrDat$
       titela$ = titel.GAdrDat$
       IF titela$ <> "" THEN 
         Adresse$ = titela$ + " " + Adresse$
       END IF 
       IF anrede$ <> "" THEN 
         Adresse$ = anrede$ + CHR$ (13) + CHR$ (10) + Adresse$
       END IF 
     END IF 
   END IF 
 ELSE 
   IF UCASE$ ( FORM ) LIKE "MAST*" THEN 
     IF anrede.GAdrDat$ LIKE "Firma" THEN 
       Adresse$ = Nachname.GAdrDat$ + lf$
     ELSE 
       Adresse$ = anrede.GAdrDat$ + lf$ + Nachname.GAdrDat$ + lf$
     END IF 
   ELSE 
     IF _projekt$ <> "PROVIS" THEN 
       Adresse$ = Kundennummer.GAdrDat$ + lf$ + anrede.GAdrDat$ + lf$ + Nachname.GAdrDat$ + lf$
     ELSE 
       Adresse$ = Nachname.GAdrDat$ + lf$
       IF anrede.GADRDat$ <> "" THEN Adresse$ = anrede.GAdrDat$ + lf$ + Adresse$
       anred$ = anrede.GAdrDat$
         titela$ = titel.GAdrDat$
     END IF 
   END IF 
   IF Geburtsname.GAdrDat$ <> "" THEN Adresse$ = Adresse$ + Geburtsname.GAdrDat$ + lf$
   IF Vorname.GAdrDat$ <> "" THEN Adresse$ = Adresse$ + "z.Hd. " + Vorname.GAdrDat$ + lf$
 END IF 
 Adresse$ = Adresse$ + Stra·e.GAdrDat$ + lf$ + lf$ + plz.GAdrDat$ + " " + ort.GAdrDat$ + lf$ + lf$ + IF (Land.GAdrDat$ <> "",Land.GAdrDat$ + lf$ + lf$,"")
 IF reqpo% = 1 THEN Adresse$ = Postanschrift.GAdrDat$
 IF reqpo% = 2 THEN Adresse$ = Zweitanschrift.GAdrDat$
 IF reqpo% = 3 THEN Adresse$ = Drittanschrift.GAdrDat$
 IF reqpo% = 4 THEN Adresse$ = Viertanschrift.GAdrDat$
 IF reqpo% = 5 THEN Adresse$ = Fuenftanschrift.GAdrDat$
 REM IF opt1% = 1 THEN 
   CALL WriteConfig("OFFICE","AdrTelefon","1")
   codeku1% = codeku.GAdrDat$
   cfile1$ = FILE 
   IF EXISTS (codeku1%,codeku.GTelDat$) THEN 
     FILE GTelDat$
     INDEX codeku.GTelDat$
     SELECT FIRST 
     SELECT KEY codeku1% FILE GTelDat$ INDEX codeku.GTelDat$
     WHILE codeku.GTelDat$ = codeku1% AND NOT EOF (GTelDat$)
       REM 270899
       IF FonOderFax.GTelDat$ = "j" THEN 
         REM Telefon$ = Telefon$ + lf$ + art.GTelDat$ + "   " + nummer.GTelDat$
         Telefon$ = nummer.GTelDat$ + lf$
         SELECT LAST 
       END IF 
       SELECT NEXT 
     WEND 
     FILE cfile1$
   END IF 
 REM ELSE 
   REM CALL WriteConfig("OFFICE","AdrTelefon","0")
 REM END IF 
 IF Briefanrede.GAdrDat$ <> "" THEN 
   CALL WriteConfig("OFFICE","AdrBriefanrede","1")
   IF reqpo% = 0 THEN Brief$ = lf$ + lf$ + lf$ + Briefanrede.GAdrDat$ + lf$
 ELSE 
   CALL WriteConfig("OFFICE","AdrBriefanrede","0")
 END IF 
 REM Brief$ = lf$ + lf$ + lf$ + Briefanrede.GAdrDat$ + lf$
 IF mode% AND adrser% = 0 AND gesser% = 0 AND maser% = 0 THEN 
   IF reqpo% = 0 THEN Adrtemp$ = Adresse$ + Telefon$ + Brief$
   Adrtemp$ = Adresse$
   adrold$ = Adrtemp$
   REM IF VAL (ReadConfig$("OFFICE","AdrTelefon")) <> 0 THEN opt1% = 1 ELSE opt1% = 0
   REM IF VAL (ReadConfig$("OFFICE","AdrBriefanrede")) <> 0 THEN opt2% = 1 ELSE opt2% = 0
   CREATE DIALOG "MakeAdr",0,0,273,250,title$,"MS Sans Serif",8
   ADD DIALOG "MakeAdr",4,0,0,272,230,0,""
   ADD DIALOG "MakeAdr",9,3,10,21,22,2
   ADD DIALOG "MakeAdr",5,29,11,233,19,0,"Bitte geben Sie an, wie die Adresse fÅr die öbergabe an die Textverarbeitung in der Zwischenablage bereitgestellt werden soll:"
   ADD DIALOG "MakeAdr",6,30,33,236,146,68,2,Adrtemp$,1800
   ADD DIALOG "MakeAdr",2,30,186,121,13,0,"mit Faxnummer oben",1,0,opt1%
   ADD DIALOG "MakeAdr",2,30,200,121,11,0,"mit Faxnummer unten",1,0,opt5%
   ADD DIALOG "MakeAdr",2,30,214,121,11,0,"mit allen Nummern unten",1,0,opt6%
   IF _projekt$ LIKE "PROVIS" THEN 
     REM IF reqpo% = 0 THEN ADD DIALOG "MakeAdr",2,150,102,50,13,0,"mit Anrede",1,0,opt3%
     REM IF reqpo% = 0 THEN ADD DIALOG "MakeAdr",2,150,116,100,13,0,"mit Titel",1,0,opt4%
   END IF 
   ADD DIALOG "MakeAdr",2,160,206,110,13,0,"Briefanrede aus Postanschrift",1,0,opt3%
   IF reqpo% = 0 THEN ADD DIALOG "MakeAdr",2,160,192,110,13,0,"Briefanrede von Adresse",1,0,opt2%
   IF UCASE$ ( FORM ) LIKE GAdrDat$ THEN 
     ADD DIALOG "MakeAdr",1,73,232,55,15,1,"&Weiter",1,1
   ELSE 
     ADD DIALOG "MakeAdr",1,100,232,55,15,1,"&Weiter",1,1
   END IF 
   IF UCASE$ ( FORM ) LIKE GAdrDat$ THEN ADD DIALOG "MakeAdr",1,129,232,55,15,0,"&Abbrechen",0,0
   DIALOG "MakeAdr",req%
   REMOVE DIALOG "MakeAdr"
 END IF 
  IF adrold$ <> adrtemp$ THEN 
    adresse$ = adrtemp$
  END IF 
  IF _projekt$ LIKE "PROVIS" THEN 
    IF opt4% = 1 THEN 
      IF titela$ <> "" THEN 
        Adresse$ = titela$ + lf$ + Adresse$
      END IF 
    END IF 
    IF opt3% = 1111111 THEN 
      IF anrede$ <> "" THEN 
        Adresse$ = anrede$ + lf$ + adresse$
      END IF 
    END IF 
 END IF 
  IF opt1% > 0 OR opt5% > 0 THEN 
    REM IF VAL (ReadConfig$("OFFICE","AdrTelefon")) <> 0 THEN 
    telefon$ = GetTelno$(codeku.GADRDat$)
    IF Telefon$ <> "" THEN 
      IF opt1% = 1 THEN 
        Adresse$ = Telefon$ + lf$ + Adresse$
      ELSE 
        IF opt5% = 1 THEN 
          Adresse$ = Adresse$ + lf$ + Telefon$
        END IF 
      END IF 
    END IF 
  END IF 
  IF opt2% = 1 THEN 
    z% = VAL (ReadConfig$("OFFICE","AdrBriefanrede"))
    IF VAL (ReadConfig$("OFFICE","AdrBriefanrede")) <> 0 THEN 
      Adresse$ = Adresse$ + Brief$
    END IF 
  END IF 
  IF opt3% = 1 AND PostBriefanrede.GADRDat$ <> "" THEN 
    Adresse$ = Adresse$ + lf$ + lf$ + lf$ + lf$ + PostBriefanrede.GADRDat$
  END IF 
  MakeAdraa$ = Adresse$
 SELECT KEY cuadr% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
 FILE cfile$
madrend250220021: 
 END FUNCTION 
  
 


FUNCTION MakeAdr$(kn%,mode%,opt1%,opt2%)
 cfile$ = FILE 
 FILE "adressen"
 SELECT FIRST 
 cuadr% = kn%
 SELECT KEY kn% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 DIM TElSp$(100)
 reqpo% = 0
 IF mode% <> 0 THEN 
   REM REQUEST "Adresse aus dem Postanschriftsfeld Åbernehmen?","",130,reqpo%
    DIM dlg AS Dialog
    DIM control AS DialogControl
    opt% = 1
    Rechbeschr$ = RechADRbeschr.adressen
    Lieferbeschr$ = LieferADRbeschr.adressen
    ZweitBeschr$ = Zweitbeschr.adressen
    DrittBeschr$ = Drittbeschr.adressen
    ViertBeschr$ = Viertbeschr.adressen
    FÅnftBeschr$ = Fuenftbeschr.adressen
    IF LTRIM$ (rechadr.adressen) <> "" AND msart% = 2 THEN opt% = 6
    IF LTRIM$ (lieferadr.adressen) <> "" AND msart% = 3 THEN opt% = 7
anf020920101: 
    Superbase.Dialogs.Add("Dialogname")
    SET dlg = Superbase.Dialogs.Dialogname

    dlg.Move(0,0,384,273)
    dlg.Caption = "Art der Adresse"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(2,7,376,242)
    control.Caption = " WÑhlen Sie eine Option "
 
    SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
    control.Move(6,20,159,10)
    control.Caption = "Adresse aus Rechnungsanschrift nehmen"
    control.Bind("opt%")
    control.ValueOn = 6
 
    SET control = dlg.Add("DialogOptionButton7","DialogOptionButton")
    control.Move(6,53,160,10)
    control.Caption = "Adresse aus Lieferanschrift nehmen"
    control.Bind("opt%")
    control.ValueOn = 7
 
    SET control = dlg.Add("DialogOptionButton8","DialogOptionButton")
    control.Move(6,88,159,9)
    control.Caption = "Adresse aus dem Postanschriftsfeld nehmen"
    control.Bind("opt%")
    control.ValueOn = 1
 
    SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
    control.Move(6,100,214,8)
    control.Caption = "Adresse aus den Feldern der Adressmaske Seite 1 nehmen"
    control.Bind("opt%")
    control.ValueOn = 0
 
    SET control = dlg.Add("DialogOptionButton3","DialogOptionButton")
    control.Move(6,110,200,10)
    control.Caption = "Zweitanschrift verwenden"
    control.Bind("opt%")
    control.ValueOn = 2
 
    SET control = dlg.Add("DialogOptionButton4","DialogOptionButton")
    control.Move(6,144,200,10)
    control.Caption = "Drittanschrift verwenden"
    control.Bind("opt%")
    control.ValueOn = 3
 
    SET control = dlg.Add("DialogOptionButton5","DialogOptionButton")
    control.Move(6,177,200,10)
    control.Caption = "Viertanschrift verwenden"
    control.Bind("opt%")
    control.ValueOn = 4
 
    SET control = dlg.Add("DialogOptionButton6","DialogOptionButton")
    control.Move(6,211,200,10)
    control.Caption = "FÅnftanschrift verwenden"
    control.Bind("opt%")
    control.ValueOn = 5
  
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(138,252,43,16)
    control.Default = 1
    control.Caption = "OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(184,252,42,16)
    control.Caption = "Abbruch"
    control.ReturnValue = 0
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(6,32,335,20)
    control.CaptionBinding = "RechBeschr$"

    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(6,65,335,21)
    control.CaptionBinding = "LieferBeschr$"

    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(6,122,335,21)
    control.CaptionBinding = "ZweitBeschr$"

    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(6,156,335,21)
    control.CaptionBinding = "DrittBeschr$"

    SET control = dlg.Add("DialogLabel5","DialogLabel")
    control.Move(6,189,335,21)
    control.CaptionBinding = "ViertBeschr$"

    SET control = dlg.Add("DialogLabel6","DialogLabel")
    control.Move(6,223,335,21)
    control.CaptionBinding = "FÅnftBeschr$"
    
    DIALOG "Dialogname",req%
    REMOVE DIALOG "Dialogname"
    IF req% = 1 THEN 
      reqpo% = opt%
    ELSE 
      GOTO madrend250220021
    END IF 
    IF LTRIM$ (rechadr.adressen) = "" AND reqpo% = 6 THEN 
      opt% = 1
      CALL Fehler("Das Feld Rechnungsanschrift ist leer","")
      GOTO anf020920101
    END IF 
 ELSE 
   reqpo% = 1
 END IF 
 REM cfile$ = FILE 
 FILE "adressen"
 SELECT FIRST 
 cuadr% = kn%
 SELECT KEY kn% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 lf$ = CHR$ (13) + CHR$ (10)
 
 IF anrede.adressen LIKE "*herr*" OR anrede.adressen LIKE "*frau*" OR anrede.adressen LIKE "*frÑ*" OR anrede.adressen LIKE "*fam*" THEN 
   IF UCASE$ ( FORM ) LIKE "MASTER" THEN 
     Adresse$ = Anrede.ADRESSEN + lf$ + IF (Titel.ADRESSEN <> "",Titel.ADRESSEN + " ","") + IF (Vorname.ADRESSEN <> "",Vorname.ADRESSEN + " ","") + Nachname.ADRESSEN + lf$
   ELSE 
     IF _projekt$ <> "PROVIS" THEN 
       Adresse$ = Kundennummer.adressen + lf$ + Anrede.ADRESSEN + lf$ + IF (Titel.ADRESSEN <> "",Titel.ADRESSEN + " ","") + IF (Vorname.ADRESSEN <> "",Vorname.ADRESSEN + " ","") + Nachname.ADRESSEN + lf$
     ELSE 
       REM 200398
       Adresse$ = Anrede.ADRESSEN + lf$ + IF (Titel.ADRESSEN <> "",Titel.ADRESSEN + " ","") + IF (Vorname.ADRESSEN <> "",Vorname.ADRESSEN + " ","") + Nachname.ADRESSEN + lf$
       Adresse$ = IF (Vorname.ADRESSEN <> "",Vorname.ADRESSEN + " ","") + Nachname.ADRESSEN + lf$
       anrede$ = anrede.adressen
       titela$ = titel.adressen
     END IF 
   END IF 
 ELSE 
   IF UCASE$ ( FORM ) LIKE "MAST*" THEN 
     IF anrede.adressen LIKE "Firma" THEN 
       Adresse$ = Nachname.adressen + lf$
     ELSE 
       Adresse$ = anrede.adressen + lf$ + Nachname.adressen + lf$
     END IF 
   ELSE 
     IF _projekt$ <> "PROVIS" THEN 
       Adresse$ = Kundennummer.adressen + lf$ + anrede.adressen + lf$ + Nachname.adressen + lf$
     ELSE 
       Adresse$ = Nachname.adressen + lf$
         anrede$ = anrede.adressen
         titela$ = titel.adressen
     END IF 
   END IF 
   IF Geburtsname.ADRESSEN <> "" THEN Adresse$ = Adresse$ + Geburtsname.ADRESSEN + lf$
   IF Vorname.ADRESSEN <> "" THEN Adresse$ = Adresse$ + "z.Hd. " + Vorname.ADRESSEN + lf$
 END IF 
 Adresse$ = Adresse$ + Stra·e.adressen + lf$ + lf$ + plz.adressen + " " + ort.adressen + lf$ + lf$ + IF (Land.ADRESSEN <> "",Land.ADRESSEN + lf$ + lf$,"")
 IF reqpo% = 1 THEN Adresse$ = Postanschrift.GAdrDat$
 IF reqpo% = 2 THEN Adresse$ = Zweitanschrift.GAdrDat$
 IF reqpo% = 3 THEN Adresse$ = Drittanschrift.GAdrDat$
 IF reqpo% = 4 THEN Adresse$ = Viertanschrift.GAdrDat$
 IF reqpo% = 5 THEN Adresse$ = Fuenftanschrift.GAdrDat$
 IF reqpo% = 6 THEN Adresse$ = RechADR.GAdrDat$
 IF reqpo% = 7 THEN Adresse$ = LieferADR.GAdrDat$
 REM IF opt1% = 1 THEN 
   CALL WriteConfig("OFFICE","AdrTelefon","1")
   codeku1% = codeku.adressen
   cfile1$ = FILE 
   IF EXISTS (codeku1%,codeku.telefon) THEN 
     FILE "telefon"
     INDEX codeku.telefon
     SELECT FIRST 
     SELECT KEY codeku1% FILE "telefon" INDEX codeku.telefon
     xyz% = 0
     WHILE codeku.telefon = codeku1% AND NOT EOF ("telefon")
       REM 270899
       IF Kart1.telefon LIKE "FAX" THEN 
         REM Telefon$ = Telefon$ + lf$ + art.telefon + "   " + nummer.telefon
         Telefon$ = nummer.telefon + lf$
         REM SELECT LAST 
       END IF 
       IF nummer.telefon <> "" THEN 
         TElSp$(xyz%) = LTRIM$ (Art.Telefon) + "   " + Nummer.telefon
         xyz% = xyz% + 1
       END IF 
       SELECT NEXT FILE "telefon"
     WEND 
     FILE cfile1$
   END IF 
 REM ELSE 
   REM CALL WriteConfig("OFFICE","AdrTelefon","0")
 REM END IF 
 IF Briefanrede.adressen <> "" THEN 
   CALL WriteConfig("OFFICE","AdrBriefanrede","1")
   IF reqpo% = 0 THEN Brief$ = lf$ + lf$ + lf$ + Briefanrede.adressen + lf$
 ELSE 
   CALL WriteConfig("OFFICE","AdrBriefanrede","0")
 END IF 
 REM Brief$ = lf$ + lf$ + lf$ + Briefanrede.adressen + lf$
 IF mode% AND adrser% = 0 AND gesser% = 0 AND maser% = 0 THEN 
   IF reqpo% = 0 THEN 
     Adrtemp$ = Adresse$ + Telefon$ + Brief$
   END IF 
   Adrtemp$ = Adresse$
   adrold$ = Adrtemp$
   REM IF VAL (ReadConfig$("OFFICE","AdrTelefon")) <> 0 THEN opt1% = 1 ELSE opt1% = 0
   REM IF VAL (ReadConfig$("OFFICE","AdrBriefanrede")) <> 0 THEN opt2% = 1 ELSE opt2% = 0
   CREATE DIALOG "MakeAdr",0,0,273,156,title$,"MS Sans Serif",8
   ADD DIALOG "MakeAdr",4,0,0,272,134,0,""
   ADD DIALOG "MakeAdr",9,3,10,21,22,2
   ADD DIALOG "MakeAdr",5,29,11,233,19,0,"Bitte geben Sie an, wie die Adresse fÅr die öbergabe an die Textverarbeitung in der Zwischenablage bereitgestellt werden soll:"
   ADD DIALOG "MakeAdr",6,30,33,236,66,68,2,Adrtemp$,1800
   ADD DIALOG "MakeAdr",2,30,102,121,11,0,"mit Faxnummer oben",1,0,opt1%
   ADD DIALOG "MakeAdr",2,30,112,121,11,0,"mit Faxnummer unten",1,0,opt5%
   ADD DIALOG "MakeAdr",2,30,122,121,11,0,"mit allen Nummern unten",1,0,opt6%
   IF reqpo% = 0 THEN ADD DIALOG "MakeAdr",2,150,102,50,11,0,"mit Anrede",1,0,opt3%
   IF reqpo% = 0 THEN ADD DIALOG "MakeAdr",2,150,112,100,11,0,"mit Titel",1,0,opt4%
   IF reqpo% = 0 THEN ADD DIALOG "MakeAdr",2,150,122,70,11,0,"mit Briefanrede",1,0,opt2%
   IF UCASE$ ( FORM ) LIKE "ADRESSEN" THEN 
     ADD DIALOG "MakeAdr",1,73,139,55,15,1,"&Weiter",1,1
   ELSE 
     ADD DIALOG "MakeAdr",1,100,139,55,15,1,"&Weiter",1,1
   END IF 
   IF UCASE$ ( FORM ) LIKE "ADRESSEN" THEN ADD DIALOG "MakeAdr",1,129,135,55,15,0,"&Abbrechen",0,0
   DIALOG "MakeAdr",req%
   REMOVE DIALOG "MakeAdr"
 END IF 
  IF adrold$ <> adrtemp$ THEN 
    adresse$ = adrtemp$
  END IF 
  IF _projekt$ LIKE "PROVIS" THEN 
    IF opt4% = 1 THEN 
      IF titela$ <> "" THEN 
        Adresse$ = titela$ + lf$ + Adresse$
      END IF 
    END IF 
    IF opt3% = 1 THEN 
      IF anrede$ <> "" THEN 
        Adresse$ = anrede$ + lf$ + adresse$
      END IF 
    END IF 
 END IF 
 IF opt6% > 0 THEN 
   FOR i% = xyz% - 1 TO 0 STEP - 1
     Adresse$ = Adresse$ + TelSP$(i%) + CHR$ (13) + CHR$ (10)
   NEXT i%
   IF LTRIM$ (Briefanrede.adressen) <> "" THEN 
     Adresse$ = Adresse$ + Brief$
   END IF 
 ELSE 
   IF opt1% > 0 OR opt5% > 0 THEN 
     IF VAL (ReadConfig$("OFFICE","AdrTelefon")) <> 0 THEN 
       IF opt1% = 1 THEN 
         Adresse$ = Telefon$ + Adresse$
       ELSE 
         IF opt5% = 1 THEN 
           Adresse$ = Adresse$ + Telefon$
         END IF 
       END IF 
     END IF 
   END IF 
   IF opt2% = 1 THEN 
     REM z% = VAL (ReadConfig$("OFFICE","AdrBriefanrede"))
     REM IF VAL (ReadConfig$("OFFICE","AdrBriefanrede")) <> 0 THEN 
     IF LTRIM$ (Briefanrede.adressen) <> "" THEN 
       Adresse$ = Adresse$ + Brief$
     END IF 
   END IF 
 END IF 
  MakeAdr$ = Adresse$
 SELECT KEY cuadr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 FILE cfile$
 END FUNCTION 
  
  
 
FUNCTION MakeGesAdr$(kn%,mode%,opt1%,opt2%)
 cfile$ = FILE 
 FILE "geadr"
 SELECT FIRST 
 codege% = kn%
 SELECT KEY codege% FILE "geadr" INDEX CodeGE.geadr
 lf$ = CHR$ (13) + CHR$ (10)
 Adresse$ = Gesellschaft + lf$ + "z.Hd. " + Anrede + " " + vorname + " " + nachname + lf$
 Adresse$ = Adresse$ + Stra·e + lf$ + lf$ + plz + " " + ort + lf$ + lf$ + "Telefon: " + telefon1 + lf$ + "Telefax: " + telefax
 CREATE DIALOG "MakeAdr",0,0,273,156,title$,"MS Sans Serif",8
 ADD DIALOG "MakeAdr",4,0,0,272,131,0,""
 ADD DIALOG "MakeAdr",9,3,10,21,22,2
 ADD DIALOG "MakeAdr",5,29,11,233,19,0,"Bitte geben Sie an, wie die Adresse fÅr die öbergabe an die Textverarbeitung in der Zwischenablage bereitgestellt werden soll:"
 ADD DIALOG "MakeAdr",6,30,33,236,66,68,2,Adresse$,1800
 ADD DIALOG "MakeAdr",1,73,135,55,15,0,"&Weiter",1,1
 ADD DIALOG "MakeAdr",1,129,135,55,15,0,"&Abbrechen",0,0
 DIALOG "MakeAdr",req%
 REMOVE DIALOG "MakeAdr"
 MakeGesAdr$ = Adresse$
 SELECT KEY codege% FILE "geadr" INDEX CodeGE.geadr
 FILE cfile$
 END FUNCTION 
 
FUNCTION MakeMAAdr$(kn%,mode%,opt1%,opt2%)
 cfile$ = FILE 
 FILE "maadr"
 SELECT FIRST 
 codema% = kn%
 SELECT KEY codema% FILE "maadr" INDEX Codema.maadr
 lf$ = CHR$ (13) + CHR$ (10)
 Adresse$ = Agenturnr + lf$ + Anrede + lf$ + vorname + " " + Nachname + lf$
 Adresse$ = Adresse$ + Stra·e + lf$ + lf$ + plz + " " + ort + lf$ + lf$ + "Telefon: " + Telefon1 + lf$ + "Telefax: " + Telefax
 CREATE DIALOG "MakeAdr",0,0,273,156,title$,"MS Sans Serif",8
 ADD DIALOG "MakeAdr",4,0,0,272,131,0,""
 ADD DIALOG "MakeAdr",9,3,10,21,22,2
 ADD DIALOG "MakeAdr",5,29,11,233,19,0,"Bitte geben Sie an, wie die Adresse fÅr die öbergabe an die Textverarbeitung in der Zwischenablage bereitgestellt werden soll:"
 ADD DIALOG "MakeAdr",6,30,33,236,66,68,2,Adresse$,1800
 ADD DIALOG "MakeAdr",1,73,135,55,15,0,"&Weiter",1,1
 ADD DIALOG "MakeAdr",1,129,135,55,15,0,"&Abbrechen",0,0
 DIALOG "MakeAdr",req%
 REMOVE DIALOG "MakeAdr"
 MakeMAAdr$ = Adresse$
 SELECT KEY codema% FILE "maadr" INDEX Codema.maadr
 FILE cfile$
 END FUNCTION 
 


 
 ' Dokument lîschen
 ' ===========================================================================
 ' Zweck:       lîscht Dokument aus der Dokumentendatei
 ' Nutzung:     CALL DOKLoeschen(dok%)
 '              dok%    = Nummer des Textes in der Dokumentendatei
 ' ===========================================================================
 
SUB DOKLoeschen(dok%)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 IF disabled%("DOKUMENTLôSCHEN") THEN END SUB 
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 SET STATUS "Dokument lîschen"
 cfile$ = FILE 
 FILE "DOKUMENT"
 SELECT KEY dok% LOCK FILE "DOKUMENT" INDEX CodeDOK.dokument
 textdatei$ = LEFT$ (_netdirectory$,2) + Dateiname.dokument
 REQUEST "Wollen Sie das Dokument wirklich lîschen?","",130,req%
 IF req% = 1 THEN 
   SET STATUS "Dokument wird gelîscht..."
   SELECT REMOVE 
   a% = CALL ("_SBFileExists",textdatei$)
   IF a% = - 1 THEN 
     REM IF EXISTS (textdatei$) THEN 
     DELETE textdatei$
     REQUEST "Dokument gelîscht !","",2
     SELECT CURRENT 
   END IF 
   IF _projekt$ LIKE "FACTURA" THEN 
     CALL DFile(3,"MASTER" + _fpw$)
     FILE "master"
     IF EXISTS (dok%,codedok.MASTER) THEN 
       INDEX codedok.master
       SELECT FIRST 
       SELECT KEY dok% LOCK FILE "master" INDEX CodeDOK.master
       codedok.master = 0
       CALL QuickStore("master")
     END IF 
   END IF 
 END IF 
 FILE cfile$
 END SUB 
 
 
 ' Dokumente eines Kunden auflisten
 ' ===========================================================================
 ' Zweck:       öbersicht aller Dokumente eines Kunden
 ' Nutzung:     CALL DOKLIST(CodeKU%)
 '              CodeKU% = Nummer des Kunden
 ' ===========================================================================
 
SUB DOKLIST(CodeKU%)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 MOUSE OFF 
 SET STATUS "WARTEN: Dokumente werden gesucht..."
 DOKIND% = 0
 FILE GAkquiDat$
 INDEX CodeKU.GAkquiDat$
 SELECT FIRST 
 SELECT KEY CodeKU% FILE GAkquiDat$ INDEX CodeKU.GAkquiDat$
 WHILE (CodeKU% = CodeKU.GAkquiDat$) AND (DOKIND% < 80) AND NOT EOF (GAkquiDat$)
   IF CodeDOK.GAkquiDat$ <> 0 THEN 
     SELECT KEY CodeDOK.GAkquiDat$ FILE "dokument" INDEX CodeDOK.dokument
     DOKU$(DOKIND%) = Dokument.DOKUMENT + " (Nr.: " + STR$ (CodeDOK.GAkquiDat$,"000000") + ")"
     DOKIND% = DOKIND% + 1
   END IF 
   SELECT NEXT FILE GAkquiDat$ INDEX CodeKU.GAkquiDat$
 WEND 
 IF DOKIND% <> 0 THEN 
   CREATE DIALOG "DOKLIST",0,0,302,152,title$,"MS Sans Serif",8
   ADD DIALOG "DOKLIST",5,5,8,223,8,0,"Auflistung aller Dokumente, die an eine Adressen geschickt wurden:"
   ADD DIALOG "DOKLIST",5,4,24,214,8,0,"Um ein bestimmtes Dokument einzusehen, wÑhlen Sie dieses aus"
   ADD DIALOG "DOKLIST",5,4,33,124,10,0,"und bestÑtigen die Auswahl mit "
   ADD DIALOG "DOKLIST",7,4,44,293,82,2,2,DOKU$,Auswahl$," "
   ADD DIALOG "DOKLIST",1,195,131,50,16,1,"&OK",1,1
   ADD DIALOG "DOKLIST",1,247,131,50,16,0,"&Abbruch",0,0
   DIALOG "DOKLIST",req%
   REMOVE DIALOG "DOKLIST"
   IF req% = 1 THEN 
     Dok% = VAL ( MID$ (Auswahl$(0), LEN (Auswahl$(0)) - 6,6))
     CALL DOKBearbeiten(Dok%,0)
   END IF 
 ELSE 
   REQUEST "Keine Dokumente gefunden!","",0
 END IF 
 MOUSE ON 
 SET STATUS "Bereit"
 END SUB 
 
 
 
 
 '      **********************************************
 '      ** Serviceroutinen fÅr Dokumentenverwaltung **
 '      **********************************************
 
SUB DOKUMENTSRV()
 IF disabled%("DOKUMENT") THEN END SUB 
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 SELECT WHERE FILE "dokument"
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(2,"OFFICE\connect" + _fpw$)
 CALL DFile(2,"OFFICE\banken" + _fpw$)
 SELECT CASE UCASE$ (_projekt$)
 CASE "FACTURA"
   CALL DFile(3,"MASTER" + _fpw$)
   CALL DFile(3,"MAHNUNG" + _fpw$)
   CALL DFile(3,"UMSATZ" + _fpw$)
   CALL DFile(3,"VERTRETE" + _fpw$)
   CALL DFile(3,"PROVISIO" + _fpw$)
   CALL DFile(3,"VERLEIH" + _fpw$)
   CALL DFile(3,"JOURNAL" + _fpw$)
   IF DEFA$ = "MEGA" THEN 
     CALL DFile(3,"KSATZ" + _fpw$)
     CALL DFile(3,"SSATZ" + _fpw$)
   END IF 
   CALL DFile(2,"OFFICE\produkt" + _fpw$)
   CALL DFile(2,"OFFICE\prgruppe" + _fpw$)
   CALL DFile(2,"OFFICE\kprodukt" + _fpw$)
 CASE "PROVIS","PROVISAG"
   CALL DFile(3,"KVERTRAG" + _fpw$)
   CALL DFile(3,"VORGANG" + _fpw$)
   CALL DFile(3,"MAADR" + _fpw$)
 END SELECT 
DokAnf1811041: 
 cudo% = CodeDOK.DOKUMENT
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "DOKUMENT"
 IF ProjectJN$ = "TRUE" THEN maske$ = "DOKEPRJ"
 WHILE _formend% = 0
   DOKsub% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     SET HEADING title$ + " - Dokumentenverwaltung"
     OPEN FORM GOFFForm$ + maske$
     SET f = superbase.form
     SET STATUS "Dokumentenverwaltung"
     CALL MNDOKSRV()
     FILE "DOKUMENT"
     INDEX Dokument.Dokument
     SELECT FORM FIRST 
     FORM 
     SET DISPLAY ON 
   END IF 
   MENU ON 
   MOUSE ON 
   dokgrup$ = Gruppe.Dokument
   IF projekt.dokument <> "" THEN 
     proj$ = Projekt.dokument
   ELSE 
     proj$ = "<ohne Zuordnung>"
   END IF 
   f.imp.visible = - 1
   f.such.visible = - 1
   f.left.visible = - 1
   f.right.visible = - 1
   IF dokpass.dokument = "" THEN 
     f.dokschu.Backcolor = 3
   ELSE 
     f.dokschu.Backcolor = 2
   END IF 
   FORM 
   GAppName$ = _netpath$ + "DOCP\dokument.pdf"
   CALL ClearKBDBuffer()

   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
    afo$ = FORM 
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1

   SELECT CASE DOKsub%
   CASE 1
     adrfound% = DokSuchen%(0,"")
   CASE 2
      CALL DOKallg()
   CASE 3
     codedok% = codedok.dokument
     IF dokpass.dokument = "" THEN 
       SELECT FIRST FILE "Stamm"
       passw$ = DokPass.stamm
       REQUEST "Soll das Dokument jetzt geschÅtzt werden?","",135,req%
       IF req% = 1 THEN 
         SELECT FIRST FILE "Dokument" INDEX codedok.dokument
         SELECT KEY codedok% LOCK FILE "Dokument" INDEX codedok.dokument
         IF EXISTS (_netpath$ + Dateiname.dokument) THEN 
           ON ERROR GOTO Doc301220033
           IF RIGHT$ (Dateiname.dokument,3) LIKE "doc" OR RIGHT$ (Dateiname.dokument,3) LIKE "dot" THEN 
             CALL open_doc(_netpath$ + Dateiname.dokument,"")
             CALL set_password(passw$)
             CALL close_doc( - 1)
           END IF 
           GOTO Doc301220033a
Doc301220033: 
           CALL Fehler("Word verursachte einen Fehler beim Versuch das Dokument zu schÅtzen!","Bitte prÅfen Sie, ob das Dokument bereits auserhalb des Programmes von Hand geschÅtzt wurde-> Dokument anzeigen-> Extras->Dokumentenschutz aufheben ")
           GOTO DokAnf1811041
Doc301220033a: 
           ON ERROR GOTO ErrorHandler
           DokPass.dokument = passw$
           STORE FILE "Dokument"
         END IF 
       END IF 
     ELSE 
 
       IF NOT MNdisabled%("DOKSCHUTZAUFHEBEN") THEN 
         REQUEST "Soll der Dokumentenschutz jetzt aufgehoben werden?","",135,req%
         IF req% = 1 THEN 
             SELECT FIRST FILE "Dokument" INDEX codedok.dokument
             SELECT KEY codedok% LOCK FILE "Dokument" INDEX codedok.dokument
             IF EXISTS (_netpath$ + Dateiname.dokument) THEN 
               passw$ = DokPass.dokument
               ON ERROR GOTO Doc301220034
               IF RIGHT$ (Dateiname.dokument,3) LIKE "doc" OR RIGHT$ (Dateiname.dokument,3) LIKE "dot" THEN 
                 CALL open_doc(_netpath$ + Dateiname.dokument,"")
                 CALL remove_password(passw$)
                 CALL close_doc( - 1)
               END IF 
Doc301220034: 
               ON ERROR GOTO ErrorHandler
               DokPass.dokument = ""
               STORE FILE "Dokument"
             END IF 
         END IF 
       ELSE 
         CALL Fehler("Das Dokument wurde bereits geschÅtzt","")
       END IF 
     END IF 
 
     DOKsub% = 0
   CASE 99
     MENU OFF 
     ENTER Dokument.dokument,0
     MENU ON 
   END SELECT 
 WEND 
 _formend% = 0
 IF FileChanged%("DOKUMENT") = 1 THEN CALL FStore("DOKUMENT")
 IF GCODieRuf% <> 0 OR GCODieRuf1% <> 0 OR GCODieRuf2% <> 0 THEN 
   ret% = CALL ("_SearchClose")
           GCODieRuf% = 0
           GCODieRuf1% = 0
           GCODieRuf2% = 0
 END IF 
 END SUB 
 
SUB DOKSRVTAB()
 CALL TableEdit("DOKUMENT")
 CALL MNDOKSRV()
 MENU ON 
 END SUB 
 


FUNCTION GetDateiendung$(iniPath$)
 GetDateiendung$ = ""
       lenge% = LEN (iniPath$)
       j% = 0
       FOR i% = lenge% TO 1 STEP - 1
         punkt$ = MID$ (inipath$,i%,1)
         IF punkt$ = "." THEN 
           j% = lenge% - i%
           GetDateiendung$ = MID$ (inipath$,i% + 1,j%)
           i% = 0
         END IF 
       NEXT i%
 END FUNCTION 

FUNCTION GetDateiendPkt%(iniPath$)
 GetDateiendPkt% = 0
       lenge% = LEN (iniPath$)
       j% = 0
       FOR i% = lenge% TO 1 STEP - 1
         punkt$ = MID$ (inipath$,i%,1)
         IF punkt$ = "." THEN 
           j% = i%
           GetDateiendPkt% = j%
           i% = 0
         END IF 
       NEXT i%
 END FUNCTION 

 ' Dokument importieren
 ' ======================================================================
SUB DOKImport()
 cudok% = CodeDOK.dokument
 cdir$ = DIRECTORY 
 cfile$ = FILE 
 FILE "dokument"
 codeku% = knr%
 iniPath$ = ""
 REM iniPath$ = DokuGetNam$(codeku%)
 REM GOTO w281020101
 
 REM *************************************************************************************************************
 texttitel$ = "Dokument importieren"
 textvorlage$ = "*.*"
 Superbase.ShowLongFileNames = - 1
 
 ON ERROR GOTO w230120055
 DIRECTORY GScanDir$
w230120055: 
 ON ERROR GOTO ErrorHandler 
 textvorlage$ = "*.*"
 REM REQUEST "Dokument importieren","",26,req%,textvorlage$
   IF Gcodie% = - 1 THEN 
     iniPath$ = GScanDir$
     IF inipath$ LIKE "" THEN iniPath$ = "C:\"
     REM REGISTER _netpath$ + "CODieLIB.dll","_SelectFile","IFFF"
     REM a% = CALL ("_SelectFile",texttitel$,iniPath$,textvorlage$)
     REM REGISTER CLEAR "_SelectFile"
     inifile$ = GMACodeDir$ + "codiesf0.ini"
     exefile$ = GMACodeDir$ + "codiesf0.exe"
     a% = CALL ("_SBFileExists",inifile$)
     IF a% = - 1 THEN 
       a% = CALL ("_SBFileDelete1",inifile$)
     END IF 
 
     a% = 1
     CALL WriteINIDes("DATA","ScanDir",GScanDir$,inifile$)
     CALL WriteINIDes("DATA","Titel","Auswahl der zu importierenden Datei",inifile$)
     CALL WriteINIDes("DATA","Filter","*.*",inifile$)
     IF EXISTS (GMACodeDir$ + "sready.ini") THEN 
       DELETE GMACodeDir$ + "sready.ini"
     END IF 
     i% = CALL ("ShellExecute",0,"open",exefile$,"","",1)
     zz% = 0
     WHILE NOT EXISTS (GMACodeDir$ + "sready.ini")
       zz% = zz% + 1
       MOUSE OFF 
       WAIT FOR 1
       IF zz% = 60 THEN 
         CALL Fehler("Irgendwas ist beim ôffnendialog schiefgegangen!","")
         GOTO w230120055
       END IF 
     WEND 
     inipath$ = ReadINIDes$("DATA","Importfile",inifile$)
     IF inipath$ = "" OR inipath$ = "leer" THEN 
       CALL Fehler("Es wurde keine zu importierende Datei ausgewÑhlt!","Der Import abgebrochen!")
       GOTO end130620051
     END IF 
 
     IF a% = 1 THEN 
       lenge% = LEN (inipath$)
       IF lenge% > 0 THEN 
         d1$ = inipath$
w120620061: 
         pos% = INSTR (d1$,"\")
         IF pos% > 0 THEN 
           d2$ = MID$ (d1$,pos% + 1)
           d1$ = d2$
           GOTO w120620061
         END IF 
         dokname$ = "IMP-" + FN ibm(d1$)
 
         REM jetz kopieren nach GScandir$+"backup.imp\"
         a% = CALL ("_SBSetCurrentDir",GScandir$)
         ziel$ = GScandir$ + "\0-backup.imp\"
         a% = CALL ("_SBCreateDir",ziel$)
         datum$ = DATE$ ( TODAY ,"yyyy-mm-0d")
         zeit$ = TIME$ ( NOW ,"hh-mm-ss")
         datetime$ = datum$ + "-" + zeit$ + "-"
         ziel$ = GScandir$ + "\0-backup.imp\" + datetime$ + d1$
         REM CALL Fehler(ziel$,"")
         a% = CALL ("_SBFileCopy",iniPath$,ziel$)
         IF a% = - 1 THEN 
           REM Kopie existiert
         END IF 
 
       END IF 
     END IF 
 REM ********************************************************************************************************************    
 
w281020101: 
     a% = CALL ("_SBFileExists",iniPath$)
     DIRECTORY cdir$
     IF a% = - 1 THEN 
       req% = 1
       REM ziel$ = GMACodeDir$ + "tt.doc"
       endung$ = RIGHT$ (iniPath$,3)
       ziel$ = GMACodeDir$ + "tt." + endung$
       REM CALL Fehler(ziel$,"")
       IF EXISTS (ziel$) THEN DELETE ziel$
       a% = CALL ("_SBFileCopy",iniPath$,ziel$)
       IF a% = - 1 THEN 
         REM CALL Fehler(ziel$,"Kopieren hat geklappt")
         textvorlage$ = ziel$
       ELSE 
         textvorlage$ = iniPath$
       END IF 
     END IF 
   ELSE 
     REQUEST "Dokument importieren","",26,req%,textvorlage$
     DIRECTORY cdir$
     IF req% = 1 AND EXISTS (textvorlage$) THEN 
       a% = - 1
     END IF 
   END IF 
 
 IF req% = 1 THEN 
   IF a% = - 1 THEN 
     REM ******************************************************************
     REM ******************************************************************
     Gruppe$ = "allgemeine Schreiben"
     IF RIGHT$ (dokname$,3) LIKE "msg" THEN Gruppe$ = "MAIL-CBFC"
     REM CREATE DIALOG "DOKNEU",0,0,250,147,title$,"MS Sans Serif",8
     REM ADD DIALOG "DOKNEU",5,28,10,205,9,0,"Bitte geben Sie fÅr das Dokument eine Bezeichnung ein."
     REM ADD DIALOG "DOKNEU",9,4,12,20,21,2
     REM ADD DIALOG "DOKNEU",5,28,19,134,9,0,"(diese kann bis zu 60 Zeichen enthalten)"
     REM ADD DIALOG "DOKNEU",5,28,34,214,10,0,"Bei Bedarf kînnen Sie auch die Zuordnung zu einer Dokumenten-"
     REM ADD DIALOG "DOKNEU",5,28,44,53,10,0,"gruppe Ñndern."
     REM ADD DIALOG "DOKNEU",5,28,93,79,9,0,"&Bezeichnung"
     REM ADD DIALOG "DOKNEU",6,28,103,208,12,0,0,dokname$,60
     REM ADD DIALOG "DOKNEU",5,28,62,65,8,0,"&Gruppe"
     REM ADD DIALOG "DOKNEU",8,28,72,140,48,259,2,Gruppe$,DOKGruppen$
     REM ADD DIALOG "DOKNEU",1,80,126,49,15,1,"&OK",1,1
     REM ADD DIALOG "DOKNEU",1,130,126,50,14,0,"&Abbrechen",0,0
     REM DIALOG "DOKNEU",req%
     REM REMOVE DIALOG "DOKNEU"
dokprj20040616:   
     IF prj11$ = "" THEN prj11$ = "Projekt"
     Auswahl$ = Gruppe$
 
     CREATE DIALOG "DOKNEU",0,0,253,177,title$,"MS Sans Serif",8
     ADD DIALOG "DOKNEU",4,0,0,253,153,0,""
     ADD DIALOG "DOKNEU",9,6,14,20,21,2
     ADD DIALOG "DOKNEU",5,30,10,205,10,0,"Bitte geben Sie fÅr das neue Dokument eine Bezeichnung ein."
     ADD DIALOG "DOKNEU",5,30,20,134,10,0,"(diese kann bis zu 60 Zeichen enthalten)"
     ADD DIALOG "DOKNEU",5,30,35,214,10,0,"Bei Bedarf kînnen Sie auch die Zuordnung zu einer Dokumenten-"
     ADD DIALOG "DOKNEU",5,30,45,53,10,0,"gruppe Ñndern."
     ADD DIALOG "DOKNEU",5,30,94,79,10,0,"&Bezeichnung"
     ADD DIALOG "DOKNEU",6,30,104,208,12,0,0,dokname$,60
     ADD DIALOG "DOKNEU",5,30,64,65,8,0,"&Gruppe"
     ADD DIALOG "DOKNEU",8,30,73,140,218,259,2,Auswahl$,DOKGruppen$
     ADD DIALOG "DOKNEU",1,30,127,208,15,1,prj11$,2,1
     ADD DIALOG "DOKNEU",1,75,157,50,15,1,"&OK",1,1
     ADD DIALOG "DOKNEU",1,130,157,50,15,0,"&Abbrechen",0,0
     DIALOG "DOKNEU",req%
     REMOVE DIALOG "DOKNEU"
     IF req% > 0 THEN Gruppe$ = Auswahl$
     IF req% = 2 THEN 
      nachfolger% = PRJSuche%(0)
      IF nachfolger% <> 0 THEN 
        SELECT KEY nachfolger% FILE "project" INDEX codepr.project
        codeprdok% = nachfolger%
        Projektdok$ = LTRIM$ (Projektnummer.project) + "/" + LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
        prj11$ = LTRIM$ (Projektnummer.project) + "/" + LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
      END IF 
       GOTO dokprj20040616
     END IF 
     IF req% = 1 THEN 
       REM docpath$ = LEFT$ (_netpath$,2) + ReadConfig$("DOKUMENTE",Gruppe$)
       docpath$ = GetDocPath$(Gruppe$)
       IF RIGHT$ (docpath$,1) <> "\" THEN docpath$ = docpath$ + "\"
       MOUSE OFF 
       SET STATUS "Dokument wird importiert..."
       afo$ = FORM 
       BLANK FILE "dokument"
       CodeDOK.dokument = SER ("dokument",1)
       cudok% = CodeDOK.dokument
       GCodeDok% = cudok%
       REM codeErs.dokument = GMACodema%
       Creator.dokument = GMAName$
       IF dokname$ <> "" THEN 
         dokument.dokument = dokname$
       ELSE 
         dokument.dokument = textvorlage$
       END IF 
       IF codeprdok% > 0 THEN 
         codepr.dokument = codeprdok%
         Projekt.dokument = Projektdok$
       END IF 
       erstellt_am.dokument = TODAY 
       letzte_Bearbeit.dokument = TODAY 
       CodeMA.dokument = vcodema%
       SELECT KEY codema.dokument FILE "supervis" INDEX codema.supervis
       Bearbeiter.dokument = nachname.supervis
       docpath$ = GetDocPath$(Auswahl$)
       textdatei$ = docpath$ + LTRIM$ ( STR$ (CodeDOK.dokument,"99999999")) + "." + RIGHT$ (textvorlage$,3)
       Dateiname.dokument = textdatei$
       Gruppe.dokument = Auswahl$
       link.dokument = 0
       IF UCASE$ ( FORM ) <> "DOKEPRJ" THEN 
         codeku.dokument = knr%
         link.DOKUMENT = CodeKU.DOKUMENT
       END IF 
       IF UCASE$ ( FORM ) LIKE "AKQU*" THEN 
         codeaq.dokument = codeaq.GAkquiDat$
       END IF 
       IF UCASE$ ( FORM ) LIKE "MAST*" THEN 
         codems.dokument = codems.master
       END IF 
       CALL QuickStore("DOKUMENT")
       IF Gcodie% = - 1 THEN 
         von$ = textvorlage$
         nach$ = _netpath$ + textdatei$
         a% = CALL ("_SBFileCopy",von$,nach$)
       ELSE 
         COPY textvorlage$,_netpath$ + textdatei$
       END IF 
  REM**************************************************************************     
       textdatei$ = _netpath$ + Dateiname.dokument
       IF EXISTS (textdatei$) THEN 
         REM CALL QuickStore("dokument")
         REM CALL Fehler("test","")
         REM i% = CALL ("ShellExecute",0,"open",textdatei$,"","",1)
         CALL TextAnz(textdatei$)
         REM CALL (textdatei$)
       END IF 
       IF UCASE$ ( FORM ) <> "DOKEPRJ" AND LEFT$ ( UCASE$ ( FORM ),3) <> "AKQ" THEN 
         IF GCodieADR$ <> "TRUE" THEN 
           REM CALL Fehler("Termineintrag","")
           IF GTerminfrage% <> - 1 THEN 
             REQUEST "Eintrag in Termindatei vornehmen?","",130,raa%
           ELSE 
             raa% = 1
           END IF 
         END IF 
         IF GCodieADR$ LIKE "TRUE" THEN 
           REM ***********************************************************************************
           REM 
           optemail% = 1
           DIM dlg1 AS Dialog
           DIM control AS DialogControl 
 
           Superbase.Dialogs.Add("Dialogname")
           SET dlg1 = Superbase.Dialogs.Dialogname
           dlg1.Move(0,0,150,73)
           dlg1.Caption = "Dokumentenwahl"
           dlg1.FontName = "MS Sans Serif"
           dlg1.FontSize = 8
 
           SET control = dlg1.Add("DialogFrame1","DialogFrame")
           control.Move(2,8,150,44)
           control.Caption = " WÑhlen Sie eine Option "
 
           SET control = dlg1.Add("DialogOptionButton1","DialogOptionButton")
           control.Move(6,20,114,10)
           control.Caption = "allg.Termin"
           control.Bind("optemail%")
           control.ValueOn = 1
 
           SET control = dlg1.Add("DialogOptionButton2","DialogOptionButton")
           control.Move(6,32,114,9)
           control.Caption = "Bug-Termin"
           control.Bind("optemail%")
           control.ValueOn = 2
 
           SET control = dlg1.Add("DialogCommandButton1","DialogCommandButton")
           control.Move(39,54,43,16)
           control.Default = 1
           control.Caption = "OK"
           control.ReturnValue = 1
 
           SET control = dlg1.Add("DialogCommandButton2","DialogCommandButton")
           control.Move(85,54,42,16)
           control.Caption = "Abbruch"
           control.ReturnValue = 0
 
           DIALOG "Dialogname",reqemail%
           REMOVE DIALOG "Dialogname"
 
           IF reqemail% = 1 THEN 
             IF optemail% = 1 THEN 
               REM normaler Termin
               CALL ADRDokRegister(CodeDOK.dokument)
             ELSE 
               REM Bug Termin
               GAkquiDat$ = "AKQUISEB"
               CALL AQBugNeu()
               GAkquiDat$ = "AKQUISE"
             END IF 
           END IF 
           GCodeDok% = 0
           REM *********************************************************************************** 
         ELSE 
           IF raa% = 1 THEN CALL ADRDokRegister(CodeDOK.dokument)
         END IF 
       END IF 
       
       IF Gdokloevor$ LIKE "TRUE" THEN a% = CALL ("_SBFileDelete2",iniPath$)
     END IF 
   ELSE 
     CALL Fehler("Dokument konnte nicht gefunden werden!","")
   END IF 
 END IF 
 SELECT FORM KEY cudok% FILE "DOKUMENT" INDEX CodeDOK.dokument
 FORM 
 MOUSE ON 
end130620051: 
 FILE cfile$
 DIRECTORY cdir$
 END SUB 
  
  
 ' Dokument bearbeiten (Aufruf fÅr MenÅ)
 ' ======================================================================
 
SUB DOKSRVBearb()
 CALL DOKBearbeiten(CodeDOK.dokument,0)
 END SUB 
 
  
 ' Dokument suchen
 ' ======================================================================
 ' Stand: 12.09.93   
 
SUB DOKVSuchen()
 cudok% = CodeDOK.DOKUMENT
 
 DOKGruppen$(0) = "<ALLE DOKUMENTENGRUPPEN>"
 DOKGruppen$(1) = "allgemeine Schreiben"
 CALL FillDokGruppe(1)
 a% = 0
 cudo% = 0
 CREATE DIALOG "DOK",0,0,300,338,title$,"MS Sans Serif",8
 ADD DIALOG "DOK",9,2,4,22,23,2
 ADD DIALOG "DOK",5,26,11,236,9,0,"WÑhlen Sie eine Dokumentengruppe aus:"
 ADD DIALOG "DOK",7,25,25,263,250,2,2,DOKGruppen$,Auswahl$,Gruppe.dokument
 ADD DIALOG "DOK",6,25,300,98,11,128,0,Gsuna1$,50
 ADD DIALOG "DOK",2,130,300,28,10,0,"UND","J","N",Gund$
 ADD DIALOG "DOK",6,160,300,108,11,128,0,Gsuna2$,50
 ADD DIALOG "DOK",5,25,270,250,30,0,"Geben Sie hier bis zu 2 Bestandteile des Dokumentennamens ein, den Sie suchen: Die Begriffe kînne mit UND verknÅpft werden. Die Eingabe von Suchbegriffen ist optional!"

 ADD DIALOG "DOK",1,106,317,48,16,1,"&Weiter",1,1
 ADD DIALOG "DOK",1,158,317,48,16,0,"&Abbruch",0,0
 ADD DIALOG "DOK",1,210,317,48,16,0,"Alle",2,2
 DIALOG "DOK",req%
 REMOVE DIALOG "DOK"
 IF req% > 0 THEN 
   req% = DOKAuswahl%(Auswahl$(0),0,req%)
   IF req% <> - 1 THEN 
     cudok% = req%
     cudo% = req%
   END IF 
 END IF 
 FILE "Dokument"
 SELECT FORM KEY cudok% FILE "DOKUMENT" INDEX codeDok.DOKUMENT
 SET INDEX Dokument.DOKUMENT
 INDEX Dokument.DOKUMENT
 FORM 
 MOUSE OFF 
 DOKGruppen$(0) = "allgemeine Schreiben"
 CALL FillDokGruppe(0)
 a% = 0
 MOUSE ON 
 END SUB 
 
 
 ' Dokument lîschen
 ' ======================================================================
 
SUB DOKVLoeschen()
 cudo% = CodeDOK.DOKUMENT
 CALL DOKLoeschen(cudo%)
 FORM 
 END SUB 
 
 
 ' Auswahl Dokumentengruppe
 ' ======================================================================
 
SUB DOKAuswGrup()
 cfile$ = FILE 
 cudok% = CodeDOK.dokument
 IF NEW ("dokument") OR MOD ("dokument") THEN CALL FStore("dokument")
 caption$ = "Auswahl: Dokumentengruppe"


 CREATE DIALOG "AUSWDOK",0,0,300,318,title$,"MS Sans Serif",8
 ADD DIALOG "AUSWDok",5,28,6,174,8,0,"Bitte geben Sie an, zu welcher Gruppe das"
 ADD DIALOG "AUSWDok",9,4,9,20,21,2
 ADD DIALOG "AUSWDok",5,28,16,174,9,0,"aktuelle Dokument zugeordnet werden soll:"
 ADD DIALOG "AUSWDok",5,28,27,174,8,0,""
 ADD DIALOG "AUSWDOK",7,25,35,263,260,2,2,DOKGruppen$,Auswahl$,Gruppe.dokument
 ADD DIALOG "AUSWDOK",1,106,297,48,16,1,"&OK",1,1
 ADD DIALOG "AUSWDOK",1,158,297,48,16,0,"&Abbruch",0,0
 DIALOG "AUSWDOK",req%
 REMOVE DIALOG "AUSWDOK"



 IF req% = 1 THEN 
   SELECT KEY cudok% LOCK FILE "dokument" INDEX CodeDOK.dokument
   Gruppe.Dokument = Auswahl$(0)
   CALL QuickStore("dokument")
 END IF 
 FILE cfile$
 SELECT FORM KEY cudok% FILE "dokument" INDEX CodeDok.dokument
 FORM 
 END SUB 
  
 
 
 '      **********************************
 '      ** Routinen fÅr Notizverwaltung **
 '      **********************************
 
 ' Notiz neu anlegen
 ' =======================================================================
 ' Zweck:       legt neuen Datensatz in der Notizdatei an
 ' Nutzung:     x%=NOTIZNeu%(Art$,Projekt$,Link%)
 '              Art$            = Art der Notiz
 '              Projekt$        = in welchem Projekt erfa·t
 '              Link%           = CodeXX des zugehîrigen Datensatzes einer
 '                                Projektdatei
 ' RÅckgabe:    x%              = Datensatznummer in der Notizdatei
 '                                0 = keine Notiz angelegt
 ' =======================================================================
 
FUNCTION NOTIZNeu%(Art$,Projekt$,Link%)
 MOUSE OFF 
 cfile$ = FILE 
 CALL DFile(2,"OFFICE\notiz" + _fpw$)
 FILE "Notiz"
 BLANK 
 SET STATUS "Datensatz neu angelegt..."
 CodeNO.notiz = SER ("notiz",1)
 Art.NOTIZ = Art$
 Projekt.NOTIZ = Projekt$
 Link.Notiz = Link%
 NOTIZNeu% = CodeNO.notiz
 CALL FStore("Notiz")
 FILE cfile$
 MOUSE ON 
 END FUNCTION 
 
SUB DOKKunde()
 _ku% = CodeKU.DOKUMENT
 _dok% = CodeDOK.DOKUMENT
 cindex$ = INDEX 
 IF NEW ("DOKUMENT") OR MOD ("DOKUMENT") THEN CALL FStore("DOKUMENT")
 SET STATUS "Adresse zuordnen"
 adr% = ADRSuche%(0)
 IF adr% <> 0 THEN 
   SELECT KEY _dok% LOCK FILE "DOKUMENT" INDEX CodeDOK.DOKUMENT
   CodeKU.DOKUMENT = adr%
   REM IF link.DOKUMENT = 0 THEN link.DOKUMENT = CodeKU.DOKUMENT
   link.DOKUMENT = CodeKU.DOKUMENT
   CALL FStore("DOKUMENT")
 END IF 
 SELECT FORM KEY _dok% FILE "DOKUMENT" INDEX CodeDOK.DOKUMENT
 SET INDEX cindex$$
 INDEX cindex$$
 FORM 
 MOUSE ON 
 END SUB 
 
 
 ' Notiz bearbeiten
 ' =======================================================================
 ' Zweck:       Anzeigen und éndern einer Notiz
 ' Nutzung:     CALL NOTIZBearbeiten(Note%)
 '              Note% = Datensatznummer der Notiz
 ' =======================================================================
 
SUB NOTIZBearbeiten(Note%)
 cfile$ = FILE 
 CALL DFile(2,"OFFICE\notiz" + _fpw$)
 FILE "Notiz"
 SELECT KEY Note% LOCK FILE "Notiz" INDEX CodeNO.notiz
 Caption$ = "NOTIZ - " + Art.notiz
 Notiz$ = Notiz.NOTIZ
 CREATE DIALOG "NOTE",0,0,320,205,title$,"MS Sans Serif",8
 ADD DIALOG "NOTE",9,4,4,20,21,4
 ADD DIALOG "NOTE",5,33,9,121,10,0,"Geben Sie die gewÅnschte Notiz ein:"
 ADD DIALOG "NOTE",6,33,26,272,151,68,2,Notiz$,4000
 ADD DIALOG "NOTE",1,193,183,54,16,0,"&OK",1,1
 ADD DIALOG "NOTE",1,251,183,54,16,0,"&Abbrechen",0,0
 DIALOG "NOTE",req%
 REMOVE DIALOG "NOTE"
 IF req% = 1 THEN 
   IF notiz$ <> "" THEN 
     Notiz.Notiz = Notiz$
     CALL FStore("NOTIZ")
   ELSE 
     SELECT REMOVE 
   END IF 
 END IF 
 FILE cfile$
 END SUB 
 
 
 ' Notiz lîschen
 ' =======================================================================
 ' Zweck:       Lîschen einer Notiz
 ' Nutzung:     CALL NOTIZLoeschen(Notiz%)
 '              Notiz%          = Datensatznummer der Notiz
 ' =======================================================================
 
SUB NOTIZLoeschen(Notiz%)
 MOUSE OFF 
 cfile$ = FILE 
 CALL DFile(2,"OFFICE\notiz" + _fpw$)
 FILE "Notiz"
 SELECT KEY Notiz% LOCK FILE "Notiz" INDEX CodeNO.notiz
 SELECT REMOVE 
 FILE cfile$
 MOUSE ON 
 END SUB 
 
 
 ' Notiz auswÑhlen
 ' =======================================================================
 ' Zweck:       WÑhlt Notiz aus Notizdatei aus
 ' Nutzung:     x%=NOTIZAuswahl%(Art$,Projekt$,Link%)
 '              Art$            = Art der Notiz ("" fÅr alle Arten)
 '              Projekt$        = in welchem Projekt erfa·t ("" fÅr alle Projekte"
 '              Link%           = CodeXX des zugehîrigen Datensatzes einer
 '                                Projektdatei (0 fÅr alle Links)
 ' RÅckgabe:    x%              = Datensatznummer in der Notizdatei
 '                                0 = keine Notiz ausgewÑhlt
 ' =======================================================================
 
FUNCTION NOTIZAuswahl%(Art$,Projekt$,Link%)
 MOUSE OFF 
 cfile$ = FILE 
 CALL DFile(2,"OFFICE\notiz" + _fpw$)
 IF Art$ = "" THEN Art$ = "**" ELSE Art$ = Art$ + "*"
 IF Projekt$ = "" THEN Projekt$ = "**" ELSE Projekt$ = Projekt$ + "*"
 FILE "Notiz"
 INDEX CodeNO.notiz
 NoteInd% = 0
 SELECT FIRST 
 WHILE NOT EOF ("notiz")
   IF Link% = 0 THEN 
     IF Art.Notiz LIKE Art$ AND Projekt.Notiz LIKE Projekt$ THEN 
       Notizen$(NoteInd%) = Notiz.Notiz + " (" + STR$ (CodeNO.notiz,"000000") + ")"
       NoteInd% = NoteInd% + 1
     END IF 
   ELSE 
     IF Art.Notiz LIKE Art$ AND Projekt.Notiz LIKE Projekt$ AND Link.Notiz = Link% THEN 
       Notizen$(NoteInd%) = Notiz.Notiz + " (" + STR$ (CodeNO.notiz,"000000") + ")"
       NoteInd% = NoteInd% + 1
     END IF 
   END IF 
   SELECT NEXT FILE "NOTIZ" INDEX CodeNO.notiz
 WEND 
 CREATE DIALOG "NOTESEL",0,0,290,148,title$,"MS Sans Serif",8
 ADD DIALOG "NOTESEL",9,8,6,18,21,2
 ADD DIALOG "NOTESEL",5,33,12,89,8,0,"WÑhlen Sie eine Notiz aus:"
 ADD DIALOG "NOTESEL",7,32,24,252,90,2,2,Notizen$,Auswahl$
 ADD DIALOG "NOTESEL",1,173,126,55,16,0,"&OK",1,1
 ADD DIALOG "NOTESEL",1,229,126,55,16,0,"&Abbrechen",0,0
 DIALOG "NOTESEL",req%
 REMOVE DIALOG "NOTESEL"
 IF req% = 1 THEN 
   Notesel$ = LEFT$ ( RIGHT$ (Auswahl$(0),7),6)
   NOTIZAuswahl% = VAL (Notesel$)
 ELSE 
   NOTIZAuswahl% = 0
 END IF 
 FILE cfile$
 MOUSE ON 
 END FUNCTION 
 
 
 
 '      **************************
 '      ** Routinen fÅr Mailing **
 '      **************************
 
 ' Mailing
 ' ===========================================================================
 ' ToDo: Stichwortauswahl 
 
SUB MAILING()
 cdir$ = DIRECTORY 
 IF disabled%("MAILING") THEN END SUB 
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 IF OPEN ("adrtemp") THEN CLOSE FILE "ADRTEMP"
 CALL DFile(2,"OFFICE\adrtemp" + _fpw$)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\keywords" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 OK% = 1
 aopt% = 5
 opt% = 0
 userfile$ = STR$ (CodeMA.supervis,"00000000")
 SET STATUS "Mailing - Schritt 1..."
 CREATE DIALOG "MAILING",0,0,257,136,title$,"MS Sans Serif",8
 ADD DIALOG "MAILING",9,6,9,22,24,2
 ADD DIALOG "MAILING",5,36,9,211,10,0,"Mailing - Schritt 1"
 ADD DIALOG "MAILING",4,36,19,212,5,0,""
 ADD DIALOG "MAILING",5,36,28,212,22,0,"Nachfolgend fÅhrt das Programm Sie durch alle notwendigen Arbeitsschritte, um ein Mailing durchzufÅhren."
 ADD DIALOG "MAILING",5,36,51,212,23,0,"Zuerst mÅssen Sie auswÑhlen, ob Sie eine neue Adre·liste erstellen mîchten oder mit der zuletzt erstellten Adre·liste arbeiten mîchten."
 ADD DIALOG "MAILING",3,47,82,124,10,0,"&neue Adre·liste erstellten",0,opt%
 ADD DIALOG "MAILING",3,47,92,136,12,0,"&zuvor erstellte Adre·liste verwenden",1,opt%
 ADD DIALOG "MAILING",4,36,107,212,5,0,""
 ADD DIALOG "MAILING",1,136,116,55,15,1,"&Weiter >>",1,1
 ADD DIALOG "MAILING",1,192,116,55,15,0,"&Abbrechen",0,0
 DIALOG "MAILING",req%
 REMOVE DIALOG "MAILING"
 IF req% = 0 THEN END SUB 'Procedure verlassen
 SELECT CASE opt%
 CASE 1
   IF EXISTS ("c:\" + userfile$ + ".sbf") THEN 
     OPEN FILE "c:\" + userfile$
   ELSE 
     CALL Fehler("Sie hatten noch keine Mailingdatei erzeugt!","Bitte erzeugen Sie eine neue Adre·liste.")
     END SUB 'Procedure verlassen
   END IF 
 CASE 0
   SET STATUS "Mailing - Schritt 1 - Filter erstellen..."
   REM adrfilt$ = GetFilter$(_netpath$ + "OFFICE\ADRESSEN")
   adrfilt$ = GetFilter$(_netpath$ + "OFFICE\ADRESSEN")
   IF adrFilt$ = "" THEN 
     CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
     END SUB 'Procedure verlassen
   END IF 
   CALL CreateMailFile(adrfilt$,userfile$)
   IF tString$ = "" THEN END SUB 
 END SELECT 
 REM -- Schritt 2 - Adre·liste bearbeiten
 opt% = 0
 SET STATUS "Mailing - Schritt 2..."
 CREATE DIALOG "MAIL2",0,0,257,136,title$,"MS Sans Serif",8
 ADD DIALOG "MAIL2",9,6,9,22,24,2
 ADD DIALOG "MAIL2",5,36,9,210,10,0,"Mailing - Schritt 3"
 ADD DIALOG "MAIL2",4,36,19,212,5,0,""
 ADD DIALOG "MAIL2",5,36,28,212,10,0,"Die Adre·liste wurde erfolgreich erstellt und geladen."
 ADD DIALOG "MAIL2",5,36,46,212,10,0,"Mîchten Sie die Adre·liste vor der Mailingerstellung bearbeiten?"
 ADD DIALOG "MAIL2",3,47,66,124,11,0,"&Ja",0,opt%
 ADD DIALOG "MAIL2",3,47,79,136,11,0,"&Nein",1,opt%
 ADD DIALOG "MAIL2",4,36,107,212,5,0,""
 ADD DIALOG "MAIL2",1,136,116,55,15,1,"&Weiter >>",1,1
 ADD DIALOG "MAIL2",1,192,116,55,15,0,"&Abbrechen",0,0
 DIALOG "MAIL2",req%
 REMOVE DIALOG "MAIL2"
 IF req% = 0 THEN 
   CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
   END SUB 'Procedure verlassen
 END IF 
 IF opt% = 0 THEN 
   REM Adre·liste bearbeiten
   SET STATUS "Adre·liste bearbeiten..."
   Superbase.Dialogs.Add("MAIL2")
   SET dlg = Superbase.Dialogs.MAIL2
   dlg.Move(0,0,425,330):dlg.Caption = "Dialog Title":dlg.FontName = "MS Sans Serif"
   dlg.FontSize = 8:dlg.OnActivate = "MLFillList1"
   SET c = dlg.Add("DialogIcon1","DialogIcon"):c.Move(6,11,22,23):c.Icon = 2
   SET c = dlg.Add("DialogLabel1","DialogLabel"):c.Move(33,11,184,9):c.Caption = "Mailing - Schritt 3 (Adre·liste bearbeiten)"
   SET c = dlg.Add("DialogFrame1","DialogFrame"):c.Move(33,19,183,5):c.Caption = ""
   SET c = dlg.Add("DialogLabel3","DialogLabel"):c.Move(33,28,183,21):c.Caption = "Bitte entfernen Sie in der nachfolgenden Liste die EintrÑge, die nicht im Mailing erscheinen sollen."
   SET c = dlg.Add("adrList","DialogListBox"):c.Move(33,52,320,268):c.Sorted = 1:c.ScrollBars = 2:c.OnDblClick = "MListDel1"
   SET c = dlg.Add("cmDelete","DialogCommandButton"):c.Move(360,83,55,14):c.Caption = "&Entfernen":c.ReturnValue = 0:c.Cancel = 1:c.OnClick = "MListDel1"
   SET c = dlg.Add("cmOK","DialogCommandButton"):c.Move(360,181,55,15):c.Default = 1:c.Caption = "&Weiter":c.ReturnValue = 1
   SET c = dlg.Add("cmCancel","DialogCommandButton"):c.Move(360,200,55,15):c.Caption = "&Abbrechen":c.ReturnValue = 0:c.Cancel = 1
   DIALOG "MAIL2",req%
   REMOVE DIALOG "MAIL2"
   IF req% = 0 THEN 
     CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
     END SUB 'Procedure verlassen
   END IF 
 END IF 
 
 REM -- Schritt 3 - Export der Adre·liste
 opt% = 0
 SET STATUS "Adre·liste exportieren..."
 CREATE DIALOG "MAIL3",0,0,257,136,title$,"MS Sans Serif",8
 ADD DIALOG "MAIL3",9,6,9,22,24,2
 ADD DIALOG "MAIL3",5,36,9,210,10,0,"Mailing - Schritt 5"
 ADD DIALOG "MAIL3",4,36,19,212,5,0,""
 ADD DIALOG "MAIL3",5,36,28,212,21,0,"Die Adre·liste mu· nun in ein von Ihrer Textverarbeitung unterstÅtztes Datenbankformat umgewandelt werden."
 ADD DIALOG "MAIL3",5,36,51,212,26,0,"Bitte geben Sie an, welches Datenbankformat von Ihrer Textverarbeitung genutzt werden kann (vorzugsweise sollten Sie dBase verwenden)."
 ADD DIALOG "MAIL3",3,47,81,144,11,0,"Umwandlung in &dBase- und Excel-Format",0,opt%
 ADD DIALOG "MAIL3",3,47,92,136,12,0,"Umwandlung in A&SCII-Format",1,opt%
 ADD DIALOG "MAIL3",4,36,107,212,5,0,""
 ADD DIALOG "MAIL3",1,136,116,55,15,1,"&Weiter >>",1,1
 ADD DIALOG "MAIL3",1,192,116,55,15,0,"&Abbrechen",0,0
 DIALOG "MAIL3",req%
 REMOVE DIALOG "MAIL3"
 IF req% = 0 THEN 
   CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
   END SUB 'Procedure verlassen
 END IF 
 SELECT CASE opt%
 CASE 0
   CALL FileExport(userfile$,1)
 CASE 1
   CALL FileExport(userfile$,2)
 END SELECT 
 DIRECTORY cdir$
 CALL MAILAQAkt(userfile$)
 END SUB 
 
 ' Zusatzroutinen fÅr Dialog MAIL3
 ' ===============================
 
SUB MLFillList()
 MOUSE OFF 
 FILE userfile$
 INDEX CodeKU
 SELECT FIRST 
 WHILE NOT EOF (userfile$)
   dlg.adrList.AddItem(name1.userfile$ + ", " + name2.userfile$ + ", " + Ort.userfile$ + SPACE$ (165) + CodeKU.userfile$)
   SELECT NEXT 
 WEND 
 MOUSE ON 
 END SUB 
 
SUB MListDel()
 lidx% = dlg.AdrList.ListIndex
 IF lidx% <> 0 THEN 
   item$ = dlg.adrList.List(lidx%)
   SELECT KEY RIGHT$ (item$,6) LOCK FILE userfile$ INDEX CodeKU.userfile$
   REQUEST name1.userfile$ + ", " + name2.userfile$ + ", " + Ort,"Eintrag lîschen?",130,req%
   IF req% <> 0 THEN 
     dlg.adrList.RemoveItem(lidx%)
     SELECT REMOVE FILE userfile$
   END IF 
 END IF 
 END SUB 
 
 
 
 
 ' Adre·liste generieren
 ' ===========================================================================
 ' Zweck:       erzeugt Adre·liste fÅr Mailing
 ' Nutzung:     CALL CreateMailFile(filter$,destfile$)
 '              filter$         = Filterbedingungen
 '              destfile$       = Zieldatei
 ' ===========================================================================
 
SUB CreateMailFile(filter$,destfile$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(2,"OFFICE\connect" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 REM CALL DFile(2,"OFFICE\adrtemp" + _fpw$)
 REM CALL DFile(3,"maadr" + _fpw$)
 cfile$ = FILE 
 SET STATUS "Feldauswahl..."
 MOUSE OFF 
 FILE "adressen"
 IF OPEN (destfile$) THEN CLOSE FILE destfile$
 IF EXISTS (destfile$ + ".sbf") THEN DELETE destfile$ + ".*"
 REM 280999
 adrser% = 1
 bef$ = "SELECT WHERE " + filter$
 EXECUTE bef$
 SELECT FIRST 
   a% = 0
   b% = RECCOUNT ("ADRESSEN")
   IF b% > 20000 THEN 
     b% = 20000
     REDIM AdrFound$(20000)
   ELSE 
     REDIM AdrFound$( RECCOUNT ("ADRESSEN"))
   END IF 
   FOR a% = 0 TO b%
     AdrFound$(a%) = ""
   NEXT a%
   a% = 0
   WHILE NOT EOF ("ADRESSEN")
     AdrFound$(a%) = nachname.adressen + STR$ (codeku.adressen,"000000")
     a% = a% + 1
     SELECT NEXT FILE "ADRESSEN
   WEND 

 CALL SerieNeu1("ADRESSEN")

 SET STATUS "Adre·liste wird generiert..."
 MOUSE OFF 
 

 MOUSE ON 
 END SUB 
 
 
 ' FeldergÑnzung
 ' =======================================================================
 ' Zweck:       fÅgt ein neues Feld an die aktuelle Datei an
 ' Aufruf:      CALL FldAdd(feldname$,newformat$,IndexType%
 '
 '              IndexType%      0 = kein Index
 '                              1 = Mehrfachindex
 '                              2 = SchlÅsselindex
 '
 ' Beispiel:    CALL FldAdd("Notiz","TXT;4000",0)
 ' Hinweis:     - alle énderungen mÅssen abschlie·end mit 
 '                SAVE FILE "filename" gesichert werden
 ' -----------------------------------------------------------------------
 ' 01.09.93   
SUB FldAdd(Feldname$,NewFormat$,IndexType%)
 CALL GaugeUpdate()
 CALL Server("UPDFILE", FILE )
 CALL Server("UPDFIELD",Feldname$)
 CALL Server("UPDSTATUS","prÅfen")
 SET STATUS "prÅfen Datei " + FILE + " Feld " + Feldname$
 ON ERROR GOTO TrapFileFind
 tsfound% = 0
 a$ = FIELDINFO$ (FeldName$,0)
 tsfound% = 1
TrapFileFind: 
 IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
 IF tsfound% = 0 THEN 
   REM ** Feld neu erstellen
   ADD Feldname$ + ";" + NewFormat$ + ";1;1"
   SELECT CASE IndexType%
   CASE 1
     CREATE INDEX ON Feldname$$
   CASE 2
     CREATE INDEX ON Feldname$$ UNIQUE 
   END SELECT 
 ELSE 
   REM ** Feld auf FormatÑnderungen testen und anpassen
   oldindex% = 0
   IF GIndNeu% = - 1 THEN 
     IF FIELDINFO$ (feldname$,3) LIKE "IX*" THEN oldindex% = 1
   END IF 
   IF FIELDINFO$ (feldname$,3) LIKE "IX*" AND IndexType% = 0 THEN 
     CALL Server("UPDSTATUS","Indexlîschung")
     REMOVE INDEX Feldname$$
   END IF 
   ok% = 1
   NewForm% = 0
   NewIndex% = 0
   cFormat$ = TRIM$ ( FIELDINFO$ (Feldname$,0) + ";" + FIELDINFO$ (Feldname$,4))
   IF UCASE$ (cformat$) <> UCASE$ (NewFormat$) THEN 
     ok% = 0
     NewForm% = 1
   END IF 
   IndexType$ = FIELDINFO$ (feldname$,3)
   IF (IndexType$ = "IXD" AND IndexType% = 2) OR (IndexType$ = "IXU" AND IndexType% = 1) THEN 
     ok% = 0
     NewIndex% = 1
   END IF 
   IF FIELDINFO$ (feldname$,3) LIKE "" AND IndexType% <> 0 THEN 
     NewIndex% = 1
     ok% = 0
   END IF 
   IF oldindex% = 1 THEN 
     ok% = 0
     NewForm% = 1
   END IF 
   IF ok% = 0 THEN 
     IF NewForm% = 1 AND IndexType$ LIKE "IX*" THEN 
       CALL Server("UPDSTATUS","Indexlîschung")
       REMOVE INDEX Feldname$$
       df$ = FILE 
       SAVE FILE df$
     END IF 
     IF NewForm% = 1 THEN 
       CALL Server("UPDSTATUS","Formatanpassung")
       MODIFY Feldname$$,Feldname$ + ";" + NewFormat$
       CALL Server("UPDSTATUS","Indexanpassung")
       SELECT CASE IndexType%
       CASE 1
         CREATE INDEX ON Feldname$$
       CASE 2
         CREATE INDEX ON Feldname$$ UNIQUE 
       END SELECT 
       ok% = 1
     END IF 
   END IF 
   IF ok% = 0 THEN 
     IF NewIndex% = 1 THEN 
       IF IndexType$ LIKE "IX*" THEN 
         CALL Server("UPDSTATUS","Indexlîschung")
         REMOVE INDEX Feldname$$
       END IF 
       CALL Server("UPDSTATUS","Indexanpassung")
       SELECT CASE IndexType%
       CASE 1
         CREATE INDEX ON Feldname$$
       CASE 2
         CREATE INDEX ON Feldname$$ UNIQUE 
       END SELECT 
       ok% = 1
     END IF 
   END IF 
 END IF 
 df$ = FILE 
 SAVE FILE df$
 END SUB 
 
  
 
  
 


SUB FLFillList()
 MOUSE OFF 
 FILE "ADRESSEN"
 DIM adrFields$( FILEINFO ("ADRESSEN",1))
 FILLARRAY adrFields$,1
 FOR a% = 0 TO FILEINFO ("ADRESSEN",1) - 1
   dlg.sbdFields.AddItem(adrFields$(a%))
 NEXT a%
 MOUSE ON 
 END SUB 
 
SUB FLAdd()
 IF dlg.sbdFields.ListIndex <> 0 THEN 
   ok% = - 1
   IF dlg.ListFields.ListCount <> 0 THEN 
     FOR a% = 1 TO dlg.ListFields.ListCount
       IF dlg.ListFields.List(a%) = dlg.sbdFields.List(dlg.sbdFields.ListIndex) THEN ok% = 0
     NEXT a%
   END IF 
   IF ok% THEN 
     dlg.ListFields.AddItem(dlg.sbdFields.List(dlg.sbdFields.Listindex))
     dlg.ListFields.ListIndex = dlg.ListFields.ListCount
   ELSE 
     REQUEST "Das Feld wurde bereits ausgewÑhlt!"
   END IF 
 END IF 
 END SUB 
 
SUB FLDel()
 lidx% = dlg.ListFields.ListIndex
 IF lidx% <> 0 THEN 
   dlg.ListFields.RemoveItem(lidx%)
   IF lidx% <> 1 THEN dlg.ListFields.ListIndex = lidx% - 1
 END IF 
 END SUB 
 
SUB FLOK()
 FILE "ADRESSEN"
 tString$ = "CodeKU,Anrede,Vorname,Nachname,Stra·e,PLZ,Ort,Briefanrede"
 IF dlg.ListFields.ListCount <> 0 THEN 
   FOR a% = 1 TO dlg.ListFields.ListCount
     fieldname$ = dlg.ListFields.List(a%)
     ok% = - 1
     SELECT CASE fieldname$
     CASE "CodeKU","Anrede","Vorname","Nachname","Stra·e","PLZ","Ort","Briefanrede"
       ok% = 0
     END SELECT 
     IF ok% THEN 
       tString$ = tString$ + "," + fieldname$
     END IF 
   NEXT a%
 END IF 
 treq% = 1
 dlg.SetActive(0)
 END SUB 
  
 
 
 
 
 ' generierte Mailingliste auf Bildschirm ausgeben
 ' ===========================================================================
 ' Zweck:       zeigt vorher generierte Adre·liste auf Bildschirm an
 ' Nutzung:     CALL ShowMailFile(sourcefile$)
 '              sourcefile$     = Name der zu zeigenden Datei
 ' ===========================================================================
 
SUB ShowMailFile(sourcefile$)
 cfile$ = FILE 
 SET STATUS "Ausgabe der Ergebnisliste..."
 FILE sourcefile$
 prolog$ = "SELECT ALL REPORT WHERE "
 epilog$ = " ORDER REPORT TO WINDOW ~Mailingliste~"
 befehl$ = prolog$ + filter$ + epilog$
 EXECUTE befehl$
 FILE cfile$
 END SUB 
 
 
 ' SBF-Datei exportieren
 ' ===========================================================================
 ' Zweck:       exportiert eine Superbase-Datei in ein anderes Fileformat
 ' Nutzung:     CALL FileExport(sourcefile$,dest%)
 '              sourcefile$     = Name der zu exportierenden Datei
 '              dest%           = Zielformat
 '                              0 = Format kundendefiniert
 '                              1 = dBase-Format
 '                              2 = ASCII-Format
 ' ===========================================================================
  
SUB FileExport(sourcefile$,dest%)
 cfile$ = FILE 
 cdir$ = DIRECTORY 
 FILE sourcefile$
 DIRECTORY _netpath$ + "OFFICE\TEXT"
 SELECT CASE dest%
 CASE 0
   CALL ExportFile()
 CASE 1
   dateiname$ = "c:\ADRSER1.DBF"
   REM REQUEST "Export nach dBase..."," ",27,req%,dateiname$
   req% = 1
   IF req% = 1 THEN 
     SET STATUS "Exportiere Datei nach " + dateiname$ + " ..."
     IF EXISTS (dateiname$) THEN DELETE dateiname$
     EXPORT TO dateiname$ USING "3"
     IF EXISTS ("C:\ADRSER1.XLS") THEN DELETE "C:\ADRSER1.XLS"
     Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
     Superbase.Converters.SBF.SourceFile = sourcefile$
     Superbase.Converters.SBF.Descending = 0
     Superbase.Converters.SBF.Merge = 0
     Superbase.Converters.SBF.LogErrors = 0
     Superbase.Converters.SBF.MultiResponse = 0
     Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
     Superbase.Converters.XLS.DestFile = "c:\ADRSER1.XLS"
     Superbase.Converters.XLS.StartRow = 2
     Superbase.Converters.XLS.StartCol = 1
     Superbase.Converters.XLS.EndRow = - 1
     Superbase.Converters.XLS.EndCol = - 1
     Superbase.Converters.XLS.UseLabels = - 1
     Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
     SET STATUS "Ausgabe beendet!"
   END IF 
 CASE 2
   dateiname$ = "*.ASC"
   REQUEST "Export nach ASCII..."," ",27,req%,dateiname$
   IF req% = 1 THEN 
     SET STATUS "Exportiere Datei nach " + dateiname$ + " ..."
     IF EXISTS (dateiname$) THEN DELETE dateiname$
     EXPORT TO dateiname$
     SET STATUS "Ausgabe beendet!"
   END IF 
 END SELECT 
 DIRECTORY cdir$
 FILE cfile$
 END SUB 
 
 
 
 ' Aktualisierung Terminkalender
 ' ===========================================================================
 ' ehemals TERMINAkquiAkt:
 ' noch keine angepa·te ParameterÅbergabe
 
SUB MAILAQAkt(userfile$)
 opt% = 1
 adrser% = 1
 SET STATUS "Mailing - Schritt 5..."
 CREATE DIALOG "MAIL5",0,0,257,136,title$,"MS Sans Serif",8
 ADD DIALOG "MAIL5",9,6,9,22,24,2
 ADD DIALOG "MAIL5",5,36,9,211,10,0,"Mailing - Schritt 5"
 ADD DIALOG "MAIL5",4,36,19,212,5,0,""
 ADD DIALOG "MAIL5",5,36,28,212,21,0,"Zur Betreuung des Mailings kînnen Sie automatisch EintrÑge in der Termindatei erzeugen lassen."
 ADD DIALOG "MAIL5",5,36,51,212,25,0,"Soll das Programm diese EintrÑge fÅr Sie vornehmen?"
 ADD DIALOG "MAIL5",3,47,76,124,11,0,"&Ja",0,opt%
 ADD DIALOG "MAIL5",3,47,87,136,12,0,"&Nein",1,opt%
 ADD DIALOG "MAIL5",4,36,107,212,5,0,""
 ADD DIALOG "MAIL5",1,136,116,55,15,1,"&Weiter >>",1,1
 ADD DIALOG "MAIL5",1,192,116,55,15,0,"&Abbrechen",0,0
 DIALOG "MAIL5",req%
 REMOVE DIALOG "MAIL5"
 IF opt% = 0 AND req% = 1 THEN 
   cfile$ = FILE 
   FILE "AKTIONEN"
   DIM AKListe$( RECCOUNT ("AKTIONEN"))
   INDEX MemberOf
   SELECT FIRST 
   a% = 0
   _MemberOf$ = "*"
   butofs% = 64
   WHILE NOT EOF ("AKTIONEN")
     IF MemberOf.AKTIONEN LIKE _MemberOf$ + "*" THEN 
       IF LEN (_MemberOf$) < 6 THEN 
         space% = LEN (MemberOf) - 6
       ELSE 
         space% = LEN (MemberOf) - LEN (_memberOf$)
       END IF 
       AKListe$(a%) = SPACE$ (space%) + Bezeichnung + SPACE$ (150) + STR$ (CodeAK,"000000")
       a% = a% + 1
     END IF 
     SELECT NEXT 
   WEND 
   SET STATUS "Mailing - Schritt 6..."
   CREATE DIALOG "MAIL6",0,0,257,136,title$,"MS Sans Serif",8
   ADD DIALOG "MAIL6",9,6,9,22,24,2
   ADD DIALOG "MAIL6",5,36,9,211,10,0,"Mailing - Schritt 6"
   ADD DIALOG "MAIL6",4,36,19,212,5,0,""
   ADD DIALOG "MAIL6",5,36,28,212,16,0,"Bitte wÑhlen Sie eine der vorhandenen Aktionen aus, der das Mailing zugeordnet werden soll."
   ADD DIALOG "MAIL6",7,36,50,211,57,0,2,AKListe$,Auswahl$,AKListe$(0)
   ADD DIALOG "MAIL6",4,36,107,212,5,0,""
   ADD DIALOG "MAIL6",1,136,116,55,15,1,"&Weiter >>",1,1
   ADD DIALOG "MAIL6",1,192,116,55,15,0,"&Abbrechen",0,0
   DIALOG "MAIL6",req%
   REMOVE DIALOG "MAIL6"
   IF req% = 0 THEN 
     CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
     END SUB 'Procedure verlassen
   END IF 
   _vak% = VAL ( RIGHT$ (Auswahl$(0),6))
 
   FILE "SUPERVIS"
   DIM MAListe$( RECCOUNT ("SUPERVIS"))
   INDEX Nachname
   SELECT FIRST 
   a% = 0
   WHILE NOT EOF ("SUPERVIS")
     MAListe$(a%) = Nachname + ", " + Vorname + SPACE$ (150) + STR$ (CodeMA,"000000")
     a% = a% + 1
     SELECT NEXT 
   WEND 
   SET STATUS "Mailing - Schritt 7..."
   CREATE DIALOG "MAIL7",0,0,257,136,title$,"MS Sans Serif",8
   ADD DIALOG "MAIL7",9,6,9,22,24,2
   ADD DIALOG "MAIL7",5,36,9,211,10,0,"Mailing - Schritt 7"
   ADD DIALOG "MAIL7",4,36,19,212,5,0,""
   ADD DIALOG "MAIL7",5,36,28,212,16,0,"Bitte wÑhlen Sie einen Mitarbeiter aus, dem das Mailing zugeordnet werden soll."
   ADD DIALOG "MAIL7",7,36,50,211,57,0,2,MAListe$,Auswahl$,MAListe$(0)
   ADD DIALOG "MAIL7",4,36,107,212,5,0,""
   ADD DIALOG "MAIL7",1,136,116,55,15,1,"&Weiter >>",1,1
   ADD DIALOG "MAIL7",1,192,116,55,15,0,"&Abbrechen",0,0
   DIALOG "MAIL7",req%
   REMOVE DIALOG "MAIL7"
   IF req% = 0 THEN 
     CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
     END SUB 'Procedure verlassen
   END IF 
   _vma% = VAL ( RIGHT$ (Auswahl$(0),6))
 
   SET STATUS "Mailing - Schritt 8..."
   CREATE DIALOG "MAIL8",0,0,257,136,title$,"MS Sans Serif",8
   ADD DIALOG "MAIL8",9,6,9,22,24,2
   ADD DIALOG "MAIL8",5,36,9,211,10,0,"Mailing - Schritt 7"
   ADD DIALOG "MAIL8",4,36,19,212,5,0,""
   ADD DIALOG "MAIL8",5,36,28,212,16,0,"Bitte geben Sie einen Termin und einen Text fÅr die Kennzeichnung in der Termindatei ein."
   ADD DIALOG "MAIL8",5,36,48,26,9,0,"Datum:"
   ADD DIALOG "MAIL8",6,64,46,42,12,0,0,datum$,8
   ADD DIALOG "MAIL8",5,36,62,22,11,0,"Notiz:"
   ADD DIALOG "MAIL8",6,64,60,184,47,4,0,notiztext$,500
   ADD DIALOG "MAIL8",4,36,107,212,5,0,""
   ADD DIALOG "MAIL8",1,136,116,55,15,1,"&Weiter >>",1,1
   ADD DIALOG "MAIL8",1,192,116,55,15,0,"&Abbrechen",0,0
   DIALOG "MAIL8",req%
   REMOVE DIALOG "MAIL8"
   IF req% = 0 THEN 
     CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
     END SUB 'Procedure verlassen
   END IF 
   FILE userfile$
   INDEX codeku.userfile$
   SELECT FIRST 
   MOUSE OFF 
   SET STATUS "Termindatei wird aktualisiert..."
   tmpdok% = SER ("DOKUMENT",1) + 1
   cudo% = tmpdok%
   WHILE NOT EOF (userfile$)
     FILE GAkquiDat$
     BLANK 
     codeaq.GAkquiDat$ = SER (GAkquiDat$,1)
     codeKU.GAkquiDat$ = CodeKU.userfile$
     CodeAK.GAkquiDat$ = _vak%
     CodeMA.GAkquiDat$ = _vma%
     SET STATUS "Termindatei wird aktualisiert (" + nachname.userfile$ + ")..."
     nachname.GAkquiDat$ = nachname.userfile$
     Wertung.GAkquiDat$ = 0
     Datum.GAkquiDat$ = TODAY 
     CodeDOK.GAkquiDat$ = tmpdok%
     cuaq% = codeaq.GAkquiDat$
     SELECT KEY codema.GAkquiDat$ FILE "supervis" INDEX codema.supervis
     Bearbeiter.GAkquiDat$ = nachname.supervis
     notiz.GAkquiDat$ = "MAILING: " + notiztext$
     termin.GAkquiDat$ = datum$
     erledigt_Termin.GAkquiDat$ = "n"
     CALL QuickStore(GAkquiDat$)
     SELECT NEXT FILE userfile$
   WEND 
 END IF 
 MOUSE ON 
 SET STATUS "Mailing - letzter Schritt..."
 CREATE DIALOG "MAIL9",0,0,257,136,title$,"MS Sans Serif",8
 ADD DIALOG "MAIL9",9,6,9,22,24,2
 ADD DIALOG "MAIL9",5,36,9,211,10,0,"Mailing - letzter Schritt"
 ADD DIALOG "MAIL9",4,36,19,212,5,0,""
 ADD DIALOG "MAIL9",5,36,27,212,10,0,"Die Vorbereitung des Mailings ist abgeschlossen."
 ADD DIALOG "MAIL9",5,36,38,210,38,0,"Nachfolgend wird die Textverarbeitung aufgerufen, mit deren Serienbrieffunktion das Mailing fertigstellen kînnen."
 ADD DIALOG "MAIL9",4,36,107,212,5,0,""
 ADD DIALOG "MAIL9",1,136,116,55,15,1,"&Weiter >>",1,1
 ADD DIALOG "MAIL9",1,192,116,55,15,0,"&Abbrechen",0,0
 DIALOG "MAIL9",req%
 REMOVE DIALOG "MAIL9"
 IF req% = 0 THEN 
   CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
   END SUB 'Procedure verlassen
 END IF 
 SET STATUS "Aufruf der Textverarbeitung..."
 CALL DOKUMENT("allgemeine Schreiben",0)
 SET STATUS "Bereit"
 END SUB 
  
 
 '      ***********************
 '      ** Stichwort-Auswahl **
 '      ***********************
 
FUNCTION StichwortSel%(stichw$)
 j% = 1
 lÑnge% = LEN (stichw$)
 REM FOR i% = 1 TO 300
 REM  stichworte$(i%) = ""
 REM NEXT i%
 stichwver$ = LCASE$ (stichw$)
 FOR i% = 1 TO lÑnge%
   pos1% = INSTR (i%,stichwver$,",")
   IF pos1% > 0 THEN 
     IF pos2% > 0 THEN 
       pos% = pos1% - pos2% - 1
     ELSE 
       pos% = pos1% - 1
     END IF 
     stichworte$(j%) = MID$ (stichwver$,i%,pos%)
     pos2% = pos1%
     j% = j% + 1
     i% = pos1%
   ELSE 
     stichworte$(j%) = MID$ (stichwver$,i%,lÑnge% - i%)
     IF stichworte$(j%) <> "" THEN j% = j% + 1
     i% = lÑnge%
   END IF 
 NEXT i%
 StichwortSel% = j% - 1
 END FUNCTION 
 
 
 '      *************************
 '      ** Superbase Extension **
 '      *************************
   
SUB SetSBWindow()
 HWnd%% = Superbase.Handle
 OldWord% = CALL ("SetWindowLong",hWnd%%, - 16,382337024)
 hInstance% = CALL ("GetWindowWord",HWnd%%, - 6)
 SET DISPLAY OFF 
 END SUB 
 
 
 
  
 ' Titelbild ausblenden
 ' ======================================================================
 
SUB HideStartup()
 a% = CALL ("FindWindow","ThunderForm","")
 IF a% > 0 THEN 
   REM ** alte Variante *** IF title$ LIKE "*BUSINESS*" THEN suprg$ = "BUSINESS" ELSE suprg$ = _projekt$
   REM ** DDEINIT 1, UCASE$ (suprg$),"Startup"
   DDEINIT 1,"STARTUP","Startup"
   DDETERM 1
   GTest% = 0
 END IF 
 END SUB 
 
 
SUB PrintParam()
 IF PRINTER (6) = 0 THEN 
   REQUEST "Der Drucker " + PRINTER + " bietet keine weiteren Einstellmîglichkeiten!","",113
 ELSE 
   Drucker$ = PRINTER 
   Port$ = PRINTER (0)
   Kopien% = PRINTER (6)
   IF Kopien% < 1 THEN Kopien% = 1
   CREATE DIALOG "PRINTDLG",0,0,226,80,title$,"MS Sans Serif",8
   ADD DIALOG "PRINTDLG",4,0,0,226,58,0,""
   ADD DIALOG "PRINTDLG",5,6,13,63,12,0,"aktueller Drucker:"
   ADD DIALOG "PRINTDLG",5,72,13,146,12,0,Drucker$
   ADD DIALOG "PRINTDLG",5,6,25,49,12,0,"Ausgabeport:"
   ADD DIALOG "PRINTDLG",5,72,25,145,12,0,Port$
   ADD DIALOG "PRINTDLG",6,72,37,38,12,0,0,Kopien%,20
   ADD DIALOG "PRINTDLG",5,6,39,27,12,0,"Kopien:"
   ADD DIALOG "PRINTDLG",1,59,62,55,15,1,"&OK",1,1
   ADD DIALOG "PRINTDLG",1,116,62,55,15,0,"&Abbrechen",0,0
   DIALOG "PRINTDLG",req%
   REMOVE DIALOG "PRINTDLG"
   IF req% = 1 THEN 
     IF Kopien% <> 0 THEN 
       SET PRINTER PRINTER , PRINTER (0),1,9,0,0,100,Kopien%
     ELSE 
       CALL Fehler("Falscher Parameter fÅr Anzahl der Kopien","")
     END IF 
   END IF 
 END IF 
 END SUB 
 
SUB DemoInfo()
 CALL Fehler("In der Demo kînnen Sie nur mit einem festen Adre·bestand arbeiten - VerÑnderungen sind nicht mîglich.","")
 END SUB 
 
 
 ' Standard Hotkeys abfangen
 ' =====================================================================
 
SUB 1EditPaste()
 SET STATUS "Bereit"
 CALL Fehler("EinfÅgen nicht mîglich!","Die Daten in der Zwischenablage sind nicht im geforderten Format.")
 END SUB 
 
SUB 1EditCut()
 SET STATUS "Bereit"
 END SUB 
 
SUB 1EditDelete()
 SET STATUS "Bereit"
 END SUB 
 
 ' About
 ' =====================================================================
SUB About()
 SET STATUS "Info - öber " + title$
 IF title$ LIKE "*BUSINESS*" THEN 
   Stand$ = LTRIM$ ( DATE$ ( DAYS ( CALL ("GetFileDate",_netpath$ + "clib.SBR")),"0d.mm.yyyy"))
 ELSE 
   IF title$ LIKE "*WORKS*" THEN 
     Stand$ = LTRIM$ ( DATE$ ( DAYS ( CALL ("GetFileDate",_netpath$ + "clib.SBR")),"0d.mm.yyyy"))
   ELSE 
     Stand$ = LTRIM$ ( DATE$ ( DAYS ( CALL ("GetFileDate",_netpath$ + "clib.SBR")),"0d.mm.yyyy"))
   END IF 
 END IF 
 Version1$ = ReadConfig$(_projekt$,"Version")
 Release1$ = ReadConfig$(_projekt$,"Release")
 Stand$ = ReadConfig$(_projekt$,"Release")
 IF FN sys(5) > 1 THEN Variante$ = "Netzwerk mit " + LTRIM$ ( STR$ ( FN sys(5),"99")) + " PlÑtzen" ELSE Variante$ = "Einzelplatz"
 Programm$ = title$ + " V" + Version1$
 CREATE DIALOG "ABout",0,0,240,178,title$,"MS Sans Serif",8
 ADD DIALOG "ABout",9,4,6,20,21,4
 ADD DIALOG "ABout",4,30,1,202,18,0,""
 ADD DIALOG "ABout",5,34,8,180,10,0,Programm$
 ADD DIALOG "ABout",5,32,22,69,10,0,"Variante:"
 ADD DIALOG "ABout",5,84,22,153,10,0,Variante$
 ADD DIALOG "ABout",5,32,32,69,10,0,"Release:"
 ADD DIALOG "ABout",5,84,32,152,10,0,Release1$
 ADD DIALOG "ABout",5,32,42,69,10,0,"Stand:"
 ADD DIALOG "ABout",5,84,42,112,10,0,Stand$
 ADD DIALOG "ABout",4,30,52,202,18,0,""
 ADD DIALOG "ABout",5,34,59,180,8,0,"Lizenzinformation"
 a% = CALL ("GetLicense",iAppID%,_netpath$ + "LICENSE.DLL")
 IF CALL ("AccessItemI",8,0,0) = 255 - FN sys(5) THEN 
   name$ = CALL ("AccessItemC",1,0,"")
   firma$ = CALL ("AccessItemC",2,0,"")
   serialno&% = CALL ("AccessItemL",10,0,0)
   Seriennummer$ = STR$ (serialno&%,"000000")
   ADD DIALOG "ABout",5,32,73,69,10,0,"Name:"
   ADD DIALOG "ABout",5,84,73,140,10,0,Name$
   ADD DIALOG "ABout",5,32,83,69,10,0,"Firma:"
   ADD DIALOG "ABout",5,84,83,170,10,0,Firma$
   ADD DIALOG "ABout",5,32,93,69,10,0,"Seriennummer:"
   ADD DIALOG "ABout",5,84,93,162,10,0,Seriennummer$
 ELSE 
   ADD DIALOG "ABout",5,32,73,202,20,0,"Diese Version wurde noch nicht lizensiert und darf nur zu PrÅfzwecken verwendet werden!"
   ADD DIALOG "ABout",5,32,90,202,20,0,"Um zu erfahren, wie Sie diese Version lizensieren lassen kînnen, erkundigen Sie sich bitte bei der Hotline."
 END IF 
 HtlFirma$ = ReadConfig$(_projekt$,"HotlineFirma")
 Htlfon$ = ReadConfig$(_projekt$,"HotlinePhone")'                  ; Hotlinedaten aus
 Htlfax$ = ReadConfig$(_projekt$,"HotlineFax")'                    ; CODIEAPP.NET auslesen und
 IF HtlFirma$ LIKE "leer" THEN HtlFirma$ = "CODie software products e.K."
 IF Htlfon$ LIKE "leer" THEN Htlfon$ = "(0331) 242180"'           ; notfalls auf Standardwerte
 IF Htlfax$ LIKE "leer" THEN Htlfax$ = "(0331) 242181"'           ; setzen
 ADD DIALOG "ABout",4,30,104,202,18,0,""
 REM ADD DIALOG "ABout",5,34,111,180,8,0,"Hotline"
 ADD DIALOG "ABout",5,64,110,162,10,0,HtlFirma$
 ADD DIALOG "ABout",5,33,110,28,8,0,"Hotline"
 ADD DIALOG "ABout",5,32,127,69,10,0,"Telefon:"
 ADD DIALOG "ABout",5,84,127,162,10,0,HtlFon$
 ADD DIALOG "ABout",5,32,137,69,10,0,"Telefax:"
 ADD DIALOG "ABout",5,84,137,162,10,0,HtlFax$
 ADD DIALOG "ABout",1,85,157,55,15,1,"&OK",1,1
 DIALOG "About",req%
 REMOVE DIALOG "About"
 SET STATUS "Bereit"
 END SUB 
 
 
 ' Datenbanken reorganisieren
 ' =====================================================================
 ' 23.01.96    - umgestellt auf Prozedur FileReorg
 
 
SUB ReorgDB()
 IF _remotepath$ <> _netpath$ AND GTest% = 0 THEN 
   CALL Fehler("Die Reorganisation kann nicht von einem Remote-Arbeitsplatz aus ausgefÅhrt werden!","Nur durch Supervisor mîglich!")
   END SUB 
 END IF 
 IF MNdisabled%("SUPERVISOR") THEN 
   CALL Fehler("Keine Zugangsberechtigung!","Nur durch Supervisor mîglich!")
   END SUB 
 END IF 
 CREATE DIALOG "DBREORG",0,0,265,162,title$,"MS Sans Serif",8
 ADD DIALOG "DBREORG",9,6,9,21,23,3
 ADD DIALOG "DBREORG",5,35,9,84,11,0,"Datenbankreorganisation"
 ADD DIALOG "DBREORG",4,35,18,223,5,0,""
 ADD DIALOG "DBREORG",5,35,30,221,21,0,"Mit dieser Funktion kînnen Sie allgemeine Fehler in Ihren Datenbanken automatisch beheben lassen."
 ADD DIALOG "DBREORG",5,35,52,219,23,0,"Bevor Sie diese Funktion ausfÅhren, treffen Sie bitte folgende Vorkehrungen, um Datenverluste zu vermeiden:"
 ADD DIALOG "DBREORG",5,35,76,12,10,0,"1."
 ADD DIALOG "DBREORG",5,45,76,205,10,0,"Erstellen Sie eine Sicherheitskopie Ihrer Daten!"
 ADD DIALOG "DBREORG",5,35,89,12,17,0,"2."
 ADD DIALOG "DBREORG",5,45,89,205,17,0,"Stellen Sie sicher, da· Sie der einzige Nutzer sind, der momentan mit diesem Programm im Netzwerk arbeitet!"
 ADD DIALOG "DBREORG",5,35,108,12,16,0,"3."
 ADD DIALOG "DBREORG",5,45,108,200,16,0,"Schalten Sie Ihren Computer wÑhrend der Reorganisation nicht aus!"
 ADD DIALOG "DBREORG",1,69,140,55,15,0,"&Reorganisieren",1,1
 ADD DIALOG "DBREORG",1,127,140,55,15,1,"&Abbrechen",0,1
 DIALOG "DBREORG",req%
 REMOVE DIALOG "DBREORG"
 IF req% <> 1 THEN END SUB 
 REQUEST "Haben alle anderen Nutzer die Anwendung geschlossen?","",130,req%
 IF req% <> 1 THEN 
   CALL Fehler("Die Reorganisation kann nur durchgefÅhrt werden,","wenn alle Nutzer die Anwendung verlassen haben.")
   END SUB 
 END IF 
 CLOSE ALL 
 OPEN FORM GOFFForm$ + "DUMMY"
 MOUSE OFF 
 dpfad$ = _netpath$ + "OFFICE\" + DATE$ ( TODAY ,"yymm0d")
 datnr$ = DATE$ ( TODAY ,"yymm0d")
 i% = 0
 ok% = 0
 WHILE ok% = 0
   i% = i% + 1
   IF i% > 99 THEN 
     ON ERROR GOTO rb3004982
     REMOVE DIRECTORY dpfad$ + "01"
rb3004982: 
     i% = 1
   END IF 
   ON ERROR GOTO rb3004981
   tpfad$ = dpfad$ + STR$ (i%,"00")
   MAKE DIRECTORY dpfad$ + STR$ (i%,"00")
   ok% = - 1
rb3004981: 
   ON ERROR GOTO ErrorHandler
 WEND 
 textdo1$ = "Sicherungskopie befindet sich im Pfad: " + tpfad$
 FORM 
 MOUSE OFF 
 cdir$ = DIRECTORY 
 REM CALL Server("LOADMESSAGE","")
 REM allgmeine Dateien (OFFICE)
 CALL FileReorg("OFFICE\ADRESSEN")
 REMOVE FROM FILE "adressen" WHERE codeku.adressen < 1
 CALL FileReorg("OFFICE\AKQUISE")
 IF RECCOUNT (GAkquiDat$) > 1 THEN 
   FILE GAkquiDat$
   INDEX codeku.GAkquiDat$
   SELECT FIRST LOCK 
   codeku% = codeku.GAkquiDat$
   last1% = codeku.GAkquiDat$
   WHILE NOT EOF (GAkquiDat$)
     codeku% = codeku.GAkquiDat$
     IF NOT EXISTS (codeku%,codeku.adressen) THEN 
       REMOVE FROM FILE GAkquiDat$ WHERE codeku.GAkquiDat$ = codeku%
       SELECT FIRST 
       SELECT KEY last1% FILE GAkquiDat$ INDEX codeku.GAkquiDat$
     ELSE last1% = codeku%
     END IF 
   SELECT NEXT LOCK 
   WEND 
 END IF 
 CALL FileReorg("OFFICE\AKTIONEN")
 CALL FileReorg("OFFICE\DOKUMENT")
 CALL FileReorg("OFFICE\FAX")
 CALL FileReorg("OFFICE\KEYWORDS")
 REMOVE FROM FILE "keywords" WHERE LTRIM$ (keyword) = ""
 CALL FileReorg("OFFICE\MAIL")
 CALL FileReorg("OFFICE\NOTIZ")
 CALL FileReorg("OFFICE\TELEFON")
 CALL FileReorg("OFFICE\CONNECT")
 REM CALL FileReorg("OFFICE\ADRTEMP")
 CALL FileReorg("OFFICE\LOEPROT")
 IF RECCOUNT ("Telefon") > 1 THEN 
   FILE "Telefon"
   INDEX codeku.Telefon
   SELECT FIRST LOCK 
   codeku% = codeku.Telefon
   last1% = codeku.Telefon
   WHILE NOT EOF ("Telefon")
     codeku% = codeku.Telefon
     IF NOT EXISTS (codeku%,codeku.adressen) THEN 
       REMOVE FROM FILE "Telefon" WHERE codeku.Telefon = codeku%
       SELECT FIRST 
       SELECT KEY last1% FILE "Telefon" INDEX codeku.Telefon
     ELSE last1% = codeku%
     END IF 
   SELECT NEXT LOCK 
   WEND 
 END IF 
 CALL FileReorg("OFFICE\ANREDE")
 CALL FileReorg("OFFICE\ANSTELL")
 CALL FileReorg("OFFICE\BERUF")
 CALL FileReorg("OFFICE\FIFORM")
 CALL FileReorg("OFFICE\FSTAND")
 CALL FileReorg("OFFICE\HOBBYS")
 CALL FileReorg("OFFICE\LAND")
 CALL FileReorg("OFFICE\NATIONAL")
 CALL FileReorg("OFFICE\ORT")
 CALL FileReorg("OFFICE\STAAT")
 CALL FileReorg("OFFICE\TITEL")

 
 REM Dateien von Factura/Business
 IF _projekt$ LIKE "FACTURA" OR _projekt$ LIKE "BUSINESS" THEN 
   dpfad$ = _netpath$ + "FACTURA\" + DATE$ ( TODAY ,"yymm0d")
   datnr$ = DATE$ ( TODAY ,"yymm0d")
   i% = 0
   ok% = 0
   WHILE ok% = 0
     i% = i% + 1
     IF i% > 99 THEN 
       ON ERROR GOTO rb3004983
       REMOVE DIRECTORY dpfad$ + "01"
rb3004983: 
       i% = 1
     END IF 
     ON ERROR GOTO rb3004984
     tpfad$ = dpfad$ + STR$ (i%,"00")
     MAKE DIRECTORY dpfad$ + STR$ (i%,"00")
     ok% = - 1
rb3004984: 
     ON ERROR GOTO ErrorHandler
   WEND 
   textdo1$ = "Sicherungskopie befindet sich im Pfad: " + tpfad$
   FORM 
   CALL FileReorg("FACTURA\ABZUGANG")
   CALL FileReorg("FACTURA\ARTIKEL")
   CALL FileReorg("FACTURA\FLOSKEL")
   CALL FileReorg("FACTURA\GRUPPEN")
   CALL FileReorg("FACTURA\KOMBI")
   CALL FileReorg("FACTURA\MASTER")
   CALL FileReorg("FACTURA\SCHEIN")
   CALL FileReorg("FACTURA\KKOPIE")
   REM CALL FileReorg("FACTURA\ARTIKTMP")
   CALL FileReorg("FACTURA\ARTPROV")
   CALL FileReorg("FACTURA\EINZPROV")
   CALL FileReorg("FACTURA\LBELEGE")
   CALL FileReorg("FACTURA\LIEFRUCK")
   CALL FileReorg("FACTURA\PROVISIO")
   CALL FileReorg("FACTURA\REINGANG")
   CALL FileReorg("FACTURA\RAUSGANG")
   CALL FileReorg("FACTURA\UMSATZ")
   REM CALL FileReorg("FACTURA\UMSTEMP1")
   CALL FileReorg("FACTURA\VERTRETE")
   CALL FileReorg("FACTURA\WARENART")
   CALL FileReorg("FACTURA\ZERO")
   ProjectJN$ = UCASE$ (ReadConfig$("FACTURA","PROJECT"))
   IF ProjectJN$ = "TRUE" THEN 
     CALL FileReorg("FACTURA\PROJECT")
     CALL FileReorg("FACTURA\PRCONADR")
     CALL FileReorg("FACTURA\PRCONECT")
   END IF 
 END IF 
 
 REM Dateien von WAWI
 IF _projekt$ LIKE "WAWI" THEN 
   dpfad$ = _netpath$ + "WAWI\" + DATE$ ( TODAY ,"yymm0d")
   datnr$ = DATE$ ( TODAY ,"yymm0d")
   i% = 0
   ok% = 0
   WHILE ok% = 0
     i% = i% + 1
     IF i% > 99 THEN 
       ON ERROR GOTO rb3004987
       REMOVE DIRECTORY dpfad$ + "01"
rb3004987: 
       i% = 1
     END IF 
     ON ERROR GOTO rb3004988
     tpfad$ = dpfad$ + STR$ (i%,"00")
     MAKE DIRECTORY dpfad$ + STR$ (i%,"00")
     ok% = - 1
rb3004988: 
     ON ERROR GOTO ErrorHandler
   WEND 
 textdo1$ = "Sicherungskopie befindet sich im Pfad: " + tpfad$
 FORM 
   CALL FileReorg("WAWI\ABZUGANG")
   CALL FileReorg("WAWI\ARTIKEL")
   CALL FileReorg("WAWI\FLOSKEL")
   CALL FileReorg("WAWI\GRUPPEN")
   CALL FileReorg("WAWI\KOMBI")
   CALL FileReorg("WAWI\MASTER")
   CALL FileReorg("WAWI\SCHEIN")
   CALL FileReorg("WAWI\KKOPIE")
 END IF 
 
 REM Dateien von PROVIS
 IF _projekt$ LIKE "PROVIS" THEN 
   dpfad$ = _netpath$ + "PROVIS\" + DATE$ ( TODAY ,"yymm0d")
   datnr$ = DATE$ ( TODAY ,"yymm0d")
   i% = 0
   ok% = 0
   WHILE ok% = 0
     i% = i% + 1
     IF i% > 99 THEN 
       ON ERROR GOTO rb3004985
       REMOVE DIRECTORY dpfad$ + "01"
rb3004985: 
       i% = 1
     END IF 
     ON ERROR GOTO rb3004986
     tpfad$ = dpfad$ + STR$ (i%,"00")
     MAKE DIRECTORY dpfad$ + STR$ (i%,"00")
     ok% = - 1
rb3004986: 
     ON ERROR GOTO ErrorHandler
   WEND 
 textdo1$ = "Sicherungskopie befindet sich im Pfad: " + tpfad$
 FORM 
   CALL FileReorg("PROVIS\BUCHUNG")
   CALL FileReorg("PROVIS\GEADR")
   CALL FileReorg("PROVIS\KGEADR")
   CALL FileReorg("PROVIS\GEKOND")
   CALL FileReorg("PROVIS\GEKONDM")
   CALL FileReorg("PROVIS\KVERTRAG")
   IF RECCOUNT ("KVERTRAG") > 1 THEN 
     FILE "KVERTRAG"
     INDEX codeku.KVERTRAG
     SELECT FIRST LOCK 
     codeku% = codeku.KVERTRAG
     last1% = codeku.KVERTRAG
     CALL DFile(2,"OFFICE\adressen" + _fpw$)
     WHILE NOT EOF ("KVERTRAG")
       codeku% = codeku.KVERTRAG
       IF NOT EXISTS (codeku%,codeku.adressen) THEN 
         
         REM REMOVE FROM FILE "KVERTRAG" WHERE codeku.KVERTRAG = codeku%
         REM REMOVE FROM FILE "Buchung" WHERE codeku.Buchung = codeku%
         REM SELECT FIRST 
         REM SELECT KEY last1% FILE "KVERTRAG" INDEX codeku.KVERTRAG
       REM ELSE 
         REM last1% = codeku%
         FILE "Adressen"
         BLANK FILE "Adressen"
         nr% = SER ("Adressen",1)
         codeku.adressen = Codeku.kvertrag
         nachname.adressen = LEFT$ (anachname.kvertrag + "   @",50)
         vorname.adressen = avorname.kvertrag
         ort.adressen = aort.kvertrag
         plz.adressen = aplz.kvertrag
         stra·e.adressen = astrasse.kvertrag
         CALL QuickStore("Adressen")
         FILE "Kvertrag"
       END IF 
     SELECT NEXT LOCK 
     WEND 
     REM 090398
     FILE "Adressen"
     INDEX codeku.adressen
     SELECT LAST 
     codeku% = codeku.adressen
     nr% = SER ("Adressen")
     IF nr% <= codeku% THEN 
       WHILE nr% <= codeku%
         nr% = SER ("Adressen",1)
       WEND 
     END IF 
   END IF 
   CALL FileReorg("PROVIS\MAADR")
   CALL FileReorg("PROVIS\VORGANG")
   CALL FileReorg("PROVIS\SPARTEN")
   CALL FileReorg("PROVIS\ZEINGANG")
   CALL FileReorg("PROVIS\FORMULAR")
   CALL FileReorg("PROVIS\SPGRUPPE")
   CALL FileReorg("PROVIS\VKOND")
   IF PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
     CALL FileReorg("PROVIS\ZEINGAN1")
     CALL FileReorg("PROVIS\BUCHUNG1")
   END IF 
   CALL FileReorg("PROVIS\BUCHTEMP")
   CALL FileReorg("PROVIS\MAADRGRU")
   IF EXISTS ("PROVIS\STATIST.SBF") THEN 
     CALL FileReorg("PROVIS\STATIST")
   END IF 
   IF EXISTS ("PROVIS\STATIST2.SBF") THEN 
     CALL FileReorg("PROVIS\STATIST2")
   END IF 
 END IF 
 
 REM Dateien von IMMAK
 IF _projekt$ LIKE "IMMAK" THEN 
   dpfad$ = _netpath$ + "IMMAK\" + DATE$ ( TODAY ,"yymm0d")
   datnr$ = DATE$ ( TODAY ,"yymm0d")
   i% = 0
   ok% = 0
   WHILE ok% = 0
     i% = i% + 1
     IF i% > 99 THEN 
       ON ERROR GOTO rb3004989
       REMOVE DIRECTORY dpfad$ + "01"
rb3004989: 
       i% = 1
     END IF 
     ON ERROR GOTO rb30049810
     tpfad$ = dpfad$ + STR$ (i%,"00")
     MAKE DIRECTORY dpfad$ + STR$ (i%,"00")
     ok% = - 1
rb30049810: 
     ON ERROR GOTO ErrorHandler
   WEND 
 textdo1$ = "Sicherungskopie befindet sich im Pfad: " + tpfad$
 FORM 

   CALL FileReorg("IMMAK\ANFRAGE")
   CALL FileReorg("IMMAK\IMMOGRUP")
   CALL FileReorg("IMMAK\OBJEKTE")
 END IF 
 
 REM Dateien von MEDIA
 IF _projekt$ LIKE "MEDIA" THEN 
   dpfad$ = _netpath$ + "MEDIA\" + DATE$ ( TODAY ,"yymm0d")
   datnr$ = DATE$ ( TODAY ,"yymm0d")
   i% = 0
   ok% = 0
   WHILE ok% = 0
     i% = i% + 1
     IF i% > 99 THEN 
       ON ERROR GOTO rb30049811
       REMOVE DIRECTORY dpfad$ + "01"
rb30049811: 
       i% = 1
     END IF 
     ON ERROR GOTO rb30049812
     tpfad$ = dpfad$ + STR$ (i%,"00")
     MAKE DIRECTORY dpfad$ + STR$ (i%,"00")
     ok% = - 1
rb30049812: 
     ON ERROR GOTO ErrorHandler
   WEND 
 textdo1$ = "Sicherungskopie befindet sich im Pfad: " + tpfad$
 FORM 
   CALL FileReorg("MEDIA\FILME")
   CALL FileReorg("MEDIA\JOURNAL")
   CALL FileReorg("MEDIA\MEDIUM")
   CALL FileReorg("MEDIA\VERLEIH")
 END IF 
 
 REM CALL Server("UNLOADMESSAGE","")
 msg$ = "Die Reorganisation wurde abgeschlossen!"
 IF NOT PROGRAMFILE ("UPDATE") THEN LOAD _netpath$ + "UPDATE.SBR", NEW 
 CALL DoUpdate()
 MOUSE ON 
 SET STATUS msg$
 REQUEST msg$,"",100
 CALL DFile(2,"supervis" + _fpw$)
 SET STATUS "Bereit"
 END SUB 
 
  
 ' FileReorg - Datei reorganisieren
 ' =====================================================================
 ' Aufruf: CALL FileReorg(Datei$)
 ' Parameter: Datei$      Pfad+Dateiname ohne Suffix .SBF
 ' =====================================================================
 ' 23.01.96   
 
SUB FileReorg(Datei$)
 textdo$ = "Anfertigung einer Sicherheitskopie der Datei " + _netpath$ + datei$ + " in den Pfad " + tpfad$
 FORM 
 COPY _netpath$ + datei$ + ".*" TO tpfad$
 CALL DFile(2,Datei$ + _fpw$)
 msg$ = "Bitte warten, die Datei " + CHR$ (34) + FN name(Datei$) + CHR$ (34) + " wird reorganisiert..."
 textdo$ = msg$
 FORM 
 REM CALL Server("MESSAGE",msg$)
 SET STATUS msg$
 CALL WriteConfig("REORG","Started","TRUE")
 CALL WriteConfig("REORG","File",Datei$)
 curFile$ = FN name(Datei$)
 FILE curFile$
 REM -- Indizes lîschen --
 idxCount% = FILEINFO (curFile$,0)
 CALL WriteConfig("REORG","IdxCount", STR$ (idxCount%,"000"))
 DIM IdxList$(idxCount%)
 FILLARRAY IdxList$,3
 FOR a% = 0 TO idxCount% - 1
   IdxName$ = IdxList$(a%) + "." + curFile$
   CALL WriteConfig("REORG","Index" + STR$ (a%,"000"),IdxName$)
 NEXT 
 FOR a% = 0 TO idxCount% - 1
   IdxName$ = IdxList$(a%) + "." + curFile$
   ON ERROR GOTO ab1403971
   REMOVE INDEX IdxName$$
ab1403971: 
 NEXT 
 ON ERROR GOTO ErrorHandler
 REM REORGANIZE FILE FN name(Datei$) TO _netpath$ + Datei$
 IF OPEN ("TMP") THEN CLOSE "TMP"
 IF EXISTS (_netpath$ + "TMP.SBF") THEN DELETE _netpath$ + "TMP.SBF"
 REORGANIZE FILE FN name(Datei$) TO _netpath$ + "TMP"
 CLOSE FILE curFile$
 IF EXISTS (_netpath$ + Datei$ + ".SBF") THEN 
   DELETE _netpath$ + Datei$ + ".SBF"
   IF EXISTS (_netpath$ + Datei$ + ".SBD") THEN DELETE _netpath$ + Datei$ + ".SBD"
   IF EXISTS (_netpath$ + Datei$ + ".SB!") THEN DELETE _netpath$ + Datei$ + ".SB!"
   FOR b% = 0 TO 300
     tdatei$ = _netpath$ + Datei$ + "." + LTRIM$ ( STR$ (b%,"999"))
     IF EXISTS (tdatei$) THEN DELETE tdatei$
   NEXT b%
 END IF 
 REORGANIZE FILE "TMP" TO _netpath$ + Datei$
 CLOSE FILE "TMP"
 FOR a% = 0 TO idxCount% - 1
   msg$ = "Bitte warten, der Index " + CHR$ (34) + IdxList$(a%) + CHR$ (34) + " der Datenbank " + CHR$ (34) + FN name(Datei$) + CHR$ (34) + " wird neu erstellt..."
   textdo$ = msg$
   FORM 
   REM CALL Server("MESSAGE",msg$)
   IdxName$ = IdxList$(a%)
   CREATE INDEX ON IdxName$$
 NEXT 
 CALL WriteConfig("REORG","Started","FALSE")
 END SUB 
 
 '      ***********************
 '      ** MenÅdeklarationen **
 '      ***********************
  
 ' HauptmenÅ
 ' ======================================================================
 
SUB MNOFFICE()
 CALL MNProgramm()
 MENU 2,0,1,"&Optionen","",""
 MENU 2,1,1,"&Adressen","ADRESSEN","Aufruf der Adre·verwaltung"
 MENU 2,2,1,"&Mailing","MAILING","Erzeugen von Serienbriefen"
 MENU 2,3,1,"Do&kumente","DOKallg","Dokumente erstellen, einsehen und bearbeiten"
 MENU 2,4,1,"&Termine","AKQUISE1","Aufruf der Terminverwaltung"
 MENU 2,5,1,"Akt&ionen","AKTIONEN","Aufruf der Aktionsverwaltung"
 MENU 2,6,1,"&Berichte","BMKurzbericht","Kurzberichte erstellen"
 MENU 2,7,1,"Einste&llungen","SETUP","Programmeinstellungen/Mitarbeiterverwaltung"
 SELECT KEY vcodema% FILE "SUPERVIS" INDEX CodeMA.supervis
 IF NOT MNdisabled%("DOKUMENTE") THEN 
   MENU 2,8,1,"&Dokumentenverwaltung","DOKUMENTSRV","erweiterte Dokumentenverwaltung"
 ELSE 
   MENU 2,8,0,"&Dokumentenverwaltung"
 END IF 
 IF inhouse1$ = "TRUE" AND inhouse$ = "TRUE" THEN 
   MENU 2,9,3
   MENU 2,10,1,"1&1-AdressÅbernahme","INHOUSE1"
 END IF 
 mnline$ = ReadINI$("AddOn","1")
 IF mnline$ <> "leer" THEN 
   a% = 0
   AddOn$(0) = ""
   WHILE AddOn$(a%) <> "leer"
     AddOn$(a%) = FN ibm(ReadINI$("AddOn", LTRIM$ ( STR$ (a% + 1,"999999"))))
     IF AddOn$(a%) <> "leer" THEN a% = a% + 1
   WEND 
   AddOn$(a%) = ""
   MENU 3,0,1,"An&wendungen"
   a% = 0
   WHILE AddOn$(a%) <> ""
     IF a% < 10 THEN mnline$ = "&" ELSE mnline$ = ""
     mnline$ = mnline$ + LTRIM$ ( STR$ (a%,"999")) + " " + AddOn$(a%)
     MENU 3,a% + 1,1,mnline$,"ADDON"
     a% = a% + 1
   WEND 
   CALL MNHilfe(4)
 ELSE 
   CALL MNHilfe(3)
 END IF 
 END SUB 
  
 
 ' Formular AKTIONEN
 ' ======================================================================
 
SUB MNAKTIONEN()
 CALL MNProgramm()
 MENU 1,1,0,"D&rucken","AKDrucken","AktionsÅbersicht drucken"
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","AKNeu","neue Aktion hinzufÅgen"
 MENU 2,2,1,"S&ichern,F4","MStore","Daten der aktuellen Aktion speichern"
 MENU 2,3,1,"&Verwerfen,Ctrl+RckT","UNDO","letzte énderungen verwerfen"
 IF NOT MNdisabled%("AKTIONLoeschen") THEN 
   MENU 2,4,1,"&Lîschen","AKLoeschen","aktuelle Aktion lîschen"
 ELSE 
   MENU 2,4,0,"&Lîschen"
 END IF 
 MENU 3,0,1,"Be&wegen","",""
 MENU 3,1,1,"&NÑchster,BildAb","AKNext","nÑchster Datensatz"
 MENU 3,2,1,"&Vorheriger,BildAuf","AKPrev","vorheriger Datensatz"
 MENU 4,0,1,"&Optionen","",""
 MENU 4,1,1,"&Termine","AKQUISE3","Termine der aktuellen Aktion bearbeiten"
 CALL MNHilfe(5)
 END SUB 
  
 
 ' Formular AKQUISE
 ' ======================================================================
 
SUB MNAKQUISE()
 CALL MNProgramm()
 MENU 1,1,1,"D&rucken","AQDrucken","diverse Druckfunktionen"
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","AQNeu","einen neuen Termin erfassen"
 MENU 2,2,1,"S&ichern,F4","MStore","Daten des aktuellen Termins speichern"
 MENU 2,3,1,"&Verwerfen","UNDO","letzte énderungen verwerfen"
 MENU 2,4,1,"&Kopieren in Zwischenablage,F11","ADRKopWAQ","Adresse in Zwischenablage kopieren"
 IF NOT MNdisabled%("AKQUISELoeschen") THEN 
   MENU 2,5,1,"&Lîschen","AQLoeschen","aktuellen Termin lîschen"
 ELSE 
   MENU 2,5,0,"&Lîschen"
 END IF 
 MENU 3,0,1,"Be&wegen","",""
 MENU 3,1,1,"&NÑchster,BildAb","AQNext","nÑchster Termin"
 MENU 3,2,1,"&Vorheriger,BildAuf","AQPrev","vorheriger Termin"
 MENU 4,0,1,"Bez&ug"
 MENU 4,1,1,"&Wechseln","BEZUGWechseln()","Bezug setzen auf aktuelle Adresse, Aktion oder Mitarbeiter"
 MENU 4,2,1,"&Mitarbeiter suchen","AQMASuchen()","Mitarbeiter wechseln bzw. in aktuellen Termin aufnehmen"
 MENU 4,3,1,"Akt&ionen suchen","AQAktionen()","Aktion wechseln bzw. Termin der Aktion zuordnen"
 MENU 5,0,1,"&Optionen","",""
 MENU 5,1,1,"&Telefon/Fax","ADRTelefon1","Anzeige der TelefonÅbersicht, Versenden von Kurzfaxen"
 MENU 5,2,1,"&MonatsÅbersicht","MOUebersicht","MonatsÅbersicht anzeigen/drucken"
 MENU 5,3,1,"Termin&historie,F3","AQKundenHist","Terminhistorie anzeigen/drucken"
 MENU 5,4,1,"&Adresshistorie,F10","AQAdrHistT","Adresshistorie anzeigen/drucken"
 MENU 5,5,1,"&Dokumente auflisten","AQDOKLIST","alle Dokumente zur aktuellen Adresse anzeigen"
 REM dial$ = ReadINI$("Modem","ISDNDial")
 IF andidial$ LIKE "TELES" THEN 
   MENU 5,6,1,"Anwahl per TELES.FON,F12","DialTelesAQ"
 END IF 
 MENU 6,0,1,"E&xtras"
 MENU 6,1,1,"&Offene Termine","AQTermineO","Auflistung aller offenen/nicht erledigten Termine"
 MENU 6,2,1,"Termin &Plan","AQTermineP","Auflistung aller anstehenden Termine"
 MENU 6,3,0,"Liste erneut &anzeigen,F7","AQTermineO2","Suchliste erneut anzeigen"
 MENU 6,4,1,"Termine in ADRTERM kopieren","ADRTermine1",""
 IF ProjectJN$ = "TRUE" THEN 
   MENU 7,0,1,"Projektzuordnung zurÅcksetzen"
   MENU 7,1,1,"Zuordnung zum Projekt zurÅcksetzen","DelProjAkq","Zuordnung zum Projekt zurÅcksetzen"
   CALL MNHilfe(8)
 ELSE 
   CALL MNHilfe(7)
 END IF 
 END SUB 

SUB DelProjAkq()
 codeaq% = codeaq.GAkquiDat$
 SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 codepr.GAkquiDat$ = 0
 Projekt.GAkquiDat$ = ""
 Workstation.GAkquiDat$ = Workstation%
 QWoNo.GAkquiDat$ = STR$ (Workstation%,"000000") + STR$ (codeAQ.GAkquiDat$,"000000")
 RecStatus.GAkquiDat$ = "c"
 STORE FILE GAkquiDat$
 UNLOCK CURRENT FILE GAkquiDat$
 END SUB 
 
 
SUB AQAdrHistT()
 CALL AQAdrHist(2)
 END SUB 
 
 ' Formular DOKUMENT
 ' ======================================================================
 
SUB MNDOKSRV()
 CALL MNProgramm()
 MENU 2,0,1,"Bearbeiten","",""
 MENU 2,1,1,"&RÅckgÑngig,Ctrl+RckT","UNDO","letzte énderungen verwerfen"
 MENU 2,2,1,"Dokument &importieren","DOKImport","existierende Dokumente in Dokumentenverwaltung aufnehmen"
 MENU 2,3,1,"S&ichern,F4","MStore","Daten des aktelen Dokumentes sichern"
 MENU 2,4,1,"&Suchen,F6","DOKVSuchen()","Dokument suchen"
 MENU 2,5,1,"Text &bearbeiten","DOKSRVBearb()","Textverarbeitung starten"
 MENU 3,0,1,"&Bewegen","",""
 MENU 3,1,1,"&NÑchster,BildAb","PSelectNext","nÑchstes Dokument"
 MENU 3,2,1,"&Vorheriger,BildAuf","PSelectPrev","vorheriges Dokument"
 MENU 3,3,1,"&Erster","PSelectFirst","erstes Dokument"
 MENU 3,4,1,"&Letzter","PSelectLast","letztes Dokument"
 MENU 4,0,1,"&Optionen"
 MENU 4,1,1,"als &Tabelle bearbeiten","DOKSRVTAB","DokumenteneintrÑge als Tabelle bearbeiten"
 MENU 4,2,1,"aus Suchliste &wÑhlen,F7","DokKurzSuche","Auflistung aller vorher gesuchten Dokumente"
 IF ProjectJN$ = "TRUE" THEN 
   MENU 5,0,1,"Projektzuordnung zurÅcksetzen"
   MENU 5,1,1,"Zuordnung zum Projekt zurÅcksetzen","DelProjDok","Zuordnung zum Projekt zurÅcksetzen"
   CALL MNHilfe(6)
 ELSE 
   CALL MNHilfe(5)
 END IF 
 END SUB 

SUB DelProjDok()
 codedok% = codedok.dokument
 SELECT KEY codedok% LOCK FILE "dokument" INDEX codedok.dokument
 codepr.dokument = 0
 Projekt.dokument = ""
 Workstation.dokument = Workstation%
 QuickCodekuGru.dokument = STR$ (codeku.dokument,"000000") + Gruppe.dokument
 QWoNo.dokument = STR$ (Workstation%,"000000") + STR$ (codedok.dokument,"000000")
 RecStatus.dokument = "c"
 STORE FILE "dokument"
 UNLOCK CURRENT FILE "dokument"
 END SUB 

 
 ' MenÅ SUPERVIS
 ' =======================================================================
 
SUB MNSUPERVIS()
 CALL MNProgramm()
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","SVNeu","neuen Mitarbeiter hinzufÅgen"
 MENU 2,2,1,"S&ichern,F4","MStore","Daten des aktuellen Mitarbeiters sichern"
 MENU 2,3,1,"&Verwerfen,Ctrl+RckT","UNDO","letzte énderungen Verwerfen"
 IF NOT MNdisabled%("SUPERVISLoeschen") THEN 
   MENU 2,4,1,"&Lîschen","SVLoeschen","aktuellen Mitarbeiter lîschen"
 ELSE 
   MENU 2,4,0,"&Lîschen"
 END IF 
 MENU 2,5,1,"S&uchen,F6","SVSuchen","Mitarbeiter suchen"
 MENU 3,0,1,"&Bewegen","",""
 MENU 3,1,1,"&NÑchster,BildAb","SVNext","nÑchster Mitarbeiter"
 MENU 3,2,1,"&Vorheriger,BildAuf","SVPrev","vorheriger Mitarbeiter"
 CALL MNHilfe(4)
 END SUB 
 
SUB MNVERTRETE()
 CALL MNProgramm()
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","VTNeu","neuen Vertreter hinzufÅgen"
 MENU 2,2,1,"S&ichern,F4","VStore","Daten des aktuellen Vertreters sichern"
 MENU 2,3,1,"&Verwerfen,Ctrl+RckT","UNDO","letzte énderungen Verwerfen"
 IF NOT MNdisabled%("SUPERVISLoeschen") THEN 
   MENU 2,4,1,"&Lîschen","VTLoeschen","aktuellen Vertreter lîschen"
 ELSE 
   MENU 2,4,0,"&Lîschen"
 END IF 
 MENU 2,5,1,"S&uchen,F6","VTSuchen","Vertreter suchen"
 MENU 3,0,1,"&Bewegen","",""
 MENU 3,1,1,"&NÑchster,BildAb","VTNext","nÑchster Vertreter"
 MENU 3,2,1,"&Vorheriger,BildAuf","VTPrev","vorheriger Vertreter"
 CALL MNHilfe(4)
 END SUB 
 
 ' Tabellenansicht
 ' ======================================================================
 
SUB MNTABLE()
 CALL MNProgramm()
 MENU 2,0,1,"B&earbeiten","",""
 MENU 2,1,1,"é&ndern,Ctrl+B","ChangeRecord","einen neuen Datensatz erfassen"
 MENU 2,2,1,"S&ichern,Ctrl+S","SaveRecord","aktuellen Datensatz sichern"
 MENU 2,3,1,"&Lîschen,Entf","RemoveCurrent","aktuellen Datensatz lîschen"
 MENU 3,0,1,"P&osition","",""
 MENU 3,1,1,"&erster,Ctrl+Pos1","SelectFirst","zum ersten Datensatz wechseln"
 MENU 3,2,1,"&letzter,Ctrl+Ende","SelectLast","zum letzten Datensatz wechseln"
 MENU 3,3,3,"","",""
 MENU 3,4,1,"&zurÅck,Auf","SelectPrevious","vorherger Datensatz"
 MENU 3,5,1,"&vor,Ab","SelectNext","nÑchster Datensatz"
 MENU 3,6,1,"Seite zurÅck,BildAuf","FormPrevPage","eine Seite zurÅck"
 MENU 3,7,1,"Seite vor,BildAb","FormNextPage","eine Seite vor"
 CALL MNHilfe(4)
 END SUB 
 
 ' ProgrammenÅ erzeugen
 ' ======================================================================
 ' 15.12.95    - Nachrichtenversand auf MAPI umgestellt
 
SUB MNProgramm()
 MENU CLEAR 
 MENU 1,0,1,"&Programm","","allgemeine Programmfunktionen"
 MENU 1,1,0,"D&rucken"
 MENU 1,2,1,"Drucker &einrichten...","PrinterSetup","Druckereinrichtung"
 MENU 1,3,1,"Druck&parameter","PrintParam","Druckparameter"
 IF MNdisabled%("SCREENSHOT") THEN 
   MENU 1,4,0,"akt.&Bildschirmseite drucken,Ctrl+F3","SeiteDrucken","Seite drucken"
 ELSE 
   IF _projekt$ LIKE "*MEDIA*" THEN 
     MENU 1,4,1,"akt.&Bildschirmseite drucken","SeiteDrucken","Seite drucken"
   ELSE 
     MENU 1,4,1,"akt.&Bildschirmseite drucken,Ctrl+F3","SeiteDrucken","Seite drucken"
   END IF 
 END IF 
 
 MENU 1,5,1,"Tagesterminliste Mitarbeiter,F12","TagestMA1a","Tagesterminliste Mitarbeiter"
 MENU 1,6,3
 IF FORM LIKE "FACTPRO*" THEN 
   MENU 1,7,1,"&Mitarbeiter wechseln","LOGIN","neuen Mitarbeiter am System anmelden"
 ELSE 
   MENU 1,7,0,"&Mitarbeiter wechseln","LOGIN","neuen Mitarbeiter am System anmelden"
 END IF 
 REM MENU 1,8,1,"&Beenden,Ctrl+F4","EXIT1()","Programm beenden"
 MENU 1,8,1,"Nachricht versenden,F9","NetMail","Nachrichten an andere Mitarbeiter versenden"
 IF GCodieruf% = - 1 OR GCodieruf1% = - 1 THEN 
   IF GCodieruf2% = - 1 THEN 
     MENU 1,9,0,"aus Termin-Suchliste &wÑhlen,F10","TERKurzSuche","Auflistung Termine"
   ELSE 
     MENU 1,9,1,"aus Termin-Suchliste &wÑhlen,F10","TERKurzSuche","Auflistung Termine"
   END IF 
 ELSE 
   MENU 1,9,0,"aus Termin-Suchliste &wÑhlen,F10","TERKurzSuche","Auflistung Termine"
 END IF 
 IF MNdisabled%("LOCALRECHEINST") THEN 
   MENU 1,10,0,"lokale Rechnereinstellungen","LokalSetup","lokale Rechnereinstellungen"
 ELSE 
   MENU 1,10,1,"lokale Rechnereinstellungen","LokalSetup","lokale Rechnereinstellungen"
 END IF 
 MENU 1,11,1,"Registrierung","LizMussNeu",""
 MENU 1,12,1,"Programm beenden,Alt+F4","EXIT1",""
 END SUB 
 

 
SUB EXIT1()
 REQUEST "Programm Beenden ?","",130,req%
 IF req% = 0 THEN END SUB 
 cfile$ = FILE 
 IF cfile$ <> "" THEN 
   IF MOD (cfile$) OR NEW (cfile$) THEN CALL QuickStore(cfile$)
 END IF 
 CALL EXIT()
 END SUB 
 
 ' HilfemenÅ erzeugen
 ' ======================================================================
 ' 07.09.95    - Formulareditoraufruf abhÑngig von SB-Version
  
SUB MNHilfe(Spalte%)
 MENU Spalte%,0,1,"&Hilfe","","Hilfefunktionen"
 MENU Spalte%,1,1,"&Inhalt,F1","Hilfe","Inhaltsverzeichnis des Online-Handbuches"
 REM MENU Spalte%,2,1,"&ZusÑtze","WERBUNG","Informationen zu weiteren CODie-Produkten"
 MENU Spalte%,2,3
 MENU Spalte%,3,1,"I&nfo...","About","Informationen Åber Hotline"
 mn% = 4
 IF GTest% = 1 THEN 
   MENU Spalte%,4,3
   MENU Spalte%,5,1,"&Formular Ñndern","ModifyForm","aktuelles Formular Ñndern"
   MENU Spalte%,6,1,"&Dateien Ñndern","ModifyFile","aktuelle Datei Ñndern"
   MENU Spalte%,7,1,"&Programm debuggen","PROGDB","Programm debuggen"
   MENU Spalte%,8,1,"SBL-Befehl ausfÅhren,Ctrl+F1","SBLCMD"
   MENU Spalte%,9,1,"Serie-ADRESSEN markieren","SERSPA"
   mn% = 10
 END IF 
 MENU ON 
 END SUB 
  
 ' DokumentenmenÅ erzeugen
 ' ======================================================================
 
SUB MNDOK(Spalte%)
 MENU Spalte%,0,1,"Do&kumente"
 a% = 0
 WHILE DOKGruppen$(a%) <> "" AND a% < 15
   IF a% < 10 THEN mnline$ = "&" ELSE mnline$ = ""
   mnline$ = mnline$ + LTRIM$ ( STR$ (a%,"999")) + " " + DOKGruppen$(a%)
   MENU Spalte%,a% + 1,1,mnline$,"ADRDOK"
   a% = a% + 1
 WEND 
 IF a% >= 15 THEN 
   MENU 4,a% + 1,3
   MENU 4,a% + 2,1,"&Weitere Gruppen...","ADRDok","Weitere Dokumentengruppen"
 END IF 
 END SUB 
 
SUB HISTORY()
 CALL DFile(2,"projekt" + _fpw$)
 END SUB 
 
SUB MNHISTORY()
 END SUB 
 
SUB FiltAB()
 SELECT WHERE ASK 
 END SUB 
 
SUB XCHANGE()
 IF NOT EXISTS (_netpath$ + "XCHANGE.SBR") THEN 
   CALL Fehler("Der Datenaustausch ist auf Ihrem System nicht installiert!","")
 ELSE 
   MOUSE OFF 
   IF NOT PROGRAMFILE ("XCHANGE") THEN LOAD _netpath$ + "XCHANGE.SBR", NEW 
   CALL RunXCHANGE()
   IF _projekt$ LIKE "FACTURA*" THEN CALL ABZUVerech()
   REM IF PROGRAMFILE ("XCHANGE") THEN CLOSE PROGRAMFILE "XCHANGE"
 END IF 
 END SUB 
 
 ' INHOUSE: Debugger aufrufen
 ' ======================================================================
 
SUB PROGDB()
 CALL EditProgram()
 DEBUG ASK 
 END SUB 
 
 
 ' Datei WERBUNG.HLP anzeigen
 ' ======================================================================
 
SUB WERBUNG()
 HELP _netpath$ + "WERBUNG"
 END SUB 
 
SUB SBLCMD()
 CREATE DIALOG "INTCMD",0,0,239,136,title$,"MS Sans Serif",8
 ADD DIALOG "INTCMD",4,0,0,238,112,0,""
 ADD DIALOG "INTCMD",9,5,11,20,22,2
 ADD DIALOG "INTCMD",5,28,14,202,10,0,"Bitte geben Sie einen gÅltigen SBL-Befehl ein:"
 ADD DIALOG "INTCMD",6,28,30,205,72,4,2,cmd$,4000
 ADD DIALOG "INTCMD",1,60,116,55,15,1,"Aus&fÅhren",1,1
 ADD DIALOG "INTCMD",1,117,116,55,15,0,"&Abbrechen",0,0
 DIALOG "INTCMD",req%
 REMOVE DIALOG "INTCMD"
 IF req% = 1 THEN 
   ON ERROR GOTO CMDTrap
   ok% = 0
   EXECUTE cmd$
 END IF 
 ok% = 1
CMDTrap: 
 IF ok% = 0 THEN 
   REQUEST "Fehler in Programmzeile:","[" + STR$ ( ERRNO ,"9999") + "] " + ERR$ ( ERRNO ),113
 END IF 
 IF GTest% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
 END SUB 
 
SUB ClearKBDBuffer()
 GET a$
 WHILE ASC (a$) <> 0
   GET a$
 WEND 
 END SUB 
 
 
SUB ADRImport()
 IF disabled%("ADRESSIMPORT") THEN END SUB 
  ok% = 1
  IF MNdisabled%("SUPERVISOR") THEN 
    CALL Fehler("Keine Zugangsberechtigung!","AusfÅhrung nur durch Supervisor mîglich!")
    ok% = - 1
  END IF 
  IF ok% = - 1 THEN END SUB 
  REQUEST "Haben alle anderen Nutzer die Anwendung geschlossen?","",130,req%
  IF req% <> 1 THEN 
    REQUEST "Import kann nur durchgefÅhrt werden,","wenn alle Nutzer die Anwendung verlassen haben",2
    ok% = - 1
  END IF 
 IF ok% = - 1 THEN END SUB 
 CALL DFile(2,"OFFICE\keywords" + _fpw$)
 REM IF EXISTS (_netpath$ + "impoadr.dbd") THEN 
 END IF 
 REQUEST "Wollen Sie den Import aus der Datei " + _netpath$ + "IMPOADR.DBF beginnen ? ","",130,req%
 REM dateiname$ = "Impoadr.dbf"
 REM REQUEST "Import aus dBase - Datei..."," ",26,req%,dateiname$
 IF req% <> 1 THEN END SUB 
 MOUSE ON 
 CALL DFile(2,"impoadr.dbf")
 REM OPEN FILE SHARE "C:\CODIDEFA\FACTURA\IMPOADR.DBF"
 REQUEST "Soll die Kundennummer automatisch erzeugt werden ?","JA=Erzeugung/ NEIN=öbernahme der Kundennummer KUNDENNUMM aus IMPOADR.DBF",130,req%
 FILE "impoadr"
 SELECT FIRST 
 i% = 0
 zzz% = 0
 MOUSE OFF 
 WHILE NOT EOF ("impoadr")
   zzz% = zzz% + 1
     SELECT FIRST LOCK FILE "stamm"
     LastKunr.stamm = LastKunr.stamm + 1
     STORE FILE "stamm"
     UNLOCK CURRENT FILE "stamm"
     nnum% = LastKunr.stamm
   FILE "adressen"
   BLANK 
   codeku1% = SER ("adressen",1)
   codeku.adressen = codeku1%
   REM nnum% = VAL (ReadConfig$("NUMMERN","LASTKundennummer")) + 1
   REM CALL WriteConfig("NUMMERN","LASTKundennummer", LTRIM$ ( STR$ (nnum%,"999999")))
   IF req% = 1 THEN 
     kundennummer.adressen = "IMPO" + LTRIM$ ( STR$ (nnum%,"999999"))
   ELSE 
     kundennummer.adressen = LTRIM$ ( LEFT$ (kundennumm.impoadr,20))
   END IF 
   debitorkto.adressen = STR$ (nnum%,"99999")
   stichwort$ = stichwort.impoadr
   IF stichwort$ <> "" THEN 
     stichwort.adressen = stichwort$ + ",IMPOADR" + DATE$ ( TODAY ,"0dmmyyyy")
   ELSE 
     stichwort.adressen = "IMPOADR" + DATE$ ( TODAY ,"0dmmyyyy")
   END IF 
   stich$ = stichwort.adressen
   anrede.adressen = LEFT$ (anrede.impoadr,20)
   nachname.adressen = LEFT$ (nachname.impoadr,50)
   vorname.adressen = LEFT$ (vorname.impoadr,50)
   geburtsname.adressen = LEFT$ (geburtsnam.impoadr,50)
   stra·e.adressen = LEFT$ (stra·e.impoadr,50)
   plz.adressen = LEFT$ (plz.impoadr,8)
   ort.adressen = LEFT$ (ort.impoadr,50)
   geburtstag.adressen = geburtstag.impoadr
   k1bank.adressen = LEFT$ (k1bank.impoadr,50)
   k1blz.adressen = LEFT$ (k1blz.impoadr,8)
   k1konto.adressen = LEFT$ (k1konto.impoadr,10)
   k2bank.adressen = LEFT$ (k2bank.impoadr,50)
   k2blz.adressen = LEFT$ (k2blz.impoadr,8)
   k2konto.adressen = LEFT$ (k2konto.impoadr,10)
   kunde_seit.adressen = kunde_seit.impoadr
   letzter_Kontakt.adressen = letzter_ko.impoadr
   notiz.adressen = notiz.impoadr

     IF Postanschrift.adressen = "" THEN 
       p$ = ""
       IF anrede.adressen LIKE "Herr*" OR anrede.adressen LIKE "Fr*" OR anrede.adressen LIKE "Fam*" THEN 
         p$ = Anrede.adressen
         IF LTRIM$ (Titel.adressen) <> "" THEN 
           p$ = p$ + " " + LTRIM$ (Titel.adressen) + CHR$ (13) + CHR$ (10)
         END IF 
         IF vorname.adressen <> "" THEN 
           p$ = p$ + LTRIM$ (Vorname.adressen) + " " + LTRIM$ (Nachname.adressen) + CHR$ (13) + CHR$ (10)
         ELSE 
           p$ = p$ + LTRIM$ (Nachname.adressen) + CHR$ (13) + CHR$ (10)
         END IF 
         p$ = p$ + Stra·e.adressen + CHR$ (13) + CHR$ (10) + plz.adressen + " " + Ort.adressen + CHR$ (13) + CHR$ (10)
         p$ = p$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + briefanrede.adressen
       ELSE 
         p$ = Anrede.adressen + CHR$ (13) + CHR$ (10)
         IF vorname.adressen <> "" THEN 
           p$ = p$ + LTRIM$ (nachname.adressen) + " " + LTRIM$ (vorname.adressen) + CHR$ (13) + CHR$ (10)
         ELSE 
           p$ = p$ + LTRIM$ (Nachname.adressen) + CHR$ (13) + CHR$ (10)
         END IF 
         p$ = p$ + Stra·e.adressen + CHR$ (13) + CHR$ (10) + plz.adressen + " " + Ort.adressen + CHR$ (13) + CHR$ (10)
         p$ = p$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + briefanrede.adressen
       END IF 
       Postanschrift.adressen = p$
     END IF 
   zero.adressen = 0
   QNachname.adressen = VSNRPack$(nachname.adressen)
   QVorname.adressen = VSNRPack$(vorname.adressen)
   QOrt.adressen = VSNRPack$(Ort.adressen)
   QOrtsteil.adressen = VSNRPack$(Ortsteil.adressen)
   QStra·e.adressen = VSNRPack$(Stra·e.adressen)
   QPLZ.adressen = VSNRPack$(PLZ.adressen)
   QGeburtsname.adressen = VSNRPack$(Geburtsname.adressen)
   Workstation.adressen = Workstation%
   QWoNo.adressen = STR$ (Workstation%,"000000") + STR$ (codeku.adressen,"000000")
   RecStatus.adressen = "c"
 
   STORE FILE "adressen"
   UNLOCK CURRENT FILE "adressen"
   SET STATUS "Anzahl importierter Adressen: " + STR$ (zzz%,"999999")
   FILE "Telefon"
   IF telefon1.impoadr <> "" THEN 
     BLANK 
     codetel.telefon = SER ("Telefon",1)
     codeku.telefon = codeku1%
     art.telefon = "Telefon1"
     nummer.telefon = telefon1.impoadr
     fonoderfax = "n"
     Workstation.Telefon = Workstation%
     QWoNo.Telefon = STR$ (Workstation%,"000000") + STR$ (codetel.Telefon,"000000")
     RecStatus.Telefon = "c"
     STORE FILE "Telefon"
     UNLOCK CURRENT FILE "Telefon"
   END IF 
   IF telefon2.impoadr <> "" THEN 
     BLANK 
     codetel.telefon = SER ("Telefon",1)
     codeku.telefon = codeku1%
     art.telefon = "Telefon2"
     nummer.telefon = telefon2.impoadr
     fonoderfax = "n"
     Workstation.Telefon = Workstation%
     QWoNo.Telefon = STR$ (Workstation%,"000000") + STR$ (codetel.Telefon,"000000")
     RecStatus.Telefon = "c"
     STORE FILE "Telefon"
     UNLOCK CURRENT FILE "Telefon"
   END IF 
   IF telefax.impoadr <> "" THEN 
     BLANK 
     codetel.telefon = SER ("Telefon",1)
     codeku.telefon = codeku1%
     art.telefon = "Telefax"
     nummer$ = telefax.impoadr
     nummer.telefon = telefax.impoadr
     fonoderfax = "j"
     Workstation.Telefon = Workstation%
     QWoNo.Telefon = STR$ (Workstation%,"000000") + STR$ (codetel.Telefon,"000000")
     RecStatus.Telefon = "c"
     STORE FILE "Telefon"
     UNLOCK CURRENT FILE "Telefon"
   END IF 
   i% = i% + 1
   SET STATUS "importierte Anzahl:" + STR$ (i%,"000000")
   FILE "impoadr"
   SELECT NEXT 
 WEND 
 CLOSE FILE "IMPOADR"
 FILE "keywords"
 IF NOT EXISTS (stich$,keyword.keywords) THEN 
   BLANK 
   keyword.keywords = LEFT$ (stich$,30)
   CALL FStore("keywords")
 END IF 
 SET STATUS "MenÅ"
 REQUEST "Adress-Import beendet!","importierte Anzahl:" + STR$ (i%,"000000"),2
 SET STATUS ""
 FILE "telefon"
 INDEX codeku.telefon
 SELECT FORM KEY codeku1% FILE "Telefon" INDEX codeku.telefon
 FILE "adressen"
 SELECT FORM KEY codeku1% FILE "Adressen" INDEX codeku.adressen
 FORM 
 MOUSE ON 
 END SUB 
 
SUB ADRESTOSExp()
 IF disabled%("ADRESSEXPORT") THEN END SUB 
 REQUEST "Wollen Sie wirklich eine ESTOS Importdatei erstellen?","Der Import dauert einige Zeit!",130,req%
 IF req% = 0 THEN END SUB 
 CALL DFile(2,"OFFICE\ADRESTOS" + _fpw$)
 IF RECCOUNT ("ADRESTOS") > 0 THEN 
   MOUSE OFF 
   REMOVE FROM FILE "ADRESTOS"
 END IF 
 FILE "adressen"
 INDEX codeku.adressen
 SELECT FIRST 
 FILE "Telefon"
 INDEX codeku.telefon
 SELECT FIRST 
 i% = 0
 j% = RECCOUNT ("adressen")
 MOUSE OFF 
 WHILE NOT EOF ("adressen")
   i% = i% + 1
   SET STATUS STR$ (i%,",999999") + "/" + STR$ (j%,",999999")
   codeku% = codeku.adressen
   ok% = - 1
   IF EXISTS (codeku%,codeku.telefon) THEN 
     IF GCodieADR$ LIKE "TRUE" THEN 
       ok% = 0
       IF adrstatus.adressen LIKE "kunde*" OR adrstatus.adressen LIKE "*kunde*" THEN ok% = - 1
       IF adrstatus.adressen LIKE "interes*" OR adrstatus.adressen LIKE "*interes*" THEN ok% = - 1
       IF adrstatus.adressen LIKE "ISMAN*" OR adrstatus.adressen LIKE "*isman*" THEN ok% = - 1
       IF adrstatus.adressen LIKE "cbfc*" OR adrstatus.adressen LIKE "*cbfc*" THEN ok% = - 1
       IF adrstatus.adressen LIKE "cb#fc*" OR adrstatus.adressen LIKE "*cb#fc*" THEN ok% = - 1
       IF adrstatus.adressen LIKE "provis*" OR adrstatus.adressen LIKE "*provis*" THEN ok% = - 1
       IF adrstatus.adressen LIKE "project*" OR adrstatus.adressen LIKE "*project*" THEN ok% = - 1

       IF stichwort.adressen LIKE "kunde*" OR stichwort.adressen LIKE "*kunde*" THEN ok% = - 1
       IF stichwort.adressen LIKE "update*" OR stichwort.adressen LIKE "*update*" THEN ok% = - 1
       IF stichwort.adressen LIKE "cbfc*" OR stichwort.adressen LIKE "*cbfc*" THEN ok% = - 1
       IF stichwort.adressen LIKE "provis*" OR stichwort.adressen LIKE "*provis*" THEN ok% = - 1
       IF stichwort.adressen LIKE "proj*" OR stichwort.adressen LIKE "*proj*" THEN ok% = - 1
       IF stichwort.adressen LIKE "isman*" OR stichwort.adressen LIKE "*isman*" THEN ok% = - 1
       IF stichwort.adressen LIKE "hotel*" OR stichwort.adressen LIKE "*hotel*" THEN ok% = - 1

       IF adrstatus.adressen LIKE "ERLEDIGT*" OR adrstatus.adressen LIKE "*ERLEDIGT*" THEN ok% = 0
     END IF 
     nachname$ = FN ansi(nachname.adressen)
     IF nachname$ LIKE "zz~*" THEN 
       REM n$ = LTRIM$ ( MID$ (nachname$,4))
       REM nachname$ = n$
       nachname$ = ""
     END IF 
     vorname$ = FN ansi(vorname.adressen)
     IF LEFT$ (vorname$,7) LIKE "zu Hd. " THEN 
       v$ = MID$ (vorname$,8)
       vorname$ = v$
     END IF 
     zuHaenden$ = FN ansi(Geburtsname.adressen)

     Strasse$ = FN ansi(stra·e.adressen)
     plz$ = plz.adressen
     ort$ = FN ansi(ort.adressen)
     SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
     
     IF nachname$ = "" THEN ok% = 0
     WHILE NOT EOF ("Telefon") AND ok% = - 1
       IF codeku.telefon <> codeku% THEN 
         ok% = 0
       ELSE 
         IF nummer.telefon LIKE "*@*" OR art.telefon LIKE "*fax*" OR nummer.telefon LIKE "*fax*" OR nummer.telefon LIKE "" OR fonoderfax.telefon LIKE "j" OR kart1.telefon LIKE "*fax*" THEN 
         ELSE 
           nummer$ = FN numeric(nummer.telefon)
           leng% = LEN (nummer$)
           IF nummer$ <> "" AND leng% > 4 THEN 
             BLANK FILE "adrestos"
             nachname.adrestos = nachname$
             vorname.adrestos = vorname$
             zuHaenden.adrestos = zuHaenden$
             ort.adrestos = ort$
             strasse.adrestos = strasse$
             plz.adrestos = plz$
             telart1.adrestos = art.telefon
             telnr1.adrestos = FN numeric(nummer.telefon)
             STORE FILE "adrestos"
           END IF 
         END IF 
       END IF 
       SELECT NEXT FILE "telefon" INDEX codeku.telefon
     WEND 
   END IF 
   FILE "adressen"
   SELECT NEXT FILE "adressen" INDEX codeku.adressen
 WEND 
 CALL Fehler("Die Daten werden jetzt in das CSV-Format umgewandelt!","")
 WAIT FOR 1
 DIRECTORY _netpath$
 IF EXISTS ("ADRESTOS.CSV") THEN DELETE "ADRESTOS.CSV"
 FILE "ADRESTOS"
 OPEN FIELDS Nachname,Vorname,zuHaenden,Strasse,PLZ,Ort,Telart1,Telnr1
 WAIT FOR 1
 Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
 Superbase.Converters.SBF.SourceFile = "ADRESTOS"
 Superbase.Converters.SBF.Descending = 0
 Superbase.Converters.SBF.Merge = 0
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.CSV.DestFormat = "Comma-separated values"
 Superbase.Converters.CSV.DestFile = "ADRESTOS.CSV"
 Superbase.Converters.CSV.UseLabels = - 1
 Superbase.Converters.CSV.ANSIConvert = - 1
 Superbase.Converters.CSV.Convert(Superbase.Converters.SBF)

 CALL Fehler("Der Export wurde beendet! Sie finden die Datei unter: " + _netpath$ + "ADRESTOS.CSV","Diese Datei in ESTOS ProCall Express/MenÅ Extras/Kontakte importieren/CSV-Datei importieren!")
 MOUSE ON 
 END SUB 

SUB ADRExport()
 IF disabled%("ADRESSEXPORT") THEN END SUB 
 ok% = 0
 cdir$ = DIRECTORY 
 IF disabled%("ADRDrucken") THEN END SUB 
 IF MNdisabled%("SUPERVISOR") THEN 
   CALL Fehler("Keine Zugangsberechtigung!","AusfÅhrung nur durch Supervisor mîglich!")
   ok% = - 1
 END IF 
 IF ok% = - 1 THEN END SUB 
 REQUEST "Wollen Sie ausgewÑhlte Adressen in eine dBASE III/IV-Datei exportieren?","",130,req%
 IF req% = 1 THEN 
   SET STATUS "Einen Moment die Adressen werden fÅr den Export aufbereitet"
   MOUSE OFF 
   FILE "adressen"
   INDEX nachname.adressen
   SELECT WHERE ASK 
   SET STATUS "Adressen werden gesucht"
   bedingung$ = WHERE 
   IF bedingung$ = "" THEN bedingung$ = "codeku>0"
   SET ANSICONVERT OFF 
   FILE "Telefon"
   INDEX codeku.telefon
   UPDATE fonoderfax.telefon = "j" WHERE UCASE$ (Art.Telefon) LIKE "FAX*" OR UCASE$ (Art.Telefon) LIKE "*FAX*"
   END UPDATE 
   UPDATE fonoderfax.telefon = "n" WHERE UCASE$ (Art.Telefon) LIKE "FON*" OR UCASE$ (Art.Telefon) LIKE "*FON*"
   END UPDATE 
   SELECT FIRST 
   FILE "Adressen"
   INDEX codeku.adressen
   SELECT FIRST LOCK 
   i% = 0
   WHILE NOT EOF ("Adressen")
      i% = i% + 1
      codeku% = codeku.adressen
      IF EXISTS (codeku%,codeku.telefon) THEN 
        fax% = 0
        tel1% = 0
        tel2% = 0
        telefon1.adressen = ""
        telefon2.adressen = ""
        telefax.adressen = ""
        BTX.adressen = ""
        autotelefon.adressen = ""
        SELECT KEY codeku% FILE "Telefon" INDEX codeku.telefon
        IF FonoderFax.telefon <> "j" THEN 
          telefon1.adressen = nummer.telefon
          tel1% = 1
        ELSE 
          telefax.adressen = nummer.telefon
          fax% = 1
        END IF 
        SELECT NEXT FILE "Telefon" INDEX codeku.telefon
        IF codeku.telefon = codeku% THEN 
          IF FonoderFax.telefon <> "j" THEN 
            IF tel1% = 1 THEN 
              telefon2.adressen = nummer.telefon
              tel2% = 1
            ELSE 
              telefon1.adressen = nummer.telefon
              tel1% = 1
            END IF 
          ELSE 
            IF fax% <> 1 THEN 
              telefax.adressen = nummer.telefon
              fax% = 1
            END IF 
          END IF 
        END IF 
        SELECT NEXT FILE "Telefon" INDEX codeku.telefon
        IF codeku.telefon = codeku% THEN 
          IF FonoderFax.telefon <> "j" THEN 
            IF tel1% = 1 AND tel2% <> 1 THEN 
              telefon2.adressen = nummer.telefon
              tel2% = 1
            ELSE 
              IF tel1% <> 1 THEN 
                telefon1.adressen = nummer.telefon
                tel1% = 1
              END IF 
            END IF 
          ELSE 
            IF fax% <> 1 THEN 
              telefax.adressen = nummer.telefon
              fax% = 1
            END IF 
          END IF 
        END IF 
      END IF 
      FILE "Adressen"
      Workstation.Adressen = Workstation%
      QWoNo.Adressen = STR$ (Workstation%,"000000") + STR$ (codeku.Adressen,"000000")
      RecStatus.Adressen = "c"
      STORE FILE "Adressen"
      UNLOCK CURRENT FILE "adressen"
      SELECT NEXT LOCK FILE "Adressen"
      SET STATUS STR$ (i%,"999999") + " Adressen fÅr den Export aufbereitet"
   WEND 
   OPEN FIELDS Kundennummer,Anrede,Nachname,Vorname,Geburtsname,Stra·e,PLZ,Ort,Telefon1,Telefon2,Telefax,Geburtstag,K1Bank,K1BLZ,K1Konto,K2Bank,K2BLZ,K2Konto,Kunde_seit,letzter_Kontakt,Stichwort,Notiz 
   OPEN FIELDS ASK 
   cdir$ = DIRECTORY 
   DIRECTORY _netpath$
   dateiname$ = "EXPOADR.DBF"
   REQUEST "Export nach dBase..."," ",27,req%,dateiname$
   IF req% = 1 THEN 
     befehl$ = "EXPORT FILE " + CHR$ (34) + "ADRESSEN" + CHR$ (34) + CHR$ (34) + dateiname$ + CHR$ (34) + " WHERE " + bedingung$ + " USING " + CHR$ (34) + "3" + CHR$ (34)
     EXECUTE befehl$
     REQUEST "Adress-Export beendet!","",2
   END IF 
 END IF 
 FILE "adressen"
 SELECT WHERE 
 CLOSE FIELDS 
 DIRECTORY cdir$
 MOUSE ON 
 END SUB 
 
   
 
 ' Datensatz sperren/freigeben
 ' ======================================================================
 ' Zweck:       Verwaltung von Zugriffsrechten auf einzelne DatensÑtze
 ' Nutzung:     CALL DSSperre(MainIndex$,FileName$)
 ' Parameter:   MainIndex$: Name des Hauptindexes der Datei
 '              FileName$ : Name der zu bearbeitenden Datei
 ' ======================================================================
 ' 26.04.95   
 
 
SUB DSSperre(MainIndex$,FileName$)
 cfile$ = FILE 
 mi$ = MainIndex$ + "." + FileName$
 IF Sperre.FileName$ = 0 THEN 
   CREATE DIALOG "DSLock",0,0,188,85,title$,"MS Sans Serif",8
   ADD DIALOG "DSLock",4,0,0,188,62,0,""
   ADD DIALOG "DSLock",5,32,8,149,33,0,"Mit dieser Funktion kînnen Sie den Zugriff auf den aktuellen Datensatz sperren, so da· nur noch Sie den Inhalt des Datensatzes angezeigt bekommen."
   ADD DIALOG "DSLock",9,6,8,22,25,2
   ADD DIALOG "DSLock",5,32,42,148,11,0,"Soll der aktuelle Datensatz gesperrt werden?"
   ADD DIALOG "DSLock",1,89,66,55,15,0,"Nein",0,0
   ADD DIALOG "DSLock",1,32,66,55,15,1,"Ja",1,1
   DIALOG "DSLock",req%
   REMOVE DIALOG "DSLock"
   IF req% = 1 THEN 
     MOUSE OFF 
     cds% = mi$$
     SELECT KEY cds% LOCK FILE FileName$ INDEX mi$$
     Sperre.FileName$ = vcodema%
     CALL FStore(FileName$)
   END IF 
 ELSE 
   SELECT KEY Sperre.FileName$ FILE "SUPERVIS" INDEX CodeMA.SUPERVIS
   msg$ = "Der aktuelle Datensatz wurde fÅr die ausschlie·liche Benutzung durch den Mitarbeiter " + Name.SUPERVIS + " reserviert."
   CREATE DIALOG "UnLock",0,0,193,91,title$,"MS Sans Serif",8
   ADD DIALOG "UnLock",4,0,0,193,65,0,""
   ADD DIALOG "UnLock",9,6,9,19,19,2
   ADD DIALOG "UnLock",5,32,9,154,34,0,msg$
   ADD DIALOG "UnLock",5,32,47,156,10,0,"Soll die Sperre aufgehoben werden?"
   ADD DIALOG "UnLock",1,36,72,55,15,1,"Ja",1,1
   ADD DIALOG "UnLock",1,93,72,55,15,0,"Nein",0,0
   DIALOG "UnLock",req%
   REMOVE DIALOG "UnLock"
   IF req% = 1 THEN 
     cds% = mi$$
     SELECT KEY cds% LOCK FILE FileName$ INDEX mi$$
     Sperre.FileName$ = 0
     CALL FStore(FileName$)
   END IF 
 END IF 
 MOUSE ON 
 END SUB 
 
 
SUB BETAINFO()
 CALL Fehler("Diese Funktion ist in dieser Version nicht verfÅgbar!","")
 END SUB 
 
SUB DialTeles()
 CALL DTELES(CodeKU.ADRESSEN)
 END SUB 
SUB DialTelesAQ()
  CALL DTELES(CodeKU.GAkquiDat$)
 END SUB 
 
SUB DTELES(Kunde%)
 cuko% = CodeKU.ADRESSEN
 SELECT KEY Kunde% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 t1$ = Telefon1.ADRESSEN
 t2$ = Telefon2.ADRESSEN
 t3$ = ASTelefon1.ADRESSEN
 t4$ = ASTelefon2.ADRESSEN
 CREATE DIALOG "TELESFON",0,0,290,128,title$,"MS Sans Serif",8
 ADD DIALOG "TELESFON",4,0,0,290,99,0,""
 ADD DIALOG "TELESFON",9,10,12,22,24,2
 ADD DIALOG "TELESFON",5,36,16,246,19,0,"Bitte wÑhlen Sie die Telefonnummer aus, die automatisch per TELES.FON angewÑhlt werden soll:"
 
 ADD DIALOG "TELESFON",5,36,39,62,10,0,"Telefon 1:"
 ADD DIALOG "TELESFON",6,102,38,152,11,0,0,t1$,20
 ADD DIALOG "TELESFON",1,257,38,15,11,0,"...",2,1
 
 ADD DIALOG "TELESFON",5,36,53,63,10,0,"Telefon 2:"
 ADD DIALOG "TELESFON",6,102,52,152,11,0,0,t2$,20
 ADD DIALOG "TELESFON",1,257,52,15,11,0,"...",3,1
 
 ADD DIALOG "TELESFON",5,36,67,63,10,0,"Telefon 1 (2. Adr.):"
 ADD DIALOG "TELESFON",6,102,66,152,11,0,0,t3$,20
 ADD DIALOG "TELESFON",1,257,66,15,11,0,"...",4,1
 
 ADD DIALOG "TELESFON",5,36,81,62,10,0,"Telefon 2 (2. Adr.):"
 ADD DIALOG "TELESFON",6,102,80,152,11,0,0,t4$,20
 ADD DIALOG "TELESFON",1,257,80,15,11,0,"...",5,1
 
 ADD DIALOG "TELESFON",1,85,104,55,15,1,"&OK",1,1
 ADD DIALOG "TELESFON",1,142,104,55,15,0,"&Abbrechen",0,0
 DIALOG "TELESFON",req%
 REMOVE DIALOG ALL 
 IF req% <> 0 THEN 
   IF req% = 1 THEN req% = 2
   tn$ = "t" + STR$ (req% - 1,"0") + "$"
   tn$ = FN numeric(tn$$)
   Kunde$ = Nachname.Adressen + ", " + Vorname.ADRESSEN + ", " + Anrede.ADRESSEN
   Firma$ = ""
   APPACTIVATE "TELES.FON"
   SENDKEYS "%V" + Kunde$ + "{TAB}" + Firma$ + "{TAB}" + tn$
   SENDKEYS "%b"
 END IF 
 END SUB 
 
 
SUB SBDLGED()
 CALL "C:\DEVTOOLS\SB4W\SBDLGED.EXE"
 END SUB 
 
SUB SBFORMED()
 IF FORM <> "" THEN 
   CALL "C:\DEVTOOLS\SB4W\SBFD4W.EXE " + FORM 
 ELSE 
   CALL "C:\SB4W\SBFD4W.EXE"
 END IF 
 END SUB 
 
SUB ADRKopWin()
 adresse$ = MakeAdr$(Codeku.adressen, - 1,0,0)
 COPY FROM Adresse$
 END SUB 

SUB ADRGesKopWin()
 adresse$ = MakeGesAdr$(Codege.geadr,0,0,0)
 COPY FROM Adresse$
 END SUB 

SUB ADRMAKopWin()
 adresse$ = MakeMAAdr$(Codema.maadr,0,0,0)
 COPY FROM Adresse$
 END SUB 

 
SUB ADRKopWAQ()
 lf$ = CHR$ (13) + CHR$ (10)
 adresse$ = MakeAdr$(Codeku.adressen,0,0,0)
 adresse$ = adresse$ + lf$ + notiz.GAkquiDat$ + lf$ + lf$ + ergebnis.GAkquiDat$
 COPY FROM Adresse$
 END SUB 
 
 ' externer Filterdefinitionseditor fÅr beliebige Dateien
 ' ======================================================================
 ' Zweck:       komfortable Erstellung von Filtern
 ' Nutzung:     a$=GetFilter$(Datei$)
 ' Parameter:   Datei$: SBF-Datei mit relativen Pfad und ohne Suffix
 ' ======================================================================
 ' 28.01.96   
 
FUNCTION GetFilter$(Datei$)
 REGISTER _netpath$ + "FILTWIZ.DLL","FilterWiz","CC"
 GetFilter$ = CALL ("FilterWiz",Datei$)
 REGISTER CLEAR "FilterWiz"
 END FUNCTION 
 
 
SUB TelefonListe(Kundennummer%)
 MOUSE OFF 
 cfile$ = FILE 
 DIM Auswahl1$(1)
 Voicedial$ = ReadINI$("MODEM","VoiceDial")
 FaxDial$ = ReadINI$("System","FAXavailable")
 VoiceISDNdial$ = ReadINI$("SYSTEM","VoiceISDNdial")
 DIM Telefonliste$(300)
 ok% = - 1
 
 WHILE ok%
   GCodieRuf1% = 0
   MOUSE OFF 
   SELECT KEY Kundennummer% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
   FILE GTelDat$
   INDEX CodeKU
   SELECT FIRST FILE GTelDat$ INDEX CodeKU
   SELECT KEY Kundennummer% FILE GTelDat$ INDEX CodeKU
   a% = 0
   prompt$ = "ZZZZZZ"
   WHILE CodeKU.GTelDat$ = Kundennummer% AND NOT EOF (GTelDat$)
     Telefonliste$(a%) = Art.GTelDat$ + ", " + Nummer.GTelDat$ + "," + KART1.GTelDat$ + "," + Kart2.GTelDat$ + SPACE$ (80) + STR$ (CodeTEL.GTelDat$,"000000")
     IF Telefonliste$(a%) < prompt$ THEN prompt$ = Telefonliste$(a%)
     IF GCODIE% = - 1 THEN 
       IF GCodieRuf1% = 0 THEN CALL SearchInitTelA("TELEFON")
     END IF 
     IF GCODIE% = - 1 THEN CALL SearchVorbTelA("TELEFON")
 
     a% = a% + 1
     SELECT NEXT FILE GTelDat$ INDEX CodeKU
   WEND 
   IF a% < 1 THEN 
     ok% = 0
     IF req3% <> 29 THEN 
       req% = 3
       GOTO end021120091
     ELSE 
       GOTO end021120092
     END IF 
   END IF 
   IF a% > 0 THEN 
     IF GCODie% = - 1 THEN 
       req3% = CALL ("_SearchShow",c$)
       REM req3=27 Nummer Ñndern
       REM req3=28 Nummer neu
       REM req3=29 Nummer lîschen
       REM CALL Fehler( STR$ (req3%,"99"),c$)
       IF req3% = 27 AND VAL (c$) <> 0 THEN 
         kn% = Codeku.GAdrDat$
         telnr% = VAL (c$)
         IF telnr% > 0 THEN 
           codetel% = telnr%
           REM Nummer Ñndern/anzeigen
           req% = 4
         END IF 
       END IF 
       IF req3% = 28 THEN 
         req% = 3
       END IF 
       IF req3% = 29 AND VAL (c$) <> 0 THEN 
         kn% = Codeku.GAdrDat$
         telnr% = VAL (c$)
         IF telnr% > 0 THEN 
           codetel% = telnr%
           REM Nummer Ñndern/anzeigen
           req% = 5
         END IF 
       END IF 
     ELSE 
          TelefonListe$(a%) = ""
          Kunde$ = Nachname.GAdrDat$ + ", " + Vorname.GAdrDat$
          CREATE DIALOG GTelDat$,0,0,350,179,"Telefonliste","MS Sans Serif",8
          ADD DIALOG GTelDat$,5,5,6,56,10,0,"Telefonliste von:"
          ADD DIALOG GTelDat$,5,62,6,280,20,128,Kunde$
          ADD DIALOG GTelDat$,5,5,22,65,10,0,"Art/&Telefonnummer:"
          ADD DIALOG GTelDat$,7,5,32,275,137,2,2,Telefonliste$,Auswahl$,prompt$
          ADD DIALOG GTelDat$,1,287,32,55,15,1,"&OK",1,1
          ADD DIALOG GTelDat$,1,287,50,55,15,0,"&Abbrechen",0,0
          IF VoiceDial$ LIKE "true" OR FaxDial$ LIKE "true" THEN ADD DIALOG GTelDat$,1,287,80,55,15,0,"&WÑhlen",2,1
          IF GADRDat$ LIKE "ADRESS*" THEN 
            IF ag$ <> "j" THEN 
              ADD DIALOG GTelDat$,1,287,98,55,15,0,"&Neu",3,1
              IF a% <> 0 THEN ADD DIALOG GTelDat$,1,287,116,55,15,0,"én&dern",4,1
              ADD DIALOG GTelDat$,1,287,134,55,15,0,"&Lîschen",5,1
            END IF 
          ELSE 
            ADD DIALOG GTelDat$,1,287,98,55,15,0,"&Neu",3,1
            IF a% <> 0 THEN ADD DIALOG GTelDat$,1,287,116,55,15,0,"én&dern",4,1
            ADD DIALOG GTelDat$,1,287,134,55,15,0,"&Lîschen",5,1
          END IF 
          MOUSE ON 
          DIALOG GTelDat$,req%
          REMOVE DIALOG GTelDat$
        END IF 
end021120091:   
   SELECT CASE req%
   CASE 1,0
     ok% = 0
   CASE 2
     kn% = Codeku.GAdrDat$
     telnr% = VAL ( RIGHT$ (Auswahl$(0),6))
     SELECT KEY telnr% FILE GTelDat$ INDEX CodeTEL.GTelDat$
     IF FonOderFax.GTelDat$ LIKE "j" OR art.GTelDat$ LIKE "*fax*" THEN 
       IF FaxDial$ LIKE "true" THEN 
         CALL FAX(Nummer.GTelDat$)
       ELSE 
         CALL Fehler("Der Faxversand wurde nicht konfiguriert!","")
       END IF 
     ELSE 
       IF VoiceDial$ LIKE "true" THEN 
         IF VoiceISDNdial$ LIKE "TEDAS" THEN 
           tn$ = FN numeric(Nummer.GTelDat$)
           ON ERROR GOTO end2605984
           APPACTIVATE "HANDY"
           SENDKEYS "{HOME}"
           SENDKEYS "++{END}"
           SENDKEYS "{DELETE}"
           SENDKEYS tn$
           ok% = 0
           REM SENDKEYS "%V" + tn$
           REM SENDKEYS "%b"
         ELSE 
           CALL Telefon(Nummer.GTelDat$)
         END IF 
       ELSE 
         CALL Fehler("Die Telefonwahl wurde nicht konfiguriert!","")
       END IF 
     END IF 
     GOTO end2605983
end2605984: 
     CALL Fehler("Das Tedas Telefonprogramm wurde noch nicht aufgerufen!","")
     ON ERROR GOTO ErrorHandler
end2605983: 
   CASE 3
     REM Nummer neu
     Nummer$ = ""
     Art$ = ""
     Auswahl$ = "FON"
     Auswahl1$ = "k.A."
     IF GCODie% <> - 1 THEN 
       CREATE DIALOG GTelDat$,0,0,350,200,"Telefonliste (Eintrag Neu)","MS Sans Serif",8
       ADD DIALOG GTelDat$,5,5,6,56,10,0,"Telefonliste von:"
       ADD DIALOG GTelDat$,6,54,144,220,11,0,0,Art$,100
       ADD DIALOG GTelDat$,6,54,156,220,10,0,0,Nummer$,100
       REM ADD DIALOG GTelDat$,2,186,144,52,9,0,"Fax ?","j","n",FonOrFax$
       ADD DIALOG GTelDat$,5,62,6,280,20,128,Kunde$
       ADD DIALOG GTelDat$,5,5,22,65,10,0,"Art/Telefonnummer:"
       ADD DIALOG GTelDat$,7,5,32,270,81,2,2,Telefonliste$,Auswahl$,prompt$
       ADD DIALOG GTelDat$,1,287,32,54,14,1,"&OK",1,1
       ADD DIALOG GTelDat$,1,287,49,54,16,0,"&Abbrechen",0,0
       ADD DIALOG GTelDat$,5,5,121,156,21,0,"Bitte geben Sie die Daten ein."
       ADD DIALOG GTelDat$,5,5,145,45,10,0,"A&rt:"
       ADD DIALOG GTelDat$,5,5,156,45,10,0,"&Nummer:"
       ADD DIALOG GTelDat$,5,5,170,45,10,0,"Merkmal1:"
       ADD DIALOG GTelDat$,8,54,168,48,48,259,2,Auswahl$,GAutoKArt1$
       ADD DIALOG GTelDat$,5,109,170,45,10,0,"Merkmal2:"
       ADD DIALOG GTelDat$,8,144,168,48,48,259,2,Auswahl1$,GAutoKArt2$
       DIALOG GTelDat$,req%
       REMOVE DIALOG GTelDat$
     ELSE 
       CREATE DIALOG GTelDat$,0,0,350,80,"Telefonliste (Eintrag neu)","MS Sans Serif",8
       ADD DIALOG GTelDat$,6,54,24,220,11,0,0,Art$,100
       ADD DIALOG GTelDat$,6,54,36,220,10,0,0,Nummer$,100
       ADD DIALOG GTelDat$,1,287,22,54,14,1,"&OK",1,1
       ADD DIALOG GTelDat$,1,287,39,54,16,0,"&Abbrechen",0,0
       ADD DIALOG GTelDat$,5,5,11,290,11,0,"Bitte geben Sie die gewÅnschten Informationen ein."
       ADD DIALOG GTelDat$,5,5,25,45,10,0,"A&rt:"
       ADD DIALOG GTelDat$,5,5,36,45,10,0,"&Nummer:"
       ADD DIALOG GTelDat$,5,5,51,45,10,0,"Merkmal1:"
       ADD DIALOG GTelDat$,8,54,48,48,48,259,2,Auswahl$,GAutoKArt1$
       ADD DIALOG GTelDat$,5,109,51,45,10,0,"Merkmal2:"
       ADD DIALOG GTelDat$,8,144,48,48,48,259,2,Auswahl1$,GAutoKArt2$
       DIALOG GTelDat$,req%
       REMOVE DIALOG GTelDat$
     END IF 
     IF req% = 1 THEN 
       BLANK FILE GTelDat$
       CodeTEL.GTelDat$ = SER (GTelDat$,1)
       Art.GTelDat$ = Art$
       Nummer.GTelDat$ = Nummer$
       CodeKU.GTelDat$ = Kundennummer%
       Kart1.GtelDat$ = Auswahl$
       Kart2.GtelDat$ = Auswahl1$
       IF Kart1.GtelDat$ = "FAX" THEN 
         FonOderFax.GTelDat$ = "j"
       ELSE 
         FonOderFax.GTelDat$ = "n"
       END IF 
       CALL FStore(GTelDat$)
       SELECT FORM KEY Kundennummer% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
       FORM 
     END IF 
   CASE 4
     IF GCODie% <> - 1 THEN 
       prompt$ = Auswahl$(0)
       telnr% = VAL ( RIGHT$ (Auswahl$(0),6))
     END IF 
     SELECT KEY telnr% FILE GTelDat$ INDEX CodeTEL.GTelDat$
     Art$ = Art.GTelDat$
     Nummer$ = Nummer.GTelDat$
     Auswahl$ = KART1.GTelDat$
     Auswahl1$ = KART2.GTelDat$
     IF GCODie% <> - 1 THEN 
       CREATE DIALOG GTelDat$,0,0,350,200,"Telefonliste (Eintrag Ñndern)","MS Sans Serif",8
       ADD DIALOG GTelDat$,5,5,6,56,10,0,"Telefonliste von:"
       ADD DIALOG GTelDat$,6,54,144,220,11,0,0,Art$,100
       ADD DIALOG GTelDat$,6,54,156,220,10,0,0,Nummer$,100
       ADD DIALOG GTelDat$,5,62,6,280,20,128,Kunde$
       ADD DIALOG GTelDat$,5,5,22,65,10,0,"Art/Telefonnummer:"
       ADD DIALOG GTelDat$,7,5,32,270,81,2,2,Telefonliste$,Auswahl$,prompt$
       ADD DIALOG GTelDat$,1,287,32,54,14,1,"&OK",1,1
       ADD DIALOG GTelDat$,1,287,49,54,16,0,"&Abbrechen",0,0
       ADD DIALOG GTelDat$,5,5,121,156,21,0,"Bitte geben Sie die gewÅnschten énderungen fÅr den gewÑhlten Eintrag ein."
       ADD DIALOG GTelDat$,5,5,145,45,10,0,"A&rt:"
       ADD DIALOG GTelDat$,5,5,156,45,10,0,"&Nummer:"
       ADD DIALOG GTelDat$,5,5,170,45,10,0,"Merkmal1:"
       ADD DIALOG GTelDat$,8,54,168,48,48,259,2,Auswahl$,GAutoKArt1$
       ADD DIALOG GTelDat$,5,109,170,45,10,0,"Merkmal2:"
       ADD DIALOG GTelDat$,8,144,168,48,48,259,2,Auswahl1$,GAutoKArt2$
       DIALOG GTelDat$,req%
       REMOVE DIALOG GTelDat$
     ELSE 
       CREATE DIALOG GTelDat$,0,0,350,80,"Telefonliste (Eintrag Ñndern)","MS Sans Serif",8
       ADD DIALOG GTelDat$,6,54,24,220,11,0,0,Art$,100
       ADD DIALOG GTelDat$,6,54,36,220,10,0,0,Nummer$,100
       ADD DIALOG GTelDat$,1,287,22,54,14,1,"&OK",1,1
       ADD DIALOG GTelDat$,1,287,39,54,16,0,"&Abbrechen",0,0
       ADD DIALOG GTelDat$,5,5,11,290,11,0,"Bitte geben Sie die gewÅnschten énderungen fÅr den gewÑhlten Eintrag ein."
       ADD DIALOG GTelDat$,5,5,25,45,10,0,"A&rt:"
       ADD DIALOG GTelDat$,5,5,36,45,10,0,"&Nummer:"
       ADD DIALOG GTelDat$,5,5,51,45,10,0,"Merkmal1:"
       ADD DIALOG GTelDat$,8,54,48,48,48,259,2,Auswahl$,GAutoKArt1$
       ADD DIALOG GTelDat$,5,109,51,45,10,0,"Merkmal2:"
       ADD DIALOG GTelDat$,8,144,48,48,48,259,2,Auswahl1$,GAutoKArt2$
       DIALOG GTelDat$,req%
       REMOVE DIALOG GTelDat$
     END IF 
     IF req% = 1 THEN 
       SELECT KEY telnr% LOCK FILE GTelDat$ INDEX CodeTEL.GTelDat$
       Art.GTelDat$ = Art$
       Nummer.GTelDat$ = LTRIM$ (Nummer$)
       Kart1.GtelDat$ = Auswahl$
       Kart2.GtelDat$ = Auswahl1$
       IF Kart1.GtelDat$ = "FAX" THEN 
         FonOderFax.GTelDat$ = "j"
       ELSE 
         FonOderFax.GTelDat$ = "n"
       END IF 
       CALL FStore(GTelDat$)
       SELECT FORM KEY Kundennummer% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
       FORM 
     END IF 
   CASE 5
     REM lîschen
     IF GCODie% <> - 1 THEN 
       telnr% = VAL ( RIGHT$ (Auswahl$(0),6))
     END IF 
     SELECT KEY telnr% LOCK FILE GTelDat$ INDEX CodeTEL.GTelDat$
     CALL Fehler("Es soll der Eintrag" + Art.GTelDat$,"gelîscht werden!")
     REQUEST "Wirklich lîschen?","",135,req%
     IF req% = 1 THEN 
       SELECT REMOVE FILE GTelDat$
       SELECT FORM KEY Kundennummer% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
       FORM 
     END IF 
   END SELECT 
 WEND 
end021120092: 
 FILE cfile$
 END SUB 
 


 
 
SUB VoiceDial1()

     IF kart1.GTeldat$ LIKE "ZZ~" THEN 
       CALL Fehler("Dieser Kommunikationskontakt ist mit  ZZ~  gekennzeichnet und somit ungÅltig. Er kann nicht verwendet werden!","")
       GOTO end040520031
     END IF 

 Voicedial$ = ReadINI$("MODEM","VoiceDial")
 VoicePrg$ = ReadINI$("SYSTEM","VoiceWindowName")
 FaxDial$ = ReadINI$("System","FAXavailable")
 VoiceISDNdial$ = ReadINI$("SYSTEM","VoiceISDNdial")
 ESTOSTAPIDIAL$ = ReadINI$("SYSTEM","ESTOSTAPIDIAL")
 IF GCodieadr$ LIKE "TRUE" THEN ESTOSTAPIDIAL$ = "TRUE"

 IF Nummer.GTeldat$ LIKE "*www*" OR Nummer.GTeldat$ LIKE "www*" OR Nummer.GTeldat$ LIKE "htt*" OR KArt1.GTeldat$ LIKE "www*" THEN 
   IF NOT EXISTS (GMACodeDir$ + "openurl.exe") THEN COPY _netpath$ + "\local\openurl.exe" TO GMACodeDir$ + "openurl.exe"
   IF LEFT$ (Nummer.GTeldat$,3) LIKE "www" THEN 
     nr$ = "http://" + Nummer.GTeldat$
   END IF 
   IF LEFT$ (Nummer.GTeldat$,4) LIKE "http" THEN 
     nr$ = Nummer.GTeldat$
   END IF 
   prg$ = GMACodeDir$ + "openurl.exe"
   REM nr$ = "http://" + Nummer.GTeldat$
   REM a% = CALL ("_OpenUrl",nr$)
   IF EXISTS (GMACodeDir$ + "opurl.bat") THEN DELETE GMACodeDir$ + "opurl.bat"
   OPEN GMACodeDir$ + "opurl.bat" FOR APPEND 
   ? "echo OFF"
   ? prg$ + " " + nr$
   CLOSE OUTPUT 
   REM a% = CALL ("ShellExecute",0,"open",prg$,nr$,"",1)
   REM a% = CALL ("ShellExecute",0,"open",netpath$ + "opurl.bat","","",1)
   CALL (GMACodeDir$ + "opurl.bat"),0
   GOTO end040520031
 END IF 
 IF GCODie% AND Nummer.GTeldat$ <> "" THEN 
   IF Nummer.GTeldat$ LIKE "*@*" THEN 
     IF kart1.GTeldat$ LIKE "ZZ~" THEN 
       CALL Fehler("Diese EMAIL-Adresse ist mit  ZZ~  gekennzeichnet und somit ungÅltig. Es kann keine EMAIL versand werden!","")
     ELSE 
       CALL SendEMAIL(Nummer.GTeldat$,codeku.GTelDat$)
       GOTO end040520031
     END IF 
   ELSE 
    tvorsatz$ = ""
    IF LEFT$ (Nummer.Telefon,1) = "+" THEN tvorsatz$ = "00"
    tn$ = tvorsatz$ + FN numeric(Nummer.TELEFON)
    REM CALL Fehler(tn$,"ESTOS")
    IF ESTOSTAPIDIAL$ LIKE "TRUE" THEN 
      aufruf$ = ESTOSTAPIDIAL$ + tn$
      aufruf$ = _netpath$ + "\LOCAL\dialit32.exe"
      par1$ = " phone:" + tn$
      ges$ = aufruf$ + par1$
      REM a% = CALL ("_SBFileCall",ges$)
      REM  i% = CALL ("ShellExecute",0,"open",ges$,"","",1)
      CALL (ges$)
    ELSE 
      REM   CALL Fehler("","")
      APPACTIVATE "ProCall"
      COPY FROM tn$
    END IF 
    REM SENDKEYS "{HOME}"
    REM SENDKEYS "++{END}
    REM SENDKEYS "{DELETE}"
    REM SENDKEYS tn$
   END IF 
 ELSE 
   IF Nummer.GTeldat$ LIKE "*@*" THEN 
     CALL Fehler("EMAIL-Versandt wurde nicht konfiguriert!","")
   END IF 
 END IF 
 IF FonOderFax.TELEFON LIKE "j" OR art.telefon LIKE "*fax*" THEN 
   IF FaxDial$ LIKE "true" THEN 
     CALL FAX(Nummer.TELEFON)
   ELSE 
     CALL Fehler("Der Faxversand wurde nicht konfiguriert!","")
   END IF 
 ELSE 
   IF VoiceDial$ LIKE "true" THEN 
     IF VoiceISDNdial$ LIKE "TEDAS" THEN 
 ON ERROR GOTO end2605982
       tn$ = FN numeric(Nummer.TELEFON)
       REM APPACTIVATE "HANDY":REM phoneware zentrale-pware2.exe
       IF VoicePrg$ LIKE "RVS*" THEN 
         APPACTIVATE VoicePrg$
         REM SENDKEYS "{HOME}"
         REM SENDKEYS "%W"
         REM APPACTIVATE "WÑhlen"
         SENDKEYS "{CLEAR}"
         REM SENDKEYS "{DELETE}"
         REM WAIT FOR 1
         SENDKEYS tn$
         
         SENDKEYS "{ENTER}"
       ELSE 
         APPACTIVATE VoicePrg$
         REM SENDKEYS "{HOME}"
         SENDKEYS "{CLEAR}"
         REM SENDKEYS "{DELETE}"
         SENDKEYS tn$
         SENDKEYS "{ENTER}"
       END IF 
       ok% = 0
       REM SENDKEYS "%V" + tn$
       REM SENDKEYS "%b"
     ELSE 
       CALL Telefon(Nummer.TELEFON)
     END IF 
   ELSE 
     REM CALL Fehler("Die Telefonwahl wurde nicht konfiguriert!","")
   END IF 
   GOTO end2605981
end2605982: 
 CALL Fehler("Das Tedas Telefonprogramm wurde noch nicht aufgerufen!","")
 ON ERROR GOTO ErrorHandler
end2605981: 
 END IF 
end040520031: 
 END SUB 
  
SUB SerienListe(codear%)
 MOUSE OFF 
 DIM Telefonliste$(1200)
 ok% = - 1
 WHILE ok%
   MOUSE OFF 
   SELECT KEY codear% FILE "Artikel" INDEX Codear.artikel
   FILE "Serienr"
   INDEX Codear
   SELECT FIRST 
   SELECT KEY codear%
   a% = 0
   prompt$ = "ZZZZZZ"
   WHILE Codear.serienr = codear% AND NOT EOF ("serienr")
     Telefonliste$(a%) = serienr.serienr + SPACE$ (80) + STR$ (CodeSER.serienr,"000000")
     IF Telefonliste$(a%) < prompt$ THEN prompt$ = Telefonliste$(a%)
     a% = a% + 1
     SELECT NEXT 
   WEND 
   TelefonListe$(a%) = ""
   Kunde$ = Bezeichnung.artikel
   CREATE DIALOG "TELEFON",0,0,243,179,"Seriennr.liste","MS Sans Serif",8
   ADD DIALOG "TELEFON",5,5,6,56,10,0,"Liste von:"
   ADD DIALOG "TELEFON",5,62,6,174,9,128,Kunde$
   ADD DIALOG "TELEFON",5,5,22,65,10,0,"Seriennummer:"
   ADD DIALOG "TELEFON",7,5,32,168,137,2,2,Telefonliste$,Auswahl$,prompt$
   ADD DIALOG "TELEFON",1,180,32,55,15,1,"&OK",1,1
   ADD DIALOG "TELEFON",1,180,50,55,15,0,"&Abbrechen",0,0
   ADD DIALOG "TELEFON",1,180,68,55,15,0,"&Drucken",7,1
   ADD DIALOG "TELEFON",1,180,98,55,15,0,"&Neu",3,1
   IF a% <> 0 THEN ADD DIALOG "TELEFON",1,180,116,55,15,0,"én&dern",4,1
   ADD DIALOG "TELEFON",1,180,134,55,15,0,"&Lîschen",5,1
   MOUSE ON 
   DIALOG "TELEFON",req%
   REMOVE DIALOG "TELEFON"
   IF req% = 7 THEN 
     req% = 0
     telnr% = VAL ( RIGHT$ (Auswahl$(0),6))
     SELECT KEY telnr% FILE "serienr" INDEX Codeser.serienr
     IF codems.serienr > 0 THEN 
       CALL MSDrucken(codems.serienr)
     ELSE 
       IF codeJO.serienr > 0 THEN 
         CALL JournalDr(codejo.serienr)
       ELSE 
         IF codeVL.serienr > 0 THEN 
           CALL VerleihDr(codeVL.serienr)
         END IF 
       END IF 
     END IF 
   END IF 
   SELECT CASE req%
   CASE 1,0
     ok% = 0
   CASE 3
     Nummer$ = ""
     Art$ = ""
     CREATE DIALOG "TELEFON",0,0,242,179,"Seriennr.-Liste (neuer Eintrag)","MS Sans Serif",8
     ADD DIALOG "TELEFON",5,5,6,56,10,0,"Seriennr.-Liste von:"
     ADD DIALOG "TELEFON",6,64,144,131,10,0,0,Art$,50
     ADD DIALOG "TELEFON",6,64,160,131,10,0,0,Stdzaehl$,50
     ADD DIALOG "TELEFON",5,62,6,174,8,128,Kunde$
     ADD DIALOG "TELEFON",5,5,22,65,10,0,"Seriennummer:"
     ADD DIALOG "TELEFON",7,5,32,168,81,2,2,Telefonliste$,Auswahl$
     ADD DIALOG "TELEFON",1,180,32,54,14,1,"&OK",1,1
     ADD DIALOG "TELEFON",1,180,49,54,16,0,"&Abbrechen",0,0
     ADD DIALOG "TELEFON",5,5,121,156,21,0,"Bitte geben Sie die Daten fÅr den neuen Eintrag ein."
     ADD DIALOG "TELEFON",5,5,145,58,10,0,"Seriennummer:"
     ADD DIALOG "TELEFON",5,5,160,58,10,0,"StundenzÑhler:"
     DIALOG "TELEFON",req%
     REMOVE DIALOG "TELEFON"
     IF req% = 1 THEN 
       BLANK FILE "serienr"
       Codeser.serienr = SER ("serienr",1)
       serienr.serienr = Art$
       Stdzaehler.serienr = VAL ( FN numeric(Stdzaehl$))
       Codear.serienr = codear%
       verleih.serienr = "n"
       CALL FStore("serienr")
       SELECT FORM KEY codear% FILE "artikel" INDEX Codear.artikel
       FORM 
     END IF 
   CASE 4
     prompt$ = Auswahl$(0)
     telnr% = VAL ( RIGHT$ (Auswahl$(0),6))
     SELECT KEY telnr% FILE "serienr" INDEX Codeser.serienr
     Art$ = serienr.serienr
     rnr$ = nummer.serienr
     rdat$ = DATE$ (datum.serienr,"0d.mm.yyyy")
     CREATE DIALOG "TELEFON",0,0,242,199,"Seriennr.-Liste (Eintrag Ñndern)","MS Sans Serif",8
     ADD DIALOG "TELEFON",5,5,6,56,10,0,"Seriennr.liste von:"
     ADD DIALOG "TELEFON",5,62,6,174,8,128,Kunde$
     ADD DIALOG "TELEFON",5,5,22,65,10,0,"Seriennummer:"
     ADD DIALOG "TELEFON",5,5,121,156,21,0,"Bitte geben Sie die gewÅnschten énderungen fÅr den gewÑhlten Eintrag ein."
     ADD DIALOG "TELEFON",6,63,144,120,11,0,0,Art$,50
     ADD DIALOG "TELEFON",5,4,145,48,10,0,"Serien-Nr.:"
     ADD DIALOG "TELEFON",6,63,155,72,11,0,0,Rnr$,10
     ADD DIALOG "TELEFON",5,4,155,48,9,0,"Rechnungs-Nr.:"
     ADD DIALOG "TELEFON",5,4,166,59,10,0,"Rechnungsdatum:"
     ADD DIALOG "TELEFON",6,63,166,79,11,0,0,Rdat$,10
     ADD DIALOG "TELEFON",5,4,177,59,10,0,"StundenzÑhler:"
     ADD DIALOG "TELEFON",6,63,177,79,11,0,0,Stdzaehl$,12
     ADD DIALOG "TELEFON",7,5,32,168,81,2,2,Telefonliste$,Auswahl$,prompt$
     ADD DIALOG "TELEFON",1,180,32,54,14,1,"&OK",1,1
     ADD DIALOG "TELEFON",1,180,49,54,14,1,"&Drucken",2,0
     ADD DIALOG "TELEFON",1,180,66,54,16,0,"&Abbrechen",0,0
     DIALOG "TELEFON",req%
     REMOVE DIALOG "TELEFON"
     IF req% = 1 THEN 
       SELECT KEY telnr% LOCK FILE "serienr" INDEX Codeser.serienr
       serienr.serienr = Art$
       nummer.serienr = rnr$
       Stdzaehler.serienr = VAL ( FN numeric(Stdzaehl$))
       datum.serienr = DAYS $(rdat$)
       QuickArSer.serienr = STR$ (codear,"000000") + serienr.serienr
       QuickSerNumm.serienr = serienr.serienr + nummer.serienr
       CALL FStore("serienr")
       SELECT FORM KEY codear% FILE "artikel" INDEX Codear.artikel
       FORM 
     END IF 
     IF req% = 2 THEN 
       req% = 0
       ok% = 0
       SELECT KEY telnr% LOCK FILE "serienr" INDEX Codeser.serienr
     IF codems.serienr > 0 THEN 
       CALL MSDrucken(codems.serienr)
     ELSE 
       IF codeJO.serienr > 0 THEN 
         CALL JournalDr(codejo.serienr)
       ELSE 
         IF codeVL.serienr > 0 THEN 
           CALL VerleihDr(codeVL.serienr)
         END IF 
       END IF 
     END IF 
     END IF 
   CASE 5
     telnr% = VAL ( RIGHT$ (Auswahl$(0),6))
     SELECT KEY telnr% LOCK FILE "serienr" INDEX Codeser.serienr
     REQUEST "Soll der Eintrag '" + serienr.serienr + "' wirklich gelîscht werden?","",135,req%
     IF req% = 1 THEN 
       SELECT REMOVE FILE "serienr"
       SELECT FORM KEY codear% FILE "artikel" INDEX Codear.artikel
       FORM 
     END IF 
   END SELECT 
 WEND 
 END SUB 
 
 
 
 
 
 REM ******** Tabellendarstellungen  ************* 
 
SUB ADRTab(datei$,dindex$):REM                                        19.Apr.1996
 REM DIRECTORY "I:\CODIE.DEV\OFFICE"
 REM CALL IBICO()
 FILE datei$
 INDEX dindex$$
 SET INDEX dindex$$
 ICON CLEAR 
 ICON 1, FILE 
 ICON 2, INDEX 
 ICON 3,"ControlBreak","FormEnd"
 ICON 4,"TableView","TableView"
 REM ICON 5,"PageView","PageView"
 ICON 5,"ChangeRecord","ChangeRecord"
 REM ICON 6,"SaveRecord","SaveRecord"
 REM ICON 7,"RecordView","RecordView"
 ICON 6,"FieldSelection","FieldSelection"
 ICON 7,"QuickReport","QuickReport"
 ICON 8,"StatusFile","StatusFile"
 ICON 9,"PrintSub","PrintSub"
 ICON UPDATE 
 ICON ON 
 SET DISPLAY 7
 PANEL OFF 
 i% = 0
 befehl$ = "OPEN FIELDS "
 WHILE Felder$(i%) <> ""
  befehl$ = befehl$ + Felder$(i%) + ","
  i% = i% + 2
 WEND 
 befehl1$ = LEFT$ (befehl$, LEN (befehl$) - 1) + ":VIEW"
 EXECUTE befehl1$
 REM OPEN FIELDS Anrede,Nachname,Geburtsname,Vorname,Stra·e,PLZ,Ort,Telefon1,Telefon2,Telefax,Stichwort,AAKunde,AALieferant:VIEW 
 i% = 0
 befehl$ = "MODIFY VIEW "
 
 WHILE Felder$(i%) <> ""
  befehl$ = "MODIFY VIEW " + Felder$(i%) + ",0,0,1,50," + Felder$(i% + 1) + ",50"
  REM EXECUTE befehl$
  i% = i% + 2
 WEND 
 ON ERROR GOTO ErrorHandler
 Superbase.IconBarState = - 1:REM                       Menu:  SetIconBar
 Superbase.SaveSettings("IconBarState")
 REM Specify that the contents of a field are to be selected when the
 REM cursor is placed in the field
 Superbase.EditSelection = - 1
 REM Activate enforced data consistency
 Superbase.EnforceDataConsistency = - 1
 SET TABLE :REM                                         Btn:   TableView
 PANEL ON 
 PANEL OFF 12,13,14
 ON ERROR GOTO ErrorHandler
 WHILE _formend% = 0
   REM MOUSE ON
   WAIT MOUSE OR ICON OR PANEL 
 WEND 
 knr% = codeku.adressen
 CALL ADRIntro()
 SET FORM 
 SET DISPLAY 0
 PANEL OFF 
 ICON OFF 
 _formend% = 0
 CLOSE FIELDS :VIEW :REM                                Menu:  FieldSelection
 END SUB 
 
  
 
 
 'Tabelleneditor
 ' =====================================================================
 ' Zweck:       Bearbeiten von Dateien in Tabellenansicht
 ' Nutzung:     CALL TableEdit(datei$)
 ' =====================================================================
 
SUB TableEdit(datei$)
 cfile$ = FILE 
 FILE datei$
 CALL MNTABLE()
 MENU ON 
 ICON CLEAR 
 ICON 1,"ControlBreak","FormEnd"
 ICON 3,"ChangeRecord","ChangeRecord"
 ICON 4,"SaveRecord","SaveRecord"
 ICON 5,"RemoveCurrent","RemoveCurrent"
 ICON 7,"SelectFirst","SelectFirst"
 ICON 8,"FormPrevPage","SelectRewind"
 ICON 9,"SelectPrevious","SelectPrevious"
 ICON 10,"SelectNext","SelectNext"
 ICON 11,"FormNextPage","SelectFForward"
 ICON 12,"SelectLast","SelectLast"
 ICON UPDATE 
 ICON ON 
 SET TABLE :VIEW 
 SET DISPLAY 7
 CALL PSelectFirst()
 VIEW 
 _formend% = 0
 WHILE _formend% = 0
   MOUSE ON :REM Damit irgendein Befehl nach dem Dateiende ausgefÅhrt werden kann 
 WEND 
 _formend% = 0
 SET DISPLAY 0
 SET FORM 
 FILE cfile$
 END SUB 
 
 REM Allg Buttons deaktivieren
 
SUB ButDesabled()
 IF _projekt$ <> "WAWI" THEN 
   f.neu.enabled = 0
   f.bearb.enabled = 0
   f.abbruch.enabled = - 1
   f.abbruch.visible = - 1
   f.suchen.visible = 0
   f.suchen.enabled = 0
   f.links1.enabled = 0
   f.rechts1.enabled = 0
   f.zurueck.enabled = 0
 END IF 
 SET EDIT SELECT ON 
 END SUB 
 
SUB ButEnabled()
 IF _projekt$ <> "WAWI" THEN 
   f.neu.enabled = - 1
   f.abbruch.enabled = 0
   f.abbruch.visible = 0
   f.bearb.enabled = - 1
   f.suchen.visible = - 1
   f.suchen.enabled = - 1
   f.links1.enabled = - 1
   f.rechts1.enabled = - 1
   f.zurueck.enabled = - 1
 END IF 
 END SUB 
 
 
SUB SeiteDrucken()
 MOUSE OFF 
 ON ERROR GOTO adrdrufehl
 c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,2,9
 PRINT CURRENT PAGE 
adrdrufehl: 
 MOUSE ON 
 c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,1,9
 FORM 
 ON ERROR GOTO ErrorHandler
 END SUB 
 
 
 
 
SUB VWrite(x0%,y0%,x1%,text0$)
 text1$ = FN ansi(text0$)
 vzeil% = CALL ("VpeWrite",hdoc%,x0%,y0%,x1%,VFREE%,text1$)
 END SUB 
 
SUB VPrintDoc()
 a% = CALL ("VpePrintDoc",hdoc%,0)
 END SUB 
 
SUB VPrevDoc()
 a% = CALL ("VpePreviewDoc",hdoc%,0,1)
 END SUB 
  
SUB VLine(x0%,y0%,x1%,y1%)
 a% = CALL ("VpeLine",hDoc%,x0%,y0%,x1%,y1%)
 END SUB 
 
SUB VPrint(x0%,y0%,text0$)
 text1$ = FN ansi(text0$)
 a% = CALL ("VpePrint",hdoc%,x0%,y0%,text1$)
 END SUB 
 
SUB VBox(x0%,y0%,x1%,y1%)
 a% = CALL ("VpeBox",hdoc%,x0%,y0%,x1%,y1%)
 END SUB 
 
SUB VTransp(onoff%)
 REM onoff% = 0 ist Transparenz aus
 a% = CALL ("VpeSetTransparentMode",hdoc%,onoff%)
 END SUB 

SUB VAlign(onoff%)
 REM onoff% = 0 ist links
 REM        = 1 ist rechts
 a% = CALL ("VpeSetAlign",hdoc%,onoff%)
 END SUB 

SUB VSetPen(pensize%,farbe%)
 REM weis=16777215
 REM pensize%=0 -> keine Umrandung
 a% = CALL ("VpeSetPen",hdoc%,pensize%,0,farbe%)
 END SUB 
 
SUB VSetBkgColor(farbe%)
 REM weis=16777215
 a% = CALL ("VpeSetBkgColor",hdoc%,farbe%)
 END SUB 
 
SUB VPEINI(title2$,FormatPrint$)
 REM Druckerformat setzen
 IF FormatPrint$ = "A4h" THEN 
   c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,1,9
   format% = 0
 END IF 
 IF FormatPrint$ = "A4q" THEN 
  c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,2,9
  format% = 8192
 END IF 
 VFREE% = - 1
 VLEFT% = - 2
 VRIGHT% = - 3
 VLEFTMARGIN% = - 4
 VRIGHTMARGIN% = - 5
 VTOP% = - 6
 VBOTTOM% = - 7
 VTOPMARGIN% = - 8
 VBOTTOMMARGIN% = - 9
 AUTOBON% = 0
 AUTOBOFF% = 1
 AUTOBNLIMITS% = 2
 
 hdoc% = CALL ("VpeOpenDoc",0,title2$, - 1, - 1,format%)
 a% = CALL ("VpeSetAutoBreak",hdoc%,2)
 mLeft% = CALL ("VpeGet",hdoc%,VLEFTMARGIN%) + 7
 mright% = CALL ("VpeGet",hdoc%,VRIGHTMARGIN%)
 mTop% = CALL ("VpeGet",hdoc%,VTOPMARGIN%)
 mBottom% = CALL ("VpeGet",hdoc%,VBOTTOMMARGIN%)
 vZeil% = mTop% + 200
 END SUB 
 
 
 '* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 '  Druckroutine Åber VPE fÅr Wartungslisten * 
 '  beding$ - Bedingungen (Filter) * 
 '  Title2$ - Titel der Liste * 
 '  ord$ - Sortierreihenfolge * 
 '  FormatPrint$ - Drucker auf A4quer oder A4 hoch * 
 '  title2$ - ListenÅberschrift * 
 '  so%   Sortierung: 1=Lieferant, 2=Produktgruppe, 3=PrÅfart, 4=Artikelnummer, 5=Termine
 '  bart% Berichtsart: 0=alle offenen Wartungstermine
 '                     1=alle erledigten Wartungstermine
 '                     2=alle Wartungstermine
 '  scedov%=1 Aufruf aus SchiffsauswahlmenÅ
 '  reqbild%<>1 Ausgabe direkt auf den Drucker
 '* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 
SUB VPEADRGr(Wbericht$,FormatPrint$,title2$,Terminejn$,KurzLang$)
 IF disabled%("ADRLISTE") THEN END SUB 
 MOUSE OFF 
 REM wbericht$ enthÑlt den Namen der zu druckenden Datei
 REM Initialisierung der VPE
 REM wbericht$ = "Adressen"
 FormatPrint$ = "A4h"
 CALL VPEINI(title2$,FormatPrint$)
 FILE wbericht$
 INDEX nachname.wbericht$
 req% = 0
 SELECT FIRST 
 gruppeneu$ = nachname.wbericht$
 gruppeold$ = gruppeneu$
 vzeil% = mTop%
 CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
 CALL VWrite(mleft%,vzeil% + 10,1610,"['Arial' S 16 B C BLACK]" + title2$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
 CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 vzeil% = obBottom% + 30
 ueberpos% = vzeil%
 CALL VTransp(0)
 CALL VSetPen(0,0)
 zeilenabstand% = 40
 zeilenoffset% = 40
 i% = 1
 codekuold% = 0
 okdruck% = - 1
 REM CALL Fehler("1","")
 WHILE NOT EOF (wbericht$) AND okdruck% = - 1
   codeku% = codeku.wbericht$
   IF codeku% <> codekuold% THEN 
     codekuold% = codeku%
   ELSE 
     okdruck% = 0
   END IF 
   a% = vzeil%
   czeile% = vzeil%
   cPage% = CALL ("VpeGetCurrentPage",hdoc%)
   cPageold% = cPage%
   ok% = 0
   IF MNdisabled%("DATALOCK") THEN 
     IF sperre.wbericht$ = 0 OR sperre.wbericht$ = vcodema% THEN 
       ok% = - 1
     ELSE 
       ok% = 0
     END IF 
   ELSE 
     ok% = - 1
   END IF 
   IF ok% = 0 THEN GOTO VPEADREnde
   IF anrede.wbericht$ <> "" OR Kundennummer.wbericht$ <> "" THEN 
     CALL VPrint(mleft%,a%,"['Arial' S 8 B C BLACK]" + "Anrede: ")
     CALL VWrite(mleft% + 270,a%,1000,"['Arial' S 8 B C BLACK]" + anrede.wbericht$)
     CALL VPrint(mleft% + 810,a%,"['Arial' S 8 B C BLACK]" + "Kundennummer: ")
     CALL VWrite(mleft% + 1100,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + Kundennummer.wbericht$)
     a% = vzeil%
   END IF 
   IF titel.wbericht$ <> "" THEN 
     CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Titel: ")
     CALL VWrite(mleft% + 270,a%,1000,"['Arial' S 8 B C BLACK]" + titel.wbericht$)
     a% = vzeil%
   END IF 
   IF nachname <> "" THEN 
     CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 9 B C BLACK]" + nachname.wbericht$)
     CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name: ")
     a% = vzeil%
   END IF 
   IF stra·e.wbericht$ <> "" THEN 
     CALL VWrite(mleft% + 1200,a%,2000,"['Arial' S 8 B C BLACK]" + stra·e.wbericht$)
     a% = vzeil%
   END IF 
   IF plz.wbericht$ <> "" OR ort.wbericht$ <> "" THEN 
     CALL VWrite(mleft% + 1200,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + plz.wbericht$ + " " + ort.wbericht$)
     REM CALL VWrite(mleft% + 1300,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + ort.wbericht$)
     a% = vzeil%
   END IF 
   IF geburtsname.wbericht$ <> "" THEN 
     CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + geburtsname.wbericht$)
     IF anrede.wbericht$ LIKE "Herr*" OR anrede.wbericht$ LIKE "Frau*" THEN 
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Geburtsname: ")
     ELSE 
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Zusatz: ")
     END IF 
     a% = vzeil%
   END IF 
   IF vorname.wbericht$ <> "" THEN 
     CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + vorname.wbericht$)
     IF anrede.wbericht$ LIKE "Herr*" OR anrede.wbericht$ LIKE "Frau*" THEN 
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Vorname: ")
     ELSE 
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "z.H.: ")
     END IF 
     a% = vzeil%
   END IF 
   a% = vzeil%
   IF EXISTS (codeku%,codeku.telefon) THEN 
     FILE "telefon"
     INDEX codeku.telefon
     SELECT FIRST 
     SELECT KEY codeku% FILE "Telefon" INDEX codeku.telefon
     a% = vzeil%
     i% = 0
     WHILE NOT EOF ("telefon") AND codeku.telefon = codeku%
       i% = i% + 1
       SET STATUS STR$ (i%,",999999") + " Telefonnummern"
       REM IF art.telefon <> "" THEN CALL VWrite(mleft%,a%,1200,"['Arial' S 8 B C BLACK]" + art.telefon)
       IF nummer.telefon <> "" THEN CALL VWrite(mleft%,a%,mright% - 3,"['Arial' S 8 C B BLACK]" + art.telefon + "  " + nummer.telefon)
       SELECT NEXT FILE "telefon" INDEX codeku.telefon
       IF NOT EOF ("telefon") AND codeku.telefon = codeku% THEN a% = vzeil% + 5
     WEND 
     REM CALL Fehler(vorname.wbericht$,"Test")

     a% = vzeil%
     vzeil% = a%
     FILE wbericht$
   END IF 
   a% = vzeil% + 10
   CALL VLine(mleft% - 7,a%,mright%,a%)
   vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   a% = vzeil% + 10
   vzeil% = a%
   okab% = 0
   IF k1blz <> "" OR k1Bank <> "" OR K1Konto <> "" THEN 
     okab% = 1
     CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Konto1 BLZ: ")
     CALL VWrite(mleft% + 270,a%,610,"['Arial' S 8 B C BLACK]" + K1BLZ.wbericht$)
     CALL VWrite(mleft% + 500,a%,770,"['Arial' S 8 B C BLACK]" + "Bank: ")
     CALL VWrite(mleft% + 580,a%,1500,"['Arial' S 8 B C BLACK]" + K1Bank.wbericht$)
     CALL VWrite(mleft% + 1440,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + K1Konto.wbericht$)
     CALL VWrite(mleft% + 1310,a%,1630,"['Arial' S 8 B C BLACK]" + "Kontonr: ")
   END IF 
   a% = vzeil%
   IF k2blz <> "" OR k2Bank <> "" OR K2Konto <> "" THEN 
     okab% = 1
     CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Konto2 BLZ: ")
     CALL VWrite(mleft% + 500,a%,770,"['Arial' S 8 B C BLACK]" + "Bank: ")
     CALL VWrite(mleft% + 270,a%,610,"['Arial' S 8 B C BLACK]" + K2BLZ.wbericht$)
     CALL VWrite(mleft% + 580,a%,1500,"['Arial' S 8 B C BLACK]" + K2Bank.wbericht$)
     CALL VWrite(mleft% + 1440,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + K2Konto.wbericht$)
     CALL VWrite(mleft% + 1310,a%,1630,"['Arial' S 8 B C BLACK]" + "Kontonr: ")
   END IF 
   IF okab% = 1 THEN CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
   vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   a% = vzeil% + 10
   REM 111297
   IF Geburtstag <> 0 THEN 
     CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Geburtstag: ")
     CALL VWrite(mleft% + 270,a%,710,"['Arial' S 8 B C BLACK]" + DATE$ (Geburtstag.wbericht$,"0d.mm.yyyy"))
     CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
     vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     a% = vzeil% + 10
   END IF 
 
   IF kunde_seit <> 0 THEN 
     CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Kunde seit:: ")
     CALL VWrite(mleft% + 270,a%,710,"['Arial' S 8 B C BLACK]" + DATE$ (kunde_seit.wbericht$,"0d.mm.yyyy"))
     CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
     vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     a% = vzeil% + 10
   END IF 

   IF letzter_Kontakt <> 0 THEN 
     CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "letzter Kontakt: ")
     CALL VWrite(mleft% + 270,a%,710,"['Arial' S 8 B C BLACK]" + DATE$ (letzter_Kontakt.wbericht$,"0d.mm.yyyy"))
     CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
     vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     a% = vzeil% + 10
   END IF 
   IF stichwort <> "" THEN 
     CALL VWrite(mleft%,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + "Stichworte: " + Stichwort.wbericht$)
     a% = vzeil% + 10
     REM 090799
     ttab$ = Stichwort.wbericht$
     REM IF notiz.wbericht$ <> "" THEN ttab$ = ttab$ + CHR$ (10) + CHR$ (13) + "Notizen zur Adresse:" + CHR$ (10) + CHR$ (13) + notiz.wbericht$

     REM CALL VWrite(mleft%,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + Stichwort.wbericht$)
   END IF 
   REM 111297
 
   IF _projekt$ LIKE "PROVIS*" THEN 
     codema1% = Codema
     IF EXISTS (codema1%,codema.maadr) THEN 
       SELECT KEY codema1% FILE "maadr" INDEX codema.maadr
       name$ = nachname.maadr + ", " + vorname.maadr
       CALL VWrite(mleft%,a%,mleft% + 240,"['Arial' S 8 B C BLACK]" + "Betreuung durch: ")
       CALL VWrite(mleft% + 240,a%,1850,"['Arial' S 8 B C BLACK]" + name$)
       CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
     END IF 
   END IF 

   vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   a% = vzeil% + 15
   CALL VLine(mleft% - 7,a%,mright%,a%)
   vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   a% = vzeil% + 10
   vzeil% = a%
   REM VPE neu
   IF KurzLang$ = "j" THEN 
     CALL VPEKurzLangJ()
   END IF 

   IF VertragJN$ = "j" THEN 
     _CodeKU% = Codeku.wbericht$
     IF EXISTS (_codeku%,codeku.kvertrag) THEN 
       initjn$ = "j"
       CALL VPEVertragJ(initjn$,_CodeKU%)
     END IF 
   END IF 
   IF TermineJN$ = "j" THEN 
     _CodeKU% = Codeku.wbericht$
     IF EXISTS (_codeku%,codeku.GAkquiDat$) THEN 
       initjn$ = "n"
       CALL VPETermineJ(initjn$,_CodeKU%)
       REM 26082010
       initjn$ = "n"
       a% = CALL ("VpePageBreak",hdoc%)
       nachname$ = nachname.wbericht$
       vzeil% = ueberpos%
       a% = vzeil%
 
     END IF 
   END IF 
 REM IF i% = 5 OR i% > 1000 THEN 
 REM title$ = "adresse " + STR$ (i%,"000000")
 REM CREATE DIALOG "ADRLIST",0,0,192,97,title$,"MS Sans Serif",8
 REM ADD DIALOG "ADRLIST",4,0,0,192,76,0,""
 REM ADD DIALOG "ADRLIST",9,4,9,20,21,2
 REM ADD DIALOG "ADRLIST",1,45,78,50,15,1,"&Weiter",1,1
 REM ADD DIALOG "ADRLIST",1,97,78,50,15,0,"&Abbruch",0,0
 REM DIALOG "ADRLIST",req%
 REM REMOVE DIALOG "ADRLIST"
 REM END IF 
VPEADREnde: 
   maxbottom% = vzeil%
   a% = vzeil%
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   IF obBottom% < a% THEN obBottom% = a%
   IF obBottom% >= mBottom% THEN 
     REM CALL VBox(mleft% - 7,mTop%,mright%,obBottom%)
     CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
     CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
     CALL VLine(mright%,mtop%,mright%,czeile%)
     CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
     ab% = CALL ("VpePageBreak",hdoc%)
     vzeil% = ueberpos%
     a% = vzeil%
     codekuold% = 0
   ELSE 
     SELECT NEXT FILE wbericht$
     REM codeku% = codeku.wbericht$
     i% = i% + 1
     SET STATUS STR$ (i%,"0000000") + " Adressen verarbeitet!"
     IF KurzLang$ <> "j" THEN 
       REM a% = vzeil%
       REM a% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       REM CALL VLine(mleft% - 7,a% + 3,mright%,a% + 3)
       REM a% = a% + 15
       vzeil% = a%
       IF EOF (wbericht$) THEN 
         CALL VLine(mleft% - 7,mtop%,mleft% - 7,obBottom%)
         CALL VLine(mright%,mtop%,mright%,obBottom%)
         CALL VLine(mleft% - 7,obBottom%,mright%,obBottom%)
       END IF 
     ELSE 
       IF NOT EOF (wbericht$) THEN 
         IF _projekt$ LIKE "FACTURA" OR _projekt$ LIKE "OFFICE" OR _projekt$ LIKE "IMMAK" OR _projekt$ LIKE "MEDIA" THEN 
           vzeil% = a% + 20
           a% = vzeil%
           IF EOF (wbericht$) THEN 
             CALL VLine(mleft% - 7,mtop%,mleft% - 7,obBottom%)
             CALL VLine(mright%,mtop%,mright%,obBottom%)
             CALL VLine(mleft% - 7,obBottom%,mright%,obBottom%)
           END IF 
         ELSE 
           a% = CALL ("VpePageBreak",hdoc%)
           czeile% = vzeil%
           cPage% = CALL ("VpeGetCurrentPage",hdoc%)
           cPageold% = cPage%
           vzeil% = ueberpos%
         END IF 
       END IF 
     END IF 
  END IF 
 WEND 
 IF KurzLang$ <> "j" THEN 
   vzeil% = vzeil% + 150
 ELSE 
   vzeil% = listende% + 100
 END IF 
 CALL VPrint(mleft%,vzeil% + 20,"['Arial' S 15 B C BLACK]Ende der Liste")
 cPage% = CALL ("VpeGetCurrentPage",hdoc%)
 
 FOR b% = 1 TO cPage%
   vzeil% = mTop%
   a% = CALL ("VpeGotoPage",hdoc%,b%)
   CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
   CALL VWrite(mleft%,vzeil% + 10,1610,"['Arial' S 16 B C BLACK]" + title2$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
   CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
 NEXT b%
 a% = CALL ("VpeGotoPage",hdoc%,1)
 MOUSE ON 
 IF scedov% = 1 AND reqbild% <> 1 THEN 
   CALL VPrintDoc()
 ELSE 
   CALL VPrevDoc()
 END IF 
 REM Nach dem Drucken, Drucker auf A4 hoch setzen
 c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,1,9
 REM CLOSE FILE wbericht$
 END SUB 
 
  
 
SUB VPEKurzLangJ()
     IF _projekt$ LIKE "PROVIS" THEN 
       a% = vzeil%
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       a% = vzeil% + 10
       vzeil% = a%
       CALL VWrite(mleft% + 110,a%,1200,"['Arial' S 8 B C BLACK]" + Land.wbericht$)
       CALL VWrite(mleft%,a%,300,"['Arial' S 8 B C BLACK]" + "Land: ")
       a% = vzeil%
       CALL VWrite(mleft%,a%,360,"['Arial' S 8 B C BLACK]" + "Geburtstag: ")
       CALL VWrite(mleft% + 270,a%,610,"['Arial' S 8 B C BLACK]" + DATE$ (Geburtstag.wbericht$,"0d.mm.yyyy"))
       CALL VWrite(mleft% + 810,a%,1200,"['Arial' S 8 B C BLACK]" + DATE$ (Kunde_seit.wbericht$,"0d.mm.yyyy"))
       CALL VWrite(mleft% + 500,a%,900,"['Arial' S 8 B C BLACK]" + "Kunde seit: ")
       a% = vzeil%
       REM 090799
       REM CALL VWrite(mleft%,a%,360,"['Arial' S 8 B C BLACK]" + "Beruf: ")
       REM CALL VWrite(mleft% + 270,a%,610,"['Arial' S 8 B C BLACK]" + Beruf.wbericht$)

       a% = vzeil%
       REM 090799
       REM CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name Kind 1: ")
       REM CALL VWrite(mleft% + 270,a%,610,"['Arial' S 8 B C BLACK]" + K1Name.wbericht$)
       REM CALL VWrite(mleft% + 500,a%,1000,"['Arial' S 8 B C BLACK]" + "Geburtstag: ")
       REM CALL VWrite(mleft% + 810,a%,1300,"['Arial' S 8 B C BLACK]" + DATE$ (K1Geburtstag.wbericht$,"0d.mm.yyyy"))
       a% = vzeil%
       REM CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name Kind 2: ")
       REM CALL VWrite(mleft% + 270,a%,610,"['Arial' S 8 B C BLACK]" + K2Name.wbericht$)
       REM CALL VWrite(mleft% + 500,a%,1000,"['Arial' S 8 B C BLACK]" + "Geburtstag: ")
       REM CALL VWrite(mleft% + 810,a%,1300,"['Arial' S 8 B C BLACK]" + DATE$ (K2Geburtstag.wbericht$,"0d.mm.yyyy"))
       a% = vzeil%
       REM CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name Kind 3: ")
       REM CALL VWrite(mleft% + 270,a%,610,"['Arial' S 8 B C BLACK]" + K3Name.wbericht$)
       REM CALL VWrite(mleft% + 500,a%,1000,"['Arial' S 8 B C BLACK]" + "Geburtstag: ")
       REM CALL VWrite(mleft% + 810,a%,1300,"['Arial' S 8 B C BLACK]" + DATE$ (K3Geburtstag.wbericht$,"0d.mm.yyyy"))
       a% = vzeil%
       REM CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name Kind 4: ")
       REM CALL VWrite(mleft% + 270,a%,610,"['Arial' S 8 B C BLACK]" + K4Name.wbericht$)
       REM CALL VWrite(mleft% + 500,a%,1000,"['Arial' S 8 B C BLACK]" + "Geburtstag: ")
       REM CALL VWrite(mleft% + 810,a%,1300,"['Arial' S 8 B C BLACK]" + DATE$ (K4Geburtstag.wbericht$,"0d.mm.yyyy"))
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       a% = vzeil% + 10
       CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       a% = vzeil% + 10
       vzeil% = a%
       CALL VWrite(mleft%,a%,600,"['Arial' S 8 B C BLACK]" + "Notizen zur/m Partnerin/er:")
       a% = vzeil% + 10
       CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + EGNotiz.wbericht$)
       a% = vzeil%
       listende% = vzeil%
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       a% = vzeil% + 10
       vzeil% = a%
     END IF 
     IF _projekt$ LIKE "FACTURA" OR _projekt$ LIKE "OFFICE" THEN 
       listende% = vzeil%
     END IF 
     CALL VLine(mleft% - 7,mtop%,mleft% - 7,listende%)
     CALL VLine(mright%,mtop%,mright%,listende%)
     IF notiz.wbericht$ <> "" THEN 
       IF _projekt$ LIKE "FACTURA" OR _projekt$ LIKE "OFFICE" OR _projekt$ LIKE "IMMAK" OR _projekt$ LIKE "MEDIA" THEN 
         a% = vzeil%
       ELSE 
         REM Seitenvorschub zwangsweise 
         a% = CALL ("VpePageBreak",hdoc%)
         czeile% = vzeil%
         cPage% = CALL ("VpeGetCurrentPage",hdoc%)
         cPageold% = cPage%
         obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         a% = ueberpos%
       END IF 
       CALL VWrite(mleft%,a%,mright%,"['Arial' S 9 B C BLACK]Notizen zur Adresse " + nachname.wbericht$)
       a% = vzeil%
       CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + notiz.wbericht$)
       a% = vzeil%
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
       CALL VLine(mleft% - 7,mtop%,mleft% - 7,vzeil% + 10)
       CALL VLine(mright%,mtop%,mright%,vzeil% + 10)
       vzeil% = vzeil% + 10
       listende% = vzeil%
     END IF 
     IF _projekt$ LIKE "FACTURA" OR _projekt$ LIKE "OFFICE" OR _projekt$ LIKE "IMMAK" OR _projekt$ LIKE "MEDIA" THEN 
     ELSE 
       REM Seitenvorschub zwangsweise
       REM a% = CALL ("VpePageBreak",hdoc%)
       obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       vzeil% = obBottom%
     END IF 
     a% = vzeil%
   END IF 
 END SUB 
 
SUB VPETermineJ(initjn$,_CodeKU%)
 IF disabled%("AQKUNDENHIST") THEN END SUB 
 IF disabled%("PROJECTHIST") THEN END SUB 
 REM CREATE DIALOG "ADRLIST",0,0,192,97,title$,"MS Sans Serif",8
 REM ADD DIALOG "ADRLIST",4,0,0,192,76,0,""
 REM ADD DIALOG "ADRLIST",9,4,9,20,21,2
 REM ADD DIALOG "ADRLIST",1,45,78,50,15,1,"&Weiter",1,1
 REM ADD DIALOG "ADRLIST",1,97,78,50,15,0,"&Abbruch",0,0
 REM DIALOG "ADRLIST",req%
 REM REMOVE DIALOG "ADRLIST"
 IF initjn$ <> "j" THEN 
     a% = CALL ("VpePageBreak",hdoc%)
     nachname$ = nachname.wbericht$
 ELSE 
   IF UCASE$ ( FORM ) LIKE "PROJECT*" THEN 
     SELECT KEY _codeku% FILE wbericht$ INDEX codepr.wbericht$
     nachname$ = name1.wbericht$ + " " + name2.wbericht$
     title$ = "Terminliste Projekt" + nachname$
     FormatPrint$ = "A4h"
     CALL VPEINI(title2$,FormatPrint$)
     vzeil% = mTop%
     CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
     CALL VWrite(mleft%,vzeil% + 10,1610,"['Arial' S 16 B C BLACK]Termine zum Projekt " + nachname$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
     CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
     obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
     obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     vzeil% = obBottom% + 30
     ueberpos% = vzeil%
     vzeil% = ueberpos%
     CALL VTransp(0)
     CALL VSetPen(0,0)
   ELSE 
     SELECT KEY _codeku% FILE wbericht$ INDEX codeku.wbericht$
     nachname$ = nachname.wbericht$
     title$ = "Terminliste " + nachname$
     FormatPrint$ = "A4h"
     CALL VPEINI(title2$,FormatPrint$)
     vzeil% = mTop%
     CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
     CALL VWrite(mleft%,vzeil% + 10,1610,"['Arial' S 16 B C BLACK]Termine zur Adresse " + nachname$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
     CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
     obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
     obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     vzeil% = obBottom% + 30
     ueberpos% = vzeil%
     vzeil% = ueberpos%
     CALL VTransp(0)
     CALL VSetPen(0,0)
   END IF 
 END IF 
     czeile% = vzeil%
     cPage% = CALL ("VpeGetCurrentPage",hdoc%)
     cPageold% = cPage%
     obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     vzeil% = ueberpos%
     a% = vzeil%
     IF initjn$ <> "j" THEN 
       IF UCASE$ ( FORM ) LIKE "PROJECT*" THEN 
         CALL VWrite(mleft%,a%,mright%,"['Arial' S 10 B C BLACK]Termine zum Projekt " + nachname$)
       ELSE 
         CALL VWrite(mleft%,a%,mright%,"['Arial' S 10 B C BLACK]Termine zur Adresse " + nachname$)
       END IF 
       a% = vzeil%
       CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
       vzeil% = vzeil% + 20
       a% = vzeil%
     END IF 
     CALL VWrite(mleft%,a%,mleft% + 160,"['Arial' S 8 B C BLACK]" + "Termin")
     CALL VWrite(mleft% + 170,a%,mleft% + 360,"['Arial' S 8 B C BLACK]" + "Uhrzeit")
     CALL VWrite(mleft% + 370,a%,mleft% + 560,"['Arial' S 8 B C BLACK]" + "Dauer")
     CALL VWrite(mleft% + 570,a%,mleft% + 760,"['Arial' S 8 B C BLACK]" + "Erf.datum")
     CALL VWrite(mleft% + 770,a%,mleft% + 960,"['Arial' S 8 B C BLACK]" + "erledigt")
     CALL VWrite(mleft% + 970,a%,mleft% + 1360,"['Arial' S 8 B C BLACK]" + "Bearbeiter")
     CALL VWrite(mleft% + 1370,a%,mleft% + 1660,"['Arial' S 8 B C BLACK]" + "Aktion")
     a% = vzeil%
     CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
     vzeil% = vzeil% + 20
     a% = vzeil%
     REM JETZT TERMINAUSGABE
     FILE GAkquiDat$
     IF UCASE$ ( FORM ) LIKE "PROJECT*" THEN 
       INDEX codepr.GAkquiDat$
       SELECT FIRST 
       SELECT KEY _codeku% FILE GAkquiDat$ INDEX codepr.GAkquiDat$
       REM 26082010
       SELECT WHERE FILE GAkquiDat$
       EXECUTE "SELECT WHERE CodePR.GAkquiDat$ = _CodeKU%"
       INDEX termin.GAkquiDat$
       SELECT FIRST 
     ELSE 
       IF GFiltTer% <> - 1 THEN 
         SET STATUS "Terminfilter setzen"
         INDEX QuickKuTer.GAkquiDat$
         QuickKuTer$ = STR$ (_codeku%,"000000") + "00000000"
         SELECT FIRST 
         REM SELECT KEY _codeku% FILE GAkquiDat$ INDEX codeku.GAkquiDat$
         SELECT KEY QuickKuTer$ FILE GAkquiDat$ INDEX QuickKuTer.GAkquiDat$
         REM SELECT WHERE FILE GAkquiDat$
         REM EXECUTE "SELECT WHERE CodeKU.GAkquiDat$ = _CodeKU%"
       END IF 
       REM INDEX QuickKuTer.GAkquiDat$
       REM SELECT FIRST 
     END IF 
     REM INDEX termin.GAkquiDat$
     REM SELECT FIRST 
     codeakold% = 0
     codeaknew% = codeak.GAkquiDat$
     FILE "aktionen"
     INDEX codeak.aktionen
     SELECT FIRST 
     FILE GAkquiDat$
     j% = 0
     IF UCASE$ ( FORM ) LIKE "PROJECT*" THEN WHILE NOT EOF (GAkquiDat$) AND CodePR.GAkquiDat$ = _CodeKU%
     IF UCASE$ ( FORM ) LIKE "ADR*" THEN WHILE NOT EOF (GAkquiDat$) AND CodeKU.GAkquiDat$ = _CodeKU%
       SET STATUS STR$ (j%,",999999") + " Termin"
     j% = j% + 1
vpetermdru1: 
       czeile% = vzeil%
       cPage% = CALL ("VpeGetCurrentPage",hdoc%)
       cPageold% = cPage%
       IF UCASE$ ( FORM ) LIKE "PROJECT*" THEN 
         CALL VWrite(mleft%,a%,mright% + 160,"['Arial' S 8 B C BLACK]" + "Adresse: " + LEFT$ (nachname.GAkquiDat$))
         a% = a% + 35
       ELSE 
         IF ProjectJN$ = "TRUE" THEN 
           IF projekt.GAkquiDat$ <> "" THEN 
             CALL VWrite(mleft%,a%,mright% + 160,"['Arial' S 8 B C BLACK]" + "Projekt: " + LEFT$ (Projekt.GAkquiDat$))
             a% = a% + 35
           END IF 
         END IF 
       END IF 
       CALL VWrite(mleft%,a%,mleft% + 160,"['Arial' S 8 B C BLACK]" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy"))
       CALL VWrite(mleft% + 170,a%,mleft% + 360,"['Arial' S 8 B C BLACK]" + TIME$ (uhrzeit.GAkquiDat$,"hh.mm"))
       REM 27122005
       CALL VWrite(mleft% + 370,a%,mleft% + 560,"['Arial' S 8 B C BLACK]" + STR$ (dauer.GAkquiDat$,"9999") + " " + dme.GAkquiDat$)
       CALL VWrite(mleft% + 570,a%,mleft% + 760,"['Arial' S 8 B C BLACK]" + DATE$ (datum.GAkquiDat$,"0d.mm.yyyy"))
       CALL VWrite(mleft% + 820,a%,mleft% + 960,"['Arial' S 8 B C BLACK]" + erledigt_Termin.GAkquiDat$)
       CALL VWrite(mleft% + 970,a%,mleft% + 1360,"['Arial' S 8 B C BLACK]" + Bearbeiter.GAkquiDat$)
       codeaknew% = codeak.GAkquiDat$
       IF codeaknew% <> codeakold% THEN 
         FILE "aktionen"
         SELECT FIRST 
         SELECT KEY codeak.GAkquiDat$ FILE "aktionen" INDEX codeak.aktionen
         aktion$ = bezeichnung.aktionen
         codeakold% = codeaknew%
         FILE GAkquiDat$
       END IF 
       CALL VWrite(mleft% + 1370,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + aktion$)
       a% = vzeil% + 10
       CALL VWrite(mleft%,a%,1000,"['Arial' S 8 B C BLACK]" + "Notizen zum Termin")
       a% = vzeil%
       CALL VWrite(mleft%,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + notiz.GAkquiDat$)
       a% = vzeil%
       obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       IF obBottom% < a% THEN obBottom% = a%
       cPage% = CALL ("VpeGetCurrentPage",hdoc%)
       IF obBottom% > mBottom% THEN 
         CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
         CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
         CALL VLine(mright%,mtop%,mright%,czeile%)
         CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
         ab% = CALL ("VpePageBreak",hdoc%)
         obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         vzeil% = ueberpos%
         IF initjn$ <> "j" THEN 
           a% = vzeil%
           IF UCASE$ ( FORM ) LIKE "PROJECT*" THEN 
             CALL VWrite(mleft%,a%,mright%,"['Arial' S 10 B C BLACK]Termine zur Adresse " + name1.wbericht$ + " " + name2.wbericht$)
           ELSE 
             CALL VWrite(mleft%,a%,mright%,"['Arial' S 10 B C BLACK]Termine zur Adresse " + nachname.wbericht$)
           END IF 
           a% = vzeil%
           CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
           vzeil% = vzeil% + 20
         END IF 
         a% = vzeil%
         CALL VWrite(mleft%,a%,mleft% + 160,"['Arial' S 8 B C BLACK]" + "Termin")
         CALL VWrite(mleft% + 170,a%,mleft% + 360,"['Arial' S 8 B C BLACK]" + "Uhrzeit")
         CALL VWrite(mleft% + 370,a%,mleft% + 560,"['Arial' S 8 B C BLACK]" + "Dauer")
         CALL VWrite(mleft% + 570,a%,mleft% + 760,"['Arial' S 8 B C BLACK]" + "Erf.datum")
         CALL VWrite(mleft% + 770,a%,mleft% + 960,"['Arial' S 8 B C BLACK]" + "erledigt")
         CALL VWrite(mleft% + 970,a%,mleft% + 1360,"['Arial' S 8 B C BLACK]" + "Bearbeiter")
         CALL VWrite(mleft% + 1370,a%,mleft% + 1660,"['Arial' S 8 B C BLACK]" + "Aktion")
         a% = vzeil%
         CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
         vzeil% = vzeil% + 20
         a% = vzeil%
         GOTO vpetermdru1 
       END IF 
       IF ergebnis.GAkquiDat$ <> "" THEN 
         a% = vzeil% + 10
vpetermdru3: 
         czeile% = vzeil%
         cPage% = CALL ("VpeGetCurrentPage",hdoc%)
         cPageold% = cPage%
         CALL VWrite(mleft%,a%,1000,"['Arial' S 8 B C BLACK]" + "Ergebnisse zum Termin")
         a% = vzeil%
         CALL VWrite(mleft%,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + Ergebnis.GAkquiDat$)
         a% = vzeil%
         obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         IF obBottom% < a% THEN obBottom% = a%
         REM IF vzeil% > mBottom% THEN 
         cPage% = CALL ("VpeGetCurrentPage",hdoc%)
         IF obBottom% > mBottom% THEN 
           CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
           CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
           CALL VLine(mright%,mtop%,mright%,czeile%)
           CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
           ab% = CALL ("VpePageBreak",hdoc%)
           obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
           vzeil% = ueberpos%
           a% = vzeil%
           IF UCASE$ ( FORM ) LIKE "PROJECT*" THEN 
             CALL VWrite(mleft%,a%,mright%,"['Arial' S 10 B C BLACK]Termine zum Projekt " + name1.wbericht$ + " " + name2.wbericht$)
           ELSE 
             CALL VWrite(mleft%,a%,mright%,"['Arial' S 10 B C BLACK]Termine zur Adresse " + nachname.wbericht$)
           END IF 
           a% = vzeil%
           CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
           vzeil% = vzeil% + 20
           a% = vzeil%
           CALL VWrite(mleft%,a%,mleft% + 160,"['Arial' S 8 B C BLACK]" + "Termin")
           CALL VWrite(mleft% + 170,a%,mleft% + 360,"['Arial' S 8 B C BLACK]" + "Uhrzeit")
           CALL VWrite(mleft% + 370,a%,mleft% + 560,"['Arial' S 8 B C BLACK]" + "Dauer")
           CALL VWrite(mleft% + 570,a%,mleft% + 760,"['Arial' S 8 B C BLACK]" + "Erf.datum")
           CALL VWrite(mleft% + 770,a%,mleft% + 960,"['Arial' S 8 B C BLACK]" + "erledigt")
           CALL VWrite(mleft% + 970,a%,mleft% + 1360,"['Arial' S 8 B C BLACK]" + "Bearbeiter")
           CALL VWrite(mleft% + 1370,a%,mleft% + 1660,"['Arial' S 8 B C BLACK]" + "Aktion")
           a% = vzeil%
           CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
           vzeil% = vzeil% + 20
           a% = vzeil%
           GOTO vpetermdru3
         END IF 
       END IF 
       CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
       vzeil% = vzeil% + 15
       a% = vzeil%
     FILE GAkquiDat$
     SELECT NEXT 
     SET STATUS STR$ (j%,"000000") + " Termine verarbeitet!"
     WEND 
     REM CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
     CALL VLine(mleft% - 7,mtop%,mleft% - 7,vzeil%)
     CALL VLine(mright%,mtop%,mright%,vzeil%)
     vzeil% = vzeil% + 10
     listende% = vzeil%
     FILE wbericht$
     IF initjn$ = "j" THEN 
       vzeil% = listende% + 100
       CALL VPrint(mleft%,vzeil% + 20,"['Arial' S 15 B C BLACK]Ende der Liste")
       cPage% = CALL ("VpeGetCurrentPage",hdoc%)
       FOR b% = 1 TO cPage%
         vzeil% = mTop%
         a% = CALL ("VpeGotoPage",hdoc%,b%)
         CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
         IF UCASE$ ( FORM ) LIKE "PROJECT*" THEN 
           CALL VWrite(mleft%,vzeil% + 10,1610,"['Arial' S 16 B C BLACK]Termine zum Projekt " + nachname$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
         ELSE 
           CALL VWrite(mleft%,vzeil% + 10,1610,"['Arial' S 16 B C BLACK]Termine zur Adresse " + nachname$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
         END IF 
         CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
         obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
       NEXT b%
       a% = CALL ("VpeGotoPage",hdoc%,1)
       MOUSE ON 
       IF scedov% = 1 AND reqbild% <> 1 THEN 
         CALL VPrintDoc()
       ELSE 
         CALL VPrevDoc()
       END IF 
       REM Nach dem Drucken, Drucker auf A4 hoch setzen
       c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,1,9
     END IF 
   REM END IF 
   SELECT WHERE FILE GAkquiDat$
   title$ = "SmartPROJECT"
 END SUB 
 
 

 REM Drucken von Vertragsdaten

SUB VPEVertragJ(initjn$,_CodeKU%)
 REM IF disabled%("AQKUNDENHIST") THEN END SUB 
 REM CREATE DIALOG "ADRLIST",0,0,192,97,title$,"MS Sans Serif",8
 REM ADD DIALOG "ADRLIST",4,0,0,192,76,0,""
 REM ADD DIALOG "ADRLIST",9,4,9,20,21,2
 REM ADD DIALOG "ADRLIST",1,45,78,50,15,1,"&Weiter",1,1
 REM ADD DIALOG "ADRLIST",1,97,78,50,15,0,"&Abbruch",0,0
 REM DIALOG "ADRLIST",req%
 REM REMOVE DIALOG "ADRLIST"
 IF initjn$ <> "j" THEN 
     a% = CALL ("VpePageBreak",hdoc%)
     nachname$ = nachname.wbericht$
 END IF 
     czeile% = vzeil%
     cPage% = CALL ("VpeGetCurrentPage",hdoc%)
     cPageold% = cPage%
     obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     vzeil% = vzeil% + 10
     a% = vzeil%
     czeile% = a%
     CALL VWrite(mleft%,a%,mleft% + 360,"['Arial' S 9 B C BLACK]" + "Gesellschaft")
     CALL VWrite(mleft% + 400,a%,mleft% + 790,"['Arial' S 9 B C BLACK]" + "Sparte")
     CALL VWrite(mleft% + 800,a%,mleft% + 1190,"['Arial' S 9 B C BLACK]" + "Agentur")
     CALL VWrite(mleft% + 1200,a%,mright%,"['Arial' S 9 B C BLACK]" + "Spartengruppe")
     vzeil% = vzeil% + 12
     a% = vzeil%
     CALL VWrite(mleft%,a%,mleft% + 290,"['Arial' S 9 B C BLACK]" + "Vertr.nr.")
     CALL VWrite(mleft% + 300,a%,mleft% + 490,"['Arial' S 9 B C BLACK]" + "Beginn")
     CALL VWrite(mleft% + 500,a%,mleft% + 690,"['Arial' S 9 B C BLACK]" + "Dauer")
     CALL VWrite(mleft% + 700,a%,mleft% + 990,"['Arial' S 9 B C BLACK]" + "Ablauf")
     CALL VWrite(mleft% + 1000,a%,mleft% + 1290,"['Arial' S 9 B C BLACK]" + "Vers.summe")
     CALL VWrite(mleft% + 1300,a%,mleft% + 1490,"['Arial' S 9 B C BLACK]" + "Beitrag/Jahr")
     CALL VWrite(mleft% + 1530,a%,mright%,"['Arial' S 9 B C BLACK]" + "zahlweise")
     CALL VLine(mleft% - 7,vzeil% + 5,mright%,vzeil% + 5)
     a% = vzeil%
     vzeil% = vzeil% + 10
     a% = vzeil%

     obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     IF obBottom% < a% THEN obBottom% = a%
       cPage% = CALL ("VpeGetCurrentPage",hdoc%)
       IF obBottom% > mBottom% THEN 
         CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
         CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
         CALL VLine(mright%,mtop%,mright%,czeile%)
         CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
         REM mit Farbe wei· Åberschreiben
         ab% = CALL ("VpePageBreak",hdoc%)
         obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         vzeil% = ueberpos%
         czeile% = vzeil%
         a% = vzeil%
         CALL VWrite(mleft%,a%,mleft% + 360,"['Arial' S 9 B C BLACK]" + "Gesellschaft")
         CALL VWrite(mleft% + 400,a%,mleft% + 790,"['Arial' S 9 B C BLACK]" + "Sparte")
         CALL VWrite(mleft% + 800,a%,mleft% + 1190,"['Arial' S 9 B C BLACK]" + "Agentur")
         CALL VWrite(mleft% + 1200,a%,mright%,"['Arial' S 9 B C BLACK]" + "Spartengruppe")
         vzeil% = vzeil% + 12
         a% = vzeil%
         CALL VWrite(mleft%,a%,mleft% + 290,"['Arial' S 9 B C BLACK]" + "Vertr.nr.")
         CALL VWrite(mleft% + 300,a%,mleft% + 490,"['Arial' S 9 B C BLACK]" + "Beginn")
         CALL VWrite(mleft% + 500,a%,mleft% + 690,"['Arial' S 9 B C BLACK]" + "Dauer")
         CALL VWrite(mleft% + 700,a%,mleft% + 990,"['Arial' S 9 B C BLACK]" + "Ablauf")
         CALL VWrite(mleft% + 1000,a%,mleft% + 1290,"['Arial' S 9 B C BLACK]" + "Vers.summe")
         CALL VWrite(mleft% + 1300,a%,mleft% + 1490,"['Arial' S 9 B C BLACK]" + "Beitrag/Jahr")
         CALL VWrite(mleft% + 1530,a%,mright%,"['Arial' S 9 B C BLACK]" + "zahlweise")
         CALL VLine(mleft% - 7,vzeil% + 5,mright%,vzeil% + 5)
         a% = vzeil%
         vzeil% = vzeil% + 10
       END IF 
     END IF 



     REM JETZT VERTRAGSAUSGABE
     FILE "kvertrag"
       INDEX QuickGesSpar.kvertrag
       SELECT FIRST 
       _codeku$ = STR$ (_codeku%,"000000")
       SELECT KEY _codeku$ FILE "kvertrag" INDEX QuickGesSpar.kvertrag
       SELECT WHERE FILE "kvertrag"
       EXECUTE "SELECT WHERE CodeKU.kvertrag = _CodeKU%"
       INDEX QuickGesSpar.kvertrag
       SELECT FIRST 
     REM INDEX termin.GAkquiDat$
     REM SELECT FIRST 
     codeakold% = 0
     codeaknew% = codeak.GAkquiDat$
     j% = 0
     sumbeitrag% = 0
     WHILE NOT EOF ("kvertrag")
     j% = j% + 1
vpetermdru1: 
       czeile% = vzeil%
       zmax% = vzeil%
       a% = vzeil%
       cPage% = CALL ("VpeGetCurrentPage",hdoc%)
       cPageold% = cPage%
       CALL VWrite(mleft%,a%,mleft% + 390,"['Arial' S 8 B C BLACK]" + Gesellschaft.kvertrag)
       IF vzeil% > zmax% THEN zmax% = vzeil%
       CALL VWrite(mleft% + 400,a%,mleft% + 790,"['Arial' S 8 B C BLACK]" + Sparte.kvertrag)
       IF vzeil% > zmax% THEN zmax% = vzeil%
       CALL VWrite(mleft% + 800,a%,mleft% + 1190,"['Arial' S 8 B C BLACK]" + Agentur.kvertrag)
       IF vzeil% > zmax% THEN zmax% = vzeil%
       CALL VWrite(mleft% + 1200,a%,mright%,"['Arial' S 8 B C BLACK]" + Spartengruppe.kvertrag)
       IF vzeil% > zmax% THEN zmax% = vzeil%
       vzeil% = zmax%
       vzeil% = vzeil% + 15
       a% = vzeil%
       CALL VWrite(mleft%,a%,mleft% + 290,"['Arial' S 8 B C BLACK]" + VS_Nr)
       CALL VWrite(mleft% + 300,a%,mleft% + 490,"['Arial' S 8 B C BLACK]" + DATE$ (VS_Beginn,"0d.mm.yyyy"))
       CALL VWrite(mleft% + 500,a%,mleft% + 690,"['Arial' S 8 B C BLACK]" + STR$ (VS_Dauer,"99"))
       CALL VWrite(mleft% + 700,a%,mleft% + 990,"['Arial' S 8 B C BLACK]" + DATE$ (KÅndigung,"0d.mm.yyyy"))
       CALL VWrite(mleft% + 1000,a%,mleft% + 1290,"['Arial' S 8 B C BLACK]" + STR$ (VSumme,",999999999.00") + " DM")
       IF zw.kvertrag > 0 THEN 
         beitrag% = beitrag.kvertrag * zw.kvertrag
       ELSE 
         beitrag% = beitrag.kvertrag
       END IF 
       
       CALL VWrite(mleft% + 1300,a%,mleft% + 1490,"['Arial' S 8 B C BLACK]" + STR$ (Beitrag%,",999999999.00") + " DM")

       SELECT CASE zw.kvertrag
         CASE 0
           zw$ = "einmalig"
         CASE 12
           zw$ = "monatl."
         CASE 2
           zw$ = "halbj."
         CASE 4
           zw$ = "viertelj."
         CASE 1
           zw$ = "JÑhrlich"
       END SELECT 
       CALL VWrite(mleft% + 1550,a%,mright%,"['Arial' S 8 B C BLACK]" + zw$)
       a% = vzeil%
       IF notiz.kvertrag <> "" THEN 
         CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + "Notiz: " + notiz.kvertrag)
         a% = vzeil%
       END IF 
       STATUS1$ = "Status: "
       IF proviab.kvertrag <> 0 THEN 
         status1$ = status1$ + "verprovisioniert seit " + DATE$ (proviab.kvertrag,"0d.mm.yyyy") + " ;"
       ELSE 
         IF UCASE$ (fremdvertrag) <> "J" THEN 
           IF UCASE$ (Altvertrag) <> "J" THEN 
             IF vorzeitig.kvertrag <> "j" THEN status1$ = status1$ + "ANTRAG "
           ELSE 
             status1$ = status1$ + "ALTVERTRAG "
           END IF 
         ELSE 
           status1$ = status1$ + "FREMDVERTRAG "
         END IF 
       END IF 
       IF vorzeitig.kvertrag = "j" THEN status1$ = status1$ + "vorzeitig gekÅndigt; "
       CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + STATUS1$)
       a% = vzeil%
       CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
       a% = vzeil%
 
       obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       IF obBottom% < a% THEN obBottom% = a%
       cPage% = CALL ("VpeGetCurrentPage",hdoc%)
       IF obBottom% > mBottom% THEN 
         CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
         CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
         CALL VLine(mright%,mtop%,mright%,czeile%)
         CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
         ab% = CALL ("VpePageBreak",hdoc%)
         obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         vzeil% = ueberpos%
         a% = vzeil%
         REM 200197
         CALL VWrite(mleft%,a%,mleft% + 360,"['Arial' S 9 B C BLACK]" + "Gesellschaft")
         CALL VWrite(mleft% + 400,a%,mleft% + 790,"['Arial' S 9 B C BLACK]" + "Sparte")
         CALL VWrite(mleft% + 800,a%,mleft% + 1190,"['Arial' S 9 B C BLACK]" + "Agentur")
         CALL VWrite(mleft% + 1200,a%,mright%,"['Arial' S 9 B C BLACK]" + "Spartengruppe")
         vzeil% = vzeil% + 12
         a% = vzeil%
         CALL VWrite(mleft%,a%,mleft% + 290,"['Arial' S 9 B C BLACK]" + "Vertr.nr.")
         CALL VWrite(mleft% + 300,a%,mleft% + 490,"['Arial' S 9 B C BLACK]" + "Beginn")
         CALL VWrite(mleft% + 500,a%,mleft% + 690,"['Arial' S 9 B C BLACK]" + "Dauer")
         CALL VWrite(mleft% + 700,a%,mleft% + 990,"['Arial' S 9 B C BLACK]" + "Ablauf")
         CALL VWrite(mleft% + 1000,a%,mleft% + 1290,"['Arial' S 9 B C BLACK]" + "Vers.summe")
         CALL VWrite(mleft% + 1300,a%,mleft% + 1490,"['Arial' S 9 B C BLACK]" + "Beitrag/Jahr")
         CALL VWrite(mleft% + 1530,a%,mright%,"['Arial' S 9 B C BLACK]" + "zahlweise")
         vzeil% = vzeil% + 12
         a% = vzeil%
         CALL VLine(mleft% - 7,vzeil% + 5,mright%,vzeil% + 5)
         a% = vzeil% + 5
         obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         IF obBottom% < a% THEN obBottom% = a%
         REM IF vzeil% > mBottom% THEN 
         cPage% = CALL ("VpeGetCurrentPage",hdoc%)
         IF obBottom% > mBottom% THEN 
           CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
           CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
           CALL VLine(mright%,mtop%,mright%,czeile%)
           CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
           ab% = CALL ("VpePageBreak",hdoc%)
           obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
           vzeil% = ueberpos%
           a% = vzeil%
           vzeil% = vzeil% + 20
           a% = vzeil%
           CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
           vzeil% = vzeil% + 20
           a% = vzeil%
           GOTO vpetermdru3
         END IF 
       END IF 
       IF proviab.kvertrag <> 0 AND vorzeitig <> "j" AND fremdvertrag <> "j" AND altvertrag <> "j" THEN 
         sumbeitrag% = sumbeitrag% + beitrag%
       END IF 
       CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
       vzeil% = vzeil% + 15
       a% = vzeil%
     FILE "kvertrag"
     SELECT NEXT 
     SET STATUS STR$ (j%,"000000") + " VertrÑge verarbeitet!"
     WEND 
     CALL VWrite(mleft%,a%,mright%,"['Arial' S 9 B C BLACK]" + "Jahresbeitrag: " + STR$ (sumbeitrag%,",999999999.00") + " DM")
     CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
     vzeil% = vzeil% + 15
     a% = vzeil%
     REM CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
     CALL VLine(mleft% - 7,mtop%,mleft% - 7,vzeil%)
     CALL VLine(mright%,mtop%,mright%,vzeil%)
     vzeil% = vzeil% + 10
     listende% = vzeil%
     FILE wbericht$
     IF initjn$ = "jj" THEN 
       vzeil% = listende% + 100
       REM CALL VPrint(mleft%,vzeil% + 20,"['Arial' S 15 B C BLACK]Ende der Liste")
       cPage% = CALL ("VpeGetCurrentPage",hdoc%)
       FOR b% = 1 TO cPage%
         vzeil% = mTop%
         a% = CALL ("VpeGotoPage",hdoc%,b%)
         CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
         CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
         obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
       NEXT b%
       a% = CALL ("VpeGotoPage",hdoc%,1)
       MOUSE ON 
       IF scedov% = 1 AND reqbild% <> 1 THEN 
         CALL VPrintDoc()
       ELSE 
         CALL VPrevDoc()
       END IF 
       REM Nach dem Drucken, Drucker auf A4 hoch setzen
       c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,1,9
     END IF 
   REM END IF 
   SELECT WHERE FILE "kvertrag"
 END SUB 
 
 





 REM Drucken von ADRTemp
 
SUB VPEADRTemp(Wbericht$,FormatPrint$,title2$,wbsort$,listart%)
 MOUSE OFF 
 REM wbericht$ enthÑlt den Namen der zu druckenden Datei
 REM Initialisierung der VPE
 FormatPrint$ = "A4h"
 CALL VPEINI(title2$,FormatPrint$)
 FILE wbericht$
 
 IF wbsort$ = "" THEN 
   IF FILE LIKE "ADRTEMP" THEN 
     INDEX name2.adrtemp
   ELSE 
     INDEX nachname.wbericht$
   END IF 
 ELSE 
   IF FILE LIKE "ADRTEMP" THEN 
     IF wbsort$ LIKE "nachname" THEN 
       INDEX name2.adrtemp
     ELSE 
       INDEX wbsort$$
     END IF 
   ELSE 
     INDEX wbsort$$
   END IF 
 END IF 
 req% = 0
 SELECT FIRST 
 gruppeneu$ = Quickname.wbericht$
 gruppeold$ = gruppeneu$
 vzeil% = mTop%
 CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
 CALL VWrite(mleft%,vzeil% + 10,1610,"['Arial' S 16 B C BLACK]" + title2$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
 CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 vzeil% = obBottom% + 30
 ueberpos% = vzeil%
 CALL VTransp(0)
 CALL VSetPen(0,0)
 zeilenabstand% = 40
 zeilenoffset% = 40
 i% = 1
 WHILE NOT EOF (wbericht$)
   REM codeku% = codeku.wbericht$
   a% = vzeil%
   czeile% = vzeil%
   cPage% = CALL ("VpeGetCurrentPage",hdoc%)
   cPageold% = cPage%
   ok% = - 1
  REM CREATE DIALOG "ADRLIST",0,0,192,97,title$,"MS Sans Serif",8
  REM ADD DIALOG "ADRLIST",4,0,0,192,76,0,""
  REM ADD DIALOG "ADRLIST",9,4,9,20,21,2
  REM ADD DIALOG "ADRLIST",1,45,78,50,15,1,"&Weiter",1,1
  REM ADD DIALOG "ADRLIST",1,97,78,50,15,0,"&Abbruch",0,0
  REM DIALOG "ADRLIST",req%
  REM REMOVE DIALOG "ADRLIST"
   IF listart% = 1 THEN 
     IF anrede.wbericht$ <> "" OR Kundennummer.wbericht$ <> "" THEN 
       CALL VPrint(mleft%,a%,"['Arial' S 8 B C BLACK]" + "Anrede: ")
       CALL VWrite(mleft% + 270,a%,1000,"['Arial' S 8 B C BLACK]" + anrede.wbericht$)
       CALL VPrint(mleft% + 810,a%,"['Arial' S 8 B C BLACK]" + "Kundennummer: ")
       CALL VWrite(mleft% + 1100,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + Kundennummer.wbericht$)
       a% = vzeil%
     END IF 
     IF titel.wbericht$ <> "" THEN 
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Titel: ")
       CALL VWrite(mleft% + 270,a%,1000,"['Arial' S 8 B C BLACK]" + titel.wbericht$)
       a% = vzeil%
     END IF 
     IF anrede.wbericht$ LIKE "Herr*" OR anrede.wbericht$ LIKE "Fr*" OR anrede.wbericht$ LIKE "Fam*" OR anrede.wbericht$ LIKE "Ehe*" THEN 
       IF name2 <> "" THEN 
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 9 B C BLACK]" + name2.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name: ")
         a% = vzeil%
       END IF 
       IF name1.wbericht$ <> "" THEN 
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + name1.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Vorname: ")
         a% = vzeil%
       END IF 
       IF name3.wbericht$ <> "" THEN 
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + name3.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Geburtsname: ")
         a% = vzeil%
       END IF 
   
     ELSE 
       IF name1 <> "" THEN 
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 9 B C BLACK]" + name1.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name2: ")
         a% = vzeil%
       END IF 
       IF name2.wbericht$ <> "" THEN 
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + name2.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name1: ")
         a% = vzeil%
       END IF 
       IF zuHaenden.wbericht$ <> "" THEN 
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + name3.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "zuHaenden: ")
         a% = vzeil%
       END IF 
     END IF 
     IF strasse.wbericht$ <> "" THEN 
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Stra·e: ")
       CALL VWrite(mleft% + 270,a%,2000,"['Arial' S 8 B C BLACK]" + strasse.wbericht$)
       a% = vzeil%
     END IF 
     IF plz.wbericht$ <> "" OR ort.wbericht$ <> "" THEN 
       t$ = plz.wbericht$ + " " + ort.wbericht$
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "PLZ/Ort: ")
       CALL VWrite(mleft% + 270,a%,1490,"['Arial' S 8 B C BLACK]" + t$)
       REM CALL VWrite(mleft% + 270,a%,1490,"['Arial' S 8 B C BLACK]" + plz.wbericht$ + " ")
       REM call VWrite(mleft% + 370,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + ort.wbericht$)
       a% = vzeil%
     END IF 
     a% = vzeil%
     abi% = 0
     feld1$ = "Telart"
     feld2$ = "Telnr"
     feldart$ = feld1$ + STR$ (1,"0") + "." + wbericht$
     feldnum$ = feld2$ + STR$ (1,"0") + "." + wbericht$
     WHILE abi% < 20 AND feldart$$ <> ""
       abi% = abi% + 1
       IF abi% < 10 THEN 
         feldart$ = feld1$ + STR$ (abi%,"0") + ".adrtemp"
         feldnum$ = feld2$ + STR$ (abi%,"0") + ".adrtemp"
       ELSE 
         feldart$ = feld1$ + STR$ (abi%,"00") + ".adrtemp"
         feldnum$ = feld2$ + STR$ (abi%,"00") + ".adrtemp"
       END IF 
       IF feldart$$ <> "" THEN 
         CALL VWrite(mleft%,a%,1200,"['Arial' S 8 B C BLACK]" + feldart$$)
       END IF 
       IF feldnum$$ <> "" THEN 
         CALL VWrite(mleft% + 1200,a%,mright% - 3,"['Arial' S 8 C B BLACK]" + feldnum$$)
       END IF 
       a% = vzeil%
     WEND 
     vzeil% = a%

     a% = vzeil% + 10
     CALL VLine(mleft% - 7,a%,mright%,a%)
     vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     a% = vzeil% + 10
     vzeil% = a%

     CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Geburtstag: ")
     IF Mitarbeiter.adrtemp <> "" THEN 
       CALL VWrite(mleft% + 610,a%,1060,"['Arial' S 8 B C BLACK]" + "Betreuung durch: ")
     END IF 
     CALL VWrite(mleft% + 270,a%,710,"['Arial' S 8 B C BLACK]" + Geburtstag.wbericht$)
     IF Mitarbeiter.adrtemp <> "" THEN 
       CALL VWrite(mleft% + 870,a%,1850,"['Arial' S 8 B C BLACK]" + Mitarbeiter.wbericht$)
     END IF 
     CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
     vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     a% = vzeil% + 10
     vzeil% = a%
   END IF 


   IF listart% = 2 THEN 
   REM Kurzliste
   REM 050196
     name$ = ""
     IF anrede.wbericht$ LIKE "Herr*" OR anrede.wbericht$ LIKE "Fr*" OR anrede.wbericht$ LIKE "Fam*" OR anrede.wbericht$ LIKE "Ehe*" OR anrede.wbericht$ LIKE "Kind*" THEN 
       IF name2 <> "" THEN 
         name$ = name2.wbericht$
       END IF 
       IF name1 <> "" THEN 
         name$ = name$ + ", " + name1.wbericht$
       END IF 
     ELSE 
       IF name1 <> "" THEN 
         name$ = name1.wbericht$
       END IF 
       IF name2 <> "" AND name1 <> "" THEN 
         name$ = name$ + ", " + name2.wbericht$
       ELSE 
         name$ = name2.wbericht$
       END IF 
     END IF 
       IF kundennummer <> "" THEN 
         name$ = name$ + ", " + Kundennummer.wbericht$
       END IF 
       CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 9 B C BLACK]" + name$)
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name: ")
       a% = vzeil%
    
       abi% = 0
       feld1$ = "Telart"
       feld2$ = "Telnr"
       feld3$ = "FaxJN"
       feldart$ = feld1$ + STR$ (1,"0") + "." + wbericht$
       feldnum$ = feld2$ + STR$ (1,"0") + "." + wbericht$
       feldfax$ = feld3$ + STR$ (1,"0") + "." + wbericht$
       WHILE abi% < 20 AND feldart$$ <> ""
         abi% = abi% + 1
         IF abi% < 10 THEN 
           feldart$ = feld1$ + STR$ (abi%,"0") + ".adrtemp"
           feldnum$ = feld2$ + STR$ (abi%,"0") + ".adrtemp"
           feldfax$ = feld3$ + STR$ (abi%,"0") + "." + wbericht$
         ELSE 
           feldart$ = feld1$ + STR$ (abi%,"00") + ".adrtemp"
           feldnum$ = feld2$ + STR$ (abi%,"00") + ".adrtemp"
           feldfax$ = feld3$ + STR$ (abi%,"00") + "." + wbericht$
         END IF 
         IF feldnum$$ <> "" THEN 
           IF feldart$$ <> "" THEN 
             CALL VWrite(mleft%,a%,1200,"['Arial' S 8 B C BLACK]" + feldart$$)
           END IF 
           CALL VWrite(mleft% + 1200,a%,mright% - 3,"['Arial' S 8 C B BLACK]" + feldnum$$)
         END IF 
         a% = vzeil%
       WEND 
       vzeil% = a%
      
       a% = vzeil% + 10
       CALL VLine(mleft% - 7,a%,mright%,a%)
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       a% = vzeil% + 10
       vzeil% = a%
       
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Geburtstag: ")
         IF Mitarbeiter.adrtemp <> "" THEN 
           CALL VWrite(mleft% + 610,a%,1060,"['Arial' S 8 B C BLACK]" + "Betreuung durch: ")
         END IF 
         IF Geburtstag.wbericht$ <> "" THEN 
           CALL VWrite(mleft% + 270,a%,710,"['Arial' S 8 B C BLACK]" + Geburtstag.wbericht$)
         END IF 
         IF Mitarbeiter.adrtemp <> "" THEN 
           CALL VWrite(mleft% + 870,a%,1850,"['Arial' S 8 B C BLACK]" + Mitarbeiter.wbericht$)
         END IF 
         CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
       
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       a% = vzeil% + 10
       vzeil% = a%
     REM END IF 
   END IF 


   maxbottom% = vzeil%
   a% = vzeil%
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   IF obBottom% < a% THEN obBottom% = a%
   IF obBottom% >= mBottom% THEN 
     REM CALL VBox(mleft% - 7,mTop%,mright%,obBottom%)
     CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
     CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
     CALL VLine(mright%,mtop%,mright%,czeile%)
     CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
     ab% = CALL ("VpePageBreak",hdoc%)
     vzeil% = ueberpos%
     a% = vzeil%
   ELSE 
     SELECT NEXT 
     i% = i% + 1
     SET STATUS STR$ (i%,"0000000") + " Adressen verarbeitet!"
     IF KurzLang$ <> "j" THEN 
       REM a% = vzeil%
       REM a% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       REM CALL VLine(mleft% - 7,a% + 3,mright%,a% + 3)
       REM a% = a% + 15
       vzeil% = a%
       IF EOF (wbericht$) THEN 
         CALL VLine(mleft% - 7,mtop%,mleft% - 7,obBottom%)
         CALL VLine(mright%,mtop%,mright%,obBottom%)
         CALL VLine(mleft% - 7,obBottom%,mright%,obBottom%)
       END IF 
     ELSE 
       IF NOT EOF (wbericht$) THEN 
         a% = CALL ("VpePageBreak",hdoc%)
         czeile% = vzeil%
         cPage% = CALL ("VpeGetCurrentPage",hdoc%)
         cPageold% = cPage%
         vzeil% = ueberpos%
       END IF 
     END IF 
  END IF 
 WEND 
 IF KurzLang$ <> "j" THEN 
   vzeil% = vzeil% + 150
 ELSE 
   vzeil% = listende% + 100
 END IF 
 CALL VPrint(mleft%,vzeil% + 20,"['Arial' S 15 B C BLACK]Ende der Liste")
 cPage% = CALL ("VpeGetCurrentPage",hdoc%)
 
 FOR b% = 1 TO cPage%
   vzeil% = mTop%
   a% = CALL ("VpeGotoPage",hdoc%,b%)
   CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
   CALL VWrite(mleft%,vzeil% + 10,1610,"['Arial' S 16 B C BLACK]" + title2$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
   CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
 NEXT b%
 a% = CALL ("VpeGotoPage",hdoc%,1)
 MOUSE ON 
 IF scedov% = 1 AND reqbild% <> 1 THEN 
   CALL VPrintDoc()
 ELSE 
   CALL VPrevDoc()
 END IF 
 REM Nach dem Drucken, Drucker auf A4 hoch setzen
 c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,1,9
 REM CLOSE FILE wbericht$
 END SUB 
  
 
SUB LoeschProt(codeku%,Daten$)
 CALL DFile(2,"OFFICE\LoeProt" + _fpw$)
 SELECT KEY vcodema% FILE "Supervis" INDEX codema.supervis
 namem$ = name.supervis
 BLANK FILE "Loeprot"
 codema.Loeprot = vcodema%
 Mitarbeiter.loeprot = namem$
 datum.loeprot = TODAY 
 codeku.loeprot = codeku%
 daten.loeprot = daten$
 NUMBASE "0000000000"
 timestamp$ = DATE$ ( TODAY ,"yyyymm0d") + STR$ ( HRS ( NOW ) * 100 + MINS ( NOW ),"0000")
 timestamp.loeprot = timestamp$
 STORE FILE "loeprot"
 UNLOCK CURRENT FILE "loeprot"
 END SUB 
  
SUB ADRDokNew()
 knr% = Codeku.adressen
 IF disabled%("DOKUMENT") THEN END SUB 
 SELECT WHERE FILE GTelDat$
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 cudo% = CodeDOK.DOKUMENT
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "DOKGES3"
 IF ProjectJN$ = "TRUE" THEN maske$ = "DOKGES3"
 
 FILE "DOKUMENT"
 SELECT WHERE FILE "dokument"
 INDEX codeku.Dokument
 SELECT FIRST 
 WHILE _formend% = 0
   DOKsub% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     FILE "dokument"
     SET HEADING title$ + " - Dokumentenverwaltung " + maske$
     befe$ = "SELECT WHERE codeku.dokument = knr% AND novi1.dokument = 0"
     EXECUTE befe$
     OPEN FORM GOFFForm$ + maske$
     SET STATUS "Dokumentenverwaltung"
     CALL MNDOKSRV1()
     CALL ADRDokNewInt()
     FORM 
     SET DISPLAY ON 
     GAppName$ = _netpath$ + "DOCP\dokument.pdf"
   END IF 
   MENU ON 
   FORM 
   MOUSE ON 
   dokgrup$ = Gruppe.Dokument
   FORM 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE DOKsub%
   CASE 30
     REM Dokument einscannen
     REM CALL Fehler("Dokument einscannen","")
     codeku% = codeku.adressen
     knr% = codeku.adressen
     CALL ScanDok(codeku%)
   CASE 1
     CALL ADRDOK()
     CALL ADRDokNewInt()
   CASE 2
     CALL DOKSRV1()
   CASE 3
     
     adrfound% = DokSuchen%(codeku.adressen,befe$)
     SELECT KEY adrfound% FILE "Dokument" INDEX codedok.dokument
     CALL DOKSRV1()
   CASE 22
     maske$ = "DOKGESPA"
   CASE 23
     maske$ = "DOKGESPR"
   CASE 24
     maske$ = "DOKGES1"
   CASE 25
     maske$ = "DOKGES2"
   CASE 26
     maske$ = "DOKGES3"
   CASE 27
     maske$ = "DOKGES4"
   CASE 21
     maske$ = "DOKGES5"
   CASE 28
     CALL DOKImport()
   CASE 29
     MOUSE OFF 
     codeku% = codeku.adressen
     FILE "dokument"
     IF filt$ LIKE "ALLE*" THEN 
       filt$ = "nur die aktiven Dokumente anzeigen"
       befe$ = "SELECT WHERE codeku.dokument = knr%"
       SELECT WHERE FILE "Dokument"
       SELECT FIRST 
       CALL ADRDokNewInt()
       FORM 
     ELSE 
       befe$ = "SELECT WHERE codeku.dokument = knr% AND novi1.dokument = 0"
       EXECUTE befe$
       filt$ = "ALLE Dokumente anzeigen"
       SELECT FIRST 
       CALL ADRDokNewInt()
       FORM 
     END IF 
     MOUSE ON 
   END SELECT 
 WEND 
 _formend% = 0
 IF FileChanged%("DOKUMENT") = 1 THEN CALL FStore("DOKUMENT")
 IF GCODieRuf% <> 0 OR GCODieRuf1% <> 0 OR GCODieRuf2% <> 0 THEN 
   ret% = CALL ("_SearchClose")
 END IF 
 GCODieRuf% = 0
 GCODieRuf1% = 0
 GCODieRuf2% = 0
 SELECT WHERE FILE "dokument"
 END SUB 


SUB MNDOKSRV1()
 CALL MNProgramm()
 MENU 2,0,1,"&Option","",""
 MENU 2,1,1,"aus Suchliste auswÑhlen,F7","DokKurzSuche",""
 CALL MNHilfe(3)
 END SUB 
 
SUB ADRDokNewInt()
 SELECT FORM KEY knr% FILE "Adressen" INDEX codeku.adressen
 SELECT FORM KEY knr% FILE "Dokument" INDEX codeku.dokument
 END SUB 


SUB DOKSRV1()
 IF disabled%("DOKUMENT") THEN END SUB 
 cudo% = CodeDOK.DOKUMENT
 SELECT WHERE FILE "dokument"
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "DOKUMENT"
 IF ProjectJN$ = "TRUE" THEN maske$ = "DOKEPRJ"
 WHILE _formend% = 0
   DOKsub% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     SET HEADING title$ + " - Dokumentenverwaltung"
     OPEN FORM GOFFForm$ + maske$
     SET f = superbase.form
     SET STATUS "Dokumentenverwaltung"
     CALL MNDOKSRV()
     FILE "DOKUMENT"
     INDEX Dokument.Dokument
     SELECT FORM FIRST 
     FORM 
     SET DISPLAY ON 
   END IF 
   MENU ON 
   MOUSE ON 
   dokgrup$ = Gruppe.Dokument
   SELECT FORM KEY cudo% FILE "Dokument" INDEX codedok.dokument
   IF ProjectJN$ = "TRUE" THEN 
     IF projekt.dokument <> "" THEN 
       proj$ = Projekt.dokument
     ELSE 
       proj$ = "<ohne Zuordnung>"
     END IF 
     IF gruppe.dokument <> "" THEN 
       dokgrup$ = gruppe.dokument
     ELSE 
       dokgrup$ = "<ohne Zuordnung>"
     END IF 
   END IF 
   f.dokneu.visible = 0
   f.imp.visible = 0
   f.such.visible = 0
   f.left.visible = 0
   f.right.visible = 0
   f.doksuchen.visible = 0
   IF dokpass.dokument = "" THEN 
     f.dokschu.Backcolor = 3
   ELSE 
     f.dokschu.Backcolor = 2
   END IF 
   GAppName$ = _netpath$ + "DOCP\dokument.pdf"
   FORM 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE DOKsub%
   CASE 3
     codedok% = codedok.dokument
     IF dokpass.dokument = "" THEN 
       SELECT FIRST FILE "Stamm"
       passw$ = DokPass.stamm
       REQUEST "Soll das Dokument jetzt geschÅtzt werden?","",135,req%
       IF req% = 1 THEN 
         SELECT FIRST FILE "Dokument" INDEX codedok.dokument
         SELECT KEY codedok% LOCK FILE "Dokument" INDEX codedok.dokument
         IF EXISTS (_netpath$ + Dateiname.dokument) THEN 
           ON ERROR GOTO Doc301220032
           IF RIGHT$ (Dateiname.dokument,3) LIKE "doc" OR RIGHT$ (Dateiname.dokument,3) LIKE "dot" THEN 
             CALL open_doc(_netpath$ + Dateiname.dokument,"")
             CALL set_password(passw$)
             CALL close_doc( - 1)
           END IF 
Doc301220032: 
           ON ERROR GOTO ErrorHandler
           DokPass.dokument = passw$
           STORE FILE "Dokument"
         END IF 
       END IF 
     ELSE 

       IF NOT MNdisabled%("DOKSCHUTZAUFHEBEN") THEN 
         REQUEST "Soll der Dokumentenschutz jetzt aufgehoben werden?","",135,req%
         IF req% = 1 THEN 
             SELECT FIRST FILE "Dokument" INDEX codedok.dokument
             SELECT KEY codedok% LOCK FILE "Dokument" INDEX codedok.dokument
             IF EXISTS (_netpath$ + Dateiname.dokument) THEN 
               passw$ = DokPass.dokument
               ON ERROR GOTO Doc301220031
               IF RIGHT$ (Dateiname.dokument,3) LIKE "doc" OR RIGHT$ (Dateiname.dokument,3) LIKE "dot" THEN 
                 CALL open_doc(_netpath$ + Dateiname.dokument,"")
                 CALL remove_password(passw$)
                 CALL close_doc( - 1)
               END IF 
Doc301220031: 
               ON ERROR GOTO ErrorHandler
               DokPass.dokument = ""
               STORE FILE "Dokument"
             END IF 
         END IF 
       ELSE 
         CALL Fehler("Das Dokument wurde bereits geschÅtzt","")
       END IF 
     END IF 
     DOKsub% = 0
   CASE 99
     MENU OFF 
     GDokName$ = Dokument.dokument
     GDoknovi% = novi1.dokument
     ENTER Dokument.dokument,0
     MENU ON 
   END SELECT 
 WEND 
 _formend% = 0
 IF FileChanged%("DOKUMENT") = 1 THEN CALL FStore("DOKUMENT")

 END SUB 

SUB TagestMA1a()
 terbyhand% = 1
 CALL TagestMA()
 terbyhand% = 0
 END SUB 

SUB TagestMA()
    DIM dlg AS Dialog
    DIM control AS DialogControl
    opt% = 0
    Superbase.Dialogs.Add("Dialogname")
    SET dlg = Superbase.Dialogs.Dialogname
    dlg.Move(0,0,222,98)
    dlg.Caption = "Art der TerminÅbersicht"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(2,8,219,65)
    control.Caption = " WÑhlen Sie eine Option "
 
    SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
    control.Move(6,20,159,10)
    control.Caption = "aus den vorhandenen Terminen selektieren"
    control.Bind("opt%")
    control.ValueOn = 0
 
    SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
    control.Move(6,32,214,9)
    control.Caption = "Liste der Termine der automatischen Wiedervorlage anzeigen"
    control.Bind("opt%")
    control.ValueOn = 1
 
    SET control = dlg.Add("DialogOptionButton3","DialogOptionButton")
    control.Move(6,44,200,10)
    control.Caption = "Liste der Netzwerknachrichten des Mitarbeiters anzeigen"
    control.Bind("opt%")
    control.ValueOn = 2
 
    SET control = dlg.Add("DialogOptionButton4","DialogOptionButton")
    control.Move(6,56,200,10)
    control.Caption = "CODie-Spezial-Terminliste"
    control.Bind("opt%")
    control.ValueOn = 3

    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(58,76,43,16)
    control.Default = 1
    control.Caption = "OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(104,76,42,16)
    control.Caption = "Abbruch"
    control.ReturnValue = 0
    DIALOG "Dialogname",req%
    REMOVE DIALOG "Dialogname"
    IF req% = 0 THEN END SUB 
    IF opt% = 0 THEN 
      GTermAusw% = 0
      tfound% = 0
      CALL TagestMA1()
    END IF 
    IF opt% = 1 THEN 
      offVlLi% = 1
      offBMCh% = 1
      CALL CheckTermin()
      offVlLi% = 0
    END IF 
    IF opt% = 2 THEN 
      offVlLi% = 1
      offBMCh% = 1
      nomail% = 0
      CALL BMCheckMail()
      IF nomail% <> 0 THEN 
        CALL Fehler("Keine neuen Nachrichten vorhanden!","")
      END IF 
      nomail% = 0
      offBMCh% = 0
    END IF 
    IF opt% = 3 THEN 
      CALL ADRTERMR()
    END IF 
    offVlLi% = 0
    offBMCh% = 0
 END SUB 

SUB TagestMA1()
 ON ERROR GOTO ErrorHandler
 bez% = 1
 IF disabled%(GAkquiDat$) THEN END SUB 
 IF NOT AQFileOK%() THEN END SUB 

 IF GTermAusw% = - 1 THEN GOTO TLi260320003

 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GDokDat$ + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\" + GTelDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GConDat$ + _fpw$)
 REM CALL DFile(2,"OFFICE\AKQTMP" + _fpw$)
 IF EXISTS (GMACodeDir$ + "AKQTMP.SBF") THEN 
   IF OPEN ("AKQTMP") THEN CLOSE FILE "AKQTMP"
   DELETE GMACodeDir$ + "AKQTMP.*"
 END IF 
 
 GTermAusw% = - 1
 _continue% = 1
 bezug% = bez%
 FILE "Supervis"
 INDEX nachname.supervis
 SELECT FIRST 
 DIM Agenturen$( RECCOUNT ("SUPERVIS") + 1)
 Agenturen$(0) = "<alle Mitarbeiter>" + SPACE$ (80) + "000000"
 a% = 1
 WHILE NOT EOF ("Supervis")
   IF UCASE$ (NoAnzeigeJN.supervis) <> "J" THEN 
     Agenturen$(a%) = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
     a% = a% + 1
   END IF 
   SELECT NEXT FILE "supervis"
 WEND 
 SELECT FIRST FILE "supervis"
 SELECT KEY vcodema% FILE "Supervis" INDEX codema.supervis
 auswahl$ = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
 FILE "Aktionen"
 INDEX Bezeichnung.Aktionen
 SELECT FIRST 
 DIM Aktionen$( RECCOUNT ("Aktionen") + 1)
 a% = 1
 WHILE NOT EOF ("Aktionen")
   IF UCASE$ (NoAnzeige.aktionen) <> "J" THEN 
     Aktionen$(a%) = Bezeichnung.Aktionen + SPACE$ (80) + STR$ (codeak.Aktionen,"000000")
     a% = a% + 1
   END IF 
   SELECT NEXT FILE "Aktionen"
 WEND 
 Aktionen$(0) = "<alle Aktionen>" + SPACE$ (80) + "000000"
 LAuswahl$ = Aktionen$(0)
 opt1% = 2
 REM von$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 Tervon$ = (ReadINI$("FACTURA","Terminvon"))
 von$ = ""
 IF DateOK%(Tervon$) THEN 
   von$ = Tervon$
 END IF 
 bis$ = DATE$ ( TODAY ,"0d.mm.yyyy")
TMA260320001: 
 CREATE DIALOG "TLISTE",0,0,307,136,title$,"MS Sans Serif",8
 ADD DIALOG "TLISTE",4,0,0,306,114,0,""
 ADD DIALOG "TLISTE",5,40,11,162,9,0,"Bitte wÑhlen Sie die gewÅnschten Kategorien aus:"
 ADD DIALOG "TLISTE",9,9,14,20,21,2
 ADD DIALOG "TLISTE",4,40,22,97,61,0,"Terminart"
 ADD DIALOG "TLISTE",3,46,33,52,12,0,"alle Termine",1,opt1%
 ADD DIALOG "TLISTE",3,46,50,80,12,0,"alle offenen Termine",2,opt1%
 ADD DIALOG "TLISTE",3,46,67,87,12,0,"alle erledigten Termine",3,opt1%
 ADD DIALOG "TLISTE",4,138,22,304,61,0,"Bezug"
 ADD DIALOG "TLISTE",5,146,30,62,9,0,"Mitarbeiter:"
 ADD DIALOG "TLISTE",5,146,57,62,9,0,"Aktionen:"
 ADD DIALOG "TLISTE",8,146,40,146,188,259,2,Auswahl$,Agenturen$
 ADD DIALOG "TLISTE",8,146,66,146,188,259,2,LAuswahl$,Aktionen$
 
 ADD DIALOG "TLISTE",5,84,95,12,8,0,"von"
 ADD DIALOG "TLISTE",6,99,94,45,11,0,0,von$,10
 ADD DIALOG "TLISTE",5,152,95,12,8,0,"bis"
 ADD DIALOG "TLISTE",6,166,94,45,11,0,0,bis$,10
 ADD DIALOG "TLISTE",1,99,117,55,15,1,"&Weiter",1,1
 ADD DIALOG "TLISTE",1,155,117,55,15,0,"&Abbrechen",0,0
 DIALOG "TLISTE",req%
 REMOVE DIALOG "TLISTE"
 
 IF req% = 1 THEN 
   CALL WriteINI("FACTURA","Terminvon",von$)
   IF RECCOUNT (GAkquiDat$) < 23000 THEN 
     REDIM Termine$( RECCOUNT (GAkquiDat$),1)
     REDIM Termine$( RECCOUNT (GAkquiDat$))
     t% = RECCOUNT (GAkquiDat$)
   ELSE 
     REDIM Termine$(23000,1)
     REDIM Termine$(23000)
     t% = 23000
   END IF 
   REM FOR i% = 0 TO t% - 1
     REM Termine$(i%) = ""
   REM NEXT i%
   vonold$ = LTRIM$ (von$)
   IF von$ = "" THEN von$ = "01.01.1901"
   IF bis$ = "" THEN bis$ = "01.01.2200"
   IF DateOK%(von$) THEN 
     IF DateOK%(bis$) THEN 
     ELSE 
       GOTO TMA260320001
     END IF 
   ELSE 
     GOTO TMA260320001
   END IF 
   IF DAYS (von$) > DAYS (bis$) THEN 
     von1$ = bis$
     bis$ = von$
     von$ = von1$
   END IF 
   von% = DAYS (von$)
   von$ = DATE$ (von%,"0d.mm.yyyy")
   bis% = DAYS (bis$)
   bis$ = DATE$ (bis%,"0d.mm.yyyy")
   REM Feststellen was los ist
   ma% = VAL ( RIGHT$ (Auswahl$,6))
   ak% = VAL ( RIGHT$ (Lauswahl$,6))
   IF ma% = 0 AND ak% = 0 THEN 
     feld$ = "Termin"
     sel$ = ""
     ma$ = "alle Mitarbeiter"
     ak$ = "alle Aktionen"
   END IF 
   IF ma% > 0 AND ak% = 0 THEN 
     feld$ = "QuickMATer"
     sel$ = STR$ (ma%,"000000")
     lenge% = 6
     sel1$ = ""
     IF opt1% = 2 THEN 
       REM nichterledigte
       IF vonold$ <> "" THEN 
         sel1$ = STR$ (ma%,"000000") + DATE$ (von%,"yyyymm0d")
         lenge% = 6
       END IF 
     END IF 
     IF opt1% = 3 THEN 
       REM erledigte
       IF vonold$ <> "" THEN 
         sel1$ = STR$ (ma%,"000000") + DATE$ (von%,"yyyymm0d")
         lenge% = 6
       END IF 
     END IF 
     SELECT KEY ma% FILE "supervis" INDEX codema.supervis
     ma$ = name.supervis
     ak$ = "alle Aktionen"
   END IF 
   IF ma% = 0 AND ak% > 0 THEN 
     feld$ = "QuickAKTer"
     sel$ = STR$ (ak%,"000000")
     lenge% = 6
     sel1$ = ""
     IF opt1% = 2 THEN 
       REM nichterledigte
       IF vonold$ <> "" THEN 
         sel1$ = STR$ (ak%,"000000") + DATE$ (von%,"yyyymm0d")
       END IF 
     END IF 
     IF opt1% = 3 THEN 
       REM erledigte
       IF vonold$ <> "" THEN 
         sel1$ = STR$ (ak%,"000000") + DATE$ (von%,"yyyymm0d")
       END IF 
     END IF 
     ma$ = "alle Mitarbeiter"
     SELECT KEY ak% FILE "Aktionen" INDEX codeak.aktionen
     ak$ = Bezeichnung.aktionen
   END IF 
   IF ma% > 0 AND ak% > 0 THEN 
     feld$ = "QuickAKMATer"
     sel$ = STR$ (ak%,"000000") + STR$ (ma%,"000000")
     lenge% = 12
     sel1$ = ""
     IF opt1% = 2 THEN 
       REM nichterledigte
       IF vonold$ <> "" THEN 
         sel1$ = STR$ (ak%,"000000") + STR$ (ma%,"000000") + DATE$ (von%,"yyyymm0d")
       END IF 
     END IF 
     IF opt1% = 3 THEN 
       REM erledigte
       IF vonold$ <> "" THEN 
         sel1$ = STR$ (ak%,"000000") + STR$ (ma%,"000000") + DATE$ (von%,"yyyymm0d")
       END IF 
     END IF 
     SELECT KEY ak% FILE "Aktionen" INDEX codeak.aktionen
     ak$ = Bezeichnung.aktionen
     SELECT KEY ma% FILE "supervis" INDEX codema.supervis
     ma$ = name.supervis
   END IF 
   IF opt1% = 1 THEN tart$ = "alle Termine"
   IF opt1% = 2 THEN tart$ = "nichterledigte Termine"
   IF opt1% = 3 THEN tart$ = "erledigte Termine"
   FILE GAkquiDat$
   INDEX feld$$
   REM feld$ = feld$ + ".GAkquiDat$"
   SELECT FIRST 
   
   
   
    DIM dlg AS Dialog
    DIM control AS DialogControl
    DIM Auswahl$(1)
 
 
A060420001: 
   tfound% = 0
   IF sel$ = "" THEN 
     FILE GAkquiDat$
     SELECT FIRST 
     IF GCODIE% = - 1 THEN 
       CALL SearchInitAq1(GAkquiDat$)
     END IF 
     WHILE NOT EOF (GAkquiDat$)
       IF opt1% = 1 THEN 
         IF Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$) THEN 
           t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
           IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
           tfound% = tfound% + 1
         END IF 
       END IF 
       IF opt1% = 2 THEN 
         IF UCASE$ (erledigt_Termin.GAkquiDat$) = "N" THEN 
           IF Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$) THEN 
             t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
             IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
             tfound% = tfound% + 1
           END IF 
         END IF 
       END IF 
       IF opt1% = 3 THEN 
         IF UCASE$ (erledigt_Termin.GAkquiDat$) = "J" THEN 
           IF Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$) THEN 
             t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
             IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
             tfound% = tfound% + 1
           END IF 
         END IF 
       END IF 
       SELECT NEXT FILE GAkquiDat$ INDEX feld$$
     WEND 
   END IF 
 
 
   IF sel$ <> "" THEN 
     FILE GAkquiDat$
     SELECT FIRST INDEX feld$$
     IF sel1$ <> "" THEN 
       SELECT KEY sel1$ FILE GAkquiDat$ INDEX feld$$
     ELSE 
       SELECT KEY sel$ FILE GAkquiDat$ INDEX feld$$
     END IF 
     test1$ = LEFT$ (feld$$,lenge%)
     IF GCODIE% = - 1 THEN 
       CALL SearchInitAq1(GAkquiDat$)
     END IF 
     ai% = 0
     WHILE NOT EOF (GAkquiDat$) AND LEFT$ (feld$$,lenge%) = sel$
       ai% = ai% + 1
       IF opt1% = 1 THEN 
         IF (Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$)) OR Termin.GAkquiDat$ = 0 THEN 
           t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
           IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
           tfound% = tfound% + 1
         END IF 
       END IF 
       IF opt1% = 2 THEN 
         IF UCASE$ (erledigt_Termin.GAkquiDat$) = "N" THEN 
           IF (Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$)) OR Termin.GAkquiDat$ = 0 THEN 
             t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
             IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
             tfound% = tfound% + 1
           END IF 
         END IF 
       END IF 
       IF opt1% = 3 THEN 
         IF UCASE$ (erledigt_Termin.GAkquiDat$) = "J" THEN 
           IF (Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$)) OR Termin.GAkquiDat$ = 0 THEN 
             t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
             IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
             tfound% = tfound% + 1
           END IF 
         END IF 
       END IF 
       SET STATUS LTRIM$ ( STR$ (ai%,",999999")) + " Termine durchsucht  / " + LTRIM$ ( STR$ (tfound%,",9999999")) + " Termine gefunden"
       SELECT NEXT FILE GAkquiDat$ INDEX feld$$
     WEND 
     REM CALL Fehler("","")
     Termine$(tfound%) = ""
   END IF 
   REM CALL Fehler("","")
   REDIM Auswahl$(tfound%)
   aaaak% = 0
   IF tfound% <> 0 THEN 
     prompt$ = Termine$(0)
TLi260320003:  
     IF GCODIE% = - 1 THEN 
       c$ = "aa"
       REM CALL Fehler("","")
       IF aaaak% = 0 THEN 
         req3% = CALL ("_SearchShow",c$)
       ELSE 
         req3% = CALL ("_SearchReShow",c$)
       END IF 
       REM CALL Fehler( STR$ (req%),"")
       IF req3% = 3 THEN 
         req% = 2
       ELSE 
         IF VAL (c$) <> 0 THEN 
           req% = 1
           _cuaq% = VAL (c$)
           REM MENU 4,2,1,"aus Suchliste &wÑhlen,F7","DokKurzSuche","Auflistung aller vorher gesuchten Dokumente"
           ok% = 0
           SET STATUS "Termine gefunden..."
         ELSE 
           IF req3% = 2 THEN 
             req% = 3
           ELSE 
             req% = 0
           END IF 
         END IF 
       END IF 
       aaaak% = aaaak% + 1
     ELSE 
       Superbase.Dialogs.Add("TERLISTE")
       SET dlg = Superbase.Dialogs.TERLISTE
       dlg.Move(0,0,440,297)
       dlg.Caption = "TerminÅbersicht"
       dlg.FontName = "MS Sans Serif"
       dlg.FontSize = 8
 
       SET control = dlg.Add("DialogListBox1","DialogListBox")
       control.Move(4,8,429,256)
       control.MultiSelect = 1
       control.ScrollBars = 2
       control.Bind("Termine$","Auswahl$","prompt$")
 
       SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
       control.Move(10,273,124,16)
       control.Default = 1
       control.Caption = "&zum einzelnen Termin springen"
       control.ReturnValue = 1
 
       SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
       control.Move(140,273,56,16)
       control.Caption = "&Drucken"
       control.ReturnValue = 2
 
       SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
       control.Move(201,273,56,16)
       control.Caption = "Dat&ei"
       control.ReturnValue = 3
 
       SET control = dlg.Add("DialogCommandButton6","DialogCommandButton")
       control.Move(261,273,56,16)
       control.Caption = "EXCEL"
       control.ReturnValue = 5
 
       SET control = dlg.Add("DialogCommandButton5","DialogCommandButton")
       control.Move(321,273,56,16)
       control.Caption = "Er&ledigen"
       control.ReturnValue = 4
 
       SET control = dlg.Add("DialogCommandButton4","DialogCommandButton")
       control.Move(381,273,56,16)
       control.Caption = "&Abbruch"
       control.ReturnValue = 0
       control.Cancel = 1
       DIALOG "TERLISTE",req%
       REMOVE DIALOG ALL 
     END IF 
     IF req% = 0 THEN 
       _formend% = 0
       GOTO e060420001
     END IF 
     IF req% = 1 THEN 
       ok% = 1
       IF GCODIE% <> - 1 THEN 
         _cuaq% = VAL ( RIGHT$ (Auswahl$(0),6))
       END IF 
       prompt$ = Auswahl$(0)
       lastTermin% = _cuaq%
       SELECT KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       SELECT KEY codeku.GAkquiDat$ FILE "Adressen" INDEX codeku.adressen
       SELECT KEY codeku.adressen FILE "Telefon" INDEX codeku.Telefon
       IF FORM LIKE "Akq*" THEN 
         SELECT FORM KEY _cuaq% INDEX codeaq.GAkquiDat$
       END IF 
       knr% = codeku.GAkquiDat$
       _vcodema% = codema.GAkquiDat$
       CALL TerLiSpez(_cuaq%)
       _formend% = 0
       GOTO TLi260320003
     END IF 
     REM EXCEL-Datei erzeugen
     IF req% = 5 THEN 
       aktDir$ = DIRECTORY 
       ON ERROR GOTO ErrorHandler
       IF OPEN ("AKQTMP1") THEN CLOSE FILE "AKQTMP1"
       IF EXISTS (GMACodeDir$ + "AKQTMP1.sbf") THEN 
         DELETE GMACodeDir$ + "AKQTMP1.*"
       END IF 
       COPY _netpath$ + "\OFFICE\AKQTMP1.*" TO GMACodeDir$
       OPEN FILE SHARE ,0GMACodeDir$ + "AKQTMP1;paris"
       FOR i% = 0 TO tfound% - 1
         SET STATUS STR$ (i%,"9999999")
         codeaq% = VAL ( RIGHT$ (Termine$(i%),6))
         SELECT KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         SELECT FIRST FILE GAdrDat$ INDEX codeku.GAdrDat$
         IF codeku.GAkquiDat$ > 0 AND EXISTS (codeku.GAkquiDat$,codeku.GADRDat$) THEN 
           SELECT KEY codeku.GAkquiDat$ FILE GAdrDat$ INDEX codeku.GAdrDat$
           BLANK FILE "AKQTMP1"
           bearbeiter.AKQTMP1 = LEFT$ (bearbeiter.GAkquiDat$,50)
           REM datum.AKQTMP1 = datum.GAkquiDat$
           notiz.AKQTMP1 = notiz.GAkquiDat$
           IF termin.GAkquiDat$ > 0 THEN termin.AKQTMP1 = termin.GAkquiDat$
           IF Uhrzeit.GAkquiDat$ > 0 THEN Uhrzeit.AKQTMP1 = Uhrzeit.GAkquiDat$
           Kunden_Name.AKQTMP1 = LTRIM$ (nachname.GAkquiDat$)
           ergebnis.AKQTMP1 = ergebnis.GAkquiDat$
           REM tnr.akqtmp1 = terminnr.GAkquiDat$
           REM AkquiseTag.akqtmp1 = AkquiseTag.GAkquiDat$
           REM Ft1.akqtmp1 = Folgetermin1.GAkquiDat$
           REM IF Folgezeit1.GAkquiDat$ <> 0 THEN zeit1.akqtmp1 = Folgezeit1.GAkquiDat$
           REM Ft2.akqtmp1 = Folgetermin2.GAkquiDat$
           REM IF Folgezeit2.GAkquiDat$ <> 0 THEN zeit2.akqtmp1 = Folgezeit2.GAkquiDat$
           IF ErDatum.GAkquiDat$ > 0 THEN 
             VorlageTermin.akqtmp1 = ErDatum.GAkquiDat$
             IF ErZeit.GAkquiDat$ <> 0 THEN Vorlagezeit.akqtmp1 = ErZeit.GAkquiDat$
           END IF 
           REM ort.akqtmp1 = ort.GAkquiDat$
           REM az.akqtmp1 = az.GAkquiDat$
           REM bba.akqtmp1 = bba.GAkquiDat$
           REM sonstiges.akqtmp1 = sonstiges.GAkquiDat$
           STORE FILE "AKQTMP1"
           MOUSE OFF 
         END IF 
       NEXT i%
       REM CALL Fehler("","")
       FILE "AKQTMP1"
       INDEX Termin.AKQTMP1
       IF RECCOUNT ("AKQTMP1") > 0 THEN 
         SELECT FIRST LOCK FILE "AKQTMP1"
       ELSE 
         SELECT LAST FILE "AKQTMP1"
       END IF 
       k% = 0
       WHILE NOT EOF ("AKQTMP1")
         k% = k% + 1
         nr.akqtmp1 = k%
         STORE FILE "AKQTMP1"
         SELECT NEXT LOCK 
       WEND 
       REM OPEN FIELDS Nr,AkquiseTag,Ber,Kunde,Termin,Uhrzeit,FT1,Zeit1,FT2,Zeit2,Vorlagedatum,Vorlagezeit,Ergebnis
       IF GRiese$ LIKE "TRUE" THEN 
         REM OPEN FIELDS Nr,AkquiseTag,Ber,Kunde,Ort,AZ,BBA,Sonstiges,Termin,Uhrzeit,FT1,Zeit1,FT2,Zeit2,VorlageTermin,Ergebnis
       ELSE 
         
         OPEN FIELDS Nr,Bearbeiter,Kunden_Name,Termin,Uhrzeit,VorlageTermin,VorlageZeit,Notiz,Ergebnis
       END IF 
       SELECT FIRST FILE "AKQTMP1"
       IF EXISTS (GMACodeDir$ + "AKQTMP1.xls") THEN 
         DELETE GMACodeDir$ + "AKQTMP1.xls"
       END IF 
       DIRECTORY GMACodeDir$:REM     
       ON ERROR GOTO TagestErrExc01
       Superbase.Converters.SBF.SourceFormat = "Superbase"
       Superbase.Converters.SBF.SourceFile = "AKQTMP1"
       Superbase.Converters.SBF.Descending = 0
       Superbase.Converters.SBF.Merge = 0
       Superbase.Converters.SBF.LogErrors = 0
       Superbase.Converters.SBF.MultiResponse = 0
       Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
       Superbase.Converters.XLS.DestFile = GMACodeDir$ + "AKQTMP1.XLS"
       Superbase.Converters.XLS.StartRow = 2
       Superbase.Converters.XLS.StartCol = 1
       Superbase.Converters.XLS.EndRow = - 1
       Superbase.Converters.XLS.EndCol = - 1
       Superbase.Converters.XLS.UseLabels = - 1
       Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
       WAIT FOR 3
       CALL Fehler("Excel-Termindatei wurde erstellt!",GMACodeDir$ + "AKQTMP1.XLS")
       IF EXISTS (GMACodeDir$ + "AKQTMP1.xls") THEN 
         a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "AKQTMP1.XLS","","",1)
       END IF 
       GOTO TagestErrExc02
TagestErrExc01: 
       ON ERROR GOTO ErrorHandler
       CALL Fehler("Es ist ein Fehler aufgetreten!","Bitte prÅfen Sie, ob die Datei " + GMACodeDir$ + "AKQTMP1.XLS in EXCEL geîffnet ist, ggf. bitte schlie·en und nochmal probieren!")
TagestErrExc02: 
       cdir$ = DIRECTORY 
       DIRECTORY aktDir$
     END IF 
     IF req% = 2 THEN 
       REM Drucken
       MOUSE OFF 
       IF OPEN ("AKQTMP") THEN CLOSE FILE "AKQTMP"
       IF EXISTS (GMACodeDir$ + "AKQTMP.sbf") THEN 
         DELETE GMACodeDir$ + "AKQTMP.*")
       END IF 
       COPY _netpath$ + "\OFFICE\AKQTMP.*" TO GMACodeDir$
       OPEN FILE SHARE ,0GMACodeDir$ + "AKQTMP;paris"
       FOR i% = 0 TO tfound% - 1
         SET STATUS STR$ (i%,"9999999")
         codeaq% = VAL ( RIGHT$ (Termine$(i%),6))
         SELECT KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         BLANK FILE "AKQTMP"
         codeku.AKQTMP = codeku.GAkquiDat$
         codeak.akqtmp = codeak.GAkquiDat$
         bearbeiter.AKQTMP = bearbeiter.GAkquiDat$
         codema.AKQTMP = codema.GAkquiDat$
         datum.AKQTMP = datum.GAkquiDat$
         notiz.AKQTMP = notiz.GAkquiDat$
         termin.AKQTMP = termin.GAkquiDat$
         erledigt_termin.AKQTMP = erledigt_termin.GAkquiDat$
         codeaq.AKQTMP = codeaq.GAkquiDat$
         Uhrzeit.AKQTMP = Uhrzeit.GAkquiDat$
         nachname.AKQTMP = nachname.GAkquiDat$
         ergebnis.AKQTMP = ergebnis.GAkquiDat$
         projekt.AKQTMP = projekt.GAkquiDat$
         codepr.AKQTMP = codepr.GAkquiDat$
         dauer.AKQTMP = dauer.GAkquiDat$
         DME.AKQTMP = dme.GAkquiDat$
         REM terminnr.akqtmp = terminnr.GAkquiDat$
         STORE FILE "AKQTMP"
       NEXT i%
       cdir$ = DIRECTORY 
       DIRECTORY _netpath$ + "OFFICE"
       CALL ORep("TERMINE2")
       HEADING 
       SET REPORT PAGE "H_PAGE"
       OUTPUT REPORT PAGE 
       END HEADING 
       AFTER SELECT 
       SET REPORT PAGE "F_SELECT"
       OUTPUT REPORT PAGE 
       END SELECT 
       SET QUERY ON 
       SET QUERY LOCK ON 
       Ueberschr$ = "TerminÅbersicht Åber " + tart$ + " von: " + von$ + " bis: " + bis$ + " fÅr Mitarbeiter: " + ma$ + " und Aktion: " + ak$
       ON ERROR GOTO TD010420001
       SELECT ;
       WHERE codeak.AKQTMP = codeak.aktionen AND CodeKU.AKQTMP = CodeKU.GAdrDat$
       ORDER Termin.AKQTMP,Uhrzeit.AKQTMP
       TO ASK 
       END SELECT 
TD010420001: 
       ON ERROR GOTO ErrorHandler
       DIRECTORY cdir$
       MOUSE ON 
       GOTO TLi260320003
     END IF 
 
     IF req% = 3 THEN 
       CALL TagestExp(Termine$(),tfound%)
       GOTO TLi260320003
     END IF 
     REM markierte erledigen 04052001
     IF req% = 4 THEN 
       i% = 0
       MOUSE OFF 
       WHILE Auswahl$(i%) <> ""
         _cuaq% = VAL ( RIGHT$ (Auswahl$(i%),6))
         SELECT KEY _cuaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         GErledTermin$ = erledigt_Termin.GAkquiDat$
         erledigt_Termin.GAkquiDat$ = "j"
         CALL QuickStore(GAkquiDat$)
         MOUSE OFF 
         i% = i% + 1
       WEND 
       MOUSE ON 
       REDIM Termine$(tfound%,1)
       REDIM Termine$(tfound%)
       REM FOR a% = 0 TO tfound% - 1
         REM Termine$(a%) = ""
       REM NEXT a%
       CALL Fehler("Termin(e) wurden als erledigt gekennzeichnet","")
       GOTO A060420001
     END IF 
   ELSE 
     CALL Fehler("Es wurden keine Termine gefunden, die den Auswahlkriterien entsprachen!","")
   END IF 
 END IF 
e060420001: 
 MOUSE ON 
 REM IF GCODieRuf% = - 1 THEN 
   REM ret% = CALL ("_SearchClose")
   REM GCODieRuf% = 0
 REM END IF 
 END SUB 


SUB OldTagestMA1()
 ON ERROR GOTO ErrorHandler
 bez% = 1
 IF disabled%(GAkquiDat$) THEN END SUB 
 IF NOT AQFileOK%() THEN END SUB 
 IF title$ LIKE "*FACTURA*" OR title$ LIKE "*price*" THEN 
   CALL Fehler("Funktion wird in dieser Programm-Version nicht unterstÅtzt!","")
   END SUB 
 END IF 
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(2,"OFFICE\connect" + _fpw$)
 REM CALL DFile(2,"OFFICE\AKQTMP" + _fpw$)
 IF EXISTS ("c:\AKQTMP.SBF") THEN 
   IF OPEN ("AKQTMP") THEN CLOSE FILE "AKQTMP"
   DELETE "c:\AKQTMP.*"
 END IF 
 
 
 _continue% = 1
 bezug% = bez%
 FILE "Supervis"
 INDEX nachname.supervis
 SELECT FIRST 
 DIM Agenturen$( RECCOUNT ("SUPERVIS") + 1)
 Agenturen$(0) = "<alle Mitarbeiter>" + SPACE$ (80) + "000000"
 a% = 1
 WHILE NOT EOF ("Supervis")
   Agenturen$(a%) = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
   a% = a% + 1
   SELECT NEXT FILE "supervis"
 WEND 
 SELECT FIRST FILE "supervis"
 SELECT KEY vcodema% FILE "Supervis" INDEX codema.supervis
 auswahl$ = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
 FILE "Aktionen"
 INDEX Bezeichnung.Aktionen
 SELECT FIRST 
 DIM Aktionen$( RECCOUNT ("Aktionen") + 1)
 a% = 1
 WHILE NOT EOF ("Aktionen")
   Aktionen$(a%) = Bezeichnung.Aktionen + SPACE$ (80) + STR$ (codeak.Aktionen,"000000")
   a% = a% + 1
   SELECT NEXT FILE "Aktionen"
 WEND 
 Aktionen$(0) = "<alle Aktionen>" + SPACE$ (80) + "000000"
 LAuswahl$ = Aktionen$(0)
 opt1% = 2
 von$ = ReadINI$("SYSTEM","TerminVon")
 bis$ = ReadINI$("SYSTEM","TerminBis")

 IF von$ = "" OR von$ LIKE "leer" THEN 
   von$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 END IF 

 IF bis$ = "" OR bis$ LIKE "leer" THEN 
   bis$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 END IF 
 
TMA260320001: 
 CREATE DIALOG "TLISTE",0,0,307,136,title$,"MS Sans Serif",8
 ADD DIALOG "TLISTE",4,0,0,306,114,0,""
 ADD DIALOG "TLISTE",5,40,11,162,9,0,"Bitte wÑhlen Sie die gewÅnschten Kategorien aus:"
 ADD DIALOG "TLISTE",9,9,14,20,21,2
 ADD DIALOG "TLISTE",4,40,22,97,61,0,"Terminart"
 ADD DIALOG "TLISTE",3,46,33,52,12,0,"alle Termine",1,opt1%
 ADD DIALOG "TLISTE",3,46,50,80,12,0,"alle offenen Termine",2,opt1%
 ADD DIALOG "TLISTE",3,46,67,87,12,0,"alle erledigten Termine",3,opt1%
 ADD DIALOG "TLISTE",4,138,22,304,61,0,"Bezug"
 ADD DIALOG "TLISTE",5,146,30,62,9,0,"Mitarbeiter:"
 ADD DIALOG "TLISTE",5,146,57,62,9,0,"Aktionen:"
 ADD DIALOG "TLISTE",8,146,40,146,88,259,2,Auswahl$,Agenturen$
 ADD DIALOG "TLISTE",8,146,66,146,88,259,2,LAuswahl$,Aktionen$

 ADD DIALOG "TLISTE",5,84,95,12,8,0,"von"
 ADD DIALOG "TLISTE",6,99,94,45,11,0,0,von$,10
 ADD DIALOG "TLISTE",5,152,95,12,8,0,"bis"
 ADD DIALOG "TLISTE",6,166,94,45,11,0,0,bis$,10
 ADD DIALOG "TLISTE",1,99,117,55,15,1,"&Weiter",1,1
 ADD DIALOG "TLISTE",1,155,117,55,15,0,"&Abbrechen",0,0
 DIALOG "TLISTE",req%
 REMOVE DIALOG "TLISTE"

 IF req% = 1 THEN 
   IF RECCOUNT (GAkquiDat$) < 23000 THEN 
     REDIM Termine$( RECCOUNT (GAkquiDat$),1)
     REDIM Termine$( RECCOUNT (GAkquiDat$))
     t% = RECCOUNT (GAkquiDat$)
   ELSE 
     REDIM Termine$(23000,1)
     REDIM Termine$(23000)
     t% = 23000
   END IF 
   REM FOR i% = 0 TO t% - 1
     REM Termine$(i%) = ""
   REM NEXT i%
   IF von$ = "" THEN von$ = "01.01.1901"
   IF bis$ = "" THEN bis$ = "01.01.2200"

   IF DateOK%(von$) THEN 
     IF DateOK%(bis$) THEN 
     ELSE 
       GOTO TMA260320001
     END IF 
   ELSE 
     GOTO TMA260320001
   END IF 
   IF DAYS (von$) > DAYS (bis$) THEN 
     von1$ = bis$
     bis$ = von$
     von$ = von1$
   END IF 
   CALL WriteINI("SYSTEM","TerminVon",von$)
   CALL WriteINI("SYSTEM","TerminBis",bis$)
   REM Feststellen was los ist
   ma% = VAL ( RIGHT$ (Auswahl$,6))
   ak% = VAL ( RIGHT$ (Lauswahl$,6))
   IF ma% = 0 AND ak% = 0 THEN 
     feld$ = "Termin"
     sel$ = ""
     ma$ = "alle Mitarbeiter"
     ak$ = "alle Aktionen"
   END IF 
   IF ma% > 0 AND ak% = 0 THEN 
     feld$ = "QuickMATer"
     sel$ = STR$ (ma%,"000000")
     lenge% = 6
     SELECT KEY ma% FILE "supervis" INDEX codema.supervis
     ma$ = name.supervis
     ak$ = "alle Aktionen"
   END IF 
   IF ma% = 0 AND ak% > 0 THEN 
     feld$ = "QuickAKTer"
     sel$ = STR$ (ak%,"000000")
     lenge% = 6
     ma$ = "alle Mitarbeiter"
     SELECT KEY ak% FILE "Aktionen" INDEX codeak.aktionen
     ak$ = Bezeichnung.aktionen
   END IF 
   IF ma% > 0 AND ak% > 0 THEN 
     feld$ = "QuickAKMATer"
     sel$ = STR$ (ak%,"000000") + STR$ (ma%,"000000")
     lenge% = 12
     SELECT KEY ak% FILE "Aktionen" INDEX codeak.aktionen
     ak$ = Bezeichnung.aktionen
     SELECT KEY ma% FILE "supervis" INDEX codema.supervis
     ma$ = name.supervis
   END IF 
   IF opt1% = 1 THEN tart$ = "alle Termine"
   IF opt1% = 2 THEN tart$ = "nichterledigte Termine"
   IF opt1% = 3 THEN tart$ = "erledigte Termine"
   FILE GAkquiDat$
   INDEX feld$$
   feld$ = feld$ + ".GAkquiDat$"
   SELECT FIRST 
   
   
   
    DIM dlg AS Dialog
    DIM control AS DialogControl
    DIM Auswahl$(1)


A060420001: 
   tfound% = 0
   IF sel$ = "" THEN 
     FILE GAkquiDat$
     SELECT FIRST 
     WHILE NOT EOF (GAkquiDat$)
       IF opt1% = 1 THEN 
         IF Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$) THEN 
           t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
       tfound% = tfound% + 1
         END IF 
       END IF 
       IF opt1% = 2 THEN 
         IF UCASE$ (erledigt_Termin.GAkquiDat$) = "N" THEN 
           IF Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$) THEN 
             t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
           tfound% = tfound% + 1
           END IF 
         END IF 
       END IF 
       IF opt1% = 3 THEN 
         IF UCASE$ (erledigt_Termin.GAkquiDat$) = "J" THEN 
           IF Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$) THEN 
             t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
           tfound% = tfound% + 1
           END IF 
         END IF 
       END IF 
       SELECT NEXT FILE GAkquiDat$ INDEX feld$$
     WEND 
   END IF 


   IF sel$ <> "" THEN 
     FILE GAkquiDat$
     SELECT FIRST INDEX feld$$
     SELECT KEY sel$ FILE GAkquiDat$ INDEX feld$$
     test1$ = LEFT$ (feld$$,lenge%)
     WHILE NOT EOF (GAkquiDat$) AND LEFT$ (feld$$,lenge%) = sel$
       f1$ = LEFT$ (feld$$,lenge%)
       IF opt1% = 1 THEN 
         IF Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$) THEN 
           t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
           tfound% = tfound% + 1
         END IF 
       END IF 
       IF opt1% = 2 THEN 
         IF UCASE$ (erledigt_Termin.GAkquiDat$) <> "J" THEN 
           IF Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$) THEN 
             t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
           tfound% = tfound% + 1
           END IF 
         END IF 
       END IF 
       IF opt1% = 3 THEN 
         IF UCASE$ (erledigt_Termin.GAkquiDat$) = "J" THEN 
           IF Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$) THEN 
             t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
           tfound% = tfound% + 1
           END IF 
         END IF 
       END IF 
       SELECT NEXT FILE GAkquiDat$ INDEX feld$$
     WEND 
   END IF 
   REM CALL Fehler("","")
   REDIM Auswahl$(tfound%)
   IF tfound% <> 0 THEN 
     prompt$ = Termine$(0)
 
     
     SET STATUS "Bitte wÑhlen Sie einen Termin aus."
     REM CREATE DIALOG "TERLISTE",0,0,440,297,title$,"MS Sans Serif",8
     REM ADD DIALOG "TERLISTE",7,5,8,428,261,8,2,Termine$,LAuswahl1$,prompt$
     REM ADD DIALOG "TERLISTE",1,100,274,56,16,1,"&OK",1,1
     REM ADD DIALOG "TERLISTE",1,160,274,56,16,0,"&Drucken",2,0
     REM ADD DIALOG "TERLISTE",1,220,274,56,16,0,"Dat&ei",3,0
     REM ADD DIALOG "TERLISTE",1,280,274,56,16,0,"&Abbruch",0,0

 
TLi260320003:  
     Superbase.Dialogs.Add("TERLISTE")
     SET dlg = Superbase.Dialogs.TERLISTE
     dlg.Move(0,0,440,297)
     dlg.Caption = "TerminÅbersicht"
     dlg.FontName = "MS Sans Serif"
     dlg.FontSize = 8
 
     SET control = dlg.Add("DialogListBox1","DialogListBox")
     control.Move(4,8,429,256)
     control.MultiSelect = 1
     control.ScrollBars = 2
     control.Bind("Termine$","Auswahl$","prompt$")
 
     SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
     control.Move(32,273,124,16)
     control.Default = 1
     control.Caption = "&zum einzelnen Termin springen"
     control.ReturnValue = 1
 
     SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
     control.Move(161,273,56,16)
     control.Caption = "&Drucken"
     control.ReturnValue = 2
 
     SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
     control.Move(221,273,56,16)
     control.Caption = "Dat&ei"
     control.ReturnValue = 3
 
     SET control = dlg.Add("DialogCommandButton5","DialogCommandButton")
     control.Move(281,273,56,16)
     control.Caption = "Er&ledigen"
     control.ReturnValue = 4
 
     SET control = dlg.Add("DialogCommandButton4","DialogCommandButton")
     control.Move(341,273,56,16)
     control.Caption = "&Abbruch"
     control.ReturnValue = 0
     control.Cancel = 1
 



     DIALOG "TERLISTE",req%
     REMOVE DIALOG ALL 
     IF req% = 0 THEN 
       _formend% = 0
       GOTO e060420001
     END IF 
     IF req% = 1 THEN 
       ok% = 1
       _cuaq% = VAL ( RIGHT$ (Auswahl$(0),6))
       prompt$ = Auswahl$(0)
       lastTermin% = _cuaq%
       SELECT KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       knr% = codeku.GAkquiDat$
       _vcodema% = codema.GAkquiDat$
       CALL TerLiSpez(_cuaq%)
       _formend% = 0
       GOTO TLi260320003
     END IF 

     IF req% = 2 THEN 
       REM Drucken
       MOUSE OFF 
       IF OPEN ("AKQTMP") THEN CLOSE FILE "AKQTMP"
       IF EXISTS ("c:\AKQTMP.sbf") THEN DELETE "c:\AKQTMP.*")
       COPY _netpath$ + "\OFFICE\AKQTMP.*" TO "c:\"
       OPEN FILE SHARE ,0"c:\AKQTMP;paris"
       FOR i% = 0 TO tfound% - 1
         SET STATUS STR$ (i%,"9999999")
         codeaq% = VAL ( RIGHT$ (Termine$(i%),6))
         SELECT KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         BLANK FILE "AKQTMP"
         codeku.AKQTMP = codeku.GAkquiDat$
         codeak.akqtmp = codeak.GAkquiDat$
         bearbeiter.AKQTMP = bearbeiter.GAkquiDat$
         codema.AKQTMP = codema.GAkquiDat$
         datum.AKQTMP = datum.GAkquiDat$
         notiz.AKQTMP = notiz.GAkquiDat$
         termin.AKQTMP = termin.GAkquiDat$
         erledigt_termin.AKQTMP = erledigt_termin.GAkquiDat$
         codeaq.AKQTMP = codeaq.GAkquiDat$
         Uhrzeit.AKQTMP = Uhrzeit.GAkquiDat$
         nachname.AKQTMP = nachname.GAkquiDat$
         ergebnis.AKQTMP = ergebnis.GAkquiDat$
         projekt.AKQTMP = projekt.GAkquiDat$
         codepr.AKQTMP = codepr.GAkquiDat$
         dauer.AKQTMP = dauer.GAkquiDat$
         DME.AKQTMP = dme.GAkquiDat$
         STORE FILE "AKQTMP"
         UNLOCK CURRENT FILE "akqtmp"
       NEXT i%
       cdir$ = DIRECTORY 
       DIRECTORY _netpath$ + "OFFICE"
       CALL ORep("TERMINE2")
       HEADING 
       SET REPORT PAGE "H_PAGE"
       OUTPUT REPORT PAGE 
       END HEADING 
       AFTER SELECT 
       SET REPORT PAGE "F_SELECT"
       OUTPUT REPORT PAGE 
       END SELECT 
       SET QUERY ON 
       SET QUERY LOCK ON 
       Ueberschr$ = "TerminÅbersicht Åber " + tart$ + " von: " + von$ + " bis: " + bis$ + " fÅr Mitarbeiter: " + ma$ + " und Aktion: " + ak$
       ON ERROR GOTO TD010420001
       SELECT ;
       WHERE codeak.AKQTMP = codeak.aktionen AND CodeKU.AKQTMP = CodeKU.ADRESSEN
       ORDER Termin.AKQTMP,Uhrzeit.AKQTMP
       TO ASK 
       END SELECT 
TD010420001: 
       ON ERROR GOTO ErrorHandler
       DIRECTORY cdir$
       MOUSE ON 

     END IF 

     IF req% = 3 THEN 
       CALL TagestExp(Termine$(),tfound%)
     END IF 
     REM markierte erledigen
     IF req% = 4 THEN 
       i% = 0
       MOUSE OFF 
       WHILE Auswahl$(i%) <> ""
         _cuaq% = VAL ( RIGHT$ (Auswahl$(i%),6))
         SELECT KEY _cuaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         erledigt_Termin.GAkquiDat$ = "j"
         CALL QuickStore(GAkquiDat$)
         MOUSE OFF 
         i% = i% + 1
       WEND 
       MOUSE ON 
       FOR a% = 0 TO tfound% - 1
         Termine$(a%) = ""
       NEXT a%
       CALL Fehler("Termin(e) wurden als erledigt gekennzeichnet","")
       GOTO A060420001
     END IF 
   ELSE 
     CALL Fehler("Es wurden keine Termine gefunden, die den Auswahlkriterien entsprachen!","")
   END IF 
 END IF 
e060420001: 
 MOUSE ON 
 END SUB 

SUB TagestExp(Termine$(),tfound%)
 bez% = 1
   IF RECCOUNT (GAkquiDat$) < 23000 THEN 
     DIM Termine1$( RECCOUNT (GAkquiDat$))
   ELSE 
     DIM Termine1$(23000)
   END IF 
   tfound1% = 0
 IF disabled%(GAkquiDat$) THEN END SUB 
 IF NOT AQFileOK%() THEN END SUB 
 IF title$ LIKE "*FACTURA*" OR title$ LIKE "*price*" THEN 
   CALL Fehler("Funktion wird in dieser Programm-Version nicht unterstÅtzt!","")
   END SUB 
 END IF 
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(2,"OFFICE\connect" + _fpw$)
 _continue% = 1
 bezug% = bez%
 SET STATUS "Erzeuge Tagestermindatei fÅr den aktuellen Mitarbeiter"
 MOUSE OFF 
  
   CALL Server("LISTBOXINIT","TagesÅbersicht Mitarbeiter")
   cuaqtmp% = cuaq%
   MOUSE OFF 
   datum$ = TODAY 
   bezug% = 1
   IF bezug% = 1 THEN 
     tfound1% = 0
     INDEX QuickCodeMAZ.GAkquiDat$
     scode$ = DATE$ ( DAYS (datum$),"0dmmyyyy") + STR$ (_vcodema%,"000000")
     SELECT FIRST 
     SELECT KEY scode$
     REM CALL Fehler("Test","")
     IF EXISTS ("c:\termtmp.ini") THEN DELETE "c:\termtmp.ini"
     OPEN "c:\termtmp.ini" FOR OUTPUT 
     ? FN ansi("Termine fÅr den Mitarbeiter ") + FN ansi(Vorname.supervis) + " " + FN ansi(nachname.supervis) + FN ansi(" fÅr den ") + DATE$ ( DAYS (datum$),"0d.mm.yyyy")
     ? " "
     ? "Uhrzeit/Dauer"
     ? "-----------------------------------------------------------------------------------------------------------------------------------------------------------------------"
     FOR i% = 0 TO tfound%
       _cuaq% = VAL ( RIGHT$ (Termine$(i%),6))
      SELECT KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
     codeku% = codeku.GAkquiDat$
     SELECT FIRST FILE "Adressen" INDEX codeku.adressen
     SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
     IF ergebnis.GAkquiDat$ = "" THEN 
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + TRIM$ (nachname.adressen) + "," + TRIM$ (Vorname.adressen) + ", " + notiz.GAkquiDat$
     ELSE 
       ab$ = CHR$ (13) + CHR$ (10) + "NOTIZ: " + notiz.GAkquiDat$ + CHR$ (13) + CHR$ (10) + "ERGEBNIS: " + ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10)
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + TRIM$ (nachname.adressen) + "," + TRIM$ (Vorname.adressen) + ab$
     END IF 
     SET STATUS LEFT$ (entry$,50)
       ? FN ansi(entry$)
       Termine1$(tfound%) = entry$
       tfound1% = tfound1% + 1
       REM CALL Server("LISTBOXADD",entry$)
       REM tfound% = tfound% + 1
     NEXT i%
     ? " "
     ? " "
     ? FN ansi("Ende der TerminÅbersicht")
  
     CLOSE OUTPUT 
     Termine$(tfound%) = ""
     caption$ = "Termine auf den Mitarbeiter bezogen"
   END IF 

     ww% = 1
     i% = 0
     MOUSE OFF 
     WHILE NOT EXISTS ("c:\termtmp.ini") AND i% < 9990000
       i% = i% + 1
       IF i% = 10000 THEN 
         REQUEST "Die zu erstellende Datei c:\termtmp.ini wurde nicht gefunden!","Soll der Versuch Sie zu îffnen abgebrochen werden?",130,req%
         IF req% = 1 THEN 
           i% = 9991000
           ww% = 0
         END IF 
       END IF 
     WEND 
     MOUSE ON 
     IF EXISTS ("c:\termtmp.ini") AND ww% > 0 THEN CALL "notepad.exe c:\termtmp.ini"
   ELSE 
     SET STATUS "Bereit"
     CALL Fehler("Es wurden keine Tagstermine fÅr den aktuellen Mitarbeiter gefunden !","")
   END IF 
 
 
ttend230498: 
 SET STATUS ""
 END SUB 
 
 

SUB TagestExp1(Termine1$(),tfound1%)
 bez% = 1
   IF RECCOUNT (GAkquiDat$) < 23000 THEN 
     DIM Termine$( RECCOUNT (GAkquiDat$))
   ELSE 
     DIM Termine$(23000)
   END IF 
   tfound1% = 0
 IF disabled%(GAkquiDat$) THEN END SUB 
 IF NOT AQFileOK%() THEN END SUB 
 IF title$ LIKE "*FACTURA*" OR title$ LIKE "*price*" THEN 
   CALL Fehler("Funktion wird in dieser Programm-Version nicht unterstÅtzt!","")
   END SUB 
 END IF 
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(2,"OFFICE\connect" + _fpw$)
 _continue% = 1
 bezug% = bez%
 SET STATUS "Erzeuge Tagestermindatei fÅr den aktuellen Mitarbeiter"
 MOUSE OFF 
  
   CALL Server("LISTBOXINIT","TagesÅbersicht Mitarbeiter")
   cuaqtmp% = cuaq%
   MOUSE OFF 
   datum$ = TODAY 
   bezug% = 1
   IF bezug% = 1 THEN 
     tfound1% = 0
     INDEX QuickCodeMAZ.GAkquiDat$
     scode$ = DATE$ ( DAYS (datum$),"0dmmyyyy") + STR$ (_vcodema%,"000000")
     SELECT FIRST 
     SELECT KEY scode$
     REM CALL Fehler("Test","")
     IF EXISTS ("c:\termtmp.ini") THEN DELETE "c:\termtmp.ini"
     OPEN "c:\termtmp.ini" FOR OUTPUT 
     ? FN ansi("Termine fÅr den Mitarbeiter ") + FN ansi(Vorname.supervis) + " " + FN ansi(nachname.supervis) + FN ansi(" fÅr den ") + DATE$ ( DAYS (datum$),"0d.mm.yyyy")
     ? " "
     ? "Uhrzeit/Dauer"
     ? "-----------------------------------------------------------------------------------------------------------------------------------------------------------------------"
     FOR i% = 0 TO tfound1%
       _cuaq% = VAL ( RIGHT$ (Termine1$(i%),6))
      SELECT KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
     codeku% = codeku.GAkquiDat$
     SELECT FIRST FILE "Adressen" INDEX codeku.adressen
     SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
     IF ergebnis.GAkquiDat$ = "" THEN 
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + TRIM$ (nachname.adressen) + "," + TRIM$ (Vorname.adressen) + ", " + notiz.GAkquiDat$
     ELSE 
       ab$ = CHR$ (13) + CHR$ (10) + "NOTIZ: " + notiz.GAkquiDat$ + CHR$ (13) + CHR$ (10) + "ERGEBNIS: " + ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10)
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + TRIM$ (nachname.adressen) + "," + TRIM$ (Vorname.adressen) + ab$
     END IF 
     SET STATUS LEFT$ (entry$,50)
       ? FN ansi(entry$)
       Termine$(tfound1%) = entry$
       tfound% = tfound% + 1
       REM CALL Server("LISTBOXADD",entry$)
       REM tfound% = tfound% + 1
     NEXT i%
     ? " "
     ? " "
     ? FN ansi("Ende der TerminÅbersicht")
  
     CLOSE OUTPUT 
     Termine$(tfound1%) = ""
     caption$ = "Termine auf den Mitarbeiter bezogen"
   END IF 
 
     ww% = 1
     i% = 0
     MOUSE OFF 
     WHILE NOT EXISTS ("c:\termtmp.ini") AND i% < 9990000
       i% = i% + 1
       IF i% = 10000 THEN 
         REQUEST "Die zu erstellende Datei c:\termtmp.ini wurde nicht gefunden!","Soll der Versuch Sie zu îffnen abgebrochen werden?",130,req%
         IF req% = 1 THEN 
           i% = 9991000
           ww% = 0
         END IF 
       END IF 
     WEND 
     MOUSE ON 
     IF EXISTS ("c:\termtmp.ini") AND ww% > 0 THEN CALL "notepad.exe c:\termtmp.ini"
   ELSE 
     SET STATUS "Bereit"
     CALL Fehler("Es wurden keine Tagstermine fÅr den aktuellen Mitarbeiter gefunden !","")
   END IF 
   SET STATUS ""
 END SUB 
 


SUB AdrGlobalSuch()
 
 
    DIM dlg AS Dialog
    DIM control AS DialogControl
    
    
AnfSuAdr180998:   
   adrglob% = 0
    Superbase.Dialogs.Add("ADRCON1")
    SET dlg = Superbase.Dialogs.ADRCON1
    dlg.Move(0,0,360,242)
    dlg.Caption = "Projektsuche"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(0,0,360,221)
    control.Caption = ""
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(2,11,240,11)
    control.Caption = "Tragen Sie hier die einzelnen Suchbegriffe in die zugehîrigen Felder ein!"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(2,23,60,10)
    control.Caption = "Kundennummer"
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(77,23,136,10)
    control.ScrollEnable = 2
    control.MaxLength = 20
    control.TextBinding = "Projektnummer$"
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(2,35,60,11)
    control.Caption = "Nachname/FIRMA"
 
    SET control = dlg.Add("DialogTextBox2","DialogTextBox")
    control.Move(77,35,136,11)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "name1$"
 
    SET control = dlg.Add("DialogTextBox3","DialogTextBox")
    control.Move(77,46,136,11)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "name3$"
 
    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(2,47,60,10)
    control.Caption = "Vorname/ZUSATZ"
 
    SET control = dlg.Add("DialogLabel5","DialogLabel")
    control.Move(2,59,60,11)
    control.Caption = "Geburtsname/z.H."
 
    SET control = dlg.Add("DialogTextBox4","DialogTextBox")
    control.Move(77,59,136,11)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "name2$"

    SET control = dlg.Add("DialogLabel6","DialogLabel")
    control.Move(2,71,50,10)
    control.Caption = "Stra·e"
 
    SET control = dlg.Add("DialogTextBox5","DialogTextBox")
    control.Move(77,71,136,10)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "Strasse$"
 
    SET control = dlg.Add("DialogTextBox6","DialogTextBox")
    control.Move(77,83,136,11)
    control.ScrollEnable = 2
    control.MaxLength = 8
    control.TextBinding = "PLZ$"
 
    SET control = dlg.Add("DialogLabel7","DialogLabel")
    control.Move(2,84,50,11)
    control.Caption = "PLZ"
 
    SET control = dlg.Add("DialogTextBox7","DialogTextBox")
    control.Move(77,95,136,10)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "Ort$"
 
    SET control = dlg.Add("DialogLabel8","DialogLabel")
    control.Move(2,97,50,11)
    control.Caption = "Ort"
 
    SET control = dlg.Add("DialogTextBox8","DialogTextBox")
    control.Move(77,107,136,11)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "Land$"
 
    SET control = dlg.Add("DialogLabel9","DialogLabel")
    control.Move(2,108,48,11)
    control.Caption = "Land"
 
    SET control = dlg.Add("DialogLabel10","DialogLabel")
    control.Move(2,119,48,10)
    control.Caption = "Stadtteil"
 
    SET control = dlg.Add("DialogTextBox9","DialogTextBox")
    control.Move(77,119,136,10)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "Stadtteil$"
 
    SET control = dlg.Add("DialogLabel11","DialogLabel")
    control.Move(2,132,59,11)
    control.Caption = "Kunde seit von"
 
    SET control = dlg.Add("DialogTextBox10","DialogTextBox")
    control.Move(77,132,40,10)
    control.MaxLength = 10
    control.TextBinding = "Projektstart$"
 
    SET control = dlg.Add("DialogTextBox11","DialogTextBox")
    control.Move(146,132,40,11)
    control.MaxLength = 10
    control.TextBinding = "Projektstart2$"
 
    SET control = dlg.Add("DialogLabel12","DialogLabel")
    control.Move(126,134,20,11)
    control.Caption = "bis"
 
    SET control = dlg.Add("DialogLabel13","DialogLabel")
    control.Move(2,147,59,11)
    control.Caption = "Notiz"
 
    SET control = dlg.Add("DialogTextBox12","DialogTextBox")
    control.Move(77,147,57,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Notiz1$"
 
    SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
    control.Move(137,147,47,11)
    control.Caption = "Und/Oder"
    control.Bind("noder0%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogTextBox15","DialogTextBox")
    control.Move(186,147,58,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Notiz2$"
 
    SET control = dlg.Add("DialogCheckBox2","DialogCheckBox")
    control.Move(250,147,46,11)
    control.Caption = "Und/Oder"
    control.Bind("noder1%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogTextBox16","DialogTextBox")
    control.Move(298,147,56,13)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Notiz3$"
 
    SET control = dlg.Add("DialogTextBox13","DialogTextBox")
    control.Move(77,161,57,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Stichwort1$"
 
    SET control = dlg.Add("DialogCheckBox3","DialogCheckBox")
    control.Move(137,161,47,11)
    control.Caption = "Und/Oder"
    control.Bind("sticho0%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogTextBox17","DialogTextBox")
    control.Move(186,161,56,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Stichwort2$"
 
    SET control = dlg.Add("DialogCheckBox4","DialogCheckBox")
    control.Move(250,161,46,11)
    control.Caption = "Und/Oder"
    control.Bind("sticho1%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogTextBox18","DialogTextBox")
    control.Move(298,161,56,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Stichwort3$"
 
    SET control = dlg.Add("DialogLabel14","DialogLabel")
    control.Move(2,161,59,11)
    control.Caption = "Stichwort"
 
    SET control = dlg.Add("DialogTextBox14","DialogTextBox")
    control.Move(77,174,57,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "ADRStatus1$"
 
    SET control = dlg.Add("DialogTextBox19","DialogTextBox")
    control.Move(186,174,56,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "ADRStatus2$"
 
    SET control = dlg.Add("DialogTextBox20","DialogTextBox")
    control.Move(298,174,56,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "ADRStatus3$"
 
    SET control = dlg.Add("DialogCheckBox5","DialogCheckBox")
    control.Move(137,176,47,11)
    control.Caption = "Und/Oder"
    control.Bind("adro0%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogCheckBox6","DialogCheckBox")
    control.Move(250,176,46,11)
    control.Caption = "Und/Oder"
    control.Bind("adro1%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogLabel15","DialogLabel")
    control.Move(2,177,59,11)
    control.Caption = "Adress-Status"
 

    REM ********************
 
    SET control = dlg.Add("DialogTextBox41","DialogTextBox")
    control.Move(77,187,57,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "ADRGruppe1$"
 
    SET control = dlg.Add("DialogTextBox42","DialogTextBox")
    control.Move(186,187,56,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "ADRGruppe2$"
 
    SET control = dlg.Add("DialogTextBox43","DialogTextBox")
    control.Move(298,187,56,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "ADRGruppe3$"
 
    SET control = dlg.Add("DialogCheckBox44","DialogCheckBox")
    control.Move(137,189,47,11)
    control.Caption = "Und/Oder"
    control.Bind("adrgr0%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogCheckBox45","DialogCheckBox")
    control.Move(250,189,46,11)
    control.Caption = "Und/Oder"
    control.Bind("adrgr1%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogLabel46","DialogLabel")
    control.Move(2,190,59,11)
    control.Caption = "Adress-Gruppe"
    REM ***********************

    SET control = dlg.Add("DialogLabel16","DialogLabel")
    control.Move(93,210,233,11)
    control.Caption = "ein Kreuz in der Checkbox bedeutet UND, kein Kreuz ODER"


    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(106,226,56,15)
    control.Default = 1
    control.Caption = "&OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(165,226,54,14)
    control.Caption = "&Abbrechen"
    control.ReturnValue = 0
    control.Cancel = 1
   DIALOG "ADRCON1",reqsu%
   REMOVE DIALOG "ADRCON1"
 notiz% = 0
 IF reqsu% <> 1 THEN END SUB 
 suna1$ = "J"
 MOUSE OFF 
 IF projektnummer$ <> "" THEN 
   suna$ = projektnummer$
   feld$ = "Kundennummer.adressen"
 ELSE 
   IF name1$ <> "" THEN 
     suna$ = VSNRPack$(name1$)
     feld$ = "QNachname.adressen"
   ELSE 
     IF name2$ <> "" THEN 
       suna$ = VSNRPack$(name2$)
       feld$ = "QVorname.adressen"
     ELSE 
       IF name3$ <> "" THEN 
         suna$ = VSNRPack$(name3$)
         feld$ = "QGeburtsname.adressen"
       ELSE 
         IF strasse$ <> "" THEN 
           suna$ = VSNRPack$(strasse$)
           feld$ = "Qstra·e.adressen"
         ELSE 
           IF plz$ <> "" THEN 
             suna$ = VSNRPack$(plz$)
             feld$ = "Qplz.adressen"
           ELSE 
             IF ort$ <> "" THEN 
               suna$ = VSNRPack$(ort$)
               feld$ = "Qort.adressen"
             ELSE 
               IF land$ <> "" THEN 
                 suna$ = land$
                 feld$ = "land.adressen"
               ELSE 
                 IF Stadtteil$ <> "" THEN 
                   suna$ = stadtteil$
                   REM feld$ = "Stadtteil.project"
                 ELSE 
                   IF projektstart$ <> "" OR projektstart2$ <> "" THEN 
                     suna$ = projektstart$
                     feld$ = "Kunde_seit.adressen"
                   ELSE 
                     IF LTRIM$ (adrstatus1$) <> "" THEN 
                       suna$ = ADRSTATUS1$
                       feld$ = "ADRSTATUS.adressen"
                     ELSE 
                       IF LTRIM$ (Stichwort1$) <> "" THEN 
                         notiz% = - 1
                         suna$ = Stichwort1$
                         feld$ = "Stichwort.adressen"
                       ELSE 
                         IF LTRIM$ (ADRGruppe1$) <> "" THEN 
                           notiz% = - 1
                           suna$ = ADRGruppe1$
                           feld$ = "ADRGruppe.adressen"
                         ELSE 

                         END IF 
                       END IF 
                     END IF 
                   END IF 
                 END IF 
               END IF 
             END IF 
           END IF 
         END IF 
       END IF 
     END IF 
   END IF 
 END IF 
 FILE "Adressen"
 REM 150699
 IF feld$ = "" THEN GOTO endadr180998
 INDEX feld$$
 SELECT FIRST 
 datind$ = "FALSE"
 datind1$ = "FALSE"
 IF feld$ LIKE "Kunde_seit*" THEN 
   IF projektstart$ <> "" OR projektstart2$ <> "" THEN 
      
     IF projektstart$ = "" THEN projektstart$ = "1.1.0001"
     IF projektstart2$ = "" THEN projektstart2$ = "31.12.2999"
     IF DateOK%(projektstart$) THEN 
       datind$ = "TRUE"
     ELSE 
       GOTO AnfSuAdr180998
     END IF 
     IF projektstart2$ <> "" THEN 
       IF DateOK%(projektstart2$) THEN 
         datind1$ = "TRUE"
       ELSE 
         GOTO AnfSuAdr180998
       END IF 
     END IF 
   END IF 
 END IF 

 IF notiz% <> - 1 THEN 
   IF datind$ <> "TRUE" THEN 
     SELECT KEY suna$ INDEX feld$$
   ELSE 
     suna% = DAYS (suna$)
     SELECT KEY suna% INDEX feld$$
   END IF 
 END IF 
 REM suna$ = suna$ + "*"
 SET STATUS "Adresssuche lÑuft..."
 a% = 0
 REDIM AdrFound$( RECCOUNT ("adressen"),1)
 REDIM AdrFound$( RECCOUNT ("adressen"))
 b% = RECCOUNT ("adressen")
 REM CALL Fehler("","")
 i% = 0
 adrfound% = 1
 projektstart% = suna%
 projektstart2% = DAYS (projektstart2$)
 j% = RECCOUNT ("adressen")

 IF GCODIE% = - 1 THEN 
   CALL SearchInitADR()
 END IF 

 IF datind$ <> "TRUE" AND notiz% <> - 1 AND (suna$ = "" OR suna$ = "*") THEN WHILE NOT EOF ("adressen")
 IF datind$ <> "TRUE" AND notiz% <> - 1 AND suna$ <> "" AND suna$ <> "*" THEN WHILE feld$$ LIKE suna$ + "*" AND NOT EOF ("adressen")
 IF datind$ = "TRUE" AND datind1$ = "FALSE" AND notiz% <> - 1 THEN WHILE feld$$ = DAYS (projektstart$) AND NOT EOF ("adressen")
 IF datind$ = "TRUE" AND datind1$ = "TRUE" AND notiz% <> - 1 THEN WHILE feld$$ >= projektstart% AND feld$$ <= projektstart2% + 1 AND NOT EOF ("adressen")
 IF notiz% = - 1 THEN WHILE NOT EOF ("ADRESSEN")
   i% = i% + 1
   test$ = nachname.adressen
   IF LTRIM$ (notiz1$) <> "" THEN 
     IF LTRIM$ (notiz2$) <> "" THEN 
       IF LTRIM$ (notiz3$) <> "" THEN 
         IF RIGHT$ (notiz1$,1) <> "*" THEN notiz1$ = notiz1$ + "*"
         IF RIGHT$ (notiz2$,1) <> "*" THEN notiz2$ = notiz2$ + "*"
         IF RIGHT$ (notiz3$,1) <> "*" THEN notiz3$ = notiz3$ + "*"
         IF noder0% = 1 AND noder1% = 1 THEN 
           IF (notiz.adressen LIKE notiz1$ OR notiz.adressen LIKE "*" + notiz1$) AND (notiz.adressen LIKE notiz2$ OR notiz.adressen LIKE "*" + notiz2$) AND (notiz.adressen LIKE notiz3$ OR notiz.adressen LIKE "*" + notiz3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF noder0% = 1 AND noder1% = 0 THEN 
           IF (notiz.adressen LIKE notiz1$ OR notiz.adressen LIKE "*" + notiz1$) AND (notiz.adressen LIKE notiz2$ OR notiz.adressen LIKE "*" + notiz2$) OR (notiz.adressen LIKE notiz3$ OR notiz.adressen LIKE "*" + notiz3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF noder0% = 0 AND noder1% = 1 THEN 
           IF (notiz.adressen LIKE notiz1$ OR notiz.adressen LIKE "*" + notiz1$) OR (notiz.adressen LIKE notiz2$ OR notiz.adressen LIKE "*" + notiz2$) AND (notiz.adressen LIKE notiz3$ OR notiz.adressen LIKE "*" + notiz3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF noder0% = 0 AND noder1% = 0 THEN 
           IF (notiz.adressen LIKE notiz1$ OR notiz.adressen LIKE "*" + notiz1$) OR (notiz.adressen LIKE notiz2$ OR notiz.adressen LIKE "*" + notiz2$) OR (notiz.adressen LIKE notiz3$ OR notiz.adressen LIKE "*" + notiz3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       ELSE 
         IF RIGHT$ (notiz1$,1) <> "*" THEN notiz1$ = notiz1$ + "*"
         IF RIGHT$ (notiz2$,1) <> "*" THEN notiz2$ = notiz2$ + "*"
         IF noder0% = 1 THEN 
           REM UND
           IF (notiz.adressen LIKE notiz1$ OR notiz.adressen LIKE "*" + notiz1$) AND (notiz.adressen LIKE notiz2$ OR notiz.adressen LIKE "*" + notiz2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         ELSE 
           REM ODER
           IF (notiz.adressen LIKE notiz1$ OR notiz.adressen LIKE "*" + notiz1$) OR (notiz.adressen LIKE notiz2$ OR notiz.adressen LIKE "*" + notiz2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       END IF 
     ELSE 
       IF RIGHT$ (notiz1$,1) <> "*" THEN notiz1$ = notiz1$ + "*"
         IF notiz.adressen LIKE notiz1$ OR notiz.adressen LIKE "*" + notiz1$ THEN 
         ELSE 
          adrfound% = 0
       END IF 
     END IF 
   END IF 


   IF LTRIM$ (Stichwort1$) <> "" THEN 
     S1$ = Stichwort1$
     S2$ = Stichwort2$
     S3$ = Stichwort3$
     IF LTRIM$ (Stichwort2$) <> "" THEN 
       IF LTRIM$ (Stichwort3$) <> "" THEN 
         IF RIGHT$ (Stichwort1$,1) <> "*" THEN S1$ = Stichwort1$ + "*"
         IF RIGHT$ (Stichwort2$,1) <> "*" THEN S2$ = Stichwort2$ + "*"
         IF RIGHT$ (Stichwort3$,1) <> "*" THEN S3$ = Stichwort3$ + "*"
         IF sticho0% = 1 AND sticho1% = 1 THEN 
           IF (Stichwort.adressen LIKE S1$ OR Stichwort.adressen LIKE "*" + S1$) AND (Stichwort.adressen LIKE S2$ OR Stichwort.adressen LIKE "*" + S2$) AND (Stichwort.adressen LIKE S3$ OR Stichwort.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF sticho0% = 1 AND sticho1% = 0 THEN 
           IF (Stichwort.adressen LIKE S1$ OR Stichwort.adressen LIKE "*" + S1$) AND (Stichwort.adressen LIKE S2$ OR Stichwort.adressen LIKE "*" + S2$) OR (Stichwort.adressen LIKE S3$ OR Stichwort.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF sticho0% = 0 AND sticho1% = 1 THEN 
           IF (Stichwort.adressen LIKE S1$ OR Stichwort.adressen LIKE "*" + S1$) OR (Stichwort.adressen LIKE S2$ OR Stichwort.adressen LIKE "*" + S2$) AND (Stichwort.adressen LIKE S3$ OR Stichwort.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF sticho0% = 0 AND sticho1% = 0 THEN 
           IF (Stichwort.adressen LIKE S1$ OR Stichwort.adressen LIKE "*" + S1$) OR (Stichwort.adressen LIKE S2$ OR Stichwort.adressen LIKE "*" + S2$) OR (Stichwort.adressen LIKE S3$ OR Stichwort.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       ELSE 
         IF RIGHT$ (Stichwort1$,1) <> "*" THEN S1$ = Stichwort1$ + "*"
         IF RIGHT$ (Stichwort2$,1) <> "*" THEN S2$ = Stichwort2$ + "*"
         IF sticho0% = 1 THEN 
           REM UND
           IF (Stichwort.adressen LIKE S1$ OR Stichwort.adressen LIKE "*" + S1$) AND (Stichwort.adressen LIKE S2$ OR Stichwort.adressen LIKE "*" + S2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         ELSE 
           REM ODER
           IF (Stichwort.adressen LIKE S1$ OR Stichwort.adressen LIKE "*" + S1$) OR (Stichwort.adressen LIKE S2$ OR Stichwort.adressen LIKE "*" + S2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       END IF 
     ELSE 
       IF RIGHT$ (Stichwort1$,1) <> "*" THEN S1$ = Stichwort1$ + "*"
         IF Stichwort.adressen LIKE S1$ OR Stichwort.adressen LIKE "*" + S1$ THEN 
         ELSE 
          adrfound% = 0
       END IF 
     END IF 
   END IF 

   IF LTRIM$ (ADRStatus1$) <> "" THEN 
     S1$ = ADRStatus1$
     S2$ = ADRStatus2$
     S3$ = ADRStatus3$
     IF LTRIM$ (ADRStatus2$) <> "" THEN 
       IF LTRIM$ (ADRStatus3$) <> "" THEN 
         IF RIGHT$ (ADRStatus1$,1) <> "*" THEN S1$ = ADRStatus1$ + "*"
         IF RIGHT$ (ADRStatus2$,1) <> "*" THEN S2$ = ADRStatus2$ + "*"
         IF RIGHT$ (ADRStatus3$,1) <> "*" THEN S3$ = ADRStatus3$ + "*"
         IF adro0% = 1 AND adro1% = 1 THEN 
           IF (ADRStatus.adressen LIKE S1$ OR ADRStatus.adressen LIKE "*" + S1$) AND (ADRStatus.adressen LIKE S2$ OR ADRStatus.adressen LIKE "*" + S2$) AND (ADRStatus.adressen LIKE S3$ OR ADRStatus.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF adro0% = 1 AND adro1% = 0 THEN 
           IF (ADRStatus.adressen LIKE S1$ OR ADRStatus.adressen LIKE "*" + S1$) AND (ADRStatus.adressen LIKE S2$ OR ADRStatus.adressen LIKE "*" + S2$) OR (ADRStatus.adressen LIKE S3$ OR ADRStatus.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF adro0% = 0 AND adro1% = 1 THEN 
           IF (ADRStatus.adressen LIKE S1$ OR ADRStatus.adressen LIKE "*" + S1$) OR (ADRStatus.adressen LIKE S2$ OR ADRStatus.adressen LIKE "*" + S2$) AND (ADRStatus.adressen LIKE S3$ OR ADRStatus.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF adro0% = 0 AND adro1% = 0 THEN 
           IF (ADRStatus.adressen LIKE S1$ OR ADRStatus.adressen LIKE "*" + S1$) OR (ADRStatus.adressen LIKE S2$ OR ADRStatus.adressen LIKE "*" + S2$) OR (ADRStatus.adressen LIKE S3$ OR ADRStatus.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       ELSE 
         IF RIGHT$ (ADRStatus1$,1) <> "*" THEN S1$ = ADRStatus1$ + "*"
         IF RIGHT$ (ADRStatus2$,1) <> "*" THEN S2$ = ADRStatus2$ + "*"
         IF adro0% = 1 THEN 
           REM UND
           IF (ADRStatus.adressen LIKE S1$ OR ADRStatus.adressen LIKE "*" + S1$) AND (ADRStatus.adressen LIKE S2$ OR ADRStatus.adressen LIKE "*" + S2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         ELSE 
           REM ODER
           IF (ADRStatus.adressen LIKE S1$ OR ADRStatus.adressen LIKE "*" + S1$) OR (ADRStatus.adressen LIKE S2$ OR ADRStatus.adressen LIKE "*" + S2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       END IF 
     ELSE 
       IF RIGHT$ (ADRStatus1$,1) <> "*" THEN S1$ = ADRStatus1$ + "*"
         IF ADRStatus.adressen LIKE S1$ OR ADRStatus.adressen LIKE "*" + S1$ THEN 
         ELSE 
          adrfound% = 0
       END IF 
     END IF 
   END IF 
 
 REM **************************************************

   IF LTRIM$ (ADRGruppe1$) <> "" THEN 
     S1$ = ADRGruppe1$
     S2$ = ADRGruppe2$
     S3$ = ADRGruppe3$
     IF LTRIM$ (ADRGruppe2$) <> "" THEN 
       IF LTRIM$ (ADRGruppe3$) <> "" THEN 
         IF RIGHT$ (ADRGruppe1$,1) <> "*" THEN S1$ = ADRGruppe1$ + "*"
         IF RIGHT$ (ADRGruppe2$,1) <> "*" THEN S2$ = ADRGruppe2$ + "*"
         IF RIGHT$ (ADRGruppe3$,1) <> "*" THEN S3$ = ADRGruppe3$ + "*"
         IF adrgr0% = 1 AND adrgr1% = 1 THEN 
           IF (ADRGruppe.adressen LIKE S1$ OR ADRGruppe.adressen LIKE "*" + S1$) AND (ADRGruppe.adressen LIKE S2$ OR ADRGruppe.adressen LIKE "*" + S2$) AND (ADRGruppe.adressen LIKE S3$ OR ADRGruppe.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF adrgr0% = 1 AND adrgr1% = 0 THEN 
           IF (ADRGruppe.adressen LIKE S1$ OR ADRGruppe.adressen LIKE "*" + S1$) AND (ADRGruppe.adressen LIKE S2$ OR ADRGruppe.adressen LIKE "*" + S2$) OR (ADRGruppe.adressen LIKE S3$ OR ADRGruppe.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF adrgr0% = 0 AND adrgr1% = 1 THEN 
           IF (ADRGruppe.adressen LIKE S1$ OR ADRGruppe.adressen LIKE "*" + S1$) OR (ADRGruppe.adressen LIKE S2$ OR ADRGruppe.adressen LIKE "*" + S2$) AND (ADRGruppe.adressen LIKE S3$ OR ADRGruppe.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF adrgr0% = 0 AND adrgr1% = 0 THEN 
           IF (ADRGruppe.adressen LIKE S1$ OR ADRGruppe.adressen LIKE "*" + S1$) OR (ADRGruppe.adressen LIKE S2$ OR ADRGruppe.adressen LIKE "*" + S2$) OR (ADRGruppe.adressen LIKE S3$ OR ADRGruppe.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       ELSE 
         IF RIGHT$ (ADRGruppe1$,1) <> "*" THEN S1$ = ADRGruppe1$ + "*"
         IF RIGHT$ (ADRGruppe2$,1) <> "*" THEN S2$ = ADRGruppe2$ + "*"
         IF adrgr0% = 1 THEN 
           REM UND
           IF (ADRGruppe.adressen LIKE S1$ OR ADRGruppe.adressen LIKE "*" + S1$) AND (ADRGruppe.adressen LIKE S2$ OR ADRGruppe.adressen LIKE "*" + S2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         ELSE 
           REM ODER
           IF (ADRGruppe.adressen LIKE S1$ OR ADRGruppe.adressen LIKE "*" + S1$) OR (ADRGruppe.adressen LIKE S2$ OR ADRGruppe.adressen LIKE "*" + S2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       END IF 
     ELSE 
       IF RIGHT$ (ADRGruppe1$,1) <> "*" THEN S1$ = ADRGruppe1$ + "*"
         IF ADRGruppe.adressen LIKE S1$ OR ADRGruppe.adressen LIKE "*" + S1$ THEN 
         ELSE 
          adrfound% = 0
       END IF 
     END IF 
   END IF 
 
 

 REM ******************ADRGruppe ENDE********************************

   IF projektnummer$ <> "" THEN 
     IF kundennummer LIKE projektnummer$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF name1$ <> "" THEN 
     IF Nachname.adressen LIKE name1$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
 
   IF name2$ <> "" THEN 
     IF Vorname LIKE name2$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF name3$ <> "" THEN 
     IF Geburtsname LIKE name3$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF strasse$ <> "" THEN 
     IF stra·e LIKE strasse$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF plz$ <> "" THEN 
     IF plz LIKE plz$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF ort$ <> "" THEN 
     IF ort LIKE ort$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF land$ <> "" THEN 
     IF land LIKE land$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF projektstart$ <> "" OR projektstart2$ <> "" THEN 
     IF projektstart$ = "" THEN projektstart$ = "01.01.0001"
     IF projektstart2$ = "" THEN projektstart2$ = "31.12.2999"
     projektstart% = DAYS (projektstart$)
     projektstart2% = DAYS (projektstart2$)
     IF DateOK%(projektstart$) THEN 
       IF DateOK%(projektstart$) THEN 
         IF Kunde_seit >= projektstart% AND Kunde_seit <= projektstart2% THEN 
         ELSE 
           adrfound% = 0
         END IF 
       ELSE 
         GOTO AnfSuAdr180998
       END IF 
     ELSE 
       GOTO AnfSuAdr180998
     END IF 
   END IF 
   IF adrfound% = 1 THEN 
     codeku% = codeku.adressen
     REM 141199
     GTelDat$ = "TELEFON"
     IF GCODIE% = - 1 THEN 
       CALL SearchVorbAdr("ADRESSEN")
     END IF 
     AdrFound1$ = LTRIM$ (nachname)
     IF LTRIM$ (vorname) <> "" THEN AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (vorname)
     AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (Kundennummer) + "/" + LTRIM$ (ort) + ", " + LTRIM$ (PLZ) + ", " + LTRIM$ (Stra·e) + ", "
     REM FILE "project"
     AdrFound$(a%) = AdrFound1$ + SPACE$ (120) + STR$ (codeku,"000000")
     a% = a% + 1
             IF EXISTS (codeku%,codeku.telefon) THEN 
               FILE "telefon"
               SELECT FIRST 
               SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
               WHILE NOT EOF ("telefon") AND codeku.telefon = codeku%
                 AdrFound1$ = AdrFound1$ + LTRIM$ (nummer.telefon) + ","
                 GTELDAT$ = "TELEFON"
                 IF _projekt$ <> "WAWI" THEN CALL SearchVorbTel("ADRESSEN")
               SELECT NEXT FILE "Telefon" INDEX codeku.telefon
               WEND 
             END IF 
           IF GCODIE% = - 1 THEN 
             ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
           END IF 

   ELSE 
     adrfound% = 1
   END IF 
   SET STATUS "gefunden:" + STR$ (a%,"999999") + "  in Bearbeitung: Datensatz:" + STR$ (i%,"999999") + " von " + STR$ (j%,"999999") + "durchsucht   " + Nachname.adressen

   MOUSE OFF 
   FILE "ADRESSEN"
   SELECT NEXT FILE "ADRESSEN"
   test$ = Nachname.adressen
   REM SET STATUS Nachname.adressen
 WEND 
 IF a% > 0 THEN 
   LAuswahl$ = AdrFound$(0)
   LAuswahl1$(0) = LAuswahl$
       IF _projekt$ LIKE "PROVIS" THEN 
         MENU 3,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
       ELSE 
         MENU 4,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
       END IF 
   IF GCODIE% = - 1 THEN 
     c$ = "aa"
     req3% = CALL ("_SearchShow",c$)
     REM REQUEST c$,"",2
     REM ret% = CALL ("_SearchClose")
     IF VAL (c$) <> 0 THEN 
       codeku1% = VAL (c$)
       adrglob% = codeku1%
       adrfound% = VAL (c$)
       ok% = 0
       SET STATUS "Adressen gefunden..."
       SELECT FORM KEY codeku1% FILE "adressen" INDEX Codeku.adressen
       SELECT FORM KEY codeku1% FILE "telefon" INDEX Codeku.telefon
       SET INDEX INDEX 
       REM CALL Fehler("","")
       CALL ADRFeldnamen()
       FORM 
       MOUSE ON 
     END IF 
     IF req3% = 2 THEN 
       adrser% = 1
       CALL SerieNeu1(GAdrDat$)
       GOTO endadr180998
     END IF 
   ELSE 
     CREATE DIALOG "ADRLISTE",0,0,440,197,title$,"MS Sans Serif",8
     ADD DIALOG "ADRLISTE",7,5,8,428,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
     ADD DIALOG "ADRLISTE",1,164,174,56,16,1,"&OK",1,1
     ADD DIALOG "ADRLISTE",1,224,174,56,16,0,"&Abbrechen",0,0
     ADD DIALOG "ADRLISTE",1,284,174,56,16,0,"&Serienbrief",3,0
     DIALOG "ADRLISTE",req3%
     MOUSE ON 
     REMOVE DIALOG "ADRLISTE"
     IF req3% = 3 THEN 
       adrser% = 1
       CALL SerieNeu1("ADRESSEN")
       GOTO endadr180998
     END IF 
     IF req3% = 1 THEN 
       LAuswahl$ = LAuswahl1$(0)
       codeku1% = VAL ( RIGHT$ (LAuswahl$,6))
       adrglob% = codeku1%
       adrfound% = VAL ( RIGHT$ (LAuswahl$,6))
       ok% = 0
       SET STATUS "Adressen gefunden..."
       SELECT FORM KEY codeku1% FILE "adressen" INDEX Codeku.adressen
       SELECT FORM KEY codeku1% FILE "telefon" INDEX Codeku.telefon
       SET INDEX INDEX 
       REM CALL Fehler("","")
       CALL ADRFeldnamen()
       FORM 
       MOUSE ON 
     END IF 
   END IF 
 ELSE 
   CALL Fehler ("Es wurden keine Adressen gefunden, die den angegebenen Kriterien entsprechen!","")
   GOTO AnfSuAdr180998
 END IF 
endadr180998: 
 END SUB 
 
 REM Serienbrieferstellung

SUB SerieNeu1(adressen$)
 cudo% = 0
 REM CALL Fehler("Serienbrief","")
 dir$ = DIRECTORY 
 IF OPEN ("adrtemp1") THEN 
   REM CLOSE FILE "ADRTEMP1"
   IF RECCOUNT ("adrtemp1") > 0 THEN REMOVE FROM FILE "adrtemp1"
 ELSE 
   CALL DFile(2,"OFFICE\adrtemp1" + _fpw$)
   IF RECCOUNT ("adrtemp1") > 0 THEN REMOVE FROM FILE "adrtemp1"
 END IF 
 userfile$ = STR$ (CodeMA.supervis,"00000000")
 adrtemp$ = STR$ (CodeMA.supervis,"00000000")
 CALL CreateMailFil1(adrfilt$,adrtemp$)
 REM adressen$ = GAdrDat$
 ansionoff$ = UCASE$ (ReadINI$("SYSTEM","WinWordAnsi"))
 REQUEST "Wollen Sie die öbergabe der Adressen, die fÅr Serienbriefe gesperrt sind","(Adresse/Seite Notiz -> Checkbox) unterdrÅcken?",130,req%
 kw$ = ""
 CALL EMAILAbfrage(kw$)
 IF UCASE$ (ansionoff$) = "ON" THEN 
         a% = 0
         k% = 0
         IF GEMAILSER% = - 1 THEN 
           REM CALL Fehler("Es werden alle Adressen ignoriert, deren Nachname mit    zz~    anfangen!","")
           te1$ = "Erstellung einer angepassten EMAIL-Serienbrief-MS Excel Tabelle. Es werden alle Adressen ignoriert deren Nachname mit     zz~  anfÑngt  ODER "
           te2$ = " Ausserdem werden alle email-Adressen ignoriert, bei denen in der Spalte Art der Begriff MDL (abgeleitet von Mail DeLivery) vorkommt."
           te3$ = " Ausserdem werden alle email-Adressen ignoriert, bei denen in der Merkmal 1 Spalte der Begriff zz~ vorkommt."
           CALL Fehler(te1$,"in denen das/die Stichwort/er ...GESPERRT..., ...NEWSLETTER-GESPERRT...,...MAILDELIV... oder der Adressstatus ...GESPERRT... vorkommen!" + te2$ + te3$)
         ELSE 
           REM CALL Fehler("Es werden alle Adressen ignoriert, deren Nachname mit    zz~    anfangen!","")
           te1$ = "Erstellung einer angepassten Serienbrief-MS Excel Tabelle. Es werden alle Adressen ignoriert deren Nachname mit     zz~  anfÑngt  ODER "
           REM te2$ = " Ausserdem werden alle email-Adressen ignoriert, bei denen in der Spalte Art der Begriff MDL (abgeleitet von Mail DeLivery) vorkommt."
           REM te3$ = " Ausserdem werden alle email-Adressen ignoriert, bei denen in der Merkmal 1 Spalte der Begriff zz~ vorkommt."
           CALL Fehler(te1$,", in denen das/die Stichwort/er ...GESPERRT..., ...NEWSLETTER-GESPERRT...,...MAILDELIV... oder der Adressstatus ...GESPERRT... vorkommen!" + te2$ + te3$)
         END IF 
         ON ERROR GOTO ErrorHandler
         WHILE AdrFound$(a%) <> ""
           FILE Adressen$
           SELECT FIRST 
          
           IF adressen$ = GAdrDat$ THEN 
             codeku% = VAL ( RIGHT$ (AdrFound$(a%),6))
             SELECT KEY codeku% FILE Adressen$ INDEX codeku.Adressen$
           END IF 
           IF adressen$ = "ADRTEMP" THEN 
             codeadrt% = VAL ( RIGHT$ (AdrFound$(a%),6))
             SELECT KEY codeadrt% FILE Adressen$ INDEX codeadrt.Adressen$
             codeku% = codeku.Adressen$
           END IF 
           IF GEMAILSer% = - 1 THEN 
             ook% = 0
             IF EXISTS (codeku%,codeku.GTelDat$) AND LEFT$ ( UCASE$ (Nachname.gadrdat$),3) <> "ZZ~" THEN 
               SELECT FIRST FILE GTelDat$ INDEX codeku.GTelDat$
               SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
               WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku%
                 IF nummer.GTelDat$ LIKE "*@*" AND Kart1.GTelDat$ <> "ZZ~" THEN 
                   IF GEMAILRAUS$ LIKE "<kein Filter>" THEN 
                     ook% = - 1
                     REM GBCC$(k%,0) = nummer.GTelDat$
                     REM GBCC$(k%,1) = STR$ (codeku%,"000000")
                     k% = k% + 1
                     SELECT LAST FILE GTelDat$ INDEX codeku.GTelDat$
                   ELSE 
                     IF KART2.GTELDAT$ = GEMAILRAUS$ THEN 
                       ook% = - 1
                       REM GBCC$(k%,0) = nummer.GTelDat$
                       REM GBCC$(k%,1) = STR$ (codeku%,"000000")
                       k% = k% + 1
                       SELECT LAST FILE GTelDat$ INDEX codeku.GTelDat$
                     END IF 
                   END IF 
                 ELSE 
                 END IF 
                 SELECT NEXT FILE GTelDat$ INDEX codeku.GTelDat$
               WEND 
             ELSE 
               ook% = 0
             END IF 
             IF ook% = 0 THEN GOTO ser2305200302
           END IF 
           abz% = abz% + 1
           SET STATUS "Anzahl der verarbeiteten Adressen: " + STR$ (abz%,"99999999")
           REM codeku% = codeku.GAdrDat$
           REM 200999
         IF LEFT$ ( UCASE$ (Nachname.gadrdat$),3) = "ZZ~" OR stichwort.gadrdat$ LIKE "*newsletter-gesperrt*" OR stichwort.gadrdat$ LIKE "*MAILDELIV*" OR adrstatus.gadrdat$ LIKE "gesperrt*" OR adrstatus.gadrdat$ LIKE "*gesperrt*" THEN 
           GOTO ser2305200302
         END IF 
         IF stichwort.gadrdat$ LIKE "*gesperrt*" OR stichwort.gadrdat$ LIKE "gesperrt*" OR adrstatus.gadrdat$ LIKE "gesperrt*" THEN 
           GOTO ser2305200302
         END IF 
         IF ASerJN = "j" AND req% = 1 THEN 
         ELSE 
           BLANK FILE adrtemp$
           IF adressen$ = GAdrDat$ THEN codeku.adrtemp$ = STR$ (codeku%,"000000")
           IF adressen$ = "ADRTEMP" THEN codeku.adrtemp$ = STR$ (codeku%,"000000")
           Kundennummer.adrtemp$ = FN ansi(Kundennummer.Adressen$)
           Anrede.adrtemp$ = FN ansi(Anrede.Adressen$)
           REM CALL Fehler("SER","")
           Postanschrift.adrtemp$ = FN ansi(Postanschrift.Adressen$)
           REM PostBriefanrede.adrtemp$ = FN ansi(PostBriefanrede.Adressen$)
 
           IF anrede.Adressen$ LIKE "Herr*" OR anrede.Adressen$ LIKE "Fr*" OR anrede.Adressen$ LIKE "Fam*" OR anrede.Adressen$ LIKE "Ehe*" OR anrede.Adressen$ LIKE "Kind*" THEN 
             IF adressen$ = GAdrDat$ THEN 
               Name2.adrtemp$ = FN ansi(Nachname.Adressen$)
               Name1.adrtemp$ = FN ansi(Vorname.Adressen$)
               REM Name3.adrtemp = Geburtsname.Adressen$
             ELSE 
               IF adressen$ = "ADRTEMP" THEN 
                 IF gesser% = 1 THEN 
                   Name1.adrtemp$ = FN ansi(name1.Adressen$)
                   zuHaenden.adrtemp$ = FN ansi(zuHaenden.Adressen$)
                 ELSE 
                   Name2.adrtemp$ = FN ansi(name2.Adressen$)
                   Name1.adrtemp$ = FN ansi(name1.Adressen$)
                   IF maser% = 1 THEN zuHaenden.adrtemp$ = FN ansi(zuHaenden.Adressen$)
                 END IF 
               END IF 
             END IF 
           ELSE 
             IF adressen$ = GAdrDat$ THEN 
               Name1.adrtemp$ = FN ansi(Nachname.Adressen$)
               zuHaenden.adrtemp$ = FN ansi(Vorname.Adressen$)
               Name2.adrtemp$ = FN ansi(Geburtsname.Adressen$)
             ELSE 
               IF adressen$ = "ADRTEMP" THEN 
                 Name1.adrtemp$ = FN ansi(name1.Adressen$)
                 zuHaenden.adrtemp$ = FN ansi(zuHaenden.Adressen$)
                 Name2.adrtemp$ = FN ansi(name2.Adressen$)
               END IF 
             END IF 
           END IF 
           IF adressen$ = GAdrDat$ THEN 
             Strasse.adrtemp$ = FN ansi(Stra·e.Adressen$)
           ELSE 
             IF adressen$ = "ADRTEMP" THEN 
               Strasse.adrtemp$ = FN ansi(Strasse.Adressen$)
             END IF 
           END IF 
           PLZ.adrtemp$ = FN ansi(PLZ.Adressen$)
           Ort.adrtemp$ = FN ansi(Ort.Adressen$)
           NationalitÑt.adrtemp$ = FN ansi(NationalitÑt.Adressen$)
           Staatsangehîrig.adrtemp$ = FN ansi(Staatsangehîrig.Adressen$)
           Land.adrtemp$ = FN ansi(Land.Adressen$)
           IF adressen$ = GAdrDat$ THEN 
             Geburtstag.adrtemp$ = DATE$ (Geburtstag.Adressen$,"0d.mm.yyyy")
           ELSE 
             IF adressen$ = "ADRTEMP" THEN 
               Geburtstag.adrtemp$ = Geburtstag.Adressen$
             END IF 
           END IF 
           K1Bank.adrtemp$ = FN ansi(K1Bank.Adressen$)
           K1BLZ.adrtemp$ = FN ansi(K1BLZ.Adressen$)
           K1Konto.adrtemp$ = FN ansi(K1Konto.Adressen$)
           K2Bank.adrtemp$ = FN ansi(K2Bank.Adressen$)
           K2BLZ.adrtemp$ = FN ansi(K2BLZ.Adressen$)
           K2Konto.adrtemp$ = FN ansi(K2Konto.Adressen$)
           IF adressen$ = GAdrDat$ THEN 
             Kunde_seit.adrtemp$ = DATE$ (Kunde_seit.Adressen$,"0d.mm.yyyy")
           ELSE 
             IF adressen$ = "ADRTEMP" THEN 
               Kunde_seit.adrtemp$ = Kunde_seit.Adressen$
             END IF 
           END IF 
           IF adressen$ = GAdrDat$ THEN 
             letzter_Kontakt.adrtemp$ = DATE$ (letzter_Kontakt.Adressen$,"0d.mm.yyyy")
           ELSE 
             IF adressen$ = "ADRTEMP" THEN 
               letzter_Kontakt.adrtemp$ = letzter_Kontakt.Adressen$
             END IF 
           END IF 
           REM Notiz.adrtemp$ = Notiz.Adressen$
           Briefanrede.adrtemp$ = FN ansi(Briefanrede.Adressen$)
           Postanschrift.adrtemp$ = Postanschrift.Adressen$
           REM Geburtsname.adrtemp = Geburtsname.Adressen$
           feld1$ = "Telart"
           feld2$ = "Telnr"
           feld3$ = "FaxJN"
           codema% = Codema.Adressen$
           REM 061196
           IF _projekt$ LIKE "PROVIS" THEN 
             IF EXISTS (codema%,codema.maadr) THEN 
               FILE "maadr"
               INDEX codema.maadr
               SELECT FIRST 
               SELECT KEY codema% FILE "maadr" INDEX codema.maadr
               Mitarbeiter.adrtemp$ = FN ansi( TRIM$ (nachname.maadr) + ", " + TRIM$ (vorname.maadr))
               IF adressen$ = GAdrDat$ THEN 
                 QuickMaKund.adrtemp$ = FN ansi( TRIM$ (nachname.maadr) + TRIM$ (vorname.maadr) + nachname.Adressen$)
               ELSE 
                 IF adressen$ = "ADRTEMP" THEN 
                   QuickMaKund.adrtemp$ = FN ansi( TRIM$ (nachname.maadr) + TRIM$ (vorname.maadr) + name1.Adressen$)
                 END IF 
               END IF 
             END IF 
           END IF 
           IF EXISTS (codeku%,codeku.GTelDat$) THEN 
             FILE GTelDat$
             INDEX codeku.GTelDat$
             SELECT FIRST 
             SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
             abi% = 0
             WHILE codeku.GTelDat$ = codeku% AND abi% < 20 AND NOT EOF (GTelDat$)
               abi% = abi% + 1
               IF abi% < 10 THEN 
                 feldart$ = feld1$ + STR$ (abi%,"9") + "." + adrtemp$
                 feldnum$ = feld2$ + STR$ (abi%,"9") + "." + adrtemp$
                 feldFax$ = TRIM$ (feld3$ + STR$ (abi%,"9") + "." + adrtemp$)
               ELSE 
                 feldart$ = feld1$ + STR$ (abi%,"99") + "." + adrtemp$
                 feldnum$ = feld2$ + STR$ (abi%,"99") + "." + adrtemp$
                 feldFax$ = TRIM$ (feld3$ + STR$ (abi%,"99") + "." + adrtemp$)
               END IF 
               feldart$$ = FN ansi( LEFT$ (art.GTelDat$,60))
               feldnum$$ = FN ansi( LEFT$ (nummer.GTelDat$,60))
               FeldFax$$ = FonOderFax.GTelDat$
             SELECT NEXT FILE GTelDat$ INDEX codeku.GTelDat$
             WEND 
           END IF 
           FILE adrtemp$
           STORE FILE adrtemp$
         END IF 
         FILE adressen$
         REM SELECT NEXT FILE GAdrDat$
ser2305200302: 
         a% = a% + 1
         WEND 
 ELSE 
         a% = 0
         REM  CALL Fehler("Fehler","")
         IF GEMAILSER% = - 1 THEN 
           REM CALL Fehler("Es werden alle Adressen ignoriert, deren Nachname mit    zz~    anfangen!","")
           te1$ = "Erstellung einer angepassten EMAIL-Serienbrief-MS Excel Tabelle. Es werden alle Adressen ignoriert deren Nachname mit     zz~  anfÑngt  ODER "
           te2$ = " Ausserdem werden alle email-Adressen ignoriert, bei denen in der Spalte Art der Begriff MDL (abgeleitet von Mail DeLivery) vorkommt."
           te3$ = " Ausserdem werden alle email-Adressen ignoriert, bei denen in der Merkmal 1 Spalte der Begriff zz~ vorkommt."
           CALL Fehler(te1$,"in denen das/die Stichwort/er ...GESPERRT..., ...NEWSLETTER-GESPERRT...,...MAILDELIV... oder der Adressstatus ...GESPERRT... vorkommen!" + te2$ + te3$)
         ELSE 
           REM CALL Fehler("Es werden alle Adressen ignoriert, deren Nachname mit    zz~    anfangen!","")
           te1$ = "Erstellung einer angepassten Serienbrief-MS Excel Tabelle. Es werden alle Adressen ignoriert deren Nachname mit     zz~  anfÑngt  ODER "
           REM te2$ = " Ausserdem werden alle email-Adressen ignoriert, bei denen in der Spalte Art der Begriff MDL (abgeleitet von Mail DeLivery) vorkommt."
           REM te3$ = " Ausserdem werden alle email-Adressen ignoriert, bei denen in der Merkmal 1 Spalte der Begriff zz~ vorkommt."
           CALL Fehler(te1$,", in denen das/die Stichwort/er ...GESPERRT..., ...NEWSLETTER-GESPERRT...,...MAILDELIV... oder der Adressstatus ...GESPERRT... vorkommen!" + te2$ + te3$)
         END IF 
         REQUEST "Sollen diese Filter angesetzt werden?","",130,fi1%
         ON ERROR GOTO ErrorHandler
         WHILE AdrFound$(a%) <> ""
           FILE Adressen$
           SELECT FIRST 
          
           IF adressen$ = GAdrDat$ THEN 
             codeku% = VAL ( RIGHT$ (AdrFound$(a%),6))
             SELECT FIRST FILE Adressen$ INDEX codeku.Adressen$
             SELECT KEY codeku% FILE Adressen$ INDEX codeku.Adressen$
           END IF 
           IF adressen$ = "ADRTEMP" THEN 
             codeadrt% = VAL ( RIGHT$ (AdrFound$(a%),6))
             SELECT FIRST FILE Adressen$ INDEX codeadrt.Adressen$
             SELECT KEY codeadrt% FILE Adressen$ INDEX codeadrt.Adressen$
             codeku% = codeku.Adressen$
           END IF 
           IF GEMAILSer% = - 1 THEN 
             ook% = 0
             IF EXISTS (codeku%,codeku.GTelDat$) AND LEFT$ ( UCASE$ (Nachname.gadrdat$),3) <> "ZZ~" THEN 
               SELECT FIRST FILE GTelDat$ INDEX codeku.GTelDat$
               SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
               WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku%
                 IF nummer.GTelDat$ LIKE "*@*" AND Kart1.GTelDat$ <> "ZZ~" THEN 
                   IF GEMAILRAUS$ LIKE "<kein Filter>" THEN 
                     ook% = - 1
                     REM GBCC$(k%,0) = nummer.GTelDat$
                     REM GBCC$(k%,1) = STR$ (codeku%,"000000")
                     k% = k% + 1
                     SELECT LAST FILE GTelDat$ INDEX codeku.GTelDat$
                   ELSE 
                     IF KART2.GTELDAT$ = GEMAILRAUS$ THEN 
                       ook% = - 1
                       REM GBCC$(k%,0) = nummer.GTelDat$
                       REM GBCC$(k%,1) = STR$ (codeku%,"000000")
                       k% = k% + 1
                       SELECT LAST FILE GTelDat$ INDEX codeku.GTelDat$
                     END IF 
                   END IF 
                 ELSE 
                 END IF 
                 SELECT NEXT FILE GTelDat$ INDEX codeku.GTelDat$
               WEND 
             ELSE 
               ook% = 0
             END IF 
             IF ook% = 0 THEN 
               REM CALL Fehler((AdrFound$(a%),"")
               GOTO ser2305200303
             END IF 
           END IF 
           abz% = abz% + 1
           SET STATUS "Anzahl der verarbeiteten Adressen: " + STR$ (abz%,"99999999")
           REM codeku% = codeku.GAdrDat$
           REM 200999

         IF fi1% = 1 AND LEFT$ ( UCASE$ (Nachname.gadrdat$),3) = "ZZ~" OR stichwort.gadrdat$ LIKE "*newsletter-gesperrt*" OR stichwort.gadrdat$ LIKE "*MAILDELIV*" OR adrstatus.gadrdat$ LIKE "gesperrt*" OR adrstatus.gadrdat$ LIKE "*gesperrt*" THEN 
           GOTO ser2305200303
         END IF 
         IF fi1% = 1 AND stichwort.gadrdat$ LIKE "*gesperrt*" THEN 
           GOTO ser2305200303
         END IF 

         IF ASerJN = "j" AND req% = 1 THEN 
         ELSE 
           BLANK FILE adrtemp$
           codeku.adrtemp$ = STR$ (codeku%,"000000")

             IF EXISTS (codeku%,codeku.akquise) THEN 
               quickkuter$ = STR$ (codeku%,"000000") + "00000000"
               SELECT FIRST FILE "Akquise" INDEX quickkuter.akquise
               SELECT KEY quickkuter$ FILE "Akquise" INDEX quickkuter.akquise
               f% = 1
               WHILE codeku.akquise = codeku% AND f% < 21 AND NOT EOF ("akquise")
                 IF codeku.akquise = codeku% THEN 
                   feld1$ = "TerminNotiz" + STR$ (f%,"00") + "." + adrtemp$
                   feld2$ = "TerminErgebni" + STR$ (f%,"00") + "." + adrtemp$
                   f1$ = "Datum: " + DATE$ (Datum.akquise,"0d.mm.yyyy") + "    Termin: " + DATE$ (Termin.akquise,"0d.mm.yyyy") + "   erledigt: " + erledigt_termin.akquise
                   feld1$$ = f1$ + CHR$ (13) + CHR$ (10) + Notiz.akquise
                   feld2$$ = ergebnis.akquise
                   f% = f% + 1
                   SELECT NEXT FILE "Akquise" INDEX quickkuter.akquise
                 END IF 
               WEND 
             END IF 


           Kundennummer.adrtemp$ = Kundennummer.Adressen$
           Anrede.adrtemp$ = Anrede.Adressen$
           ADRStatus.adrtemp$ = ADRStatus.Adressen$
           ADRGruppe.adrtemp$ = ADRGruppe.Adressen$
           Postanschrift.adrtemp$ = Postanschrift.Adressen$
           IF codema.adressen$ > 0 THEN 
             SELECT FIRST FILE "vertrete" INDEX codema.vertrete
             SELECT KEY codema.adressen$ FILE "vertrete" INDEX codema.vertrete
             vertreter.adrtemp$ = Nachname.vertrete + "," + Vorname.vertrete
           END IF 
           REM PostBriefanrede.adrtemp$ = PostBriefanrede.Adressen$
           REM CALL Fehler("SER","")
           IF anrede.Adressen$ LIKE "Herr*" OR anrede.Adressen$ LIKE "Fr*" OR anrede.Adressen$ LIKE "Fam*" OR anrede.Adressen$ LIKE "Ehe*" OR anrede.Adressen$ LIKE "Kind*" THEN 
             IF adressen$ = GAdrDat$ THEN 
               Name2.adrtemp$ = Nachname.Adressen$
               Name1.adrtemp$ = Vorname.Adressen$
               REM Name3.adrtemp = Geburtsname.Adressen$
             ELSE 
               IF adressen$ = "ADRTEMP" THEN 
                 IF gesser% = 1 THEN 
                   Name1.adrtemp$ = name1.Adressen$
                   zuHaenden.adrtemp$ = zuHaenden.Adressen$
                 ELSE 
                   Name2.adrtemp$ = name2.Adressen$
                   Name1.adrtemp$ = name1.Adressen$
                   IF maser% = 1 THEN zuHaenden.adrtemp$ = zuHaenden.Adressen$
                 END IF 
               END IF 
             END IF 
           ELSE 
             IF adressen$ = GAdrDat$ THEN 
               REM 261099
               Name1.adrtemp$ = Nachname.Adressen$
               zuHaenden.adrtemp$ = Vorname.Adressen$
               Name2.adrtemp$ = Geburtsname.Adressen$
             ELSE 
               IF adressen$ = "ADRTEMP" THEN 
               REM 261099
                 Name1.adrtemp$ = name1.Adressen$
                 zuHaenden.adrtemp$ = zuHaenden.Adressen$
                 Name2.adrtemp$ = Name2.Adressen$
               END IF 
             END IF 
           END IF 
           IF adressen$ = GAdrDat$ THEN 
             Strasse.adrtemp$ = Stra·e.Adressen$
           ELSE 
             IF adressen$ = "ADRTEMP" THEN 
               Strasse.adrtemp$ = Strasse.Adressen$
             END IF 
           END IF 
           PLZ.adrtemp$ = PLZ.Adressen$
           Ort.adrtemp$ = Ort.Adressen$
           NationalitÑt.adrtemp$ = NationalitÑt.Adressen$
           Staatsangehîrig.adrtemp$ = Staatsangehîrig.Adressen$
           Land.adrtemp$ = Land.Adressen$
           IF adressen$ = GAdrDat$ THEN 
             Geburtstag.adrtemp$ = DATE$ (Geburtstag.Adressen$,"0d.mm.yyyy")
           ELSE 
             IF adressen$ = "ADRTEMP" THEN 
               Geburtstag.adrtemp$ = Geburtstag.Adressen$
             END IF 
           END IF 
           K1Bank.adrtemp$ = K1Bank.Adressen$
           K1BLZ.adrtemp$ = K1BLZ.Adressen$
           K1Konto.adrtemp$ = K1Konto.Adressen$
           K2Bank.adrtemp$ = K2Bank.Adressen$
           K2BLZ.adrtemp$ = K2BLZ.Adressen$
           K2Konto.adrtemp$ = K2Konto.Adressen$
           IF adressen$ = GAdrDat$ THEN 
             Kunde_seit.adrtemp$ = DATE$ (Kunde_seit.Adressen$,"0d.mm.yyyy")
           ELSE 
             IF adressen$ = "ADRTEMP" THEN 
               Kunde_seit.adrtemp$ = Kunde_seit.Adressen$
             END IF 
           END IF 
           IF adressen$ = GAdrDat$ THEN 
             letzter_Kontakt.adrtemp$ = DATE$ (letzter_Kontakt.Adressen$,"0d.mm.yyyy")
           ELSE 
             IF adressen$ = "ADRTEMP" THEN 
               letzter_Kontakt.adrtemp$ = letzter_Kontakt.Adressen$
             END IF 
           END IF 
           REM Notiz.adrtemp$ = Notiz.Adressen$
           Briefanrede.adrtemp$ = Briefanrede.Adressen$
           REM Geburtsname.adrtemp = Geburtsname.Adressen$
           feld1$ = "Telart"
           feld2$ = "Telnr"
           feld3$ = "FaxJN"
           codema% = Codema.Adressen$
           REM 061196
           IF _projekt$ LIKE "PROVIS" THEN 
             IF EXISTS (codema%,codema.maadr) THEN 
               FILE "maadr"
               INDEX codema.maadr
               SELECT FIRST 
               SELECT KEY codema% FILE "maadr" INDEX codema.maadr
               Mitarbeiter.adrtemp$ = TRIM$ (nachname.maadr) + ", " + TRIM$ (vorname.maadr)
               IF adressen$ = GAdrDat$ THEN 
                 QuickMaKund.adrtemp$ = TRIM$ (nachname.maadr) + TRIM$ (vorname.maadr) + nachname.Adressen$
               ELSE 
                 IF adressen$ = "ADRTEMP" THEN 
                   QuickMaKund.adrtemp$ = TRIM$ (nachname.maadr) + TRIM$ (vorname.maadr) + name1.Adressen$
                 END IF 
               END IF 
             END IF 
           END IF 
           IF EXISTS (codeku%,codeku.GTelDat$) THEN 
             FILE GTelDat$
             INDEX codeku.GTelDat$
             SELECT FIRST 
             SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
             abi% = 0
             WHILE codeku.GTelDat$ = codeku% AND abi% < 20 AND NOT EOF (GTelDat$)
               abi% = abi% + 1
               IF abi% < 10 THEN 
                 feldart$ = feld1$ + STR$ (abi%,"9") + "." + adrtemp$
                 feldnum$ = feld2$ + STR$ (abi%,"9") + "." + adrtemp$
                 feldFax$ = TRIM$ (feld3$ + STR$ (abi%,"9") + "." + adrtemp$)
               ELSE 
                 feldart$ = feld1$ + STR$ (abi%,"99") + "." + adrtemp$
                 feldnum$ = feld2$ + STR$ (abi%,"99") + "." + adrtemp$
                 feldFax$ = TRIM$ (feld3$ + STR$ (abi%,"99") + "." + adrtemp$)
               END IF 
               feldart$$ = LEFT$ (art.GTelDat$,60)
               feldnum$$ = LEFT$ (nummer.GTelDat$,60)
               FeldFax$$ = FonOderFax.GTelDat$
             SELECT NEXT FILE GTelDat$ INDEX codeku.GTelDat$
             WEND 
           END IF 
           FILE adrtemp$
           STORE FILE adrtemp$
         END IF 
         FILE adressen$
         REM SELECT NEXT FILE GAdrDat$
ser2305200303: 
         a% = a% + 1
         WEND 
 
 END IF 
 REM -- Schritt 2 - Adre·liste bearbeiten
 opt% = 0
 IF GEMAILSer% = - 1 THEN 
   IF k% < 1 THEN 
     CALL Fehler("Es wurden keine EMAIL-Nummern gefunden, deshalb kann die Serien-EMAIL nicht erzeugt werden!","")
     req% = 0
     GOTO ser2305200304
   END IF 
 END IF 
 SET STATUS "Mailing - Schritt 2..."
 CREATE DIALOG "MAIL2",0,0,257,136,title$,"MS Sans Serif",8
 ADD DIALOG "MAIL2",9,6,9,22,24,2
 ADD DIALOG "MAIL2",5,36,9,210,10,0,"Mailing - Schritt 2"
 ADD DIALOG "MAIL2",4,36,19,212,5,0,""
 ADD DIALOG "MAIL2",5,36,28,212,10,0,"Die Adre·liste wurde erfolgreich erstellt und geladen."
 ADD DIALOG "MAIL2",5,36,46,212,10,0,"Mîchten Sie die Adre·liste vor der Mailingerstellung bearbeiten?"
 ADD DIALOG "MAIL2",3,47,66,124,11,0,"&Ja",0,opt%
 ADD DIALOG "MAIL2",3,47,79,136,11,0,"&Nein",1,opt%
 ADD DIALOG "MAIL2",4,36,107,212,5,0,""
 ADD DIALOG "MAIL2",1,136,116,55,15,1,"&Weiter >>",1,1
 ADD DIALOG "MAIL2",1,192,116,55,15,0,"&Abbrechen",0,0
 DIALOG "MAIL2",req%
 REMOVE DIALOG "MAIL2"
ser2305200304: 
 IF req% = 0 THEN 
   CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
   adrser% = 0
   maser% = 0
   gesser% = 0
   reser% = 0
   mahnser% = 0
   END SUB 'Procedure verlassen
 END IF 
 IF opt% = 0 THEN 
   REM Adre·liste bearbeiten
   SET STATUS "Adre·liste bearbeiten..."
   ok% = - 1
   Superbase.Dialogs.Add("MAIL2")
   SET dlg = Superbase.Dialogs.MAIL2
   dlg.Move(0,0,425,330):dlg.Caption = "Dialog Title":dlg.FontName = "MS Sans Serif"
   dlg.FontSize = 8:dlg.OnActivate = "MLFillList1"
   SET c = dlg.Add("DialogIcon1","DialogIcon"):c.Move(6,11,22,23):c.Icon = 2
   SET c = dlg.Add("DialogLabel1","DialogLabel"):c.Move(33,11,184,9):c.Caption = "Mailing - Schritt 3 (Adre·liste bearbeiten)"
   SET c = dlg.Add("DialogFrame1","DialogFrame"):c.Move(33,19,183,5):c.Caption = ""
   SET c = dlg.Add("DialogLabel3","DialogLabel"):c.Move(33,28,183,21):c.Caption = "Bitte entfernen Sie in der nachfolgenden Liste die EintrÑge, die nicht im Mailing erscheinen sollen."
   SET c = dlg.Add("adrList","DialogListBox"):c.Move(33,52,320,268):c.Sorted = 1:c.ScrollBars = 2:c.OnDblClick = "MListDel1"
   SET c = dlg.Add("cmDelete","DialogCommandButton"):c.Move(360,83,55,14):c.Caption = "&Entfernen":c.ReturnValue = 0:c.Cancel = 1:c.OnClick = "MListDel1"
   SET c = dlg.Add("cmOK","DialogCommandButton"):c.Move(360,181,55,15):c.Default = 1:c.Caption = "&Weiter":c.ReturnValue = 1
   SET c = dlg.Add("cmCancel","DialogCommandButton"):c.Move(360,200,55,15):c.Caption = "&Abbrechen":c.ReturnValue = 0:c.Cancel = 1
   DIALOG "MAIL2",req%
   REMOVE DIALOG "MAIL2"
   IF req% = 0 THEN 
     CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
     adrser% = 0
     maser% = 0
     gesser% = 0
     reser% = 0
     mahnser% = 0
     END SUB 'Procedure verlassen
   END IF 
 ELSE 
   REM CALL MLFillList1()
 END IF 
 
 IF GEMAILSer% <> - 1 OR GEMAILSer% = - 1 THEN 
   IF GEMAILSer% = - 1 THEN 
     te1$ = "Erstellung einer angepassten EMAIL-Serienbrief-MS Excel Tabelle. Es werden alle Adressen ignoriert"
     te2$ = " Ausserdem werden alle email-Adressen ignoriert, bei denen in der Spalte Art der Begriff MDL (abgeleitet von Mail DeLivery) vorkommt."
     te3$ = " Ausserdem werden alle email-Adressen ignoriert, bei denen in der Merkmal 1 Spalte der Begriff zz~ vorkommt."
     REM CALL Fehler(te1$,", in denen das/die Stichwort/er ...GESPERRT..., ...NEWSLETTER-GESPERRT...,...MAILDELIV... oder der Adressstatus ...GESPERRT... vorkommen!" + te2$ + te3$)
     CALL DFile(2,"OFFICE\emailtmp" + _fpw$)
     IF RECCOUNT ("emailtmp") > 0 THEN 
       FILE "emailtmp"
       REMOVE FROM FILE "emailtmp"
     END IF 
     FILE adrtemp$
     SELECT FIRST 
     WHILE NOT EOF (adrtemp$)
       codeku% = VAL (codeku.adrtemp$)
       SELECT FIRST FILE "adressen" INDEX codeku.adressen
       SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
       vorname$ = vorname.adressen
       nachname$ = nachname.adressen
       IF stichwort.adressen LIKE "*gesperrt*" OR stichwort.adressen LIKE "*MAILDELIV*" OR adrstatus.adressen LIKE "*gesperrt*" THEN GOTO w030420071
       FOR i% = 1 TO 20
         feld1$ = "Telart"
         feld2$ = "Telnr"
         feld1$ = feld1$ + LTRIM$ ( STR$ (i%,"99"))
         feld2$ = feld2$ + LTRIM$ ( STR$ (i%,"99"))
         IF feld1$$ LIKE "*MDL*" THEN 
         ELSE 
           IF feld1$$ LIKE "*@*" THEN 
             BLANK FILE "emailtmp"
             a% = CopyRecord%(adrtemp$,"emailtmp")
             vorname.emailtmp = vorname$
             nachname.emailtmp = nachname$
             email.emailtmp = feld1$$
             STORE FILE "emailtmp"
           END IF 
           IF feld2$$ LIKE "*@*" THEN 
             BLANK FILE "emailtmp"
             a% = CopyRecord%(adrtemp$,"emailtmp")
             vorname.emailtmp = vorname$
             nachname.emailtmp = nachname$
             email.emailtmp = feld2$$
             STORE FILE "emailtmp"
           END IF 
         END IF 
       NEXT i%
w030420071: 
       SELECT NEXT FILE adrtemp$
     WEND 
     CALL Fehler("Erzeuge Datei " + GMACodeDir$ + "EMAILTMP.XLS und ","EMAILTM1.XLS(reduziert auf die Felder: email,Nachname,Vornme) fÅr die Serienemailerstellung!")
     DIRECTORY GMACodeDir$
     tf$ = FILE 
     FILE "emailtmp"
     REM adrser% = 1
     Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
     Superbase.Converters.SBF.SourceFile = "emailtmp"
     Superbase.Converters.SBF.Descending = 0
     Superbase.Converters.SBF.Merge = 0
     Superbase.Converters.SBF.LogErrors = 0
     Superbase.Converters.SBF.MultiResponse = 0
     Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
     Superbase.Converters.XLS.DestFile = "emailtmp.XLS"
     Superbase.Converters.XLS.StartRow = 2
     Superbase.Converters.XLS.StartCol = 1
     Superbase.Converters.XLS.EndRow = - 1
     Superbase.Converters.XLS.EndCol = - 1
     Superbase.Converters.XLS.UseLabels = - 1
     Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
     OPEN FIELDS email,Nachname,Vorname
     Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
     Superbase.Converters.SBF.SourceFile = "emailtmp"
     Superbase.Converters.SBF.Descending = 0
     Superbase.Converters.SBF.Merge = 0
     Superbase.Converters.SBF.LogErrors = 0
     Superbase.Converters.SBF.MultiResponse = 0
     Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
     Superbase.Converters.XLS.DestFile = "emailtm1.XLS"
     Superbase.Converters.XLS.StartRow = 2
     Superbase.Converters.XLS.StartCol = 1
     Superbase.Converters.XLS.EndRow = - 1
     Superbase.Converters.XLS.EndCol = - 1
     Superbase.Converters.XLS.UseLabels = - 1
     Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
     FILE tf$
     DIRECTORY dir$
   ELSE 
     CALL Fehler("Erzeuge Dateien " + GMACodeDir$ + "ADRSER1.DBF und ",GMACodeDir$ + "ADRSER1.XLS fÅr die Serienbrieferstellung!")
     DIRECTORY GMACodeDir$
     tf$ = FILE 
     FILE adrtemp$
     EXPORT FILE adrtemp$ TO GMACodeDir$ + "ADRSER1.DBF" USING "3"
     REM adrser% = 1
     Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
     Superbase.Converters.SBF.SourceFile = adrtemp$
     Superbase.Converters.SBF.Descending = 0
     Superbase.Converters.SBF.Merge = 0
     Superbase.Converters.SBF.LogErrors = 0
     Superbase.Converters.SBF.MultiResponse = 0
     Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
     Superbase.Converters.XLS.DestFile = "ADRSER1.XLS"
     Superbase.Converters.XLS.StartRow = 2
     Superbase.Converters.XLS.StartCol = 1
     Superbase.Converters.XLS.EndRow = - 1
     Superbase.Converters.XLS.EndCol = - 1
     Superbase.Converters.XLS.UseLabels = - 1
     Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
     FILE tf$
     DIRECTORY dir$
   END IF 
 END IF 
 CALL MAILAQAkt1(userfile$)
 END SUB 
  
  



 
 ' Adre·liste generieren
 ' ===========================================================================
 ' Zweck:       erzeugt Adre·liste fÅr Mailing
 ' Nutzung:     CALL CreateMailFile(filter$,destfile$)
 '              filter$         = Filterbedingungen
 '              destfile$       = Zieldatei
 ' ===========================================================================
 
SUB CreateMailFil1(filter$,destfile$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\connect" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 REM CALL Fehler("","")
 cfile$ = FILE 
 SET STATUS "Feldauswahl..."
 MOUSE OFF 
 FILE "adrtemp1"
 filter$ = "LTRIM$(Name1)<>~~"
 IF OPEN (destfile$) THEN CLOSE FILE destfile$
 IF EXISTS (GMACodeDir$ + destfile$ + ".sbf") THEN DELETE GMACodeDir$ + destfile$ + ".*"
 IF EXISTS (GMACodeDir$ + "ADRSER1.dbf") THEN DELETE GMACodeDir$ + "ADRSER1.dbf"
 IF EXISTS (GMACodeDir$ + "ADRSER1.xls") THEN DELETE GMACodeDir$ + "ADRSER1.xls"
 destfile1$ = GMACodeDir$ + destfile$
 SET STATUS "Adre·liste wird generiert..."
 MOUSE OFF 
 REM prolog$ = "SELECT ALL" + tString$ + " REPORT WHERE "
 prolog$ = "SELECT ALL REPORT "
 epilog$ = " ORDER REPORT TO FILE destfile1$"
 befehl$ = prolog$ + epilog$
 EXECUTE befehl$
 OPEN FILE destfile1$
 FILE destfile$
 CREATE INDEX ON codeku 
 CREATE INDEX ON name2 
 SET STATUS "Ausgabe beendet!"
 MOUSE ON 
 FILE cfile$
 MOUSE ON 
 END SUB 
 
 ' Zusatzroutinen fÅr Dialog MAIL3
 ' ===============================
 
SUB MLFillList1()
 MOUSE OFF 
 FILE userfile$
 INDEX NAME2
 SELECT FIRST 
 WHILE NOT EOF (userfile$)
   IF name1.userfile$ <> "" THEN 
     dlg.adrList.AddItem(Name2.userfile$ + ", " + Name1.userfile$ + ", " + plz.userfile$ + " " + Ort.userfile$ + ", " + Strasse.userfile$ + SPACE$ (160) + CodeKU.userfile$)
   ELSE 
     dlg.adrList.AddItem(Name2.userfile$ + ", " + plz.userfile$ + " " + Ort.userfile$ + ", " + Strasse.userfile$ + SPACE$ (160) + CodeKU.userfile$)
   END IF 
   SELECT NEXT 
 WEND 
 MOUSE ON 
 END SUB 
 
SUB MListDel1()
 lidx% = dlg.AdrList.ListIndex
 IF lidx% <> 0 THEN 
   item$ = dlg.adrList.List(lidx%)
   SELECT KEY RIGHT$ (item$,6) LOCK FILE userfile$ INDEX CodeKU
   REQUEST Name1 + ", " + Name2 ,"Eintrag lîschen?",130,req%
   IF req% <> 0 THEN 
     dlg.adrList.RemoveItem(lidx%)
     SELECT REMOVE FILE userfile$
   END IF 
 END IF 
 END SUB 
 
  

 '      **************************************
 '      ** Routinen fÅr Formular "Stammdaten" **
 '      **************************************
 
SUB Stamm()
 IF disabled%("SUPERVIS") THEN END SUB 
 cuvc% = Codema.supervis
 CALL DFile(2,"access" + _fpw$)
 CALL DFile(2,"accode" + _fpw$)
 CALL DFile(3,"STAMM" + _fpw$)
 _formend% = 0
 SET STATUS "Bereit"
 ON ERROR GOTO ErrorHandler
 WHILE _formend% = 0
   SUPERVISsub% = 0
   IF FORM <> "STAMM" THEN 
     SET HEADING title$ + " - Firmen-Stammdatenverwaltung"
     OPEN FORM GPrjForm$ + "\STAMM"
     SET f = Superbase.Form
     SET STATUS "Firmen-Stammdatenverwaltung"
     FILE "STAMM"
     GAppName$ = _netpath$ + "DOCP\stamm.pdf"
     INDEX Firma1.stamm
     SELECT FIRST 
       f.cbfclizB.visible = 0
       f.cbfclizB.enabled = 0
       f.s2.visible = - 1
       f.abbr.visible = 0
       f.abbr.enabled = 0
       f.sichern.visible = 0
       f.sichern.enabled = 0
       f.zurueck.visible = - 1
       f.bearb.visible = - 1
       f.abbr2.visible = 0
       f.abbr2.enabled = 0
       f.sichern2.visible = 0
       f.sichern2.enabled = 0
       f.ende2.visible = - 1
       f.bearb2.visible = - 1
       IF GCodieadr$ LIKE "TRUE" THEN 
         f.cbfclizB.visible = - 1
         f.cbfclizB.enabled = - 1
       ELSE 
       END IF 
     CALL MNSTAMM()
     FORM 
   END IF 
   MENU ON 
   MOUSE ON 
   waehr$ = "FirmenwÑhrung: " + waehrung.stamm
   FORM 
   CALL ClearKBDBuffer()
   Grechtslinks$ = linksrechts.stamm
   WAIT MOUSE OR KEY OR MENU 
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL SVPrev()
   CASE CrsRight%,PgDn%
     CALL SVNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   CALL ClearKBDBuffer()
   SELECT CASE SUPERVISsub%
   CASE 106
     REM Export fexpxml.sbr
     DIRECTORY _netpath$
     IF NOT PROGRAMFILE ("FEXPXML") THEN LOAD "FEXPXML.SBR", NEW 
     CALL ainhflen()
   CASE 105
     REM Export Sascha
     CALL ExpFileCreate()
   CASE 104
     REM Import
     CALL ImpoExpImp()
   CASE 103
     REM Datensich
     CALL DatsichImpExp()
   CASE 102
     CALL Fehler("Export","")
   CASE 101
     CALL Fehler("Import","")
   CASE 3
     REM alle Dokumente schÅtzen
     IF LTRIM$ (dokpass.stamm) <> "" THEN 
       t2$ = "Bitte sperren Sie fÅr alle nichtbefugten Mitarbeiter die Funktion <Dokumentenschutz aufheben> (in der Miarbeiterverwaltung)!"
       CALL Fehler("Diese Funktion gibt Ihnen die Mîglichkeit alle Dokumente, die durch Angebot,Lieferschein,Rechnung,Bestellung,Auftrag, Gutschrift oder Mahnung erstellt wurden vor VerÑnderungen zu schÅtzen!",t2$)
       REQUEST "Sollen diese Dokumente jetzt vor VerÑnderungen geschÅtzt werden?","",135,req%
       IF req% = 1 THEN 
         passw$ = dokpass.stamm
         CALL DFile(2,"OFFICE\adressen" + _fpw$)
         CALL DFile(2,"OFFICE\dokument" + _fpw$)
         CALL DFile(3,"MASTER" + _fpw$)
         CALL DFile(3,"MAHNUNG" + _fpw$)
         FILE "master"
         INDEX codems.master
         IF RECCOUNT ("master") > 0 THEN 
           SELECT FIRST LOCK FILE "master" INDEX codems.master
           ok1% = - 1
         ELSE 
           ok1% = 0
           SELECT LAST FILE "master" INDEX codems.master
         END IF 
         i% = 0
         j% = RECCOUNT ("master")
         WHILE NOT EOF ("Master") AND ok1% = - 1
           i% = i% + 1
           IF dokschutz.master <> 1 THEN 
             dokschutz.master = 1
             STORE FILE "master"
             IF codedok.master > 0 THEN 
               SELECT FIRST FILE "Dokument" INDEX codedok.dokument
               SELECT KEY codedok.master LOCK FILE "Dokument" INDEX codedok.dokument
               IF EXISTS (_netpath$ + Dateiname.dokument) THEN 
                 ON ERROR GOTO Mas301220031A
                 CALL open_doc(_netpath$ + Dateiname.dokument,"")
                 REM CALL SchutzDok("Paris")
                 CALL set_password(passw$)
                 CALL close_doc( - 1)
Mas301220031A: 
                 ON ERROR GOTO ErrorHandler
                 DokPass.dokument = passw$
                 STORE FILE "Dokument"
                 REM call set_password(passw$)
               END IF 
             END IF 
           END IF 
           SET STATUS LTRIM$ ( STR$ (i%,",99999999")) + " in MASTER von " + LTRIM$ ( STR$ (j%,",99999999")) + " verarbeitet"
           SELECT NEXT LOCK FILE "master" INDEX codems.master
         WEND 



         FILE "mahnung"
         INDEX codemahn.mahnung
         IF RECCOUNT ("mahnung") > 0 THEN 
           SELECT FIRST LOCK FILE "mahnung" INDEX codemahn.mahnung
           ok1% = - 1
         ELSE 
           ok1% = 0
           SELECT LAST FILE "mahnung" INDEX codemahn.mahnung
         END IF 

         i% = 0
         j% = RECCOUNT ("mahnung")
         WHILE NOT EOF ("mahnung") AND ok1% = - 1
           i% = i% + 1
           FOR a% = 1 TO 5
             f1$ = "dokschutz" + STR$ (a%,"9") + ".mahnung"
             f2$ = "codedok" + STR$ (a%,"9") + ".mahnung"
             f3$ = "mahndatum" + STR$ (a%,"9") + ".mahnung"
             IF f1$$ <> 1 THEN 
               IF f3$$ > "01.01.1980" THEN f1$$ = 1
               IF f2$$ > 0 THEN 
                 SELECT FIRST FILE "Dokument" INDEX codedok.dokument
                 SELECT KEY f2$$ LOCK FILE "Dokument" INDEX codedok.dokument
                 IF EXISTS (_netpath$ + Dateiname.dokument) THEN 
                   ON ERROR GOTO Mas301220031B
                   CALL open_doc(_netpath$ + Dateiname.dokument,"")
                   REM CALL SchutzDok("Paris")
                   CALL set_password(passw$)
                   CALL close_doc( - 1)
Mas301220031B: 
                   ON ERROR GOTO ErrorHandler
                   DokPass.dokument = passw$
                   STORE FILE "Dokument"
                   REM call set_password(passw$)
                 END IF 
               END IF 
             END IF 
             SET STATUS LTRIM$ ( STR$ (i%,",99999999")) + " in mahnung von " + LTRIM$ ( STR$ (a%,",99999999")) + "/" + LTRIM$ ( STR$ (j%,",99999999")) + " verarbeitet"
           NEXT a%
           STORE FILE "mahnung"
           SELECT NEXT LOCK FILE "mahnung" INDEX codemahn.mahnung
         WEND 


       END IF 
     ELSE 
       CALL Fehler("Sie kînnen die Dokumente nocj nicht schÅtzen lassen!","Bitte legen Sie erst ein General-Passwort fÅr den Dokumentenschutz fest!")
     END IF 

   CASE 1
     REM FirmenwÑhrung
     REM WÑhrung Stamm
     IF MOD ("stamm") THEN 
       STORE FILE "stamm"
       UNLOCK curent FILE "stamm"
     END IF 
     IF NOT disabled%("FIRMENSTAMMEDIT") THEN 
       CALL WaehrStamm()
     END IF 
     FORM 
   CASE 99
     MOUSE ON 
   IF NOT disabled%("FITMEDIT") THEN 
     MOUSE ON 
     SELECT FIRST LOCK FILE "stamm"
     IF PAGE = 5 THEN 
       f.bearb5.enabled = 0
       ENTER codieofftxt.stamm,0
       ON ERROR GOTO w100920081
       STORE FILE "stamm"
w100920081: 
       ON ERROR GOTO ErrorHandler
       REM UNLOCK CURRENT FILE "stamm"
       SELECT FIRST LOCK FILE "stamm"
       f.bearb5.enabled = - 1
     END IF 
     IF PAGE = 1 THEN 
       f.abbr.visible = - 1
       f.abbr.enabled = - 1
       f.sichern.visible = - 1
       f.sichern.enabled = - 1
       f.zurueck.visible = 0
       f.s2.visible = 0
       f.bearb.visible = 0
       f.abbr2.visible = - 1
       f.abbr2.enabled = - 1
       f.sichern2.visible = - 1
       f.sichern2.enabled = - 1
       f.ende2.visible = 0
       f.bearb2.visible = 0
       ENTER Firma1.stamm,0
       STORE FILE "STAMM"
       UNLOCK CURRENT FILE "stamm"
       SELECT FIRST LOCK FILE "stamm"
       f.s2.visible = - 1
       f.abbr.visible = 0
       f.abbr.enabled = 0
       f.sichern.visible = 0
       f.sichern.enabled = 0
       f.zurueck.visible = - 1
       f.bearb.visible = - 1
       f.abbr2.visible = 0
       f.abbr2.enabled = 0
       f.sichern2.visible = 0
       f.sichern2.enabled = 0
       f.ende2.visible = - 1
       f.bearb2.visible = - 1
     END IF 
     IF PAGE = 2 THEN 
       f.abbr.visible = - 1
       f.abbr.enabled = - 1
       f.sichern.visible = - 1
       f.sichern.enabled = - 1
       f.zurueck.visible = 0
       f.s2.visible = 0
       f.bearb.visible = 0
       f.abbr2.visible = - 1
       f.abbr2.enabled = - 1
       f.sichern2.visible = - 1
       f.sichern2.enabled = - 1
       f.ende2.visible = 0
       f.bearb2.visible = 0
       ENTER WLeerVorAdr.stamm,0
       STORE FILE "STAMM"
       UNLOCK CURRENT FILE "stamm"
       SELECT FIRST LOCK FILE "stamm"
       f.s2.visible = - 1
       f.abbr.visible = 0
       f.abbr.enabled = 0
       f.sichern.visible = 0
       f.sichern.enabled = 0
       f.zurueck.visible = - 1
       f.abbr2.visible = 0
       f.abbr2.enabled = 0
       f.sichern2.visible = 0
       f.sichern2.enabled = 0
       f.ende2.visible = - 1
       f.bearb2.visible = - 1
     END IF 
     IF PAGE = 4 THEN 
       f.bearb8.visible = 0
       f.speich8.visible = - 1
       f.abbr8.visible = - 1
       f.konf8.visible = 0
       f.zur8.visible = 0
       ENTER emailshost.stamm,0
       f.bearb8.visible = - 1
       f.speich8.visible = - 1
       f.abbr8.visible = 0
       f.konf8.visible = - 1
       f.zur8.visible = - 1
       ENTER END 
          GEMAIL% = EMAILJN.stamm
          IF GEMAIL% = - 1 THEN 
            GEMAILJNAuto% = EMAILJNAuto.stamm
            SELECT KEY GMACodeMA% FILE "Supervis" INDEX codema.supervis
            IF GEMAILJNAuto% = - 1 THEN 
              GEMAILJNAuto% = EMAILJNAuto.supervis
            END IF 
          END IF 
     END IF 
   END IF 
   CASE 100
     REQUEST "Wollen Sie die EMAIL-Angaben bei allen","Mitarbeitern eintragen lassen?",135,req%
     IF req% = 1 THEN 
       SELECT FIRST LOCK FILE "supervis" INDEX codema.supervis
       WHILE NOT EOF ("Supervis")
         IF emailshost.stamm <> "" THEN emailshost.supervis = emailshost.stamm
         IF emailsport.stamm > 0 THEN emailsport.supervis = emailsport.stamm
         IF emailsUserID.stamm <> "" THEN emailsUserID.supervis = emailsUserId.stamm
         IF emailsAFirma.stamm <> "" THEN emailsAFirma.supervis = emailsAFirma.stamm
 
         IF emailphost.stamm <> "" THEN emailphost.supervis = emailphost.stamm
         IF emailpport.stamm > 0 THEN emailpport.supervis = emailpport.stamm
         IF emailPUserID.stamm <> "" THEN emailPUserID.supervis = emailPUserId.stamm
         IF emailPPasww.stamm <> "" THEN emailPPasww.supervis = emailPPasww.stamm
         EMAILPOP3JN.supervis = EMAILPOP3JN.stamm
         CALL QuickStore("supervis")
         SELECT NEXT LOCK FILE "supervis" INDEX codema.supervis
       WEND 
       REQUEST "Die Angaben wurden Åbernommen!",""
     END IF 
 END SELECT 
 WEND 
 SELECT FIRST FILE "STAMM"
 CALL INITStamm()
 IF zweitwaehr$ LIKE "Eur*" THEN 
   mastform$ = "EUR"
 END IF 
 IF UCASE$ (mastform$) = "EUR" THEN 
   artiform$ = "ARTIKEEU"
 ELSE 
   artiform$ = "ARTIKEL"
 END IF 
 
 _formend% = 0
 CALL INITStamm()
 END SUB 
 
SUB MNSTAMM()
 MENU CLEAR 
 CALL MNProgramm()
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"Proj-Adressen...aktualisieren","ProjektAkt","Adressen, Dokumente usw. an Projekte anpassen"
 CALL MNHilfe(3)
 END SUB 
 
SUB UebEMStamKonf(codema%)
 SELECT FIRST FILE "stamm"
 SELECT KEY codema% LOCK FILE "supervis" INDEX codema.supervis
 IF emailshost.stamm <> "" THEN emailshost.supervis = emailshost.stamm
 IF emailsport.stamm > 0 THEN emailsport.supervis = emailsport.stamm
 IF emailsUserID.stamm <> "" THEN emailsUserID.supervis = emailsUserId.stamm
 IF emailsAFirma.stamm <> "" THEN emailsAFirma.supervis = emailsAFirma.stamm
 
 IF emailphost.stamm <> "" THEN emailphost.supervis = emailphost.stamm
 IF emailpport.stamm > 0 THEN emailpport.supervis = emailpport.stamm
 IF emailPUserID.stamm <> "" THEN emailPUserID.supervis = emailPUserId.stamm
 IF emailPPasww.stamm <> "" THEN emailPPasww.supervis = emailPPasww.stamm
 EMAILPOP3JN.supervis = EMAILPOP3JN.stamm
 CALL QuickStore("supervis")
 FORM 
 END SUB 



SUB WaehrStamm()
     REM WÑhrung Stamm
     ON ERROR GOTO w2105200101
     DIM Waehrung$( RECCOUNT ("waehrung"))
w2105200101: 
     ON ERROR GOTO w2105200102
     DIM Auswahl1$(1)
w2105200102: 
     ON ERROR GOTO ErrorHandler
     FILE "waehrung"
     
     INDEX Codew.waehrung
     SELECT FIRST 
     a% = 0
     WHILE NOT EOF ("waehrung")
       Waehrung$(a%) = waehrung.waehrung + " (1Euro = " + STR$ (umrechnung.waehrung,",999999.000000") + " " + waehrung.waehrung + ")" + + SPACE$ (120) + STR$ (CodeW.waehrung,"000000")
       a% = a% + 1
       SELECT NEXT 
     WEND 
     FILE "stamm"
     CREATE DIALOG "PREISLIS",0,0,190,164,title$,"MS Sans Serif",8
      ADD DIALOG "PREISLIS",4,0,0,189,137,0," Auswahl WÑhrung"
      ADD DIALOG "PREISLIS",7,5,14,139,125,2,2,Waehrung$,Auswahl1$," "
      ADD DIALOG "PREISLIS",1,37,145,55,16,1,"&OK",1,1
      ADD DIALOG "PREISLIS",1,107,145,55,16,0,"&Abbrechen",0,0
      DIALOG "PREISLIS",req%
      REMOVE DIALOG "PREISLIS"
      IF req% = 1 THEN 
        _cuwaehr% = VAL ( RIGHT$ (Auswahl1$(0),6))
        SELECT KEY _cuwaehr% FILE "waehrung" INDEX codew.waehrung
        _cuwaehr% = CodeW.waehrung
        IF _cuwaehr% > 0 THEN cuwaehr% = _cuwaehr%
        
        SELECT FIRST LOCK FILE "stamm"
        CodeW.stamm = _cuwaehr%
        NUMBASE "z99999999.000000"
        euro% = umrechnung.waehrung
        Waehrung.stamm = waehrung.waehrung
        umrechnung.stamm = euro%
        zweitwaehr$ = waehrung.stamm
        euro% = umrechnung.stamm
        ZWCodew% = codew.stamm
        FOR i% = 1 TO 25
          feld1$ = "BWSEU" + STR$ (i%,"00") + ".stamm"
          feld2$ = "BWS" + STR$ (i%,"00") + ".stamm"
          feld1$$ = feld2$$ / umrechnung.stamm
        NEXT i%
        STORE FILE "stamm"
        waehr$ = "WÑhrung: " + waehrung.stamm
        Upd$ = UCASE$ (ReadConfig$(_projekt$,"UPDATE"))
        FILE "stamm"
      END IF 
      MOUSE ON 
      zweitwaehr$ = waehrung.stamm
      euro% = umrechnung.stamm
      ZWCodew% = codew.stamm
 END SUB 



 REM *****************************************************************************************
 REM *                                                                                       *
 REM *              Erstellung DTAUS-Diskette                                                *
 REM *                                                                                       *
 REM******************************************************************************************
SUB dtaus()
  CALL DFile(3,"dtaus")
  OPEN "c:\dtaus1.txt" FOR OUTPUT 
  dtaus_anz% = 0
  dtaus_sumdm% = 0
  dtaus_sumkn% = 0
  dtaus_sumblz% = 0
  dtaus_sumeuro% = 0
 
  SELECT FIRST FILE "dtaus"
 
  WHILE NOT EOF ("dtaus")
    IF satzart.dtaus = "A" THEN 
      REM Erster Datensatz
      ? STR$ (satzlaenge.dtaus,"0000");
      ? satzart.dtaus;
      ? a_kennzeichen.dtaus;
      ? STR$ (a_Bankleitzahl.dtaus,"00000000");
      ? "00000000";
      ? a_kundenname.dtaus;
      ? STR$ ( DAY ( TODAY ),"00"); STR$ ( MONTH ( TODAY ),"00"); MID$ ( STR$ ( YEAR ( TODAY ),"0000"),3,2);
      ? SPACE$ (4);
      ? STR$ (a_kontonummer.dtaus,"0000000000");
      ? STR$ (a_referenznr.dtaus,"0000000000");
      ? SPACE$ (47);
      IF a_waehrungknz.dtaus <> "1" THEN 
        ? " ";
      ELSE 
        ? a_waehrungknz.dtaus;
      END IF 
    ELSE IF satzart.dtaus = "C" THEN 
      dtaus_anz% = dtaus_anz% + 1
      REM ZwischensÑtze
      c_erwanz% = c_erwknz.dtaus
      IF c_erwanz% < 1 THEN 
        c_erwanz% = 0
      ELSE IF c_erwanz% > 2 THEN 
        c_erwanz% = 3
      END IF 
 
      REM c_erwknz.dtaus = erwanz%
      c_lenge% = 187 + (c_erwknz.dtaus * 29)
      ? STR$ (c_lenge%,"0000");
      ? satzart.dtaus;
      ? STR$ (c_bankleitzahl1.dtaus,"00000000");
      dtaus_sumblz% = dtaus_sumblz% + c_bankleitzahl2.dtaus
      ? STR$ (c_bankleitzahl2.dtaus,"00000000");
      dtaus_sumkn% = dtaus_sumkn% + c_kontonummer1.dtaus
      ? STR$ (c_kontonummer1.dtaus,"0000000000");
      ? STR$ (c_intkundennr.dtaus,"0000000000000");
      ? STR$ (c_textkey.dtaus,"00");
      ? STR$ (c_textkeyerg.dtaus,"000");
      ? SPACE$ (1);
      dtaus_sumdm% = dtaus_sumdm% + c_betragdm.dtaus
      ? STR$ (c_betragdm.dtaus,"00000000000");
      ? STR$ (c_bankleitzahl3.dtaus,"00000000");
      ? STR$ (c_kontonummer2.dtaus,"0000000000");
      dtaus_sumeuro% = dtaus_sumeuro% + c_betrageuro.dtaus
      ? STR$ (c_betrageuro.dtaus,"00000000000");
      ? SPACE$ (3);
      ? c_name1.dtaus;
      ? SPACE$ (8);
      ? c_name2.dtaus;
      ? c_verwzweck;
      IF c_waehrungknz.dtaus <> "1" THEN 
        ? " ";
      ELSE 
        ? c_waehrungknz.dtaus;
      END IF 
      ? SPACE$ (2);
      ? STR$ (c_erwanz%,"00");
      IF c_erwanz% > 0 THEN 
        ? STR$ (c_erwteilknz1.dtaus,"00");
        ? c_inhalt1.dtaus;
      END IF 
      IF c_erwanz% > 1 THEN 
        ? STR$ (c_erwteilknz2.dtaus,"00");
        ? c_inhalt2.dtaus;
        ? SPACE$ (11);
      END IF 
      IF c_erwanz% > 2 THEN 
        ? STR$ (c_erwteilknz3.dtaus,"00");
        ? c_inhalt3.dtaus;
      END IF 
      ? "02";
      ? SPACE$ (27);
      ? "02";
      ? SPACE$ (27);
      ? "02";
      ? SPACE$ (27);
      ? SPACE$ (12);
    END IF 
   SELECT NEXT FILE "dtaus"
  WEND 
   
  ? "0128";
  ? "E";
  ? SPACE$ (5);
  ? STR$ (dtaus_anz%,"0000000");
  ? STR$ (dtaus_sumdm%,"0000000000000");
  ? "000"; STR$ (dtaus_sumkn%,"00000000000000");
  ? "000"; STR$ (dtaus_sumblz%,"00000000000000");
  ? STR$ (dtaus_sumeuro%,"0000000000000");
  ? SPACE$ (51);
      
  CLOSE OUTPUT 
  
  REM CALL Info("Bitte legen Sie eine leere Diskette in Laufwerk A:","")
 
  REM COPY "c:\dtaus1.txt" TO "a:\dtaus"

 okrep% = 0
 WHILE okrep% = 0
   CALL ORep("DTBEGL")
   BEFORE REPORT 
       SET REPORT PAGE "H_REPORT"
       OUTPUT REPORT PAGE 
   END REPORT 
 
   AFTER SELECT 
       SET REPORT PAGE "F_SELECT"
       OUTPUT REPORT PAGE 
   END SELECT 
   ON ERROR GOTO ErrDTBLGDruck
   dtausanz% = dtaus_anz%
   dtaussumdm% = dtaus_sumdm% / 100
   dtaussumkn% = dtaus_sumkn%
   dtaussumblz% = dtaus_sumblz%
   nadtaus$ = Firma1.stamm
   blzdtaus$ = blz.stamm
   ktodtaus$ = Konto.stamm
   badtaus$ = Bank.stamm
   SET QUERY OFF 
   SET QUERY LOCK OFF 
   SET FIRST PAGE HEADING OFF 
   SELECT ;
       TO ASK 
   END SELECT 
ErrDTBLGDruck: 
   ON ERROR GOTO ErrorHandler
   REQUEST "Mîchten Sie den Ausdruck des DatentrÑgerbegleitscheines wiederholen?","",130,req5%
   IF req5% <> 1 THEN okrep% = 1
 WEND 
 END SUB 
 
SUB TerLiSpez(codeaq%)
 CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 CALL DFile(2,"OFFICE\ADRESSEN" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\Dokument" + _fpw$)
 GTerLispez% = - 1
 FILE GAkquiDat$
 INDEX codeaq.GAkquiDat$
 req% = 1
 _cuaq% = codeaq%
 SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 SELECT KEY codeku.GAkquiDat$ FILE "Adressen" INDEX codeku.adressen
 SELECT KEY codeku.GAkquiDat$ FILE "telefon" INDEX codeku.telefon
 IF req% = 1 THEN 
     lastT1% = _cuaq%
     _continue% = 1
     IF _continue% <> 0 THEN 
       cudat$ = DATE$ ( TODAY ,"0d.mm.yyyy")
       datanz$ = DATE$ ( TODAY ,"0d.mm.yyyy")
       SET STATUS "Bereit"
       _formend% = 0
       WHILE _formend% = 0
         REM vbezug$ = "Adre&sse"
         REM _vcodema% = vcodema%
         AQsub% = 0
         akmaske$ = aquimask.GAkquiDat$
         IF aquimask.GAkquiDat$ = "" THEN akmaske$ = "AKQUIPRJ"
         REM IF ProjectJN$ = "TRUE" THEN akmaske$ = "AKQUIPRJ"
         IF GCOdie% = - 1 THEN 
           ta% = 0
         ELSE 
           ta% = 1
         END IF 
         IF UCASE$ ( FORM ) <> akmaske$ OR ta% = 1 THEN 
           SET HEADING title$ + " - Termine"
           OPEN FORM GOFFForm$ + akmaske$
           SET f = Superbase.Form
           SELECT FORM KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           SET STATUS "Termine"
           CALL MNAKQUISE()
           MENU 5,4,0,"&Adresshistorie,F10","AQAdrHistT","Adresshistorie anzeigen/drucken"
           MENU ON 
           CALL AKQUISEIntro1()
           SELECT FORM KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           FORM 
           SET DISPLAY ON 
           CALL AQButtUpdate()
         ELSE 
           CALL AQButtUpdate()
         END IF 
         SET STATUS "Bereit"
         IF NOT NEW (GAkquiDat$) THEN 
           MENU ON 
           MOUSE ON 
           f.suchen.enabled = - 1
           f.suchen.visible = - 1
           f.abbruch.enabled = 0
           f.abbruch.visible = 0
           f.abbruch2.enabled = 0
           f.abbruch2.visible = 0
           IF _projeKt$ LIKE "PROVIS" THEN 
             f.vertrag.enabled = - 1
             f.vertrag.visible = - 1
           ELSE 
             f.vertrag.enabled = 0
             f.vertrag.visible = 0
           END IF 
           ON ERROR GOTO e040820091
           IF GEMAIL% = - 1 THEN 
             IF GEMAILJNAuto% = - 1 THEN 
               f.emailauto.visible = - 1
               f.emailauto.enabled = - 1
             ELSE 
               f.emailauto.visible = - 1
               f.emailauto.enabled = 0
             END IF 
           ELSE 
             f.emailbearb.visible = 0
             f.emailbearb.enabled = 0
           END IF 
e040820091: 
           ON ERROR GOTO ErrorHandler
           IF gvonadr% = - 1 THEN 
             f.adrmaske.enabled = 0
           ELSE 
             f.adrmaske.visible = - 1
             f.adrmaske.enabled = - 1
           END IF 
           WAIT MOUSE OR KEY OR UPDATE OR MENU 
           GET k$
           SELECT CASE ASC (k$)
           CASE CrsLeft%,PgUp%
             CALL AQPrev()
           CASE CrsRight%,PgDn%
             CALL AQNext()
           END SELECT 
           IF k$ = CHR$ (27) THEN 
             IF PAGE > 1 THEN 
               FORM 1
             ELSE 
               _formend% = 1
             END IF 
           END IF 
         ELSE 
           AQsub% = 99
         END IF 
         SELECT CASE AQsub%
       CASE 110
           REM Dokument schÅtzen
           codedok% = codedok.dokument
           IF dokpass.dokument = "" THEN 
             SELECT FIRST FILE "Stamm"
             passw$ = DokPass.stamm
             REQUEST "Soll das Dokument jetzt geschÅtzt werden?","",135,req%
             IF req% = 1 THEN 
               SELECT FIRST FILE "Dokument" INDEX codedok.dokument
               SELECT KEY codedok% LOCK FILE "Dokument" INDEX codedok.dokument
               IF EXISTS (_netpath$ + Dateiname.dokument) THEN 
                 ON ERROR GOTO Doc601220032
                 IF RIGHT$ (Dateiname.dokument,3) LIKE "doc" OR RIGHT$ (Dateiname.dokument,3) LIKE "dot" THEN 
                   CALL open_doc(_netpath$ + Dateiname.dokument,"")
                   CALL set_password(passw$)
                   CALL close_doc( - 1)
                 END IF 
Doc601220032: 
                 ON ERROR GOTO ErrorHandler
                 DokPass.dokument = passw$
                 STORE FILE "Dokument"
               END IF 
             END IF 
           ELSE 
 
             IF NOT MNdisabled%("DOKSCHUTZAUFHEBEN") THEN 
               REQUEST "Soll der Dokumentenschutz jetzt aufgehoben werden?","",135,req%
               IF req% = 1 THEN 
                 SELECT FIRST FILE "Dokument" INDEX codedok.dokument
                 SELECT KEY codedok% LOCK FILE "Dokument" INDEX codedok.dokument
                 IF EXISTS (_netpath$ + Dateiname.dokument) THEN 
                   passw$ = DokPass.dokument
                   ON ERROR GOTO Doc601220031
                   IF RIGHT$ (Dateiname.dokument,3) LIKE "doc" OR RIGHT$ (Dateiname.dokument,3) LIKE "dot" THEN 
                     CALL open_doc(_netpath$ + Dateiname.dokument,"")
                     CALL remove_password(passw$)
                     CALL close_doc( - 1)
                   END IF 
Doc601220031: 
                   ON ERROR GOTO ErrorHandler
                   DokPass.dokument = ""
                   STORE FILE "Dokument"
                 END IF 
               END IF 
           ELSE 
             CALL Fehler("Das Dokument wurde bereits geschÅtzt","")
           END IF 
         END IF 
         mssub% = 0
         CASE 109
           REM Dokument bearbeiten
           MENU OFF 
           GDokName$ = Dokument.dokument
           GDoknovi% = novi1.dokument
           ENTER Dokument.dokument,0
           MENU ON 
         CASE 108
           codeaq% = codeaq.GAkquiDat$
           SELECT FORM KEY codeaq% FILE "DOKUMENT" INDEX CodeAQ.dokument
           FORM 4
         CASE 107
           REM Dokument scannen
           REM CALL Fehler("Dokument einscannen","")
           IF FORM LIKE "AKQUIBUG" THEN 
             GAkquiDat$ = "AKQUISEB"
           ELSE 
             GAkquiDat$ = "AKQUISE"
           END IF 
           GCodeAQ% = codeaq.GAkquiDat$
           knr% = codeku.GAkquiDat$
           codeku% = codeku.GAkquiDat$
           knr% = codeku.GAkquiDat$
           CALL ScanDok(codeku%)
           SELECT FORM KEY Gcodeaq% FILE "DOKUMENT" INDEX CodeAQ.dokument
           FORM 4
         CASE 106
           REM Dokument vom Termin abkoppeln
           IF FORM LIKE "AKQUIBUG" THEN 
             GAkquiDat$ = "AKQUISEB"
           ELSE 
             GAkquiDat$ = "AKQUISE"
           END IF 
           GCodeAQ% = codeaq.GAkquiDat$
           knr% = codeku.Adressen
           codedok% = codedok.dokument
           SELECT FIRST FILE "Dokument" INDEX Codedok.Dokument
           SELECT KEY codedok% LOCK FILE "Dokument" INDEX Codedok.Dokument
           CodeAQ.dokument = 0
           CALL QuickStore("dokument")
           CALL Fehler("Dokument wurde vom Termin entkoppelt","")
         CASE 105
           REM Dokumentenverwaltung in Akquise
           IF FORM LIKE "AKQUIBUG" THEN 
             GAkquiDat$ = "AKQUISEB"
           ELSE 
             GAkquiDat$ = "AKQUISE"
           END IF 
           GCodeAQ% = codeaq.GAkquiDat$
           knr% = codeku.Adressen
           SELECT FORM KEY Gcodeaq% FILE "DOKUMENT" INDEX CodeAQ.dokument
           FORM 4
         CASE 104
           codeaq% = codeaq.GAkquiDat$
           adr% = ADRSuche%(0)
           IF adr% > 0 THEN 
             SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
             SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
             SELECT FIRST FILE "Adressen" INDEX codeku.adressen
             SELECT KEY adr% FILE "Adressen" INDEX codeku.adressen
             codeku.GAkquiDat$ = adr%
             knr% = adr%
             nachname.GAkquiDat$ = nachname.adressen
             CALL QuickStore(GAkquiDat$)
           END IF 
           SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           knr% = codeku.GAkquiDat$
           IF codedok.GAkquiDat$ > 0 THEN 
             codedok% = codedok.GAkquiDat$
             SELECT FIRST FILE "Dokument" INDEX codedok.Dokument
             SELECT KEY codedok% LOCK FILE "Dokument" INDEX codedok.Dokument
             CodeMA.dokument = codema.GAkquiDat$
             Bearbeiter.dokument = Bearbeiter.GAkquiDat$
             letzte_Bearbeit.DOKUMENT = TODAY 
             Codeku.dokument = knr%
             Link .dokument = knr%
             CALL QuickStore("Dokument")
           END IF 
         CASE 103
           codeaq% = codeaq.GAkquiDat$
           codeku% = codeku.GAkquiDat$
           knr% = codeku%
           CALL ADRESSEN()
           knr% = codeku%
           SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         CASE 102
           REM Export Termin nach Outlook
           codeaq% = codeaq.GAkquiDat$
           CALL TerExpOutl(codeaq%,0)
           SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           FORM 
           CALL AKQUISEIntro1()
         CASE 101
           REM TerminÅbersicht Kunde 12082003
           codeku% = codeku.GAkquiDat$
           codeaq% = codeaq.GAkquiDat$
           _cuaq% = codeaq%
           CALL KunTer1()
           knr% = codeku%
           GCodieruf2% = 0
           MOUSE OFF 
           SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
           SELECT KEY codeku% FILE "ADRESSEN" INDEX codeku.adressen
           IF UCASE$ ( FORM ) <> akmaske$ THEN 
             SET HEADING title$ + " - Termine"
             OPEN FORM GOFFForm$ + akmaske$
             SET f = Superbase.Form
             SET STATUS "Termine"
             CALL MNAKQUISE()
             MENU 6,3,1,"Liste erneut &anzeigen,F7","AQTermineO2","Suchliste erneut anzeigen"
             MENU ON 
             FORM 
             SET DISPLAY ON 
           END IF 
           MOUSE OFF 
           SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           FORM 
           CALL AKQUISEIntro1()
           MOUSE ON 
         CASE 99
           IF ergdatuma$ = "TRUE" AND NOT ( NEW (GAkquiDat$) OR MOD (GAkquiDat$)) THEN 
             codeaq% = CodeAQ.GAkquiDat$
             SELECT KEY codeaq% LOCK INDEX CodeAq.GAkquiDat$

             SELECT FIRST FILE "Supervis" INDEX codema.supervis
             SELECT KEY GMACodeMA% FILE "Supervis" INDEX codema.supervis
             IF kuerzel.supervis <> "" THEN 
               na$ = " - " + kuerzel.supervis + " -  "
             ELSE 
               na$ = " - " + name.supervis + " -  "
             END IF 
             IF ergebnis.GAkquiDat$ <> "" THEN 
               ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh.mm") + na$
             ELSE 
               ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + DATE$ ( TODAY ) + " " + TIME$ ( NOW ,"hh.mm") + na$
             END IF 

             CALL QuickStore(GAkquiDat$)
           END IF 
           MOUSE ON 
           IF PAGE = 1 THEN 
             CALL ButDesabled()
             f.adrmaske.enabled = 0
             f.email.enabled = 0
             f.projekt.enabled = 0
             f.seite2.enabled = 0
             f.offenetermine.enabled = 0
             f.terminplan.enabled = 0
             f.sprache.enabled = 0
             f.brief.enabled = 0
             f.telefon.enabled = 0
             f.mitarbeiter.enabled = 0
             f.bezug.enabled = 0
             f.aktion.enabled = 0
             f.kundeninfo.enabled = 0
             f.Monat.enabled = 0
             f.Juli.enabled = 0
             f.Jahr.enabled = 0
             f.W1.enabled = 0
             f.W2.enabled = 0
             f.W3.enabled = 0
             f.W4.enabled = 0
             f.W5.enabled = 0
             f.W6.enabled = 0
             f.vertrag.enabled = 0
             f.vertrag.visible = 0
           END IF 
           IF PAGE = 2 THEN 
             f.bearb2.enabled = 0
             f.abbruch2.enabled = - 1
             f.abbruch2.visible = - 1
             f.kundeninfo2.enabled = 0
             f.seite1.enabled = 0
           END IF 
           MENU OFF 
           ENTER datum.GAkquiDat$,0
           MENU ON 
           IF PAGE = 1 THEN 
             CALL ButEnabled()
             f.seite2.enabled = - 1
             f.offenetermine.enabled = - 1
             f.terminplan.enabled = - 1
             f.sprache.enabled = - 1
             f.brief.enabled = - 1
             f.telefon.enabled = - 1
             f.mitarbeiter.enabled = - 1
             f.bezug.enabled = - 1
             f.aktion.enabled = - 1
             f.kundeninfo.enabled = - 1
             f.Monat.enabled = - 1
             f.Juli.enabled = - 1
             f.Jahr.enabled = - 1
             f.W1.enabled = - 1
             f.W2.enabled = - 1
             f.W3.enabled = - 1
             f.W4.enabled = - 1
             f.W5.enabled = - 1
             f.W6.enabled = - 1
             f.suchen.enabled = - 1
             f.suchen.visible = - 1
             f.projekt.enabled = - 1
             IF _projeKt$ LIKE "PROVIS" THEN 
               f.vertrag.enabled = - 1
               f.vertrag.visible = - 1
             ELSE 
               f.vertrag.enabled = 0
               f.vertrag.visible = 0
             END IF 
           END IF 
           IF PAGE = 2 THEN 
             f.bearb2.enabled = - 1
             f.abbruch2.enabled = 0
             f.abbruch2.visible = 0
             f.kundeninfo2.enabled = - 1
             f.seite1.enabled = - 1
           END IF 
         END SELECT 
       WEND 
       IF art% = 2 THEN 
         SELECT FORM KEY _cuaq% INDEX codeaq.GAkquiDat$
         REM cuaq% = _cuaq%
       END IF 
     END IF 
     _formend% = 0
     IF art% = 1 THEN 
       cuaq% = 0
      _formend% = 0
     END IF 
     REM _formend% = 1
     IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) AND CodeAQ.GAkquiDat$ <> 0 THEN CALL FStore(GAkquiDat$)
   END IF 
 
 END SUB 


SUB ADRPost(codeku%)
   SELECT KEY codeku% LOCK FILE "Adressen" INDEX codeku.adressen
   Adrtemp$ = Postanschrift.adressen
   CREATE DIALOG "MakeAdr",0,0,273,156,title$,"MS Sans Serif",8
   ADD DIALOG "MakeAdr",4,0,0,272,131,0,""
   ADD DIALOG "MakeAdr",9,3,10,21,22,2
   ADD DIALOG "MakeAdr",5,29,11,233,19,0,"Bitte geben Sie an, wie die Adresse fÅr die öbergabe an die Textverarbeitung bereitgestellt werden soll:"
   ADD DIALOG "MakeAdr",6,30,33,236,86,68,2,Adrtemp$,1800
   ADD DIALOG "MakeAdr",1,73,135,55,15,0,"&Speichern",1,1
   ADD DIALOG "MakeAdr",1,129,135,55,15,0,"&Abbrechen",0,0
   DIALOG "MakeAdr",req%
   REMOVE DIALOG "MakeAdr"
   IF req% = 1 THEN 
     Postanschrift.adressen = Adrtemp$
     CALL QuickStore("Adressen")
   END IF 
 END SUB 


SUB ADRStatErw()
  f.ADRStatComboBox.List.Add("irgendwas")
 END SUB 


FUNCTION DokSuchen%(codeku%,befehl$)
    MOUSE OFF 
    GDokDat$ = "Dokument"
    opt1% = 1
    suna$ = ""
    DIM dokgruandi$(20000)
    DIM prjgruandi$(20000)
    DIM ersteller$(20000)
    DIM Bearbeiter$(20000)
    dokgruandi$(0) = "<ALLE>"
    prjgruandi$(0) = "<ALLE>"
    ersteller$(0) = "<ALLE>"
    bearbeiter$(0) = "<ALLE>"
    codeku1% = 0
    IF codeku1% > 0 THEN 
      SELECT FIRST FILE GDokDat$ INDEX codeku.GDokDat$
      SELECT KEY codeku% FILE GDokDat$ INDEX codeku.GDokDat$
      WHILE NOT EOF (GDokDat$) AND codeku.GDokDat$ = codeku%
        projekt$ = Projekt.GDokDat$
        gru$ = gruppe.GDokDat$
        erst$ = Creator.GDokDat$
        bearb$ = Bearbeiter.GDokDat$
        IF LTRIM$ (erst$) <> "" THEN 
          j% = 0
          vorh% = 0
          FOR i% = 1 TO 199
            IF ersteller$(i%) = erst$ THEN 
              vorh% = - 1
              i% = 200
            END IF 
            IF ersteller$(i%) = "" THEN 
              j% = i%
              i% = 200
            END IF 
          NEXT i%
          IF vorh% = 0 THEN 
            IF LTRIM$ (erst$) <> "" THEN ersteller$(j%) = erst$
          END IF 
        END IF 

        IF LTRIM$ (bearb$) <> "" THEN 
          j% = 0
          vorh% = 0
          FOR i% = 1 TO 199
            IF Bearbeiter$(i%) = bearb$ THEN 
              vorh% = - 1
              i% = 200
            END IF 
            IF Bearbeiter$(i%) = "" THEN 
              j% = i%
              i% = 200
            END IF 
          NEXT i%
          IF vorh% = 0 THEN 
            IF LTRIM$ (bearb$) <> "" THEN Bearbeiter$(j%) = bearb$
          END IF 
        END IF 


        IF LTRIM$ (projekt$) <> "" THEN 
          j% = 0
          vorh% = 0
          FOR i% = 1 TO 19999
            IF prjgruandi$(i%) = projekt$ THEN 
              vorh% = - 1
              i% = 20000
            END IF 
            IF prjgruandi$(i%) = "" THEN 
              j% = i%
              i% = 20000
            END IF 
          NEXT i%
          IF vorh% = 0 THEN 
            prjgruandi$(j%) = projekt$
          END IF 
        END IF 
        IF LTRIM$ (gru$) <> "" THEN 
          j% = 0
          vorh% = 0
          FOR i% = 1 TO 199
            IF dokgruandi$(i%) = gru$ THEN 
              vorh% = - 1
              i% = 200
            END IF 
            IF dokgruandi$(i%) = "" THEN 
              j% = i%
              i% = 200
            END IF 
          NEXT i%
          IF vorh% = 0 THEN 
            dokgruandi$(j%) = gru$
          END IF 
        END IF 
        SELECT NEXT FILE GDokDat$
      WEND 
    ELSE 
      REM die Sachen direkt aus der Projektdatei und DokGruppen entnehmen
      a% = 1
      dokgruandi$(0) = "<ALLE>"
      dokgruandi$(1) = "allgemeine Schreiben"
      WHILE dokgruandi$(a%) <> "leer"
        a% = a% + 1
        dokgruandi$(a%) = FN ibm(ReadConfig$("Dokumentengruppen","Gruppe" + LTRIM$ ( STR$ (a%,"999999"))))
      WEND 
      a% = 1
      prjgruandi$(0) = "<ALLE>"
      SELECT FIRST FILE "project"
      WHILE NOT EOF ("project") AND a% < 20000
        prjgruandi$(a%) = name1.project + SPACE$ (100) + STR$ (codepr.project,"000000")
        a% = a% + 1
        SELECT NEXT FILE "project"
      WEND 

      a% = 1
      ersteller$(0) = "<ALLE>"
      SELECT FIRST FILE "supervis"
      WHILE NOT EOF ("supervis")
        ersteller$(a%) = name.supervis
        a% = a% + 1
        SELECT NEXT FILE "supervis"
      WEND 

      a% = 1
      bearbeiter$(0) = "<ALLE>"
      SELECT FIRST FILE "supervis"
      WHILE NOT EOF ("supervis")
        bearbeiter$(a%) = name.supervis
        a% = a% + 1
        SELECT NEXT FILE "supervis"
      WEND 


    END IF 
    MOUSE ON 
    seldokgr$ = "<ALLE>"
    selprj$ = "<ALLE>"
    selerst$ = "<ALLE>"
    selbearb$ = "<ALLE>"

    DIM dlg AS Dialog
    DIM control AS DialogControl
 
    Superbase.Dialogs.Add("ADRSUCH")
    SET dlg = Superbase.Dialogs.ADRSUCH
    dlg.Move(0,0,222,259)
    dlg.Caption = "Dokumentensuche"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(0,1,222,64)
    control.Caption = "Suche nach"
 
    SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
    control.Move(30,19,106,11)
    control.Caption = "Dokumenten-Namen"
    control.Bind("opt1%")
    control.ValueOn = 1
 
    SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
    control.Move(30,33,106,11)
    control.Caption = "Dokumenten-Nummer"
    control.Bind("opt1%")
    control.ValueOn = 2

    IF codeku% > 0 THEN 
      SET control = dlg.Add("DialogOptionButton3","DialogOptionButton")
      control.Move(30,46,106,11)
      control.Caption = "alle Dokumente"
      control.Bind("opt1%")
      control.ValueOn = 3
    END IF 

    SET control = dlg.Add("DialogFrame2","DialogFrame")
    control.Move(0,65,222,124)
    control.Caption = "Filter"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(5,78,177,8)
    control.Caption = "Dokumentengruppen"
 
    SET control = dlg.Add("DialogComboBox1","DialogComboBox")
    control.Move(5,91,212,165)
    control.Style = 0
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("dokgruandi$","seldokgr$")
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(5,108,145,8)
    control.Caption = "Projekte"
 
    SET control = dlg.Add("DialogComboBox2","DialogComboBox")
    control.Move(5,118,212,134)
    control.Style = 0
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("prjgruandi$","selprj$")
 
    SET control = dlg.Add("DialogLabel7","DialogLabel")
    control.Move(5,134,177,10)
    control.Caption = "Bearbeiter"
 
    SET control = dlg.Add("DialogComboBox6","DialogComboBox")
    control.Move(5,145,212,111)
    control.Style = 0
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("bearbeiter$","selbearb$")
 
    SET control = dlg.Add("DialogLabel8","DialogLabel")
    control.Move(5,161,177,10)
    control.Caption = "Ersteller"
 
    SET control = dlg.Add("DialogComboBox7","DialogComboBox")
    control.Move(5,172,212,85)
    control.Style = 0
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("ersteller$","selerst$")
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(20,202,133,10)
    control.Caption = "Dokument/Dokumenten-Nr:"
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(20,215,179,11)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "suna$"
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(32,233,64,16)
    control.Default = 1
    control.Caption = "&Suche"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(97,233,64,16)
    control.Caption = "&Abbruch"
    control.ReturnValue = 0
    control.Cancel = 1
 

   
    DIALOG "ADRSUCH",req%
    REMOVE DIALOG "ADRSUCH"

    tfound% = 0
    MOUSE OFF 
    IF RECCOUNT ("Dokument") < 20000 THEN 
      REDIM AdrFound$( RECCOUNT ("Dokument"),1)
      REDIM AdrFound$( RECCOUNT ("Dokument"))
      zahl% = RECCOUNT ("Dokument")
    ELSE 
      REDIM AdrFound$(20000,1)
      REDIM AdrFound$(20000)
      zahl% = 20000
    END IF 
    REM CALL Fehler("","")
    IF req% = 1 THEN 
      FILE "Dokument"
      MOUSE OFF 
      fi% = 0
      IF seldokgr$ <> "<ALLE>" AND seldokgr$ <> "" THEN 
        SELECT WHERE FILE "DOKUMENT"
        IF codeku% = 0 THEN 
          IF befehl$ = "" THEN befehl$ = "select where codedok.dokument > 0 "
        ELSE 
          IF befehl$ = "" THEN befehl$ = "select where codeku.dokument = codeku%  "
        END IF 
        IF selprj$ <> "<ALLE>" AND selprj$ <> "" THEN 
          codepr% = VAL ( RIGHT$ (selprj$,6))
          befehl$ = befehl$ + " and gruppe.dokument = seldokgr$ and codepr.dokument = codepr%"
          REM befehl$ = befehl$ + " and gruppe.dokument = seldokgr$ and Projekt.dokument = selprj$"
          fi% = - 1
        ELSE 
          befehl$ = befehl$ + " and gruppe.dokument = seldokgr$"
          fi% = - 1
        END IF 
      ELSE 
        IF selprj$ <> "<ALLE>" AND selprj$ <> "" THEN 
          SELECT WHERE FILE "DOKUMENT"
          IF codeku% = 0 THEN 
            IF befehl$ = "" THEN befehl$ = "select where codedok.dokument > 0 "
          ELSE 
            IF befehl$ = "" THEN befehl$ = "select where codeku.dokument = codeku%  "
          END IF 
          codepr% = VAL ( RIGHT$ (selprj$,6))
          befehl$ = befehl$ + " and codepr.dokument = codepr%"
          REM befehl$ = befehl$ + " and Projekt.dokument = selprj$"
          fi% = - 1
        END IF 
      END IF 
      IF selerst$ <> "<ALLE>" AND selerst$ <> "" THEN 
        befehl$ = befehl$ + " and Creator.dokument = selerst$"
        fi% = - 1
      END IF 
      IF selbearb$ <> "<ALLE>" AND selbearb$ <> "" THEN 
        befehl$ = befehl$ + " and Bearbeiter.dokument = selbearb$"
        fi% = - 1
      END IF 
      IF fi% = - 1 THEN 
        IF codeku% > 0 THEN 
          befehl$ = befehl$ + " and codeku.dokument = codeku%"
        END IF 
        EXECUTE befehl$
      END IF 
      IF codeku% < 1 THEN 
        IF fi% <> - 1 THEN 
          SELECT WHERE FILE "dokument"
        END IF 
        INDEX dokument.dokument
        SELECT FIRST 
        
      ELSE 
        IF fi% <> - 1 THEN 
          SELECT WHERE FILE "dokument"
        END IF 
        INDEX codeku.dokument
        SELECT FIRST FILE "dokument" INDEX codeku.dokument
        SELECT KEY codeku% FILE "dokument" INDEX codeku.dokument
      END IF 
      
      IF GCODIE% = - 1 THEN 
        CALL SearchInitDo1("DOKUMENT")
      END IF 

      IF codeku% < 1 THEN WHILE NOT EOF ("Dokument")
      IF codeku% > 0 THEN WHILE NOT EOF ("Dokument") AND codeku.dokument = codeku%
        IF opt1% = 3 THEN 
              sok% = - 1
              IF GASP% AND Workstation% > 0 THEN 
                wks% = Workstation.GDOKDAT$
                FOR ii% = 0 TO VisCount% - 1' Fall externes BÅro
                  wks% = VisOff%(ii%)
                  aa% = IsWksVisible%(wks%)
                  IF aa% = - 1 AND Workstation.GDOKDAT$ = wks% THEN 
                    sok% = - 1
                    ii% = VisCount%
                  ELSE 
                    sok% = 0
                  END IF 
                NEXT ii%
              ELSE 
                sok% = - 1
              END IF 
              IF sok% THEN 
                AdrFound$(tfound%) = dokument.GDokDat$ + SPACE$ (250) + STR$ (codedok.GDokDat$,"000000")
                tfound% = tfound% + 1
                IF GCODIE% = - 1 THEN CALL SearchVorbDO1(GDokDat$)
              END IF 
        END IF 
 
        IF opt1% = 1 THEN 
          IF codeku% < 1 THEN 
            IF dokument.dokument LIKE suna$ + "*" OR dokument.dokument LIKE "*" + suna$ + "*" THEN 
              AdrFound$(tfound%) = dokument.dokument + SPACE$ (250) + STR$ (codedok.dokument,"000000")
              tfound% = tfound% + 1
              IF GCODIE% = - 1 THEN CALL SearchVorbDO1("DOKUMENT")
            END IF 
          ELSE 
            IF dokument.dokument LIKE suna$ + "*" OR dokument.dokument LIKE "*" + suna$ + "*" THEN 
              IF codeku.dokument = codeku% THEN 
                AdrFound$(tfound%) = dokument.dokument + SPACE$ (250) + STR$ (codedok.dokument,"000000")
                tfound% = tfound% + 1
                IF GCODIE% = - 1 THEN CALL SearchVorbDO1("DOKUMENT")
              END IF 
            END IF 
          END IF 
        ELSE 
          IF codeku% < 1 THEN 
            IF codedok.dokument = VAL (suna$) THEN 
              AdrFound$(tfound%) = dokument.dokument + SPACE$ (250) + STR$ (codedok.dokument,"000000")
              tfound% = tfound% + 1
              IF GCODIE% = - 1 THEN CALL SearchVorbDO1("DOKUMENT")
            END IF 
          ELSE 
            IF codedok.dokument = VAL (suna$) THEN 
              IF codeku.dokument = codeku% THEN 
                AdrFound$(tfound%) = dokument.dokument + SPACE$ (250) + STR$ (codedok.dokument,"000000")
                tfound% = tfound% + 1
                IF GCODIE% = - 1 THEN CALL SearchVorbDO1("DOKUMENT")
              END IF 
            END IF 
          END IF 
        END IF 
        MOUSE OFF 
        SELECT NEXT FILE "Dokument"
        SET STATUS Dokument.dokument
      WEND 
      AdrFound$(tfound%) = ""
      adrfound% = 0
      MOUSE ON 
      IF tfound% > 0 THEN 
        IF GCODIE% = - 1 THEN 
         c$ = "aa"
         REM CALL Fehler("Doksuche","")
         req3% = CALL ("_SearchShow",c$)
         IF VAL (c$) <> 0 THEN 
           AdrSuche% = VAL (c$)
           adrfound% = VAL (c$)
           DokSuchen% = AdrSuche%
           REM MENU 4,2,1,"aus Suchliste &wÑhlen,F7","DokKurzSuche","Auflistung aller vorher gesuchten Dokumente"
           ok% = 0
           SET STATUS "Dokument gefunden..."
         END IF 
       ELSE 
         MENU 4,2,1,"aus Suchliste &wÑhlen,F7","DokKurzSuche","Auflistung aller vorher gesuchten Dokumente"
         CREATE DIALOG "ADRLISTE",0,0,440,197,title$,"MS Sans Serif",8
         REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
         ADD DIALOG "ADRLISTE",7,5,8,428,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRLISTE",1,124,174,56,16,1,"&OK",1,1
         ADD DIALOG "ADRLISTE",1,184,174,56,16,0,"&Abbrechen",0,0
      
         DIALOG "ADRLISTE",req3%
         MOUSE ON 
         REMOVE DIALOG "ADRLISTE"
         REM 200999 Serienbrief
         IF req3% = 1 THEN 
           LAuswahl$ = LAuswahl1$(0)
           AdrSuche% = VAL ( RIGHT$ (LAuswahl$,6))
           DokSuchen% = AdrSuche%
           adrfound% = VAL ( RIGHT$ (LAuswahl$,6))
           ok% = 0
           SET STATUS "Adresse gefunden..."
         ELSE 
           AdrSuche% = 0
           DokSuchen% = 0
         END IF 
       END IF 
      ELSE 
        AdrSuche% = 0
        DokSuchen% = 0
        CALL Fehler("Kein Dokument gefunden, das den Suchkriterien entsprach!","")
        MENU 4,2,0,"aus Suchliste &wÑhlen,F7","DokKurzSuche","Auflistung aller vorher gesuchten Dokumente"
      END IF 
      IF adrfound% > 0 THEN 
        SELECT FORM KEY adrfound% FILE "Dokument" INDEX codedok.dokument
        FORM 
      END IF 
    ELSE 
      DokSuchen% = 0
    END IF 
 END FUNCTION 

FUNCTION DokSuchenP%(codepr%)
    opt1% = 1
    DIM dlg AS Dialog
    DIM control AS DialogControl
 
    Superbase.Dialogs.Add("ADRSUCH")
    SET dlg = Superbase.Dialogs.ADRSUCH
    dlg.Move(0,0,222,126)
    dlg.Caption = "Dokumentensuche"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(0,1,222,56)
    control.Caption = "Suche nach"
 
    SET control = dlg.Add("DialogIcon1","DialogIcon")
    control.Move(2,16,20,22)
    control.Icon = 2
 
    SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
    control.Move(30,19,106,11)
    control.Caption = "Dokumenten-Namen"
    control.Bind("opt1%")
    control.ValueOn = 1
 
    SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
    control.Move(30,33,106,11)
    control.Caption = "Dokumenten-Nummer"
    control.Bind("opt1%")
    control.ValueOn = 2
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(23,72,133,9)
    control.Caption = "Dokument/Dokumenten-Nr:"
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(22,85,179,11)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "suna$"
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(35,103,64,16)
    control.Default = 1
    control.Caption = "&Suche"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(100,103,64,16)
    control.Caption = "&Abbruch"
    control.ReturnValue = 0
    control.Cancel = 1
 
    DIALOG "ADRSUCH",req%
    REMOVE DIALOG "ADRSUCH"
 
    tfound% = 0
    MOUSE OFF 
    IF RECCOUNT ("Dokument") < 20000 THEN 
      REDIM AdrFound$( RECCOUNT ("Dokument"))
      zahl% = RECCOUNT ("Dokument")
    ELSE 
      REDIM AdrFound$(20000)
      zahl% = 20000
    END IF 
    REM CALL Fehler("","")
    IF req% = 1 THEN 
      FILE "Dokument"
      INDEX codepr.dokument
      SELECT FIRST 
      SELECT KEY codepr% FILE "dokument" INDEX codepr.dokument
      WHILE NOT EOF ("Dokument") AND codepr.dokument = codepr%
        IF opt1% = 1 THEN 
            IF dokument.dokument LIKE suna$ + "*" OR dokument.dokument LIKE "*" + suna$ + "*" THEN 
              IF codepr.dokument = codepr% THEN 
                AdrFound$(tfound%) = dokument.dokument + SPACE$ (250) + STR$ (codedok.dokument,"000000")
                tfound% = tfound% + 1
              END IF 
            END IF 
        ELSE 
            IF codedok.dokument = VAL (suna$) THEN 
              IF codepr.dokument = codepr% THEN 
                AdrFound$(tfound%) = dokument.dokument + SPACE$ (250) + STR$ (codedok.dokument,"000000")
                tfound% = tfound% + 1
              END IF 
            END IF 
        END IF 
        SELECT NEXT FILE "Dokument" INDEX codepr.dokument
      WEND 
      IF tfound% > 0 THEN 
        tfound% = tfound% + 1
        AdrFound$(tfound%) = ""
      END IF 
      adrfound% = 0
      MOUSE ON 
      REM CALL Fehler("","")
      IF tfound% > 0 THEN 
        MENU 4,2,1,"aus Suchliste &wÑhlen,F7","DokKurzSuche","Auflistung aller vorher gesuchten Dokumente"
        CREATE DIALOG "ADRLISTE",0,0,440,197,title$,"MS Sans Serif",8
        REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
        ADD DIALOG "ADRLISTE",7,5,8,428,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
        ADD DIALOG "ADRLISTE",1,124,174,56,16,1,"&OK",1,1
        ADD DIALOG "ADRLISTE",1,184,174,56,16,0,"&Abbrechen",0,0
      
        DIALOG "ADRLISTE",req3%
        MOUSE ON 
        REMOVE DIALOG "ADRLISTE"
        REM 200999 Serienbrief
        IF req3% = 1 THEN 
          LAuswahl$ = LAuswahl1$(0)
          AdrSuche% = VAL ( RIGHT$ (LAuswahl$,6))
          DokSuchenP% = AdrSuche%
          adrfound% = VAL ( RIGHT$ (LAuswahl$,6))
          ok% = 0
          SET STATUS "Dokument gefunden..."
        ELSE 
          AdrSuche% = 0
          DokSuchenP% = 0
        END IF 
      ELSE 
        CALL Fehler("Kein Dokument gefunden, das den Suchkreterien entsprach!","")
        MENU 4,2,0,"aus Suchliste &wÑhlen,F7","DokKurzSuche","Auflistung aller vorher gesuchten Dokumente"
      END IF 
      IF adrfound% > 0 THEN 
        SELECT FIRST FILE "Dokument" INDEX codedok.dokument
        SELECT FORM KEY adrfound% FILE "Dokument" INDEX codedok.dokument
        FORM 
      END IF 
    ELSE 
      DokSuchenP% = 0
    END IF 
 END FUNCTION 
 


SUB DokKurzSuche()
 REM CALL Fehler("","")
 IF GCODIE% = - 1 THEN 
   c$ = "aa"
   req3% = CALL ("_SearchReShow",c$)
   IF VAL (c$) <> 0 THEN 
     adr% = VAL (c$)
     adrfound% = VAL (c$)
     ok% = 0
    SET STATUS "Dokument gefunden..."
   END IF 
 ELSE 
   IF adrfound% <> 0 THEN 
     prompt% = 0
     FOR a% = 0 TO tfound%
       IF AdrFound$(a%) <> "" AND VAL ( RIGHT$ (Adrfound$(a%),6)) = adrfound% THEN 
         IF prompt% = 0 THEN prompt% = a%
       END IF 
     NEXT a%
     codedok% = Codedok.dokument
     LAuswahl$ = LAuswahl1$(0)
     AdrFound$ = LAuswahl$
     adrfound% = 1
     CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"MS Sans Serif",8
     REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
     ADD DIALOG "ADRLISTE",7,5,8,328,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(prompt%)
     ADD DIALOG "ADRLISTE",1,74,174,56,16,1,"&OK",1,1
     ADD DIALOG "ADRLISTE",1,134,174,56,16,0,"&Abbrechen",0,0
 
     DIALOG "ADRLISTE",req3%
     MOUSE ON 
     REMOVE DIALOG "ADRLISTE"
     IF req3% = 1 THEN 
       LAuswahl$ = LAuswahl1$(0)
       adr% = VAL ( RIGHT$ (LAuswahl$,6))
       adrfound% = adr%
       ok% = 0
       SET STATUS "Dokument gefunden..."
     ELSE 
       adr% = 0
     END IF 
   END IF 
 END IF 
 IF adr% <> 0 THEN 
   codedok% = adr%
   cudo% = adr%
 END IF 
 SELECT FORM KEY codedok% FILE "dokument" INDEX Codedok.dokument
 IF UCASE$ ( FORM ) <> "DOKEPRJ" THEN CALL DOKSRV1()
 FORM 
 MOUSE ON 
 
 END SUB 
 
 REM Report aus Projekt-pfad
SUB PRep(prep$)
 test$ = GPRJForm$ + prep$ + ".sbv"
 IF EXISTS (GPRJForm$ + prep$ + ".sbv") THEN 
   abc$ = DIRECTORY :DIRECTORY GPRJForm$
   REPORT USING prep$
   DIRECTORY abc$
 ELSE 
   REPORT USING prep$
 END IF 
 END SUB 

 REM Report aus office-pfad
SUB ORep(prep$)
 IF EXISTS (GOFFForm$ + prep$ + ".sbv") THEN 
   abc$ = DIRECTORY :DIRECTORY GOFFForm$
   REPORT USING prep$
   DIRECTORY abc$
 ELSE 
   REPORT USING prep$
 END IF 
 END SUB 


SUB ADRTermine1()
 REQUEST "Sollen die Termine in die Datei ADRTERM kopiert werden?","",130,req%
 IF req% <> 1 THEN END SUB 
 MOUSE OFF 
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\adrterm" + _fpw$)
 CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 FILE "telefon"
 INDEX codeku.telefon
 SELECT FIRST 
 FILE GAkquiDat$
 INDEX QuickKuter.GAkquiDat$
 SELECT LAST 
 codekuold% = codeku.GAkquiDat$
 codeku% = codeku.GAkquiDat$
 i% = 0
 REMOVE FROM FILE "adrterm"
     BLANK FILE "adrterm"
     codekey.adrterm = SER ("adrterm",1)
     codeku.adrterm = codeku.GAkquiDat$
     STORE FILE "adrterm"
     UNLOCK CURRENT FILE "adrterm"
 z% = RECCOUNT (GAkquiDat$)
 WHILE NOT EOF (GAkquiDat$)
   SET STATUS LTRIM$ ( STR$ (i%,",99999999")) + " DatensÑtz aus AKQUISE bearbeitet  von " + LTRIM$ ( STR$ (z%,",99999999"))
   IF codekuold% = codeku.GAkquiDat$ THEN 
     SELECT KEY codekuold% LOCK FILE "Adrterm" INDEX codeku.adrterm
   ELSE 
     BLANK FILE "adrterm"
     codekey.adrterm = SER ("adrterm",1)
     codeku.adrterm = codeku.GAkquiDat$
     codekuold% = codeku.GAkquiDat$
       IF EXISTS (codeku.GAkquiDat$,codeku.telefon) THEN 
         SELECT KEY codeku.GAkquiDat$ FILE "telefon" INDEX codeku.telefon
         WHILE NOT EOF ("telefon") AND codeku.telefon = codeku.GAkquiDat$
           telefon.adrterm = telefon.adrterm + LEFT$ (art.telefon) + "   " + LEFT$ (nummer.telefon) + CHR$ (10) + CHR$ (13)
           SELECT NEXT FILE "telefon"
         WEND 
         SELECT FIRST FILE "telefon"
       END IF 
   END IF 
 
     IF notiz.GAkquiDat$ <> "" OR ergebnis.GAkquiDat$ <> "" THEN 
       codeak% = codeak.GAkquiDat$
       SELECT KEY codeak% FILE "aktionen" INDEX codeak.aktionen
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ("fÅr Mitarbeiter: " + bearbeiter.GAkquiDat$ + "  Aktion: " + Bezeichnung.aktionen + CHR$ (10) + CHR$ (13))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + "fÅr Mitarbeiter: " + bearbeiter.GAkquiDat$ + "  Aktion: " + Bezeichnung.aktionen + CHR$ (10) + CHR$ (13)
       END IF 
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ("Datum:" + DATE$ (datum.GAkquiDat$,"0d.mm.yyyy"))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + "Datum:" + DATE$ (datum.GAkquiDat$,"0d.mm.yyyy")
       END IF 
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ("  Termin:" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy"))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + "  Termin:" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy")
       END IF 
       IF uhrzeit.GAkquiDat$ > 0 THEN 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("  Uhrzeit:" + TIME$ (uhrzeit.GAkquiDat$,"hh:mm"))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "  Uhrzeit:" + TIME$ (uhrzeit.GAkquiDat$,"hh:mm")
         END IF 
       END IF 
       IF erdatum.GAkquiDat$ > 0 THEN 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("  VorlageTermin:" + DATE$ (erdatum.GAkquiDat$,"0d.mm.yyyy"))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "  VorlageTermin:" + DATE$ (erdatum.GAkquiDat$,"0d.mm.yyyy")
         END IF 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("  Vorlagezeit:" + TIME$ (erzeit.GAkquiDat$,"hh:mm"))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "  Vorlagezeit:" + TIME$ (erzeit.GAkquiDat$,"hh:mm")
         END IF 
       END IF 
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ("  erledigt: " + erledigt_Termin.GAkquiDat$ + CHR$ (10) + CHR$ (13))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + "  erledigt: " + UCASE$ (erledigt_Termin.GAkquiDat$) + CHR$ (10) + CHR$ (13)
       END IF 
       IF TRIM$ ( LTRIM$ (notiz.GAkquiDat$)) <> "" THEN 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("Notiz:" + CHR$ (10) + CHR$ (13))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "Notiz:" + CHR$ (10) + CHR$ (13)
         END IF 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ( LTRIM$ (notiz.GAkquiDat$) + CHR$ (10) + CHR$ (13))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + TRIM$ ( LTRIM$ (notiz.GAkquiDat$)) + CHR$ (10) + CHR$ (13)
         END IF 
       END IF 
       IF TRIM$ ( LTRIM$ (ergebnis.GAkquiDat$)) <> "" THEN 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("Ergebnis:" + CHR$ (10) + CHR$ (13))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "Ergebnis:" + CHR$ (10) + CHR$ (13)
         END IF 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ( TRIM$ ( LTRIM$ (ergebnis.GAkquiDat$)) + CHR$ (10) + CHR$ (13))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + LTRIM$ (ergebnis.GAkquiDat$) + CHR$ (10) + CHR$ (13)
         END IF 
       END IF 
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ( CHR$ (10) + CHR$ (13))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + CHR$ (10) + CHR$ (13)
       END IF 
       IF EXISTS (codeaq.GAkquiDat$,codeaq.tvorlage) THEN 
         SELECT KEY codeaq.GAkquiDat$ FILE "tvorlage" INDEX codeaq.tvorlage
         codetv.adrterm = codetv.tvorlage
       END IF 
       SELECT KEY codeku.GAkquiDat$ FILE "adressen" INDEX codeku.adressen
       Vorname.adrterm = vorname.adressen
       nachname.adrterm = nachname.adressen
       ort.adrterm = ort.adressen
       stra·e.adrterm = stra·e.adressen
       plz.adrterm = plz.adressen
       kundennummer.adrterm = kundennummer.adressen
       STORE FILE "adrterm"
       UNLOCK CURRENT FILE "adrterm"
     END IF 
     i% = i% + 1
   SELECT PREVIOUS FILE GAkquiDat$
 WEND 
 MOUSE ON 
 END SUB 

SUB ADRTermine2()
 MOUSE OFF 
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\adrterm" + _fpw$)
 CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 FILE "telefon"
 INDEX codeku.telefon
 SELECT FIRST 
 FILE GAkquiDat$
 INDEX QuickKuter.GAkquiDat$
 SELECT FIRST 
 FILE "tvorlage"
 INDEX codetv.tvorlage
 SELECT FIRST 
 codeaqold% = codeaq.tvorlage
 codeaq% = codeaq.tvorlage
 i% = 0
 WHILE NOT EOF ("tvorlage")
  IF codema.tvorlage = vcodema% THEN 
   SET STATUS STR$ (i%,"999999") + " DatensÑtz bearbeitet"
   SELECT KEY codeaq.tvorlage FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
   IF EXISTS (codetv.tvorlage,codetv.adrterm) THEN 
     SELECT KEY codetv.tvorlage LOCK FILE "adrterm" INDEX codetv.adrterm
   ELSE 
     BLANK FILE "adrterm"
     codekey.adrterm = SER ("adrterm",1)
     codeku.adrterm = codeku.GAkquiDat$
     codetv.adrterm = codetv.tvorlage
     STORE FILE "adrterm"
     UNLOCK CURRENT FILE "adrterm"
   END IF 
   codeku% = codeku.GAkquiDat$
   QuickKuter$ = STR$ (codeku%,"000000") + "29999999"
   SELECT KEY QuickKuter$ FILE GAkquiDat$ INDEX QuickKuter.GAkquiDat$
   cu% = codeku.GAkquiDat$
   IF codeku.GAkquiDat$ <> codeku% THEN 
     SELECT PREVIOUS FILE GAkquiDat$ INDEX QuickKuter.GAkquiDat$
   END IF 
   cu% = codeku.GAkquiDat$
       IF EXISTS (codeku%,codeku.telefon) THEN 
         SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
         telefon$ = ""
         WHILE NOT EOF ("telefon") AND codeku.telefon = codeku.GAkquiDat$
           telefon$ = telefon$ + LEFT$ (art.telefon) + "   " + LEFT$ (nummer.telefon) + CHR$ (10) + CHR$ (13)
           SELECT NEXT FILE "telefon"
         WEND 
         SELECT FIRST FILE "telefon"
       END IF 
    SELECT KEY codetv.tvorlage LOCK FILE "adrterm" INDEX codetv.adrterm
    notiz.adrterm = ""
    STORE FILE "adrterm"
    UNLOCK CURRENT FILE "adrterm"
    WHILE NOT EOF (GAkquiDat$) AND codeku.GAkquiDat$ = codeku%
     SELECT KEY codetv.tvorlage LOCK FILE "adrterm" INDEX codetv.adrterm
     IF notiz.GAkquiDat$ <> "" OR ergebnis.GAkquiDat$ <> "" THEN 
       codeak% = codeak.GAkquiDat$
       SELECT KEY codeak% FILE "aktionen" INDEX codeak.aktionen
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ("fÅr Mitarbeiter: " + bearbeiter.GAkquiDat$ + "  Aktion: " + Bezeichnung.aktionen + CHR$ (10) + CHR$ (13))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + "fÅr Mitarbeiter: " + bearbeiter.GAkquiDat$ + "  Aktion: " + Bezeichnung.aktionen + CHR$ (10) + CHR$ (13)
       END IF 
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ("Datum:" + DATE$ (datum.GAkquiDat$,"0d.mm.yyyy"))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + "Datum:" + DATE$ (datum.GAkquiDat$,"0d.mm.yyyy")
       END IF 
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ("  Termin:" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy"))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + "  Termin:" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy")
       END IF 
       IF uhrzeit.GAkquiDat$ > 0 THEN 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("  Uhrzeit:" + TIME$ (uhrzeit.GAkquiDat$,"hh:mm"))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "  Uhrzeit:" + TIME$ (uhrzeit.GAkquiDat$,"hh:mm")
         END IF 
       END IF 
       IF erdatum.GAkquiDat$ > 0 THEN 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("  VorlageTermin:" + DATE$ (erdatum.GAkquiDat$,"0d.mm.yyyy"))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "  VorlageTermin:" + DATE$ (erdatum.GAkquiDat$,"0d.mm.yyyy")
         END IF 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("  Vorlagezeit:" + TIME$ (erzeit.GAkquiDat$,"hh:mm"))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "  Vorlagezeit:" + TIME$ (erzeit.GAkquiDat$,"hh:mm")
         END IF 
       END IF 
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ("  erledigt: " + erledigt_Termin.GAkquiDat$ + CHR$ (10) + CHR$ (13))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + "  erledigt: " + UCASE$ (erledigt_Termin.GAkquiDat$) + CHR$ (10) + CHR$ (13)
       END IF 
       IF TRIM$ ( LTRIM$ (notiz.GAkquiDat$)) <> "" THEN 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("Notiz:" + CHR$ (10) + CHR$ (13))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "Notiz:" + CHR$ (10) + CHR$ (13)
         END IF 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ( LTRIM$ (notiz.GAkquiDat$) + CHR$ (10) + CHR$ (13))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + TRIM$ ( LTRIM$ (notiz.GAkquiDat$)) + CHR$ (10) + CHR$ (13)
         END IF 
       END IF 
       IF TRIM$ ( LTRIM$ (ergebnis.GAkquiDat$)) <> "" THEN 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("Ergebnis:" + CHR$ (10) + CHR$ (13))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "Ergebnis:" + CHR$ (10) + CHR$ (13)
         END IF 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ( TRIM$ ( LTRIM$ (ergebnis.GAkquiDat$)) + CHR$ (10) + CHR$ (13))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + LTRIM$ (ergebnis.GAkquiDat$) + CHR$ (10) + CHR$ (13)
         END IF 
       END IF 
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ( CHR$ (10) + CHR$ (13))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + CHR$ (10) + CHR$ (13)
       END IF 
       SELECT KEY codeku.GAkquiDat$ FILE "adressen" INDEX codeku.adressen
       Vorname.adrterm = vorname.adressen
       nachname.adrterm = nachname.adressen
       ort.adrterm = ort.adressen
       stra·e.adrterm = stra·e.adressen
       plz.adrterm = plz.adressen
       kundennummer.adrterm = kundennummer.adressen
       telefon.adrterm = telefon$
       STORE FILE "adrterm"
       UNLOCK CURRENT FILE "adrterm"
     END IF 
     
   SELECT PREVIOUS FILE GAkquiDat$ INDEX QuickKuter.GAkquiDat$
   WEND 
  END IF 
   SELECT FIRST FILE GAkquiDat$ INDEX QuickKuter.GAkquiDat$
   FILE "tvorlage"
   SELECT NEXT FILE "tvorlage" INDEX codetv.tvorlage
   i% = i% + 1
 WEND 
 MOUSE ON 
 END SUB 


SUB ADRTERMR()
 REQUEST "Sollen der Spezial-CODie-Termindruck gestartet werden?","",130,req%
 IF req% <> 1 THEN END SUB 
 REQUEST "Sollen die Spezialtermine neu erzeugt werden?","",130,req%
 IF req% = 1 THEN 
   CALL ADRTermine2()
 END IF 
 MOUSE OFF 
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\adrterm" + _fpw$)
 CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 prep$ = "ADRTERMR"
 CALL ORep(prep$)
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY ON 
 SET QUERY LOCK ON 
 ON ERROR GOTO EndADRTERM
 SELECT DISTINCT ;
     WHERE CodeTV.TVORLAGE = codetv.ADRTERM AND codeku.ADRTERM = CodeKU.ADRESSEN AND codema.tvorlage = vcodema%
     ORDER Datum.TVORLAGE
     TO ASK 
 END SELECT 
EndADRTERM: 
 ON ERROR GOTO ErrorHandler
 END SUB 


SUB ADRKontakt()
 codeku% = codeku.adressen
 REM IF disabled%("EINGANG") THEN END SUB 
 CALL DFile(2,"OFFICE\connect" + _fpw$)
 CALL DFile(2,"OFFICE\kontgr" + _fpw$)
 MOUSE OFF 
 REM 260698 REMOVE FROM FILE "Zeingan1" WHERE codevt.zeingan1 < 1
 MOUSE ON 
 FILE "connect"
 INDEX codeku.connect
 SELECT FIRST 
 SELECT WHERE FILE "connect"
 knr% = codeku.adressen
 IF ( MOD ("adressen") OR NEW ("adressen")) THEN CALL FStore("adressen")
 _formend% = 0
 maske$ = "KONTAKT"
 WHILE _formend% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     SET HEADING title$ + " - Kundenkontakte"
     REM OPEN FORM "KONTAKT"
     OPEN FORM GOFFForm$ + maske$
     SET f = Superbase.Form
     CALL ADRKontIntro()
     CALL MNADRKont()
     SET STATUS "Kundenkontakt"
   END IF 
   MENU ON 
   MOUSE ON 
   KUVorgsub% = 0
   REM IF RECCOUNT ("zeingan1") > 0 THEN CALL ZEINUpdate1()
   CALL ClearKBDBuffer()
   FORM 
   IF KUVorgsub% <> 99 THEN WAIT KEY OR MENU OR MOUSE 
   REM ** Tastaturabfrage
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL PSelectPrev()
   CASE CrsRight%,PgDn%
     CALL PSelectNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE KUVorgsub%
   CASE 13
       codekey% = codekey.connect
       IF UCASE$ (typ.connect) = "V" THEN 
         nr% = VAL ( RIGHT$ (codeconku.connect,6))
       ELSE 
         nr% = VAL ( RIGHT$ (codekucon.connect,6))
       END IF 
       SELECT KEY nr% FILE "Adressen" INDEX codeku.adressen
       ac1$ = matchcode.adressen + "-" + Kundennummer.adressen
       COPY FROM ac1$
 
       SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
       SELECT KEY codekey% FILE "connect" INDEX codekey.connect
   CASE 10
     REM Button Kundennummer wird gedrÅckt
     maske$ = "KONTAKT1"
   CASE 11
     REM Button Nachname wird gedrÅckt
     maske$ = "KONTAKT"
   CASE 12
     REM Button Kontaktgruppe wird gedrÅckt
     maske$ = "KONTAKT2"
   CASE 1
     'zur Adresse wechseln
     IF UCASE$ (typ.connect) = "V" THEN 
       knr% = VAL ( RIGHT$ (codeconku.connect,6))
     ELSE 
       knr% = VAL ( RIGHT$ (codekucon.connect,6))
     END IF 
     _formend% = 1
   CASE 2
     ' in die Daten des Kontaktes wechseln
     IF NOT disabled%("KONTAKTDETAIL") THEN 
       codekey% = codekey.connect
       IF UCASE$ (typ.connect) = "V" THEN 
         nr% = VAL ( RIGHT$ (codeconku.connect,6))
       ELSE 
         nr% = VAL ( RIGHT$ (codekucon.connect,6))
       END IF 
       SELECT KEY nr% FILE "Adressen" INDEX codeku.adressen
       adrtext$ = Kundennummer.adressen + CHR$ (10) + CHR$ (13) + nachname.adressen + CHR$ (10) + CHR$ (13) + vorname.adressen + CHR$ (10) + CHR$ (13)
       adrtext$ = adrtext$ + stra·e.adressen + CHR$ (10) + CHR$ (13) + plz.adressen + " " + ort.adressen
       SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
       SELECT KEY codekey% FILE "connect" INDEX codekey.connect
       kontaktfi$ = "Kontakt-Gruppe: " + Kontaktgruppe.connect
       FORM 2
     END IF 
   CASE 3
     ' neuer Kontakt
     IF NOT disabled%("KONTAKTNEW") THEN 
       nachfolger% = ADRSuche%(0)
       IF nachfolger% <> 0 THEN 
         SELECT KEY nachfolger% LOCK FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
         BLANK FILE "connect"
         codekey.connect = SER ("CONNECT",1)
         Kundennummer.connect = Kundennummer.adressen
         codekey% = codekey.connect
         codeku.connect = knr%
         codecon.connect = nachfolger%
         CodeKUCon.connect = STR$ (knr%,"000000") + STR$ (nachfolger%,"000000")
         Nachname.connect = Nachname.adressen
         vorname.connect = Vorname.adressen
         Ort.connect = Ort.adressen
         Strasse.connect = Stra·e.adressen
         Typ.connect = "N"
         CodeKGR.connect = 0
         Kontaktgruppe.connect = "<ohne Zuordnung>"
         CALL QuickStore("connect")
         adrtext$ = Kundennummer.adressen + CHR$ (10) + CHR$ (13) + nachname.adressen + CHR$ (10) + CHR$ (13) + vorname.adressen + CHR$ (10) + CHR$ (13)
         adrtext$ = adrtext$ + stra·e.adressen + CHR$ (10) + CHR$ (13) + plz.adressen + " " + ort.adressen
         SELECT KEY knr% LOCK FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
         BLANK FILE "connect"
         codekey.connect = SER ("CONNECT",1)
         Kundennummer.connect = Kundennummer.adressen
         codeku.connect = nachfolger%
         codecon.connect = knr%
         CodeConKU.connect = STR$ (nachfolger%,"000000") + STR$ (knr%,"000000")
         Nachname.connect = Nachname.adressen
         vorname.connect = Vorname.adressen
         Ort.connect = Ort.adressen
         Strasse.connect = Stra·e.adressen
         Typ.connect = "V"
         CodeKGR.connect = 0
         Kontaktgruppe = "<ohne Zuordnung>"
         CALL QuickStore("connect")
         SELECT FORM KEY knr% FILE "connect" INDEX CodeKU.connect
         SELECT KEY codekey% FILE "connect" INDEX codekey.connect
         FORM 2
         
       END IF 
     END IF 
   CASE 4
     ' zurÅck Knopf Seite 2
     FORM 1
   CASE 5
     CALL KontaktFilt()
   CASE 6
     IF NOT disabled%("KONTAKTGROUP") THEN 
       CALL KontGrNeu()
     END IF 
   CASE 7
     REM Kontakt Lîschen
     IF NOT disabled%("KONTAKTDEL") THEN 
       REQUEST "Wollen Sie den Kontakt wirklich lîschen?","",130,req%
       IF req% = 1 THEN 
         IF Typ.connect LIKE "V" THEN 
           codekuvonADR% = codecon.connect
           codekuzuadr% = codeku.connect
         ELSE 
           codekuvonADR% = codeku.connect
           codekuzuadr% = codecon.connect
         END IF 
         CodeKUCon$ = STR$ (codekuvonADR%,"000000") + STR$ (codekuzuadr%,"000000")
         SELECT KEY CodeKUCon$ LOCK FILE "connect" INDEX CodeKUCon.connect
         SELECT REMOVE 
         codekoncu$ = STR$ (codekuzuadr%,"000000") + STR$ (codekuvonADR%,"000000")
         IF EXISTS (codekoncu$,CodeConKU.connect) THEN 
           SELECT KEY codekoncu$ LOCK FILE "connect" INDEX CodeConKU.connect
           SELECT REMOVE 
         END IF 
         FORM 1
         CALL ADRKontIntro()
       END IF 
     END IF 
   CASE 8
     'Kontakte drucken
     IF NOT disabled%("KONTAKTPRINT") THEN 
       codeku% = codeku.adressen
       knr% = codeku%
       CALL KONTADRU()
       SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
       CALL ADRKontIntro()
     END IF 
   CASE 99
     MOUSE ON 
     'Kontakt bearbeiten
     IF NOT disabled%("KONTAKTEDIT") THEN 
       MOUSE ON 
       ENTER Nachname.connect,0
     END IF 
     FORM 2
   MENU OFF 
   END SELECT 
   MENU ON 
   MOUSE ON 
 WEND 
 
 REM 110397 CALL ZEINbuchung1(0)
 SELECT WHERE FILE "connect"
 _formend% = 0
 END SUB 
 
SUB KONTADRU()
 kunr$ = STR$ (codeku.adressen,"000000") + "*"
 ueb1$ = nachname.adressen + ", " + vorname.adressen + "  " + DATE$ ( TODAY ,"0d.mm.yyyy")
 CALL ORep("KONTADRU")
 REM REPORT USING "KONTADRU"
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
 END FOOTING 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 ueb$ = ueb1$
 ON ERROR GOTO EndKontADru
 
 SELECT ;
     WHERE CodeCON.CONNECT = CodeKU.ADRESSEN AND CodeKUCon.connect LIKE kunr$
     ORDER REPORT Nachname.ADRESSEN
     TO ASK 
 END SELECT 
EndKontADru: 
 ON ERROR GOTO ErrorHandler
 END SUB 
  
 
 
SUB ADRKontIntro()
 MOUSE OFF 
 FILE "connect"
 INDEX CodeKU.connect
   SELECT FORM KEY knr% FILE "Adressen" INDEX CodeKU.Adressen
   SELECT FORM KEY knr% FILE "connect" INDEX CodeKU.connect
   kontaktfi$ = "Kontaktgruppe: "
   IF FORM = "KONTAKT" THEN 
     bnachn$ = "Nachname/Firma Æ"
     bkunr$ = "Kundennummer"
     kontgr$ = "Kontaktgruppe"
   END IF 
   IF FORM = "KONTAKT1" THEN 
     bnachn$ = "Nachname/Firma"
     bkunr$ = "Kundennummer Æ"
     kontgr$ = "Kontaktgruppe"
   END IF 
   IF FORM = "KONTAKT2" THEN 
     bnachn$ = "Nachname/Firma"
     bkunr$ = "Kundennummer"
     kontgr$ = "Kontaktgruppe Æ"
   END IF 
 FORM 
 END SUB 
 
SUB MNADRKont()
 MENU CLEAR 
 CALL MNProgramm()
 MENU 2,0,1,"&Optionen","",""
 MENU 2,1,1,"&Adresstexte in Kontakte aktualisieren","KontAktual","Adresstexte in Kontakte aktualisieren"
 CALL MNHilfe(3)
 END SUB 
 
SUB KontAktual()
 GConDat$ = "CONNECT"
 GADRDat$ = "ADRESSEN"
 FILE GConDat$
 INDEX codecon.GConDat$
 IF RECCOUNT (GConDat$) > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 i% = 0
 MOUSE OFF 
 WHILE NOT EOF (GConDat$)
   i% = i% + 1
   IF EXISTS (codecon.GConDat$,codeku.GADRDat$) THEN 
     SELECT KEY codecon.GConDat$ FILE GADRDat$ INDEX codeku.GADRDat$
     Nachname.GConDat$ = Nachname.GADRDat$
     Vorname.GConDat$ = Vorname.GADRDat$
     Strasse.GConDat$ = Stra·e.GADRDat$
     Ort.GConDat$ = Ort.GADRDat$
     Kundennummer.GConDat$ = Kundennummer.adressen
     STORE FILE GConDat$
     UNLOCK CURRENT FILE GConDat$
   END IF 
   SET STATUS STR$ (i%,"999999") + " DatensÑtze angepa·t"
   SELECT NEXT LOCK FILE GConDat$
 WEND 
 SET STATUS ""
 MOUSE ON 
 CALL ADRKontIntro()
 REQUEST "Anpassung beendet!"
 END SUB 
  
SUB KontaktFilt()
   a% = RECCOUNT ("kontgr")
   IF a% < 1 THEN END SUB 
   DIM Waehrung$(a%)
   DIM Waehrung%(a%)
   FOR i% = 1 TO a%
     Waehrung$(i%) = ""
     Waehrung%(i%) = 0
   NEXT i%
   FILE "kontgr"
   INDEX KontaktGruppe.kontgr
   SELECT WHERE 
   SELECT FIRST 
   a% = 0
   Waehrung%(a%) = 999999
   Waehrung$(a%) = " kein Filter"
   WHILE NOT EOF ("kontgr")
     a% = a% + 1
     Waehrung%(a%) = codekgr%
     Waehrung$(a%) = KontaktGruppe.kontgr + SPACE$ (90) + STR$ (codekgr.kontgr,"000000")
     SELECT NEXT FILE "kontgr" INDEX KontaktGruppe.kontgr
   WEND 
   
   DIM Auswahl1$(1)
     FILE "kontgr"
     prompt$ = Waehrung$(0)
     CREATE DIALOG "PREISLIS",0,0,190,184,"Kontaktgruppe","MS Sans Serif",8
      ADD DIALOG "PREISLIS",4,0,0,189,157,0," Auswahl Gesellschaft"
      ADD DIALOG "PREISLIS",7,5,14,169,145,2,2,Waehrung$,Auswahl1$,prompt$
      ADD DIALOG "PREISLIS",1,37,165,55,16,1,"&OK",1,1
      ADD DIALOG "PREISLIS",1,107,165,55,16,0,"&Abbrechen",0,0
      DIALOG "PREISLIS",req%
      REMOVE DIALOG "PREISLIS"
      IF req% = 1 THEN 
        SELECT WHERE FILE "kontgr"
        SELECT WHERE FILE "connect"
        CodeKGr% = VAL ( RIGHT$ (Auswahl1$(0),6))
        IF CodeKGR% = 999999 THEN CodeKGr% = 0
        IF (CodeKGR% > 0) THEN 
          laenge1% = LEN (Auswahl1$(0))
          ausw$ = LEFT$ (Auswahl1$(0),50)
          ausw1$ = TRIM$ (ausw$)
          
          geskontfi$ = "Filter fÅr Kontakt-Gruppe: " + ausw1$
        ELSE 
          geskontfi$ = "Filter fÅr Kontakt-Gruppe: <kein Filter>"
        END IF 
      END IF 
      bef$ = "Select where Codeku.connect = knr%"
      IF CodeKGR% > 0 THEN 
        bef$ = bef$ + " AND CodeKGR.connect = CodeKGR%"
      END IF 
      FILE "connect"
      EXECUTE bef$
 MOUSE ON 
 REM SELECT FORM KEY kunr% FILE "Kvertrag" INDEX codeku.kvertrag
 SELECT FORM FIRST 
 FORM 
 
 END SUB 
 
SUB KontGrNeu()
 codekey% = codekey.connect
 IF NEW ("connect") OR MOD ("connect") THEN CALL QuickStore("connect")
   a% = RECCOUNT ("kontgr")
   DIM Keyword$(a%)
   DIM Auswahl1$(1)
   FOR i% = 0 TO a%
     Keyword$(i%) = ""
   NEXT i%
   FILE "kontgr"
   INDEX KontaktGruppe.kontgr
   SELECT WHERE 
   SELECT FIRST 
   a% = 0
   WHILE NOT EOF ("kontgr")
     Keyword$(a%) = KontaktGruppe.kontgr + SPACE$ (100) + STR$ (codekgr.kontgr,"000000")
     a% = a% + 1
     SELECT NEXT FILE "kontgr" INDEX KontaktGruppe.kontgr
   WEND 
   Keyword$(a%) = ""
 MOUSE ON 
 laenge% = 50
 CREATE DIALOG "KEYWORD",0,0,233,200,title$,"MS Sans Serif",8
 ADD DIALOG "KEYWORD",4,0,1,233,176,0,""
 ADD DIALOG "KEYWORD",9,4,12,21,24,2
 ADD DIALOG "KEYWORD",5,31,14,189,19,0,"Bitte wÑhlen Sie den Eintrag aus, der in den aktuellen Kontakt aufgenommen werden soll:"
 ADD DIALOG "KEYWORD",7,31,38,188,122,2,2,Keyword$,Auswahl1$,prompt$
 IF NOT disabled%("KONTAKTGROUPNEW") THEN 
   ADD DIALOG "KEYWORD",6,31,158,188,12,0,0,KW$,laenge%
 END IF 
 IF disabled%("KONTAKTGROUPDEL") THEN 
   ADD DIALOG "KEYWORD",1,57,182,55,15,1,"&OK",1,1
   ADD DIALOG "KEYWORD",1,113,182,55,15,0,"&Abbrechen",0,0
 ELSE 
   ADD DIALOG "KEYWORD",1,12,182,45,15,1,"&OK",1,1
   ADD DIALOG "KEYWORD",1,68,182,45,15,0,"&Abbrechen",0,0
   ADD DIALOG "KEYWORD",1,124,182,45,15,0,"&Lîschen",2,1
 END IF 
 DIALOG "KEYWORD",req%
 REMOVE DIALOG "KEYWORD"
 IF req% <> 0 THEN 
   IF req% = 1 THEN 
     IF kw$ = "" THEN 
       CodeKGr% = VAL ( RIGHT$ (Auswahl1$(0),6))
       SELECT KEY codekgr% FILE "kontgr" INDEX codekgr.kontgr
       kw$ = KontaktGruppe.kontgr
     ELSE 
       kw$ = UCASE$ (kw$)
       kw$ = TRIM$ ( LTRIM$ (kw$))
       IF NOT EXISTS (kw$,KontaktGruppe.kontgr) THEN 
         BLANK FILE "kontgr"
         codekgr.kontgr = SER ("kontgr",1)
         codekgr% = codekgr.kontgr
         KontaktGruppe.kontgr = kw$
         CALL QuickStore("Kontgr")
       ELSE 
         SELECT KEY kw$ FILE "kontgr" INDEX KontaktGruppe.kontgr
         codekgr% = codekgr.kontgr
       END IF 
     END IF 
     SELECT KEY codekey% LOCK FILE "connect" INDEX codekey.connect
     codeKGR.connect = codekgr%
     KontaktGruppe.connect = kw$
     CALL QuickStore("connect")
   END IF 
   IF req% = 2 THEN 
     CodeKGr% = VAL ( RIGHT$ (Auswahl1$(0),6))
     SELECT KEY codekgr% LOCK FILE "kontgr" INDEX codekgr.kontgr
     SELECT REMOVE 
     SELECT FIRST FILE "connect" INDEX codekey.connect
     SELECT KEY codekey% LOCK FILE "connect" INDEX codekey.connect
     codeKGR.connect = 0
     KontaktGruppe.connect = ""
     CALL QuickStore("connect")
   END IF 
 END IF 
 SELECT FORM KEY codekey% LOCK FILE "connect" INDEX codekey.connect
 kontaktfi$ = "Kontakt-Gruppe: " + Kontaktgruppe.connect
 FORM 
 END SUB 
 
SUB ADRSich()
 codeku1% = codeku.adressen
     geand% = 0
     REM Postanschrift Ñndern,wenn diese Option gestzt ist
     IF Gpostanschrae$ LIKE "TRUE" THEN GOTO w120220081


     IF GVorname$ = "" AND Vorname.adressen <> "" THEN geand% = - 1
     IF GName$ = "" AND Nachname.adressen <> "" THEN geand% = - 1
     IF GGebname$ = "" AND Geburtsname.adressen <> "" THEN geand% = - 1
     IF GOrt$ = "" AND Ort.adressen <> "" THEN geand% = - 1
     IF GPLZ$ = "" AND plz.adressen <> "" THEN geand% = - 1
     IF GStrasse$ = "" AND Stra·e.adressen <> "" THEN geand% = - 1
 
     IF GVorname$ <> "" AND GVorname$ <> Vorname.adressen THEN geand% = - 2
     IF GName$ <> "" AND GName$ <> "NEU" AND GName$ <> Nachname.adressen THEN geand% = - 2
     IF GGebname$ <> "" AND GGebname$ <> Geburtsname.adressen THEN geand% = - 2
     IF GOrt$ <> "" AND GOrt$ <> Ort.adressen THEN geand% = - 2
     IF GPLZ$ <> "" AND plz.adressen <> GPLZ$ THEN geand% = - 2
     IF GStrasse$ <> "" AND Stra·e.adressen <> GStrasse$ THEN geand% = - 2
     IF geand% = - 2 OR geand% = - 1 THEN 
       REQUEST "Ein oder mehrere Felder, die zur Anschrift gehîren, wurden geÑndert?","Wollen Sie das Postanschriftsfeld neu erzeugen lassen?",130,req%
       IF req% = 1 THEN 
         geand% = - 1
       ELSE 
         geand% = 0
       END IF 
     END IF 
     IF Postanschrift.adressen = "" OR geand% = - 1 THEN 
       p$ = ""
       IF anrede.adressen LIKE "Herr*" OR anrede.adressen LIKE "Fr*" OR anrede.adressen LIKE "Fam*" THEN 
         p$ = Anrede.adressen + " "
         IF LTRIM$ (Titel.adressen) <> "" THEN 
           p$ = p$ + " " + LTRIM$ (Titel.adressen) + CHR$ (13) + CHR$ (10)
         ELSE 
           IF p$ <> "" THEN 
            p$ = p$ + CHR$ (13) + CHR$ (10)
           END IF 
         END IF 
         IF vorname.adressen <> "" THEN 
           p$ = p$ + LTRIM$ (Vorname.adressen) + " " + LTRIM$ (Nachname.adressen) + CHR$ (13) + CHR$ (10)
         ELSE 
           p$ = p$ + LTRIM$ (Nachname.adressen) + CHR$ (13) + CHR$ (10)
         END IF 
         p$ = p$ + Stra·e.adressen + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + plz.adressen + " " + Ort.adressen
         IF land.adressen <> "" THEN p$ = p$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + Land.adressen
         REM p$ = p$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + briefanrede.adressen
       ELSE 
         p$ = LTRIM$ (Anrede.adressen) + " " + LTRIM$ (titel.adressen) + CHR$ (13) + CHR$ (10)
         IF geburtsname.adressen <> "" THEN 
           p$ = p$ + LTRIM$ (nachname.adressen) + CHR$ (10) + CHR$ (13) + LTRIM$ (geburtsname.adressen) + CHR$ (13) + CHR$ (10) + LTRIM$ (Vorname.adressen) + CHR$ (13) + CHR$ (10)
         ELSE 
           p$ = p$ + LTRIM$ (Nachname.adressen) + CHR$ (13) + CHR$ (10) + LTRIM$ (Vorname.adressen) + CHR$ (13) + CHR$ (10)
         END IF 
         p$ = p$ + Stra·e.adressen + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + plz.adressen + " " + Ort.adressen
         IF land.adressen <> "" THEN p$ = p$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + Land.adressen
         REM p$ = p$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + briefanrede.adressen
       END IF 
       Adrtemp$ = p$
       CREATE DIALOG "MakeAdr",0,0,273,156,"Postanschriftsfeld","MS Sans Serif",8
       ADD DIALOG "MakeAdr",4,0,0,272,131,0,""
       ADD DIALOG "MakeAdr",9,3,10,21,22,2
       ADD DIALOG "MakeAdr",5,29,11,233,19,0,"Bitte geben Sie an, wie die Adresse im Postanschriftsfeld gespeichert werden soll:"
       ADD DIALOG "MakeAdr",6,30,33,236,86,68,2,Adrtemp$,1800
       ADD DIALOG "MakeAdr",1,73,135,55,15,1,"&Weiter",1,1
       ADD DIALOG "MakeAdr",1,129,135,55,15,0,"&Abbrechen",0,0
       DIALOG "MakeAdr",req%
       REMOVE DIALOG "MakeAdr"
       IF req% = 1 THEN 
         Postanschrift.adressen = Adrtemp$
       END IF 
     END IF 
w120220081: 
     CALL QuickStore("ADRESSEN")
     IF GMahn$ <> Mahnsperre.Adressen OR GMahnDat% <> MahnsperBisdat.Adressen THEN 
       MOUSE OFF 
       GMahn$ = Mahnsperre.Adressen
       GMahnDat% = MahnsperBisdat.Adressen
       IF NOT OPEN ("rausgang") THEN CALL DFile(3,"rausgang" + _fpw$)
       IF NOT OPEN ("master") THEN CALL DFile(3,"master" + _fpw$)
       IF NOT OPEN ("mahnung") THEN CALL DFile(3,"mahnung" + _fpw$)
       codeku% = codeku.adressen
       CALL Fehler("Einen Moment bitte, die Mahnsperre wird auf das Rechnungsausgangsbuch und der Masterdatei angewandt.","")
       UPDATE Mahnsperre.master = GMahn$:MahnsperBisdat.master = GMahnDat% WHERE codeku.master = codeku%
       END UPDATE 
       UPDATE Mahnsperre.rausgang = GMahn$:MahnsperBisdat.rausgang = GMahnDat% WHERE codeku.rausgang = codeku%
       END UPDATE 
       UPDATE Mahnsperre.mahnung = GMahn$:MahnsperBisdat.mahnung = GMahnDat% WHERE codeku.mahnung = codeku%
       END UPDATE 
       CLOSE FILE "mahnung"
       CLOSE FILE "rausgang"
       CLOSE FILE "master"
       IF NOT OPEN ("rausgang") THEN CALL DFile(3,"rausgang" + _fpw$)
       IF NOT OPEN ("master") THEN CALL DFile(3,"master" + _fpw$)
       IF NOT OPEN ("mahnung") THEN CALL DFile(3,"mahnung" + _fpw$)
     END IF 
     GVorname$ = Vorname.adressen
     GName$ = Nachname.adressen
     GGebname$ = Geburtsname.adressen
     GOrt$ = Ort.adressen
     GPLZ$ = plz.adressen
     GStrasse$ = Stra·e.adressen
     IF GCodieADR$ LIKE "TRUE" THEN 
     ELSE 
       GRech$ = Rechsperre.Adressen
       GRechDat% = RechBisdat.Adressen
     END IF 
     SELECT KEY codeku1% LOCK FILE "ADRESSEN" INDEX codeku.adressen
 END SUB 



  


  

