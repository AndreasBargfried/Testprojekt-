 CALL main()

SUB ainhflen()
 GLOBAL expverz$
 REM _netpath$ = "\codie.c36\"
 tnow% = NOW 
 path$ = _netpath$
 DIRECTORY _netpath$
 OPEN FORM "dummy2.sbv"
 art% = 0
 expverz$ = _netpath$ + "EXPDAT"
 CREATE DIALOG "Konto1",0,0,221,165,title$,"MS Sans Serif",8
 ADD DIALOG "Konto1",9,6,7,24,22,2
 ADD DIALOG "Konto1",5,34,8,170,9,0,"Exportverzeichnis:"
 ADD DIALOG "Konto1",4,34,14,176,5,0,""
 ADD DIALOG "Konto1",5,34,22,175,16,0,"Bitte geben Sie im Feld <Exportverzeichnis>, das gewÅnschte Exportverzeichnis ein"
 ADD DIALOG "Konto1",5,34,40,175,32,0,"Beachten Sie, da· zum Import die Daten im Verzeichnis ...\codie\expdat  liegen mÅssen"
 ADD DIALOG "Konto1",5,34,78,72,8,0,"Exportverzeichnis"
 ADD DIALOG "Konto1",6,5,89,185,11,0,0,expverz$,128
 REM ADD DIALOG "Konto1",2,34,97,148,11,0,"Liste mit Volumen ausgeben","j","n",volumen$
 REM ADD DIALOG "Konto1",5,44,108,167,25,0,"(es werden auch die Provisionen angezeigt, die wegen fehlender ZahlungsbeitrÑge in der Mahnlist sind)"
 ADD DIALOG "Konto1",1,50,144,55,15,1,"&Weiter",1,1
 ADD DIALOG "Konto1",1,110,144,55,15,0,"&Abbruch",0,0
 DIALOG "Konto1",req%
 REMOVE DIALOG "Konto1"
 IF req% = 0 THEN 
   GOTO end041120051
 END IF 

 ON ERROR GOTO w041020063
 MAKE DIRECTORY expverz$
w041020063: 
 ON ERROR GOTO ErrorHandler
 IF NOT OPEN ("EXPDAT") THEN 
   CALL DFile(2,"EXPDAT" + _fpw$)
   FILE "expdat"
   INDEX datname.expdat
 END IF 
 CALL Fehler("Sie erhalten jetzt die Mîglichkeit entweder die Dateien ab dem letzten Wiederanlaufpunkt zu exportieren oder komplett alle Dateien NEU zu exportieren!","Sie finden die exportierten Dateien im Ordner " + _netpath$ + "EXPDAT")
 REQUEST "Dateien ab letzten WIEDERANLAUFPUNKT exportieren?","",130,req%
 IF req% <> 1 THEN 
   REQUEST "Sind Sie absolut sicher, da· Sie ALLE Dateien erneut exportieren wollen?","",135,req%
   IF req% = 1 THEN 
     MOUSE OFF 
     UPDATE zero.expdat = 0:MAName.expdat = ""
     END UPDATE 
     CALL CheckConnect()
   END IF 
 END IF 
 REM CALL AutoFiVorg()
 REM CALL CheckConnect()
 REM CALL VKMainMani()
 REM CALL CheckKVSKOND()
 REM CALL CheckDynVertr()
 REM CALL CheckBuch()
 REM CALL Fehler("Sie erhalten jetzt die Mîglichkeit entweder die wichtigsten Dateien zu exportieren oder komplett alle Dateien zu exportieren!","Sie finden die exportierten Dateien im Ordner " + _netpath$ + "EXPDAT")
 REM REQUEST "Nur die wichtigsten Dateien exportieren?","",130,req%

 IF req% = 1 THEN 
   alle% = 0
 ELSE 
   alle% = 1
 END IF 
 art% = 0
 IF NOT OPEN ("EXPDAT") THEN 
   CALL DFile(2,"EXPDAT" + _fpw$)
   FILE "expdat"
   INDEX datname.expdat
 END IF 
 REM CALL Fehler("Sie kînnen jetzt wÑhlen, ob Sie die Daten im XML-Format oder im CSV exportieren mîchten","")
 REM REQUEST "Im XML-Format exportieren?","",130,xml%
 xml% = 1

 MOUSE OFF 
 DIM sbd$(300)
 FILLARRAY sbd$,5,"*.SBD"
 FOR i% = 0 TO 300
   IF LTRIM$ (sbd$(i%)) <> "" THEN 
     lenge% = LEN (sbd$(i%))
     datei$ = LEFT$ (sbd$(i%),lenge% - 4)
     datei0$ = datei$
     datname$ = UCASE$ (datei$)
     REM CALL Fehler("EXPDAT","")
     IF datei$ LIKE "config" THEN 
       datei$ = datei$ + ";london8474"
     ELSE 
       datei$ = datei$ + ";paris"
     END IF 
     IF NOT OPEN (sbd$(i%)) THEN 
       OPEN FILE SHARE ,0_netpath$ + datei$
     END IF 
     REM ********Aufruf der SQL-Statement Generierung **************
      ok11% = - 1
      IF datei0$ LIKE "supervis" THEN ok11% = - 1
      IF datei0$ LIKE "masuper" THEN ok11% = - 1
      IF alle% = 1 THEN ok11% = - 1
      IF datei0$ LIKE "expdat*" THEN ok11% = 0
      IF datei0$ LIKE "abg*" THEN ok11% = 0
      IF datei0$ LIKE "ope*" THEN ok11% = 0
      IF datei0$ LIKE "zero*" THEN ok11% = 0
      IF NOT EXISTS (datname$,datname.expdat) THEN 
        ok11% = 0
      ELSE 
        SELECT FIRST FILE "expdat" INDEX datname.expdat
        SELECT KEY datname$ LOCK FILE "expdat" INDEX datname.expdat
      END IF 
      REM ok11% = 0
      IF ok11% = - 1 AND zero.expdat <> 1 AND RECCOUNT (datei0$) > 0 THEN 
        tnow1% = NOW 
        MOUSE OFF 
        IF xml% = 1 THEN 
          IF RECCOUNT (datei0$) > 0 THEN CALL CreateINH(datei0$,path$,art%)
        ELSE 
          datei1$ = datei0$ + ".CSV"
          textdo1$ = datei1$
          textdo$ = "Exportiere " + datei1$
          FORM 
          IF EXISTS (datei1$) THEN DELETE datei1$
          Superbase.Converters.SBF.SourceFormat = "Superbase"
          Superbase.Converters.SBF.SourceFile = datei0$
          Superbase.Converters.SBF.Descending = 0
          Superbase.Converters.SBF.Merge = 0
          Superbase.Converters.SBF.LogErrors = 0
          Superbase.Converters.SBF.MultiResponse = 0
          Superbase.Converters.CSV.DestFormat = "Comma-separated values"
          Superbase.Converters.CSV.DestFile = _netpath$ + "EXPDAT\" + datei0$ + ".csv"
          Superbase.Converters.CSV.UseLabels = - 1
          Superbase.Converters.CSV.ANSIConvert = 0
          Superbase.Converters.CSV.Convert(Superbase.Converters.SBF)
          WAIT FOR 2
        END IF 
        tende1% = NOW 
        tende1$ = TIME$ (tende1%,"hh:mm:ss")
        tnow1$ = TIME$ (tnow1%,"hh:mm:ss")
        tdiff1% = tende1% - tnow1%
        tdiff1$ = TIME$ (tdiff1%,"hh:mm:ss")
        MAName.expdat = "Start: " + tnow1$ + "  Ende: " + tende1$ + "   Dauer: " + tdiff1$
        zero.expdat = 1
        STORE FILE "expdat"
      END IF 
      IF datei0$ LIKE "EXPDAT" THEN 
      ELSE 
        CLOSE FILE datei0$
      END IF 
     REM ***********************************************************
   ELSE 
     i% = 301
   END IF 
 NEXT i%

 IF art% = 1 THEN 
   CLOSE OUTPUT 
 END IF 
 REM CALL Fehler("Fertig mit Wurzel","")

 REDIM sbd$(300,1)
 REDIM sbd$(300)
 DIRECTORY _netpath$
 OPEN FORM "dummy2.sbv"
 IF NOT OPEN ("EXPDAT") THEN 
   CALL DFile(2,"EXPDAT" + _fpw$)
   FILE "expdat"
   INDEX datname.expdat
 END IF 

 path$ = _netpath$ + "OFFICE\"
 DIRECTORY path$
 FILLARRAY sbd$,5,"*.SBD"
 FOR i% = 0 TO 300
   IF sbd$(i%) <> "" THEN 
     lenge% = LEN (sbd$(i%))
     datei$ = LEFT$ (sbd$(i%),lenge% - 4)
     datei0$ = datei$
     datname$ = UCASE$ (datei$)
     REM CALL Fehler("EXPDAT","")
     IF datei$ LIKE "config" THEN 
       datei$ = datei$ + ";london8474"
     ELSE 
       datei$ = datei$ + ";paris"
     END IF 

     IF NOT OPEN (sbd$(i%)) THEN 
       ON ERROR GOTO tsts
       OPEN FILE SHARE ,0path$ + datei$
tsts: 
       ON ERROR GOTO ErrorHandler
     END IF 
     REM ********Aufruf der SQL-Statement Generierung **************
      ok11% = - 1
      IF datei0$ LIKE "adressen" THEN ok11% = - 1
      IF datei0$ LIKE "akquise" THEN ok11% = - 1
      IF datei0$ LIKE "dokument*" THEN ok11% = - 1
      IF datei0$ LIKE "connect" THEN ok11% = - 1
      IF datei0$ LIKE "dokge" THEN ok11% = - 1
      IF datei0$ LIKE "dokma" THEN ok11% = - 1
      IF datei0$ LIKE "dokkv" THEN ok11% = - 1
      IF datei0$ LIKE "telefon" THEN ok11% = - 1
      IF alle% = 1 THEN ok11% = - 1
      IF datei0$ LIKE "*tmp*" THEN ok11% = 0
      IF datei0$ LIKE "*temp*" THEN ok11% = 0
      IF datei0$ LIKE "*leer*" THEN ok11% = 0
      IF datei0$ LIKE "out*" THEN ok11% = 0
      IF NOT EXISTS (datname$,datname.expdat) THEN 
        ok11% = 0
      ELSE 
        SELECT FIRST FILE "expdat" INDEX datname.expdat
        SELECT KEY datname$ LOCK FILE "expdat" INDEX datname.expdat
      END IF 

      IF datei0$ LIKE "aktionen" THEN ok11% = - 1
      REM IF datname$ LIKE "adressen" THEN ok11% = - 1
      IF ok11% <> - 1 THEN GOTO w301020071 
      IF ok11% = - 1 AND zero.expdat <> 1 AND RECCOUNT (datei0$) > 0 THEN 
        tnow1% = NOW 
        MOUSE OFF 
        IF datei0$ LIKE "akquise" THEN 
          FILE "akquise"
          INDEX codeaq.akquise
          SELECT FIRST LOCK 
          jj% = RECCOUNT ("akquise")
          ii% = 0
          codeaqold% = 0
          WHILE NOT EOF ("akquise")
            ii% = ii% + 1
            codeaq% = codeaq.akquise
            IF codeaq% = codeaqold% THEN 
              codeaq.akquise = SER ("Akquise",1)
              STORE FILE "akquise"
              SELECT FIRST LOCK 
              ii% = 0
              codeaqold% = 0
            ELSE 
              codeaqold% = codeaq%
              SELECT NEXT LOCK FILE "akquise" INDEX codeaq.akquise
            END IF 
            SET STATUS STR$ (ii%,",99999999") + " von " + STR$ (jj%,",99999999") + " in Datei Akquise geprÅft"
          WEND 
        END IF 

        IF datei0$ LIKE "dokument" AND RECCOUNT (datei0$) > 0 THEN 
          FILE "dokument"
          INDEX codedok.dokument
          SELECT FIRST LOCK 
          jj% = RECCOUNT ("dokument")
          ii% = 0
          codedokold% = 0
          WHILE NOT EOF ("dokument")
            ii% = ii% + 1
            codedok% = codedok.dokument
            IF codedok% = codedokold% THEN 
              codedok.dokument = SER ("dokument",1)
              STORE FILE "dokument"
              SELECT FIRST LOCK 
              ii% = 0
              codeaqold% = 0
            ELSE 
              codeaqold% = codeaq%
              SELECT NEXT LOCK FILE "dokument" INDEX codedok.dokument
            END IF 
            SET STATUS STR$ (ii%,",99999999") + " von " + STR$ (jj%,",99999999") + " in Datei Dokument geprÅft"
          WEND 
        END IF 

         
        IF datei0$ LIKE "telefon" THEN 
          FILE "telefon"
          INDEX codeku.telefon
          SELECT FIRST LOCK 
          jj% = RECCOUNT ("telefon")
          ii% = 0
          WHILE NOT EOF ("telefon")
            ii% = ii% + 1
            codetel.telefon = ii%
            STORE FILE "telefon"
            SET STATUS STR$ (ii%,",99999999") + " von " + STR$ (jj%,",99999999") + " in Datei Telefon geprÅft"
            SELECT NEXT LOCK FILE "telefon" INDEX codeku.telefon
          WEND 
        END IF 


        MOUSE OFF 
        IF xml% = 1 THEN 
          IF datei0$ LIKE "BANKEN*" THEN 
          ELSE 
            IF RECCOUNT (datei0$) > 0 THEN CALL CreateINH(datei0$,path$,art%)
          END IF 
        ELSE 
          datei1$ = datei0$ + ".CSV"
          textdo1$ = datei1$
          textdo$ = "Exportiere " + datei1$
          FORM 
          IF EXISTS (datei1$) THEN DELETE datei1$
          Superbase.Converters.SBF.SourceFormat = "Superbase"
          Superbase.Converters.SBF.SourceFile = datei0$
          Superbase.Converters.SBF.Descending = 0
          Superbase.Converters.SBF.Merge = 0
          Superbase.Converters.SBF.LogErrors = 0
          Superbase.Converters.SBF.MultiResponse = 0
          Superbase.Converters.CSV.DestFormat = "Comma-separated values"
          Superbase.Converters.CSV.DestFile = _netpath$ + "EXPDAT\" + datei0$ + ".csv"
          Superbase.Converters.CSV.UseLabels = - 1
          Superbase.Converters.CSV.ANSIConvert = 0
          Superbase.Converters.CSV.Convert(Superbase.Converters.SBF)
          WAIT FOR 2
        END IF 
        tende1% = NOW 
        tende1$ = TIME$ (tende1%,"hh:mm:ss")
        tnow1$ = TIME$ (tnow1%,"hh:mm:ss")
        tdiff1% = tende1% - tnow1%
        tdiff1$ = TIME$ (tdiff1%,"hh:mm:ss")
        MAName.expdat = "Start: " + tnow1$ + "  Ende: " + tende1$ + "   Dauer: " + tdiff1$
        zero.expdat = 1
        STORE FILE "expdat"
      END IF 
w301020071: 
     REM ***********************************************************
   ELSE 
     i% = 301
   END IF 
 NEXT i%

 REQUEST "OFFICE fertig","",2
 IF art% = 1 THEN 
   CLOSE OUTPUT 
 END IF 
 CLOSE ALL 


 IF NOT OPEN ("EXPDAT") THEN 
   CALL DFile(2,"EXPDAT" + _fpw$)
   FILE "expdat"
   INDEX datname.expdat
 END IF 
 REDIM sbd$(300,1)
 REDIM sbd$(300)
 DIRECTORY _netpath$
 OPEN FORM _netpath$ + "dummy2.sbv"
 path$ = _netpath$ + "FACTURA\"
 DIRECTORY path$
 FILLARRAY sbd$,5,"*.SBD"
 FOR i% = 0 TO 300
   IF sbd$(i%) <> "" THEN 
     lenge% = LEN (sbd$(i%))
     datei$ = LEFT$ (sbd$(i%),lenge% - 4)
     datei0$ = datei$
     datname$ = UCASE$ (datei$)
     REM CALL Fehler("EXPDAT","")
     IF datei$ LIKE "config" THEN 
       datei$ = datei$ + ";london8474"
     ELSE 
       datei$ = datei$ + ";paris"
     END IF 
     IF datei0$ LIKE "UN0*" THEN GOTO w030320061
     IF datei0$ LIKE "??0*" THEN GOTO w030320061
     IF NOT OPEN (sbd$(i%)) THEN 
       OPEN FILE SHARE ,0path$ + datei$
     END IF 
     REM ********Aufruf der SQL-Statement Generierung **************
     ok11% = - 1
     SET STATUS datei0$
     MOUSE OFF 
     IF PrvVerfahr$ <> "ZAHLUNGSEINGANG" THEN 
       IF datei0$ LIKE "buchung" THEN ok11% = - 1
       IF datei0$ LIKE "zeingang" THEN ok11% = - 1
       IF datei0$ LIKE "buchung1" THEN ok11% = 0
       IF datei0$ LIKE "zeingan1" THEN ok11% = 0
       IF datei0$ LIKE "zeinvor" THEN ok11% = 0
       IF EXISTS (_netpath$ + "EXPDAT\" + "buchung1.cod") THEN DELETE _netpath$ + "EXPDAT\" + "buchung1.cod"
       IF EXISTS (_netpath$ + "EXPDAT\" + "zeingan1.cod") THEN DELETE _netpath$ + "EXPDAT\" + "zeingan1.cod"
       IF EXISTS (_netpath$ + "EXPDAT\" + "zeinvor.cod") THEN DELETE _netpath$ + "EXPDAT\" + "zeinvor.cod"
     ELSE 
       IF datei0$ LIKE "buchung" THEN ok11% = 0
       IF datei0$ LIKE "zeingang" THEN ok11% = 0
       IF EXISTS (_netpath$ + "EXPDAT\" + "buchung.cod") THEN DELETE _netpath$ + "EXPDAT\" + "buchung.cod"
       IF EXISTS (_netpath$ + "EXPDAT\" + "zeingang.cod") THEN DELETE _netpath$ + "EXPDAT\" + "zeingang.cod"
       IF datei0$ LIKE "buchung1" THEN ok11% = - 1
       IF datei0$ LIKE "zeingan1" THEN ok11% = - 1
       IF datei0$ LIKE "zeinvor" THEN ok11% = - 1
     END IF 

     IF datei0$ LIKE "geadr" THEN ok11% = - 1
     IF datei0$ LIKE "geadr2" THEN ok11% = - 1
     IF datei0$ LIKE "gekond" THEN ok11% = - 1
     IF datei0$ LIKE "kvertrag" THEN ok11% = - 1
     IF datei0$ LIKE "MAADR" THEN ok11% = - 1
     IF datei0$ LIKE "MAVORG" THEN ok11% = - 1
     IF datei0$ LIKE "sparten" THEN ok11% = - 1
     IF datei0$ LIKE "spgruppe" THEN ok11% = - 1
     IF datei0$ LIKE "spezkond" THEN ok11% = - 1
     IF datei0$ LIKE "statukey" THEN ok11% = - 1
     IF datei0$ LIKE "tarif" THEN ok11% = - 1
     IF datei0$ LIKE "vorgang" THEN ok11% = - 1
     IF datei0$ LIKE "vprodukt" THEN ok11% = - 1
     IF datei0$ LIKE "waehrung" THEN ok11% = - 1
     IF datei0$ LIKE "wknr" THEN ok11% = - 1
     IF alle% = 1 THEN ok11% = - 1
     dattest$ = _netpath$ + "EXPDAT\" + datei0$ + ".cod"
     IF NOT EXISTS (datname$,datname.expdat) THEN 
       ok11% = 0
     ELSE 
       SELECT FIRST FILE "expdat" INDEX datname.expdat
       SELECT KEY datname$ LOCK FILE "expdat" INDEX datname.expdat
     END IF 
     REM ok11% = 0
     IF ok11% = - 1 AND zero.expdat <> 1 AND RECCOUNT (datei0$) > 0 THEN 
       tnow1% = NOW 
       REM CALL Fehler(datei0$,"")
        MOUSE OFF 
        IF xml% = 1 THEN 
          IF RECCOUNT (datei0$) > 0 THEN CALL CreateINH(datei0$,path$,art%)
        ELSE 
          datei1$ = datei0$ + ".CSV"
          textdo1$ = datei1$
          textdo$ = "Exportiere " + datei1$
          FORM 
          IF EXISTS (datei1$) THEN DELETE datei1$
          Superbase.Converters.SBF.SourceFormat = "Superbase"
          Superbase.Converters.SBF.SourceFile = datei0$
          Superbase.Converters.SBF.Descending = 0
          Superbase.Converters.SBF.Merge = 0
          Superbase.Converters.SBF.LogErrors = 0
          Superbase.Converters.SBF.MultiResponse = 0
          Superbase.Converters.CSV.DestFormat = "Comma-separated values"
          Superbase.Converters.CSV.DestFile = _netpath$ + "EXPDAT\" + datei1$
          Superbase.Converters.CSV.UseLabels = - 1
          Superbase.Converters.CSV.ANSIConvert = 0
          Superbase.Converters.CSV.Convert(Superbase.Converters.SBF)
          WAIT FOR 2
        END IF 
        tende1% = NOW 
        tende1$ = TIME$ (tende1%,"hh:mm:ss")
        tnow1$ = TIME$ (tnow1%,"hh:mm:ss")
        tdiff1% = tende1% - tnow1%
        tdiff1$ = TIME$ (tdiff1%,"hh:mm:ss")
        MAName.expdat = "Start: " + tnow1$ + "  Ende: " + tende1$ + "   Dauer: " + tdiff1$
        zero.expdat = 1
        STORE FILE "expdat"
     END IF 
     REM ***********************************************************
   ELSE 
     i% = 301
   END IF 
w030320061: 
 NEXT i%
 REQUEST "FACTURA fertig","",2
 IF art% = 1 THEN 
   CLOSE OUTPUT 
 END IF 
 CLOSE ALL 
 IF NOT OPEN ("EXPDAT") THEN 
   CALL DFile(2,"EXPDAT" + _fpw$)
 END IF 
 GOTO end041120051 


 IF NOT OPEN ("EXPDAT") THEN 
   CALL DFile(2,"EXPDAT" + _fpw$)
 END IF 
end041120051:  
 OPEN FORM _netpath$ + "dummy2.sbv"
 REQUEST "Ende"
 IF NOT OPEN ("EXPDAT") THEN 
   CALL DFile(2,"EXPDAT" + _fpw$)
 END IF 
 tende% = NOW 
 tende$ = TIME$ (tende%,"hh:mm:ss")
 tnow$ = TIME$ (tnow%,"hh:mm:ss")
 tdiff% = tende% - tnow%
 tdiff$ = TIME$ (tdiff%,"hh:mm:ss")
 CALL Fehler("Export beendet!","Start: " + tnow$ + "  Ende: " + tende$ + "   Dauer: " + tdiff$)
 END SUB 

SUB CreateINH(datei$,path$,art%)
 REM CALL Fehler("CreateINH",datei$)
 OPEN FORM _netpath$ + "dummy2.sbv"
 s$ = "0"
 az% = 0
 DIM FldNam1$(1)
 SET STATUS datei$
 IF art% <> 1 THEN 
  IF datei$ LIKE "buchung*" THEN 
    FOR u% = 0 TO 99
      IF UCASE$ (datei$) = "BUCHUNG" THEN 
        datei1$ = expverz$ + "\" + "buch-" + STR$ (u%,"00") + ".cod"
      ELSE 
        datei1$ = expverz$ + "\" + "buch1-" + STR$ (u%,"00") + ".cod"
      END IF 
      IF EXISTS (datei1$) THEN DELETE datei1$
    NEXT u%
  ELSE 
    datei1$ = expverz$ + "\" + datei$ + ".cod"
    IF EXISTS (datei1$) THEN DELETE datei1$
    OPEN datei1$ FOR OUTPUT 
    ? "<?xml version=" + CHR$ (34) + "1.0" + CHR$ (34) + " encoding=" + CHR$ (34) + "ISO-8859-1" + CHR$ (34) + "?> "
    ? ""
    ? "<CODIE-EXPORT>"
  END IF 
 END IF 
 REM CALL Fehler("del","")
    feldanz% = FILEINFO (datei$,1)
    REDIM FldNam1$(feldanz%)
    DIM felder$(feldanz%)
    DIM feldtyp$(feldanz%)
    DIM feldindex$(feldanz%)
    DIM feldanzeig$(feldanz%)
    DIM feldera$(feldanz%)

    FILLARRAY felder$,1
   SELECT FIRST FILE datei$
   REM SELECT KEY 2696731 FILE datei$ INDEX codebu
   jjj% = 0
   xjj% = 0
   kkk% = RECCOUNT (datei$)
   REDIM FldNam1$(feldanz%,1)
   REDIM FldNam1$(feldanz%)
   FOR i% = 0 TO feldanz% - 1
     IF felder$(i%) <> "" THEN 
      feldtyp$(i%) = FIELDINFO$ (felder$(i%),0)
      feldindex$(i%) = FIELDINFO$ (felder$(i%),3)
      feldanzeig$(i%) = FIELDINFO$ (felder$(i%),4)
      fname$ = VSNRPack$( UCASE$ (felder$(i%)))
      fname1$ = UCASE$ (felder$(i%))
      feldera$(i%) = VSNRPackEx$( UCASE$ (felder$(i%)))
    END IF 
   NEXT i%
   xend% = 0

azsg041120051: 
   IF datei$ LIKE "buchung" OR datei$ LIKE "buchung1" THEN 
     az% = az% + 1
     xjj% = 0
     xend% = 0
     IF UCASE$ (datei$) = "BUCHUNG" THEN 
       datei1$ = expverz$ + "\" + "buch-" + STR$ (az%,"00") + ".cod"
     ELSE 
       datei1$ = expverz$ + "\" + "buch1-" + STR$ (az%,"00") + ".cod"
     END IF 
     OPEN datei1$ FOR OUTPUT 
     ? "<?xml version=" + CHR$ (34) + "1.0" + CHR$ (34) + " encoding=" + CHR$ (34) + "ISO-8859-1" + CHR$ (34) + "?> "
     ? ""
     ? "<CODIE-EXPORT>"
   END IF 
   origdatei$ = datei$
   IF datei$ LIKE "connect" OR datei$ LIKE "conbck" OR datei$ LIKE "conadr1" THEN 
     IF EXISTS (_netpath$ + "office\conreo.sbf") THEN 
       IF OPEN ("conreo") THEN CLOSE FILE "conreo"
       DELETE _netpath$ + "\office\conreo.*"
     END IF 
     WAIT FOR 1
     REORGANIZE FILE datei$ TO _netpath$ + "office\conreo.sbf"
     WAIT FOR 3
     fcon$ = "conreo"
     FILE fcon$
     INDEX codeku.fcon$
     SELECT FIRST 
     l% = 0
     WHILE NOT EOF (fcon$)
       codecon% = codecon.fcon$
       codeku% = codeku.fcon$
       codekucon$ = STR$ (codecon%,"000000") + STR$ (codeku%,"000000")
       IF EXISTS (codekucon$,codekucon.fcon$) THEN 
         REMOVE FROM FILE fcon$ WHERE codekucon.fcon$ = codekucon$
         l% = l% + 1
       END IF 
       SET STATUS STR$ (l%,",999999") + " " + fcon$
       SELECT NEXT FILE fcon$
      WEND 
      datei$ = fcon$
      SELECT FIRST FILE datei$
   END IF 
   WHILE NOT EOF (datei$)
     MOUSE OFF 
     jjj% = jjj% + 1
     xjj% = xjj% + 1
     SET STATUS datei$ + "    " + STR$ (jjj%,",99999999") + "   von   " + STR$ (kkk%,",99999999")
     textdo1$ = datei$
     textdo$ = "Exportiere " + STR$ (jjj%,",99999999") + "   von   " + STR$ (kkk%,",99999999")
     FORM 
     ? "<CODIE-SATZ>"

 
     FOR i% = 0 TO feldanz% - 1
       fname0$ = felder$(i%)
       IF fname0$ LIKE "VertrStatu*" OR fname0$ LIKE "BWVertrStatu*" OR fname0$ LIKE "BeiVertrStatu*" OR fname0$ LIKE "EinhStatu*" OR fname0$ LIKE "AnzSchStatu*" OR fname0$ LIKE "SchStatu*" OR fname0$ LIKE "CAgez*" THEN 
         GOTO wei060120061
       END IF 
       fname1$ = feldera$(i%)
       REM IF fname1$ LIKE "é*" OR fname1$ LIKE "*é*" OR fname1$ LIKE "ö*" OR fname1$ LIKE "*ö*" OR fname1$ LIKE "ô*" OR fname1$ LIKE "*ô*" OR fname1$ LIKE "·*" OR fname1$ LIKE "*·*" THEN 
         REM fname1$ = VSNRPackEx$( UCASE$ (felder$(i%)))
       REM END IF 
       IF feldtyp$(i%) = "DEL" THEN GOTO wei060120061
       IF feldtyp$(i%) = "NUM" THEN 
        REM CALL Fehler("NUM",feldanzeig$(i%))
        le% = LEN (feldanzeig$(i%))
        pos% = 0
        pos% = INSTR (feldanzeig$(i%),".")
        ok% = 0
        IF pos% > 0 AND le% > pos% THEN 
          ok% = 1
          vorkomma% = pos% - 1
          nachkomma% = le% - pos%
          IF fname0$$ <> 0 OR fname0$ LIKE "noan*" OR fname0$ LIKE "cod*" OR fname0$ LIKE "vorg*" OR fname0$ LIKE "lfdnr*" OR fname0$ LIKE "filia*" OR fname0$ LIKE "workstation*" OR fname0$ LIKE "bÅro*" THEN 
            ? "<" + fname1$ + "><![CDATA[" + LTRIM$ ( STR$ (fname0$$,"999999999.0000")) + "]]></" + fname1$ + ">"
          END IF 
        ELSE 
          ok% = 1
          IF fname$ LIKE "TIMESTAMP*" THEN 
          ELSE 
            IF fname0$$ <> 0 OR fname0$ LIKE "noan*" OR fname0$ LIKE "cod*" OR fname0$ LIKE "vorg*" OR fname0$ LIKE "lfdnr*" OR fname0$ LIKE "filia*" OR fname0$ LIKE "workstation*" OR fname0$ LIKE "bÅro*" THEN 
              ? "<" + fname1$ + "><![CDATA[" + LTRIM$ ( STR$ (fname0$$,"999999999.")) + "]]></" + fname1$ + ">"
            END IF 
          END IF 
        END IF 
       END IF 
       IF feldtyp$(i%) = "NMI" THEN 
        ok% = 1
        IF fname0$$ <> 0 OR fname0$ LIKE "noan*" THEN ? "<" + fname1$ + "><![CDATA[" + LTRIM$ ( STR$ (fname0$$,"999999999.")) + "]]></" + fname1$ + ">"
       END IF 
       IF feldtyp$(i%) LIKE "TXT*" THEN 
        ok% = 1
        IF fname0$ LIKE "Waehrung*" THEN 
          REM CALL Fehler("","")
          finh$ = UCASE$ (fname0$$)
        ELSE 
          finh$ = fname0$$
        END IF 
        REM IF LEFT$ (finh$,1) = "<" THEN 
          REM tinh$ = MID$ (finh$,2)
          REM finh$ = tinh$
        REM END IF 
        REM IF RIGHT$ (finh$,1) = ">" THEN 
          REM len1% = LEN (finh$) - 1
          REM tinh$ = MID$ (finh$,1,len1%)
          REM finh$ = tinh$
        REM END IF 
        le% = LEN (finh$)
        IF le% > 2000 THEN 
          txt1$ = FN ansi( LEFT$ (finh$,2000))
          testwert$ = CHR$ (7)
          pos% = 0
          pos% = INSTR (txt1$,testwert$)
          IF pos% > 0 THEN 
            txt1a$ = LEFT$ (txt1$,pos% - 1) + MID$ (txt1$,pos% + 1)
            txt1$ = txt1a$
          END IF 
          ? "<" + fname1$ + "><![CDATA["
          ? txt1$
          txt1$ = FN ansi( MID$ (finh$,2000))
          testwert$ = CHR$ (7)
          pos% = 0
          pos% = INSTR (txt1$,testwert$)
          IF pos% > 0 THEN 
            txt1a$ = LEFT$ (txt1$,pos% - 1) + MID$ (txt1$,pos% + 1)
            txt1$ = txt1a$
          END IF 
          ? txt1$
          ? "]]></" + fname1$ + ">"
        ELSE 
          REM CALL Fehler(fname0$,nachname.supervis)
          IF (fname0$ LIKE "Pa·wort") AND (datei$ LIKE "supervis" OR datei$ LIKE "filiale") THEN 
            pw$ = ""
            IF datei$ LIKE "supervis" THEN 
              pw$ = PWDecoded$()
            END IF 
            IF datei$ LIKE "filiale" THEN 
              pw$ = FPWDecoded$()
            END IF 
            IF pw$ <> "" THEN ? "<" + fname1$ + "><![CDATA[" + FN ansi(pw$) + "]]></" + fname1$ + ">"
          ELSE 
            txt1$ = LEFT$ ( FN ansi( TRIM$ ( LTRIM$ (finh$))),le%)
            IF txt1$ <> "" OR fname0$ LIKE "noan*" THEN 
              REM ASCII -> BEL
              testwert$ = CHR$ (7)
              pos% = 0
              pos% = INSTR (txt1$,testwert$)
              IF pos% > 0 THEN 
                txt1a$ = LEFT$ (txt1$,pos% - 1) + MID$ (txt1$,pos% + 1)
                txt1$ = txt1a$
              END IF 
               
              ? "<" + fname1$ + "><![CDATA[" + txt1$ + "]]></" + fname1$ + ">"
            END IF 
          END IF 
        END IF 
       END IF 
       IF feldtyp$(i%) = "LOG" THEN 
        ok% = 1
        ? "<" + fname1$ + "><![CDATA[" + fname0$$ + "]]></" + fname1$ + ">"
       END IF 
       IF feldtyp$(i%) = "DAT" THEN 
         ok% = 1
         IF fname0$$ > 0 THEN 
           ? "<" + fname1$ + "><![CDATA[" + DATE$ (fname0$$,"yyyymmdd") + "]]></" + fname1$ + ">"
         ELSE 
           REM ? "<" + fname1$ + ">" + "</" + fname1$ + ">"
         END IF 
       END IF 
       IF feldtyp$(i%) = "TIM" THEN 
         ok% = 1
         IF fname0$$ > 0 THEN 
           ? "<" + fname1$ + "><![CDATA[" + TIME$ (fname0$$,"hh:mm") + "]]></" + fname1$ + ">"
         ELSE 
           REM ? "<" + fname1$ + ">" + "</" + fname1$ + ">"
         END IF 
       END IF 
       IF fname$ LIKE "TIMESTAMP*" THEN 
         ok% = 1
         REM ? "<" + fname1$ + ">" + "</" + fname1$ + ">"
       END IF 
       REM ? befstring$;
       IF ok% = 0 THEN 
         t$ = feldtyp$(i%)
         REQUEST t$,"nicht angelegt",2
       END IF 
wei060120061: 
     NEXT i%
     
     ? "</CODIE-SATZ>"
     REM CALL Fehler( STR$ (xjj%,",999999"),"")
     IF UCASE$ (datei$) LIKE "BUCHUNG*" THEN 
       IF xjj% >= 200000 THEN 
         ? "</CODIE-EXPORT>"
         CLOSE OUTPUT 
         xend% = 1
         GOTO azsg041120051
       END IF 
     END IF 
     SELECT NEXT FILE datei$
   WEND 
 datei$ = origdatei$
 IF art% <> 1 AND xend% = 0 THEN 
   ? "</CODIE-EXPORT>"
   CLOSE OUTPUT 
 END IF 
 REM CALL Fehler("TMPSTR99","")
 REM ? "AAAA"
 REM LOAD "TMPSTR99.SBP", NEW 
 REM CALL TMPSTR99()
 REM CLOSE PROGRAMFILE "TMPSTR99"
 END SUB 



FUNCTION VSNRPackEx$(VSNR$)
 tVSNR$ = ""
 FOR a% = 1 TO LEN (VSNR$)
   tC$ = UCASE$ ( MID$ (VSNR$,a%,1))
         x% = ASC ( LEFT$ ( UCASE$ (tC$),1))
         SELECT CASE x%
           CASE 142
             tC$ = "AE"
           CASE 153
             tC$ = "OE"
           CASE 154
             tC$ = "UE"
         END SELECT 
         IF tc$ LIKE "·" THEN tc$ = "SS"
   REM SELECT CASE tC$
   REM CASE "A" TO "Z","0" TO "9"
     tVSNR$ = tVSNR$ + tC$
   REM END SELECT 
 NEXT a%
 VSNRPackEx$ = tVSNR$
 END FUNCTION 

SUB CheckKVSKOND()
 MOUSE OFF 
 CALL DFile(3,"KVERTRAG" + _fpw$)
 CALL DFile(3,"VPGEKOND" + _fpw$)
 CALL DFile(3,"KVSKOND" + _fpw$)
 MOUSE OFF 
 FILE "kvertrag"
 INDEX lfdnr
 FILE "vpgekond"
 INDEX codekey
 FILE "kvskond"
 INDEX codeko
 IF RECCOUNT ("kvskond") > 0 THEN 
   codekoold% = 0
   i% = 0
   f% = 0
   j% = RECCOUNT ("kvskond")
   SELECT FIRST LOCK 
   WHILE NOT EOF ("KVSKOND")
     codeko% = codeko.kvskond
     i% = i% + 1
     SET STATUS STR$ (i%,",99999999") + "/" + STR$ (j%,",99999999") + "     codeko = " + STR$ (codeko%,",99999999") + "  gelîscht: " + STR$ (f%,",99999999")
anfkvs010320071: 
     codeko% = codeko.kvskond
     IF NOT EXISTS (codeko%,codekey.vpgekond) THEN 
       MOUSE OFF 
       f% = f% + 1
       SET STATUS STR$ (i%,",99999999") + "/" + STR$ (j%,",99999999") + "     codeko = " + STR$ (codeko%,",99999999") + "  gelîscht: " + STR$ (f%,",99999999")
       REM REMOVE FROM FILE "kvskond" WHERE codeko.kvskond = codeko%
       SELECT REMOVE FILE "kvskond"
       SELECT KEY codekoold% LOCK FILE "kvskond" INDEX codeko.kvskond
       i% = 0
       j% = RECCOUNT ("kvskond")
       GOTO anfkvs010320071
     END IF 
     codekoold% = codeko%
     SELECT NEXT LOCK FILE "kvskond" INDEX codeko.kvskond
   WEND 
   FILE "kvskond"
   INDEX codevt.kvskond
   SELECT FIRST 
   FILE "kvertrag"
   INDEX lfdnr
   i% = 0
   j% = RECCOUNT ("kvertrag")
   SELECT FIRST LOCK 
   WHILE NOT EOF ("Kvertrag")
      lfdnr% = lfdnr.kvertrag
      MOUSE OFF 
      i% = i% + 1
      SET STATUS STR$ (i%,",99999999") + "/" + STR$ (j%,",99999999") + " VertrÑge bearbeitet"
      IF sollst.kvertrag LIKE "j" THEN 
        IF NOT EXISTS (lfdnr%,codevt.kvskond) THEN 
          sollst.kvertrag = "n"
          STORE FILE "kvertrag"
        END IF 
      ELSE 
        IF EXISTS (lfdnr%,codevt.kvskond) THEN 
          SELECT KEY lfdnr% LOCK FILE "kvskond" INDEX codevt.kvskond
          SELECT REMOVE FILE "kvskond"
        END IF 
      END IF 
      SELECT NEXT LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
   WEND 
 ELSE 
   MOUSE OFF 
   SET STATUS "Bitte warten, Vertragsdatei wird angepasst!"
   FILE "kvertrag"
   UPDATE sollst.kvertrag = "n"
   END UPDATE 
   SET STATUS "Vertragsdatei wurde angepasst!"
 END IF 
 REQUEST "KonditionsprÅfung und Anpassung Vertragsdatei beendet!","",2
 SET STATUS ""
 END SUB 

SUB CheckDynVertr()
 CALL DFile(3,"KVERTRAG" + _fpw$)
 CALL DFile(3,"VKOND" + _fpw$)
  FILE "vkond"
  INDEX codevk.vkond
  FILE "kvertrag"
  ON ERROR GOTO w070820082
  CREATE INDEX ON codeko.kvertrag
w070820082: 
  ON ERROR GOTO ErrorHandler
  INDEX codeko.kvertrag
  SELECT FIRST 
  SELECT KEY 1 LOCK FILE "kvertrag" INDEX codeko.kvertrag
  i% = 0
  j% = RECCOUNT ("kvertrag")
  WHILE NOT EOF ("kvertrag")
    SELECT FIRST FILE "vkond" INDEX codevk.vkond
    _kond% = codeko.kvertrag
    codevt% = lfdnr.kvertrag
    IF codevstatus.kvertrag < 1 THEN 
      codevstatus.kvertrag = 12
      VStatusTxT.kvertrag = "Antrag"
      STORE FILE "KVERTRAG"
    END IF 
    SELECT FIRST FILE "vkond" INDEX codevk.vkond
    ok% = - 1
    WHILE ok% = - 1
      SELECT KEY _kond% LOCK FILE "vkond" INDEX codevk.vkond
      codevt.vkond = codevt%
      STORE FILE "vkond"
      IF nÑchsteKond.VKOND <> 0 THEN 
        _kond% = nÑchsteKond.VKOND
        SELECT FIRST FILE "vkond" INDEX codevk.vkond
        a% = a% + 1
      ELSE 
        ok% = 0
      END IF 
    WEND 
    i% = i% + 1
    SET STATUS STR$ (i%,",99999999") + "/" + STR$ (j%,",99999999") + " von KVERTRAG bearbeitet, PrÅf. VKOND"
    SELECT NEXT LOCK FILE "kvertrag"
  WEND 
 
 
 GOTO w070820081
 FILE "kvertrag"
  INDEX codeko.kvertrag
  SELECT FIRST 
  SELECT KEY 1 FILE "kvertrag" INDEX codeko.kvertrag
  codekoold% = 0
  i% = 0
  lfdnrold% = 0
  vs_nrold$ = ""
  WHILE NOT EOF ("kvertrag")
    i% = i% + 1
    IF codeko.kvertrag = codekoold% THEN 
      REM ? "old: " + STR$ (lfdnrold%,"000000") + "/" + vs_nrold$ + " - " + statusold$ + "---akt: " + STR$ (lfdnr.kvertrag,"000000") + " - " + VStatusTxT.kvertrag + "/" + STR$ (codeko.kvertrag,"000000")
    ELSE 
      codekoold% = codeko.kvertrag
      lfdnrold% = lfdnr.kvertrag
      vs_nrold$ = vs_nr.kvertrag
      statusold$ = VStatusTxT.kvertrag
    END IF 
    SET STATUS STR$ (i%,",99999999") + "/" + STR$ (j%,",99999999") + " von KVERTRAG bearbeitet"
    SELECT NEXT FILE "kvertrag"
  WEND 
 
w070820081: 
 FILE "kvertrag"
  INDEX lfdnr.kvertrag
  SELECT FIRST LOCK 
  codekoold% = 0
  i% = 0
  lfdnrold% = 0
  vs_nrold$ = ""
  j% = RECCOUNT ("kvertrag")
  WHILE NOT EOF ("kvertrag")
    i% = i% + 1
    IF Antragsdatum.kvertrag < 1 THEN 
      Antragsdatum.kvertrag = VS_Beginn.kvertrag
      STORE FILE "KVERTRAG"
    END IF 
    SET STATUS STR$ (i%,",99999999") + "/" + STR$ (j%,",99999999") + " von KVERTRAG bearbeitet wegen Antragsdatum"
    SELECT NEXT LOCK FILE "kvertrag"
  WEND 
 

 END SUB 

SUB VKMainMani()
 IF NOT OPEN ("sparten") THEN CALL DFile(3,"sparten" + _fpw$)
 IF NOT OPEN ("geadr") THEN CALL DFile(3,"geadr" + _fpw$)
 IF NOT OPEN ("gekond") THEN CALL DFile(3,"gekond" + _fpw$)
 IF NOT OPEN ("vkond") THEN CALL DFile(3,"vkond" + _fpw$)
 IF NOT OPEN ("maadr") THEN CALL DFile(3,"maadr" + _fpw$)
 IF NOT OPEN ("kvertrag") THEN CALL DFile(3,"kvertrag" + _fpw$)
 IF NOT OPEN ("vprodukt") THEN CALL DFile(3,"vprodukt" + _fpw$)
 
 FILE "kvertrag"
 INDEX proviab.kvertrag
 SELECT FIRST FILE "kvertrag" INDEX proviab.kvertrag
 SELECT KEY 1 FILE "kvertrag" INDEX proviab.kvertrag
 i% = 0
 j% = RECCOUNT ("kvertrag")
 WHILE NOT EOF ("kvertrag")
   i% = i% + 1
   IF proviab.kvertrag > 0 THEN 
     IF codeko.kvertrag > 0 THEN 
       CALL VKONDManipula(lfdnr.kvertrag)
     END IF 
   END IF 
   SET STATUS STR$ (i%,",999999") + "/" + STR$ (j%,",999999") + " Vertragskonditionen geprÅft"
   SELECT NEXT FILE "kvertrag" INDEX proviab.kvertrag
 WEND 
 END SUB 
 
SUB VKONDManipula(codevt%)
 SELECT FIRST FILE "stamm"
 oberfirma% = oberfirma.stamm
 BWStart% = proviab.kvertrag
 codeko% = codeko.kvertrag
 codvp% = codevp.kvertrag
 codege% = codege.kvertrag
 codeva% = codeva.kvertrag
 proviab% = proviab.kvertrag
 QuickCode$ = STR$ (oberfirma%,"000000") + STR$ (CodeGE%,"000000") + STR$ (CodeVA%,"000000")
 _kond% = codeko%
 IF NOT OPEN ("gekond") THEN CALL DFile(3,"gekond" + _fpw$)
 IF NOT OPEN ("vkond") THEN CALL DFile(3,"vkond" + _fpw$)
 IF NOT OPEN ("maadr") THEN CALL DFile(3,"maadr" + _fpw$)
 IF NOT OPEN ("kvertrag") THEN CALL DFile(3,"kvertrag" + _fpw$)
 REM CALL Fehler("Start: VKOND-Manipulation","")
 ok% = - 1
 a% = 0
 WHILE ok% = - 1
     SELECT FIRST FILE "VKOND" INDEX CodeVK.VKOND
     SELECT KEY _kond% FILE "VKOND" INDEX CodeVK.VKOND
     
     SELECT FIRST FILE "GEKOND" INDEX lfdnr.GEKOND
     SELECT KEY CodeKO.VKOND FILE "GEKOND" INDEX lfdnr.GEKOND
     ap% = ap.gekond
     courtage% = courtage.gekond
     PflegeProvi% = PflegeProvi.gekond
     SELECT FIRST FILE "MAADR" INDEX CodeMA.MAADR
     SELECT KEY CodeMA.GEKOND FILE "MAADR" INDEX CodeMA.MAADR
     IF nÑchsteKond.VKOND <> 0 THEN 
       _kond% = nÑchsteKond.VKOND
       a% = a% + 1
     ELSE 
       REM CALL Fehler( STR$ (a%,"99") + " nÑchste VKOND=0","")
       ok% = 0
     END IF 
 WEND 
 IF codema.vkond <> oberfirma% THEN 
   IF codege% = 54 AND codeva% = 99 THEN 
     REM CALL Fehler("AuM,Sach-WohngebÑude","")
   END IF 
   codevkold% = CodeVK.VKOND
   REM die Oberfirma ist nicht der letzte VorgÑnger
   lfdnrold% = lfdnr.gekond
   IF EXISTS (QuickCode$,QuickCode.gekond) THEN 
     SELECT FIRST FILE "gekond" INDEX QuickCode.gekond
     SELECT KEY QuickCode$ LOCK FILE "gekond" INDEX QuickCode.gekond
     lfdnrneu% = 0
     notfound% = 1
     WHILE notfound% = 1 AND QuickCode.GEKOND = QuickCode$ AND NOT EOF ("GEKOND")
 
       REM -------------------------------
       REM -- Bewertungszeitraum ermitteln
       REM -------------------------------
 
       IF DAYS (BWvon.GEKOND) < 1 THEN BWvon% = DAYS ("1.1.1980") ELSE BWvon% = DAYS (BWvon.GEKOND)
       IF DAYS (BWbis.GEKOND) < 1 THEN BWbis% = DAYS ("31.12.2300") ELSE BWbis% = DAYS (BWbis.GEKOND)
       REM 130597
       IF BWStart% >= BWvon% AND BWStart% <= BWbis% THEN 
         notfound% = 0
       ELSE 
         SELECT NEXT LOCK FILE "gekond" INDEX QuickCode.GEKOND
       END IF 
     WEND 
     IF notfound% = 0 THEN 
       lfdnrneu% = lfdnr.gekond
     ELSE 
       lfdnrneu% = 0
     END IF 
   ELSE 
     notfound% = 1
   END IF 
   IF notfound% = 0 THEN 
     IF ap.gekond < ap% THEN ap.gekond = ap%
     IF courtage.gekond < courtage% THEN courtage.gekond = courtage%
     IF PflegeProvi.gekond < PflegeProvi% THEN PflegeProvi.gekond = PflegeProvi%
     STORE FILE "gekond"
   END IF 
   IF notfound% = 1 THEN 
     SELECT FIRST FILE "gekond" INDEX lfdnr.gekond
     SELECT KEY lfdnrold% FILE "gekond" INDEX lfdnr.gekond
     BLANK DUPLICATE FILE "gekond"
     lfdnrneu% = SER ("gekond",1)
     lfdnr.gekond = lfdnrneu%
     codema.gekond = oberfirma%
     SRjn.gekond = "n"
     sr.gekond = 0
     CALL QuickStore("gekond")
   END IF 
   REM jetzt VKOND Datensatz neu anlegen und den vorhandenen nÑchsteKond.VKOND=codevkneu
   BLANK FILE "vkond"
   codevkneu% = SER ("vkond",1)
   codevk.vkond = codevkneu%
   codeko.vkond = lfdnrneu%
   codevt.vkond = codevt%
   codema.vkond = oberfirma%
   nÑchsteKond.vkond = 0
   CALL QuickStore("vkond")
   REM jetzt die alte VKOND manipulieren und bei nÑchstekond.vkond lfdnrneu eintragen
    SELECT FIRST FILE "VKOND" INDEX CodeVK.VKOND
    SELECT KEY codevkold% LOCK FILE "VKOND" INDEX CodeVK.VKOND
    nÑchsteKond.Vkond = codevkneu%
    CALL QuickStore("vkond")
 END IF 
 END SUB 
 

SUB CheckConnect()
 MOUSE OFF 
 CALL DFile(2,"office\connect" + _fpw$)
 FILE "connect"
 INDEX codecon
 SELECT FIRST LOCK 
 i% = 0
 j% = RECCOUNT ("connect")
 WHILE NOT EOF ("connect")
   i% = i% + 1
   IF codekey.connect < 1 THEN 
     codekey.connect = SER ("connect",1)
     STORE FILE "connect"
   END IF 
   SET STATUS STR$ (i%,",999999") + "/" + STR$ (j%,",999999")
   SELECT NEXT LOCK FILE "connect" INDEX codecon.connect
 WEND 
 END SUB 


SUB AutoFiVorg()
 SELECT FIRST FILE "stamm"
 oberfirma% = oberfirma.stamm
 IF NOT OPEN ("maadr") THEN CALL DFile(3,"maadr" + _fpw$)
 IF NOT OPEN ("mavorg") THEN CALL DFile(3,"mavorg" + _fpw$)
 FILE "mavorg"
 INDEX codema.mavorg
 REMOVE FROM FILE "mavorg" WHERE codema.mavorg = 0
 FILE "maadr"
 INDEX codema.maadr
 SELECT FIRST FILE "maadr" INDEX codema.maadr
 SELECT KEY oberfirma% FILE "maadr" INDEX codema.maadr
       maname$ = nachname.maadr
       mavorname$ = vorname.maadr
       maagnr$ = Agenturnr.maadr
 
 SELECT FIRST LOCK FILE "maadr" INDEX codema.maadr
 WHILE NOT EOF ("maadr")
   codema% = codema.maadr
   IF (codema.maadr = vorgÑnger.maadr AND codema.maadr <> oberfirma%) THEN 
     REM Oberfirma zum VorgÑnger machen
     SELECT FIRST FILE "mavorg" INDEX codema.mavorg
     SELECT KEY codema% LOCK FILE "mavorg" INDEX codema.mavorg
     IF aktiviert.mavorg = "j" THEN 
       codevma.mavorg = oberfirma%
       NameVMA.mavorg = maname$
       VornameMA.mavorg = mavorname$
       AgenturnrVMA.mavorg = maagnr$
       aktiviert.mavorg = "j"
       STORE FILE "mavorg"
       vorgÑnger.maadr = oberfirma%
       STORE FILE "maadr"
     END IF 
   ELSE 
     IF codema.maadr <> 0 AND vorgÑnger.maadr = 0 THEN 
       REM oberfirma als vorgÑnger aufnehmen
       codema% = codema.maadr
       CALL Fehler("codema: " + STR$ (codema%,"000000"),"")
       BLANK FILE "mavorg"
     
       codekey% = SER ("mavorg",1)
       codekey.mavorg = codekey%
       SELECT KEY codekey% LOCK FILE "mavorg" INDEX codekey.mavorg
       codema.mavorg = codema%
       codevma.mavorg = oberfirma%
       NameVMA.mavorg = maname$
       VornameMA.mavorg = mavorname$
       AgenturnrVMA.mavorg = maagnr$
       von.mavorg = "01.01.1990"
       aktiviert.mavorg = "j"
       STORE FILE "mavorg"
       vorgÑnger.maadr = oberfirma%
       STORE FILE "maadr"
     END IF 
   END IF 
   SELECT NEXT LOCK FILE "maadr" INDEX codema.maadr
 WEND 
 END SUB 
 

SUB CheckBuch()
 IF NOT OPEN ("stamm") THEN CALL DFile(3,"stamm" + _fpw$)
 SELECT FIRST FILE "stamm"
  IF PrvVerfahr$ LIKE "Zahlungseingang" THEN 
    budat$ = "Buchung1"
 ELSE 
    budat$ = "Buchung"
 END IF 
 IF NOT OPEN (budat$) THEN CALL DFile(3,budat$ + _fpw$)
 FILE budat$
 INDEX codebu
 IF RECCOUNT (budat$) > 0 THEN 
   i% = 0
   j% = RECCOUNT (budat$)
   SELECT FIRST LOCK FILE budat$ INDEX codebu
   WHILE NOT EOF (budat$)
     MOUSE OFF 
     i% = i% + 1
     SET STATUS STR$ (i%,",99999999") + "/" + STR$ (j%,",99999999") + " " + budat$
     IF provision = "j" THEN 
       IF buchungstext LIKE "AP*" OR buchungstext LIKE "Abschlu*" THEN 
         apjn = "j"
         courtjn = "n"
         pflegejn = "n"
       END IF 
       IF buchungstext LIKE "Courtag*" THEN 
         apjn = "n"
         courtjn = "j"
         pflegejn = "n"
       END IF 
       IF buchungstext LIKE "Pfleg*" THEN 
         apjn = "n"
         courtjn = "n"
         pflegejn = "j"
       END IF 
       STORE FILE budat$
     END IF 
     SELECT NEXT LOCK FILE budat$ INDEX codebu
   WEND 
 END IF 
 END SUB 


