 
  CALL main()
 
 ' Update fÅr Dateistrukturen
 ' Copyright (c) 1993-1995 CODie software products
 ' Stand   : 17.08.1999 0.05
 ' =============================================================
 ' 16.10.94 - Umgestellt auf neue SERVER.DLL 3.0
 ' 30.12.96 - Anpassung an neue Dateien
 ' öbergehen der Telefonnummernanpassung und des Aufbaus der Zusatzdateien,
 ' wenn diese schon angepasst wurden
 ' ExpAG fÅr Real Cash Export
  
SUB DoUpdate()
 CALL HideStartup()
 REM GLOBAL Changes%,ChangesMax%
 
 REM ****************************************************
 REM ** ChangesMax% wird mit der Anzahl der            **
 REM ** notwendigen énderungen in OFFICE initialisiert **
 REM ****************************************************
 
 ChangesMax% = 110
 
 REM ****************************************************
 REM ** HinzufÅgen der notwendigen énderungen des      **
 REM ** jeweilgen Projektes                            **
 REM ****************************************************
 
 SELECT CASE UCASE$ (_projekt$)
 CASE "IMMAK"
   ChangesMax% = ChangesMax% + 82
 CASE "FACTURA"
   ChangesMax% = ChangesMax% + 260
 CASE "PROVIS"
   ChangesMax% = ChangesMax% + 875
 CASE "MEDIA"
   ChangesMax% = ChangesMax% + 11
 END SELECT 
  
 Changes% = 0
 
 CREATE DIALOG "UPDATE",0,0,278,121,"Update","MS Sans Serif",8
 ADD DIALOG "UPDATE",4,0,0,278,97,0,""
 ADD DIALOG "UPDATE",9,6,6,20,22,4
 ADD DIALOG "UPDATE",5,38,9,203,10,0,"Ihre Daten werden nachfolgend an die neuen Funktionen des"
 ADD DIALOG "UPDATE",5,38,19,76,9,0,"Programmes angepa·t."
 ADD DIALOG "UPDATE",5,38,33,219,8,0,"Damit das Update fehlerfrei durchgefÅhrt werden kann, mÅssen Sie"
 ADD DIALOG "UPDATE",5,38,43,232,9,0,"sicherstellen, da· kein weiterer Mitarbeiter im Programm angemeldet ist."
 ADD DIALOG "UPDATE",5,38,60,232,8,0,"Wenn Sie das Update jetzt durchfÅhren lassen wollen, drÅcken Sie"
 ADD DIALOG "UPDATE",5,38,70,232,8,0,"auf " + CHR$ (34) + "Fortfahren" + CHR$ (34) + ", wenn Sie das Update zu einem spÑteren Zeitpunkt"
 ADD DIALOG "UPDATE",5,38,80,219,8,0,"starten wollen, drÅcken Sie auf " + CHR$ (34) + "Abbrechen" + CHR$ (34) + "."
 ADD DIALOG "UPDATE",1,82,100,55,15,1,"&Fortfahren",1,1
 ADD DIALOG "UPDATE",1,140,100,55,15,0,"&Abbrechen",0,0
 DIALOG "UPDATE",req%
 REMOVE DIALOG "UPDATE"
 
 IF req% <> 1 THEN 
   CALL EXIT()
 END IF 
 
 REM ** zusÑtzlich angemeldete Nutzer erkennen **
 
 CALL DFile(4,"supervis;paris")
 IF _error% = 132 OR _error% = 140 THEN 
   msg$ = "Bitte stellen Sie sicher, da· kein weiterer Mitarbeiter angemeldet ist."
   CALL Fehler("Es sind noch weitere Mitarbeiter im Programm angemeldet!",msg$)
   CALL EXIT()
 END IF 
 REM 220497 zunÑchst alle Dateien reorganisieren
 REM CALL ReorgDB()


 GLOBAL GIndNeu%,NeuADR%,NeuPost%,NeuKVer%
    GIndNeu% = 0:NeuADR% = 0:NeuPost% = 0:NeuKVer% = 0
 
    GIndNeu% = 0
 
    DIM dlg AS Dialog
    DIM control AS DialogControl
 
    Superbase.Dialogs.Add("Dialogname")
    SET dlg = Superbase.Dialogs.Dialogname
    dlg.Move(0,0,320,288)
    dlg.Caption = "Parameter fÅr das Update"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(0,0,310,32)
    control.Caption = "Parametersetzung fÅr das Update"
 
    SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
    control.Move(8,11,186,14)
    control.Caption = "Neuerzeugung aller Indexdateien fÅr alle Datenbanken"
    control.Bind("GIndNeu%")
    control.ValueOn = - 1
    control.ValueOff = 0
  
    SET control = dlg.Add("DialogFrame2","DialogFrame")
    control.Move(0,36,310,95)
    control.Caption = "Datenbank: Adressen"
 
    SET control = dlg.Add("DialogCheckBox2","DialogCheckBox")
    control.Move(6,46,234,14)
    control.Caption = "komplette Reorganisation und Neuaufbau der Adressdatenbank"
    control.Bind("NeuADR%")
    control.ValueOn = - 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(6,64,300,28)
    control.Caption = "Sie erhalten nachfolgend die Mîglichkeit das Postanschriftsfeld neu generieren zu lassen. Dieses Feld befindet sich auf der Notizseite/Maske Kunden und wird fÅr die Dokumenten - und Serienbrieferstellung genutzt."
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(6,92,300,20)
    control.Caption = "Wenn Sie bereits Adressen im Postanschriftsfeld manuell erfa·t / geÑndert haben,sollten Sie nicht die automatische Generierung durchfÅhren!!!"
 
    SET control = dlg.Add("DialogCheckBox3","DialogCheckBox")
    control.Move(6,113,244,15)
    control.Caption = "Neuerzeugung des Postanschriftsfeldes der Adressdatei"
    control.Bind("NeuPost%")
    control.ValueOn = - 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogFrame3","DialogFrame")
    control.Move(0,134,310,40)
    control.Caption = "UMSATZ"
 
    SET control = dlg.Add("DialogCheckBox4","DialogCheckBox")
    control.Move(6,145,294,11)
    control.Caption = "UmsÑtze neu berechnen"
    control.Bind("NeuKVer%")
    control.ValueOn = - 1
    control.ValueOff = 0
  
 
 
    SET control = dlg.Add("DialogFrame5","DialogFrame")
    control.Move(0,210,310,30)
    control.Caption = "Aufbau der Zusatzdateien (Anrede,Titel...)"
 
    SET control = dlg.Add("DialogCheckBox7","DialogCheckBox")
    control.Move(6,221,294,11)
    control.Caption = "Aufbau Zusatzdateien"
    control.Bind("aufbzusatz$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
 
  
    SET control = dlg.Add("DialogLabel11","DialogLabel")
    control.Move(16,241,280,30)
    control.Caption = "<<<<<< Die oben aufgefÅhrten Optionen brauchen Sie nicht anzukreuzen. Sie dienen nur zur Anpassung veralteter Superbaseversionen an die neuere Versionen! Gegebenenfalls erkundigen Sie sich bei CODie software e.K.>>>>>>>"
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(120,271,58,14)
    control.Default = 1
    control.Caption = "OK"
    control.ReturnValue = 1
 
    DIALOG "Dialogname",req%
    REMOVE DIALOG ALL 
    MOUSE ON 
  
 REM IF GUpd% = - 1 THEN NeuADR% = - 1
 
 CALL Server("LOADUPDATE","")
 CALL Server("UPDFILE","")
 CALL Server("UPDFIELD","")
 CALL Server("UPDSTATUS","Update wird vorbereitet...")
 CALL Server("UPDGAUGE","0")
 
 
 REM ****************************
 REM ** Anpassung SUPERVIS.SBF **
 REM ****************************
 
 FILE "supervis"
 CALL FldAdd("Nachname","TXT;50",1)
 CALL FldAdd("Name","TXT;50",1)
 CALL FldAdd("Vorname","TXT;50",0)
 CALL FldAdd("ProvisProz","NUM;000.000",0)
 CALL FldAdd("AngGesGes","NUM;999999999999.00",0)
 CALL FldAdd("ReGesGes","NUM;999999999999.00",0)
 CALL FldAdd("LieGesGes","NUM;999999999999.00",0)
 CALL FldAdd("AufGesGes","NUM;999999999999.00",0)
 CALL FldAdd("BesGesGes","NUM;999999999999.00",0)
 CALL FldAdd("GutGesGes","NUM;999999999999.00",0)
 CALL FldAdd("Sperre","NUM;000000.",0)
 CALL FldAdd("EMAILSHost","TXT;150",0)
 CALL FldAdd("EMAILSPort","NUM;999999.",0)
 CALL FldAdd("EMAILSUserID","TXT;150",0)
 CALL FldAdd("EMAILSAFirma","TXT;150",0)
 CALL FldAdd("EMAILSAName","TXT;150",0)
 CALL FldAdd("EMAILNummer","TXT;150",0)
 CALL FldAdd("EMAILSKopie","TXT;5",0)
 CALL FldAdd("EMAILSErg","TXT;5",0)
 CALL FldAdd("EMAILSNummer","TXT;150",0)
 CALL FldAdd("EMAILText1","TXT;400 R",0)
 CALL FldAdd("EMAILText2","TXT;500 R",0)
 CALL FldAdd("NoAnzeigeJN","TXT;1",0)
 CALL FldAdd("NoEmailJN","TXT;1",0)
 CALL FldAdd("EMAILSNummer1","TXT;150",0)
 CALL FldAdd("EMAILMANummer","TXT;150",0)
 CALL FldAdd("EMAILPHost","TXT;150",0)
 CALL FldAdd("EMAILPPort","NUM;999999.",0)
 CALL FldAdd("EMAILPUserID","TXT;150",0)
 CALL FldAdd("EMAILPPasww","TXT;150",0)
 CALL FldAdd("EMAILPOP3JN","TXT;5",0)
 CALL FldAdd("EMAILJN","NUM;,0.",0)
 CALL FldAdd("EMAILJNAuto","NUM;,0.",0)
 CALL FldAdd("OutlookName","TXT;50",0)
 CALL FldAdd("OutlookPW","TXT;50",0)
 CALL FldAdd("Werbeemail","TXT;4000 R",0)
 CALL FldAdd("Werbebetreff","TXT;150",0)
 CALL FldAdd("emailatt1","TXT;256",0)
 CALL FldAdd("Kuerzel","TXT;10",0)
 CALL MarkMain("CodeMA")
 SAVE FILE "supervis"
 INDEX CodeMA
 SELECT LAST 
 WHILE CodeMA > SER ("SUPERVIS",1)
 WEND 
 FILE "supervis"
 INDEX codema.supervis
 SELECT FIRST LOCK 
 WHILE NOT EOF ("supervis")
   IF EMAILJN.supervis < 2 THEN 
     EMAILJN.supervis = - 1
   ELSE 
     EMAILJN.supervis = 2
   END IF 
   IF EMAILJNAuto.supervis < 2 THEN 
     EMAILJNAuto.supervis = - 1
   ELSE 
     EMAILJNAuto.supervis = 2
   END IF 
   STORE FILE "Supervis"
   SELECT NEXT LOCK 
 WEND 
 REM ** Passwîrter codieren
 CALL PWUpdate()


 REM ************ STAMM anpassen **************
 CALL DFile(3,"STAMM" + _fpw$)
 FILE "Stamm"
 CALL FldAdd("PLZ","TXT;12 U",0)
 CALL FldAdd("HRNo","TXT;50",0)
 CALL FldAdd("USTNo","TXT;50",0)
 CALL FldAdd("EinkNo","TXT;50",0)
   CALL FldAdd("EMAILSHost","TXT;150",0)
   CALL FldAdd("EMAILSPort","NUM;999999.",0)
   CALL FldAdd("EMAILSUserID","TXT;150",0)
   CALL FldAdd("EMAILPHost","TXT;150",0)
   CALL FldAdd("EMAILPPort","NUM;999999.",0)
   CALL FldAdd("EMAILPUserID","TXT;150",0)
   CALL FldAdd("EMAILPPasww","TXT;150",0)
   CALL FldAdd("EMAILPOP3JN","TXT;5",0)
   CALL FldAdd("EMAILSAFirma","TXT;150",0)
   CALL FldAdd("EMAILJN","NUM;,0.",0)
   CALL FldAdd("EMAILJNAuto","NUM;,0.",0)
   REM fÅr Ausgabe nach Word
   CALL FldAdd("SAAdresse","TXT;20",0)
   CALL FldAdd("SATitel","TXT;20",0)
   CALL FldAdd("SAKunr","TXT;20",0)
   CALL FldAdd("SAProlog","TXT;20",0)
   CALL FldAdd("SAEpilog","TXT;20",0)
   CALL FldAdd("SATabkopf","TXT;20",0)
   CALL FldAdd("SATabinh","TXT;20",0)
   CALL FldAdd("SASummeN","TXT;20",0)
   CALL FldAdd("SASummeB","TXT;20",0)
   REM Text fÅr Ausgabe nach Word
   CALL FldAdd("TexRech1","TXT;35",0)
   CALL FldAdd("TexAng1","TXT;35",0)
   CALL FldAdd("TexLief1","TXT;35",0)
   CALL FldAdd("TexAuftr1","TXT;35",0)
   CALL FldAdd("TexBestell1","TXT;35",0)
   CALL FldAdd("TexGutschr1","TXT;35",0)
   CALL FldAdd("TexAnfr1","TXT;35",0)
   CALL FldAdd("TexMahn1","TXT;35",0)
   CALL FldAdd("TexMahngeb1","TXT;35",0)
   CALL FldAdd("TexMahnport1","TXT;35",0)

   CALL FldAdd("TexBeleg1","TXT;30",0)
   CALL FldAdd("TexKunnr1","TXT;30",0)
   REM CALL FldAdd("TexLiefnr1","TXT;30",0)
   CALL FldAdd("TexPos1","TXT;30",0)
   CALL FldAdd("TexAnzahl1","TXT;30",0)
   CALL FldAdd("TexME1","TXT;30",0)
   CALL FldAdd("TexArtik1","TXT;30",0)
   CALL FldAdd("TexEinzpr1","TXT;30",0)
   CALL FldAdd("TexGespr1","TXT;30",0)
   CALL FldAdd("TexSumN1","TXT;30",0)
   CALL FldAdd("TexMWST1v","TXT;30",0)
   CALL FldAdd("TexMWST1n","TXT;30",0)
   CALL FldAdd("TexSumG1","TXT;30",0)
   CALL FldAdd("TexRabatt1","TXT;30",0)
   CALL FldAdd("TexZZ1","TXT;30",0)
   CALL FldAdd("TexTeilzA1","TXT;45",0)
   CALL FldAdd("TexTeilzB1","TXT;45",0)
   CALL FldAdd("TexTeilzC1","TXT;45",0)
   CALL FldAdd("TexSktoA1","TXT;45",0)
   CALL FldAdd("TexSktoB1","TXT;45",0)
   CALL FldAdd("TexSktoC1","TXT;45",0)
   CALL FldAdd("TexAGNr1","TXT;45",0)

   CALL FldAdd("TexRech2","TXT;35",0)
   CALL FldAdd("TexAng2","TXT;35",0)
   CALL FldAdd("TexLief2","TXT;35",0)
   CALL FldAdd("TexAuftr2","TXT;35",0)
   CALL FldAdd("TexBestell2","TXT;35",0)
   CALL FldAdd("TexGutschr2","TXT;35",0)
   CALL FldAdd("TexAnfr2","TXT;35",0)
   CALL FldAdd("TexMahn2","TXT;35",0)
   CALL FldAdd("TexMahngeb2","TXT;35",0)
   CALL FldAdd("TexMahnport2","TXT;35",0)
   CALL FldAdd("TexTeilzA2","TXT;45",0)
   CALL FldAdd("TexTeilzB2","TXT;45",0)
   CALL FldAdd("TexTeilzC2","TXT;45",0)
   CALL FldAdd("TexSktoA2","TXT;45",0)
   CALL FldAdd("TexSktoB2","TXT;45",0)
   CALL FldAdd("TexSktoC2","TXT;45",0)
   CALL FldAdd("TexAGNr2","TXT;45",0)

   CALL FldAdd("TexBeleg2","TXT;30",0)
   CALL FldAdd("TexKunnr2","TXT;30",0)
   REM CALL FldAdd("TexLiefnr2","TXT;30",0)
   CALL FldAdd("TexPos2","TXT;30",0)
   CALL FldAdd("TexAnzahl2","TXT;30",0)
   CALL FldAdd("TexME2","TXT;30",0)
   CALL FldAdd("TexArtik2","TXT;30",0)
   CALL FldAdd("TexEinzpr2","TXT;30",0)
   CALL FldAdd("TexGespr2","TXT;30",0)
   CALL FldAdd("TexSumN2","TXT;30",0)
   CALL FldAdd("TexMWST2v","TXT;30",0)
   CALL FldAdd("TexMWST2n","TXT;30",0)
   CALL FldAdd("TexSumG2","TXT;30",0)
   CALL FldAdd("TexRabatt2","TXT;30",0)
   CALL FldAdd("TexZZ2","TXT;30",0)

   CALL FldAdd("DokPass","TXT;40",0)
   CALL FldAdd("CSPEED","NMI;0.",0)
   CALL FldAdd("WSBelegno","NMI;00.",0)
   CALL FldAdd("SABelegno","TXT;20",0)
   CALL FldAdd("BelegNrArt","NMI;0.",0)
   CALL FldAdd("TexLiefdat1","TXT;30",0)
   CALL FldAdd("TexLiefdat2","TXT;30",0)
   CALL FldAdd("TexZaZiel1","TXT;70",0)
   CALL FldAdd("TexZaZiel2","TXT;70",0)
   CALL FldAdd("K1Bank","TXT;50",0)
   CALL FldAdd("K1BLZ","TXT;8",0)
   CALL FldAdd("K1Konto","TXT;10",0)
   CALL FldAdd("K2Bank","TXT;50",0)
   CALL FldAdd("K2BLZ","TXT;8",0)
   CALL FldAdd("K2Konto","TXT;10",0)
   CALL FldAdd("K1Art","TXT;50",0)
   CALL FldAdd("K2Art","TXT;50",0)
   CALL FldAdd("K1Inh","TXT;50",0)
   CALL FldAdd("K2Inh","TXT;50",0)
   CALL FldAdd("K1IBAN","TXT;50",0)
   CALL FldAdd("K2IBAN","TXT;50",0)
   CALL FldAdd("K1Swift","TXT;50",0)
   CALL FldAdd("K2Swift","TXT;50",0)
   CALL FldAdd("K0Art","TXT;50",0)
   CALL FldAdd("K0Inh","TXT;50",0)
   CALL FldAdd("K0IBAN","TXT;50",0)
   CALL FldAdd("K0Swift","TXT;50",0)
   CALL FldAdd("K3Bank","TXT;50",0)
   CALL FldAdd("K3BLZ","TXT;8",0)
   CALL FldAdd("K3Konto","TXT;10",0)
   CALL FldAdd("K3Art","TXT;50",0)
   CALL FldAdd("K3Inh","TXT;50",0)
   CALL FldAdd("K3IBAN","TXT;50",0)
   CALL FldAdd("K3Swift","TXT;50",0)
   CALL FldAdd("nrNichts","NMI;000.",0)
   CALL FldAdd("nrAng","NMI;000.",0)
   CALL FldAdd("nrRech","NMI;000.",0)
   CALL FldAdd("nrLief","NMI;000.",0)
   CALL FldAdd("nrAuf","NMI;000.",0)
   CALL FldAdd("nrBest","NMI;000.",0)
   CALL FldAdd("nrGut","NMI;000.",0)
   CALL FldAdd("nrNLief","NMI;000.",0)
   CALL FldAdd("nrNRech","NMI;000.",0)
   CALL FldAdd("nr1Mahn","NMI;000.",0)
   CALL FldAdd("nr2Mahn","NMI;000.",0)
   CALL FldAdd("nr3Mahn","NMI;000.",0)
   CALL FldAdd("nr4Mahn","NMI;000.",0)
   CALL FldAdd("nr5Mahn","NMI;000.",0)
   CALL FldAdd("LastMahnung","NUM;999999999999.",0)
   CALL FldAdd("CBFCLizenzN","TXT;4000 R",0)
   CALL FldAdd("codieofftxt","TXT;5",0)
   CALL FldAdd("szofftxt","TXT;5",0)
   CALL FldAdd("codieoffset","NUM;000000.",0)
   CALL FldAdd("szoffset","NUM;000000.",0)
   CALL FldAdd("ADRCODie","NUM;000000.",0)
   CALL FldAdd("ADRsz","NUM;000000.",0)
   CALL FldAdd("AKQCODie","NUM;000000.",0)
   CALL FldAdd("AKQsz","NUM;000000.",0)
   CALL FldAdd("AKTCODie","NUM;000000.",0)
   CALL FldAdd("AKTsz","NUM;000000.",0)
   CALL FldAdd("CONCODie","NUM;000000.",0)
   CALL FldAdd("CONsz","NUM;000000.",0)
   CALL FldAdd("DOKCODie","NUM;000000.",0)
   CALL FldAdd("DOKsz","NUM;000000.",0)
   CALL FldAdd("PROCODie","NUM;000000.",0)
   CALL FldAdd("PROsz","NUM;000000.",0)
   CALL FldAdd("TELCODie","NUM;000000.",0)
   CALL FldAdd("TELsz","NUM;000000.",0)
   CALL FldAdd("TVOCODie","NUM;000000.",0)
   CALL FldAdd("TVOsz","NUM;000000.",0)
   CALL FldAdd("vonImport","TXT;5",0)
   CALL FldAdd("nachExport","TXT;5",0)
   CALL FldAdd("ImpExpAktiv","NMI;0.",0)
   CALL FldAdd("AnschreibenCBFC","TXT;100",0)
   CALL FldAdd("AnschreibenISMA","TXT;100",0)
   CALL FldAdd("AnschreibenProj","TXT;100",0)
   CALL FldAdd("AnschreibenProv","TXT;100",0)
   CALL FldAdd("LastBug","NUM;,999999.",0)
   CALL FldAdd("linksrechts","TXT;1",0)
   CALL FldAdd("LASTAnfrage","NUM;999999999.",0)
   CALL FldAdd("ustdruck","TXT;1",0)
   CALL FldAdd("KAng","TXT;3",0)
   CALL FldAdd("KRech","TXT;3",0)
   CALL FldAdd("KLief","TXT;3",0)
   CALL FldAdd("KAuft","TXT;3",0)
   CALL FldAdd("KBest","TXT;3",0)
   CALL FldAdd("KGut","TXT;3",0)
   CALL FldAdd("KAnfr","TXT;3",0)
   REM ustdruck$
 SAVE FILE "STAMM"
 SELECT FIRST LOCK FILE "stamm"
 IF GCodieADR$ LIKE "TRUE" THEN 
   vonImport.stamm = "sz"
   nachExport.stamm = "codie"
 ELSE 
   vonImport.stamm = "codie"
   nachExport.stamm = "sz"
 END IF 

 REM IF ITerminMask.stamm <> "j" THEN ITerminMask.stamm = "n"
 IF KAng.stamm = "" THEN KAng.stamm = "A"
 IF KRech.stamm = "" THEN KRech.stamm = "R"
 IF KLief.stamm = "" THEN KLief.stamm = "L"
 IF KAuft.stamm = "" THEN KAuft.stamm = "A"
 IF KBest.stamm = "" THEN KBest.stamm = "B"
 IF KGut.stamm = "" THEN KGut.stamm = "G"
 IF KAnfr.stamm = "" THEN KAnfr.stamm = "EPA"

 IF ustdruck.stamm = "" THEN ustdruck.stamm = "n"

 IF ImpExpAktiv.stamm <> 1 THEN ImpExpAktiv.stamm = 0
 IF TexAnfr1.stamm = "" THEN TexAnfr1.stamm = "ext.Preisanfrage"
 IF TexAnfr2.stamm = "" THEN TexAnfr2.stamm = "Inquiry"
 IF codieofftxt.stamm = "" THEN codieofftxt.stamm = "CODie"
 IF szofftxt.stamm = "" THEN szofftxt.stamm = "sz"
 
 REM IF TexLiefnr1.stamm = "" THEN TexLiefnr1.stamm = "Lieferantennummer"
 REM IF TexLiefnr1.stamm = "" THEN TexLiefnr1.stamm = "Offerer number"

 IF codieoffset.stamm = 0 THEN codieoffset.stamm = 0
 IF szoffset.stamm = 0 THEN szoffset.stamm = 500000

 
 IF LastMahnung.stamm < 1 THEN LastMahnung = 700000
 IF TexAGNr1.stamm = "" THEN TexAGNr1.stamm = "Auftragsnummer AG"
 IF TexAGNr2.stamm = "" THEN TexAGNr2.stamm = "Ordernumber"

 IF TexLiefdat1.stamm = "" OR TexLiefdat1.stamm = "Lieferdatum: " THEN TexLiefdat1.stamm = "Lieferdatum"
 IF TexLiefdat2.stamm = "" THEN TexLiefdat2.stamm = "delivery date"


 IF Nummernkreise.stamm = "j" AND BelegNrArt.stamm < 1 THEN BelegNrArt.stamm = 2

 IF WSBelegno.stamm < 1 THEN WSBelegno.stamm = 10
 IF SABelegno.stamm = "" THEN SABelegno.stamm = "Times New Roman"

 IF TexSktoC1.stamm = "" THEN TexSktoC1.stamm = "zu zahlende Summe: "
 IF TexSktoC2.stamm = "" THEN TexSktoC2.stamm = "amount payable"
 
 IF TexSktoB1.stamm = "" THEN TexSktoB1.stamm = " gewÑhren wir ein Skonto "
 IF TexSktoB2.stamm = "" THEN TexSktoB2.stamm = " we allow a cash discount "
 
 IF TexSktoA1.stamm = "" THEN TexSktoA1.stamm = "bei Zahlung bis zum "
 IF TexSktoA2.stamm = "" THEN TexSktoA2.stamm = "for payment up to "




 IF TexTeilzC1.stamm = "" THEN TexTeilzC1.stamm = "ausstehende Restsumme"
 IF TexTeilzC2.stamm = "" THEN TexTeilzC2.stamm = "due payment"

 IF TexTeilzB1.stamm = "" THEN TexTeilzB1.stamm = "Summe der erfolgten Zahlungen"
 IF TexTeilzB2.stamm = "" THEN TexTeilzB2.stamm = "sum of installments"

 IF TexTeilzA1.stamm = "" THEN TexTeilzA1.stamm = "Zahlungen (erfolgt J/N)"
 IF TexTeilzA2.stamm = "" THEN TexTeilzA2.stamm = "installments (executed J/N)"


 IF TEXMahnport1.stamm = "" THEN TEXMahnport1.stamm = "Mahnporto"
 IF TEXMahnport2.stamm = "" THEN TEXMahnport2.stamm = "dunning postal charge"

 IF TEXMahngeb1.stamm = "" THEN TEXMahngeb1.stamm = "MahngebÅhr"
 IF TEXMahngeb2.stamm = "" THEN TEXMahngeb2.stamm = "dunning charge"

 IF TEXMahn1.stamm = "" THEN TEXMahn1.stamm = "Mahnung"
 IF TEXMahn2.stamm = "" THEN TEXMahn2.stamm = "dunning reminder"

 IF TEXzz1.stamm = "" THEN TEXzz1.stamm = "Zahlungsziel: "
 IF TEXzz2.stamm = "" THEN TEXzz2.stamm = "term of payment: "

 IF TEXRabatt1.stamm = "" THEN TEXRabatt1.stamm = "Rabatt"
 IF TEXRabatt2.stamm = "" THEN TEXRabatt2.stamm = "discount"

 IF TEXSumG1.stamm = "" THEN TEXSumG1.stamm = "Gesamtsumme"
 IF TEXSumG2.stamm = "" THEN TEXSumG2.stamm = "total amount"

 IF TEXMWST1n.stamm = "" THEN TEXMWST1n.stamm = "MwSt"
 IF TEXMWST2n.stamm = "" THEN TEXMWST2n.stamm = "VAT"

 IF TEXMWST1v.stamm = "" THEN TEXMWST1v.stamm = "zuzÅglich "
 IF TEXMWST2v.stamm = "" THEN TEXMWST2v.stamm = "additional "

 IF TEXSumN1.stamm = "" THEN TEXSumN1.stamm = "Summe Netto"
 IF TEXSumN2.stamm = "" THEN TEXSumN2.stamm = "net total"

 IF TEXGespr1.stamm = "" THEN TEXGespr1.stamm = "Gesamtpreis"
 IF TEXGespr2.stamm = "" THEN TEXGespr2.stamm = "amount"

 IF TEXEinzpr1.stamm = "" THEN TEXEinzpr1.stamm = "Einzelpreis"
 IF TEXEinzpr2.stamm = "" THEN TEXEinzpr2.stamm = "unit price"

 IF TEXArtik1.stamm = "" THEN TEXArtik1.stamm = "Artikel/Leistung"
 IF TEXArtik2.stamm = "" THEN TEXArtik2.stamm = "article/item"

 IF TEXME1.stamm = "" THEN TEXME1.stamm = "ME"
 IF TEXME2.stamm = "" THEN TEXME2.stamm = "unit"

 IF TEXAnzahl1.stamm = "" THEN TEXAnzahl1.stamm = "Anzahl"
 IF TEXAnzahl2.stamm = "" THEN TEXAnzahl2.stamm = "quantity"

 IF TEXPos1.stamm = "" THEN TEXPos1.stamm = "Pos."
 IF TEXPos2.stamm = "" THEN TEXPos2.stamm = "pos."

 IF TEXKunnr1.stamm = "" THEN TEXKunnr1.stamm = "Kundennummer"
 IF TEXKunnr2.stamm = "" THEN TEXKunnr2.stamm = "Customer no."

 IF TEXBeleg1.stamm = "" THEN TEXBeleg1.stamm = "Belegnummer"
 IF TEXBeleg2.stamm = "" THEN TEXBeleg2.stamm = "Voucher number"


 IF TEXGutschr1.stamm = "" THEN TEXGutschr1.stamm = "Gutschrift"
 IF TEXGutschr2.stamm = "" THEN TEXGutschr2.stamm = "Credit note"
 IF TEXBestell1.stamm = "" THEN TEXBestell1.stamm = "Bestellung"
 IF TEXBestell2.stamm = "" THEN TEXBestell2.stamm = "Order"
 IF TEXRech1.stamm = "" THEN TEXRech1.stamm = "Rechnung"
 IF TEXRech2.stamm = "" THEN TEXRech2.stamm = "Invoice"
 IF TEXAng1.stamm = "" THEN TEXAng1.stamm = "Angebot"
 IF TEXAng2.stamm = "" THEN TEXAng2.stamm = "Offer"
 IF TEXLief1.stamm = "" THEN TEXLief1.stamm = "Lieferschein"
 IF TEXLief2.stamm = "" THEN TEXLief2.stamm = "Delivery note"
 IF TEXAuftr1.stamm = "" THEN TEXAuftr1.stamm = "AuftragsbestÑtigung"
 IF TEXAuftr2.stamm = "" THEN TEXAuftr2.stamm = "Confirmation of Order"

 IF SAAdresse.stamm = "" THEN SAAdresse.stamm = "Times New Roman"
 IF SATitel.stamm = "" THEN SATitel.stamm = "Times New Roman"
 IF SAKunr.stamm = "" THEN SAKunr.stamm = "Times New Roman"
 IF SAProlog.stamm = "" THEN SAProlog.stamm = "Times New Roman"
 IF SAEpilog.stamm = "" THEN SAEpilog.stamm = "Times New Roman"
 IF SATabkopf.stamm = "" THEN SATabkopf.stamm = "Times New Roman"
 IF SATabinh.stamm = "" THEN SATabinh.stamm = "Times New Roman"
 IF SASummeN.stamm = "" THEN SASummeN.stamm = "Times New Roman"
 IF SASummeB.stamm = "" THEN SASummeB.stamm = "Times New Roman"
 STORE FILE "stamm"
 REM CALL Fehler("Stamm ist fertig","")

 REM ************ ACCESS anpassen **************
 CALL DFile(2,"ACCESS" + _fpw$)
 FILE "ACCESS"
 CALL FldAdd("CodeAC","NUM;000000.",1)
 SAVE FILE "ACCESS"
 INDEX CodeAC.access
 SELECT LAST 
 i% = codeac.access
 INDEX QuickCode.access
 IF RECCOUNT ("ACCESS") > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 IF i% < 1 THEN 
   WHILE NOT EOF ("ACCESS")
     i% = i% + 1
     codeac.access = i%
     
     IF QWoNo = "" THEN 
       Workstation = 0
       QWoNo = "000000000000"
     END IF 
     STORE FILE "ACCESS"
     SELECT NEXT LOCK 
     SET STATUS "Datensatz: " + STR$ (i%,"9999999") + " bearbeitet!"
   WEND 
 END IF 
 INDEX codeac.access
 SELECT LAST 
 i% = codeac.access
 j% = SER ("Access",1)
 WHILE j% < i%
     j% = SER ("Access",1)
 WEND 

 
 REM ************ MAIL anpassen ************** 
  REM ************ MAIL anpassen ************** 
 dat$ = "MAIL"
 IF OPEN ("mail") THEN CLOSE FILE "mail"
 CALL DFile(2,"OFFICE\" + dat$ + _fpw$)
 FILE dat$
 CALL FldAdd("CodeMAvon","NUM;000000.",1)
 CALL FldAdd("gelesen","NUM;0.",1)
 CALL FldAdd("gelîscht","NUM;0.",1)
 CALL FldAdd("Antwort","TXT;4000 R",0)
 CALL FldAdd("Datum","DAT;0d.mm.yyyy",1)
 CALL FldAdd("DatumAntwort","DAT;0d.mm.yyyy",0)
 CALL FldAdd("ZeitAntwort","TIM;hh:mm",0)
 CALL FldAdd("DatumGelesen","DAT;0d.mm.yyyy",0)
 CALL FldAdd("ZeitGelesen","TIM;hh:mm",0)
 CALL FldAdd("DatumGelîscht","DAT;0d.mm.yyyy",0)
 CALL FldAdd("ZeitGelîscht","TIM;hh:mm",0)
 CALL FldAdd("Betreff","TXT;50",0)
 CALL FldAdd("CC","TXT;4000 R",0)
 CALL FldAdd("BCC","TXT;4000 R",0)
 CALL FldAdd("MailTO","TXT;250",0)
  CALL FldAdd("EMAILCC","TXT;4000 R",0)
 CALL FldAdd("EMAILBCC","TXT;4000 R",0)
 CALL FldAdd("EmpfÑnger","TXT;100",0)
 SAVE FILE "MAIL"
 INDEX CodeMail.dat$
 SELECT LAST 
 i% = codeMail.dat$
 INDEX Datum.dat$
 IF RECCOUNT (dat$) > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
   WHILE NOT EOF (dat$)
     i% = i% + 1
     codemail.dat$ = i%
     IF QWoNo = "" THEN 
       Workstation = 0
       QWoNo = "000000000000"
     END IF 
     codemaan% = codema.mail
     codemavon% = codemavon.mail
     SELECT FIRST FILE "supervis" INDEX codema.supervis
     SELECT KEY codemaan% FILE "supervis" INDEX codema.supervis
     EmpfÑnger.mail = name.supervis

     SELECT FIRST FILE "supervis" INDEX codema.supervis
     SELECT KEY codemavon% FILE "supervis" INDEX codema.supervis
     Absender.mail = name.supervis
     STORE FILE dat$
     SELECT NEXT LOCK 
     SET STATUS "Datensatz: " + STR$ (i%,"9999999") + " bearbeitet!"
     CALL Server("UPDSTATUS","Datensatz: " + STR$ (i%,"9999999") + " bearbeitet!")
   WEND 
 INDEX codemail.dat$
 SELECT LAST 
 i% = codemail.dat$
 j% = SER (dat$,1)
 WHILE j% < i%
     j% = SER (dat$,1)
 WEND 
 



 REM ************ ANREDE anpassen ************** 
 dat$ = "ANREDE"
 CALL DFile(2,"OFFICE\" + dat$ + _fpw$)
 FILE dat$
 CALL FldAdd("CodeKey","NUM;000000.",1)
 SAVE FILE dat$
 INDEX CodeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 INDEX Anrede.dat$
 IF RECCOUNT (dat$) > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 IF i% < 1 THEN 
   WHILE NOT EOF (dat$)
     i% = i% + 1
     codekey.dat$ = i%
     IF QWoNo = "" THEN 
       Workstation = 0
       QWoNo = "000000000000"
     END IF 
     STORE FILE dat$
     SELECT NEXT LOCK 
     SET STATUS "Datensatz: " + STR$ (i%,"9999999") + " bearbeitet!"
   WEND 
 END IF 
 INDEX codeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 j% = SER (dat$,1)
 WHILE j% < i%
     j% = SER (dat$,1)
 WEND 


 REM ************ ORT anpassen ************** 
 
 

 REM ************ CONNECT anpassen ************** 
 dat$ = "CONNECT"
 CALL DFile(2,"OFFICE\" + dat$ + _fpw$)
 FILE dat$
 CALL FldAdd("CodeKey","NUM;000000.",1)
 CALL FldAdd("CodeKGR","NUM;000000.",1)
 CALL FldAdd("KontaktGruppe","TXT;50",1)
 SAVE FILE dat$
 INDEX CodeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 INDEX CodeKU.dat$
 IF RECCOUNT (dat$) > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 IF i% < 1 THEN 
   WHILE NOT EOF (dat$)
     i% = i% + 1
     codekey.dat$ = i%
     IF QWoNo = "" THEN 
       Workstation = 0
       QWoNo = "000000000000"
     END IF 
     STORE FILE dat$
     SELECT NEXT LOCK 
     SET STATUS "Datensatz: " + STR$ (i%,"9999999") + " bearbeitet!"
   WEND 
 END IF 
 INDEX codeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 j% = SER (dat$,1)
 WHILE j% < i%
     j% = SER (dat$,1)
 WEND 
 



 REM ************ ANSTELL anpassen ************** 
 dat$ = "ANSTELL"
 CALL DFile(2,"OFFICE\" + dat$ + _fpw$)
 FILE dat$
 CALL FldAdd("CodeKey","NUM;000000.",1)
 SAVE FILE dat$
 INDEX CodeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 INDEX Anstellungsverh.dat$
 IF RECCOUNT (dat$) > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 IF i% < 1 THEN 
   WHILE NOT EOF (dat$)
     i% = i% + 1
     codekey.dat$ = i%
     IF QWoNo = "" THEN 
       Workstation = 0
       QWoNo = "000000000000"
     END IF 
     STORE FILE dat$
     SELECT NEXT LOCK 
     SET STATUS "Datensatz: " + STR$ (i%,"9999999") + " bearbeitet!"
   WEND 
 END IF 
 INDEX codeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 j% = SER (dat$,1)
 WHILE j% < i%
     j% = SER (dat$,1)
 WEND 
 
 
 
 REM ************ Beruf anpassen ************** 
 dat$ = "BERUF"
 CALL DFile(2,"OFFICE\" + dat$ + _fpw$)
 FILE dat$
 CALL FldAdd("CodeKey","NUM;000000.",1)
 SAVE FILE dat$
 INDEX CodeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 INDEX Beruf.dat$
 IF RECCOUNT (dat$) > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 IF i% < 1 THEN 
   WHILE NOT EOF (dat$)
     i% = i% + 1
     codekey.dat$ = i%
     IF QWoNo = "" THEN 
       Workstation = 0
       QWoNo = "000000000000"
     END IF 
     STORE FILE dat$
     SELECT NEXT LOCK 
     SET STATUS "Datensatz: " + STR$ (i%,"9999999") + " bearbeitet!"
   WEND 
 END IF 
 INDEX codeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 j% = SER (dat$,1)
 WHILE j% < i%
     j% = SER (dat$,1)
 WEND 
  
 REM ************ FIFORM anpassen ************** 
 dat$ = "FIFORM"
 CALL DFile(2,"OFFICE\" + dat$ + _fpw$)
 FILE dat$
 CALL FldAdd("CodeKey","NUM;000000.",1)
 SAVE FILE dat$
 INDEX CodeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 INDEX Firmenform.dat$
 IF RECCOUNT (dat$) > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 IF i% < 1 THEN 
   WHILE NOT EOF (dat$)
     i% = i% + 1
     codekey.dat$ = i%
     IF QWoNo = "" THEN 
       Workstation = 0
       QWoNo = "000000000000"
     END IF 
     STORE FILE dat$
     SELECT NEXT LOCK 
     SET STATUS "Datensatz: " + STR$ (i%,"9999999") + " bearbeitet!"
   WEND 
 END IF 
 INDEX codeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 j% = SER (dat$,1)
 WHILE j% < i%
     j% = SER (dat$,1)
 WEND 
  
 REM ************ Fstand anpassen ************** 
 dat$ = "FSTAND"
 CALL DFile(2,"OFFICE\" + dat$ + _fpw$)
 FILE dat$
 CALL FldAdd("CodeKey","NUM;000000.",1)
 SAVE FILE dat$
 INDEX CodeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 INDEX Familienstand.dat$
 IF RECCOUNT (dat$) > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 IF i% < 1 THEN 
   WHILE NOT EOF (dat$)
     i% = i% + 1
     codekey.dat$ = i%
     IF QWoNo = "" THEN 
       Workstation = 0
       QWoNo = "000000000000"
     END IF 
     STORE FILE dat$
     SELECT NEXT LOCK 
     SET STATUS "Datensatz: " + STR$ (i%,"9999999") + " bearbeitet!"
   WEND 
 END IF 
 INDEX codeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 j% = SER (dat$,1)
 WHILE j% < i%
     j% = SER (dat$,1)
 WEND 
 
 REM ************ HOBBYS anpassen ************** 
 dat$ = "HOBBYS"
 CALL DFile(2,"OFFICE\" + dat$ + _fpw$)
 FILE dat$
 CALL FldAdd("CodeKey","NUM;000000.",1)
 SAVE FILE dat$
 INDEX CodeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 INDEX HOBBYS.dat$
 IF RECCOUNT (dat$) > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 IF i% < 1 THEN 
   WHILE NOT EOF (dat$)
     i% = i% + 1
     codekey.dat$ = i%
     IF QWoNo = "" THEN 
       Workstation = 0
       QWoNo = "000000000000"
     END IF 
     STORE FILE dat$
     SELECT NEXT LOCK 
     SET STATUS "Datensatz: " + STR$ (i%,"9999999") + " bearbeitet!"
   WEND 
 END IF 
 INDEX codeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 j% = SER (dat$,1)
 WHILE j% < i%
     j% = SER (dat$,1)
 WEND 
  
 REM ************ LAND anpassen ************** 
 dat$ = "LAND"
 CALL DFile(2,"OFFICE\" + dat$ + _fpw$)
 FILE dat$
 CALL FldAdd("CodeKey","NUM;000000.",1)
 SAVE FILE dat$
 INDEX CodeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 INDEX LAND.dat$
 IF RECCOUNT (dat$) > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 IF i% < 1 THEN 
   WHILE NOT EOF (dat$)
     i% = i% + 1
     codekey.dat$ = i%
     IF QWoNo = "" THEN 
       Workstation = 0
       QWoNo = "000000000000"
     END IF 
     STORE FILE dat$
     SELECT NEXT LOCK 
     SET STATUS "Datensatz: " + STR$ (i%,"9999999") + " bearbeitet!"
   WEND 
 END IF 
 INDEX codeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 j% = SER (dat$,1)
 WHILE j% < i%
     j% = SER (dat$,1)
 WEND 
 
 REM ************ NATIONAL anpassen ************** 
 dat$ = "NATIONAL"
 CALL DFile(2,"OFFICE\" + dat$ + _fpw$)
 FILE dat$
 CALL FldAdd("CodeKey","NUM;000000.",1)
 SAVE FILE dat$
 INDEX CodeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 INDEX NationalitÑt.dat$
 IF RECCOUNT (dat$) > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 IF i% < 1 THEN 
   WHILE NOT EOF (dat$)
     i% = i% + 1
     codekey.dat$ = i%
     IF QWoNo = "" THEN 
       Workstation = 0
       QWoNo = "000000000000"
     END IF 
     STORE FILE dat$
     SELECT NEXT LOCK 
     SET STATUS "Datensatz: " + STR$ (i%,"9999999") + " bearbeitet!"
   WEND 
 END IF 
 INDEX codeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 j% = SER (dat$,1)
 WHILE j% < i%
     j% = SER (dat$,1)
 WEND 
 

 REM ************ ORT anpassen ************** 
 dat$ = "ORT"
 CALL DFile(2,"OFFICE\" + dat$ + _fpw$)
 FILE dat$
 CALL FldAdd("CodeKey","NUM;000000.",1)
 CALL FldAdd("PLZ","TXT;12 U",1)
 CALL FldAdd("PLZOrt","TXT;62",1)
 CALL FldAdd("OrtPLZ","TXT;62",1)
 SAVE FILE dat$
 INDEX CodeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 INDEX Ort.dat$
 IF RECCOUNT (dat$) > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 IF i% < 1 THEN 
   WHILE NOT EOF (dat$)
     i% = i% + 1
     codekey.dat$ = i%
     IF QWoNo = "" THEN 
       Workstation = 0
       QWoNo = "000000000000"
     END IF 
     STORE FILE dat$
     SELECT NEXT LOCK 
     SET STATUS "Datensatz: " + STR$ (i%,"9999999") + " bearbeitet!"
   WEND 
 END IF 
 INDEX codeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 j% = SER (dat$,1)
 WHILE j% < i%
     j% = SER (dat$,1)
 WEND 
 
 REM ************ STAAT anpassen ************** 
 dat$ = "STAAT"
 CALL DFile(2,"OFFICE\" + dat$ + _fpw$)
 FILE dat$
 CALL FldAdd("CodeKey","NUM;000000.",1)
 SAVE FILE dat$
 INDEX CodeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 INDEX Staatsangehîrig.dat$
 IF RECCOUNT (dat$) > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 IF i% < 1 THEN 
   WHILE NOT EOF (dat$)
     i% = i% + 1
     codekey.dat$ = i%
     IF QWoNo = "" THEN 
       Workstation = 0
       QWoNo = "000000000000"
     END IF 
     STORE FILE dat$
     SELECT NEXT LOCK 
     SET STATUS "Datensatz: " + STR$ (i%,"9999999") + " bearbeitet!"
   WEND 
 END IF 
 INDEX codeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 j% = SER (dat$,1)
 WHILE j% < i%
     j% = SER (dat$,1)
 WEND 
 

 REM ************ TITEL anpassen ************** 
 dat$ = "TITEL"
 CALL DFile(2,"OFFICE\" + dat$ + _fpw$)
 FILE dat$
 CALL FldAdd("CodeKey","NUM;000000.",1)
 SAVE FILE dat$
 INDEX CodeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 INDEX TITEL.dat$
 IF RECCOUNT (dat$) > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 IF i% < 1 THEN 
   WHILE NOT EOF (dat$)
     i% = i% + 1
     codekey.dat$ = i%
     IF QWoNo = "" THEN 
       Workstation = 0
       QWoNo = "000000000000"
     END IF 
     STORE FILE dat$
     SELECT NEXT LOCK 
     SET STATUS "Datensatz: " + STR$ (i%,"9999999") + " bearbeitet!"
   WEND 
 END IF 
 INDEX codeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 j% = SER (dat$,1)
 WHILE j% < i%
     j% = SER (dat$,1)
 WEND 
 
 REM ************ KEYWORDS anpassen ************** 
 dat$ = "KEYWORDS"
 CALL DFile(2,"OFFICE\" + dat$ + _fpw$)
 FILE dat$
 CALL FldAdd("CodeKey","NUM;000000.",1)
 SAVE FILE dat$
 INDEX CodeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 INDEX KEYWORD.dat$
 IF RECCOUNT (dat$) > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 IF i% < 1 THEN 
   WHILE NOT EOF (dat$)
     i% = i% + 1
     codekey.dat$ = i%
     IF QWoNo = "" THEN 
       Workstation = 0
       QWoNo = "000000000000"
     END IF 
     STORE FILE dat$
     SELECT NEXT LOCK 
     SET STATUS "Datensatz: " + STR$ (i%,"9999999") + " bearbeitet!"
   WEND 
 END IF 
 INDEX codeKey.dat$
 SELECT LAST 
 i% = codeKey.dat$
 j% = SER (dat$,1)
 WHILE j% < i%
     j% = SER (dat$,1)
 WEND 
 

 REM GOTO ProvStart301299
 REM GOTO FactStart270200
 
 IF _projekt$ LIKE "FACTURA" OR _projekt$ LIKE "WAWI" THEN 
 
   REM **************************
   REM ** Anpassung SERNUM.SBF **
   REM **************************
 
   REM CALL DFile(2,"OFFICE\sernum" + _fpw$)
   REM FILE "SERNUM"
  
   REM CALL FldAdd("lastartintern","NUM;99999999.99",0)
   REM SAVE FILE "sernum"
 
 END IF 
 REM ***************************
 REM ** Anpassung Dokument.SBF **
 REM ***************************
 
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 FILE "dokument"
 CALL FldAdd("Dokument","TXT;160",1)
 CALL FldAdd("CodePR","NUM;000000.",1)
 CALL FldAdd("Erstellt_am","DAT;0d.mm.yyyy",1)
 CALL FldAdd("letzte_Bearbeit","DAT;0d.mm.yyyy",1)

 CALL FldAdd("zero","NUM;000000.",1)
 CALL FldAdd("Projekt","TXT;120",1)
 CALL FldAdd("DokPass","TXT;30",0)
 CALL FldAdd("Notiz","TXT;4000 R",0)
 CALL FldAdd("novi1","NMI;0.",0)
 CALL FldAdd("DatumNovi","DAT;0d.mm.yyyy",0)
 CALL FldAdd("CodeErs","NUM;000000.",1)
 CALL FldAdd("Creator","TXT;50",0)
 CALL FldAdd("transf","NUM;0.",1)
 CALL FldAdd("ELOTrans","NUM;0.",1)
 CALL FldAdd("ELODatum","DAT;0d.mm.yyyy",0)
 CALL FldAdd("ELOMA","NUM;000000.",0)
 CALL FldAdd("ELOMAName","TXT;50",0)
 CALL FldAdd("FreeFormular","NUM;0.",0)
 CALL FldAdd("DokNotiz","TXT;4000 R",0)
 CALL FldAdd("DateiOld","TXT;128 U",0)
 CALL FldAdd("DateiRes","TXT;128 U",0)
 CALL FldAdd("QuickCodekuGru","TXT;50 U",1)
 CALL FldAdd("FreeFormular","NUM;0.",1)
 CALL FldAdd("CodeMS","NUM;000000.",1)
 CALL FldAdd("CodeAQ","NUM;000000.",1)
 CALL FldAdd("CodeREIN","NUM;000000.",1)
 CALL FldAdd("CodeRAUS","NUM;000000.",1)
 REM CALL FldAdd("CodePR","NUM;000000.",1)
 SAVE FILE "dokument"
 UPDATE zero.dokument = 0:QuickCodekuGru.dokument = STR$ (codeku.dokument,"000000") + Gruppe.dokument
 END UPDATE 
 
 FILE "Dokument"
 CALL DokAnpName("dokument")

 

 REM ***************************
 REM ** Anpassung WEMAIL.SBF **
 REM ***************************
 
 
 CALL DFile(2,"OFFICE\WEMAIL" + _fpw$)
 FILE "WEMAIL"
 CALL FldAdd("TimeStamp","NUM;0000000000.",1)
 SAVE FILE "WEMAIL"
 
 

 REM ***************************
 REM ** Anpassung AKQUISE.SBF **
 REM ***************************
 
 CALL DFile(2,"OFFICE\AKTIONEN" + _fpw$)

 CALL DFile(2,"OFFICE\AKQUISEB" + _fpw$)
 FILE "AKQUISEB"
 MOUSE OFF 
 WHILE SER ("akquiseb",1) < 500000
 WEND 

 CALL DFile(2,"OFFICE\AKQUISE" + _fpw$)
 FILE "AKQUISE"
 CALL FldAdd("Datum","DAT;0d.mm.yyyy",1)
 CALL FldAdd("ErDatum","DAT;0d.mm.yyyy",0)
 CALL FldAdd("ErZeit","TIM;hh:mm",0)
 CALL FldAdd("Termin","DAT;0d.mm.yyyy",1)
 CALL FldAdd("Bearbeiter","TXT;50",1)
 CALL FldAdd("Nachname","TXT;100",1)
 CALL FldAdd("erledigt_Termin","TXT;1",1)
 CALL FldAdd("Sprachnotiz","TXT;1",0)
 CALL FldAdd("Wertung","NMI;00.",1)
 CALL FldAdd("Notiz","TXT;4000 R",1)
 CALL FldAdd("Ergebnis","TXT;4000 R",0)
 CALL FldAdd("QuickCodeMA","TXT;14",1)
 CALL FldAdd("QuickCodeMAZ","TXT;18",1)
 CALL FldAdd("QuickCodeKU","TXT;14",1)
 CALL FldAdd("QuickCodeAK","TXT;14",1)
 CALL FldAdd("QuickAKMA","TXT;20",1)
 CALL FldAdd("CodeAKMA","TXT;12",1)
 CALL FldAdd("QuickKUDat","TXT;15",1)
 CALL FldAdd("QuickMADat","TXT;15",1)
 CALL FldAdd("QuickAKDat","TXT;15",1)
 CALL FldAdd("QuickAKMADat","TXT;21",1)
 CALL FldAdd("MemberOf","TXT;120",1)
 CALL FldAdd("QuickKuDatDiff","NUM;000000000000.",1)
 CALL FldAdd("QuickPRDatDiff","NUM;000000000000.",1)
 CALL FldAdd("CodePR","NUM;000000.",1)
 CALL FldAdd("Projekt","TXT;120",1)
 CALL FldAdd("QuickAKMATer","TXT;20",1)
 CALL FldAdd("QuickAKTer","TXT;14",1)
 CALL FldAdd("QuickKUTer","TXT;14",1)
 CALL FldAdd("QuickMATer","TXT;14",1)
 
 CALL FldAdd("CodeMS","NUM;000000.",1)
 CALL FldAdd("DME","TXT;10",0)
 CALL FldAdd("EMAILTO","TXT;400",0)
 CALL FldAdd("EMAILCC","TXT;4000 R",0)
 CALL FldAdd("EMAILBCC","TXT;4000 R",0)
 CALL FldAdd("EMAILBETREFF","TXT;400 R",0)
 CALL FldAdd("EMAILTEXT","TXT;4000 R",0)
 CALL FldAdd("EMAILRAUS","TXT;1",0)
 CALL FldAdd("EMAILATT1","TXT;255",0)
 CALL FldAdd("EMAILATT2","TXT;255",0)
 CALL FldAdd("EMAILATT3","TXT;255",0)
 CALL FldAdd("EMAILATT4","TXT;255",0)
 CALL FldAdd("EMAILATT5","TXT;255",0)
 CALL FldAdd("EMAILSendDat","DAT;0d.mm.yyyy",0)
 CALL FldAdd("EMAILSendZeit","TIM;hh:mm",0)
 CALL FldAdd("EMAILVorDat","DAT;0d.mm.yyyy",0)
 CALL FldAdd("EMAILVorZeit","TIM;hh:mm",0)
 CALL FldAdd("EMAILAutomat","TXT;1",0)
 CALL FldAdd("Dauer","NUM;99.99",0)
 CALL FldAdd("EATT1","TXT;255",0)
 CALL FldAdd("EATT2","TXT;255",0)
 CALL FldAdd("EATT3","TXT;255",0)
 CALL FldAdd("EATT4","TXT;255",0)
 CALL FldAdd("EATT5","TXT;255",0)
 CALL FldAdd("EMAILTEXT1","TXT;4000 R",0)
 CALL FldAdd("Aktion","TXT;60",1)
 CALL FldAdd("AQUIMASK","TXT;8 U",1)
 CALL FldAdd("Projektchef","TXT;400 R",0)
 CALL FldAdd("Bau","TXT;400 R",0)
 CALL FldAdd("PHîheLage","TXT;400 R",0)
 CALL FldAdd("Bodenart","TXT;400 R",0)
 CALL FldAdd("AGVertrete","TXT;100 R",0)
 CALL FldAdd("AGVPos","TXT;100 R",0)
 CALL FldAdd("AGVKontakt","TXT;100 R",0)
 CALL FldAdd("Witterung","TXT;50",0)
 CALL FldAdd("Temperatur","TXT;10",0)
 CALL FldAdd("Regen","TXT;1",0)
 CALL FldAdd("Frost","TXT;1",0)
 CALL FldAdd("Wind","TXT;1",0)
 CALL FldAdd("Schnee","TXT;1",0)
 CALL FldAdd("BeschÑftigte","TXT;100 R",0)
 CALL FldAdd("StckDPH","TXT;10",0)
 CALL FldAdd("mDPH","TXT;10",0)
 CALL FldAdd("StckDPL","TXT;10",0)
 CALL FldAdd("mDPL","TXT;10",0)
 CALL FldAdd("StckLFP","TXT;10",0)
 CALL FldAdd("StckPDV","TXT;10",0)
 CALL FldAdd("StckDensi","TXT;10",0)
 CALL FldAdd("StckAsust","TXT;10",0)
 CALL FldAdd("Termine","TXT;400 R",0)
 CALL FldAdd("Unterschrift","TXT;400 R",0)
 CALL FldAdd("Bohransatz","TXT;400 R",0)
 CALL FldAdd("Bezugspunkt","TXT;400 R",0)
 CALL FldAdd("StckRKS","TXT;10",0)
 CALL FldAdd("mRKS","TXT;10",0)
 CALL FldAdd("GW","TXT;10",0)
 CALL FldAdd("Nivellement","TXT;10",0)
 CALL FldAdd("Foto","TXT;10",0)
 CALL FldAdd("Pegel","TXT;10",0)
 CALL FldAdd("Verantwortlich","TXT;400 R",0)
 CALL FldAdd("DatProbEnt","TXT;400 R",0)
 CALL FldAdd("ProbEing","TXT;400 R",0)
 CALL FldAdd("Labor1","TXT;400 R",0)
 CALL FldAdd("Labor2","TXT;400 R",0)
 CALL FldAdd("Labor3","TXT;400 R",0)
 CALL FldAdd("Labor4","TXT;400 R",0)
 CALL FldAdd("Labor5","TXT;400 R",0)
 CALL FldAdd("ArtProbe","TXT;400 R",0)
 CALL FldAdd("ZweckProbe","TXT;400 R",0)
 CALL FldAdd("Protokoll1","TXT;400 R",0)
 CALL FldAdd("Protokoll2","TXT;400 R",0)
 CALL FldAdd("Protokoll3","TXT;400 R",0)
 CALL FldAdd("Protokoll4","TXT;400 R",0)
 CALL FldAdd("Protokoll5","TXT;400 R",0)
 CALL FldAdd("SProject","TXT;30 U",1)
 CALL FldAdd("SCategory","TXT;30",1)
 CALL FldAdd("SStatus","TXT;30",1)
 CALL FldAdd("Stest","TXT;30",1)
 CALL FldAdd("SLoesung","TXT;30",1)
 CALL FldAdd("SKompon","TXT;30",1)
 CALL FldAdd("SVersion","TXT;30",0)
 CALL FldAdd("SBetreff","TXT;200",0)
 CALL FldAdd("LastBug","NUM;,999999.",1)
 CALL FldAdd("zero","NUM;000000.",1)
 CALL MarkMain("CodeAQ")
 CALL Server("UPDFIELD","Bitte warten")
 CALL Server("UPDSTATUS","Erzeugung Feldinhalt fÅr QuickCodes")
 SAVE FILE "akquise"
 CALL DFile(2,"OFFICE\TVORLAGE" + _fpw$)
 FILE "Akquise"
 INDEX codeaq.akquise
 IF RECCOUNT ("Akquise") > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 i% = 0
 FILE "aktionen"
 INDEX codeak.aktionen
 FILE "AKQUISE"
 INDEX codeaq.akquise
 IF RECCOUNT ("Akquise") > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 j% = RECCOUNT ("AKQUISE")
 WHILE NOT EOF ("Akquise")
   i% = i% + 1
   IF aktion.akquise = "" THEN 
     SELECT KEY codeak.akquise FILE "aktionen" INDEX codeak.aktionen
     aktion.akquise = bezeichnung.aktionen
     IF erledigt_Termin.akquise = "" THEN erledigt_Termin.akquise = "n"
     STORE FILE "akquise"
   END IF 
   SET STATUS STR$ (i%,",99999999") + "/" + STR$ (j%,",99999999")
   SELECT NEXT LOCK FILE "akquise"
 WEND 


 FILE "AKQUISE"
 INDEX codeaq.akquise
 IF RECCOUNT ("Akquise") > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 i% = 0
 j% = RECCOUNT ("AKQUISE")
 WHILE NOT EOF ("Akquise")
   i% = i% + 1
   IF aquimask.akquise = "" THEN aquimask.akquise = "AKQUIPRJ"
   IF regen.akquise = "" THEN regen.akquise = "n"
   IF frost.akquise = "" THEN frost.akquise = "n"
   IF wind.akquise = "" THEN wind.akquise = "n"
   IF schnee.akquise = "" THEN schnee.akquise = "n"
   zero.akquise = 0
   STORE FILE "akquise"
   SET STATUS STR$ (i%,",99999999") + "/" + STR$ (j%,",99999999")
   SELECT NEXT LOCK FILE "akquise"
 WEND 

 FILE "AKQUISE"
 INDEX codeaq.akquise
 IF RECCOUNT ("Akquise") > 0 THEN 
   SELECT FIRST 
 ELSE 
   SELECT LAST 
 END IF 
 CALL DFile(3,"MASTER" + _fpw$)
 i% = 0
 j% = RECCOUNT ("AKQUISE")
 WHILE NOT EOF ("Akquise")
   i% = i% + 1
   IF codedok.akquise > 0 AND EXISTS (codedok.akquise,codedok.dokument) THEN 
     codeaq% = codeaq.akquise
     SELECT FIRST FILE "dokument" INDEX codedok.dokument
     SELECT KEY codedok.akquise LOCK FILE "dokument" INDEX codedok.dokument
     codeaq.dokument = codeaq%
     STORE FILE "dokument"
   END IF 
   IF codems.akquise > 0 AND EXISTS (codems.akquise,codems.master) THEN 
     SELECT FIRST FILE "master" INDEX codems.master
     SELECT KEY codems.akquise FILE "master" INDEX codems.master
     IF codedok.master > 0 AND EXISTS (codedok.master,codedok.dokument) THEN 
       SELECT FIRST FILE "dokument" INDEX codedok.dokument
       SELECT KEY codedok.master LOCK FILE "dokument" INDEX codedok.dokument
       IF codeaq.dokument > 0 AND codeaq.dokument <> codeaq.akquise THEN 
         BLANK DUPLICATE FILE "dokument"
         codedok.dokument = SER ("dokument",1)
         codeaq.dokument = codeaq.akquise
         codems.dokument = 0
       ELSE 
         codeaq.dokument = codeaq.akquise
         codems.dokument = codems.master
       END IF 
       STORE FILE "dokument"
     END IF 
   END IF 
   SET STATUS "AKQUISE: " + STR$ (i%,",99999999") + " / " + STR$ (j%,",99999999")
   SELECT NEXT FILE "akquise"
 WEND 
 

 FILE "AKQUISEB"
 INDEX codeaq.akquiseb
 IF RECCOUNT ("Akquiseb") > 0 THEN 
   SELECT FIRST 
 ELSE 
   SELECT LAST 
 END IF 
 i% = 0
 j% = RECCOUNT ("AKQUISEb")
 WHILE NOT EOF ("Akquiseb")
   i% = i% + 1
   IF codedok.akquiseb > 0 AND EXISTS (codedok.akquiseb,codedok.dokument) THEN 
     codeaq% = codeaq.akquiseb
     SELECT FIRST FILE "dokument" INDEX codedok.dokument
     SELECT KEY codedok.akquiseb LOCK FILE "dokument" INDEX codedok.dokument
     codeaq.dokument = codeaq%
     STORE FILE "dokument"
   END IF 
   SET STATUS "AKQUISEB: " + STR$ (i%,",99999999") + "/" + STR$ (j%,",99999999")
   SELECT NEXT FILE "akquiseb"
 WEND 
 


 FILE "Akquise"
 INDEX codeaq.akquise
 IF RECCOUNT ("Akquise") > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 i% = 0
 WHILE NOT EOF ("Akquise") AND GIndneu% = - 1
   i% = i% + 1
   erl$ = "j"
   IF Termin.akquise < TODAY THEN 
     REM 281299 erledigt_Termin.akquise = "j"
   END IF 
   IF erledigt_Termin.AKQUISE <> "j" THEN 
     erledigt_Termin.AKQUISE = "n"
     erl$ = "n"
   END IF 
     IF codema.akquise < 1 THEN 
       IF bearbeiter.akquise <> "" THEN 
         IF EXISTS (bearbeiter.akquise,nachname.supervis) THEN 
           SELECT KEY bearbeiter.akquise FILE "Supervis" INDEX nachname.supervis
           codema.akquise = codema.supervis
         END IF 
       END IF 
     END IF 
   SET STATUS STR$ (i%,"999999") + " Termine angepa·t"
   CALL Server("UPDSTATUS", STR$ (i%,"999999") + " Termine angepa·t")
     QuickCodeMA.akquise = DATE$ (termin.akquise,"0dmmyyyy") + STR$ (CodeMA.akquise,"000000")
     QuickCodeMAZ.akquise = DATE$ (termin.akquise,"0dmmyyyy") + STR$ (CodeMA.akquise,"000000") + TIME$ (Uhrzeit.akquise,"hhmm")
     QuickCodeKU.akquise = DATE$ (termin.akquise,"0dmmyyyy") + STR$ (CodeKU.akquise,"000000")
     QuickCodeAK.akquise = DATE$ (termin.akquise,"0dmmyyyy") + STR$ (CodeAK.akquise,"000000")
     QuickAKMA.akquise = DATE$ (termin.akquise,"0dmmyyyy") + STR$ (codeak.akquise,"000000") + STR$ (CodeMA.akquise,"000000")
     CodeAKMA.akquise = STR$ (codeak.akquise,"000000") + STR$ (CodeMA.akquise,"000000")
     QuickKUDat.akquise = STR$ (CodeKU.akquise,"000000") + UCASE$ (erl$) + DATE$ (termin.akquise,"yyyymm0d")
     QuickMADat.akquise = STR$ (CodeMA.akquise,"000000") + UCASE$ (erl$) + DATE$ (termin.akquise,"yyyymm0d")
     QuickAKDat.akquise = STR$ (CodeAK.akquise,"000000") + UCASE$ (erl$) + DATE$ (termin.akquise,"yyyymm0d")
     QuickAKMADat.akquise = STR$ (codeak.akquise,"000000") + STR$ (CodeMA.akquise,"000000") + UCASE$ (erl$) + DATE$ (termin.akquise,"yyyymm0d")
     QuickKuDatDiff.akquise = codeku.akquise * 1000000 + (1000000 - DAYS (termin.akquise))
     IF codepr.akquise > 0 THEN 
       QuickPRDatDiff.akquise = codepr.akquise * 1000000 + (1000000 - DAYS (termin.akquise))
     ELSE 
       QuickPRDatDiff.akquise = 0
     END IF 
     QuickAKTer.akquise = STR$ (CodeAK.akquise,"000000") + DATE$ (termin.akquise,"yyyymm0d")
     QuickMATer.akquise = STR$ (CodeMA.akquise,"000000") + DATE$ (termin.akquise,"yyyymm0d")
     QuickKUTer.akquise = STR$ (CodeKU.akquise,"000000") + DATE$ (termin.akquise,"yyyymm0d")
     QuickAKMATer.akquise = STR$ (codeak.akquise,"000000") + STR$ (CodeMA.akquise,"000000") + DATE$ (termin.akquise,"yyyymm0d")
     IF QWoNo = "" THEN 
       Workstation = 0
       QWoNo = "000000000000"
     END IF 
    STORE FILE "Akquise"
    SELECT NEXT LOCK 
  WEND 
  SET STATUS ""
 
 SAVE FILE "akquise"
 INDEX CodeAQ
 SELECT LAST 
 WHILE CodeAQ > SER ("AKQUISE",1)
 WEND 
  



   REM Anpassung Datei Produkt.SBF
   REM ================================================
 
   CALL DFile(2,"OFFICE\produkt" + _fpw$)
   FILE "produkt"
   CALL FldAdd("Produktname","TXT;100",1)
   CALL FldAdd("Gruppe","TXT;100",1)
   CALL FldAdd("novi1","NMI;0.",0)
   CALL FldAdd("CodePrGr","NUM;000000",1)
   SAVE FILE "produkt"
 

   REM Anpassung Datei KProdukt.SBF
   REM ================================================
 
   CALL DFile(2,"OFFICE\Kprodukt" + _fpw$)
   FILE "Kprodukt"
   CALL FldAdd("Produktname","TXT;100",1)
   CALL FldAdd("Gruppe","TXT;100",1)
   CALL FldAdd("VerlBis","DAT;0d.mm.yyyy",0)
   SAVE FILE "Kprodukt"


 REM ***************************
 REM ** Anpassung TVORLAGE.SBF **
 REM ***************************
 
 
 REM 301299
 REM GOTO ProvStart301299
 CALL DFile(2,"OFFICE\AKQUISE" + _fpw$)
 CALL DFile(2,"OFFICE\TVORLAGE" + _fpw$)
 REM GOTO AAAA0
 FILE "TVORLAGE"
 CALL FldAdd("Nachname","TXT;100",1)
 CALL FldAdd("DME","TXT;10",0)
 CALL FldAdd("EMAILRAUS","TXT;1",0)
 CALL FldAdd("EMAILVorDat","DAT;0d.mm.yyyy",0)
 CALL FldAdd("EMAILVorZeit","TIM;hh:mm",0)
 SAVE FILE "TVORLAGE"
 FILE "TVORLAGE"
 INDEX codetv.tvorlage
 IF RECCOUNT ("TVORLAGE") > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 codeaqold% = 0
 codeaq% = - 1
 WHILE NOT EOF ("TVORLAGE")
   codeaq% = codeaq.TVORLAGE
   IF NOT EXISTS (codeaq%,codeaq.akquise) THEN 
     REMOVE FROM FILE "TVORLAGE" WHERE codeaq.tvorlage = codeaq%
     IF RECCOUNT ("TVORLAGE") > 0 THEN 
       SELECT FIRST LOCK FILE "TVORLAGE"
     ELSE 
       SELECT LAST 
     END IF 
 
     codeaqold% = - 1
     codeaq% = 0
   ELSE 
     IF codeaq% = codeaqold% THEN 
       SELECT REMOVE FILE "TVORLAGE"
       SELECT FIRST LOCK FILE "TVORLAGE"
       codeaqold% = - 1
     ELSE 
       IF codeaq% > 0 AND EXISTS (codeaq%,codeaq.akquise) THEN 
         codeaqold% = codeaq%
         SELECT KEY codeaq% FILE "AKquise" INDEX codeaq.akquise
         IF erledigt_termin.akquise LIKE "j" OR erdatum.akquise < 1 THEN 
           codeaqold% = - 1
           SELECT REMOVE FILE "TVORLAGE"
           SELECT FIRST LOCK FILE "TVORLAGE"
         ELSE 
           emailraus.tvorlage = emailraus.akquise
           DTVorlage.TVORLAGE = STR$ (CodeMA.tvorlage,"000000") + DATE$ (Datum.tvorlage,"yyyymm0d") + TIME$ (Zeit.tvorlage,"hhmm")
           STORE FILE "TVORLAGE"
           SELECT NEXT LOCK FILE "TVORLAGE"
         END IF 
       END IF 
       
     END IF 
   END IF 
 WEND 
 
 REM ****************************
 REM ** Anpassung AKTIONEN.SBF **
 REM ****************************
 
 CALL DFile(2,"OFFICE\AKTIONEN" + _fpw$)
 FILE "AKTIONEN"
 CALL FldAdd("MemberOf","TXT;120",1)
 CALL FldAdd("noAnzeige","TXT;1",0)
 CALL MarkMain("CodeAK")
 SAVE FILE "AKTIONEN"
 
 REM -- Erzeugung der MemberOf-Felder
 
 SELECT FIRST FILE "AKTIONEN"
 IF MemberOf.AKTIONEN = "" THEN 
   CALL Server("UPDFILE","AKTIONEN")
   CALL Server("UPDFIELD","MemberOf")
   CALL Server("UPDSTATUS","Erzeugung Feldinhalt")
   UPDATE MemberOf.AKTIONEN = STR$ (CodeAK.AKTIONEN,"000000") WHERE MemberOf.AKTIONEN = ""
   END UPDATE 
   CALL Server("UPDFILE","AKQUISE")
   CALL AQFileUpdate()
 END IF 
 
 REM -- StandardeintrÑge fÅr AKTIONEN erzeugen
 
 FILE "aktionen"
 INDEX codeak.aktionen
 REM SELECT KEY 999991 LOCK INDEX CodeAk.aktionen
 testeak% = 999990
 IF NOT EXISTS (testeak%,codeak.AKTIONEN) THEN 
   CALL Server("UPDFILE","AKTIONEN")
   CALL Server("UPDFIELD","")
   CALL Server("UPDSTATUS","Erzeugung der StandardeintrÑge fÅr AKTIONEN")
   BLANK 
   Codeak.aktionen = 999990
   bezeichnung.aktionen = "<Anfrage>"
   IF MemberOf.AKTIONEN = "" THEN MemberOf.AKTIONEN = STR$ (CodeAK.AKTIONEN,"000000")
   CALL QuickStore("AKTIONEN")
 END IF 
 testeak% = 999991
 IF NOT EXISTS (testeak%,codeak.AKTIONEN) THEN 
   CALL Server("UPDFILE","AKTIONEN")
   CALL Server("UPDFIELD","")
   CALL Server("UPDSTATUS","Erzeugung der StandardeintrÑge fÅr AKTIONEN")
   BLANK 
   Codeak.aktionen = 999991
   bezeichnung.aktionen = "<Angebote>"
   IF MemberOf.AKTIONEN = "" THEN MemberOf.AKTIONEN = STR$ (CodeAK.AKTIONEN,"000000")
   CALL QuickStore("AKTIONEN")
 END IF 
 testeak% = 999992
 IF NOT EXISTS (testeak%,codeak.AKTIONEN) THEN 
   BLANK 
   CodeAK.aktionen = 999992
   bezeichnung.aktionen = "<Rechnungen>"
     IF QWoNo = "" THEN 
       Workstation = 0
       QWoNo = "000000000000"
     END IF 
   CALL QuickStore("AKTIONEN")
 END IF 
 testeak% = 999993
 IF NOT EXISTS (testeak%,codeak.AKTIONEN) THEN 
   BLANK 
   CodeAK.aktionen = 999993
   bezeichnung.aktionen = "<Lieferscheine>"
   CALL QuickStore("AKTIONEN")
 END IF 
 testeak% = 999994
 IF NOT EXISTS (testeak%,codeak.AKTIONEN) THEN 
   BLANK 
   CodeAK.aktionen = 999994
   bezeichnung.aktionen = "<AuftrÑge>"
   CALL QuickStore("AKTIONEN")
 END IF 
 testeak% = 999995
 IF NOT EXISTS (testeak%,codeak.AKTIONEN) THEN 
   BLANK 
   CodeAK.aktionen = 999995
   bezeichnung.aktionen = "<Bestellungen>"
   CALL QuickStore("AKTIONEN")
 END IF 
 testeak% = 999997
 IF NOT EXISTS (testeak%,codeak.AKTIONEN) THEN 
   BLANK 
   CodeAK.aktionen = 999997
   bezeichnung.aktionen = "<Gutschriften>"
   CALL QuickStore("AKTIONEN")
 END IF 
 testeak% = 999998
 IF NOT EXISTS (testeak%,codeak.AKTIONEN) THEN 
   BLANK 
   CodeAK.aktionen = 999998
   bezeichnung.aktionen = "<Mahnungen>"
   CALL QuickStore("AKTIONEN")
 END IF 
 SELECT KEY 999991 LOCK FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
 SELECT PREVIOUS 
 tst% = CodeAK
 REM WHILE tst% > SER ("AKTIONEN",1)
 REM WEND 
 
 
 REM ****************************
 REM ** Anpassung DOKUMENT.SBF **
 REM ****************************
  
 CALL DFile(2,"ACCODE" + _fpw$)
 FILE "ACCODE"
 CALL MarkMain("CodePR")
 SAVE FILE "ACCODE"
 
 
 REM ****************************
 REM ** Anpassung ACCESS.SBF **
 REM ****************************
 
 CALL DFile(2,"ACCESS" + _fpw$)
 FILE "ACCESS"
 CALL MarkMain("CodePR")
 SAVE FILE "ACCESS"
  
 
 REM ****************************
 REM ** Anpassung EMAIL.SBF    **
 REM ****************************
 CALL DFile(2,"OFFICE\email" + _fpw$)
 FILE "email"
 CALL FldAdd("InternetupdJN","TXT;1",0)
 CALL FldAdd("EMAILText1","TXT;4000 R",0)
 SAVE FILE "email"

 REM ****************************
 REM ** Anpassung Telefon.SBF  **
 REM **************************** 

 CALL DFile(2,"OFFICE\Telefon" + _fpw$)
 FILE "Telefon"
 CALL FldAdd("FonOderFax","TXT;1",0)
 CALL FldAdd("Nummer","TXT;200",1)
 CALL FldAdd("Art","TXT;200",1)
 CALL FldAdd("QNummer","TXT;220",1)
 CALL FldAdd("QArt","TXT;220",1)
 CALL FldAdd("KART1","TXT;10",1)
 CALL FldAdd("KART2","TXT;10",1)
 SAVE FILE "Telefon"
 FILE "Telefon"
 INDEX nummer.telefon
 IF RECCOUNT ("Telefon") > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 j% = 0
 z% = RECCOUNT ("telefon")
 MOUSE OFF 
 WHILE NOT EOF ("Telefon") AND GIndneu% = - 1
   j% = j% + 1
   SET STATUS LTRIM$ ( STR$ (j%,",99999999")) + " Telefonnummern angepa·t  von " + LTRIM$ ( STR$ (z%,",99999999"))
   Qart.telefon = VSNRPack$(art.telefon)
   Qnummer.telefon = VSNRPack$(nummer.telefon)
   IF kart1.telefon = "" THEN 
     IF art.telefon LIKE "fon*" OR art.telefon LIKE "*fon*" THEN kart1.telefon = "FON"
     IF art.telefon LIKE "www*" OR art.telefon LIKE "*www*" THEN kart1.telefon = "WWW"
     IF art.telefon LIKE "Fax*" OR art.telefon LIKE "*Fax*" OR fonoderFax.telefon LIKE "j" THEN kart1.telefon = "FAX"
     IF art.telefon LIKE "email*" OR art.telefon LIKE "*email*" OR nummer.telefon LIKE "*@*" OR nummer.telefon LIKE "@*" THEN kart1.telefon = "EMAIL"
     IF art.telefon LIKE "Funk*" OR art.telefon LIKE "*Funk*" OR art.telefon LIKE "Handy*" OR art.telefon LIKE "*Handy*" OR art.telefon LIKE "Mobil*" OR art.telefon LIKE "*Mobil*" THEN kart1.telefon = "MOBIL"
   END IF 
   IF kart1.telefon = "" THEN kart1.telefon = "k.A."
   IF kart2.telefon = "" THEN kart2.telefon = "k.A."
   STORE FILE "TELEFON"
   SELECT NEXT LOCK 
 WEND 
 CALL DFile(2,"OFFICE\Keywords" + _fpw$)
 FILE "Keywords"
 REMOVE FROM FILE "Keywords" WHERE LTRIM$ (Keyword) = ""
 SAVE FILE "Keywords"
 CALL DFile(2,"OFFICE\ADRTEMP" + _fpw$)
 FILE "ADRTEMP"
 CALL FldAdd("Titel","TXT;30",0)
 SAVE FILE "adrtemp"
 
 CALL DFile(2,"OFFICE\FAX" + _fpw$)
 FILE "FAX"
 CALL FldAdd("FAXNummer","TXT;200",0)
 SAVE FILE "FAX"
 
AAAA0: 
 CALL DFile(2,"OFFICE\ADRESSEN" + _fpw$)
 FILE "ADRESSEN"
 CALL Server("UPDFILE", FILE )
   REM ************************************ verschÑrfte Reorganisation ******************
   REM CALL Fehler("","")
   REM REQUEST "Mîchten Sie die Adressdatei komplett neu aufbauen lassen?","(Achtung dieser Vorgang kann sehr lange dauern!",135,req%
   IF NeuADR% = - 1 THEN 
     CLOSE FILE "ADRESSEN"
     dpfad$ = _netpath$ + "OFFICE\" + DATE$ ( TODAY ,"yymm0d")
     datnr$ = DATE$ ( TODAY ,"yymm0d")
     i% = 0
     ok% = 0
     WHILE ok% = 0
       i% = i% + 1
       IF i% > 99 THEN 
         ON ERROR GOTO arb3004982
         REMOVE DIRECTORY dpfad$ + "01"
arb3004982: 
         i% = 1
       END IF 
       ON ERROR GOTO arb3004981
       tpfad$ = dpfad$ + STR$ (i%,"00")
       MAKE DIRECTORY dpfad$ + STR$ (i%,"00")
       dpfad$ = dpfad$ + STR$ (i%,"00")
       ok% = - 1
arb3004981: 
       ON ERROR GOTO ErrorHandler
     WEND 
 
     textdo1$ = tpfad$
     REM CALL Fehler("Es wird jetzt eine Sicherungskopie der Adressdatei erstellt!",textdo1$)
     REQUEST "Sicherungskopie der Adressdatei in",textdo1$,2
     ON ERROR GOTO arb600420011
     COPY _netpath$ + "OFFICE\Adressen.*" TO dpfad$
     CALL DFile(2,"OFFICE\ADRESSEN" + _fpw$)
     CALL reorgkv(_netpath$ + "office\","ADRESSEN","ADROLD","ADRLEER",dpfad$)
     GOTO arb600420012
arb600420011: 
     CALL Fehler("Beim Kopieren der Adressdatei ist ein Fehler aufgetreten, deshalb wird der Komplettaufbau nicht durchgefÅhrt!","")
     
arb600420012: 
     ON ERROR GOTO ErrorHandler
         FILE "ADRESSEN"
         INDEX codeku.ADRESSEN
         SELECT LAST 
         codeku% = codeku.ADRESSEN
         WHILE SER ("ADRESSEN",1) <= codeku%
         WEND 
     REM CALL UpdADRKorr()
   END IF 
   REM **********************************************************************************
 





 REM GOTO AAAA1
 REM CLOSE FILE "ADRESSEN"
 CALL DFile(2,"OFFICE\ADRESSEN" + _fpw$)
 FILE "ADRESSEN"
 CALL FldAdd("Stichwort","TXT;4000 R",1)
 CALL FldAdd("Nachname","TXT;100",1)
 CALL FldAdd("Vorname","TXT;100",1)
 CALL FldAdd("Stra·e","TXT;50",1)
 CALL FldAdd("Ort","TXT;50",1)
 CALL FldAdd("Land","TXT;50",1)
 CALL FldAdd("PLZ","TXT;12 U",1)
  
 REM -- 05.09.93/AB -------------------------------
 
 CALL FldAdd("Geburtsname","TXT;100",1)
 CALL FldAdd("Inhaber1","TXT;50",0)
 CALL FldAdd("Inhaber2","TXT;50",0)
 CALL FldAdd("Inhaber3","TXT;50",0)
 CALL FldAdd("APartner1","TXT;50",0)
 CALL FldAdd("APartner2","TXT;50",0)
 CALL FldAdd("APartner3","TXT;50",0)
 CALL FldAdd("APartner4","TXT;50",0)
 CALL FldAdd("K1Bank","TXT;50",0)
 CALL FldAdd("K1BLZ","TXT;8",0)
 CALL FldAdd("K1Konto","TXT;10",0)

 CALL FldAdd("K2Bank","TXT;50",0)
 CALL FldAdd("FIATEC","TXT;1",1)
 CALL FldAdd("FIIMMAK","TXT;1",1)
 CALL FldAdd("FIprivat","TXT;1",1)
 CALL FldAdd("AAMietint","TXT;1",1)
 CALL FldAdd("AAKaufint","TXT;1",1)
 CALL FldAdd("AALieferant","TXT;1",1)
 CALL FldAdd("AAMakler","TXT;1",1)
 CALL FldAdd("AAMitarbeiter","TXT;1",1)
 CALL FldAdd("AAKunde","TXT;1",1)
 CALL FldAdd("AAInteressent","TXT;1",1)
 CALL FldAdd("AAEigentÅmer","TXT;1",1)
  
 REM -- 11.04.94/FA ------------------------------
 
 CALL FldAdd("Kundennummer","TXT;20",1)
 CALL FldAdd("DebitorKto","TXT;5",0)
 CALL FldAdd("KostentrÑger","TXT;15",1)
 CALL FldAdd("Kostenstelle","NUM;000000.",1)
 
 REM -- 16.02.95/FA -------------------------------
 
 CALL FldAdd("VorgÑnger","NUM;000000.",1)
 CALL FldAdd("Sperre","NUM;000000.",1)
 CALL FldAdd("Firmenform","TXT;15",1)
 CALL FldAdd("Titel","TXT;30",0)
 CALL FldAdd("Zahlungsziel1","NUM;,999",0)
 CALL FldAdd("Zahlungsziel2","NUM;,999",0)
 CALL FldAdd("Zahlungsziel3","NUM;,999",0)
 CALL FldAdd("Kreditlimit1","NUM;,999999999999.00",0)
 CALL FldAdd("Kreditlimit2","NUM;,999999999999.00",0)
 CALL FldAdd("Kreditlimit3","NUM;,999999999999.00",0)
 
 CALL FldAdd("KreditEu1","NUM;,999999999999.00",0)
 CALL FldAdd("KreditEu2","NUM;,999999999999.00",0)
 CALL FldAdd("KreditEu3","NUM;,999999999999.00",0)
 CALL FldAdd("Mindestauftr1","NUM;,999999999999.00",0)
 CALL FldAdd("Mindestauftr2","NUM;,999999999999.00",0)
 CALL FldAdd("Mindestauftr3","NUM;,999999999999.00",0)
 
 CALL FldAdd("MindestaufEu1","NUM;,999999999999.00",0)
 CALL FldAdd("MindestaufEu2","NUM;,999999999999.00",0)
 CALL FldAdd("MindestaufEu3","NUM;,999999999999.00",0)
 CALL FldAdd("Frachtfrei1","NUM;,999999999999.00",0)
 CALL FldAdd("Frachtfrei2","NUM;,999999999999.00",0)
 CALL FldAdd("Frachtfrei3","NUM;,999999999999.00",0)
 
 CALL FldAdd("FrachtfreiEu1","NUM;,999999999999.00",0)
 CALL FldAdd("FrachtfreiEu2","NUM;,999999999999.00",0)
 CALL FldAdd("FrachtfreiEu3","NUM;,999999999999.00",0)
 
 CALL FldAdd("Frachtanteil1","NUM;,999999999999.00",0)
 CALL FldAdd("Frachtanteil2","NUM;,999999999999.00",0)
 CALL FldAdd("Frachtanteil3","NUM;,999999999999.00",0)
 
 CALL FldAdd("FrachtantEu1","NUM;,999999999999.00",0)
 CALL FldAdd("FrachtantEu2","NUM;,999999999999.00",0)
 CALL FldAdd("FrachtantEu3","NUM;,999999999999.00",0)
 
 CALL FldAdd("ReGesGes","NUM;,999999999999.00",0)
 CALL FldAdd("LieGesGes","NUM;,999999999999.00",0)
 CALL FldAdd("AngGesGes","NUM;,999999999999.00",0)
 CALL FldAdd("AufGesGes","NUM;,999999999999.00",0)
 CALL FldAdd("BesGesGes","NUM;,999999999999.00",0)
 CALL FldAdd("GutGesGes","NUM;,999999999999.00",0)
 
 CALL FldAdd("ReGesGesEu","NUM;,999999999999.00",0)
 CALL FldAdd("LieGesGesEu","NUM;,999999999999.00",0)
 CALL FldAdd("AngGesGesEu","NUM;,999999999999.00",0)
 CALL FldAdd("AufGesGesEu","NUM;,999999999999.00",0)
 CALL FldAdd("BesGesGesEu","NUM;,999999999999.00",0)
 CALL FldAdd("GutGesGesEu","NUM;,999999999999.00",0)
 
 
 CALL FldAdd("Kunde_seit","DAT;0d.mm.yyyy",1)
 CALL FldAdd("Geburtstag","DAT;0d.mm.yyyy",1)
 CALL FldAdd("CodeMA","NUM;000000.",1)
 CALL FldAdd("letzter_Kontakt","DAT;0d.mm.yyyy",1)
 CALL FldAdd("ExpAG","TXT;1",1)
 CALL FldAdd("CodePR","NUM;000000.",1)
 CALL FldAdd("zero","NUM;000000.",1)
  
 CALL FldAdd("QNachname","TXT;120",1)
 CALL FldAdd("QGeburtsname","TXT;120",1)
 CALL FldAdd("QVorname","TXT;120",1)
 CALL FldAdd("QStra·e","TXT;100",1)
 CALL FldAdd("QOrt","TXT;100",1)
 CALL FldAdd("QPLZ","TXT;15",1)
 CALL FldAdd("Postanschrift","TXT;4000 R",0)
 CALL FldAdd("ADRStatus","TXT;50 U",1)
 CALL FldAdd("ADRGruppe","TXT;50 U",1)
 CALL FldAdd("Matchcode","TXT;100",0)
 CALL FldAdd("QMatchcode","TXT;100",1)
 CALL FldAdd("ASerJN","TXT;1",0)
 CALL FldAdd("ADRFarbe","NUM;000.",0)
 CALL FldAdd("QKunr","TXT;30 U",1)
 CALL FldAdd("Bild1","EXT;250",0)
 CALL FldAdd("Bild2","EXT;250",0)
 CALL FldAdd("Bild3","EXT;250",0)
 CALL FldAdd("Bild4","EXT;250",0)
 CALL FldAdd("Bild5","EXT;250",0)
 CALL FldAdd("Bild6","EXT;250",0)
 CALL FldAdd("Bild7","EXT;250",0)
 CALL FldAdd("Bild8","EXT;250",0)
 CALL FldAdd("Bild9","EXT;250",0)
 CALL FldAdd("NBild1","TXT;250",0)
 CALL FldAdd("NBild2","TXT;250",0)
 CALL FldAdd("NBild3","TXT;250",0)
 CALL FldAdd("NBild4","TXT;250",0)
 CALL FldAdd("NBild5","TXT;250",0)
 CALL FldAdd("NBild6","TXT;250",0)
 CALL FldAdd("NBild7","TXT;250",0)
 CALL FldAdd("NBild8","TXT;250",0)
 CALL FldAdd("NBild9","TXT;250",0)
 CALL FldAdd("HRNo","TXT;50",0)
 CALL FldAdd("USTNo","TXT;50",0)
 CALL FldAdd("EinkNo","TXT;50",0)
 CALL FldAdd("BildT1","EXT;25",0)
 CALL FldAdd("BildT2","EXT;25",0)
 CALL FldAdd("BildT3","EXT;25",0)
 CALL FldAdd("BildT4","EXT;25",0)
 CALL FldAdd("BildT5","EXT;25",0)
 CALL FldAdd("BildT6","EXT;25",0)
 CALL FldAdd("BildT7","EXT;25",0)
 CALL FldAdd("BildT8","EXT;25",0)
 CALL FldAdd("BildT9","EXT;25",0)
 CALL FldAdd("K1Art","TXT;50",0)
 CALL FldAdd("K2Art","TXT;50",0)
 CALL FldAdd("K1Inh","TXT;50",0)
 CALL FldAdd("K2Inh","TXT;50",0)
 CALL FldAdd("K1IBAN","TXT;50",0)
 CALL FldAdd("K2IBAN","TXT;50",0)
 CALL FldAdd("K1Swift","TXT;50",0)
 CALL FldAdd("K2Swift","TXT;50",0)
 CALL FldAdd("Vorstand","TXT;50",0)
 CALL FldAdd("Geschf","TXT;50",0)
 CALL FldAdd("QVorstand","TXT;60",1)
 CALL FldAdd("QGeschf","TXT;60",1)
   CALL FldAdd("novi1","NMI;0.",0)
   CALL FldAdd("DatumNovi","DAT;0d.mm.yyyy",0)
 CALL FldAdd("InternetName","TXT;60",0)
 CALL FldAdd("InternetPasswo","TXT;60",0)
 CALL FldAdd("InternetEMAIL","TXT;200",0)
 CALL FldAdd("InternetUpdJN","TXT;1",1)
 CALL FldAdd("adrselect","TXT;1",1)
 CALL FldAdd("Version","TXT;30",0)
 CALL FldAdd("InternetUsr","TXT;60",0)
 CALL FldAdd("Stammblatt","TXT;4000 R",0)

 CALL FldAdd("Zweitanschrift","TXT;350 R",0)
 CALL FldAdd("Zweitbeschr","TXT;550 R",0)
 CALL FldAdd("Drittanschrift","TXT;350 R",0)
 CALL FldAdd("Viertanschrift","TXT;350 R",0)
 CALL FldAdd("Fuenftanschrift","TXT;350 R",0)
 CALL FldAdd("Drittbeschr","TXT;550 R",0)
 CALL FldAdd("Viertbeschr","TXT;550 R",0)
 CALL FldAdd("Fuenftbeschr","TXT;550 R",0)
 CALL FldAdd("PostBriefanrede","TXT;300 R",0)
 CALL FldAdd("K3Bank","TXT;50",0)
 CALL FldAdd("K3BLZ","TXT;8",0)
 CALL FldAdd("K3Konto","TXT;10",0)
 CALL FldAdd("K3Art","TXT;50",0)
 CALL FldAdd("K3Inh","TXT;50",0)
 CALL FldAdd("K3IBAN","TXT;50",0)
 CALL FldAdd("K3Swift","TXT;50",0)
 CALL FldAdd("Mahnsperre","TXT;1",1)
 CALL FldAdd("MahnsperBisdat","DAT;0d.mm.yyyy",1)
 CALL FldAdd("MNotiz","TXT;4000 R",0)
 CALL FldAdd("Rechsperre","TXT;1",1)
 CALL FldAdd("RechBisdat","DAT;0d.mm.yyyy",1)
 CALL FldAdd("RNotiz","TXT;4000 R",0)
 CALL FldAdd("News1","TXT;1",1)
 CALL FldAdd("News2","TXT;1",1)
 CALL FldAdd("CBFCBenutzer","TXT;50",0)
 CALL FldAdd("CBFCPasswort","TXT;50",0)
 CALL FldAdd("Lizenzfirma","TXT;100",0)
 CALL FldAdd("LizenzName","TXT;100",0)
 CALL FldAdd("LizDatBis","DAT;0d.mm.yyyy",0)
 CALL FldAdd("LizenzNotiz","TXT;400 R",0)
 CALL FldAdd("LizenzAP","NMI;000.",0)
 CALL FldAdd("Ortsteil","TXT;50",1)
 CALL FldAdd("QOrtsteil","TXT;60",1)
 CALL FldAdd("CBFCLizenzN","TXT;4000 R",0)
 CALL FldAdd("RechADR","TXT;550 R",0)
 CALL FldAdd("RechADRbeschr","TXT;550 R",0)
 CALL FldAdd("LieferADR","TXT;550 R",0)
 CALL FldAdd("LieferADRbeschr","TXT;550 R",0)
 CALL MarkMain("CodeKU")
 SAVE FILE "adressen"
 REM REQUEST "Mîchten Sie das Feld Postanschrift neu generieren lassen?","",130,reqpost%
 IF reqpost% = 1 THEN 
   REQUEST "Sind Sie absolut sicher?","",130,reqpost%
 END IF 
 CALL Server("UPDFIELD","")
 CALL Server("UPDSTATUS","öbernahme AALieferant")
 UPDATE AALieferant.adressen = "j" WHERE AAMakler.adressen = "j"
 END UPDATE 
 
 FILE "adressen"
 INDEX CodeKU
 SELECT LAST 
 WHILE CodeKU > SER ("ADRESSEN",1)
 WEND 
 nnum% = VAL (ReadConfig$("NUMMERN","LASTKundennummer"))
 IF nnum% < 1 THEN 
   FILE "adressen"
   INDEX codeku.adressen
   SELECT LAST 
   CALL WriteConfig("NUMMERN","LASTKundennummer", LTRIM$ ( STR$ (codeku.adressen,"999999")))
 END IF 
 CALL Server("UPDFIELD","BITTE WARTEN, DAS DAUERT ...")
 CALL Server("UPDSTATUS","öbernahme Telefonnummern")
 CALL DFile(2,"OFFICE\TELEFON" + _fpw$)
 FILE "ADRESSEN"
 INDEX nachname.adressen
 FILE "ADRESSEN"
 INDEX nachname.adressen
 IF RECCOUNT ("adressen") > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 i% = 0
 WHILE NOT EOF ("ADRESSEN") AND NeuADR% = - 1
   i% = i% + 1
   QNachname.adressen = VSNRPack$(nachname.adressen)
   QVorname.adressen = VSNRPack$(vorname.adressen)
   QOrt.adressen = VSNRPack$(Ort.adressen)
   QStra·e.adressen = VSNRPack$(Stra·e.adressen)
   QPLZ.adressen = VSNRPack$(PLZ.adressen)
   QGeburtsname.adressen = VSNRPack$(Geburtsname.adressen)
   IF Matchcode.adressen = "" THEN Matchcode.adressen = Nachname.adressen
   QMatchcode.adressen = VSNRPack$(Matchcode.adressen)
   IF ADRGruppe.adressen = "" THEN ADRGruppe.adressen = "<OHNE ZUORDNUNG>"
   IF _projekt$ LIKE "FACTURA" AND codie$ = "TRUE" THEN 
     IF ADRStatus.adressen = "" THEN 
       IF stichwort.adressen LIKE "REGIMMAK*" OR IF stichwort.adressen LIKE "*REGIMMAK*" THEN ADRStatus.adressen = "IMMAK Kunde"
       IF stichwort.adressen LIKE "REGBUSIN*" OR IF stichwort.adressen LIKE "*REGBUSIN*" THEN ADRStatus.adressen = "BUSINESS Kunde"
       IF stichwort.adressen LIKE "REGPROJ*" OR IF stichwort.adressen LIKE "*REGPROJE*" THEN ADRStatus.adressen = "PROJECT Kunde"
       IF stichwort.adressen LIKE "REGISMAN*" OR IF stichwort.adressen LIKE "*REGISMAN*" THEN ADRStatus.adressen = "ISMAN Kunde"
       IF stichwort.adressen LIKE "REGPROVIS*" OR IF stichwort.adressen LIKE "*REGPROVIS*" THEN ADRStatus.adressen = "PROVIS Kunde"
       IF ADRStatus.adressen = "" THEN ADRStatus.adressen = "<OHNE ZUORDNUNG>"
     END IF 
   ELSE 
     IF ADRStatus.adressen = "" THEN ADRStatus.adressen = "<OHNE ZUORDNUNG>"
   END IF 
     IF Postanschrift.adressen = "" OR NeuPost% = - 1 THEN 
       p$ = ""
       IF anrede.adressen LIKE "Herr*" OR anrede.adressen LIKE "Fr*" OR anrede.adressen LIKE "Fam*" THEN 
         p$ = Anrede.adressen + " "
         IF LTRIM$ (Titel.adressen) <> "" THEN 
           p$ = p$ + " " + LTRIM$ (Titel.adressen) + CHR$ (13) + CHR$ (10)
         ELSE 
           p$ = p$ + CHR$ (13) + CHR$ (10)
         END IF 
         IF vorname.adressen <> "" THEN 
           p$ = p$ + LTRIM$ (Vorname.adressen) + " " + LTRIM$ (Nachname.adressen) + CHR$ (13) + CHR$ (10)
         ELSE 
           p$ = p$ + LTRIM$ (Nachname.adressen) + CHR$ (13) + CHR$ (10)
         END IF 
         p$ = p$ + Stra·e.adressen + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + plz.adressen + " " + Ort.adressen + CHR$ (13) + CHR$ (10)
         IF _projekt$ LIKE "FACTURA" THEN 
         ELSE 
           p$ = p$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + briefanrede.adressen
         END IF 
       ELSE 
         p$ = LTRIM$ (Anrede.adressen) + " " + LTRIM$ (titel.adressen) + CHR$ (13) + CHR$ (10)
         IF Geburtsname.adressen <> "" THEN 
           p$ = p$ + LTRIM$ (nachname.adressen) + CHR$ (10) + CHR$ (13) + LTRIM$ (geburtsname.adressen) + CHR$ (13) + CHR$ (10)
         ELSE 
           p$ = p$ + LTRIM$ (Nachname.adressen) + CHR$ (13) + CHR$ (10)
         END IF 
         IF vorname.adressen <> "" THEN 
           p$ = p$ + LTRIM$ (Vorname.adressen) + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
         ELSE 
           p$ = p$ + CHR$ (13) + CHR$ (10)
         END IF 
         p$ = p$ + Stra·e.adressen + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + plz.adressen + " " + Ort.adressen + CHR$ (13) + CHR$ (10)
         IF land.adressen <> "" THEN p$ = p$ + CHR$ (13) + CHR$ (10) + Land.adressen
         IF _projekt$ LIKE "FACTURA" THEN 
         ELSE 
           p$ = p$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + briefanrede.adressen
         END IF 
       END IF 
       Postanschrift.adressen = p$
     END IF 
 
   STORE FILE "Adressen"
   SELECT NEXT LOCK 
   SET STATUS STR$ (i%,",999999999") + " Adressen angepa·t von " + STR$ ( RECCOUNT ("ADRESSEN"),",999999")
   CALL Server("UPDSTATUS", STR$ (i%,"999999999") + " Adressen angepa·t")
 WEND 
 
 IF RECCOUNT ("adressen") > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
start29119901: 
 anpass$ = UCASE$ (ReadINI$("SYSTEM","Telefonanpassung"))
 anpass$ = "FALSE"
 REM anpass$ = "FALS"
 FILE "adressen"
 INDEX codeku.adressen
 CALL DFile(2,"OFFICE\connect" + _fpw$)
 FILE "connect"
 CALL FldAdd("Kundennummer","TXT;20",1)
 CALL FldAdd("Vorname","TXT;100",1)
 CALL FldAdd("Nachname","TXT;100",1)
 SAVE FILE "connect"
 FILE "connect"
 IF RECCOUNT ("connect") > 0 AND andi$ = "juchuuuuu" THEN 
   SELECT FIRST LOCK 
   WHILE NOT EOF ("connect")
     codeku% = codeku.connect
     IF EXISTS (codeku%,codeku.adressen) THEN 
       SELECT KEY codeku% FILE "ADRESSEN" INDEX codeku.adressen
       Nachname.connect = Nachname.adressen
       Vorname.connect = Vorname.adressen
       Ort.connect = Ort.adressen
       Strasse.connect = Stra·e.adressen
       Kundennummer.connect = Kundennummer.adressen
       STORE FILE "connect"
     END IF 
     SELECT NEXT LOCK FILE "connect"
   WEND 
 END IF 



 CALL DFile(2,"OFFICE\Anrede" + _fpw$)
 CALL DFile(2,"OFFICE\Titel" + _fpw$)
 CALL DFile(2,"OFFICE\Ort" + _fpw$)
 CALL DFile(2,"OFFICE\Land" + _fpw$)
 CALL DFile(2,"OFFICE\Beruf" + _fpw$)
 CALL DFile(2,"OFFICE\Hobbys" + _fpw$)
 CALL DFile(2,"OFFICE\FiForm" + _fpw$)
 CALL DFile(2,"OFFICE\FStand" + _fpw$)
 CALL DFile(2,"OFFICE\Anstell" + _fpw$)
 CALL DFile(2,"OFFICE\National" + _fpw$)
 CALL DFile(2,"OFFICE\Staat" + _fpw$)

 
 FILE "Adressen"
 INDEX codeku.adressen
 SELECT FIRST 
 i% = 0
 z% = RECCOUNT ("Adressen")
 anpass1$ = UCASE$ (ReadINI$("SYSTEM","Zusatzdateien"))
 REM anpass1$ = "FALSE"
 anpass1$ = "FALS"
 WHILE NOT EOF ("Adressen") AND aufbzusatz$ = "j"
   i% = i% + 1
   CALL Server("UPDFIELD","Aufbau der Zusatzdateien")
   CALL Server("UPDSTATUS", STR$ (i%,"99999") + " von " + STR$ (z%,"99999") + " Adressen")
   SET STATUS STR$ (i%,"99999") + " von " + STR$ (z%,"99999") + " Adressen"
   anrede$ = Anrede.adressen
   titel$ = Titel.adressen
   ort$ = Ort.adressen
   plz$ = PLZ.adressen
   Land$ = Land.adressen
   REM Beruf$ = Beruf.adressen
   Fiform$ = Firmenform.adressen
   REM FStand$ = Familienstand.adressen
   REM Anstell$ = Anstellungsverh.adressen
   REM National$ = NationalitÑt.adressen
   REM staat$ = Staatsangehîrig.adressen
   REM IF national$ <> "" AND NOT EXISTS (national$,nationalitÑt.national) THEN 
     REM BLANK FILE "national"
     REM nationalitÑt.national = national$
     REM STORE FILE "national"
   REM END IF 
   REM IF staat$ <> "" AND NOT EXISTS (staat$,staatsangehîrig.staat) THEN 
     REM BLANK FILE "staat"
     REM staatsangehîrig.staat = staat$
     REM STORE FILE "staat"
   END IF 
   IF anrede$ <> "" AND NOT EXISTS (anrede$,anrede.anrede) THEN 
     BLANK FILE "anrede"
     anrede.anrede = anrede$
     STORE FILE "Anrede"
   END IF 
   IF titel$ <> "" AND NOT EXISTS (titel$,titel.titel) THEN 
     BLANK FILE "titel"
     titel.titel = titel$
     STORE FILE "titel"
   END IF 
   IF land$ <> "" AND NOT EXISTS (land$,land.land) THEN 
     BLANK FILE "land"
     land.land = land$
     STORE FILE "land"
   END IF 
   IF beruf$ <> "" AND NOT EXISTS (beruf$,beruf.beruf) THEN 
     BLANK FILE "beruf"
     beruf.beruf = beruf$
     STORE FILE "beruf"
   END IF 
   IF fiform$ <> "" AND NOT EXISTS (Fiform$,Firmenform.Fiform) THEN 
     BLANK FILE "Fiform"
     Firmenform.Fiform = Fiform$
     STORE FILE "Fiform"
   END IF 
   IF fstand$ <> "" AND NOT EXISTS (FStand$,FamilienStand.FStand) THEN 
     BLANK FILE "Fstand"
     FamilienStand.FStand = FStand$
     STORE FILE "FStand"
   END IF 
   IF anstell$ <> "" AND NOT EXISTS (Anstell$,Anstellungsverh.Anstell) THEN 
     BLANK FILE "Anstell"
     Anstellungsverh.Anstell = Anstell$
     STORE FILE "Anstell"
   END IF 
   IF plz$ <> "" AND NOT EXISTS (plz$,plz.ort) THEN 
     BLANK FILE "ort"
     codeort.ort = SER ("ort",1)
     plz.ort = LEFT$ (plz$,12)
     IF ort$ <> "" THEN ort.ort = ort$
     PLZOrt.ort = PLZ.ort + TRIM$ ( LTRIM$ (ort.ort))
     OrtPLZ.ort = TRIM$ ( LTRIM$ (ort.ort)) + PLZ.ort
     STORE FILE "ort"
   END IF 
   IF ort$ <> "" AND NOT EXISTS (ort$,ort.ort) THEN 
     BLANK FILE "ort"
     codeort.ort = SER ("ort",1)
     ort.ort = ort$
     IF plz$ <> "" THEN plz.ort = plz$
     PLZOrt.ort = PLZ.ort + TRIM$ ( LTRIM$ (ort.ort))
     STORE FILE "ort"
   END IF 
 
 FILE "Adressen"
 SELECT NEXT 
 WEND 
 CALL WriteINI("SYSTEM","Zusatzdateien","FALSE")
 
 IF _projekt$ LIKE "HORTUS" THEN 
   CALL DFile(3,"hortus" + _fpw$)
   FILE "hortus"
   CALL FldAdd("BlÅhbeginn","DAT;0d.mm.yyyy",0)
   CALL FldAdd("Standort","TXT;4000 R",0)
   CALL FldAdd("Charakteristika","TXT;4000 R",1)
   CALL FldAdd("Verwendung","TXT;4000 R",0)
   CALL FldAdd("Benachbarung","TXT;4000 R",0)
   CALL FldAdd("WeitereSortArt","TXT;4000 R",0)
   CALL FldAdd("Version","TXT;20",0)
   CALL FldAdd("Hinweise","TXT;4000 R",0)
   CALL FldAdd("Bild1","EXT;250",0)
   CALL FldAdd("Bild2","EXT;250",0)
   CALL FldAdd("Bild3","EXT;250",0)
   CALL FldAdd("Bild4","EXT;250",0)
   CALL FldAdd("NBild1","TXT;250",0)
   CALL FldAdd("NBild2","TXT;250",0)
   CALL FldAdd("NBild3","TXT;250",0)
   CALL FldAdd("NBild4","TXT;250",0)
   CALL FldAdd("NBild1","TXT;250",0)
   CALL FldAdd("BildT1","TXT;25",0)
   CALL FldAdd("BildT2","TXT;25",0)
   CALL FldAdd("BildT3","TXT;25",0)
   CALL FldAdd("BildT4","TXT;25",0)
   CALL FldAdd("QBotName","TXT;100",1)
   CALL FldAdd("QDeuName","TXT;100",1)
   CALL FldAdd("QPflanzFamil","TXT;100",1)
   SAVE FILE "HORTUS"
   FILE "HORTUS"
   SELECT FIRST LOCK 
   i% = 0
   j% = RECCOUNT ("HORTUS")
   WHILE NOT EOF ("HORTUS")
     i% = i% + 1
     QBotName.Hortus = VSNRPack$(Botanische_Bez.Hortus)
     QDeuName.Hortus = VSNRPack$(Deutscher_Name.Hortus)
     QPflanzFamil.Hortus = VSNRPack$(Pflanzenfamilie.Hortus)
     STORE FILE "HORTUS"
     SET STATUS STR$ (i%) + " DatensÑtze in Pflanzendatei angepasst von " + STR$ (j%)
     SELECT NEXT LOCK FILE "HORTUS"
   WEND 
   CALL DFile(3,"Bluezeit" + _fpw$)
   FILE "Bluezeit"
   CALL FldAdd("BlÅhzeit","DAT;0d.mm.yyyy",1)
   CALL FldAdd("BlÅhende","DAT;0d.mm.yyyy",0)
   SAVE FILE "Bluezeit"
 END IF 

 REM -- Anpassung Projekt FACTURA -----------------------------------------------
AAAA1: 
FactStart270200: 
 REM CALL Fehler("Test","")
 IF _projekt$ LIKE "FACTURA" OR _projekt$ LIKE "WAWI" THEN 
 
  REM Anpassung PROJECT.SBF
   REM ================================================
   REM CALL Fehler("Test","")
   pfad$ = _netpath$ + _projekt$ + "\" + "project.sbf"
   IF EXISTS (_netpath$ + _projekt$ + "\" + "project.sbf") THEN 
     CALL DFile(3,"project" + _fpw$)
     FILE "Project"
     CALL FldAdd("Pegelstand4","TXT;50",1)
     CALL FldAdd("Projektmaske","TXT;8",1)
     CALL FldAdd("Bild1","EXT;250",0)
     CALL FldAdd("Bild2","EXT;250",0)
     CALL FldAdd("Bild3","EXT;250",0)
     CALL FldAdd("Bild4","EXT;250",0)
     CALL FldAdd("Bild5","EXT;250",0)
     CALL FldAdd("Bild6","EXT;250",0)
     CALL FldAdd("Bild7","EXT;250",0)
     CALL FldAdd("Bild8","EXT;250",0)
     CALL FldAdd("Bild9","EXT;250",0)
     CALL FldAdd("NBild1","TXT;250",0)
     CALL FldAdd("NBild2","TXT;250",0)
     CALL FldAdd("NBild3","TXT;250",0)
     CALL FldAdd("NBild4","TXT;250",0)
     CALL FldAdd("NBild5","TXT;250",0)
     CALL FldAdd("NBild6","TXT;250",0)
     CALL FldAdd("NBild7","TXT;250",0)
     CALL FldAdd("NBild8","TXT;250",0)
     CALL FldAdd("NBild9","TXT;250",0)
     CALL FldAdd("BildT1","EXT;25",0)
     CALL FldAdd("BildT2","EXT;25",0)
     CALL FldAdd("BildT3","EXT;25",0)
     CALL FldAdd("BildT4","EXT;25",0)
     CALL FldAdd("BildT5","EXT;25",0)
     CALL FldAdd("BildT6","EXT;25",0)
     CALL FldAdd("BildT7","EXT;25",0)
     CALL FldAdd("BildT8","EXT;25",0)
     CALL FldAdd("BildT9","EXT;25",0)
     CALL FldAdd("novi1","NMI;0.",0)
     CALL FldAdd("DatumNovi","DAT;0d.mm.yyyy",0)
     CALL FldAdd("PLZ","TXT;12 U",1)
     SAVE FILE "project"
     CALL DFile(2,"OFFICE\adressen" + _fpw$)
     CALL DFile(3,"prconect" + _fpw$)
     FILE "Prconect"
     CALL FldAdd("Vorname","TXT;100",1)
     CALL FldAdd("Nachname","TXT;100",1)
     SAVE FILE "prconect"
     CALL DFile(3,"prconadr" + _fpw$)
     FILE "Prconadr"
     CALL FldAdd("Vorname","TXT;100",1)
     CALL FldAdd("Nachname","TXT;100",1)
     CALL FldAdd("PLZ","TXT;12",0)
     CALL FldAdd("QuickPRKU","TXT;106",1)
     CALL FldAdd("CODEKEY","NUM;000000.",1)
     SAVE FILE "prconadr"
     dat$ = "prconadr"
     INDEX codeKey.dat$
     FILE dat$
    SELECT LAST 
    i% = codeKey.dat$
    j% = SER (dat$,1)
    WHILE j% < i%
     j% = SER (dat$,1)
    WEND 

    SELECT FIRST 
    IF codekey.dat$ < 1 THEN 
     INDEX codepr.dat$
     IF RECCOUNT (dat$) > 0 THEN 
       SELECT FIRST LOCK 
     ELSE 
      SELECT LAST 
     END IF 
     j% = 0
     WHILE NOT EOF (dat$)
        IF codekey.dat$ < 1 THEN 
          j% = j% + 1
          codekey.dat$ = SER (dat$,1)
          STORE FILE dat$
        END IF 
        SELECT NEXT LOCK 
        SET STATUS "Datensatz: " + STR$ (j%,"9999999") + " bearbeitet! von " + STR$ ( RECCOUNT (dat$),",9999999")
      WEND 
    END IF 
     IF RECCOUNT ("PRCONADR") > 0 THEN 
       SELECT FIRST LOCK 
     ELSE 
       SELECT LAST 
     END IF 
     i% = 0
     WHILE NOT EOF ("prconadr") AND GIndneu% = - 1
       i% = i% + 1
       codeku% = codeku.prconadr
       SET STATUS STR$ (i%,"999999") + "DatensÑtze in PRCONADR angepa·t ! von " + STR$ ( RECCOUNT ("prconadr"),",999999")
       IF EXISTS (codeku%,codeku.adressen) THEN 
         SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
         Nachname.prconadr = nachname.adressen
         Vorname.prconadr = Vorname.adressen
         ort.prconadr = Ort.adressen
         strasse.prconadr = stra·e.adressen
         plz.prconadr = plz.adressen
       END IF 
       QuickPRKU = STR$ (codepr.prconadr,"000000") + Nachname.prconadr
       STORE FILE "prconadr"
     SELECT NEXT LOCK 
     WEND 
     SET STATUS ""
   END IF 
 
   REM Anpassung MAHNUNG.SBF
   REM ================================================
 
 
   CALL DFile(3,"MAHNUNG" + _fpw$)
   FILE "MAHNUNG"
   CALL FldAdd("Vorname","TXT;100",1)
   CALL FldAdd("Nachname","TXT;100",1)
   CALL FldAdd("PLZ","TXT;12 U",0)
   CALL FldAdd("Nummer","TXT;30",1)
   CALL FldAdd("Adresstext","TXT;L4000R",0)
   CALL FldAdd("SummeTeil","NUM;,999999999999.00",0)
   CALL FldAdd("SummeTeilEu","NUM;,999999999999.00",0)
   CALL FldAdd("SummeMahn","NUM;,999999999999.00",0)
   CALL FldAdd("SummeMahnEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesMahn","NUM;,999999999999.00",0)
   CALL FldAdd("GesMahnEu","NUM;,999999999999.00",0)
   CALL FldAdd("CodeRE","NUM;000000.",1)
   CALL FldAdd("gezmitskonto","TXT;1",0)
   CALL FldAdd("CodeMahn","NUM;000000.",1)
   CALL FldAdd("DruckArt","TXT;25",0)
   CALL FldAdd("DokSchutz1","NMI;0.",0)
   CALL FldAdd("DokSchutz2","NMI;0.",0)
   CALL FldAdd("DokSchutz3","NMI;0.",0)
   CALL FldAdd("DokSchutz4","NMI;0.",0)
   CALL FldAdd("DokSchutz5","NMI;0.",0)
   CALL FldAdd("Notiz","TXT;4000 R",0)
   CALL FldAdd("Mahnsperre","TXT;1",1)
   CALL FldAdd("MahnsperBisdat","DAT;0d.mm.yyyy",1)
   CALL FldAdd("BuchnrRe","TXT;30",1)
   CALL FldAdd("BelegM1","TXT;30",1)
   CALL FldAdd("BelegM2","TXT;30",1)
   CALL FldAdd("BelegM3","TXT;30",1)
   CALL FldAdd("BelegM4","TXT;30",1)
   CALL FldAdd("BelegM5","TXT;30",1)
   CALL FldAdd("ZahlDatum","DAT;0d.mm.yyyy",0)
 
   SAVE FILE "MAHNUNG"
   FILE "Mahnung"
   INDEX codemahn.mahnung
   SELECT LAST 
   i% = Codemahn.mahnung
   INDEX codems.mahnung
   SELECT FIRST 
   IF RECCOUNT ("Mahnung") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   WHILE NOT EOF ("mahnung")
       IF codemahn.mahnung < 1 THEN 
         i% = i% + 1
         codemahn.mahnung = i%
         STORE FILE "mahnung"
       END IF 
     CALL Server("UPDSTATUS","kann etwas dauern - CodeMahn:" + STR$ (codemahn.mahnung,"999999"))
     SELECT NEXT LOCK FILE "mahnung" INDEX codems.mahnung
   WEND 
   FILE "Mahnung"
   INDEX codemahn.mahnung
   SELECT LAST 
   WHILE CodeMahn.mahnung > SER ("mahnung",1)
   WEND 
   CALL DFile(3,"RAUSGANG" + _fpw$)
 
   REM Anpassung MASTER.SBF
   REM ================================================
 
 
   CALL DFile(3,"MASTER" + _fpw$)
   FILE "master"
   CALL FldAdd("Nachname","TXT;100",0)
   CALL FldAdd("Vorname","TXT;100",0)
   CALL FldAdd("Stra·e","TXT;50",0)
   CALL FldAdd("Ort","TXT;50",0)
   CALL FldAdd("LANachname","TXT;50",0)
   CALL FldAdd("LAVorname","TXT;50",0)
   CALL FldAdd("LAStra·e","TXT;50",0)
   CALL FldAdd("LAOrt","TXT;50",0)
   CALL FldAdd("Datum","DAT;0d.mm.yyyy",1)
   CALL FldAdd("Geburtsname","TXT;100",0)
   CALL FldAdd("Kundennummer","TXT;20",0)
   CALL FldAdd("StatusM","TXT;1",0)
   CALL FldAdd("Storno","TXT;1",0)
   CALL FldAdd("frachtfrei","NUM;9999999.00",0)
   CALL FldAdd("KostentrÑger","TXT;15",1)
   CALL FldAdd("Kostenstelle","NUM;000000.",1)
   CALL FldAdd("Art","NUM;0.",1)
   CALL FldAdd("Nummer","TXT;30",1)
   CALL FldAdd("Adresstext","TXT;L4000R",0)
   CALL FldAdd("RabattProz","NUM;999.000",0)
   CALL FldAdd("Skonto","NUM;9999999.00",0)
   CALL FldAdd("SkontoProz","NUM;999.00",0)
   CALL FldAdd("Skontoziel","DAT;0d.mm.yyyy",0)
   CALL FldAdd("CodeDok","NUM;999999",1)
   CALL FldAdd("CodeAng","NUM;999999",0)
   CALL FldAdd("CodeLiefer","NUM;999999",0)
   CALL FldAdd("CodeAuf","NUM;999999",0)
   CALL FldAdd("CodeBest","NUM;999999",0)
   CALL FldAdd("CodeGut","NUM;999999",0)
   CALL FldAdd("CodeRech","NUM;999999",0)
   CALL FldAdd("Periode","NUM;9",1)
   CALL FldAdd("Rythmus","NUM;999999",0)
   CALL FldAdd("EndDatum","DAT;0d.mm.yyyy",0)
   CALL FldAdd("vonCodeMS","NUM;999999",0)
   CALL FldAdd("BuchBrutto","NUM;999999999999.00",0)
   CALL FldAdd("BuchUms","TXT;1 U",0)
   CALL FldAdd("BuchDatum","DAT;0d.mm.yyyy",0)
   CALL FldAdd("BuchCodeMA","NUM;000000.",0)
   CALL FldAdd("CodeMA","NUM;000000.",1)
   CALL FldAdd("ProvisProz","NUM;999.0000",0)
   CALL FldAdd("ProvisDM","NUM;999999999999.00",0)
   CALL FldAdd("BuchProv","NUM;999999999999.00",0)
   CALL FldAdd("ProvisGesDM","NUM;999999999999.00",0)
   CALL FldAdd("ProvisausPosDM","NUM;999999999999.00",0)
   CALL FldAdd("ZahlDatum","DAT;0d.mm.yyyy",0)
   CALL FldAdd("MahnDatum1","DAT;0d.mm.yyyy",0)
   CALL FldAdd("ZahlMahnDat1","DAT;0d.mm.yyyy",0)
   CALL FldAdd("MahnDatum2","DAT;0d.mm.yyyy",0)
   CALL FldAdd("ZahlMahnDat2","DAT;0d.mm.yyyy",0)
   CALL FldAdd("MahnDatum3","DAT;0d.mm.yyyy",0)
   CALL FldAdd("ZahlMahnDat3","DAT;0d.mm.yyyy",0)
   CALL FldAdd("MahnDatum4","DAT;0d.mm.yyyy",0)
   CALL FldAdd("ZahlMahnDat4","DAT;0d.mm.yyyy",0)
   CALL FldAdd("MahnDatum5","DAT;0d.mm.yyyy",0)
   CALL FldAdd("ZahlMahnDat5","DAT;0d.mm.yyyy",0)
   CALL FldAdd("Mahnstufe","NUM;0.",0)
   CALL FldAdd("Belegnr","TXT;20",1)
   CALL FldAdd("CodePR","NUM;000000.",1)
   CALL FldAdd("Projekt","TXT;120",1)
   CALL FldAdd("CodeAQ","NUM;000000.",1)
   CALL FldAdd("oldReNr","TXT;20",1)
 
   CALL FldAdd("EKNetto","NUM;999999999999.00",0)
   CALL FldAdd("PreisNetto","NUM;999999999999.00",0)
   CALL FldAdd("PreisBrutto","NUM;999999999999.00",0)
   CALL FldAdd("GesNetto","NUM;999999999999.00",0)
   CALL FldAdd("GesBrutto","NUM;999999999999.00",0)
   CALL FldAdd("Rabatt","NUM;9999999.00",0)
   CALL FldAdd("WaehrArt","TXT;1",1)
 
 
 
   CALL FldAdd("EKNettoEu","NUM;999999999999.00",0)
   CALL FldAdd("PreisNettoEu","NUM;999999999999.00",0)
   CALL FldAdd("PreisBruttoEu","NUM;999999999999.00",0)
   CALL FldAdd("GesNettoEu","NUM;999999999999.00",0)
   CALL FldAdd("GesBruttoEu","NUM;999999999999.00",0)
   CALL FldAdd("SkontoEu","NUM;9999999.00",0)
   CALL FldAdd("RabattEu","NUM;9999999.00",0)
   CALL FldAdd("BuchBruttoEu","NUM;999999999999.00",0)
   CALL FldAdd("ProvisEu","NUM;999999999999.00",0)
   CALL FldAdd("BuchProvEu","NUM;999999999999.00",0)
   CALL FldAdd("ProvisGesEu","NUM;999999999999.00",0)
   CALL FldAdd("ProvisausPosEu","NUM;999999999999.00",0)
   
   CALL FldAdd("frachtfreiEu","NUM;999999999999.00",0)
 
 
   CALL FldAdd("Umrechnung","NUM;,99999999.000000",0)
   CALL FldAdd("CodeW","NUM;000000.",1)
   CALL FldAdd("Waehrung","TXT;6",0)
   CALL FldAdd("WaehrungBezeich","TXT;30",0)
   CALL FldAdd("SummeTeil","NUM;,999999999999.00",0)
   CALL FldAdd("SummeTeilEu","NUM;,999999999999.00",0)
   CALL FldAdd("SummeMahn","NUM;,999999999999.00",0)
   CALL FldAdd("SummeMahnEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesMahn","NUM;,999999999999.00",0)
   CALL FldAdd("GesMahnEu","NUM;,999999999999.00",0)
   CALL FldAdd("CodeRE","NUM;000000.",1)
   CALL FldAdd("Komissionsnr","TXT;30",0)
   CALL FldAdd("BestellNr","TXT;30",0)
   CALL FldAdd("AdresseOrig","TXT;L4000R",0)
   CALL FldAdd("DokSchutz","NMI;0.",0)
   CALL FldAdd("DruckArt","TXT;25",0)
   CALL FldAdd("TeilErlaubt","NMI;0.",0)
   CALL FldAdd("Nummer2","NUM;99999999999999.",1)
   CALL FldAdd("Notiz","TXT;4000 R",0)
   CALL FldAdd("erledigt","TXT;1",1)
   CALL FldAdd("erledigtDatum","DAT;0d.mm.yyyy",1)
   CALL FldAdd("gebustor","TXT;10",0)
   CALL FldAdd("Auftragsnr","TXT;50",0)
   CALL FldAdd("Auftragsdat","DAT;0d.mm.yyyy",0)
   CALL FldAdd("PLZ","TXT;12 U",0)
   CALL FldAdd("Mahnsperre","TXT;1",1)
   CALL FldAdd("MahnsperBisdat","DAT;0d.mm.yyyy",1)
   CALL FldAdd("BuchnrRe","TXT;30",1)
   CALL FldAdd("erledigtDatBis","DAT;0d.mm.yyyy",1)
   CALL FldAdd("USTNo","TXT;50",0)
   REM USTNo
   CALL MarkMain("CodeMS")
   SAVE FILE "master"
   MOUSE OFF 
   UPDATE StatusM.master = "b" WHERE Storno.master <> "s"
   END UPDATE 
   UPDATE StatusM.master = "s" WHERE Storno.master = "s"
   END UPDATE 
   UPDATE erledigt.master = "J" WHERE erledigt.master = ""
   END UPDATE 



   FILE "MASTER"
   INDEX CodeMS
   SELECT LAST 
   WHILE CodeMS > SER ("MASTER",1)
   WEND 
 

   FILE "master"
   INDEX codems.master
   IF RECCOUNT ("master") > 0 THEN 
     j% = RECCOUNT ("master")
     i% = 0
     SELECT FIRST LOCK 
     WHILE NOT EOF ("master")
       i% = i% + 1
       IF codedok.master > 0 AND EXISTS (codedok.master,codedok.dokument) THEN 
         codems% = codems.master
         SELECT FIRST FILE "dokument" INDEX codedok.dokument
         SELECT KEY codedok.master LOCK FILE "dokument" INDEX codedok.dokument
         codems.dokument = codems%
         STORE FILE "dokument"
       END IF 
       SET STATUS STR$ (i%,",999999") + " / " + STR$ (j%,",999999")
       SELECT NEXT LOCK FILE "master" INDEX codems.master
     WEND 
   END IF 

   CALL DFile(3,"WAEHRUNG" + _fpw$)
   FILE "Waehrung"
   INDEX waehrung.waehrung
   SELECT FIRST 
   WHILE NOT EOF ("WAEHRUNG") AND GIndneu% = - 1
     IF UCASE$ (waehrung.waehrung) = zweitwaehr$ THEN 
       euro1% = umrechnung.waehrung
       codew1% = codew.waehrung
       waehrung1$ = waehrung.waehrung
       wbez1$ = WaehrungBezeich.waehrung
       aa% = 1
     END IF 
   SELECT NEXT 
   WEND 
   FILE "master"
   INDEX codems.master
   UPDATE waehrung.master = "EUR" WHERE waehrung.master LIKE "EUR*"
   END UPDATE 
   IF RECCOUNT ("master") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   i% = 0
   WHILE NOT EOF ("master") AND GIndneu% = - 1
     i% = i% + 1
     SET STATUS STR$ (i%,"999999") + " DatensÑtze angepa·t von " + STR$ ( RECCOUNT ("master"),",999999")
     ok% = 0
     IF umrechnung.master < 0.0001 THEN 
       umrechnung.master = euro1%
       codew.master = codew1%
       waehrung.master = waehrung1$
       WaehrungBezeich.master = wbez1$
       CALL MADMEuro()
     END IF 
     IF Nummer2.master < 1 THEN 
       nummer2.master = codems.master
       ok% = - 1
     END IF 
     IF ok% = - 1 THEN 
       STORE FILE "master"
     END IF 
     SELECT NEXT LOCK 
   WEND 
 
 
   IF _projekt$ LIKE "FACTURA" THEN 
     Nummernkreise$ = UCASE$ (ReadConfig$("FACTURA","Nummernkreise"))
     IF nummernkreise$ LIKE "leer" THEN 
       CALL WriteConfig("FACTURA","NUmmernkreise","FALSE")
       n% = 100000
       CALL WriteConfig("FACTURA","LASTAngebot", LTRIM$ ( STR$ (n%,"999999")))
       n% = 200000
       CALL WriteConfig("FACTURA","LASTRechnung", LTRIM$ ( STR$ (n%,"999999")))
       n% = 300000
       CALL WriteConfig("FACTURA","LASTLieferschein", LTRIM$ ( STR$ (n%,"999999")))
       n% = 400000
       CALL WriteConfig("FACTURA","LASTAuftrag", LTRIM$ ( STR$ (n%,"999999")))
       n% = 500000
       CALL WriteConfig("FACTURA","LASTBestellung", LTRIM$ ( STR$ (n%,"999999")))
       n% = 600000
       CALL WriteConfig("FACTURA","LASTGutschrift", LTRIM$ ( STR$ (n%,"999999")))
       n% = 800000
       CALL WriteConfig("FACTURA","LASTAnfrage", LTRIM$ ( STR$ (n%,"999999")))
 
     END IF 
     ArtiAutoNum$ = UCASE$ (ReadConfig$("FACTURA","ArtikelAutoNum"))
     IF ArtiAutoNum$ LIKE "leer" THEN 
       CALL WriteConfig("FACTURA","ArtikelAutoNum","FALSE")
     END IF 
     nnum% = VAL (ReadConfig$("FACTURA","LASTArtikelnummer"))
     IF nnum% = 0 THEN 
       CALL DFile(3,"ARTIKEL" + _fpw$)
       FILE "artikel"
       INDEX codear.artikel
       SELECT LAST 
       CALL WriteConfig("FACTURA","LASTArtikelnummer", LTRIM$ ( STR$ (codear.artikel,"999999")))
       SELECT FIRST 
     END IF 
   END IF 
 
   REM Anpassung UMSTEMP1.SBF
   REM ================================================
 
 
   CALL DFile(3,"UMSTEMP1" + _fpw$)
   FILE "UMSTEMP1"
   CALL FldAdd("Nachname","TXT;100",1)
   CALL FldAdd("Vorname","TXT;100",1)
   CALL FldAdd("Geburtsname","TXT;100",1)
   CALL FldAdd("VKNettoEu","NUM;999999999999.00",0)
   CALL FldAdd("VKBruttoEu","NUM;999999999999.00",0)
   CALL FldAdd("SkontoEu","NUM;999999999999.00",0)
   CALL FldAdd("RabattEu","NUM;999999999999.00",0)
 
   CALL FldAdd("VKNetto","NUM;999999999999.00",0)
   CALL FldAdd("VKBrutto","NUM;999999999999.00",0)
   CALL FldAdd("BelegNetto","TXT;20",1)
   CALL FldAdd("BelegBrutto","TXT;20",1)
   CALL FldAdd("WaehrArt","TXT;1",1)
 
   CALL FldAdd("Umrechnung","NUM;,99999999.000000",0)
   CALL FldAdd("CodeW","NUM;000000.",1)
   CALL FldAdd("Waehrung","TXT;30",1)
   SAVE FILE "UMSTEMP1"
 
 
   REM Anpassung FLOSKEL.SBF
   REM ================================================
 
   CALL DFile(3,"FLOSKEL" + _fpw$)
   FILE "floskel"
   ON ERROR GOTO test160620071
   zugArt% = zugArt.floskel
   GOTO test160620072
test160620071: 
   zugart% = - 1
test160620072: 
   ON ERROR GOTO ErrorHandler
   CALL FldAdd("Spezial","NMI;00.",0)
   CALL FldAdd("TextNr","NMI;00.",0)
   CALL FldAdd("novi1","NMI;0.",0)
   CALL FldAdd("DatumNovi","DAT;0d.mm.yyyy",0)
   CALL FldAdd("Sprache","NMI;0.",0)
   CALL FldAdd("gueltigvon","DAT;0d.mm.yyyy",0)
   CALL FldAdd("gueltigbis","DAT;0d.mm.yyyy",0)
   CALL FldAdd("SortNummer","TXT;30",1)
   CALL FldAdd("Kurztext","TXT;100",0)
   CALL FldAdd("zugArt","NMI;00.",1)
   CALL MarkMain("CodeFL")
   SAVE FILE "floskel"
   FILE "floskel"
   UPDATE zugart.floskel = - 1
   END UPDATE 
   INDEX CodeFL
   SELECT LAST 

   WHILE CodeFL > SER ("FLOSKEL",1)
   WEND 

   SELECT FIRST LOCK FILE "floskel"
   WHILE NOT EOF ("floskel")
     SELECT FIRST LOCK FILE "stamm"
     IF spezial.floskel <> 0 OR zugart.floskel = - 01 THEN zugart.floskel = spezial.floskel
     IF sortnummer.floskel = "" THEN 
       REM standard festlegung
       SELECT CASE spezial.floskel
       CASE 0
         REM nichts
         nrnichts% = nrnichts.stamm
         nrnichts% = nrnichts% + 1
         nr% = nrnichts%
         tex$ = "ALLGEMEIN-"
         nrnichts.stamm = nrnichts%
       CASE 1
         REM Angebot
         nrAng% = nrAng.stamm
         nrAng% = nrAng% + 1
         nr% = nrAng%
         nrAng.stamm = nrAng%
         tex$ = "ANGEBOT-"
       CASE 2
         REM Rechnung
         nrRech% = nrRech.stamm
         nrRech% = nrRech% + 1
         nr% = nrRech%
         nrRech.stamm = nrRech%
         tex$ = "RECHNUNG-"
       CASE 3
         REM Lieferschein
         nrLief% = nrLief.stamm
         nrLief% = nrLief% + 1
         nr% = nrLief%
         nrLief.stamm = nrLief%
         tex$ = "LIEFERSCH-"
       CASE 4
         REM Auftrag
         nrAuf% = nrAuf.stamm
         nrAuf% = nrAuf% + 1
         nr% = nrAuf%
         nrAuf.stamm = nrAuf%
         tex$ = "AUFTRAG-"
       CASE 5
         REM Bestellung
         nrBest% = nrBest.stamm
         nrBest% = nrBest% + 1
         nr% = nrBest%
         nrBest.stamm = nrBest%
         tex$ = "BESTELLUNG-"
       CASE 7
         REM Gutschrift
         nrGut% = nrGut.stamm
         nrGut% = nrGut% + 1
         nr% = nrGut%
         nrGut.stamm = nrGut%
         tex$ = "GUTSCHR-"
       CASE 8
         REM NachliRef. Lieferschein
         nrNLief% = nrNLief.stamm
         nrNLief% = nrNLief% + 1
         nr% = nrNLief%
         nrNLief.stamm = nrNLief%
         tex$ = "NLIEFERSCH-"
       CASE 9
         REM Nachlief. Rechnung
         nrNRech% = nrNRech.stamm
         nrNRech% = nrNRech% + 1
         nr% = nrNRech%
         nrNRech.stamm = nrNRech%
         tex$ = "NRECHNUNG-"
       CASE 11
         REM 1. Mahnung
         nr1Mahn% = nr1Mahn.stamm
         nr1Mahn% = nr1Mahn% + 1
         nr% = nr1Mahn%
         nr1Mahn.stamm = nr1Mahn%
         tex$ = "1.MAHNUNG-"
       CASE 12
         REM 2. Mahnung
         nr2Mahn% = nr2Mahn.stamm
         nr2Mahn% = nr2Mahn% + 1
         nr% = nr2Mahn%
         nr2Mahn.stamm = nr2Mahn%
         tex$ = "2.MAHNUNG-"
       CASE 13
         REM 3. Mahnung
         nr3Mahn% = nr3Mahn.stamm
         nr3Mahn% = nr3Mahn% + 1
         nr% = nr3Mahn%
         nr3Mahn.stamm = nr3Mahn%
         tex$ = "3.MAHNUNG-"
       CASE 14
         REM 4. Mahnung
         nr4Mahn% = nr4Mahn.stamm
         nr4Mahn% = nr4Mahn% + 1
         nr% = nr4Mahn%
         nr4Mahn.stamm = nr4Mahn%
         tex$ = "4.MAHNUNG-"
       CASE 15
         REM 5. Mahnung
         nr5Mahn% = nr5Mahn.stamm
         nr5Mahn% = nr5Mahn% + 1
         nr% = nr5Mahn%
         nr5Mahn.stamm = nr5Mahn%
         tex$ = "5.MAHNUNG-"
       END SELECT 
       STORE FILE "stamm"
       SELECT CASE art.floskel
         CASE 0
           tex$ = tex$ + "Allg-"
         CASE 1
           tex$ = tex$ + "Kopf-"
         CASE 2
           tex$ = tex$ + "Fu·-"
       END SELECT 
       SELECT CASE sprache.floskel
         CASE 0
           tex$ = tex$ + "GER-"
         CASE 1
           tex$ = tex$ + "ENG-"
       END SELECT 
       sortnummer.floskel = tex$ + STR$ (nr%,"000")

     END IF 
     IF Kurztext.floskel = "" THEN 
       Kurztext.floskel = LEFT$ (floskel.floskel,100)
     END IF 
     STORE FILE "floskel"
     SELECT NEXT LOCK FILE "floskel"
   WEND 

   SELECT FIRST LOCK FILE "floskel"
   WHILE NOT EOF ("floskel")
     SELECT FIRST LOCK FILE "stamm"
     IF spezial.floskel <> 0 OR zugart.floskel = - 01 THEN zugart.floskel = spezial.floskel
     IF sortnummer.floskel = "" THEN 
       REM standard festlegung
       SELECT CASE zugArt.floskel
       CASE 0
         REM nichts
         nrnichts% = nrnichts.stamm
         nrnichts% = nrnichts% + 1
         nr% = nrnichts%
         tex$ = "ALLGEMEIN-"
         nrnichts.stamm = nrnichts%
       CASE 1
         REM Angebot
         nrAng% = nrAng.stamm
         nrAng% = nrAng% + 1
         nr% = nrAng%
         nrAng.stamm = nrAng%
         tex$ = "ANGEBOT-"
       CASE 2
         REM Rechnung
         nrRech% = nrRech.stamm
         nrRech% = nrRech% + 1
         nr% = nrRech%
         nrRech.stamm = nrRech%
         tex$ = "RECHNUNG-"
       CASE 3
         REM Lieferschein
         nrLief% = nrLief.stamm
         nrLief% = nrLief% + 1
         nr% = nrLief%
         nrLief.stamm = nrLief%
         tex$ = "LIEFERSCH-"
       CASE 4
         REM Auftrag
         nrAuf% = nrAuf.stamm
         nrAuf% = nrAuf% + 1
         nr% = nrAuf%
         nrAuf.stamm = nrAuf%
         tex$ = "AUFTRAG-"
       CASE 5
         REM Bestellung
         nrBest% = nrBest.stamm
         nrBest% = nrBest% + 1
         nr% = nrBest%
         nrBest.stamm = nrBest%
         tex$ = "BESTELLUNG-"
       CASE 7
         REM Gutschrift
         nrGut% = nrGut.stamm
         nrGut% = nrGut% + 1
         nr% = nrGut%
         nrGut.stamm = nrGut%
         tex$ = "GUTSCHR-"
       CASE 8
         REM NachliRef. Lieferschein
         nrNLief% = nrNLief.stamm
         nrNLief% = nrNLief% + 1
         nr% = nrNLief%
         nrNLief.stamm = nrNLief%
         tex$ = "NLIEFERSCH-"
       CASE 9
         REM Nachlief. Rechnung
         nrNRech% = nrNRech.stamm
         nrNRech% = nrNRech% + 1
         nr% = nrNRech%
         nrNRech.stamm = nrNRech%
         tex$ = "NRECHNUNG-"
       CASE 11
         REM 1. Mahnung
         nr1Mahn% = nr1Mahn.stamm
         nr1Mahn% = nr1Mahn% + 1
         nr% = nr1Mahn%
         nr1Mahn.stamm = nr1Mahn%
         tex$ = "1.MAHNUNG-"
       CASE 12
         REM 2. Mahnung
         nr2Mahn% = nr2Mahn.stamm
         nr2Mahn% = nr2Mahn% + 1
         nr% = nr2Mahn%
         nr2Mahn.stamm = nr2Mahn%
         tex$ = "2.MAHNUNG-"
       CASE 13
         REM 3. Mahnung
         nr3Mahn% = nr3Mahn.stamm
         nr3Mahn% = nr3Mahn% + 1
         nr% = nr3Mahn%
         nr3Mahn.stamm = nr3Mahn%
         tex$ = "3.MAHNUNG-"
       CASE 14
         REM 4. Mahnung
         nr4Mahn% = nr4Mahn.stamm
         nr4Mahn% = nr4Mahn% + 1
         nr% = nr4Mahn%
         nr4Mahn.stamm = nr4Mahn%
         tex$ = "4.MAHNUNG-"
       CASE 15
         REM 5. Mahnung
         nr5Mahn% = nr5Mahn.stamm
         nr5Mahn% = nr5Mahn% + 1
         nr% = nr5Mahn%
         nr5Mahn.stamm = nr5Mahn%
         tex$ = "5.MAHNUNG-"
       END SELECT 
       STORE FILE "stamm"
       SELECT CASE art.floskel
         CASE 0
           tex$ = tex$ + "Allg-"
         CASE 1
           tex$ = tex$ + "Kopf-"
         CASE 2
           tex$ = tex$ + "Fu·-"
       END SELECT 
       SELECT CASE sprache.floskel
         CASE 0
           tex$ = tex$ + "GER-"
         CASE 1
           tex$ = tex$ + "ENG-"
       END SELECT 
       sortnummer.floskel = tex$ + STR$ (nr%,"000")
       IF Kurztext.floskel = "" THEN 
         Kurztext.floskel = LEFT$ (floskel.floskel,100)
       END IF 
     END IF 
     IF Kurztext.floskel = "" THEN 
       Kurztext.floskel = LEFT$ (floskel.floskel,100)
     END IF 
     STORE FILE "floskel"
     SELECT NEXT LOCK FILE "floskel"
   WEND 
  
 
   REM Anpassung VERTRETE.SBF
   REM ================================================
 
   CALL DFile(3,"vertrete" + _fpw$)
   FILE "vertrete"
   CALL FldAdd("ProGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("ReGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("AngGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("BesGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("AufGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("LieGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("GutGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("novi1","NMI;0.",0)
   CALL FldAdd("DatumNovi","DAT;0d.mm.yyyy",0)
   SAVE FILE "vertrete"
   REM Anpassung EINZPROV.SBF
   REM ================================================
 
   CALL DFile(3,"EINZPROV" + _fpw$)
   FILE "EINZPROV"
   CALL FldAdd("Kundname","TXT;150",0)
   CALL FldAdd("GesNettoEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesBruttoEu","NUM;,999999999999.00",0)
   CALL FldAdd("ProvisEU","NUM;,999999999999.00",0)
   CALL FldAdd("Nummer","TXT;30",0)
   SAVE FILE "EINZPROV"
   REM Anpassung teilrein
   REM ================================================
 
   CALL DFile(3,"Teilrein" + _fpw$)
   FILE "Teilrein"
   CALL FldAdd("Nachname","TXT;100",1)
   CALL FldAdd("Vorname","TXT;100",1)
   CALL FldAdd("SummeMahn","NUM;,999999999999.00",0)
   CALL FldAdd("SummeMahnEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesMahn","NUM;,999999999999.00",0)
   CALL FldAdd("GesMahnEu","NUM;,999999999999.00",0)
   CALL FldAdd("SummeTeil","NUM;,999999999999.00",0)
   CALL FldAdd("SummeTeilEu","NUM;,999999999999.00",0)
   CALL FldAdd("K1Bank","TXT;50",0)
   CALL FldAdd("K1BLZ","TXT;8",0)
   CALL FldAdd("K1Konto","TXT;10",0)
   CALL FldAdd("K2Bank","TXT;50",0)
   CALL FldAdd("K2BLZ","TXT;8",0)
   CALL FldAdd("K2Konto","TXT;10",0)
   CALL FldAdd("K1Art","TXT;50",0)
   CALL FldAdd("K2Art","TXT;50",0)
   CALL FldAdd("K1Inh","TXT;50",0)
   CALL FldAdd("K2Inh","TXT;50",0)
   CALL FldAdd("K1IBAN","TXT;50",0)
   CALL FldAdd("K2IBAN","TXT;50",0)
   CALL FldAdd("K1Swift","TXT;50",0)
   CALL FldAdd("K2Swift","TXT;50",0)
   CALL FldAdd("K3Bank","TXT;50",0)
   CALL FldAdd("K3BLZ","TXT;8",0)
   CALL FldAdd("K3Konto","TXT;10",0)
   CALL FldAdd("K3Art","TXT;50",0)
   CALL FldAdd("K3Inh","TXT;50",0)
   CALL FldAdd("K3IBAN","TXT;50",0)
   CALL FldAdd("K3Swift","TXT;50",0)
   SAVE FILE "Teilrein"
   UPDATE waehrung.Teilrein = "EUR" WHERE waehrung.Teilrein LIKE "EUR*"
   END UPDATE 

   REM Anpassung teilraus
   REM ================================================
 
   CALL DFile(3,"Teilraus" + _fpw$)
   FILE "Teilraus"
   CALL FldAdd("Nachname","TXT;100",1)
   CALL FldAdd("Vorname","TXT;100",1)
   CALL FldAdd("SummeMahn","NUM;,999999999999.00",0)
   CALL FldAdd("SummeMahnEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesMahn","NUM;,999999999999.00",0)
   CALL FldAdd("GesMahnEu","NUM;,999999999999.00",0)
   CALL FldAdd("SummeTeil","NUM;,999999999999.00",0)
   CALL FldAdd("SummeTeilEu","NUM;,999999999999.00",0)
   CALL FldAdd("K1Bank","TXT;50",0)
   CALL FldAdd("K1BLZ","TXT;8",0)
   CALL FldAdd("K1Konto","TXT;10",0)
   CALL FldAdd("K2Bank","TXT;50",0)
   CALL FldAdd("K2BLZ","TXT;8",0)
   CALL FldAdd("K2Konto","TXT;10",0)
   CALL FldAdd("K1Art","TXT;50",0)
   CALL FldAdd("K2Art","TXT;50",0)
   CALL FldAdd("K1Inh","TXT;50",0)
   CALL FldAdd("K2Inh","TXT;50",0)
   CALL FldAdd("K1IBAN","TXT;50",0)
   CALL FldAdd("K2IBAN","TXT;50",0)
   CALL FldAdd("K1Swift","TXT;50",0)
   CALL FldAdd("K2Swift","TXT;50",0)
   CALL FldAdd("K3Bank","TXT;50",0)
   CALL FldAdd("K3BLZ","TXT;8",0)
   CALL FldAdd("K3Konto","TXT;10",0)
   CALL FldAdd("K3Art","TXT;50",0)
   CALL FldAdd("K3Inh","TXT;50",0)
   CALL FldAdd("K3IBAN","TXT;50",0)
   CALL FldAdd("K3Swift","TXT;50",0)
   SAVE FILE "Teilraus"
   UPDATE waehrung.Teilraus = "EUR" WHERE waehrung.Teilraus LIKE "EUR*"
   END UPDATE 
 
   REM Anpassung RAUSGANG.SBF
   REM ================================================
   CALL DFile(3,"WARENART" + _fpw$)
   FILE "WARENART"
   INDEX codewa.warenart
   CALL DFile(3,"WAGRUPPE" + _fpw$)
   FILE "WAGRUPPE"
   INDEX codewgru.wagruppe
   CALL FldAdd("ENetto","NUM;,9999999999.00",0)
   CALL FldAdd("EBrutto","NUM;,9999999999.00",0)
   CALL FldAdd("EMwst","NUM;,9999999999.00",0)
   CALL FldAdd("ETeil","NUM;,9999999999.00",0)
   CALL FldAdd("ETeilRest","NUM;,9999999999.00",0)
   CALL FldAdd("EMahn","NUM;,9999999999.00",0)
   CALL FldAdd("ETeilMahn","NUM;,9999999999.00",0)
   CALL FldAdd("ANetto","NUM;,9999999999.00",0)
   CALL FldAdd("ABrutto","NUM;,9999999999.00",0)
   CALL FldAdd("AMwst","NUM;,9999999999.00",0)
   CALL FldAdd("AMahn","NUM;,9999999999.00",0)
   CALL FldAdd("ATeilMahn","NUM;,9999999999.00",0)
   CALL FldAdd("ATeil","NUM;,9999999999.00",0)
   CALL FldAdd("AteilRest","NUM;,9999999999.00",0)
   SAVE FILE "WAGRUPPE"

   CALL DFile(3,"RAUSGANG" + _fpw$)
   FILE "RAUSGANG"
   CALL FldAdd("LRENummer","TXT;30",1)
   CALL FldAdd("Kundennummer","TXT;20",1)
   CALL FldAdd("Nachname","TXT;100",1)
   CALL FldAdd("Vorname","TXT;100",1)
   CALL FldAdd("GesNetto","NUM;,999999999999.00",0)
   CALL FldAdd("GesBrutto","NUM;,999999999999.00",0)
   CALL FldAdd("GesNettoTeil","NUM;,999999999999.00",0)
   CALL FldAdd("GesBruttoTeil","NUM;,999999999999.00",0)
   CALL FldAdd("GesNettoTeilEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesBruttoTeilEU","NUM;,999999999999.00",0)
   CALL FldAdd("GesBruttoSK","NUM;,999999999999.00",0)
   CALL FldAdd("GesNettoSK","NUM;,999999999999.00",0)
   CALL FldAdd("PreisNetto","NUM;,999999999999.00",0)
   CALL FldAdd("PreisBrutto","NUM;,999999999999.00",0)
   CALL FldAdd("Provis","NUM;,999999999999.00",0)
   CALL FldAdd("RABATT","NUM;,999999999999.00",0)
   CALL FldAdd("MWSTDM","NUM;,999999999999.00",0)
   CALL FldAdd("Skonto","NUM;,999999999999.00",0)
   CALL FldAdd("GesGutschr","NUM;999999999999.00",0)
 
   CALL FldAdd("GesNettoEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesBruttoEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesNettoSKEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesBruttoSKEu","NUM;,999999999999.00",0)
   CALL FldAdd("PreisNettoEu","NUM;,999999999999.00",0)
   CALL FldAdd("PreisBruttoEu","NUM;,999999999999.00",0)
   CALL FldAdd("ProvisEU","NUM;,999999999999.00",0)
   CALL FldAdd("RABATTEU","NUM;,999999999999.00",0)
   CALL FldAdd("MWSTEU","NUM;,999999999999.00",0)
   CALL FldAdd("SkontoEU","NUM;,999999999999.00",0)
   CALL FldAdd("GesGutschrEu","NUM;999999999999.00",0)
 
   CALL FldAdd("Umrechnung","NUM;,99999999.000000",0)
   CALL FldAdd("CodeW","NUM;000000.",1)
   CALL FldAdd("Waehrung","TXT;6",0)
   CALL FldAdd("WaehrungBezeich","TXT;30",0)
   CALL FldAdd("MahnJN","TXT;1",1)
   CALL FldAdd("CodePR","NUM;000000.",1)
   CALL FldAdd("Projekt","TXT;120",1)
   CALL FldAdd("CodeTeil","NUM;000000.",1)
   CALL FldAdd("SummeTeil","NUM;,999999999999.00",0)
   CALL FldAdd("SummeTeilEu","NUM;,999999999999.00",0)
   CALL FldAdd("Soll","NUM;,999999999999.00",0)
   CALL FldAdd("SummeMahn","NUM;,999999999999.00",0)
   CALL FldAdd("SummeMahnEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesMahn","NUM;,999999999999.00",0)
   CALL FldAdd("GesMahnEu","NUM;,999999999999.00",0)
   CALL FldAdd("Handbuchung","NUM;0.",0)
   CALL FldAdd("TeilErlaubt","NMI;0.",0)
   CALL FldAdd("Nummer2","NUM;99999999999999.",1)
   CALL FldAdd("codewgru","NUM;000000.",1)
   CALL FldAdd("WGruppe","TXT;50",0)
   CALL FldAdd("QRenummer","TXT;40",1)
   CALL FldAdd("Mahnsperre","TXT;1",1)
   CALL FldAdd("MahnsperBisdat","DAT;0d.mm.yyyy",1)
   CALL FldAdd("BuchnrRe","TXT;30",1)
   CALL FldAdd("oldReNr","TXT;30",1)
   CALL FldAdd("Mahnstufe","NMI;0.",0)
   SAVE FILE "RAUSGANG"
   dat$ = "RAUSGANG"
   CALL DFile(3,"WAEHRUNG" + _fpw$)
   FILE "Waehrung"
   INDEX waehrung.waehrung
   SELECT FIRST 
   WHILE NOT EOF ("WAEHRUNG") AND GIndneu% = - 1
     IF UCASE$ (waehrung.waehrung) = zweitwaehr$ THEN 
       euro1% = umrechnung.waehrung
       codew1% = codew.waehrung
       waehrung1$ = waehrung.waehrung
       wbez1$ = WaehrungBezeich.waehrung
       aa% = 1
     END IF 
   SELECT NEXT 
   WEND 



   FILE "rausgang"
   INDEX codere.rausgang
   FILE "Mahnung"
   IF RECCOUNT ("Mahnung") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   WHILE NOT EOF ("mahnung")
     IF codeku.mahnung < 1 THEN 
       codere% = codere.mahnung
       SELECT KEY codere% FILE "rausgang" INDEX codere.rausgang
       IF codere.mahnung = codere% THEN 
         codeku.mahnung = codeku.rausgang
         nachname.mahnung = nachname.rausgang
         vorname.mahnung = vorname.rausgang
         Stra·e.mahnung = Stra·e.rausgang
         Ort.mahnung = ort.rausgang
         plz.mahnung = plz.rausgang
         PreisNetto.mahnung = PreisNetto.rausgang
         GesNetto.mahnung = GesNetto.rausgang
         rabatt.mahnung = rabatt.rausgang
         RabattEu.mahnung = RabattEu.rausgang
         skonto.mahnung = skonto.rausgang
         SkontoZiel.mahnung = SkontoZiel.rausgang
         skontoproz.mahnung = skontoproz.rausgang
         gesbrutto.mahnung = gesbrutto.rausgang
         mwst.mahnung = mwst.rausgang
         preisbrutto.mahnung = preisbrutto.rausgang
         Kundennummer.mahnung = Kundennummer.rausgang
         Lieferdatum.mahnung = Lieferdatum.rausgang
         IF ZahlDatum.rausgang > 0 THEN 
           ZahlDatum.mahnung = ZahlDatum.rausgang
         END IF 
 
         STORE FILE "mahnung"
       END IF 
     END IF 
     SELECT NEXT LOCK FILE "mahnung" INDEX codemahn.mahnung
   WEND 




   FILE "ADRESSEN"
   INDEX codeku.adressen
   SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
   FILE "master"
   INDEX codems.master
   FILE "RAUSGANG"
   INDEX codere.RAUSGANG
   UPDATE waehrung.RAUSGANG = "EUR" WHERE waehrung.RAUSGANG LIKE "EUR*"
   END UPDATE 

   IF RECCOUNT ("RAUSGANG") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   i% = 0
   ok% = 1
   WHILE NOT EOF ("RAUSGANG")
     i% = i% + 1
     SET STATUS STR$ (i%,"999999") + " Ausgangsrechnungen angepa·t von " + STR$ ( RECCOUNT ("rausgang"),",999999")
     IF umrechnung.RAUSGANG < 0.0001 THEN 
       umrechnung.RAUSGANG = euro1%
       codew.RAUSGANG = codew1%
       waehrung.RAUSGANG = waehrung1$
       WaehrungBezeich.RAUSGANG = wbez1$
       CALL REDMEuro(dat$)
       ok% = - 1
     END IF 
     IF MahnJN.rausgang LIKE "J" THEN 
       codere% = codere.rausgang
       IF EXISTS (codere%,codere.mahnung) THEN 
         SELECT FIRST FILE "mahnung" INDEX codere.mahnung
         SELECT KEY codere% FILE "mahnung" INDEX codere.mahnung
         mstufe% = 0
         IF MahnDatum1.mahnung > 0 THEN mstufe% = 1
         IF MahnDatum2.mahnung > 0 THEN mstufe% = 2
         IF MahnDatum3.mahnung > 0 THEN mstufe% = 3
         IF MahnDatum4.mahnung > 0 THEN mstufe% = 4
         IF MahnDatum5.mahnung > 0 THEN mstufe% = 5
         Mahnstufe.rausgang = mstufe%
       END IF 
     END IF 
     IF codepr.rausgang < 1 THEN 
       codems% = codems.rausgang
       SELECT KEY codems% FILE "master" INDEX codems.master
       IF codems.master = codems% THEN 
         IF codepr.master > 0 THEN 
           codepr.rausgang = codepr.master
           Projekt.rausgang = Projekt.master
           ok% = - 1
         END IF 
         IF lieferdatum.master <> Lieferdatum.rausgang THEN 
           Lieferdatum.rausgang = lieferdatum.master
            ok% = - 1
         END IF 
       END IF 
     END IF 
     IF erledigt.rausgang = "J" THEN 
       IF NOT EXISTS (codere.rausgang,codere.teilraus) THEN 
         ok% = - 1
         IF UCASE$ (gezmitskonto.dat$) = "J" THEN 
           SummeTeil.rausgang = GesBrutto.rausgang - skonto.rausgang
           SummeTeilEu.rausgang = GesBruttoEu.rausgang - skontoEU.rausgang
         ELSE 
           SummeTeil.rausgang = GesBrutto.rausgang
           SummeTeilEu.rausgang = GesBruttoEu.rausgang
         END IF 
       END IF 
     END IF 
     IF Nummer2.rausgang < 1 THEN 
       nummer2.rausgang = codems.rausgang
       ok% = - 1
     END IF 
     IF Kundennummer.rausgang = "" AND codeku.rausgang > 0 THEN 
       codeku% = codeku.rausgang
       SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
       SELECT KEY codeku% FILE "ADRESSEN" INDEX codeku.adressen
       Kundennummer.rausgang = Kundennummer.adressen
       ok% = - 1
     END IF 
     IF codewgru.rausgang > 0 THEN 
       SELECT FIRST FILE "WAGRUPPE" INDEX codewgru.wagruppe
       SELECT KEY codewgru.rausgang FILE "WAGRUPPE" INDEX codewgru.wagruppe
       WGruppe.rausgang = wgruppe.wagruppe
       ok% = - 1
     END IF 
     IF codewa.rausgang > 0 THEN 
       SELECT FIRST FILE "WARENART" INDEX codewa.WARENART
       SELECT KEY codewa.rausgang FILE "WARENART" INDEX codewa.WARENART
       WARENART.rausgang = WARENART.WARENART
       ok% = - 1
     END IF 

     IF EXISTS (codems.rausgang,codems.master) THEN 
       IF GutschriftJN.rausgang LIKE "J" THEN 
         SELECT FIRST FILE "master" INDEX codems.master
         SELECT KEY codems.rausgang LOCK FILE "master" INDEX codems.master
         buchnrre.rausgang = buchnrre.master
       END IF 
       STORE FILE "rausgang"
     END IF 
 
     IF summeteil.rausgang = 0 THEN 
       summeteil.rausgang = 0.00
     END IF 
     IF summeteileu.rausgang = 0 THEN 
       summeteileu.rausgang = 0.00
     END IF 
     IF Gesmahn.rausgang = 0 THEN 
       Gesmahn.rausgang = 0.00
     END IF 
     IF Gesmahneu.rausgang = 0 THEN 
       Gesmahneu.rausgang = 0.00
     END IF 
     IF Summemahn.rausgang = 0 THEN 
       summemahn.rausgang = 0.00
     END IF 
     IF Summemahneu.rausgang = 0 THEN 
       summemahneu.rausgang = 0.00
     END IF 
     QRENummer.rausgang = VSNRPack$(LRENummer.rausgang)

     ok% = - 1
     ON ERROR GOTO wei040320051
  
     IF ok% = - 1 THEN STORE FILE "RAUSGANG"
wei040320051: 
     ON ERROR GOTO ErrorHandler
     IF EXISTS (codems.rausgang,codems.master) AND codems.rausgang > 0 THEN 
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT KEY codems.rausgang LOCK FILE "master" INDEX codems.master
       IF erledigt.rausgang LIKE "j" THEN 
         erledigt.master = "J"
         erledigtDatum.master = gezahltam.rausgang
       ELSE 
         erledigt.master = "N"
       END IF 
       STORE FILE "master"
     END IF 
     SELECT NEXT LOCK FILE "RAUSGANG"
     ok% = 1
   WEND 
 
 
 
 
   REM Anpassung REINGANG.SBF
   REM ================================================
   CALL DFile(3,"TEILREIN" + _fpw$)
   CALL DFile(3,"WARENART" + _fpw$)
   FILE "WARENART"
   INDEX codewa.warenart
   CALL DFile(3,"WAGRUPPE" + _fpw$)
   FILE "WAGRUPPE"
   INDEX codewgru.wagruppe
   CALL DFile(3,"REINGANG" + _fpw$)
   FILE "REINGANG"
   CALL FldAdd("CodeMS","NUM;000000.",1)
   CALL FldAdd("LRENummer","TXT;30",1)
   CALL FldAdd("Nachname","TXT;100",1)
   CALL FldAdd("Vorname","TXT;100",1)
   CALL FldAdd("GesNetto","NUM;,999999999999.00",0)
   CALL FldAdd("GesBrutto","NUM;,999999999999.00",0)
   CALL FldAdd("GesNettoTeil","NUM;,999999999999.00",0)
   CALL FldAdd("GesBruttoTeil","NUM;,999999999999.00",0)
   CALL FldAdd("GesNettoTeilEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesBruttoTeilEU","NUM;,999999999999.00",0)
   CALL FldAdd("GesBruttoSK","NUM;,999999999999.00",0)
   CALL FldAdd("GesNettoSK","NUM;,999999999999.00",0)
   CALL FldAdd("PreisNetto","NUM;,999999999999.00",0)
   CALL FldAdd("PreisBrutto","NUM;,999999999999.00",0)
   CALL FldAdd("Provis","NUM;,999999999999.00",0)
   CALL FldAdd("RABATT","NUM;,999999999999.00",0)
   CALL FldAdd("MWSTDM","NUM;,999999999999.00",0)
   CALL FldAdd("Skonto","NUM;,999999999999.00",0)
   CALL FldAdd("GesGutschr","NUM;999999999999.00",0)
 
   CALL FldAdd("GesNettoEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesBruttoEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesNettoSKEU","NUM;,999999999999.00",0)
   CALL FldAdd("GesBruttoSKEu","NUM;,999999999999.00",0)
   CALL FldAdd("PreisNettoEu","NUM;,999999999999.00",0)
   CALL FldAdd("PreisBruttoEu","NUM;,999999999999.00",0)
   CALL FldAdd("ProvisEU","NUM;,999999999999.00",0)
   CALL FldAdd("RABATTEU","NUM;,999999999999.00",0)
   CALL FldAdd("MWSTEU","NUM;,999999999999.00",0)
   CALL FldAdd("SkontoEU","NUM;,999999999999.00",0)
   CALL FldAdd("GesGutschrEu","NUM;999999999999.00",0)
 
   CALL FldAdd("Umrechnung","NUM;,99999999.000000",0)
   CALL FldAdd("CodeW","NUM;000000.",1)
   CALL FldAdd("Waehrung","TXT;6",0)
   CALL FldAdd("WaehrungBezeich","TXT;30",0)
   CALL FldAdd("CodePR","NUM;000000.",1)
   CALL FldAdd("Projekt","TXT;120",1)
   CALL FldAdd("CodeTeil","NUM;000000.",1)
   CALL FldAdd("SummeTeil","NUM;,999999999999.00",0)
   CALL FldAdd("SummeTeilEu","NUM;,999999999999.00",0)
   CALL FldAdd("Soll","NUM;,999999999999.00",0)
   CALL FldAdd("SummeMahn","NUM;,999999999999.00",0)
   CALL FldAdd("SummeMahnEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesMahn","NUM;,999999999999.00",0)
   CALL FldAdd("GesMahnEu","NUM;,999999999999.00",0)
   CALL FldAdd("Handbuchung","NUM;0.",0)
   CALL FldAdd("TeilErlaubt","NMI;0.",0)
   CALL FldAdd("Netto1","NUM;,999999999999.00",0)
   CALL FldAdd("Mwst1","NUM;,999999999999.00",0)
   CALL FldAdd("Brutto1","NUM;,999999999999.00",0)
   CALL FldAdd("mst1proz","NUM;,999.00",0)
   CALL FldAdd("Nummer2","NUM;99999999999999.",1)
   CALL FldAdd("codewgru","NUM;000000.",1)
   CALL FldAdd("WGruppe","TXT;50",0)
   CALL FldAdd("MahnJN","TXT;1",1)
   CALL FldAdd("MDatum1","DAT;0d.mm.yyyy",0)
   CALL FldAdd("MDatum2","DAT;0d.mm.yyyy",0)
   CALL FldAdd("MDatum3","DAT;0d.mm.yyyy",0)
   CALL FldAdd("MDatum4","DAT;0d.mm.yyyy",0)
   CALL FldAdd("MDatum5","DAT;0d.mm.yyyy",0)
   CALL FldAdd("MBetr1","NUM;,99999.00",0)
   CALL FldAdd("MBetr2","NUM;,99999.00",0)
   CALL FldAdd("MBetr3","NUM;,99999.00",0)
   CALL FldAdd("MBetr4","NUM;,99999.00",0)
   CALL FldAdd("MBetr5","NUM;,99999.00",0)
   CALL FldAdd("MErl1","TXT;1",0)
   CALL FldAdd("MErl2","TXT;1",0)
   CALL FldAdd("MErl3","TXT;1",0)
   CALL FldAdd("MErl4","TXT;1",0)
   CALL FldAdd("MErl5","TXT;1",0)
   CALL FldAdd("QRenummer","TXT;40",1)
   CALL FldAdd("MCodeTeil1","NUM;000000.",0)
   CALL FldAdd("MCodeTeil2","NUM;000000.",0)
   CALL FldAdd("MCodeTeil3","NUM;000000.",0)
   CALL FldAdd("MCodeTeil4","NUM;000000.",0)
   CALL FldAdd("MCodeTeil5","NUM;000000.",0)
   CALL FldAdd("Mahnsperre","TXT;1",1)
   CALL FldAdd("MahnsperBisdat","DAT;0d.mm.yyyy",1)
   CALL FldAdd("BuchnrRe","TXT;30",1)
   CALL FldAdd("Kundennummer","TXT;20",1)
   CALL FldAdd("Mahnstufe","NMI;0.",0)
   SAVE FILE "REINGANG"
   dat$ = "REINGANG"
   CALL DFile(3,"WAEHRUNG" + _fpw$)
   FILE "Waehrung"
   INDEX waehrung.waehrung
   SELECT FIRST 
   WHILE NOT EOF ("WAEHRUNG")
     IF UCASE$ (waehrung.waehrung) = zweitwaehr$ THEN 
       euro1% = umrechnung.waehrung
       codew1% = codew.waehrung
       waehrung1$ = waehrung.waehrung
       wbez1$ = WaehrungBezeich.waehrung
       aa% = 1
     END IF 
   SELECT NEXT 
   WEND 
   FILE "ADRESSEN"
   INDEX codeku.adressen
   SELECT FIRST 
   FILE "REINGANG"
   INDEX codere.REINGANG
   UPDATE waehrung.REINGANG = "EUR" WHERE waehrung.REINGANG LIKE "EUR*"
   END UPDATE 
   UPDATE umrechnung.REINGANG = 1.95583 WHERE waehrung.REINGANG LIKE "DM*"
   END UPDATE 
   IF RECCOUNT ("REINGANG") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   i% = 0
   WHILE NOT EOF ("REINGANG")
     i% = i% + 1
     ok% = 0
     SET STATUS STR$ (i%,"999999") + " Eingangsrechnungen angepa·t"
     IF umrechnung.REINGANG < 0.0001 THEN 
       umrechnung.REINGANG = euro1%
       codew.REINGANG = codew1%
       waehrung.REINGANG = waehrung1$
       WaehrungBezeich.REINGANG = wbez1$
       CALL REDMEuro(dat$)
       ok% = - 1
     END IF 
     IF SummeTeilEu.reingang = 0 THEN 
       ok% = - 1
       REM ************************************************************
     i% = i% + 1
     SET STATUS STR$ (i%,"999999") + " Eingangsrechnungen angepa·t"
     IF umrechnung.REINGANG < 0.0001 THEN 
       umrechnung.REINGANG = euro1%
       codew.REINGANG = codew1%
       waehrung.REINGANG = waehrung1$
       WaehrungBezeich.REINGANG = wbez1$
       CALL REDMEuro(dat$)
     END IF 
     gesnetto.dat$ = gesnettoeu.dat$ * umrechnung.dat$
     gesbrutto.dat$ = gesbruttoeu.dat$ * umrechnung.dat$
     gesnettosk.dat$ = gesnettoskeu.dat$ * umrechnung.dat$
     gesbruttosk.dat$ = gesbruttoskeu.dat$ * umrechnung.dat$
     preisnetto.dat$ = preisnettoeu.dat$ * umrechnung.dat$
     preisbrutto.dat$ = preisbruttoeu.dat$ * umrechnung.dat$
     provis.dat$ = proviseu.dat$ * umrechnung.dat$
     rabatt.dat$ = rabatteu.dat$ * umrechnung.dat$
     mwstdm.dat$ = MwSteu.dat$ * umrechnung.dat$
     skonto.dat$ = skontoeu.dat$ * umrechnung.dat$
     GesGutschr.dat$ = GesGutschreu.dat$ * umrechnung.dat$
     GesNettoteil.dat$ = gesnettoteileu.dat$ * umrechnung.dat$
     GesBruttoteil.dat$ = gesbruttoteileu.dat$ * umrechnung.dat$
     IF dat$ LIKE "REINGANG" THEN 
       IF erledigt.dat$ LIKE "J" AND NOT EXISTS (codere.dat$,codere.teilrein) THEN 
         GesMahnEu.dat$ = MBetr1.dat$ + MBetr2.dat$ + MBetr3.dat$ + MBetr4.dat$ + MBetr5.dat$
         SummeMahnEu.dat$ = 0
         IF Merl1.dat$ LIKE "J" THEN SummeMahnEu.dat$ = MBetr1.dat$
         IF Merl2.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr2.dat$
         IF Merl3.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr3.dat$
         IF Merl4.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr4.dat$
         IF Merl5.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr5.dat$
         SummeTeilEu.dat$ = GesBruttoEu.dat$ + SummeMahnEu.dat$
         SummeMahnEu.dat$ = GesMahnEu.dat$
         restEu% = GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$
       ELSE 
         IF NOT EXISTS (codere.dat$,codere.teilrein) THEN 
           GesMahnEu.dat$ = MBetr1.dat$ + MBetr2.dat$ + MBetr3.dat$ + MBetr4.dat$ + MBetr5.dat$
           SummeMahnEu.dat$ = 0
           IF Merl1.dat$ LIKE "J" THEN SummeMahnEu.dat$ = MBetr1.dat$
           IF Merl2.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr2.dat$
           IF Merl3.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr3.dat$
           IF Merl4.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr4.dat$
           IF Merl5.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr5.dat$
           SummeTeilEu.dat$ = GesBruttoEu.dat$ + SummeMahnEu.dat$
           SummeMahnEu.dat$ = GesMahnEu.dat$
           restEu% = GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$
           SummeTeilEU.dat$ = SummeMahnEu.dat$
         END IF 
       END IF 
     END IF 
 
       REM ************************************************************
     END IF 
     IF Kundennummer.reingang = "" AND codeku.reingang > 0 THEN 
       codeku% = codeku.reingang
       SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
       SELECT KEY codeku% FILE "ADRESSEN" INDEX codeku.adressen
       Kundennummer.reingang = Kundennummer.adressen
       ok% = - 1
     END IF 

     IF codewgru.reingang > 0 THEN 
       SELECT FIRST FILE "WAGRUPPE" INDEX codewgru.wagruppe
       SELECT KEY codewgru.reingang FILE "WAGRUPPE" INDEX codewgru.wagruppe
       WGruppe.reingang = wgruppe.wagruppe
       ok% = - 1
     END IF 
     IF codewa.reingang > 0 THEN 
       SELECT FIRST FILE "WARENART" INDEX codewa.WARENART
       SELECT KEY codewa.reingang FILE "WARENART" INDEX codewa.WARENART
       WARENART.reingang = WARENART.WARENART
       ok% = - 1
     END IF 
     QRENummer.reingang = VSNRPack$(LRENummer.reingang)
     ok% = - 1

     IF ok% = - 1 THEN 
       ON ERROR GOTO rei0403052
       STORE FILE "reingang"
rei0403052: 
       ON ERROR GOTO ErrorHandler
     END IF 
     FILE "reingang"
     SELECT NEXT LOCK FILE "reingang"
     ok% = 0
   WEND 
   IF RECCOUNT ("REINGANG") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   i% = 0
   dat$ = "REINGANG"
   WHILE NOT EOF ("REINGANG")
     i% = i% + 1
     ok% = 0
     SET STATUS STR$ (i%,"999999") + " Eingangsrechnungen angepa·t von " + STR$ ( RECCOUNT ("reingang"),",999999")
     IF waehrung.dat$ LIKE "DM*" THEN 
       gesnettoeu.dat$ = gesnetto.dat$ / umrechnung.dat$
       gesbruttoeu.dat$ = gesbrutto.dat$ / umrechnung.dat$
       gesnettoskeu.dat$ = gesnettosk.dat$ / umrechnung.dat$
       gesbruttoskeu.dat$ = gesbruttosk.dat$ / umrechnung.dat$
       preisnettoeu.dat$ = preisnetto.dat$ / umrechnung.dat$
       preisbruttoeu.dat$ = preisbrutto.dat$ / umrechnung.dat$
       proviseu.dat$ = provis.dat$ / umrechnung.dat$
       rabatteu.dat$ = rabatt.dat$ / umrechnung.dat$
       mwsteu.dat$ = MwStDM.dat$ / umrechnung.dat$
       skontoeu.dat$ = skonto.dat$ / umrechnung.dat$
       GesGutschrEU.dat$ = GesGutschr.dat$ / umrechnung.dat$
       GesNettoteileu.dat$ = gesnettoteil.dat$ / umrechnung.dat$
       GesBruttoteileu.dat$ = gesbruttoteil.dat$ / umrechnung.dat$
     END IF 
     IF Nummer2.REINGANG < 1 THEN 
       nummer2.REINGANG = codere.REINGANG
       ok% = - 1
     END IF 
     IF ok% = - 1 THEN 
       STORE FILE "REINGANG"
     END IF 
     SELECT NEXT LOCK 
   WEND 
 
 
 
 
 
   REM Anpassung UMSATZ.SBF
   REM ================================================
 
   CALL DFile(3,"umsatz" + _fpw$)
   FILE "umsatz"
   CALL FldAdd("JahrEu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang01Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang02Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang03Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang04Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang05Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang06Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang07Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang08Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang09Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang10Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang11Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang12Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec01Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec02Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec03Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec04Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec05Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec06Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec07Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec08Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec09Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec10Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec11Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec12Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie01Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie02Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie03Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie04Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie05Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie06Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie07Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie08Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie09Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie10Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie11Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie12Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes01Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes02Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes03Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes04Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes05Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes06Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes07Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes08Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes09Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes10Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes11Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes12Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf01Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf02Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf03Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf04Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf05Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf06Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf07Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf08Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf09Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf10Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf11Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf12Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut01Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut02Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut03Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut04Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut05Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut06Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut07Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut08Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut09Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut10Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut11Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut12Eu","NUM;,999999999999.00",0)
   CALL FldAdd("ReGesJahrEu","NUM;,999999999999.00",0)
   CALL FldAdd("ReGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("AngGesJahrEu","NUM;,999999999999.00",0)
   CALL FldAdd("AngGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("BesGesJahrEu","NUM;,999999999999.00",0)
   CALL FldAdd("BesGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("AufGesJahrEu","NUM;,999999999999.00",0)
   CALL FldAdd("AufGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("LieGesJahrEu","NUM;,999999999999.00",0)
   CALL FldAdd("LieGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("GutGesJahrEu","NUM;,999999999999.00",0)
   CALL FldAdd("GutGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro01Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro02Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro03Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro04Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro05Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro06Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro07Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro08Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro09Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro10Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro11Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro12Eu","NUM;,999999999999.00",0)
 
   SAVE FILE "umsatz"
   FILE "umsatz"
   INDEX codeku.umsatz
   IF RECCOUNT ("Umsatz") > 0 THEN 
     SELECT FIRST LOCK 
     WHILE NOT EOF ("umsatz")
       IF QuickCodekuJahr.umsatz = "" THEN 
         QuickCodekuJahr.umsatz = STR$ (codeku.umsatz,"000000") + STR$ (Jahr.umsatz,"0000")
         STORE FILE "umsatz"
       END IF 
       SELECT NEXT LOCK FILE "umsatz"
     WEND 
   END IF 
 
   REM Anpassung Datei PROVISIO.SBF
   REM ================================================
 
   CALL DFile(3,"provisio" + _fpw$)
   FILE "provisio"
   CALL FldAdd("JahrEu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang01Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang02Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang03Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang04Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang05Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang06Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang07Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang08Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang09Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang10Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang11Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Ang12Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec01Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec02Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec03Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec04Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec05Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec06Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec07Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec08Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec09Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec10Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec11Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Rec12Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie01Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie02Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie03Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie04Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie05Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie06Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie07Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie08Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie09Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie10Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie11Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Lie12Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes01Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes02Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes03Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes04Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes05Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes06Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes07Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes08Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes09Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes10Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes11Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Bes12Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf01Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf02Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf03Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf04Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf05Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf06Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf07Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf08Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf09Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf10Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf11Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Auf12Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut01Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut02Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut03Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut04Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut05Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut06Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut07Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut08Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut09Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut10Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut11Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Gut12Eu","NUM;,999999999999.00",0)
   CALL FldAdd("ReGesJahrEu","NUM;,999999999999.00",0)
   CALL FldAdd("ReGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("AngGesJahrEu","NUM;,999999999999.00",0)
   CALL FldAdd("AngGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("BesGesJahrEu","NUM;,999999999999.00",0)
   CALL FldAdd("BesGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("AufGesJahrEu","NUM;,999999999999.00",0)
   CALL FldAdd("AufGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("LieGesJahrEu","NUM;,999999999999.00",0)
   CALL FldAdd("LieGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("GutGesJahrEu","NUM;,999999999999.00",0)
   CALL FldAdd("GutGesGesEu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro01Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro02Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro03Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro04Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro05Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro06Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro07Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro08Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro09Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro10Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro11Eu","NUM;,999999999999.00",0)
   CALL FldAdd("Pro12Eu","NUM;,999999999999.00",0)
 
   SAVE FILE "provisio"
 
 
   REM Anpassung LIEFRUCK.SBF
   REM ================================================
   CALL DFile(3,"MASTER" + _fpw$)
   CALL DFile(3,"LBELEGE" + _fpw$)
   FILE "LBELEGE"
   CALL FldAdd("Datum","DAT;0d.mm.yyyy",0)
   CALL FldAdd("Umrechnung","NUM;,99999999.000000",0)
   CALL FldAdd("CodeW","NUM;000000.",1)
   CALL FldAdd("Waehrung","TXT;6",0)
   CALL FldAdd("VKNetto","NUM;,999999999999.00",0)
   CALL FldAdd("VKBrutto","NUM;,999999999999.00",0)
   CALL FldAdd("VKNettoEu","NUM;,999999999999.00",0)
   CALL FldAdd("VKBruttoEu","NUM;,999999999999.00",0)
   SAVE FILE "LBELEGE"
   FILE "LBELEGE"
   IF RECCOUNT ("LBELEGE") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   WHILE NOT EOF ("LBELEGE")
     IF EXISTS (codems.lbelege,codems.master) THEN 
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT KEY codems.lbelege FILE "master" INDEX codems.master
       codew.lbelege = codew.master
       umrechnung.lbelege = umrechnung.master
       waehrung.lbelege = waehrung.master
       VKNetto.lbelege = Gesnetto.master
       VKBrutto.lbelege = GesBrutto.master
       VKNettoeu.lbelege = Gesnettoeu.master
       VKBruttoEU.lbelege = GesBruttoEU.master
       STORE FILE "LBELEGE"
     END IF 
     SELECT NEXT LOCK FILE "LBELEGE"
   WEND 

   REM Anpassung LIEFRUCK.SBF
   REM ================================================
 
   CALL DFile(3,"LIEFRUCK" + _fpw$)
   FILE "LIEFRUCK"
   CALL FldAdd("Nummer","TXT;30",1)
   CALL FldAdd("EK","NUM;,999999999999.00",0)
   CALL FldAdd("Rabatt","NUM;,999999999999.00",0)
   CALL FldAdd("VKNetto","NUM;,999999999999.00",0)
   CALL FldAdd("VKBrutto","NUM;,999999999999.00",0)
   CALL FldAdd("GesNetto","NUM;,999999999999.00",0)
   CALL FldAdd("GesBrutto","NUM;,999999999999.00",0)
   CALL FldAdd("Rabatt","NUM;,999999999999.00",0)
   CALL FldAdd("GesamtNetto","NUM;,999999999999.00",0)
   CALL FldAdd("GesamtBrutto","NUM;,999999999999.00",0)

   CALL FldAdd("EKeu","NUM;,999999999999.00",0)
   CALL FldAdd("RabattEu","NUM;,999999999999.00",0)
   CALL FldAdd("VKNettoEu","NUM;,999999999999.00",0)
   CALL FldAdd("VKBruttoEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesNettoEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesBruttoEu","NUM;,999999999999.00",0)
   CALL FldAdd("Umrechnung","NUM;,99999999.000000",0)
   CALL FldAdd("CodeW","NUM;000000.",1)
   CALL FldAdd("Waehrung","TXT;6",0)
   SAVE FILE "LIEFRUCK"
   FILE "liefruck"
   IF RECCOUNT ("liefruck") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   WHILE NOT EOF ("liefruck")
     IF codew.liefruck < 1 THEN 
       codew.liefruck = 3
       umrechnung.liefruck = 1
       waehrung.liefruck = "EUR"
       STORE FILE "liefruck"
     END IF 
     SELECT NEXT LOCK FILE "liefruck"
   WEND 
   REM Anpassung SCHEIN.SBF
   REM ================================================
 
   CALL DFile(3,"SCHEIN" + _fpw$)
   FILE "schein"
   CALL FldAdd("Artikelnummer","TXT;20",1)
   CALL FldAdd("Bezeichnung","TXT;100",1)
   CALL FldRen("ME","ME_","TXT;15",0)
   CALL FldAdd("EK","NUM;,999999999999.00",0)
   CALL FldAdd("VKNetto","NUM;,999999999999.00",0)
   CALL FldAdd("VKBrutto","NUM;,999999999999.00",0)
   CALL FldAdd("GesamtNetto","NUM;,999999999999.00",0)
   CALL FldAdd("GesamtBrutto","NUM;,999999999999.00",0)
   CALL FldAdd("Rabatt","NUM;,999999999999.00",0)
   CALL FldUpdate("Anzahl","NUM;9999999999.00")
   CALL FldAdd("Liefereinheit","TXT;20",0)
   CALL FldAdd("Bestandskonto","NUM;000000.",0)
   CALL FldAdd("Verbrauchskonto","NUM;000000.",0)
   CALL FldAdd("Produktgruppe","TXT;40",1)
   CALL FldAdd("TextVorPosition","TXT;L1500R",0)
   CALL FldAdd("Bezugsmenge","NUM;,9999999999.00",0)
   CALL FldAdd("ZeitproBezugsme","NUM;,9999999999.00",0)
   CALL FldAdd("Maschine","TXT;20",0)
   CALL FldAdd("CodeSch","NUM;000000.",1)
   CALL FldAdd("RÅckstMenge","NUM;,9999999999.00",0)
   CALL FldAdd("ProvisProz","NUM;999.0000",0)
   CALL FldAdd("ProvisDM","NUM;,999999999999.00",0)
   CALL FldAdd("CodeMA","NUM;000000.",1)
   CALL FldAdd("RME1","NUM;,999999999.0000",0)
   CALL FldAdd("RmeProz1","NUM;,9999.0000",0)
   CALL FldAdd("RmeDM1","NUM;,999999999999.00",0)
   CALL FldAdd("RME2","NUM;,999999999.0000",0)
   CALL FldAdd("RmeProz2","NUM;,9999.0000",0)
   CALL FldAdd("RmeDM2","NUM;,999999999999.00",0)
   CALL FldAdd("RME3","NUM;,999999999.0000",0)
   CALL FldAdd("RmeProz3","NUM;,9999.0000",0)
   CALL FldAdd("RmeDM3","NUM;,999999999999.00",0)
   CALL FldAdd("RME4","NUM;,999999999.0000",0)
   CALL FldAdd("RmeProz4","NUM;,9999.0000",0)
   CALL FldAdd("RmeDM4","NUM;,999999999999.00",0)
   CALL FldAdd("RME5","NUM;,999999999.0000",0)
   CALL FldAdd("RmeProz5","NUM;,9999.0000",0)
   CALL FldAdd("RmeDM5","NUM;,999999999999.00",0)
   CALL FldAdd("Handelsspanne","NUM;,9999999999.00",0)
   CALL FldAdd("Serienr","TXT;50",0)
   CALL FldAdd("BuchProv","NUM;,999999999999.00",0)
   CALL FldAdd("BuchCodeMA","NUM;000000.",0)
 
   CALL FldAdd("EKeu","NUM;,999999999999.00",0)
   CALL FldAdd("VKNettoEu","NUM;,999999999999.00",0)
   CALL FldAdd("VKBruttoEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesNettoEu","NUM;,999999999999.00",0)
   CALL FldAdd("GesBruttoEu","NUM;,999999999999.00",0)
   CALL FldAdd("RabattEu","NUM;,999999999999.00",0)
   CALL FldAdd("RmeEu1","NUM;,999999999999.00",0)
   CALL FldAdd("RmeEu2","NUM;,999999999999.00",0)
   CALL FldAdd("RmeEu3","NUM;,999999999999.00",0)
   CALL FldAdd("RmeEu4","NUM;,999999999999.00",0)
   CALL FldAdd("RmeEu5","NUM;,999999999999.00",0)
   CALL FldAdd("ProvisEu","NUM;,999999999999.00",0)
   CALL FldAdd("BuchProvEU","NUM;,999999999999.00",0)
   CALL FldAdd("Umrechnung","NUM;,99999999.000000",0)
   CALL FldAdd("CodeW","NUM;000000.",1)
   CALL FldAdd("Waehrung","TXT;6",0)
   CALL FldAdd("WaehrungBezeich","TXT;30",0)
   CALL FldAdd("Komissionsnr","TXT;30",0)
   CALL FldAdd("BestellNr","TXT;30",0)
   CALL FldAdd("AdresseLief","TXT;L4000R",0)
   CALL FldAdd("CodeSch","NUM;000000.",1)
   CALL FldAdd("CodeKU","NUM;000000.",1)
 
   SAVE FILE "schein"
   CALL Server("UPDFILE","Anpassung der Scheindatei")
   CALL Server("UPDFIELD","Bitte warten, der Vorgang ")
   CALL Server("UPDSTATUS","kann etwas dauern")
   MOUSE OFF 
   UPDATE Bezugsmenge.schein = 1 WHERE bezugsmenge.schein < 1
   END UPDATE 
   UPDATE waehrung.schein = "EUR" WHERE waehrung.schein LIKE "EUR*"
   END UPDATE 
   CALL DFile(3,"Gruppen" + _fpw$)
   FILE "schein"
   INDEX Codegr.schein
   UPDATE codegr.schein = 0 WHERE codegr.schein < 1
   END UPDATE 
   UPDATE codear.schein = 0 WHERE codear.schein < 1
   END UPDATE 
   IF RECCOUNT ("schein") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   i% = 0
   FILE "schein"
   INDEX codesch.schein
   SELECT LAST 
   i% = codesch.schein
   j% = SER ("schein",1)
   WHILE i% >= j%
     j% = SER ("schein",1)
   WEND 
   IF RECCOUNT ("schein") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   WHILE NOT EOF ("schein") AND codesch.schein < 1
     codesch.schein = SER ("schein",1)
     STORE FILE "schein"
     UNLOCK CURRENT FILE "schein"
     SELECT FIRST LOCK 
   WEND 
   SELECT LAST 
   i% = codesch.schein
   INDEX codegr.schein
   IF RECCOUNT ("schein") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   REM SELECT FIRST LOCK 
   i% = 0
   WHILE NOT EOF ("schein") AND GIndneu% = - 1
     i% = i% + 1
     IF codegr.schein > 0 THEN 
       codegr% = codegr.schein
       IF EXISTS (codegr%,codegr.gruppen) THEN 
         SELECT KEY codegr% FILE "gruppen" INDEX codegr.gruppen
         Produktgruppe.schein = Produktgruppe.gruppen
       ELSE 
         Produktgruppe.schein = "gelîschte Gruppe"
       END IF 
         REM codesch.schein = i%
       STORE FILE "schein"
     ELSE 
       codegr.schein = 999999
       Produktgruppe.schein = "gelîschte Gruppe"
       STORE FILE "schein"
     END IF 
     CALL Server("UPDSTATUS","kann etwas dauern - Gruppe:" + STR$ (codesch.schein,"999999"))
     SET STATUS "DatensÑtze verarbeitet: " + STR$ (i%,"9999999") + " von " + STR$ ( RECCOUNT ("schein"),",999999")
     SELECT NEXT LOCK FILE "schein" INDEX codegr.schein
   WEND 
   FILE "schein"
   INDEX codesch.schein
   SELECT LAST 
   i% = codesch.schein
   INDEX codems.schein
   IF RECCOUNT ("schein") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   REM SELECT FIRST 
   j% = 0
   WHILE NOT EOF ("schein") AND GIndneu% = - 1
     j% = j% + 1
       IF codesch.schein < 1 THEN 
         i% = i% + 1
         codesch.schein = i%
         STORE FILE "schein"
       END IF 
     CALL Server("UPDSTATUS","kann etwas dauern - CodeSch:" + STR$ (codesch.schein,"999999"))
     SET STATUS "DatensÑtze verarbeitet: " + STR$ (j%,"9999999")
     SELECT NEXT LOCK FILE "schein" INDEX codems.schein
   WEND 
 
   CALL DFile(3,"WAEHRUNG" + _fpw$)
   FILE "Waehrung"
   INDEX waehrung.waehrung
   SELECT FIRST 
   WHILE NOT EOF ("WAEHRUNG")
     IF UCASE$ (waehrung.waehrung) = zweitwaehr$ THEN 
       euro1% = umrechnung.waehrung
       codew1% = codew.waehrung
       waehrung1$ = waehrung.waehrung
       wbez1$ = WaehrungBezeich.waehrung
       aa% = 1
     END IF 
   SELECT NEXT 
   WEND 
   FILE "schein"
   INDEX codems.schein
   IF RECCOUNT ("schein") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   i% = 0
   ok% = 1
   WHILE NOT EOF ("schein") AND ok% = 1 AND GIndneu% = - 1
     i% = i% + 1
     SET STATUS STR$ (i%,",9999999") + " DatensÑtze angepa·t von " + STR$ ( RECCOUNT ("schein"),",999999")
     CALL Server("UPDSTATUS", STR$ (i%,",9999999") + " DatensÑtze angepa·t von " + STR$ ( RECCOUNT ("schein"),",999999"))
     IF umrechnung.schein < 0.0001 THEN 
       umrechnung.schein = euro1%
       codew.schein = codew1%
       waehrung.schein = waehrung1$
       WaehrungBezeich.schein = wbez1$
       CALL SCHDMEuro()
       STORE FILE "schein"
     END IF 
     IF NOT EOF ("schein") THEN 
       SELECT NEXT LOCK 
     ELSE 
      ok% = 0
     END IF 
   WEND 
 
   FILE "master"
   INDEX codems.master
   FILE "schein"
   INDEX codems.schein
   IF RECCOUNT ("schein") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   i% = 0
   ok% = 1
   j% = RECCOUNT ("schein")
   WHILE NOT EOF ("schein") AND ok% = 1
     i% = i% + 1
     CALL Server("UPDSTATUS", STR$ (i%,",9999999") + " DatensÑtze von Schein-Datei angepa·t von " + STR$ (j%,",999999999"))
     IF codeku.schein < 1 AND codems.schein > 0 THEN 
       SELECT KEY codems.schein FILE "master" INDEX codems.master
       codeku.schein = codeku.master
       STORE FILE "schein"
     END IF 
     IF NOT EOF ("schein") THEN 
       SELECT NEXT LOCK 
     ELSE 
      ok% = 0
     END IF 
     i% = i% + 1
     SET STATUS STR$ (i%,",999999999") + "/" + STR$ (j%,",999999999")
  WEND 
  


 
 
 
 
 
 
 
 
 
 
   CALL Server("UPDFILE","Scheindatei wurde angepa·t!")
   CALL Server("UPDFIELD"," ")
   CALL Server("UPDSTATUS"," ")
 
   CALL DFile(3,"ABZUGANG" + _fpw$)
   FILE "ABZUGANG"
   CALL FldAdd("Nummer","TXT;30",1)
   CALL FldAdd("Belegnummer","TXT;30",1)
   CALL FldAdd("Buchungstext","TXT;4000 R",1)
   CALL FldAdd("Datum","DAT;0d.mm.yyyy",1)
   CALL FldAdd("BelegDatum","DAT;0d.mm.yyyy",1)
   CALL FldAdd("Termin","DAT;0d.mm.yyyy",1)
   CALL FldAdd("DatumGebucht","DAT;0d.mm.yyyy",0)
   CALL FldAdd("ArtZugang","NUM;0.",1)
   CALL FldAdd("ArtAbgang","NUM;0.",1)
   CALL FldAdd("Artikelnummer","TXT;20",1)
   CALL FldAdd("Bezeichnung","TXT;50",1)
   CALL FldAdd("Lieferant","TXT;50",0)
   CALL FldRen("ME","ME_","TXT;15",0)
   CALL FldAdd("Kontrolle","TXT;1",0)
   CALL FldAdd("PAbschlus","NUM;0000.",0)
   CALL FldAdd("Periode","NUM;0000.",0)
   CALL FldAdd("Abgleich","NUM;0.",0)
   CALL FldAdd("Bestandskonto","NUM;000000.",0)
   CALL FldAdd("Verbrauchskonto","NUM;000000.",0)
   CALL FldAdd("Bezugsmenge","NUM;,9999999999.00",0)
   CALL FldAdd("ZeitproBezugsme","NUM;,9999999999.00",0)
   CALL FldAdd("Maschine","TXT;20",0)
   CALL FldAdd("EKeu","NUM;,999999999999.00",0)
   CALL FldAdd("VKNettoEu","NUM;,999999999999.00",1)
   CALL FldAdd("VKBruttoEu","NUM;,999999999999.00",1)
 
   CALL FldAdd("Umrechnung","NUM;,99999999.000000",0)
   CALL FldAdd("CodeW","NUM;000000.",1)
   CALL FldAdd("Waehrung","TXT;30",1)
   CALL FldAdd("Komissionsnr","TXT;30",0)
   CALL FldAdd("BestellNr","TXT;30",0)
   CALL FldAdd("AdresseOrig","TXT;L4000R",0)
   CALL FldAdd("Bezeichnung","TXT;100",1)
   CALL FldAdd("Kommentar","TXT;4000 R",1)
   CALL FldAdd("erledigt","TXT;1",1)
   CALL FldAdd("erledigtDatum","DAT;0d.mm.yyyy",1)
   CALL FldAdd("gebustor","TXT;10",0)
   CALL FldAdd("erledigtDatBis","DAT;0d.mm.yyyy",1)
   CALL MarkMain("CodeAZ")
   SAVE FILE "ABZUGANG"
   FILE "abzugang"
   INDEX CodeAZ
   SELECT LAST 
   WHILE CodeAZ > SER ("ABZUGANG",1)
   WEND 
   IF RECCOUNT ("Abzugang") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   FILE "master"
   INDEX codems.master
   FILE "abzugang"
   INDEX CodeAZ 
   i% = 0
   j% = RECCOUNT ("Abzugang")
   MOUSE OFF 
   WHILE NOT EOF ("abzugang")
     codems% = codems.abzugang
     i% = i% + 1
     SET STATUS STR$ (i%,",999999999") + "/" + STR$ (j%,",999999999") + " in ABZUGANG verarbeitet"
     IF codems.abzugang > 0 THEN 
       GOTO w050120105
       REM IF art.abzugang = 1 THEN 
         IF anzgebucht.abzugang = 0 AND DatumGebucht.abzugang > 0 AND kontrolle.abzugang = "n" THEN 
           SELECT KEY codems% LOCK FILE "master" INDEX codems.master
           erledigt.master = "J"
           erledigtdatum.master = DatumGebucht.abzugang
           REM gebustor.master = "abgelehnt"
           STORE FILE "master"
         END IF 
         IF anzgebucht.abzugang > 0 AND DatumGebucht.abzugang > 0 AND kontrolle.abzugang = "n" THEN 
           SELECT KEY codems% LOCK FILE "master" INDEX codems.master
           erledigt.master = "J"
           erledigtdatum.master = DatumGebucht.abzugang
           REM gebustor.master = "angenommen"
           STORE FILE "master"
         END IF 
       REM END IF 
w050120105: 
       erledigt.abzugang = erledigt.master
       IF erledigt.abzugang = "" THEN erledigt.abzugang = "N"
       erledigtdatum.abzugang = DatumGebucht.abzugang
       erledigtDatBis.abzugang = erledigtDatBis.master
       IF erledigtDatBis.abzugang < 1 THEN erledigtDatBis.abzugang = termin.abzugang
       gebustor.abzugang = gebustor.master
       STORE FILE "abzugang"
     END IF 
     SELECT NEXT LOCK FILE "ABZUGANG"
   WEND 




   UPDATE waehrung.ABZUGANG = "EUR" WHERE waehrung.ABZUGANG LIKE "EUR*"
   END UPDATE 

   CALL DFile(3,"KOMBI" + _fpw$)
   FILE "KOMBI"
   CALL FldRen("ME","ME_","TXT;15",0)
   CALL FldAdd("EKeu","NUM;,999999999999.00",0)
   CALL FldAdd("CodeW","NUM;000000.",1)
   CALL FldAdd("Umrechnung","NUM;,99999999.000000",0)
   CALL FldAdd("Waehrung","TXT;6",0)
   INDEX CodeKO
   SELECT LAST 
   WHILE CodeKO > SER ("KOMBI",1)
   WEND 
   SAVE FILE "KOMBI"
   UPDATE waehrung.KOMBI = "EUR" WHERE waehrung.KOMBI LIKE "EUR*"
   END UPDATE 

   CALL DFile(3,"WAEHRUNG" + _fpw$)
   FILE "Waehrung"
   INDEX waehrung.waehrung
   SELECT FIRST 
   WHILE NOT EOF ("WAEHRUNG") AND GIndNeu% = - 1
     IF UCASE$ (waehrung.waehrung) = zweitwaehr$ THEN 
       euro1% = umrechnung.waehrung
       codew1% = codew.waehrung
       waehrung1$ = waehrung.waehrung
       wbez1$ = WaehrungBezeich.waehrung
       aa% = 1
     END IF 
   SELECT NEXT 
   WEND 
   FILE "KOMBI"
   INDEX codear.KOMBI
   IF RECCOUNT ("KOMBI") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   i% = 0
   WHILE NOT EOF ("KOMBI") AND GIndNeu% = - 1
     i% = i% + 1
     SET STATUS STR$ (i%,"999999") + " Kombi-Artikel angepa·t"
     IF umrechnung.KOMBI < 0.0001 THEN 
       umrechnung.KOMBI = euro1%
       codew.KOMBI = codew1%
       waehrung.KOMBI = waehrung1$
     END IF 
     IF ek.kombi <> 0 THEN ekeu.kombi = ek.kombi / umrechnung.kombi ELSE ekeu.kombi = 0
     STORE FILE "KOMBI"
     SELECT NEXT LOCK 
   WEND 
 
 
 
 
   CALL DFile(3,"ARTPROV" + _fpw$)
   FILE "ARTPROV"
   CALL FldAdd("ProvisEu","NUM;,999999999999.00",0)
   CALL FldAdd("CodeProv","NUM;000000.",1)
   SAVE FILE "ARTPROV"
   INDEX Codeprov.Artprov
   SELECT LAST 
   i% = CodeProv.Artprov
   INDEX codear.Artprov
   SELECT FIRST 
   IF RECCOUNT ("Artprov") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   WHILE NOT EOF ("Artprov") AND GIndNeu% = - 1
       IF codeProv.Artprov < 1 THEN 
         i% = i% + 1
         codeprov.Artprov = i%
         STORE FILE "Artprov"
       END IF 
     CALL Server("UPDSTATUS","kann etwas dauern - CodeProv:" + STR$ (codesch.schein,"999999"))
     SELECT NEXT LOCK FILE "Artprov" INDEX codear.Artprov
   WEND 
   INDEX CodeProv
   SELECT LAST 
   WHILE CodeProv > SER ("ARTPROV",1)
   WEND 
   SAVE FILE "ARTPROV"

   CALL DFile(3,"KKOPIE" + _fpw$)
   FILE "KKOPIE"
   CALL FldRen("ME","ME_","TXT;15",0)
   CALL FldAdd("EKeu","NUM;,999999999999.00",0)
   CALL FldAdd("CodeW","NUM;000000.",1)
   CALL FldAdd("Umrechnung","NUM;,99999999.000000",0)
   CALL FldAdd("Waehrung","TXT;30",1)
   SAVE FILE "KKOPIE"

   INDEX CodeKO
   SELECT LAST 
   WHILE CodeKO > SER ("KKOPIE",1)
   WEND 
   SAVE FILE "KKOPIE"
 
 
    REM Anpassung Seriern.SBF
   REM ================================================
 
   CALL DFile(3,"SERIENR" + _fpw$)
   FILE "SERIENR"
   CALL FldAdd("Datum","DAT;0d.mm.yyyy",0)
   CALL FldAdd("CodeVL","NUM;000000.",0)
   CALL FldAdd("CodeJO","NUM;000000.",0)
   CALL FldAdd("StdZaehler","NUM;999999999999.",0)
   CALL FldAdd("JONummer","TXT;20",0)
   CALL FldAdd("VerlNummer","TXT;20",0)
   CALL FldAdd("Verleih","TXT;1",0)
   SAVE FILE "SERIENR"
 
   REM Anpassung ArtikTmp.SBF
   REM ================================================
   CALL DFile(3,"ARTIKTMP" + _fpw$)
   FILE "ARTIKTMP"
   CALL FldAdd("EK","NUM;,999999999999.00",0)
   CALL FldAdd("VKNetto","NUM;,999999999999.00",0)
   CALL FldAdd("VKBrutto","NUM;,999999999999.00",0)
   CALL FldAdd("KombiNetto","NUM;,999999999999.00",0)
   CALL FldAdd("KombiBrutto","NUM;,999999999999.00",0)
   CALL FldAdd("InventurPreis","NUM;,999999999999.00",0)
 
   CALL FldAdd("EKeu","NUM;,999999999999.00",0)
   CALL FldAdd("VKNettoEu","NUM;,999999999999.00",0)
   CALL FldAdd("VKBruttoEu","NUM;,999999999999.00",0)
   CALL FldAdd("KombiNettoEu","NUM;,999999999999.00",0)
   CALL FldAdd("KombiBruttoEu","NUM;,999999999999.00",0)
   CALL FldAdd("InventurPreisEu","NUM;,999999999999.00",0)
   CALL FldAdd("KostRepEu","NUM;,999999999999.00",0)
   CALL FldAdd("KostTransEu","NUM;,999999999999.00",0)
   CALL FldAdd("KostSonstEu","NUM;,999999999999.00",0)
   CALL FldAdd("RmeEu1","NUM;,999999999999.00",0)
   CALL FldAdd("RmeEu2","NUM;,999999999999.00",0)
   CALL FldAdd("RmeEu3","NUM;,999999999999.00",0)
   CALL FldAdd("RmeEu4","NUM;,999999999999.00",0)
   CALL FldAdd("RmeEu5","NUM;,999999999999.00",0)
   CALL FldAdd("lieferEKEu","NUM;,9999999999.00",0)
   CALL FldAdd("lieferEK2Eu","NUM;,9999999999.00",0)
   CALL FldAdd("lieferEK3Eu","NUM;,9999999999.00",0)
   CALL FldAdd("Umrechnung","NUM;,99999999.000000",0)
   CALL FldAdd("CodeW","NUM;000000.",0)
   CALL FldAdd("Waehrung","TXT;4",0)
   CALL FldAdd("WaehrungBezeich","TXT;30",0)
   SAVE FILE "artiktmp"
 

   REM Anpassung Akupreis.SBF
   REM ================================================ 
   CALL DFile(3,"AKUPREIS" + _fpw$)
   FILE "AKUPREIS"
   CALL FldRen("NAME","NAME","TXT;120",0)
   SAVE FILE "AKUPREIS"
   UPDATE waehrung.AKUPREIS = "EUR" WHERE waehrung.AKUPREIS LIKE "EUR*"
   END UPDATE 
 
   REM Anpassung Gruppen.SBF
   REM ================================================ 
   CALL DFile(3,"Gruppen" + _fpw$)
   FILE "Gruppen"
   CALL FldAdd("novi1","NMI;0.",0)
   CALL FldAdd("DatumNovi","DAT;0d.mm.yyyy",0)
   SAVE FILE "Gruppen"

   REM Anpassung Warenart.SBF
   REM ================================================ 
   CALL DFile(3,"Warenart" + _fpw$)
   FILE "Warenart"
   CALL FldAdd("novi1","NMI;0.",0)
   CALL FldAdd("rea","NMI;0.",0)
   CALL FldAdd("NOTIZ","TXT;4000 R",0)
   CALL FldAdd("DatumNovi","DAT;0d.mm.yyyy",0)
   CALL FldAdd("CodeWgru","NUM;000000.",1)
   CALL FldAdd("WGruppe","TXT;50",0)
   CALL FldAdd("ENetto","NUM;,9999999999.00",0)
   CALL FldAdd("EBrutto","NUM;,9999999999.00",0)
   CALL FldAdd("EMwst","NUM;,9999999999.00",0)
   CALL FldAdd("ETeil","NUM;,9999999999.00",0)
   CALL FldAdd("ETeilRest","NUM;,9999999999.00",0)
   CALL FldAdd("EMahn","NUM;,9999999999.00",0)
   CALL FldAdd("ETeilMahn","NUM;,9999999999.00",0)
   CALL FldAdd("ANetto","NUM;,9999999999.00",0)
   CALL FldAdd("ABrutto","NUM;,9999999999.00",0)
   CALL FldAdd("AMwst","NUM;,9999999999.00",0)
   CALL FldAdd("AMahn","NUM;,9999999999.00",0)
   CALL FldAdd("ATeilMahn","NUM;,9999999999.00",0)
   CALL FldAdd("ATeil","NUM;,9999999999.00",0)
   CALL FldAdd("AteilRest","NUM;,9999999999.00",0)
   SAVE FILE "Warenart"


   REM Anpassung Artikel.SBF
   REM ================================================ 
   CALL DFile(3,"ARTIKEL" + _fpw$)
   FILE "Artikel"
   CALL FldRen("ME","ME_","TXT;15",0)
   CALL FldAdd("Lieferant2","NUM;000000.",0)
   CALL FldAdd("Lieferant3","NUM;000000.",0)
   CALL FldAdd("Bestellnummer2","TXT;20",0)
   CALL FldAdd("BestandsfÅhrung","TXT;20",0)
   CALL FldAdd("Bestellnummer3","TXT;20",0)
   CALL FldAdd("Bestellnummer2","TXT;20",0)
   CALL FldAdd("lieferEK","NUM;,9999999999.00",0)
   CALL FldAdd("lieferEK2","NUM;,9999999999.00",0)
   CALL FldAdd("lieferEK3","NUM;,9999999999.00",0)
   CALL FldAdd("letzteAnpassung","DAT;0d.mm.yyyy",0)
   CALL FldAdd("letzterAbgang","DAT;0d.mm.yyyy",0)
   CALL FldAdd("letzteLieferung","DAT;0d.mm.yyyy",0)
   CALL FldAdd("bestellt am","DAT;0d.mm.yyyy",0)
   CALL FldAdd("QuickGRBez","TXT;26",1)
   CALL FldAdd("QuickGRArtnr","TXT;26",1)
   CALL FldAdd("QuickLiefBez","TXT;26",1)
   CALL FldAdd("QuickLiefArtnr","TXT;26",1)
   CALL FldAdd("Bestandskonto","NUM;000000.",0)
   CALL FldAdd("Verbrauchskonto","NUM;000000.",0)
   CALL FldAdd("Notiz","TXT;L4000 R",0)
   CALL FldAdd("KostenReparatur","NUM;,9999999999.00",0)
   CALL FldAdd("KostenTransport","NUM;,9999999999.00",0)
   CALL FldAdd("KostenSonstiges","NUM;,9999999999.00",0)
   CALL FldAdd("Stichwort","TXT;L400R",1)
   CALL FldAdd("Bezugsmenge","NUM;,9999999999.00",0)
   CALL FldAdd("ZeitproBezugsme","NUM;,9999999999.00",0)
   CALL FldAdd("Maschine","TXT;20",0)
   CALL FldAdd("GewichtsEinheit","TXT;10",0)
   CALL FldAdd("GewichtBezugsME","NUM;,99999999.0000",0)
   CALL FldAdd("RME1","NUM;,999999999.0000",0)
   CALL FldAdd("RmeProz1","NUM;,9999.0000",0)
   CALL FldAdd("RmeDM1","NUM;,999999999999.00",0)
   CALL FldAdd("RME2","NUM;,999999999.0000",0)
   CALL FldAdd("RmeProz2","NUM;,9999.0000",0)
   CALL FldAdd("RmeDM2","NUM;,999999999999.00",0)
   CALL FldAdd("RME3","NUM;,999999999.0000",0)
   CALL FldAdd("RmeProz3","NUM;,9999.0000",0)
   CALL FldAdd("RmeDM3","NUM;,999999999999.00",0)
   CALL FldAdd("RME4","NUM;,999999999.0000",0)
   CALL FldAdd("RmeProz4","NUM;,9999.0000",0)
   CALL FldAdd("RmeDM4","NUM;,999999999999.00",0)
   CALL FldAdd("RME5","NUM;,999999999.0000",0)
   CALL FldAdd("RmeProz5","NUM;,9999.0000",0)
   CALL FldAdd("RmeDM5","NUM;,999999999999.00",0)
   CALL FldAdd("Matsorte","TXT;20",0)
   CALL FldAdd("Mateinsatz","TXT;20",0)
   CALL FldAdd("Matstaerke","TXT;20",0)
   CALL FldAdd("MatFarbe","TXT;20",0)
   CALL FldAdd("SollStd100","NUM;,999999999999.00",0)
   CALL FldAdd("QPGArtnr","TXT;100",1)
   CALL FldAdd("QPGArtBez","TXT;100",1)
   CALL FldAdd("QLieArtnr","TXT;100",1)
   CALL FldAdd("QLieArtBez","TXT;100",1)
 
   CALL FldAdd("EK","NUM;,999999999999.00",0)
   CALL FldAdd("VKNetto","NUM;,999999999999.00",0)
   CALL FldAdd("VKBrutto","NUM;,999999999999.00",0)
   CALL FldAdd("KombiNetto","NUM;,999999999999.00",0)
   CALL FldAdd("KombiBrutto","NUM;,999999999999.00",0)
   CALL FldAdd("InventurPreis","NUM;,999999999999.00",0)
 
   CALL FldAdd("EKeu","NUM;,999999999999.00",0)
   CALL FldAdd("VKNettoEu","NUM;,999999999999.00",0)
   CALL FldAdd("VKBruttoEu","NUM;,999999999999.00",0)
   CALL FldAdd("KombiNettoEu","NUM;,999999999999.00",0)
   CALL FldAdd("KombiBruttoEu","NUM;,999999999999.00",0)
   CALL FldAdd("InventurPreisEu","NUM;,999999999999.00",0)
   CALL FldAdd("KostRepEu","NUM;,999999999999.00",0)
   CALL FldAdd("KostTransEu","NUM;,999999999999.00",0)
   CALL FldAdd("KostSonstEu","NUM;,999999999999.00",0)
   CALL FldAdd("RmeEu1","NUM;,999999999999.00",0)
   CALL FldAdd("RmeEu2","NUM;,999999999999.00",0)
   CALL FldAdd("RmeEu3","NUM;,999999999999.00",0)
   CALL FldAdd("RmeEu4","NUM;,999999999999.00",0)
   CALL FldAdd("RmeEu5","NUM;,999999999999.00",0)
   CALL FldAdd("lieferEKEu","NUM;,9999999999.00",0)
   CALL FldAdd("lieferEK2Eu","NUM;,9999999999.00",0)
   CALL FldAdd("lieferEK3Eu","NUM;,9999999999.00",0)
   CALL FldAdd("Umrechnung","NUM;,99999999.000000",0)
   CALL FldAdd("CodeW","NUM;000000.",1)
   CALL FldAdd("Waehrung","TXT;4",1)
   CALL FldAdd("WaehrungBezeich","TXT;30",1)
   CALL FldAdd("VerleihGebuehr","NUM;,9999999999.00",0)
   CALL FldAdd("BetrStunden","NUM;,9999999999.",0)
   CALL FldAdd("Handelsspanne","NUM;,9999999999.00",0)
   CALL FldAdd("Bild1","EXT;250",0)
   CALL FldAdd("Bild2","EXT;250",0)
   CALL FldAdd("Bild3","EXT;250",0)
   CALL FldAdd("Bild4","EXT;250",0)
   CALL FldAdd("Bild5","EXT;250",0)
   CALL FldAdd("Bild6","EXT;250",0)
   CALL FldAdd("Bild7","EXT;250",0)
   CALL FldAdd("Bild8","EXT;250",0)
   CALL FldAdd("Bild9","EXT;250",0)
   CALL FldAdd("NBild1","TXT;250",0)
   CALL FldAdd("NBild2","TXT;250",0)
   CALL FldAdd("NBild3","TXT;250",0)
   CALL FldAdd("NBild4","TXT;250",0)
   CALL FldAdd("NBild5","TXT;250",0)
   CALL FldAdd("NBild6","TXT;250",0)
   CALL FldAdd("NBild7","TXT;250",0)
   CALL FldAdd("NBild8","TXT;250",0)
   CALL FldAdd("NBild9","TXT;250",0)
   CALL FldAdd("BildT1","EXT;25",0)
   CALL FldAdd("BildT2","EXT;25",0)
   CALL FldAdd("BildT3","EXT;25",0)
   CALL FldAdd("BildT4","EXT;25",0)
   CALL FldAdd("BildT5","EXT;25",0)
   CALL FldAdd("BildT6","EXT;25",0)
   CALL FldAdd("BildT7","EXT;25",0)
   CALL FldAdd("BildT8","EXT;25",0)
   CALL FldAdd("BildT9","EXT;25",0)
   CALL FldAdd("novi1","NMI;0.",0)
   CALL FldAdd("DatumNovi","DAT;0d.mm.yyyy",0)
   SAVE FILE "artikel"
   CALL MarkMain("CodeAR")
   CALL Server("UPDFIELD","")
   CALL Server("UPDSTATUS","Erzeugung der QuickCodes")
   SAVE FILE "artikel"
   MOUSE OFF 
   UPDATE waehrung.artikel = "EUR" WHERE waehrung.artikel LIKE "EUR*"
   END UPDATE 
   UPDATE QuickGRBez.artikel = STR$ (CodeGR.artikel,"000000") + LEFT$ ( TRIM$ (Bezeichnung.artikel),20):
     QuickGRArtnr.artikel = STR$ (CodeGR.artikel,"000000") + LEFT$ ( TRIM$ (Artikelnummer.artikel),20):
     QuickLiefBez.artikel = STR$ (Lieferant.artikel,"000000") + LEFT$ ( TRIM$ (Bezeichnung.artikel),20):
     QuickLiefArtnr.artikel = STR$ (Lieferant.artikel,"000000") + LEFT$ ( TRIM$ (Artikelnummer.artikel),20)
   END UPDATE 
   UPDATE Bezugsmenge.artikel = 1 WHERE bezugsmenge.artikel < 1
   END UPDATE 
   UPDATE InventurPreis.artikel = ek.artikel WHERE InventurPreis.artikel = 0
   END UPDATE 
   UPDATE InventurPreisEu.artikel = ek.artikel / umrechnung.artikel WHERE InventurPreiseu.artikel = 0
   END UPDATE 
   SAVE FILE "artikel"
   FILE "artikel"
   INDEX CodeAR
   SELECT LAST 
   WHILE CodeAR > SER ("ARTIKEL",1)
   WEND 
   CALL DFile(3,"WAEHRUNG" + _fpw$)
   FILE "Waehrung"
   INDEX waehrung.waehrung
   SELECT FIRST 
   WHILE NOT EOF ("WAEHRUNG") AND GIndNeu% = - 1
     IF UCASE$ (waehrung.waehrung) = zweitwaehr$ THEN 
       euro1% = umrechnung.waehrung
       codew1% = codew.waehrung
       waehrung1$ = waehrung.waehrung
       wbez1$ = WaehrungBezeich.waehrung
       aa% = 1
     END IF 
   SELECT NEXT 
   WEND 
   FILE "Artikel"
   INDEX codear.artikel
   IF RECCOUNT ("Artikel") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   i% = 0
   WHILE NOT EOF ("Artikel") AND GIndNeu% = - 1
     i% = i% + 1
     SET STATUS STR$ (i%,"999999") + " Artikel angepa·t"
     IF umrechnung.artikel < 0.0001 THEN 
       umrechnung.artikel = euro1%
       codew.artikel = codew1%
       waehrung.artikel = waehrung1$
       WaehrungBezeich.artikel = wbez1$
       CALL ArtDMEuro()
       STORE FILE "Artikel"
     END IF 
     SELECT NEXT LOCK 
   WEND 
   SET STATUS ""
   CALL GaugeUpdate()
   CALL Server("UPDFILE","Erstellung der Umsatzdatei")
   CALL Server("UPDFIELD","Bitte warten, der Vorgang ")
   CALL Server("UPDSTATUS","kann etwas dauern!!!")
   MOUSE OFF 
   REM CALL Fehler("Test Ums","")
   IF NeuKVer% = - 1 THEN 
     CALL UmsFuel1ab()
     REQUEST "Umsatzdatei wurde erstellt"
   END IF 
 END IF 
 
 REM *******************START Anpassung Dokumentendatei*********************************
 FILE "dokument"
 INDEX codedok.dokument
 dat$ = "akquise"
 feld$ = "Codeaq"
 feldq$ = feld$ + "." + dat$
 feldokz$ = feld$ + ".dokument"
 feldok$ = "CodeDok"
 FILE dat$
 INDEX feldq$$
 SELECT FIRST LOCK 
 i% = 0
 j% = RECCOUNT (dat$)
 WHILE NOT EOF (dat$)
   i% = i% + 1
   SET STATUS STR$ (i%,",999999") + "/" + STR$ (j%,",999999") + " " + dat$
   IF codedok.dat$ > 0 THEN 
     code% = feldq$$
     IF EXISTS (codedok.dat$,codedok.dokument) THEN 
       REM CALL Fehler(feldq$,feldokz$)
       SELECT KEY codedok.dat$ LOCK FILE "dokument" INDEX codedok.dokument
       feldokz$$ = code%
       STORE FILE "dokument"
     END IF 
   END IF 
   SELECT NEXT LOCK FILE dat$
 WEND 

 dat$ = "master"
 feld$ = "Codems"
 feldq$ = feld$ + "." + dat$
 feldokz$ = feld$ + ".dokument"
 feldok$ = "CodeDok"
 FILE dat$
 INDEX feldq$$
 SELECT FIRST LOCK 
 i% = 0
 j% = RECCOUNT (dat$)
 WHILE NOT EOF (dat$)
   i% = i% + 1
   SET STATUS STR$ (i%,",999999") + "/" + STR$ (j%,",999999") + " " + dat$
   IF codedok.dat$ > 0 THEN 
     code% = feldq$$
     IF EXISTS (codedok.dat$,codedok.dokument) THEN 
       REM CALL Fehler(feldq$,feldokz$)
       SELECT KEY codedok.dat$ LOCK FILE "dokument" INDEX codedok.dokument
       feldokz$$ = code%
       STORE FILE "dokument"
     END IF 
   END IF 
   SELECT NEXT LOCK FILE dat$
 WEND 

 dat$ = "rausgang"
 feld$ = "Codere"
 feldq$ = feld$ + "." + dat$
 feldokz$ = feld$ + ".dokument"
 feldok$ = "CodeDok"
 FILE dat$
 INDEX feldq$$
 SELECT FIRST LOCK 
 i% = 0
 j% = RECCOUNT (dat$)
 WHILE NOT EOF (dat$)
   i% = i% + 1
   SET STATUS STR$ (i%,",999999") + "/" + STR$ (j%,",999999") + " " + dat$
   IF codedok.dat$ > 0 THEN 
     code% = feldq$$
     IF EXISTS (codedok.dat$,codedok.dokument) THEN 
       REM CALL Fehler(feldq$,feldokz$)
       SELECT KEY codedok.dat$ LOCK FILE "dokument" INDEX codedok.dokument
       coderaus.dokument = code%
       STORE FILE "dokument"
     END IF 
   END IF 
   SELECT NEXT LOCK FILE dat$
 WEND 

 dat$ = "reingang"
 feld$ = "Codere"
 feldq$ = feld$ + "." + dat$
 feldokz$ = feld$ + ".dokument"
 feldok$ = "CodeDok"
 FILE dat$
 INDEX feldq$$
 SELECT FIRST LOCK 
 i% = 0
 j% = RECCOUNT (dat$)
 WHILE NOT EOF (dat$)
   i% = i% + 1
   SET STATUS STR$ (i%,",999999") + "/" + STR$ (j%,",999999") + " " + dat$
   IF codedok.dat$ > 0 THEN 
     code% = feldq$$
     IF EXISTS (codedok.dat$,codedok.dokument) THEN 
       REM CALL Fehler(feldq$,feldokz$)
       SELECT KEY codedok.dat$ LOCK FILE "dokument" INDEX codedok.dokument
       coderein.dokument = code%
       STORE FILE "dokument"
     END IF 
   END IF 
   SELECT NEXT LOCK FILE dat$
 WEND 
 REM *******************ENDE Anpassung Dokumentendatei*********************************





 IF _projekt$ LIKE "WAWI" THEN 
 
   REM Anpassung ZBERART.SBF
   REM ================================================
 
   FILE "ZBERART"
   CALL FldUpdate("Artikel","NUM;9999999999.")
   CALL FldAdd("StatusBearb","TXT;1",1)
   CALL FldAdd("Filiale","NUM;00.",1)
   CALL FldAdd("ZBDatum","DAT;0d.mm.yy",1)
   SAVE FILE "zberart"
 END IF 
 
 
 
 REM    ***********************************
 REM    ** Anpassung Projekt "Mediathek" **
 REM    ** 23.01.94/FA                   **
 REM    ***********************************
 
 IF _projekt$ LIKE "MEDIA" THEN 
 
   REM Anpassung FILME.SBF
   REM ================================================
 
   CALL DFile(3,"FILME" + _fpw$)
   FILE "FILME"
   CALL FldAdd("Tarif","NUM;00.",0)
   CALL FldUpdate("Bemerkung","TXT;L4000 R")
   CALL FldAdd("Musik","TXT;50",1)
   CALL FldAdd("Buch","TXT;50",1)
   CALL FldAdd("verliehen","TXT;1",0)
 
   SAVE FILE "FILME"
 
   REM Anpassung JOURNAL.SBF
   REM ================================================
 
   CALL DFile(3,"JOURNAL" + _fpw$)
   FILE "JOURNAL"
   CALL FldAdd("CodeFL","NUM;000000.",1)
   SAVE FILE "FILME"
 
   REM Anpassung VERLEIH.SBF
   REM ================================================
 
   CALL DFile(3,"VERLEIH" + _fpw$)
   FILE "VERLEIH"
   CALL FldAdd("GebÅhr","NUM;,99999.00",0)
   CALL FldAdd("AnzahlTage","NMI;999.",0)
   CALL FldAdd("Journal","TXT;1 U",0)
   CALL FldAdd("QuickCodeKU","TXT;12",1)
   CALL FldAdd("zurÅck","TXT;1",1)
 
   SAVE FILE "VERLEIH"
   CALL Server("UPDFIELD","QuickCodeKU")
   CALL Server("UPDSTATUS","Erzeugung Feldinhalt")
   UPDATE QuickCodeKU.VERLEIH = DATE$ (datum.VERLEIH,"yymmdd") + STR$ (CodeKU.VERLEIH,"000000")
   END UPDATE 
 
 END IF 
 REM -- Ende Mediathek-Update -----------------------------------------
  
 
 CALL Server("UNLOADUPDATE","")
 CALL WriteConfig(_projekt$,"UPDATE","FALSE")
 CALL Fehler("Update beendet!","Das Programm mu· neu gestartet werden!")
 CLOSE ALL 
 CALL EXIT()
 END SUB 
 
 
 
 
 '      *********************************************
 '      ** Routinen fÅr Updates und Installationen **
 '      *********************************************
 
 
 
 ' Feldanpassung
 ' =======================================================================
 ' Zweck:       Anpassung des Feldformates
 ' Aufruf:      CALL FldUpdate(feldname$,newformat$)
 ' Beispiel:    CALL FldUpdate("Nachname","TXT;50")
 ' Hinweis:     - VerÑnderungen kînnen nur an der aktuellen Datei
 '                vorgenommen werden
 '              - alle énderungen mÅssen abschlie·end mit 
 '                SAVE FILE "filename" gesichert werden
 '              - die Umbenennung von Feldern ist nicht mîglich
 ' -----------------------------------------------------------------------
 ' 01.09.93/FA
 
SUB FldUpdate(Feldname$,NewFormat$)
 CALL GaugeUpdate()
 CALL Server("UPDFILE", FILE )
 CALL Server("UPDFIELD",Feldname$)
 SET STATUS "prÅfen Datei " + FILE + " Feld " + Feldname$
 IndexTyp$ = FIELDINFO$ (Feldname$,3)
 IF IndexTyp$ LIKE "IX*" THEN REMOVE INDEX Feldname$$
 MODIFY Feldname$$,Feldname$ + ";" + NewFormat$
 IF IndexTyp$ = "IXD" THEN 
   CALL Server("UPDSTATUS","Indexanpassung")
   CREATE INDEX ON Feldname$$
 END IF 
 IF IndexTyp$ = "IXU" THEN 
   CALL Server("UPDSTATUS","Indexanpassung")
   CREATE INDEX ON Feldname$$ UNIQUE 
 END IF 
 END SUB 
 
SUB FldRen(Feldname$,NewName$,NewFormat$,IndexType%)
 CALL GaugeUpdate()
 CALL Server("UPDFILE", FILE )
 CALL Server("UPDFIELD",Feldname$)
 ON ERROR GOTO ENDFldRen 
 IndexTyp$ = FIELDINFO$ (Feldname$,3)
 IF IndexTyp$ LIKE "IX*" THEN REMOVE INDEX Feldname$$
 MODIFY Feldname$$,NewName$ + ";" + NewFormat$
 IF IndexTyp$ = "IXD" THEN 
   CALL Server("UPDSTATUS","Indexanpassung")
   CREATE INDEX ON NewName$$
 END IF 
 IF IndexTyp$ = "IXU" THEN 
   CALL Server("UPDSTATUS","Indexanpassung")
   CREATE INDEX ON NewName$$ UNIQUE 
 END IF 
ENDFldRen: 
 CALL FldAdd(NewName$,NewFormat$,IndexType%)
 END SUB 
  
 
 
 ' FeldergÑnzung
 ' =======================================================================
 ' Zweck:       fÅgt ein neues Feld an die aktuelle Datei an
 ' Aufruf:      CALL FldAdd(feldname$,newformat$,IndexType%
 '
 '              IndexType%      0 = kein Index
 '                              1 = Mehrfachindex
 '                              2 = SchlÅsselindex
 '
 ' Beispiel:    CALL FldAdd("Notiz","TXT;4000",0)
 ' Hinweis:     - alle énderungen mÅssen abschlie·end mit 
 '                SAVE FILE "filename" gesichert werden
 ' -----------------------------------------------------------------------
 ' 01.09.93/FA
 
SUB FldAdd(Feldname$,NewFormat$,IndexType%)
 CALL GaugeUpdate()
 CALL Server("UPDFILE", FILE )
 CALL Server("UPDFIELD",Feldname$)
 CALL Server("UPDSTATUS","prÅfen")
 SET STATUS "prÅfen Datei " + FILE + " Feld " + Feldname$
 ON ERROR GOTO TrapFileFind
 tsfound% = 0
 a$ = FIELDINFO$ (FeldName$,0)
 tsfound% = 1
TrapFileFind: 
 IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
 IF tsfound% = 0 THEN 
   REM ** Feld neu erstellen
   ADD Feldname$ + ";" + NewFormat$ + ";1;1"
   SELECT CASE IndexType%
   CASE 1
     CREATE INDEX ON Feldname$$
   CASE 2
     CREATE INDEX ON Feldname$$ UNIQUE 
   END SELECT 
 ELSE 
   REM ** Feld auf FormatÑnderungen testen und anpassen
   IF FIELDINFO$ (feldname$,3) LIKE "IX*" AND IndexType% = 0 THEN 
     CALL Server("UPDSTATUS","Indexlîschung")
     REMOVE INDEX Feldname$$
   END IF 
   ok% = 1
   NewForm% = 0
   NewIndex% = 0
   cFormat$ = TRIM$ ( FIELDINFO$ (Feldname$,0) + ";" + FIELDINFO$ (Feldname$,4))
   IF UCASE$ (cformat$) <> UCASE$ (NewFormat$) THEN 
     ok% = 0
     NewForm% = 1
   END IF 
   IndexType$ = FIELDINFO$ (feldname$,3)
   IF (IndexType$ = "IXD" AND IndexType% = 2) OR (IndexType$ = "IXU" AND IndexType% = 1) THEN 
     ok% = 0
     NewIndex% = 1
   END IF 
   IF FIELDINFO$ (feldname$,3) LIKE "" AND IndexType% <> 0 THEN 
     NewIndex% = 1
     ok% = 0
   END IF 
   IF ok% = 0 THEN 
     IF NewForm% = 1 AND IndexType$ LIKE "IX*" THEN 
       CALL Server("UPDSTATUS","Indexlîschung")
       REMOVE INDEX Feldname$$
     END IF 
     IF NewForm% = 1 THEN 
       CALL Server("UPDSTATUS","Formatanpassung")
       MODIFY Feldname$$,Feldname$ + ";" + NewFormat$
       CALL Server("UPDSTATUS","Indexanpassung")
       SELECT CASE IndexType%
       CASE 1
         CREATE INDEX ON Feldname$$
       CASE 2
         CREATE INDEX ON Feldname$$ UNIQUE 
       END SELECT 
       ok% = 1
     END IF 
   END IF 
   IF ok% = 0 THEN 
     IF NewIndex% = 1 THEN 
       IF IndexType$ LIKE "IX*" THEN 
         CALL Server("UPDSTATUS","Indexlîschung")
         REMOVE INDEX Feldname$$
       END IF 
       CALL Server("UPDSTATUS","Indexanpassung")
       SELECT CASE IndexType%
       CASE 1
         CREATE INDEX ON Feldname$$
       CASE 2
         CREATE INDEX ON Feldname$$ UNIQUE 
       END SELECT 
       ok% = 1
     END IF 
   END IF 
 END IF 
 END SUB 
 
  
 
 
 
 ' Feld fÅr XCHANGE als MAIN markieren
 ' =======================================================================
  
SUB MarkMain(FieldName$)
 REM ** Originaleintrag aus XCHANGE -> MODIFY findex$$,findex$ + ";" + FieldType$ + ";" + dFormat$,"COM MAIN"
 IF FIELDINFO$ (FieldName$,8) <> "MAIN" THEN 
   CALL Server("UPDFILE", FILE )
   CALL Server("UPDFIELD",FieldName$)
   CALL Server("UPDSTATUS","fÅr Datenaustausch markieren")
   tIndex$ = FIELDINFO$ (FieldName$,3)
   IF tIndex$ <> "" THEN REMOVE INDEX Fieldname$$
   FieldType$ = FIELDINFO$ (FieldName$,0)
   dFormat$ = FIELDINFO$ (FieldName$,4)
   MODIFY FieldName$$,FieldName$ + ";" + FieldType$ + ";" + dFormat$,"COM MAIN"
   IF tIndex$ <> "" THEN 
     CALL Server("UPDSTATUS","Index neu erstellen")
     CREATE INDEX ON FieldName$$
   END IF 
 END IF 
 END SUB 
  
  
 ' Gaugeupdate fÅr Updateprozeduren
 ' =======================================================================
 
SUB GaugeUpdate()
 Changes% = Changes% + 1
 cproz% = INT ((100 / ChangesMax%) * Changes%)
 IF cproz% < 0 THEN cproz% = 0
 IF cproz% > 100 THEN cproz% = 100
 CALL Server("UPDGAUGE", LTRIM$ ( STR$ (cproz%,"999")))
 END SUB 
 
 
 ' SUPERVIS - Pa·wîrter verschlÅsseln
 ' =======================================================================
 
SUB PWUpdate()
 FILE "SUPERVIS"
 INDEX CodeMA
 SELECT FIRST LOCK 
 WHILE NOT EOF ("SUPERVIS")
   IF KÅrzel <> "XX" THEN 
     Pa·wort = CALL ("crypt",Pa·wort)
     KÅrzel = "XX"
     STORE FILE "SUPERVIS"
   END IF 
   SELECT NEXT LOCK FILE "SUPERVIS" INDEX CodeMA
 WEND 
 END SUB 
  
 
  
 
 
 
 
SUB UmsFuel1ab()
 cfile$ = FILE 
 MOUSE OFF 
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(3,"MASTER" + _fpw$)
 CALL DFile(3,"UMSATZ" + _fpw$)
 CALL DFile(3,"schein" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"VERTRETE" + _fpw$)
 CALL DFile(3,"PROVISIO" + _fpw$)
 CALL DFile(3,"floskel" + _fpw$)
 CALL DFile(3,"einzprov" + _fpw$)
 FILE "adressen"
 INDEX codeku.adressen
 SELECT FIRST 
 FILE "master"
 INDEX codeku.master
 SELECT FIRST 
 FILE "umsatz"
 INDEX QuickCodekuJahr.umsatz
 SELECT FIRST 
 SET STATUS "Lîschen der alten UmsÑtze"
 REMOVE FROM FILE "umsatz"
 FILE "provisio"
 INDEX QuickCodeMAJahr.provisio
 SELECT FIRST 
 SET STATUS "Lîschen der alten Provisionen"
 REMOVE FROM FILE "provisio"
 FILE "einzprov"
 INDEX Codems.einzprov
 SELECT FIRST 
 SET STATUS "Lîschen der alten Einzel-Provisionen"
 REMOVE FROM FILE "einzprov"
 FILE "vertrete"
 INDEX codema.vertrete
 SELECT FIRST 
 SET STATUS "RÅcksetzen der Provisionsgesamtfelder"
 UPDATE ReGesGes = 0:GutGesGes = 0:AngGesGes = 0:LieGesGes = 0:AufGesGes = 0:BesGesGes = 0:ProGesGes = 0
 END UPDATE 
 UPDATE ReGesGesEU = 0:GutGesGesEU = 0:AngGesGesEU = 0:LieGesGesEU = 0:AufGesGesEU = 0:BesGesGesEU = 0:ProGesGesEU = 0
 END UPDATE 
 SET STATUS ""
 FILE "adressen"
 INDEX nachname.adressen
 IF NOT EOF ("adressen") THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 codeku% = codeku.adressen
 nachname$ = nachname.adressen
 iab% = 0
 jab% = RECCOUNT ("ADRESSEN")
 WHILE NOT EOF ("adressen")
   iab% = iab% + 1
   SET STATUS "Berechne UmsÑtze fÅr Adresse: " + nachname$ + "  Datensatz: " + LTRIM$ ( STR$ (iab%,",99999999")) + " von " + LTRIM$ ( STR$ (jab%,",99999999"))
   IF EXISTS (codeku%,codeku.master) THEN 
     REM SET STATUS "Berechne UmsÑtze fÅr Adresse: " + nachname$
     FILE "master"
     INDEX codeku.master
     SELECT FIRST 
     SELECT KEY codeku% LOCK FILE "master" INDEX codeku.master
     AngGesGes% = 0
     ReGesGes% = 0
     LieGesGes% = 0
     AufGesGes% = 0
     BesGesGes% = 0
     GutGesGes% = 0
 
     AngGesGesEU% = 0
     ReGesGesEU% = 0
     LieGesGesEU% = 0
     AufGesGesEU% = 0
     BesGesGesEU% = 0
     GutGesGesEU% = 0
     WHILE NOT EOF ("master") AND codeku.master = codeku%
       codems% = codems.master
       FILE "schein"
       INDEX codems.schein
       SELECT FIRST 
       SELECT KEY codems% FILE "schein" INDEX codems.schein
       FILE "master"
       CALL ProvFuelGes(codems%)
       FILE "master"
       SELECT KEY codems% LOCK FILE "master" INDEX codems.master
       datum$ = DATE$ (datum.master,"yyyymmdd")
       jahr$ = LEFT$ (datum$,4)
       monat$ = MID$ (datum$,5,2)
       mo% = VAL (monat$)
       art% = art.master
       gesbrutto% = gesBrutto.master
       gesbruttoEU% = gesBruttoEU.master
 
       quickKuJahr$ = STR$ (codeku%,"000000") + jahr$
       BuchBrutto.master = GesBrutto.master
       BuchBruttoEU.master = GesBruttoEU.master
       BuchUms.master = "Y"
       BuchDatum.master = Datum.master
       BuchProv.master = ProvisDM.master
       BuchProvEU.master = ProvisEU.master
       BuchCodeMA.master = CodeMA.master
       STORE FILE "master"
       FILE "umsatz"
       INDEX QuickCodekuJahr.umsatz
       SELECT FIRST 
       IF EXISTS (quickKuJahr$,QuickCodekuJahr.umsatz) THEN 
         SELECT KEY quickKuJahr$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
       ELSE 
         BLANK FILE "umsatz"
         CodeUm.umsatz = SER ("umsatz",1)
         codeku.umsatz = codeku%
         jahr.umsatz = VAL (jahr$)
         QuickCodekuJahr.umsatz = STR$ (codeku%,"000000") + jahr$
         STORE FILE "umsatz"
         SELECT FIRST INDEX QuickCodekuJahr.umsatz
         SELECT KEY quickKuJahr$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
       END IF 
       SELECT CASE art%
         CASE 1
           MSArt$ = "Angebote"
           mo% = VAL (monat$)
           IF mo% = 0 THEN mo% = 1
           feld$ = "Ang" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           AngGesJahr.umsatz = AngGesJahr.umsatz + gesbrutto%
           AngGesGes% = AngGesGes% + gesbrutto%
 
           feldEU$ = "Ang" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           AngGesJahrEU.umsatz = AngGesJahrEU.umsatz + gesbruttoEU%
           AngGesGesEU% = AngGesGesEU% + gesbruttoEU%
           CALL QuickStore("UMSATZ")
         CASE 2
           MSArt$ = "Rechnungen"
           mo% = VAL (monat$)
           IF mo% = 0 THEN mo% = 1
           feld$ = "Rec" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           ReGesJahr.umsatz = REGesJahr.umsatz + gesbrutto%
           ReGesGes% = ReGesGes% + gesbrutto%
 
           feldEU$ = "Rec" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           ReGesJahrEU.umsatz = REGesJahrEU.umsatz + gesbruttoEU%
           ReGesGesEU% = ReGesGesEU% + gesbruttoEU%
           CALL QuickStore("UMSATZ")
         CASE 3
           MSArt$ = "Lieferscheine"
           mo% = VAL (monat$)
           IF mo% = 0 THEN mo% = 1
           feld$ = "Lie" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           LieGesJahr.umsatz = LieGesJahr.umsatz + gesbrutto%
           LieGesGes% = LieGesGes% + gesbrutto%
 
           feldEU$ = "Lie" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           LieGesJahrEU.umsatz = LieGesJahrEU.umsatz + gesbruttoEU%
           LieGesGesEU% = LieGesGesEU% + gesbruttoEU%
           CALL QuickStore("UMSATZ")
         CASE 4
           MSArt$ = "AuftrÑge"
           IF mo% = 0 THEN mo% = 1
           feld$ = "Auf" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           AufGesJahr.umsatz = AufGesJahr.umsatz + gesbrutto%
           AufGesGes% = AufGesGes% + gesbrutto%
 
           feldEU$ = "Auf" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           AufGesJahrEU.umsatz = AufGesJahrEU.umsatz + gesbruttoEU%
           AufGesGesEU% = AufGesGesEU% + gesbruttoEU%
           CALL QuickStore("UMSATZ")
         CASE 5
           MSArt$ = "Bestellungen"
           IF mo% = 0 THEN mo% = 1
           feld$ = "Bes" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           BesGesJahr.umsatz = BesGesJahr.umsatz + gesbrutto%
           BesGesGes% = BesGesGes% + gesbrutto%
 
           feldEU$ = "Bes" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           BesGesJahrEU.umsatz = BesGesJahrEU.umsatz + gesbruttoEU%
           BesGesGesEU% = BesGesGesEU% + gesbruttoEU%
           CALL QuickStore("UMSATZ")
         CASE 7
           MSArt$ = "Gutschriften"
           IF mo% = 0 THEN mo% = 1
           feld$ = "Gut" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           GutGesJahr.umsatz = GutGesJahr.umsatz + gesbrutto%
           GutGesGes% = GutGesGes% + gesbrutto%
 
           feldEU$ = "Gut" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           GutGesJahrEU.umsatz = GutGesJahrEU.umsatz + gesbruttoEU%
           GutGesGesEU% = GutGesGesEU% + gesbruttoEU%



           feld$ = "Rec" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           ReGesJahr.umsatz = REGesJahr.umsatz + gesbrutto%
           ReGesGes% = ReGesGes% + gesbrutto%
 
           feldEU$ = "Rec" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           ReGesJahrEU.umsatz = REGesJahrEU.umsatz + gesbruttoEU%
           ReGesGesEU% = ReGesGesEU% + gesbruttoEU%

           CALL QuickStore("UMSATZ")
           MOUSE OFF 
       END SELECT 
       FILE "master"
       MOUSE OFF 
     SELECT NEXT LOCK INDEX codeku.master
     WEND 
   END IF 
 
 FILE "adressen"
 INDEX nachname.adressen
 SELECT KEY codeku% LOCK FILE "adressen" INDEX codeku.adressen
 AngGesGes.adressen = AngGesGes%
 ReGesGes.adressen = ReGesGes%
 LieGesGes.adressen = LieGesGes%
 AufGesGes.adressen = AufGesGes%
 BesGesGes.adressen = BesGesGes%
 GutGesGes.adressen = GutGesGes%
 
 AngGesGesEU.adressen = AngGesGesEU%
 ReGesGesEU.adressen = ReGesGesEU%
 LieGesGesEU.adressen = LieGesGesEU%
 AufGesGesEU.adressen = AufGesGesEU%
 BesGesGesEU.adressen = BesGesGesEU%
 GutGesGesEU.adressen = GutGesGesEU%
 STORE FILE "adressen"
 
 SELECT NEXT INDEX nachname.adressen
 SET STATUS "Berechne UmsÑtze fÅr Adresse: " + nachname.adressen
 codeku% = codeku.adressen
 nachname$ = nachname.adressen
 WEND 
 SET STATUS "Berechnung der UmsÑtze beendet!"
 FILE cfile$
 MOUSE ON 
 END SUB 
 
 
 
 
 
SUB reorgkv(pfad$,orig$,kopie$,leerd$,dpfad$)
 REM CALL Fehler("reorgkv0","")
 MOUSE OFF 
 IF EXISTS (pfad$ + kopie$ + ".sbf") THEN 
   DELETE pfad$ + kopie$ + ".*"
 END IF 
 FILE orig$
 ON ERROR GOTO errkvreo1
 tex$ = "Reoganisiere " + orig$ + " nach " + kopie$
 REQUEST tex$,"",2
 SET STATUS "Reoganisiere " + orig$ + " nach " + kopie$
 REORGANIZE FILE orig$ TO pfad$ + kopie$ + ".sbf"
 tex$ = orig$ + " nach " + pfad$ + kopie$ + " kopiert!"
 REQUEST tex$,"",2
 ON ERROR GOTO errkvreo2
 FILE kopie$
 CLOSE FILE orig$
 IF EXISTS (pfad$ + orig$ + ".sbf") THEN 
   DELETE pfad$ + orig$ + ".*"
   tex$ = orig$ + " gelîscht!"
   REQUEST tex$,"",2
 END IF 
 ON ERROR GOTO errkvreo3
 test$ = pfad$ + leerd$ + _fpw$
 OPEN FILE SHARE ,0pfad$ + leerd$ + _fpw$
 REMOVE FROM FILE leerd$
 REORGANIZE FILE leerd$ TO pfad$ + orig$ + ".SBF"
 REQUEST "Leeres Original erstellt","",2
 ON ERROR GOTO errkvreo4
 FILE kopie$
 SELECT FIRST 
 REM SELECT KEY 5730 FILE "VORGANG" INDEX Codevt.VORGANG
 ixkuktoz% = FILEINFO (kopie$,1)
 DIM ixkukto$(ixkuktoz%)
 FILLARRAY ixkukto$,1
 i% = 0
 k% = RECCOUNT (kopie$)
 WHILE NOT EOF (kopie$)
   
   i% = i% + 1
   
   SET STATUS STR$ (i%,",999999") + " DatensÑtze in " + orig$ + " von " + STR$ (k%,",999999") + " kopiert"
   CALL Server("UPDSTATUS", STR$ (i%,",999999") + " DatensÑtze von " + STR$ (k%,",999999") + " kopiert")
   BLANK FILE orig$
   aaaaa% = CopyRecord%(kopie$,orig$)
   REM FOR j% = 0 TO ixkuktoz% - 1
     REM feld1$ = ixkukto$(j%) + "." + orig$
     REM feld2$ = ixkukto$(j%) + "." + kopie$
     REM IF feld1$ LIKE "AGSperr*" THEN 
     REM ELSE 
       REM feld1$$ = feld2$$
     REM END IF 
   REM NEXT j%
   STORE FILE orig$
   FILE kopie$
   SELECT NEXT FILE kopie$
 WEND 
 CLOSE FILE kopie$
 GOTO endkvreo10
errkvreo1: 
 CALL Fehler("Bei der Komplettreoganisation der Datei ist ein Fehler aufgetreten!","")
 GOTO endkvreo10
errkvreo2: 
 CALL Fehler("Beim Lîschen der Originaldatei ist etwas schiefgegangen!","")
 GOTO endkvreo10
errkvreo3: 
 CALL Fehler("Beim reorganisieren der Leerdatei zur Originaldatei ist etwas schiefgegangen","")
 GOTO endkvreo10
errkvreo4: 
 CALL Fehler("Beim Kopieren der einzelnen DatensÑtze (aus der Kopiedatei in die Originaldatei) ist ein Fehler aufgetreten!","")
 CLOSE FILE kopie$
 CLOSE FILE orig$
 DELETE pfad$ + orig$ + ".*"
 IF orig$ LIKE "Adr*" THEN 
   IF EXISTS (dpfad$ + "\Adressen.sb!") THEN DELETE dpfad$ + "\Adressen.sb!"
   COPY dpfad$ + "\A*.*" TO _netpath$ + "OFFICE\"
 END IF 
 IF orig$ LIKE "KVER*" THEN 
   IF EXISTS (dpfad$ + "\kvertrag.sb!") THEN DELETE dpfad$ + "\kvertrag.sb!"
   COPY dpfad$ + "\K*.*" TO _netpath$ + "PROVIS\"
 END IF 
 IF orig$ LIKE "VPROD*" THEN 
   IF EXISTS (dpfad$ + "\vprodukt.sb!") THEN DELETE dpfad$ + "\vprodukt.sb!"
   COPY dpfad$ + "\vprod*.*" TO _netpath$ + "PROVIS\"
 END IF 
 GOTO endkvreo10
endkvreo10: 
 ON ERROR GOTO ErrorHandler
 END SUB 
    
 
SUB DokAnpName(date1$)
 REM CALL Fehler(date1$,"")
 FILE date1$
 INDEX codedok.date1$
 IF RECCOUNT (date1$) > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 i% = 0
 k% = RECCOUNT (date1$)
 WHILE NOT EOF (date1$)
   i% = i% + 1
   ok% = 0
   IF LTRIM$ (DateiOld.date1$) = "" AND LEFT$ (Dateiname.date1$,1) = "\" THEN 
     DateiOld.date1$ = Dateiname.date1$
     DateiRes.date1$ = Dateiname.date1$
     dd$ = UCASE$ (Dateiname.date1$)
     pfad$ = MID$ ( UCASE$ (_netpath$),3)
     l1% = 0
     l1% = LEN (pfad$)
     pos% = 0
     pos% = INSTR (dd$,pfad$)
     IF pos% > 0 THEN 
       dateiname$ = MID$ (dd$,pos% + l1%)
       REM CALL Fehler(dateiname$,dd$)
       Dateiname.date1$ = dateiname$
       ok% = 1
     ELSE 
       t1% = INSTR (4,dd$,"\")
       zw1$ = MID$ (dd$,t1%)
       Dateiname.date1$ = zw1$
       ok% = 1
     END IF 
   END IF 
   SET STATUS LTRIM$ ( STR$ (i%,",999999")) + " Dokumente geprÅft von " + LTRIM$ ( STR$ (k%,",999999"))
   IF ok% = 1 THEN 
     IF LEFT$ (Dateiname.date1$,1) = "\" THEN Dateiname.date1$ = MID$ (Dateiname.date1$,2)
     IF RIGHT$ (Dateiname.date1$,1) = "\" THEN 
       l% = LEN (Dateiname.date1$)
       Dateiname.date1$ = LEFT$ (Dateiname.date1$,l% - 1)
     END IF 
     STORE FILE date1$
   END IF 
   SELECT NEXT LOCK FILE date1$ INDEX codedok.date1$
 WEND 
 END SUB 
  

