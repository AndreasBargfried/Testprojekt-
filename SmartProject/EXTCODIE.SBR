 CALL main()
 
 '      ***************************************
 '      ** WAWI/FACTURA - Library Funktionen **
 '      ** (C)'93;'95 CoDIE Computer-Dienste **
 '      ** Stand: 17.10.95                   **
 '      ***************************************
 
 
 '      **********************************************
 '      ** Routinen fÅr Formular "ADRESSEN"         **
 '      ** (Angebot/Rechnung/Lieferschein/AuftrÑge) **
 '      **********************************************
 
 
 ' Verzweigen in Angebotsbearbeitung
 ' =======================================================================
 
SUB ADRAngebot()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 scode% = knr% * 10 + 1
 ok% = 1
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine Angebote erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
   cums% = 0
 ELSE 
   cums% = CodeMS.master
 END IF 
 IF ok% = 1 THEN 
   CALL Master(1)
   neumaster$ = "j"
 END IF 
 END SUB 
 
 
 ' Verzweigen in Rechnungsbearbeitung
 ' =======================================================================
 
SUB ADRRechnung()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 scode% = knr% * 10 + 2
 ok% = 1
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine Rechnungen erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
   cums% = 0
 ELSE 
   cums% = CodeMS.master
 END IF 
 IF ok% = 1 THEN 
   CALL Master(2)
   neumaster$ = "j"
 END IF 
 
 END SUB 
 
 
 ' Verzweigen in Lieferscheinbearbeitung
 ' =======================================================================
 
SUB ADRLiefer()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 scode% = knr% * 10 + 3
 ok% = 1
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine Lieferscheine erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
   cums% = 0
 ELSE 
   cums% = CodeMS.master
 END IF 
 IF ok% = 1 THEN 
   CALL Master(3)
   neumaster$ = "j"
 END IF 
 END SUB 
 
 
 ' Verzweigen in Auftragssbearbeitung
 ' =======================================================================
 
SUB ADRAuftrag()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 scode% = knr% * 10 + 4
 ok% = 1
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine AuftrÑge erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
   cums% = 0
 ELSE 
   cums% = CodeMS.master
 END IF 
 IF ok% = 1 THEN 
   CALL Master(4)
   neumaster$ = "j"
 END IF 
 END SUB 
 
 
 ' Verzweigen in Bestellungsbearbeitung
 ' =======================================================================
 
SUB ADRBestell()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 scode% = knr% * 10 + 5
 ok% = 1
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine Bestellungen erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
   cums% = 0
 ELSE 
   cums% = CodeMS.master
 END IF 
 IF ok% = 1 THEN 
   CALL Master(5)
   neumaster$ = "j"
 END IF 
 END SUB 
 
 
 ' Verzweigen in die Gutschrifterstellung
 ' =======================================================================
 
SUB ADRGutschr()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 scode% = knr% * 10 + 7
 ok% = 1
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine Gutschriften erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
   cums% = 0
 ELSE 
   cums% = CodeMS.master
 END IF 
 IF ok% = 1 THEN 
   CALL Master(7)
   neumaster$ = "j"
 END IF 
 END SUB 
 
 
 ' Formular "ADRESSEN" aktualisieren
 ' =======================================================================
  
SUB ADRUpdate()
 cfile$ = FILE 
 FILE "master"
 scode% = CodeKU.adressen * 10 + 1
 REM SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF EXISTS (scode%,quickcodeku.MASTER) THEN 
   IF _projekt$ LIKE "WAWI" THEN 
     MENU 6,1,2,"&Kundenbestellung","ADRAngebot"
     angebot$ = "&Kundenbestell Æ"
   ELSE 
     MENU 6,1,2,"&Angebote","ADRAngebot"
     angebot$ = "&Angebote Æ"
   END IF 
 ELSE 
   IF _projekt$ LIKE "WAWI" THEN 
     MENU 6,1,1,"&Kundenbestellung","ADRAngebot"
     angebot$ = "&Kundenbestell"
   ELSE 
     MENU 6,1,1,"&Angebote","ADRAngebot"
     angebot$ = "&Angebote"
   END IF 
 END IF 
 scode% = CodeKU.adressen * 10 + 2
 REM SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF EXISTS (scode%,quickcodeku.MASTER) THEN 
   MENU 6,2,2,"&Rechnungen","ADRRechnung"
   rechnung$ = "&Rechnungen Æ"
 ELSE 
   MENU 6,2,1,"&Rechnungen","ADRRechnung"
   rechnung$ = "&Rechnungen"
 END IF 
 scode% = CodeKU.adressen * 10 + 3
 REM SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF EXISTS (scode%,quickcodeku.MASTER) THEN 
   MENU 6,3,2,"&Lieferschein","ADRLiefer"
   lieferschein$ = "&Lieferscheine Æ"
 ELSE 
   MENU 6,3,1,"&Lieferschein","ADRLiefer"
   lieferschein$ = "&Lieferscheine"
 END IF 
 scode% = CodeKU.adressen * 10 + 4
 REM SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF EXISTS (scode%,quickcodeku.MASTER) THEN 
   MENU 6,4,2,"A&uftrÑge","ADRAuftrag"
   auftrag$ = "A&uftrÑge Æ"
 ELSE 
   MENU 6,4,1,"A&uftrÑge","ADRAuftrag"
   auftrag$ = "A&uftrÑge"
 END IF 
 scode% = CodeKU.adressen * 10 + 5
 REM SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF EXISTS (scode%,quickcodeku.MASTER) THEN 
   MENU 6,5,2,"Be&stellung","ADRBestell"
   bestellung$ = "Be&stellung Æ"
 ELSE 
   MENU 6,5,1,"Be&stellung","ADRBestell"
   bestellung$ = "Be&stellung"
 END IF 
 scode% = CodeKU.adressen * 10 + 7
 REM SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF EXISTS (scode%,quickcodeku.MASTER) THEN 
   MENU 6,6,2,"&Gutschrift","ADRGutschr"
   gutschrift$ = "&Gutschrift Æ"
 ELSE 
   MENU 6,6,1,"&Gutschrift","ADRGutschr"
   gutschrift$ = "&Gutschrift"
 END IF 
 cunr% = codeku.adressen
 REM IF Sperre.MAADR <> 0 THEN 
   REM IF MNdisabled%("DATALOCK") THEN 
     REM MAADRLock$ = "gesperrt"
   REM ELSE 
     REM SELECT KEY Sperre.MAADR FILE "SUPERVIS" INDEX CodeMA.SUPERVIS
     REM MAADRLock$ = "gesperrt durch " + Name.SUPERVIS
   REM END IF 
   REM MENU 2,6,2
 REM ELSE 
   REM MAADRLock$ = "freier Zugriff"
   REM MENU 2,6,1
 REM END IF 
 FILE cfile$
 END SUB 
 
 
 
 
 '      **********************************************************
 '      ** Artikelzugang/Verlust nach Datenaustausch verrechnen **
 '      **********************************************************
 
SUB ABZUVerech()
 MOUSE OFF 
 CALL DFile(3,"ABZUGANG" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 codeaz% = VAL (ReadConfig$("FACTURA.XCHANGE","FirstIn.ABZUGANG"))
 FILE "abzugang"
 INDEX codeaz.abzugang
 SELECT FIRST 
 IF codeaz% = 0 THEN 
   REQUEST "Datenaustausch abgeschlossen!","",2
 END IF 
 IF codeaz% <> 0 THEN 
   SELECT KEY codeaz% FILE "abzugang" INDEX codeaz.abzugang
   WHILE NOT EOF ("abzugang")
     codeaz$ = STR$ (codeaz%,"000000")
     SET STATUS codeaz$
     codear% = codear.abzugang
     art% = art.abzugang
     artzugang% = artzugang.abzugang
     artabgang% = artabgang.abzugang
     anzahl% = anzahl.abzugang
     vknetto% = vknetto.abzugang
     abgleich% = abgleich.abzugang
     FILE "artikel"
     SELECT KEY codear% LOCK FILE "artikel" INDEX codear.artikel
     IF FOUND ("artikel") THEN 
       SELECT CASE art%
         CASE 0
           REM Abgang durch Bruch = negativer Wert
           bestand.artikel = bestand.artikel + anzahl%
           ek.artikel = vknetto%
         CASE 3
           REM Abgang durch Lieferschein = positiver Wert
           bestand.artikel = bestand.artikel - anzahl%
         CASE 6
           REM Zugang 
           IF abgleich% <> 1 THEN 
             bestand.artikel = bestand.artikel + anzahl%
             ek.artikel = vknetto%
           END IF 
         CASE 7
           REM Gutschrift
           bestand.artikel = bestand.artikel + anzahl%
       END SELECT 
       CALL FStore("artikel")
     END IF 
     FILE "abzugang"
     SELECT NEXT INDEX codeaz.abzugang
     codeaz% = codeaz.abzugang
     td$ = STR$ (codeaz%,"000000")
     CALL WriteConfig("FACTURA.XCHANGE","FirstIn.ABZUGANG",td$)
   WEND 
   CALL WriteConfig("FACTURA.XCHANGE","FirstIn.ABZUGANG","0")
   IF codeaz% = 0 THEN 
     REQUEST "Datenaustausch abgeschlossen!","",2
   END IF 
 END IF 
 MOUSE ON 
 SET STATUS "Datenaustausch beendet!"
 END SUB 
 
 
 
 
 
 
 '      ***************************
 '      ** Artikelzugang/Verlust **
 '      ***************************
 
SUB ABZUGANG(zugart%)
 CALL DFile(3,"ABZUGANG" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"GRUPPEN" + _fpw$)
 IF DEFA$ = "MEGA" THEN 
   CALL DFile(3,"KSATZ" + _fpw$)
   CALL DFile(3,"SSATZ" + _fpw$)
 END IF 
 DIM Artikel$(1000)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 FILE "gruppen"
 INDEX CodeGR
 SELECT FIRST 
 a% = 0
 REDIM ProdGruppen$( RECCOUNT ("gruppen"))
 WHILE NOT EOF ("gruppen")
   ProdGruppen$(a%) = Kurzbezeichnung.gruppen
   a% = a% + 1
   SELECT NEXT 
 WEND 
 
 REM -----------Einstellung des Modus, der darÅber entscheidet, wie der Artikelzugang erfolgt
 REM -------- zugopt% = 1. normaler Zugang und Storno (Zugangswert<>0)
 REM ---------          2. Inventurzugang  und Storno  (Inventurplusdifferenz)
 REM ---------          3. Rabatt-Zugang   und Storno  (Menge*MP=Nettowert mit manuellen 
 REM                                                   Buchungsbeleg), d.h. RabattzugÑnge                                                                  
 REM                                                   verÑndern nicht den MP
 REM ---------          4. Zugang ohne Rechnung und Storno
 REM ---------          5. EK+Rechnungsnr nachbuchen von:Zugang ohne Rechnung und Storno
 REM 
 REM --------- zugart%=0 und zugabg%=0 -> Zugang / zugabg%=1 -> Storno eines Zugangs
 REM ---------
 REM ---------
 REM -----------Einstellung des Modus, der darÅber entscheidet, wie der Artikelabgang erfolgt 
 REM -------- zugopt% = 1. normaler Abgang und Storno(Lieferschein/Gutschrift  -> nicht in dieser Routine
 REM --------           2. Inventurabgang  und Storno  (Inventurminusdifferenz)
 REM --------           3. Abgang durch Bruch usw und Storno
 REM
 REM -------- zugart%=1 und zugabg%=0 -> Abgang / zugabg%=1 -> Storno eines Abgangs 
 
 REM PrÅfung, ob Periode abgeschlossen ist
 IF DEFA$ = "MEGA" THEN 
   CALL PeriodenPruef()
   IF periode% = 0 THEN END SUB 
 END IF 
 
 IF zugart% = 0 AND DEFA$ = "MEGA" THEN 
   zugopt% = 1
   zugabg% = 0
   CREATE DIALOG "ZUGART",0,0,180,148,title$,"MS Sans Serif",8
   ADD DIALOG "ZUGART",9,7,2,20,20,2
   ADD DIALOG "ZUGART",3,32,6,54,11,0,"Zugang",0,zugabg%
   ADD DIALOG "ZUGART",3,100,6,54,11,0,"Storno",1,zugabg%
   ADD DIALOG "ZUGART",4,0,22,178,61,0,"Zugangs/Stornoart"
   ADD DIALOG "ZUGART",3,32,34,132,9,0,"normaler Zugang und Storno",1,zugopt%
   ADD DIALOG "ZUGART",3,32,45,132,10,0,"Inventurzugang und Storno",2,zugopt%
   ADD DIALOG "ZUGART",3,32,56,132,10,0,"Rabattzugang und Storno",3,zugopt%
   ADD DIALOG "ZUGART",3,32,67,132,10,0,"Zugang ohne Rechnung und Storno",4,zugopt%
   ADD DIALOG "ZUGART",3,8,104,169,9,0,"Zugang ohne Rechnung und Storno nachbuchen",5,zugopt%
   ADD DIALOG "ZUGART",4,1,86,179,40,0,"Nachbuchung von EKÔs"
   ADD DIALOG "ZUGART",1,33,129,55,16,1,"&OK",1,1
   ADD DIALOG "ZUGART",1,90,129,55,16,0,"&Abbrechen",0,0
   DIALOG "ZUGART",reqzu%
   REMOVE DIALOG "ZUGART"
   IF reqzu% = 0 THEN END SUB 
 END IF 
 IF zugart% = 1 THEN 
   zugabg% = 0
   zugopt% = 2
   CREATE DIALOG "ZUGART",0,0,180,104,title$,"MS Sans Serif",8
   ADD DIALOG "ZUGART",9,6,1,20,21,2
   ADD DIALOG "ZUGART",3,32,6,54,11,0,"Abgang",0,zugabg%
   ADD DIALOG "ZUGART",3,100,6,54,11,0,"Storno",1,zugabg%
   ADD DIALOG "ZUGART",4,0,22,178,61,0,"Abgangs/Stornoart"
   ADD DIALOG "ZUGART",3,32,44,132,10,0,"Inventurabgang und Storno",2,zugopt%
   ADD DIALOG "ZUGART",3,32,56,132,9,0,"Abgang durch Bruch usw. und Storno",3,zugopt%
   ADD DIALOG "ZUGART",1,33,85,55,16,1,"&OK",1,1
   ADD DIALOG "ZUGART",1,90,85,55,16,0,"&Abbrechen",0,0
   DIALOG "ZUGART",reqzu%
   REMOVE DIALOG "ZUGART"
   IF reqzu% = 0 THEN END SUB 
 END IF 
 _req% = 1
 WHILE _req% = 1
   suna$ = ""
   IF zugabg% = 0 THEN TEXTRahmen$ = "Artikelzugang"
   IF zugabg% = 1 THEN TEXTRahmen$ = "Artikelstorno"
   IF zugopt% < 5 OR DEFA$ <> "MEGA" THEN 
   REM IF zugopt% < 5 THEN 
     CREATE DIALOG "SCHAuswahl",0,0,237,150,title$,"MS Sans Serif",8
     ADD DIALOG "SCHAuswahl",4,0,1,237,125,0,""
     ADD DIALOG "SCHAuswahl",9,4,12,20,23,2
     ADD DIALOG "SCHAuswahl",4,30,14,200,80,0," Suche Åber... "
     ADD DIALOG "SCHAuswahl",5,30,100,147,8,0,"&Suchbezeichnung"
     ADD DIALOG "SCHAuswahl",6,30,110,200,12,0,0,suna$,20
     ADD DIALOG "SCHAuswahl",3,38,25,60,12,0,"Artikel&nummer",1,asuchopt%
     ADD DIALOG "SCHAuswahl",3,38,37,60,12,0,"&Bestellnummer",2,asuchopt%
     ADD DIALOG "SCHAuswahl",3,38,49,79,12,0,"Artikelbe&zeichnung",3,asuchopt%
     ADD DIALOG "SCHAuswahl",3,38,61,103,12,0,"Produkt&gruppen/Leistungen",4,asuchopt%
     ADD DIALOG "SCHAuswahl",8,48,75,169,66,259,2,Auswahl$,ProdGruppen$
     ADD DIALOG "SCHAuswahl",1,64,130,55,15,1,"&Weiter",1,1
     ADD DIALOG "SCHAuswahl",1,122,130,55,15,0,"&Abbruch",0,0
     DIALOG "SCHAuswahl",_req%
     REMOVE DIALOG "SCHAuswahl"
   ELSE 
     CREATE DIALOG "SCHAuswahl",0,0,237,70,title$,"MS Sans Serif",8
     ADD DIALOG "SCHAuswahl",4,0,1,237,46,0,""
     ADD DIALOG "SCHAuswahl",5,29,11,147,8,0,"Bitte geben Sie die Belegnummer ein"
     ADD DIALOG "SCHAuswahl",9,4,12,20,23,2
     ADD DIALOG "SCHAuswahl",6,29,20,200,13,0,0,Belegnralt$,20
     ADD DIALOG "SCHAuswahl",1,56,49,55,16,1,"&Weiter",1,1
     ADD DIALOG "SCHAuswahl",1,115,49,55,16,0,"&Abbruch",0,0
     DIALOG "SCHAuswahl",_req%
     REMOVE DIALOG "SCHAuswahl"
   END IF 
   IF _req% = 1 THEN 
     cuart% = 0
     SELECT CASE asuchopt%
     CASE 1
       feld$ = "artikelnummer.artikel"
     CASE 2
       feld$ = "bestellnummer.artikel"
     CASE 3
       feld$ = "bezeichnung.artikel"
     CASE 4
       feld$ = "bezeichnung.artikel"
     END SELECT 
     IF asuchopt% > 3 THEN 
       SELECT KEY Auswahl$ FILE "gruppen" INDEX Kurzbezeichnung.gruppen
       cugrp% = CodeGR.gruppen
       CALL Server("LISTBOXINIT","Auswahl")
       FILE "ARTIKEL"
       INDEX CodeGR.ARTIKEL
       SELECT FIRST 
       SELECT KEY cugrp%
       artlistok% = 0
       WHILE CodeGR.ARTIKEL = cugrp% AND NOT EOF ("ARTIKEL")
         item$ = Bezeichnung.ARTIKEL + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
         IF Bezeichnung.ARTIKEL LIKE "*" + suna$ + "*" OR Beschreibung.ARTIKEL LIKE "*" + suna$ + "*" THEN 
           CALL Server("LISTBOXADD",item$)
           artlistok% = 1
         END IF 
         SELECT NEXT FILE "ARTIKEL" INDEX CodeGR.ARTIKEL
       WEND 
       IF artlistok% <> 0 THEN 
          CALL Server("LISTBOXSHOW","")
       ELSE 
          CALL Fehler("Keine entsprechenden Artikel gefunden!","")
       END IF 
       MOUSE ON 
       erg$ = ServerReply$()
       IF erg$ <> "" THEN 
         cuart% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
       END IF 
     ELSE 
      IF zugopt% <> 5 THEN 
       FILE "ARTIKEL"
       INDEX feld$$
       SET STATUS "Suche Artikel..."
       SELECT KEY suna$ INDEX feld$$
       IF UCASE$ ( LEFT$ (feld$$, LEN (suna$))) <> UCASE$ (suna$) THEN 
         IF asuchopt% = 1 OR asuchopt% = 2 THEN 
           cuart% = 0
         ELSE 
           REQUEST "Eintrag nicht gefunden!","Erweiterte Suche durchfÅhren?",130,req%
           IF req% = 1 THEN 
             suna$ = "*" + suna$ + "*"
             wi% = 0
             CALL Server("LISTBOXINIT","Artikelauswahl")
             FILE "ARTIKEL"
             INDEX CodeAR.ARTIKEL
             SELECT FIRST 
             MOUSE OFF 
             artlistok% = 0
             CALL Gauge(1,"Artikeldatei wird durchsucht...")
             _prozt% = 0
             _anz% = RECCOUNT ("ARTIKEL")
             WHILE NOT EOF ("ARTIKEL")
               _proz% = INT ((100 / _anz%) * CodeAR.ARTIKEL)
               IF _proz% > 100 THEN _proz% = 100
               IF _proz% < 2 THEN _proz% = 2
               IF _proz% <> _prozt% THEN 
                 _prozt% = _proz%
                 SET STATUS "erweiterte Suche... " + STR$ (_prozt%,"999") + " %"
                 CALL Gauge(_proz%,"")
               END IF 
               adrfound% = 0
               IF feld$$ LIKE suna$ THEN 
                 wi% = wi% + 1
                 item$ = Bezeichnung.ARTIKEL + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
                 CALL Server("LISTBOXADD",item$)
                 artlistok% = 1
                 CALL Server("GaugeMessage","Artikeldatei wird durchsucht... " + TRIM$ ( STR$ (wi%,"9999")) + " gefunden")
               END IF 
               SELECT NEXT FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
             WEND 
             CALL Gauge(0,"")
             SET STATUS ""
             IF wi% <> 0 AND artlistok% <> 0 THEN 
               SET STATUS "Bitte wÑhlen Sie einen Artikel aus"
               REM MENU 2,6,1,"aus Suchliste &wÑhlen,F7","ADRWahl"
               CALL Server("LISTBOXSHOW","Bitte wÑhlen Sie den gewÅnschten Artikel aus:")
               erg$ = ServerReply$()
               IF erg$ <> "" THEN 
                 cuart% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
               END IF 
             ELSE 
               cuart% = 0
               CALL Fehler("Es wurde kein entsprechender Artikel gefunden!","")
             END IF 
           END IF 
         END IF 
       ELSE 
         cuart% = CodeAR.ARTIKEL
       END IF 
     END IF 
   END IF 
 
   REM -- Zugang buchen --
 
   IF cuart% > 0 OR zugopt% = 5 THEN 
     IF zugopt% <> 5 THEN 
       SELECT KEY cuart% LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
     END IF 
     Anzahl% = 1
     IF DEFA$ <> "MEGA" AND zugart% = 0 THEN 
       EK% = LieferEK.artikel
       CREATE DIALOG "ABZUGANG",104,82,292,239,title$,"MS Sans Serif",8
       ADD DIALOG "ABZUGANG",4,0,0,292,211,0,""
       ADD DIALOG "ABZUGANG",9,4,10,20,22,2
       ADD DIALOG "ABZUGANG",5,36,9,68,11,0,Artikelnummer.ARTIKEL
       ADD DIALOG "ABZUGANG",5,107,9,180,11,128,Bezeichnung.ARTIKEL
       ADD DIALOG "ABZUGANG",4,36,24,253,100,0," Beschreibung "
       ADD DIALOG "ABZUGANG",5,38,36,244,85,128,Beschreibung.ARTIKEL
       ADD DIALOG "ABZUGANG",5,36,128,62,10,0,"aktueller Bestand:"
       ADD DIALOG "ABZUGANG",5,100,128,170,10,0, LTRIM$ ( STR$ (Bestand.ARTIKEL,",999999999.00")) + " " + ME_.ARTIKEL
       REM ADD DIALOG "ABZUGANG",5,202,128,70,10,0,ME_.ARTIKEL
       ADD DIALOG "ABZUGANG",5,36,140,37,10,0,"letzter EK:"
       ADD DIALOG "ABZUGANG",5,100,140,157,10,0, LTRIM$ ( STR$ (LieferEK.ARTIKEL,"$ ,9999999999.00")) + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yy") + "/Mischpreis:" + LTRIM$ ( STR$ (EK.ARTIKEL,"$ ,9999999999.00"))
       ADD DIALOG "ABZUGANG",5,36,153,37,10,0,"Lieferant:"
       SELECT KEY Lieferant.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
       IF FOUND ("ADRESSEN") THEN Nachname$ = Nachname.ADRESSEN ELSE Nachname$ = "<keine Zuordnung>"
       ADD DIALOG "ABZUGANG",5,100,153,150,10,128,Nachname$
       ADD DIALOG "ABZUGANG",5,36,178,47,12,0,"Anzahl:"
       ADD DIALOG "ABZUGANG",6,100,175,120,12,0,0,Anzahl%,20
       ADD DIALOG "ABZUGANG",5,36,193,45,11,0,"EK (einzel):"
       ADD DIALOG "ABZUGANG",6,100,189,120,12,0,0,EK%,20
       ADD DIALOG "ABZUGANG",1,84,214,55,15,0,"&OK",1,1
       ADD DIALOG "ABZUGANG",1,146,214,55,15,0,"&Abbrechen",0,0
       DIALOG "ABZUGANG",req%
       REMOVE DIALOG "ABZUGANG"
     ELSE 
       SELECT CASE zugopt%
         CASE 1
           falsch% = 1
           Rabatt% = 0
           Anzahl% = 0
           EK% = LieferEK.ARTIKEL
           WHILE falsch% = 1
             falsch% = 0
             REM -- normaler Zugang
             IF zugabg% = 0 THEN TEXTRahmen$ = "normaler Zugang"
             IF zugabg% = 1 THEN TEXTRahmen$ = "normaler Zugangsstorno"
             CREATE DIALOG "ABZUGANG",101,81,292,239,title$,"MS Sans Serif",8
             ADD DIALOG "ABZUGANG",4,0,0,292,211,0,""
             ADD DIALOG "ABZUGANG",5,36,9,68,11,0,Artikelnummer.ARTIKEL
             ADD DIALOG "ABZUGANG",5,106,9,180,11,128,Bezeichnung.ARTIKEL
             ADD DIALOG "ABZUGANG",9,4,9,20,23,2
             ADD DIALOG "ABZUGANG",4,36,24,253,100,0," Beschreibung "
             ADD DIALOG "ABZUGANG",5,38,36,244,85,128,Beschreibung.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,128,62,9,0,"aktueller Bestand:"
             ADD DIALOG "ABZUGANG",5,100,128,150,9,0, LTRIM$ ( STR$ (Bestand.ARTIKEL,",999999999.00")) + " " + ME_.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,140,37,10,0,"letzter EK:"
             ADD DIALOG "ABZUGANG",5,100,140,157,10,0, LTRIM$ ( STR$ (LieferEK.ARTIKEL,"$ ,9999999999.00")) + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yy") + "/Mischpreis:" + LTRIM$ ( STR$ (EK.ARTIKEL,"$ ,9999999999.00"))
             ADD DIALOG "ABZUGANG",5,36,152,37,11,0,"Lieferant:"
             SELECT KEY Lieferant.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
             IF FOUND ("ADRESSEN") THEN Nachname$ = Nachname.ADRESSEN ELSE Nachname$ = "<keine Zuordnung>"
             ADD DIALOG "ABZUGANG",5,100,152,120,11,128,Nachname$
             ADD DIALOG "ABZUGANG",6,100,162,120,11,0,0,Belegnr$,12
             ADD DIALOG "ABZUGANG",5,36,162,51,11,0,"Belegnummer"
             ADD DIALOG "ABZUGANG",6,100,174,120,13,0,0,Anzahl%,20
             ADD DIALOG "ABZUGANG",5,36,177,46,13,0,"Anzahl:"
             ADD DIALOG "ABZUGANG",6,100,188,120,13,0,0,EK%,20
             ADD DIALOG "ABZUGANG",5,36,193,45,11,0,"EK (einzel):"
             ADD DIALOG "ABZUGANG",5,224,179,29,9,0,"Rabatt:"
             ADD DIALOG "ABZUGANG",6,224,188,44,13,0,0,Rabatt%,7
             ADD DIALOG "ABZUGANG",1,84,214,54,14,0,"&OK",1,1
             ADD DIALOG "ABZUGANG",1,146,214,55,14,0,"&Abbrechen",0,0
             DIALOG "ABZUGANG",req%
             REMOVE DIALOG "ABZUGANG"
             IF req% = 1 THEN 
             IF zugabg% = 0 THEN Buchungstext$ = "Normalzugang fÅr Artnr.: " + Artikelnummer.artikel
             IF zugabg% = 1 THEN Buchungstext$ = "Storno von Normalzugang fÅr Artnr.: " + Artikelnummer.artikel
               IF Belegnr$ = "" THEN 
                 CALL Fehler("Die Belegnummer mu· ausgefÅllt werden!","")
                 falsch% = 1
               END IF 
               IF EK% <= 0 THEN 
                 CALL Fehler("Der EK mu· grî·er/gleich 0 sein!","")
                 falsch% = 1
               END IF 
               IF Anzahl% <= 0 THEN 
                 CALL Fehler("Die Anzahl mu· grî·er 0 sein!","")
                 falsch% = 1
               END IF 
               IF Anzahl% > 0 AND zugabg% = 1 THEN 
                 Anzahl% = Anzahl% * - 1
               END IF 
               IF Rabatt% < 0 THEN 
                 CALL Fehler("Der Rabatt mu· grî·er/gleich 0 sein!","")
                 falsch% = 1
               END IF 
               IF Rabatt% > 0 THEN EK% = EK% - ((EK% * Rabatt%) / 100)
             ELSE 
               falsch% = 0
             END IF 
           WEND 
         CASE 2
           REM -- Inventurzugang
           falsch% = 1
           Rabatt% = 0
           Anzahl% = 0
           EK% = EK.ARTIKEL
           WHILE falsch% = 1
             falsch% = 0
             IF zugart% = 0 AND zugabg% = 0 THEN TEXTRahmen$ = "Inventurzugang"
             IF zugart% = 0 AND zugabg% = 1 THEN TEXTRahmen$ = "Inventurzugangstorno"
             IF zugart% = 1 AND zugabg% = 0 THEN TEXTRahmen$ = "Inventurabgang"
             IF zugart% = 1 AND zugabg% = 1 THEN TEXTRahmen$ = "Inventurabgangstorno"
             CREATE DIALOG "ABZUGANG",101,81,292,239,title$,"MS Sans Serif",8
             ADD DIALOG "ABZUGANG",4,0,0,292,211,0,""
             ADD DIALOG "ABZUGANG",5,36,9,68,11,0,Artikelnummer.ARTIKEL
             ADD DIALOG "ABZUGANG",5,106,9,180,11,128,Bezeichnung.ARTIKEL
             ADD DIALOG "ABZUGANG",9,4,9,20,23,2
             ADD DIALOG "ABZUGANG",4,36,24,253,100,0," Beschreibung "
             ADD DIALOG "ABZUGANG",5,38,36,244,85,128,Beschreibung.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,128,62,9,0,"aktueller Bestand:"
             ADD DIALOG "ABZUGANG",5,100,128,150,9,0, LTRIM$ ( STR$ (Bestand.ARTIKEL,",999999999.00")) + " " + ME_.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,140,37,10,0,"letzter EK:"
             ADD DIALOG "ABZUGANG",5,100,140,157,10,0, LTRIM$ ( STR$ (LieferEK.ARTIKEL,"$ ,9999999999.00")) + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yy") + "/Mischpreis:" + LTRIM$ ( STR$ (EK.ARTIKEL,"$ ,9999999999.00"))
             ADD DIALOG "ABZUGANG",5,36,152,37,10,0,"Lieferant:"
             SELECT KEY Lieferant.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
             IF FOUND ("ADRESSEN") THEN Nachname$ = Nachname.ADRESSEN ELSE Nachname$ = "<keine Zuordnung>"
             ADD DIALOG "ABZUGANG",5,100,152,150,10,128,Nachname$
             IF DEFA$ = "MEGA" THEN 
               ADD DIALOG "ABZUGANG",6,100,162,120,11,0,0,Belegnr$,12
               ADD DIALOG "ABZUGANG",5,36,162,51,10,0,"Belegnummer"
             END IF 
             ADD DIALOG "ABZUGANG",6,100,174,120,13,0,0,Anzahl%,20
             ADD DIALOG "ABZUGANG",5,36,177,46,13,0,"Anzahl:"
             REM ADD DIALOG "ABZUGANG",6,100,188,120,13,0,0,EK%,20
             REM ADD DIALOG "ABZUGANG",5,36,193,45,11,0,"EK (einzel):"
             REM ADD DIALOG "ABZUGANG",5,224,179,29,9,0,"Rabatt:"
             REM ADD DIALOG "ABZUGANG",6,224,188,44,13,0,0,Rabatt%,7
             ADD DIALOG "ABZUGANG",1,84,214,54,14,0,"&OK",1,1
             ADD DIALOG "ABZUGANG",1,146,214,55,14,0,"&Abbrechen",0,0
             DIALOG "ABZUGANG",req%
             REMOVE DIALOG "ABZUGANG"
             IF req% = 1 THEN 
             IF zugart% = 0 AND zugabg% = 0 THEN Buchungstext$ = "Inventurzugang fÅr Artnr.: " + Artikelnummer.artikel
             IF zugart% = 0 AND zugabg% = 1 THEN Buchungstext$ = "Storno von Inventurzugang fÅr Artnr.: " + Artikelnummer.artikel
             IF zugart% = 1 AND zugabg% = 0 THEN Buchungstext$ = "Inventurabgang fÅr Artnr.: " + Artikelnummer.artikel
             IF zugart% = 1 AND zugabg% = 1 THEN Buchungstext$ = "Storno von Inventurabgang fÅr Artnr.: " + Artikelnummer.artikel
               IF Belegnr$ = "" AND DEFA$ = "MEGA" THEN 
                 CALL Fehler("Die Belegnummer mu· ausgefÅllt werden!","")
                 falsch% = 1
               END IF 
               IF Anzahl% <= 0 THEN 
                 CALL Fehler("Die Anzahl mu· grî·er 0 sein!","")
                 falsch% = 1
               END IF 
               REM Inventurplus differenz stornieren
               IF Anzahl% > 0 AND zugabg% = 1 AND zugart% = 0 THEN 
                 Anzahl% = Anzahl% * - 1
               END IF 
               REM Inventurminus differenz buchen bestand=(bestand.artikel+(-anzahl%))
               IF Anzahl% > 0 AND zugabg% = 0 AND zugart% = 1 THEN 
                 Anzahl% = Anzahl% * - 1
               END IF 
             ELSE 
               falsch% = 0
             END IF 
           WEND 
         CASE 3
           REM -- Rabattzugang 
           Rabatt% = 0
           Anzahl% = 0
           EK% = EK.Artikel
           falsch% = 1
           EK% = EK.ARTIKEL
           WHILE falsch% = 1
             falsch% = 0
             IF zugart% = 0 AND zugabg% = 0 THEN TEXTRahmen$ = "Rabattzugang"
             IF zugart% = 0 AND zugabg% = 1 THEN TEXTRahmen$ = "Rabattstorno"
             IF zugart% = 1 AND zugabg% = 0 THEN TEXTRahmen$ = "Abgang durch Bruch usw."
             IF zugart% = 1 AND zugabg% = 1 THEN TEXTRahmen$ = "Abgang durch Bruch usw.stornieren"
             CREATE DIALOG "ABZUGANG",101,81,292,239,title$,"MS Sans Serif",8
             ADD DIALOG "ABZUGANG",4,0,0,292,211,0,""
             ADD DIALOG "ABZUGANG",5,36,9,68,11,0,Artikelnummer.ARTIKEL
             ADD DIALOG "ABZUGANG",5,106,9,180,11,128,Bezeichnung.ARTIKEL
             ADD DIALOG "ABZUGANG",9,4,9,20,23,2
             ADD DIALOG "ABZUGANG",4,36,24,253,100,0," Beschreibung "
             ADD DIALOG "ABZUGANG",5,38,36,244,85,128,Beschreibung.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,128,62,9,0,"aktueller Bestand:"
             ADD DIALOG "ABZUGANG",5,100,128,150,9,0, LTRIM$ ( STR$ (Bestand.ARTIKEL,",999999999.00")) + " " + ME_.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,140,37,10,0,"letzter EK:"
             ADD DIALOG "ABZUGANG",5,100,140,157,10,0, LTRIM$ ( STR$ (LieferEK.ARTIKEL,"$ ,9999999999.00")) + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yy") + "/Mischpreis:" + LTRIM$ ( STR$ (EK.ARTIKEL,"$ ,9999999999.00"))
             ADD DIALOG "ABZUGANG",5,36,152,37,10,0,"Lieferant:"
             SELECT KEY Lieferant.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
             IF FOUND ("ADRESSEN") THEN Nachname$ = Nachname.ADRESSEN ELSE Nachname$ = "<keine Zuordnung>"
             ADD DIALOG "ABZUGANG",5,100,152,150,10,128,Nachname$
             IF DEFA$ = "MEGA" THEN 
               ADD DIALOG "ABZUGANG",6,100,162,120,11,0,0,Belegnr$,12
               ADD DIALOG "ABZUGANG",5,36,162,51,11,0,"Belegnummer"
             END IF 
             ADD DIALOG "ABZUGANG",6,100,174,120,13,0,0,Anzahl%,20
             ADD DIALOG "ABZUGANG",5,36,177,46,13,0,"Anzahl:"
             REM ADD DIALOG "ABZUGANG",6,100,188,120,13,0,0,EK%,20
             REM ADD DIALOG "ABZUGANG",5,36,193,45,11,0,"EK (einzel):"
             REM ADD DIALOG "ABZUGANG",5,224,179,29,9,0,"Rabatt:"
             REM ADD DIALOG "ABZUGANG",6,224,188,44,13,0,0,Rabatt%,7
             ADD DIALOG "ABZUGANG",1,84,214,54,14,0,"&OK",1,1
             ADD DIALOG "ABZUGANG",1,146,214,55,14,0,"&Abbrechen",0,0
             DIALOG "ABZUGANG",req%
             REMOVE DIALOG "ABZUGANG"
             IF req% = 1 THEN 
             IF zugart% = 0 AND zugabg% = 0 THEN Buchungstext$ = "Rabattzugang fÅr Artnr.: " + Artikelnummer.artikel
             IF zugart% = 0 AND zugabg% = 1 THEN Buchungstext$ = "Storno von Rabattzugang fÅr Artnr.: " + Artikelnummer.artikel
             IF zugart% = 1 AND zugabg% = 0 THEN Buchungstext$ = "Abgang durch Bruch usw. fÅr Artnr.: " + Artikelnummer.artikel
             IF zugart% = 1 AND zugabg% = 1 THEN Buchungstext$ = "Storno von Abgang durch Bruch usw.fÅr Artnr.: " + Artikelnummer.artikel
               IF Belegnr$ = "" AND DEFA$ = "MEGA" THEN 
                 CALL Fehler("Die Belegnummer mu· ausgefÅllt werden!","")
                 falsch% = 1
               END IF 
               IF Anzahl% <= 0 THEN 
                 CALL Fehler("Die Anzahl mu· grî·er 0 sein!","")
                 falsch% = 1
               END IF 
               REM Stornierung von RabattzugÑngen
               IF zugart% = 0 AND Anzahl% > 0 AND zugabg% = 1 THEN 
                 Anzahl% = Anzahl% * - 1
               END IF 
               REM Buchen von AbgÑngen durch Bruch usw
               IF zugart% = 1 AND Anzahl% > 0 AND zugabg% = 0 THEN 
                 Anzahl% = Anzahl% * - 1
               END IF 
 
             ELSE 
               falsch% = 0
             END IF 
           WEND 
 
         CASE 4
           REM -- Zugang ohne Rechnung, 
           Rabatt% = 0
           Anzahl% = 0
           EK% = EK.artikel
           falsch% = 1
           EK% = EK.ARTIKEL
           WHILE falsch% = 1
             falsch% = 0
             IF zugabg% = 0 THEN TEXTRahmen$ = "Zugang ohne Rechnung"
             IF zugabg% = 1 THEN TEXTRahmen$ = "Storno von Zugang ohne Rechnung"
             CREATE DIALOG "ABZUGANG",101,81,292,239,title$,"MS Sans Serif",8
             ADD DIALOG "ABZUGANG",4,0,0,292,211,0,""
             ADD DIALOG "ABZUGANG",5,36,9,68,11,0,Artikelnummer.ARTIKEL
             ADD DIALOG "ABZUGANG",5,106,9,180,11,128,Bezeichnung.ARTIKEL
             ADD DIALOG "ABZUGANG",9,4,9,20,23,2
             ADD DIALOG "ABZUGANG",4,36,24,253,100,0," Beschreibung "
             ADD DIALOG "ABZUGANG",5,38,36,244,85,128,Beschreibung.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,128,62,9,0,"aktueller Bestand:"
             ADD DIALOG "ABZUGANG",5,100,128,150,9,0, LTRIM$ ( STR$ (Bestand.ARTIKEL,",999999999.00")) + " " + ME_.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,140,37,10,0,"letzter EK:"
             ADD DIALOG "ABZUGANG",5,100,140,157,10,0, LTRIM$ ( STR$ (LieferEK.ARTIKEL,"$ ,9999999999.00")) + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yy") + "/Mischpreis:" + LTRIM$ ( STR$ (EK.ARTIKEL,"$ ,9999999999.00"))
             ADD DIALOG "ABZUGANG",5,36,152,37,10,0,"Lieferant:"
             SELECT KEY Lieferant.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
             IF FOUND ("ADRESSEN") THEN Nachname$ = Nachname.ADRESSEN ELSE Nachname$ = "<keine Zuordnung>"
             ADD DIALOG "ABZUGANG",5,100,152,150,10,128,Nachname$
             ADD DIALOG "ABZUGANG",6,100,162,120,11,0,0,Belegnr$,12
             ADD DIALOG "ABZUGANG",5,36,162,51,11,0,"Belegnummer"
             ADD DIALOG "ABZUGANG",6,100,174,120,13,0,0,Anzahl%,20
             ADD DIALOG "ABZUGANG",5,36,177,46,13,0,"Anzahl:"
             REM ADD DIALOG "ABZUGANG",6,100,188,120,13,0,0,EK%,20
             REM ADD DIALOG "ABZUGANG",5,36,193,45,11,0,"EK (einzel):"
             REM ADD DIALOG "ABZUGANG",5,224,179,29,9,0,"Rabatt:"
             REM ADD DIALOG "ABZUGANG",6,224,188,44,13,0,0,Rabatt%,7
             ADD DIALOG "ABZUGANG",1,84,214,54,14,0,"&OK",1,1
             ADD DIALOG "ABZUGANG",1,146,214,55,14,0,"&Abbrechen",0,0
             DIALOG "ABZUGANG",req%
             REMOVE DIALOG "ABZUGANG"
             IF req% = 1 THEN 
             IF zugabg% = 0 THEN Buchungstext$ = "Zugang ohne Rechnung fÅr Artnr.: " + Artikelnummer.artikel
             IF zugabg% = 1 THEN Buchungstext$ = "Storno von Zugang ohne Rechnung fÅr Artnr.: " + Artikelnummer.artikel
               IF Belegnr$ = "" THEN 
                 CALL Fehler("Die Belegnummer mu· ausgefÅllt werden!","")
                 falsch% = 1
               END IF 
               IF Anzahl% <= 0 THEN 
                 CALL Fehler("Die Anzahl mu· grî·er 0 sein!","")
                 falsch% = 1
               END IF 
               IF Anzahl% > 0 AND zugabg% = 1 THEN 
                 Anzahl% = Anzahl% * - 1
               END IF 
             ELSE 
               falsch% = 0
             END IF 
           WEND 
 
         CASE 5
           REM -- Nachbuchung von Zugang ohne Rechnung
           Rabatt% = 0
           Anzahl% = 0
           EK% = LieferEK.artikel
           falsch% = 1
           FILE "ABZUGANG"
           INDEX Belegnummer.abzugang
           tfound% = 0
           SELECT FIRST 
           SELECT KEY belegnralt$ FILE "abzugang" INDEX belegnummer.abzugang
           WHILE NOT EOF ("ABZUGANG") AND LTRIM$ ( UCASE$ (Belegnummer.abzugang)) = LTRIM$ ( UCASE$ (Belegnralt$))
             IF ArtZugang.abzugang = 4 AND abgleich.abzugang < 1 THEN 
               Artikel$(tfound%) = PAD$ (Belegnummer,12) + " ; " + Artikelnummer + " ;     " + STR$ (Anzahl,"999999999.00") + SPACE$ (120) + STR$ (CodeAZ.abzugang,"000000")
               tfound% = tfound% + 1
             END IF 
             SELECT NEXT FILE "ABZUGANG" INDEX belegnummer.abzugang
           WEND 
 
           IF tfound% <> 0 THEN 
             SET STATUS "Bitte wÑhlen Sie einen Artikel aus."
             CREATE DIALOG "TERLISTE",0,0,340,196,title$,"MS Sans Serif",8
             ADD DIALOG "TERLISTE",5,6,3,319,8,0,"Belegnummer  Artikelnummer            Anzahl"
             ADD DIALOG "TERLISTE",7,6,16,329,153,0,2,Artikel$,Auswahl$,Artikel$(0)
             ADD DIALOG "TERLISTE",1,104,174,56,16,0,"&OK",1,1
             ADD DIALOG "TERLISTE",1,164,174,56,16,0,"&Abbrechen",0,0
             DIALOG "TERLISTE",reqterm%
             REMOVE DIALOG "TERLISTE"
             IF reqterm% = 1 THEN 
               cuaz% = VAL ( RIGHT$ (Auswahl$(0),6))
               SELECT KEY cuaz% FILE "ABZUGANG" INDEX CodeAZ.abzugang
               codear% = CodeAR.abzugang
               SELECT KEY codear% FILE "Artikel" INDEX Codear.artikel
             ELSE 
               falsch% = 0
             END IF 
           ELSE 
             CALL Fehler("Es wurde kein unbearbeiteter Artikel","zu dieser Belegnummer gefunden")
             REM _req% = 0
             falsch% = 0
           END IF 
 
           Anzahl% = Anzahl.ABZUGANG
           EK% = VKNetto.abzugang
           WHILE falsch% = 1
             falsch% = 0
             CREATE DIALOG "ABZUGANG",101,81,292,239,title$,"MS Sans Serif",8
             ADD DIALOG "ABZUGANG",4,0,0,292,211,0,""
             ADD DIALOG "ABZUGANG",5,36,9,68,11,0,Artikelnummer.Artikel
             ADD DIALOG "ABZUGANG",5,106,9,180,11,128,Bezeichnung.Artikel
             ADD DIALOG "ABZUGANG",9,4,9,20,23,2
             ADD DIALOG "ABZUGANG",4,36,24,253,100,0," Beschreibung "
             ADD DIALOG "ABZUGANG",5,38,36,244,85,128,Beschreibung.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,128,62,9,0,"aktueller Bestand:"
             ADD DIALOG "ABZUGANG",5,100,128,150,9,0, LTRIM$ ( STR$ (Bestand.ARTIKEL,",999999999.00")) + " " + ME_.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,140,37,10,0,"letzter EK:"
             ADD DIALOG "ABZUGANG",5,100,140,157,10,0, LTRIM$ ( STR$ (LieferEK.ARTIKEL,"$ ,9999999999.00")) + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yy") + "/Mischpreis:" + LTRIM$ ( STR$ (EK.ARTIKEL,"$ ,9999999999.00"))
             ADD DIALOG "ABZUGANG",5,36,152,37,10,0,"Lieferant:"
             SELECT KEY Lieferant.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
             IF FOUND ("ADRESSEN") THEN Nachname$ = Nachname.ADRESSEN ELSE Nachname$ = "<keine Zuordnung>"
             ADD DIALOG "ABZUGANG",5,100,152,150,10,128,Nachname$
             ADD DIALOG "ABZUGANG",6,100,162,120,11,0,0,Belegnr$,12
             ADD DIALOG "ABZUGANG",5,36,162,51,10,0,"Belegnummer"
             ADD DIALOG "ABZUGANG",5,36,177,46,13,0,"Anzahl:"
             ADD DIALOG "ABZUGANG",5,100,174,120,13,0,Anzahl%
             ADD DIALOG "ABZUGANG",6,100,188,120,13,0,0,EK%,20
             ADD DIALOG "ABZUGANG",5,36,193,45,11,0,"EK (einzel):"
             ADD DIALOG "ABZUGANG",5,224,179,29,9,0,"Rabatt:"
             ADD DIALOG "ABZUGANG",6,224,188,44,13,0,0,Rabatt%,7
             ADD DIALOG "ABZUGANG",1,84,214,54,14,0,"&OK",1,1
             ADD DIALOG "ABZUGANG",1,146,214,55,14,0,"&Abbrechen",0,0
             DIALOG "ABZUGANG",req%
             REMOVE DIALOG "ABZUGANG"
             IF req% = 1 THEN 
               Buchungstext$ = "Nachbuchung Zugang ohne Rechnung fÅr Artnr.: " + Artikelnummer.artikel
               IF Belegnr$ = "" THEN 
                 CALL Fehler("Die Belegnummer mu· ausgefÅllt werden!","")
                 falsch% = 1
               END IF 
               IF EK% <= 0 THEN 
                 CALL Fehler("Der EK mu· grî·er/gleich 0 sein!","")
                 falsch% = 1
               END IF 
               IF Rabatt% < 0 THEN 
                 CALL Fehler("Der Rabatt mu· grî·er/gleich 0 sein!","")
                 falsch% = 1
               END IF 
               IF Rabatt% > 0 THEN EK% = EK% - ((EK% * Rabatt%) / 100)
             ELSE 
               falsch% = 0
             END IF 
           WEND 
 
       END CASE 
     END IF 
     IF req% = 1 THEN 
       SET STATUS "Bitte warten: Es wird gebucht..."
       MOUSE OFF 
  REM ------------  Bestandsberechnung / Mischpreisberechnung bei Artikelzugang ----------
  REM ------------  VerÑnderung in Artikeldatei und ABZUGANG fÅr zugopt%=1-4
       IF zugopt% < 5 THEN 
         bestandalt% = Bestand.artikel
         Bestand.ARTIKEL = Bestand.ARTIKEL + Anzahl%
         REM -- bei Zugang ohne Rechnung(zugopt%=4) darf der EK nicht neu berechnet werden
         IF zugopt% <> 4 THEN ek.artikel = (ek.artikel * bestandalt% + ek% * anzahl%) / (bestandalt% + anzahl%)
         PrDif% = VKnetto.ARTIKEL - EK.ARTIKEL
         Handelsspanne.ARTIKEL = (100 / EK.ARTIKEL) * PrDif%
         REM -- bei Rabattzugang und Zugang ohne Rechnung(zugopt%=3 und 4) darf der LieferEK 
         REM -- nicht geÑndert werden
         IF zugart% = 0 AND zugopt% < 3 THEN LieferEK.ARTIKEL = EK%
         IF zugart% = 0 THEN letzteLieferung.ARTIKEL = TODAY 
         CALL QuickStore("ARTIKEL")
         BLANK FILE "ABZUGANG"
         CodeAZ.ABZUGANG = SER ("ABZUGANG",1)
         CodeAR.ABZUGANG = cuart%
         Datum.ABZUGANG = TODAY 
         Anzahl.ABZUGANG = Anzahl%
         CodeKU.ABZUGANG = Lieferant.ARTIKEL
         IF zugart% = 0 THEN Art.ABZUGANG = 6:REM Code fÅr Artikelzugang
         IF zugart% = 1 THEN Art.ABZUGANG = 0:REM Code fÅr Verlust 
         IF DEFA$ = "MEGA" THEN 
           IF zugart% = 0 THEN ArtZugang.abzugang = zugopt%:REM zugopt%=2 Inv.diff
           IF zugart% = 1 THEN ArtAbgang.abzugang = zugopt%:REM zugopt%=3 Bruch usw
         END IF 
         VKnetto.ABZUGANG = EK%
         AnzGebucht.ABZUGANG = Anzahl%
         DatumGebucht.ABZUGANG = TODAY 
         Kontrolle.ABZUGANG = "n"
         Buchungstext.ABZUGANG = Buchungstext$
         Artikelnummer.abzugang = Artikelnummer.artikel
         Bezeichnung.abzugang = Bezeichnung.artikel
         Lieferant.abzugang = Nachname.adressen
         Belegnummer.abzugang = Belegnr$
         Belegdatum.abzugang = TODAY 
         ME_.abzugang = ME_.artikel
         IF defa$ = "MEGA" THEN Periode.abzugang = periode%
         CALL QuickStore("ABZUGANG")
       END IF 
       IF zugopt% = 5 THEN 
         Abgleich.abzugang = 1
         codeaz% = CodeAZ.abzugang
         cuart% = CodeAR.abzugang
         codeku% = CodeKU.abzugang
         CALL QuickStore("ABZUGANG")
         FILE "artikel"
         bestandalt% = Bestand.artikel - Anzahl.abzugang
         Anzahl% = Anzahl.abzugang
         ek.artikel = (ek.artikel * bestandalt% + ek% * anzahl%) / (bestandalt% + anzahl%)
         PrDif% = VKnetto.ARTIKEL - EK.ARTIKEL
         Handelsspanne.ARTIKEL = (100 / EK.ARTIKEL) * PrDif%
         CALL QuickStore("ARTIKEL")
         FILE "ABZUGANG"
         BLANK FILE "ABZUGANG"
         CodeAZ.ABZUGANG = SER ("ABZUGANG",1)
         CodeAR.ABZUGANG = cuart%
         Datum.ABZUGANG = TODAY 
         Anzahl.ABZUGANG = Anzahl%
         CodeKU.ABZUGANG = codeku%
         IF zugart% = 0 THEN Art.ABZUGANG = 6:REM Code fÅr Artikelzugang
         ArtZugang.abzugang = zugopt%
         VKnetto.ABZUGANG = EK%
         AnzGebucht.ABZUGANG = Anzahl%
         Anzahl.ABZUGANG = Anzahl%
         DatumGebucht.ABZUGANG = TODAY 
         Kontrolle.ABZUGANG = "n"
         Buchungstext.ABZUGANG = Buchungstext$
         Artikelnummer.abzugang = Artikelnummer.artikel
         Bezeichnung.abzugang = Bezeichnung.artikel
         Lieferant.abzugang = Nachname.adressen
         Belegnummer.abzugang = Belegnr$
         Belegdatum.abzugang = TODAY 
         ME_.abzugang = ME_.artikel
         IF DEFA$ = "MEGA" THEN Periode.abzugang = periode%
         CALL QuickStore("ABZUGANG")
       END IF 
     END IF 
   ELSE 
     CALL Fehler ("Es konnte kein entsprechender Artikel gefunden werden!","")
   END IF :REM Ende der Zugangsbuchung
 END IF 
 WEND 
 cuart% = 0
 cugrp% = 0
 SET STATUS "Artikelzugang/-abgang beendet!"
 MOUSE ON 
 END SUB 
   
 
 '      *********************
 '      ** Verlustrechnung **
 '      *********************
 
SUB VERLUST()
 CALL DFile(3,"ABZUGANG" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"GRUPPEN" + _fpw$)
 IF DEFA$ = "MEGA" THEN 
   CALL DFile(3,"KSATZ" + _fpw$)
   CALL DFile(3,"SSATZ" + _fpw$)
 END IF 
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 FILE "gruppen"
 INDEX CodeGR
 SELECT FIRST 
 a% = 0
 WHILE NOT EOF ("gruppen")
   ProdGruppen$(a%) = Kurzbezeichnung.gruppen
   a% = a% + 1
   SELECT NEXT 
 WEND 
 _req% = 1
 WHILE _req% = 1
   suna$ = ""
   CREATE DIALOG "SCHAuswahl",0,0,237,150,title$,"MS Sans Serif",8
   ADD DIALOG "SCHAuswahl",4,0,1,237,125,0,""
   ADD DIALOG "SCHAuswahl",9,4,12,20,23,2
   ADD DIALOG "SCHAuswahl",4,30,14,200,80,0," Suche Åber... "
   ADD DIALOG "SCHAuswahl",5,30,100,147,8,0,"&Suchbezeichnung"
   ADD DIALOG "SCHAuswahl",6,30,110,200,12,0,0,suna$,20
   ADD DIALOG "SCHAuswahl",3,38,25,60,12,0,"Artikel&nummer",1,asuchopt%
   ADD DIALOG "SCHAuswahl",3,38,37,60,12,0,"&Bestellnummer",2,asuchopt%
   ADD DIALOG "SCHAuswahl",3,38,49,79,12,0,"Artikelbe&zeichnung",3,asuchopt%
   ADD DIALOG "SCHAuswahl",3,38,61,103,12,0,"Produkt&gruppen/Leistungen",4,asuchopt%
   ADD DIALOG "SCHAuswahl",8,48,75,169,66,259,2,Auswahl$,ProdGruppen$
   ADD DIALOG "SCHAuswahl",1,64,130,55,15,1,"&Weiter",1,1
   ADD DIALOG "SCHAuswahl",1,122,130,55,15,0,"&Abbruch",0,0
   DIALOG "SCHAuswahl",_req%
   REMOVE DIALOG "SCHAuswahl"
   IF _req% = 1 THEN 
     cuart% = 0
     SELECT CASE asuchopt%
     CASE 1
       feld$ = "artikelnummer.artikel"
     CASE 2
       feld$ = "bestellnummer.artikel"
     CASE 3
       feld$ = "bezeichnung.artikel"
     CASE 4
       feld$ = "bezeichnung.artikel"
     END SELECT 
     IF asuchopt% > 3 THEN 
       SELECT KEY Auswahl$ FILE "gruppen" INDEX Kurzbezeichnung.gruppen
       cugrp% = CodeGR.gruppen
       artlistok% = 0
       CALL Server("LISTBOXINIT","Auswahl")
       FILE "ARTIKEL"
       INDEX CodeGR.ARTIKEL
       SELECT FIRST 
       SELECT KEY cugrp%
       WHILE CodeGR.ARTIKEL = cugrp% AND NOT EOF ("ARTIKEL")
         item$ = Bezeichnung.ARTIKEL + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
         IF Bezeichnung.ARTIKEL LIKE "*" + suna$ + "*" OR Beschreibung.ARTIKEL LIKE "*" + suna$ + "*" THEN 
           CALL Server("LISTBOXADD",item$)
           artlistok% = 1
         END IF 
         SELECT NEXT FILE "ARTIKEL" INDEX CodeGR.ARTIKEL
       WEND 
       IF artlistok% <> 0 THEN 
         CALL Server("LISTBOXSHOW","")
         MOUSE ON 
         erg$ = ServerReply$()
         IF erg$ <> "" THEN 
           cuart% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
         END IF 
       ELSE 
         CALL Fehler("Es wurde kein entsprechender Artikel gefunden!","")
       END IF 
     ELSE 
       FILE "ARTIKEL"
       INDEX feld$$
       SET STATUS "Suche Artikel..."
       SELECT KEY suna$ INDEX feld$$
       IF UCASE$ ( LEFT$ (feld$$, LEN (suna$))) <> UCASE$ (suna$) THEN 
         IF asuchopt% = 1 OR asuchopt% = 2 THEN 
           cuart% = 0
         ELSE 
           REQUEST "Eintrag nicht gefunden!","Erweiterte Suche durchfÅhren?",130,req%
           IF req% = 1 THEN 
             suna$ = "*" + suna$ + "*"
             artlistok% = 0
             wi% = 0
             CALL Server("LISTBOXINIT","Artikelauswahl")
             FILE "ARTIKEL"
             INDEX CodeAR.ARTIKEL
             SELECT FIRST 
             MOUSE OFF 
             CALL Gauge(1,"Artikeldatei wird durchsucht...")
             _prozt% = 0
             _anz% = RECCOUNT ("ARTIKEL")
             WHILE NOT EOF ("ARTIKEL")
               _proz% = INT ((100 / _anz%) * CodeAR.ARTIKEL)
               IF _proz% > 100 THEN _proz% = 100
               IF _proz% < 2 THEN _proz% = 2
               IF _proz% <> _prozt% THEN 
                 _prozt% = _proz%
                 SET STATUS "erweiterte Suche... " + STR$ (_prozt%,"999") + " %"
                 CALL Gauge(_proz%,"")
               END IF 
               adrfound% = 0
               IF feld$$ LIKE suna$ THEN 
                 wi% = wi% + 1
                 item$ = Bezeichnung.ARTIKEL + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
                 CALL Server("LISTBOXADD",item$)
                 artlistok% = 1
                 CALL Server("GaugeMessage","Artikeldatei wird durchsucht... " + TRIM$ ( STR$ (wi%,"9999")) + " gefunden")
               END IF 
               SELECT NEXT FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
             WEND 
             CALL Gauge(0,"")
             SET STATUS ""
             IF wi% <> 0 AND artlistok% <> 0 THEN 
               SET STATUS "Bitte wÑhlen Sie einen Artikel aus"
               REM MENU 2,6,1,"aus Suchliste &wÑhlen,F7","ADRWahl"
               CALL Server("LISTBOXSHOW","Bitte wÑhlen Sie den gewÅnschten Artikel aus:")
               erg$ = ServerReply$()
               IF erg$ <> "" THEN 
                 cuart% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
               END IF 
             ELSE 
               CALL Fehler("Es konnte kein entsprechender Artikel gefunden!","")
               cuart% = 0
             END IF 
           END IF 
         END IF 
       ELSE 
         cuart% = CodeAR.ARTIKEL
       END IF 
     END IF 
 
     REM -- Zugang buchen --
 
     IF cuart% > 0 THEN 
       SELECT KEY cuart% LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
       Anzahl% = 1
       EK% = LieferEK.ARTIKEL
       CREATE DIALOG "ABZUGANG",104,82,292,239,title$,"MS Sans Serif",8
       ADD DIALOG "ABZUGANG",4,0,0,292,211,0,""
       ADD DIALOG "ABZUGANG",9,4,10,20,22,2
       ADD DIALOG "ABZUGANG",5,36,9,68,11,0,Artikelnummer.ARTIKEL
       ADD DIALOG "ABZUGANG",5,107,9,180,11,128,Bezeichnung.ARTIKEL
       ADD DIALOG "ABZUGANG",4,36,24,253,100,0," Beschreibung "
       ADD DIALOG "ABZUGANG",5,38,36,244,85,128,Beschreibung.ARTIKEL
       ADD DIALOG "ABZUGANG",5,36,128,62,10,0,"aktueller Bestand:"
       ADD DIALOG "ABZUGANG",5,100,128,150,10,0, LTRIM$ ( STR$ (Bestand.ARTIKEL,",999999999.00")) + " " + ME_.ARTIKEL
       REM ADD DIALOG "ABZUGANG",5,152,128,53,10,0,ME_.ARTIKEL
       ADD DIALOG "ABZUGANG",5,36,140,37,10,0,"letzter EK:"
       ADD DIALOG "ABZUGANG",5,100,140,137,10,0, LTRIM$ ( STR$ (LieferEK.ARTIKEL,"$ ,9999999999.00")) + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yy")
       ADD DIALOG "ABZUGANG",5,36,153,37,10,0,"Lieferant:"
       SELECT KEY Lieferant.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
       IF FOUND ("ADRESSEN") THEN Nachname$ = Nachname.ADRESSEN ELSE Nachname$ = "<keine Zuordnung>"
       ADD DIALOG "ABZUGANG",5,100,153,150,10,128,Nachname$
       ADD DIALOG "ABZUGANG",5,36,178,47,12,0,"Anzahl:"
       ADD DIALOG "ABZUGANG",6,100,175,120,12,0,0,Anzahl%,20
       ADD DIALOG "ABZUGANG",1,84,214,55,15,0,"&OK",1,1
       ADD DIALOG "ABZUGANG",1,146,214,55,15,0,"&Abbrechen",0,0
       DIALOG "ABZUGANG",req%
       REMOVE DIALOG "ABZUGANG"
       IF req% = 1 THEN 
         SET STATUS "Bitte warten: Verluste werden gebucht..."
         MOUSE OFF 
   REM -------------  BestandsfÅhrung bei Verlustbuchung  -----------------------
         IF Anzahl% > 0 THEN 
           Bestand.ARTIKEL = Bestand.ARTIKEL - Anzahl%
           CALL QuickStore("ARTIKEL")
           BLANK FILE "ABZUGANG"
           CodeAZ.ABZUGANG = SER ("ABZUGANG",1)
           CodeAR.ABZUGANG = cuart%
           Datum.ABZUGANG = TODAY 
           Anzahl.ABZUGANG = 0 - Anzahl%
           Art.ABZUGANG = 0:REM Code fÅr Verlustrechnung
           AnzGebucht.ABZUGANG = 0 - Anzahl%
           DatumGebucht.ABZUGANG = TODAY 
           Kontrolle.ABZUGANG = "n"
           Buchungstext.ABZUGANG = "Verlust: " + Bezeichnung.Artikel
           CALL QuickStore("ABZUGANG")
         ELSE 
           CALL Fehler("Mit den eingegebenen Daten ist keine Buchung mîglich!","")
         END IF 
       END IF 
     ELSE 
       CALL Fehler ("Es konnte kein entsprechender Artikel gefunden werden!","")
     END IF :REM Ende der Verlustbuchung
   END IF 
 WEND 
 cuart% = 0
 cugrp% = 0
 SET STATUS "Verlustbuchung beendet!"
 MOUSE ON 
 END SUB 
     
 '      **********************************************************
 '      ** Masterformular fÅr Angebote/Rechnungen/Lieferscheine **
 '      **********************************************************
 
SUB Master(art%)
 CALL DFile(3,"MASTER" + _fpw$)
 CALL DFile(3,"FLOSKEL" + _fpw$)
 CALL DFile(3,"ABZUGANG" + _fpw$)
 IF DEFA$ = "MEGA" THEN 
   CALL DFile(3,"KSATZ" + _fpw$)
   CALL DFile(3,"SSATZ" + _fpw$)
 END IF 
 adrform$ = "ADRESSEN"
 IF DEFA$ = "MEGA" THEN adrform$ = "ADRDEFA"
 IF FORM LIKE adrform$ THEN 
   knr% = CodeKU.adressen
 ELSE 
   IF wawispezi$ = "j" THEN 
     knr% = CodeKU.adressen
   ELSE 
     knr% = 0
   END IF 
 END IF 
 MSArt% = art%
 SELECT CASE MSArt%
 CASE 1
   MSArt$ = "Angebote"
   SFORM$ = "UNI"
 CASE 2
   MSArt$ = "Rechnungen"
   SFORM$ = "UNI"
 CASE 3
   MSArt$ = "Lieferscheine"
   SFORM$ = "LIEFER"
 CASE 4
   MSArt$ = "AuftrÑge"
   SFORM$ = "UNI"
 CASE 5
   MSArt$ = "Bestellungen"
   SFORM$ = "UNI"
 CASE 7
   MSArt$ = "Gutschriften"
   SFORM$ = "UNI"
 END SELECT 
 SET STATUS ""
 _formend% = 0
 WHILE _formend% = 0
   MSsub% = 0
   IF FORM <> "MASTER" THEN 
     CALL MNMASTER()
     OPEN FORM "MASTER"
     SET STATUS MSArt$
     SET HEADING title$ + " - " + MSArt$
     MasterArt$ = MSArt$
     CALL MSIntro()
   END IF 
   MENU ON 
   CALL MSUpdate()
   MOUSE ON 
   FORM 
   cums% = CodeMS.master
   IF MSsub% = 0 THEN WAIT MOUSE OR KEY OR MENU 
   SELECT CASE MSsub%
   CASE 1
     CALL Schein()
   CASE 15
     CALL FLOSKEL()
   CASE 98
     a% = RECCOUNT ("*")
     IF a% > 3 THEN 
       ENTER posnr.schein ROW 3,0
     ELSE 
       ENTER posnr.schein ROW a%,0
     END IF 
   CASE 99
     MOUSE ON 
     IF PAGE = 1 THEN 
       IF DEFA$ = "MEGA" AND defaneu$ <> "j" AND StatusM.master = "b" THEN 
         CALL Fehler("Vorgang wurde bereits gebucht!","Eine énderung ist nicht mehr mîglich!")
         END SUB 
       END IF 
       CALL FStore("master")
       FORM 
       MOUSE ON 
       IF adresstext.master = "" THEN 
         codems% = codems.master
         SELECT KEY codems% LOCK FILE "master" INDEX codems.master
         Adresstext.master = MakeAdrMast$(CodeKU.ADRESSEN, - 1,0,0)
         CALL FStore("master")
         FORM 
       END IF 
       MOUSE ON 
       ENTER nummer.master,0
       IF DEFA$ = "MEGA" THEN defaneu$ = "n"
     ELSE 
       MOUSE ON 
       ENTER PreisNetto.master,0
     END IF 
   CASE 100
        REM 
   END SELECT 
 WEND 
 _formend% = 0
 cums% = 0
 END SUB 
  
 
 ' MASTER: Beschriftungen im Formular generieren
 ' =======================================================================
 
SUB MSUpdate()
 SELECT KEY CodeMS.MASTER FILE "ABZUGANG" INDEX CodeMS.ABZUGANG
 IF FOUND ("ABZUGANG") THEN buchung$ = "Bu&chung Æ" ELSE buchung$ = "Bu&chung"
 IF Rabatt.MASTER > 0 THEN cmRabatt$ = "Rabatt Æ" ELSE cmRabatt$ = "Rabatt"
 IF KalkArt.MASTER = 0 THEN RabattFormel$ = "bezogen auf Nettosumme" ELSE RabattFormel$ = "bezogen auf Bruttosumme"
 IF StatusM.master LIKE "s" THEN 
   storniert$ = "storniert"
 ELSE 
   storniert$ = ""
 END IF 
 IF MultipleVAT%(CodeMS.MASTER) THEN cmRabatt$ = "[Rabatt]"
 END SUB 
 
SUB MSRabatt()
 IF DEFA$ = "MEGA" AND StatusM.master = "b" THEN 
   CALL Fehler("Vorgang wurde bereits gebucht!","Eine énderung ist nicht mehr mîglich!")
   END SUB 
 END IF 
 IF MultipleVAT%(CodeMS.MASTER) THEN CALL Fehler("Rabattvergabe nicht mîglich!","Gesamtrabatte kînnen nur dann vergeben werden, wenn alle Positionen mit dem gleichen Mehrwertsteuersatz berechnet werden.") ELSE FORM 2
 END SUB 
 
 
FUNCTION MultipleVAT%(codems%)
 CALL DFile(3,"SCHEIN" + _fpw$)
 DIM MwStSchl%(20)
 DIM MwStBetrag%(20)
 posnr% = 0
 FOR a% = 0 TO 20
   MwStSchl%(a%) = 0
   MwStBetrag%(a%) = 0
 NEXT 
 MwStCount% = 0
 MOUSE OFF 
 FILE "SCHEIN"
 INDEX CodeMS.SCHEIN
 SELECT FIRST 
 SELECT KEY codems%
 _gesnetto% = 0
 WHILE CodeMS.SCHEIN = codems% AND NOT EOF ("SCHEIN")
   IF Art.SCHEIN = 0 THEN 
     mwstfound% = - 1
     FOR a% = 0 TO MwStCount%
       IF MwStSchl%(a%) = MwSt.SCHEIN THEN mwstfound% = a%
     NEXT a%
     IF mwstfound% = - 1 THEN 
       MwStSchl%(MwStCount%) = MwSt.SCHEIN
       mwstfound% = MwStCount%
       MwStCount% = MwStCount% + 1
     END IF 
     IF KalkArt.MASTER = 0 THEN 
       MwStBetrag%(mwstfound%) = MwStBetrag%(mwstfound%) + ((GesamtNetto.SCHEIN / 100) * MwStSchl%(mwstfound%))
       _gesnetto% = _gesnetto% + GesamtNetto.SCHEIN
     ELSE 
       MwStBetrag%(mwstfound%) = MwStBetrag%(mwstfound%) + (GesamtBrutto.SCHEIN - ((GesamtBrutto.SCHEIN / (100 + MwStSchl%(mwstfound%)) * 100)))
     END IF 
   END IF 
   SELECT NEXT FILE "SCHEIN" INDEX CodeMS.SCHEIN
 WEND 
 FILE "MASTER"
 MOUSE ON 
 IF MwStCount% <> 1 THEN MultipleVAT% = - 1 ELSE MultipleVAT% = 0
 END FUNCTION 
 
 
 
 ' MASTER Intro
 ' =======================================================================
 
SUB MSIntro()
 FILE "master"
 IF cums% <> 0 THEN 
   SELECT FORM KEY cums% FILE "MASTER" INDEX CodeMS.MASTER
 ELSE 
   scode% = knr% * 10 + MSArt%
   SELECT FORM KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 END IF 
 IF NOT FOUND ("MASTER") THEN 
   BLANK FORM 
   CALL MSNeu()
 END IF 
 END SUB 
 
 
 ' MASTER Neu
 ' =======================================================================
 
SUB MSNeu()
 IF DEFA$ = "MEGA" THEN 
   CALL PeriodenPruef()
   IF periode% = 0 THEN END SUB 
 END IF 
 IF DEFA$ = "MEGA" THEN defaneu$ = "j"
 FILE "master"
 cums% = CodeMS.master
 knr% = CodeKU.adressen
 opt% = 8
 REM BLANK 
 SELECT KEY knr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 FORM 
 aktADR$ = "j"
  CREATE DIALOG "MSNEU",0,0,178,147,title$,"MS Sans Serif",8
    ADD DIALOG "MSNEU",4,0,0,178,100,0,""
    ADD DIALOG "MSNEU",3,34,11,132,9,0,"Standardvorlage mit Standardfloskeln",8,opt%
    REM ADD DIALOG "MSNEU",3,34,22,132,10,0,"ohne Vorlage (leer),keine Floskeln",1,opt%
    ADD DIALOG "MSNEU",3,34,22,76,10,0,"Angebot als Vorlage",2,opt%
    ADD DIALOG "MSNEU",3,34,33,84,10,0,"Rechnung als Vorlage",3,opt%
    ADD DIALOG "MSNEU",3,34,44,90,10,0,"Lieferschein als Vorlage",4,opt%
    ADD DIALOG "MSNEU",3,34,55,75,10,0,"Auftrag als Vorlage",5,opt%
    ADD DIALOG "MSNEU",3,34,66,91,10,0,"Bestellung als Vorlage",6,opt%
    ADD DIALOG "MSNEU",3,34,77,80,10,0,"Gutschrift als Vorlage",7,opt%
    ADD DIALOG "MSNEU",9,9,12,20,20,2
    ADD DIALOG "MSNEU",4,0,88,178,25,0,""
    ADD DIALOG "MSNEU",2,34,102,138,10,0,"Vorlagen aus aktueller Adresse wÑhlen","j","n",aktADR$
    ADD DIALOG "MSNEU",1,34,129,55,16,1,"&OK",1,1
    ADD DIALOG "MSNEU",1,92,129,54,16,0,"&Abbrechen",0,0
 
 DIALOG "MSNEU",req%
 REMOVE DIALOG "MSNEU"
 IF req% = 1 THEN 
   OK% = 0
   BLANK 
   CodeMS.MASTER = SER ("MASTER",1)
   datum.master = TODAY 
   REM -> jetzt in FACTURA bei den Globalvariablen -> _kalkart$ = ReadConfig$("FACTURA","Kalkulationsschema")
   IF UCASE$ (_kalkart$) = "NETTO" THEN 
     KalkArt.MASTER = 0
   ELSE 
     KalkArt.MASTER = 1
   END IF 
   Art.Master = MSArt%
   SELECT CASE MSArt%
   CASE 1
     Titel.MASTER = "Angebot"
   CASE 2
     Titel.MASTER = "Rechnung"
   CASE 3
     Titel.MASTER = "Lieferschein"
   CASE 4
     Titel.MASTER = "Auftrag"
   CASE 5
     Titel.MASTER = "Bestellung"
   CASE 7
     Titel.MASTER = "Gutschrift"
   END SELECT 
 
   IF opt% = 8 THEN 
     FILE "floskel"
     SELECT WHERE art.floskel = 1 AND spezial.floskel = msart%
     SELECT FIRST 
     IF NOT EOF ("floskel") THEN 
       prolog.master = floskel.floskel
     END IF 
     SELECT WHERE art.floskel = 2 AND spezial.floskel = MSArt%
     SELECT FIRST 
     IF NOT EOF ("floskel") THEN 
       epilog.master = floskel.floskel
     END IF 
     FILE "master"
     art.master = MSArt%
     CALL FStore("master")
     scode% = knr% * 10 + vMSArt%
     vcums% = CodeMS.Master
   END IF 
  
   SELECT CASE opt%
   CASE 2
     bedingung$ = "art.master=1"
     art% = 1
   CASE 3
     bedingung$ = "art.master=2"
     art% = 2
   CASE 4
     bedingung$ = "art.master=3"
     art% = 3
   CASE 5
     bedingung$ = "art.master=4"
     art% = 4
   CASE 6
     bedingung$ = "art.master=5"
     art% = 5
   CASE 7
     bedingung$ = "art.master=7"
     art% = 7
   END SELECT 
   IF opt% > 1 AND opt% < 8 THEN 
     IF opt% <> 7 THEN 
       vMSArt% = opt% - 1
     ELSE 
       vMSArt% = opt%
     END IF 
     scode% = knr% * 10 + vMSArt%
     vcums% = CodeMS.Master
     CALL FStore("MASTER")
     REM ###***
     MOUSE OFF 
     REDIM auswahl$( RECCOUNT ("master"))
     DIM positionen$( RECCOUNT ("master"))
     FOR a% = 0 TO RECCOUNT ("master")
       Auswahl$(a%) = ""
     NEXT a%
     FOR a% = 0 TO RECCOUNT ("master")
       Positionen$(a%) = ""
     NEXT a%
     FILE "master"
     SELECT WHERE 
     IF aktADR$ = "j" THEN 
       INDEX quickcodeku.master
       SELECT FIRST 
       SELECT KEY scode% INDEX quickcodeku.master
       counter% = - 1
       WHILE NOT EOF ("master") AND quickcodeku.master = scode%
         counter% = counter% + 1
         Positionen$(counter%) = Nummer.Master + "   " + DATE$ (Datum.MASTER,"0d.mm.yy") + "    " + STR$ (GesBrutto.MASTER,"999999999.00") + "    " + nachname.MASTER + SPACE$ (90) + STR$ (codems.master,"000000")
         SELECT NEXT INDEX quickcodeku.master
       WEND 
     ELSE 
       INDEX art.master
       SELECT FIRST 
       SELECT KEY vMSArt% INDEX art.master
       counter% = - 1
       WHILE NOT EOF ("master") AND art.master = vMSArt%
         counter% = counter% + 1
         Positionen$(counter%) = Nummer.Master + "   " + DATE$ (Datum.MASTER,"0d.mm.yy") + "   " + STR$ (GesBrutto.MASTER,"999999999.00") + "     " + nachname.MASTER + SPACE$ (90) + STR$ (codems.master,"000000")
         SELECT NEXT INDEX art.master
       WEND 
       REM EXECUTE "REQUEST ~Vorlage (~ + MSArt$ + ~)auswÑhlen:~,~Nummer,Datum,Nettosumme,Nachname~,25,req%,nummer$,72,Nummer.Master,Datum.MASTER,GesNetto.master,Nachname.MASTER INDEX CodeMS.Master WHERE " + bedingung$
     END IF 
     FILE "master"
     INDEX codems.master
     _cums1% = 0
     MOUSE ON 
     IF counter% > - 1 THEN 
       CREATE DIALOG "REGISTER",0,0,322,150,title$,"MS Sans Serif",8
       ADD DIALOG "REGISTER",5,5,4,240,10,0,"WÑhlen Sie einen Beleg"
       ADD DIALOG "REGISTER",7,5,19,309,105,8,2,Positionen$,Auswahl$,Positionen$(0)
       ADD DIALOG "REGISTER",1,129,129,48,16,0,"&OK",1,1
       REM ADD DIALOG "REGISTER",1,158,129,48,16,0,"&Abbrechen",0,0
       DIALOG "REGISTER",req%
       REMOVE DIALOG "REGISTER"
     ELSE 
       REQUEST "Keine Vorlage gefunden,","",2
       req% = 1
       opt% = 8
     END IF 
     IF counter% <> - 1 THEN _cums1% = VAL ( RIGHT$ (Auswahl$(0),6))
     IF req% = 1 AND _cums1% <> 0 THEN 
       REM CALL FStore("MASTER")
       SELECT KEY _cums1% FILE "MASTER" INDEX codems.Master
       IF FOUND ("master") THEN 
         REM 2.Dialog einstellen
         flo% = 2
         CREATE DIALOG "MSNEU",0,0,178,74,title$,"MS Sans Serif",8
         ADD DIALOG "MSNEU",4,0,0,178,50,0,""
         ADD DIALOG "MSNEU",3,34,11,132,9,0,"Floskeltexte 1 zu 1 Åbernehmen",1,flo%
         ADD DIALOG "MSNEU",3,34,22,132,10,0,"Standardfloskeln eintragen",2,flo%
         ADD DIALOG "MSNEU",3,34,33,130,10,0,"keine Floskeln eintragen",3,flo%
         ADD DIALOG "MSNEU",9,9,12,20,20,2
         ADD DIALOG "MSNEU",1,62,56,55,16,1,"&OK",1,1
         DIALOG "MSNEU",req%
         REMOVE DIALOG "MSNEU"
         IF aktADR$ = "j" THEN 
           CALL MSPrepare(CodeMS.Master,vcums%,flo%)
         ELSE 
           CALL MSPrepSpezi(CodeMS.Master,vcums%,flo%)
         END IF 
         OK% = 1
       ELSE 
         opt% = 8
       END IF 
     ELSE 
       opt% = 8
       REM IF req% = 0 THEN 
         REM opt% = - 1
         REM ok% = 0
         REM neumaster$ = "n"
       REM END IF 
     END IF 
   END IF 
   IF opt% = 8 THEN 
     REM CALL FStore("master")
     FILE "master"
     SELECT KEY vcums% LOCK FILE "MASTER" INDEX CodeMS.Master
     FILE "floskel"
     SELECT WHERE art.floskel = 1 AND spezial.floskel = msart%
     SELECT FIRST 
     IF NOT EOF ("floskel") THEN 
       FILE "master"
       prolog.master = floskel.floskel
     END IF 
     FILE "floskel"
     SELECT WHERE art.floskel = 2 AND spezial.floskel = MSArt%
     SELECT FIRST 
     IF NOT EOF ("floskel") THEN 
       FILE "master"
       epilog.master = floskel.floskel
     END IF 
     FILE "master"
     CALL FStore("master")
   END IF 
   IF opt% = 1 OR opt% = 8 OR aktADR$ = "n" THEN 
     SELECT KEY knr% FILE "ADRESSEN" INDEX CodeKU.adressen
     FILE "master"
     SELECT KEY vcums% LOCK FILE "MASTER" INDEX CodeMS.Master
     CodeKU.MASTER = knr%
     Adresse$ = MakeAdr$(CodeKU.ADRESSEN, - 1,0,0)
     adresstext.master = adresse$
     Anrede.MASTER = Anrede.adressen
     Nachname.Master = Nachname.adressen
     Vorname.master = Vorname.adressen
     Geburtsname.master = Geburtsname.adressen
     Stra·e.master = Stra·e.adressen
     PLZ.master = PLZ.adressen
     Ort.Master = Ort.Adressen
     art.master = MSArt%
     REM nummer.master = ""
     IF MSArt% <> 5 THEN 
       REM wenn keine Bestellung vorliegt
       Kundennummer.Master = Kundennummer.adressen
       IF DEFA$ = "MEGA" AND KostentrÑger.adressen <> "" THEN 
         KostentrÑger.master = KostentrÑger.adressen
       ELSE 
         Kostenstelle.master = Kostenstelle.adressen
       END IF 
     ELSE 
       REM bei Bestellung wird die eigene Kundenr, die man beim Lieferanten
       REM hat eingetragen
       Kundennummer.Master = eigKunr.Adressen
     END IF 
     OK% = 1
   END IF 
   IF OK% = 1 THEN 
     CALL FStore("master")
     SELECT FORM KEY vcums% LOCK FILE "MASTER" INDEX CodeMS.Master
     SELECT KEY vcums% LOCK FILE "MASTER" INDEX CodeMS.Master
     MSsub% = 99
     FORM 
   ELSE 
     SELECT KEY vcums% LOCK FILE "MASTER" INDEX CodeMS.Master
     SELECT REMOVE 
     IF neumaster$ <> "j" THEN 
       SELECT KEY cums% FILE "MASTER" INDEX CodeMS.Master
     END IF 
   END IF 
 ELSE 
   REM knr% = CodeKU.adressen
   FILE "master"
   scode% = knr% * 10 + 1
   ok% = 1
   SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
   IF NOT FOUND ("MASTER") THEN 
     _formend% = 1
     mssub% = 100
   END IF 
 END IF 
 neumaster$ = "n"
 FORM 
 END SUB 
 
 
SUB TNummernTest()
 CALL FStore("master")
 MOUSE OFF 
 FILE "master"
 cums% = codems.master
 numm1$ = nummer.master
 SET INDEX nummer.master
 INDEX nummer.master
 SELECT KEY numm1$ FILE "master" INDEX nummer.master
 SELECT NEXT 
 cums2% = codems.master
 IF nummer.master = numm1$ AND cums% <> cums2% THEN 
   CALL Fehler("Die Nummer wurde bereits vergeben!","Bitte Ñndern Sie die Nummer!")
   SET INDEX codems.master
   INDEX codems.master
   MOUSE ON 
   SELECT FORM KEY cums% FILE "master" INDEX codems.master
   ENTER nummer.master,0
 END IF 
 SELECT FORM KEY cums% FILE "master" INDEX codems.master
 MOUSE ON 
 END SUB 
 
 
 ' neuen Vorgang mit Daten aus "MASTER" und "SCHEIN" generieren
 ' =======================================================================
 
SUB MSPrepare(vorlage%,master%,flosk%)
 SET STATUS "Vorlage wird kopiert"
 MOUSE OFF 
 CALL DFile(3,"SCHEIN" + _fpw$)
 kostentrÑger$ = ""
 kostenstelle% = 0
 FILE "MASTER"
 SELECT KEY vorlage% FILE "MASTER" INDEX CodeMS.MASTER
 IF flosk% = 1 THEN 
   COPY FROM Anrede,Nachname,Geburtsname,Vorname,Stra·e,Ort,PLZ,CodeKU,LAAnrede,LANachname,LAStra·e,LAOrt,LAPLZ,Lieferdatum,Kundennummer,PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   adress$ = adresstext.master
   prolog$ = prolog.master
   epilog$ = epilog.master
   IF DEFA$ = "MEGA" THEN 
     SELECT KEY codeku.master FILE "adressen" INDEX codeku.adressen
     IF FOUND ("adressen") THEN 
       kostentrÑger$ = KostentrÑger.adressen
       kostenstelle% = Kostenstelle.adressen
     END IF 
   END IF 
   FILE "master"
   SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   COPY TO Anrede,Nachname,Geburtsname,Vorname,Stra·e,Ort,PLZ,CodeKU,LAAnrede,LANachname,LAStra·e,LAOrt,LAPLZ,Lieferdatum,Kundennummer,PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   prolog.master = prolog$
   epilog.master = epilog$
   adresstext.master = adress$
   IF DEFA$ = "MEGA" THEN 
     SELECT KEY codeku.master FILE "adressen" INDEX codeku.adressen
     IF FOUND ("adressen") THEN 
       kostentrÑger$ = KostentrÑger.adressen
       kostenstelle% = Kostenstelle.adressen
     END IF 
   END IF 
 END IF 
 FILE "master"
 IF flosk% = 2 THEN 
   COPY FROM Anrede,Nachname,Geburtsname,Vorname,Stra·e,Ort,PLZ,CodeKU,LAAnrede,LANachname,LAStra·e,LAOrt,LAPLZ,Lieferdatum,Kundennummer,PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   adress$ = adresstext.master
   IF DEFA$ = "MEGA" THEN 
     SELECT KEY codeku.master FILE "adressen" INDEX codeku.adressen
     IF FOUND ("adressen") THEN 
       kostentrÑger$ = KostentrÑger.adressen
       kostenstelle% = Kostenstelle.adressen
     END IF 
   END IF 
   FILE "master"
   SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   COPY TO Anrede,Nachname,Geburtsname,Vorname,Stra·e,Ort,PLZ,CodeKU,LAAnrede,LANachname,LAStra·e,LAOrt,LAPLZ,Lieferdatum,Kundennummer,PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   adresstext.master = adress$
   IF DEFA$ = "MEGA" THEN 
     SELECT KEY codeku.master FILE "adressen" INDEX codeku.adressen
     IF FOUND ("adressen") THEN 
       kostentrÑger$ = KostentrÑger.adressen
       kostenstelle% = Kostenstelle.adressen
     END IF 
     kostentrÑger.master = KostentrÑger$
     kostenstelle.master = Kostenstelle%
   END IF 
   FILE "floskel"
   SELECT WHERE art.floskel = 1 AND spezial.floskel = msart%
   SELECT FIRST 
   IF NOT EOF ("floskel") THEN 
     prolog.master = floskel.floskel
   END IF 
   SELECT WHERE art.floskel = 2 AND spezial.floskel = msart%
   SELECT FIRST 
   IF NOT EOF ("floskel") THEN 
     epilog.master = floskel.floskel
   END IF 
   FILE "master"
 END IF 
 IF flosk% = 3 THEN 
   COPY FROM Anrede,Nachname,Geburtsname,Vorname,Stra·e,Ort,PLZ,CodeKU,LAAnrede,LANachname,LAStra·e,LAOrt,LAPLZ,Lieferdatum,Kundennummer,PreisNetto,GesNetto,Rabatt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   adress$ = adresstext.master
   IF DEFA$ = "MEGA" THEN 
     SELECT KEY codeku.master FILE "adressen" INDEX codeku.adressen
     IF FOUND ("adressen") THEN 
       kostentrÑger$ = KostentrÑger.adressen
       kostenstelle% = Kostenstelle.adressen
     END IF 
   END IF 
   FILE "master"
   SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   COPY TO Anrede,Nachname,Geburtsname,Vorname,Stra·e,Ort,PLZ,CodeKU,LAAnrede,LANachname,LAStra·e,LAOrt,LAPLZ,Lieferdatum,Kundennummer,PreisNetto,GesNetto,Rabatt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   adresstext.master = adress$
   IF DEFA$ = "MEGA" THEN 
     SELECT KEY codeku.master FILE "adressen" INDEX codeku.adressen
     IF FOUND ("adressen") THEN 
       kostentrÑger$ = KostentrÑger.adressen
       kostenstelle% = Kostenstelle.adressen
     END IF 
     kostentrÑger.master = KostentrÑger$
     kostenstelle.master = Kostenstelle%
   END IF 
 END IF 
 FILE "master"
 CALL QuickStore("MASTER")
 
 REM -------- Positionen kopieren --------
 
 scode% = vorlage% * 1000 + 1
 FILE "SCHEIN"
 INDEX QuickCodePos.SCHEIN
 SELECT FIRST 
 SELECT KEY scode%
 ok% = 1
 WHILE CodeMS.SCHEIN = vorlage% AND ok% = 1 AND NOT EOF ("SCHEIN")
   SET STATUS "Kopiere Position " + LTRIM$ ( STR$ (PosNr,"999"))
   REM COPY FROM Art,Anzahl,Bezeichnung,Artikelnummer,Beschreibung,CodeAR,VKnetto,VKBrutto,EK,GesamtNetto,GesamtBrutto,ME_,PosNr,Rabatt,RabattProz,MwSt
   Art% = Art:Anzahl% = Anzahl:Bezeichnung$ = Bezeichnung:Artikelnummer$ = Artikelnummer
   Beschreibung$ = Beschreibung:CodeAR% = CodeAR:VKnetto% = VKnetto:VKBrutto% = VKBrutto:EK% = EK:GesamtNetto% = GesamtNetto
   GesamtBrutto% = GesamtBrutto:ME$ = ME_:PosNr% = PosNr:Rabatt% = Rabatt:RabattProz% = RabattProz:MwSt% = MwST
   CodeGR% = CodeGR:RabattArt% = RabattArt:TextVorPos$ = TextVorPosition
   Bezugsmenge% = Bezugsmenge:Maschine$ = maschine:ZeitproBezug% = ZeitproBezugsme
   IF DEFA$ = "MEGA" THEN 
     Bestandskonto% = Bestandskonto
     Verbrauchskto% = Verbrauchskonto
   END IF 
   BLANK 
   REM COPY TO Art,Anzahl,Bezeichnung,Artikelnummer,Beschreibung,CodeAR,VKnetto,VKBrutto,EK,GesamtNetto,GesamtBrutto,ME_,PosNr,Rabatt,RabattProz,MwSt
   Art = Art%:Anzahl = Anzahl%:Bezeichnung = Bezeichnung$:Artikelnummer = Artikelnummer$
   Beschreibung = Beschreibung$:CodeAR = CodeAR%:VKnetto = VKNetto%:VKBrutto = VKBrutto%:EK = EK%:GesamtNetto = GesamtNetto%
   GesamtBrutto = GesamtBrutto%:ME_ = ME$:PosNr = PosNR%:Rabatt = Rabatt%:RabattProz = RabattProz%:MwSt = MwST%
   CodeMS = master%:CodeGR = CodeGR%:RabattArt = RabattArt%:TextVorPosition = TextVorPos$
   Bezugsmenge = Bezugsmenge%:Maschine = maschine$:ZeitproBezugsme = ZeitproBezug%
   IF DEFA$ = "MEGA" THEN 
     Bestandskonto = Bestandskonto%
     Verbrauchskonto = Verbrauchskto%
   END IF 
   CALL QuickStore("SCHEIN")
   SELECT FIRST 
   SELECT KEY scode% FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   SELECT NEXT FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   scodealt% = scode%
   scodeneu% = QuickCodePos.SCHEIN
   IF scodealt% = scodeneu% THEN ok% = 0
   scode% = vorlage% * 1000 + PosNr
 WEND 
 SELECT FORM KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
 SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
 FORM 
 SET STATUS ""
 MOUSE ON 
 END SUB 
  
 
SUB MSPrepSpezi(vorlage%,master%,flosk%)
 SET STATUS "Vorlage wird kopiert"
 MOUSE OFF 
 CALL DFile(3,"SCHEIN" + _fpw$)
 FILE "MASTER"
 SELECT KEY vorlage% FILE "MASTER" INDEX CodeMS.MASTER
 IF flosk% = 1 THEN 
   COPY FROM PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   prolog$ = prolog.master
   epilog$ = epilog.master
   adress$ = adresstext.master
   SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   COPY TO PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   prolog.master = prolog$
   epilog.master = epilog$
   adresstext.master = adress$
 END IF 
 IF flosk% = 2 THEN 
   COPY FROM PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   adress$ = adresstext.master
   IF DEFA$ = "MEGA" THEN 
   END IF 
   SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   COPY TO PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   adresstext.master = adress$
   FILE "floskel"
   SELECT WHERE art.floskel = 1 AND spezial.floskel = msart%
   SELECT FIRST 
   IF NOT EOF ("floskel") THEN 
     prolog.master = floskel.floskel
   END IF 
   SELECT WHERE art.floskel = 2 AND spezial.floskel = msart%
   SELECT FIRST 
   IF NOT EOF ("floskel") THEN 
     epilog.master = floskel.floskel
   END IF 
   FILE "master"
 END IF 
 IF flosk% = 3 THEN 
   COPY FROM PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   adress$ = adresstext.master
   SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   COPY TO PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   adresstext.master = adress$
 END IF 
 CALL QuickStore("MASTER")
 
 REM -------- Positionen kopieren --------
 
 scode% = vorlage% * 1000 + 1
 FILE "SCHEIN"
 INDEX QuickCodePos.SCHEIN
 SELECT FIRST 
 SELECT KEY scode%
 WHILE CodeMS.SCHEIN = vorlage% AND NOT EOF ("SCHEIN")
   SET STATUS "Kopiere Position " + LTRIM$ ( STR$ (PosNr,"999"))
   REM COPY FROM Art,Anzahl,Bezeichnung,Artikelnummer,Beschreibung,CodeAR,VKnetto,VKBrutto,EK,GesamtNetto,GesamtBrutto,ME_,PosNr,Rabatt,RabattProz,MwSt
   REM COPY TO Art,Anzahl,Bezeichnung,Artikelnummer,Beschreibung,CodeAR,VKnetto,VKBrutto,EK,GesamtNetto,GesamtBrutto,ME_,PosNr,Rabatt,RabattProz,MwSt
   Art% = Art:Anzahl% = Anzahl:Bezeichnung$ = Bezeichnung:Artikelnummer$ = Artikelnummer
   Beschreibung$ = Beschreibung:CodeAR% = CodeAR:VKnetto% = VKnetto:VKBrutto% = VKBrutto:EK% = EK:GesamtNetto% = GesamtNetto
   GesamtBrutto% = GesamtBrutto:ME$ = ME_:PosNr% = PosNr:Rabatt% = Rabatt:RabattProz% = RabattProz:MwSt% = MwST
   CodeGR% = CodeGR:RabattArt% = RabattArt:TextVorPos$ = TextVorPosition
   Bezugsmenge% = Bezugsmenge:Maschine$ = maschine:ZeitproBezug% = ZeitproBezugsme
   IF DEFA$ = "MEGA" THEN 
     Bestandskonto% = Bestandskonto
     Verbrauchskto% = Verbrauchskonto 
   END IF 
   BLANK 
   IF DEFA$ = "MEGA" THEN 
     Bestandskonto = Bestandskonto%
     Verbrauchskonto = Verbrauchskto%
   END IF 
   REM COPY TO Art,Anzahl,Bezeichnung,Artikelnummer,Beschreibung,CodeAR,VKnetto,VKBrutto,EK,GesamtNetto,GesamtBrutto,ME_,PosNr,Rabatt,RabattProz,MwSt
   Art = Art%:Anzahl = Anzahl%:Bezeichnung = Bezeichnung$:Artikelnummer = Artikelnummer$
   Beschreibung = Beschreibung$:CodeAR = CodeAR%:VKnetto = VKNetto%:VKBrutto = VKBrutto%:EK = EK%:GesamtNetto = GesamtNetto%
   GesamtBrutto = GesamtBrutto%:ME_ = ME$:PosNr = PosNR%:Rabatt = Rabatt%:RabattProz = RabattProz%:MwSt = MwST%
   CodeGR = CodeGR%:RabattArt = RabattArt%:TextVorPosition = TextVorPos$
   CodeMS = master%
   Bezugsmenge = Bezugsmenge%:Maschine = maschine$:ZeitproBezugsme = ZeitproBezug%
   CALL QuickStore("SCHEIN")
   SELECT FIRST 
   SELECT KEY scode% FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   SELECT NEXT FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   scode% = vorlage% * 1000 + PosNr
 WEND 
 SELECT FORM KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
 SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
 FORM 
 SET STATUS ""
 MOUSE ON 
 END SUB 
 
 
 ' MASTER A/R/L/A lîschen
 ' =======================================================================
 
SUB MSLoeschen()
 IF disabled%("MSLoeschen") THEN END SUB 
 _cums% = CodeMS.master
 IF DEFA$ = "MEGA" AND StatusM.Master = "b" THEN 
   CALL Fehler("Der Vorgang wurde bereits gebucht!","Er kann nicht gelîscht werden!")
   END SUB 
 END IF 
 CALL DFile(3,"SCHEIN" + _fpw$)
 SET STATUS "Datensatz lîschen"
 REQUEST "Wollen Sie den aktuellen Datensatz lîschen?","",130,req%
 IF req% = 1 THEN 
   MOUSE OFF 
   FILE "MASTER"
   REM _cums% = CodeMS.master
   SELECT KEY _cums% LOCK FILE "master" INDEX CodeMS.master
   ok% = 0
   IF req% = 1 THEN 
     IF EXISTS (_cums%,codems.schein) THEN 
       FILE "schein"
       INDEX codems.schein
       SELECT FIRST 
       SELECT KEY _cums% LOCK FILE "schein" INDEX codems.schein
       WHILE NOT EOF ("schein") AND codems.schein = _cums%
         SELECT REMOVE FILE "schein"
         SELECT NEXT LOCK 
       WEND 
     END IF 
     IF EXISTS (_cums%,codems.abzugang) THEN 
       FILE "abzugang"
       INDEX codems.abzugang
       SELECT FIRST 
       SELECT KEY _cums% LOCK FILE "abzugang" INDEX codems.abzugang
       WHILE NOT EOF ("abzugang") AND codems.abzugang = _cums%
         SELECT REMOVE FILE "abzugang"
         SELECT NEXT LOCK 
       WEND 
     END IF 
     IF EXISTS (_cums%,codems.master) THEN 
       FILE "master"
       INDEX codems.master
       SELECT FIRST 
       SELECT KEY _cums% LOCK FILE "master" INDEX codems.master
       WHILE NOT EOF ("master") AND codems.master = _cums%
         SELECT REMOVE FILE "master"
         SELECT NEXT LOCK 
       WEND 
     END IF 
     REM SELECT REMOVE FILE "master"
     REM REMOVE FROM FILE "master" WHERE CodeMS.master = _cums%
     REM REMOVE FROM FILE "SCHEIN" WHERE CodeMS.SCHEIN = _cums%
     REM REMOVE FROM FILE "ABZUGANG" WHERE CodeMS.ABZUGANG = _cums%
     FILE "master"
     cuaq% = 0
     ok% = 1
   END IF 
 END IF 
 scode% = knr% * 10 + MSArt%
 INDEX QuickCodeKU.MASTER
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Keine weiteren " + msart$ + " vorhanden!","Bearbeitung wird verlassen.",113
   _formend% = 1
 ELSE 
   IF ok% = 1 THEN REQUEST "Datensatz gelîscht !","",2
   FORM 
 END IF 
 MOUSE ON 
 END SUB 
 
 
 ' MASTER Abschlu·rechnung fÅr Vorgang durchfÅhren
 ' =======================================================================
 
SUB MSRechnen()
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"MASTER" + _fpw$)
 CALL DFile(3,"SCHEIN" + _fpw$)
 IF DEFA$ = "MEGA" THEN 
   CALL DFile(3,"KSATZ" + _fpw$)
   CALL DFile(3,"SSATZ" + _fpw$)
 END IF 
 MOUSE OFF 
 cums% = CodeMS.MASTER
 CALL MWSTBerechnung()
 FILE "SCHEIN"
 SET STATUS "Berechnung lÑuft..."
 INDEX CodeMS.SCHEIN
 SELECT FIRST 
 NUMBASE "z99999999999.99"
 nettosumme% = 0.00
 bruttosumme% = 0.00
 eksumme% = 0.00
 mwstsum% = 0.00
 SELECT KEY cums% FILE "SCHEIN" INDEX CodeMS.SCHEIN
 WHILE CodeMS.SCHEIN = cums% AND NOT EOF ("SCHEIN")
   IF Art.SCHEIN = 0 THEN 
     nettosumme% = nettosumme% + GesamtNetto.SCHEIN
     bruttosumme% = bruttosumme% + GesamtBrutto.SCHEIN
     eksumme% = eksumme% + (EK.SCHEIN / Bezugsmenge.schein * Anzahl.SCHEIN)
     mwst% = MwSt.SCHEIN
     mwstsum% = bruttosumme% - nettosumme%
   END IF 
   SELECT NEXT FILE "SCHEIN" INDEX CodeMS.SCHEIN
 WEND 
 SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.master
 IF kalkart.master = 0 THEN 
   PreisNetto.MASTER = nettosumme%
   PreisBrutto.MASTER = nettosumme% + mwstbetrag1%
 ELSE 
   PreisNetto.MASTER = bruttosumme% - mwstbetrag1%
   PreisBrutto.MASTER = bruttosumme%
 END IF 
 IF Rabatt.MASTER > 0 AND NOT MultipleVAT%(cums%) THEN 
   IF RabattArt.MASTER = 0 THEN 
     GesNetto.MASTER = PreisNetto.MASTER - Rabatt.MASTER
     GesBrutto.MASTER = GesNetto.MASTER + (GesNetto.MASTER / 100 * MwSt.MASTER)
   ELSE 
     GesBrutto.MASTER = PreisBrutto.MASTER - Rabatt.MASTER
     GesNetto.MASTER = GesBrutto.MASTER / (100 + MwSt.MASTER) * 100
   END IF 
 ELSE 
   IF kalkart.master = 0 THEN 
     GesNetto.MASTER = nettosumme%
     GesBrutto.MASTER = nettosumme% + mwstbetrag1%
   ELSE 
     GesNetto.MASTER = bruttosumme% - mwstbetrag1%
     GesBrutto.MASTER = bruttosumme%
   END IF 
 END IF 
 EKnetto.MASTER = eksumme%
 MwSt.MASTER = mwst%
 CALL QuickStore("MASTER")
 SET STATUS ""
 MOUSE ON 
 END SUB 
 
 
 ' MASTER nÑchster Datensatz
 ' =======================================================================
 
SUB MSSuchen()
 cums% = CodeMS.Master
 cunr$ = Nummer.Master
 _art$ = MSArt$
 scode% = knr% * 10 + MSArt%
 IF RIGHT$ (_art$,1) <> "n" THEN _art$ = _art$ + "n"
 REM REQUEST "WÑhlen Sie aus den " + _art$ + " aus:","Nummer, Datum, Nettosumme, Bruttosumme",25,req%,nummer$,60,Nummer.Master,Datum.MASTER,GesNetto.MASTER,GesBrutto.MASTER INDEX CodeMS.Master WHERE QuickCodeKU.Master = scode%
 MOUSE OFF 
 REDIM auswahl$( RECCOUNT ("master"))
 DIM positionen$( RECCOUNT ("master"))
 FOR a% = 0 TO RECCOUNT ("master")
   Auswahl$(a%) = ""
 NEXT a%
 FOR a% = 0 TO RECCOUNT ("master")
   Positionen$(a%) = ""
 NEXT a%
 FILE "master"
 SELECT WHERE 
 INDEX quickcodeku.master
 SELECT FIRST 
 SELECT KEY scode% INDEX quickcodeku.master
 counter% = - 1
 WHILE NOT EOF ("master") AND quickcodeku.master = scode%
   counter% = counter% + 1
   Positionen$(counter%) = Nummer.Master + "   " + DATE$ (Datum.MASTER,"0d.mm.yy") + "    " + STR$ (GesBrutto.MASTER,"999999999.00") + "    " + nachname.MASTER + SPACE$ (90) + STR$ (codems.master,"000000")
   SELECT NEXT INDEX quickcodeku.master
 WEND 
 INDEX codems.master
 _cums1% = 0
 MOUSE ON 
 CREATE DIALOG "REGISTER",0,0,322,150,title$,"MS Sans Serif",8
 ADD DIALOG "REGISTER",5,5,4,240,10,0,"WÑhlen Sie einen Beleg"
 ADD DIALOG "REGISTER",7,5,19,309,105,8,2,Positionen$,Auswahl$,Positionen$(0)
 ADD DIALOG "REGISTER",1,109,129,48,16,0,"&OK",1,1
 ADD DIALOG "REGISTER",1,158,129,48,16,0,"&Abbrechen",0,0
 DIALOG "REGISTER",req%
 REMOVE DIALOG "REGISTER"
 IF counter% <> - 1 THEN _cums1% = VAL ( RIGHT$ (Auswahl$(0),6))
 IF req% = 1 AND _cums1% <> 0 THEN 
   cums% = _cums1%
 END IF 
 SELECT FORM KEY cums% FILE "MASTER" INDEX codems.Master
 SET INDEX CodeKU.Master
 INDEX CodeKU.master
 END SUB 
  
 
 
 ' öbernahme in Buchungsdatei
 ' =======================================================================
 
SUB MSBuchung()
 CALL DFile(3,"ARTIKEL" + _fpw$)
 cums% = CodeMS.MASTER
 SELECT KEY cums% FILE "Master" INDEX CodeMS.Master
 art% = Art.master
 bruttosum% = GesBrutto.Master
 SELECT KEY cums% FILE "ABZUGANG" INDEX CodeMS.ABZUGANG
 IF FOUND ("ABZUGANG") THEN 
   IF DEFA$ = "MEGA" THEN 
     CALL Fehler("Vorgang wurde bereits gebucht!","Ein erneutes buchen ist nicht mîglich!")
     req% = 0
   ELSE 
     REQUEST "Die Buchung ist bereits durchgefÅhrt worden!","Buchungsdaten korrigieren?",135,req%
   END IF 
   IF req% = 1 THEN 
     MOUSE OFF 
     SET STATUS "Bitte warten: Buchungsdatei wird aktualisiert..."
     REMOVE FROM FILE "ABZUGANG" WHERE CodeMS.ABZUGANG = cums%
     SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.MASTER
     StatusM.MASTER = "b"
     buchungsaus$ = "n"
     CALL QuickStore("MASTER")
   ELSE 
     END SUB 
   END IF 
 END IF 
 MOUSE OFF 
 SET STATUS "Bitte warten: öbernahme in Buchungsdatei..."
 opt1$ = "j"
 REM #####andiii
 Termin$ = DATE$ ( TODAY + TerminVorlage%,"dd.mm.yy")
 opt2% = 2
 opt3$ = "n"
 CREATE DIALOG "BUCHUNG",0,0,261,196,title$,"MS Sans Serif",8
 ADD DIALOG "BUCHUNG",9,5,4,20,23,2
 ADD DIALOG "BUCHUNG",5,33,6,111,10,0,"öbernahme in die Buchungsdatei:"
 ADD DIALOG "BUCHUNG",4,33,19,124,43,0," Termine "
 ADD DIALOG "BUCHUNG",2,37,30,116,11,0,"Termineinhaltung &kontrollieren?","j","n",opt1$
 ADD DIALOG "BUCHUNG",6,69,44,33,12,0,0,Termin$,8
 ADD DIALOG "BUCHUNG",5,37,46,28,10,0,"&Termin:"
 ADD DIALOG "BUCHUNG",4,158,19,95,43,0," Buchungsart "
 IF art.master = 5 THEN 
   ADD DIALOG "BUCHUNG",3,161,30,75,13,0,"&Einzelpositionen",1,opt2%
 END IF 
 IF DEFA$ = "MEGA" OR Bestrechnung$ = "LIEFER" THEN 
   IF art.master = 3 OR art.master = 7 THEN 
     opt2% = 1
     ADD DIALOG "BUCHUNG",3,161,30,75,13,0,"&Einzelpositionen",1,opt2%
   END IF 
 ELSE 
   ADD DIALOG "BUCHUNG",3,161,46,80,10,0,"&Vorgang",2,opt2%
 END IF 
 IF DEFA$ <> "MEGA" AND Art.MASTER = 2 AND Bestrechnung$ = "RECHNUNG" THEN 
   ADD DIALOG "BUCHUNG",2,33,65,115,13,0,"Bestandsrechnung durchfÅhren","j","n",opt3$
 END IF 
 IF DEFA$ <> "MEGA" THEN 
   IF Art.MASTER = 3 AND Bestrechnung$ = "LIEFER" THEN 
     ADD DIALOG "BUCHUNG",2,33,65,115,13,0,"Bestandsrechnung durchfÅhren","j","n",opt3$
   END IF 
 END IF 
 IF DEFA$ = "MEGA" AND art.master = 3 THEN 
   opt3$ = "j"
   ADD DIALOG "BUCHUNG",2,33,65,115,13,0,"Bestandsrechnung durchfÅhren","j","n",opt3$
 END IF 
 IF Art.MASTER = 7 THEN 
   IF DEFA$ = "MEGA" THEN opt3$ = "j"
   ADD DIALOG "BUCHUNG",2,33,65,115,13,0,"BestandsKorrektur durchfÅhren","j","n",opt3$
 END IF 
 ADD DIALOG "BUCHUNG",5,33,84,128,8,0,"zusÑtzlicher &Buchungstext:"
 ADD DIALOG "BUCHUNG",6,33,94,220,73,4,2,Buchungstext$,4000
 ADD DIALOG "BUCHUNG",1,140,171,54,15,0,"&OK",1,1
 ADD DIALOG "BUCHUNG",1,198,171,55,15,0,"&Abbrechen",0,0
 DIALOG "BUCHUNG",req%
 REMOVE DIALOG "BUCHUNG"
 
 IF req% = 1 THEN 
   IF DEFA$ = "MEGA" AND (art.master = 3 OR art.master = 7) THEN 
     opt2% = 1:REM Einzelpositionen buchen
     opt3$ = "j":REM Bestandsrechnung durchfÅhren
   END IF 
   SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   StatusM.MASTER = "b"
   CALL QuickStore("master")
   CALL DFile(3,"SCHEIN" + _fpw$)
   REM ------- Behandlung von Rechnungen Art=2 und Gutschriften Art=7
   IF art% = 2 OR art% = 7 THEN 
     FILE "master"
     SELECT KEY cums% LOCK FILE "master" INDEX codems.master
     IF cums% = codems.master THEN 
       StatusM.master = "b"
       CALL QuickStore("master")
 
      REM -----Anfang------ Buchungswerte öbergabe an CASH ---------------------------
 
       IF cashpath$ <> "leer" THEN 
         FILE "adressen"
         SELECT KEY CodeKU.master FILE "adressen" INDEX codeku.adressen
         IF NOT EOF ("adressen") THEN 
           IF debitorkto.adressen <> "" THEN 
             debitakt$ = LTRIM$ (Debitorkto.adressen)
           END IF 
         END IF 
         IF debitakt$ = "" THEN debitakt$ = Debitorkto$
         DATEBASE "ddmmyy"
         vdatum$ = DATE$ (datum.master)
         mwst$ = LTRIM$ ( STR$ (mwst.master * 100,"9999"))
         IF art.master = 2 THEN 
           betrag$ = LTRIM$ ( STR$ (GesBrutto.master * 100,"999999999999"))
           buchtext$ = nummer.master + " gebucht!"
         ELSE 
           betrag$ = LTRIM$ ( STR$ (GesBrutto.master * - 100,"999999999999"))
           buchtext$ = nummer.master + " gebucht!"
         END IF 
         BSatz$ = CHR$ (34) + "R" + CHR$ (34) + "," + CHR$ (34) + LTRIM$ (vdatum$) + CHR$ (34) + "," + CHR$ (34) + buchtext$ + CHR$ (34) + "," + CHR$ (34) + LTRIM$ (nachname.master) + CHR$ (34) + "," + CHR$ (34) + Warenausgkto$ + CHR$ (34) + ","
         Bsatz$ = Bsatz$ + CHR$ (34) + Debitakt$ + CHR$ (34) + "," + CHR$ (34) + LTRIM$ ( STR$ (CodeMS.master,"999999")) + CHR$ (34) + "," + CHR$ (34) + betrag$ + CHR$ (34) + "," + CHR$ (34) + mwst$ + CHR$ (34)
         cashdatei$ = cashpath$ + "export.asc"
         IF buchungsaus$ = "n" THEN 
           REQUEST "Dieser Satz wurde schon einmal an die Stapelbuchungs","-datei Åbergeben! Erneute öbernahme?",130,req33%
           IF req33% = 1 THEN 
             OPEN cashdatei$ FOR APPEND 
             ? BSatz$
             CLOSE OUTPUT 
             BSatz$ = ""
             REQUEST "Mîchten Sie die Buchungsdatei einsehen und ggf.","per Hand Ñndern?",130,req22%
             IF req22% = 1 THEN 
               CALL EditASCIIFile(cashdatei$)
             END IF 
           END IF 
         ELSE 
           OPEN cashdatei$ FOR APPEND 
           ? BSatz$
           CLOSE OUTPUT 
           BSatz$ = ""
           REQUEST "Mîchten Sie die Buchungsdatei einsehen und ggf.","per Hand Ñndern?",130,req22%
           IF req22% = 1 THEN 
             CALL EditASCIIFile(cashdatei$)
           END IF 
         END IF 
       END IF 
     REM ---------- ENDE --- BuchungswertÅbergabe CASH -----------------------------
     END IF 
   FILE "SCHEIN"
   END IF 
   REM ----- Ende -----  Sonderbehandlung Rechnungen/Gutschriften fÅr CASH
 
   REM ----- Anfang -- Sonderbehandlung DEFA Lieferscheine/Gutschriften -> KSÑtze erzeugen
   IF DEFA$ = "MEGA" THEN 
     FILE "master"
     SELECT KEY cums% LOCK FILE "master" INDEX codems.master
     IF cums% = codems.master THEN 
       StatusM.master = "b"
       CALL QuickStore("master")
       FILE "KSatz"
       BLANK 
       codeks.ksatz = SER ("ksatz",1)
       codems.ksatz = codems.master
       K.ksatz = "k"
       Periode.ksatz = periode%
       IF KostentrÑger.master <> "" THEN 
         KostentrÑger.KSatz = KostentrÑger.master
       ELSE 
         Kostenstelle.KSatz = Kostenstelle.master
       END IF 
       IF art.master = 3 THEN 
         Nettobetrag.KSatz = GesNetto.master - rabatt.master
         Buchungstext.KSatz = "Materialverbrauch"
       END IF 
       IF art.master = 7 THEN 
         Nettobetrag.KSatz = GesNetto.master * - 1
         Buchungstext.KSatz = "Gutschrift"
       END IF 
       CALL QuickStore("KSATZ")
     END IF 
   END IF 
   REM ----- Ende -- Sonderbehandlung DEFA Lieferscheine/Gutschriften -> KSÑtze erzeugen 
 
   REM ---------- Buchen der Einzel - Positionen in AbZugang  -----------------------
   IF opt2% = 1 OR DEFA$ = "MEGA" THEN 
     FILE "SCHEIN"
     INDEX CodeMS.SCHEIN
     SELECT FIRST 
     SELECT KEY cums% FILE "SCHEIN" INDEX CodeMS.SCHEIN
     WHILE CodeMS.SCHEIN = cums% AND NOT EOF ("SCHEIN")
       IF Art.SCHEIN = 0 THEN 
         FILE "abzugang"
         BLANK FILE "ABZUGANG"
         CodeAZ.ABZUGANG = SER ("ABZUGANG",1)
         codeaz% = codeaz.abzugang
         CodeAR.ABZUGANG = CodeAR.SCHEIN
         CodeMS.ABZUGANG = cums%
         IF DEFA$ = "MEGA" THEN Periode.abzugang = periode%
         Datum.ABZUGANG = TODAY 
         Anzahl.ABZUGANG = Anzahl.SCHEIN
         CodeKU.ABZUGANG = CodeKU.MASTER
         Art.ABZUGANG = Art.MASTER
         IF art.abzugang = 3 THEN buchungstext = "Lieferschein"
         IF art.abzugang = 7 THEN buchungstext = "Gutschrift"
         IF KalkArt.MASTER = 0 THEN 
           VKnetto.ABZUGANG = VKnetto.SCHEIN - rabatt.schein
           VKbrutto.ABZUGANG = VKnetto.SCHEIN + ((VKnetto.SCHEIN / 100) * MwSt.SCHEIN)
         ELSE 
           VKbrutto.ABZUGANG = VKbrutto.SCHEIN - rabatt.schein
           VKnetto.ABZUGANG = (VKBrutto.SCHEIN / (100 + MwST.SCHEIN)) * 100
         END IF 
         Nummer.ABZUGANG = Nummer.MASTER
         MwSt.ABZUGANG = MwSt.SCHEIN
         IF opt1$ = "n" THEN 
           AnzGebucht.ABZUGANG = Anzahl.SCHEIN
         ELSE 
           AnzGebucht.ABZUGANG = 0
           Termin.ABZUGANG = DAYS (Termin$)
         END IF 
         Kontrolle.ABZUGANG = opt1$
         Buchungstext.ABZUGANG = Artikelnummer.SCHEIN + ", " + Bezeichnung.SCHEIN + Buchungstext$
         ArtAbgang.abzugang = 1:REM Abgang normal
         AnzGebucht.ABZUGANG = Anzahl.schein
         DatumGebucht.ABZUGANG = TODAY 
         Kontrolle.ABZUGANG = "n"
         Buchungstext.ABZUGANG = Buchungstext$
         Artikelnummer.abzugang = Artikelnummer.schein
         Bestandskonto.abzugang = Bestandskonto.schein
         Verbrauchskonto.abzugang = Verbrauchskonto.schein
         Bezeichnung.abzugang = Bezeichnung.schein
         SELECT KEY Codear.schein FILE "Artikel" INDEX Codear.artikel
         codeku% = Lieferant.artikel
         SELECT KEY codeku% FILE "Adressen" INDEX Codeku.adressen
         Lieferant.abzugang = Nachname.adressen
         Belegnummer.abzugang = Nummer.master
         Belegdatum.abzugang = TODAY 
         ME_.abzugang = ME_.artikel
         CALL QuickStore("ABZUGANG")
 
         IF DEFA$ = "MEGA" THEN 
           FILE "SSatz"
           BLANK 
           codess.ssatz = SER ("ssatz",1)
           codeaz.ssatz = codeaz%
           s.ssatz = "S"
           Periode.ssatz = periode%
           Verbrauchskonto.ssatz = Verbrauchskonto.schein
           Bestandskonto.ssatz = Bestandskonto.schein
           Belegnummer.ssatz = Nummer.master
           Belegdatum.ssatz = TODAY 
           IF art.master = 3 THEN 
             Nettobetrag.ssatz = VKNetto.abzugang * Anzahl.abzugang
             Buchungstext.ssatz = "Materialverbrauch"
           END IF 
           IF art.master = 7 THEN 
             Nettobetrag.ssatz = VKNetto.abzugang * - 1 * anzahl.abzugang
             Buchungstext.ssatz = "Gutschrift"
           END IF 
           sh_Kennung.ssatz = "s"
           Umsatzsteuercod.ssatz = 01
           CALL QuickStore("SSATZ")
         END IF 
 
          
       END IF 
       SELECT NEXT FILE "SCHEIN" INDEX CodeMS.SCHEIN
     WEND 
   ELSE 
     REM ------- Buchen des Gesamtvorgang mit Gesamtpreisen, wenn keine Einzelpos gebucht werden sollen
     BLANK FILE "ABZUGANG"
     CodeAZ.ABZUGANG = SER ("ABZUGANG",1)
     CodeAR.ABZUGANG = 0
     CodeMS.ABZUGANG = cums%
     Datum.ABZUGANG = TODAY 
     Anzahl.ABZUGANG = 1
     CodeKU.ABZUGANG = CodeKU.MASTER
     Art.ABZUGANG = Art.MASTER
     VKnetto.ABZUGANG = GesNetto.MASTER
     VKbrutto.ABZUGANG = GesBrutto.MASTER
     IF opt1$ = "n" THEN 
       AnzGebucht.ABZUGANG = Anzahl.SCHEIN
     ELSE 
       AnzGebucht.ABZUGANG = 0
       Termin.ABZUGANG = DAYS (Termin$)
     END IF 
     Kontrolle.ABZUGANG = opt1$
     Nummer.ABZUGANG = Nummer.MASTER
     IF art.master = 7 THEN 
       Buchungstext.ABZUGANG = "**GUTSCHR**" + Nachname.master + " " + Buchungstext$
     ELSE 
       Buchungstext.ABZUGANG = Nachname.master + " " + Buchungstext$
     END IF 
     CALL QuickStore("ABZUGANG")
   END IF 
 
 REM ***************************************************************
 REM *            Eintragung in Akquisedatei                       *  
 REM ***************************************************************
   cfile$ = FILE 
   FILE "akquise"
   BLANK 
   codeaq.akquise = SER ("akquise",1)
   CodeKU.AKQUISE = CodeKU.ABZUGANG
   SELECT CASE art.master
     CASE 1
       CodeAK.akquise = 999991
     CASE 2
       CodeAK.akquise = 999992
     CASE 3
       CodeAK.akquise = 999993
     CASE 4
       CodeAK.akquise = 999994
     CASE 5
       CodeAK.akquise = 999995
     CASE 7
       CodeAK.akquise = 999997
   END CASE 
   CodeMA.AKQUISE = _vcodema%
   Wertung.AKQUISE = 0
   Sprachnotiz.akquise = "n"
   Datum.AKQUISE = TODAY 
   Termin.akquise = Termin.ABZUGANG
   erledigt_Termin.akquise = "n"
   erledigt_Vorg.AKQUISE = "n"
   SELECT KEY CodeKU.ABZUGANG FILE "adressen" INDEX codeku.adressen
   nachname.akquise = nachname.adressen
   SELECT KEY codema.akquise FILE "supervis" INDEX codema.supervis
   Bearbeiter.akquise = nachname.supervis
   SELECT CASE (Art.ABZUGANG)
     CASE 1
       Notiz.akquise = "ANGEBOT " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosum%,"99999999999.00")) + " DM"
     CASE 2
       Notiz.akquise = "RECHNUNG " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosum%,"99999999999.00")) + " DM"
     CASE 3
       Notiz.akquise = "LIEFERSCHEIN " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG
     CASE 4
       Notiz.akquise = "AUFTRAG " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosum%,"999999999999.00")) + " DM"
     CASE 5
       Notiz.akquise = "BESTELLUNG " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosum%,"999999999999.00")) + " DM"
     CASE 7
       Notiz.akquise = "GUTSCHRIFT " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosum%,"999999999999.00")) + " DM"
   END SELECT 
   CALL QuickStore("AKQUISE")
   FILE cfile$
 REM ***************************************************************
 
 
   REM  -- BestandsfÅhrung --
 
   IF opt3$ = "j" THEN 
     SET STATUS "Bitte warten: Bestandsrechnung..."
     CALL DFile(3,"KOMBI" + _fpw$)
     CALL DFile(3,"ARTIKEL" + _fpw$)
     FILE "master"
     INDEX CodeMS.master
     SELECT FIRST 
     SELECT KEY cums% FILE "master" INDEX Codems.master
     art% = art.master
     FILE "SCHEIN"
     INDEX CodeMS.SCHEIN
     SELECT FIRST 
     SELECT KEY cums% FILE "SCHEIN" INDEX CodeMS.SCHEIN
     WHILE CodeMS.SCHEIN = cums% AND NOT EOF ("SCHEIN")
       IF Art.SCHEIN = 0 THEN 
         FILE "KOMBI"
         INDEX CodeKO.KOMBI
         SELECT FIRST 
         SELECT KEY CodeAR.SCHEIN FILE "KOMBI" INDEX CodeKO.KOMBI
         IF FOUND ("KOMBI") THEN 
           WHILE CodeKO.KOMBI = CodeAR.SCHEIN AND NOT EOF ("KOMBI")
             SELECT KEY CodeAR.KOMBI LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
             IF FOUND ("ARTIKEL") AND BestandsfÅhrung.ARTIKEL LIKE "j" THEN 
               letzterAbgang.ARTIKEL = TODAY 
               IF art% <> 7 THEN 
                 Bestand.ARTIKEL = Bestand.ARTIKEL - (Anzahl.KOMBI * Anzahl.SCHEIN)
               ELSE 
                 Bestand.ARTIKEL = Bestand.ARTIKEL + (Anzahl.KOMBI * Anzahl.SCHEIN)
               END IF 
               CALL QuickStore("ARTIKEL")
             END IF 
             SELECT NEXT LOCK FILE "KOMBI" INDEX CodeKO.KOMBI
           WEND 
         ELSE 
           SELECT KEY CodeAR.SCHEIN LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
 
      REM     ----------- BestandsfÅhrung s+k SÑtze erzeugen ----------------------
 
           IF FOUND ("ARTIKEL") AND BestandsfÅhrung.ARTIKEL LIKE "j" THEN 
             letzterAbgang.ARTIKEL = TODAY 
             IF art% <> 7 THEN 
               Bestand.ARTIKEL = Bestand.ARTIKEL - Anzahl.SCHEIN
             ELSE 
               Bestand.ARTIKEL = Bestand.ARTIKEL + Anzahl.SCHEIN
             END IF 
             CALL QuickStore("ARTIKEL")
           END IF 
         END IF 
       END IF 
       SELECT NEXT FILE "SCHEIN" INDEX CodeMS.SCHEIN
     WEND 
   END IF 
 
 END IF 
 SET STATUS ""
 FORM 
 MOUSE ON 
 END SUB 
 
 
 ' MASTER EK berechnen
 ' =======================================================================
 
SUB MSEK()
 cums% = codems.master
 IF NEW ("master") OR MOD ("master") THEN CALL QuickStore("master")
 SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 CALL MSCHRabattProz()
 CALL MSCHRabatt()
 FILE "master"
 SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 Gewinn$ = STR$ (GesNetto.MASTER - EKnetto.Master,",9999999.00")
 Spanne$ = STR$ (100 - ((100 / GesNetto.Master) * EKNetto.Master),",99999.00")
 IF art.master = 7 THEN 
   CREATE DIALOG "EK",0,0,116,61,title$,"MS Sans Serif",8
    ADD DIALOG "EK",5,5,4,55,12,0,"Gutschrift netto:"
    ADD DIALOG "EK",5,65,4,47,12,2,GesNetto.MASTER
    ADD DIALOG "EK",5,5,14,56,12,0,"Gutschrift brutto:"
    ADD DIALOG "EK",5,65,14,47,12,2,GesBrutto.MASTER
    ADD DIALOG "EK",1,29,35,56,16,0,"&Weiter",0,0
   DIALOG "EK",req%
   REMOVE DIALOG "EK"
 ELSE 
   CREATE DIALOG "EK",0,0,115,90,title$,"MS Sans Serif",8
   ADD DIALOG "EK",5,5,4,46,12,0,"VK netto:"
   ADD DIALOG "EK",5,5,14,47,12,0,"VK brutto:"
   ADD DIALOG "EK",5,5,24,32,12,0,"EK netto:"
   ADD DIALOG "EK",5,5,34,48,12,0,"Handelspanne:"
   ADD DIALOG "EK",5,5,44,46,12,0,"Nettogewinn:"
   ADD DIALOG "EK",5,61,4,47,12,2,GesNetto.MASTER
   ADD DIALOG "EK",5,61,14,47,12,2,GesBrutto.MASTER
   ADD DIALOG "EK",5,61,24,47,12,2,EKnetto.Master
   ADD DIALOG "EK",5,61,34,47,12,2,Spanne$
   ADD DIALOG "EK",5,61,44,47,12,2,gewinn$
   ADD DIALOG "EK",1,31,64,56,16,0,"&Weiter",0,0
   DIALOG "EK",req%
   REMOVE DIALOG "EK"
 END IF 
 END SUB 
 
 
 ' MASTER MenÅaufruf der Druckfunktion
 ' =======================================================================
 
SUB MSDrucken()
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 dokneu% = 0
 FILE "master"
 cums% = codems.master
 codeku% = Codeku.master
 knr% = Codeku.Master
 art% = Art.master
 codedok% = Codedok.master
 cudoc% = codedok%
 IF NEW ("master") OR MOD ("master") THEN CALL QuickStore("master")
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 CALL MSCHRabattProz()
 CALL MSCHRabatt()
 FILE "master"
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 dokname$ = Nummer.master + "/" + nachname.master
 opt% = 2
 CREATE DIALOG "DRUCKART",0,0,184,60,title$,"MS Sans Serif",8
 ADD DIALOG "DRUCKART",9,6,1,20,21,2
 ADD DIALOG "DRUCKART",9,6,1,20,21,2
 ADD DIALOG "DRUCKART",4,26,1,147,39,0,"Ausgabeart"
 ADD DIALOG "DRUCKART",3,32,16,133,9,0,"Ausgabe nach MS Word 6 (deutsch)",2,opt%
 ADD DIALOG "DRUCKART",3,32,27,134,9,0,"Ausgabe Åber Reportgenerator",1,opt%
 ADD DIALOG "DRUCKART",1,44,43,54,14,1,"&OK",1,1
 ADD DIALOG "DRUCKART",1,100,43,54,14,0,"&Abbrechen",0,0
 DIALOG "DRUCKART",req%
 REMOVE DIALOG "DRUCKART"
 MOUSE OFF 
 IF opt% = 1 AND req% = 1 THEN 
   CALL MSDR(CodeMS.MASTER)
 END IF 
 IF opt% = 2 AND req% = 1 THEN 
   REM *** Aufbereitung der Dokumentenvorlage, in die gedruckt werden soll
   REM *** Voraussetzung ist, das die Aktionen Angebote, Rechnungen,...
   REM *** existieren, sonst Zuweisung allgemeine Termine, allgemeine Schreiben
   FILE "dokument"
   INDEX Codedok.dokument
   SELECT FIRST 
   IF codedok% > 0 THEN 
     dokneu% = 1
     SELECT KEY codedok% LOCK FILE "Dokument" INDEX codedok.dokument
   ELSE 
     REM *** neues Dokument erstellen
     IF _WPSuffix$ LIKE "leer" THEN 
       CALL Fehler("Keine Textverarbeitung ausgewÑhlt!","Bitte starten Sie Åber den Hauptbildschirm die Funktion 'Einstellungen' und wÑhlen Sie dort eine Textverarbeitung aus.")
       DOKNeu% = - 1
     ELSE 
       MOUSE OFF 
       SET STATUS "Dokument wird vorbereitet..."
       SELECT CASE Art%
       CASE 1
         aktion1$ = "Angebot*"
         aktion2$ = "*Angebot*"
       CASE 2
         aktion1$ = "Rechnung*"
         aktion2$ = "*Rechnung*"
       CASE 3
         aktion1$ = "Liefersch*"
         aktion2$ = "*Liefersch*"
       CASE 4
         aktion1$ = "Auftr*"
         aktion2$ = "*Auftr*"
       CASE 5
         aktion1$ = "Bestell*"
         aktion2$ = "*Bestell*"
       CASE 7
         aktion1$ = "Gutschr*"
         aktion2$ = "*Gutschr*"
       END SELECT 
       FILE "Aktionen"
       INDEX Bezeichnung.aktionen
       SELECT FIRST 
       ok% = - 1
       WHILE NOT EOF ("aktionen") AND ok% = - 1
         IF bezeichnung.aktionen LIKE aktion1$ OR bezeichnung.aktionen LIKE aktion2$ THEN 
           codeak% = codeak.aktionen
           ok% = 0
         END IF 
       SELECT NEXT INDEX bezeichnung.aktionen
       WEND 
       IF ok% = - 1 THEN codeak% = 1
       a% = 0
       ok% = - 1
       WHILE DOKGruppen$(a%) <> "" AND ok% = - 1
         a% = a% + 1
         IF DOKGruppen$(a%) LIKE aktion1$ OR DOKGruppen$(a%) LIKE aktion1$ THEN 
            gruppe$ = DOKGruppen$(a%)
            ok% = 0
         END IF 
       WEND 
       IF ok% = - 1 THEN gruppe$ = DOKGruppen$(0):REM allgemeine Schreiben  
       IF vorlage% = 0 THEN 
         _vorlage$ = ReadConfig$("VORLAGEN",Gruppe$)
         IF _vorlage$ <> "leer" THEN 
           textvorlage$ = ReadConfig$("DOKUMENTE", FN ansi(Gruppe$)) + _vorlage$
         ELSE 
           textvorlage$ = _netpath$ + "OFFICE\TEXT\0." + _WPSuffix$
         END IF 
       ELSE 
         SELECT KEY vorlage% FILE "dokument" INDEX CodeDOK.dokument
         textvorlage$ = LEFT$ (_netdirectory$,2) + Dateiname.DOKUMENT
       END IF 
       docpath$ = LEFT$ (_netpath$,2) + ReadConfig$("DOKUMENTE", FN ansi(Gruppe$))
       IF RIGHT$ (docpath$,1) <> "\" THEN docpath$ = docpath$ + "\"
       FILE "dokument"
       BLANK 
       CodeDOK.dokument = SER ("dokument",1)
       dokument.dokument = dokname$
       erstellt_am.dokument = TODAY 
       letzte_Bearbeit.dokument = TODAY 
       CodeMA.dokument = _vcodema%
       CodeKU.dokument = knr%
       SELECT KEY codema.dokument FILE "supervis" INDEX codema.supervis
       Bearbeiter.dokument = nachname.supervis
       textdatei$ = docpath$ + LTRIM$ ( STR$ (CodeDOK.dokument,"999999")) + "." + RIGHT$ (textvorlage$,3)
       Dateiname.dokument = MID$ (textdatei$,3, LEN (textdatei$) - 2)
       Gruppe.dokument = Gruppe$
       link.dokument = codeku%
       CALL QuickStore("DOKUMENT")
       cudoc% = CodeDOK.dokument
       codedok% = cudoc%
       IF EXISTS (textvorlage$) THEN 
         FILE "schein"
         IF NOT EXISTS (cums%,Codems.schein) THEN 
           CALL Fehler ("Export nach MSWord6/7(deutsch) nicht mîglich, da noch keine Positionen erfa·t wurden!","Erfassen Sie bitte mindestens eine Position!")
           dokneu% = - 1
           FILE "master"
         ELSE 
           FILE "master"
           codedok.master = codedok%
           CALL QuickStore("master")
           SELECT KEY cums% LOCK FILE "master" INDEX codems.master
           FILE "dokument"
           COPY textvorlage$,textdatei$
           DOKNeu% = CodeDOK.dokument
           REQUEST "Mîchten Sie hierzu einen Termin erfassen?","",130,req122%
           IF req122% > 0 THEN 
             REM Eintrag eines Termins, in der entsprechneden Aktion
             CALL ADRDokRegister1(CodeDOK.dokument,codeak%)
           END IF 
         END IF 
       ELSE 
         CALL Fehler("Textvorlage " + textvorlage$ + " konnte nicht gefunden werden!","Eintrag wird aus Dokumentenverwaltung entfernt.")
         SELECT KEY cudoc% LOCK FILE "dokument" INDEX CodeDOK.dokument
         SELECT REMOVE FILE "DOKUMENT"
         DOKNeu% = - 1
       END IF 
       FILE "master"
       SELECT KEY cums% LOCK FILE "master" INDEX codems.master
     END IF :REM Textverarbeitung vorhanden
   END IF :REM codedok% in master eingetragen
   IF dokneu% <> - 1 THEN 
     IF dokneu% = 1 THEN 
       REQUEST "Das Dokument existiert bereits!","Soll es neu erzeugt werden ? ",130,req1%
       IF req1% = 1 THEN 
         CALL DOKBearbeiten(cudoc%)
 
         IF dokfehl% <> 1 THEN CALL Out2WinWord(cums%)
       ELSE 
         CALL DOKBearbeiten(cudoc%)
       END IF 
     ELSE 
       CALL DOKBearbeiten(cudoc%)
       IF dokfehl% <> 1 THEN CALL Out2WinWord(cums%)
     END IF 
   END IF 
 END IF 
 MOUSE ON 
 END SUB 
 
 
 ' MASTER Druckausgabe von Rechnung/Angebot ...
 ' =======================================================================
 
SUB MSDR(codems%)
 IF NEW ("MASTER") OR MOD ("MASTER") THEN CALL FStore("MASTER")
 cums% = codems.master
 FILE "MASTER"
 SELECT KEY codems% LOCK FILE "MASTER" INDEX CodeMS.MASTER
 sform$ = "UNI1"
 IF mwstcount% <> 1 THEN sform$ = "UNI"
 IF art.master = 3 THEN sform$ = "LIEFER"
   
 IF KalkArt.MASTER = 0 THEN 
   rform$ = "N" + SFORM$
 ELSE 
   rform$ = "B" + SFORM$
 END IF 
 IF art.master = 4 THEN 
   titel.master = "AuftragsbestÑtigung"
   CALL QuickStore("master")
 END IF 
 SELECT KEY codems% LOCK FILE "MASTER" INDEX CodeMS.MASTER
 CALL DFile(3,"SCHEIN" + _fpw$)
 FILE "master"
  REPORT USING rform$
 BEFORE REPORT 
   SET REPORT PAGE "H_REPORT"
   OUTPUT REPORT PAGE 
 END REPORT 
 AFTER REPORT 
   SET REPORT PAGE "F_REPORT"
   OUTPUT REPORT PAGE 
 END REPORT 
 HEADING 
   SET REPORT PAGE "H_PAGE"
   OUTPUT REPORT PAGE 
 END HEADING 
 FOOTING 1
 SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
 END FOOTING 
 AFTER SELECT 
   SET REPORT PAGE "F_SELECT"
   OUTPUT REPORT PAGE 
 END SELECT 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 SET FIRST PAGE HEADING OFF 
 
 REM Rabattext enthÑlt jetzt die Skontoaussage
 RabattText$ = ""
 IF skonto.MASTER > 0 THEN 
   RabattText$ = ""
   summezahl% = GesBrutto.master - Skonto.master
   summezahl$ = LTRIM$ ( STR$ (Summezahl%,"$ ,9999999999.00"))
   skontoproz$ = LTRIM$ ( STR$ (SkontoProz.MASTER,"999.00"))
   skonto$ = LTRIM$ ( STR$ (Skonto.MASTER,"$ ,9999999999.00"))
   gesbrut$ = LTRIM$ ( STR$ (GesBrutto.master,"$ ,9999999999.00"))
   REM RabattText$ = "es wird Skonto von " + skontoproz$ + " % (Betrag " + skonto$ + ") bei Zahlung bis: " + DATE$ (skontoziel.master,"dd.mm.yy") + " gewÑhrt, zu zahlende Summe: " + LTRIM$ ( STR$ (summezahl%,"$ ,9999999999.00"))
   RabattText$ = "bei Zahlung bis zum " + DATE$ (skontoziel.master,"dd.mm.yy") + " gewÑhren wir ein Skonto von " + skontoproz$ + " % (Betrag: " + skonto$ + "), auf  " + gesbrut$ + CHR$ (13) + "zu zahlende Summe: " + summezahl$
 ELSE 
   RabattText$ = ""
 END IF 
 
 REM Erzeugung der zu druckenden Fu·zeilen, abhÑngig von Kalkulationsart
 REM unter BerÅcksichtigung von Rabattaussagen
 IF kalkart.master = 0 THEN 
 REM Nettofakturierung
   IF rabatt.master <> 0 OR rabattproz.master <> 0 THEN 
     IF rabattart.master = 0 THEN 
     REM Rabatt auf Netto
       Zeile1$ = "Summe Netto:"
       WertZeile1$ = LTRIM$ ( STR$ (PreisNetto.master,"$ ,9999999999.00"))
       Zeile2$ = "abzÅglich Rabatt von " + STR$ (Rabattproz.master,"999.00") + "% auf Summe Netto"
       WertZeile2$ = LTRIM$ ( STR$ (Rabatt.master,"$ ,9999999999.00"))
       Zeile3$ = "Summe Netto abzÅglich Rabatt"
       WertZeile3$ = LTRIM$ ( STR$ (GesNetto.master,"$ ,9999999999.00"))
       Zeile4$ = MWSTText$
       WertZeile4$ = MWSTBetrag$
       Zeile5$ = "Gesamtsumme"
       Summegesbrutto% = gesnetto.master + mwstBetrag1%
       WertZeile5$ = LTRIM$ ( STR$ (Summegesbrutto%,"$ ,9999999999.00"))
     ELSE 
     REM Rabatt auf Brutto
       Zeile1$ = "Summe Netto:"
       WertZeile1$ = LTRIM$ ( STR$ (PreisNetto.master,"$ ,9999999999.00"))
       Zeile2$ = MWSTText$
       WertZeile2$ = MWSTBetrag$
       Zeile3$ = "Summe Brutto"
       WertZeile3$ = LTRIM$ ( STR$ (PreisBrutto.master,"$ ,9999999999.00"))
       Zeile4$ = "abzÅglich Rabatt von " + STR$ (Rabattproz.master,"999.00") + "% auf Summe Brutto"
       WertZeile4$ = LTRIM$ ( STR$ (Rabatt.master,"$ ,9999999999.00"))
       Zeile5$ = "Gesamtsumme"
       WertZeile5$ = LTRIM$ ( STR$ (GesBrutto.master,"$ ,9999999999.00"))
     END IF 
   ELSE 
     REM ohne Rabatt
     Zeile3$ = "Summe Netto:"
     WertZeile3$ = LTRIM$ ( STR$ (PreisNetto.master,"$ ,9999999999.00"))
     Zeile4$ = MWSTText$
     WertZeile4$ = MWSTBetrag$
     Zeile1$ = ""
     WertZeile1$ = ""
     Zeile2$ = ""
     WertZeile2$ = ""
     Zeile5$ = "Gesamtsumme"
     WertZeile5$ = LTRIM$ ( STR$ (GesBrutto.master,"$ ,9999999999.00"))
   END IF 
 END IF 
 IF kalkart.master <> 0 THEN 
 REM Bruttofakturierung
   IF rabatt.master <> 0 THEN 
   REM Rabatt gegeben
     IF rabattart.master = 0 THEN 
     REM Rabatt auf Netto gegeben, darf nicht sein
     CALL Fehler("Sie dÅrfen bei einer Bruttofakturierung keinen Rabatt auf die Nettosumme geben!","Bitte Ñndern!")
       Zeile1$ = ""
       WertZeile1$ = ""
       Zeile2$ = ""
       WertZeile2$ = ""
       Zeile3$ = ""
       WertZeile3$ = ""
       Zeile4$ = "Gesamtsumme"
       WertZeile4$ = LTRIM$ ( STR$ (GesBrutto.master,"$ ,9999999999.00"))
       Zeile5$ = MWSTText$
       WertZeile5$ = ""
     ELSE 
       Zeile1$ = "Summe Brutto"
       WertZeile1$ = LTRIM$ ( STR$ (PreisBrutto.master,"$ ,9999999999.00"))
       Zeile2$ = "abzÅglich Rabatt von " + STR$ (Rabattproz.master,"999.00") + "% auf Summe Brutto"
       WertZeile2$ = LTRIM$ ( STR$ (Rabatt.master,"$ ,9999999999.00"))
       Zeile3$ = ""
       WertZeile3$ = ""
       Zeile4$ = "Gesamtsumme"
       WertZeile4$ = LTRIM$ ( STR$ (GesBrutto.master,"$ ,9999999999.00"))
       Zeile5$ = MWSTText$
       WertZeile5$ = ""
     END IF 
   ELSE 
     Zeile1$ = ""
     WertZeile1$ = ""
     Zeile2$ = ""
     WertZeile2$ = ""
     Zeile3$ = ""
     WertZeile3$ = ""
     Zeile4$ = "Gesamtsumme"
     WertZeile4$ = LTRIM$ ( STR$ (GesBrutto.master,"$ ,9999999999.00"))
     Zeile5$ = MWSTText$
     WertZeile5$ = ""
   END IF 
 END IF 
 REM Wenn keine Bestellung vorliegt, dann Kundenummer verwenden
 IF art.master <> 5 THEN 
   kundennr$ = "Kundennummer: " + Kundennummer.master
   IF DEFA$ = "MEGA" THEN 
     IF Kostenstelle.master <> 0 THEN kundennr$ = "Kostenstelle: " + STR$ (Kostenstelle.master,"000000")
     IF KostentrÑger.master <> "" THEN kundennr$ = "KostentrÑger: " + KostentrÑger.master
   END IF 
 ELSE 
   kundennr$ = "unsere Kundennummer: " + Kundennummer.master
 END IF 
 REM ***leer
 leervorAdr% = GlervorAdr%
 leernachAdr% = GlernachAdr%
 leerKopfSeite% = GlerKopfSeite%
 leerFusSeite% = GlerFusSeite%
 leervorAdr$ = ""
 FOR i% = 0 TO leervorAdr%
   leervorAdr$ = leervorAdr$ + CHR$ (13) + CHR$ (10)
 NEXT i%
 REM leernachAdr% = VAL (ReadConfig$("FACTURA","LeerzeilenNachAdresse"))
 leernachAdr$ = ""
 FOR i% = 0 TO leernachAdr%
   leernachAdr$ = leernachAdr$ + CHR$ (13) + CHR$ (10)
 NEXT i%
 REM leerKopfSeite% = VAL (ReadConfig$("FACTURA","LeerzeilenSeitenKopf"))
 leerKopfSeite$ = ""
 FOR i% = 0 TO leerKopfSeite%
   leerKopfSeite$ = leerKopfSeite$ + CHR$ (13) + CHR$ (10)
 NEXT i%
 REM leerFusSeite% = VAL (ReadConfig$("FACTURA","LeerzeilenSeitenFuss"))
 leerFusSeite$ = " "
 REM FOR i% = 0 TO leerFusSeite%
 REM leerFusSeite$ = leerFusSeite$ + STR$ (i%) + CHR$ (13) + CHR$ (10)
 REM NEXT i%
 
 
  
 SELECT CASE MSArt%
 CASE 1
   alt% = 1
 CASE 2
   alt% = 0
 CASE 3
   alt% = 0
 CASE 4
   alt% = 0
 CASE 5
   alt% = 0
 END SELECT 
 
 ON ERROR GOTO ErrMSDR
 IF alt% = 1 THEN 
   SELECT ;
     WHERE CodeMS.MASTER = CodeMS.SCHEIN AND CodeMS.Master = codems%
     ORDER REPORT PosNr.SCHEIN
     TO ASK 
 ELSE 
   SELECT ;
     WHERE CodeMS.MASTER = CodeMS.SCHEIN AND CodeMS.Master = codems% AND Art.SCHEIN = 0
     ORDER REPORT PosNr.SCHEIN
     TO ASK 
 END IF 
ErrMSDR: 
 ON ERROR GOTO ErrorHandler
 SELECT KEY codems% FILE "MASTER" INDEX CodeMS.MASTER
 END SUB 
 
  
 
 ' MASTER Auswahl Kopftext/PROLOG
 ' =======================================================================
 
SUB MSKopftext()
 cums% = CodeMS.master
 IF NEW ("MASTER") OR MOD ("MASTER") THEN CALL FStore("MASTER")
 CALL FLSuchen()
 IF cufl% <> 0 THEN 
   SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.master
   IF prolog.Master = "" THEN 
     prolog.Master = Floskel.floskel
   ELSE 
     opt% = 2
     CREATE DIALOG "FLOSKEL",0,0,139,83,title$,"MS Sans Serif",8
     ADD DIALOG "FLOSKEL",4,0,0,138,62,0,""
     ADD DIALOG "FLOSKEL",9,4,13,20,22,2
     ADD DIALOG "FLOSKEL",3,30,17,103,11,0,"vor aktuellem Text einfÅgen",1,opt%
     ADD DIALOG "FLOSKEL",3,30,28,89,12,0,"aktuellen Text ersetzen",2,opt%
     ADD DIALOG "FLOSKEL",3,30,40,103,11,0,"an aktuellen Text anhÑngen",3,opt%
     ADD DIALOG "FLOSKEL",1,13,65,55,14,1,"&Weiter",1,1
     ADD DIALOG "FLOSKEL",1,69,65,55,14,0,"&Abbrechen",0,0
     DIALOG "FLOSKEL",req%
     REMOVE DIALOG "FLOSKEL"
     IF req% = 1 THEN 
       SELECT CASE opt%
       CASE 1
         prolog.Master = Floskel.floskel + CHR$ (13) + CHR$ (10) + prolog.Master
       CASE 2
         prolog.Master = Floskel.floskel
       CASE 3
         prolog.Master = prolog.Master + CHR$ (13) + CHR$ (10) + Floskel.floskel
       END SELECT 
     END IF 
   END IF 
   CALL FStore("MASTER")
 END IF 
 FORM 
 END SUB 
 
 
 ' MASTER Auswahl Fu·text/EPILOG
 ' =======================================================================
 
SUB MSFusstext()
 cums% = CodeMS.master
 IF NEW ("MASTER") OR MOD ("MASTER") THEN CALL FStore("MASTER")
 CALL FLSuchen()
 IF cufl% <> 0 THEN 
   SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.master
   IF epilog.Master = "" THEN 
     epilog.Master = Floskel.floskel
   ELSE 
     opt% = 2
     CREATE DIALOG "FLOSKEL",0,0,139,83,title$,"MS Sans Serif",8
     ADD DIALOG "FLOSKEL",4,0,0,138,62,0,""
     ADD DIALOG "FLOSKEL",9,4,13,20,22,2
     ADD DIALOG "FLOSKEL",3,30,17,103,11,0,"vor aktuellem Text einfÅgen",1,opt%
     ADD DIALOG "FLOSKEL",3,30,28,89,12,0,"aktuellen Text ersetzen",2,opt%
     ADD DIALOG "FLOSKEL",3,30,40,103,11,0,"an aktuellen Text anhÑngen",3,opt%
     ADD DIALOG "FLOSKEL",1,13,65,55,14,1,"&Weiter",1,1
     ADD DIALOG "FLOSKEL",1,69,65,55,14,0,"&Abbrechen",0,0
     DIALOG "FLOSKEL",req%
     REMOVE DIALOG "FLOSKEL"
     IF req% = 1 THEN 
       SELECT CASE opt%
       CASE 1
         epilog.Master = Floskel.floskel + CHR$ (13) + CHR$ (10) + epilog.Master
       CASE 2
         epilog.Master = Floskel.floskel
       CASE 3
         epilog.Master = epilog.Master + CHR$ (13) + CHR$ (10) + Floskel.floskel
       END SELECT 
     END IF 
   END IF 
   CALL FStore("MASTER")
 END IF 
 FORM 
 END SUB 
  
SUB MSExport()
 CALL Out2WinWord(CodeMS.MASTER)
 END SUB 
 
SUB Out2WinWord(codems%)
 cums% = codems%
 IF NEW ("master") OR MOD ("master") THEN CALL QuickStore("master")
 SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 CALL MSCHRabattProz()
 CALL MSCHRabatt()
 FILE "master"
  IF art.master = 4 THEN 
   titel.master = "AuftragsbestÑtigung"
   CALL QuickStore("master")
 END IF 
 SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 RabattText$ = ""
 IF skonto.MASTER > 0 THEN 
   RabattText$ = ""
   summezahl% = GesBrutto.master - Skonto.master
   summezahl$ = LTRIM$ ( STR$ (Summezahl%,"$ ,9999999999.00"))
   skontoproz$ = LTRIM$ ( STR$ (SkontoProz.MASTER,"999.00"))
   skonto$ = LTRIM$ ( STR$ (Skonto.MASTER,"$ ,9999999999.00"))
   gesbrut$ = LTRIM$ ( STR$ (GesBrutto.master,"$ ,9999999999.00"))
   RabattText$ = "bei Zahlung bis zum " + DATE$ (skontoziel.master,"dd.mm.yy") + " gewÑhren wir ein Skonto von " + skontoproz$ + " % (Betrag: " + skonto$ + "), auf  " + gesbrut$ + CHR$ (13) + "zu zahlende Summe: " + summezahl$
 ELSE 
   RabattText$ = ""
 END IF 
 
 REM Nettofakturierung
   IF rabatt.master <> 0 OR rabattproz.master <> 0 THEN 
     IF rabattart.master = 0 THEN 
     REM Rabatt auf Netto
       Zeile1$ = "Summe Netto:"
       WertZeile1$ = LTRIM$ ( STR$ (PreisNetto.master,"$ ,9999999999.00"))
       Zeile2$ = "abzÅglich Rabatt von " + STR$ (Rabattproz.master,"999.00") + "% auf Summe Netto"
       WertZeile2$ = LTRIM$ ( STR$ (Rabatt.master,"$ ,9999999999.00"))
       Zeile3$ = "Summe Netto abzÅglich Rabatt"
       WertZeile3$ = LTRIM$ ( STR$ (GesNetto.master,"$ ,9999999999.00"))
       Zeile4$ = MWSTText$
       WertZeile4$ = MWSTBetrag$
       Zeile5$ = "Gesamtsumme"
       Summegesbrutto% = gesnetto.master + mwstBetrag1%
       WertZeile5$ = LTRIM$ ( STR$ (Summegesbrutto%,"$ ,9999999999.00"))
     ELSE 
     REM Rabatt auf Brutto
       Zeile1$ = "Summe Netto:"
       WertZeile1$ = LTRIM$ ( STR$ (PreisNetto.master,"$ ,9999999999.00"))
       Zeile2$ = MWSTText$
       WertZeile2$ = MWSTBetrag$
       Zeile3$ = "Summe Brutto"
       WertZeile3$ = LTRIM$ ( STR$ (PreisBrutto.master,"$ ,9999999999.00"))
       Zeile4$ = "abzÅglich Rabatt von " + STR$ (Rabattproz.master,"999.00") + "% auf Summe Brutto"
       WertZeile4$ = LTRIM$ ( STR$ (Rabatt.master,"$ ,9999999999.00"))
       Zeile5$ = "Gesamtsumme"
       WertZeile5$ = LTRIM$ ( STR$ (GesBrutto.master,"$ ,9999999999.00"))
     END IF 
   ELSE 
     REM ohne Rabatt
     Zeile3$ = "Summe Netto:"
     WertZeile3$ = LTRIM$ ( STR$ (PreisNetto.master,"$ ,9999999999.00"))
     Zeile4$ = MWSTText$
     WertZeile4$ = MWSTBetrag$
     Zeile1$ = ""
     WertZeile1$ = ""
     Zeile2$ = ""
     WertZeile2$ = ""
     Zeile5$ = "Gesamtsumme"
     WertZeile5$ = LTRIM$ ( STR$ (GesBrutto.master,"$ ,9999999999.00"))
   END IF 
 END IF 
 IF kalkart.master <> 0 THEN 
 REM Bruttofakturierung
   IF rabatt.master <> 0 THEN 
   REM Rabatt gegeben
     IF rabattart.master = 0 THEN 
     REM Rabatt auf Netto gegeben, darf nicht sein
     CALL Fehler("Sie dÅrfen bei einer Bruttofakturierung keinen Rabatt auf die Nettosumme geben!","Bitte Ñndern!")
       Zeile1$ = ""
       WertZeile1$ = ""
       Zeile2$ = ""
       WertZeile2$ = ""
       Zeile3$ = ""
       WertZeile3$ = ""
       Zeile4$ = "Gesamtsumme"
       WertZeile4$ = LTRIM$ ( STR$ (GesBrutto.master,"$ ,9999999999.00"))
       Zeile5$ = MWSTText$
       WertZeile5$ = ""
     ELSE 
       Zeile1$ = "Summe Brutto"
       WertZeile1$ = LTRIM$ ( STR$ (PreisBrutto.master,"$ ,9999999999.00"))
       Zeile2$ = "abzÅglich Rabatt von " + STR$ (Rabattproz.master,"999.00") + "% auf Summe Brutto"
       WertZeile2$ = LTRIM$ ( STR$ (Rabatt.master,"$ ,9999999999.00"))
       Zeile3$ = ""
       WertZeile3$ = ""
       Zeile4$ = "Gesamtsumme"
       WertZeile4$ = LTRIM$ ( STR$ (GesBrutto.master,"$ ,9999999999.00"))
       Zeile5$ = MWSTText$
       WertZeile5$ = ""
     END IF 
   ELSE 
     Zeile1$ = ""
     WertZeile1$ = ""
     Zeile2$ = ""
     WertZeile2$ = ""
     Zeile3$ = ""
     WertZeile3$ = ""
     Zeile4$ = "Gesamtsumme"
     WertZeile4$ = LTRIM$ ( STR$ (GesBrutto.master,"$ ,9999999999.00"))
     Zeile5$ = MWSTText$
     WertZeile5$ = ""
   END IF 
 END IF 
 
 
 
 
 
 IF art.master <> 5 THEN 
   kundennr$ = "Kundennummer: " + Kundennummer.master
   IF DEFA$ = "MEGA" THEN 
     IF Kostenstelle.master <> 0 THEN kundennr$ = "Kostenstelle: " + STR$ (Kostenstelle.master,"000000")
     IF KostentrÑger.master <> "" THEN kundennr$ = "KostentrÑger: " + KostentrÑger.master
   END IF 
 ELSE 
   kundennr$ = "unsere Kundennummer: " + Kundennummer.master
 END IF 
 
  
 REM ** Anzeige von Alternativpositionen ein/ausschalten ** 
 SELECT CASE MSArt%
 CASE 1
   alt% = 1
 CASE 2
   alt% = 0
 CASE 3
   alt% = 0
 CASE 4
   alt% = 0
 CASE 5
   alt% = 0
 END SELECT 
 
 REM ** Ausgabe nach WinWord 6 **
 
 SELECT KEY codems% FILE "MASTER" INDEX CodeMS.MASTER
 SET ANSICONVERT ON 
 art% = art.master
 IF EXISTS ("c:\m2.asc") THEN DELETE "c:\m2.asc"
 OPEN "c:\m2.asc" FOR OUTPUT 
 g$ = CHR$ (34)
 wleernachPro% = VAL (ReadConfig$("FACTURA","WLeerzeilennachProlog"))
 IF wleernachPro% < 0 OR wleernachPro% > 100 THEN wleernachPro% = 0
 wleernachKu% = VAL (ReadConfig$("FACTURA","WLeerzeilennachKundennr"))
 IF wleernachKu% < 0 OR wleernachKu% > 100 THEN wleernachKu% = 0
 wleernachAdr% = VAL (ReadConfig$("FACTURA","WLeerzeilennachAdresse"))
 IF wleernachAdr% < 0 OR wleernachAdr% > 100 THEN wleernachAdr% = 1
 wleerVorAdr% = VAL (ReadConfig$("FACTURA","WLeerzeilenVorAdresse"))
 IF wleerVorAdr% < 0 OR wleerVorAdr% > 100 THEN wleerVorAdr% = 1
 wstitel% = VAL (ReadConfig$("FACTURA","WSchriftgradTitel"))
 IF wstitel% < 4 OR wstitel% > 35 THEN wstitel% = 12
 wskund% = VAL (ReadConfig$("FACTURA","WSchriftgradKundennr"))
 IF wskund% < 4 OR wskund% > 35 THEN wskund% = 10
 wsrest% = VAL (ReadConfig$("FACTURA","WSchriftgradRest"))
 IF wsRest% < 4 OR wsRest% > 35 THEN wsRest% = 9
 wspro% = VAL (ReadConfig$("FACTURA","WSchriftgradProlog"))
 IF wspro% < 4 OR wspro% > 35 THEN wspro% = 9
 wsepilog% = VAL (ReadConfig$("FACTURA","WSchriftgradEpilog"))
 IF wsepilog% < 4 OR wsepilog% > 35 THEN wsepilog% = 9
 wssum% = VAL (ReadConfig$("FACTURA","WSchriftgradSumme"))
 IF wssum% < 4 OR wssum% > 35 THEN wssum% = 10
 wstabko% = VAL (ReadConfig$("FACTURA","WSchriftgradTabellenKopf"))
 IF wstabko% < 4 OR wstabko% > 35 THEN wstabko% = 10
 wsadr% = VAL (ReadConfig$("FACTURA","WSchriftgradAdresse"))
 IF wsadr% < 4 OR wsadr% > 35 THEN wsadr% = 10
 wstabko$ = "Schriftgrad " + STR$ (wstabko%,"99")
 wsepilog$ = "Schriftgrad " + STR$ (wsepilog%,"99")
 wssum$ = "Schriftgrad " + STR$ (wssum%,"99")
 wssu$ = STR$ (wssum%,"99")
 wsadr$ = "Schriftgrad " + STR$ (wsadr%,"99")
 wst$ = STR$ (wstitel%,"99")
 wstitel$ = "Schriftgrad " + wst$
 wsk$ = STR$ (wskund%,"99")
 wskund$ = "Schriftgrad " + wsk$
 wspro$ = "Schriftgrad " + STR$ (wspro%,"99")
 wsr$ = STR$ (wsrest%,"99")
 wsrest$ = "Schriftgrad " + wsr$
 ? "aktDokument$ = FensterName$()"
 ? "Aktivieren aktDokument$"
 ? "DokumentMaximieren - 1"
 ? "BeginnDokument"
 ? "EndeDokument 1"
 ? FN ansi("BearbeitenLîschen")
 FOR i% = 0 TO wleervoradr%
 ? FN ansi("EinfÅgen CHR$ (13)")
 NEXT i%
 ? FN ansi("Absatzsteuerung = 0")
 ? FN ansi(wsadr$)
 Adresse$ = Adresstext.master
 ? FN ansi("EinfÅgen " + g$);
 besch$ = ""
 b% = 0
 FOR a% = 1 TO LEN (Adresse$)
   t$ = MID$ (Adresse$,a%,1)
   IF ASC (t$) = 13 THEN 
     besch$ = besch$ + g$ + " + chr$(13) + " + g$
   ELSE 
     IF ASC (t$) = 34 THEN 
       besch$ = besch$ + g$ + " + chr$(34) + " + g$
     ELSE 
       IF ASC (t$) <> 10 THEN besch$ = besch$ + t$
     END IF 
   END IF 
   b% = b% + 1
   IF b% = 255 THEN 
     ? FN ansi(besch$ + g$)
     ? FN ansi("EinfÅgen " + g$);
     besch$ = ""
     b% = 0
   END IF 
 NEXT a%
 REM andi burzer ? FN ansi(besch$ + g$ + " +chr$(13) + chr$(13) + chr$(13)")
 ? FN ansi(besch$ + g$ + " +chr$(13)")
 FOR i% = 0 TO wleernachAdr%
   ? FN ansi("EinfÅgen chr$(13)")
 NEXT i%
 ? "AbsatzRechts"
 REM andi burzer ? FN ansi("EinfÅgen " + g$ + DATE$ (datum.MASTER,"dd. mmmm yyyy") + g$ + " + CHR$ (13) + CHR$ (13)")
 ? FN ansi("EinfÅgen " + g$ + DATE$ (datum.MASTER,"dd. mmmm yyyy") + g$ + " + CHR$ (13)")
 REM andi burzer ? "FormatZeichen .Punkt = " + g$ + "20" + g$ + ",.Fett = 1,.Kursiv = 1"
 ? "FormatZeichen .Punkt = " + g$ + wst$ + g$ + ",.Fett = 1,.Kursiv = 1"
 ? FN ansi("EinfÅgen " + g$ + Titel.MASTER + g$ + " + CHR$ (13)")
 ? "FormatZeichen .Punkt = " + g$ + wsk$ + g$ + ",.Fett = 0,.Kursiv = 0"
 ? FN ansi("EinfÅgen " + g$ + "Belegnummer: " + Nummer.MASTER + g$ + " + CHR$ (13)")
 ? FN ansi(wskund$)
 ? FN ansi("EinfÅgen " + g$ + "Kundennummer: " + Kundennummer.MASTER + g$ + " + CHR$ (13)")
 ? FN ansi("AbsatzLinks :EinfÅgenAbsatz")
 FOR i% = 0 TO wleernachKu%
   ? FN ansi("EinfÅgen chr$(13)")
 NEXT i%
 ? FN ansi(wspro$)
 ? FN ansi("EinfÅgen " + g$);
 besch$ = ""
 b% = 0
 FOR a% = 1 TO LEN (Prolog.MASTER)
   t$ = MID$ (Prolog.MASTER,a%,1)
   IF ASC (t$) = 13 THEN 
     besch$ = besch$ + g$ + " + chr$(13) + " + g$
   ELSE 
     IF ASC (t$) = 34 THEN 
       besch$ = besch$ + g$ + " + chr$(34) + " + g$
     ELSE 
       IF ASC (t$) <> 10 THEN besch$ = besch$ + t$
     END IF 
   END IF 
   b% = b% + 1
   IF b% = 255 THEN 
     ? FN ansi(besch$ + g$)
     ? FN ansi("EinfÅgen " + g$);
     besch$ = ""
     b% = 0
   END IF 
 NEXT a%
 REM andi burzer ? FN ansi(besch$ + g$ + " + chr$(13) + chr$(13)")
 ? FN ansi(besch$ + g$ + " + chr$(13)")
 FOR i% = 0 TO wleernachpro%
   ? FN ansi("EinfÅgen chr$(13)")
 NEXT i%
 ? FN ansi("TabelleTabelleEinfÅgen .AnzSpalten = " + g$ + "6" + g$ + ",.AnzTabZeilen = " + g$ + "1" + g$)
 ? FN ansi("TabelleSpaltenBreite .SpaltenBreite = " + g$ + "0,88 cm" + g$ + ",.NÑchsteSpalte")
 ? FN ansi("TabelleSpaltenBreite .SpaltenBreite = " + g$ + "1,60 cm" + g$ + ",.NÑchsteSpalte")
 ? FN ansi("TabelleSpaltenBreite .SpaltenBreite = " + g$ + "1,8 cm" + g$ + ",.NÑchsteSpalte")
 REM ? FN ansi("TabelleSpaltenBreite .SpaltenBreite = " + g$ + "7,5 cm" + g$ + ",.NÑchsteSpalte")
 ? FN ansi("TabelleSpaltenBreite .SpaltenBreite = " + g$ + "7,5 cm" + g$ + ",.NÑchsteSpalte")
 ? FN ansi("TabelleSpaltenBreite .SpaltenBreite = " + g$ + "2,59 cm" + g$ + ",.NÑchsteSpalte")
 ? "TabelleSpaltenBreite .SpaltenBreite = " + g$ + "2,33 cm" + g$
 ? "ZeileUnten 1"
 ? FN ansi("TabelleZeileEinfÅgen .AnzTabZeilen = " + g$ + "1" + g$)
 ? "ZeileOben 1"
 ? "TabelleZeileMarkieren"
 ? "FormatRahmenSchattierung .AnwendenAuf = 2,.schattiert = 0,.ObenRahmenlinie = 1,.LinksRahmenlinie = 1,.UntenRahmenlinie = 1,.RechtsRahmenlinie = 1"
 ? FN ansi("Tabelleöberschriften")
 ? FN ansi(wstabko$)
 ? FN ansi("EinfÅgen " + g$ + "Pos." + g$ + ":NÑchsteZelle")
 ? FN ansi("EinfÅgen " + g$ + "Anzahl" + g$ + ":NÑchsteZelle")
 IF mwstcount% <> 1 THEN 
   ? FN ansi("EinfÅgen " + g$ + "ME/MwSt" + g$ + ":NÑchsteZelle")
 ELSE 
   ? FN ansi("EinfÅgen " + g$ + "ME" + g$ + ":NÑchsteZelle")
 END IF 
 ? FN ansi("EinfÅgen " + g$ + "Artikel / Leistung" + g$ + ":NÑchsteZelle")
 ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + "Einzelpreis" + g$ + ":NÑchsteZelle")
 ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + "Gesamtpreis" + g$ + ":NÑchsteZelle")
 ? "TabelleZeileMarkieren"
 ? FN ansi("TabelleZeilenHîhe .ZeilenTrennenZulassen = 0")
 ? FN ansi(wsrest$)
 ? "Fett"
 FILE "SCHEIN"
 REM INDEX CodeMS.SCHEIN
 INDEX QuickCodePos.SCHEIN
 SELECT FIRST 
 quickmspos% = codems% * 1000 + 1
 REM SELECT KEY codems% FILE "SCHEIN" INDEX CodeMS.SCHEIN
 SELECT KEY quickmspos% FILE "SCHEIN" INDEX QuickCodepos.SCHEIN
 WHILE CodeMS.SCHEIN = codems% AND NOT EOF ("SCHEIN")
   IF textvorPosition.schein <> "" THEN 
     ? "ZeileUnten 1"
     ? FN ansi("TabelleZeileEinfÅgen .AnzTabZeilen = " + g$ + "1" + g$)
     ? "ZeileOben 1"
     ? FN ansi("ZeichenRechts 6, 1")
     ? FN ansi("TabelleZellenVerbinden")
     ? FN ansi("AbsatzLinks")
     ? FN ansi("BeginnZeile")
     ? FN ansi("EinfÅgen " + g$);
     besch$ = ""
     b% = 0
     FOR a% = 1 TO LEN (TextvorPosition.SCHEIN)
       t$ = MID$ (TextvorPosition.schein,a%,1)
       IF ASC (t$) = 13 THEN 
         besch$ = besch$ + g$ + " + chr$(11) + " + g$
       ELSE 
         IF ASC (t$) = 34 THEN 
           besch$ = besch$ + g$ + " + chr$(34) + " + g$
         ELSE 
           IF ASC (t$) <> 10 THEN besch$ = besch$ + t$
         END IF 
       END IF 
       b% = b% + 1
       IF b% = 255 THEN 
         ? FN ansi(besch$ + g$)
         ? FN ansi("EinfÅgen " + g$);
         besch$ = ""
         b% = 0
       END IF 
     NEXT a%
     ? FN ansi(besch$ + g$ + " + chr$(13)")
     ? FN ansi("NÑchsteZelle")
   END IF 
 
   ? FN ansi("EinfÅgen " + g$ + LTRIM$ ( STR$ (PosNr.SCHEIN,"9999")) + g$ + ":NÑchsteZelle")
   ? FN ansi("Fett 0")
   ? FN ansi(wsrest$)
 
   ? FN ansi("EinfÅgen " + g$ + LTRIM$ ( STR$ (Anzahl.SCHEIN,"999999.99")) + g$)
   ? FN ansi("Fett 1")
   ? FN ansi("NÑchsteZelle")
   ? FN ansi(wsrest$)
   ? FN ansi("EinfÅgen " + g$ + ME_.SCHEIN + g$)
   ? FN ansi("Fett 0")
   ? FN ansi(wsrest$)
   IF mwstcount% <> 1 THEN 
     ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + LTRIM$ ( STR$ (MWST.SCHEIN,"99.00")) + "%" + g$)
   ELSE 
     REM ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + "  " + g$)
   END IF 
   REM Alternativpositionen
   IF art.schein = 1 THEN 
     ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + "alternativ" + g$)
   ELSE 
     REM ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + "  " + g$)
   END IF 
   ? FN ansi("Fett 1")
   ? FN ansi("NÑchsteZelle")
   ? FN ansi(wsrest$)
   ? FN ansi("EinfÅgen " + g$);
   besch$ = ""
   b% = 0
   IF artikelnummer.schein <> "" THEN 
     REM bezeichnung$ = Artikelnummer.schein + CHR$ (13) + bezeichnung.schein
     bezeichnung$ = Artikelnummer.schein + " " + bezeichnung.schein
   ELSE 
     bezeichnung$ = bezeichnung.schein
   END IF 
   FOR a% = 1 TO LEN (Bezeichnung$)
     t$ = MID$ (Bezeichnung$,a%,1)
     IF ASC (t$) = 13 THEN 
       besch$ = besch$ + g$ + " + chr$(13) + " + g$
     ELSE 
       IF ASC (t$) = 34 THEN 
         besch$ = besch$ + g$ + " + chr$(34) + " + g$
       ELSE 
         IF ASC (t$) <> 10 THEN besch$ = besch$ + t$
       END IF 
     END IF 
     b% = b% + 1
     IF b% = 1000 THEN 
       ? FN ansi(besch$ + g$)
       besch$ = g$
       b% = 0
     END IF 
   NEXT a%
   REM ? FN ansi(besch$);
   IF beschreibung.schein <> "" THEN 
     ? FN ansi(besch$ + g$);
     REM ? FN ansi(g$ + " + CHR$ (11)")
     ? FN ansi(" + CHR$ (11)")
     ? FN ansi(wsrest$)
     ? FN ansi("Fett :EinfÅgen " + g$);
     besch$ = ""
     b% = 0
     FOR a% = 1 TO LEN (Beschreibung.SCHEIN)
       t$ = MID$ (Beschreibung.schein,a%,1)
       IF ASC (t$) = 13 THEN 
         besch$ = besch$ + g$ + " + chr$(11) + " + g$
       ELSE 
         IF ASC (t$) = 34 THEN 
           besch$ = besch$ + g$ + " + chr$(34) + " + g$
         ELSE 
           IF ASC (t$) <> 10 THEN besch$ = besch$ + t$
         END IF 
       END IF 
       b% = b% + 1
       IF b% = 255 THEN 
         ? FN ansi(besch$ + g$)
         ? FN ansi("EinfÅgen " + g$);
         besch$ = ""
         b% = 0
       END IF 
     NEXT a%
     REM burz ? FN ansi(besch$ + g$ + " + chr$(13)")
     ? FN ansi(besch$ + g$)
   ELSE 
     ? FN ansi(besch$ + g$)
   END IF 
   ? FN ansi("Fett :NÑchsteZelle")
   ? FN ansi(wsrest$)
   IF KalkArt.Master = 0 THEN 
     IF Rabatt.schein > 0 THEN 
       IF art% <> 3 THEN 
       REM kein Lieferschein
         IF bezugsmenge.schein = 1 THEN 
           vknetto$ = STR$ (VKNetto.schein,"9999999999.00")
         ELSE 
           vknetto$ = ExtDM$(VKNetto.schein / Bezugsmenge.schein)
         END IF 
         ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + VKnetto$ + g$)
         ? FN ansi("Fett")
         ? FN ansi(wsrest$)
         rab$ = "Rabatt: " + TRIM$ ( STR$ (RabattProz.schein,"999.999")) + "%"
         ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + rab$ + g$ + ":NÑchsteZelle")
         ? FN ansi("AbsatzRechts :EinfÅgen" + g$ + STR$ (GesamtNetto.SCHEIN,",99999999.00") + g$)
         ? FN ansi("Fett")
         ? FN ansi(wsrest$)
         ? FN ansi("EinfÅgen CHR$(13) + " + g$ + LTRIM$ ( STR$ (Anzahl.SCHEIN * Rabatt.SCHEIN,",9999999999.00")) + g$)
       ELSE 
       REM Lieferschein
         ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + " " + g$)
         ? FN ansi("Fett")
         ? FN ansi(wsrest$)
         rab$ = "Rabatt: " + TRIM$ ( STR$ (RabattProz.schein,"999.999")) + " %"
         REM ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + "Rabatt:" + g$ + ":NÑchsteZelle")
         ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + rab$ + g$ + ":NÑchsteZelle")
         ? FN ansi("AbsatzRechts :EinfÅgen" + g$ + " " + g$)
         ? FN ansi("Fett")
         ? FN ansi(wsrest$)
         ? FN ansi("EinfÅgen CHR$(13) + " + g$ + " " + g$)
       END IF 
     ELSE 
       IF Bezugsmenge.schein = 1 THEN 
         vknetto$ = STR$ (VKNetto.schein,"9999999999.00")
       ELSE 
         vknetto$ = ExtDM$(VKNetto.schein / Bezugsmenge.schein)
       END IF 
       IF art% <> 3 THEN 
         ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + VKnetto$ + g$ + ":NÑchsteZelle")
         ? FN ansi(wsrest$)
         ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + STR$ (GesamtNetto.SCHEIN,",99999999.00") + g$)
       ELSE 
         ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + " " + g$ + ":NÑchsteZelle")
         ? FN ansi(wsrest$)
         ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + " " + g$)
       END IF 
     END IF 
   ELSE 
     IF Bezugsmenge.schein = 1 THEN 
       vkbrutto$ = STR$ (VKBrutto.schein,"9999999999.00")
     ELSE 
       vkbrutto$ = ExtDM$(VKBrutto.schein / Bezugsmenge.schein)
     END IF 
     IF rabatt.schein > 0 THEN 
       IF art% <> 3 THEN 
         ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + VKbrutto$ + g$)
         ? FN ansi("Fett")
         ? FN ansi(wsrest$)
         REM ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + "Rabatt:" + g$ + ":NÑchsteZelle")
         rab$ = "Rabatt: " + TRIM$ ( STR$ (RabattProz.schein,"999.999")) + "%"
         ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + rab$ + g$ + ":NÑchsteZelle")
         ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + STR$ (GesamtBrutto.SCHEIN,",99999999.00") + g$)
         ? FN ansi("Fett")
         ? FN ansi(wsrest$)
         ? FN ansi("EinfÅgen CHR$(13) + " + g$ + LTRIM$ ( STR$ (Anzahl.SCHEIN * Rabatt.SCHEIN,",9999999999.00")) + g$)
       ELSE 
         ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + " " + g$)
         ? FN ansi("Fett")
         ? FN ansi(wsrest$)
         rab$ = "Rabatt: " + TRIM$ ( STR$ (RabattProz.schein,"999.999")) + "%"
         ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + rab$ + g$ + ":NÑchsteZelle")
         REM ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + "Rabatt:" + g$ + ":NÑchsteZelle")
         ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + " " + g$)
         ? FN ansi("Fett")
         ? FN ansi(wsrest$)
         ? FN ansi("EinfÅgen CHR$(13) + " + g$ + " " + g$)
       END IF 
     ELSE 
       IF art% <> 3 THEN 
         ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + VKbrutto$ + g$ + ":NÑchsteZelle")
         ? FN ansi(wsrest$)
         ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + STR$ (GesamtBrutto.SCHEIN,",99999999.00") + g$)
       ELSE 
         ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + " " + g$ + ":NÑchsteZelle")
         ? FN ansi(wsrest$)
         ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + " " + g$)
       END IF 
     END IF 
   END IF 
   REM SELECT NEXT FILE "SCHEIN" INDEX CodeMS.SCHEIN
   SELECT NEXT FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   IF CodeMS.SCHEIN = codems% AND NOT EOF ("SCHEIN") THEN 
     ? FN ansi("NÑchsteZelle")
     ? FN ansi(wsrest$)
   END IF 
 WEND 
 ? "TabelleZeileMarkieren"
 ? "RahmenlinieUnten 1"
 ? "ZeileUnten 1"
 ? "FormatTabulator .Position = " + g$ + "15,5 cm" + g$ + ",.Ausrichten = 3,.Bestimmen"
 
 IF art% <> 3 THEN 
 REM wenn kein Lieferschein 
 IF KalkArt.MASTER = 0 THEN 
 REM Nettofakturierung
   IF rabatt.master <> 0 THEN 
     IF rabattart.master = 0 THEN 
     REM Rabatt auf Netto
       REM Summe Netto:
       ? FN ansi("EinfÅgen " + g$ + Zeile1$ + g$)
       ? FN ansi("EinfÅgen chr$(9) + " + g$ + WertZeile1$ + g$ + " + chr$(13)")
       ? "ZeileOben 1"
       ? "BeginnZeile"
       ? "EndeZeile 1"
       REM burz? "FormatZeichen .Punkt = " + g$ + "10" + g$ + ",.Fett = 1,.Kursiv = 1 
       ? "FormatZeichen .Punkt = " + g$ + wssu$ + g$ + ",.Fett = 1,.Kursiv = 1 
       ? "ZeileUnten 1"
       ? FN ansi(wssum$)
       REM abzÅglich Rabatt von x %
       ? FN ansi("EinfÅgen " + g$ + Zeile2$ + g$)
       ? FN ansi("EinfÅgen chr$(9) + " + g$ + WertZeile2$ + g$ + " + chr$(13)")
       REM Summe Netto abzÅglich Rabatt
       ? FN ansi("EinfÅgen " + g$ + Zeile3$ + g$)
       ? FN ansi("EinfÅgen chr$(9) + " + g$ + WertZeile3$ + g$ + " + chr$(13)")
       ? "ZeileOben 1"
       ? "BeginnZeile"
       ? "EndeZeile 1"
       REM burz ? "FormatZeichen .Punkt = " + g$ + "10" + g$ + ",.Fett = 1,.Kursiv = 1 
       ? "FormatZeichen .Punkt = " + g$ + wssu$ + g$ + ",.Fett = 1,.Kursiv = 1 
       ? "ZeileUnten 1"
       REM Mehrwertsteuer
       ? FN ansi(wssum$)
       FOR a% = 0 TO MwStCount% - 1
         ? FN ansi("EinfÅgen " + g$ + MwStText2$(a%) + g$)
         ? FN ansi("EinfÅgen chr$(9) + " + g$ + MwStBetrag2$(a%) + g$)
         ? FN ansi("EinfÅgenAbsatz")
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         REM ? "RahmenlinieUnten 1"
         REM ? "Unterstrichen"
         ? "ZeileUnten 1"
       NEXT a%
       REM Gesamtsumme 
       ? FN ansi(wssum$)
       ? FN ansi("EinfÅgen " + g$ + Zeile5$ + g$)
       ? FN ansi("EinfÅgen CHR$ (9) + " + g$ + WertZeile5$ + g$)
       ? FN ansi("EinfÅgenAbsatz")
       ? "ZeileOben 1"
       ? "BeginnZeile"
       ? "EndeZeile 1"
       ? "FormatZeichen .Punkt = " + g$ + wssu$ + g$ + ",.Fett = 1,.Kursiv = 1
       ? "Unterstrichen"
       REM ? "RahmenlinieUnten 1"
       ? "ZeileUnten 1"
     ELSE 
     REM Rabatt auf Brutto
       REM Summe Netto:
       ? FN ansi(wssum$)
       ? FN ansi("EinfÅgen " + g$ + Zeile1$ + g$)
       ? FN ansi("EinfÅgen chr$(9) + " + g$ + WertZeile1$ + g$ + " + chr$(13)")
       ? "ZeileOben 1"
       ? "BeginnZeile"
       ? "EndeZeile 1"
       REM burz ? "FormatZeichen .Punkt = " + g$ + "10" + g$ + ",.Fett = 1,.Kursiv = 1 
       ? "FormatZeichen .Punkt = " + g$ + wssu$ + g$ + ",.Fett = 1,.Kursiv = 1 
       ? "ZeileUnten 1"
       REM Mehrwertsteuer
       ? FN ansi(wssum$)
       FOR a% = 0 TO MwStCount% - 1
         ? FN ansi("EinfÅgen " + g$ + MwStText2$(a%) + g$)
         ? FN ansi("EinfÅgen chr$(9) + " + g$ + MwStBetrag2$(a%) + g$)
         ? FN ansi("EinfÅgenAbsatz")
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         REM ? "Unterstrichen"
         REM ? "RahmenlinieUnten 1"
         ? "ZeileUnten 1"
       NEXT a%
       REM Summe Brutto
       ? FN ansi("EinfÅgen " + g$ + Zeile3$ + g$)
       ? FN ansi("EinfÅgen chr$(9) + " + g$ + WertZeile3$ + g$ + " + chr$(13)")
       ? FN ansi("EinfÅgenAbsatz")
       ? "ZeileOben 1"
       ? "BeginnZeile"
       ? "EndeZeile 1"
       REM Burz ? "FormatZeichen .Punkt = " + g$ + wssu$ + g$ + ",.Fett = 1,.Kursiv = 1 
       ? "FormatZeichen .Punkt = " + g$ + wssu$ + g$ + ",.Fett = 1,.Kursiv = 1 
       REM ? "RahmenlinieUnten 1"
       ? "Unterstrichen"
       ? "ZeileUnten 1"
       REM Gesamtsumme 
       ? FN ansi("EinfÅgen " + g$ + Zeile5$ + g$)
       ? FN ansi("EinfÅgen CHR$ (9) + " + g$ + WertZeile5$ + g$)
       ? FN ansi("EinfÅgenAbsatz")
       ? "ZeileOben 1"
       ? "BeginnZeile"
       ? "EndeZeile 1"
       ? "FormatZeichen .Punkt = " + g$ + wssu$ + g$ + ",.Fett = 1,.Kursiv = 1
       REM ? "RahmenlinieUnten 1"
       ? "Unterstrichen"
       ? "ZeileUnten 1"
       REM Rabatt
       ? FN ansi(wssum$)
       ? FN ansi("EinfÅgen " + g$ + Zeile4$ + g$)
       ? FN ansi("EinfÅgen chr$(9) + " + g$ + WertZeile4$ + g$ + " + chr$(13)")
       ? "ZeileUnten 1"
     END IF 
   ELSE 
   REM kein Rabatt
     REM Summe Netto:
     ? "ZeileUnten 1"
     ? FN ansi("EinfÅgen " + g$ + Zeile3$ + g$)
     ? FN ansi("EinfÅgen chr$(9) + " + g$ + WertZeile3$ + g$ + " + chr$(13)")
     ? "ZeileOben 1"
     ? "BeginnZeile"
     ? "EndeZeile 1"
     REM burz ? "FormatZeichen .Punkt = " + g$ + wssu$ + g$ + ",.Fett = 1,.Kursiv = 1 
     ? "FormatZeichen .Punkt = " + g$ + wssu$ + g$ + ",.Fett = 1,.Kursiv = 1 
     ? "ZeileUnten 1"
     REM Mehrwertsteuer
     ? FN ansi(wssum$)
     FOR a% = 0 TO MwStCount% - 1
       ? FN ansi("EinfÅgen " + g$ + MwStText2$(a%) + g$)
       ? FN ansi("EinfÅgen chr$(9) + " + g$ + MwStBetrag2$(a%) + g$)
       ? FN ansi("EinfÅgenAbsatz")
       ? "ZeileOben 1"
       ? "BeginnZeile"
       ? "EndeZeile 1"
       REM ? "RahmenlinieUnten 1"
       ? "ZeileUnten 1"
     NEXT a%
     REM Summe Brutto
     ? FN ansi("EinfÅgen " + g$ + Zeile5$ + g$)
     ? FN ansi("EinfÅgen chr$(9) + " + g$ + WertZeile5$ + g$ + " + chr$(13)")
     ? "ZeileOben 1"
     ? "BeginnZeile"
     ? "EndeZeile 1"
     ? "FormatZeichen .Punkt = " + g$ + wssu$ + g$ + ",.Fett = 1,.Kursiv = 1  
     REM ? "RahmenlinieUnten 1"
     ? "Unterstrichen"
     ? "ZeileUnten 1"
     ? "ZeileUnten 1"
   END IF 
 ELSE 
 REM Bruttofakturierung
   REM Summe Brutto
   ? FN ansi("EinfÅgen " + g$ + zeile1$ + g$)
   ? FN ansi("EinfÅgen chr$(9) + " + g$ + WertZeile1$ + g$ + " + chr$(13)")
   ? "ZeileOben 1"
   ? "BeginnZeile"
   ? "EndeZeile 1"
   REM ? "FormatZeichen .Punkt = " + g$ + "10" + g$ + ",.Fett = 1,.Kursiv = 1 
   ? "FormatZeichen .Punkt = " + g$ + wssu$ + g$ + ",.Fett = 1,.Kursiv = 1 
   ? "ZeileUnten 1"
   REM Rabatt
   ? FN ansi(wssum$)
   ? FN ansi("EinfÅgen " + g$ + zeile2$ + g$)
   ? FN ansi("EinfÅgen chr$(9) + " + g$ + WertZeile2$ + g$ + " + chr$(13)")
   ? "ZeileUnten 1"
   REM Gesamtsumme 
   ? FN ansi("EinfÅgen " + g$ + Zeile4$ + g$)
   ? FN ansi("EinfÅgen CHR$ (9) + " + g$ + WertZeile4$ + g$)
   ? FN ansi("EinfÅgenAbsatz")
   ? "ZeileOben 1"
   ? "BeginnZeile"
   ? "EndeZeile 1"
   ? "FormatZeichen .Punkt = " + g$ + wssu$ + g$ + ",.Fett = 1,.Kursiv = 1 
   REM ? "RahmenlinieUnten 1"
   ? "Unterstrichen"
   ? "ZeileUnten 1"
   ? "ZeileUnten 1"
   REM ? FN ansi("EinfÅgenAbsatz")
   ? FN ansi(wssum$)
   FOR a% = 0 TO MwStCount% - 1
     ? FN ansi("EinfÅgen " + g$ + MwStText2$(a%) + g$)
     ? FN ansi("EinfÅgen chr$(9) + " + g$ + MwStBetrag2$(a%) + g$)
     ? FN ansi("EinfÅgenAbsatz")
     ? "ZeileOben 1"
     ? "BeginnZeile"
     ? "EndeZeile 1"
     REM ? "RahmenlinieUnten 1"
     ? "ZeileUnten 1"
   NEXT a%
 END IF 
 ? "ZeileUnten 1"
 ? FN ansi (wsepilog$)
 IF skonto.MASTER > 0 THEN 
   ? FN ansi("EinfÅgenAbsatz")
   ? FN ansi("Fett")
   ? FN ansi(wsepilog$)
   ? FN ansi("EinfÅgen" + g$);
   besch$ = ""
   b% = 0
   FOR a% = 1 TO LEN (RabattText$)
     t$ = MID$ (RabattText$,a%,1)
     IF ASC (t$) = 13 THEN 
       besch$ = besch$ + g$ + " + chr$(13) + " + g$
     ELSE 
       IF ASC (t$) = 34 THEN 
         besch$ = besch$ + g$ + " + chr$(34) + " + g$
       ELSE 
         IF ASC (t$) <> 10 THEN besch$ = besch$ + t$
       END IF 
     END IF 
     b% = b% + 1
     IF b% = 255 THEN 
       ? FN ansi(besch$ + g$)
       ? FN ansi("EinfÅgen " + g$);
       besch$ = ""
       b% = 0
     END IF 
   NEXT a%
   ? FN ansi(besch$ + g$ + " + chr$(13)")
   REM ? FN ansi("Fett")
 END IF 
 END IF 
 REM von if art%<>3
 IF ZahlDatum.master > 0 THEN 
   besch$ = "Zahlungsziel: Bitte zahlen Sie den fÑlligen Betrag bis zum " + DATE$ (ZahlDatum.master,"0d.mm.yy")
   ? FN ansi( CHR$ (13))
   ? FN ansi("EinfÅgenAbsatz")
   ? FN ansi("Fett")
   ? FN ansi("Schriftgrad 9")
   ? FN ansi("EinfÅgen" + g$);
   ? FN ansi(besch$ + g$ + " + chr$(13)")
 END IF 
 IF Epilog.MASTER <> "" THEN 
   ? FN ansi("EinfÅgenAbsatz")
   ? FN ansi(wsepilog$)
   ? FN ansi("EinfÅgen " + g$);
   besch$ = ""
   b% = 0
   FOR a% = 1 TO LEN (Epilog.MASTER)
     t$ = MID$ (Epilog.MASTER,a%,1)
     IF ASC (t$) = 13 THEN 
       besch$ = besch$ + g$ + " + chr$(13) + " + g$
     ELSE 
       IF ASC (t$) = 34 THEN 
         besch$ = besch$ + g$ + " + chr$(34) + " + g$
       ELSE 
         IF ASC (t$) <> 10 THEN besch$ = besch$ + t$
       END IF 
     END IF 
     b% = b% + 1
     IF b% = 255 THEN 
       ? FN ansi(besch$ + g$)
       ? FN ansi("EinfÅgen " + g$);
       besch$ = ""
       b% = 0
     END IF 
   NEXT a%
   ? FN ansi(besch$ + g$ + " + chr$(13)")
 END IF 
 CLOSE OUTPUT 
 APPACTIVATE "Microsoft Word"
 DDEINIT 5,"WINWORD","SYSTEM"
 DDEEXEC 5,"[CALL DoMakro.MAIN " + g$ + "C:\M2.ASC" + g$ + "]"
 DDETERM 5
 END SUB 
 
 
 '      *************
 '      ** Details **
 '      *************
 
SUB Schein()
 CALL DFile(3,"SCHEIN" + _fpw$)
 CALL DFile(3,"GRUPPEN" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"KOMBI" + _fpw$)
 cums% = CodeMS.master
 IF NEW ("MASTER") OR MOD ("MASTER") THEN CALL FStore("MASTER")
 _formend% = 0
 WHILE _formend% = 0
   SCHsub% = 0
   REM IF UCASE$ ( FORM ) <> SFORM$ THEN 
   IF UCASE$ ( FORM ) <> "SCHEIN" THEN 
     CALL MNSCHEIN()
     MENU ON 
     REM OPEN FORM SFORM$
     OPEN FORM "SCHEIN"
     SET STATUS "Positionserfassung"
     SET HEADING title$ + " - Positionserfassung"
     CALL SCHIntro()
   END IF 
   FORM 
   MOUSE ON 
   WAIT MOUSE OR KEY OR MENU 
   SELECT CASE SCHsub%
   CASE 2
     CALL GRUPPEN()
   CASE 3
     CALL ARTIKEL()
   CASE 4
     CALL SCHEinfÅgen()
   CASE 99
     CALL POSBEARB()
   END SELECT 
 WEND 
 FILE "master"
 INDEX codems.master
 SELECT FIRST 
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 CALL MSCHRabattProz()
 CALL MSCHRabatt()
 FILE "master"
 INDEX codems.master
 SELECT FIRST 
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 CALL SkontoProz()
 CALL Skonto()
 SET STATUS ""
 _formend% = 0
 END SUB 
 
SUB ScheinEnde()
 CALL MSRechnen()
 FORM 1
 END SUB 
 
 
 ' SCHEIN Intro
 ' =======================================================================
 
SUB SCHIntro()
 FILE "MASTER"
 INDEX CodeMS.master
 SELECT FORM KEY cums% FILE "MASTER" INDEX CodeMS.master
 END SUB 
 
 
 ' SCHEIN neu anlegen
 ' =======================================================================
 
SUB SCHNeu()
 IF NEW ("SCHEIN") OR MOD ("SCHEIN") THEN CALL QuickStore("SCHEIN")
 SELECT KEY cums% FILE "master" INDEX codems.master
 IF DEFA$ = "MEGA" AND StatusM.master = "b" THEN 
   CALL Fehler("Vorgang wurde bereits gebucht!","Eine weiterte Bearbeitung ist nicht mîglich!")
   END SUB 
 END IF 
 BLANK FILE "SCHEIN"
 npos% = AnzPos.MASTER + 1
 scode% = cums% * 1000 + npos%
 CodeMS.schein = cums%
 PosNr.schein = npos%
 CALL QuickStore("SCHEIN")
 SELECT FORM KEY cums% LOCK FILE "MASTER" INDEX CodeMS.master
 SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.master
 AnzPos.MASTER = npos%
 CALL FStore("MASTER")
 SELECT KEY scode% FILE "SCHEIN" INDEX QuickCodePOS.SCHEIN
 CALL SCHAuswahl()
 END SUB 
 
 
 ' SCHEIN-Position lîschen
 ' =======================================================================
 
SUB SCHLoeschen()
 IF disabled%("SCHLoeschen") THEN END SUB 
 IF NEW ("SCHEIN") OR MOD ("SCHEIN") THEN CALL FStore("SCHEIN")
 IF DEFA$ = "MEGA" AND StatusM.master = "b" THEN 
   CALL Fehler("Vorgang wurde bereits gebucht!","Eine weiterte Bearbeitung ist nicht mîglich!")
   END SUB 
 END IF 
 REQUEST "Wollen Sie die aktuelle Position wirklich lîschen?","",135,req%
 IF req% = 1 THEN 
   MOUSE OFF 
   FILE "SCHEIN"
   scode% = QuickCodePos.SCHEIN
   SELECT KEY scode% LOCK FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   SELECT REMOVE FILE "SCHEIN"
   SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   AnzPos.Master = AnzPos.MASTER - 1
   CALL QuickStore("MASTER")
 
   REM ****** Positionen neu durchnummerieren ******
   
   FILE "SCHEIN"
   INDEX QuickCodePos.SCHEIN
    _pos% = 1
   FOR a% = 1 TO AnzPos.Master + 1
     scode% = cums% * 1000 + a%
     SELECT KEY scode% LOCK FILE "SCHEIN" INDEX QuickCodePOS.SCHEIN
     IF FOUND ("SCHEIN") THEN 
       PosNr.SCHEIN = _pos%
       _pos% = _pos% + 1
       CALL QuickStore("SCHEIN")
     END IF 
   NEXT 
   CALL MSRechnen()
 ELSE 
   MOUSE ON 
   FILE "SCHEIN"
 END IF 
 END SUB 
 
 
 ' SCHEIN-Position einfÅgen
 ' =======================================================================
 
SUB SCHEinfÅgen()
 IF NEW ("SCHEIN") OR MOD ("SCHEIN") THEN CALL FStore("SCHEIN")
 IF DEFA$ = "MEGA" AND StatusM.master = "b" THEN 
   CALL Fehler("Vorgang wurde bereits gebucht!","Eine weiterte Bearbeitung ist nicht mîglich!")
   END SUB 
 END IF 
 CREATE DIALOG "POSEINF",0,0,224,59,title$,"MS Sans Serif",8
 ADD DIALOG "POSEINF",4,1,3,221,35,0,"Vor welcher Position mîchten Sie die neue Position einfÅgen ?"
 ADD DIALOG "POSEINF",6,144,16,19,12,0,0,poseinf%,3
 ADD DIALOG "POSEINF",5,7,17,135,15,0,"Bitte geben Sie die Positionsnummer ein:"
 ADD DIALOG "POSEINF",1,49,41,55,16,1,"&OK",1,1
 ADD DIALOG "POSEINF",1,109,41,55,16,0,"&Abbrechen",0,0
 DIALOG "POSEINF",req%
 REMOVE DIALOG "POSEINF"
 IF req% = 1 THEN 
   SELECT KEY cums% FILE "master" INDEX codems.master
   FILE "schein"
   FOR a% = AnzPos.master TO poseinf% STEP - 1
     scode% = cums% * 1000 + a%
     SELECT KEY scode% LOCK FILE "SCHEIN" INDEX QuickCodePOS.SCHEIN
     IF FOUND ("SCHEIN") THEN 
       PosNr.SCHEIN = PosNr.Schein + 1
       CALL QuickStore("SCHEIN")
     END IF 
     NEXT 
 
   BLANK FILE "SCHEIN"
   npos% = poseinf%
   scode% = cums% * 1000 + npos%
   CodeMS.schein = cums%
   PosNr.schein = npos%
   CALL QuickStore("SCHEIN")
   SELECT FORM KEY cums% LOCK FILE "MASTER" INDEX CodeMS.master
   SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.master
   AnzPos.MASTER = AnzPos.MASTER + 1
   CALL FStore("MASTER")
   SELECT KEY scode% FILE "SCHEIN" INDEX QuickCodePOS.SCHEIN
   CALL SCHAuswahl()
   MOUSE OFF 
   CALL MSRechnen()
 ELSE 
   MOUSE ON 
   FILE "SCHEIN"
 END IF 
 END SUB 
 
 
 
 
  
 ' SCHEIN Artikel auswÑhlen
 ' =======================================================================
 
SUB SCHAuswahl()
 _cuart% = CodeAR.SCHEIN
 REM _cugrp% = CodeGR.SCHEIN
 IF DEFA$ = "MEGA" AND StatusM.master = "b" THEN 
   CALL Fehler("Vorgang wurde bereits gebucht!","Eine weiterte Bearbeitung ist nicht mîglich!")
   END SUB 
 END IF 
 scode% = QuickCodePos.SCHEIN
 SELECT KEY scode% LOCK FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
 CALL ARTSuchen()
 IF artsucheok% = 1 THEN 
   FILE "SCHEIN"
   _cuart% = cuart%
   CALL Server("LISTBOXSHOW","")
   MOUSE ON 
   erg$ = ServerReply$()
   IF erg$ <> "" THEN 
     scode% = QuickCodePOS.SCHEIN
     _cuart% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
     SELECT KEY _cuart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
     IF IsKombi%(_cuart%) THEN 
       REQUEST "Bei dem gewÑhlten Artikel handelt es sich um einen Kombiartikel!","Soll er neu durchkalkuliert werden?",135,reqab%
       IF reqab% = 1 THEN 
         CALL KOMBRechnen(_cuart%)
       END IF 
     END IF 
     SELECT KEY scode% LOCK FILE "SCHEIN" INDEX QuickCodePOS.SCHEIN
     IF mwst.artikel = 0 THEN REQUEST "Achtung der Artikel enthÑlt keine MWST!","Bitte im Artikel Ñndern!",2
     CodeAR.schein = CodeAR.ARTIKEL
     CodeGR.schein = CodeGR.ARTIKEL
     Bezeichnung.schein = Bezeichnung.ARTIKEL
     Bestandskonto.schein = Bestandskonto.artikel
     Verbrauchskonto.schein = Verbrauchskonto.artikel
     Bezugsmenge.schein = Bezugsmenge.artikel
     Maschine.schein = Maschine.artikel
     ZeitproBezugsme.schein = ZeitproBezugsme.artikel
     IF Art.MASTER = 5 THEN 
       VKnetto.schein = LieferEK.ARTIKEL
       VKbrutto.SCHEIN = LieferEK.ARTIKEL + (LieferEK.ARTIKEL / 100 * MwSt.ARTIKEL)
       GesamtNetto.schein = VKnetto.SCHEIN
       GesamtBrutto.schein = VKbrutto.SCHEIN
       EK.schein = EK.ARTIKEL
       Artikelnummer.SCHEIN = Bestellnummer.ARTIKEL
     ELSE 
       IF KalkArt.MASTER = 0 THEN 
         VKnetto.schein = VKnetto.ARTIKEL
         VKbrutto.SCHEIN = VKnetto.ARTIKEL + (VKnetto.ARTIKEL / 100 * MwSt.ARTIKEL)
       ELSE 
         VKbrutto.SCHEIN = VKbrutto.ARTIKEL
         VKnetto.SCHEIN = VKbrutto.ARTIKEL / (100 + Mwst.ARTIKEL) * 100
       END IF 
       GesamtNetto.schein = VKnetto.ARTIKEL
       GesamtBrutto.schein = VKbrutto.ARTIKEL
       EK.schein = EK.ARTIKEL
       Artikelnummer.SCHEIN = Artikelnummer.ARTIKEL
     END IF 
     Beschreibung.schein = Beschreibung.ARTIKEL
     ME_.SCHEIN = ME_.ARTIKEL
     MwSt.SCHEIN = MwSt.Artikel
     Anzahl.SCHEIN = 1
     CALL QuickStore("SCHEIN")
     CALL POSBEARB()
   ELSE 
     CALL Fehler("Es wurde kein entsprechender Artikel gefunden!","")
     REM CALL POSBEARB()
   END IF 
 ELSE 
    MOUSE OFF 
   FILE "SCHEIN"
   REM scode% = QuickCodePos.SCHEIN
   SELECT KEY scode% LOCK FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   SELECT REMOVE FILE "SCHEIN"
   SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   AnzPos.Master = AnzPos.MASTER - 1
   CALL QuickStore("MASTER")
 
   REM ****** Positionen neu durchnummerieren ******
   
   FILE "SCHEIN"
   INDEX QuickCodePos.SCHEIN
     _pos% = 1
   FOR a% = 1 TO AnzPos.Master + 1
     scode% = cums% * 1000 + a%
     SELECT KEY scode% LOCK FILE "SCHEIN" INDEX QuickCodePOS.SCHEIN
     IF FOUND ("SCHEIN") THEN 
       PosNr.SCHEIN = _pos%
       _pos% = _pos% + 1
       CALL QuickStore("SCHEIN")
     END IF 
   NEXT 
   CALL MSRechnen()
   CALL SCHIntro()
 END IF 
 FORM 
 artsucheok% = 0
 END SUB 
   
 ' SCHEIN Anzahlrechnung
 ' =======================================================================
 
SUB SCHAnzahl()
 SELECT KEY CodeAR.SCHEIN FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
 IF BestandsfÅhrung.ARTIKEL = "j" AND Bestand.ARTIKEL < Anzahl.SCHEIN THEN 
   CALL Fehler("Die eingegeben Anzahl Åberschreitet den Bestand.","Maximale Anzahl: " + LTRIM$ ( STR$ (Bestand.ARTIKEL,",9999999999.00")))
 END IF 
 IF KalkArt.MASTER = 0 THEN 
   REM GesamtNetto.SCHEIN = Anzahl.SCHEIN * (VKnetto.SCHEIN - Rabatt.SCHEIN)
   REM GesamtBrutto.SCHEIN = GesamtNetto.SCHEIN + (Gesamtnetto.SCHEIN / 100 * MwSt.SCHEIN)
   vkne% = VKnetto.SCHEIN / Bezugsmenge.schein
   GesamtNetto.SCHEIN = Anzahl.SCHEIN * (vkne% - Rabatt.SCHEIN)
   GesamtBrutto.SCHEIN = GesamtNetto.SCHEIN + (Gesamtnetto.SCHEIN / 100 * MwSt.SCHEIN)
 ELSE 
   vkbe% = VKbrutto.SCHEIN / Bezugsmenge.schein
   GesamtBrutto.SCHEIN = Anzahl.SCHEIN * (vkbe% - Rabatt.SCHEIN)
   GesamtNetto.SCHEIN = GesamtBrutto.SCHEIN / (100 + MwSt.SCHEIN) * 100
 END IF 
 VKBeinzel% = VKBrutto.schein / Bezugsmenge.schein
 VKNeinzel% = VKNetto.schein / Bezugsmenge.schein
 RabattGes% = Rabatt.SCHEIN * Anzahl.schein
 FORM 
 END SUB 
 
SUB SCHVKnetto()
 vkne% = VKnetto.SCHEIN / Bezugsmenge.schein
 Rabatt.SCHEIN = (VKne% / 100) * RabattProz.SCHEIN
 REM GesamtNetto.SCHEIN = Anzahl.SCHEIN * (VKnetto.SCHEIN - Rabatt.SCHEIN)
 GesamtNetto.SCHEIN = Anzahl.SCHEIN * (vkne% - Rabatt.SCHEIN)
 VKbrutto.SCHEIN = VKnetto.SCHEIN + (VKnetto.SCHEIN / 100 * MwSt.SCHEIN)
 GesamtBrutto.SCHEIN = GesamtNetto.SCHEIN + (GesamtNetto.SCHEIN / 100 * MwSt.SCHEIN)
 VKBeinzel% = VKBrutto.schein / Bezugsmenge.schein
 VKNeinzel% = VKNetto.schein / Bezugsmenge.schein
 RabattGes% = Rabatt.SCHEIN * Anzahl.schein
 FORM 
 END SUB 
 
SUB SCHVKbrutto()
 vkbe% = VKbrutto.SCHEIN / Bezugsmenge.schein
 Rabatt.SCHEIN = (VKbe% / 100) * RabattProz.SCHEIN
 REM GesamtBrutto.SCHEIN = Anzahl.SCHEIN * (VKbrutto.SCHEIN - Rabatt.SCHEIN)
 GesamtBrutto.SCHEIN = Anzahl.SCHEIN * (vkbe% - Rabatt.SCHEIN)
 GesamtNetto.SCHEIN = GesamtBrutto / (100 + MwSt.SCHEIN) * 100
 VKnetto.SCHEIN = VKbrutto.SCHEIN / (100 + MwSt) * 100
 VKBeinzel% = VKBrutto.schein / Bezugsmenge.schein
 VKNeinzel% = VKNetto.schein / Bezugsmenge.schein
 RabattGes% = Rabatt.SCHEIN * Anzahl.schein
 FORM 
 END SUB 
 
SUB SCHRabatt()
 IF KalkArt.MASTER = 0 THEN 
   REM GesamtNetto.SCHEIN = Anzahl.SCHEIN * (VKnetto.SCHEIN - Rabatt.SCHEIN)
   vkne% = VKnetto.SCHEIN / Bezugsmenge.schein
   GesamtNetto.SCHEIN = Anzahl.SCHEIN * (VKne% - Rabatt.SCHEIN)
   GesamtBrutto.SCHEIN = GesamtNetto.SCHEIN + (Gesamtnetto.SCHEIN / 100 * MwSt.SCHEIN)
   REM RabattProz.SCHEIN = (100 / VKnetto.schein) * Rabatt.SCHEIN
   RabattProz.SCHEIN = (100 / VKne%) * Rabatt.SCHEIN
 ELSE 
   REM GesamtBrutto.SCHEIN = Anzahl.SCHEIN * (VKbrutto.SCHEIN - Rabatt.SCHEIN)
   vkbe% = VKbrutto.SCHEIN / Bezugsmenge.schein
   GesamtBrutto.SCHEIN = Anzahl.SCHEIN * (VKbe% - Rabatt.SCHEIN)
   GesamtNetto.SCHEIN = GesamtBrutto.SCHEIN / (100 + MwSt.SCHEIN) * 100
   REM RabattProz.SCHEIN = (100 / GesamtBrutto.SCHEIN) * Rabatt.SCHEIN
   RabattProz.SCHEIN = (100 / vkbe%) * Rabatt.SCHEIN
 END IF 
 VKBeinzel% = VKBrutto.schein / Bezugsmenge.schein
 VKNeinzel% = VKNetto.schein / Bezugsmenge.schein
 RabattGes% = Rabatt.SCHEIN * Anzahl.schein
 FORM 
 END SUB 
 
SUB SCHRabattProz()
 IF KalkArt.MASTER = 0 THEN 
   vkne% = VKnetto.SCHEIN / Bezugsmenge.schein
   Rabatt.SCHEIN = (VKne% / 100) * RabattProz.SCHEIN
   GesamtNetto.SCHEIN = Anzahl.SCHEIN * (VKne% - Rabatt.SCHEIN)
   GesamtBrutto.SCHEIN = GesamtNetto.SCHEIN + (Gesamtnetto.SCHEIN / 100 * MwSt.SCHEIN)
 ELSE 
   vkbe% = VKbrutto.SCHEIN / Bezugsmenge.schein
   Rabatt.SCHEIN = (VKbe% / 100) * RabattProz.SCHEIN
   GesamtBrutto.SCHEIN = Anzahl.SCHEIN * (VKbe% - Rabatt.SCHEIN)
   GesamtNetto.SCHEIN = GesamtBrutto.SCHEIN / (100 + MwSt.SCHEIN) * 100
 END IF 
 VKBeinzel% = VKBrutto.schein / Bezugsmenge.schein
 VKNeinzel% = VKNetto.schein / Bezugsmenge.schein
 RabattGes% = Rabatt.SCHEIN * Anzahl.schein
 FORM 
 END SUB 
 
SUB SCHGesNetto()
 vkne% = VKnetto.SCHEIN / Bezugsmenge.schein
 Rabatt.SCHEIN = VKne% - (GesamtNetto.SCHEIN / Anzahl.SCHEIN)
 RabattProz.SCHEIN = (100 / VKne%) * Rabatt.SCHEIN
 GesamtBrutto.SCHEIN = GesamtNetto.SCHEIN + (Gesamtnetto.SCHEIN / 100 * MwSt.SCHEIN)
 VKBeinzel% = VKBrutto.schein / Bezugsmenge.schein
 VKNeinzel% = VKNetto.schein / Bezugsmenge.schein
 RabattGes% = Rabatt.SCHEIN * Anzahl.schein
 FORM 
 END SUB 
 
SUB SCHGesBrutto()
 vkbe% = VKbrutto.SCHEIN / Bezugsmenge.schein
 Rabatt.SCHEIN = VKbe% - (GesamtBrutto.SCHEIN / Anzahl.SCHEIN)
 RabattProz.SCHEIN = (100 / VKbe%) * Rabatt.SCHEIN
 GesamtNetto.SCHEIN = GesamtBrutto.SCHEIN / (100 + MwSt.SCHEIN) * 100
 VKBeinzel% = VKBrutto.schein / Bezugsmenge.schein
 VKNeinzel% = VKNetto.schein / Bezugsmenge.schein
 RabattGes% = Rabatt.SCHEIN * Anzahl.schein
 FORM 
 END SUB 
   
 '      *************************************************************
 '      ** Routinen fÅr Formular "POSITION" - Positionsbearbeitung **
 '      *************************************************************
  
SUB POSBEARB()
 IF DEFA$ = "MEGA" AND StatusM.master = "b" THEN 
   CALL Fehler("Vorgang wurde bereits gebucht!","Eine weiterte Bearbeitung ist nicht mîglich!")
   END SUB 
 END IF 
 cusch% = QuickCodePos.SCHEIN
 _formend% = 0
 WHILE _formend% = 0
   IF KalkArt.MASTER = 0 THEN PFORM$ = "POSITION" ELSE PFORM$ = "POSITIOB"
   IF KalkArt.MASTER = 0 AND DEFA$ = "MEGA" THEN PFORM$ = "POSDEFN"
   IF KalkArt.MASTER <> 0 AND DEFA$ = "MEGA" THEN PFORM$ = "POSDEFBB"
   IF UCASE$ ( FORM ) <> PFORM$ THEN 
     REM CALL MNPOSBEARB()
     MENU ON 
     OPEN FORM PFORM$
     SET STATUS "Positionsbearbeitung"
     SET HEADING title$ + " - Positionsbearbeitung"
     SELECT KEY cusch% LOCK FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   END IF 
   VKBeinzel% = VKBrutto.schein / Bezugsmenge.schein
   VKNeinzel% = VKNetto.schein / Bezugsmenge.schein
   RabattGes% = Rabatt.SCHEIN * Anzahl.schein
   SELECT KEY cusch% LOCK FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   CALL SCHRabattProz()
   CALL QuickStore("schein")
   CALL SCHAnzahl()
   FORM 
   MOUSE ON 
   ENTER TextVorPosition.SCHEIN,0
 WEND 
 SET STATUS ""
 _formend% = 0
 END SUB 
   
 '      ******************************************************
 '      ** Routinen fÅr Formular "gruppen" - Produktgruppen **
 '      ******************************************************
 
SUB GRUPPEN()
 CALL DFile(3,"GRUPPEN" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 _formend% = 0
 WHILE _formend% = 0
   GRUPPENsub% = 0
   IF UCASE$ ( FORM ) LIKE "GRUPPEN" OR UCASE$ ( FORM ) LIKE "GRUPPEN1" THEN 
     REM Leeranweisung
   ELSE 
     CALL MNGRUPPEN()
     MENU ON 
     IF _projekt$ <> "WAWI" THEN 
       OPEN FORM "gruppen"
     ELSE 
       OPEN FORM "gruppen1"
     END IF 
     SET STATUS "Produktgruppen"
     SET HEADING title$ + " - Produktgruppen"
     CALL GRPIntro()
   END IF 
   MOUSE ON 
   WAIT MOUSE OR KEY OR MENU 
   SELECT CASE GRUPPENsub%
   CASE 99
     ENTER Kurzbezeichnung.gruppen,0
   END SELECT 
 WEND 
 _formend% = 0
 cugrp% = 0
 END SUB 
 
 
 ' GRUPPEN Intro 
 ' =======================================================================
 
SUB GRPIntro()
 FILE "gruppen"
 INDEX CodeGR.gruppen
 SELECT FIRST 
 a% = 0
 WHILE NOT EOF ("gruppen")
   ProdGruppen$(a%) = Kurzbezeichnung.gruppen
   a% = a% + 1
   SELECT NEXT 
 WEND 
 INDEX CodeGR.gruppen
 IF cugrp% <> 0 THEN 
   SELECT FORM KEY cugrp%
 ELSE 
   INDEX Kurzbezeichnung.gruppen
   SELECT FORM FIRST 
   IF EOF ("") THEN 
     BLANK 
     CodeGR.gruppen = SER ("gruppen",1)
   END IF 
 END IF 
 FORM 
 SET INDEX Kurzbezeichnung.gruppen
 INDEX Kurzbezeichnung.gruppen
 END SUB 
 
 
 ' Produktgruppe Neu
 ' =======================================================================
 
SUB GRPNeu()
 IF Kurzbezeichnung.gruppen <> "" THEN CALL FStore("gruppen")
 GRUPPENsub% = 99
 BLANK FORM 
 CodeGR.gruppen = SER ("gruppen",1)
 FORM 
 END SUB 
 
 
 
 ' Produktgruppe kopieren
 ' =======================================================================
 
SUB GRPKopieren()
 cugrp% = CodeGR.GRUPPEN
 REM IF Kurzbezeichnung.gruppen <> "" THEN CALL FStore("gruppen")
 CALL DFile(3,"KOMBI" + _fpw$)
 FILE "gruppen"
 INDEX CodeGR.gruppen
 SELECT FIRST 
 REQUEST "Produktgruppe in die kopiert werden soll auswÑhlen:","",25,req%,grpziel%,72,CodeGR.gruppen,Kurzbezeichnung INDEX Kurzbezeichnung.gruppen
 IF req% <> 1 THEN END SUB 
 FILE "artikel"
 INDEX Codegr.artikel
 SELECT FIRST 
 SELECT WHERE Codegr.artikel = cugrp%
 SELECT FIRST 
 WHILE NOT EOF ("artikel")
   FILE "artikel"
   codearVorlage% = CodeAR.artikel
   COPY FROM VKBrutto,EK,VKnetto,Handelsspanne,MwST,ME_,KombiNetto,KombiBrutto,CodeSYS,Bestellnummer,Lieferant,LieferEK
   Beschreibung$ = Beschreibung.artikel:Bezugsmenge% = Bezugsmenge:Maschine$ = maschine:ZeitproBezug% = ZeitproBezugsme
   IF DEFA$ = "MEGA" THEN 
     Vkonto% = Verbrauchskonto.artikel
     BKonto% = Bestandskonto.artikel
   END IF 
   IF ArtiAutoNum$ <> "TRUE" THEN artikelnr$ = artikelnummer.artikel
   bezeichnung$ = bezeichnung.artikel
   REM codearalt% = SER ("artikel")
   BLANK 
   codearneu% = SER ("ARTIKEL",1)
   CodeAR.ARTIKEL = codearneu%
   CodeGR.ARTIKEL = grpziel%
   Beschreibung.artikel = Beschreibung$
   SET STATUS "Kopiere Artikel " + LEFT$ (bezeichnung$,20)
   IF ArtiAutoNum$ = "TRUE" AND DEFA$ <> "MEGA" THEN 
     nnum% = VAL (ReadConfig$("FACTURA","LASTArtikelnummer")) + 1
     CALL WriteConfig("FACTURA","LASTArtikelnummer", LTRIM$ ( STR$ (nnum%,"99999999999999")))
     Artikelnummer.artikel = LTRIM$ ( STR$ (nnum%,"99999999999999"))
   END IF 
   IF ArtiAutoNum$ = "TRUE" AND DEFA$ = "MEGA" THEN 
     artcodeneu% = artcsernum%("artikel")
     Artikelnummer.artikel = LTRIM$ ( STR$ (artcodeneu%,"99999999999999")) + "-" + stationsnr$
   END IF 
   IF ArtiAutoNum$ <> "TRUE" THEN artikelnummer.artikel = LEFT$ (artikelnr$,20)
   bezeichnung.artikel = LEFT$ (bezeichnung$,50)
   IF BestfÅhr$ = "TRUE" THEN BestandsfÅhrung.artikel = "j"
   IF DEFA$ = "MEGA" THEN 
     Verbrauchskonto.artikel = VKonto%
     Bestandskonto.artikel = BKonto%
     BestandsfÅhrung.artikel = "j"
   END IF 
   COPY TO VKBrutto,EK,VKnetto,Handelsspanne,MwST,ME_,KombiNetto,KombiBrutto,CodeSYS,Bestellnummer,Lieferant,LieferEK
   Bezugsmenge = Bezugsmenge%:Maschine = maschine$:ZeitproBezugsme = ZeitproBezug%
   CALL QuickStore("Artikel")
   IF IsKombi%(CodearVorlage%) THEN 
     CALL DFile(3,"KOMBI" + _fpw$)
     CALL DFile(3,"KKOpIE" + _fpw$)
     FILE "KOMBI"
     SELECT FIRST LOCK 
     SELECT KEY CodearVorlage% LOCK FILE "KOMBI" INDEX CodeKO.KOMBI
     WHILE CodeKO.kombi = CodearVorlage% AND NOT EOF ("KOMBI")
       codearkom% = CodeAR.Kombi
       codegrkom% = CodeGR.Kombi
       bez$ = bezeichnung.kombi
       kombinetto% = KombiNetto.kombi
       kombibrutto% = kombibrutto.kombi
       anzahl% = anzahl.kombi
       me$ = me_.kombi
       ek% = ek.kombi
       FILE "kkopie"
       BLANK 
       CodeKO.KKOpie = codearneu%
       CodeAR.Kkopie = codearkom%
       CodeGR.Kkopie = grpziel%
       bezeichnung.Kkopie = bez$
       kombinetto.Kkopie = kombinetto%
       kombibrutto.Kkopie = kombibrutto%
       anzahl.kKopie = anzahl%
       me_.Kkopie = me$
       ek.kkopie = ek%
       CALL QuickStore("KKopie")
       FILE "kombi"
       SELECT NEXT LOCK 
     WEND 
     IMPORT "KKOPIE.sbf" TO FILE "KOMBI" WHERE CodeKO.kkopie = codearneu%
     FILE "KKopie"
     REMOVE FROM FILE "KKOPIE"
   END IF 
 FILE "artikel"
 SELECT NEXT LOCK 
 WEND 
 FILE "artikel"
 SELECT WHERE 
 FILE "gruppen"
 SELECT WHERE 
 SELECT FIRST 
 SELECT FORM KEY grpziel% FILE "gruppen" INDEX CodeGR.gruppen
 SET INDEX Kurzbezeichnung.GRUPPEN
 INDEX Kurzbezeichnung.GRUPPEN
 FORM 
 END SUB 
 
 
 
 
 ' Produktgruppe Suchen
 ' =======================================================================
 
SUB GRPSuchen()
 IF NEW ("GRUPPEN") OR MOD ("GRUPPEN") THEN CALL FStore("GRUPPEN")
 cugrp% = CodeGR.GRUPPEN
 REQUEST "Produktgruppe auswÑhlen:","",25,req%,grp%,72,CodeGR.gruppen,Kurzbezeichnung INDEX Kurzbezeichnung.gruppen
 IF req% = 1 THEN 
   SELECT FORM KEY grp% FILE "gruppen" INDEX CodeGR.gruppen
   SET INDEX Kurzbezeichnung.GRUPPEN
   INDEX Kurzbezeichnung.GRUPPEN
 ELSE 
   SELECT FORM KEY cugrp% FILE "gruppen" INDEX CodeGR.gruppen
   SET INDEX Kurzbezeichnung.GRUPPEN
   INDEX Kurzbezeichnung.GRUPPEN
 END IF 
 FORM 
 END SUB 
 
   
SUB GRPLoeschen()
 IF disabled%("GRPLoeschen") THEN END SUB 
 MOUSE OFF 
 cugrp% = CodeGR.gruppen
 REQUEST "Produktgruppe wirklich lîschen?","Es werden auch die zugehîrigen Artikel gelîscht!",135,req%
 IF req% = 1 THEN 
   SELECT FORM KEY cugrp% LOCK FILE "GRUPPEN" INDEX CodeGR.gruppen
   SELECT KEY cugrp% LOCK FILE "GRUPPEN" INDEX CodeGR.gruppen
   SELECT REMOVE 
   SELECT NEXT 
   FORM 
   FILE "artikel"
   INDEX codegr.artikel
   SELECT FIRST 
   REMOVE FROM FILE "artikel" WHERE Codegr.artikel = cugrp%
   FILE "gruppen"
 END IF 
 MOUSE ON 
 FILE "gruppen"
 CALL GRPIntro()
 FORM 
 END SUB 
 
 
 
SUB GRPrev()
 FILE "GRUPPEN"
 SET INDEX Kurzbezeichnung.gruppen
 INDEX Kurzbezeichnung.gruppen
 CALL PSelectPrev()
 FORM 
 END SUB 
 
SUB GRNext()
 FILE "GRUPPEN"
 SET INDEX Kurzbezeichnung.gruppen
 INDEX Kurzbezeichnung.gruppen
 CALL PSelectNext()
 FORM 
 END SUB 
 
 
SUB GRPArtikel()
 cugrp% = CodeGR.GRUPPEN
 cuart% = CodeAR.ARTIKEL
 IF _projekt$ LIKE "WAWI" THEN maske1$ = "GRUPPEN1"
 CALL ARTIKEL()
 IF _projekt$ LIKE "WAWI" THEN maske1$ = ""
 END SUB 
 
 
 
  
 
 '      *************************************
 '      ** Routinen fÅr Formular "Floskel" **
 '      *************************************
 
SUB FLOSKEL()
 CALL DFile(3,"FLOSKEL" + _fpw$)
 _formend% = 0
 WHILE _formend% = 0
   FLOSKELsub% = 0
   IF UCASE$ ( FORM ) <> "FLOSKEL" THEN 
     CALL MNFLOSKEL()
     MENU ON 
     OPEN FORM "FLOSKEL"
     SET STATUS "Floskelverwaltung"
     SET HEADING title$ + " - Floskelverwaltung"
     CALL FLIntro()
   END IF 
   MOUSE ON 
   WAIT MOUSE OR KEY OR MENU 
   SELECT CASE FLOSKELsub%
   CASE 99
     ENTER Floskel.floskel,0
   END SELECT 
 WEND 
 _formend% = 0
 cufl% = 0
 END SUB 
 
 ' FLOSKEL Intro 
 ' =======================================================================
 
SUB FLIntro()
 FILE "floskel"
 INDEX CodeFL.floskel
 IF cufl% <> 0 THEN 
   SELECT KEY cufl%
 ELSE 
   INDEX Floskel.floskel
   SELECT FIRST 
   IF EOF ("") THEN 
     BLANK 
     CodeFL.floskel = SER ("floskel",1)
   END IF 
 END IF 
 FORM 
 SET INDEX Floskel.floskel
 INDEX Floskel.floskel
 END SUB 
 
 
 ' Floskel Neu
 ' =======================================================================
 
SUB FLNeu()
 IF Floskel.floskel <> "" THEN CALL FStore("floskel")
 FLOSKELsub% = 99
 BLANK 
 spezial.floskel = 0
 TextNr.floskel = 0
 CodeFL.floskel = SER ("floskel",1)
 FORM 
 END SUB 
 
 
 ' Floskel suchen
 ' =======================================================================
 
SUB FLSuchen()
 cfile$ = FILE 
 FILE "FLOSKEL"
 SET QUERY ON 
 cufl% = CodeFL.floskel
 vcufl% = cufl%
 IF ( MOD ("floskel") OR NEW ("floskel")) AND Floskel.floskel <> "" THEN CALL FStore("floskel")
 opt% = 1
 CREATE DIALOG "FLSUCHEN",0,0,133,108,title$,"MS Sans Serif",8
 ADD DIALOG "FLSUCHEN",4,0,0,133,89,0,""
 ADD DIALOG "FLSUCHEN",5,34,11,92,9,0,"WÑhlen Sie die gewÅnschte"
 ADD DIALOG "FLSUCHEN",9,5,12,19,21,2
 ADD DIALOG "FLSUCHEN",5,34,22,66,10,0,"Floskelgrupppe aus:"
 ADD DIALOG "FLSUCHEN",3,34,36,52,12,0,"alle Floskeln",1,opt%
 ADD DIALOG "FLSUCHEN",3,34,48,76,12,0,"allgemeine Floskeln",2,opt%
 ADD DIALOG "FLSUCHEN",3,34,60,44,12,0,"Kopftexte",3,opt%
 ADD DIALOG "FLSUCHEN",3,34,72,40,12,0,"Fu·texte",4,opt%
 ADD DIALOG "FLSUCHEN",1,9,91,55,14,1,"&OK",1,1
 ADD DIALOG "FLSUCHEN",1,68,91,55,14,0,"&Abbrechen",0,0
 DIALOG "FLSUCHEN",req%
 REMOVE DIALOG "FLSUCHEN"
 IF req% = 1 THEN 
   SELECT CASE opt%
   CASE 1
     REQUEST "Bitte wÑhlen Sie aus:","",25,req%,vcufl%,72,Codefl.floskel,Floskel.floskel INDEX Floskel.floskel
   CASE 2
     SELECT KEY 0 FILE "floskel" INDEX Art.floskel
     IF FOUND ("floskel") THEN 
       REQUEST "Bitte wÑhlen Sie aus:","",25,req%,vcufl%,72,Codefl.floskel,Floskel.floskel INDEX Floskel.floskel WHERE Art.FLOSKEL = 0
     ELSE 
       CALL Fehler("keine Eintragungen gefunden","")
     END IF 
   CASE 3
     SELECT KEY 1 FILE "floskel" INDEX Art.floskel
     IF FOUND ("floskel") THEN 
       REQUEST "Bitte wÑhlen Sie aus:","",25,req%,vcufl%,72,Codefl.floskel,Floskel.floskel INDEX Floskel.floskel WHERE Art.FLOSKEL = 1
     ELSE 
       CALL Fehler("keine Eintragungen gefunden","")
     END IF 
   CASE 4
     SELECT KEY 2 FILE "floskel" INDEX Art.floskel
     IF FOUND ("floskel") THEN 
       REQUEST "Bitte wÑhlen Sie aus:","",25,req%,vcufl%,72,Codefl.floskel,Floskel.floskel INDEX Floskel.floskel WHERE Art.FLOSKEL = 2
     ELSE 
       CALL Fehler("keine Eintragungen gefunden","")
     END IF 
   END SELECT 
   IF req% = 1 THEN 
     cufl% = vcufl%
   ELSE 
     cufl% = 0
   END IF 
 ELSE 
   cufl% = 0
 END IF 
 SELECT KEY cufl% FILE "floskel" INDEX CodeFL.floskel
 FORM 
 SET INDEX Floskel.floskel
 INDEX Floskel.floskel
 FILE cfile$
 END SUB 
 
SUB FLLoeschen()
 IF disabled%("FLLoeschen") THEN END SUB 
 cufl% = CodeFL.floskel
 REQUEST "Floskel wirklich lîschen?","",135,req%
 IF req% = 1 THEN 
   SELECT KEY cufl% LOCK FILE "FLOSKEL" INDEX CodeFL.floskel
   SELECT REMOVE 
   SELECT NEXT 
   FORM 
 END IF 
 FORM 
 END SUB 
 
SUB FLPrev()
 FILE "floskel"
 SET INDEX Floskel.floskel
 INDEX Floskel.floskel
 CALL PSelectPrev()
 FORM 
 END SUB 
 
SUB FLNext()
 FILE "floskel"
 SET INDEX Floskel.floskel
 INDEX Floskel.floskel
 CALL PSelectNext()
 FORM 
 END SUB 
 
 
 ' ENTRY/EXIT Prozeduren fÅr MASTER
 ' =======================================================================
 
SUB CHEinkauf()
 geseinkauf% = ek.artikel + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel
 VKnetto.ARTIKEL = geseinkauf% + ((geseinkauf% / 100) * Handelsspanne.ARTIKEL)
 IF VKbrutto.ARTIKEL > 0 THEN 
   VKbrutto.ARTIKEL = VKnetto.ARTIKEL + ((VKnetto.ARTIKEL / 100) * MwST.ARTIKEL)
 END IF 
 IF KombiNetto.ARTIKEL <> 0 THEN 
   KHSpanneP$ = STR$ ((100 / geseinkauf% * KombiNetto.ARTIKEL) - 100,",9999999999.00")
   KHSpanneDM$ = STR$ (KombiNetto.ARTIKEL - geseinkauf%,",9999999999.00")
 END IF 
 CALL letztAnpass()
 FORM 
 END SUB 
  
 
 ' geÑnderte Handelsspanne.MASTER
 ' =======================================================================
 
SUB CHHandelssp()
 IF EK.ARTIKEL > 0 THEN 
   geseinkauf% = ek.artikel + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel
   VKnetto.ARTIKEL = geseinkauf% + ((geseinkauf% / 100) * Handelsspanne.ARTIKEL)
   HSpanneDM$ = STR$ (VKnetto.ARTIKEL - geseinkauf%,",9999999999.00")
   IF VKbrutto.ARTIKEL > 0 THEN 
     VKbrutto.ARTIKEL = VKnetto.ARTIKEL + ((VKnetto.ARTIKEL / 100) * MWST.ARTIKEL)
   END IF 
 END IF 
 CALL letztAnpass()
 FORM 
 END SUB 
 
 ' geÑnderter VKnetto.MASTER
 ' =======================================================================
 
SUB CHVKNetto()
 geseinkauf% = ek.artikel + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel
 HSpanneDM$ = STR$ (VKnetto.ARTIKEL - geseinkauf%,",9999999999.00")
 VKbrutto.ARTIKEL = VKnetto.ARTIKEL + ((VKnetto.ARTIKEL / 100) * MwST.ARTIKEL)
 HSpanneDM$ = STR$ (VKnetto.ARTIKEL - geseinkauf%,",9999999999.00")
 PrDif% = VKnetto.ARTIKEL - geseinkauf%
 Handelsspanne.ARTIKEL = (100 / geseinkauf%) * PrDif%
 CALL letztAnpass()
 FORM 
 END SUB 
 
 ' geÑnderte Mehrwertsteuer.MASTER
 ' =======================================================================
 
SUB CHMwSt()
 VKbrutto.ARTIKEL = VKnetto.ARTIKEL + ((VKnetto.ARTIKEL / 100) * MwST.ARTIKEL)
 CALL letztAnpass()
 FORM 
 END SUB 
 
 ' geÑnderter VKbrutto.MASTER
 ' =======================================================================
 
SUB CHVKBrutto()
 IF frage% <> 1 THEN 
   REQUEST "VK netto neu kalkulieren?","",130,req%
 ELSE 
   req% = 1
 END IF 
 IF req% = 1 THEN 
   geseinkauf% = ek.artikel + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel
   VKnetto.ARTIKEL = (VKBrutto.ARTIKEL / (100 + MwST.ARTIKEL)) * 100
   PrDif% = VKnetto.ARTIKEL - geseinkauf%
   Handelsspanne.ARTIKEL = (100 / geseinkauf%) * PrDif%
   HSpanneDM$ = STR$ (VKnetto.ARTIKEL - geseinkauf%,",9999999999.00")
 END IF 
 CALL letztAnpass()
 FORM 
 END SUB 
 
 ' geÑnderter KombiNetto.MASTER
 ' =======================================================================
 
SUB CHKombiN()
 KombiBrutto.ARTIKEL = KombiNetto.ARTIKEL + ((KombiNetto.ARTIKEL / 100) * MwST.ARTIKEL)
 IF KombiNetto.ARTIKEL <> 0 THEN 
   geseinkauf% = ek.artikel + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel
   KHSpanneP$ = STR$ ((100 / geseinkauf% * KombiNetto.ARTIKEL) - 100,",9999999999.00")
   KHSpanneDM$ = STR$ (KombiNetto.ARTIKEL - geseinkauf%,",9999999999.00")
 ELSE 
   KHSpanneP$ = "- - -"
   KHSpanneDM$ = "- - -"
 END IF 
 CALL letztAnpass()
 FORM 
 END SUB 
  
 ' geÑnderter KombiBrutto.MASTER
 ' =======================================================================
 
SUB CHKombiB()
 IF frage% <> 1 THEN 
   REQUEST "Kombi netto neu kalkulieren?","",130,req%
 ELSE 
   req% = 1
 END IF 
 IF req% = 1 THEN 
   geseinkauf% = ek.artikel + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel
   KombiNetto.ARTIKEL = (KombiBrutto.ARTIKEL / (100 + MwST.ARTIKEL)) * 100
   KHSpanneP$ = STR$ ((100 / geseinkauf% * KombiNetto.ARTIKEL) - 100,",9999999999.00")
   KHSpanneDM$ = STR$ (KombiNetto.ARTIKEL - geseinkauf%,",9999999999.00")
 END IF 
 IF KombiNetto.ARTIKEL = 0 THEN 
   KHSpanneP$ = "- - -"
   KHSpanneDM$ = "- - -"
 END IF 
 CALL letztAnpass()
 FORM 
 END SUB 
 
SUB letztAnpass()
 letzteAnpassung.artikel = TODAY 
 END SUB 
 
SUB AendRabattart()
 cums% = codems.master
 IF NEW ("master") OR MOD ("master") THEN CALL QuickStore("master")
 SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 IF kalkart.master = 1 AND rabattart.master = 0 THEN 
   rabattart.master = kalkart.master
   CALL Fehler("Bei der Bruttofakturierung kann kein Rabatt auf die Nettosumme gegeben werden!","Der Rabatt wird automatisch  auf die Bruttosumme gesetzt!")
 END IF 
 CALL MSCHRabattProz()
 CALL MSCHRabatt()
 FILE "master"
 SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 FORM 
 MOUSE ON 
 END SUB 
 
 
 
 
 ' geÑnderter Prozentsatz Rabatt.MASTER
 ' =======================================================================
 
SUB MSCHRabattProz()
 FILE "master"
 cums% = codems.master
 IF NEW ("master") OR MOD ("master") THEN CALL QuickStore("master")
 SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 CALL MWSTBerechnung()
 REM SELECT FORM KEY cums% FILE "master" INDEX codems.master
 REM SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 
 
 IF rabatt.master <> 0 OR rabattproz.master <> 0 THEN 
   IF RabattArt.MASTER = 0 THEN 
     Rabatt.MASTER = (PreisNetto.MASTER / 100) * RabattProz.MASTER
     GesNetto.MASTER = PreisNetto.MASTER - Rabatt.MASTER
     GesBrutto.MASTER = GesNetto.MASTER + MWSTBetrag1%
   ELSE 
     Rabatt.MASTER = (PreisBrutto.MASTER / 100) * RabattProz.MASTER
     GesBrutto.MASTER = PreisBrutto.MASTER - Rabatt.MASTER
     GesNetto.MASTER = GesBrutto.MASTER - MWSTBetrag1%
   END IF 
 ELSE 
   GesBrutto.MASTER = GesNetto.MASTER + MWSTBetrag1%
 END IF 
 CALL QuickStore("master")
 SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 FORM 
 MOUSE ON 
 END SUB 
 
 
 ' geÑnderter Rabatt.MASTER
 ' =======================================================================
 
SUB MSCHRabatt()
 cums% = codems.master
 IF NEW ("master") OR MOD ("master") THEN CALL QuickStore("master")
 SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 CALL MWSTBerechnung()
 FILE "master"
 IF rabatt.master <> 0 OR rabattproz.master <> 0 THEN 
   IF RabattArt.MASTER = 0 THEN 
     GesNetto.MASTER = PreisNetto.MASTER - Rabatt.MASTER
     GesBrutto.MASTER = GesNetto.MASTER + MWSTBetrag1%
     RabattProz.MASTER = (100 / PreisNetto.MASTER) * Rabatt.MASTER
   ELSE 
     GesBrutto.MASTER = PreisBrutto.MASTER - Rabatt.MASTER
     GesNetto.MASTER = GesBrutto.MASTER - MWSTBetrag1%
     RabattProz.MASTER = (100 / PreisBrutto.MASTER) * Rabatt.MASTER
   END IF 
 ELSE 
   GesBrutto.MASTER = GesNetto.MASTER + MWSTBetrag1%
 END IF 
 CALL QuickStore("MASTER")
 SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 FORM 
 MOUSE ON 
 END SUB 
 
 
 
 ' Mehrwertsteuerberechnung
 ' ======================================================================= 
SUB MWSTBerechnung()
 DIM MwStSchl%(20)
 DIM MwStBetrag%(20)
 FOR a% = 0 TO 20
   MwStSchl%(a%) = 0
   MwStBetrag%(a%) = 0
   MwStText2$(a%) = ""
   MwStBetrag2$(a%) = ""
 NEXT 
 MwStCount% = 0
 crlf$ = CHR$ (13) + CHR$ (10)
 MOUSE OFF 
 SET STATUS "Ausdruck wird vorbereitet..."
 
 REM -- MehrwertsteuersÑtze und BetrÑge ermitteln --
 codems% = cums%
 SELECT KEY codems% FILE "MASTER" INDEX CodeMS.MASTER
 
 FILE "SCHEIN"
 INDEX CodeMS.SCHEIN
 SELECT FIRST 
 SELECT KEY codems%
 _gesnetto% = 0
 WHILE CodeMS.SCHEIN = codems% AND NOT EOF ("SCHEIN")
   IF Art.SCHEIN = 0 THEN 
     mwstfound% = - 1
     FOR a% = 0 TO MwStCount%
       IF MwStSchl%(a%) = MwSt.SCHEIN THEN mwstfound% = a%
     NEXT a%
     IF mwstfound% = - 1 THEN 
       MwStSchl%(MwStCount%) = MwSt.SCHEIN
       mwstfound% = MwStCount%
       MwStCount% = MwStCount% + 1
     END IF 
 
     REM hier Rabatte berÅcksichtigen
     IF KalkArt.MASTER = 0 THEN 
       MwStBetrag%(mwstfound%) = MwStBetrag%(mwstfound%) + ((GesamtNetto.SCHEIN / 100) * MwStSchl%(mwstfound%))
       _gesnetto% = _gesnetto% + GesamtNetto.SCHEIN
     ELSE 
       REM MwStBetrag%(mwstfound%) = MwStBetrag%(mwstfound%) + (GesamtBrutto.SCHEIN - ((GesamtBrutto.SCHEIN / (100 + MwStSchl%(mwstfound%)) * 100)))
       MwStBetrag%(mwstfound%) = MwStBetrag%(mwstfound%) + (GesamtBrutto.SCHEIN - ((GesamtBrutto.SCHEIN / (100 + MwStSchl%(mwstfound%)) * 100)))
     END IF 
   END IF 
   SELECT NEXT FILE "SCHEIN" INDEX CodeMS.SCHEIN
 WEND 
 FILE "MASTER"
 SELECT KEY codems% LOCK FILE "MASTER" INDEX CodeMS.MASTER
 IF KalkArt.MASTER = 0 THEN 
   rform$ = "N" + SFORM$
 ELSE 
   rform$ = "B" + SFORM$
 END IF 
 MWSTBetrag$ = ""
 MWSTText$ = ""
 MWSTBetrag1% = 0
 IF KalkArt.MASTER = 0 THEN 
   FOR a% = 0 TO MwStCount% - 1
     IF MWSTText$ <> "" THEN MWSTText$ = MWSTText$ + crlf$
     IF MWSTBetrag$ <> "" THEN MWSTBetrag$ = MWSTBetrag$ + crlf$
     MWSTText$ = MWSTText$ + "zuzÅglich " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% Mwst."
     MwStText2$(a%) = "zuzÅglich " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% Mwst."
     IF rabattproz.master <> 0 AND rabatt.master <> 0 THEN 
       _gesnetto% = _gesnetto% + MwStBetrag%(a%)
       mwstRab% = MwStBetrag%(a%) - ((MwStBetrag%(a%) / 100) * rabattproz.master)
       MWSTBetrag1% = MWSTBetrag1% + MwStRab%
       MWSTBetrag$ = MWSTBetrag$ + LTRIM$ ( STR$ (MwStRab%,"$ ,9999999999.00"))
       MWSTBetrag2$(a%) = LTRIM$ ( STR$ (MwStRab%,"$ ,9999999999.00"))
     ELSE 
       _gesnetto% = _gesnetto% + MwStBetrag%(a%)
       MWSTBetrag$ = MWSTBetrag$ + LTRIM$ ( STR$ (MwStBetrag%(a%),"$ ,9999999999.00"))
       MwStBetrag2$(a%) = LTRIM$ ( STR$ (MwStBetrag%(a%),"$ ,9999999999.00"))
       MWSTBetrag1% = MWSTBetrag1% + MwStBetrag%(a%)
     END IF 
   NEXT a%
   GesBrutto% = _gesnetto%
 ELSE 
   FOR a% = 0 TO MwStCount% - 1
     IF MWSTText$ <> "" THEN MWSTText$ = MWSTText$ + crlf$
     IF rabattproz.master <> 0 AND rabatt.master <> 0 AND rabattart.master = 1 THEN 
       _gesnetto% = _gesnetto% + MwStBetrag%(a%)
       mwstRab% = MwStBetrag%(a%) - ((MwStBetrag%(a%) / 100) * rabattproz.master)
       MWSTText$ = MWSTText$ + "Betrag enthÑlt " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% Mwst. (Betrag: " + LTRIM$ ( STR$ (MwStrab%,"$ ,9999999999.00")) + ")"
       MwStText2$(a%) = "Betrag enthÑlt " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% Mwst. (Betrag: " + LTRIM$ ( STR$ (MwStrab%,"$ ,9999999999.00")) + ")"
       MWSTBetrag1% = MWSTBetrag1% + (MwStrab%)
     ELSE 
       MWSTText$ = MWSTText$ + "Betrag enthÑlt " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% Mwst. (Betrag: " + LTRIM$ ( STR$ (MwStBetrag%(a%),"$ ,9999999999.00")) + ")"
       MwStText2$(a%) = "Betrag enthÑlt " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% Mwst. (Betrag: " + LTRIM$ ( STR$ (MwStBetrag%(a%),"$ ,9999999999.00")) + ")"
       MWSTBetrag1% = MWSTBetrag1% + (MwStBetrag%(a%))
     END IF 
   NEXT a%
 END IF 
 END SUB 
 
 
 
 
 
 
 
 ' geÑnderter SkontoProzentsatz SkontoProz.MASTER
 ' =======================================================================
 
SUB SkontoProz()
   Skonto.MASTER = (GesBrutto.MASTER / 100) * SkontoProz.MASTER
 FORM 
 END SUB 
 
 
 ' geÑnderter Rabatt.MASTER
 ' =======================================================================
 
SUB Skonto()
   SkontoProz.MASTER = (100 / GesBrutto.MASTER) * Skonto.MASTER
 CALL QuickStore("MASTER")
 FORM 
 END SUB 
 
  
  
 '      *************************
 '      ** allgemeine Routinen **
 '      *************************
    
FUNCTION artcsernum%(datei$)
 datei$ = UCASE$ (datei$)
 CALL DFile(2,"OFFICE\sernum" + _fpw$)
 SELECT KEY datei$ LOCK FILE "sernum" INDEX datei.sernum
 IF NOT FOUND ("sernum") THEN 
   BLANK FILE "sernum"
   CodeSN.sernum = SER ("sernum",1)
   Datei.sernum = datei$
   lastnum.sernum = SER (datei$,1) + 1
   IF _projekt$ LIKE "WAWI" THEN 
     SELECT LAST FILE "artikel" INDEX CodeAR.artikel
     lastartintern.sernum = artikelcode.artikel
   ELSE 
     IF ArtiAutoNum$ = "TRUE" THEN lastartintern.sernum = RECCOUNT ("artikel")
   END IF 
   FILE "sernum"
   ganzzahl% = INT (lastartintern.sernum)
   rest% = lastartintern - ganzzahl%
   IF rest% = 0 THEN 
     artcsernum% = lastartintern.sernum + 1
   ELSE 
     artcsernum% = lastartintern.sernum + 0.01
   END IF 
   lastartintern.sernum = artcsernum%
   STORE FILE "sernum"
 ELSE 
   IF lastartintern.sernum < 1 THEN 
     IF _projekt$ LIKE "WAWI" THEN 
       SELECT LAST FILE "artikel" INDEX CodeAR.artikel
       lastartintern.sernum = artikelcode.artikel
     ELSE 
       IF ArtiAutoNum$ = "TRUE" THEN lastartintern.sernum = RECCOUNT ("artikel")
     END IF 
 
     FILE "sernum"
   END IF 
   ganzzahl% = INT (lastartintern.sernum)
   rest% = lastartintern - ganzzahl%
   IF rest% = 0 THEN 
     artcsernum% = lastartintern.sernum + 1
   ELSE 
     artcsernum% = lastartintern.sernum + 0.01
   END IF 
   lastartintern.sernum = artcsernum%
   STORE FILE "sernum"
 END IF 
 END FUNCTION 
 
 
 
 ' Ausgabe Inventur
 ' =====================================================================
SUB INVDEFA()
 CALL DFile(3,"ARTIKEL" + _fpw$)
 REPORT USING "INVDEFA"
 REPORT ON sumbest% AS "sumges%"
 AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
 END FOOTING 
 
 GROUP Bestandskonto.ARTIKEL,EK.ARTIKEL * Bestand.ARTIKEL AS "sumbest%"
 BEFORE GROUP Bestandskonto.ARTIKEL
     SET REPORT PAGE "H_Bestandsko002"
     OUTPUT REPORT PAGE 
 END GROUP 
 
 AFTER GROUP Bestandskonto.ARTIKEL
     SET REPORT PAGE "F_Bestandsko002"
     OUTPUT REPORT PAGE 
 END GROUP 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 SELECT ;
     WHERE BestandsfÅhrung.ARTIKEL = "j" ASK 
     ORDER REPORT Bestandskonto.ARTIKEL,Bezeichnung.ARTIKEL
     TO ASK 
 END SUB 
  
 
 
 
SUB INVENTUR()
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"GRUPPEN" + _fpw$)
 SET STATUS "Ausgabe Inventurliste..."
 MOUSE OFF 
 REPORT USING "INVENTUR"
 REPORT ON invges% AS "invgesamt%"
 AFTER REPORT 
   SET REPORT PAGE "F_REPORT"
   OUTPUT REPORT PAGE 
 END REPORT 
 HEADING 
   SET REPORT PAGE "H_PAGE"
   OUTPUT REPORT PAGE 
 END HEADING 
 FOOTING 1
   SET REPORT PAGE "F_PAGE"
   OUTPUT REPORT PAGE 
 END FOOTING 
 GROUP Kurzbezeichnung.GRUPPEN,invges% AS "summe%"
 BEFORE GROUP Kurzbezeichnung.GRUPPEN
   SET REPORT PAGE "H_Kurzbezeic002"
   OUTPUT REPORT PAGE 
 END GROUP 
 AFTER GROUP Kurzbezeichnung.GRUPPEN
   SET REPORT PAGE "F_Kurzbezeic002"
   OUTPUT REPORT PAGE 
   EJECT REPORT 
 END GROUP 
 AFTER SELECT 
   SET REPORT PAGE "F_SELECT"
   OUTPUT REPORT PAGE 
 END SELECT 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 ON ERROR GOTO ErrINVENTUR
 SELECT ;
   WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND BestandsfÅhrung.ARTIKEL = "j"
   ORDER REPORT Produktgruppe.GRUPPEN,Bezeichnung.ARTIKEL
   TO ASK 
ErrINVENTUR: 
 ON ERROR GOTO ErrorHandler
 END SUB 
 
 
 ' Ausgabe Bestellvorschlag
 ' =====================================================================
 
SUB BESTELLV()
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 SET STATUS "Ausgabe Bestellvorschlag"
 REPORT USING "BESTELLV"
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
 END FOOTING 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 ON ERROR GOTO ErrBESTELLV
 SELECT ;
     WHERE CodeKU.ADRESSEN = Lieferant.ARTIKEL AND Bestand.ARTIKEL < Dispomenge.ARTIKEL AND BestandsfÅhrung.ARTIKEL = "j"
     TO ASK 
ErrBESTELLV: 
 ON ERROR GOTO ErrorHandler
 END SUB 
 
   
 ' Ausgabe Preisliste netto/brutto
 ' =====================================================================
  
SUB PREISLISTE()
 MOUSE OFF 
 CALL DFile(3,"GRUPPEN" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 endeschleife$ = "n"
 FILE "artikel"
 INDEX codear.artikel
 SELECT LAST 
 IF codear.artikel < 1 THEN 
   CALL Fehler("Es wurden noch keine Artikel eingegeben!","Es kann deshalb keine Preisliste erzeugt werden!")
   endeschleife$ = "j"
 END IF 
 FILE "gruppen"
 DIM Auswahl1$(1)
 INDEX CodeGR.gruppen
 SELECT FIRST 
 a% = 0
 WHILE NOT EOF ("gruppen")
   ProdGruppen$(a%) = Kurzbezeichnung.gruppen
   a% = a% + 1
   SELECT NEXT 
 WEND 
 Auswahl$ = ProdGruppen$(0)
 Auswahl1$(0) = Auswahl$
 INDEX CodeGR.gruppen
 SELECT LAST 
 IF codegr.gruppen < 1 THEN 
   CALL Fehler("Es wurden noch keine Produktgruppen erstellt!","Es kann deshalb keine Preisliste erzeugt werden!")
   endeschleife$ = "j"
 END IF 
 FILE "adressen"
 DIM LAuswahl1$(1)
 a% = 0
 INDEX AALieferant.adressen
 SELECT FIRST 
 SELECT KEY "j" FILE "adressen" INDEX aalieferant.adressen
 WHILE aalieferant.adressen = "j" AND NOT EOF ("adressen")
   Lieferant$(a%) = nachname.adressen + SPACE$ (120) + STR$ (codeku.adressen,"000000")
   a% = a% + 1
   SELECT NEXT 
 WEND 
 LAuswahl$ = Lieferant$(0)
 LAuswahl1$(0) = LAuswahl$
 gruppeopt% = 0
 opt% = 0
 INDEX AALieferant.adressen
 SELECT KEY "j" FILE "adressen" INDEX AALieferant.adressen
 IF NOT FOUND ("adressen") THEN 
   CALL Fehler("Es wurden noch keine Lieferanten eingegeben!","Es kann deshalb keine Preisliste erzeugt werden!")
   endeschleife$ = "j"
 END IF 
 
 WHILE endeschleife$ = "n"
 MOUSE ON 
     CREATE DIALOG "PREISLIS",0,0,338,225,title$,"MS Sans Serif",8
    ADD DIALOG "PREISLIS",4,0,1,149,56,0," Ausgabe als ... "
    ADD DIALOG "PREISLIS",3,6,12,60,10,0,"Bruttopreisliste",0,opt%
    ADD DIALOG "PREISLIS",3,6,22,60,11,0,"Nettopreisliste",1,opt%
    ADD DIALOG "PREISLIS",3,6,33,119,11,0,"Liste mit EK und Handelsspanne",2,opt%
    ADD DIALOG "PREISLIS",3,6,44,119,10,0,"Liste mit allen Artikel-Angaben",3,opt%
    ADD DIALOG "PREISLIS",4,150,1,188,205,0," Selektion ..."
    ADD DIALOG "PREISLIS",3,154,12,166,10,0,"Gesamt Sort:PG/[ArtBez][ArtNr][Bestell][P]",0,gruppeopt%
    ADD DIALOG "PREISLIS",3,155,22,177,11,0,"Gesamt Sort:PG/Lief/[ArtBez][ArtNr][Bestell][P]",1,gruppeopt%
    ADD DIALOG "PREISLIS",3,154,33,175,11,0,"Gesamt Sort:Lief/PG/[ArtBez][ArtNr][Bestell][P]",2,gruppeopt%
    ADD DIALOG "PREISLIS",3,154,44,166,10,0,"einzelne PG Sort:[ArtBez][ArtNr][Bestell][P]",3,gruppeopt%
    ADD DIALOG "PREISLIS",3,154,56,178,9,0,"einzelne PG Sort:Lief/[ArtBez][ArtNr][Bestell][P]",4,gruppeopt%
    ADD DIALOG "PREISLIS",3,155,67,180,9,0,"einzelne PG,einz.Lief Sort:[ArtBez][ArtNr][Bestell][P]",5,gruppeopt%
    ADD DIALOG "PREISLIS",3,154,78,183,10,0,"einzelner Lief Sort:PG/[ArtBez][ArtNr][Bestell][P]",6,gruppeopt%
    ADD DIALOG "PREISLIS",3,154,89,176,10,0,"einzelner Lief Sort:[ArtBez][ArtNr][Bestell][Preis]",7,gruppeopt%
    ADD DIALOG "PREISLIS",5,154,106,60,10,0,"Sortierung nach ..."
    ADD DIALOG "PREISLIS",3,154,117,123,10,0,"[ArtBez] - Artikelbezeichnung",0,sort%
    ADD DIALOG "PREISLIS",3,154,128,124,10,0,"[ArtNr]   - Artikelnummer",1,sort%
    ADD DIALOG "PREISLIS",3,154,139,160,10,0,"[Bestell] - Bestellnummer beim Lieferanten",2,sort%
    ADD DIALOG "PREISLIS",3,154,150,123,10,0,"[P] - Preis",3,sort%
    ADD DIALOG "PREISLIS",5,154,161,28,11,0,"Begriffe"
    ADD DIALOG "PREISLIS",5,154,172,136,10,0,"PG    = Produktgruppe"
    ADD DIALOG "PREISLIS",5,154,184,136,9,0,"Lief   = Lieferant"
    ADD DIALOG "PREISLIS",5,154,195,136,9,0,"Sort  = Sortierreihenfolge"
    ADD DIALOG "PREISLIS",4,0,60,149,72,0," Auswahl Produktgruppe"
    ADD DIALOG "PREISLIS",7,2,72,144,57,2,2,Prodgruppen$,Auswahl1$," "
    ADD DIALOG "PREISLIS",4,0,134,149,74,0," Auswahl des Lieferanten"
    ADD DIALOG "PREISLIS",7,2,147,144,57,2,2,Lieferant$,Lauswahl1$," "
    ADD DIALOG "PREISLIS",1,98,209,55,16,1,"&OK",1,1
    ADD DIALOG "PREISLIS",1,158,209,55,16,0,"&Abbrechen",0,0
 DIALOG "PREISLIS",req%
 REMOVE DIALOG "PREISLIS"
 IF req% = 1 THEN 
   LAuswahl$ = LAuswahl1$(0)
   Auswahl$ = Auswahl1$(0)
   CALL DFile(3,"ARTIKEL" + _fpw$)
   MOUSE OFF 
   SET STATUS "Ausgabe Preisliste..."
   IF gruppeopt% > 2 AND gruppeopt% < 6 THEN 
     SELECT KEY Auswahl$ FILE "gruppen" INDEX Kurzbezeichnung.gruppen
     _cugrp% = CodeGR.gruppen
   END IF 
   IF gruppeopt% > 4 THEN 
     SELECT KEY VAL ( RIGHT$ (LAuswahl$,6)) FILE "adressen" INDEX codeku.adressen
     codeku% = CodeKu.adressen
   END IF 
   
   REM ********************************************************************************
   REM *                          Gesamtliste nach PG                                 *
   REM ********************************************************************************
   IF gruppeopt% = 0 THEN 
     IF opt% = 0 THEN 
       REM ********************         Bruttopreisliste          *********************
       IF sort% <> 2 THEN 
         REPORT USING "PREISLIB"
         IF sort% = 0 THEN 
           Titel$ = "Bruttopreisliste sortiert nach Produktgruppe und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Bruttopreisliste sortiert nach Produktgruppe und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Bruttopreisliste sortiert nach Produktgruppe und Preis"
         END IF 
       ELSE 
         REPORT USING "PRGBB"
         Titel$ = "Bruttopreisliste sortiert nach Produktgruppe und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 1 THEN 
       REM *******************           Nettopreisliste           ********************
       IF sort% <> 2 THEN 
         REPORT USING "PREISLIN"
         IF sort% = 0 THEN 
           Titel$ = "Nettopreisliste sortiert nach PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Nettopreisliste sortiert nach PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Nettopreisliste sortiert nach PG und Preis"
         END IF 
       ELSE 
         REPORT USING "PRGBN"
         Titel$ = "Nettopreisliste sortiert nach PG und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 2 THEN 
       REM *******************           EK - Preisliste           ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRGEK"
         IF sort% = 0 THEN 
           Titel$ = "EK-Preisliste sortiert nach PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "EK-Preisliste sortiert nach PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "EK-Preisliste sortiert nach PG und Preis"
         END IF 
       ELSE 
         REPORT USING "PRGEK"
         Titel$ = "EK-Preisliste sortiert nach PG und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 3 THEN 
       REM *******************           Komplette - Preisliste     ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRGAL"
         IF sort% = 0 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach PG und Preis"
         END IF 
       ELSE 
         REPORT USING "PRGAL"
         Titel$ = "Komplett-Artikelliste sortiert nach PG und Bestellnummer"
       END IF 
     END IF 
     Titel$ = Titel$ + " "
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
     GROUP Kurzbezeichnung.GRUPPEN
     BEFORE GROUP Kurzbezeichnung.GRUPPEN
     SET REPORT PAGE "H_Kurzbezeic002"
     OUTPUT REPORT PAGE 
     END GROUP 
     AFTER GROUP Kurzbezeichnung.GRUPPEN
     SET REPORT PAGE "F_Kurzbezeic002"
     OUTPUT REPORT PAGE 
     EJECT REPORT 
     END GROUP 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     ON ERROR GOTO ErrPREISLISTE
     IF opt% < 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
           WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Kurzbezeichnung.GRUPPEN <> ""
           ORDER REPORT Produktgruppe.gruppen,Bezeichnung.artikel
           TO ASK 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
           WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Kurzbezeichnung.GRUPPEN <> ""
           ORDER REPORT Produktgruppe.gruppen,Artikelnummer.artikel
           TO ASK 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
           WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Kurzbezeichnung.GRUPPEN <> ""
           ORDER REPORT Produktgruppe.gruppen,Bestellnummer.artikel
           TO ASK 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
           WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Kurzbezeichnung.GRUPPEN <> ""
           ORDER REPORT Produktgruppe.gruppen,VKNetto.artikel
           TO ASK 
       END IF 
     END IF 
     IF opt% = 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
           WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
           ORDER REPORT Produktgruppe.gruppen,Bezeichnung.artikel
           TO ASK 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
           WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
           ORDER REPORT Produktgruppe.gruppen,Artikelnummer.artikel
           TO ASK 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
           WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
           ORDER REPORT Produktgruppe.gruppen,Bestellnummer.artikel
           TO ASK 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
           WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
           ORDER REPORT Produktgruppe.gruppen,VKNetto.artikel
           TO ASK 
       END IF 
     END IF 
   END IF 
 
     REM ********************************************************************************
     REM *                          Gesamtliste nach PG und Lieferant                   *
     REM ********************************************************************************
   IF gruppeopt% = 1 THEN 
     IF opt% = 0 THEN 
     REM ********************         Bruttopreisliste          *********************
       IF sort% <> 2 THEN 
         REPORT USING "PRGPLB"
         IF sort% = 0 THEN 
           Titel$ = "Bruttopreisliste sortiert nach PG/Lieferant und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Bruttopreisliste sortiert nach PG/Lieferant und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Bruttopreisliste sortiert nach PG/Lieferant und Preis"
         END IF 
       ELSE 
         REPORT USING "PRGPLBB"
         Titel$ = "Bruttopreisliste sortiert nach PG/Lieferant und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 1 THEN 
       REM *******************           Nettopreisliste           ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRGPLN"
         IF sort% = 0 THEN 
           Titel$ = "Nettopreisliste sortiert nach PG/Lieferant und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Nettopreisliste sortiert nach PG/Lieferant und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Nettopreisliste sortiert nach PG/Lieferant und Preis"
         END IF 
       ELSE 
         REPORT USING "PRGPLBN"
         Titel$ = "Nettopreisliste sortiert nach PG/Lieferant und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 2 THEN 
       REM *******************           EK - Preisliste           ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRGPLEK"
         IF sort% = 0 THEN 
           Titel$ = "EK-Preisliste sortiert nach PG/Lieferant und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "EK-Preisliste sortiert nach PG/Lieferant und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "EK-Preisliste sortiert nach PG/Lieferant und Preis"
         END IF 
       ELSE 
         REPORT USING "PRGPLEK"
         Titel$ = "EK-Preisliste sortiert nach PG/Lieferant und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 3 THEN 
       REM *******************           Komplette - Preisliste     ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRGPLAL"
         IF sort% = 0 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach PG/Lieferant und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach PG/Lieferant und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach PG/Lieferant und Preis"
         END IF 
       ELSE 
         REPORT USING "PRGPLAL"
         Titel$ = "Komplett-Artikelliste sortiert nach PG/Lieferant und Bestellnummer"
       END IF 
     END IF 
     Titel$ = Titel$ + " "
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
     GROUP Kurzbezeichnung.GRUPPEN
     BEFORE GROUP Kurzbezeichnung.GRUPPEN
     SET REPORT PAGE "H_Kurzbezeic002"
     OUTPUT REPORT PAGE 
     END GROUP 
     AFTER GROUP Kurzbezeichnung.GRUPPEN
     SET REPORT PAGE "F_Kurzbezeic002"
     OUTPUT REPORT PAGE 
     EJECT REPORT 
     END GROUP 
     GROUP Nachname.ADRESSEN
     BEFORE GROUP Nachname.ADRESSEN
     SET REPORT PAGE "H_Nachname.A003"
     OUTPUT REPORT PAGE 
     END GROUP 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     ON ERROR GOTO ErrPREISLISTE
     REM IF opt% < 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
            WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
            ORDER REPORT Produktgruppe.GRUPPEN,Nachname.ADRESSEN,Bezeichnung.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
            WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
            ORDER REPORT Produktgruppe.GRUPPEN,Nachname.ADRESSEN,Artikelnummer.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
            WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
            ORDER REPORT Produktgruppe.GRUPPEN,Nachname.ADRESSEN,Bestellnummer.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
            WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
            ORDER REPORT Produktgruppe.GRUPPEN,Nachname.ADRESSEN,VKNetto.ARTIKEL
            TO ASK 
       END IF 
     REM END IF 
   END IF 
   REM ********************************************************************************
   REM *                          Gesamtliste nach Lieferant und PG                   *
   REM ********************************************************************************
   IF gruppeopt% = 2 THEN 
     IF opt% = 0 THEN 
     REM ********************         Bruttopreisliste          *********************
       IF sort% <> 2 THEN 
         REPORT USING "PRGLPB"
         IF sort% = 0 THEN 
           Titel$ = "Bruttopreisliste sortiert nach Lieferant/PG/Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Bruttopreisliste sortiert nach Lieferant/PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Bruttopreisliste sortiert nach Lieferant/PG und Preis"
         END IF 
       ELSE 
         REPORT USING "PRGLPBB"
         Titel$ = "Bruttopreisliste sortiert nach Lieferant/PG und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 1 THEN 
       REM *******************           Nettopreisliste           ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRGLPN"
         IF sort% = 0 THEN 
           Titel$ = "Nettopreisliste sortiert nach Lieferant/PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Nettopreisliste sortiert nach Lieferant/PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Nettopreisliste sortiert nach Lieferant/PG und Preis"
         END IF 
       ELSE 
         REPORT USING "PRGLPBN"
         Titel$ = "Nettopreisliste sortiert nach Lieferant/PG und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 2 THEN 
       REM *******************           EK - Preisliste           ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRGLPEK"
         IF sort% = 0 THEN 
           Titel$ = "EK-Preisliste sortiert nach Lieferant/PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "EK-Preisliste sortiert nach Lieferant/PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "EK-Preisliste sortiert nach Lieferant/PG und Preis"
         END IF 
       ELSE 
         REPORT USING "PRGLPEK"
         Titel$ = "EK-Preisliste sortiert nach Lieferant/PG und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 3 THEN 
       REM *******************           Komplette - Preisliste     ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRGLPAL"
         IF sort% = 0 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach Lieferant/PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach Lieferant/PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach Lieferant/PG und Preis"
         END IF 
       ELSE 
         REPORT USING "PRGLPAL"
         Titel$ = "Komplett-Artikelliste sortiert nach Lieferant/PG und Bestellnummer"
       END IF 
     END IF 
     HEADING 
     Titel$ = Titel$ + " "
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
     GROUP Nachname.ADRESSEN
     BEFORE GROUP Nachname.ADRESSEN
     SET REPORT PAGE "H_Nachname.A002"
     OUTPUT REPORT PAGE 
     END GROUP 
     AFTER GROUP Nachname.ADRESSEN
     SET REPORT PAGE "F_Nachname.A002"
     OUTPUT REPORT PAGE 
     END GROUP 
     GROUP Kurzbezeichnung.GRUPPEN
     BEFORE GROUP Kurzbezeichnung.GRUPPEN
     SET REPORT PAGE "H_Kurzbezeic003"
     OUTPUT REPORT PAGE 
     END GROUP 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     ON ERROR GOTO ErrPREISLISTE
     IF sort% = 0 THEN 
       SELECT ;
          WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
          ORDER REPORT Nachname.ADRESSEN,Produktgruppe.GRUPPEN,Bezeichnung.ARTIKEL
          TO ASK 
     END IF 
     IF sort% = 1 THEN 
       SELECT ;
          WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
          ORDER REPORT Nachname.ADRESSEN,Produktgruppe.GRUPPEN,Artikelnummer.ARTIKEL
          TO ASK 
     END IF 
     IF sort% = 2 THEN 
       SELECT ;
          WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
          ORDER REPORT Nachname.ADRESSEN,Produktgruppe.GRUPPEN,Bestellnummer.ARTIKEL
          TO ASK 
     END IF 
     IF sort% = 3 THEN 
       SELECT ;
          WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
          ORDER REPORT Nachname.ADRESSEN,Produktgruppe.GRUPPEN,VKNetto.ARTIKEL
          TO ASK 
     END IF 
   END IF 
   REM ********************************************************************************
   REM *                               einzelne PG                                    *
   REM ********************************************************************************
   IF gruppeopt% = 3 THEN 
     IF opt% = 0 THEN 
     REM ********************         Bruttopreisliste          *********************
       IF sort% <> 2 THEN 
         REPORT USING "PRLIGRB"
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + " Bruttopreisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + " Bruttopreisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + " Bruttopreisliste sortiert nach Preis"
         END IF 
       ELSE 
         REPORT USING "PRLIGRBB"
         Titel$ = "PG: " + Auswahl$ + " Bruttopreisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 1 THEN 
       REM *******************           Nettopreisliste           ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRLIGRN"
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + " Nettopreisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + " Nettopreisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + " Nettopreisliste sortiert nach Preis"
         END IF 
       ELSE 
         REPORT USING "PRLIGRBN"
         Titel$ = "PG: " + Auswahl$ + " Nettopreisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 2 THEN 
       REM *******************           EK - Preisliste           ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRLIGREK"
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + " EK - Preisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + " EK - Preisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + " EK - Preisliste sortiert nach Preis"
         END IF 
       ELSE 
         REPORT USING "PRLIGREK"
         Titel$ = "PG: " + Auswahl$ + " EK - Preisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 3 THEN 
       REM *******************           Komplette - Preisliste     ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRLIG3AL"
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + " Komplett - Artikelliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + " Komplett - Artikelliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + " Komplett - Artikelliste sortiert nach Preis"
         END IF 
       ELSE 
         REPORT USING "PRLIG3AL"
         Titel$ = "PG: " + Auswahl$ + " Komplett - Artikelliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     Titel$ = Titel$ + " "
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     ON ERROR GOTO ErrPREISLISTE
     IF opt% < 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp%
            ORDER REPORT Bezeichnung.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp%
            ORDER REPORT Artikelnummer.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp%
            ORDER REPORT Bestellnummer.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp%
            ORDER REPORT VKNetto.ARTIKEL
            TO ASK 
       END IF 
     END IF 
     IF opt% = 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND codegr.artikel = codegr.gruppen AND Lieferant.artikel = Codeku.adressen
            ORDER REPORT Bezeichnung.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND codegr.artikel = codegr.gruppen AND Lieferant.artikel = Codeku.adressen
            ORDER REPORT Artikelnummer.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND codegr.artikel = codegr.gruppen AND Lieferant.artikel = Codeku.adressen
            ORDER REPORT Bestellnummer.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND codegr.artikel = codegr.gruppen AND Lieferant.artikel = Codeku.adressen
            ORDER REPORT VKNetto.ARTIKEL
            TO ASK 
       END IF 
     END IF 
   END IF 
   REM ********************************************************************************
   REM *                   einzelne PG / Gruppierung Lieferant                        *
   REM ********************************************************************************
   IF gruppeopt% = 4 THEN 
     IF opt% = 0 THEN 
     REM ********************         Bruttopreisliste          *********************
       IF sort% <> 2 THEN 
         REPORT USING "PREPLB"
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + " Bruttopreisliste sortiert nach Lief/Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + " Bruttopreisliste sortiert nach Lief/Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + " Bruttopreisliste sortiert nach Lief/Preis"
         END IF 
       ELSE 
         REPORT USING "PREPLBB"
         Titel$ = "PG: " + Auswahl$ + " Bruttopreisliste sortiert nach Lief/Bestellnummer"
       END IF 
     END IF 
     IF opt% = 1 THEN 
       REM *******************           Nettopreisliste           ********************
       IF sort% <> 2 THEN 
         REPORT USING "PREPLN"
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + " Nettopreisliste sortiert nach Lief/Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + " Nettopreisliste sortiert nach Lief/Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + " Nettopreisliste sortiert nach Lief/Preis"
         END IF 
       ELSE 
         REPORT USING "PREPLBN"
         Titel$ = "PG: " + Auswahl$ + " Nettopreisliste sortiert nach Lief/Bestellnummer"
       END IF 
     END IF 
     IF opt% = 2 THEN 
       REM *******************           EK - Preisliste           ********************
       IF sort% <> 2 THEN 
         REPORT USING "PREPLEK"
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + " EK - Preisliste sortiert nach Lief/Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + " EK - Preisliste sortiert nach Lief/Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + " EK - Preisliste sortiert nach Lief/Preis"
         END IF 
       ELSE 
         REPORT USING "PREPLEK"
         Titel$ = "PG: " + Auswahl$ + " EK - Preisliste sortiert nach Lief/Bestellnummer"
       END IF 
     END IF 
     IF opt% = 3 THEN 
       REM *******************           Komplette - Preisliste     ********************
       IF sort% <> 2 THEN 
         REPORT USING "PREPL4AL"
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + " Komplett-Artikelliste sortiert nach Lief/Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + " Komplett-Artikelliste sortiert nach Lief/Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + " Komplett-Artikelliste sortiert nach Lief/Preis"
         END IF 
       ELSE 
         REPORT USING "PREPL4AL"
         Titel$ = "PG: " + Auswahl$ + " Komplett-Artikelliste sortiert nach Lief/Bestellnummer"
       END IF 
     END IF 
     Titel$ = Titel$ + " "
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
     GROUP Nachname.ADRESSEN
     BEFORE GROUP Nachname.ADRESSEN
     SET REPORT PAGE "H_Nachname.A002"
     OUTPUT REPORT PAGE 
     END GROUP 
     AFTER GROUP Nachname.ADRESSEN
     SET REPORT PAGE "F_Nachname.A002"
     OUTPUT REPORT PAGE 
     END GROUP 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     ON ERROR GOTO ErrPREISLISTE
     IF opt% < 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = CodeKU.ADRESSEN
            ORDER REPORT Nachname.ADRESSEN,Bezeichnung.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = CodeKU.ADRESSEN
            ORDER REPORT Nachname.ADRESSEN,Artikelnummer.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = CodeKU.ADRESSEN
            ORDER REPORT Nachname.ADRESSEN,Bestellnummer.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = CodeKU.ADRESSEN
            ORDER REPORT Nachname.ADRESSEN,VKNetto.ARTIKEL
            TO ASK 
       END IF 
     END IF 
     IF opt% = 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = CodeKU.ADRESSEN
            ORDER REPORT Nachname.ADRESSEN,Bezeichnung.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = CodeKU.ADRESSEN
            ORDER REPORT Nachname.ADRESSEN,Artikelnummer.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = CodeKU.ADRESSEN
            ORDER REPORT Nachname.ADRESSEN,Bestellnummer.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = CodeKU.ADRESSEN
            ORDER REPORT Nachname.ADRESSEN,VKNetto.ARTIKEL
            TO ASK 
       END IF 
     END IF 
 
   END IF 
   REM ********************************************************************************
   REM *                   einzelne PG / einzelner Lieferant                          *
   REM ********************************************************************************
   IF gruppeopt% = 5 THEN 
     IF opt% = 0 THEN 
     REM ********************         Bruttopreisliste          *********************
       IF sort% <> 2 THEN 
         REPORT USING "PRLIGRB"
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Bruttopreisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Bruttopreisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Bruttopreisliste sortiert nach Preis"
         END IF 
       ELSE 
         REPORT USING "PRLIGRBB"
         Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Bruttopreisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 1 THEN 
       REM *******************           Nettopreisliste           ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRLIGRN"
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Nettopreisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Nettopreisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Nettopreisliste sortiert nach Preis"
         END IF 
       ELSE 
         REPORT USING "PRLIGRBN"
         Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Nettopreisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 2 THEN 
       REM *******************           EK - Preisliste           ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRLIGREK"
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " EK - Preisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " EK - Preisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " EK - Preisliste sortiert nach Preis"
         END IF 
       ELSE 
         REPORT USING "PRLIGREK"
         Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " EK - Preisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 3 THEN 
       REM *******************           Komplette - Preisliste     ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRLIG5AL"
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Komplett - Artikelliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Komplett - Artikelliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Komplett - Artikelliste sortiert nach Preis"
         END IF 
       ELSE 
         REPORT USING "PRLIG5AL"
         Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Komplett - Artikelliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     Titel$ = Titel$ + " "
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     ON ERROR GOTO ErrPREISLISTE
     IF sort% = 0 THEN 
       SELECT ;
          WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = codeku%
          ORDER REPORT Bezeichnung.ARTIKEL
          TO ASK 
     END IF 
     IF sort% = 1 THEN 
       SELECT ;
          WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = codeku%
          ORDER REPORT Artikelnummer.ARTIKEL
          TO ASK 
     END IF 
     IF sort% = 2 THEN 
       SELECT ;
          WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = codeku%
          ORDER REPORT Bestellnummer.ARTIKEL
          TO ASK 
     END IF 
     IF sort% = 3 THEN 
       SELECT ;
          WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = codeku%
          ORDER REPORT VKNetto.ARTIKEL
          TO ASK 
     END IF 
   END IF 
  
   
   REM ********************************************************************************
   REM *                          einz. Lieferant Gruppierung PG                      *
   REM ********************************************************************************
   IF gruppeopt% = 6 THEN 
     IF opt% = 0 THEN 
       REM ********************         Bruttopreisliste          *********************
       IF sort% <> 2 THEN 
         REPORT USING "PREISLIB"
         IF sort% = 0 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Bruttopreisliste sortiert nach PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Bruttopreisliste sortiert nach PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Bruttopreisliste sortiert nach PG und Preis"
         END IF 
       ELSE 
         REPORT USING "PRGBB"
         Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Bruttopreisliste sortiert nach PG und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 1 THEN 
       REM *******************           Nettopreisliste           ********************
       IF sort% <> 2 THEN 
         REPORT USING "PREISLIN"
         IF sort% = 0 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Nettopreisliste sortiert nach PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Nettopreisliste sortiert nach PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Nettopreisliste sortiert nach PG und Preis"
         END IF 
       ELSE 
         REPORT USING "PRGBN"
         Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Nettopreisliste sortiert nach PG und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 2 THEN 
       REM *******************           EK - Preisliste           ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRGEK"
         IF sort% = 0 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "EK-Preisliste sortiert nach PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "EK-Preisliste sortiert nach PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "EK-Preisliste sortiert nach PG und Preis"
         END IF 
       ELSE 
         REPORT USING "PRGEK"
         Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "EK-Preisliste sortiert nach Produktgruppe und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 3 THEN 
       REM *******************           Komplette - Preisliste     ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRG6AL"
         IF sort% = 0 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Komplett-Artikelliste sortiert nach PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Komplett-Artikelliste sortiert nach PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Komplett-Artikelliste sortiert nach PG und Preis"
         END IF 
       ELSE 
         REPORT USING "PRG6AL"
         Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Komplett-Artikelliste sortiert nach PG und Bestellnummer"
       END IF 
     END IF 
     Titel$ = Titel$ + " "
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
     GROUP Kurzbezeichnung.GRUPPEN
     BEFORE GROUP Kurzbezeichnung.GRUPPEN
     SET REPORT PAGE "H_Kurzbezeic002"
     OUTPUT REPORT PAGE 
     END GROUP 
     AFTER GROUP Kurzbezeichnung.GRUPPEN
     SET REPORT PAGE "F_Kurzbezeic002"
     OUTPUT REPORT PAGE 
     EJECT REPORT 
     END GROUP 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     ON ERROR GOTO ErrPREISLISTE
     IF sort% = 0 THEN 
       SELECT ;
         WHERE Lieferant.ARTIKEL = codeku% AND CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Kurzbezeichnung.GRUPPEN <> ""
         ORDER REPORT Produktgruppe.gruppen,Bezeichnung.artikel
         TO ASK 
     END IF 
     IF sort% = 1 THEN 
       SELECT ;
         WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = codeku% AND Kurzbezeichnung.GRUPPEN <> ""
         ORDER REPORT Produktgruppe.gruppen,Artikelnummer.artikel
         TO ASK 
     END IF 
     IF sort% = 2 THEN 
       SELECT ;
         WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = codeku% AND Kurzbezeichnung.GRUPPEN <> ""
         ORDER REPORT Produktgruppe.gruppen,Bestellnummer.artikel
         TO ASK 
     END IF 
     IF sort% = 3 THEN 
       SELECT ;
         WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = codeku% AND Kurzbezeichnung.GRUPPEN <> ""
         ORDER REPORT Produktgruppe.gruppen,VKNetto.artikel
         TO ASK 
     END IF 
   END IF 
 
   REM ********************************************************************************
   REM *                               einzelner Lieferant                            *
   REM ********************************************************************************
   IF gruppeopt% = 7 THEN 
     IF opt% = 0 THEN 
     REM ********************         Bruttopreisliste          *********************
       IF sort% <> 2 THEN 
         REPORT USING "PRLIGRB"
         IF sort% = 0 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Bruttopreisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Bruttopreisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Bruttopreisliste sortiert nach Preis"
         END IF 
       ELSE 
         REPORT USING "PRLIGRBB"
         Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Bruttopreisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 1 THEN 
       REM *******************           Nettopreisliste           ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRLIGRN"
         IF sort% = 0 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Nettopreisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Nettopreisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Nettopreisliste sortiert nach Preis"
         END IF 
       ELSE 
         REPORT USING "PRLIGRBN"
         Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Nettopreisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 2 THEN 
       REM *******************           EK - Preisliste           ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRLIGREK"
         IF sort% = 0 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " EK - Preisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " EK - Preisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " EK - Preisliste sortiert nach Preis"
         END IF 
       ELSE 
         REPORT USING "PRLIGREK"
         Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " EK - Preisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 3 THEN 
       REM *******************           Komplette - Preisliste     ********************
       IF sort% <> 2 THEN 
         REPORT USING "PRLIG7AL"
         IF sort% = 0 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Komplett - Artikelliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Komplett - Artikelliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Komplett - Artikelliste sortiert nach Preis"
         END IF 
       ELSE 
         REPORT USING "PRLIG7AL"
         Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Komplett - Artikelliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     Titel$ = Titel$ + " "
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     ON ERROR GOTO ErrPREISLISTE
     IF opt% < 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
            WHERE Lieferant.ARTIKEL = codeku%
            ORDER REPORT Bezeichnung.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
            WHERE Lieferant.ARTIKEL = codeku%
            ORDER REPORT Artikelnummer.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
            WHERE Lieferant.ARTIKEL = codeku%
            ORDER REPORT Bestellnummer.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
            WHERE Lieferant.ARTIKEL = codeku%
            ORDER REPORT VKNetto.ARTIKEL
            TO ASK 
       END IF 
     END IF 
     IF opt% = 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
            WHERE Lieferant.ARTIKEL = codeku% AND CodeGR.Artikel = CodeGR.gruppen
            ORDER REPORT Bezeichnung.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
            WHERE Lieferant.ARTIKEL = codeku% AND CodeGR.Artikel = CodeGR.gruppen
            ORDER REPORT Artikelnummer.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
            WHERE Lieferant.ARTIKEL = codeku% AND CodeGR.Artikel = CodeGR.gruppen
            ORDER REPORT Bestellnummer.ARTIKEL
            TO ASK 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
            WHERE Lieferant.ARTIKEL = codeku% AND CodeGR.Artikel = CodeGR.gruppen
            ORDER REPORT VKNetto.ARTIKEL
            TO ASK 
       END IF 
     END IF 
   END IF 
 
 
 
ErrPREISLISTE: 
   ON ERROR GOTO ErrorHandler
 END IF 
 REQUEST "Preislistenausgabe beenden ?","",130,req2%
 IF req2% = 1 THEN endeschleife$ = "j"
 WEND 
 END SUB 
 
  
 
 ' Auflistung und Bearbeitung offener VorgÑnge
 ' ======================================================================
 
SUB OffeneVorgÑnge(art%)
 CALL DFile(3,"ABZUGANG" + _fpw$)
 IF DEFA$ = "MEGA" THEN 
   CALL DFile(3,"KSATZ" + _fpw$)
   CALL DFile(3,"SSATZ" + _fpw$)
 END IF 
 CALL DFile(3,"MASTER" + _fpw$)
 CALL DFile(2,"OFFICE\ADRESSEN" + _fpw$)
 FILE "master"
 SELECT CASE art%
 CASE 1
   subHeader$ = "Angebote"
 CASE 2
   subHeader$ = "Rechnungen"
 CASE 3
   subHeader$ = "Lieferscheine"
 CASE 4
   subHeader$ = "AuftrÑge"
 CASE 5
   subHeader$ = "Bestellungen"
 CASE 6
   subHeader$ = "ArtikelzugÑnge"
 CASE 7
   subHeader$ = "Gutschriften"
 END SELECT 
 DIM Positionen$(1000)
 req% = - 1
 REDIM Auswahl$(500)
 WHILE req% <> 0
   FOR a% = 0 TO 500
     Auswahl$(a%) = ""
   NEXT a%
   FOR a% = 0 TO 1000
     Positionen$(a%) = ""
   NEXT a%
   FILE "ABZUGANG"
   SELECT WHERE 
   INDEX Termin.ABZUGANG
   counter% = 0
   SELECT FIRST 
   MOUSE OFF 
   counter% = - 1
   WHILE NOT EOF ("ABZUGANG")
     IF art% = 2 THEN 
       REM Anzeigen von Rechnungen(art=2) und Gutschriften(art=7)
       IF (Art.ABZUGANG = 2 OR art.abzugang = 7) AND Kontrolle.ABZUGANG LIKE "j" THEN 
         IF termin.abzugang > 0 THEN 
           counter% = counter% + 1
           Positionen$(counter%) = DATE$ (Termin.ABZUGANG,"0d.0m.yy") + "  " + Nummer.ABZUGANG + "  " + Buchungstext.ABZUGANG + SPACE$ (120) + STR$ (CodeAZ.ABZUGANG,"000000")
         END IF 
       END IF 
     ELSE 
       IF Art.ABZUGANG = art% AND Kontrolle.ABZUGANG LIKE "j" THEN 
         IF termin.abzugang > 0 THEN 
           counter% = counter% + 1
           Positionen$(counter%) = DATE$ (Termin.ABZUGANG,"0d.0m.yy") + "  " + Nummer.ABZUGANG + "  " + Buchungstext.ABZUGANG + SPACE$ (120) + STR$ (CodeAZ.ABZUGANG,"000000")
         END IF 
       END IF 
     END IF 
     SELECT NEXT FILE "ABZUGANG" INDEX Termin.ABZUGANG
   WEND 
   MOUSE ON 
   IF counter% > - 1 THEN 
     CREATE DIALOG "REGISTER",0,0,322,150,title$,"MS Sans Serif",8
     ADD DIALOG "REGISTER",5,5,4,240,10,0,"WÑhlen Sie die Rechnung oder Gutschrift "
     IF art% = 2 THEN ADD DIALOG "REGISTER",1,266,9,47,16,0,"ange&mahnt",6,1
     ADD DIALOG "REGISTER",5,6,20,175,10,0,"Termin     Nummer         Buchungstext"
     ADD DIALOG "REGISTER",7,5,30,309,97,8,2,Positionen$,Auswahl$,Positionen$(0)
     ADD DIALOG "REGISTER",1,4,129,54,16,0,"&Gegenbuchen",2,1
     ADD DIALOG "REGISTER",1,59,129,54,16,0,"&Storno",3,1
     ADD DIALOG "REGISTER",1,114,129,55,16,0,"ö&bersicht",4,1
     ADD DIALOG "REGISTER",1,170,129,46,16,0,"A&usgabe",5,1
     ADD DIALOG "REGISTER",1,217,129,48,16,0,"&Abbrechen",7,0
     ADD DIALOG "REGISTER",1,266,129,48,16,0,"&OK",1,1
     DIALOG "REGISTER",req%
     REMOVE DIALOG "REGISTER"
     IF req% = 2 THEN 
       REQUEST "Wollen Sie den Vorgang wirklich als erfolgreich ","erledigt kennzeichnen? ",130,req1%
       IF req1% = 1 THEN 
         SET STATUS "Bitte warten: Gegenbuchung..."
         IF art% = 2 OR art% = 7 THEN 
           REQUEST "Die Daten werden an die Buchungsdatei Åbergeben!","",2
         END IF 
         FOR a% = 0 TO counter%
           IF Auswahl$(a%) <> "" THEN 
             _cuaz% = VAL ( RIGHT$ (Auswahl$(a%),6))
             SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
             codems% = CodeMS.ABZUGANG
             AnzGebucht.ABZUGANG = Anzahl.ABZUGANG
             DatumGebucht.ABZUGANG = TODAY 
             Kontrolle.ABZUGANG = "n"
             CALL QuickStore("ABZUGANG")
             IF art% = 2 OR art% = 7 THEN 
               IF cashpath$ <> "leer" THEN 
                 FILE "master"
                 SELECT KEY codems% FILE "master" INDEX codems.master
                 IF codems% = codems.master THEN 
                   FILE "adressen"
                   SELECT KEY CodeKU.master FILE "adressen" INDEX codeku.adressen
                   IF NOT EOF ("adressen") THEN 
                     IF debitorkto.adressen <> "" THEN 
                       debitakt$ = LTRIM$ (Debitorkto.adressen)
                     END IF 
                   END IF 
                   IF debitakt$ = "" THEN debitakt$ = Debitorkto$
                   DATEBASE "ddmmyy"
                   vdatum$ = DATE$ (datum.master)
                   IF art.master = 2 THEN 
                     betrag$ = LTRIM$ ( STR$ (GesBrutto.master * 100,"999999999999"))
                     buchtext$ = nummer.master + " bezahlt!"
                   ELSE 
                     betrag$ = LTRIM$ ( STR$ (GesBrutto.master * - 100,"999999999999"))
                     buchtext$ = nummer.master + " ausbezahlt!"
                   END IF 
                   BSatz$ = CHR$ (34) + "Z" + CHR$ (34) + "," + CHR$ (34) + LTRIM$ (vdatum$) + CHR$ (34) + "," + CHR$ (34) + buchtext$ + CHR$ (34) + "," + CHR$ (34) + LTRIM$ (nachname.master) + CHR$ (34) + "," + CHR$ (34) + Debitakt$ + CHR$ (34) + ","
                   Bsatz$ = Bsatz$ + CHR$ (34) + Bestandskto$ + CHR$ (34) + "," + CHR$ (34) + LTRIM$ ( STR$ (CodeMS.master,"999999")) + CHR$ (34) + "," + CHR$ (34) + betrag$ + CHR$ (34) + "," + CHR$ (34) + "0" + CHR$ (34)
                   cashdatei$ = cashpath$ + "export.asc"
                   OPEN cashdatei$ FOR APPEND 
                   ? BSatz$
                   CLOSE OUTPUT 
                   BSatz$ = ""
                   REQUEST "Mîchten Sie die Buchungsdatei einsehen und ggf.","per Hand Ñndern?",130,req22%
                   IF req22% = 1 THEN 
                     CALL EditASCIIFile(cashdatei$)
                   END IF 
                 END IF 
               END IF 
               FILE "abzugang"
             END IF 
           END IF 
         NEXT 
       END IF 
     END IF 
     IF req% = 6 THEN 
       SET STATUS "Bitte warten: angemahnt..."
       REQUEST "Wollen Sie wirklich den Vorgang als angemahnt kennzeichnen?","",130,req1%
       IF req1% = 1 THEN 
         CALL DFile(2,"OFFICE\akquise" + _fpw$)
         CALL DFile(2,"OFFICE\adressen" + _fpw$)
         FOR a% = 0 TO counter%
           IF Auswahl$(a%) <> "" THEN 
             _cuaz% = VAL ( RIGHT$ (Auswahl$(a%),6))
             FILE "abzugang"
             SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
             buchungstext.ABZUGANG = "*M*" + DATE$ ( TODAY ,"dd.mm.yy") + " " + buchungstext.ABZUGANG
             CALL QuickStore("ABZUGANG")
             SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
             SELECT KEY CodeMS.abzugang FILE "master" INDEX CodeMS.master
             bruttosum% = GesBrutto.Master
             FILE "akquise"
             BLANK 
             codeaq.akquise = SER ("akquise",1)
             CodeKU.AKQUISE = CodeKU.ABZUGANG
             CodeMA.AKQUISE = _vcodema%
             CodeAK.akquise = 999998
             Wertung.AKQUISE = 0
             Sprachnotiz.akquise = "n"
             Datum.AKQUISE = TODAY 
             Termin.akquise = TODAY 
             erledigt_Termin.akquise = "n"
             erledigt_Vorg.AKQUISE = "n"
             SELECT KEY CodeKU.ABZUGANG FILE "adressen" INDEX codeku.adressen
             nachname.akquise = nachname.adressen
             SELECT KEY codema.akquise FILE "supervis" INDEX codema.supervis
             Bearbeiter.akquise = nachname.supervis
             Notiz.akquise = "MAHNUNG zur Rechnung: " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosum%,"999999999999.00")) + " DM"
             CALL QuickStore("akquise")
           END IF 
         NEXT 
         FILE "abzugang"
       END IF 
     END IF 
     IF req% = 3 THEN 
       REQUEST "Wollen Sie den Vorgang wirklich stornieren?","",130,req1%
       IF req1% = 1 THEN 
         SET STATUS "Bitte warten: Stornierung..."
         FOR a% = 0 TO counter%
           IF Auswahl$(a%) <> "" THEN 
             _cuaz% = VAL ( RIGHT$ (Auswahl$(a%),6))
             FILE "abzugang"
             SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
             AnzGebucht.ABZUGANG = 0
             DatumGebucht.ABZUGANG = TODAY 
             Kontrolle.ABZUGANG = "n"
             REM Termin.ABZUGANG = 0
             Buchungstext.ABZUGANG = Buchungstext.ABZUGANG + " [STORNO]"
             CALL QuickStore("ABZUGANG")
             codems% = CodeMS.ABZUGANG
             SELECT KEY CodeMS.ABZUGANG LOCK FILE "MASTER" INDEX CodeMS.MASTER
             IF FOUND ("MASTER") THEN 
               FILE "master"
               StatusM.MASTER = "s"
               CALL QuickStore("MASTER")
               art% = Art.master
             END IF 
             IF art% = 2 OR art% = 7 THEN 
               IF cashpath$ <> "leer" THEN 
                 FILE "master"
                 SELECT KEY codems% FILE "master" INDEX codems.master
                 IF codems% = codems.master THEN 
                   FILE "adressen"
                   SELECT KEY CodeKU.master FILE "adressen" INDEX codeku.adressen
                   IF NOT EOF ("adressen") THEN 
                     IF debitorkto.adressen <> "" THEN 
                       debitakt$ = LTRIM$ (Debitorkto.adressen)
                     END IF 
                   END IF 
                   IF debitakt$ = "" THEN debitakt$ = Debitorkto$
                   DATEBASE "ddmmyy"
                   vdatum$ = DATE$ (datum.master)
                   mwst$ = LTRIM$ ( STR$ (mwst.master * 100,"9999"))
                   IF art.master = 2 THEN 
                     betrag$ = LTRIM$ ( STR$ (GesBrutto.master * 100,"999999999999"))
                     buchtext$ = nummer.master + " storniert!"
                   ELSE 
                     betrag$ = LTRIM$ ( STR$ (GesBrutto.master * - 100,"999999999999"))
                     buchtext$ = nummer.master + " storniert!"
                   END IF 
                   BSatz$ = CHR$ (34) + "R" + CHR$ (34) + "," + CHR$ (34) + LTRIM$ (vdatum$) + CHR$ (34) + "," + CHR$ (34) + buchtext$ + CHR$ (34) + "," + CHR$ (34) + LTRIM$ (nachname.master) + CHR$ (34) + "," + CHR$ (34) + Debitakt$ + CHR$ (34) + ","
                   Bsatz$ = Bsatz$ + CHR$ (34) + Warenausgkto$ + CHR$ (34) + "," + CHR$ (34) + LTRIM$ ( STR$ (CodeMS.master,"999999")) + CHR$ (34) + "," + CHR$ (34) + betrag$ + CHR$ (34) + "," + CHR$ (34) + mwst$ + CHR$ (34)
                   cashdatei$ = cashpath$ + "export.asc"
                   OPEN cashdatei$ FOR APPEND 
                   ? BSatz$
                   CLOSE OUTPUT 
                   BSatz$ = ""
                   REQUEST "Mîchten Sie die Buchungsdatei einsehen und ggf.","per Hand Ñndern?",130,req22%
                   IF req22% = 1 THEN 
                      CALL EditASCIIFile(cashdatei$)
                   END IF 
                 END IF 
                 FILE "abzugang"
               END IF 
             END IF 
 
           END IF 
         NEXT 
       END IF 
     END IF 
     IF req% = 5 THEN 
       SET STATUS "Ausgabe eines Vorganges..."
       FOR a% = 0 TO counter%
         IF Auswahl$(a%) <> "" THEN 
           _cuaz% = VAL ( RIGHT$ (Auswahl$(a%),6))
           SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
           codems% = CodeMS.abzugang
           SELECT KEY CodeMS.ABZUGANG LOCK FILE "MASTER" INDEX CodeMS.MASTER
           IF FOUND ("MASTER") THEN 
              FILE "master"
              MSArt$ = "Angebote"
              SFORM$ = "UNI"
              CALL MSDR(CodeMS.master)
              FILE "abzugang"
           END IF 
         END IF 
       NEXT 
     END IF 
     IF req% = 4 THEN 
       CALL DFile(2,"OFFICE\adressen" + _fpw$)
       REPORT USING "OFFEN"
       Ueberschrift$ = "öbersicht Åber offene " + subHeader$
       HEADING 
         SET REPORT PAGE "H_PAGE"
         OUTPUT REPORT PAGE 
       END HEADING 
       FOOTING 1
         SET REPORT PAGE "F_PAGE"
         OUTPUT REPORT PAGE 
       END FOOTING 
       AFTER SELECT 
         SET REPORT PAGE "F_SELECT"
         OUTPUT REPORT PAGE 
       END SELECT 
       SET QUERY OFF 
       SET QUERY LOCK OFF 
       MOUSE OFF 
       ON ERROR GOTO ErrOFFVORG
       SELECT ;
         WHERE CodeKU.ABZUGANG = CodeKU.ADRESSEN AND Art.ABZUGANG = art% AND Kontrolle.ABZUGANG LIKE "j"
         ORDER REPORT Termin.ABZUGANG
         TO ASK 
ErrOFFVORG: 
       ON ERROR GOTO ErrorHandler
     END IF 
   ELSE 
     IF req% <> 7 THEN CALL Fehler("keine Positionen gefunden!","")
     req% = 0
   END IF 
 IF req% = 7 THEN req% = 0
 WEND 
 SET STATUS ""
 MOUSE ON 
 END SUB 
 
 
SUB KALKKOMBI()
 REQUEST "Die Neukalkulation aller Kombiartikel kann eine Zeit benîtigen!","Kombiartikel neu kalkulieren?",135,req%
 IF req% = 1 THEN 
   MOUSE OFF 
   CALL DFile(3,"ARTIKEL" + _fpw$)
   CALL DFile(3,"KOMBI" + _fpw$)
   CALL Gauge(1,"Kombiartikel neu kalkulieren...")
   _max% = RECCOUNT ("ARTIKEL")
   _anz% = 0
   FILE "ARTIKEL"
   INDEX CodeAR.ARTIKEL
   SELECT FIRST FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
   WHILE NOT EOF ("ARTIKEL")
     _tart% = CodeAR.ARTIKEL
     _proz% = INT (100 / _max% * _anz%)
     IF _proz% > 100 THEN _proz% = 100
     IF _proz% < 2 THEN _proz% = 2
     IF _proz% <> _prozt% THEN 
       _prozt% = _proz%
       SET STATUS "Kombiartikel neu kalkulieren... " + STR$ (_prozt%,"999") + " %"
       CALL Gauge(_proz%,"")
     END IF 
     IF IsKombi%(_tart%) THEN CALL KOMBRechnen(_tart%)
     FILE "ARTIKEL"
     INDEX CodeAR.ARTIKEL
     REM SELECT FIRST FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
     REM SELECT KEY _tart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
     SELECT NEXT FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
     _anz% = _anz% + 1
   WEND 
   CALL Gauge(0,"")
   MOUSE ON 
 END IF 
 END SUB 
 
 
  
 
 ' Formular ADRESSEN
 ' ======================================================================
 
SUB MNADRESSEN()
 MENU CLEAR 
 CALL MNProgramm()
 MENU 1,1,1,"D&rucken...","ADRDrucken","Druckausgabe"
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","ADRNeu","eine neue Adresse erfassen"
 MENU 2,2,1,"S&ichern,F4","MStore","aktuelle Adresse sichern"
 MENU 2,3,1,"&Verwerfen,Alt+RckT","UNDO","letzte énderungen verwerfen"
 MENU 2,4,1,"&Kopieren,F5","ADRKopieren","Adressdatensatz kopieren"
 MENU 2,5,1,"&Kopieren in Zwischenablage,F11","ADRKopWin","Adresse in Zwischenablage kopieren"
 IF NOT MNdisabled%("ADRLoeschen") THEN 
   MENU 2,6,1,"&Lîschen","ADRLoeschen","aktuelle Adresse lîschen"
 ELSE 
   MENU 2,6,0,"&Lîschen"
 END IF 
 MENU 2,7,1,"S&uchen,F6","ADRSuchen","Adresse suchen"
 MENU 3,0,1,"Be&wegen","",""
 MENU 3,1,1,"&NÑchster,BildAb","ADRNext","nÑchste Adresse"
 MENU 3,2,1,"&Vorheriger,BildAuf","ADRPrev","vorherige Adresse"
 MENU 3,3,1,"&Erster","ADRFirst","erste Adresse"
 MENU 3,4,1,"&Letzter","ADRLast","letzte Adresse"
 MENU 4,0,1,"&Optionen","",""
 MENU 4,1,1,"&Termine","AKQUISE2","Termine zur aktuellen Adresse bearbeiten"
 MENU 4,2,1,"Telefon/&Fax","ADRTelefon","Anzeige der TelefonÅbersicht/Versand von Kurzfaxen"
 MENU 4,3,1,"Fil&ter...","","nur bestimmte Adressen anzeigen lassen..."
 MENU 4,3;1,1,"normal","ADRFilter1","nur bestimmte Adressen anzeigen lassen (einfache Auswahl)"
 MENU 4,3;2,1,"erweitert","ADRFilter2","nur bestimmte Adressen anzeigen lassen (erweiterte Auswahl)"
 MENU 4,4,1,"&UmsatzÅbersicht","UMSKUNDEN","UmsatzÅbersicht des Kunden ausgeben"
 IF title$ LIKE "*FACTURA*" OR title$ LIKE "*firststep*" OR title$ LIKE "*price*" THEN 
   MENU 4,5,0,"TerminÅbersicht,F3","AQAdrHist1","TerminÅbersicht des Kunden ausgeben"
 ELSE 
   MENU 4,5,1,"TerminÅbersicht,F3","AQAdrHist1","TerminÅbersicht des Kunden ausgeben"
 END IF 
 MENU 4,6,0,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
 MENU 4,7,3
 MENU 4,8,1,"Adressen nach dBase III/IV exportieren","ADRExport"
 MENU 4,9,1,"Adressen aus \CODIE\IMPOADR.DBF importieren","ADRImport"
 MENU 4,10,3
 MENU 4,11,1,"allg.öbersichten Ang./Rechng./Liefersch...","ListeAllg","öbersicht Åber Ang/Rechn/Liefersch/Auftr/Bestell/Gutschr"
 REM dial$ = ReadINI$("Modem","ISDNDial")
 IF andidial$ LIKE "TELES" THEN 
   MENU 4,12,1,"Anwahl per TELES.FON,F12","DialTeles"
 END IF 
 
 MENU 5,0,1,"Do&kumente"
 a% = 0
 WHILE DOKGruppen$(a%) <> "" AND a% < 19
   IF a% < 10 THEN mnline$ = "&" ELSE mnline$ = ""
   mnline$ = mnline$ + LTRIM$ ( STR$ (a%,"999")) + " " + DOKGruppen$(a%)
   MENU 5,a% + 1,1,mnline$,"ADRDOK","Dokument neu erfassen, einsehen oder bearbeiten"
   a% = a% + 1
 WEND 
 MENU 6,0,1,"&VorgÑnge"
 CALL MNHilfe(7)
 END SUB 
  
  
  
 ' Produktgruppen
 ' =======================================================================
 
SUB MNGRUPPEN()
 MENU CLEAR 
 CALL MNProgramm()
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","GRPNeu","neue Produktgruppe anlegen"
 MENU 2,2,1,"S&ichern,F4","MStore","Daten der aktuellen Produktgruppe sichern"
 MENU 2,3,1,"&Verwerfen,Strg+RckT","UNDO","letzte énderungen verwerfen"
 IF NOT MNdisabled%("GRPLoeschen") THEN 
   MENU 2,4,1,"&Lîschen","GRPLoeschen","aktuelle Produktgruppe lîschen"
 ELSE 
   MENU 2,4,0,"&Lîschen"
 END IF 
 MENU 2,5,1,"S&uchen,F6","GRPSuchen","Produktgruppe suchen"
 MENU 3,0,1,"&Bewegen","",""
 MENU 3,1,1,"&NÑchster,BildAb","SelectNext","nÑchste Produktgruppe"
 MENU 3,2,1,"&Vorheriger,BildAuf","SelectPrevious","vorherige Produktgruppe"
 MENU 3,3,1,"&Erster","SelectFirst","erste Produktgruppe"
 MENU 3,4,1,"&Letzter","SelectLast","letzte roduktgruppe"
 MENU 4,0,1,"&Optionen"
 MENU 4,1,1,"&Artikel bearbeiten,F5","GRPProduct","Artikel der aktuellen Produktgruppe bearbeiten"
 MENU 4,2,1,"&UmsatzÅbersicht","UMSGRUPPE","UmsatzÅbersicht fÅr aktuelle Produktgruppe ausgeben"
 MENU 4,3,1,"&Kopieren","GRPKopieren","Kopieren aller Artikel einer PG in eine neue PG"
 CALL MNHilfe(5)
 END SUB 
 
 
 
 ' Masterformular A/R/L
 ' =======================================================================
 
SUB MNMASTER()
 MENU CLEAR 
 CALL MNProgramm()
 MENU 1,1,1,"&Drucken..."
 MENU 1,1;1,1,"Drucker/Bildschirm,F3","MSDrucken","Ausgabe als Seitenvorschau oder Ausdruck"
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","MSNeu","einen neuen Datensatz erfassen"
 MENU 2,2,1,"S&ichern,F4","MStore","Daten des aktuellen Datensatzes sichern"
 MENU 2,3,1,"&Verwerfen,Strg+RckT","UNDO",""
 IF NOT MNdisabled%("MSLoeschen") THEN 
   MENU 2,4,1,"&Lîschen","MSLoeschen","aktuellen Datensatz lîschen"
 ELSE 
   MENU 2,4,0,"&Lîschen"
 END IF 
 MENU 2,5,1,"S&uchen,F6","MSSuchen","Start der Suchfunktion"
 CALL MNHilfe(3)
 END SUB 
 
 
 ' Detailformular A/R/L
 ' =======================================================================
 
SUB MNSCHEIN()
 MENU CLEAR 
 CALL MNProgramm()
 MENU 1,1,1,"&Drucken,F3","MSDrucken","Ausgabe als Seitenvorschau oder Ausdruck"
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","SCHNeu","einen neuen Datensatz erfassen"
 MENU 2,2,1,"S&ichern,F4","MStore","aktuellen Datensatz sichern"
 MENU 2,3,1,"&Verwerfen,Strg+RckT","UNDO","letzte énderungen verwerfen"
 CALL MNHilfe(3)
 END SUB 
 
 ' MenÅ Floskeln
 ' =======================================================================
 
SUB MNFLOSKEL()
 MENU CLEAR 
 CALL MNProgramm()
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","FLNeu","eine neue Floskel erfassen"
 MENU 2,2,1,"S&ichern,F4","MStore","Daten der aktuellen Floskel sichern"
 MENU 2,3,1,"&Verwerfen,Strg+RckT","UNDO","letzte énderungen verwerfen"
 IF NOT MNdisabled%("FLLoeschen") THEN 
   MENU 2,4,1,"&Lîschen","FLLoeschen","aktuelle Floskel lîschen"
 ELSE 
   MENU 2,4,0,"&Lîschen"
 END IF 
 MENU 2,5,1,"S&uchen,F6","FLSuchen","Floskel suchen"
 MENU 3,0,1,"&Bewegen","",""
 MENU 3,1,1,"&NÑchster,BildAb","FLNext","nÑchster Datensatz"
 MENU 3,2,1,"&Vorheriger,BildAuf","FLPrev","vorheriger Datensatz"
 CALL MNHilfe(4)
 END SUB 
 
 
 
 
 ' Adre·string erstellen
 ' ===========================================================================
 ' mode%=0      keine Abfrage der Optionen
 ' mode%=-1     Dialog mit Optionen wird angezeigt
 ' opt1%        Telefon/Fax aufnehmen Ja:-1/Nein:0
 ' opt2%        Briefanrede aufnehmen Ja:-1/Nein:0
 ' bei mode%=-1 werden opt1% und opt2% ignoriert
 
FUNCTION MakeAdrMast$(kn%,mode%,opt1%,opt2%)
 cfile$ = FILE 
 FILE "master"
 cuadr% = knr%
 REM SELECT KEY kn% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 lf$ = CHR$ (13) + CHR$ (10)
 SELECT CASE UCASE$ (anrede.master)
 CASE "FIRMA","FA.",""
   Adresse$ = anrede + lf$ + Nachname + lf$
   IF Geburtsname.master <> "" THEN Adresse$ = Adresse$ + Geburtsname.master + lf$
   IF vorname.master <> "" THEN Adresse$ = Adresse$ + "z.H. " + Vorname.master + lf$
 CASE ELSE 
   Adresse$ = anrede + lf$
   IF Vorname.master <> "" THEN Adresse$ = Adresse$ + Vorname.master + " " + Nachname + lf$
 END SELECT 
 Adresse$ = Adresse$ + Stra·e + lf$ + plz + " " + ort + lf$ + lf$
 IF mode% THEN 
   REM IF VAL (ReadConfig$("OFFICE","AdrTelefon")) <> 0 THEN opt1% = 1 ELSE opt1% = 0
   REM IF VAL (ReadConfig$("OFFICE","AdrBriefanrede")) <> 0 THEN opt2% = 1 ELSE opt2% = 0
   CREATE DIALOG "MakeAdr",0,0,273,156,title$,"MS Sans Serif",8
   ADD DIALOG "MakeAdr",4,0,0,272,131,0,""
   ADD DIALOG "MakeAdr",9,3,10,21,22,2
   ADD DIALOG "MakeAdr",5,29,11,233,19,0,"Bitte geben Sie an, wie die Adresse fÅr die öbergabe an die Textverarbeitung in der Zwischenablage bereitgestellt werden soll:"
   ADD DIALOG "MakeAdr",6,30,33,236,66,4,0,Adresse$,800
   REM ADD DIALOG "MakeAdr",2,30,102,131,13,0,"mit Telefon-/Faxnummer",1,0,opt1%
   REM ADD DIALOG "MakeAdr",2,30,116,133,11,0,"Briefanrede",1,0,opt2%
   ADD DIALOG "MakeAdr",1,73,135,55,15,1,"&Weiter",1,1
   ADD DIALOG "MakeAdr",1,129,135,55,15,0,"&Abbrechen",0,0
   DIALOG "MakeAdr",req%
   REMOVE DIALOG "MakeAdr"
 END IF 
 IF mode% = 0 OR req% = 1 THEN 
   IF opt1% = 1 THEN 
     CALL WriteConfig("OFFICE","AdrTelefon","1")
     IF telefon1.adressen <> "" THEN 
       Adresse$ = Adresse$ + lf$ + "Tel.: " + Telefon1
     END IF 
     IF telefax.adressen <> "" THEN 
       Adresse$ = Adresse$ + lf$ + "Fax:  " + Telefax.adressen
     END IF 
   ELSE 
     CALL WriteConfig("OFFICE","AdrTelefon","0")
   END IF 
   IF opt2% = 1 THEN 
     CALL WriteConfig("OFFICE","AdrBriefanrede","1")
     Adresse$ = Adresse$ + lf$ + lf$ + lf$ + Briefanrede.adressen + lf$
   ELSE 
     CALL WriteConfig("OFFICE","AdrBriefanrede","0")
   END IF 
 END IF 
 MakeAdrMast$ = Adresse$
 REM SELECT KEY cuadr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 FILE cfile$
 END FUNCTION 
 
 
 
 
 '      ************************
 '      ** Stichworterfassung **
 '      ************************
 
SUB ARTIStichwort():
 IF ArtiKeyword$ LIKE "TRUE" AND stichwort.artikel = "" THEN CALL ARTIStichNeu()
 END SUB 
 
SUB ARTIStichNeu()
 cuar% = CodeAR.artikel
 IF NEW ("artikel") OR MOD ("artikel") THEN CALL FStore("artikel")
 SET STATUS "Stichwortvergabe Artikel"
 cfile$ = FILE 
 CALL DFile(3,"artikeys" + _fpw$)
 DIM Keyword$( RECCOUNT ("ARTIKEYS"))
 DIM Auswahl$(1)
 MOUSE OFF 
 FILE "ARTIKEYS"
 SELECT FIRST 
 a% = 0
 prompt$ = "ZZZZZZZ"
 WHILE NOT EOF ("ARTIKEYS")
   Keyword$(a%) = keyword.ARTIKEYS
   IF Keyword$(a%) < prompt$ THEN prompt$ = Keyword$(a%)
   a% = a% + 1
   SELECT NEXT 
 WEND 
 MOUSE ON 
 CREATE DIALOG "KEYWORD",0,0,233,200,title$,"MS Sans Serif",8
 ADD DIALOG "KEYWORD",4,0,1,233,176,0,""
 ADD DIALOG "KEYWORD",9,4,12,21,24,2
 ADD DIALOG "KEYWORD",5,31,14,189,19,0,"Bitte wÑhlen Sie das Stichwort aus, das in den aktuellen Artikel aufgenommen werden soll:"
 ADD DIALOG "KEYWORD",7,31,38,188,122,2,2,Keyword$,Auswahl$,prompt$
 ADD DIALOG "KEYWORD",6,31,158,188,12,8,0,KW$,20
 IF MNdisabled%("SUPERVISOR") THEN 
   ADD DIALOG "KEYWORD",1,57,182,55,15,1,"&OK",1,1
   ADD DIALOG "KEYWORD",1,113,182,55,15,0,"&Abbrechen",0,0
 ELSE 
   ADD DIALOG "KEYWORD",1,32,182,55,15,1,"&OK",1,1
   ADD DIALOG "KEYWORD",1,88,182,55,15,0,"&Abbrechen",0,0
   ADD DIALOG "KEYWORD",1,144,182,55,15,0,"&Lîschen",2,1
 END IF 
 DIALOG "KEYWORD",req%
 REMOVE DIALOG "KEYWORD"
 IF req% <> 0 THEN 
   IF kw$ = "" THEN kw$ = Auswahl$(0)
   IF req% = 1 THEN 
     REM ** Stichwort neu aufnehmen
     IF NOT EXISTS (kw$,keyword.ARTIKEYS) THEN 
       BLANK 
       keyword.artikeys = kw$
       CALL FStore("ARTIKEYS")
     END IF 
     SELECT KEY cuar% LOCK FILE "artikel" INDEX CodeAR.artikel
     IF stichwort.artikel <> "" THEN 
       stichwort.artikel = stichwort.artikel + ", " + kw$
     ELSE 
       stichwort.artikel = kw$
     END IF 
     CALL FStore("artikel")
   END IF 
   IF req% = 2 THEN 
     REM ** Stichwort aus Datei ARTIKEYS lîschen
     IF EXISTS (kw$,keyword.ARTIKEYS) THEN 
       SELECT KEY kw$ LOCK FILE "ARTIKEYS" INDEX keyword.ARTIKEYS
       REQUEST "Wollen Sie das Stichwort " + CHR$ (34) + kw$ + CHR$ (34),"wirklich aus der Stichwortliste entfernen?",135,req2%
       IF req2% = 1 THEN 
         SELECT REMOVE 
         SET STATUS "Stichwort gelîscht"
       END IF 
     ELSE 
       CALL Fehler("Das eingegebene Stichwort ist nicht in der Stichwortliste enthalten!","")
     END IF 
   END IF 
 END IF 
 SET STATUS "Bereit"
 FILE cfile$
 MOUSE ON 
 END SUB 
 
SUB ARTIStichSuch()
 REM REDIM AdrFound$( RECCOUNT ("ADRESSEN"))
 REDIM AuswArtikel$( RECCOUNT ("artikel"))
   b% = RECCOUNT ("artikel")
   FOR a% = 0 TO b%:AuswArtikel$(a%) = "":NEXT 
   feld$ = "stichwort.artikel"
   INDEX stichwort.artikel
   ok% = 1
   REM IF req% = 1 THEN 
     REM IF feld$ LIKE "Stichwort.artikel" THEN 
       CALL DFile(3,"artikeys" + _fpw$)
       FILE "artikeys"
       INDEX keyword
       SELECT FIRST 
       a% = 0
       SELECT WHERE keyword <> ""
       SELECT FIRST 
       WHILE NOT EOF ("artikeys")
         AuswArtikel$(a%) = LTRIM$ (keyword)
         a% = a% + 1
         SELECT NEXT 
       WEND 
       LAuswahl$ = AuswArtikel$(0)
       LAuswahl1$(0) = LAuswahl$
       CREATE DIALOG "ADRSTICHW",0,0,194,202,title$,"MS Sans Serif",8
       ADD DIALOG "ADRSTICHW",7,5,6,183,168,2,2,AuswArtikel$,Lauswahl1$,AuswArtikel$(0)
       ADD DIALOG "ADRSTICHW",1,33,180,55,16,1,"&OK",1,1
       ADD DIALOG "ADRSTICHW",1,93,180,55,16,0,"&Abbrechen",0,0
       DIALOG "ADRSTICHW",req5%
       MOUSE ON 
       REMOVE DIALOG "ADRSTICHW"
       IF req5% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         suna$ = "*" + LEFT$ (LAuswahl$) + "*"
       ELSE 
         ok% = 0
         AdrSuche% = 0
         REDIM AuswArtikel$( RECCOUNT ("Artikel"))
         GOTO Ende1
       END IF 
       MOUSE OFF 
       FOR cl% = 0 TO RECCOUNT ("Artikel")
         AuswArtikel$(cl%) = ""
       NEXT cl%
       FILE "artikel"
       INDEX feld$$
       a% = 0
       SELECT FIRST 
       SELECT KEY suna$ INDEX feld$$
       adrmax% = RECCOUNT ("artikel")
       cp% = 0
       lp% = 0
       pc% = 0
       WHILE NOT EOF ("artikel")
         pc% = pc% + 1
         cp% = INT (100 / adrmax% * pc%)
         IF cp% <> lp% THEN 
           SET STATUS "Verarbeitung: " + STR$ (cp%,"999") + "%"
           lp% = cp%
         END IF 
         IF Stichwort.artikel LIKE suna$ THEN 
           sok% = - 1
           IF MNdisabled%("DATALOCK") THEN 
             IF Sperre.artikel <> 0 AND Sperre.artikel <> vcodema% THEN sok% = 0
           END IF 
           IF sok% THEN 
             AuswArtikel$(a%) = LTRIM$ (Bezeichnung) + ", " + LTRIM$ (Artikelnummer) + SPACE$ (120) + STR$ (codear,"000000")
             a% = a% + 1
           END IF 
         END IF 
         SELECT NEXT 
       WEND 
       SET STATUS "Bereit"
       IF a% = 0 THEN 
         CALL Fehler("Es wurde kein Artikel mit diesem Stichwort gefunden!","")
         AdrSuche% = 0
         ok% = 0
       END IF 
     REM END IF 
     LAuswahl$ = AuswArtikel$(0)
     LAuswahl1$(0) = LAuswahl$
     req3% = 0
     IF a% <> 0 THEN 
       REM MENU 4,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
       MENU 4,3,1,"Auswahl&liste,F7","ArtAusw","Artikel aus der Auswahlliste auswÑhlen"
       CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"MS Sans Serif",8
       ADD DIALOG "ADRLISTE",7,5,8,328,161,2,2,AuswArtikel$,Lauswahl1$,AuswArtikel$(0)
       ADD DIALOG "ADRLISTE",1,114,174,56,16,1,"&OK",1,1
       ADD DIALOG "ADRLISTE",1,174,174,56,16,0,"&Abbrechen",0,0
       DIALOG "ADRLISTE",req3%
       MOUSE ON 
       REMOVE DIALOG "ADRLISTE"
       IF req3% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         ArtiSuche% = VAL ( RIGHT$ (LAuswahl$,6))
         artifound% = VAL ( RIGHT$ (LAuswahl$,6))
         ok% = 0
         SET STATUS "Adresse gefunden..."
       ELSE 
         ArtiSuche% = 0
       END IF 
     ELSE 
       artifound% = 0
       MENU 4,3,0
     END IF 
     IF ArtiSuche% = 0 AND ok% = 1 THEN 
       ArtiSuche% = 0
       ok% = 1
       REQUEST "Eintrag nicht gefunden!","Erweiterte Suche durchfÅhren?",135,req2%
       IF req2% = 1 THEN 
         ok% = 1
       ELSE 
         ok% = 0
       END IF 
     END IF 
     REM REDIM AuswArtikel$( RECCOUNT ("Artikel"))
   REM END IF 
 END SUB 
 
 
 ' Eintrag eines adressenbezogenen Dokumentes in die Termindatei
 ' ============================================================================
 
SUB ADRDokRegister1(textdatei%,codeak%)
 SET STATUS "Eintrag in Termindatei..."
 cfile$ = FILE 
 cdir$ = DIRECTORY 
 FILE "akquise"
 _vcodeak% = codeak%
 SELECT KEY textdatei% FILE "dokument" INDEX CodeDOK.dokument
 RNotiz$ = "Dokument (" + Gruppe.dokument + "): " + Dokument.dokument
 CALL AQRegister1(textdatei%)
 FILE cfile$
 DIRECTORY cdir$
 END SUB 
 
SUB AQRegister1(textdatei%)
 cfile$ = FILE 
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 DIM Aktionen$(300)
 FILE "AKTIONEN"
 INDEX CodeAK
 SELECT FIRST 
 a% = - 1
 WHILE NOT EOF ("AKTIONEN")
   a% = a% + 1
   Aktionen$(a%) = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
   SELECT NEXT 
 WEND 
 SELECT KEY _vcodeak%
 Aktion$ = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
 DIM Mitarbeiter$(300)
 FILE "SUPERVIS"
 INDEX CodeMA
 SELECT FIRST 
 a% = - 1
 WHILE NOT EOF ("SUPERVIS")
   a% = a% + 1
   Mitarbeiter$(a%) = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
   SELECT NEXT 
 WEND 
 SELECT KEY vcodema%
 MANachname$ = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
 datum$ = DATE$ ( TODAY ,"dd.mm.yy")
 Termin$ = DATE$ ( TODAY ,"dd.mm.yy")
 Nachname$ = Nachname.ADRESSEN
 Vorname$ = Vorname.ADRESSEN
 Stra·e$ = Stra·e.ADRESSEN
 Ort$ = PLZ.ADRESSEN + " " + Ort.ADRESSEN
 tmpku% = CodeKU.ADRESSEN
 REM RNotiz$ = ""
 CREATE DIALOG "AQREGISTER",0,0,355,220,title$,"MS Sans Serif",8
 ADD DIALOG "AQREGISTER",5,5,21,32,12,0,"&Datum"
 ADD DIALOG "AQREGISTER",6,5,8,33,12,0,0,Datum$,8
 ADD DIALOG "AQREGISTER",5,42,21,28,12,0,"&Termin"
 ADD DIALOG "AQREGISTER",6,42,8,33,12,0,0,Termin$,8
 ADD DIALOG "AQREGISTER",5,88,21,28,12,0,"Uhr&zeit"
 ADD DIALOG "AQREGISTER",6,88,8,25,12,0,0,Zeit$,5
 ADD DIALOG "AQREGISTER",5,125,21,28,18,0,"&Dauer"
 ADD DIALOG "AQREGISTER",6,125,8,25,12,0,0,Dauer$,5
 ADD DIALOG "AQREGISTER",5,5,36,123,12,0,"Zu&ordnung zur Aktion"
 ADD DIALOG "AQREGISTER",8,5,46,170,83,259,2,Aktion$,Aktionen$
 ADD DIALOG "AQREGISTER",5,5,66,139,8,0,"Eintragen in den Kalender des &Mitarbeiters"
 ADD DIALOG "AQREGISTER",8,5,76,170,91,259,2,MANachname$,Mitarbeiter$
 ADD DIALOG "AQREGISTER",5,5,96,139,8,0,"&Notiz"
 ADD DIALOG "AQREGISTER",6,5,106,170,109,4,2,RNotiz$,4000
 ADD DIALOG "AQREGISTER",4,186,5,161,81,0,"Adresse"
 ADD DIALOG "AQREGISTER",5,190,20,39,12,0,"Nachname"
 ADD DIALOG "AQREGISTER",5,190,30,32,12,0,"Vorname"
 ADD DIALOG "AQREGISTER",5,190,40,24,12,0,"Stra·e"
 ADD DIALOG "AQREGISTER",5,190,50,19,12,0,"Ort"
 ADD DIALOG "AQREGISTER",2,186,135,76,12,0,"Termin erledigt","j","n",Terminerl$
 ADD DIALOG "AQREGISTER",5,186,105,162,29,0,"Wenn Sie diesen Termin nur zu Informationszwecken aufnehmen mîchten, markieren Sie bitte die Option 'Termin erledigt'."
 ADD DIALOG "AQREGISTER",5,186,156,159,37,0,"Nach BetÑtigung der SchaltflÑche 'OK' wird der Eintrag in der Termindatei erzeugt."
 ADD DIALOG "AQREGISTER",5,230,20,116,12,128,Nachname$
 ADD DIALOG "AQREGISTER",5,230,30,116,12,128,Vorname$
 ADD DIALOG "AQREGISTER",5,230,40,116,12,0,Stra·e$
 ADD DIALOG "AQREGISTER",5,230,50,116,12,0,Ort$
 ADD DIALOG "AQREGISTER",1,190,62,153,15,0,"Aus&wahl",2,1
 ADD DIALOG "AQREGISTER",1,186,200,78,15,0,"&OK",1,1
 ADD DIALOG "AQREGISTER",1,268,200,78,15,0,"&Abbrechen",0,0
 _ok% = 0
 WHILE _ok% = 0
   DIALOG "AQREGISTER",req%
   IF req% = 2 THEN 
     kunr% = ADRSuche%(0)
     IF kunr% <> 0 THEN 
       SELECT KEY kunr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
       Nachname$ = Nachname.ADRESSEN
       Vorname$ = Vorname.ADRESSEN
       Stra·e$ = Stra·e.ADRESSEN
       Ort$ = PLZ.ADRESSEN + " " + Ort.ADRESSEN
       tmpku% = CodeKU.ADRESSEN
     END IF 
   END IF 
   IF req% = 0 THEN _ok% = 2
   IF req% = 1 THEN _ok% = 1
 WEND 
 REMOVE DIALOG "AQREGISTER"
 IF _ok% = 1 THEN 
   FILE "akquise"
   BLANK 
   cuaq% = SER ("akquise",1)
   codeaq.akquise = cuaq%
   codeKU.AKQUISE = tmpku%
   CodeAK.AKQUISE = VAL ( MID$ (Aktion$, LEN (Aktion$) - 6,6))
   CodeMA.AKQUISE = VAL ( MID$ (MANachname$, LEN (MANachname$) - 6,6))
   SELECT KEY tmpku% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
   nachname.akquise = nachname.adressen
   Wertung.AKQUISE = 0
   Datum.AKQUISE = Datum$
   CodeDOK.akquise = textdatei%
   SELECT KEY codema.akquise FILE "supervis" INDEX codema.supervis
   Bearbeiter.akquise = nachname.supervis
   notiz.akquise = rnotiz$
   termin.akquise = Termin$
   erledigt_Termin.akquise = Terminerl$
   CALL FStore("akquise")
 END IF 
 FILE cfile$
 MOUSE ON 
 END SUB 
 
 
FUNCTION ExtDM$(Wert%)
 tDM$ = STR$ (Wert%,"99999999.99999")
 KommaPos% = INSTR (tDM$,",")
 IF LEN ( TRIM$ (tDM$)) > KommaPos% + 1 AND KommaPos% <> 0 THEN 
   tDM$ = STR$ (Wert%,"999999999.99999")
 ELSE 
   tDM$ = STR$ (Wert%,"999999999.00")
 END IF 
 ExtDM$ = LTRIM$ ( TRIM$ (tDM$))
 END FUNCTION 
 
 
 
 
 
 
 
 
 
 
 

