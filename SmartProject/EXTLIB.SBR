  CALL main()
 
 '      ***************************************
 '      ** WAWI/FACTURA - Library Funktionen **
 '      ** (C)'2001 CODie software products e.K. **
 '      ** Stand: 21.09.2001             **
 '      ***************************************
 '  07.10.98 weitgehend EurofÑhig in der Artikelerfassung
 
 
 '      **********************************************
 '      ** Routinen fÅr Formular "ADRESSEN"         **
 '      ** (Angebot/Rechnung/Lieferschein/AuftrÑge) **
 '      **********************************************
 
 
 ' Verzweigen in Angebotsbearbeitung
 ' =======================================================================
 
SUB ADRAngebot()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 scode% = knr% * 10 + 1
 ok% = 1
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine Angebote erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
   cums% = 0
 ELSE 
   cums% = CodeMS.master
 END IF 
 IF ok% = 1 THEN 
   CALL Master(1)
   neumaster$ = "j"
 END IF 
 END SUB 
 
 
 ' Verzweigen in Rechnungsbearbeitung
 ' =======================================================================
 
SUB ADRRechnung()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 codekuorig% = CodeKU.adressen
 codekurech% = codekuorig%
 FILE "master"
 scode% = codekuorig% * 10 + 2
 ok% = 1
 IF FORM LIKE "ADR*" THEN 
   SELECT FIRST FILE "MASTER" INDEX QuickCodeKU.MASTER
   SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 ELSE 
   SELECT FIRST FILE "MASTER" INDEX codems.MASTER
   SELECT KEY cums% FILE "MASTER" INDEX codems.MASTER
 END IF 

 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine Rechnungen erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
   cums% = 0
 ELSE 
   IF FORM LIKE "ADR*" THEN 
     cums% = CodeMS.master
   END IF 
 END IF 
 IF ok% = 1 THEN 
   CALL Master(2)
   neumaster$ = "j"
 END IF 
 
 END SUB 
 
 
 ' Verzweigen in Lieferscheinbearbeitung
 ' =======================================================================
 
SUB ADRLiefer()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 REM scode% = knr% * 10 + 3  QuickCodeKU.MASTER
 scode% = knr% * 10 + 3
 ok% = 1
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine Lieferscheine erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
   cums% = 0
 ELSE 
   cums% = CodeMS.master
 END IF 
 IF ok% = 1 THEN 
   CALL Master(3)
   neumaster$ = "j"
 END IF 
 END SUB 
 
 
 ' Verzweigen in Auftragssbearbeitung
 ' =======================================================================
 
SUB ADRAuftrag()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 scode% = knr% * 10 + 4
 ok% = 1
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine AuftrÑge erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
   cums% = 0
 ELSE 
   cums% = CodeMS.master
 END IF 
 IF ok% = 1 THEN 
   CALL Master(4)
   neumaster$ = "j"
 END IF 
 END SUB 
 
 
 ' Verzweigen in Bestellungsbearbeitung
 ' =======================================================================
 
SUB ADRBestell()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 scode% = knr% * 10 + 5
 ok% = 1
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine Bestellungen erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
   cums% = 0
 ELSE 
   cums% = CodeMS.master
 END IF 
 IF ok% = 1 THEN 
   CALL Master(5)
   neumaster$ = "j"
 END IF 
 END SUB 
 
 
 ' Verzweigen in die Gutschrifterstellung
 ' =======================================================================
 
SUB ADRGutschr()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 scode% = knr% * 10 + 7
 ok% = 1
 IF FORM LIKE "ADR*" THEN 
   SELECT FIRST FILE "MASTER" INDEX QuickCodeKU.MASTER
   SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 ELSE 
   SELECT FIRST FILE "MASTER" INDEX codems.MASTER
   SELECT KEY cums% FILE "MASTER" INDEX codems.MASTER
 END IF 
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine Gutschriften erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
   cums% = 0
 ELSE 
   IF FORM LIKE "ADR*" THEN 
     cums% = CodeMS.master
   END IF 
 END IF 
 IF ok% = 1 THEN 
   globalGutsch$ = "TRUE"
   CALL Master(7)
   neumaster$ = "j"
 END IF 
 END SUB 
 

 ' Verzweigen in die Anfrageerstellung
 ' ======================================================================= 
SUB ADRAnfrage()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 scode% = knr% * 10 + 8
 ok% = 1
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine externe Preisanfrage erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
   cums% = 0
 ELSE 
   cums% = CodeMS.master
 END IF 
 IF ok% = 1 THEN 
   CALL Master(8)
   neumaster$ = "j"
 END IF 
 END SUB 

 ' Verzweigen in die Mahnungserstellung
 ' =======================================================================
 
SUB ADRMahnung()
 knr% = Codeku.adressen
 IF disabled%("MAHNUNG") THEN END SUB 
 CALL DFile(3,"TEILRAUS" + _fpw$)
 REM cudo% = CodeDOK.DOKUMENT
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "MAHNGES"
 IF ProjectJN$ = "TRUE" THEN maske$ = "MAHNGES"
 FILE "MAHNUNG"
 INDEX codeku.MAHNUNG
 SELECT FIRST 
 
 
 WHILE _formend% = 0
   MAHNsub% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     SET HEADING title$ + " - Mahnverwaltung"
     OPEN FORM GPrjForm$ + maske$
     SET STATUS "Mahnverwaltung"
     CALL MNMAHN1()
     CALL MahnINT()
     FORM 
     SET DISPLAY ON 
   END IF 
   MENU ON 
   FORM 
   MOUSE ON 
   REM dokgrup$ = Gruppe.Dokument
   FORM 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE MAHNsub%
   CASE 1
     codems% = codems.mahnung
     CALL Mahnung(codems%,euromas%)
   CASE 2
     REM CALL DOKSRV1()
   END SELECT 
 WEND 
 _formend% = 0
 REM IF FileChanged%("MAHNUNG") = 1 THEN CALL FStore("MAHNUNG")

  END SUB 
  
SUB MNMAHN1()
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
SUB MahnINT()
 SELECT FORM KEY knr% FILE "Adressen" INDEX codeku.adressen
 SELECT FORM KEY knr% FILE "MAHNUNG" INDEX codeku.MAHNUNG
 END SUB 








 REM Formulare fÅr autom.Erfassung
 REM *****************************
SUB ADRAngebot1()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 scode% = knr% * 10 + 1
 ok% = 1
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine Angebote erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
 END IF 
 IF ok% = 1 THEN 
   CALL Master1(1)
   neumaster$ = "j"
 END IF 
 END SUB 
 
 
 ' Verzweigen in Rechnungsbearbeitung
 ' =======================================================================
 
SUB ADRRechnung1()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 scode% = knr% * 10 + 2
 ok% = 1
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine Rechnungen/Gutschriften erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
 END IF 
 IF ok% = 1 THEN 
   CALL Master1(2)
   neumaster$ = "j"
 END IF 
 
 END SUB 
 
 
 ' Verzweigen in Lieferscheinbearbeitung
 ' =======================================================================
 
SUB ADRLiefer1()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 scode% = knr% * 10 + 3
 ok% = 1
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine Lieferscheine erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
 END IF 
 IF ok% = 1 THEN 
   CALL Master1(3)
   neumaster$ = "j"
 END IF 
 END SUB 
 
 
 ' Verzweigen in Auftragssbearbeitung
 ' =======================================================================
 
SUB ADRAuftrag1()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 scode% = knr% * 10 + 4
 ok% = 1
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine AuftrÑge erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
 END IF 
 IF ok% = 1 THEN 
   CALL Master1(4)
   neumaster$ = "j"
 END IF 
 END SUB 
 
 
 ' Verzweigen in Bestellungsbearbeitung
 ' =======================================================================
 
SUB ADRBestell1()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 scode% = knr% * 10 + 5
 ok% = 1
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine Bestellungen erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
 END IF 
 IF ok% = 1 THEN 
   CALL Master1(5)
   neumaster$ = "j"
 END IF 
 END SUB 
 
 
 ' Verzweigen in die Gutschrifterstellung
 ' =======================================================================
 
SUB ADRGutschr1()
 CALL Server("LISTBOXINIT","Auswahl")
 artausw$ = "n"
 knr% = CodeKU.adressen
 FILE "master"
 scode% = knr% * 10 + 7
 ok% = 1
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Es wurden noch keine Gutschriften erfa·t!","Erfassung fortfÅhren?",130,req%
   IF req% = 0 THEN ok% = 0
 END IF 
 IF ok% = 1 THEN 
   CALL Master1(7)
   neumaster$ = "j"
 END IF 
 END SUB 
 
  
 
 
 
 
 
 ' Formular "ADRESSEN" aktualisieren
 ' =======================================================================
  
SUB ADRUpdate()
 CALL DFile(3,"TEILRAUS" + _fpw$)
 CALL DFile(3,"RAUSGANG" + _fpw$)
 cfile$ = FILE 
 FILE "master"
 scode% = CodeKU.adressen * 10 + 1
 REM SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF GCodieADR$ LIKE "TRUE" THEN 
 ELSE 
   IF rechsperre LIKE "j" THEN 
     f.s0.enabled = 0
     f.s0.visible = 0
     f.s1.enabled = 0
     f.s1.visible = 0
     f.s2.enabled = 0
     f.s2.visible = 0
     f.s3.enabled = 0
     f.s3.visible = 0
     f.s4.enabled = 0
     f.s4.visible = 0
     f.s5.enabled = 0
     f.s5.visible = 0
     f.s6.enabled = 0
     f.s6.visible = 0
   ELSE 
     f.s0.enabled = - 1
     f.s0.visible = - 1
     f.s1.enabled = - 1
     f.s1.visible = - 1
     f.s2.enabled = - 1
     f.s2.visible = - 1
     f.s3.enabled = - 1
     f.s3.visible = - 1
     f.s4.enabled = - 1
     f.s4.visible = - 1
     f.s5.enabled = - 1
     f.s5.visible = - 1
     f.s6.enabled = - 1
     f.s6.visible = - 1
   END IF 
 END IF 
 IF EXISTS (scode%,quickcodeku.MASTER) THEN 
   IF _projekt$ LIKE "WAWI" THEN 
     MENU 6,1,2,"&Kundenbestellung","ADRAngebot"
     angebot$ = "&Kundenbestell Æ"
   ELSE 
     MENU 6,1,2,"&Angebote","ADRAngebot"
     angebot$ = "&Angebote Æ"
   END IF 
 ELSE 
   IF _projekt$ LIKE "WAWI" THEN 
     MENU 6,1,1,"&Kundenbestellung","ADRAngebot"
     angebot$ = "&Kundenbestell"
   ELSE 
     MENU 6,1,1,"&Angebote","ADRAngebot"
     angebot$ = "&Angebote"
   END IF 
 END IF 
 scode% = CodeKU.adressen * 10 + 2
 REM SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF EXISTS (scode%,quickcodeku.MASTER) THEN 
   MENU 6,2,2,"&Rechnungen","ADRRechnung"
   rechnung$ = "&Rechnungen Æ"
 ELSE 
   MENU 6,2,1,"&Rechnungen","ADRRechnung"
   rechnung$ = "&Rechnungen"
 END IF 
 scode% = CodeKU.adressen * 10 + 3
 REM SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF EXISTS (scode%,quickcodeku.MASTER) THEN 
   MENU 6,3,2,"Liefers&chein","ADRLiefer"
   lieferschein$ = "Liefers&cheine Æ"
 ELSE 
   MENU 6,3,1,"Liefers&chein","ADRLiefer"
   lieferschein$ = "Liefers&cheine"
 END IF 
 scode% = CodeKU.adressen * 10 + 4
 REM SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF EXISTS (scode%,quickcodeku.MASTER) THEN 
   MENU 6,4,2,"A&uftrÑge","ADRAuftrag"
   auftrag$ = "A&uftrÑge Æ"
 ELSE 
   MENU 6,4,1,"A&uftrÑge","ADRAuftrag"
   auftrag$ = "A&uftrÑge"
 END IF 
 scode% = CodeKU.adressen * 10 + 5
 REM SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF EXISTS (scode%,quickcodeku.MASTER) THEN 
   MENU 6,5,2,"Beste&llung","ADRBestell"
   bestellung$ = "Beste&llung Æ"
 ELSE 
   MENU 6,5,1,"Beste&llung","ADRBestell"
   bestellung$ = "Beste&llung"
 END IF 
 scode% = CodeKU.adressen * 10 + 7
 REM SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF EXISTS (scode%,quickcodeku.MASTER) THEN 
   MENU 6,6,2,"&Gutschrift","ADRGutschr"
   gutschrift$ = "&Gutschrift Æ"
 ELSE 
   MENU 6,6,1,"&Gutschrift","ADRGutschr"
   gutschrift$ = "&Gutschrift"
 END IF 
 scode% = CodeKU.adressen * 10 + 8
 REM SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF EXISTS (scode%,quickcodeku.MASTER) THEN 
   MENU 6,7,2,"ext.Preisanfra&ge","ADRAnfrage"
   anfrage$ = "ext.Preisanfra&ge Æ"
 ELSE 
   MENU 6,7,1,"ext.Preisanfra&ge","ADRAnfrage"
   anfrage$ = "ext.Preisanfra&ge"
 END IF 
 MahnSumme1% = 0
 stufe% = 0
 CALL DFile(3,"MAHNUNG" + _fpw$)
 FILE "mahnung"
 scode% = CodeKU.adressen * 10 + 6
 REM SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF EXISTS (codeku.adressen,codeku.MAHNUNG) THEN 
   MENU 6,8,2,"&Mahnung","ADRMahnung"
   mahnung$ = "&Mahnung Æ"
   SELECT FIRST FILE "MAHNUNG" INDEX codeku.mahnung
   SELECT KEY codeku.adressen FILE "MAHNUNG" INDEX codeku.mahnung
   MahnSumme1% = 0
   stufe% = 0
   REM CALL Fehler("Mahnung Anzeige der Mahnstufen","")

   WHILE NOT EOF ("Mahnung") AND codeku.mahnung = codeku.adressen
      stmahn$ = statusmahn.mahnung
     IF UCASE$ (statusmahn.mahnung) <> "J" THEN 

       codere% = codere.mahnung
       dat$ = "rausgang"
       mahnok% = 0
       IF EXISTS (codere%,codere.Teilraus) AND mahnok% = 1 THEN 
         FILE "teilraus"
         INDEX codere.teilraus
         SELECT FIRST 
         SELECT KEY codere% FILE "teilraus" INDEX codere.teilraus
         CALL SumTeil(codems%,codere%,"teilraus",dat$)
         FILE dat$
         SELECT FIRST 
         SELECT KEY codere% FILE dat$ INDEX codere.dat$
         REM rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
         restEu% = GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$
       ELSE 
         rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
         restEu% = GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$
       END IF 

       MahnSumme1% = MahnSumme1% + resteu%
       IF resteu% > 0 OR mahnok% = 0 THEN 
         IF Mahndatum1.mahnung > 0 THEN 
           IF stufe% < 1 THEN Stufe% = 1
         END IF 
         IF Mahndatum2.mahnung > 0 THEN 
           IF stufe% < 2 THEN Stufe% = 2
         END IF 
         IF Mahndatum3.mahnung > 0 THEN 
           IF stufe% < 3 THEN Stufe% = 3
         END IF 
         IF Mahndatum4.mahnung > 0 THEN 
           IF stufe% < 4 THEN Stufe% = 4
         END IF 
         IF Mahndatum5.mahnung > 0 THEN 
           IF stufe% < 5 THEN Stufe% = 5
         END IF 
       END IF 
     END IF 
     SELECT NEXT FILE "Mahnung" INDEX codeku.mahnung
   WEND 
   SELECT CASE stufe%
     CASE 0
       f.s0.BackColor = 253
       f.s0.ForeColor = 1
     CASE 1
       f.s0.BackColor = 9
       f.s0.ForeColor = 0
     CASE 2
       f.s0.BackColor = 1
       f.s0.ForeColor = 0
     CASE 3
       f.s0.BackColor = 2
       f.s0.ForeColor = 1
     CASE ELSE 
       f.s0.BackColor = 2
       f.s0.ForeColor = 1
   END SELECT 
 ELSE 
   MENU 6,8,1,"&Mahnung","ADRMahnung"
   mahnung$ = "&Mahnung"
   ON ERROR GOTO e100520061
   f.s0.BackColor = 253
   f.s0.ForeColor = 1
e100520061: 
   ON ERROR GOTO ErrorHandler
 END IF 

 cunr% = codeku.adressen
 REM IF Sperre.MAADR <> 0 THEN 
   REM IF MNdisabled%("DATALOCK") THEN 
     REM MAADRLock$ = "gesperrt"
   REM ELSE 
     REM SELECT KEY Sperre.MAADR FILE "SUPERVIS" INDEX CodeMA.SUPERVIS
     REM MAADRLock$ = "gesperrt durch " + Name.SUPERVIS
   REM END IF 
   REM MENU 2,6,2
 REM ELSE 
   REM MAADRLock$ = "freier Zugriff"
   REM MENU 2,6,1
 REM END IF 
 FILE cfile$
 END SUB 
 
 
 
 
 '      **********************************************************
 '      ** Artikelzugang/Verlust nach Datenaustausch verrechnen **
 '      **********************************************************
 
SUB ABZUVerech()
 MOUSE OFF 
 CALL DFile(3,"ABZUGANG" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 codeaz% = VAL (ReadConfig$("FACTURA.XCHANGE","FirstIn.ABZUGANG"))
 FILE "abzugang"
 INDEX codeaz.abzugang
 SELECT FIRST 
 IF codeaz% = 0 THEN 
   REQUEST "Datenaustausch abgeschlossen!","",2
 END IF 
 IF codeaz% <> 0 THEN 
   SELECT KEY codeaz% FILE "abzugang" INDEX codeaz.abzugang
   WHILE NOT EOF ("abzugang")
     codeaz$ = STR$ (codeaz%,"000000")
     SET STATUS codeaz$
     codear% = codear.abzugang
     art% = art.abzugang
     artzugang% = artzugang.abzugang
     artabgang% = artabgang.abzugang
     anzahl% = anzahl.abzugang
     vknetto% = vknetto.abzugang
     abgleich% = abgleich.abzugang
     FILE "artikel"
     SELECT KEY codear% LOCK FILE "artikel" INDEX codear.artikel
     IF FOUND ("artikel") THEN 
       SELECT CASE art%
         CASE 0
           REM Abgang durch Bruch = negativer Wert
           bestand.artikel = bestand.artikel + anzahl%
           ek.artikel = vknetto%
         CASE 3
           REM Abgang durch Lieferschein = positiver Wert
           bestand.artikel = bestand.artikel - anzahl%
         CASE 6
           REM Zugang 
           IF abgleich% <> 1 THEN 
             bestand.artikel = bestand.artikel + anzahl%
             ek.artikel = vknetto%
           END IF 
         CASE 7
           REM Gutschrift
           bestand.artikel = bestand.artikel + anzahl%
       END SELECT 
       CALL FStore("artikel")
     END IF 
     FILE "abzugang"
     SELECT NEXT INDEX codeaz.abzugang
     codeaz% = codeaz.abzugang
     td$ = STR$ (codeaz%,"000000")
     CALL WriteConfig("FACTURA.XCHANGE","FirstIn.ABZUGANG",td$)
   WEND 
   CALL WriteConfig("FACTURA.XCHANGE","FirstIn.ABZUGANG","0")
   IF codeaz% = 0 THEN 
     REQUEST "Datenaustausch abgeschlossen!","",2
   END IF 
 END IF 
 MOUSE ON 
 SET STATUS "Datenaustausch beendet!"
 END SUB 
 
 
 
 
 
 
 '      ***************************
 '      ** Artikelzugang/Verlust **
 '      ***************************
 
SUB ABZUGANG(zugart%)
 CALL DFile(3,"ABZUGANG" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"GRUPPEN" + _fpw$)
 CALL DFile(3,"Liefruck" + _fpw$)
 CALL DFile(3,"serienr" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 IF DEFA$ = "MEGA" THEN 
   CALL DFile(3,"KSATZ" + _fpw$)
   CALL DFile(3,"SSATZ" + _fpw$)
 END IF 
 DIM Artikel$(1000)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 FILE "gruppen"
 INDEX CodeGR
 SELECT FIRST 
 a% = 0
 REDIM ProdGruppen$( RECCOUNT ("gruppen"))
 WHILE NOT EOF ("gruppen")
   ProdGruppen$(a%) = Kurzbezeichnung.gruppen
   a% = a% + 1
   SELECT NEXT 
 WEND 
 
 REM -----------Einstellung des Modus, der darÅber entscheidet, wie der Artikelzugang erfolgt
 REM -------- zugopt% = 1. normaler Zugang und Storno (Zugangswert<>0)
 REM ---------          2. Inventurzugang  und Storno  (Inventurplusdifferenz)
 REM ---------          3. Rabatt-Zugang   und Storno  (Menge*MP=Nettowert mit manuellen 
 REM                                                   Buchungsbeleg), d.h. RabattzugÑnge                                                                  
 REM                                                   verÑndern nicht den MP
 REM ---------          4. Zugang ohne Rechnung und Storno
 REM ---------          5. EK+Rechnungsnr nachbuchen von:Zugang ohne Rechnung und Storno
 REM 
 REM --------- zugart%=0 und zugabg%=0 -> Zugang / zugabg%=1 -> Storno eines Zugangs
 REM ---------
 REM ---------
 REM -----------Einstellung des Modus, der darÅber entscheidet, wie der Artikelabgang erfolgt 
 REM -------- zugopt% = 1. normaler Abgang und Storno(Lieferschein/Gutschrift  -> nicht in dieser Routine
 REM --------           2. Inventurabgang  und Storno  (Inventurminusdifferenz)
 REM --------           3. Abgang durch Bruch usw und Storno
 REM
 REM -------- zugart%=1 und zugabg%=0 -> Abgang / zugabg%=1 -> Storno eines Abgangs 
 
 REM PrÅfung, ob Periode abgeschlossen ist
 IF DEFA$ = "MEGA" THEN 
   CALL PeriodenPruef()
   IF periode% = 0 THEN END SUB 
 END IF 
 
 IF zugart% = 0 AND DEFA$ = "MEGA" THEN 
   zugopt% = 1
   zugabg% = 0
   CREATE DIALOG "ZUGART",0,0,180,148,title$,"MS Sans Serif",8
   ADD DIALOG "ZUGART",9,7,2,20,20,2
   ADD DIALOG "ZUGART",3,32,6,54,11,0,"Zugang",0,zugabg%
   ADD DIALOG "ZUGART",3,100,6,54,11,0,"Storno",1,zugabg%
   ADD DIALOG "ZUGART",4,0,22,178,61,0,"Zugangs/Stornoart"
   ADD DIALOG "ZUGART",3,32,34,132,9,0,"normaler Zugang und Storno",1,zugopt%
   ADD DIALOG "ZUGART",3,32,45,132,10,0,"Inventurzugang und Storno",2,zugopt%
   ADD DIALOG "ZUGART",3,32,56,132,10,0,"Rabattzugang und Storno",3,zugopt%
   ADD DIALOG "ZUGART",3,32,67,132,10,0,"Zugang ohne Rechnung und Storno",4,zugopt%
   ADD DIALOG "ZUGART",3,8,104,169,9,0,"Zugang ohne Rechnung und Storno nachbuchen",5,zugopt%
   ADD DIALOG "ZUGART",4,1,86,179,40,0,"Nachbuchung von EKÔs"
   ADD DIALOG "ZUGART",1,33,129,55,16,1,"&OK",1,1
   ADD DIALOG "ZUGART",1,90,129,55,16,0,"&Abbrechen",0,0
   DIALOG "ZUGART",reqzu%
   REMOVE DIALOG "ZUGART"
   IF reqzu% = 0 THEN END SUB 
 END IF 
 IF zugart% = 1 THEN 
   zugabg% = 0
   zugopt% = 2
   CREATE DIALOG "ZUGART",0,0,180,104,title$,"MS Sans Serif",8
   ADD DIALOG "ZUGART",9,6,1,20,21,2
   ADD DIALOG "ZUGART",3,32,6,54,11,0,"Abgang",0,zugabg%
   ADD DIALOG "ZUGART",3,100,6,54,11,0,"Storno",1,zugabg%
   ADD DIALOG "ZUGART",4,0,22,178,61,0,"Abgangs/Stornoart"
   ADD DIALOG "ZUGART",3,32,44,132,10,0,"Inventurabgang und Storno",2,zugopt%
   ADD DIALOG "ZUGART",3,32,56,132,9,0,"Abgang durch Bruch usw. und Storno",3,zugopt%
   ADD DIALOG "ZUGART",1,33,85,55,16,1,"&OK",1,1
   ADD DIALOG "ZUGART",1,90,85,55,16,0,"&Abbrechen",0,0
   DIALOG "ZUGART",reqzu%
   REMOVE DIALOG "ZUGART"
   IF reqzu% = 0 THEN END SUB 
 END IF 
 _req% = 1
 WHILE _req% = 1
   suna$ = ""
   IF zugabg% = 0 THEN TEXTRahmen$ = "Artikelzugang"
   IF zugabg% = 1 THEN TEXTRahmen$ = "Artikelstorno"
   IF zugopt% < 5 OR DEFA$ <> "MEGA" THEN 
   REM IF zugopt% < 5 THEN 
     CREATE DIALOG "SCHAuswahl",0,0,237,150,title$,"MS Sans Serif",8
     ADD DIALOG "SCHAuswahl",4,0,1,237,125,0,""
     ADD DIALOG "SCHAuswahl",9,4,12,20,23,2
     ADD DIALOG "SCHAuswahl",4,30,14,200,80,0," Suche Åber... "
     ADD DIALOG "SCHAuswahl",5,30,100,147,8,0,"&Suchbezeichnung"
     ADD DIALOG "SCHAuswahl",6,30,110,200,12,0,0,suna$,20
     ADD DIALOG "SCHAuswahl",3,38,25,60,12,0,"Artikel&nummer",1,asuchopt%
     ADD DIALOG "SCHAuswahl",3,38,37,60,12,0,"&Bestellnummer",2,asuchopt%
     ADD DIALOG "SCHAuswahl",3,38,49,79,12,0,"Artikelbe&zeichnung",3,asuchopt%
     ADD DIALOG "SCHAuswahl",3,38,61,103,12,0,"Produkt&gruppen/Leistungen",4,asuchopt%
     ADD DIALOG "SCHAuswahl",8,48,75,169,66,259,2,Auswahl$,ProdGruppen$
     ADD DIALOG "SCHAuswahl",1,64,130,55,15,1,"&Weiter",1,1
     ADD DIALOG "SCHAuswahl",1,122,130,55,15,0,"&Abbruch",0,0
     DIALOG "SCHAuswahl",_req%
     REMOVE DIALOG "SCHAuswahl"
   ELSE 
     CREATE DIALOG "SCHAuswahl",0,0,237,70,title$,"MS Sans Serif",8
     ADD DIALOG "SCHAuswahl",4,0,1,237,46,0,""
     ADD DIALOG "SCHAuswahl",5,29,11,147,8,0,"Bitte geben Sie die Belegnummer ein"
     ADD DIALOG "SCHAuswahl",9,4,12,20,23,2
     ADD DIALOG "SCHAuswahl",6,29,20,200,13,0,0,Belegnralt$,20
     ADD DIALOG "SCHAuswahl",1,56,49,55,16,1,"&Weiter",1,1
     ADD DIALOG "SCHAuswahl",1,115,49,55,16,0,"&Abbruch",0,0
     DIALOG "SCHAuswahl",_req%
     REMOVE DIALOG "SCHAuswahl"
   END IF 
   IF _req% = 1 THEN 
     cuart% = 0
     SELECT CASE asuchopt%
     CASE 1
       feld$ = "artikelnummer.artikel"
     CASE 2
       feld$ = "bestellnummer.artikel"
     CASE 3
       feld$ = "bezeichnung.artikel"
     CASE 4
       feld$ = "bezeichnung.artikel"
     END SELECT 
     IF asuchopt% > 3 THEN 
       SELECT KEY Auswahl$ FILE "gruppen" INDEX Kurzbezeichnung.gruppen
       cugrp% = CodeGR.gruppen
       CALL Server("LISTBOXINIT","Auswahl")
       FILE "ARTIKEL"
       INDEX CodeGR.ARTIKEL
       SELECT FIRST 
       SELECT KEY cugrp%
       artlistok% = 0
       WHILE CodeGR.ARTIKEL = cugrp% AND NOT EOF ("ARTIKEL")
         item$ = Bezeichnung.ARTIKEL + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
         IF Bezeichnung.ARTIKEL LIKE "*" + suna$ + "*" OR Beschreibung.ARTIKEL LIKE "*" + suna$ + "*" THEN 
           CALL Server("LISTBOXADD",item$)
           artlistok% = 1
         END IF 
         SELECT NEXT FILE "ARTIKEL" INDEX CodeGR.ARTIKEL
       WEND 
       IF artlistok% <> 0 THEN 
          CALL Server("LISTBOXSHOW","")
       ELSE 
          CALL Fehler("Keine entsprechenden Artikel gefunden!","")
       END IF 
       MOUSE ON 
       erg$ = ServerReply$()
       IF erg$ <> "" THEN 
         cuart% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
       END IF 
     ELSE 
      IF zugopt% <> 5 THEN 
       FILE "ARTIKEL"
       INDEX feld$$
       SET STATUS "Suche Artikel..."
       SELECT KEY suna$ INDEX feld$$
       IF UCASE$ ( LEFT$ (feld$$, LEN (suna$))) <> UCASE$ (suna$) THEN 
         IF asuchopt% = 1 OR asuchopt% = 2 THEN 
           cuart% = 0
         ELSE 
           REQUEST "Eintrag nicht gefunden!","Erweiterte Suche durchfÅhren?",130,req%
           IF req% = 1 THEN 
             suna$ = "*" + suna$ + "*"
             wi% = 0
             CALL Server("LISTBOXINIT","Artikelauswahl")
             FILE "ARTIKEL"
             INDEX CodeAR.ARTIKEL
             SELECT FIRST 
             MOUSE OFF 
             artlistok% = 0
             CALL Gauge(1,"Artikeldatei wird durchsucht...")
             _prozt% = 0
             _anz% = RECCOUNT ("ARTIKEL")
             WHILE NOT EOF ("ARTIKEL")
               _proz% = INT ((100 / _anz%) * CodeAR.ARTIKEL)
               IF _proz% > 100 THEN _proz% = 100
               IF _proz% < 2 THEN _proz% = 2
               IF _proz% <> _prozt% THEN 
                 _prozt% = _proz%
                 SET STATUS "erweiterte Suche... " + STR$ (_prozt%,"999") + " %"
                 CALL Gauge(_proz%,"")
               END IF 
               adrfound% = 0
               IF feld$$ LIKE suna$ THEN 
                 wi% = wi% + 1
                 item$ = Bezeichnung.ARTIKEL + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
                 CALL Server("LISTBOXADD",item$)
                 artlistok% = 1
                 CALL Server("GaugeMessage","Artikeldatei wird durchsucht... " + TRIM$ ( STR$ (wi%,"9999")) + " gefunden")
               END IF 
               SELECT NEXT FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
             WEND 
             CALL Gauge(0,"")
             SET STATUS ""
             IF wi% <> 0 AND artlistok% <> 0 THEN 
               SET STATUS "Bitte wÑhlen Sie einen Artikel aus"
               REM MENU 2,6,1,"aus Suchliste &wÑhlen,F7","ADRWahl"
               CALL Server("LISTBOXSHOW","Bitte wÑhlen Sie den gewÅnschten Artikel aus:")
               erg$ = ServerReply$()
               IF erg$ <> "" THEN 
                 cuart% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
               END IF 
             ELSE 
               cuart% = 0
               CALL Fehler("Es wurde kein entsprechender Artikel gefunden!","")
             END IF 
           END IF 
         END IF 
       ELSE 
         cuart% = CodeAR.ARTIKEL
       END IF 
     END IF 
   END IF 
 
   REM -- Zugang buchen --
 
   IF cuart% > 0 OR zugopt% = 5 THEN 
     IF zugopt% <> 5 THEN 
       SELECT KEY cuart% LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
     END IF 
     Anzahl% = 1
     IF DEFA$ <> "MEGA" AND zugart% = 0 THEN 
       serienr$ = ""
       EK% = LieferEK.artikel
           IF mastform$ LIKE "EUR" THEN 
             EK% = LieferEKeu.ARTIKEL
           ELSE 
             EK% = LieferEK.ARTIKEL
           END IF 
       CREATE DIALOG "ABZUGANG",104,82,292,239,title$,"MS Sans Serif",8
       ADD DIALOG "ABZUGANG",4,0,0,292,211,0,""
       ADD DIALOG "ABZUGANG",9,4,10,20,22,2
       ADD DIALOG "ABZUGANG",5,36,9,68,10,0,Artikelnummer.ARTIKEL
       ADD DIALOG "ABZUGANG",5,107,9,180,10,128,Bezeichnung.ARTIKEL
       ADD DIALOG "ABZUGANG",4,36,24,253,100,0," Beschreibung "
       ADD DIALOG "ABZUGANG",5,38,36,244,85,128,Beschreibung.ARTIKEL
       ADD DIALOG "ABZUGANG",5,36,128,62,10,0,"aktueller Bestand:"
       ADD DIALOG "ABZUGANG",5,100,128,170,10,0, LTRIM$ ( STR$ (Bestand.ARTIKEL,",999999999.00")) + " " + ME_.ARTIKEL
       REM ADD DIALOG "ABZUGANG",5,202,128,70,10,0,ME_.ARTIKEL
       ADD DIALOG "ABZUGANG",5,36,140,37,10,0,"letzter EK:"
       IF mastform$ LIKE "EUR" THEN 
         ADD DIALOG "ABZUGANG",5,100,140,200,10,0, LTRIM$ ( STR$ (LieferEKEU.ARTIKEL,",9999999999.00")) + " EUR " + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yyyy") + "/Mischpreis:" + LTRIM$ ( STR$ (EKEU.ARTIKEL,",9999999999.00"))
       ELSE 
         ADD DIALOG "ABZUGANG",5,100,140,200,10,0, LTRIM$ ( STR$ (LieferEK.ARTIKEL,",9999999999.00")) + " " + waehrung.artikel + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yyyy") + "/Mischpreis:" + LTRIM$ ( STR$ (EK.ARTIKEL,",9999999999.00"))
       END IF 
       ADD DIALOG "ABZUGANG",5,36,153,37,10,0,"Lieferant:"
       SELECT KEY Lieferant.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
       IF FOUND ("ADRESSEN") THEN Nachname$ = Nachname.ADRESSEN ELSE Nachname$ = "<keine Zuordnung>"
       ADD DIALOG "ABZUGANG",5,100,153,150,10,128,Nachname$
       ADD DIALOG "ABZUGANG",6,100,166,156,10,0,0,serienr$,50
       ADD DIALOG "ABZUGANG",5,36,166,62,10,0,"Seriennr.:"
       ADD DIALOG "ABZUGANG",6,100,179,120,10,0,0,Anzahl%,20
       ADD DIALOG "ABZUGANG",5,36,179,47,10,0,"Anzahl:"
       ADD DIALOG "ABZUGANG",5,36,193,45,10,0,"EK (einzel):"
       ADD DIALOG "ABZUGANG",6,100,193,120,10,0,0,EK%,20
       ADD DIALOG "ABZUGANG",1,84,214,55,15,1,"&OK",1,1
       ADD DIALOG "ABZUGANG",1,146,214,55,15,0,"&Abbrechen",0,0
       DIALOG "ABZUGANG",req%
       REMOVE DIALOG "ABZUGANG"
     ELSE 
       SELECT CASE zugopt%
         CASE 1
           falsch% = 1
           Rabatt% = 0
           Anzahl% = 0
           EK% = LieferEK.ARTIKEL
           IF mastform$ LIKE "EUR" THEN 
             EK% = LieferEKeu.ARTIKEL
           ELSE 
             EK% = LieferEK.ARTIKEL
           END IF 
           WHILE falsch% = 1
             falsch% = 0
             REM -- normaler Zugang
             IF zugabg% = 0 THEN TEXTRahmen$ = "normaler Zugang"
             IF zugabg% = 1 THEN TEXTRahmen$ = "normaler Zugangsstorno"
             CREATE DIALOG "ABZUGANG",101,81,292,239,title$,"MS Sans Serif",8
             ADD DIALOG "ABZUGANG",4,0,0,292,211,0,""
             ADD DIALOG "ABZUGANG",5,36,9,68,11,0,Artikelnummer.ARTIKEL
             ADD DIALOG "ABZUGANG",5,106,9,180,11,128,Bezeichnung.ARTIKEL
             ADD DIALOG "ABZUGANG",9,4,9,20,23,2
             ADD DIALOG "ABZUGANG",4,36,24,253,100,0," Beschreibung "
             ADD DIALOG "ABZUGANG",5,38,36,244,85,128,Beschreibung.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,128,62,9,0,"aktueller Bestand:"
             ADD DIALOG "ABZUGANG",5,100,128,150,9,0, LTRIM$ ( STR$ (Bestand.ARTIKEL,",999999999.00")) + " " + ME_.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,140,37,10,0,"letzter EK:"
             IF mastform$ LIKE "EUR" THEN 
               ADD DIALOG "ABZUGANG",5,100,140,157,10,0, LTRIM$ ( STR$ (LieferEKeu.ARTIKEL,",9999999999.00")) + " EUR " + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yyyy") + "/Mischpreis:" + LTRIM$ ( STR$ (EKEU.ARTIKEL,",9999999999.00"))
             ELSE 
               ADD DIALOG "ABZUGANG",5,100,140,157,10,0, LTRIM$ ( STR$ (LieferEK.ARTIKEL,",9999999999.00")) + " " + waehrung.artikel + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yyyy") + "/Mischpreis:" + LTRIM$ ( STR$ (EK.ARTIKEL,",9999999999.00"))
             END IF 
             ADD DIALOG "ABZUGANG",5,36,152,37,11,0,"Lieferant:"
             SELECT KEY Lieferant.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
             IF FOUND ("ADRESSEN") THEN Nachname$ = Nachname.ADRESSEN ELSE Nachname$ = "<keine Zuordnung>"
             ADD DIALOG "ABZUGANG",5,100,152,120,11,128,Nachname$
             ADD DIALOG "ABZUGANG",6,100,162,120,11,0,0,Belegnr$,12
             ADD DIALOG "ABZUGANG",5,36,162,51,11,0,"Belegnummer"
             ADD DIALOG "ABZUGANG",6,100,174,120,13,0,0,Anzahl%,20
             ADD DIALOG "ABZUGANG",5,36,177,46,13,0,"Anzahl:"
             ADD DIALOG "ABZUGANG",6,100,188,120,13,0,0,EK%,20
             ADD DIALOG "ABZUGANG",5,36,193,45,11,0,"EK (einzel):"
             ADD DIALOG "ABZUGANG",5,224,179,29,9,0,"Rabatt:"
             ADD DIALOG "ABZUGANG",6,224,188,44,13,0,0,Rabatt%,7
             ADD DIALOG "ABZUGANG",1,84,214,54,14,1,"&OK",1,1
             ADD DIALOG "ABZUGANG",1,146,214,55,14,0,"&Abbrechen",0,0
             DIALOG "ABZUGANG",req%
             REMOVE DIALOG "ABZUGANG"
             IF req% = 1 THEN 
             IF zugabg% = 0 THEN Buchungstext$ = "Normalzugang fÅr Artnr.: " + Artikelnummer.artikel
             IF zugabg% = 1 THEN Buchungstext$ = "Storno von Normalzugang fÅr Artnr.: " + Artikelnummer.artikel
               IF Belegnr$ = "" THEN 
                 CALL Fehler("Die Belegnummer mu· ausgefÅllt werden!","")
                 falsch% = 1
               END IF 
               IF EK% <= 0 THEN 
                 CALL Fehler("Der EK mu· grî·er/gleich 0 sein!","")
                 falsch% = 1
               END IF 
               IF Anzahl% <= 0 THEN 
                 CALL Fehler("Die Anzahl mu· grî·er 0 sein!","")
                 falsch% = 1
               END IF 
               IF Anzahl% > 0 AND zugabg% = 1 THEN 
                 Anzahl% = Anzahl% * - 1
               END IF 
               IF Rabatt% < 0 THEN 
                 CALL Fehler("Der Rabatt mu· grî·er/gleich 0 sein!","")
                 falsch% = 1
               END IF 
               IF Rabatt% > 0 THEN EK% = EK% - ((EK% * Rabatt%) / 100)
             ELSE 
               falsch% = 0
             END IF 
           WEND 
         CASE 2
           REM -- Inventurzugang
           falsch% = 1
           Rabatt% = 0
           Anzahl% = 0
           IF mastform$ LIKE "EUR" THEN 
             EK% = EKeu.ARTIKEL
           ELSE 
             EK% = EK.ARTIKEL
           END IF 
           WHILE falsch% = 1
             falsch% = 0
             IF zugart% = 0 AND zugabg% = 0 THEN TEXTRahmen$ = "Inventurzugang"
             IF zugart% = 0 AND zugabg% = 1 THEN TEXTRahmen$ = "Inventurzugangstorno"
             IF zugart% = 1 AND zugabg% = 0 THEN TEXTRahmen$ = "Inventurabgang"
             IF zugart% = 1 AND zugabg% = 1 THEN TEXTRahmen$ = "Inventurabgangstorno"
             CREATE DIALOG "ABZUGANG",101,81,292,239,title$,"MS Sans Serif",8
             ADD DIALOG "ABZUGANG",4,0,0,292,211,0,""
             ADD DIALOG "ABZUGANG",5,36,9,68,11,0,Artikelnummer.ARTIKEL
             ADD DIALOG "ABZUGANG",5,106,9,180,11,128,Bezeichnung.ARTIKEL
             ADD DIALOG "ABZUGANG",9,4,9,20,23,2
             ADD DIALOG "ABZUGANG",4,36,24,253,100,0," Beschreibung "
             ADD DIALOG "ABZUGANG",5,38,36,244,85,128,Beschreibung.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,128,62,9,0,"aktueller Bestand:"
             ADD DIALOG "ABZUGANG",5,100,128,150,9,0, LTRIM$ ( STR$ (Bestand.ARTIKEL,",999999999.00")) + " " + ME_.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,140,37,10,0,"letzter EK:"
             IF mastform$ LIKE "EUR" THEN 
               ADD DIALOG "ABZUGANG",5,100,140,157,10,0, LTRIM$ ( STR$ (LieferEKeu.ARTIKEL,",9999999999.00")) + " EUR" + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yyyy") + "/Mischpreis:" + LTRIM$ ( STR$ (EKeu.ARTIKEL,",9999999999.00"))
             ELSE 
               ADD DIALOG "ABZUGANG",5,100,140,157,10,0, LTRIM$ ( STR$ (LieferEK.ARTIKEL,",9999999999.00")) + " " + waehrung.artikel + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yyyy") + "/Mischpreis:" + LTRIM$ ( STR$ (EK.ARTIKEL,",9999999999.00"))
             END IF 
             ADD DIALOG "ABZUGANG",5,36,152,37,10,0,"Lieferant:"
             SELECT KEY Lieferant.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
             IF FOUND ("ADRESSEN") THEN Nachname$ = Nachname.ADRESSEN ELSE Nachname$ = "<keine Zuordnung>"
             ADD DIALOG "ABZUGANG",5,100,152,150,10,128,Nachname$
             IF DEFA$ = "MEGA" THEN 
               ADD DIALOG "ABZUGANG",6,100,162,120,11,0,0,Belegnr$,12
               ADD DIALOG "ABZUGANG",5,36,162,51,10,0,"Belegnummer"
             END IF 
             ADD DIALOG "ABZUGANG",6,100,174,120,13,0,0,Anzahl%,20
             ADD DIALOG "ABZUGANG",5,36,177,46,13,0,"Anzahl:"
             REM ADD DIALOG "ABZUGANG",6,100,188,120,13,0,0,EK%,20
             REM ADD DIALOG "ABZUGANG",5,36,193,45,11,0,"EK (einzel):"
             REM ADD DIALOG "ABZUGANG",5,224,179,29,9,0,"Rabatt:"
             REM ADD DIALOG "ABZUGANG",6,224,188,44,13,0,0,Rabatt%,7
             ADD DIALOG "ABZUGANG",1,84,214,54,14,1,"&OK",1,1
             ADD DIALOG "ABZUGANG",1,146,214,55,14,0,"&Abbrechen",0,0
             DIALOG "ABZUGANG",req%
             REMOVE DIALOG "ABZUGANG"
             IF req% = 1 THEN 
             IF zugart% = 0 AND zugabg% = 0 THEN Buchungstext$ = "Inventurzugang fÅr Artnr.: " + Artikelnummer.artikel
             IF zugart% = 0 AND zugabg% = 1 THEN Buchungstext$ = "Storno von Inventurzugang fÅr Artnr.: " + Artikelnummer.artikel
             IF zugart% = 1 AND zugabg% = 0 THEN Buchungstext$ = "Inventurabgang fÅr Artnr.: " + Artikelnummer.artikel
             IF zugart% = 1 AND zugabg% = 1 THEN Buchungstext$ = "Storno von Inventurabgang fÅr Artnr.: " + Artikelnummer.artikel
               IF Belegnr$ = "" AND DEFA$ = "MEGA" THEN 
                 CALL Fehler("Die Belegnummer mu· ausgefÅllt werden!","")
                 falsch% = 1
               END IF 
               IF Anzahl% <= 0 THEN 
                 CALL Fehler("Die Anzahl mu· grî·er 0 sein!","")
                 falsch% = 1
               END IF 
               REM Inventurplus differenz stornieren
               IF Anzahl% > 0 AND zugabg% = 1 AND zugart% = 0 THEN 
                 Anzahl% = Anzahl% * - 1
               END IF 
               REM Inventurminus differenz buchen bestand=(bestand.artikel+(-anzahl%))
               IF Anzahl% > 0 AND zugabg% = 0 AND zugart% = 1 THEN 
                 Anzahl% = Anzahl% * - 1
               END IF 
             ELSE 
               falsch% = 0
             END IF 
           WEND 
         CASE 3
           REM -- Rabattzugang 
           Rabatt% = 0
           Anzahl% = 0
           falsch% = 1
           IF mastform$ LIKE "EUR" THEN 
             EK% = EKeu.ARTIKEL
           ELSE 
             EK% = EK.ARTIKEL
           END IF 
           WHILE falsch% = 1
             falsch% = 0
             IF zugart% = 0 AND zugabg% = 0 THEN TEXTRahmen$ = "Rabattzugang"
             IF zugart% = 0 AND zugabg% = 1 THEN TEXTRahmen$ = "Rabattstorno"
             IF zugart% = 1 AND zugabg% = 0 THEN TEXTRahmen$ = "Abgang durch Bruch usw."
             IF zugart% = 1 AND zugabg% = 1 THEN TEXTRahmen$ = "Abgang durch Bruch usw.stornieren"
             CREATE DIALOG "ABZUGANG",101,81,292,239,title$,"MS Sans Serif",8
             ADD DIALOG "ABZUGANG",4,0,0,292,211,0,""
             ADD DIALOG "ABZUGANG",5,36,9,68,11,0,Artikelnummer.ARTIKEL
             ADD DIALOG "ABZUGANG",5,106,9,180,11,128,Bezeichnung.ARTIKEL
             ADD DIALOG "ABZUGANG",9,4,9,20,23,2
             ADD DIALOG "ABZUGANG",4,36,24,253,100,0," Beschreibung "
             ADD DIALOG "ABZUGANG",5,38,36,244,85,128,Beschreibung.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,128,62,9,0,"aktueller Bestand:"
             ADD DIALOG "ABZUGANG",5,100,128,150,9,0, LTRIM$ ( STR$ (Bestand.ARTIKEL,",999999999.00")) + " " + ME_.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,140,37,10,0,"letzter EK:"
             IF mastform$ LIKE "EUR" THEN 
               ADD DIALOG "ABZUGANG",5,100,140,157,10,0, LTRIM$ ( STR$ (LieferEKeu.ARTIKEL,",9999999999.00")) + " EUR" + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yyyy") + "/Mischpreis:" + LTRIM$ ( STR$ (EKeu.ARTIKEL,",9999999999.00"))
             ELSE 
               ADD DIALOG "ABZUGANG",5,100,140,157,10,0, LTRIM$ ( STR$ (LieferEK.ARTIKEL,",9999999999.00")) + " " + waehrung.artikel + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yyyy") + "/Mischpreis:" + LTRIM$ ( STR$ (EK.ARTIKEL,",9999999999.00"))
             END IF 
             ADD DIALOG "ABZUGANG",5,36,152,37,10,0,"Lieferant:"
             SELECT KEY Lieferant.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
             IF FOUND ("ADRESSEN") THEN Nachname$ = Nachname.ADRESSEN ELSE Nachname$ = "<keine Zuordnung>"
             ADD DIALOG "ABZUGANG",5,100,152,150,10,128,Nachname$
             IF DEFA$ = "MEGA" THEN 
               ADD DIALOG "ABZUGANG",6,100,162,120,11,0,0,Belegnr$,12
               ADD DIALOG "ABZUGANG",5,36,162,51,11,0,"Belegnummer"
             END IF 
             ADD DIALOG "ABZUGANG",6,100,174,120,13,0,0,Anzahl%,20
             ADD DIALOG "ABZUGANG",5,36,177,46,13,0,"Anzahl:"
             REM ADD DIALOG "ABZUGANG",6,100,188,120,13,0,0,EK%,20
             REM ADD DIALOG "ABZUGANG",5,36,193,45,11,0,"EK (einzel):"
             REM ADD DIALOG "ABZUGANG",5,224,179,29,9,0,"Rabatt:"
             REM ADD DIALOG "ABZUGANG",6,224,188,44,13,0,0,Rabatt%,7
             ADD DIALOG "ABZUGANG",1,84,214,54,14,1,"&OK",1,1
             ADD DIALOG "ABZUGANG",1,146,214,55,14,0,"&Abbrechen",0,0
             DIALOG "ABZUGANG",req%
             REMOVE DIALOG "ABZUGANG"
             IF req% = 1 THEN 
             IF zugart% = 0 AND zugabg% = 0 THEN Buchungstext$ = "Rabattzugang fÅr Artnr.: " + Artikelnummer.artikel
             IF zugart% = 0 AND zugabg% = 1 THEN Buchungstext$ = "Storno von Rabattzugang fÅr Artnr.: " + Artikelnummer.artikel
             IF zugart% = 1 AND zugabg% = 0 THEN Buchungstext$ = "Abgang durch Bruch usw. fÅr Artnr.: " + Artikelnummer.artikel
             IF zugart% = 1 AND zugabg% = 1 THEN Buchungstext$ = "Storno von Abgang durch Bruch usw.fÅr Artnr.: " + Artikelnummer.artikel
               IF Belegnr$ = "" AND DEFA$ = "MEGA" THEN 
                 CALL Fehler("Die Belegnummer mu· ausgefÅllt werden!","")
                 falsch% = 1
               END IF 
               IF Anzahl% <= 0 THEN 
                 CALL Fehler("Die Anzahl mu· grî·er 0 sein!","")
                 falsch% = 1
               END IF 
               REM Stornierung von RabattzugÑngen
               IF zugart% = 0 AND Anzahl% > 0 AND zugabg% = 1 THEN 
                 Anzahl% = Anzahl% * - 1
               END IF 
               REM Buchen von AbgÑngen durch Bruch usw
               IF zugart% = 1 AND Anzahl% > 0 AND zugabg% = 0 THEN 
                 Anzahl% = Anzahl% * - 1
               END IF 
 
             ELSE 
               falsch% = 0
             END IF 
           WEND 
 
         CASE 4
           REM -- Zugang ohne Rechnung, 
           Rabatt% = 0
           Anzahl% = 0

           falsch% = 1
           IF mastform$ LIKE "EUR" THEN 
             EK% = EKeu.ARTIKEL
           ELSE 
             EK% = EK.ARTIKEL
           END IF 
           WHILE falsch% = 1
             falsch% = 0
             IF zugabg% = 0 THEN TEXTRahmen$ = "Zugang ohne Rechnung"
             IF zugabg% = 1 THEN TEXTRahmen$ = "Storno von Zugang ohne Rechnung"
             CREATE DIALOG "ABZUGANG",101,81,292,239,title$,"MS Sans Serif",8
             ADD DIALOG "ABZUGANG",4,0,0,292,211,0,""
             ADD DIALOG "ABZUGANG",5,36,9,68,11,0,Artikelnummer.ARTIKEL
             ADD DIALOG "ABZUGANG",5,106,9,180,11,128,Bezeichnung.ARTIKEL
             ADD DIALOG "ABZUGANG",9,4,9,20,23,2
             ADD DIALOG "ABZUGANG",4,36,24,253,100,0," Beschreibung "
             ADD DIALOG "ABZUGANG",5,38,36,244,85,128,Beschreibung.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,128,62,9,0,"aktueller Bestand:"
             ADD DIALOG "ABZUGANG",5,100,128,150,9,0, LTRIM$ ( STR$ (Bestand.ARTIKEL,",999999999.00")) + " " + ME_.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,140,37,10,0,"letzter EK:"
             IF mastform$ LIKE "EUR" THEN 
               ADD DIALOG "ABZUGANG",5,100,140,157,10,0, LTRIM$ ( STR$ (LieferEKeu.ARTIKEL,",9999999999.00")) + " EUR" + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yyyy") + "/Mischpreis:" + LTRIM$ ( STR$ (EKeu.ARTIKEL,",9999999999.00"))
             ELSE 
               ADD DIALOG "ABZUGANG",5,100,140,157,10,0, LTRIM$ ( STR$ (LieferEK.ARTIKEL,",9999999999.00")) + " " + waehrung.artikel + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yyyy") + "/Mischpreis:" + LTRIM$ ( STR$ (EK.ARTIKEL,",9999999999.00"))
             END IF 
             ADD DIALOG "ABZUGANG",5,36,152,37,10,0,"Lieferant:"
             SELECT KEY Lieferant.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
             IF FOUND ("ADRESSEN") THEN Nachname$ = Nachname.ADRESSEN ELSE Nachname$ = "<keine Zuordnung>"
             ADD DIALOG "ABZUGANG",5,100,152,150,10,128,Nachname$
             ADD DIALOG "ABZUGANG",6,100,162,120,11,0,0,Belegnr$,12
             ADD DIALOG "ABZUGANG",5,36,162,51,11,0,"Belegnummer"
             ADD DIALOG "ABZUGANG",6,100,174,120,13,0,0,Anzahl%,20
             ADD DIALOG "ABZUGANG",5,36,177,46,13,0,"Anzahl:"
             REM ADD DIALOG "ABZUGANG",6,100,188,120,13,0,0,EK%,20
             REM ADD DIALOG "ABZUGANG",5,36,193,45,11,0,"EK (einzel):"
             REM ADD DIALOG "ABZUGANG",5,224,179,29,9,0,"Rabatt:"
             REM ADD DIALOG "ABZUGANG",6,224,188,44,13,0,0,Rabatt%,7
             ADD DIALOG "ABZUGANG",1,84,214,54,14,1,"&OK",1,1
             ADD DIALOG "ABZUGANG",1,146,214,55,14,0,"&Abbrechen",0,0
             DIALOG "ABZUGANG",req%
             REMOVE DIALOG "ABZUGANG"
             IF req% = 1 THEN 
             IF zugabg% = 0 THEN Buchungstext$ = "Zugang ohne Rechnung fÅr Artnr.: " + Artikelnummer.artikel
             IF zugabg% = 1 THEN Buchungstext$ = "Storno von Zugang ohne Rechnung fÅr Artnr.: " + Artikelnummer.artikel
               IF Belegnr$ = "" THEN 
                 CALL Fehler("Die Belegnummer mu· ausgefÅllt werden!","")
                 falsch% = 1
               END IF 
               IF Anzahl% <= 0 THEN 
                 CALL Fehler("Die Anzahl mu· grî·er 0 sein!","")
                 falsch% = 1
               END IF 
               IF Anzahl% > 0 AND zugabg% = 1 THEN 
                 Anzahl% = Anzahl% * - 1
               END IF 
             ELSE 
               falsch% = 0
             END IF 
           WEND 
 
         CASE 5
           REM -- Nachbuchung von Zugang ohne Rechnung
           Rabatt% = 0
           Anzahl% = 0
           IF mastform$ LIKE "EUR" THEN 
             EK% = LieferEKeu.artikel
           ELSE 
             EK% = LieferEK.artikel
           END IF 
           falsch% = 1
           FILE "ABZUGANG"
           INDEX Belegnummer.abzugang
           tfound% = 0
           SELECT FIRST 
           SELECT KEY belegnralt$ FILE "abzugang" INDEX belegnummer.abzugang
           WHILE NOT EOF ("ABZUGANG") AND LTRIM$ ( UCASE$ (Belegnummer.abzugang)) = LTRIM$ ( UCASE$ (Belegnralt$))
             IF ArtZugang.abzugang = 4 AND abgleich.abzugang < 1 THEN 
               Artikel$(tfound%) = PAD$ (Belegnummer,12) + " ; " + Artikelnummer + " ;     " + STR$ (Anzahl,",999999999.00") + SPACE$ (120) + STR$ (CodeAZ.abzugang,"000000")
               tfound% = tfound% + 1
             END IF 
             SELECT NEXT FILE "ABZUGANG" INDEX belegnummer.abzugang
           WEND 
 
           IF tfound% <> 0 THEN 
             SET STATUS "Bitte wÑhlen Sie einen Artikel aus."
             CREATE DIALOG "TERLISTE",0,0,340,196,title$,"MS Sans Serif",8
             ADD DIALOG "TERLISTE",5,6,3,319,8,0,"Belegnummer  Artikelnummer            Anzahl"
             ADD DIALOG "TERLISTE",7,6,16,329,153,0,2,Artikel$,Auswahl$,Artikel$(0)
             ADD DIALOG "TERLISTE",1,104,174,56,16,1,"&OK",1,1
             ADD DIALOG "TERLISTE",1,164,174,56,16,0,"&Abbrechen",0,0
             DIALOG "TERLISTE",reqterm%
             REMOVE DIALOG "TERLISTE"
             IF reqterm% = 1 THEN 
               cuaz% = VAL ( RIGHT$ (Auswahl$(0),6))
               SELECT KEY cuaz% FILE "ABZUGANG" INDEX CodeAZ.abzugang
               codear% = CodeAR.abzugang
               SELECT KEY codear% FILE "Artikel" INDEX Codear.artikel
             ELSE 
               falsch% = 0
             END IF 
           ELSE 
             CALL Fehler("Es wurde kein unbearbeiteter Artikel","zu dieser Belegnummer gefunden")
             REM _req% = 0
             falsch% = 0
           END IF 
 
           Anzahl% = Anzahl.ABZUGANG
           IF mastform$ LIKE "EUR" THEN 
             EK% = VKNetto.abzugang
           ELSE 
             EK% = VKNettoEU.abzugang
           END IF 
           WHILE falsch% = 1
             falsch% = 0
             CREATE DIALOG "ABZUGANG",101,81,292,239,title$,"MS Sans Serif",8
             ADD DIALOG "ABZUGANG",4,0,0,292,211,0,""
             ADD DIALOG "ABZUGANG",5,36,9,68,11,0,Artikelnummer.Artikel
             ADD DIALOG "ABZUGANG",5,106,9,180,11,128,Bezeichnung.Artikel
             ADD DIALOG "ABZUGANG",9,4,9,20,23,2
             ADD DIALOG "ABZUGANG",4,36,24,253,100,0," Beschreibung "
             ADD DIALOG "ABZUGANG",5,38,36,244,85,128,Beschreibung.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,128,62,9,0,"aktueller Bestand:"
             ADD DIALOG "ABZUGANG",5,100,128,150,9,0, LTRIM$ ( STR$ (Bestand.ARTIKEL,",999999999.00")) + " " + ME_.ARTIKEL
             ADD DIALOG "ABZUGANG",5,36,140,37,10,0,"letzter EK:"
             IF mastform$ LIKE "EUR" THEN 
               ADD DIALOG "ABZUGANG",5,100,140,157,10,0, LTRIM$ ( STR$ (LieferEKeu.ARTIKEL,",9999999999.00")) + " EUR" + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yyyy") + "/Mischpreis:" + LTRIM$ ( STR$ (EKeu.ARTIKEL,",9999999999.00"))
             ELSE 
               ADD DIALOG "ABZUGANG",5,100,140,157,10,0, LTRIM$ ( STR$ (LieferEK.ARTIKEL,",9999999999.00")) + " " + waehrung.artikel + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yyyy") + "/Mischpreis:" + LTRIM$ ( STR$ (EK.ARTIKEL,",9999999999.00"))
             END IF 
             ADD DIALOG "ABZUGANG",5,36,152,37,10,0,"Lieferant:"
             SELECT KEY Lieferant.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
             IF FOUND ("ADRESSEN") THEN Nachname$ = Nachname.ADRESSEN ELSE Nachname$ = "<keine Zuordnung>"
             ADD DIALOG "ABZUGANG",5,100,152,150,10,128,Nachname$
             ADD DIALOG "ABZUGANG",6,100,162,120,11,0,0,Belegnr$,12
             ADD DIALOG "ABZUGANG",5,36,162,51,10,0,"Belegnummer"
             ADD DIALOG "ABZUGANG",5,36,177,46,13,0,"Anzahl:"
             ADD DIALOG "ABZUGANG",5,100,174,120,13,0,Anzahl%
             ADD DIALOG "ABZUGANG",6,100,188,120,13,0,0,EK%,20
             ADD DIALOG "ABZUGANG",5,36,193,45,11,0,"EK (einzel):"
             ADD DIALOG "ABZUGANG",5,224,179,29,9,0,"Rabatt:"
             ADD DIALOG "ABZUGANG",6,224,188,44,13,0,0,Rabatt%,7
             ADD DIALOG "ABZUGANG",1,84,214,54,14,1,"&OK",1,1
             ADD DIALOG "ABZUGANG",1,146,214,55,14,0,"&Abbrechen",0,0
             DIALOG "ABZUGANG",req%
             REMOVE DIALOG "ABZUGANG"
             IF req% = 1 THEN 
               Buchungstext$ = "Nachbuchung Zugang ohne Rechnung fÅr Artnr.: " + Artikelnummer.artikel
               IF Belegnr$ = "" THEN 
                 CALL Fehler("Die Belegnummer mu· ausgefÅllt werden!","")
                 falsch% = 1
               END IF 
               IF EK% <= 0 THEN 
                 CALL Fehler("Der EK mu· grî·er/gleich 0 sein!","")
                 falsch% = 1
               END IF 
               IF Rabatt% < 0 THEN 
                 CALL Fehler("Der Rabatt mu· grî·er/gleich 0 sein!","")
                 falsch% = 1
               END IF 
               IF Rabatt% > 0 THEN EK% = EK% - ((EK% * Rabatt%) / 100)
             ELSE 
               falsch% = 0
             END IF 
           WEND 
 
       END CASE 
     END IF 
     IF req% = 1 THEN 
       SET STATUS "Bitte warten: Es wird gebucht..."
       MOUSE OFF 
  REM ------------  Bestandsberechnung / Mischpreisberechnung bei Artikelzugang ----------
  REM ------------  VerÑnderung in Artikeldatei und ABZUGANG fÅr zugopt%=1-4
       IF zugopt% < 5 THEN 
         bestandalt% = Bestand.artikel
         bestandneu% = Bestand.ARTIKEL + Anzahl%
         Bestand.ARTIKEL = Bestandneu%
         REM -- bei Zugang ohne Rechnung(zugopt%=4) darf der EK nicht neu berechnet werden
         REM 03122001
         IF mastform$ LIKE "EUR" THEN 
           IF zugopt% <> 4 THEN ekeu.artikel = (ekeu.artikel * bestandalt% + ek% * anzahl%) / (bestandalt% + anzahl%)
           PrDif% = VKnettoeu.ARTIKEL - EKeu.ARTIKEL
           Handelsspanne.ARTIKEL = (100 / EKeu.ARTIKEL) * PrDif%
           REM -- bei Rabattzugang und Zugang ohne Rechnung(zugopt%=3 und 4) darf der LieferEK 
           REM -- nicht geÑndert werden
           IF zugart% = 0 AND zugopt% < 3 THEN LieferEKeu.ARTIKEL = EK%
           IF zugart% = 0 THEN letzteLieferung.ARTIKEL = TODAY 
           CALL ArtEuroDM()
           CALL QuickStore("ARTIKEL")
         ELSE 
           IF zugopt% <> 4 THEN ek.artikel = (ek.artikel * bestandalt% + ek% * anzahl%) / (bestandalt% + anzahl%)
           PrDif% = VKnetto.ARTIKEL - EK.ARTIKEL
           Handelsspanne.ARTIKEL = (100 / EK.ARTIKEL) * PrDif%
           REM -- bei Rabattzugang und Zugang ohne Rechnung(zugopt%=3 und 4) darf der LieferEK 
           REM -- nicht geÑndert werden
           IF zugart% = 0 AND zugopt% < 3 THEN LieferEK.ARTIKEL = EK%
           IF zugart% = 0 THEN letzteLieferung.ARTIKEL = TODAY 
           CALL ArtDMEuro()
           CALL QuickStore("ARTIKEL")
         END IF 
         IF NOT EXISTS (codear.artikel,codear.serienr) AND serienr$ <> "" THEN 
           BLANK FILE "serienr"
           codear.serienr = codear.artikel
           codeser.serienr = SER ("serienr",1)
           serienr.serienr = "<ohne Zuordnung>"
           Workstation.serienr = Workstation%
           QWoNo.serienr = STR$ (Workstation%,"000000") + STR$ (Codeser.serienr,"000000")
           RecStatus.serienr = "c"
           STORE FILE "serienr"
           UNLOCK CURRENT FILE "serienr"
         END IF 
         BLANK FILE "serienr"
         codeser.serienr = SER ("serienr",1)
         codear.serienr = codear.artikel
         serienr.serienr = serienr$
         QuickARSER.serienr = STR$ (codear.serienr,"000000") + serienr$
         Workstation.serienr = Workstation%
         QWoNo.serienr = STR$ (Workstation%,"000000") + STR$ (Codeser.serienr,"000000")
         RecStatus.serienr = "c"
         STORE FILE "serienr"
         UNLOCK CURRENT FILE "serienr"
         REM ------------- Aktualisierung Datei Liefruck
         zÑhl% = bestandneu%
         FILE "liefruck"
         INDEX codear.liefruck
         SELECT FIRST 
         IF EXISTS (cuart%,codear.liefruck) THEN 
           SELECT KEY cuart% LOCK FILE "liefruck" INDEX codear.liefruck
           WHILE codear.liefruck = cuart% AND zÑhl% > 0 AND NOT EOF ("liefruck")
             IF zÑhl% >= rmenge.liefruck THEN 
               bestandakt% = bestandneu% - rmenge.liefruck
               SMenge.liefruck = rmenge.liefruck
               SDatum.liefruck = TODAY 
               rmengealt.liefruck = rmenge.liefruck
               rmenge.liefruck = 0
               Lieferzugang.liefruck = "Y"
               RÅckerledigt.liefruck = "Y"
               Workstation.liefruck = Workstation%
               QWoNo.liefruck = STR$ (Workstation%,"000000") + STR$ (Codear.liefruck,"000000")
               RecStatus.liefruck = "c"
               STORE FILE "liefruck"
               UNLOCK CURRENT FILE "liefruck"
               REM ----Bestand aktualisieren in Artikeldatei
               SELECT KEY cuart% LOCK FILE "artikel" INDEX codear.artikel
               bestand.artikel = bestandakt%
               Workstation.artikel = Workstation%
               QWoNo.artikel = STR$ (Workstation%,"000000") + STR$ (Codear.artikel,"000000")
               RecStatus.artikel = "c"
               STORE FILE "artikel"
               UNLOCK CURRENT FILE "artikel"
               zÑhl% = bestandakt%
             ELSE 
               bestandzw% = rmenge.liefruck - zÑhl%
               SMenge.liefruck = zÑhl%
               SDatum.liefruck = TODAY 
               rmengealt.liefruck = rmenge.liefruck
               rmenge.liefruck = bestandzw%
               Lieferzugang.liefruck = "Y"
               RÅckerledigt.liefruck = ""
               Workstation.liefruck = Workstation%
               QWoNo.liefruck = STR$ (Workstation%,"000000") + STR$ (Codear.liefruck,"000000")
               RecStatus.liefruck = "c"
               STORE FILE "liefruck"
               UNLOCK CURRENT FILE "liefruck"
               REM ----Bestand aktualisieren in Artikeldatei
               SELECT KEY cuart% LOCK FILE "artikel" INDEX codear.artikel
               bestand.artikel = 0
               Workstation.artikel = Workstation%
               QWoNo.artikel = STR$ (Workstation%,"000000") + STR$ (Codear.artikel,"000000")
               RecStatus.artikel = "c"
               STORE FILE "artikel"
               UNLOCK CURRENT FILE "artikel"
               zÑhl% = 0
             END IF 
             SELECT NEXT LOCK INDEX codear.liefruck
           WEND 
         END IF 
         SELECT KEY cuart% FILE "artikel" INDEX codear.artikel
         BLANK FILE "ABZUGANG"
         CodeAZ.ABZUGANG = SER ("ABZUGANG",1)
         CodeAR.ABZUGANG = cuart%
         Datum.ABZUGANG = TODAY 
         Anzahl.ABZUGANG = Anzahl%
         CodeKU.ABZUGANG = Lieferant.ARTIKEL
         IF zugart% = 0 THEN Art.ABZUGANG = 6:REM Code fÅr Artikelzugang
         IF zugart% = 1 THEN Art.ABZUGANG = 0:REM Code fÅr Verlust 
         IF DEFA$ = "MEGA" THEN 
           IF zugart% = 0 THEN ArtZugang.abzugang = zugopt%:REM zugopt%=2 Inv.diff
           IF zugart% = 1 THEN ArtAbgang.abzugang = zugopt%:REM zugopt%=3 Bruch usw
         END IF 
         IF mastform$ LIKE "EUR" THEN 
           VKnettoEU.ABZUGANG = EK%
           VKnetto.ABZUGANG = EK% * umrechnung.abzugang
           AnzGebucht.ABZUGANG = Anzahl%
           DatumGebucht.ABZUGANG = TODAY 
           Kontrolle.ABZUGANG = "n"
           Buchungstext.ABZUGANG = Buchungstext$
           Artikelnummer.abzugang = Artikelnummer.artikel
           Bezeichnung.abzugang = Bezeichnung.artikel
           Lieferant.abzugang = Nachname.adressen
           Belegnummer.abzugang = Belegnr$
           Belegdatum.abzugang = TODAY 
           ME_.abzugang = ME_.artikel
           IF defa$ = "MEGA" THEN Periode.abzugang = periode%
           CALL QuickStore("ABZUGANG")
         ELSE 
           VKnetto.ABZUGANG = EK%
           VKnettoeu.ABZUGANG = ek% * umrechnung.abzugang
           AnzGebucht.ABZUGANG = Anzahl%
           DatumGebucht.ABZUGANG = TODAY 
           Kontrolle.ABZUGANG = "n"
           Buchungstext.ABZUGANG = Buchungstext$
           Artikelnummer.abzugang = Artikelnummer.artikel
           Bezeichnung.abzugang = Bezeichnung.artikel
           Lieferant.abzugang = Nachname.adressen
           Belegnummer.abzugang = Belegnr$
           Belegdatum.abzugang = TODAY 
           ME_.abzugang = ME_.artikel
           IF defa$ = "MEGA" THEN Periode.abzugang = periode%
           CALL QuickStore("ABZUGANG")
         END IF 
       END IF 
       IF zugopt% = 5 THEN 
         Abgleich.abzugang = 1
         codeaz% = CodeAZ.abzugang
         cuart% = CodeAR.abzugang
         codeku% = CodeKU.abzugang
         CALL QuickStore("ABZUGANG")
         FILE "artikel"
         bestandalt% = Bestand.artikel - Anzahl.abzugang
         Anzahl% = Anzahl.abzugang
         IF mastform$ LIKE "EUR" THEN 
           ekeu.artikel = (ekeu.artikel * bestandalt% + ek% * anzahl%) / (bestandalt% + anzahl%)
           PrDif% = VKnettoeu.ARTIKEL - EKeu.ARTIKEL
           Handelsspanne.ARTIKEL = (100 / EKeu.ARTIKEL) * PrDif%
           CALL ArtEuroDM()
         ELSE 
           ek.artikel = (ek.artikel * bestandalt% + ek% * anzahl%) / (bestandalt% + anzahl%)
           PrDif% = VKnetto.ARTIKEL - EK.ARTIKEL
           Handelsspanne.ARTIKEL = (100 / EK.ARTIKEL) * PrDif%
           CALL ArtDMEuro()
         END IF 
         CALL QuickStore("ARTIKEL")
         FILE "ABZUGANG"
         BLANK FILE "ABZUGANG"
         CodeAZ.ABZUGANG = SER ("ABZUGANG",1)
         CodeAR.ABZUGANG = cuart%
         Datum.ABZUGANG = TODAY 
         Anzahl.ABZUGANG = Anzahl%
         CodeKU.ABZUGANG = codeku%
         IF zugart% = 0 THEN Art.ABZUGANG = 6:REM Code fÅr Artikelzugang
         ArtZugang.abzugang = zugopt%
         IF mastform$ LIKE "EUR" THEN 
           VKnettoEU.ABZUGANG = EK%
           VKnetto.ABZUGANG = VKnettoEU.ABZUGANG * umrechnung.abzugang
         ELSE 
           VKnetto.ABZUGANG = EK%
           VKnettoEU.ABZUGANG = VKnetto.ABZUGANG / umrechnung.abzugang
         END IF 
         AnzGebucht.ABZUGANG = Anzahl%
         Anzahl.ABZUGANG = Anzahl%
         DatumGebucht.ABZUGANG = TODAY 
         Kontrolle.ABZUGANG = "n"
         Buchungstext.ABZUGANG = Buchungstext$
         Artikelnummer.abzugang = Artikelnummer.artikel
         Bezeichnung.abzugang = Bezeichnung.artikel
         Lieferant.abzugang = Nachname.adressen
         Belegnummer.abzugang = Belegnr$
         Belegdatum.abzugang = TODAY 
         ME_.abzugang = ME_.artikel
         IF DEFA$ = "MEGA" THEN Periode.abzugang = periode%
         CALL QuickStore("ABZUGANG")
       END IF 
     END IF 
   ELSE 
     CALL Fehler ("Es konnte kein entsprechender Artikel gefunden werden!","")
   END IF :REM Ende der Zugangsbuchung
 END IF 
 WEND 
 cuart% = 0
 cugrp% = 0
 SET STATUS "Artikelzugang/-abgang beendet!"
 MOUSE ON 
 END SUB 
   
 
 '      *********************
 '      ** Verlustrechnung **
 '      *********************
 
SUB VERLUST()
 CALL DFile(3,"ABZUGANG" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"GRUPPEN" + _fpw$)
 IF DEFA$ = "MEGA" THEN 
   CALL DFile(3,"KSATZ" + _fpw$)
   CALL DFile(3,"SSATZ" + _fpw$)
 END IF 
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 FILE "gruppen"
 INDEX CodeGR
 SELECT FIRST 
 a% = 0
 WHILE NOT EOF ("gruppen")
   ProdGruppen$(a%) = Kurzbezeichnung.gruppen
   a% = a% + 1
   SELECT NEXT 
 WEND 
 _req% = 1
 WHILE _req% = 1
   suna$ = ""
   CREATE DIALOG "SCHAuswahl",0,0,237,150,title$,"MS Sans Serif",8
   ADD DIALOG "SCHAuswahl",4,0,1,237,125,0,""
   ADD DIALOG "SCHAuswahl",9,4,12,20,23,2
   ADD DIALOG "SCHAuswahl",4,30,14,200,80,0," Suche Åber... "
   ADD DIALOG "SCHAuswahl",5,30,100,147,8,0,"&Suchbezeichnung"
   ADD DIALOG "SCHAuswahl",6,30,110,200,12,0,0,suna$,20
   ADD DIALOG "SCHAuswahl",3,38,25,60,12,0,"Artikel&nummer",1,asuchopt%
   ADD DIALOG "SCHAuswahl",3,38,37,60,12,0,"&Bestellnummer",2,asuchopt%
   ADD DIALOG "SCHAuswahl",3,38,49,79,12,0,"Artikelbe&zeichnung",3,asuchopt%
   ADD DIALOG "SCHAuswahl",3,38,61,103,12,0,"Produkt&gruppen/Leistungen",4,asuchopt%
   ADD DIALOG "SCHAuswahl",8,48,75,169,66,259,2,Auswahl$,ProdGruppen$
   ADD DIALOG "SCHAuswahl",1,64,130,55,15,1,"&Weiter",1,1
   ADD DIALOG "SCHAuswahl",1,122,130,55,15,0,"&Abbruch",0,0
   DIALOG "SCHAuswahl",_req%
   REMOVE DIALOG "SCHAuswahl"
   IF _req% = 1 THEN 
     cuart% = 0
     SELECT CASE asuchopt%
     CASE 1
       feld$ = "artikelnummer.artikel"
     CASE 2
       feld$ = "bestellnummer.artikel"
     CASE 3
       feld$ = "bezeichnung.artikel"
     CASE 4
       feld$ = "bezeichnung.artikel"
     END SELECT 
     IF asuchopt% > 3 THEN 
       SELECT KEY Auswahl$ FILE "gruppen" INDEX Kurzbezeichnung.gruppen
       cugrp% = CodeGR.gruppen
       artlistok% = 0
       CALL Server("LISTBOXINIT","Auswahl")
       FILE "ARTIKEL"
       INDEX CodeGR.ARTIKEL
       SELECT FIRST 
       SELECT KEY cugrp%
       WHILE CodeGR.ARTIKEL = cugrp% AND NOT EOF ("ARTIKEL")
         item$ = Bezeichnung.ARTIKEL + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
         IF Bezeichnung.ARTIKEL LIKE "*" + suna$ + "*" OR Beschreibung.ARTIKEL LIKE "*" + suna$ + "*" THEN 
           CALL Server("LISTBOXADD",item$)
           artlistok% = 1
         END IF 
         SELECT NEXT FILE "ARTIKEL" INDEX CodeGR.ARTIKEL
       WEND 
       IF artlistok% <> 0 THEN 
         CALL Server("LISTBOXSHOW","")
         MOUSE ON 
         erg$ = ServerReply$()
         IF erg$ <> "" THEN 
           cuart% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
         END IF 
       ELSE 
         CALL Fehler("Es wurde kein entsprechender Artikel gefunden!","")
       END IF 
     ELSE 
       FILE "ARTIKEL"
       INDEX feld$$
       SET STATUS "Suche Artikel..."
       SELECT KEY suna$ INDEX feld$$
       IF UCASE$ ( LEFT$ (feld$$, LEN (suna$))) <> UCASE$ (suna$) THEN 
         IF asuchopt% = 1 OR asuchopt% = 2 THEN 
           cuart% = 0
         ELSE 
           REQUEST "Eintrag nicht gefunden!","Erweiterte Suche durchfÅhren?",130,req%
           IF req% = 1 THEN 
             suna$ = "*" + suna$ + "*"
             artlistok% = 0
             wi% = 0
             CALL Server("LISTBOXINIT","Artikelauswahl")
             FILE "ARTIKEL"
             INDEX CodeAR.ARTIKEL
             SELECT FIRST 
             MOUSE OFF 
             CALL Gauge(1,"Artikeldatei wird durchsucht...")
             _prozt% = 0
             _anz% = RECCOUNT ("ARTIKEL")
             WHILE NOT EOF ("ARTIKEL")
               _proz% = INT ((100 / _anz%) * CodeAR.ARTIKEL)
               IF _proz% > 100 THEN _proz% = 100
               IF _proz% < 2 THEN _proz% = 2
               IF _proz% <> _prozt% THEN 
                 _prozt% = _proz%
                 SET STATUS "erweiterte Suche... " + STR$ (_prozt%,"999") + " %"
                 CALL Gauge(_proz%,"")
               END IF 
               adrfound% = 0
               IF feld$$ LIKE suna$ THEN 
                 wi% = wi% + 1
                 item$ = Bezeichnung.ARTIKEL + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
                 CALL Server("LISTBOXADD",item$)
                 artlistok% = 1
                 CALL Server("GaugeMessage","Artikeldatei wird durchsucht... " + TRIM$ ( STR$ (wi%,"9999")) + " gefunden")
               END IF 
               SELECT NEXT FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
             WEND 
             CALL Gauge(0,"")
             SET STATUS ""
             IF wi% <> 0 AND artlistok% <> 0 THEN 
               SET STATUS "Bitte wÑhlen Sie einen Artikel aus"
               REM MENU 2,6,1,"aus Suchliste &wÑhlen,F7","ADRWahl"
               CALL Server("LISTBOXSHOW","Bitte wÑhlen Sie den gewÅnschten Artikel aus:")
               erg$ = ServerReply$()
               IF erg$ <> "" THEN 
                 cuart% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
               END IF 
             ELSE 
               CALL Fehler("Es konnte kein entsprechender Artikel gefunden!","")
               cuart% = 0
             END IF 
           END IF 
         END IF 
       ELSE 
         cuart% = CodeAR.ARTIKEL
       END IF 
     END IF 
 
     REM -- Zugang buchen --
 
     IF cuart% > 0 THEN 
       SELECT KEY cuart% LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
       Anzahl% = 1
       EK% = LieferEK.ARTIKEL
       CREATE DIALOG "ABZUGANG",104,82,292,239,title$,"MS Sans Serif",8
       ADD DIALOG "ABZUGANG",4,0,0,292,211,0,""
       ADD DIALOG "ABZUGANG",9,4,10,20,22,2
       ADD DIALOG "ABZUGANG",5,36,9,68,11,0,Artikelnummer.ARTIKEL
       ADD DIALOG "ABZUGANG",5,107,9,180,11,128,Bezeichnung.ARTIKEL
       ADD DIALOG "ABZUGANG",4,36,24,253,100,0," Beschreibung "
       ADD DIALOG "ABZUGANG",5,38,36,244,85,128,Beschreibung.ARTIKEL
       ADD DIALOG "ABZUGANG",5,36,128,62,10,0,"aktueller Bestand:"
       ADD DIALOG "ABZUGANG",5,100,128,150,10,0, LTRIM$ ( STR$ (Bestand.ARTIKEL,",999999999.00")) + " " + ME_.ARTIKEL
       REM ADD DIALOG "ABZUGANG",5,152,128,53,10,0,ME_.ARTIKEL
       ADD DIALOG "ABZUGANG",5,36,140,37,10,0,"letzter EK:"
       ADD DIALOG "ABZUGANG",5,100,140,137,10,0, LTRIM$ ( STR$ (LieferEK.ARTIKEL,",9999999999.00")) + " " + waehrung.artikel + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yyyy")
       ADD DIALOG "ABZUGANG",5,36,153,37,10,0,"Lieferant:"
       SELECT KEY Lieferant.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
       IF FOUND ("ADRESSEN") THEN Nachname$ = Nachname.ADRESSEN ELSE Nachname$ = "<keine Zuordnung>"
       ADD DIALOG "ABZUGANG",5,100,153,150,10,128,Nachname$
       ADD DIALOG "ABZUGANG",5,36,178,47,12,0,"Anzahl:"
       ADD DIALOG "ABZUGANG",6,100,175,120,12,0,0,Anzahl%,20
       ADD DIALOG "ABZUGANG",1,84,214,55,15,0,"&OK",1,1
       ADD DIALOG "ABZUGANG",1,146,214,55,15,0,"&Abbrechen",0,0
       DIALOG "ABZUGANG",req%
       REMOVE DIALOG "ABZUGANG"
       IF req% = 1 THEN 
         SET STATUS "Bitte warten: Verluste werden gebucht..."
         MOUSE OFF 
   REM -------------  BestandsfÅhrung bei Verlustbuchung  -----------------------
         IF Anzahl% > 0 THEN 
           Bestand.ARTIKEL = Bestand.ARTIKEL - Anzahl%
           CALL QuickStore("ARTIKEL")
           BLANK FILE "ABZUGANG"
           CodeAZ.ABZUGANG = SER ("ABZUGANG",1)
           CodeAR.ABZUGANG = cuart%
           Datum.ABZUGANG = TODAY 
           Anzahl.ABZUGANG = 0 - Anzahl%
           Art.ABZUGANG = 0:REM Code fÅr Verlustrechnung
           AnzGebucht.ABZUGANG = 0 - Anzahl%
           DatumGebucht.ABZUGANG = TODAY 
           Kontrolle.ABZUGANG = "n"
           Buchungstext.ABZUGANG = "Verlust: " + Bezeichnung.Artikel
           CALL QuickStore("ABZUGANG")
         ELSE 
           CALL Fehler("Mit den eingegebenen Daten ist keine Buchung mîglich!","")
         END IF 
       END IF 
     ELSE 
       CALL Fehler ("Es konnte kein entsprechender Artikel gefunden werden!","")
     END IF :REM Ende der Verlustbuchung
   END IF 
 WEND 
 cuart% = 0
 cugrp% = 0
 SET STATUS "Verlustbuchung beendet!"
 MOUSE ON 
 END SUB 
     
 '      **********************************************************
 '      ** Masterformular fÅr Angebote/Rechnungen/Lieferscheine **
 '      **********************************************************
 
SUB Master(art%)
 ON ERROR GOTO ErrorHandler
 CALL DFile(3,"MASTER" + _fpw$)
 CALL DFile(3,"MAHNUNG" + _fpw$)
 CALL DFile(3,"FLOSKEL" + _fpw$)
 CALL DFile(3,"ABZUGANG" + _fpw$)
 CALL DFile(3,"vertrete" + _fpw$)
 CALL DFile(3,"umsatz" + _fpw$)
 CALL DFile(3,"provisio" + _fpw$)
 CALL DFile(3,"GRUPPEN" + _fpw$)
 CALL DFile(3,"TEILRAUS" + _fpw$)
 CALL DFile(3,"TEILREIN" + _fpw$)
 CALL DFile(3,"RAUSGANG" + _fpw$)
 CALL DFile(3,"REINGANG" + _fpw$)
 FILE "gruppen"
 INDEX CodeGR.gruppen
 SELECT FIRST 
 a% = 0
 REDIM ProdGruppen$( RECCOUNT ("gruppen"),1)
 
 REDIM ProdGruppen$( RECCOUNT ("gruppen"))
 REM WHILE NOT EOF ("gruppen")
   REM ProdGruppen$(a%) = Kurzbezeichnung.gruppen
   REM a% = a% + 1
   REM SELECT NEXT 
 REM WEND 
 CALL DFile(3,"artprov" + _fpw$)
 IF DEFA$ = "MEGA" THEN 
   CALL DFile(3,"KSATZ" + _fpw$)
   CALL DFile(3,"SSATZ" + _fpw$)
 END IF 
 adrform$ = "ADRESSEN"
 IF ProjectJN$ = "TRUE" THEN adrform$ = "ADRPROJ"
 IF DEFA$ = "MEGA" THEN adrform$ = "ADRDEFA"
 IF FORM LIKE "ADRPR*" THEN 
   knr% = CodeKU.adressen
 ELSE 
   IF wawispezi$ = "j" THEN 
     knr% = CodeKU.adressen
   ELSE 
     knr% = 0
   END IF 
 END IF 
 MSArt% = art%
 SELECT CASE MSArt%
 CASE 103
   REM Rechnung zuordnen
 CASE 1
   MSArt$ = "Angebote"
   SFORM$ = "UNI"
 CASE 2
   MSArt$ = "Rechnungen"
   SFORM$ = "UNI"
 CASE 3
   MSArt$ = "Lieferscheine"
   SFORM$ = "LIEFER"
 CASE 4
   MSArt$ = "AuftrÑge"
   SFORM$ = "UNI"
 CASE 5
   MSArt$ = "Bestellungen"
   SFORM$ = "UNI"
 CASE 7
   MSArt$ = "Gutschriften"
   SFORM$ = "UNI"
 CASE 8
   MSArt$ = "ext.Preisanfrage"
   SFORM$ = "UNI"
 
 END SELECT 
 SET STATUS ""
 _formend% = 0
 maske$ = "MASTER"
 IF UCASE$ (mastform$) = "EUR" THEN 
   maske$ = "MASTERE"
   euromaske% = 1
 ELSE 
   maske$ = "MASTER"
   euromaske% = 0
 END IF 
 IF ProjectJN$ = "TRUE" THEN 
   IF UCASE$ (mastform$) = "EUR" THEN 
     maske$ = "MASTPRJE"
     euromaske% = 1
   ELSE 
     maske$ = "MASTPRJ"
     euromaske% = 0
   END IF 
 END IF 
 seitenr% = 0
 MSsub% = 0
 WHILE _formend% = 0
   
   IF FORM <> maske$ THEN 
     CALL MNMASTER()
     OPEN FORM GPrjForm$ + maske$
     
     SET f = superbase.form
     IF MSArt% = 2 OR MSArt% = 7 THEN 
       f.teilz.visible = - 1
       f.TextSumTZ.visible = - 1
       f.sumteil.visible = - 1
       f.TextRest.visible = - 1
       f.rest.visible = - 1

     ELSE 
       f.teilz.visible = 0
       f.TextSumTZ.visible = 0
       f.sumteil.visible = 0
       f.TextRest.visible = 0
       f.rest.visible = 0
     END IF 
     IF scheinsupport$ = "TRUE" THEN 
       f.schein.visible = - 1
     ELSE 
       f.schein.visible = 0
     END IF 
     IF eurosupport$ = "FALSE" THEN 
       f.waehrmask.visible = 0
     ELSE 
       IF UCASE$ (mastform$) = "EUR" THEN 
         f.waehrmask.visible = 0
       ELSE 
         f.waehrmask.visible = - 1
       END IF 
     END IF 
     IF eurosupport$ = "TRUE" THEN 
       f.euromaske.visible = - 1
       f.euromaske.enabled = - 1
       f.labelwaehr.visible = - 1
       f.labelwaehr.enabled = - 1
     ELSE 
       f.euromaske.visible = 0
       f.euromaske.enabled = 0
       f.labelwaehr.visible = 0
       f.labelwaehr.enabled = 0
     END IF 

        ProloGros$ = "G"
        f.PtextGross.Visible = 0
        f.PtextGross.enabled = 0
        EpiloGros$ = "G"
        f.EtextGross.Visible = 0
        f.EtextGross.enabled = 0
     IF seitenr% > 0 THEN FORM seitenr%
     SET STATUS MSArt$
     SET HEADING title$ + " - " + MSArt$
     MasterArt$ = MSArt$
     CALL MSIntro()
     CALL MSUpdate()
   END IF 
   MENU ON 
   IF MSsub% <> 0 THEN CALL MSUpdate()
   MSsub% = 0
   MOUSE ON 
   REM FORM 
   cums% = CodeMS.master
   f.suchen.enabled = - 1
   f.suchen.visible = - 1
   f.abbruch.enabled = 0
   f.abbruch.visible = 0
   ON ERROR GOTO t230720061
   f.angenommen.visible = 0
   f.angenommen.enabled = 0
   f.abgelehnt.visible = 0
   f.abgelehnt.enabled = 0
t230720061: 
   ON ERROR GOTO ErrorHandler
   ON ERROR GOTO t260720062
   f.s1.enabled = 0
   f.s1.visible = 0
   f.mstufetxt.visible = 0
t260720062: 
   ON ERROR GOTO ErrorHandler
   ON ERROR GOTO t250720061
   f.agl1.enabled = 0
   f.agl1.visible = 0
   f.agl2.enabled = 0
   f.agl2.visible = 0
   f.aag.enabled = 0
   f.aag.visible = 0
   f.agdat.enabled = 0
   f.agdat.visible = 0
   f.zuordrech.visible = 0
   f.zuordrech.enabled = 0
   f.mahnsperre.enabled = 0
   f.mahnsperre.visible = 0
   REM f.MahnsperBisdat.enabled = 0
   REM f.MahnsperBisdat.visible = 0
   f.buchnrre.visible = 0
   f.buchnrre.enabled = 0
   f.buchnrretxt.visible = 0
t250720061: 
   CALL ClearKBDBuffer()
   REM 110398
   REM CALL Fehler(notiz.master,"")
   notekopie$ = "Nummer der Kopiervorlage"
   SELECT CASE MSArt%
   CASE 1
     MSArt$ = "Angebote"
     SFORM$ = "UNI"
     IF notiz.master <> "" THEN 
       notiztxt$ = "Notiz zum Angebot Æ"
     ELSE 
       notiztxt$ = "Notiz zum Angebot"
     END IF 
     ON ERROR GOTO t230720062
     f.angenommen.visible = - 1
     f.angenommen.enabled = - 1
     f.abgelehnt.visible = - 1
     f.abgelehnt.enabled = - 1
t230720062: 
     ON ERROR GOTO ErrorHandler
   CASE 2
     ON ERROR GOTO e150220081
     f.agl1.enabled = - 1
     f.agl1.visible = - 1
     f.agl2.enabled = - 1
     f.agl2.visible = - 1
     f.aag.enabled = - 1
     f.aag.visible = - 1
     f.agdat.enabled = - 1
     f.agdat.visible = - 1
     f.s1.enabled = - 1
     f.s1.visible = - 1
     f.mstufetxt.visible = - 1
     f.mahnsperre.enabled = - 1
     f.mahnsperre.visible = - 1
     REM f.MahnsperBisdat.enabled = - 1
     REM f.MahnsperBisdat.visible = - 1
e150220081: 
     MSArt$ = "Rechnungen"
     SFORM$ = "UNI"
     IF notiz.master <> "" THEN 
       notiztxt$ = "Notiz zur Rechnung Æ"
     ELSE 
       notiztxt$ = "Notiz zur Rechnung"
     END IF 
   CASE 3
     MSArt$ = "Lieferscheine"
     f.agl1.enabled = - 1
     f.agl1.visible = - 1
     f.agl2.enabled = - 1
     f.agl2.visible = - 1
     f.aag.enabled = - 1
     f.aag.visible = - 1
     f.agdat.enabled = - 1
     f.agdat.visible = - 1
     SFORM$ = "LIEFER"
     IF notiz.master <> "" THEN 
       notiztxt$ = "Notiz zum Lieferschein Æ"
     ELSE 
       notiztxt$ = "Notiz zum Lieferschein"
     END IF 
   CASE 4
     f.agl1.enabled = - 1
     f.agl1.visible = - 1
     f.agl2.enabled = - 1
     f.agl2.visible = - 1
     f.aag.enabled = - 1
     f.aag.visible = - 1
     f.agdat.enabled = - 1
     f.agdat.visible = - 1
     f.angenommen.visible = - 1
     f.angenommen.enabled = - 1
     f.abgelehnt.visible = - 1
     f.abgelehnt.enabled = - 1
     MSArt$ = "AuftrÑge"
     SFORM$ = "UNI"
     IF notiz.master <> "" THEN 
       notiztxt$ = "Notiz zum Auftrag Æ"
     ELSE 
       notiztxt$ = "Notiz zum Auftrag"
     END IF 
   CASE 5
     MSArt$ = "Bestellungen"
     SFORM$ = "UNI"
     IF notiz.master <> "" THEN 
       notiztxt$ = "Notiz zur Bestellung Æ"
     ELSE 
       notiztxt$ = "Notiz zur Bestellung"
     END IF 
     f.angenommen.visible = - 1
     f.angenommen.enabled = - 1
     f.abgelehnt.visible = - 1
     f.abgelehnt.enabled = - 1
   CASE 7
     f.agl1.enabled = - 1
     f.agl1.visible = - 1
     f.agl2.enabled = - 1
     f.agl2.visible = - 1
     f.aag.enabled = - 1
     f.aag.visible = - 1
     f.agdat.enabled = - 1
     f.agdat.visible = - 1
     f.zuordrech.visible = - 1
     f.zuordrech.enabled = - 1
     IF buchnrRe.master <> "" THEN 
       zuordrech$ = "Zuordnung zu einer Rechnung Æ"
       notekopie$ = "zugeordnete Rechnung"
     ELSE 
       zuordrech$ = "Zuordnung zu einer Rechnung"
     END IF 
     f.buchnrre.visible = - 1
     f.buchnrre.enabled = - 1
     f.buchnrretxt.visible = - 1
     MSArt$ = "Gutschriften"
     SFORM$ = "UNI"
     IF notiz.master <> "" THEN 
       notiztxt$ = "Notiz zur Gutschrift Æ"
     ELSE 
       notiztxt$ = "Notiz zur Gutschrift"
     END IF 
   CASE 8
     f.agl1.enabled = - 1
     f.agl1.visible = - 1
     f.agl2.enabled = - 1
     f.agl2.visible = - 1
     f.aag.enabled = - 1
     f.aag.visible = - 1
     f.agdat.enabled = - 1
     f.agdat.visible = - 1
     f.angenommen.visible = - 1
     f.angenommen.enabled = - 1
     f.abgelehnt.visible = - 1
     f.abgelehnt.enabled = - 1
     MSArt$ = "ext.Preisanfrage"
     SFORM$ = "UNI"
     IF notiz.master <> "" THEN 
       notiztxt$ = "Notiz zur Anfrage Æ"
     ELSE 
       notiztxt$ = "Notiz zur Anfrage"
     END IF 
   END SELECT 
   GAppName$ = _netpath$ + "DOCP\master.pdf"
   
   IF art.master = 7 THEN 
   END IF 
   FORM 
   SET STATUS ""
   
   IF MSsub% = 0 THEN WAIT MOUSE OR KEY OR MENU OR FOR 600
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE MSsub%
   CASE 110
       REM Dokument schÅtzen
       codedok% = codedok.dokument
       IF dokpass.dokument = "" THEN 
         SELECT FIRST FILE "Stamm"
         passw$ = DokPass.stamm
         REQUEST "Soll das Dokument jetzt geschÅtzt werden?","",135,req%
         IF req% = 1 THEN 
           SELECT FIRST FILE "Dokument" INDEX codedok.dokument
           SELECT KEY codedok% LOCK FILE "Dokument" INDEX codedok.dokument
           IF EXISTS (_netpath$ + Dateiname.dokument) THEN 
             ON ERROR GOTO Doc401220032
             IF RIGHT$ (Dateiname.dokument,3) LIKE "doc" OR RIGHT$ (Dateiname.dokument,3) LIKE "dot" THEN 
               CALL open_doc(_netpath$ + Dateiname.dokument,"")
               CALL set_password(passw$)
               CALL close_doc( - 1)
             END IF 
Doc401220032: 
             ON ERROR GOTO ErrorHandler
             DokPass.dokument = passw$
             STORE FILE "Dokument"
           END IF 
         END IF 
       ELSE 
 
         IF NOT MNdisabled%("DOKSCHUTZAUFHEBEN") THEN 
           REQUEST "Soll der Dokumentenschutz jetzt aufgehoben werden?","",135,req%
           IF req% = 1 THEN 
               SELECT FIRST FILE "Dokument" INDEX codedok.dokument
               SELECT KEY codedok% LOCK FILE "Dokument" INDEX codedok.dokument
               IF EXISTS (_netpath$ + Dateiname.dokument) THEN 
                 passw$ = DokPass.dokument
                 ON ERROR GOTO Doc401220031
                 IF RIGHT$ (Dateiname.dokument,3) LIKE "doc" OR RIGHT$ (Dateiname.dokument,3) LIKE "dot" THEN 
                   CALL open_doc(_netpath$ + Dateiname.dokument,"")
                   CALL remove_password(passw$)
                   CALL close_doc( - 1)
                 END IF 
Doc401220031: 
                 ON ERROR GOTO ErrorHandler
                 DokPass.dokument = ""
                 STORE FILE "Dokument"
               END IF 
           END IF 
         ELSE 
           CALL Fehler("Das Dokument wurde bereits geschÅtzt","")
         END IF 
       END IF 
       mssub% = 0
     CASE 109
       REM Dokument bearbeiten
       MENU OFF 
       GDokName$ = Dokument.dokument
       GDoknovi% = novi1.dokument
       ENTER Dokument.dokument,0
       MENU ON 
     CASE 108
       codems% = codems.master
       SELECT FORM KEY codems% FILE "DOKUMENT" INDEX Codems.dokument
       FORM 3
     CASE 107
       REM Dokument scannen
       REM CALL Fehler("Dokument einscannen","")
       GCodems% = codems.Master
       knr% = codems.master
       codeku% = codems.master
       CALL ScanDok(codeku%)
       SELECT FORM KEY Gcodems% FILE "DOKUMENT" INDEX CodeMS.dokument
       FORM 3
     CASE 106
       REM Dokument vom Termin abkoppeln
       GCodeMS% = codems.master
       knr% = codeku.master
       codedok% = codedok.dokument
       SELECT FIRST FILE "Dokument" INDEX Codedok.Dokument
       SELECT KEY codedok% LOCK FILE "Dokument" INDEX Codedok.Dokument
       CodeMS.dokument = 0
       CALL QuickStore("dokument")
       CALL Fehler("Dokument wurde entkoppelt","")
     CASE 105
       REM Dokumentenverwaltung in Akquise
       GCodeMS% = codems.master
       knr% = codeku.master
       SELECT FORM KEY Gcodems% FILE "DOKUMENT" INDEX CodeMS.dokument
       FORM 3
   CASE 1
     CALL Schein()
     msart1% = 0
   CASE 3
     CALL MSBuchung(codems.master,0)
     REM 02022003 hier den Umsatz neu berechnen lassen
   CASE 4
     cums% = codems.master
     CALL MSRechnen()
     CALL MSDrucken(codems.master)
   CASE 5
     CALL MSEK()
   CASE 6
     CALL MastADRVorg()
   CASE 7
     CALL MastADRCon()
   CASE 8
     noscheinfound% = 0
     CALL MSNeu()
   CASE 9
     CALL FStore("master")
   CASE 10
     CALL MSSuchen()
   CASE 11
     CALL MSKopftext()
   CASE 12
     CALL MSFusstext()
   CASE 13
     seitenr% = PAGE 
     IF projectJN$ = "TRUE" THEN 
       IF maske$ = "MASTPRJ" THEN 
         maske$ = "MASTPRJE"
         euromaske% = 1
         mastform$ = "EUR"
       ELSE 
         maske$ = "MASTPRJ"
         euromaske% = 0
         mastform$ = ""
       END IF 
     ELSE 
       IF maske$ = "MASTER" THEN 
         maske$ = "MASTERE"
         euromaske% = 1
         mastform$ = "EUR"
       ELSE 
         maske$ = "MASTER"
         euromaske% = 0
         mastform$ = ""
       END IF 
     END IF 
   CASE 15
     msart1% = 0
     CALL FLOSKEL()
   CASE 16
     CALL FTeilraus()
 CASE 2
     REM zur zeit deaktiviert
     opt% = 4
     CREATE DIALOG "MS",0,0,197,106,"Scheinerstellung","MS Sans Serif",8
     ADD DIALOG "MS",4,0,0,195,82,0,"Bitte wÑhlen, welcher Schein erzeugt werden soll"
     ADD DIALOG "MS",3,53,14,76,10,0,"Angebot ",2,opt%
     ADD DIALOG "MS",3,53,25,84,10,0,"Rechnung ",4,opt%
     ADD DIALOG "MS",3,53,36,90,10,0,"Lieferschein ",3,opt%
     ADD DIALOG "MS",3,53,47,75,10,0,"Auftrag ",5,opt%
     ADD DIALOG "MS",3,53,58,91,10,0,"Bestellung ",6,opt%
     ADD DIALOG "MS",3,53,69,80,10,0,"Gutschrift ",7,opt%
     ADD DIALOG "MS",9,9,27,20,19,2
     ADD DIALOG "MS",1,35,85,55,16,1,"&OK",1,1
     ADD DIALOG "MS",1,93,85,54,16,0,"&Abbrechen",0,0
     DIALOG "MS",reqzu%
     REMOVE DIALOG "MS"
     IF reqzu% <> 0 THEN 
       REM 0911981
       REM von Rechnung eine Gutschrift erstellen
       IF msart% = 2 AND opt% = 7 THEN 
         MSArt1% = 3
         knr% = codeku.adressen
         opt% = 7
         cums% = codems.master
         codems% = cums%
         REQUEST "Wollen Sie zu dieser Rechnung eine Gutschrift erstellen?","",130,req33%
         IF req33% = 1 THEN 
           ok% = 1
           IF codegut.master > 0 THEN 
             REQUEST "Es wurde zu dieser Rechnung bereits eine Gutschrift erstellt!","Wollen Sie trotzdem eine neue erstellen?",130,req34%
             IF req34% = 1 THEN 
               ok% = 1
             ELSE 
               ok% = 0
             END IF 
           END IF 
           IF ok% = 1 THEN 
             CALL MSNeu1(msart1%,knr%,opt%,codems%)
             CALL ADRGutschr1()
           ELSE 
             cums1% = codeliefer.master
             CALL Master1(msart1%)
           END IF 
         END IF 
       END IF 
       REM von Rechnung einen Lieferschein erstellen
       IF msart% = 2 AND opt% = 3 THEN 
         MSArt1% = 3
         knr% = codeku.adressen
         opt% = 3
         cums% = codems.master
         codems% = cums%
         REQUEST "Wollen Sie zu dieser Rechnung einen neuen Lieferschein erstellen?","",130,req33%
         IF req33% = 1 THEN 
           ok% = 1
           IF codeliefer.master > 0 THEN 
             REQUEST "Es wurde zu dieser Rechnung bereits ein Lieferschein erstellt!","Wollen Sie trotzdem einen neuen Erstellen?",130,req34%
             IF req34% = 1 THEN 
               ok% = 1
             ELSE 
               ok% = 0
             END IF 
           END IF 
           IF ok% = 1 THEN 
             CALL MSNeu1(msart1%,knr%,opt%,codems%)
             CALL ADRLiefer1()
           ELSE 
             cums1% = codeliefer.master
             CALL Master1(msart1%)
           END IF 
         END IF 
       END IF 
       REM von Lieferschein eine Rechnung erstellen
       IF msart% = 3 AND opt% = 4 THEN 
         MSArt1% = 2
         knr% = codeku.adressen
         opt% = 4
         cums% = codems.master
         codems% = cums%
         REQUEST "Wollen Sie zu diesem Lieferschein eine neue Rechnung erstellen?","",130,req33%
         IF req33% = 1 THEN 
           ok% = 1
           IF coderech.master > 0 THEN 
             REQUEST "Es wurde zu diesem Lieferschein bereits eine Rechnung erstellt!","Wollen Sie trotzdem einen neue Erstellen?",130,req34%
             IF req34% = 1 THEN 
               ok% = 1
             ELSE 
               ok% = 0
             END IF 
           END IF 
           IF ok% = 1 THEN 
             CALL MSNeu1(msart1%,knr%,opt%,codems%)
             CALL ADRRechnung1()
           ELSE 
             cums1% = coderech.master
             CALL Master1(msart1%)
           END IF 
         END IF 
       END IF 
       REM von Angebot eine Rechnung erstellen
       IF msart% = 1 AND opt% = 4 THEN 
         MSArt1% = 2
         knr% = codeku.adressen
         opt% = 4
         cums% = codems.master
         codems% = cums%
         REQUEST "Wollen Sie zu diesem Angebot eine neue Rechnung erstellen?","",130,req33%
         IF req33% = 1 THEN 
           ok% = 1
           IF coderech.master > 0 THEN 
             REQUEST "Es wurde zu diesem Angebot bereits eine Rechnung erstellt!","Wollen Sie trotzdem einen neue Erstellen?",130,req34%
             IF req34% = 1 THEN 
               ok% = 1
             ELSE 
               ok% = 0
             END IF 
           END IF 
           IF ok% = 1 THEN 
             CALL MSNeu1(msart1%,knr%,opt%,codems%)
             CALL ADRRechnung1()
           ELSE 
             cums1% = coderech.master
             CALL Master1(msart1%)
           END IF 
         END IF 
       END IF 
       REM von Auftrag eine Rechnung erstellen
       IF msart% = 4 AND opt% = 4 THEN 
         MSArt1% = 2
         knr% = codeku.adressen
         opt% = 4
         cums% = codems.master
         codems% = cums%
         REQUEST "Wollen Sie zu diesem Auftrag eine neue Rechnung erstellen?","",130,req33%
         IF req33% = 1 THEN 
           ok% = 1
           IF coderech.master > 0 THEN 
             REQUEST "Es wurde zu diesem Auftrag bereits eine Rechnung erstellt!","Wollen Sie trotzdem einen neue Erstellen?",130,req34%
             IF req34% = 1 THEN 
               ok% = 1
             ELSE 
               ok% = 0
             END IF 
           END IF 
           IF ok% = 1 THEN 
             CALL MSNeu1(msart1%,knr%,opt%,codems%)
             CALL ADRRechnung1()
           ELSE 
             cums1% = coderech.master
             CALL Master1(msart1%)
           END IF 
         END IF 
       END IF 
     END IF 
   CASE 97
     REM Projekt-Button
     CALL MAPRJZuord()
   CASE 98
     msart1% = 0
     a% = RECCOUNT ("*")
     IF a% > 3 THEN 
       ENTER posnr.schein ROW 3,0
     ELSE 
       ENTER posnr.schein ROW a%,0
     END IF 
   CASE 99
     f.neu.enabled = 0
     f.bearb.enabled = 0
     f.suchen.enabled = 0
     f.suchen.visible = 0
     f.abbruch.enabled = - 1
     f.abbruch.visible = - 1
     f.neuefloskel.enabled = 0
     f.buchung.enabled = 0
     f.schein.enabled = 0
     f.zurueck.enabled = 0
     f.positionserfassung.enabled = 0
     f.preise.enabled = 0
     f.drucken.enabled = 0
     f.liste.enabled = 0
     f.vorgaenger.enabled = 0
     f.kopftext.enabled = 0
     f.fusstext.enabled = 0
     msart1% = 0
     MOUSE ON 
     IF PAGE = 1 THEN 
       IF DEFA$ = "MEGA" AND defaneu$ <> "j" AND StatusM.master = "b" THEN 
         CALL Fehler("Vorgang wurde bereits gebucht!","Eine énderung ist nicht mehr mîglich!")
         END SUB 
       END IF 
       REM CALL FStore("master")
       FORM 
       MOUSE ON 
       IF adresstext.master = "" THEN 
         codems% = codems.master
         SELECT KEY codems% LOCK FILE "master" INDEX codems.master
         Adresstext.master = MakeAdrMast$(CodeKU.ADRESSEN, - 1,0,0)
         CALL FStore("master")
         FORM 
       END IF 
       MOUSE ON 
       REM ON ERROR GOTO ErrorHandler
       SET EDIT SELECT ON 
       ENTER nummer.master,0
       SET EDIT SELECT OFF 
       IF DEFA$ = "MEGA" THEN defaneu$ = "n"
     ELSE 
       MOUSE ON 
       SET EDIT SELECT ON 
       ENTER PreisNetto.master,0
       SET EDIT SELECT OFF 
     END IF 
     f.neu.enabled = - 1
     f.bearb.enabled = - 1
     f.suchen.enabled = - 1
     f.suchen.visible = - 1
     f.abbruch.enabled = 0
     f.abbruch.visible = 0
     f.neuefloskel.enabled = - 1
     f.buchung.enabled = - 1
     f.schein.enabled = - 1
     f.zurueck.enabled = - 1
     f.positionserfassung.enabled = - 1
     f.preise.enabled = - 1
     f.drucken.enabled = - 1
     f.liste.enabled = - 1
     f.vorgaenger.enabled = - 1
     f.kopftext.enabled = - 1
     f.fusstext.enabled = - 1
   CASE 100
      REM Prolog
      IF ProloGros$ LIKE "G" THEN 
        ProloGros$ = "K"
        f.PtextGross.Visible = - 1
        f.PtextGross.enabled = - 1
        EpiloGros$ = "G"
        f.EtextGross.Visible = 0
        f.EtextGross.enabled = 0
      ELSE 
        ProloGros$ = "G"
        f.PtextGross.Visible = 0
        f.PtextGross.enabled = 0
      END IF 
    CASE 101
      REM Epilog
      IF EpiloGros$ LIKE "G" THEN 
        EpiloGros$ = "K"
        f.EtextGross.Visible = - 1
        f.EtextGross.enabled = - 1
        ProloGros$ = "G"
        f.PtextGross.Visible = 0
        f.PtextGross.enabled = 0
      ELSE 
        EpiloGros$ = "G"
        f.EtextGross.Visible = 0
        f.EtextGross.enabled = 0
      END IF 
   CASE 102
     REM Dokument schÅtzen
     code% = codems.master
     schutz% = dokschutz.master
     CALL DokSchutz(code%,schutz%)
   CASE 103
     REM eine Rechnung zu einer Gutschrift zuordnen
     REM aus der Gutschriftsmaske heraus
     code% = codems.master
     CALL ReZuGut(code%)
   CASE 104
     REM Mahnsperre setzen
     codems% = codems.master
     codeku% = codeku.master
     IF NOT disabled%("MAHNSPERRE") THEN 
       SELECT FIRST FILE "adressen" INDEX codeku.adressen
       SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
       IF mahnsperre.adressen LIKE "j" THEN 
         CALL Fehler("Es wurde die generelle Mahnsperre gestzt, deshalb sind hier keine Aktionen mîglich!","")
         GOTO emaend230120071
       END IF 
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT KEY codems% LOCK FILE "master" INDEX codems.master
       Msper$ = Mahnsperre.master
       dat% = MahnsperBisdat.master
       IF dat% > 0 THEN 
         dat$ = DATE$ (dat%,"0d.mm.yyyy")
       ELSE 
         dat$ = ""
       END IF 
a230120071: 
       
       CREATE DIALOG "MS",0,0,187,96,"Mahnsperre","MS Sans Serif",8
       ADD DIALOG "MS",4,3,5,182,63,0,""
       ADD DIALOG "MS",5,5,10,175,30,0,"Bitte ak-/deaktivieren Sie die Mahnsperre und tragen Sie ggf.ein, bis wann die Mahnsperre gelten soll!"
       ADD DIALOG "MS",2,10,40,74,12,0,"Mahnsperre J/N","j","n",Msper$
       ADD DIALOG "MS",6,90,40,44,12,0,0,dat$,10
       REM ADD DIALOG "MS",9,7,20,20,19,2
       ADD DIALOG "MS",1,35,75,55,16,1,"&OK",1,1
       ADD DIALOG "MS",1,93,75,54,16,0,"&Abbrechen",0,0
       DIALOG "MS",req%
       REMOVE DIALOG "MS"
       IF req% = 1 THEN 
         IF NOT DateOK%(dat$) AND dat$ <> "" THEN 
           CALL Fehler("Sie haben keinen korrekten Datumswert eingegeben!","Datumsformat:  dd.mm.yyyy")
           GOTO a230120071
         END IF 
         Mahnsperre.master = Msper$
         IF msper$ LIKE "j" THEN 
           MahnsperBisdat.master = dat$
         ELSE 
           MahnsperBisdat.master = 0
         END IF 
         CALL QuickStore("master")
       END IF 
     END IF 
emaend230120071: 
   CASE ELSE 
     MSSub% = 0
   END SELECT 
   IF cums% > 0 THEN 
     SELECT FIRST FILE "master" INDEX codems.master
     SELECT FORM KEY cums% FILE "master" INDEX codems.master
     FORM 
   END IF 

   offBMCh% = 1
   CALL BMCheckMail()
 WEND 
end111020054: 
 MOUSE OFF 
 IF MSArt% = 2 OR MSArt% = 7 THEN 
   nb$ = LEFT$ (nachname.adressen,30)
   REQUEST "Sollen die UmsÑtze fÅr " + nb$,"neu berechnet werden?",135,req%
   IF req% = 1 THEN 
     CALL UmsFuel1einz(codeku.master)
   END IF 
 END IF 
 MOUSE ON 
 _formend% = 0
 SELECT WHERE FILE "master"
 SELECT WHERE FILE "FLOSKEL"
 SELECT WHERE FILE "ABZUGANG"
 SELECT WHERE FILE "vertrete"
 SELECT WHERE FILE "umsatz"
 SELECT WHERE FILE "provisio"
 SELECT WHERE FILE "artprov"
 cums% = 0
 END SUB 
 
SUB Master1(art%)
 CALL DFile(3,"MASTER" + _fpw$)
 CALL DFile(3,"FLOSKEL" + _fpw$)
 CALL DFile(3,"ABZUGANG" + _fpw$)
 CALL DFile(3,"vertrete" + _fpw$)
 CALL DFile(3,"umsatz" + _fpw$)
 CALL DFile(3,"provisio" + _fpw$)
 CALL DFile(3,"artprov" + _fpw$)
 IF DEFA$ = "MEGA" THEN 
   CALL DFile(3,"KSATZ" + _fpw$)
   CALL DFile(3,"SSATZ" + _fpw$)
 END IF 
 adrform$ = "ADRESSEN"
 IF ProjectJN$ = "TRUE" THEN adrform$ = "ADRPROJ"
 IF DEFA$ = "MEGA" THEN adrform$ = "ADRDEFA"
 MSArt1% = art%
 SELECT CASE MSArt1%
 CASE 1
   MSArt1$ = "Angebote"
   SFORM$ = "UNI"
 CASE 2
   MSArt1$ = "Rechnungen"
   SFORM$ = "UNI"
 CASE 3
   MSArt1$ = "Lieferscheine"
   SFORM$ = "LIEFER"
 CASE 4
   MSArt1$ = "AuftrÑge"
   SFORM$ = "UNI"
 CASE 5
   MSArt1$ = "Bestellungen"
   SFORM$ = "UNI"
 CASE 7
   MSArt1$ = "Gutschriften"
   SFORM$ = "UNI"
 END SELECT 
 SET STATUS ""
 _formend% = 0
 WHILE _formend% = 0
   MSsub% = 0
   REM IF FORM <> "MASTER" THEN 
     CALL MNMASTER()
     IF ProjectJN$ <> "TRUE" THEN 
       OPEN FORM GPrjForm$ + "MASTER1"
     ELSE 
       OPEN FORM GPrjForm$ + "MAST1PRJ"
     END IF 
     SET STATUS MSArt$
     SET HEADING title$ + " - " + MSArt1$
     MasterArt$ = MSArt1$
     CALL MSIntro1()
   REM END IF 
   MENU ON 
   CALL MSUpdate1()
   MOUSE ON 
   FORM 
   cums% = CodeMS.master
   IF MSsub% = 0 THEN WAIT MOUSE OR KEY OR MENU 
   SELECT CASE MSsub%
   CASE 1
     CALL Schein()
     msart1% = 0
   CASE 3
     CALL MSBuchung(codems.master,0)
   CASE 4
     CALL MSDrucken(codems.master)
   CASE 5
     CALL MSEK()
   CASE 6
     CALL MastADRVorg()
   CASE 7
     CALL MastADRCon()
   CASE 8
     noscheinfound% = 0
     CALL MSNeu()
   CASE 9
     CALL FStore("master")
   CASE 10
     CALL MSSuchen()
   CASE 11
     CALL MSKopftext()
   CASE 12
     CALL MSFusstext()
   CASE 15
     msart1% = 0
     CALL FLOSKEL()
   CASE 98
     msart1% = 0
     a% = RECCOUNT ("*")
     IF a% > 3 THEN 
       ENTER posnr.schein ROW 3,0
     ELSE 
       ENTER posnr.schein ROW a%,0
     END IF 
   CASE 99
     msart1% = 0
     MOUSE ON 
     IF PAGE = 1 THEN 
       IF DEFA$ = "MEGA" AND defaneu$ <> "j" AND StatusM.master = "b" THEN 
         CALL Fehler("Vorgang wurde bereits gebucht!","Eine énderung ist nicht mehr mîglich!")
         END SUB 
       END IF 
       CALL FStore("master")
       FORM 
       MOUSE ON 
       IF adresstext.master = "" THEN 
         codems% = codems.master
         SELECT KEY codems% LOCK FILE "master" INDEX codems.master
         Adresstext.master = MakeAdrMast$(CodeKU.ADRESSEN, - 1,0,0)
         CALL FStore("master")
         FORM 
       END IF 
       MOUSE ON 
       ENTER nummer.master,0
       IF DEFA$ = "MEGA" THEN defaneu$ = "n"
     ELSE 
       MOUSE ON 
       ENTER PreisNetto.master,0
     END IF 
   END SELECT 
 WEND 
 _formend% = 0
 cums% = 0
 END SUB 
 
 
 
 
 
 
 ' MASTER: Beschriftungen im Formular generieren
 ' =======================================================================
 
SUB MSUpdate()
 SELECT FIRST FILE "ABZUGANG" INDEX CodeMS.ABZUGANG
 SELECT KEY CodeMS.MASTER FILE "ABZUGANG" INDEX CodeMS.ABZUGANG
 IF FOUND ("ABZUGANG") THEN buchung$ = "Bu&chung Æ" ELSE buchung$ = "Bu&chung"
 IF Rabatt.MASTER > 0 THEN cmRabatt$ = "Rabatt Æ" ELSE cmRabatt$ = "Rabatt"
 IF KalkArt.MASTER = 0 THEN RabattFormel$ = "bezogen auf Nettosumme" ELSE RabattFormel$ = "bezogen auf Bruttosumme"
 IF StatusM.master LIKE "s" THEN 
   storniert$ = "storniert"
 ELSE 
   storniert$ = ""
 END IF 
 IF EXISTS (codems.master,codems.dokument) THEN dokus$ = "Dokumente Æ" ELSE dokus$ = "Dokumente"
 IF MultipleVAT%(CodeMS.MASTER) THEN cmRabatt$ = "[Rabatt]"
 SELECT FIRST FILE "umsatz" INDEX codeku.umsatz
 SELECT FORM KEY knr% FILE "umsatz" INDEX codeku.umsatz
 IF ProjectJN$ = "TRUE" THEN 
   IF projekt.master <> "" THEN 
     projm$ = Projekt.master
   ELSE 
     projm$ = "<ohne Zuordnung>"
   END IF 
 END IF 
 SELECT FIRST FILE "waehrung" INDEX CodeW.waehrung
 SELECT KEY CodeW.master FILE "waehrung" INDEX CodeW.waehrung
 IF CodeW.waehrung = CodeW.master THEN 
   IF UCASE$ ( FORM ) = "MASTER" OR UCASE$ ( FORM ) = "MASTPRJ" THEN 
     mastwaehr$ = "WÑhrung: " + waehrungbezeich.waehrung
   ELSE 
     mastwaehr$ = "Erfass.wÑhrung war: " + waehrungbezeich.waehrung
   END IF 
   zweitwaehr$ = LEFT$ (waehrung.waehrung,4)
   euro% = umrechnung.master
   IF codew.master <> 0 THEN 
     waehrmarti% = codew.master
     waehrmarti$ = waehrung.master
   END IF 
 ELSE 
   mastwaehr$ = "<ohne Zuordnung>"
 END IF 


  IF Mahnsperre.master LIKE "j" THEN 
    IF MahnsperBisdat.master > 0 THEN 
      mahnsperre$ = "Mahnsperre bis: " + DATE$ (MahnsperBisdat.master,"0d.mm.yyyy")
    ELSE 
      mahnsperre$ = "Mahnsperre gesetzt"
    END IF 
    ON ERROR GOTO w240220092
    f.mahnsperre.BackColor = 2
w240220092: 
    ON ERROR GOTO ErrorHandler
  ELSE 
    mahnsperre$ = "Mahnsperre setzen"
    ON ERROR GOTO w240220093
    f.mahnsperre.BackColor = 229
w240220093: 
    ON ERROR GOTO ErrorHandler
  END IF 





 IF dokschutz.master > 0 THEN 
   REM rot
   ON ERROR GOTO err180620041
   f.bearb.enabled = 0
   f.sichern.enabled = 0
   f.schutz.BackColor = 2
   schutz$ = "Schutz Æ"
err180620041: 
   ON ERROR GOTO ErrorHandler
 ELSE 
   REM grÅn
   ON ERROR GOTO err180620042
   f.bearb.enabled = - 1
   f.sichern.enabled = - 1
   f.schutz.BackColor = 3
   schutz$ = "Schutz"
err180620042: 
   ON ERROR GOTO ErrorHandler 
 END IF 
 ABuchKto$ = ""
 REM CALL Fehler("TEILRAUS","")
   dat$ = "Master"
   IF EXISTS (codems.master,codems.Teilraus) THEN 
     rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$,",9999999.00")
   ELSE 
     rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$,",9999999.00")
   END IF 
   IF EXISTS (codems.master,codems.rausgang) THEN 
     SELECT FIRST FILE "rausgang" INDEX codems.rausgang
     SELECT KEY codems.master FILE "rausgang" INDEX codems.rausgang
     wgruppe$ = wgruppe.rausgang
     warenart$ = warenart.rausgang
     IF codewgru.rausgang < 1 THEN wgruppe$ = "<ohne Zuordnung>"
     IF codewa.rausgang < 1 THEN warenart$ = "<ohne Zuordnung>"
     ABuchKto$ = wgruppe$ + "/" + warenart$
     IF UCASE$ (gezmitskonto.rausgang) = "J" THEN 
       rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$ - skonto.rausgang,",9999999.00")
       restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEU.dat$ - SummeTeilEU.dat$ - skontoeu.rausgang,",9999999.00")
     END IF 
     REM IF UCASE$ (erledigt.rausgang) = "J" THEN 
       REM rest$ = "0.00"
       REM resteu$ = "0.00"
     REM END IF 
   END IF 
   IF EXISTS (codems.master,codems.Teilraus) THEN 
     teil1$ = "Zahlungen Æ"
   ELSE 
     teil1$ = "Zahlungen"
   END IF 
   REM ************************************************************************
 IF EXISTS (codems.master,codems.MAHNUNG) THEN 
   
   mahnung$ = "&Mahnung Æ"
   SELECT FIRST FILE "MAHNUNG" INDEX codems.mahnung
   SELECT KEY codems.master FILE "MAHNUNG" INDEX codems.mahnung
   MahnSumme1% = 0
   mstufe1% = 0
   REM CALL Fehler("","")
 
   WHILE NOT EOF ("Mahnung") AND codems.mahnung = codems.master
     stmahn$ = statusmahn.mahnung
     IF UCASE$ (statusmahn.mahnung) <> "J" THEN 
 
       codere% = codere.mahnung
       dat$ = "rausgang"
       mahnok% = 0
       IF EXISTS (codere%,codere.Teilraus) AND mahnok% = 1 THEN 
         FILE "teilraus"
         INDEX codere.teilraus
         SELECT FIRST 
         SELECT KEY codere% FILE "teilraus" INDEX codere.teilraus
         CALL SumTeil(codems%,codere%,"teilraus",dat$)
         FILE dat$
         SELECT FIRST 
         SELECT KEY codere% FILE dat$ INDEX codere.dat$
         REM rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
         restEu% = GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$
       ELSE 
         rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
         restEu% = GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$
       END IF 
 
       MahnSumme1% = MahnSumme1% + resteu%
       IF resteu% > 0 OR mahnok% = 0 THEN 
         IF Mahndatum1.mahnung > 0 THEN 
           IF mstufe1% < 1 THEN mStufe1% = 1
         END IF 
         IF Mahndatum2.mahnung > 0 THEN 
           IF mstufe1% < 2 THEN mStufe1% = 2
         END IF 
         IF Mahndatum3.mahnung > 0 THEN 
           IF mstufe1% < 3 THEN mStufe1% = 3
         END IF 
         IF Mahndatum4.mahnung > 0 THEN 
           IF mstufe1% < 4 THEN mStufe1% = 4
         END IF 
         IF Mahndatum5.mahnung > 0 THEN 
           IF mstufe1% < 5 THEN mStufe1% = 5
         END IF 
       END IF 
     END IF 
     SELECT NEXT FILE "Mahnung" INDEX codems.mahnung
   WEND 
   SELECT CASE mstufe1%
     CASE 0
       f.s1.BackColor = 229
       f.s1.ForeColor = 1
     CASE 1
       f.s1.BackColor = 9
       f.s1.ForeColor = 0
     CASE 2
       f.s1.BackColor = 1
       f.s1.ForeColor = 0
     CASE 3
       f.s1.BackColor = 2
       f.s1.ForeColor = 1
     CASE ELSE 
       f.s1.BackColor = 2
       f.s1.ForeColor = 1
   END SELECT 
 ELSE 
   ON ERROR GOTO e260720061
   mstufe1% = 0
   f.s1.BackColor = 229
   f.s1.ForeColor = 1
e260720061: 
   ON ERROR GOTO ErrorHandler
 END IF 
   
   REM ************************************************************************

 END SUB 
 
SUB MSRabatt()
 IF DEFA$ = "MEGA" AND StatusM.master = "b" THEN 
   CALL Fehler("Vorgang wurde bereits gebucht!","Eine énderung ist nicht mehr mîglich!")
   END SUB 
 END IF 
 IF MultipleVAT%(CodeMS.MASTER) THEN CALL Fehler("Rabattvergabe nicht mîglich!","Gesamtrabatte kînnen nur dann vergeben werden, wenn alle Positionen mit dem gleichen Mehrwertsteuersatz berechnet werden.") ELSE FORM 2
 END SUB 
 
SUB MSUpdate1()
 SELECT KEY CodeMS.MASTER FILE "ABZUGANG" INDEX CodeMS.ABZUGANG
 IF FOUND ("ABZUGANG") THEN buchung$ = "Bu&chung Æ" ELSE buchung$ = "Bu&chung"
 IF Rabatt.MASTER > 0 THEN cmRabatt$ = "Rabatt Æ" ELSE cmRabatt$ = "Rabatt"
 IF KalkArt.MASTER = 0 THEN RabattFormel$ = "bezogen auf Nettosumme" ELSE RabattFormel$ = "bezogen auf Bruttosumme"
 IF StatusM.master LIKE "s" THEN 
   storniert$ = "storniert"
 ELSE 
   storniert$ = ""
 END IF 
 IF ProjectJN$ = "TRUE" THEN 
   IF projekt.master <> "" THEN 
     projm$ = Projekt.master
   ELSE 
     projm$ = "<ohne Zuordnung>"
   END IF 
 END IF 
 IF MultipleVAT%(CodeMS.MASTER) THEN cmRabatt$ = "[Rabatt]"
 SELECT FORM KEY knr% FILE "umsatz" INDEX codeku.umsatz
 END SUB 
 
 
FUNCTION MultipleVAT%(codems%)
 CALL DFile(3,"SCHEIN" + _fpw$)
 CALL DFile(3,"LIEFRUCK" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 DIM MwStSchl%(10)
 DIM MwStBetrag%(10)
 posnr% = 0
 FOR a% = 0 TO 10
   MwStSchl%(a%) = 0
   MwStBetrag%(a%) = 0
 NEXT 
 MwStCount% = 0
 MOUSE OFF 
 FILE "SCHEIN"
 INDEX CodeMS.SCHEIN
 SELECT FIRST 
 SELECT KEY codems%
 _gesnetto% = 0
 WHILE CodeMS.SCHEIN = codems% AND NOT EOF ("SCHEIN")
   IF Art.SCHEIN = 0 THEN 
     mwstfound% = - 1
     FOR a% = 0 TO MwStCount%
       IF MwStSchl%(a%) = MwSt.SCHEIN THEN mwstfound% = a%
     NEXT a%
     IF mwstfound% = - 1 THEN 
       MwStSchl%(MwStCount%) = MwSt.SCHEIN
       mwstfound% = MwStCount%
       MwStCount% = MwStCount% + 1
     END IF 
     IF KalkArt.MASTER = 0 THEN 
       MwStBetrag%(mwstfound%) = MwStBetrag%(mwstfound%) + ((GesamtNetto.SCHEIN / 100) * MwStSchl%(mwstfound%))
       _gesnetto% = _gesnetto% + GesamtNetto.SCHEIN
     ELSE 
       MwStBetrag%(mwstfound%) = MwStBetrag%(mwstfound%) + (GesamtBrutto.SCHEIN - ((GesamtBrutto.SCHEIN / (100 + MwStSchl%(mwstfound%)) * 100)))
     END IF 
   END IF 
   SELECT NEXT FILE "SCHEIN" INDEX CodeMS.SCHEIN
 WEND 
 FILE "MASTER"
 MOUSE ON 
 IF MwStCount% <> 1 THEN MultipleVAT% = - 1 ELSE MultipleVAT% = 0
 END FUNCTION 
 
 
 
 ' MASTER Intro
 ' =======================================================================
 
SUB MSIntro()
 noscheinfound% = 0
 FILE "master"
 IF cums% <> 0 THEN 
   SELECT FORM KEY cums% FILE "MASTER" INDEX CodeMS.MASTER
 ELSE 
   scode% = knr% * 10 + MSArt%
   SELECT FORM KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 END IF 
 IF NOT FOUND ("MASTER") THEN 
   noscheinfound% = 1
   BLANK FORM 
   CALL MSNeu()
 END IF 
 END SUB 
 
SUB MSIntro1()
 FILE "master"
 IF cums1% <> 0 THEN 
   SELECT FORM KEY cums1% FILE "MASTER" INDEX CodeMS.MASTER
 ELSE 
   scode% = knr% * 10 + MSArt1%
   SELECT FORM KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 END IF 
 IF NOT FOUND ("MASTER") THEN 
   noscheinfound% = 1
   BLANK FORM 
   CALL MSNeu()
   noscheinfound% = 0
 END IF 
 END SUB 
 
  
 
 ' MASTER Neu
 ' =======================================================================
 
SUB MSNeu()
 codekurech% = knr%
 cums% = 0
 ganzneu% = - 1
 arttmp% = art.master
 DIM positionen$(1,1)
 IF DEFA$ = "MEGA" THEN 
   CALL PeriodenPruef()
   IF periode% = 0 THEN END SUB 
 END IF 
 IF DEFA$ = "MEGA" THEN defaneu$ = "j"
 FILE "master"
 IF codems.master > 0 THEN 
   cums% = CodeMS.master
 END IF 
 IF codeku.adressen > 0 THEN 
   knr% = CodeKU.adressen
 END IF 
 opt% = 8
 REM BLANK 
anf111020051: 
 SELECT FIRST FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 SELECT KEY codekurech% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 FORM 
 
 IF noscheinfound% <> 1 THEN 
   optNeuBeleg% = 0
   CREATE DIALOG "MS",0,0,197,96,"Auswahl","MS Sans Serif",8
   ADD DIALOG "MS",4,3,5,192,63,0,"Bitte wÑhlen zwischen Neuerfassung/HinzufÅgen"
   ADD DIALOG "MS",3,6,42,154,10,0,"Neuerfassung eines Beleges",0,optNeuBeleg%
   ADD DIALOG "MS",3,6,55,184,10,0,"HinzufÅgen von Positionen aus einem anderen Beleg",1,optNeuBeleg%
   ADD DIALOG "MS",9,7,15,20,19,2
   ADD DIALOG "MS",1,35,75,55,16,1,"&OK",1,1
   REM ADD DIALOG "MS",1,93,75,54,16,0,"&Abbrechen",0,0
   DIALOG "MS",reqzu%
   REMOVE DIALOG "MS"
   
   IF reqzu% = 0 THEN 
     IF cums% > 0 THEN 
       FILE "master"
       INDEX codems.master
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT KEY cums% LOCK FILE "master" INDEX codems.master
       SELECT REMOVE FILE "master"
     END IF 
     GOTO end111020053
   END IF 
 ELSE 
   optNeuBeleg% = 0
   reqzu% = 1
 END IF 



 aktADR$ = "j"
 IF optNeuBeleg% = 0 THEN 
   CREATE DIALOG "MSNEU",0,0,178,147,title$,"MS Sans Serif",8
    ADD DIALOG "MSNEU",4,0,0,178,100,0,""
    ADD DIALOG "MSNEU",3,34,11,132,9,0,"Standardvorlage mit Standardfloskeln",8,opt%
    REM ADD DIALOG "MSNEU",3,34,22,132,10,0,"ohne Vorlage (leer),keine Floskeln",1,opt%
    ADD DIALOG "MSNEU",3,34,22,76,10,0,"Angebot als Vorlage",2,opt%
    ADD DIALOG "MSNEU",3,34,33,84,10,0,"Rechnung als Vorlage",3,opt%
    ADD DIALOG "MSNEU",3,34,44,90,10,0,"Lieferschein als Vorlage",4,opt%
    ADD DIALOG "MSNEU",3,34,55,75,10,0,"Auftrag als Vorlage",5,opt%
    ADD DIALOG "MSNEU",3,34,66,91,10,0,"Bestellung als Vorlage",6,opt%
    ADD DIALOG "MSNEU",3,34,77,80,10,0,"Gutschrift als Vorlage",7,opt%
    ADD DIALOG "MSNEU",3,34,88,180,10,0,"Preisanfrage als Vorlage",9,opt%
    ADD DIALOG "MSNEU",9,9,12,20,20,2
    ADD DIALOG "MSNEU",4,0,99,178,25,0,""
    ADD DIALOG "MSNEU",2,34,110,138,10,0,"Vorlagen aus aktueller Adresse wÑhlen","j","n",aktADR$
    ADD DIALOG "MSNEU",1,34,129,55,16,1,"&OK",1,1
    IF noscheinfound% <> 1 THEN ADD DIALOG "MSNEU",1,92,129,54,16,0,"&Abbrechen",0,0
 ELSE 
   CREATE DIALOG "MSNEU",0,0,178,147,title$,"MS Sans Serif",8
    ADD DIALOG "MSNEU",4,0,0,178,100,0,""
    REM ADD DIALOG "MSNEU",3,34,11,132,9,0,"Standardvorlage mit Standardfloskeln",8,opt%
    REM ADD DIALOG "MSNEU",3,34,22,132,10,0,"ohne Vorlage (leer),keine Floskeln",1,opt%
    ADD DIALOG "MSNEU",3,34,22,120,10,0,"HinzufÅgen aus Angebot",2,opt%
    ADD DIALOG "MSNEU",3,34,33,120,10,0,"HinzufÅgen aus Rechnung",3,opt%
    ADD DIALOG "MSNEU",3,34,44,120,10,0,"HinzufÅgen aus Lieferschein",4,opt%
    ADD DIALOG "MSNEU",3,34,55,120,10,0,"HinzufÅgen aus Auftrag",5,opt%
    ADD DIALOG "MSNEU",3,34,66,120,10,0,"HinzufÅgen aus Bestellung",6,opt%
    ADD DIALOG "MSNEU",3,34,77,120,10,0,"HinzufÅgen aus Gutschrift",7,opt%
    ADD DIALOG "MSNEU",3,34,88,180,10,0,"HinzufÅgen aus Preisanfrage",9,opt%
    ADD DIALOG "MSNEU",9,9,12,20,20,2
    ADD DIALOG "MSNEU",4,0,99,178,25,0,""
    ADD DIALOG "MSNEU",2,34,110,138,10,0,"Vorlagen aus aktueller Adresse wÑhlen","j","n",aktADR$
    ADD DIALOG "MSNEU",1,34,129,55,16,1,"&OK",1,1
    IF noscheinfound% <> 1 THEN ADD DIALOG "MSNEU",1,92,129,54,16,0,"&Abbrechen",0,0
 END IF 
 DIALOG "MSNEU",req%
 REMOVE DIALOG "MSNEU"
 noscheinfound% = 0
 IF req% = 1 THEN 
   IF aktADR$ = "n" THEN 
     adrser% = 0
     knr% = codekurech%
     adrglob% = 0
     adr% = 0
     adr% = ADRSuche%(0)
     IF adr% = 0 THEN 
       CALL Fehler("Vorlagenauswahl wurde abgebrochen!","")
       GOTO anf111020051
     END IF 
   END IF 
   IF opt% <> 8 THEN globalGutsch$ = "TRUE"
   MOUSE OFF 
   OK% = 0
   IF optNeuBeleg% = 0 THEN 
     IF ganzneu% = - 1 THEN 
       ganzneu% = 0
       FILE "master"
       BLANK 
       cums% = SER ("MASTER",1)
       CodeMS.MASTER = cums%
       erledigt.master = "N"
       codeku.master = codekurech%
       datum.master = TODAY 
       codema.master = 999
     ELSE 
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT KEY cums% LOCK FILE "master" INDEX codems.master
     END IF 
     provisproz.master = 0

     REM -> jetzt in FACTURA bei den Globalvariablen -> _kalkart$ = ReadConfig$("FACTURA","Kalkulationsschema")
     IF UCASE$ (_kalkart$) = "NETTO" THEN 
       KalkArt.MASTER = 0
     ELSE 
       KalkArt.MASTER = 1
     END IF 
     Art.Master = MSArt%
   ELSE 
     SELECT KEY cums% LOCK FILE "Master" INDEX codems.master
     MSArt% = Art.Master
   END IF 
   SELECT CASE MSArt%
   CASE 1
     Titel.MASTER = "Angebot"
   CASE 2
     Titel.MASTER = "Rechnung"
   CASE 3
     Titel.MASTER = "Lieferschein"
   CASE 4
     Titel.MASTER = "Auftrag"
   CASE 5
     Titel.MASTER = "Bestellung"
   CASE 7
     Titel.MASTER = "Gutschrift"
   CASE 8
     Titel.Master = "ext.Preisanfrage"
   END SELECT 
 
   IF opt% = 8 AND optNeuBeleg% = 0 THEN 
     SELECT FIRST FILE "stamm"
     euro% = umrechnung.stamm
     codew% = codew.stamm
     FILE "floskel"
     IF msart% <> 8 THEN 
       SELECT WHERE art.floskel = 1 AND spezial.floskel = msart%
       SELECT FIRST 
     ELSE 
       SELECT WHERE art.floskel = 1 AND spezial.floskel = 16
       SELECT FIRST 
     END IF 
     IF NOT EOF ("floskel") THEN 
       prolog.master = floskel.floskel
     END IF 
     SELECT WHERE FILE "floskel"
     IF msart% <> 8 THEN 
       SELECT WHERE art.floskel = 2 AND spezial.floskel = MSArt%
       SELECT FIRST 
     ELSE 
       SELECT WHERE art.floskel = 2 AND spezial.floskel = 16
       SELECT FIRST 
     END IF 
     IF NOT EOF ("floskel") THEN 
       epilog.master = floskel.floskel
     END IF 
     FILE "master"
     art.master = MSArt%
     umrechnung.master = euro%
     codew.master = codew%
     waehrung.master = zweitwaehr$
     anxnu$ = nummer.master
     CALL FStore("master")
     scode% = knr% * 10 + vMSArt%
     vcums% = CodeMS.Master
   END IF 
  
   SELECT CASE opt%
   CASE 2
     bedingung$ = "art.master=1"
     art% = 1
   CASE 3
     bedingung$ = "art.master=2"
     art% = 2
   CASE 4
     bedingung$ = "art.master=3"
     art% = 3
   CASE 5
     bedingung$ = "art.master=4"
     art% = 4
   CASE 6
     bedingung$ = "art.master=5"
     art% = 5
   CASE 7
     bedingung$ = "art.master=7"
     art% = 7
   CASE 9
     bedingung$ = "art.master=8"
     art% = 8
   END SELECT 
   gsuart% = art%
   REM CALL Fehler("Suche3n","")
   IF opt% > 1 AND opt% < 10 AND opt% <> 8 THEN 
     IF opt% <> 7 THEN 
       vMSArt% = opt% - 1
     ELSE 
       vMSArt% = opt%
     END IF 
     scode% = knr% * 10 + vMSArt%
     vcums% = CodeMS.Master
     CALL FStore("MASTER")
     REM ###***
     MOUSE OFF 
     REDIM auswahl$( RECCOUNT ("master"),1)
     REDIM auswahl$( RECCOUNT ("master"))
     REDIM positionen$( RECCOUNT ("master"))
     REM FOR a% = 0 TO RECCOUNT ("master")
       REM Auswahl$(a%) = ""
     REM NEXT a%
     REM FOR a% = 0 TO RECCOUNT ("master")
       REM Positionen$(a%) = ""
     REM NEXT a%
     FILE "master"
     SELECT WHERE 
     IF GCODIE% = - 1 THEN 
       CALL SearchInitM1()
     END IF 
     IF aktADR$ = "j" THEN 
       INDEX quickcodeku.master
       SELECT FIRST 
       SELECT KEY scode% INDEX quickcodeku.master
       counter% = - 1
       WHILE NOT EOF ("master") AND quickcodeku.master = scode%
         counter% = counter% + 1
         IF euromaske% = 1 THEN 
 Positionen$(counter%) = Nummer.Master + "   " + DATE$ (Datum.MASTER,"0d.mm.yy") + "    " + STR$ (GesBruttoEU.MASTER,",999999999.00") + " EUR" + nachname.MASTER + + "  [" + projekt.master + "]" + + SPACE$ (190) + STR$ (codems.master,"000000")
         ELSE 
 Positionen$(counter%) = Nummer.Master + "   " + DATE$ (Datum.MASTER,"0d.mm.yy") + "    " + STR$ (GesBrutto.MASTER,",999999999.00") + " " + waehrung.master + nachname.MASTER + "  [" + projekt.master + "]" + SPACE$ (190) + STR$ (codems.master,"000000")
         END IF 
         IF GCODIE% = - 1 THEN 
           CALL SearchVorbM1("Master")
         END IF 
         SELECT NEXT INDEX quickcodeku.master
       WEND 
     ELSE 
Adrsel160120000:  
       IF aktADR$ = "n" AND adr% > 1 THEN 
         IF EXISTS (adr%,codeku.master) THEN 
           REM CALL Fehler("test","")
           REM hier auf QuickCodeKU zugreifen =codeku+art
           REM SELECT WHERE FILE "master"
           REM SELECT WHERE codeku.master = adr%
           REM QuickCodeKU% = adr% * 10 + Art.MASTER
           QuickCodeKU% = adr% * 10 + vMSArt%
           FILE "master"
           INDEX QuickCodeKU.master
           SELECT FIRST 
           SELECT KEY QuickCodeKU% FILE "master" INDEX QuickCodeKU.master
           counter% = - 1
           WHILE NOT EOF ("master") AND QuickCodeKU.master = QuickCodeKU%
             IF QuickCodeKU.master = QuickCodeKU% THEN 
               counter% = counter% + 1
               IF euromaske% = 1 THEN 
           Positionen$(counter%) = Nummer.Master + "   " + DATE$ (Datum.MASTER,"0d.mm.yy") + "   " + STR$ (GesBruttoEU.MASTER,",999999999.00") + " EUR " + nachname.MASTER + SPACE$ (190) + + "  [" + projekt.master + "]" + + STR$ (codems.master,"000000")
               ELSE 
 Positionen$(counter%) = Nummer.Master + "   " + DATE$ (Datum.MASTER,"0d.mm.yy") + "   " + STR$ (GesBrutto.MASTER,",999999999.00") + " " + waehrung.master + nachname.MASTER + + "  [" + projekt.master + "]" + + SPACE$ (190) + STR$ (codems.master,"000000")
               END IF 
               IF GCODIE% = - 1 THEN 
                 CALL SearchVorbM1("Master")
               END IF 
             END IF 
             SELECT NEXT FILE "master" INDEX QuickCodeKU.master
           WEND 

         ELSE 
           CALL Fehler("Zu dieser Vorlageadresse wurden keine Vorlagen gefunden","Bitte wÑhlen Sie eine andere Adresse aus!")
           adr% = 0
           adr% = ADRSuche%(0)
           IF adr% > 0 THEN 
             GOTO Adrsel160120000
           ELSE 
             GOTO anf111020051
           END IF 
         END IF 
         GOTO w291120081
       END IF 
       FILE "master"
       INDEX art.master
       SELECT FIRST 
       SELECT KEY vMSArt% FILE "master" INDEX art.master
       counter% = - 1
       WHILE NOT EOF ("master") AND art.master = vMSArt%
         IF codeku.master = adr% THEN 
           counter% = counter% + 1
           IF euromaske% = 1 THEN 
           Positionen$(counter%) = Nummer.Master + "   " + DATE$ (Datum.MASTER,"0d.mm.yy") + "   " + STR$ (GesBruttoEU.MASTER,",999999999.00") + " EUR " + nachname.MASTER + SPACE$ (190) + + "  [" + projekt.master + "]" + + STR$ (codems.master,"000000")
           ELSE 
 Positionen$(counter%) = Nummer.Master + "   " + DATE$ (Datum.MASTER,"0d.mm.yy") + "   " + STR$ (GesBrutto.MASTER,",999999999.00") + " " + waehrung.master + nachname.MASTER + + "  [" + projekt.master + "]" + + SPACE$ (190) + STR$ (codems.master,"000000")
           END IF 
           IF GCODIE% = - 1 THEN 
             CALL SearchVorbM1("Master")
           END IF 
         END IF 
         SELECT NEXT FILE "master" INDEX art.master
       WEND 
       SELECT WHERE FILE "master"
       REM EXECUTE "REQUEST ~Vorlage (~ + MSArt$ + ~)auswÑhlen:~,~Nummer,Datum,Nettosumme,Nachname~,25,req%,nummer$,72,Nummer.Master,Datum.MASTER,GesNetto.master,Nachname.MASTER INDEX CodeMS.Master WHERE " + bedingung$
     END IF 
w291120081: 
     FILE "master"
     INDEX codems.master
anf111020052: 
     _cums1% = 0
     MOUSE ON 
     IF counter% > - 1 THEN 
       IF GCODIE% <> - 1 THEN 
         CREATE DIALOG "REGISTER",0,0,522,350,title$,"MS Sans Serif",8
         ADD DIALOG "REGISTER",5,5,4,240,10,0,"WÑhlen Sie einen Beleg"
         ADD DIALOG "REGISTER",7,5,19,509,310,8,2,Positionen$,Auswahl$,Positionen$(0)
         ADD DIALOG "REGISTER",1,209,330,48,16,1,"&OK",1,1
         ADD DIALOG "REGISTER",1,258,330,48,16,0,"&Abbrechen",0,0
         DIALOG "REGISTER",req%
         REMOVE DIALOG "REGISTER"
         IF req% < 1 THEN 
           SELECT FIRST FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
           SELECT KEY codekurech% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
           knr% = codekurech%
           REQUEST "Auswahl wurde abgebrochen! Wollen Sie aus den eben gezeigten","Dokumenten ein anderes als Vorlage wÑhlen",130,req%
           IF req% = 0 THEN GOTO anf111020051
           IF req% = 1 THEN GOTO anf111020052
         END IF 
         GOTO Adrsel160120002

Adrsel160120001: 
         IF aktADR$ = "n" THEN 
           adrser% = 0
           knr% = codekurech%
           adrglob% = 0
           adr% = 0
           adr% = ADRSuche%(0)
           GOTO Adrsel160120000
         END IF 
       ELSE 
         c$ = "aa"
         IF sprung% = 0 THEN 
           req% = CALL ("_SearchShow",c$)
         ELSE 
           req% = CALL ("_SearchReShow",c$)
         END IF 
         req3% = req%
         REM GRechSu1% = - 1
         MENU 3,2,1,"letztes Suchergebnis,F7","LastSearchRe",""
         MENU ON 
         ok% = 0
         REM REQUEST c$,"",2
         REM ret% = CALL ("_SearchClose")
         REM CALL Fehler("","")
         _cums1% = 0
         IF VAL (c$) <> 0 THEN 
           _cums1% = VAL (c$)
           req% = 1
           SET STATUS "...gefunden..."
         ELSE 
           req% = 0
         END IF 
         IF req3% = 2 THEN 
           REM CALL Fehler("Diese Funktion wird nur innerhalb der Adressmaske unterstÅtzt!","")
           CALL Fehler("Diese Funktion wird hier nicht unterstÅtzt!","")
         END IF 
         GOTO w10122007001
       END IF 





     ELSE 
       REQUEST "Auswahl wurde abgebrochen!","Wollen Sie eine andere Vorlageadresse auswÑhlen?",130,req%
       IF req% = 1 THEN 
         adr% = 0
         adr% = ADRSuche%(0)
         IF adr% > 0 THEN 
           GOTO Adrsel160120000
         ELSE 
           GOTO anf111020051
         END IF 
       ELSE 
         GOTO anf111020051
       END IF 
       req% = 1
       opt% = 8
     END IF 
Adrsel160120002:    
     _cums1% = 0
     IF counter% <> - 1 THEN _cums1% = VAL ( RIGHT$ (Auswahl$(0),6))
w10122007001: 
     IF cums% = _cums1% THEN 
       CALL Fehler("Das Quelldokument, aus dem Sie Positionen in Ihr Zieldokument kopieren wollen darf nicht Ihr Zieldokument sein!","")
       req% = 0
     END IF 
     IF req% = 1 AND _cums1% <> 0 THEN 
       REM CALL FStore("MASTER")
         SELECT FIRST FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
         SELECT KEY codekurech% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
         knr% = codekurech%
       SELECT FIRST FILE "MASTER" INDEX codems.Master
       SELECT KEY _cums1% FILE "MASTER" INDEX codems.Master
       IF FOUND ("master") THEN 
         REM 2.Dialog einstellen
         flo% = 2
         IF optNeuBeleg% = 0 THEN 
           CREATE DIALOG "MSNEU",0,0,178,74,title$,"MS Sans Serif",8
           ADD DIALOG "MSNEU",4,0,0,178,50,0,""
           ADD DIALOG "MSNEU",3,34,11,132,9,0,"Floskeltexte 1 zu 1 Åbernehmen",1,flo%
           ADD DIALOG "MSNEU",3,34,22,132,10,0,"Standardfloskeln eintragen",2,flo%
           ADD DIALOG "MSNEU",3,34,33,130,10,0,"keine Floskeln eintragen",3,flo%
           ADD DIALOG "MSNEU",9,9,12,20,20,2
           ADD DIALOG "MSNEU",1,62,56,55,16,1,"&OK",1,1
           DIALOG "MSNEU",req%
           REMOVE DIALOG "MSNEU"
         ELSE 
           flo% = 3
         END IF 
         MOUSE OFF 
         IF aktADR$ = "j" THEN 
           CALL MSPrepare(_cums1%,vcums%,flo%,optNeuBeleg%)
         ELSE 
           CALL MSPrepSpezi(_cums1%,vcums%,flo%,optNeuBeleg%)
         END IF 
         OK% = 1
       ELSE 
         opt% = 8
       END IF 
     ELSE 
       opt% = 8
       REM IF req% = 0 THEN 
         REM opt% = - 1
         REM ok% = 0
         REM neumaster$ = "n"
       REM END IF 
     END IF 
   END IF 
   IF opt% = 8 AND optNeuBeleg% = 0 THEN 
     REM CALL FStore("master")
     FILE "master"
     SELECT KEY vcums% LOCK FILE "MASTER" INDEX CodeMS.Master
     FILE "floskel"
     IF msart% <> 8 THEN 
       SELECT WHERE art.floskel = 1 AND spezial.floskel = msart%
       SELECT FIRST 
     ELSE 
       SELECT WHERE art.floskel = 1 AND spezial.floskel = 16
       SELECT FIRST 
     END IF 
     IF NOT EOF ("floskel") THEN 
       FILE "master"
       prolog.master = floskel.floskel
     END IF 
     FILE "floskel"
     SELECT WHERE FILE "floskel"
     IF msart% <> 8 THEN 
       SELECT WHERE art.floskel = 2 AND spezial.floskel = MSArt%
       SELECT FIRST 
     ELSE 
       SELECT WHERE art.floskel = 2 AND spezial.floskel = 16
       SELECT FIRST 
     END IF 
     IF NOT EOF ("floskel") THEN 
       FILE "master"
       epilog.master = floskel.floskel
     END IF 
     FILE "master"
     CALL FStore("master")
     IF eurosupport$ = "TRUE" THEN 
       IF mastform$ LIKE "EUR" THEN 
         cums% = Codems.master
         SELECT KEY cums% LOCK FILE "master" INDEX Codems.master
         CodeW.master = 3
         NUMBASE "z99999999.000000"
         Waehrung.master = "EUR"
         umrechnung.master = 1
         CALL FStore("master")
         SELECT FORM KEY cums% FILE "master" INDEX CodeMS.master
         mastwaehr$ = "Erfass.wÑhrung war: " + "EUR"
         FORM 
         MOUSE ON 
       ELSE 
         CALL MASTWaehrung()
       END IF 
     END IF 
   END IF 
   IF opt% = 1 OR opt% = 8 OR aktADR$ = "n" THEN 
     SELECT FIRST FILE "ADRESSEN" INDEX CodeKU.adressen
     SELECT KEY knr% FILE "ADRESSEN" INDEX CodeKU.adressen
     FILE "master"
     SELECT FIRST FILE "MASTER" INDEX CodeMS.Master
     SELECT KEY vcums% LOCK FILE "MASTER" INDEX CodeMS.Master
     IF optNeuBeleg% = 0 THEN 
       CodeKU.MASTER = knr%
       Adresse$ = MakeAdr$(CodeKU.ADRESSEN, - 1,0,0)
       adresstext.master = adresse$
       USTNo.master = ""
       USTNo.master = USTNo.adressen
       Anrede.MASTER = Anrede.adressen
       Nachname.Master = Nachname.adressen
       Vorname.master = Vorname.adressen
       Geburtsname.master = Geburtsname.adressen
       Stra·e.master = Stra·e.adressen
       PLZ.master = PLZ.adressen
       Ort.Master = Ort.Adressen
       art.master = MSArt%
       REM nummer.master = ""
       IF MSArt% <> 5 THEN 
         REM wenn keine Bestellung vorliegt
         Kundennummer.Master = Kundennummer.adressen
         IF DEFA$ = "MEGA" AND KostentrÑger.adressen <> "" THEN 
           KostentrÑger.master = KostentrÑger.adressen
         ELSE 
           Kostenstelle.master = Kostenstelle.adressen
         END IF 
       ELSE 
         REM bei Bestellung wird die eigene Kundenr, die man beim Lieferanten
         REM hat eingetragen
         Kundennummer.Master = eigKunr.Adressen
       END IF 
     END IF 
     OK% = 1
   END IF 
   IF OK% = 1 THEN 
     CALL FStore("master")
     SELECT FIRST FILE "MASTER" INDEX CodeMS.Master
     SELECT FORM KEY vcums% LOCK FILE "MASTER" INDEX CodeMS.Master
     SELECT KEY vcums% LOCK FILE "MASTER" INDEX CodeMS.Master
     CALL MSRechnen()
     SELECT FIRST FILE "MASTER" INDEX CodeMS.Master
     SELECT FORM KEY vcums% LOCK FILE "MASTER" INDEX CodeMS.Master
     SELECT KEY vcums% LOCK FILE "MASTER" INDEX CodeMS.Master
     MSsub% = 99
     FORM 
   ELSE 
     SELECT FIRST FILE "MASTER" INDEX CodeMS.Master
     SELECT KEY vcums% LOCK FILE "MASTER" INDEX CodeMS.Master
     SELECT REMOVE 
     IF neumaster$ <> "j" THEN 
       SELECT KEY cums% FILE "MASTER" INDEX CodeMS.Master
     END IF 
   END IF 
 ELSE 
   REM knr% = CodeKU.adressen
   FILE "master"
   scode% = knr% * 10 + 1
   ok% = 1
   SELECT FIRST FILE "MASTER" INDEX QuickCodeKU.MASTER
   SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
   _formend% = 1
   IF NOT FOUND ("MASTER") THEN 
     _formend% = 1
     mssub% = 100
   END IF 
 END IF 
end111020053: 
 cums% = 0
 IF NOT EXISTS (codekurech%,codeku.master) THEN _formend% = 1
 codekurech% = 0
 neumaster$ = "n"
 FORM 
 END SUB 
 
 
SUB MReProvProz()
 codems% = CodeMS.master
 IF NEW ("master") OR MOD ("master") THEN CALL FStore("master")
 SELECT FIRST FILE "master"
 SELECT KEY codems% LOCK FILE "master" INDEX codems.master
 IF EXISTS (codems%,codems.schein) THEN CALL MSRechnen()
 END SUB 
 
SUB SReProvProz()
 codesch% = codesch.schein
 codems% = codems.schein
 REM IF NEW ("schein") OR MOD ("schein") THEN CALL FStore("schein")
 REM SELECT KEY codesch% LOCK FILE "schein" INDEX codesch.schein
 REM CALL SCHRabattProz()
 REM SELECT KEY codesch% LOCK FILE "schein" INDEX codesch.schein
 IF KalkArt.MASTER = 0 THEN 
   vkne% = VKnetto.SCHEIN / Bezugsmenge.schein
   Rabatt.SCHEIN = (VKne% / 100) * RabattProz.SCHEIN
   GesamtNetto.SCHEIN = Anzahl.SCHEIN * (VKne% - Rabatt.SCHEIN)
   GesamtBrutto.SCHEIN = GesamtNetto.SCHEIN + (Gesamtnetto.SCHEIN / 100 * MwSt.SCHEIN)
 ELSE 
   vkbe% = VKbrutto.SCHEIN / Bezugsmenge.schein
   Rabatt.SCHEIN = (VKbe% / 100) * RabattProz.SCHEIN
   GesamtBrutto.SCHEIN = Anzahl.SCHEIN * (VKbe% - Rabatt.SCHEIN)
   GesamtNetto.SCHEIN = GesamtBrutto.SCHEIN / (100 + MwSt.SCHEIN) * 100
 END IF 
 vkne% = VKnetto.SCHEIN / Bezugsmenge.schein
 VKBeinzel% = VKBrutto.schein / Bezugsmenge.schein
 VKNeinzel% = VKNetto.schein / Bezugsmenge.schein
 RabattGes% = Rabatt.SCHEIN * Anzahl.schein
 handelspdm1% = GesamtNetto.schein - (ek.schein * anzahl.schein / Bezugsmenge.schein) - provision%
 handelspdm1$ = STR$ (handelspdm1%,"9999999.00")
 provision% = handelspdm1% * ProvisProz.schein / 100
 handelspdm1$ = STR$ (handelspdm1% - provision%,"9999999.00")
 ProvisDM.schein = provision%
 Handelsspanne.schein = (handelspdm1% - provision%) * 100 / (ek.schein * anzahl.schein / Bezugsmenge.schein)
 FORM 
 END SUB 
 
SUB MProvProz()
 codems% = codems.master
 SELECT FIRST FILE "vertrete" INDEX codema.vertrete
 SELECT KEY codema.master FILE "vertrete" INDEX codema.vertrete
 ProvisProz.master = provisproz.vertrete
 CALL QuickStore("master")
 SELECT FORM KEY codems% FILE "master" INDEX codems.master
 FORM 
 END SUB 
 
 
SUB SProvProz()
 codesch% = codesch.schein
 quickarma$ = STR$ (codear.schein,"000000") + STR$ (codema.schein,"000000")
 SELECT KEY quickarma$ FILE "artprov" INDEX quickarma.artprov
 REQUEST "Wollen Sie fÅr diesen Vertriebsmitarbeiter","die definierte Standardprovision Åbernehmen?",130,req%
 IF req% = 1 THEN 
   ProvisProz.schein = provisproz.artprov
 END IF 
 CALL QuickStore("schein")
 SELECT FORM KEY codesch% FILE "schein" INDEX codesch.schein
 FORM 
 END SUB 
 
 
SUB MSNeu1(msart1%,knr%,opt%,codems%)
 FILE "master"
 IF ProjectJN$ = "TRUE" THEN 
   codepr% = codepr.master
   projekt$ = projekt.master
 END IF 
 SELECT KEY knr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 FORM 
 aktADR$ = "j"
 req% = 1
 IF req% = 1 THEN 
   OK% = 0
   BLANK 
   CodeMS.MASTER = SER ("MASTER",1)
   cums1% = codems.master
   codema.master = 999
   provisproz.master = 0
   datum.master = TODAY 
   IF ProjectJN$ = "TRUE" THEN 
     codepr.master = codepr%
     projekt.master = projekt$
   END IF 
 
   REM -> jetzt in FACTURA bei den Globalvariablen -> _kalkart$ = ReadConfig$("FACTURA","Kalkulationsschema")
   IF UCASE$ (_kalkart$) = "NETTO" THEN 
     KalkArt.MASTER = 0
   ELSE 
     KalkArt.MASTER = 1
   END IF 
   Art.Master = opt%
   KTit$ = ""
   SELECT CASE opt%
   CASE 1
     Titel.MASTER = "Angebot"
     KTit$ = KAng.stamm
   CASE 2
     Titel.MASTER = "Rechnung"
     codeliefer.master = cums%
     msart$ = "Rechnung"
     KTit$ = Krech.stamm
   CASE 3
     Titel.MASTER = "Lieferschein"
     coderech.master = cums%
     msart$ = "Lieferschein"
     KTit$ = Klief.stamm
   CASE 4
     Titel.MASTER = "Auftrag"
     KTit$ = KAuft.stamm
   CASE 5
     Titel.MASTER = "Bestellung"
     KTit$ = Kbest.stamm
   CASE 7
     Titel.MASTER = "Gutschrift"
     codegut.master = cums%
     msart$ = "Gutschrift"
     KTit$ = Kgut.stamm
   CASE 8
     Titel.MASTER = "ext.Preisanfrage"
     KTit$ = Kanfr.stamm
   END SELECT 
   IF nummernkreise$ <> "j" THEN 
     nummerok$ = "False"
     WHILE nummerok$ = "False"
       td$ = DATE$ ( TODAY ,"ddmmyy")
       td2$ = ReadConfig$("FACTURA","TODAY")
       IF td$ <> td2$ THEN 
         CALL WriteConfig("FACTURA","TODAY",td$)
         CALL WriteConfig("FACTURA","LASTNUM","1")
         nnum% = 1
       ELSE 
         nnum% = VAL (ReadConfig$("FACTURA","LASTNUM")) + 1
         CALL WriteConfig("FACTURA","LASTNUM", LTRIM$ ( STR$ (nnum%,"9999")))
       END IF 
       IF KTit$ <> "" THEN 
         numm1$ = KTit$ + DATE$ ( TODAY ,"ddmmyy") + STR$ (nnum%,"000")
       ELSE 
         numm1$ = LEFT$ (Titel.master,1) + DATE$ ( TODAY ,"ddmmyy") + STR$ (nnum%,"000")
       END IF 
       IF NOT EXISTS (numm1$,nummer.master) THEN nummerok$ = "True"
       Nummer.master = numm1$
     WEND 
   ELSE 
     nummerok$ = "False"
     WHILE nummerok$ = "False"
       SELECT CASE opt%
           CASE 1
             SELECT FIRST LOCK FILE "stamm"
             LASTAngebot.stamm = LASTAngebot.stamm + 1
             nnum% = LASTAngebot.stamm
             STORE FILE "stamm"
             UNLOCK CURRENT FILE "stamm"
           CASE 2
             SELECT FIRST LOCK FILE "stamm"
             LASTRechnung.stamm = LASTRechnung.stamm + 1
             nnum% = LASTRechnung.stamm
             STORE FILE "stamm"
             UNLOCK CURRENT FILE "stamm"
           CASE 3
             SELECT FIRST LOCK FILE "stamm"
             LASTLieferschei.stamm = LASTLieferschei.stamm + 1
             nnum% = LASTLieferschei.stamm
             STORE FILE "stamm"
             UNLOCK CURRENT FILE "stamm"
           CASE 4
             SELECT FIRST LOCK FILE "stamm"
             LASTAuftrag.stamm = LASTAuftrag.stamm + 1
             nnum% = LASTAuftrag.stamm
             STORE FILE "stamm"
             UNLOCK CURRENT FILE "stamm"
           CASE 5
             SELECT FIRST LOCK FILE "stamm"
             LASTBestellung.stamm = LASTBestellung.stamm + 1
             nnum% = LASTBestellung.stamm
             STORE FILE "stamm"
             UNLOCK CURRENT FILE "stamm"
           CASE 7
             SELECT FIRST LOCK FILE "stamm"
             LASTGutschrift.stamm = LASTGutschrift.stamm + 1
             nnum% = LASTGutschrift.stamm
             STORE FILE "stamm"
             UNLOCK CURRENT FILE "stamm"
           CASE 8
             SELECT FIRST LOCK FILE "stamm"
             LASTAnfrage.stamm = LASTAnfrage.stamm + 1
             nnum% = LASTAnfrage.stamm
             STORE FILE "stamm"
             UNLOCK CURRENT FILE "stamm"
           END SELECT 
       IF KTit$ <> "" THEN 
         numm1$ = KTit$ + STR$ (nnum%,"000000")
       ELSE 
         IF msart$ LIKE "ext.Preisanfrage" THEN 
           numm1$ = "EPA" + STR$ (nnum%,"000000")
         ELSE 
           numm1$ = LEFT$ (msart$,1) + STR$ (nnum%,"000000")
         END IF 
       END IF 
       IF NOT EXISTS (numm1$,nummer.master) THEN nummerok$ = "True"
       Nummer.master = numm1$
     WEND 
   END IF 
   SELECT CASE msart1%
   CASE 2
     REM "Angebot als Vorlage"
     bedingung$ = "art.master=1"
     art% = 1
   CASE 3
     REM "Rechnung als Vorlage"
     bedingung$ = "art.master=2"
     art% = 2
   CASE 4
     REM "Lieferschein als Vorlage"
     bedingung$ = "art.master=3"
     art% = 3
   CASE 5
     REM "Auftrag als Vorlage"
     bedingung$ = "art.master=4"
     art% = 4
   CASE 6
     REM "Bestellung als Vorlage"
     bedingung$ = "art.master=5"
     art% = 5
   CASE 7
     REM "Gutschrift als Vorlage"
     bedingung$ = "art.master=7"
     art% = 7
   CASE 8
     REM "Anfrage als Vorlage"
     bedingung$ = "art.master=8"
     art% = 8
   END SELECT 
   IF opt% > 1 AND opt% < 8 THEN 
     IF opt% <> 7 THEN 
       vMSArt% = opt% - 1
     ELSE 
       vMSArt% = opt%
     END IF 
     scode% = knr% * 10 + vMSArt%
     vcums% = CodeMS.Master
     CALL QuickStore("MASTER")
     SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 
     REM SELECT CASE msArt1%
     SELECT CASE art%
     CASE 1
       Titel.MASTER = "Angebot"
     CASE 2
       coderech.master = cums1%
     CASE 3
       codeliefer.master = cums1%
     CASE 4
       Titel.MASTER = "Auftrag"
     CASE 5
       Titel.MASTER = "Bestellung"
     CASE 7
       Titel.MASTER = "Gutschrift"
       codegut.master = cums1%
     CASE 8
       Titel.MASTER = "ext.Preisanfrage"
     END SELECT 
     CALL QuickStore("master")
     SELECT KEY cums1% LOCK FILE "master" INDEX codems.master
     REM ###***
     MOUSE OFF 
     FILE "master"
     SELECT WHERE 
     FILE "master"
     INDEX codems.master
     MOUSE ON 
     SELECT KEY codems% FILE "MASTER" INDEX codems.Master
     IF FOUND ("master") THEN 
       flo% = 2
       CALL MSPrepare1(CodeMS.Master,vcums%,flo%,msart1%,optNeuBeleg%)
       OK% = 1
     ELSE 
       opt% = 8
     END IF 
   END IF 
   neumaster$ = "n"
 FORM 
 END SUB 
   
 
 
 
 
 
SUB TNummernTest()
 CALL FStore("master")
 MOUSE OFF 
 FILE "master"
 cums% = codems.master
 numm1$ = nummer.master
 SET INDEX nummer.master
 INDEX nummer.master
 SELECT KEY numm1$ FILE "master" INDEX nummer.master
 SELECT NEXT 
 cums2% = codems.master
 IF nummer.master = numm1$ AND cums% <> cums2% THEN 
   CALL Fehler("Die Nummer wurde bereits vergeben!","Bitte Ñndern Sie die Nummer!")
   SET INDEX codems.master
   INDEX codems.master
   MOUSE ON 
   SELECT FORM KEY cums% FILE "master" INDEX codems.master
   SET EDIT SELECT ON 
   ENTER nummer.master,0
   SET EDIT SELECT OFF 
 END IF 
 SELECT FORM KEY cums% FILE "master" INDEX codems.master
 MOUSE ON 
 END SUB 
 
 
 ' neuen Vorgang mit Daten aus "MASTER" und "SCHEIN" generieren
 ' =======================================================================
 
SUB MSPrepare1(vorlage%,master%,flosk%,msart1%,optNeuBeleg%)
 SET STATUS "Vorlage wird kopiert"
 MOUSE OFF 
 CALL DFile(3,"SCHEIN" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"LIEFRUCK" + _fpw$)
 CALL DFile(3,"serienr" + _fpw$)
 kostentrÑger$ = ""
 kostenstelle% = 0
 FILE "MASTER"
 SELECT KEY vorlage% FILE "MASTER" INDEX CodeMS.MASTER
 
 IF flosk% = 2 THEN 
   COPY FROM Anrede,Nachname,Geburtsname,Vorname,Stra·e,Ort,PLZ,CodeKU,LAAnrede,LANachname,LAStra·e,LAOrt,LAPLZ,Lieferdatum,Kundennummer,PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   adress$ = adresstext.master
   ProvPosDM% = ProvisausPosDM.master
   ProvisDM% = ProvisDM.master
   ProvisProz% = ProvisProz.master
   ProvisGesDM% = ProvisGesDM.master
   CodeMa% = Codema.master

   EKNettoEu% = EKNettoEu.master
   PreisNettoEu% = PreisNettoEu.master
   PreisBruttoEu% = PreisBruttoEu.master
   GesNettoEu% = GesNettoEu.master
   GesBruttoEu% = GesBruttoEu.master
   SkontoEu% = SkontoEu.master
   RabattEu% = RabattEu.master
   BuchBruttoEu% = BuchBruttoEu.master
   ProvisEu% = ProvisEu.master
   BuchProvEu% = BuchProvEu.master
   ProvisGesEu% = ProvisGesEu.master
   ProvisausPosEu% = ProvisausPosEu.master
   frachtfreiEu% = frachtfreiEu.master
   Umrechnung% = Umrechnung.master
   CodeW% = CodeW.master
   Waehrung$ = Waehrung.master
   WaehrungBez$ = WaehrungBezeich.master


   FILE "master"
   SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   COPY TO Anrede,Nachname,Geburtsname,Vorname,Stra·e,Ort,PLZ,CodeKU,LAAnrede,LANachname,LAStra·e,LAOrt,LAPLZ,Lieferdatum,Kundennummer,PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   adresstext.master = adress$
   ProvisausPosDM.master = ProvPosDM%
   ProvisDM.master = ProvisDM%
   ProvisProz.master = ProvisProz%
   ProvisGesDM.master = ProvisGesDM%
   Codema.master = CodeMa%

   EKNettoEu.master = EKNettoEu%
   PreisNettoEu.master = PreisNettoEu%
   PreisBruttoEu.master = PreisBruttoEu%
   GesNettoEu.master = GesNettoEu%
   GesBruttoEu.master = GesBruttoEu%
   SkontoEu.master = SkontoEu%
   RabattEu.master = RabattEu%
   BuchBruttoEu.master = BuchBruttoEu%
   ProvisEu.master = ProvisEu%
   BuchProvEu.master = BuchProvEu%
   ProvisGesEu.master = ProvisGesEu%
   ProvisausPosEu.master = ProvisausPosEu%
   frachtfreiEu.master = frachtfreiEu%
   Umrechnung.master = Umrechnung%
   CodeW.master = CodeW%
   Waehrung.master = Waehrung$
   WaehrungBezeich.master = WaehrungBez$

   FILE "floskel"
   IF msart1% <> 8 THEN 
     SELECT WHERE art.floskel = 1 AND spezial.floskel = msart1%
     SELECT FIRST 
   ELSE 
     SELECT WHERE art.floskel = 1 AND spezial.floskel = 16
     SELECT FIRST 
   END IF 
   IF NOT EOF ("floskel") THEN 
     prolog.master = floskel.floskel
   END IF 
   IF msart1% <> 8 THEN 
     SELECT WHERE art.floskel = 2 AND spezial.floskel = msart1%
     SELECT FIRST 
   ELSE 
     SELECT WHERE art.floskel = 2 AND spezial.floskel = 16
     SELECT FIRST 
   END IF 
   IF NOT EOF ("floskel") THEN 
     epilog.master = floskel.floskel
   END IF 
   FILE "master"
 END IF 
 FILE "master"
 CALL QuickStore("MASTER")
 
 REM -------- Positionen kopieren --------
 
 scode% = vorlage% * 1000 + 1
 FILE "SCHEIN"
 INDEX QuickCodePos.SCHEIN
 SELECT FIRST 
 SELECT KEY scode%
 ok% = 1
 WHILE CodeMS.SCHEIN = vorlage% AND ok% = 1 AND NOT EOF ("SCHEIN")
   SET STATUS "Kopiere Position " + LTRIM$ ( STR$ (PosNr,"999"))
   REM COPY FROM Art,Anzahl,Bezeichnung,Artikelnummer,Beschreibung,CodeAR,VKnetto,VKBrutto,EK,GesamtNetto,GesamtBrutto,ME_,PosNr,Rabatt,RabattProz,MwSt
   Art% = Art:Anzahl% = Anzahl:Bezeichnung$ = Bezeichnung:Artikelnummer$ = Artikelnummer
   Beschreibung$ = Beschreibung:CodeAR% = CodeAR:VKnetto% = VKnetto:VKBrutto% = VKBrutto:EK% = EK:GesamtNetto% = GesamtNetto
   GesamtBrutto% = GesamtBrutto:ME$ = ME_:PosNr% = PosNr:Rabatt% = Rabatt:RabattProz% = RabattProz:MwSt% = MwST
   CodeGR% = CodeGR:RabattArt% = RabattArt:TextVorPos$ = TextVorPosition
   Bezugsmenge% = Bezugsmenge:Maschine$ = maschine:ZeitproBezug% = ZeitproBezugsme
   Handelssp% = Handelsspanne

   EKeu% = EKeu
   VKNettoEu% = VKNettoEu
   VKBruttoEu% = VKBruttoEu
   GesNettoEu% = GesNettoEu
   GesBruttoEu% = GesBruttoEu
   RabattEu% = RabattEu
   ProvisEu% = ProvisEu
   Umrechnung% = Umrechnung
   CodeW% = CodeW
   Waehrung$ = Waehrung
   WaehrungBez$ = WaehrungBezeich

   BLANK FILE "schein"
   codesch = SER ("schein",1)
   REM COPY TO Art,Anzahl,Bezeichnung,Artikelnummer,Beschreibung,CodeAR,VKnetto,VKBrutto,EK,GesamtNetto,GesamtBrutto,ME_,PosNr,Rabatt,RabattProz,MwSt
   Art = Art%:Anzahl = Anzahl%:Bezeichnung = Bezeichnung$:Artikelnummer = Artikelnummer$
   Beschreibung = Beschreibung$:CodeAR = CodeAR%:VKnetto = VKNetto%:VKBrutto = VKBrutto%:EK = EK%:GesamtNetto = GesamtNetto%
   GesamtBrutto = GesamtBrutto%:ME_ = ME$:PosNr = PosNR%:Rabatt = Rabatt%:RabattProz = RabattProz%:MwSt = MwST%
   CodeMS.schein = master%:CodeGR = CodeGR%:RabattArt = RabattArt%:TextVorPosition = TextVorPos$
   Bezugsmenge = Bezugsmenge%:Maschine = maschine$:ZeitproBezugsme = ZeitproBezug%
   Handelsspanne = Handelssp%
   SELECT KEY codear% FILE "artikel" INDEX codear.artikel
   rme1.schein = rme1.artikel:rmeproz1.schein = rmeproz1.artikel:rmedm1.schein = rmedm1.artikel
   rme2.schein = rme2.artikel:rmeproz2.schein = rmeproz2.artikel:rmedm2.schein = rmedm2.artikel
   rme3.schein = rme3.artikel:rmeproz3.schein = rmeproz3.artikel:rmedm3.schein = rmedm3.artikel
   rme4.schein = rme4.artikel:rmeproz4.schein = rmeproz4.artikel:rmedm4.schein = rmedm4.artikel
   rme5.schein = rme5.artikel:rmeproz5.schein = rmeproz5.artikel:rmedm5.schein = rmedm5.artikel
   rmeEU1.schein = rmeEU1.artikel
   rmeEU2.schein = rmeEU2.artikel
   rmeEU3.schein = rmeEU3.artikel
   rmeEU4.schein = rmeEU4.artikel
   rmeEU5.schein = rmeEU5.artikel
   EKeu = EKeu%
   VKNettoEu = VKNettoEu%
   VKBruttoEu = VKBruttoEu%
   GesNettoEu = GesNettoEu%
   GesBruttoEu = GesBruttoEu%
   RabattEu = RabattEu%
   ProvisEu = ProvisEu%
   Umrechnung = Umrechnung%
   CodeW = CodeW%
   Waehrung = Waehrung$
   WaehrungBezeich = WaehrungBez$
 

   CALL QuickStore("SCHEIN")
   SELECT FIRST 
   SELECT KEY scode% FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   SELECT NEXT FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   scodealt% = scode%
   scodeneu% = QuickCodePos.SCHEIN
   IF scodealt% = scodeneu% THEN ok% = 0
   scode% = vorlage% * 1000 + PosNr
 WEND 
 SELECT FORM KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
 REM SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
 FORM 
 SET STATUS ""
 MOUSE ON 
 END SUB 
 
 
 
 
SUB MSPrepare(vorlage%,master%,flosk%,optNeuBeleg%)
 SET STATUS "Vorlage wird kopiert"
 MOUSE OFF 
 CALL DFile(3,"SCHEIN" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"serienr" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"LIEFRUCK" + _fpw$)
 kostentrÑger$ = ""
 kostenstelle% = 0
 FILE "MASTER"
 INDEX codems.master
 IF optNeuBeleg% > 0 THEN 
   SELECT FIRST FILE "MASTER" INDEX CodeMS.MASTER
   SELECT KEY master% FILE "MASTER" INDEX CodeMS.MASTER
   AnzPosOld% = AnzPos.Master
   REM CALL Fehler( STR$ (AnzPosOld%,"99"),"")
   SELECT FIRST 
 END IF 
 SELECT FIRST FILE "MASTER" INDEX CodeMS.MASTER
 SELECT KEY vorlage% FILE "MASTER" INDEX CodeMS.MASTER
 AnzPosVorlage% = AnzPos.master
 IF globalGutsch$ = "TRUE" THEN 
   globalGutsch$ = nummer.master
 ELSE 
   globalGutsch$ = ""
 END IF 
 IF flosk% = 1 THEN 
   COPY FROM PLZ,CodeKU,LAAnrede,LANachname,LAStra·e,LAOrt,LAPLZ,Lieferdatum,PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   adress$ = adresstext.master
   prolog$ = prolog.master
   epilog$ = epilog.master
   ProvPosDM% = 0
   ProvisDM% = 0
   ProvisProz% = 0
   ProvisGesDM% = 0
   CodeMa% = Codema.master
   IF DEFA$ = "MEGA" THEN 
     SELECT KEY codeku.master FILE "adressen" INDEX codeku.adressen
     IF FOUND ("adressen") THEN 
       kostentrÑger$ = KostentrÑger.adressen
       kostenstelle% = Kostenstelle.adressen
     END IF 
   END IF 
   EKNettoEu% = EKNettoEu.master
   PreisNettoEu% = PreisNettoEu.master
   PreisBruttoEu% = PreisBruttoEu.master
   GesNettoEu% = GesNettoEu.master
   GesBruttoEu% = GesBruttoEu.master
   SkontoEu% = SkontoEu.master
   RabattEu% = RabattEu.master
   BuchBruttoEu% = 0
   ProvisEu% = 0
   BuchProvEu% = 0
   ProvisGesEu% = 0
   ProvisausPosEu% = 0
   frachtfreiEu% = frachtfreiEu.master
   Umrechnung% = Umrechnung.master
   CodeW% = CodeW.master
   Waehrung$ = Waehrung.master
   WaehrungBez$ = WaehrungBezeich.master
   Auftragsnr$ = Auftragsnr.master
   Auftragsdat% = Auftragsdat.master

   FILE "master"
   SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   codekumaster% = codeku.master
   COPY TO PLZ,CodeKU,LAAnrede,LANachname,LAStra·e,LAOrt,LAPLZ,Lieferdatum,PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   codeku.master = codekumaster%
   Ort.master = Ort.adressen
   Stra·e.master = Stra·e.adressen
   Vorname.master = Vorname.adressen
   Geburtsname.master = Geburtsname.adressen
   Nachname.master = Nachname.adressen
   Anrede.master = Anrede.adressen
   Kundennummer.master = Kundennummer.adressen
   prolog.master = prolog$
   epilog.master = epilog$
   ProvisausPosDM.master = 0
   ProvisDM.master = 0
   ProvisProz.master = 0
   ProvisGesDM.master = 0
   Codema.master = CodeMa%
   EKNettoEu.master = VAL ( STR$ (EKNettoEu%,"999999999.00"))
   PreisNettoEu.master = VAL ( STR$ (PreisNettoEu%,"999999999.00"))
   PreisBruttoEu.master = VAL ( STR$ (PreisBruttoEu%,"999999999.00"))
   GesNettoEu.master = VAL ( STR$ (GesNettoEu%,"999999999.00"))
   GesBruttoEu.master = VAL ( STR$ (GesBruttoEu%,"999999999.00"))
   SkontoEu.master = VAL ( STR$ (SkontoEu%,"999999999.00"))
   RabattEu.master = VAL ( STR$ (RabattEu%,"999999999.00"))
   BuchBruttoEu.master = VAL ( STR$ (BuchBruttoEu%,"999999999.00"))
   ProvisEu.master = VAL ( STR$ (ProvisEu%,"999999999.00"))
   BuchProvEu.master = VAL ( STR$ (BuchProvEu%,"999999999.00"))
   ProvisGesEu.master = VAL ( STR$ (ProvisGesEu%,"999999999.00"))
   ProvisausPosEu.master = VAL ( STR$ (ProvisausPosEu%,"999999999.00"))
   frachtfreiEu.master = VAL ( STR$ (frachtfreiEu%,"999999999.00"))
   Umrechnung.master = Umrechnung%
   CodeW.master = CodeW%
   Waehrung.master = Waehrung$
   WaehrungBezeich.master = WaehrungBez$
   BuchBruttoEu.master = 0
   ProvisEu.master = 0
   BuchProvEu.master = 0
   ProvisGesEu.master = 0
   ProvisausPosEu.master = 0
   BuchBrutto.master = 0
   provisdm.master = 0
   BuchProv.master = 0
   ProvisGesDM.master = 0
   ProvisausPosDM.master = 0
   Auftragsdat.master = Auftragsdat%
   Auftragsnr.master = Auftragsnr$

   IF Auftragsnr$ <> "" OR Auftragsdat% > 0 THEN 
     REQUEST "Wollen Sie die Auftragsnummer/-Datum Åbernehmen?","",130,req%
     IF req% <> 1 THEN 
       Auftragsnr.master = ""
       Auftragsdat.master = 0
     END IF 
   END IF 
   REQUEST "Wollen Sie das Lieferdatum Åbernehmen?","",130,req%
   IF req% <> 1 THEN Lieferdatum.master = 0
   IF euromaske% = 1 THEN 
     Umrechnung.master = 1
     CodeW.master = 3
     Waehrung.master = "EUR"
     EKNetto.master = VAL ( STR$ (EKNettoEu%,"999999999.00"))
     PreisNetto.master = VAL ( STR$ (PreisNettoEu%,"999999999.00"))
     PreisBrutto.master = VAL ( STR$ (PreisBruttoEu%,"999999999.00"))
     GesNetto.master = VAL ( STR$ (GesNettoEu%,"999999999.00"))
     GesBrutto.master = VAL ( STR$ (GesBruttoEu%,"999999999.00"))
     Skonto.master = VAL ( STR$ (SkontoEu%,"999999999.00"))
     Rabatt.master = VAL ( STR$ (RabattEu%,"999999999.00"))
     BuchBruttoEu.master = 0
     ProvisEu.master = 0
     BuchProvEu.master = 0
     ProvisGesEu.master = 0
     ProvisausPosEu.master = 0
     BuchBrutto.master = 0
     provisdm.master = 0
     BuchProv.master = 0
     ProvisGesDM.master = 0
     ProvisausPosDM.master = 0
   END IF 
       Adresse$ = MakeAdr$(CodeKU.ADRESSEN, - 1,0,0)
       adresstext.master = adresse$
       Anrede.MASTER = Anrede.adressen
       Nachname.Master = Nachname.adressen
       Vorname.master = Vorname.adressen
       Geburtsname.master = Geburtsname.adressen
       Stra·e.master = Stra·e.adressen
       PLZ.master = PLZ.adressen
       Ort.Master = Ort.Adressen
   REM adresstext.master = adress$
   IF DEFA$ = "MEGA" THEN 
     SELECT FIRST FILE "adressen" INDEX codeku.adressen
     SELECT KEY codeku.master FILE "adressen" INDEX codeku.adressen
     IF FOUND ("adressen") THEN 
       kostentrÑger$ = KostentrÑger.adressen
       kostenstelle% = Kostenstelle.adressen
     END IF 
   END IF 
 END IF 
 
 IF flosk% = 2 THEN 
   COPY FROM Anrede,Nachname,Geburtsname,Vorname,Stra·e,Ort,PLZ,CodeKU,LAAnrede,LANachname,LAStra·e,LAOrt,LAPLZ,Lieferdatum,Kundennummer,PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   adress$ = adresstext.master
   ProvPosDM% = ProvisausPosDM.master
   ProvisDM% = ProvisDM.master
   ProvisProz% = ProvisProz.master
   ProvisGesDM% = ProvisGesDM.master
   CodeMa% = Codema.master
   EKNettoEu% = EKNettoEu.master
   PreisNettoEu% = PreisNettoEu.master
   PreisBruttoEu% = PreisBruttoEu.master
   GesNettoEu% = GesNettoEu.master
   GesBruttoEu% = GesBruttoEu.master
   SkontoEu% = SkontoEu.master
   RabattEu% = RabattEu.master
   BuchBruttoEu% = BuchBruttoEu.master
   ProvisEu% = ProvisEu.master
   BuchProvEu% = BuchProvEu.master
   ProvisGesEu% = ProvisGesEu.master
   ProvisausPosEu% = ProvisausPosEu.master
   frachtfreiEu% = frachtfreiEu.master
   Umrechnung% = Umrechnung.master
   CodeW% = CodeW.master
   Waehrung$ = Waehrung.master
   WaehrungBez$ = WaehrungBezeich.master
   Auftragsnr$ = Auftragsnr.master
   Auftragsdat% = Auftragsdat.master
   IF DEFA$ = "MEGA" THEN 
     SELECT KEY codeku.master FILE "adressen" INDEX codeku.adressen
     IF FOUND ("adressen") THEN 
       kostentrÑger$ = KostentrÑger.adressen
       kostenstelle% = Kostenstelle.adressen
     END IF 
   END IF 
   FILE "master"
   SELECT FIRST FILE "MASTER" INDEX CodeMS.MASTER
   SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   codekumaster% = codeku.master
 COPY TO Anrede,Nachname,Geburtsname,Vorname,Stra·e,Ort,PLZ,CodeKU,LAAnrede,LANachname,LAStra·e,LAOrt,LAPLZ,Lieferdatum,Kundennummer,PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   REM adresstext.master = adress$
   Kundennummer.master = Kundennummer.adressen
       Adresse$ = MakeAdr$(CodeKU.ADRESSEN, - 1,0,0)
       codeku.master = codekumaster%
       adresstext.master = adresse$
       Anrede.MASTER = Anrede.adressen
       Nachname.Master = Nachname.adressen
       Vorname.master = Vorname.adressen
       Geburtsname.master = Geburtsname.adressen
       Stra·e.master = Stra·e.adressen
       PLZ.master = PLZ.adressen
       Ort.Master = Ort.Adressen
   ProvisausPosDM.master = VAL ( STR$ (ProvPosDM%,"999999999.00"))
   ProvisDM.master = VAL ( STR$ (ProvisDM%,"999999999.00"))
   ProvisProz.master = ProvisProz%
   ProvisGesDM.master = VAL ( STR$ (ProvisGesDM%,"999999999.00"))
   Codema.master = CodeMa%
   EKNettoEu.master = VAL ( STR$ (EKNettoEu%,"999999999.00"))
   PreisNettoEu.master = VAL ( STR$ (PreisNettoEu%,"999999999.00"))
   PreisBruttoEu.master = VAL ( STR$ (PreisBruttoEu%,"999999999.00"))
   GesNettoEu.master = VAL ( STR$ (GesNettoEu%,"999999999.00"))
   GesBruttoEu.master = VAL ( STR$ (GesBruttoEu%,"999999999.00"))
   SkontoEu.master = VAL ( STR$ (SkontoEu%,"999999999.00"))
   RabattEu.master = VAL ( STR$ (RabattEu%,"999999999.00"))
   BuchBruttoEu.master = VAL ( STR$ (BuchBruttoEu%,"999999999.00"))
   ProvisEu.master = VAL ( STR$ (ProvisEu%,"999999999.00"))
   BuchProvEu.master = VAL ( STR$ (BuchProvEu%,"999999999.00"))
   ProvisGesEu.master = VAL ( STR$ (ProvisGesEu%,"999999999.00"))
   ProvisausPosEu.master = VAL ( STR$ (ProvisausPosEu%,"999999999.00"))
   frachtfreiEu.master = VAL ( STR$ (frachtfreiEu%,"999999999.00"))
   Auftragsdat.master = Auftragsdat%
   Auftragsnr.master = Auftragsnr$
   Umrechnung.master = Umrechnung%
   CodeW.master = CodeW%
   Waehrung.master = Waehrung$
   WaehrungBezeich.master = WaehrungBez$
   ProvisausPosDM.master = 0
   ProvisDM.master = 0
   ProvisProz.master = 0
   ProvisGesDM.master = 0
   BuchBruttoEu.master = 0
   ProvisEu.master = 0
   BuchProvEu.master = 0
   ProvisGesEu.master = 0
   ProvisausPosEu.master = 0
   BuchBrutto.master = 0
   ProvisDM.master = 0
   BuchProv.master = 0
   ProvisGesDM.master = 0
   ProvisausPosDM.master = 0
   IF Auftragsnr$ <> "" OR Auftragsdat% > 0 THEN 
     REQUEST "Wollen Sie die Auftragsnummer/-Datum Åbernehmen?","",130,req%
     IF req% <> 1 THEN 
       Auftragsnr.master = ""
       Auftragsdat.master = 0
     END IF 
   END IF 
   REQUEST "Wollen Sie das Lieferdatum Åbernehmen?","",130,req%
   IF req% <> 1 THEN Lieferdatum.master = 0


   IF euromaske% = 1 THEN 
     Umrechnung.master = 1
     CodeW.master = 3
     Waehrung.master = "EUR"
     EKNetto.master = VAL ( STR$ (EKNettoEu%,"999999999.00"))
     PreisNetto.master = VAL ( STR$ (PreisNettoEu%,"999999999.00"))
     PreisBrutto.master = VAL ( STR$ (PreisBruttoEu%,"999999999.00"))
     GesNetto.master = VAL ( STR$ (GesNettoEu%,"999999999.00"))
     GesBrutto.master = VAL ( STR$ (GesBruttoEu%,"999999999.00"))
     Skonto.master = VAL ( STR$ (SkontoEu%,"999999999.00"))
     Rabatt.master = VAL ( STR$ (RabattEu%,"999999999.00"))
     BuchBruttoEu.master = 0
     ProvisEu.master = 0
     BuchProvEu.master = 0
     ProvisGesEu.master = 0
     ProvisausPosEu.master = 0
     BuchBrutto.master = 0
     provisdm.master = 0
     BuchProv.master = 0
     ProvisGesDM.master = 0
     ProvisausPosDM.master = 0
   END IF 
   IF DEFA$ = "MEGA" THEN 
     SELECT FIRST FILE "adressen" INDEX codeku.adressen
     SELECT KEY codeku.master FILE "adressen" INDEX codeku.adressen
     IF FOUND ("adressen") THEN 
       kostentrÑger$ = KostentrÑger.adressen
       kostenstelle% = Kostenstelle.adressen
     END IF 
     kostentrÑger.master = KostentrÑger$
     kostenstelle.master = Kostenstelle%
   END IF 
   FILE "floskel"
   IF msart% <> 8 THEN 
     SELECT WHERE art.floskel = 1 AND spezial.floskel = msart%
     SELECT FIRST 
   ELSE 
     SELECT WHERE art.floskel = 1 AND spezial.floskel = 16
     SELECT FIRST 
   END IF 
   IF NOT EOF ("floskel") THEN 
     prolog.master = floskel.floskel
   END IF 
   IF msart% <> 8 THEN 
     SELECT WHERE art.floskel = 2 AND spezial.floskel = msart%
     SELECT FIRST 
   ELSE 
     SELECT WHERE art.floskel = 2 AND spezial.floskel = 16
     SELECT FIRST 
   END IF 
   IF NOT EOF ("floskel") THEN 
     epilog.master = floskel.floskel
   END IF 
   FILE "master"
 END IF 
 
 IF flosk% = 3 THEN 
   IF optNeuBeleg% = 0 THEN 
     REM codekumaster% = codeku.master
     COPY FROM Anrede,Nachname,Geburtsname,Vorname,Stra·e,Ort,PLZ,CodeKU,LAAnrede,LANachname,LAStra·e,LAOrt,LAPLZ,Lieferdatum,Kundennummer,PreisNetto,GesNetto,Rabatt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
     REM codekumaster% = codeku.master
     adress$ = adresstext.master
     ProvPosDM% = VAL ( STR$ (ProvisausPosDM.master,"999999999.00"))
     ProvisDM% = VAL ( STR$ (ProvisDM.master,"999999999.00"))
     ProvisProz% = ProvisProz.master
     ProvisGesDM% = VAL ( STR$ (ProvisGesDM.master,"999999999.00"))
     CodeMa% = Codema.master
     EKNettoEu% = VAL ( STR$ (EKNettoEu.master,"999999999.00"))
     PreisNettoEu% = VAL ( STR$ (PreisNettoEu.master,"999999999.00"))
     PreisBruttoEu% = VAL ( STR$ (PreisBruttoEu.master,"999999999.00"))
     GesNettoEu% = VAL ( STR$ (GesNettoEu.master,"999999999.00"))
     GesBruttoEu% = VAL ( STR$ (GesBruttoEu.master,"999999999.00"))
     SkontoEu% = VAL ( STR$ (SkontoEu.master,"999999999.00"))
     RabattEu% = VAL ( STR$ (RabattEu.master,"999999999.00"))
     BuchBruttoEu% = VAL ( STR$ (BuchBruttoEu.master,"999999999.00"))
     ProvisEu% = VAL ( STR$ (ProvisEu.master,"999999999.00"))
     BuchProvEu% = VAL ( STR$ (BuchProvEu.master,"999999999.00"))
     ProvisGesEu% = VAL ( STR$ (ProvisGesEu.master,"999999999.00"))
     ProvisausPosEu% = VAL ( STR$ (ProvisausPosEu.master,"999999999.00"))
     frachtfreiEu% = VAL ( STR$ (frachtfreiEu.master,"999999999.00"))
     Umrechnung% = Umrechnung.master
     CodeW% = CodeW.master
     Waehrung$ = Waehrung.master
     WaehrungBez$ = WaehrungBezeich.master
     Auftragsnr$ = Auftragsnr.master
     Auftragsdat% = Auftragsdat.master

     IF DEFA$ = "MEGA" THEN 
       SELECT KEY codeku.master FILE "adressen" INDEX codeku.adressen
       IF FOUND ("adressen") THEN 
         kostentrÑger$ = KostentrÑger.adressen
         kostenstelle% = Kostenstelle.adressen
       END IF 
     END IF 
     FILE "master"
     SELECT FIRST FILE "master" INDEX codems.master
     SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
     codekumaster% = codeku.master
     COPY TO Anrede,Nachname,Geburtsname,Vorname,Stra·e,Ort,PLZ,CodeKU,LAAnrede,LANachname,LAStra·e,LAOrt,LAPLZ,Lieferdatum,Kundennummer,PreisNetto,GesNetto,Rabatt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
     REM adresstext.master = adress$
     codeku.master = codekumaster%
     ProvisausPosDM.master = VAL ( STR$ (ProvPosDM%,"999999999.00"))
     ProvisDM.master = VAL ( STR$ (ProvisDM%,"999999999.00"))
     ProvisProz.master = ProvisProz%
     ProvisGesDM.master = VAL ( STR$ (ProvisGesDM%,"999999999.00"))
     Codema.master = CodeMa%
     EKNettoEu.master = VAL ( STR$ (EKNettoEu%,"999999999.00"))
     PreisNettoEu.master = VAL ( STR$ (PreisNettoEu%,"999999999.00"))
     PreisBruttoEu.master = VAL ( STR$ (PreisBruttoEu%,"999999999.00"))
     GesNettoEu.master = VAL ( STR$ (GesNettoEu%,"999999999.00"))
     GesBruttoEu.master = VAL ( STR$ (GesBruttoEu%,"999999999.00"))
     SkontoEu.master = VAL ( STR$ (SkontoEu%,"999999999.00"))
     RabattEu.master = VAL ( STR$ (RabattEu%,"999999999.00"))
     BuchBruttoEu.master = VAL ( STR$ (BuchBruttoEu%,"999999999.00"))
     ProvisEu.master = VAL ( STR$ (ProvisEu%,"999999999.00"))
     BuchProvEu.master = VAL ( STR$ (BuchProvEu%,"999999999.00"))
     ProvisGesEu.master = VAL ( STR$ (ProvisGesEu%,"999999999.00"))
     ProvisausPosEu.master = VAL ( STR$ (ProvisausPosEu%,"999999999.00"))
     frachtfreiEu.master = VAL ( STR$ (frachtfreiEu%,"999999999.00"))
     Umrechnung.master = Umrechnung%
     CodeW.master = CodeW%
     Waehrung.master = Waehrung$
     WaehrungBezeich.master = WaehrungBez$
     ProvisausPosDM.master = 0
     ProvisDM.master = 0
     ProvisProz.master = 0
     ProvisGesDM.master = 0
     BuchBruttoEu.master = 0
     ProvisEu.master = 0
     BuchProvEu.master = 0
     ProvisGesEu.master = 0
     ProvisausPosEu.master = 0
     BuchBrutto.master = 0
     provisdm.master = 0
     BuchProv.master = 0
     ProvisGesDM.master = 0
     ProvisausPosDM.master = 0
     Auftragsdat.master = Auftragsdat%
     Auftragsnr.master = Auftragsnr$
     IF Auftragsnr$ <> "" OR Auftragsdat% > 0 THEN 
       REQUEST "Wollen Sie die Auftragsnummer/-Datum Åbernehmen?","",130,req%
       IF req% <> 1 THEN 
         Auftragsnr.master = ""
         Auftragsdat.master = 0
       END IF 
     END IF 
    REQUEST "Wollen Sie das Lieferdatum Åbernehmen?","",130,req%
    IF req% <> 1 THEN Lieferdatum.master = 0

       Adresse$ = MakeAdr$(CodeKU.ADRESSEN, - 1,0,0)
       adresstext.master = adresse$
       Anrede.MASTER = Anrede.adressen
       Nachname.Master = Nachname.adressen
       Vorname.master = Vorname.adressen
       Geburtsname.master = Geburtsname.adressen
       Stra·e.master = Stra·e.adressen
       PLZ.master = PLZ.adressen
       Ort.Master = Ort.Adressen
   IF euromaske% = 1 THEN 
     Umrechnung.master = 1
     CodeW.master = 3
     Waehrung.master = "EUR"
     EKNetto.master = VAL ( STR$ (EKNettoEu%,"999999999.00"))
     PreisNetto.master = VAL ( STR$ (PreisNettoEu%,"999999999.00"))
     PreisBrutto.master = VAL ( STR$ (PreisBruttoEu%,"999999999.00"))
     GesNetto.master = VAL ( STR$ (GesNettoEu%,"999999999.00"))
     GesBrutto.master = VAL ( STR$ (GesBruttoEu%,"999999999.00"))
     Skonto.master = VAL ( STR$ (SkontoEu%,"999999999.00"))
     Rabatt.master = VAL ( STR$ (RabattEu%,"999999999.00"))
     BuchBruttoEu.master = 0
     ProvisEu.master = 0
     BuchProvEu.master = 0
     ProvisGesEu.master = 0
     ProvisausPosEu.master = 0
     BuchBrutto.master = 0
     provisdm.master = 0
     BuchProv.master = 0
     ProvisGesDM.master = 0
     ProvisausPosDM.master = 0
   END IF 
     IF DEFA$ = "MEGA" THEN 
       SELECT KEY codeku.master FILE "adressen" INDEX codeku.adressen
       IF FOUND ("adressen") THEN 
         kostentrÑger$ = KostentrÑger.adressen
         kostenstelle% = Kostenstelle.adressen
       END IF 
       kostentrÑger.master = KostentrÑger$
       kostenstelle.master = Kostenstelle%
     END IF 
   END IF 
 END IF 
 REM FILE "master"
 IF optNeuBeleg% = 0 THEN oldReNr.master = globalGutsch$
 IF optNeuBeleg% = 0 THEN CALL QuickStore("MASTER")
 
 REM -------- Positionen kopieren --------
 
 scode% = vorlage% * 1000 + 1
 FILE "SCHEIN"
 INDEX QuickCodePos.SCHEIN
 SELECT FIRST FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
 
 SELECT KEY scode% FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
 ok% = 1
 IF optNeuBeleg% = 0 THEN 
   AnzPosOld% = 0
 END IF 
 WHILE CodeMS.SCHEIN = vorlage% AND ok% = 1 AND NOT EOF ("SCHEIN")
   SET STATUS "Kopiere Position " + LTRIM$ ( STR$ (PosNr,"999"))
   REM COPY FROM Art,Anzahl,Bezeichnung,Artikelnummer,Beschreibung,CodeAR,VKnetto,VKBrutto,EK,GesamtNetto,GesamtBrutto,ME_,PosNr,Rabatt,RabattProz,MwSt
   Art% = Art:Anzahl% = Anzahl:Bezeichnung$ = Bezeichnung:Artikelnummer$ = Artikelnummer
   Beschreibung$ = Beschreibung:CodeAR% = CodeAR:VKnetto% = VKnetto:VKBrutto% = VKBrutto:EK% = EK:GesamtNetto% = GesamtNetto
   GesamtBrutto% = GesamtBrutto:ME$ = ME_:Rabatt% = Rabatt:RabattProz% = RabattProz:MwSt% = MwST
   CodeGR% = CodeGR:RabattArt% = RabattArt:TextVorPos$ = TextVorPosition
   Bezugsmenge% = Bezugsmenge:Maschine$ = maschine:ZeitproBezug% = ZeitproBezugsme
   Handelssp% = Handelsspanne:ProvisProz% = ProvisProz:ProvisDM% = ProvisDM:Codema% = codema
   PosNr% = AnzPosOld% + PosNr
   EKeu% = EKeu
   VKNettoEu% = VKNettoEu
   VKBruttoEu% = VKBruttoEu
   GesNettoEu% = GesNettoEu
   GesBruttoEu% = GesBruttoEu
   RabattEu% = RabattEu
   ProvisEu% = ProvisEu
   Umrechnung% = Umrechnung
   CodeW% = CodeW
   Waehrung$ = Waehrung
   WaehrungBez$ = WaehrungBezeich
 

   IF DEFA$ = "MEGA" THEN 
     Bestandskonto% = Bestandskonto
     Verbrauchskto% = Verbrauchskonto
   END IF 
   BLANK FILE "schein"
   codesch.schein = SER ("schein",1)
   REM COPY TO Art,Anzahl,Bezeichnung,Artikelnummer,Beschreibung,CodeAR,VKnetto,VKBrutto,EK,GesamtNetto,GesamtBrutto,ME_,PosNr,Rabatt,RabattProz,MwSt
   Art = Art%:Anzahl = Anzahl%:Bezeichnung = Bezeichnung$:Artikelnummer = Artikelnummer$
   Beschreibung = Beschreibung$:CodeAR = CodeAR%:VKnetto = VKNetto%:VKBrutto = VKBrutto%:EK = EK%:GesamtNetto = GesamtNetto%
   GesamtBrutto = GesamtBrutto%:ME_ = ME$:PosNr = PosNR%:Rabatt = Rabatt%:RabattProz = RabattProz%:MwSt = MwST%
   CodeMS.schein = master%:CodeGR = CodeGR%:RabattArt = RabattArt%:TextVorPosition = TextVorPos$
   Bezugsmenge = Bezugsmenge%:Maschine = maschine$:ZeitproBezugsme = ZeitproBezug%
   Handelsspanne = Handelssp%:ProvisProz = ProvisProz%:ProvisDM = ProvisDM%:Codema = codema%
   IF DEFA$ = "MEGA" THEN 
     Bestandskonto = Bestandskonto%
     Verbrauchskonto = Verbrauchskto%
   END IF 
   codeku.schein = codekumaster%
   SELECT KEY codear% FILE "artikel" INDEX codear.artikel
   rme1.schein = rme1.artikel:rmeproz1.schein = rmeproz1.artikel:rmedm1.schein = rmedm1.artikel
   rme2.schein = rme2.artikel:rmeproz2.schein = rmeproz2.artikel:rmedm2.schein = rmedm2.artikel
   rme3.schein = rme3.artikel:rmeproz3.schein = rmeproz3.artikel:rmedm3.schein = rmedm3.artikel
   rme4.schein = rme4.artikel:rmeproz4.schein = rmeproz4.artikel:rmedm4.schein = rmedm4.artikel
   rme5.schein = rme5.artikel:rmeproz5.schein = rmeproz5.artikel:rmedm5.schein = rmedm5.artikel

   rmeEU1.schein = VAL ( STR$ (rmeEU1.artikel,"999999999.00"))
   rmeEU2.schein = VAL ( STR$ (rmeEU2.artikel,"999999999.00"))
   rmeEU3.schein = VAL ( STR$ (rmeEU3.artikel,"999999999.00"))
   rmeEU4.schein = VAL ( STR$ (rmeEU4.artikel,"999999999.00"))
   rmeEU5.schein = VAL ( STR$ (rmeEU5.artikel,"999999999.00"))
   EKeu = VAL ( STR$ (EKeu%,"999999999.00"))
   VKNettoEu = VAL ( STR$ (VKNettoEu%,"999999999.00"))
   VKBruttoEu = VAL ( STR$ (VKBruttoEu%,"999999999.00"))
   GesNettoEu = VAL ( STR$ (GesNettoEu%,"999999999.00"))
   GesBruttoEu = VAL ( STR$ (GesBruttoEu%,"999999999.00"))
   RabattEu = VAL ( STR$ (RabattEu%,"999999999.00"))
   ProvisEu = VAL ( STR$ (ProvisEu%,"999999999.00"))
   Umrechnung = Umrechnung%
   CodeW = CodeW%
   Waehrung = Waehrung$
   WaehrungBezeich = WaehrungBez$
   IF euromaske% = 1 THEN 
     rmedm1.schein = VAL ( STR$ (rmeEU1.artikel,"999999999.00"))
     rmedm2.schein = VAL ( STR$ (rmeEU2.artikel,"999999999.00"))
     rmedm3.schein = VAL ( STR$ (rmeEU3.artikel,"999999999.00"))
     rmedm4.schein = VAL ( STR$ (rmeEU4.artikel,"999999999.00"))
     rmedm5.schein = VAL ( STR$ (rmeEU5.artikel,"999999999.00"))
     EK = VAL ( STR$ (EKeu%,"999999999.00"))
     VKNetto = VAL ( STR$ (VKNettoEu%,"999999999.00"))
     VKBrutto = VAL ( STR$ (VKBruttoEu%,"999999999.00"))
     GesNetto = VAL ( STR$ (GesNettoEu%,"999999999.00"))
     GesBrutto = VAL ( STR$ (GesBruttoEu%,"999999999.00"))
     Rabatt = VAL ( STR$ (RabattEu%,"999999999.00"))
     ProvisDM = VAL ( STR$ (ProvisEu%,"999999999.00"))
     Umrechnung = 1
     CodeW = 3
     Waehrung = "EUR"
     WaehrungBezeich = "EUR"
   END IF 

   CALL QuickStore("SCHEIN")
   FILE "schein"
   SELECT FIRST FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   SELECT KEY scode% FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   SELECT NEXT FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   scodealt% = scode%
   scodeneu% = QuickCodePos.SCHEIN
   IF scodealt% = scodeneu% THEN ok% = 0
   scode% = vorlage% * 1000 + PosNr
 WEND 
 IF optNeuBeleg% > 0 THEN 
   SELECT FIRST FILE "master" INDEX codems.master
   SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   AnzPos.Master = AnzPosOld% + AnzPosVorlage%
   REM CALL Fehler( STR$ (AnzPos.Master,"99"),"")
   CALL QuickStore("Master")
   SELECT FIRST FILE "master" INDEX codems.master
 END IF 
 FILE "master"
 INDEX codems.master
 SELECT FIRST FILE "master" INDEX codems.master
 SELECT FORM KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
 REM SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
 FORM 
 SET STATUS ""
 MOUSE ON 
 END SUB 
  
 
SUB MSPrepSpezi(vorlage%,master%,flosk%,optNeuBeleg%)
 SET STATUS "Vorlage wird kopiert"
 MOUSE OFF 
 CALL DFile(3,"SCHEIN" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"LIEFRUCK" + _fpw$)
 CALL DFile(3,"serienr" + _fpw$)
 MOUSE OFF 
 FILE "MASTER"
 INDEX codems.master
 IF optNeuBeleg% > 0 THEN 
   SELECT FIRST FILE "MASTER" INDEX CodeMS.MASTER
   SELECT KEY master% FILE "MASTER" INDEX CodeMS.MASTER
   AnzPosOld% = AnzPos.Master
   REM CALL Fehler( STR$ (AnzPosOld%,"99"),"")
   SELECT FIRST 
 END IF 
 SELECT FIRST FILE "MASTER" INDEX CodeMS.MASTER
 SELECT KEY vorlage% FILE "MASTER" INDEX CodeMS.MASTER
 AnzPosVorlage% = AnzPos.master
 IF globalGutsch$ = "TRUE" THEN 
   globalGutsch$ = nummer.master
 ELSE 
   globalGutsch$ = ""
 END IF 
 IF flosk% = 1 THEN 
   COPY FROM PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
 
   prolog$ = prolog.master
   epilog$ = epilog.master
   adress$ = ""
   ProvPosDM% = 0
   ProvisDM% = 0
   ProvisProz% = ProvisProz.master
   ProvisGesDM% = 0
   CodeMa% = Codema.master
   EKNettoEu% = VAL ( STR$ (EKNettoEu.master,"999999999.00"))
   PreisNettoEu% = VAL ( STR$ (PreisNettoEu.master,"999999999.00"))
   PreisBruttoEu% = VAL ( STR$ (PreisBruttoEu.master,"999999999.00"))
   GesNettoEu% = VAL ( STR$ (GesNettoEu.master,"999999999.00"))
   GesBruttoEu% = VAL ( STR$ (GesBruttoEu.master,"999999999.00"))
   SkontoEu% = VAL ( STR$ (SkontoEu.master,"999999999.00"))
   RabattEu% = VAL ( STR$ (RabattEu.master,"999999999.00"))
   BuchBruttoEu% = 0
   ProvisEu% = 0
   BuchProvEu% = 0
   ProvisGesEu% = 0
   ProvisausPosEu% = 0
   frachtfreiEu% = VAL ( STR$ (frachtfreiEu.master,"999999999.00"))
   Umrechnung% = Umrechnung.master
   CodeW% = CodeW.master
   Waehrung$ = Waehrung.master
   WaehrungBez$ = WaehrungBezeich.master
 
   SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   COPY TO PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   prolog.master = prolog$
   epilog.master = epilog$
   adresstext.master = adress$
   ProvisausPosDM.master = ProvPosDM%
   ProvisDM.master = ProvisDM%
   ProvisProz.master = ProvisProz%
   ProvisGesDM.master = ProvisGesDM%
   Codema.master = CodeMa%
   EKNettoEu.master = EKNettoEu%
   PreisNettoEu.master = PreisNettoEu%
   PreisBruttoEu.master = PreisBruttoEu%
   GesNettoEu.master = GesNettoEu%
   GesBruttoEu.master = GesBruttoEu%
   SkontoEu.master = SkontoEu%
   RabattEu.master = RabattEu%
   BuchBruttoEu.master = 0
   ProvisEu.master = 0
   BuchProvEu.master = 0
   ProvisGesEu.master = 0
   ProvisausPosEu.master = 0
   frachtfreiEu.master = frachtfreiEu%
   Umrechnung.master = Umrechnung%
   CodeW.master = CodeW%
   Waehrung.master = Waehrung$
   WaehrungBezeich.master = WaehrungBez$
     Auftragsdat.master = 0
     Auftragsnr.master = ""
     Lieferdatum.master = 0

   IF euromaske% = 1 THEN 
     EKNetto.master = EKNettoEu%
     PreisNetto.master = PreisNettoEu%
     PreisBrutto.master = PreisBruttoEu%
     GesNetto.master = GesNettoEu%
     GesBrutto.master = GesBruttoEu%
     Skonto.master = SkontoEu%
     Rabatt.master = RabattEu%
     BuchBrutto.master = 0
     provisdm.master = 0
     BuchProv.master = 0
     ProvisGesDM.master = 0
     ProvisausPosDM.master = 0
     frachtfrei.master = frachtfreiEu%
     Umrechnung.master = 1
     CodeW.master = 3
     Waehrung.master = "EUR"
     WaehrungBezeich.master = "EUR"
   END IF 
 END IF 
 
 IF flosk% = 2 THEN 
   COPY FROM PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   adress$ = ""
   ProvPosDM% = 0
   ProvisDM% = 0
   ProvisProz% = ProvisProz.master
   ProvisGesDM% = 0
   CodeMa% = Codema.master
   EKNettoEu% = VAL ( STR$ (EKNettoEu.master,"999999999.00"))
   PreisNettoEu% = VAL ( STR$ (PreisNettoEu.master,"999999999.00"))
   PreisBruttoEu% = VAL ( STR$ (PreisBruttoEu.master,"999999999.00"))
   GesNettoEu% = VAL ( STR$ (GesNettoEu.master,"999999999.00"))
   GesBruttoEu% = VAL ( STR$ (GesBruttoEu.master,"999999999.00"))
   SkontoEu% = VAL ( STR$ (SkontoEu.master,"999999999.00"))
   RabattEu% = VAL ( STR$ (RabattEu.master,"999999999.00"))
   BuchBruttoEu% = 0
   ProvisEu% = 0
   BuchProvEu% = 0
   ProvisGesEu% = 0
   ProvisausPosEu% = 0
   frachtfreiEu% = VAL ( STR$ (frachtfreiEu.master,"999999999.00"))
   Umrechnung% = Umrechnung.master
   CodeW% = CodeW.master
   Waehrung$ = Waehrung.master
   WaehrungBez$ = WaehrungBezeich.master
 
   IF DEFA$ = "MEGA" THEN 
   END IF 
   SELECT FIRST FILE "MASTER" INDEX CodeMS.MASTER
   SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   COPY TO PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   adresstext.master = adress$
   ProvisausPosDM.master = 0
   ProvisDM.master = 0
   ProvisProz.master = ProvisProz%
   ProvisGesDM.master = 0
   Codema.master = CodeMa%
   EKNettoEu.master = EKNettoEu%
   PreisNettoEu.master = PreisNettoEu%
   PreisBruttoEu.master = PreisBruttoEu%
   GesNettoEu.master = GesNettoEu%
   GesBruttoEu.master = GesBruttoEu%
   SkontoEu.master = SkontoEu%
   RabattEu.master = RabattEu%
   BuchBruttoEu.master = BuchBruttoEu%
   ProvisEu.master = 0
   BuchProvEu.master = 0
   ProvisGesEu.master = 0
   ProvisausPosEu.master = 0
   frachtfreiEu.master = frachtfreiEu%
   Umrechnung.master = Umrechnung%
   CodeW.master = CodeW%
   Waehrung.master = Waehrung$
   WaehrungBezeich.master = WaehrungBez$
     Auftragsdat.master = 0
     Auftragsnr.master = ""
     Lieferdatum.master = 0
   IF euromaske% = 1 THEN 
     EKNetto.master = EKNettoEu%
     PreisNetto.master = PreisNettoEu%
     PreisBrutto.master = PreisBruttoEu%
     GesNetto.master = GesNettoEu%
     GesBrutto.master = GesBruttoEu%
     Skonto.master = SkontoEu%
     Rabatt.master = RabattEu%
     BuchBrutto.master = 0
     ProvisDM.master = 0
     BuchProv.master = 0
     ProvisGesDM.master = 0
     ProvisausPosDM.master = 0
     frachtfrei.master = frachtfreiEu%
     Umrechnung.master = 1
     CodeW.master = 3
     Waehrung.master = "EUR"
     WaehrungBezeich.master = "EUR"
   END IF 
   FILE "floskel"
   IF msart% <> 8 THEN 
     SELECT WHERE art.floskel = 1 AND spezial.floskel = msart%
     SELECT FIRST 
   ELSE 
     SELECT WHERE art.floskel = 1 AND spezial.floskel = 16
     SELECT FIRST 
   END IF 
   IF NOT EOF ("floskel") THEN 
     prolog.master = floskel.floskel
   END IF 
   IF msart% <> 8 THEN 
     SELECT WHERE art.floskel = 2 AND spezial.floskel = msart%
     SELECT FIRST 
   ELSE 
     SELECT WHERE art.floskel = 2 AND spezial.floskel = 16
     SELECT FIRST 
   END IF 
   IF NOT EOF ("floskel") THEN 
     epilog.master = floskel.floskel
   END IF 
   FILE "master"
 END IF 
 
 IF flosk% = 3 THEN 
   IF optNeuBeleg% = 0 THEN 
     COPY FROM PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
     adress$ = ""
     ProvPosDM% = 0
     ProvisDM% = 0
     ProvisProz% = ProvisProz.master
     ProvisGesDM% = 0
     CodeMa% = Codema.master
     EKNettoEu% = VAL ( STR$ (EKNettoEu.master,"999999999.00"))
     PreisNettoEu% = VAL ( STR$ (PreisNettoEu.master,"999999999.00"))
     PreisBruttoEu% = VAL ( STR$ (PreisBruttoEu.master,"999999999.00"))
     GesNettoEu% = VAL ( STR$ (GesNettoEu.master,"999999999.00"))
     GesBruttoEu% = VAL ( STR$ (GesBruttoEu.master,"999999999.00"))
     SkontoEu% = VAL ( STR$ (SkontoEu.master,"999999999.00"))
     RabattEu% = VAL ( STR$ (RabattEu.master,"999999999.00"))
     BuchBruttoEu% = 0
     ProvisEu% = 0
     BuchProvEu% = 0
     ProvisGesEu% = 0
     ProvisausPosEu% = 0
     frachtfreiEu% = VAL ( STR$ (frachtfreiEu.master,"999999999.00"))
     Umrechnung% = Umrechnung.master
     CodeW% = CodeW.master
     Waehrung$ = Waehrung.master
     WaehrungBez$ = WaehrungBezeich.master
 
     SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
     COPY TO PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
     adresstext.master = adress$
     ProvisausPosDM.master = 0
     ProvisDM.master = 0
     ProvisProz.master = ProvisProz%
     ProvisGesDM.master = 0
     Codema.master = CodeMa%
     EKNettoEu.master = EKNettoEu%
     PreisNettoEu.master = PreisNettoEu%
     PreisBruttoEu.master = PreisBruttoEu%
     GesNettoEu.master = GesNettoEu%
     GesBruttoEu.master = GesBruttoEu%
     SkontoEu.master = SkontoEu%
     RabattEu.master = RabattEu%
     BuchBruttoEu.master = BuchBruttoEu%
     ProvisEu.master = ProvisEu%
     BuchProvEu.master = BuchProvEu%
     ProvisGesEu.master = 0
     ProvisausPosEu.master = 0
     frachtfreiEu.master = frachtfreiEu%
     Umrechnung.master = Umrechnung%
     CodeW.master = CodeW%
     Waehrung.master = Waehrung$
     WaehrungBezeich.master = WaehrungBez$
     Auftragsdat.master = 0
     Auftragsnr.master = ""
     Lieferdatum.master = 0
     IF euromaske% = 1 THEN 
       EKNetto.master = EKNettoEu%
       PreisNetto.master = PreisNettoEu%
       PreisBrutto.master = PreisBruttoEu%
       GesNetto.master = GesNettoEu%
       GesBrutto.master = GesBruttoEu%
       Skonto.master = SkontoEu%
       Rabatt.master = RabattEu%
       BuchBrutto.master = 0
       ProvisDM.master = 0
       BuchProv.master = 0
       ProvisGesDM.master = 0
       ProvisausPosDM.master = 0
       frachtfrei.master = frachtfreiEu%
       Umrechnung.master = 1
       CodeW.master = 3
       Waehrung.master = "EUR"
       WaehrungBezeich.master = "EUR"
     END IF 
   END IF 
 END IF 
 IF optNeuBeleg% = 0 THEN oldReNr.master = globalGutsch$
 IF optNeuBeleg% = 0 THEN CALL QuickStore("MASTER")
 MOUSE OFF 
 REM -------- Positionen kopieren --------
 
 scode% = vorlage% * 1000 + 1
 FILE "SCHEIN"
 INDEX QuickCodePos.SCHEIN
 SELECT FIRST FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
 SELECT KEY scode% FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
 ok% = 1
 IF optNeuBeleg% = 0 THEN 
   AnzPosOld% = 0
 END IF 
 WHILE CodeMS.SCHEIN = vorlage% AND NOT EOF ("SCHEIN") AND ok% = 1
   SET STATUS "Kopiere Position " + LTRIM$ ( STR$ (PosNr,"999"))
   REM COPY FROM Art,Anzahl,Bezeichnung,Artikelnummer,Beschreibung,CodeAR,VKnetto,VKBrutto,EK,GesamtNetto,GesamtBrutto,ME_,PosNr,Rabatt,RabattProz,MwSt
   REM COPY TO Art,Anzahl,Bezeichnung,Artikelnummer,Beschreibung,CodeAR,VKnetto,VKBrutto,EK,GesamtNetto,GesamtBrutto,ME_,PosNr,Rabatt,RabattProz,MwSt
   Art% = Art:Anzahl% = Anzahl:Bezeichnung$ = Bezeichnung:Artikelnummer$ = Artikelnummer
   Beschreibung$ = Beschreibung:CodeAR% = CodeAR:VKnetto% = VKnetto:VKBrutto% = VKBrutto:EK% = EK:GesamtNetto% = GesamtNetto
   GesamtBrutto% = GesamtBrutto:ME$ = ME_:Rabatt% = Rabatt:RabattProz% = RabattProz:MwSt% = MwST
   CodeGR% = CodeGR:RabattArt% = RabattArt:TextVorPos$ = TextVorPosition
   Bezugsmenge% = Bezugsmenge:Maschine$ = maschine:ZeitproBezug% = ZeitproBezugsme
   Handelssp% = Handelsspanne
   PosNr% = AnzPosOld% + PosNr
   EKeu% = VAL ( STR$ (EKeu,"999999999.00"))
   VKNettoEu% = VAL ( STR$ (VKNettoEu ,"999999999.00"))
   VKBruttoEu% = VAL ( STR$ (VKBruttoEu ,"999999999.00"))
   GesNettoEu% = VAL ( STR$ (GesNettoEu ,"999999999.00"))
   GesBruttoEu% = VAL ( STR$ (GesBruttoEu ,"999999999.00"))
   RabattEu% = VAL ( STR$ (RabattEu ,"999999999.00"))
   ProvisEu% = VAL ( STR$ (ProvisEu ,"999999999.00"))
   Umrechnung% = Umrechnung
   CodeW% = CodeW
   Waehrung$ = Waehrung
   WaehrungBez$ = WaehrungBezeich
 
   IF DEFA$ = "MEGA" THEN 
     Bestandskonto% = Bestandskonto
     Verbrauchskto% = Verbrauchskonto 
   END IF 
   BLANK FILE "schein"
   codesch.schein = SER ("schein",1)
   IF DEFA$ = "MEGA" THEN 
     Bestandskonto = Bestandskonto%
     Verbrauchskonto = Verbrauchskto%
   END IF 
   REM COPY TO Art,Anzahl,Bezeichnung,Artikelnummer,Beschreibung,CodeAR,VKnetto,VKBrutto,EK,GesamtNetto,GesamtBrutto,ME_,PosNr,Rabatt,RabattProz,MwSt
   Art = Art%:Anzahl = Anzahl%:Bezeichnung = Bezeichnung$:Artikelnummer = Artikelnummer$
   Beschreibung = Beschreibung$:CodeAR = CodeAR%:VKnetto = VKNetto%:VKBrutto = VKBrutto%:EK = EK%:GesamtNetto = GesamtNetto%
   GesamtBrutto = GesamtBrutto%:ME_ = ME$:PosNr = PosNR%:Rabatt = Rabatt%:RabattProz = RabattProz%:MwSt = MwST%
   CodeGR = CodeGR%:RabattArt = RabattArt%:TextVorPosition = TextVorPos$
   CodeMS.schein = master%
   Bezugsmenge = Bezugsmenge%:Maschine = maschine$:ZeitproBezugsme = ZeitproBezug%
   Handelsspanne = Handelssp%
   SELECT FIRST FILE "artikel" INDEX codear.artikel
   SELECT KEY codear% FILE "artikel" INDEX codear.artikel
   rme1.schein = rme1.artikel:rmeproz1.schein = rmeproz1.artikel:rmedm1.schein = rmedm1.artikel
   rme2.schein = rme2.artikel:rmeproz2.schein = rmeproz2.artikel:rmedm2.schein = rmedm2.artikel
   rme3.schein = rme3.artikel:rmeproz3.schein = rmeproz3.artikel:rmedm3.schein = rmedm3.artikel
   rme4.schein = rme4.artikel:rmeproz4.schein = rmeproz4.artikel:rmedm4.schein = rmedm4.artikel
   rme5.schein = rme5.artikel:rmeproz5.schein = rmeproz5.artikel:rmedm5.schein = rmedm5.artikel
   rmeEU1.schein = VAL ( STR$ (rmeEU1.artikel,"999999999.00"))
   rmeEU2.schein = VAL ( STR$ (rmeEU2.artikel,"999999999.00"))
   rmeEU3.schein = VAL ( STR$ (rmeEU3.artikel,"999999999.00"))
   rmeEU4.schein = VAL ( STR$ (rmeEU4.artikel,"999999999.00"))
   rmeEU5.schein = VAL ( STR$ (rmeEU5.artikel,"999999999.00"))
   EKeu = EKeu%
   VKNettoEu = VKNettoEu%
   VKBruttoEu = VKBruttoEu%
   GesNettoEu = GesNettoEu%
   GesBruttoEu = GesBruttoEu%
   RabattEu = RabattEu%
   ProvisEu = 0
   Umrechnung = Umrechnung%
   CodeW = CodeW%
   Waehrung = Waehrung$
   WaehrungBezeich = WaehrungBez$
   IF euromaske% = 1 THEN 
     rmedm1.schein = rmeEU1.artikel
     rmedm2.schein = rmeEU2.artikel
     rmedm3.schein = rmeEU3.artikel
     rmedm4.schein = rmeEU4.artikel
     rmedm5.schein = rmeEU5.artikel
     EK = EKeu%
     VKNetto = VKNettoEu%
     VKBrutto = VKBruttoEu%
     GesNetto = GesNettoEu%
     GesBrutto = GesBruttoEu%
     Rabatt = RabattEu%
     Provis = 0
     Umrechnung = 1
     CodeW = 3
     Waehrung = "EUR"
     WaehrungBezeich = "EUR"
   END IF 
   CALL QuickStore("SCHEIN")
   FILE "schein"
   MOUSE OFF 
   SELECT FIRST FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   SELECT KEY scode% FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   SELECT NEXT FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   scode% = vorlage% * 1000 + PosNr.schein
 WEND 
 IF optNeuBeleg% > 0 THEN 
   SELECT FIRST FILE "master" INDEX codems.master
   SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   AnzPos.Master = AnzPosOld% + AnzPosVorlage%
   REM CALL Fehler( STR$ (AnzPos.Master,"99"),"")
   CALL QuickStore("Master")
   SELECT FIRST FILE "master" INDEX codems.master
 END IF 
 FILE "master"
 INDEX codems.master
 SELECT FIRST FILE "MASTER" INDEX CodeMS.MASTER
 SELECT FORM KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
 REM SELECT KEY master% LOCK FILE "MASTER" INDEX CodeMS.MASTER
 FORM 
 SET STATUS ""
 MOUSE ON 
 END SUB 
 
 
 ' MASTER A/R/L/A lîschen
 ' =======================================================================
 
SUB MSLoeschen()
 IF disabled%("MSLoeschen") THEN END SUB 
 _cums% = CodeMS.master
 IF StatusM.Master = "b" AND (Art.master = 2 OR art.master = 7) AND EXISTS (_cums%,codems.abzugang) THEN 
   CALL Fehler("Der Vorgang wurde bereits gebucht!Er kann nicht gelîscht werden!","Wir empfehlen grundsÑtzlich keine Dokumente zu lîschen, sondern mit GUTSCHRIFT zu arbeiten, da dort Provisionen und LagerbestÑnde korrekt zurÅckgebucht werden!")
   END SUB 
 END IF 
 IF BuchUms.Master = "Y" AND (art.master = 2 OR art.master = 2 OR art.master = 7) THEN 
   text1$ = "Der Vorgang wurde bereits bei Umsatz und je nach Provisionierungsart (Liefer/Rechnung) gebucht! Er darf nicht gelîscht werden, falls Sie GUTSCHRIFT zur Stornierung verwendet haben, da dort bereits die Provision zurÅckgerechnet wurde!"
   text2$ = "Im Falle einer Lîschung wird die Provision dann nochmals abgezogen. Wir empfehlen grundsÑtzlich keine Dokumente zu lîschen, sondern mit GUTSCHRIFT zu arbeiten, da dort Provisionen und LagerbestÑnde korrekt zurÅckgebucht werden!"
   CALL Fehler(text1$,text2$)
 END IF 
 CALL DFile(3,"SCHEIN" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"LIEFRUCK" + _fpw$)
 SET STATUS "Datensatz lîschen"
 REQUEST "Wollen Sie den aktuellen Datensatz lîschen?","",130,req%
 IF req% = 1 THEN 
   MOUSE OFF 
   FILE "MASTER"
   INDEX CodeMS.master
   REM _cums% = CodeMS.master
   SELECT FIRST FILE "master" INDEX CodeMS.master
   SELECT KEY _cums% LOCK FILE "master" INDEX CodeMS.master
   ok% = 0
   IF req% = 1 THEN 
     IF EXISTS (_cums%,codems.liefruck) THEN 
       FILE "liefruck"
       INDEX codems.liefruck
       SELECT FIRST FILE "liefruck" INDEX codems.liefruck
       SELECT KEY _cums% LOCK FILE "liefruck" INDEX codems.liefruck
       WHILE NOT EOF ("liefruck") AND codems.liefruck = _cums%
         SELECT REMOVE FILE "liefruck"
         SELECT FIRST FILE "liefruck" INDEX codems.liefruck
         IF EXISTS (_cums%,codems.liefruck) THEN 
           SELECT KEY _cums% LOCK FILE "liefruck" INDEX codems.liefruck
         ELSE 
           SELECT LAST FILE "liefruck" INDEX codems.liefruck
         END IF 
       WEND 
     END IF 
     IF EXISTS (_cums%,codems.schein) THEN 
       FILE "schein"
       INDEX codems.schein
       SELECT FIRST FILE "schein" INDEX codems.schein
       SELECT KEY _cums% LOCK FILE "schein" INDEX codems.schein
       WHILE NOT EOF ("schein") AND codems.schein = _cums%
         SELECT REMOVE FILE "schein"
         SELECT FIRST FILE "schein" INDEX codems.schein
         IF EXISTS (_cums%,codems.schein) THEN 
           SELECT KEY _cums% LOCK FILE "schein" INDEX codems.schein
         ELSE 
           SELECT LAST FILE "schein" INDEX codems.schein
         END IF 
       WEND 
     END IF 
     IF EXISTS (_cums%,codems.abzugang) THEN 
       FILE "abzugang"
       INDEX codems.abzugang
       SELECT FIRST FILE "abzugang" INDEX codems.abzugang
       SELECT KEY _cums% LOCK FILE "abzugang" INDEX codems.abzugang
       WHILE NOT EOF ("abzugang") AND codems.abzugang = _cums%
         SELECT REMOVE FILE "abzugang"
         SELECT FIRST FILE "abzugang" INDEX codems.abzugang
         IF EXISTS (_cums%,codems.abzugang) THEN 
           SELECT KEY _cums% LOCK FILE "abzugang" INDEX codems.abzugang
         ELSE 
           SELECT LAST FILE "abzugang" INDEX codems.abzugang
         END IF 
       WEND 
     END IF 
     IF EXISTS (_cums%,codems.master) THEN 
       REM ###abloe
       codems% = _cums%
       CALL UmsFuelEinzel(Codems%,1)
       FILE "master"
       INDEX codems.master
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT KEY codems% LOCK FILE "master" INDEX codems.master
       SELECT REMOVE FILE "master"
       cums% = 0
       _cums% = 0
     END IF 
     FILE "master"
     cuaq% = 0
     ok% = 1
   END IF 
 END IF 
 scode% = knr% * 10 + MSArt%
 form1$ = FORM 
 IF UCASE$ ( FORM ) LIKE "MASTER" OR UCASE$ ( FORM ) LIKE "MASTPRJ" OR UCASE$ ( FORM ) LIKE "MASTPRJE" THEN 
   scode% = knr% * 10 + MSArt%
 END IF 
 IF UCASE$ ( FORM ) LIKE "MASTER1" OR UCASE$ ( FORM ) LIKE "MAST1PRJ" THEN 
   scode% = knr% * 10 + MSArt1%
 END IF 
 FILE "master"
 INDEX QuickCodeKU.MASTER
 SELECT FIRST FILE "MASTER" INDEX QuickCodeKU.MASTER
 SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
 IF NOT FOUND ("MASTER") THEN 
   REQUEST "Keine weiteren " + msart$ + " vorhanden!","Bearbeitung wird verlassen.",113
   _formend% = 1
 ELSE 
   IF ok% = 1 THEN REQUEST "Datensatz gelîscht !","",2
   SELECT KEY scode% FILE "MASTER" INDEX QuickCodeKU.MASTER
   SELECT KEY knr% FILE "umsatz" INDEX codeku.umsatz
   SELECT KEY knr% FILE "adressen" INDEX codeku.adressen
   FORM 
 END IF 
 MOUSE ON 
 END SUB 
 
 
 ' MASTER Abschlu·rechnung fÅr Vorgang durchfÅhren
 ' =======================================================================
 
SUB MSRechnen()
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"MASTER" + _fpw$)
 CALL DFile(3,"SCHEIN" + _fpw$)
 CALL DFile(3,"VERTRETE" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"LIEFRUCK" + _fpw$)
 CALL DFile(3,"serienr" + _fpw$)
 IF DEFA$ = "MEGA" THEN 
   CALL DFile(3,"KSATZ" + _fpw$)
   CALL DFile(3,"SSATZ" + _fpw$)
 END IF 
 MOUSE OFF 
 cums% = CodeMS.MASTER
 CALL MWSTBerechnung()
 FILE "SCHEIN"
 SET STATUS "Berechnung lÑuft..."
 INDEX CodeMS.SCHEIN
 SELECT FIRST 
 NUMBASE "z99999999999.99"
 nettosumme% = 0.00
 bruttosumme% = 0.00
 eksumme% = 0.00
 mwstsum% = 0.00
 ProvisPosGes% = 0

 nettosummeEU% = 0.00
 bruttosummeEU% = 0.00
 eksummeEU% = 0.00
 mwstsumEU% = 0.00
 ProvisPosGesEU% = 0
 SELECT FIRST FILE "SCHEIN" INDEX CodeMS.SCHEIN
 SELECT KEY cums% FILE "SCHEIN" INDEX CodeMS.SCHEIN
 WHILE CodeMS.SCHEIN = cums% AND NOT EOF ("SCHEIN")
   IF Art.SCHEIN = 0 THEN 
     nettosumme% = nettosumme% + GesamtNetto.SCHEIN
     bruttosumme% = bruttosumme% + GesamtBrutto.SCHEIN
     eksumme% = eksumme% + (EK.SCHEIN / Bezugsmenge.schein * Anzahl.SCHEIN)
     mwst% = MwSt.SCHEIN
     mwstsum% = bruttosumme% - nettosumme%
     ProvisPosGes% = ProvisPosGes% + ProvisDM.schein

     nettosummeEU% = nettosummeEU% + GesNettoEU.SCHEIN
     a$ = "Summeeu:" + STR$ (nettosummeEU%,"9999999.00")
     b$ = "Nettoeu:" + STR$ (GesNettoEU.SCHEIN,"9999999.00")
     REM CALL Fehler(a$,b$)
     bruttosummeEU% = bruttosummeEU% + GesBruttoEU.SCHEIN
     eksummeEU% = eksummeEU% + (EKEU.SCHEIN / Bezugsmenge.schein * Anzahl.SCHEIN)
     mwst% = MwSt.SCHEIN
     mwstsumEU% = bruttosummeEU% - nettosummeEU%
     ProvisPosGesEU% = ProvisPosGesEU% + ProvisEU.schein
   END IF 
   SELECT NEXT FILE "SCHEIN" INDEX CodeMS.SCHEIN
 WEND 
 SELECT FIRST FILE "SCHEIN" INDEX CodeMS.SCHEIN
 SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.master
 IF kalkart.master = 0 THEN 
   PreisNetto.MASTER = nettosumme%
   PreisBrutto.MASTER = nettosumme% + mwstbetrag1%

   PreisNettoEU.MASTER = nettosummeEU%
   PreisBruttoEU.MASTER = nettosummeEU% + mwstbetrag1EU%
 ELSE 
   PreisNetto.MASTER = bruttosumme% - mwstbetrag1%
   PreisBrutto.MASTER = bruttosumme%

   PreisNettoEU.MASTER = bruttosummeEU% - mwstbetrag1EU%
   PreisBruttoEU.MASTER = bruttosummeEU%
 END IF 
 IF (Rabatt.MASTER > 0 OR RabattEU.MASTER > 0) AND NOT MultipleVAT%(cums%) THEN 
   IF RabattArt.MASTER = 0 THEN 
     GesNetto.MASTER = PreisNetto.MASTER - Rabatt.MASTER
     GesBrutto.MASTER = GesNetto.MASTER + (GesNetto.MASTER / 100 * MwSt.MASTER)

     GesNettoEU.MASTER = PreisNettoEU.MASTER - RabattEU.MASTER
     GesBruttoEU.MASTER = GesNettoEU.MASTER + (GesNettoEU.MASTER / 100 * MwSt.MASTER)
   ELSE 
     GesBrutto.MASTER = PreisBrutto.MASTER - Rabatt.MASTER
     GesNetto.MASTER = GesBrutto.MASTER / (100 + MwSt.MASTER) * 100

     GesBruttoEU.MASTER = PreisBruttoEU.MASTER - RabattEU.MASTER
     GesNettoEU.MASTER = GesBruttoEU.MASTER / (100 + MwSt.MASTER) * 100
   END IF 
 ELSE 
   IF kalkart.master = 0 THEN 
     GesNetto.MASTER = nettosumme%
     GesBrutto.MASTER = nettosumme% + mwstbetrag1%

     GesNettoEU.MASTER = nettosummeEU%
     GesBruttoEU.MASTER = nettosummeEU% + mwstbetrag1EU%
   ELSE 
     GesNetto.MASTER = bruttosumme% - mwstbetrag1%
     GesBrutto.MASTER = bruttosumme%

     GesNettoEU.MASTER = bruttosummeEU% - mwstbetrag1EU%
     GesBruttoEU.MASTER = bruttosummeEU%
   END IF 
 END IF 
 EKnetto.MASTER = eksumme%
 MwSt.MASTER = mwst%
 ProvisausPosDM.master = ProvisPosGes%
 ProvisDM.master = GesNetto.MASTER * ProvisProz.master / 100
 ProvisGesDM.master = ProvisDM.master + ProvisausPosDM.master

 EKnettoEU.MASTER = eksummeEU%
 MwSt.MASTER = mwst%
 ProvisausPosEU.master = ProvisPosGesEU%
 ProvisEU.master = GesNettoEU.MASTER * ProvisProz.master / 100
 ProvisGesEU.master = ProvisEU.master + ProvisausPosEU.master

 CALL QuickStore("MASTER")
 SET STATUS ""
 MOUSE ON 
 END SUB 
 
 
 ' MASTER nÑchster Datensatz
 ' =======================================================================
 
SUB SearchInitREA()
 MOUSE OFF 
 CALL CopySearch()
 GCODieRuf% = - 1
 GCODieRuf2% = - 1
           f1$ = "Nummer"
           f2$ = "Datum"
           f3$ = "Belegnummer"
           f4$ = "Netto in Eur"
           f5$ = "Brutto in Eur"
           IF art.master = 2 OR art.master = 7 THEN 
             f6$ = "Zahlungsziel"
             f7$ = "Name"
             f8$ = "Projekt"
             f9$ = "Buchungsgruppe/-konto"
             f10$ = "Rabatt"
             f11$ = "RabattProzent"
             f12$ = "Skonto"
             f13$ = "SkontoProzent"
             f14$ = "SkontoZiel"
             f15$ = "Teilzahlung J/N"
             f16$ = "bereits bezahlt"
             f17$ = "Restbetrag"
             f18$ = "Vorgang erledigt J/N"
             f19$ = "Vorgang erledigt am"
             f20$ = ""
             IF art.master = 2 OR art.master = 3 OR art.master = 4 THEN 
               f20$ = "Auftragsnummer AG"
             END IF 
           ELSE 
             f6$ = "Name"
             f7$ = "Projekt"
             f8$ = "Vorgang erledigt J/N"
             f9$ = "Vorgang erledigt am"
             f10$ = ""
             IF art.master = 1 THEN 
               f10$ = "angenommen/abgelehnt"
             END IF 
             f11$ = ""
             IF art.master = 2 OR art.master = 3 OR art.master = 4 THEN 
               f11$ = "Auftragsnummer AG"
             END IF 
             f12$ = ""
             IF art.master = 1 THEN 
               f12$ = "Buchungstext"
             END IF 
             f13$ = ""
             f14$ = ""
             f15$ = ""
             f16$ = ""
             f17$ = ""
             f18$ = ""
             f19$ = ""
             f20$ = ""
           END IF 
           
           
 SPath$ = GMACodeDir$
 ret% = CALL ("_SearchInit",SPath$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
 END SUB 
 
 
 
      
SUB SearchVorbREA(datsu$)
               GGGcodeku$ = STR$ (codems.datsu$,"000000")
               f18$ = "N"
               IF EXISTS (codems.master,codems.rausgang) AND (art.master = 2 OR art.master = 7) THEN 
                 SELECT FIRST FILE "rausgang" INDEX codems.rausgang
                 SELECT KEY codems.master FILE "rausgang" INDEX codems.rausgang
                 wgruppe$ = wgruppe.rausgang
                 warenart$ = warenart.rausgang
                 IF codewgru.rausgang < 1 THEN wgruppe$ = "<ohne Zuordnung>"
                 IF codewa.rausgang < 1 THEN warenart$ = "<ohne Zuordnung>"
                 ABuchKto$ = wgruppe$ + "/" + warenart$
                 REM f18$ = FN ansi (erledigt.rausgang)
               END IF 
               f1$ = FN ansi(nummer.datsu$)
               f2$ = DATE$ (datum.datsu$,"yyyy-mm-0d")
               f3$ = FN ansi(belegnr.datsu$)
 
               f4$ = STR$ (GesNettoEU.datsu$,",999999999.00")
               f5$ = STR$ (GesBruttoEU.datsu$,",999999999.00")
               IF art.master = 2 OR art.master = 7 THEN 
                 IF erledigt.master LIKE "j" THEN 
                   f18$ = "J"
                 ELSE 
                   f18$ = "N"
                 END IF 
                 IF erledigtdatum.master > 0 THEN 
                   f19$ = DATE$ (erledigtdatum.master,"yyyy-mm-0d")
                 ELSE 
                   f19$ = ""
                 END IF 
                 f6$ = DATE$ (Zahldatum.datsu$,"yyyy-mm-0d")
                 f7$ = FN ansi(nachname.datsu$)
                 f8$ = FN ansi(projekt.datsu$)
                 f9$ = FN ansi(ABuchKto$)
                 f10$ = STR$ (Rabatt.datsu$,",999999999.00")
                 f11$ = STR$ (RabattProz.datsu$,",9999.00")
 
                 f12$ = STR$ (Skonto.datsu$,",999999999.00")
                 f13$ = STR$ (SkontoProz.datsu$,",9999.00")
                 f14$ = DATE$ (SkontoZiel.datsu$,"yyyy-mm-0d")
                 IF TeilErlaubt.master = 1 THEN 
                   f15$ = "J"
                 ELSE 
                   f15$ = "N"
                 END IF 
                 f16$ = STR$ (SummeTeilEu.datsu$,",999999999.00")
                 f17$ = STR$ (GesBruttoEU.datsu$ - SummeTeilEu.datsu$,",999999999.00")
                 f20$ = ""
                 IF art.master = 2 OR art.master = 3 OR art.master = 4 THEN 
                   IF auftragsnr.datsu$ <> "" THEN 
                     f20$ = FN ansi(auftragsnr.datsu$)
                     IF auftragsdat.datsu$ > 0 THEN 
                       f20$ = f20$ + "/" + DATE$ (auftragsdat.datsu$,"0d.mm.yyyy")
                     END IF 
                   ELSE 
                     IF auftragsdat.datsu$ > 0 THEN 
                       f20$ = DATE$ (auftragsdat.datsu$,"0d.mm.yyyy")
                     END IF 
                   END IF 
                 END IF 
               ELSE 
                 f6$ = FN ansi(nachname.datsu$)
                 f7$ = FN ansi(projekt.datsu$)
                 IF erledigt.master LIKE "j" THEN 
                   f8$ = "J"
                 ELSE 
                   f8$ = "N"
                 END IF 
                 IF erledigtdatum.master > 0 THEN 
                   f9$ = DATE$ (erledigtdatum.master,"yyyy-mm-0d")
                 ELSE 
                   f9$ = ""
                 END IF 
                 f10$ = ""
                 IF art.master = 1 THEN 
                   f10$ = gebustor.master
                 END IF 
                 f11$ = ""
                 IF art.master = 2 OR art.master = 3 OR art.master = 4 THEN 
                   IF auftragsnr.datsu$ <> "" THEN 
                     f11$ = FN ansi(auftragsnr.datsu$)
                     IF auftragsdat.datsu$ > 0 THEN 
                       f11$ = f11$ + "/" + DATE$ (auftragsdat.datsu$,"0d.mm.yyyy")
                     END IF 
                   ELSE 
                     IF auftragsdat.datsu$ > 0 THEN 
                       f11$ = DATE$ (auftragsdat.datsu$,"0d.mm.yyyy")
                     END IF 
                   END IF 
                 END IF 
                 f12$ = ""
                 IF art.master = 1 THEN 
                   IF EXISTS (codems.master,codems.abzugang) THEN 
                     SELECT FIRST FILE "abzugang" INDEX codems.abzugang
                     SELECT KEY codems.master FILE "abzugang" INDEX codems.abzugang
                     f12$ = FN ansi(Buchungstext.abzugang)
                   END IF 
                 END IF 
                 f13$ = ""
                 f14$ = ""
                 f15$ = ""
                 f16$ = ""
                 f17$ = ""
                 f18$ = ""
                 f19$ = ""
                 f20$ = ""
               END IF 

 
               
  ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
  END SUB 



SUB MSSuchen()
 cums% = CodeMS.Master
 cunr$ = Nummer.Master
 _art$ = MSArt$
 scode% = knr% * 10 + MSArt%
 IF RIGHT$ (_art$,1) <> "n" THEN _art$ = _art$ + "n"
 REM REQUEST "WÑhlen Sie aus den " + _art$ + " aus:","Nummer, Datum, Nettosumme, Bruttosumme",25,req%,nummer$,60,Nummer.Master,Datum.MASTER,GesNetto.MASTER,GesBrutto.MASTER INDEX CodeMS.Master WHERE QuickCodeKU.Master = scode%
 MOUSE OFF 
 REDIM auswahl$(10000,1)
 REDIM auswahl$(10000)
 DIM positionen$(10000,1)
 REDIM positionen$(10000)
 REM FOR a% = 0 TO RECCOUNT ("master")
   REM Auswahl$(a%) = ""
 REM NEXT a%
 REM FOR a% = 0 TO RECCOUNT ("master")
   REM Positionen$(a%) = ""
 REM NEXT a%
 FILE "master"
 SELECT WHERE 
 INDEX quickcodeku.master
 SELECT FIRST FILE "master" INDEX quickcodeku.master
 SELECT KEY scode% FILE "master" INDEX quickcodeku.master
 counter% = - 1
 sprung% = 0
 IF GCODIE% = - 1 THEN 
   CALL SearchInitREA()
 END IF 
 WHILE NOT EOF ("master") AND quickcodeku.master = scode%
   counter% = counter% + 1
   IF ProjectJN$ = "TRUE" THEN 
     IF euromaske% = 1 THEN 
       Positionen$(counter%) = Nummer.Master + "   " + DATE$ (Datum.MASTER,"0d.mm.yy") + "    " + STR$ (GesBruttoEU.MASTER,",999999999.00") + " EUR " + nachname.MASTER + "  [" + projekt.master + "]" + SPACE$ (90) + STR$ (codems.master,"000000")
     ELSE 
    Positionen$(counter%) = Nummer.Master + "   " + DATE$ (Datum.MASTER,"0d.mm.yy") + "    " + STR$ (GesBrutto.MASTER,",999999999.00") + " " + waehrung.master + " " + nachname.MASTER + " [" + projekt.master + "]" + SPACE$ (90) + STR$ (codems.master,"000000")
     END IF 
   ELSE 
     IF euromaske% = 1 THEN 
       Positionen$(counter%) = Nummer.Master + "   " + DATE$ (Datum.MASTER,"0d.mm.yy") + "    " + STR$ (GesBruttoEU.MASTER,",999999999.00") + " EUR " + nachname.MASTER + SPACE$ (90) + STR$ (codems.master,"000000")
     ELSE 
       Positionen$(counter%) = Nummer.Master + "   " + DATE$ (Datum.MASTER,"0d.mm.yy") + "    " + STR$ (GesBrutto.MASTER,",999999999.00") + " " + waehrung.master + "  " + nachname.MASTER + SPACE$ (90) + STR$ (codems.master,"000000")
     END IF 
   END IF 
   IF GCODIE% = - 1 THEN 
     CALL SearchVorbREA("Master")
   END IF 
   SELECT NEXT INDEX quickcodeku.master
 WEND 
 INDEX codems.master
 _cums1% = 0
 MOUSE ON 
 IF GCODIE% <> - 1 THEN 
   IF ProjectJN$ = "TRUE" THEN 
     CREATE DIALOG "REGISTER",0,0,422,350,title$,"MS Sans Serif",8
     ADD DIALOG "REGISTER",5,5,4,240,10,0,"WÑhlen Sie einen Beleg"
     ADD DIALOG "REGISTER",7,5,19,409,305,8,2,Positionen$,Auswahl$,Positionen$(0)
     ADD DIALOG "REGISTER",1,159,329,48,16,1,"&OK",1,1
     ADD DIALOG "REGISTER",1,209,329,48,16,0,"&Abbrechen",0,0
     DIALOG "REGISTER",req%
     REMOVE DIALOG "REGISTER"
   ELSE 
     CREATE DIALOG "REGISTER",0,0,322,350,title$,"MS Sans Serif",8
     ADD DIALOG "REGISTER",5,5,4,240,10,0,"WÑhlen Sie einen Beleg"
     ADD DIALOG "REGISTER",7,5,19,309,305,8,2,Positionen$,Auswahl$,Positionen$(0)
     ADD DIALOG "REGISTER",1,109,329,48,16,1,"&OK",1,1
     ADD DIALOG "REGISTER",1,158,329,48,16,0,"&Abbrechen",0,0
     DIALOG "REGISTER",req%
     REMOVE DIALOG "REGISTER"
   END IF 
   IF counter% <> - 1 THEN _cums1% = VAL ( RIGHT$ (Auswahl$(0),6))
   IF req% = 1 AND _cums1% <> 0 THEN 
     cums% = _cums1%
   END IF 
 ELSE 

   c$ = "aa"
   IF sprung% = 0 THEN 
     req% = CALL ("_SearchShow",c$)
   ELSE 
     req% = CALL ("_SearchReShow",c$)
   END IF 
   req3% = req%
   REM GRechSu1% = - 1
   MENU 3,2,1,"letztes Suchergebnis,F7","LastSearchRe",""
   MENU ON 
   ok% = 0
   REM REQUEST c$,"",2
   REM ret% = CALL ("_SearchClose")
   REM CALL Fehler("","")
   IF VAL (c$) <> 0 THEN 
     cums% = VAL (c$)
     req% = 1
     SET STATUS "...gefunden..."
   ELSE 
     req% = 0
   END IF 
   IF req3% = 2 THEN 
     REM CALL Fehler("Diese Funktion wird nur innerhalb der Adressmaske unterstÅtzt!","")
     CALL Fehler("Diese Funktion wird hier nicht unterstÅtzt!","")
   END IF 
 END IF 
 IF cums% <> 0 THEN 
   SELECT FIRST FILE "MASTER" INDEX codems.Master
   SELECT FORM KEY cums% FILE "MASTER" INDEX codems.Master
 END IF 
 SET INDEX CodeKU.Master
 INDEX CodeKU.master
 END SUB 
  
SUB LastSearchRe()
 c$ = "aa"
 req% = CALL ("_SearchReShow",c$)
 req3% = req%
 REM CALL Fehler("","")
   IF VAL (c$) <> 0 THEN 
     cums% = VAL (c$)
     req% = 1
     SET STATUS "...gefunden..."
   ELSE 
     req% = 0
   END IF 
   IF re3% = 2 THEN 
     REM CALL Fehler("Diese Funktion wird nur innerhalb der Adressmaske unterstÅtzt!","")
     CALL Fehler("Diese Funktion wird hier nicht unterstÅtzt!","")
   END IF 
 IF cums% <> 0 THEN 
   SELECT FIRST FILE "MASTER" INDEX codems.Master
   SELECT FORM KEY cums% FILE "MASTER" INDEX codems.Master
 END IF 
 SET INDEX CodeKU.Master
 INDEX CodeKU.master
  
 END SUB 
 
 ' öbernahme in Buchungsdatei
 ' =======================================================================
 REM autom% = 0 Aufruf aus mastermaske ->normal 
 REM autom%=1, dann ohne Dialog abarbeiten
 REM bei autom%<>0 wird die Bestandsschreibung wÑhrend der Auswertung von liefruck
 REM  vorgenonmmen, von dort aus wird MSBuchung mit autom%=1 aufgerufen
 
SUB MSBuchung(codems%,autom%)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"VERTRETE" + _fpw$)
 CALL DFile(3,"LBELEGE" + _fpw$)
 CALL DFile(3,"LIEFRUCK" + _fpw$)
 CALL DFile(2,"OFFICE\AKQUISE" + _fpw$)
 cums% = codems%
 SELECT FIRST FILE "Master" INDEX CodeMS.Master
 SELECT KEY cums% FILE "Master" INDEX CodeMS.Master
 art% = Art.master
 bruttosum% = GesBrutto.Master
 bruttosumEU% = GesBruttoEU.Master
 rdatum% = Datum.master
 codeku1% = Codeku.master
 SELECT FIRST FILE "ABZUGANG" INDEX CodeMS.ABZUGANG
 SELECT KEY cums% FILE "ABZUGANG" INDEX CodeMS.ABZUGANG
 IF FOUND ("ABZUGANG") THEN 
   IF DEFA$ = "MEGA" THEN 
     CALL Fehler("Vorgang wurde bereits gebucht!","Ein erneutes buchen ist nicht mîglich!")
     req% = 0
   ELSE 
     REQUEST "Die Buchung ist bereits durchgefÅhrt worden!","Buchungsdaten korrigieren?",135,req%
   END IF 
   IF req% = 1 THEN 
     MOUSE OFF 
     SET STATUS "Bitte warten: Buchungsdatei wird aktualisiert..."
     REMOVE FROM FILE "ABZUGANG" WHERE CodeMS.ABZUGANG = cums%
     REMOVE FROM FILE "LBELEGE" WHERE CodeMS.LBELEGE = cums%
     SELECT FIRST FILE "MASTER" INDEX CodeMS.MASTER
     SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.MASTER
     StatusM.MASTER = "b"
     buchungsaus$ = "n"
     CALL QuickStore("MASTER")
     CALL UmsFuel1einz(codeku1%)
   ELSE 
     END SUB 
   END IF 
 END IF 
 IF EXISTS (cums%,CodeMS.liefruck) THEN 
   FILE "liefruck"
   INDEX codems.liefruck
   SELECT FIRST 
   MOUSE OFF 
   SET STATUS "Bitte warten: RÅckstellungsdatei wird aktualisiert..."
   REMOVE FROM FILE "liefruck" WHERE CodeMS.liefruck = cums%
   SELECT FIRST FILE "MASTER" INDEX CodeMS.MASTER
   SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   MOUSE ON 
 END IF 
 MOUSE OFF 
 SET STATUS "Bitte warten: öbernahme in Buchungsdatei..."
 opt1$ = "j"
 REM #####andiii
 Termin$ = DATE$ ( TODAY + TerminVorlage%,"dd.mm.yyyy")
 IF autom% = 1 THEN 
   opt2% = 2
   opt3$ = "j"
   req% = 1
 ELSE 
   opt2% = 2
   opt3$ = "n"
   KasseJN$ = "N"
 
   CALL DFile(3,"warenart" + _fpw$)
   CALL DFile(3,"wagruppe" + _fpw$)
anfr170120051: 
     aa% = 0
     FILE "WAGRUPPE"
     INDEX wgruppe.wagruppe
     SELECT FIRST FILE "WAGRUPPE"
     FILE "Warenart"
     INDEX Warenart.warenart
     SELECT FIRST 
     rec1a% = RECCOUNT ("wagruppe") + RECCOUNT ("warenart")
     REDIM ProdGruppen1$(1,1)
     REDIM ProdGruppen1$(rec1a%)
     WHILE NOT EOF ("wagruppe")
       FILE "wagruppe"
       sok% = - 1
       IF alle$ = "n" THEN 
         IF novi1.wagruppe = 1 THEN sok% = 0
       END IF 
       IF sok% THEN 
         codewgru% = codewgru.wagruppe
         IF novi1.wagruppe = 1 THEN 
           ProdGruppen1$(aa%) = wgruppe.wagruppe + " ### " + SPACE$ (100) + STR$ (codewgru.wagruppe,"000000")
         ELSE 
           ProdGruppen1$(aa%) = wgruppe.wagruppe + SPACE$ (100) + STR$ (codewgru.wagruppe,"000000")
         END IF 
         aa% = aa% + 1
         FILE "warenart"
         INDEX warenart.warenart
         SELECT FIRST FILE "warenart"
         WHILE NOT EOF ("warenart")
           ook% = - 1
           IF alle$ = "n" THEN 
             IF novi1.warenart = 1 THEN ook% = 0
           END IF 
           IF codewgru.warenart <> codewgru% THEN ook% = 0
           IF rea.warenart = 2 THEN ook% = 0
           IF ook% THEN 
             IF novi1.wagruppe = 1 THEN 
               ProdGruppen1$(aa%) = "  |-- " + Warenart.warenart + " ### " + SPACE$ (100) + STR$ (codewa.warenart,"000000")
             ELSE 
               ProdGruppen1$(aa%) = "  |-- " + Warenart.warenart + SPACE$ (100) + STR$ (codewa.warenart,"000000")
             END IF 
             aa% = aa% + 1
           END IF 
           SELECT NEXT FILE "warenart"
         WEND 
         REM war1old$ = war1$
       END IF 
       FILE "WAGRUPPE"
       SELECT NEXT FILE "Wagruppe"
     WEND 
 

   LAuswahl$ = ProdGruppen1$(0)
   LAuswahl1$(0) = LAuswahl$
   FILE "master"
st170129952: 
   REM IF art.master = 2 OR art.master = 7 THEN 
   IF art% = 2 OR art% = 7 THEN 
     CREATE DIALOG "BUCHUNG",0,0,261,380,title$,"MS Sans Serif",8
   ELSE 
     CREATE DIALOG "BUCHUNG",0,0,261,190,title$,"MS Sans Serif",8
   END IF 
   ADD DIALOG "BUCHUNG",9,5,4,20,23,2
   ADD DIALOG "BUCHUNG",5,33,6,111,10,0,"öbernahme in die Buchungsdatei:"
   ADD DIALOG "BUCHUNG",4,33,19,124,43,0," Termine "
   ADD DIALOG "BUCHUNG",2,37,30,116,11,0,"Termineinhaltung &kontrollieren?","j","n",opt1$
   ADD DIALOG "BUCHUNG",6,69,44,40,12,0,0,Termin$,10
   ADD DIALOG "BUCHUNG",5,37,46,28,10,0,"&Termin:"
   ADD DIALOG "BUCHUNG",4,158,19,95,43,0," Buchungsart "
   IF art.master = 5 THEN 
     ADD DIALOG "BUCHUNG",3,161,30,75,13,0,"&Einzelpositionen",1,opt2%
   END IF 
   IF DEFA$ = "MEGA" OR Bestrechnung$ = "LIEFER" THEN 
     IF art.master = 3 OR art.master = 7 THEN 
       opt2% = 1
       ADD DIALOG "BUCHUNG",3,161,30,75,13,0,"&Einzelpositionen",1,opt2%
     END IF 
   ELSE 
     ADD DIALOG "BUCHUNG",3,161,46,80,10,0,"&Vorgang",2,opt2%
   END IF 
   IF DEFA$ <> "MEGA" AND Art.MASTER = 2 AND Bestrechnung$ = "RECHNUNG" THEN 
     ADD DIALOG "BUCHUNG",2,33,65,115,13,0,"Bestandsrechnung durchfÅhren","j","n",opt3$
   END IF 
   IF DEFA$ <> "MEGA" THEN 
     IF Art.MASTER = 3 AND Bestrechnung$ = "LIEFER" THEN 
       opt3$ = "j"
       ADD DIALOG "BUCHUNG",2,33,65,115,13,0,"Bestandsrechnung durchfÅhren","j","n",opt3$
     END IF 
   END IF 
   IF DEFA$ = "MEGA" AND art.master = 3 THEN 
     opt3$ = "j"
     ADD DIALOG "BUCHUNG",2,33,65,115,13,0,"Bestandsrechnung durchfÅhren","j","n",opt3$
   END IF 
   IF Art.MASTER = 7 THEN 
     IF DEFA$ = "MEGA" THEN opt3$ = "j"
     ADD DIALOG "BUCHUNG",2,33,65,115,13,0,"BestandsKorrektur durchfÅhren","j","n",opt3$
   END IF 
   ADD DIALOG "BUCHUNG",5,33,84,128,8,0,"zusÑtzlicher &Buchungstext:"
   ADD DIALOG "BUCHUNG",6,33,94,220,73,4,2,Buchungstext$,4000
   REM 170398
   IF art% = 2 OR art% = 7 THEN 
     ADD DIALOG "BUCHUNG",5,33,171,128,8,0,"Buchungskonto:"
     ADD DIALOG "Buchung",7,33,181,220,171,0,2,ProdGruppen1$,Lauswahl1$,ProdGruppen1$(0)
     ADD DIALOG "BUCHUNG",2,33,355,75,10,0," Kasseneingang ?","J","N",KasseJN$
     ADD DIALOG "BUCHUNG",1,40,365,54,15,0,"&OK",1,1
     ADD DIALOG "BUCHUNG",1,98,365,55,15,0,"&Abbrechen",0,0
     ADD DIALOG "BUCHUNG",1,156,365,55,15,0,"Alle",2,2
   ELSE 
     ADD DIALOG "BUCHUNG",1,40,171,54,15,0,"&OK",1,1
     ADD DIALOG "BUCHUNG",1,98,171,55,15,0,"&Abbrechen",0,0
     REM ADD DIALOG "BUCHUNG",1,156,171,55,15,0,"Alle",2,2
   END IF 
   DIALOG "BUCHUNG",req%
   REMOVE DIALOG "BUCHUNG"
 END IF 
 IF req% = 2 THEN 
   alle$ = "j"
   GOTO anfr170120051
 END IF 
 IF req% = 1 THEN 
   IF art% = 2 OR art% = 7 THEN 
     IF Lauswahl1$(0) LIKE "*|--*" THEN 
       codewa% = VAL ( RIGHT$ (Lauswahl1$(0),6))
     ELSE 
       CALL Fehler("Sie dÅrfen keine Buchungsgruppe auswÑhlen, sondern mÅssen ein Buchungskonto auswÑhlen!","Die Buchungskonten sind mit |-- gekennzeichnet!")
       GOTO st170129952
     END IF 
     SELECT FIRST FILE "Warenart" INDEX codewa.Warenart
     SELECT KEY codewa% FILE "Warenart" INDEX codewa.Warenart
     CALL DFile(3,"WAGRUPPE" + _fpw$)
     SELECT FIRST FILE "WAGRUPPE" INDEX codewgru.wagruppe
     SELECT KEY codewgru.warenart FILE "WAGRUPPE" INDEX codewgru.wagruppe
     ware$ = Warenart.Warenart
     wgruppe$ = WGruppe.wagruppe
   ELSE 
     codewa% = 0
     ware$ = "<ohne Zuordnung>"
   END IF 
   opt2% = 2
   IF DEFA$ = "MEGA" AND (art.master = 3 OR art.master = 7) THEN 
     opt2% = 1:REM Einzelpositionen buchen
     opt3$ = "j":REM Bestandsrechnung durchfÅhren
   END IF 
   SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   StatusM.MASTER = "b"
   CALL QuickStore("master")
   CALL DFile(3,"SCHEIN" + _fpw$)
   CALL DFile(3,"ARTPROV" + _fpw$)
   CALL DFile(3,"LIEFRUCK" + _fpw$)
   CALL DFile(3,"serienr" + _fpw$)
   CALL DFile(3,"rausgang" + _fpw$)
   REM ------- Behandlung von Rechnungen Art=2 und Gutschriften Art=7
   IF art% = 2 OR art% = 7 THEN 
     FILE "master"
     SELECT KEY cums% LOCK FILE "master" INDEX codems.master
     IF cums% = codems.master THEN 
       StatusM.master = "b"
       CALL QuickStore("master")
       REM 090398 Erstellung Rechnungsausgangsdatei
       FILE "rausgang"
       IF NOT EXISTS (cums%,codems.rausgang) THEN 
         BLANK FILE "rausgang"
         codere% = SER ("rausgang",1)
         codere.rausgang = codere%
         nnum% = VAL (ReadConfig$("FACTURA","RABelegnr")) + 1
         CALL WriteConfig("FACTURA","RABelegnr", LTRIM$ ( STR$ (nnum%,"0000000")))
         num$ = "A" + DATE$ (datum.master,"yyyymm0d") + "-" + STR$ (nnum%,"000000")
         belegnr.rausgang = num$
         codems.rausgang = cums%
         codedok.rausgang = codedok.master
         zero.rausgang = 0
         codewa.rausgang = codewa%
         codewgru.rausgang = codewgru.warenart
         Warenart.rausgang = ware$
         Wgruppe.rausgang = wgruppe.wagruppe
         CALL QuickStore("rausgang")
         SELECT KEY cums% LOCK FILE "master" INDEX codems.master
         codere.master = codere%
         CALL QuickStore("master")
       END IF 
       
       SELECT FIRST FILE "rausgang" INDEX codems.rausgang
       SELECT KEY cums% LOCK FILE "rausgang" INDEX codems.rausgang
       codeku.rausgang = codeku.master
       nachname.rausgang = nachname.master
       zero.rausgang = 0
       vorname.rausgang = vorname.master
       plz.rausgang = plz.master
       ort.rausgang = ort.master
       stra·e.rausgang = stra·e.master
       LRENummer.rausgang = Nummer.master
       IF Skonto.master <> 0 THEN 
         GesBruttoSK.rausgang = gesBrutto.master - Skonto.master
         GesBruttoskEU.rausgang = gesBruttoEU.master - SkontoEU.master
       ELSE 
         GesBruttoSK.rausgang = 0
         GesBruttoskEU.rausgang = 0
       END IF 
       Datum.rausgang = Datum.master
       PreisBrutto.rausgang = PreisBrutto.master
       PreisNetto.rausgang = PreisNetto.master
       GesNetto.rausgang = GesNetto.master
       GesBrutto.rausgang = GesBrutto.master
       Soll.rausgang = GesBrutto.master
       PreisBruttoEU.rausgang = PreisBruttoEU.master
       PreisNettoEU.rausgang = PreisNettoEU.master
       GesNettoEU.rausgang = GesNettoEU.master
       GesBruttoEU.rausgang = GesBruttoEU.master
       Kundennummer.rausgang = Kundennummer.master
       KasseJN.rausgang = KasseJN$
       IF KasseJN$ = "J" THEN 
         Ktoauszugsnr.rausgang = "KASSE"
         erledigt.rausgang = "J"
         gezahltAM.rausgang = TODAY 
       END IF 
       IF art% = 7 THEN 
         GutschriftJN.rausgang = "J"
         gesGutschr.rausgang = gesBrutto.master
         gesGutschrEU.rausgang = gesBruttoEU.master
       ELSE 
         GutschriftJN.rausgang = "N"
       END IF 
       art.rausgang = art.master
       MwSt.rausgang = MwSt.master
       RabattProz.rausgang = RabattProz.master
       Rabatt.rausgang = Rabatt.master
       mwstdm.rausgang = GesBrutto.master - GesNetto.master
       Skonto.rausgang = skonto.master
       RabattEU.rausgang = RabattEU.master
       mwstEU.rausgang = GesBruttoEU.master - GesNettoEU.master
       SkontoEU.rausgang = skontoEU.master

       SkontoProz.rausgang = SkontoProz.master
       SkontoZiel.rausgang = SkontoZiel.master
       ZahlbarBis.rausgang = Zahldatum.master
       codema.rausgang = codema.master
       codewa.rausgang = codewa%
       warenart.rausgang = ware$
       codew.rausgang = codew.master
       umrechnung.rausgang = umrechnung.master
       waehrung.rausgang = waehrung.master
       codepr.rausgang = codepr.master
       projekt.rausgang = projekt.master
         codewa.rausgang = codewa%
         codewgru.rausgang = codewgru.warenart
         Warenart.rausgang = ware$
         Wgruppe.rausgang = wgruppe.wagruppe
       Mahnsperre.rausgang = Mahnsperre.master
       Mahnsperbisdat.rausgang = Mahnsperbisdat.master
       BuchnrRe.rausgang = Buchnrre.master
       buchnrre$ = Buchnrre.master
       oldReNr.rausgang = oldReNr.master
       Lieferdatum.rausgang = Lieferdatum.master
       REM 21022007
       CALL QuickStore("rausgang")
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT KEY cums% LOCK FILE "master" INDEX codems.master
       belegnr.master = belegnr.rausgang
       CALL QuickStore("master")
       IF KASSEJN$ LIKE "J" THEN 
         CALL KassTeilr(codere%,cums%,codeku.master,GutschriftJN.rausgang)
       END IF 
       FILE "master"
      REM -----Anfang------ Buchungswerte öbergabe an CASH ---------------------------
       REM 020198 
       IF cashpath$ <> "leer" AND EXISTS (cashpath$ + "export.asc") THEN 
         FILE "adressen"
         SELECT KEY CodeKU.master FILE "adressen" INDEX codeku.adressen
         IF NOT EOF ("adressen") THEN 
           IF debitorkto.adressen <> "" THEN 
             debitakt$ = LTRIM$ (Debitorkto.adressen)
           END IF 
         END IF 
         IF debitakt$ = "" THEN debitakt$ = Debitorkto$
         DATEBASE "0dmmyyyy"
         vdatum$ = DATE$ (datum.master)
         mwst$ = LTRIM$ ( STR$ (MwSt.master * 100,"9999"))
         IF art.master = 2 THEN 
           betrag$ = LTRIM$ ( STR$ (GesBrutto.master * 100,"999999999999"))
           betragEU$ = LTRIM$ ( STR$ (GesBruttoEU.master * 100,"999999999999"))
           buchtext$ = nummer.master + " gebucht!"
         ELSE 
           betrag$ = LTRIM$ ( STR$ (GesBrutto.master * - 100,"999999999999"))
           betragEU$ = LTRIM$ ( STR$ (GesBruttoEU.master * - 100,"999999999999"))
           buchtext$ = nummer.master + " gebucht!"
         END IF 
         REM hier einfÅgen, wenn der Buchungssatz mi Euro Åbergeben werden soll
         BSatz$ = CHR$ (34) + "R" + CHR$ (34) + "," + CHR$ (34) + LTRIM$ (vdatum$) + CHR$ (34) + "," + CHR$ (34) + buchtext$ + CHR$ (34) + "," + CHR$ (34) + LTRIM$ (nachname.master) + CHR$ (34) + "," + CHR$ (34) + Warenausgkto$ + CHR$ (34) + ","
         Bsatz$ = Bsatz$ + CHR$ (34) + Debitakt$ + CHR$ (34) + "," + CHR$ (34) + LTRIM$ ( STR$ (CodeMS.master,"999999")) + CHR$ (34) + "," + CHR$ (34) + betrag$ + CHR$ (34) + "," + CHR$ (34) + mwst$ + CHR$ (34)
         cashdatei$ = cashpath$ + "export.asc"
         IF buchungsaus$ = "n" THEN 
           REQUEST "Dieser Satz wurde schon einmal an die Stapelbuchungs","-datei Åbergeben! Erneute öbernahme?",130,req33%
           IF req33% = 1 THEN 
             IF EXISTS (cashdatei$) THEN 
               OPEN cashdatei$ FOR APPEND 
             ELSE 
               OPEN cashdatei$ FOR OUTPUT 
             END IF 
             ? BSatz$
             CLOSE OUTPUT 
             BSatz$ = ""
             REQUEST "Mîchten Sie die Buchungsdatei einsehen und ggf.","per Hand Ñndern?",130,req22%
             IF req22% = 1 THEN 
               CALL EditASCIIFile(cashdatei$)
             END IF 
           END IF 
         ELSE 
           IF EXISTS (cashdatei$) THEN 
             OPEN cashdatei$ FOR APPEND 
           ELSE 
             OUTPUT TO cashdatei$
           END IF 
           ? BSatz$
           CLOSE OUTPUT 
           BSatz$ = ""
           REQUEST "Mîchten Sie die Buchungsdatei einsehen und ggf.","per Hand Ñndern?",130,req22%
           IF req22% = 1 THEN 
             CALL EditASCIIFile(cashdatei$)
           END IF 
         END IF 
       END IF 
     REM ---------- ENDE --- BuchungswertÅbergabe CASH -----------------------------
     END IF 
   FILE "SCHEIN"
   END IF 
   REM ----- Ende -----  Sonderbehandlung Rechnungen/Gutschriften fÅr CASH
 
   REM ---------- Buchen der Einzel - Positionen in AbZugang  -----------------------
   IF opt2% = 1 OR DEFA$ = "MEGA" THEN 
     FILE "SCHEIN"
     INDEX CodeMS.SCHEIN
     SELECT FIRST FILE "SCHEIN" INDEX CodeMS.SCHEIN
     SELECT KEY cums% FILE "SCHEIN" INDEX CodeMS.SCHEIN
     WHILE CodeMS.SCHEIN = cums% AND NOT EOF ("SCHEIN")
       IF Art.SCHEIN = 0 THEN 
         FILE "abzugang"
         BLANK FILE "ABZUGANG"
         CodeAZ.ABZUGANG = SER ("ABZUGANG",1)
         codeaz% = codeaz.abzugang
         CodeAR.ABZUGANG = CodeAR.SCHEIN
         CodeMS.ABZUGANG = cums%
         Datum.ABZUGANG = TODAY 
         Anzahl.ABZUGANG = Anzahl.SCHEIN
         CodeKU.ABZUGANG = CodeKU.MASTER
         Art.ABZUGANG = Art.MASTER
         Waehrung.abzugang = Waehrung.master
         CodeW.abzugang = CodeW.master
         IF art.abzugang = 3 THEN buchungstext = "Lieferschein"
         IF art.abzugang = 7 THEN buchungstext = "Gutschrift"
         IF KalkArt.MASTER = 0 THEN 
           VKnetto.ABZUGANG = VKnetto.SCHEIN - rabatt.schein
           VKbrutto.ABZUGANG = VKnetto.SCHEIN + ((VKnetto.SCHEIN / 100) * MwSt.SCHEIN)
           VKnettoEU.ABZUGANG = VKnettoEU.SCHEIN - rabattEU.schein
           VKbruttoEU.ABZUGANG = VKnettoEU.SCHEIN + ((VKnettoEU.SCHEIN / 100) * MwSt.SCHEIN)
         ELSE 
           VKbrutto.ABZUGANG = VKbrutto.SCHEIN - rabatt.schein
           VKnetto.ABZUGANG = (VKBrutto.SCHEIN / (100 + MwSt.SCHEIN)) * 100
           VKbruttoEU.ABZUGANG = VKbruttoEU.SCHEIN - rabattEU.schein
           VKnettoEU.ABZUGANG = (VKBruttoEU.SCHEIN / (100 + MwSt.SCHEIN)) * 100
         END IF 
         Nummer.ABZUGANG = Nummer.MASTER
         MwSt.ABZUGANG = MwSt.SCHEIN
         IF opt1$ = "n" THEN 
           AnzGebucht.ABZUGANG = Anzahl.SCHEIN
         ELSE 
           AnzGebucht.ABZUGANG = 0
           Termin.ABZUGANG = DAYS (Termin$)
         END IF 
         Kontrolle.ABZUGANG = opt1$
         Buchungstext.ABZUGANG = Artikelnummer.SCHEIN + ", " + Bezeichnung.SCHEIN + Buchungstext$
         ArtAbgang.abzugang = 1:REM Abgang normal
         AnzGebucht.ABZUGANG = Anzahl.schein
         DatumGebucht.ABZUGANG = TODAY 
         Kontrolle.ABZUGANG = "n"
         Buchungstext.ABZUGANG = Buchungstext$
         Artikelnummer.abzugang = Artikelnummer.schein
         Bestandskonto.abzugang = Bestandskonto.schein
         Verbrauchskonto.abzugang = Verbrauchskonto.schein
         Bezeichnung.abzugang = Bezeichnung.schein
         SELECT KEY Codear.schein FILE "Artikel" INDEX Codear.artikel
         codeku% = Lieferant.artikel
         SELECT KEY codeku% FILE "Adressen" INDEX Codeku.adressen
         Lieferant.abzugang = Nachname.adressen
         Belegnummer.abzugang = Nummer.master
         Belegdatum.abzugang = TODAY 
         ME_.abzugang = ME_.artikel
         CALL QuickStore("ABZUGANG")
       END IF 
       SELECT NEXT FILE "SCHEIN" INDEX CodeMS.SCHEIN
     WEND 
   ELSE 
     REM ------- Buchen des Gesamtvorgang mit Gesamtpreisen, wenn keine Einzelpos gebucht werden sollen
     SELECT FIRST FILE "master" INDEX codems.master
     SELECT KEY cums% LOCK FILE "master" INDEX codems.master
     erledigtDatBis.master = DAYS (Termin$)
     STORE FILE "master"
     BLANK FILE "ABZUGANG"
     CodeAZ.ABZUGANG = SER ("ABZUGANG",1)
     CodeAR.ABZUGANG = 0
     CodeMS.ABZUGANG = cums%
     Datum.ABZUGANG = TODAY 
     Anzahl.ABZUGANG = 1
     CodeKU.ABZUGANG = CodeKU.MASTER
     Art.ABZUGANG = Art.MASTER
     art1% = Art.MASTER
     VKnetto.ABZUGANG = GesNetto.MASTER
     VKbrutto.ABZUGANG = GesBrutto.MASTER
     VKnettoEU.ABZUGANG = GesNettoEU.MASTER
     VKbruttoEU.ABZUGANG = GesBruttoEU.MASTER
     IF opt1$ = "n" THEN 
       AnzGebucht.ABZUGANG = Anzahl.SCHEIN
     ELSE 
       AnzGebucht.ABZUGANG = 0
       Termin.ABZUGANG = DAYS (Termin$)
     END IF 
     Kontrolle.ABZUGANG = opt1$
     Nummer.ABZUGANG = Nummer.MASTER
     IF KasseJN$ = "J" THEN 
       REM 170398
       DatumGebucht.ABZUGANG = TODAY 
       Kontrolle.ABZUGANG = "n"
     END IF 
     IF art.master = 7 THEN 
       Buchungstext.ABZUGANG = "**GUTSCHR**" + Nachname.master + " " + Buchungstext$
     ELSE 
       IF art.master = 8 THEN 
         Buchungstext.ABZUGANG = "**EXT.PREISANFRAGE**" + Nachname.master + " " + Buchungstext$
       ELSE 
         lenn% = LEN (Nachname.master + " " + Buchungstext$)
         REM CALL Fehler( STR$ (lenn%,"999999"),Nachname.master + " " + Buchungstext$)
         Buchungstext.ABZUGANG = Nachname.master + " " + Buchungstext$
       END IF 
     END IF 
     REM CALL Fehler(erledigt.master,gebustor.master)
     erledigt.abzugang = erledigt.master
     erledigtdatum.abzugang = erledigtdatum.master
     erledigtDatBis.abzugang = erledigtDatBis.master
     gebustor.abzugang = gebustor.master
     CALL QuickStore("ABZUGANG")
   END IF 
 
 REM ***************************************************************
 REM *            Eintragung in Akquisedatei                       *  
 REM ***************************************************************
   IF autom% <> 1 THEN 
     cfile$ = FILE 
     FILE GAkquiDat$
     SELECT KEY cums% FILE "master" INDEX codems.master
     REM CALL Fehler("TestRechTermin","")
     IF codeaq.master < 1 THEN 
       BLANK FILE GAkquiDat$
       codeaq% = SER (GAkquiDat$,1)
       codeaq.GAkquiDat$ = codeaq%
       SELECT KEY cums% LOCK FILE "master" INDEX codems.master
       codeaq.master = codeaq%
       CALL QuickStore("Master")
     ELSE 
       codeaq% = codeaq.master
       IF EXISTS (codeaq%,codeaq.GAkquiDat$) THEN 
         SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       ELSE 
         BLANK FILE GAkquiDat$
         codeaq% = SER (GAkquiDat$,1)
         codeaq.GAkquiDat$ = codeaq%
         SELECT KEY cums% LOCK FILE "master" INDEX codems.master
         codeaq.master = codeaq%
         CALL QuickStore("Master")
       END IF 
     END IF 
     CodeKU.GAkquiDat$ = CodeKU.ABZUGANG
     SELECT CASE art.master
       CASE 1
         CodeAK.GAkquiDat$ = 999991
       CASE 2
         CodeAK.GAkquiDat$ = 999992
       CASE 3
         CodeAK.GAkquiDat$ = 999993
       CASE 4
         CodeAK.GAkquiDat$ = 999994
       CASE 5
         CodeAK.GAkquiDat$ = 999995
       CASE 7
         CodeAK.GAkquiDat$ = 999997
       CASE 8
         CodeAK.GAkquiDat$ = 999990
     END CASE 
     CodeMA.GAkquiDat$ = vcodema%
     Wertung.GAkquiDat$ = 0
     Sprachnotiz.GAkquiDat$ = "n"
     Datum.GAkquiDat$ = TODAY 
     Termin.GAkquiDat$ = Termin.ABZUGANG
     erledigt_Termin.GAkquiDat$ = "n"
     erledigt_Vorg.GAkquiDat$ = "n"
     SELECT KEY CodeKU.ABZUGANG FILE "adressen" INDEX codeku.adressen
     nachname.GAkquiDat$ = nachname.adressen
     SELECT KEY codema.GAkquiDat$ FILE "supervis" INDEX codema.supervis
     Bearbeiter.GAkquiDat$ = nachname.supervis
     t$ = CHR$ (10) + CHR$ (13)
     W$ = Waehrung.abzugang
     SELECT CASE (Art.ABZUGANG)
       CASE 1
         IF notiz.GAkquiDat$ <> "" THEN 

 Notiz.GAkquiDat$ = Notiz.GAkquiDat$ + t$ + "ANGEBOT " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosum%,"99999999999.00")) + " " + W$ + "/" + LTRIM$ ( STR$ (bruttosumEu%,"99999999999.00")) + " EUR"
         ELSE 
 Notiz.GAkquiDat$ = "ANGEBOT " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " BRUTTOBETRAG: " + " " + W$ + "/" + LTRIM$ ( STR$ (bruttosum%,"99999999999.00")) + " " + W$ + "/" + LTRIM$ ( STR$ (bruttosumEu%,"99999999999.00")) + " EUR"
         END IF 
         notiz1a$ = Notiz.GAkquiDat$
         butxt$ = Buchungstext.ABZUGANG
       CASE 2
         IF notiz.GAkquiDat$ <> "" THEN 
     Notiz.akquise = Notiz.akquise + t$ + "RECHNUNG " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosum%,"99999999999.00")) + " " + W$ + "/" + LTRIM$ ( STR$ (bruttosumEu%,"99999999999.00")) + " EUR"
         ELSE 
          Notiz.akquise = "RECHNUNG " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosum%,"99999999999.00")) + " " + W$ + "/" + LTRIM$ ( STR$ (bruttosumEu%,"99999999999.00")) + " EUR"
         END IF 
       CASE 3
         IF notiz.akquise <> "" THEN 
         REM Notiz.akquise = Notiz.akquise + t$ + "LIEFERSCHEIN " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG
         Notiz.akquise = "LIEFERSCHEIN " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG
         ELSE 
         Notiz.akquise = "LIEFERSCHEIN " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG
         END IF 
       CASE 4
         IF notiz.akquise <> "" THEN 
         Notiz.akquise = Notiz.akquise + t$ + "AUFTRAG " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosum%,"99999999999.00")) + " " + W$ + "/" + LTRIM$ ( STR$ (bruttosumEu%,"99999999999.00")) + " EUR"
         ELSE 
         Notiz.akquise = "AUFTRAG " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosum%,"99999999999.00")) + " " + W$ + "/" + LTRIM$ ( STR$ (bruttosumEu%,"99999999999.00")) + " EUR"
         END IF 
       CASE 5
         IF notiz.akquise <> "" THEN 
 Notiz.akquise = Notiz.akquise + t$ + "BESTELLUNG " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " " + " " + LTRIM$ ( STR$ (bruttosum%,"99999999999.00")) + W$ + "/" + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosumEu%,"99999999999.00")) + " EUR"
         ELSE 
         Notiz.akquise = "BESTELLUNG " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosum%,"99999999999.00")) + " " + W$ + "/" + LTRIM$ ( STR$ (bruttosumEu%,"99999999999.00")) + " EUR"
         END IF 
       CASE 7
         IF notiz.akquise <> "" THEN 
   Notiz.akquise = Notiz.akquise + t$ + "GUTSCHRIFT " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosum%,"99999999999.00")) + " " + W$ + "/" + LTRIM$ ( STR$ (bruttosumEu%,"99999999999.00")) + " EUR"
         ELSE 
         Notiz.akquise = "GUTSCHRIFT " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosum%,"99999999999.00")) + " " + W$ + "/" + LTRIM$ ( STR$ (bruttosumEu%,"99999999999.00")) + " EUR"
         END IF 
       CASE 8
         IF notiz.akquise <> "" THEN 
 Notiz.akquise = Notiz.akquise + t$ + "EXT.PREISANFRAGE " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG
 REM + " " + " " + LTRIM$ ( STR$ (bruttosum%,"99999999999.00")) + W$ + "/" + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosumEu%,"99999999999.00")) + " EUR"
         ELSE 
         Notiz.akquise = "EXT.PREISANFRAGE " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG
         REM + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosum%,"99999999999.00")) + " " + W$ + "/" + LTRIM$ ( STR$ (bruttosumEu%,"99999999999.00")) + " EUR"
         END IF 
     END SELECT 
     IF ProjectJN$ = "TRUE" THEN 
       Projekt.akquise = Projekt.master
       Codepr.akquise = Codepr.master
       codems.akquise = Codems.master
     END IF 
     CALL QuickStore(GAkquiDat$)
     FILE cfile$
   END IF 
 REM ***************************************************************
 
 
   REM  -- BestandsfÅhrung --
 
   
   SET STATUS "Bitte warten: Bestandsrechnung..."
   CALL DFile(3,"KOMBI" + _fpw$)
   CALL DFile(3,"ARTIKEL" + _fpw$)
   CALL DFile(3,"VERTRETE" + _fpw$)
   CALL DFile(3,"ARTPROV" + _fpw$)
   FILE "master"
   INDEX CodeMS.master
   SELECT FIRST 
   SELECT KEY cums% FILE "master" INDEX Codems.master
   art% = art.master
   IF opt3$ = "j" AND art% <> 4 AND art% <> 8 THEN 
     FILE "SCHEIN"
     INDEX CodeMS.SCHEIN
     SELECT FIRST FILE "SCHEIN" INDEX CodeMS.SCHEIN
     SELECT KEY cums% FILE "SCHEIN" INDEX CodeMS.SCHEIN
     WHILE CodeMS.SCHEIN = cums% AND NOT EOF ("SCHEIN")
       IF Art.SCHEIN = 0 THEN 
         FILE "KOMBI"
         INDEX CodeKO.KOMBI
         SELECT FIRST 
         SELECT KEY CodeAR.SCHEIN FILE "KOMBI" INDEX CodeKO.KOMBI
         IF FOUND ("KOMBI") THEN 
           WHILE CodeKO.KOMBI = CodeAR.SCHEIN AND NOT EOF ("KOMBI")
             SELECT KEY CodeAR.KOMBI LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
             IF FOUND ("ARTIKEL") AND BestandsfÅhrung.ARTIKEL LIKE "j" THEN 
               letzterAbgang.ARTIKEL = TODAY 
               IF art% <> 7 THEN 
                 Bestand.ARTIKEL = Bestand.ARTIKEL - (Anzahl.KOMBI * Anzahl.SCHEIN)
               ELSE 
                 Bestand.ARTIKEL = Bestand.ARTIKEL + (Anzahl.KOMBI * Anzahl.SCHEIN)
               END IF 
               CALL QuickStore("ARTIKEL")
             END IF 
             SELECT NEXT LOCK FILE "KOMBI" INDEX CodeKO.KOMBI
           WEND 
         ELSE 
 
      REM     ----------- BestandsfÅhrung ----------------------
           REM bei autom%<>0 wird die Bestandsschreibung wÑhrend der Auswertung von liefruck
           REM  vorgenonmmen, von dort aus wird MSBuchung mit autom%=1 aufgerufen
           SELECT KEY CodeAR.SCHEIN LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
           IF FOUND ("ARTIKEL") AND BestandsfÅhrung.ARTIKEL LIKE "j" THEN 
             letzterAbgang.ARTIKEL = TODAY 
             IF art% <> 7 THEN 
               IF autom% = 0 THEN Bestand.ARTIKEL = Bestand.ARTIKEL - Anzahl.SCHEIN
             ELSE 
               IF autom% = 0 THEN Bestand.ARTIKEL = Bestand.ARTIKEL + Anzahl.SCHEIN
             END IF 
             CALL QuickStore("ARTIKEL")
            
      REM     ----------- FÅhrung LIEFRUCK - LieferrÅckstÑnde ----------------------
             SELECT KEY CodeAR.SCHEIN FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
             lieferant% = Lieferant.artikel
             beschr$ = Beschreibung.artikel
             SELECT KEY CodeGR.SCHEIN FILE "Gruppen" INDEX CodeGR.Gruppen
             PGruppe$ = Kurzbezeichnung.gruppen
             SELECT KEY lieferant% FILE "Adressen" INDEX CodeKU.adressen
             liefname$ = Nachname.adressen
             SELECT KEY codeku1% FILE "Adressen" INDEX CodeKU.adressen
             kunde$ = Nachname.adressen
             SELECT KEY cums% FILE "master" INDEX codems.master
             nummer$ = nummer.master
             datu% = datum.master
             REM FILE "liefruck"
             IF RÅckstMenge.schein > 0 THEN 
               BLANK FILE "liefruck"
               CodeLR.liefruck = SER ("liefruck",1)
               CodeAr.liefruck = CodeAR.artikel
               CodeSch.liefruck = Codesch.schein
               Codems.liefruck = cums%
               CodeKU.liefruck = Codeku1%
               Kundenname.liefruck = kunde$
               Rdatum.liefruck = Rdatum%
               RMenge.liefruck = RÅckstMenge.schein
               CodeGR.liefruck = CodeGr.schein
               ME_.liefruck = ME_.schein
               Artikelnummer.liefruck = Artikelnummer.schein
               Bezeichnung.liefruck = Bezeichnung.schein
               Beschreibung.liefruck = Beschr$
               RabattProz.liefruck = Rabattproz.schein
               VKNetto.liefruck = VKNetto.schein
               VKBrutto.liefruck = VKBrutto.schein
               Rabatt.liefruck = Rabatt.schein
               GesamtBrutto.liefruck = GesamtBrutto.schein
               GesamtNetto.liefruck = GesamtNetto.schein
               EK.liefruck = EK.schein
               codew.liefruck = codew.schein
               umrechnung.liefruck = umrechnung.schein
               waehrung.liefruck = waehrung.schein
               VKNettoEU.liefruck = VKNettoEU.schein
               VKBruttoEU.liefruck = VKBruttoEU.schein
               RabattEU.liefruck = RabattEU.schein
               GesBruttoEU.liefruck = GesBruttoEU.schein
               GesNettoEU.liefruck = GesNettoEU.schein
               EKEU.liefruck = EKEU.schein
               MwSt.liefruck = MwSt.schein
               Liefereinheit.liefruck = Liefereinheit.schein
               Produktgruppe.liefruck = PGruppe$
               Bezugsmenge.liefruck = Bezugsmenge.schein
               Lieferant.liefruck = Lieferant%
               Liefname.liefruck = liefname$
               nummer.liefruck = nummer$
               CALL QuickStore("liefruck")
             END IF 
           END IF 
         END IF 
       END IF 
       SELECT NEXT FILE "SCHEIN" INDEX CodeMS.SCHEIN
     WEND 
     REM sonderbehandlung Priebe
     FILE "LBELEGE"
     BLANK 
     codelb.LBELEGE = SER ("LBELEGE",1)
     codeku.LBELEGE = Codeku1%
     Kundenname.lbelege = kunde$
     codems.lbelege = cums%
     Lieferant.lbelege = Lieferant%
     Liefname.lbelege = liefname$
     Nummer.lbelege = nummer$
     datum.lbelege = datu%
     codew.lbelege = codew.master
     umrechnung.lbelege = umrechnung.master
     waehrung.lbelege = waehrung.master
     VKNetto.lbelege = Gesnetto.master
     VKBrutto.lbelege = GesBrutto.master
     VKNettoeu.lbelege = Gesnettoeu.master
     VKBruttoEU.lbelege = GesBruttoEU.master
     CALL QuickStore("lbelege")
     REM ende der sonderbehandlung
   END IF 
 
 END IF 
 SET STATUS ""
 FORM 
 MOUSE ON 
 END SUB 
 
 
 ' MASTER EK berechnen
 ' =======================================================================
 
SUB MSEK()
 cums% = codems.master
 CALL MSRechnen()
 IF NEW ("master") OR MOD ("master") THEN CALL QuickStore("master")
 SELECT FORM KEY cums% FILE "master" INDEX codems.master
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 CALL MSCHRabattProz()
 CALL MSCHRabatt()
 UNLOCK CURRENT FILE "master"
 FILE "master"
 SELECT FORM KEY cums% FILE "master" INDEX codems.master
 SELECT KEY cums% FILE "master" INDEX codems.master
 Gewinn$ = STR$ (GesNetto.MASTER - EKnetto.Master,",9999999.00")
 Spanne$ = STR$ (100 - ((100 / GesNetto.Master) * EKNetto.Master),",99999.00")

 GewinnEU$ = STR$ (GesNettoEU.MASTER - EKnettoEU.Master,",9999999.00")
 SpanneEU$ = STR$ (100 - ((100 / GesNettoEU.Master) * EKNettoEU.Master),",99999.00")
 IF art.master = 7 THEN 
   CREATE DIALOG "EK",0,0,116,61,title$,"MS Sans Serif",8
    ADD DIALOG "EK",5,5,4,55,12,0,"Gutschrift netto:"
    IF UCASE$ ( FORM ) = "SCHEIN" OR UCASE$ ( FORM ) = "MASTER" OR UCASE$ ( FORM ) = "MASTPRJ" THEN ADD DIALOG "EK",5,65,4,47,12,2,GesNetto.MASTER
    IF UCASE$ ( FORM ) = "SCHEINE" OR UCASE$ ( FORM ) = "MASTERE" OR UCASE$ ( FORM ) = "MASTPRJE" THEN ADD DIALOG "EK",5,65,4,47,12,2,GesNettoEU.MASTER
    ADD DIALOG "EK",5,5,14,56,12,0,"Gutschrift brutto:"
    ADD DIALOG "EK",5,5,14,56,12,0,"Gutschrift brutto:"
    IF UCASE$ ( FORM ) = "SCHEIN" OR UCASE$ ( FORM ) = "MASTER" OR UCASE$ ( FORM ) = "MASTPRJ" THEN ADD DIALOG "EK",5,65,14,47,12,2,GesBrutto.MASTER
    IF UCASE$ ( FORM ) = "SCHEINE" OR UCASE$ ( FORM ) = "MASTERE" OR UCASE$ ( FORM ) = "MASTPRJE" THEN ADD DIALOG "EK",5,65,14,47,12,2,GesBruttoEU.MASTER
    ADD DIALOG "EK",1,29,35,56,16,0,"&Weiter",0,0
   DIALOG "EK",req%
   REMOVE DIALOG "EK"
 ELSE 
   CREATE DIALOG "EK",0,0,115,90,title$,"MS Sans Serif",8
   ADD DIALOG "EK",5,5,4,46,12,0,"VK netto:"
   ADD DIALOG "EK",5,5,14,47,12,0,"VK brutto:"
   ADD DIALOG "EK",5,5,24,32,12,0,"EK netto:"
   ADD DIALOG "EK",5,5,34,48,12,0,"Handelspanne:"
   ADD DIALOG "EK",5,5,44,46,12,0,"Nettogewinn:"
   IF UCASE$ ( FORM ) = "SCHEIN" OR UCASE$ ( FORM ) = "MASTER" OR UCASE$ ( FORM ) = "MASTPRJ" THEN 
     ADD DIALOG "EK",5,61,4,47,12,2,GesNetto.MASTER
     ADD DIALOG "EK",5,61,14,47,12,2,GesBrutto.MASTER
     ADD DIALOG "EK",5,61,24,47,12,2,EKnetto.Master
     ADD DIALOG "EK",5,61,34,47,12,2,Spanne$
     ADD DIALOG "EK",5,61,44,47,12,2,gewinn$
   ELSE 
     IF UCASE$ ( FORM ) = "SCHEINE" OR UCASE$ ( FORM ) = "MASTERE" OR UCASE$ ( FORM ) = "MASTPRJE" THEN 
       ADD DIALOG "EK",5,61,4,47,12,2,GesNettoEU.MASTER
       ADD DIALOG "EK",5,61,14,47,12,2,GesBruttoEU.MASTER
       ADD DIALOG "EK",5,61,24,47,12,2,EKnettoEU.Master
       ADD DIALOG "EK",5,61,34,47,12,2,SpanneEU$
       ADD DIALOG "EK",5,61,44,47,12,2,gewinnEU$
     END IF 
   END IF 
   ADD DIALOG "EK",1,31,64,56,16,0,"&Weiter",0,0
   DIALOG "EK",req%
   REMOVE DIALOG "EK"
 END IF 
 END SUB 
 
 
 ' MASTER Test auf multiple WÑhrungen
 ' MSwaehrart%=0   1 Waehrung
 ' MSwaehrart%>0   mehrere Waehrungen
 ' =======================================================================
SUB WaehrTest()
 MSwaehrart% = 0
 codems1% = cums%
 FILE "schein"
 INDEX codems.schein
 SELECT FIRST FILE "schein" INDEX codems.schein
 SELECT KEY codems1% FILE "schein" INDEX codems.schein
 zw% = codew.master
 WHILE NOT EOF ("schein") AND codems.schein = codems1%
   IF zw% <> codew.schein THEN MSwaehrart% = 1
 SELECT NEXT 
 WEND 
 END SUB 


 ' MASTER MenÅaufruf der Druckfunktion
 ' ======================================================================= 
SUB MSDrucken(codems%)
 DIM freevorl$( RECCOUNT ("Freevorl") + 1)
 MOUSE OFF 
 CALL DFile(3,"UMSATZ" + _fpw$)
 CALL DFile(3,"master" + _fpw$)
 CALL DFile(3,"mahnung" + _fpw$)
 CALL DFile(3,"schein" + _fpw$)
 CALL DFile(3,"serienr" + _fpw$)
 CALL DFile(3,"provisio" + _fpw$)
 CALL DFile(3,"vertrete" + _fpw$)
 CALL DFile(3,"abzugang" + _fpw$)

 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 dokneu% = 0
 FILE "master"
 cums% = codems%
 REM codems% = cums%
 codems1% = cums%
 codeku% = Codeku.master
 knr% = Codeku.Master
 art% = Art.master
 codedok% = Codedok.master
 cudoc% = codedok%

 IF UCASE$ ( FORM ) LIKE "MAHN*" THEN 
   art% = 6
   IF PAGE = 1 THEN codedok% = codedok1.mahnung
   IF PAGE = 2 THEN codedok% = codedok2.mahnung
   IF PAGE = 3 THEN codedok% = codedok3.mahnung
   IF PAGE = 4 THEN codedok% = codedok4.mahnung
   IF PAGE = 5 THEN codedok% = codedok5.mahnung
   cudoc% = codedok%
 END IF 
 IF NEW ("master") OR MOD ("master") THEN CALL QuickStore("master")
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 IF art% <> 6 THEN CALL MSCHRabattProz()
 IF art% <> 6 THEN CALL MSCHRabatt()
 FILE "master"
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 REM FÅhrung der Umsatzdatei und Provisionsdatei
 IF art% <> 6 THEN CALL UmsFuelEinzel(Codems%,0)
 REM 160596 FÅhrung der Seriennummerndatei
 
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 IF eurosupport$ = "TRUE" AND art% <> 6 THEN CALL WaehrTest()
 IF NOT EXISTS (cums%,codems.abzugang) AND art% <> 6 THEN 
   REM IF art.master = 7 OR (art.master = 2 AND Bestrechnung$ = "RECHNUNG") OR (art.master = 3 AND Bestrechnung$ = "LIEFER") THEN 
   REQUEST "Kann der Beleg gebucht werden?","",130,req%
   IF req% = 1 THEN 
     codeku% = codeku.master
     CALL MSBuchung(codems.master,0)
     CALL UmsFuel1einz(codeku%)
   END IF 
   REM end if
 END IF 
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 dokname$ = Nummer.master + "/" + nachname.master
 REM CALL Fehler("DoktestMahn000","Dok neu erstellt")
 IF art% = 6 THEN 
   IF PAGE = 1 THEN dokname$ = "1.Mahnung " + Nummer.mahnung + "/" + nachname.mahnung
   IF PAGE = 2 THEN dokname$ = "2.Mahnung " + Nummer.mahnung + "/" + nachname.mahnung
   IF PAGE = 3 THEN dokname$ = "3.Mahnung " + Nummer.mahnung + "/" + nachname.mahnung
   IF PAGE = 4 THEN dokname$ = "4.Mahnung " + Nummer.mahnung + "/" + nachname.mahnung
   IF PAGE = 5 THEN dokname$ = "5.Mahnung " + Nummer.mahnung + "/" + nachname.mahnung
 END IF 
 MOUSE ON 
 opt% = 2
 IF MSwaehrart% <> 0 THEN opt% = 4
 IF eurosupport$ = "FALSE" THEN 
   CREATE DIALOG "DRUCKART",0,0,238,89,"Ausgabeart und Ausgabeziel","MS Sans Serif",8
   ADD DIALOG "DRUCKART",9,6,1,20,21,2
   ADD DIALOG "DRUCKART",9,6,1,20,21,2
   ADD DIALOG "DRUCKART",4,26,1,209,67,0,"Ausgabeart"
   ADD DIALOG "DRUCKART",3,32,16,198,10,0,"Ausgabe Åber MS Word (deutsch) auf den Bildschirm",2,opt%
   IF w97$ <> "TRUE" THEN 
     ADD DIALOG "DRUCKART",3,32,27,198,10,0,"Ausgabe Åber MS Word (deutsch) auf den Drucker ",3,opt%
   END IF 
   IF art% <> 6 THEN ADD DIALOG "DRUCKART",3,32,38,197,10,0,"Ausgabe Åber Reportgenerator auf den Bildschirm",1,opt%
   IF art% <> 6 THEN ADD DIALOG "DRUCKART",3,32,49,197,10,0,"Ausgabe Åber Reportgenerator auf den Drucker",0,opt%
   ADD DIALOG "DRUCKART",1,66,72,54,14,1,"&OK",1,1
   ADD DIALOG "DRUCKART",1,122,72,54,14,0,"&Abbrechen",0,0
   DIALOG "DRUCKART",req%
 ELSE 
   CREATE DIALOG "DRUCKART",0,0,238,140,"Ausgabeart und Ausgabeziel","MS Sans Serif",8
   ADD DIALOG "DRUCKART",9,6,1,20,21,2
   ADD DIALOG "DRUCKART",9,6,1,20,21,2
   ADD DIALOG "DRUCKART",4,26,1,209,118,0,"Ausgabeart"
   REM IF MSwaehrart% = 0 THEN ADD DIALOG "DRUCKART",3,32,16,198,10,0,"Ausgabe Åber MS Word (deutsch) nur WÑhrung",2,opt%
   IF mastform$ = "EUR" THEN 
     opt% = 4
     ADD DIALOG "DRUCKART",3,32,27,198,10,0,"Ausgabe Åber MS Word (deutsch) in Euro ",4,opt%
   ELSE 
     ADD DIALOG "DRUCKART",3,32,16,198,10,0,"Ausgabe Åber MS Word (deutsch) nur WÑhrung",2,opt%
     ADD DIALOG "DRUCKART",3,32,27,198,10,0,"Ausgabe Åber MS Word (deutsch) nur Euro ",4,opt%
   END IF 
   
   REM IF MSwaehrart% = 0 THEN ADD DIALOG "DRUCKART",3,32,38,198,10,0,"Ausgabe Åber MS Word (deutsch) WÑhrung und Euro",5,opt%
   IF mastform$ = "EUR" THEN 
     IF art% <> 6 THEN ADD DIALOG "DRUCKART",3,32,71,197,10,0,"Ausgabe in Euro Åber Reportgenerator auf den Bildschirm",7,opt%
     IF art% <> 6 THEN ADD DIALOG "DRUCKART",3,32,82,197,10,0,"Ausgabe in Euro Åber Reportgenerator auf den Drucker",8,opt%
   ELSE 
     IF art% <> 6 THEN ADD DIALOG "DRUCKART",3,32,49,197,10,0,"Ausgabe Åber Reportgenerator auf den Bildschirm",1,opt%
     IF art% <> 6 THEN ADD DIALOG "DRUCKART",3,32,60,197,10,0,"Ausgabe Åber Reportgenerator auf den Drucker",0,opt%
     IF art% <> 6 THEN ADD DIALOG "DRUCKART",3,32,71,197,10,0,"Ausgabe in Euro Åber Reportgenerator auf den Bildschirm",7,opt%
     IF art% <> 6 THEN ADD DIALOG "DRUCKART",3,32,82,197,10,0,"Ausgabe in Euro Åber Reportgenerator auf den Drucker",8,opt%
   END IF 
   ADD DIALOG "DRUCKART",1,66,123,54,14,1,"&OK",1,1
   ADD DIALOG "DRUCKART",1,122,123,54,14,0,"&Abbrechen",0,0
   DIALOG "DRUCKART",req%

 END IF 
 REMOVE DIALOG "DRUCKART"
 MOUSE OFF 
 IF (opt% < 2 OR opt% > 6) AND req% = 1 THEN 
   CALL MSDR(CodeMS.MASTER,opt%)
 END IF 
 IF opt% > 1 AND opt% < 7 AND req% = 1 THEN 
   REM *** Aufbereitung der Dokumentenvorlage, in die gedruckt werden soll
   REM *** Voraussetzung ist, das die Aktionen Angebote, Rechnungen,...
   REM *** existieren, sonst Zuweisung allgemeine Termine, allgemeine Schreiben
   FILE "dokument"
   INDEX Codedok.dokument
   SELECT FIRST 
   IF codedok% > 0 AND NOT EXISTS (codedok%,codedok.dokument) THEN 
     codedok% = 0
   END IF 
   IF codedok% > 0 THEN 
     dokneu% = 1
     SELECT KEY codedok% LOCK FILE "Dokument" INDEX codedok.dokument
   ELSE 
     REM *** neues Dokument erstellen
     IF _WPSuffix$ LIKE "leer" THEN 
       CALL Fehler("Keine Textverarbeitung ausgewÑhlt!","Bitte starten Sie Åber den Hauptbildschirm die Funktion 'Einstellungen' und wÑhlen Sie dort eine Textverarbeitung aus.")
       DOKNeu% = - 1
     ELSE 
       MOUSE OFF 
       SET STATUS "Dokument wird vorbereitet..."
       SELECT CASE Art%
       CASE 1
         aktion1$ = "Angebot*"
         aktion2$ = "*Angebot*"
       CASE 2
         aktion1$ = "Rechnung*"
         aktion2$ = "*Rechnung*"
       CASE 3
         aktion1$ = "Liefersch*"
         aktion2$ = "*Liefersch*"
       CASE 4
         aktion1$ = "Auftr*"
         aktion2$ = "*Auftr*"
       CASE 5
         aktion1$ = "Bestell*"
         aktion2$ = "*Bestell*"
       CASE 6
         aktion1$ = "Mahnung*"
         aktion2$ = "*Mahnung*"
       CASE 7
         aktion1$ = "Gutschr*"
         aktion2$ = "*Gutschr*"
         globalGutsch$ = "TRUE"
       CASE 8
         aktion1$ = "ext.Preisanfrage*"
         aktion2$ = "*ext.Preisanfrage*"
 
       END SELECT 
       FILE "Aktionen"
       INDEX Bezeichnung.aktionen
       SELECT FIRST 
       ok% = - 1
       WHILE NOT EOF ("aktionen") AND ok% = - 1
         IF bezeichnung.aktionen LIKE aktion1$ OR bezeichnung.aktionen LIKE aktion2$ THEN 
           codeak% = codeak.aktionen
           ok% = 0
         END IF 
       SELECT NEXT INDEX bezeichnung.aktionen
       WEND 
       IF ok% = - 1 THEN codeak% = 1
       a% = 0
       ok% = - 1
       WHILE DOKGruppen$(a%) <> "" AND ok% = - 1
         a% = a% + 1
         IF DOKGruppen$(a%) LIKE aktion1$ OR DOKGruppen$(a%) LIKE aktion1$ THEN 
            gruppe$ = DOKGruppen$(a%)
            ok% = 0
         END IF 
       WEND 
       IF ok% = - 1 THEN gruppe$ = DOKGruppen$(0):REM allgemeine Schreiben  
       
       IF vorlage% = 0 THEN 
         IF wxp$ LIKE "TRUE" THEN 
           _vorlage$ = ReadConfig$("VORLAGENWordXP",Gruppe$)
           IF _vorlage$ <> "leer" THEN 
             REM textvorlage$ = ReadConfig$("DOKUMENTE", FN ansi(Gruppe$)) + _vorlage$
             textvorlage$ = ReadConfig$("DOKUMENTE", FN ansi(Gruppe$))
             IF LEFT$ (textvorlage$,1) = "#" THEN 
               tt1$ = MID$ (textvorlage$,2)
               textvorlage$ = UCASE$ (tt1$)
             ELSE 
               pfad$ = MID$ ( UCASE$ (_netpath$),3)
               l1% = 0
               l1% = LEN (pfad$)
               pos% = 0
               pos% = INSTR (textvorlage$,pfad$)
               IF pos% > 0 THEN 
                 dateiname1$ = MID$ (textvorlage$,pos% + l1%)
                 textvorlage$ = dateiname1$
                 IF RIGHT$ (textvorlage$,1) <> "\" THEN textvorlage$ = textvorlage$ + "\"
                 IF LEFT$ (textvorlage$,1) = "\" THEN textvorlage$ = MID$ (textvorlage$,2)
                 CALL WriteConfig("DOKUMENTE", FN ansi(Gruppe$),"#" + textvorlage$)
               ELSE 
                 t1% = INSTR (4,textvorlage$,"\")
                 zw1$ = MID$ (textvorlage$,t1%)
                 textvorlage$ = zw1$
                 IF RIGHT$ (textvorlage$,1) <> "\" THEN textvorlage$ = textvorlage$ + "\"
                 IF LEFT$ (textvorlage$,1) = "\" THEN textvorlage$ = MID$ (textvorlage$,2)
                 CALL WriteConfig("DOKUMENTE", FN ansi(Gruppe$),"#" + textvorlage$)
               END IF 
             END IF 
             IF RIGHT$ (textvorlage$,1) <> "\" THEN textvorlage$ = textvorlage$ + "\"
             IF LEFT$ (textvorlage$,1) = "\" THEN textvorlage$ = MID$ (textvorlage$,2)
             textvorlage$ = _netpath$ + textvorlage$ + _vorlage$
           ELSE 
             textvorlage$ = _netpath$ + "OFFICE\TEXT\0XP.doc"
           END IF 
         ELSE 
           IF w97$ <> "TRUE" THEN _vorlage$ = ReadConfig$("VORLAGEN",Gruppe$)
           IF w97$ = "TRUE" THEN _vorlage$ = ReadConfig$("VORLAGENWord97",Gruppe$)
           IF _vorlage$ <> "leer" THEN 
             REM textvorlage$ = ReadConfig$("DOKUMENTE", FN ansi(Gruppe$)) + _vorlage$
             textvorlage$ = ReadConfig$("DOKUMENTE", FN ansi(Gruppe$))
             IF LEFT$ (textvorlage$,1) = "#" THEN 
               tt1$ = MID$ (textvorlage$,2)
               textvorlage$ = UCASE$ (tt1$)
             ELSE 
               pfad$ = MID$ ( UCASE$ (_netpath$),3)
               l1% = 0
               l1% = LEN (pfad$)
               pos% = 0
               pos% = INSTR (textvorlage$,pfad$)
               IF pos% > 0 THEN 
                 dateiname1$ = MID$ (textvorlage$,pos% + l1%)
                 textvorlage$ = dateiname1$
                 IF RIGHT$ (textvorlage$,1) <> "\" THEN textvorlage$ = textvorlage$ + "\"
                 IF LEFT$ (textvorlage$,1) = "\" THEN textvorlage$ = MID$ (textvorlage$,2)
                 CALL WriteConfig("DOKUMENTE", FN ansi(Gruppe$),"#" + textvorlage$)
               ELSE 
                 t1% = INSTR (4,textvorlage$,"\")
                 zw1$ = MID$ (textvorlage$,t1%)
                 textvorlage$ = zw1$
                 IF RIGHT$ (textvorlage$,1) <> "\" THEN textvorlage$ = textvorlage$ + "\"
                 IF LEFT$ (textvorlage$,1) = "\" THEN textvorlage$ = MID$ (textvorlage$,2)
                 CALL WriteConfig("DOKUMENTE", FN ansi(Gruppe$),"#" + textvorlage$)
               END IF 
             END IF 
             IF RIGHT$ (textvorlage$,1) <> "\" THEN textvorlage$ = textvorlage$ + "\"
             IF LEFT$ (textvorlage$,1) = "\" THEN textvorlage$ = MID$ (textvorlage$,2)
             textvorlage$ = _netpath$ + textvorlage$ + _vorlage$
           ELSE 
             IF w97$ <> "TRUE" THEN 
               textvorlage$ = _netpath$ + "OFFICE\TEXT\0." + _WPSuffix$
             ELSE 
               textvorlage$ = _netpath$ + "OFFICE\TEXT\0w97.doc"
             END IF 
           END IF 
         END IF 
       ELSE 
         SELECT KEY vorlage% FILE "dokument" INDEX CodeDOK.dokument
         REM textvorlage$ = LEFT$ (_netdirectory$,2) + Dateiname.DOKUMENT
         textvorlage$ = _netpath$ + Dateiname.DOKUMENT
       END IF 
       REM docpath$ = LEFT$ (_netpath$,2) + ReadConfig$("DOKUMENTE", FN ansi(Gruppe$))
       docpath$ = GetDocPath$(Gruppe$)
       IF RIGHT$ (docpath$,1) <> "\" THEN docpath$ = docpath$ + "\"
       FILE "dokument"
       gvisible% = 0
       BLANK FILE "dokument"
       CodeDOK.dokument = SER ("dokument",1)
       codeErs.dokument = GMACodema%
       Creator.dokument = GMAName$
       dokument.dokument = dokname$
       erstellt_am.dokument = TODAY 
       letzte_Bearbeit.dokument = TODAY 
       CodeMA.dokument = _vcodema%
       CodeKU.dokument = knr%
       SELECT KEY codema.dokument FILE "supervis" INDEX codema.supervis
       Bearbeiter.dokument = nachname.supervis
       docpath$ = GetDocPath$(Gruppe$)
       textdatei$ = docpath$ + LTRIM$ ( STR$ (CodeDOK.dokument,"999999")) + "." + RIGHT$ (textvorlage$,3)
       Dateiname.dokument = textdatei$
       Gruppe.dokument = Gruppe$
       link.dokument = codeku%
       codepr.dokument = codepr.master
       Projekt.dokument = Projekt.master
       CALL QuickStore("DOKUMENT")
       cudoc% = CodeDOK.dokument
       codedok% = cudoc%
       IF EXISTS (textvorlage$) THEN 
         FILE "schein"
         IF NOT EXISTS (cums%,Codems.schein) AND art% <> 6 THEN 
           CALL Fehler ("Export nach MSWord nicht mîglich, da noch keine Positionen erfa·t wurden!","Erfassen Sie bitte mindestens eine Position!")
           dokneu% = - 1
           FILE "master"
         ELSE 
           IF art% <> 6 THEN 
             FILE "master"
             SELECT KEY cums% LOCK FILE "master" INDEX codems.master
             codedok.master = codedok%
             
             CALL QuickStore("master")
             SELECT KEY cums% LOCK FILE "master" INDEX codems.master
           END IF 
           IF art% = 6 THEN 
             FILE "mahnung"
             SELECT KEY cums% LOCK FILE "mahnung" INDEX codems.mahnung
             IF PAGE = 1 THEN codedok1.mahnung = codedok%
             IF PAGE = 2 THEN codedok2.mahnung = codedok%
             IF PAGE = 3 THEN codedok3.mahnung = codedok%
             IF PAGE = 4 THEN codedok4.mahnung = codedok%
             IF PAGE = 5 THEN codedok5.mahnung = codedok%
             CALL QuickStore("mahnung")
             SELECT KEY cums% LOCK FILE "mahnung" INDEX codems.mahnung
           END IF 
           FILE "dokument"
           COPY textvorlage$,_netpath$ + textdatei$
           DOKNeu% = CodeDOK.dokument
           REQUEST "Mîchten Sie hierzu einen Termin erfassen?","",130,req122%
           IF req122% > 0 THEN 
             REM Eintrag eines Termins, in der entsprechneden Aktion
             CALL ADRDokRegister1(CodeDOK.dokument,codeak%)
             REM 290498
             SELECT KEY cums% LOCK FILE "master" INDEX codems.master
             IF art% <> 6 THEN 
               IF codeaq.master < 1 THEN codeaq.master = cuaq%
               CALL QuickStore("master")
             END IF 
           END IF 
           REM *****************************************
         cspeed% = 1000
         IF (wxp$ LIKE "true") OR (w97$ LIKE "true") THEN 
           
           Grechtslinks$ = linksrechts.stamm
           DIM dlg1 AS Dialog
           DIM control AS DialogControl 
           REM DIM freevorl$( RECCOUNT ("Freevorl") + 1,1)
           Vorlagenart$ = "S"
w160920091:           
           Superbase.Dialogs.Add("Dialogname")
           SET dlg1 = Superbase.Dialogs.Dialogname
           dlg1.Move(0,0,150,123)
           dlg1.Caption = "Art der Druckausgabe"
           dlg1.FontName = "MS Sans Serif"
           dlg1.FontSize = 8
 
           SET control = dlg1.Add("DialogFrame1","DialogFrame")
           control.Move(2,8,145,40)
           control.Caption = " Belegnummer und Datum "
 
           SET control = dlg1.Add("DialogOptionButton1","DialogOptionButton")
           control.Move(6,20,114,10)
           control.Caption = "linksbÅndig"
           control.Bind("Grechtslinks$")
           control.ValueOn = "L"
 
           SET control = dlg1.Add("DialogOptionButton2","DialogOptionButton")
           control.Move(6,32,114,9)
           control.Caption = "rechtsbÅndig"
           control.Bind("Grechtslinks$")
           control.ValueOn = ""
 
           REM********************************************
           SET control = dlg1.Add("DialogFrame2","DialogFrame")
           control.Move(2,53,145,40)
           control.Caption = " Wahl der Vorlage "
 
           SET control = dlg1.Add("DialogOptionButton3","DialogOptionButton")
           control.Move(6,63,114,10)
           control.Caption = "Standardvorlage"
           control.Bind("Vorlagenart$")
           control.ValueOn = "S"
 
           SET control = dlg1.Add("DialogOptionButton4","DialogOptionButton")
           control.Move(6,75,114,9)
           control.Caption = "freie Vorlage"
           control.Bind("Vorlagenart$")
           control.ValueOn = "F"
           REM********************************************  
 
           SET control = dlg1.Add("DialogCheckBox1","DialogCheckBox")
           control.Move(2,95,70,13)
           control.Caption = "USt-ID drucken"
           control.Bind("Gustdruck$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg1.Add("DialogCommandButton1","DialogCommandButton")
           control.Move(80,104,43,16)
           control.Default = 1
           control.Caption = "OK"
           control.ReturnValue = 1
 
           DIALOG "Dialogname",reqemail%
           REMOVE DIALOG "Dialogname"
           IF Vorlagenart$ = "F" THEN 
             REM CALL Fehler("Vorlage","")
             SELECT FIRST FILE "Freevorl"
             REDIM freevorl$( RECCOUNT ("Freevorl") + 1,1)
             REDIM freevorl$( RECCOUNT ("Freevorl") + 1)
             a% = 0
             WHILE NOT EOF ("Freevorl")
               IF novi1.freevorl < 1 THEN 
                 freevorl$(a%) = freevorl.freevorl + SPACE$ (200) + STR$ (codefreev.freevorl,"000000")
                 a% = a% + 1
               END IF 
               SELECT NEXT FILE "Freevorl"
             WEND 
             CREATE DIALOG "MASUCH",0,0,390,364,"Freie Vorlagen","MS Sans Serif",8
             ADD DIALOG "MASUCH",4,0,0,390,337,0,""
             ADD DIALOG "MASUCH",9,9,11,21,21,2
             ADD DIALOG "MASUCH",5,37,11,151,9,0,"Bitte wÑhlen Sie aus der folgenden Liste aus:"
             ADD DIALOG "MASUCH",7,27,27,345,301,2,2,freevorl$,Auswahl$,prompt$
             ADD DIALOG "MASUCH",1,240,345,55,15,1,"&OK",1,1
             ADD DIALOG "MASUCH",1,297,345,55,15,0,"&Abbrechen",0,0
             MOUSE ON 
             DIALOG "MASUCH",req%
             REMOVE DIALOG "MASUCH"
             IF req% = 1 THEN 
               cudoc% = codedok.dokument
               codefreev% = VAL ( RIGHT$ (Auswahl$(0),6))
               SELECT FIRST FILE "Freevorl" INDEX codefreev.freevorl
               SELECT KEY codefreev% FILE "Freevorl" INDEX codefreev.freevorl
               codedok% = codedok.freevorl
               SELECT FIRST FILE "dokument" INDEX codedok.dokument
               SELECT KEY codedok% FILE "dokument" INDEX codedok.dokument
               freevorlage$ = _netpath$ + dateiname.dokument
               SELECT FIRST FILE "dokument" INDEX codedok.dokument
               SELECT KEY cudoc% LOCK FILE "dokument" INDEX codedok.dokument
               IF NOT EXISTS (freevorlage$) THEN 
                 freevorlage$ = ""
                 Vorlagenart$ = "S"
                 CALL Fehler("Das Vorlagedokument " + freevorlage$,"existiert nicht!")
                 GOTO w050920091
               END IF 
             ELSE 
               GOTO w160920091
             END IF 
           END IF 
         END IF 
         REM***************************************************************************  
           REM *****************************************
         END IF 
       ELSE 
         CALL Fehler("Textvorlage " + textvorlage$ + " konnte nicht gefunden werden!","Eintrag wird aus Dokumentenverwaltung entfernt.")
         SELECT KEY cudoc% LOCK FILE "dokument" INDEX CodeDOK.dokument
         SELECT REMOVE FILE "DOKUMENT"
         IF art% <> 6 THEN 
           SELECT KEY cums% LOCK FILE "master" INDEX codems.master
           codedok.master = 0
           CALL QuickStore("master")
         ELSE 
             FILE "mahnung"
             codedok% = 0
             SELECT KEY cums% LOCK FILE "mahnung" INDEX codems.mahnung
             IF PAGE = 1 THEN codedok1.mahnung = codedok%
             IF PAGE = 2 THEN codedok2.mahnung = codedok%
             IF PAGE = 3 THEN codedok3.mahnung = codedok%
             IF PAGE = 4 THEN codedok4.mahnung = codedok%
             IF PAGE = 5 THEN codedok5.mahnung = codedok%
             CALL QuickStore("mahnung")
             SELECT KEY cums% LOCK FILE "mahnung" INDEX codems.mahnung
         END IF 
         DOKNeu% = - 1
       END IF 
       FILE "master"
       SELECT KEY cums% LOCK FILE "master" INDEX codems.master
     END IF :REM Textverarbeitung vorhanden
   END IF :REM codedok% in master eingetragen

   REM DIM freevorl$( RECCOUNT ("Freevorl") + 1)
   IF Vorlagenart$ <> "F" OR freevorlage$ = "" THEN 
     freevorlage$ = ""
     Vorlagenart$ = "S"
   END IF 

   IF dokneu% <> - 1 THEN 
     IF dokneu% = 1 THEN 
       IF art% = 6 THEN 
         IF codedok1.mahnung = codedok% THEN 
           IF dokschutz1.mahnung > 0 THEN noedit$ = "j"
         END IF 
         IF codedok2.mahnung = codedok% THEN 
           IF dokschutz2.mahnung > 0 THEN noedit$ = "j"
         END IF 
         IF codedok3.mahnung = codedok% THEN 
           IF dokschutz3.mahnung > 0 THEN noedit$ = "j"
         END IF 
         IF codedok4.mahnung = codedok% THEN 
           IF dokschutz4.mahnung > 0 THEN noedit$ = "j"
         END IF 
         IF codedok5.mahnung = codedok% THEN 
           IF dokschutz5.mahnung > 0 THEN noedit$ = "j"
         END IF 
         IF noedit$ <> "j" THEN REQUEST "Das Dokument existiert bereits!","Soll es neu erzeugt werden ? ",135,req1%
       ELSE 
         IF dokschutz.master < 1 THEN 
           IF noedit$ <> "j" THEN REQUEST "Das Dokument existiert bereits!","Soll es neu erzeugt werden ? ",135,req1%
         ELSE 
           req1% = 0
         END IF 
       END IF 
       IF req1% = 1 AND noedit$ <> "j" THEN 
         REM***************************************************************************
         cspeed% = 1000
         IF (wxp$ LIKE "true") OR (w97$ LIKE "true") THEN 
           Gustdruck$ = ustdruck.stamm
           Grechtslinks$ = linksrechts.stamm
           DIM dlg1 AS Dialog
           DIM control AS DialogControl 
w050920091:           
           Superbase.Dialogs.Add("Dialogname")
           SET dlg1 = Superbase.Dialogs.Dialogname
           dlg1.Move(0,0,150,123)
           dlg1.Caption = "Art der Druckausgabe"
           dlg1.FontName = "MS Sans Serif"
           dlg1.FontSize = 8
 
           SET control = dlg1.Add("DialogFrame1","DialogFrame")
           control.Move(2,8,145,40)
           control.Caption = " Belegnummer und Datum "
 
           SET control = dlg1.Add("DialogOptionButton1","DialogOptionButton")
           control.Move(6,20,114,10)
           control.Caption = "linksbÅndig"
           control.Bind("Grechtslinks$")
           control.ValueOn = "L"
 
           SET control = dlg1.Add("DialogOptionButton2","DialogOptionButton")
           control.Move(6,32,114,9)
           control.Caption = "rechtsbÅndig"
           control.Bind("Grechtslinks$")
           control.ValueOn = ""

           REM********************************************
           SET control = dlg1.Add("DialogFrame2","DialogFrame")
           control.Move(2,53,145,40)
           control.Caption = " Wahl der Vorlage "
 
           SET control = dlg1.Add("DialogOptionButton3","DialogOptionButton")
           control.Move(6,63,114,10)
           control.Caption = "Standardvorlage"
           control.Bind("Vorlagenart$")
           control.ValueOn = "S"
 
           SET control = dlg1.Add("DialogOptionButton4","DialogOptionButton")
           control.Move(6,75,114,9)
           control.Caption = "freie Vorlage"
           control.Bind("Vorlagenart$")
           control.ValueOn = "F"
           REM********************************************  

           SET control = dlg1.Add("DialogCheckBox1","DialogCheckBox")
           control.Move(2,95,70,13)
           control.Caption = "USt-ID drucken"
           control.Bind("Gustdruck$")
           control.ValueOn = "j"
           control.ValueOff = "n"

 
           SET control = dlg1.Add("DialogCommandButton1","DialogCommandButton")
           control.Move(70,100,43,16)
           control.Default = 1
           control.Caption = "OK"
           control.ReturnValue = 1
 
           DIALOG "Dialogname",reqemail%
           REMOVE DIALOG "Dialogname"
           IF Vorlagenart$ = "F" THEN 
             REM CALL Fehler("Vorlage","")
             SELECT FIRST FILE "Freevorl"
             REDIM freevorl$( RECCOUNT ("Freevorl") + 1,1)
             REDIM freevorl$( RECCOUNT ("Freevorl") + 1)
             a% = 0
             WHILE NOT EOF ("Freevorl")
               IF novi1.freevorl < 1 THEN 
                 freevorl$(a%) = freevorl.freevorl + SPACE$ (200) + STR$ (codefreev.freevorl,"000000")
                 a% = a% + 1
               END IF 
               SELECT NEXT FILE "Freevorl"
             WEND 
             CREATE DIALOG "MASUCH",0,0,390,364,"Freie Vorlagen","MS Sans Serif",8
             ADD DIALOG "MASUCH",4,0,0,390,337,0,""
             ADD DIALOG "MASUCH",9,9,11,21,21,2
             ADD DIALOG "MASUCH",5,37,11,151,9,0,"Bitte wÑhlen Sie aus der folgenden Liste aus:"
             ADD DIALOG "MASUCH",7,27,27,345,301,2,2,freevorl$,Auswahl$,prompt$
             ADD DIALOG "MASUCH",1,240,345,55,15,1,"&OK",1,1
             ADD DIALOG "MASUCH",1,297,345,55,15,0,"&Abbrechen",0,0
             MOUSE ON 
             DIALOG "MASUCH",req%
             REMOVE DIALOG "MASUCH"
             IF req% = 1 THEN 
               cudoc% = codedok.dokument
               codefreev% = VAL ( RIGHT$ (Auswahl$(0),6))
               SELECT FIRST FILE "Freevorl" INDEX codefreev.freevorl
               SELECT KEY codefreev% FILE "Freevorl" INDEX codefreev.freevorl
               codedok% = codedok.freevorl
               SELECT FIRST FILE "dokument" INDEX codedok.dokument
               SELECT KEY codedok% FILE "dokument" INDEX codedok.dokument
               freevorlage$ = _netpath$ + dateiname.dokument
               SELECT FIRST FILE "dokument" INDEX codedok.dokument
               SELECT KEY cudoc% LOCK FILE "dokument" INDEX codedok.dokument
               IF NOT EXISTS (freevorlage$) THEN 
                 freevorlage$ = ""
                 Vorlagenart$ = "S"
                 CALL Fehler("Das Vorlagedokument " + freevorlage$,"existiert nicht!")
                 GOTO w050920091
               END IF 
             ELSE 
               GOTO w050920091
             END IF 
           END IF 
         END IF 
         REM***************************************************************************
         gvisible% = 0
         SELECT CASE Art%
         CASE 1
           aktion1$ = "Angebot*"
           aktion2$ = "*Angebot*"
         CASE 2
           aktion1$ = "Rechnung*"
           aktion2$ = "*Rechnung*"
         CASE 3
           aktion1$ = "Liefersch*"
           aktion2$ = "*Liefersch*"
         CASE 4
           aktion1$ = "Auftr*"
           aktion2$ = "*Auftr*"
         CASE 5
           aktion1$ = "Bestell*"
           aktion2$ = "*Bestell*"
         CASE 6
           aktion1$ = "Mahnung*"
           aktion2$ = "*Mahnung*"
         CASE 7
           aktion1$ = "Gutschr*"
           aktion2$ = "*Gutschr*"
           globalGutsch$ = "TRUE"
         CASE 8
           aktion1$ = "ext.Preisanfrage*"
           aktion2$ = "*ext.Preisanfrage*"
         END SELECT 
         a% = 0
         ok% = - 1
         vorlage% = 0
         REM Grechtslinks$
         WHILE DOKGruppen$(a%) <> "" AND ok% = - 1
           a% = a% + 1
           IF DOKGruppen$(a%) LIKE aktion1$ OR DOKGruppen$(a%) LIKE aktion1$ THEN 
             gruppe$ = DOKGruppen$(a%)
             ok% = 0
           END IF 
         WEND 
         IF ok% = - 1 THEN gruppe$ = DOKGruppen$(0):REM allgemeine Schreiben  
         IF freevorlage$ <> "" AND Vorlagenart$ = "F" THEN 
           textvorlage$ = freevorlage$
           REM textdatei$ = freevorlage$
           GOTO w050920092
         END IF 
         IF vorlage% = 0 THEN 
           IF wxp$ LIKE "TRUE" THEN 
             _vorlage$ = ReadConfig$("VORLAGENWordXP",Gruppe$)
           ELSE 
             IF w97$ <> "TRUE" THEN _vorlage$ = ReadConfig$("VORLAGEN",Gruppe$)
             IF w97$ = "TRUE" THEN _vorlage$ = ReadConfig$("VORLAGENWord97",Gruppe$)
           END IF 
           IF _vorlage$ <> "leer" THEN 
             REM textvorlage$ = LEFT$ (_netpath$,2) + ReadConfig$("DOKUMENTE", FN ansi(Gruppe$)) + _vorlage$
             textvorlage$ = ReadConfig$("DOKUMENTE", FN ansi(Gruppe$))
             IF LEFT$ (textvorlage$,1) = "#" THEN 
               tt1$ = MID$ (textvorlage$,2)
               textvorlage$ = UCASE$ (tt1$)
             ELSE 
               pfad$ = MID$ ( UCASE$ (_netpath$),3)
               l1% = 0
               l1% = LEN (pfad$)
               pos% = 0
               pos% = INSTR (textvorlage$,pfad$)
               IF pos% > 0 THEN 
                 dateiname1$ = MID$ (textvorlage$,pos% + l1%)
                 textvorlage$ = dateiname1$
                 IF RIGHT$ (textvorlage$,1) <> "\" THEN textvorlage$ = textvorlage$ + "\"
                 IF LEFT$ (textvorlage$,1) = "\" THEN textvorlage$ = MID$ (textvorlage$,2)
                 CALL WriteConfig("DOKUMENTE", FN ansi(Gruppe$),"#" + textvorlage$)
               ELSE 
                 t1% = INSTR (4,textvorlage$,"\")
                 zw1$ = MID$ (textvorlage$,t1%)
                 textvorlage$ = zw1$
                 IF RIGHT$ (textvorlage$,1) <> "\" THEN textvorlage$ = textvorlage$ + "\"
                 IF LEFT$ (textvorlage$,1) = "\" THEN textvorlage$ = MID$ (textvorlage$,2)
                 CALL WriteConfig("DOKUMENTE", FN ansi(Gruppe$),"#" + textvorlage$)
               END IF 
             END IF 
             
             IF RIGHT$ (textvorlage$,1) <> "\" THEN textvorlage$ = textvorlage$ + "\"
             IF LEFT$ (textvorlage$,1) = "\" THEN textvorlage$ = MID$ (textvorlage$,2)
             textvorlage$ = _netpath$ + textvorlage$ + _vorlage$
           ELSE 
             IF wxp$ LIKE "TRUE" THEN 
               textvorlage$ = _netpath$ + "OFFICE\TEXT\0xp.doc"
             ELSE 
               IF w97$ <> "TRUE" THEN 
                 textvorlage$ = _netpath$ + "OFFICE\TEXT\0." + _WPSuffix$
               ELSE 
                 textvorlage$ = _netpath$ + "OFFICE\TEXT\0w97.doc"
               END IF 
             END IF 
           END IF 
         ELSE 
           SELECT KEY vorlage% FILE "dokument" INDEX CodeDOK.dokument
           textvorlage$ = _netpath$ + Dateiname.DOKUMENT
         END IF 
         REM 230498
w050920092: 
         SELECT KEY cudoc% FILE "Dokument" INDEX codedok.dokument
         textdatei$ = _netpath$ + Dateiname.dokument
 
         IF EXISTS (textdatei$) THEN 
           DELETE textdatei$
           COPY textvorlage$,textdatei$
         ELSE 
           REM CALL Fehler("Test","")
           REM textdatei$ = ReadConfig$("DOKUMENTE", FN ansi(Gruppe$)) + LTRIM$ ( STR$ (CodeDOK.dokument,"999999")) + "." + RIGHT$ (textvorlage$,3)
           docpath$ = GetDocPath$(Gruppe$)
           textdatei$ = docpath$ + LTRIM$ ( STR$ (CodeDOK.dokument,"999999")) + "." + RIGHT$ (textvorlage$,3)
           SELECT KEY cudoc% LOCK FILE "Dokument" INDEX codedok.dokument
           dateiname.dokument = textdatei$
           CALL QuickStore("dokument")
           textdatei$ = _netpath$ + Dateiname.dokument
           COPY textvorlage$,textdatei$
         END IF 
         REM CALL Fehler("DoktestMahn0","Dok neu erstellt")
         IF (wxp$ LIKE "true") OR (w97$ LIKE "true" AND cspeed% = 1000) THEN 
           CALL DOKWW(cudoc%,opt%)
         ELSE 
           CALL DOKWWold(cudoc%,opt%)
         END IF 
         REM GTextDatei$ = LTRIM$ ( STR$ (codedok.dokument,"999999"))
         REM CALL Fehler( LTRIM$ ( STR$ (cudoc%,"999999")),"")
         REM GTextDatei$ = LTRIM$ ( STR$ (cudoc%,"999999")) + "." + _WPSuffix$
         GTextDatei$ = LTRIM$ ( STR$ (cudoc%,"999999"))
         IF dokfehl% <> 1 THEN 
           IF (wxp$ LIKE "true") OR (w97$ LIKE "true" AND cspeed% = 1000) THEN 
             REM WAIT FOR 1
             CALL Out2WinWord(cums%,opt%)
           ELSE 
             REM CALL Fehler("Test","")
             CALL Out2WinWold(cums%,opt%)
           END IF 
         END IF 
       ELSE 
         gvisible% = 0
         REM CALL Fehler("Doktest","Dok bereits vorhanden")
         IF (wxp$ LIKE "true") OR (w97$ LIKE "true" AND cspeed% = 1000) THEN 
           CALL DOKWW(cudoc%,opt%)
         ELSE 
           CALL DOKWWold(cudoc%,opt%)
         END IF 
         REM GTextDatei$ = LTRIM$ ( STR$ (cudoc%,"999999")) + "." + _WPSuffix$
         GTextDatei$ = LTRIM$ ( STR$ (cudoc%,"999999"))

       END IF 
     ELSE 
       REM CALL Fehler("DoktestMahn2","Dok bereits vorhanden")
       IF (wxp$ LIKE "true") OR (w97$ LIKE "true" AND cspeed% = 1000) OR gcodieadr$ LIKE "TRUE" THEN 
         IF freevorlage$ <> "" AND Vorlagenart$ = "F" THEN 
           textvorlage$ = freevorlage$
           SELECT KEY cudoc% FILE "Dokument" INDEX codedok.dokument
           textdatei$ = _netpath$ + Dateiname.dokument
 
           IF EXISTS (textdatei$) THEN 
             DELETE textdatei$
             COPY textvorlage$,textdatei$
           END IF 
         END IF 
         CALL DOKWW(cudoc%,opt%)
       ELSE 
         CALL DOKWWold(cudoc%,opt%)
       END IF 
       REM GTextDatei$ = LTRIM$ ( STR$ (cudoc%,"999999")) + "." + _WPSuffix$
       GTextDatei$ = LTRIM$ ( STR$ (cudoc%,"999999"))
       IF dokfehl% <> 1 THEN 
         IF (wxp$ LIKE "true") OR (w97$ LIKE "true" AND cspeed% = 1000) THEN 
           CALL Out2WinWord(cums%,opt%)
         ELSE 
           CALL Out2WinWold(cums%,opt%)
         END IF 
       END IF 
     END IF 
     noedit$ = "n"
   END IF 
 END IF 
 REM cums% = codems1%
 SELECT KEY cums% FILE "master" INDEX codems.master
 MOUSE ON 
 END SUB 
 
 
 ' MASTER Druckausgabe von Rechnung/Angebot ...
 ' =======================================================================
 REM opt%=0 Ausgabe Åber Reportgenerator auf drucker 
 REM opt%=1 Ausgabe Åber Reportgenerator auf Bildschirm
 
SUB MSDR(codems%,opt%)
 IF NEW ("MASTER") OR MOD ("MASTER") THEN CALL FStore("MASTER")
 cums% = codems.master
 FILE "MASTER"
 SELECT KEY codems% LOCK FILE "MASTER" INDEX CodeMS.MASTER
 sform$ = "UNI1"
 IF mwstcount% <> 1 THEN sform$ = "UNI"
 IF art.master = 3 THEN sform$ = "LIEFER"
 IF opt% < 7 THEN 
   IF KalkArt.MASTER = 0 THEN 
     rform$ = "N" + SFORM$
   ELSE 
     rform$ = "B" + SFORM$
   END IF 
 ELSE 
   IF KalkArt.MASTER = 0 THEN 
     rform$ = "N" + SFORM$ + "E"
   ELSE 
     rform$ = "B" + SFORM$ + "E"
   END IF 
 END IF 
 IF art.master = 4 THEN 
   titel.master = "AuftragsbestÑtigung"
   CALL QuickStore("master")
 END IF 
 maske$ = rform$
 SELECT KEY codems% LOCK FILE "MASTER" INDEX CodeMS.MASTER
 CALL DFile(3,"SCHEIN" + _fpw$)
 CALL DFile(3,"serienr" + _fpw$)
 FILE "master"
  CALL PRep(rform$)
 BEFORE REPORT 
   SET REPORT PAGE "H_REPORT"
   OUTPUT REPORT PAGE 
 END REPORT 
 AFTER REPORT 
   SET REPORT PAGE "F_REPORT"
   OUTPUT REPORT PAGE 
 END REPORT 
 HEADING 
   SET REPORT PAGE "H_PAGE"
   OUTPUT REPORT PAGE 
 END HEADING 
 FOOTING 1
 SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
 END FOOTING 
 AFTER SELECT 
   SET REPORT PAGE "F_SELECT"
   OUTPUT REPORT PAGE 
 END SELECT 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 SET FIRST PAGE HEADING OFF 
 
 REM Rabattext enthÑlt jetzt die Skontoaussage
 RabattText$ = ""
 zahlziel$ = ""
 IF ZahlDatum.master > 0 THEN 
   zahlziel$ = "Zahlungsziel: Bitte zahlen Sie den fÑlligen Betrag bis zum " + DATE$ (ZahlDatum.master,"0d.mm.yyyy")
   REM 07022000
   IF art.master = 2 THEN 
     REM zahlziel$ = "Zahlungen (erfolgt J/N)" + SPACE$ (100) + "Betrag" + CHR$ (13)
     dat$ = "master"
     codere% = codere.dat$
     codems% = codems.dat$
     umr% = umrechnung.dat$
         IF EXISTS (codems%,codems.teilraus) THEN 
           zahlziel$ = zahlziel$ + CHR$ (13) + CHR$ (13) + "Zahlungen (erfolgt J/N)" + SPACE$ (100) + "Betrag" + CHR$ (13)
           FILE "teilraus"
           INDEX codems.teilraus
           SELECT FIRST 
           SELECT KEY codems% FILE "teilraus" INDEX codems.teilraus
           sumz% = 0
           sumzEu% = 0
           mahn% = 0
           mahneu% = 0
           WHILE NOT EOF ("teilraus") AND codems.teilraus = codems%
             IF RIGHT$ (maske$,1) <> "E" THEN 
               IF erledigt.teilraus = "J" THEN 
                 sumz% = sumz% + GesBrutto.teilraus
                 IF UCASE$ (mahnjn.teilraus) = "J" THEN mahn% = mahn% + gesbrutto.teilraus
               END IF 
               zahlziel$ = zahlziel$ + DATE$ (gezahltam.teilraus,"0d.mm.yyyy") + SPACE$ (10) + erledigt.teilraus + SPACE$ (110) + STR$ (GesBrutto.teilraus,",999999999.00") + " " + waehrung.teilraus + CHR$ (13)
             END IF 
             IF RIGHT$ (maske$,1) = "E" THEN 
               IF erledigt.teilraus = "J" THEN 
                 sumzeu% = sumzeu% + GesBruttoeu.teilraus
                 IF UCASE$ (mahnjn.teilraus) = "J" THEN mahneu% = mahneu% + gesbruttoeu.teilraus
               END IF 
               zahlziel$ = zahlziel$ + DATE$ (gezahltam.teilraus,"0d.mm.yyyy") + SPACE$ (10) + erledigt.teilraus + SPACE$ (110) + STR$ (GesBrutto.teilraus,",999999999.00") + " EUR" + CHR$ (13)
             END IF 
             
             SELECT NEXT 
           WEND 

           IF RIGHT$ (maske$,1) <> "E" THEN 
             IF sumz% <> 0 THEN sumzeu% = sumz% / umr%
             zahlziel$ = zahlziel$ + "Summe geleisteter Zahlungen:  " + SPACE$ (85) + STR$ (sumz%,",999999999.00") + " " + waehrung.teilraus + CHR$ (13)
             zahlziel$ = zahlziel$ + "ausstehender Restbetrag          :  " + SPACE$ (85) + STR$ (GesBrutto.master - sumz%,",999999999.00") + " " + waehrung.teilraus + CHR$ (13)
           END IF 
           IF RIGHT$ (maske$,1) = "E" THEN 
             IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr%
             zahlziel$ = zahlziel$ + "Summe geleisteter Zahlungen:  " + SPACE$ (85) + STR$ (sumzEU%,",999999999.00") + " EUR" + CHR$ (13)
             zahlziel$ = zahlziel$ + "ausstehender Restbetrag          :  " + SPACE$ (85) + STR$ (GesBruttoEu.master - sumzEU%,",999999999.00") + " EUR" + CHR$ (13)
           END IF 
           FILE dat$
           SELECT FIRST 
           SELECT KEY codems% LOCK FILE dat$ INDEX codems.dat$
           SummeTeil.dat$ = sumz%
           SummeTeilEu.dat$ = sumzeu%
           SummeMahn.dat$ = mahn%
           SummeMahnEu.dat$ = mahneu%
           CALL QuickStore(dat$)
         END IF 
         REM zahlziel$ = zahlziel$ + CHR$ (13) + "Zahlungsziel: Bitte zahlen Sie den fÑlligen Betrag bis zum " + DATE$ (ZahlDatum.master,"0d.mm.yyyy")

   END IF 
 ELSE 
   IF art.master = 2 THEN 
     dat$ = "master"
     codere% = codere.dat$
     codems% = codems.dat$
     umr% = umrechnung.dat$
         IF EXISTS (codems%,codems.teilraus) THEN 
           zahlziel$ = "Zahlungen (erfolgt J/N)" + SPACE$ (100) + "Betrag" + CHR$ (13)
           FILE "teilraus"
           INDEX codems.teilraus
           SELECT FIRST 
           SELECT KEY codems% FILE "teilraus" INDEX codems.teilraus
           sumz% = 0
           sumzEu% = 0
           mahn% = 0
           mahneu% = 0
           WHILE NOT EOF ("teilraus") AND codems.teilraus = codems%
             IF RIGHT$ (maske$,1) <> "E" THEN 
               IF erledigt.teilraus = "J" THEN 
                 sumz% = sumz% + GesBrutto.teilraus
                 IF UCASE$ (mahnjn.teilraus) = "J" THEN mahn% = mahn% + gesbrutto.teilraus
               END IF 
               zahlziel$ = zahlziel$ + DATE$ (gezahltam.teilraus,"0d.mm.yyyy") + SPACE$ (10) + erledigt.teilraus + SPACE$ (110) + STR$ (GesBrutto.teilraus,",999999999.00") + " " + waehrung.teilraus + CHR$ (13)
             END IF 
             IF RIGHT$ (maske$,1) = "E" THEN 
               IF erledigt.teilraus = "J" THEN 
                 sumzeu% = sumzeu% + GesBruttoeu.teilraus
                 IF UCASE$ (mahnjn.teilraus) = "J" THEN mahneu% = mahneu% + gesbruttoeu.teilraus
               END IF 
               zahlziel$ = zahlziel$ + DATE$ (gezahltam.teilraus,"0d.mm.yyyy") + SPACE$ (10) + erledigt.teilraus + SPACE$ (110) + STR$ (GesBrutto.teilraus,",999999999.00") + " EUR" + CHR$ (13)
             END IF 
             
             SELECT NEXT 
           WEND 
 
           IF RIGHT$ (maske$,1) <> "E" THEN 
             IF sumz% <> 0 THEN sumzeu% = sumz% / umr%
             zahlziel$ = zahlziel$ + "Summe geleisteter Zahlungen:  " + SPACE$ (85) + STR$ (sumz%,",999999999.00") + " " + waehrung.teilraus + CHR$ (13)
             zahlziel$ = zahlziel$ + "ausstehender Restbetrag          :  " + SPACE$ (85) + STR$ (GesBrutto.master - sumz%,",999999999.00") + " " + waehrung.teilraus + CHR$ (13)
           END IF 
           IF RIGHT$ (maske$,1) = "E" THEN 
             IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr%
             zahlziel$ = zahlziel$ + "Summe geleisteter Zahlungen:  " + SPACE$ (85) + STR$ (sumzEU%,",999999999.00") + " EUR" + CHR$ (13)
             zahlziel$ = zahlziel$ + "ausstehender Restbetrag          :  " + SPACE$ (85) + STR$ (GesBruttoEu.master - sumzEU%,",999999999.00") + " EUR" + CHR$ (13)
           END IF 
           FILE dat$
           SELECT FIRST 
           SELECT KEY codems% LOCK FILE dat$ INDEX codems.dat$
           SummeTeil.dat$ = sumz%
           SummeTeilEu.dat$ = sumzeu%
           SummeMahn.dat$ = mahn%
           SummeMahnEu.dat$ = mahneu%
           CALL QuickStore(dat$)
         END IF 
         IF ZahlDatum.master > 0 THEN 
           zahlziel$ = zahlziel$ + CHR$ (13) + "Zahlungsziel: Bitte zahlen Sie den fÑlligen Betrag bis zum " + DATE$ (ZahlDatum.master,"0d.mm.yyyy")
         END IF 
 
   END IF 
 END IF 
 IF skonto.MASTER > 0 THEN 
   IF opt% < 7 THEN 
     RabattText$ = ""
     REM summezahl% = GesBrutto.master - Skonto.master
     REM summezahl$ = LTRIM$ ( STR$ (Summezahl%,",9999999999.00")) + " " + TRIM$ (waehrung.master)
     REM skontoproz$ = LTRIM$ ( STR$ (SkontoProz.MASTER,"999.00"))
     REM skonto$ = LTRIM$ ( STR$ (Skonto.MASTER,",9999999999.00")) + " " + TRIM$ (waehrung.master)
     REM gesbrut$ = LTRIM$ ( STR$ (GesBrutto.master,",9999999999.00")) + " " + TRIM$ (waehrung.master)

     summezahl% = VAL (ExtDMNeu$(GesBrutto.master - Skonto.master))
     s1ges$ = STR$ (GesBrutto.master,",999999999.00")
     s2sk$ = STR$ (Skonto.master,",999999999.00")
     summezahl% = VAL (s1ges$) - VAL (s2sk$)
     REM summezahl$ = ExtDMNeu$(Summezahl%)
     summezahl$ = STR$ (Summezahl%,",999999999.00") + " " + TRIM$ (waehrung.master)
     skontoproz$ = ExtDMNeu$(SkontoProz.MASTER)
     skonto$ = ExtDMNeu$(Skonto.MASTER) + " " + TRIM$ (waehrung.master)
     gesbrut$ = ExtDMNeu$(GesBrutto.master) + " " + TRIM$ (waehrung.master)
     z1$ = "bei Zahlung bis zum " + DATE$ (skontoziel.master,"dd.mm.yyyy") + " gewÑhren wir ein Skonto von "
 RabattText$ = z1$ + skontoproz$ + " % (Betrag: " + skonto$ + "), auf  " + gesbrut$ + CHR$ (13) + "zu zahlende Summe: " + summezahl$
 
 
   ELSE 
     RabattText$ = ""
     REM summezahl% = GesBruttoEu.master - SkontoEu.master
     REM summezahl$ = LTRIM$ ( STR$ (Summezahl%,",9999999999.00"))
     REM skontoproz$ = LTRIM$ ( STR$ (SkontoProz.MASTER,"999.00"))
     REM skonto$ = LTRIM$ ( STR$ (SkontoEu.MASTER,",9999999999.00"))
     REM gesbrut$ = LTRIM$ ( STR$ (GesBruttoEu.master,",9999999999.00"))


     REM summezahl% = VAL (ExtDMNeu$(GesBruttoEu.master - SkontoEu.master))
     summezahl% = GesBruttoEu.master - SkontoEu.master
     s1ges$ = STR$ (GesBruttoEu.master,",999999999.00")
     s2sk$ = STR$ (SkontoEu.master,",999999999.00")
     summezahl% = VAL (s1ges$) - VAL (s2sk$)
     REM summezahl$ = ExtDMNeu$(Summezahl%)
     summezahl$ = STR$ (Summezahl%,",999999999.00")
     skontoproz$ = ExtDMNeu$(SkontoProz.MASTER)
     skonto$ = ExtDMNeu$(SkontoEu.MASTER)
     gesbrut$ = ExtDMNeu$(GesBruttoEu.master)

     REM RabattText$ = "es wird Skonto von " + skontoproz$ + " % (Betrag " + skonto$ + ") bei Zahlung bis: " + DATE$ (skontoziel.master,"dd.mm.yy") + " gewÑhrt, zu zahlende Summe: " + LTRIM$ ( STR$ (summezahl%,"$ ,9999999999.00"))
     z1$ = "bei Zahlung bis zum " + DATE$ (skontoziel.master,"dd.mm.yyyy") + " gewÑhren wir ein Skonto von "
 RabattText$ = z1$ + skontoproz$ + " % (Betrag: " + skonto$ + " EUR), auf  " + gesbrut$ + " EUR" + CHR$ (13) + "zu zahlende Summe: " + summezahl$ + " EUR"
   END IF 
 ELSE 
   RabattText$ = ""
 END IF 
 
 REM Erzeugung der zu druckenden Fu·zeilen, abhÑngig von Kalkulationsart
 REM unter BerÅcksichtigung von Rabattaussagen
 IF kalkart.master = 0 THEN 
 REM Nettofakturierung
   IF rabatt.master <> 0 OR rabattproz.master <> 0 THEN 
     IF rabattart.master = 0 THEN 
     REM Rabatt auf Netto
       IF opt% < 7 THEN 
         Zeile1$ = "Summe Netto:"
         WertZeile1$ = ExtDMNeu$(PreisNetto.master) + " " + TRIM$ (waehrung.master)
         Zeile2$ = "abzÅglich Rabatt von " + STR$ (Rabattproz.master,"999.000") + "% auf Summe Netto"
         WertZeile2$ = "-" + ExtDMNeu$(Rabatt.master) + " " + TRIM$ (waehrung.master)
         Zeile3$ = "Summe Netto abzÅglich Rabatt"
         WertZeile3$ = ExtDMNeu$(GesNetto.master) + " " + TRIM$ (waehrung.master)
         Zeile4$ = MWSTText$
         WertZeile4$ = MWSTBetrag$
         Zeile5$ = "Gesamtsumme"
         Summegesbrutto% = VAL (ExtDMNeu$(gesnetto.master + mwstBetrag1%))
         WertZeile5$ = ExtDMNeu$(Summegesbrutto%,) + " " + TRIM$ (waehrung.master)
       ELSE 
         Zeile1$ = "Summe Netto (EUR):"
         WertZeile1$ = ExtDMNeu$(PreisNettoEu.master)
         Zeile2$ = "abzÅglich Rabatt (in EUR) von " + STR$ (Rabattproz.master,"999.000") + "% auf Summe Netto"
         WertZeile2$ = "-" + ExtDMNeu$(RabattEu.master)
         Zeile3$ = "Summe Netto abzÅglich Rabatt (EUR)"
         WertZeile3$ = ExtDMNeu$(GesNettoEu.master)
         Zeile4$ = MWSTTextEu$
         mw% = VAL (MWSTBetragEu$)
         WertZeile4$ = STR$ (mw%,",999999999.00")
         Zeile5$ = "Gesamtsumme (EUR)"
         Summegesbrutto% = VAL (ExtDMNeu$(gesnettoEu.master + mwstBetrag1Eu%))
         REM 050100
         WertZeile5$ = ExtDMNeu$(Summegesbrutto%)
       END IF 
     ELSE 
     REM Rabatt auf Brutto
       IF opt% < 7 THEN 
         Zeile1$ = "Summe Netto:"
         WertZeile1$ = ExtDMNeu$(PreisNetto.master) + " " + TRIM$ (waehrung.master)
         Zeile2$ = MWSTText$
         WertZeile2$ = MWSTBetrag$
         Zeile3$ = "Summe Brutto"
         WertZeile3$ = ExtDMNeu$(PreisBrutto.master) + " " + TRIM$ (waehrung.master)
         Zeile4$ = "abzÅglich Rabatt von " + STR$ (Rabattproz.master,"999.000") + "% auf Summe Brutto"
         WertZeile4$ = "-" + ExtDMNeu$(Rabatt.master) + " " + TRIM$ (waehrung.master)
         Zeile5$ = "Gesamtsumme"
         WertZeile5$ = ExtDMNeu$(GesBrutto.master) + " " + TRIM$ (waehrung.master)
       ELSE 
         Zeile1$ = "Summe Netto (EUR):"
         WertZeile1$ = ExtDMNeu$(PreisNettoEu.master)
         Zeile2$ = MWSTTextEu$
         mw% = VAL (MWSTBetragEu$)
         WertZeile2$ = STR$ (mw%,",999999999.00")
         Zeile3$ = "Summe Brutto (EUR)"
         WertZeile3$ = ExtDMNeu$(PreisBruttoEu.master)
         Zeile4$ = "abzÅglich Rabatt (in EUR) von " + STR$ (Rabattproz.master,"999.000") + "% auf Summe Brutto"
         WertZeile4$ = "-" + ExtDMNeu$(RabattEu.master)
         Zeile5$ = "Gesamtsumme"
         WertZeile5$ = ExtDMNeu$(GesBruttoEu.master)
       END IF 
     END IF 
   ELSE 
     REM ohne Rabatt
     IF opt% < 7 THEN 
       Zeile3$ = "Summe Netto:"
       WertZeile3$ = ExtDMNeu$(PreisNetto.master) + " " + TRIM$ (waehrung.master)
       Zeile4$ = MWSTText$
       WertZeile4$ = MWSTBetrag$
       Zeile1$ = ""
       WertZeile1$ = ""
       Zeile2$ = ""
       WertZeile2$ = ""
       Zeile5$ = "Gesamtsumme"
       WertZeile5$ = ExtDMNeu$(GesBrutto.master) + " " + TRIM$ (waehrung.master)
     ELSE 
       Zeile3$ = "Summe Netto (EUR):"
       WertZeile3$ = ExtDMNeu$(PreisNettoEu.master)
       Zeile4$ = MWSTTextEu$
       mw% = VAL (MWSTBetragEu$)
       WertZeile4$ = STR$ (mw%,",999999999.00")
       Zeile1$ = ""
       WertZeile1$ = ""
       Zeile2$ = ""
       WertZeile2$ = ""
       Zeile5$ = "Gesamtsumme (EUR)"
       WertZeile5$ = ExtDMNeu$(GesBruttoEu.master)
     END IF 
   END IF 
 END IF 
 IF kalkart.master <> 0 THEN 
 REM Bruttofakturierung
   IF rabatt.master <> 0 THEN 
   REM Rabatt gegeben
     IF rabattart.master = 0 THEN 
     REM Rabatt auf Netto gegeben, darf nicht sein
     CALL Fehler("Sie dÅrfen bei einer Bruttofakturierung keinen Rabatt auf die Nettosumme geben!","Bitte Ñndern!")
       IF opt% < 7 THEN 
         Zeile1$ = ""
         WertZeile1$ = ""
         Zeile2$ = ""
         WertZeile2$ = ""
         Zeile3$ = ""
         WertZeile3$ = ""
         Zeile4$ = "Gesamtsumme"
         WertZeile4$ = ExtDMNeu$(GesBrutto.master) + " " + TRIM$ (waehrung.master)
         Zeile5$ = MWSTText$
         WertZeile5$ = ""
       ELSE 
         Zeile1$ = ""
         WertZeile1$ = ""
         Zeile2$ = ""
         WertZeile2$ = ""
         Zeile3$ = ""
         WertZeile3$ = ""
         Zeile4$ = "Gesamtsumme (EUR)"
         WertZeile4$ = ExtDMNeu$(GesBruttoEu.master)
         Zeile5$ = MWSTTextEu$
         WertZeile5$ = ""
       END IF 
     ELSE 
       IF opt% < 7 THEN 
         Zeile1$ = "Summe Brutto"
         WertZeile1$ = ExtDMNeu$(PreisBrutto.master) + " " + TRIM$ (waehrung.master)
         Zeile2$ = "abzÅglich Rabatt von " + STR$ (Rabattproz.master,"999.000") + "% auf Summe Brutto"
         WertZeile2$ = "-" + ExtDMNeu$(Rabatt.master) + " " + TRIM$ (waehrung.master)
         Zeile3$ = ""
         WertZeile3$ = ""
         Zeile4$ = "Gesamtsumme"
         WertZeile4$ = ExtDMNeu$(GesBrutto.master) + " " + TRIM$ (waehrung.master)
         Zeile5$ = MWSTText$
         WertZeile5$ = ""
       ELSE 
         Zeile1$ = "Summe Brutto (EUR)"
         WertZeile1$ = ExtDMNeu$(PreisBruttoEu.master)
         Zeile2$ = "abzÅglich Rabatt (in EUR) von " + STR$ (Rabattproz.master,"999.000") + "% auf Summe Brutto"
         WertZeile2$ = "-" + ExtDMNeu$(RabattEu.master)
         Zeile3$ = ""
         WertZeile3$ = ""
         Zeile4$ = "Gesamtsumme (EUR)"
         WertZeile4$ = ExtDMNeu$(GesBruttoEu.master)
         Zeile5$ = MWSTTextEu$
         WertZeile5$ = ""
       END IF 
     END IF 
   ELSE 
     IF opt% < 7 THEN 
       Zeile1$ = ""
       WertZeile1$ = ""
       Zeile2$ = ""
       WertZeile2$ = ""
       Zeile3$ = ""
       WertZeile3$ = ""
       Zeile4$ = "Gesamtsumme"
       WertZeile4$ = ExtDMNeu$(GesBrutto.master) + " " + TRIM$ (waehrung.master)
       Zeile5$ = MWSTText$
       WertZeile5$ = ""
     ELSE 
       Zeile1$ = ""
       WertZeile1$ = ""
       Zeile2$ = ""
       WertZeile2$ = ""
       Zeile3$ = ""
       WertZeile3$ = ""
       Zeile4$ = "Gesamtsumme (EUR)"
       WertZeile4$ = ExtDMNeu$(GesBruttoEu.master)
       Zeile5$ = MWSTTextEu$
       WertZeile5$ = ""
     END IF 
   END IF 
 END IF 
 REM Wenn keine Bestellung vorliegt, dann Kundenummer verwenden
 IF art.master <> 5 THEN 
   kundennr$ = "Kundennummer: " + Kundennummer.master
   IF DEFA$ = "MEGA" THEN 
     IF Kostenstelle.master <> 0 THEN kundennr$ = "Kostenstelle: " + STR$ (Kostenstelle.master,"000000")
     IF KostentrÑger.master <> "" THEN kundennr$ = "KostentrÑger: " + KostentrÑger.master
   END IF 
 ELSE 
   kundennr$ = "unsere Kundennummer: " + Kundennummer.master
 END IF 
 REM ***leer
 leervorAdr% = LeerVorADR.stamm
 leernachAdr% = LeerNachADR.stamm
 leerKopfSeite% = LeerKopfSeite.stamm
 leerFusSeite% = GlerFusSeite%
 leervorAdr$ = ""
 FOR i% = 0 TO leervorAdr%
   leervorAdr$ = leervorAdr$ + CHR$ (13) + CHR$ (10)
 NEXT i%
 REM leernachAdr% = VAL (ReadConfig$("FACTURA","LeerzeilenNachAdresse"))
 leernachAdr$ = ""
 FOR i% = 0 TO leernachAdr%
   leernachAdr$ = leernachAdr$ + CHR$ (13) + CHR$ (10)
 NEXT i%
 REM leerKopfSeite% = VAL (ReadConfig$("FACTURA","LeerzeilenSeitenKopf"))
 leerKopfSeite$ = ""
 FOR i% = 0 TO leerKopfSeite%
   leerKopfSeite$ = leerKopfSeite$ + CHR$ (13) + CHR$ (10)
 NEXT i%
 REM leerFusSeite% = VAL (ReadConfig$("FACTURA","LeerzeilenSeitenFuss"))
 leerFusSeite$ = " "
 REM FOR i% = 0 TO leerFusSeite%
 REM leerFusSeite$ = leerFusSeite$ + STR$ (i%) + CHR$ (13) + CHR$ (10)
 REM NEXT i%
 
 
  
 SELECT CASE MSArt%
 CASE 1
   alt% = 1
 CASE 2
   alt% = 0
 CASE 3
   alt% = 0
 CASE 4
   alt% = 0
 CASE 5
   alt% = 0
 END SELECT 
 
 ON ERROR GOTO ErrMSDR
 IF opt% = 1 OR opt% = 7 THEN 
   IF alt% = 1 THEN 
     SELECT ;
       WHERE CodeMS.MASTER = CodeMS.SCHEIN AND CodeMS.Master = codems%
       ORDER REPORT PosNr.SCHEIN
       TO WINDOW 
   ELSE 
     SELECT ;
       WHERE CodeMS.MASTER = CodeMS.SCHEIN AND CodeMS.Master = codems% AND Art.SCHEIN = 0
       ORDER REPORT PosNr.SCHEIN
       TO WINDOW 
   END IF 
 ELSE 
   IF alt% = 1 THEN 
     SELECT ;
       WHERE CodeMS.MASTER = CodeMS.SCHEIN AND CodeMS.Master = codems%
       ORDER REPORT PosNr.SCHEIN
       TO PRINTER 
   ELSE 
     SELECT ;
       WHERE CodeMS.MASTER = CodeMS.SCHEIN AND CodeMS.Master = codems% AND Art.SCHEIN = 0
       ORDER REPORT PosNr.SCHEIN
       TO PRINTER 
   END IF 
 END IF 
ErrMSDR: 
 ON ERROR GOTO ErrorHandler
 SELECT KEY codems% FILE "MASTER" INDEX CodeMS.MASTER
 END SUB 
 
  
 
 ' MASTER Auswahl Kopftext/PROLOG
 ' =======================================================================
 
SUB MSKopftext()
 cums% = CodeMS.master
 IF NEW ("MASTER") OR MOD ("MASTER") THEN CALL FStore("MASTER")
 CALL FLSuchen()
 IF cufl% <> 0 THEN 
   SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.master
   IF prolog.Master = "" THEN 
     prolog.Master = Floskel.floskel
   ELSE 
     opt% = 2
     IF prolog.Master <> "" THEN 
       CREATE DIALOG "FLOSKEL",0,0,139,83,title$,"MS Sans Serif",8
       ADD DIALOG "FLOSKEL",4,0,0,138,62,0,""
       ADD DIALOG "FLOSKEL",9,4,13,20,22,2
       ADD DIALOG "FLOSKEL",3,30,17,103,11,0,"vor aktuellem Text einfÅgen",1,opt%
       ADD DIALOG "FLOSKEL",3,30,28,89,12,0,"aktuellen Text ersetzen",2,opt%
       ADD DIALOG "FLOSKEL",3,30,40,103,11,0,"an aktuellen Text anhÑngen",3,opt%
       ADD DIALOG "FLOSKEL",1,13,65,55,14,1,"&Weiter",1,1
       ADD DIALOG "FLOSKEL",1,69,65,55,14,0,"&Abbrechen",0,0
       DIALOG "FLOSKEL",req%
       REMOVE DIALOG "FLOSKEL"
       IF req% = 1 THEN 
         SELECT CASE opt%
         CASE 1
           prolog.Master = Floskel.floskel + CHR$ (13) + CHR$ (10) + prolog.Master
         CASE 2
           prolog.Master = Floskel.floskel
         CASE 3
           prolog.Master = prolog.Master + CHR$ (13) + CHR$ (10) + Floskel.floskel
         END SELECT 
       END IF 
     ELSE 
       prolog.Master = Floskel.floskel
     END IF 
   END IF 
   CALL FStore("MASTER")
 END IF 
 FORM 
 END SUB 
 
 
 ' MASTER Auswahl Fu·text/EPILOG
 ' =======================================================================
 
SUB MSFusstext()
 cums% = CodeMS.master
 IF NEW ("MASTER") OR MOD ("MASTER") THEN CALL FStore("MASTER")
 CALL FLSuchen()
 IF cufl% <> 0 THEN 
   SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.master
   IF epilog.Master = "" THEN 
     epilog.Master = Floskel.floskel
   ELSE 
     opt% = 2
     IF epilog.Master = "" THEN 
       epilog.Master = Floskel.floskel
     ELSE 
       CREATE DIALOG "FLOSKEL",0,0,139,83,title$,"MS Sans Serif",8
       ADD DIALOG "FLOSKEL",4,0,0,138,62,0,""
       ADD DIALOG "FLOSKEL",9,4,13,20,22,2
       ADD DIALOG "FLOSKEL",3,30,17,103,11,0,"vor aktuellem Text einfÅgen",1,opt%
       ADD DIALOG "FLOSKEL",3,30,28,89,12,0,"aktuellen Text ersetzen",2,opt%
       ADD DIALOG "FLOSKEL",3,30,40,103,11,0,"an aktuellen Text anhÑngen",3,opt%
       ADD DIALOG "FLOSKEL",1,13,65,55,14,1,"&Weiter",1,1
       ADD DIALOG "FLOSKEL",1,69,65,55,14,0,"&Abbrechen",0,0
       DIALOG "FLOSKEL",req%
       REMOVE DIALOG "FLOSKEL"
       IF req% = 1 THEN 
         SELECT CASE opt%
         CASE 1
           epilog.Master = Floskel.floskel + CHR$ (13) + CHR$ (10) + epilog.Master
         CASE 2
           epilog.Master = Floskel.floskel
         CASE 3
           epilog.Master = epilog.Master + CHR$ (13) + CHR$ (10) + Floskel.floskel
         END SELECT 
       END IF 
     END IF 
   END IF 
   CALL FStore("MASTER")
 END IF 
 FORM 
 END SUB 
  
SUB MSExport()
 CALL Out2WinWord(CodeMS.MASTER,2)
 END SUB 
 

 
SUB DOKWWold(dok%,opt%)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 SET STATUS "Dokument bearbeiten..."
 cfile$ = FILE 
 cdir$ = DIRECTORY 
 FILE "adressen"
 MOUSE OFF 
 
 IF UCASE$ ( FORM ) = "ADRESSEN" OR UCASE$ ( FORM ) = "ADRPROJ" THEN 
   
   Adresse$ = MakeAdr$(CodeKU.ADRESSEN, - 1,0,0)
   COPY FROM Adresse$
 END IF 
 SELECT KEY vcodema% FILE "SUPERVIS" INDEX CodeMA.supervis
 FILE "DOKUMENT"
 SELECT KEY dok% LOCK FILE "DOKUMENT" INDEX CodeDOK.dokument
 textdatei$ = _netpath$ + Dateiname.dokument
 IF FOUND ("DOKUMENT") THEN 
   CodeMA.dokument = vcodema%
   Bearbeiter.dokument = Nachname.supervis
   letzte_Bearbeit.DOKUMENT = TODAY 
   textdatei$ = _netpath$ + Dateiname.dokument
   REM i% = CALL ("ShellExecute",0,"open","c:\codie\office\text\0w97.doc","","",1)
   IF EXISTS (textdatei$) THEN 
     CALL QuickStore("dokument")
     IF opt% = 3 THEN 
       WAIT FOR 2
       i% = CALL ("ShellExecute",0,"open",textdatei$,"","",1)
       
       REM 140798
       IF w97$ = "TRUE" THEN 
         IF EXISTS ("c:\m97.asc") THEN DELETE "c:\m97.asc"
         OPEN "c:\m97.asc" FOR OUTPUT 
         g$ = CHR$ (34)
         ? "Dim aktDokument$"
         ? "Dim Absatzsteuerung"
         ? "aktDokument$ = WordBasic.[WindowName$]()"
         ? "WordBasic.Aktivate aktDokument$"
         ? "WordBasic.DocMaximize - 1"
         REM ? "BeginnDokument"
         REM ? "EndeDokument 1"
         REM ? FN ansi("DateiDruckenStandard")
         CLOSE OUTPUT 
       ELSE 
         IF EXISTS ("c:\m2.asc") THEN DELETE "c:\m2.asc"
         OPEN "c:\m2.asc" FOR OUTPUT 
         g$ = CHR$ (34)
         ? "aktDokument$ = FensterName$()"
         ? "Aktivieren aktDokument$"
         ? "DokumentMaximieren - 1"
         REM ? "BeginnDokument"
         REM ? "EndeDokument 1"
         ? FN ansi("DateiDruckenStandard")
         CLOSE OUTPUT 
       END IF 
       
       APPACTIVATE "Microsoft Word",""
       DDEINIT 5,"WINWORD","SYSTEM"
       IF win97$ = "TRUE" THEN 
         
         DDEEXEC 5,"[ToolsMacro " + g$ + "DoMakro97.DoCoDIE97" + g$ + ",1]"
       ELSE 
         DDEEXEC 5,"[CALL DoMakro.MAIN " + g$ + "C:\M2.ASC" + g$ + "]"
       END IF 
 
       DDETERM 5
     ELSE 
       REM CALL Fehler ("Appactivat ohne","ShellExecute" + textdatei$)
       IF UCASE$ ( RIGHT$ (textdatei$,3)) = "DOC" THEN 
         MOUSE OFF 
         REM CALL textdatei$
         REM WAIT FOR 3
         REM textdatei$ = "winword.exe " + textdatei$
         REM i% = CALL ("ShellExecute",0,"open","winword.exe","","",1)
         WAIT FOR 2
         i% = CALL ("ShellExecute",0,"open",textdatei$,"","",1)
         MOUSE ON 
       ELSE 
         WAIT FOR 2
         i% = CALL ("ShellExecute",0,"open",textdatei$,"","",1)
       END IF 
     END IF 
     IF i% <= 32 THEN 
       IF (i% = 31) OR (i% = 2) THEN 
         CALL Fehler("Das benîtigte Bearbeitungsprogramm konnte nicht gefunden werden!","Bitte wÑhlen Sie das Bearbeitungsprogramm aus.")
         WordProc$ = "*.EXE"
         REQUEST "Programm fÅr " + UCASE$ ( RIGHT$ (textdatei$,3)) + "-Dateien...","",26,req%,WordProc$
         IF req% = 1 THEN 
           CALL WordProc$ + " " + textdatei$
         END IF 
       END IF 
     END IF 
     IF _projekt$ LIKE "FACTURA" THEN dokfehl% = 0
   ELSE 
     CALL Fehler("Die benîtigte Dokumentendatei konnte nicht gefunden werden!","")
     dokfehl% = 1
   END IF 
 ELSE 
   CALL Fehler("Das entsprechende Dokument konnte nicht gefunden werden!","Es wurde wahrscheinlich innerhalb der Dokumentenverwaltung gelîscht.")
   IF _projekt$ LIKE "FACTURA" THEN 
     CALL DFile(3,"MASTER" + _fpw$)
     FILE "master"
     IF EXISTS (dok%,codedok.MASTER) THEN 
       INDEX codedok.master
       SELECT FIRST 
       SELECT KEY dok% LOCK FILE "master" INDEX CodeDOK.master
       codedok.master = 0
       CALL Fehler("Beim nÑchsten Aufruf der Winwordausgabe wird ein neues Dokument angelegt!","")
       CALL QuickStore("master")
       dokfehl% = 1
     END IF 
   END IF 
 END IF 
 MOUSE ON 
 FILE cfile$
 DIRECTORY cdir$
 END SUB 
 


 ' zieldru%=2 nur WÑhrung
 ' zieldru%=4 nur Euro
 ' zieldru%=5 WÑhrung+Euro
 REM ziel%=3 auf Drucker
 
SUB Out2WinWold(codems%,zieldru%)
 opt% = zieldru%
 cums% = codems%
 IF UCASE$ ( FORM ) LIKE "Mahnung*" THEN 
   art% = 6
   abdatei$ = "MAHNUNG"
 ELSE 
   art% = art.master
   abdatei$ = "MASTER"
 END IF 
 IF NEW (abdatei$) OR MOD (abdatei$) THEN CALL QuickStore(abdatei$)
 SELECT FORM KEY cums% LOCK FILE abdatei$ INDEX codems.abdatei$
 SELECT KEY cums% LOCK FILE abdatei$ INDEX codems.abdatei$
 knr% = codeku.abdatei$
 zweitwaehr$ = Waehrung.abdatei$
 IF zweitwaehr$ = "" THEN zweitwaehr$ = waehrung.stamm
 REM IF UCASE$ (zweitwaehr$) LIKE "÷S" THEN 
   REM zweitwaehr$ = "îS"
 REM END IF 
 REM CALL Fehler("Out2WinWold-linksrechts-Dialog","")
 IF art% <> 6 THEN 
   CALL MSCHRabattProz()
   CALL MSCHRabatt()
   FILE "master"
   IF art.master = 4 THEN 
     titel.master = "AuftragsbestÑtigung"
     CALL QuickStore("master")
   END IF 
   SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
   SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 END IF 
 RabattText$ = ""
 IF art% <> 6 AND (skonto.abdatei$ > 0 OR skontoEU.abdatei$ > 0) THEN 
   RabattText$ = ""
   summezahl% = GesBrutto.abdatei$ - Skonto.abdatei$
   s1ges$ = STR$ (GesBrutto.abdatei$,",999999999.00")
   s2sk$ = STR$ (Skonto.abdatei$,",999999999.00")
   summezahl% = VAL (s1ges$) - VAL (s2sk$)
   summezahl$ = LTRIM$ ( STR$ (Summezahl%," ,9999999999.00"))
   skontoproz$ = LTRIM$ ( STR$ (SkontoProz.abdatei$,"999.00"))
   skonto$ = LTRIM$ ( STR$ (Skonto.abdatei$," ,9999999999.00"))
   gesbrut$ = LTRIM$ ( STR$ (GesBrutto.abdatei$," ,9999999999.00"))
   z1$ = "bei Zahlung bis zum " + DATE$ (skontoziel.abdatei$,"dd.mm.yyyy") + " gewÑhren wir ein Skonto von "
   w$ = waehrung.abdatei$
   RabattText$ = z1$ + skontoproz$ + " % (Betrag: " + skonto$ + " " + w$ + "), auf  " + gesbrut$ + " " + w$ + CHR$ (13) + "zu zahlende Summe: " + summezahl$ + " " + w$

   summezahlEU% = GesBruttoEU.abdatei$ - SkontoEU.abdatei$
   s1ges$ = STR$ (GesBruttoEU.abdatei$,",999999999.00")
   s2sk$ = STR$ (SkontoEU.abdatei$,",999999999.00")
   summezahlEU% = VAL (s1ges$) - VAL (s2sk$)
   summezahlEU$ = LTRIM$ ( STR$ (SummezahlEU%," ,9999999999.00"))
   skontoEU$ = LTRIM$ ( STR$ (SkontoEU.abdatei$," ,9999999999.00"))
   gesbrutEU$ = LTRIM$ ( STR$ (GesBruttoEU.abdatei$," ,9999999999.00"))
   RabattTextEU$ = z1$ + skontoproz$ + " % (Betrag: " + skontoEu$ + "EUR), auf  " + gesbrutEu$ + " EUR" + CHR$ (13) + "zu zahlende Summe: " + summezahlEU$ + " EUR"
 ELSE 
   RabattText$ = ""
   RabattTextEU$ = ""
 END IF 
 
 REM Nettofakturierung
   IF art% <> 6 AND (rabatt.abdatei$ <> 0 OR rabattproz.abdatei$) <> 0 THEN 
     IF rabattart.abdatei$ = 0 THEN 
     REM Rabatt auf Netto
       Zeile1$ = "Summe Netto:"
       WertZeile1$ = LTRIM$ ( STR$ (PreisNetto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile1EU$ = LTRIM$ ( STR$ (PreisNettoEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile2$ = "abzÅglich Rabatt von " + STR$ (Rabattproz.abdatei$,"999.000") + "% auf Summe Netto"
       WertZeile2$ = "-" + LTRIM$ ( STR$ (Rabatt.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile2EU$ = "-" + LTRIM$ ( STR$ (RabattEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile3$ = "Summe Netto abzÅglich Rabatt"
       WertZeile3$ = LTRIM$ ( STR$ (GesNetto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile3EU$ = LTRIM$ ( STR$ (GesNettoEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile4$ = MWSTText$
       WertZeile4$ = MWSTBetrag$ + " " + (zweitwaehr$)
       WertZeile4EU$ = MWSTBetragEU$ + " EUR"
       Zeile5$ = "Gesamtsumme"
       Summegesbrutto% = VAL ( STR$ (gesnetto.abdatei$,",999999999.00")) + VAL ( STR$ (mwstBetrag1%,",999999999.00"))
       WertZeile5$ = LTRIM$ ( STR$ (Summegesbrutto%,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile5$ = LTRIM$ ( STR$ (Summegesbrutto%,",9999999999.00")) + " " + (zweitwaehr$)
       SummegesbrutEu% = VAL ( STR$ (gesnettoEu.abdatei$,",999999999.00")) + VAL ( STR$ (mwstBetrag1EU%,",999999999.00"))
       WertZeile5EU$ = LTRIM$ ( STR$ (SummegesbrutEU%,",9999999999.00")) + " EUR"
     ELSE 
     REM Rabatt auf Brutto
       Zeile1$ = "Summe Netto:"
       WertZeile1$ = LTRIM$ ( STR$ (PreisNetto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile1EU$ = LTRIM$ ( STR$ (PreisNettoEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile2$ = MWSTText$
       WertZeile2$ = MWSTBetrag$ + " " + (zweitwaehr$)
       WertZeile2EU$ = MWSTBetragEU$ + " EUR"
       Zeile3$ = "Summe Brutto"
       WertZeile3$ = LTRIM$ ( STR$ (PreisBrutto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile3EU$ = LTRIM$ ( STR$ (PreisBruttoEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile4$ = "abzÅglich Rabatt von " + STR$ (Rabattproz.abdatei$,"999.000") + "% auf Summe Brutto"
       WertZeile4$ = LTRIM$ ( STR$ (Rabatt.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile4EU$ = LTRIM$ ( STR$ (RabattEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile5$ = "Gesamtsumme"
       WertZeile5$ = LTRIM$ ( STR$ (GesBrutto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile5EU$ = LTRIM$ ( STR$ (GesBruttoEU.abdatei$,",9999999999.00")) + " EUR"
     END IF 
   ELSE 
     REM ohne Rabatt
     IF art% <> 6 THEN 
       Zeile3$ = "Summe Netto:"
       WertZeile3$ = LTRIM$ ( STR$ (PreisNetto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile3EU$ = LTRIM$ ( STR$ (PreisNettoEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile4$ = MWSTText$
       WertZeile4$ = MWSTBetrag$ + " " + (zweitwaehr$)
       WertZeile4EU$ = MWSTBetragEU$ + " EUR"
       Zeile1$ = ""
       WertZeile1$ = ""
       WertZeile1EU$ = ""
       Zeile2$ = ""
       WertZeile2$ = ""
       WertZeile2EU$ = ""
       Zeile5$ = "Gesamtsumme"
       REM 011198 WertZeile5$ = LTRIM$ ( STR$ (GesBrutto.abdatei$,",9999999999.00")) + " " + FN ibm(zweitwaehr$)
       WertZeile5$ = LTRIM$ ( STR$ (GesBrutto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile5EU$ = LTRIM$ ( STR$ (GesBruttoEU.abdatei$,",9999999999.00")) + " EUR"
     ELSE 
       Zeile3$ = "Rechnungssumme Netto:   "
       WertZeile3$ = LTRIM$ ( STR$ (GesNetto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile3EU$ = LTRIM$ ( STR$ (GesNettoEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile4$ = MWSTText$
       WertZeile4$ = MWSTBetrag$ + " " + (zweitwaehr$)
       WertZeile4EU$ = MWSTBetragEU$ + " EUR"
       Zeile1$ = ""
       WertZeile1$ = ""
       WertZeile1EU$ = ""
       Zeile2$ = ""
       WertZeile2$ = ""
       WertZeile2EU$ = ""
       Zeile5$ = "Rechnungssumme Brutto:  "
       REM 011198 WertZeile5$ = LTRIM$ ( STR$ (GesBrutto.abdatei$,",9999999999.00")) + " " + FN ibm(zweitwaehr$)
       WertZeile5$ = LTRIM$ ( STR$ (GesBrutto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile5EU$ = LTRIM$ ( STR$ (GesBruttoEU.abdatei$,",9999999999.00")) + " EUR"
     END IF 
   END IF 
 END IF 
 REM CALL Fehler("TEST","")
 IF art% <> 6 AND kalkart.abdatei$ <> 0 THEN 
 REM Bruttofakturierung
   IF (rabatt.abdatei$ <> 0 OR rabattproz.abdatei$ <> 0) THEN 
   REM Rabatt gegeben
     IF rabattart.abdatei$ = 0 THEN 
     REM Rabatt auf Netto gegeben, darf nicht sein
     CALL Fehler("Sie dÅrfen bei einer Bruttofakturierung keinen Rabatt auf die Nettosumme geben!","Bitte Ñndern!")
       Zeile1$ = ""
       WertZeile1$ = ""
       WertZeile1EU$ = ""
       Zeile2$ = ""
       WertZeile2$ = ""
       WertZeile2EU$ = ""
       Zeile3$ = ""
       WertZeile3$ = ""
       WertZeile3EU$ = ""
       Zeile4$ = "Gesamtsumme"
       WertZeile4$ = LTRIM$ ( STR$ (GesBrutto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile4EU$ = LTRIM$ ( STR$ (GesBruttoEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile5$ = MWSTText$
       Zeile5EU$ = MWSTTextEU$
       WertZeile5$ = ""
       WertZeile5EU$ = ""
     ELSE 
       Zeile1$ = "Summe Brutto"
       WertZeile1$ = LTRIM$ ( STR$ (PreisBrutto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile1EU$ = LTRIM$ ( STR$ (PreisBruttoEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile2$ = "abzÅglich Rabatt von " + STR$ (Rabattproz.abdatei$,"999.000") + "% auf Summe Brutto"
       WertZeile2$ = "-" + LTRIM$ ( STR$ (Rabatt.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile2EU$ = "-" + LTRIM$ ( STR$ (RabattEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile3$ = ""
       WertZeile3$ = ""
       WertZeile3EU$ = ""
       Zeile4$ = "Gesamtsumme"
       WertZeile4$ = LTRIM$ ( STR$ (GesBrutto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile4EU$ = LTRIM$ ( STR$ (GesBruttoEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile5$ = MWSTText$
       Zeile5EU$ = MWSTTextEU$
       WertZeile5$ = ""
       WertZeile5EU$ = ""
     END IF 
   ELSE 
     Zeile1$ = ""
     WertZeile1$ = ""
     WertZeile1EU$ = ""
     Zeile2$ = ""
     WertZeile2$ = ""
     WertZeile2EU$ = ""
     Zeile3$ = ""
     WertZeile3$ = ""
     WertZeile3EU$ = ""
     Zeile4$ = "Gesamtsumme"
     WertZeile4$ = LTRIM$ ( STR$ (GesBrutto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
     WertZeile4EU$ = LTRIM$ ( STR$ (GesBruttoEU.abdatei$,",9999999999.00")) + " EUR"
     Zeile5$ = MWSTText$
     Zeile5EU$ = MWSTTextEU$
     WertZeile5$ = ""
     WertZeile5EU$ = ""
   END IF 
 END IF 
 
 
 
 
 
 IF art.abdatei$ <> 5 THEN 
   kundennr$ = "Kundennummer: " + Kundennummer.abdatei$
   IF DEFA$ = "MEGA" THEN 
     IF Kostenstelle.abdatei$ <> 0 THEN kundennr$ = "Kostenstelle: " + STR$ (Kostenstelle.abdatei$,"000000")
     IF KostentrÑger.abdatei$ <> "" THEN kundennr$ = "KostentrÑger: " + KostentrÑger.abdatei$
   END IF 
 ELSE 
   kundennr$ = "unsere Kundennummer: " + Kundennummer.abdatei$
 END IF 
 
  
 REM ** Anzeige von Alternativpositionen ein/ausschalten ** 
 SELECT CASE MSArt%
 CASE 1
   alt% = 1
 CASE 2
   alt% = 0
 CASE 3
   alt% = 0
 CASE 4
   alt% = 0
 CASE 5
   alt% = 0
 END SELECT 
 
 REM ** Ausgabe nach WinWord 6 **
 
 
 SELECT KEY codems% FILE abdatei$ INDEX CodeMS.abdatei$
 SET ANSICONVERT ON 
 IF UCASE$ ( FORM ) LIKE "Mahnung*" THEN 
   art% = 6
   abdatei$ = "MAHNUNG"
 ELSE 
   art% = art.abdatei$
   abdatei$ = "MASTER"
 END IF 
 IF w97$ = "TRUE" THEN 
   IF EXISTS ("c:\m97.asc") THEN DELETE "c:\m97.asc"
   OPEN "c:\m97.asc" FOR OUTPUT 
 ELSE 
   IF EXISTS ("c:\m2.asc") THEN DELETE "c:\m2.asc"
   OPEN "c:\m2.asc" FOR OUTPUT 
 END IF 
 g$ = CHR$ (34)
 SELECT FIRST FILE "stamm"
 wleernachPro% = WLeerNachProlog.stamm
 IF wleernachPro% < 0 OR wleernachPro% > 100 THEN wleernachPro% = 0
 wleernachKu% = WLeerNachKnr.stamm
 IF wleernachKu% < 0 OR wleernachKu% > 100 THEN wleernachKu% = 0
 wleernachAdr% = WLeernachAdr.stamm
 IF wleernachAdr% < 0 OR wleernachAdr% > 100 THEN wleernachAdr% = 1
 wleerVorAdr% = WLeerVorADR.stamm
 IF wleerVorAdr% < 0 OR wleerVorAdr% > 100 THEN wleerVorAdr% = 1
 wstitel% = WSTitel.stamm
 IF wstitel% < 4 OR wstitel% > 35 THEN wstitel% = 12
 wskund% = WSKundennr.stamm
 IF wskund% < 4 OR wskund% > 35 THEN wskund% = 10

 wsrest% = WSRest.stamm
 IF wsRest% < 4 OR wsRest% > 35 THEN wsRest% = 9
 wspro% = WSProlog.stamm
 IF wspro% < 4 OR wspro% > 35 THEN wspro% = 9
 wsepilog% = WSEpilog.stamm
 IF wsepilog% < 4 OR wsepilog% > 35 THEN wsepilog% = 9
 wssum% = WSSumme.stamm
 IF wssum% < 4 OR wssum% > 35 THEN wssum% = 10
 wstabko% = WSTabellenKopf.stamm
 IF wstabko% < 4 OR wstabko% > 35 THEN wstabko% = 10
 wsadr% = WSAdresse.stamm
 IF wsadr% < 4 OR wsadr% > 35 THEN wsadr% = 10
 IF w97$ = "TRUE" THEN 
   wstabko$ = "WordBasic.FontSize " + STR$ (wstabko%,"99")
   wsepilog$ = "WordBasic.FontSize " + STR$ (wsepilog%,"99")
   wssum$ = "WordBasic.FontSize " + STR$ (wssum%,"99")
   wssu$ = STR$ (wssum%,"99")
   wsadr$ = "WordBasic.FontSize " + STR$ (wsadr%,"99")
   wst$ = STR$ (wstitel%,"99")
   wstitel$ = "WordBasic.FontSize " + wst$
   wsk$ = STR$ (wskund%,"99")
   wskund$ = "WordBasic.FontSize " + wsk$
   wspro$ = "WordBasic.FontSize " + STR$ (wspro%,"99")
   wsr$ = STR$ (wsrest%,"99")
   wsrest$ = "WordBasic.FontSize " + wsr$
 ELSE 
   wstabko$ = "Schriftgrad " + STR$ (wstabko%,"99")
   wsepilog$ = "Schriftgrad " + STR$ (wsepilog%,"99")
   wssum$ = "Schriftgrad " + STR$ (wssum%,"99")
   wssu$ = STR$ (wssum%,"99")
   wsadr$ = "Schriftgrad " + STR$ (wsadr%,"99")
   wst$ = STR$ (wstitel%,"99")
   wstitel$ = "Schriftgrad " + wst$
   wsk$ = STR$ (wskund%,"99")
   wskund$ = "Schriftgrad " + wsk$
   wspro$ = "Schriftgrad " + STR$ (wspro%,"99")
   wsr$ = STR$ (wsrest%,"99")
   wsrest$ = "Schriftgrad " + wsr$
 END IF 
 IF w97$ = "TRUE" THEN 
   ? "Dim aktDokument$"
   REM ? "Dim Absatzsteuerung"
   ? "aktDokument$=WordBasic.[WindowName$]()"
   ? "WordBasic.DocMaximize - 1"
   ? "WordBasic.StartOfDocument"
   ? "WordBasic.EndOfDocument 1"
   ? "WordBasic.EditClear"
 ELSE 
   ? "aktDokument$ = FensterName$()"
   ? "Aktivieren aktDokument$"
   ? "DokumentMaximieren - 1"
   ? "BeginnDokument"
   ? "EndeDokument 1"
   ? FN ansi("BearbeitenLîschen")
 END IF 
 IF wleervoradr% > 0 THEN 
   FOR i% = 0 TO wleervoradr%
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen CHR$ (13)")
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert Chr(13)"
   NEXT i%
 END IF 
 IF w97$ <> "TRUE" THEN ? FN ansi("Absatzsteuerung = 0")
 
 ? FN ansi(wsadr$)
 REM 280498 Adresse in Fett
 REM CALL Fehler("Winwordtest","")
 AdresseBold$ = UCASE$ (ReadConfig$("FACTURA","WAdresseBold"))
 IF w97$ = "TRUE" AND AdresseBold$ = "TRUE" THEN 
   ? "WordBasic.Bold"
 END IF 
 Adresse$ = Adresstext.abdatei$
 IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$);
 IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$;
 besch$ = ""
 b% = 0
 FOR a% = 1 TO LEN (Adresse$)
   t$ = MID$ (Adresse$,a%,1)
   IF ASC (t$) = 13 THEN 
     besch$ = besch$ + g$ + " + chr$(13) + " + g$
   ELSE 
     IF ASC (t$) = 34 THEN 
       besch$ = besch$ + g$ + " + chr$(34) + " + g$
     ELSE 
       IF ASC (t$) <> 10 THEN besch$ = besch$ + t$
     END IF 
   END IF 
   b% = b% + 1
   IF b% = 255 THEN 
     ? FN ansi(besch$ + g$)
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$);
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$;
     besch$ = ""
     b% = 0
   END IF 
 NEXT a%
 REM andi burzer ? FN ansi(besch$ + g$ + " +chr$(13) + chr$(13) + chr$(13)")
 REM CALL Fehler("test","")
 ? FN ansi(besch$ + g$ + " +chr$(13)")
 IF w97$ = "TRUE" AND AdresseBold$ = "TRUE" THEN 
   ? "WordBasic.Bold "
 END IF 
 IF wleernachadr% > 0 THEN 
   FOR i% = 0 TO wleernachAdr%
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen chr$(13)")
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert Chr(13)"
   NEXT i%
 END IF 
 REM IF w97$ <> "TRUE" THEN ? "AbsatzRechts"
 REM IF w97$ = "TRUE" THEN ? "WordBasic.RightPara"
 REM andi burzer ? FN ansi("EinfÅgen " + g$ + DATE$ (datum.abdatei$,"dd. mmmm yyyy") + g$ + " + CHR$ (13) + CHR$ (13)")
 IF art% <> 6 THEN 
   IF w97$ <> "TRUE" THEN ? "AbsatzRechts"
   IF w97$ = "TRUE" THEN ? "WordBasic.RightPara"
   IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + DATE$ (datum.abdatei$,"0d.mm.yyyy") + g$ + " + CHR$ (13)")
   IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + DATE$ (datum.abdatei$,"0d.mm.yyyy") + g$ + " + CHR(13)"
   REM andi burzer ? "FormatZeichen .Punkt = " + g$ + "20" + g$ + ",.Fett = 1,.Kursiv = 1"
   IF w97$ <> "TRUE" THEN ? "FormatZeichen .Punkt = " + g$ + wst$ + g$ + ",.Fett = 1,.Kursiv = 1"
   IF w97$ = "TRUE" THEN ? "WordBasic.FormatFont Points:=" + g$ + wst$ + g$ + ",Bold:=1,Italic:=1"
 
   IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + FN ansi(Titel.abdatei$) + g$ + " + CHR$ (13)")
   IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + FN ansi(Titel.abdatei$) + g$ + " + CHR(13)"
 ELSE 
   REM IF w97$ <> "TRUE" THEN ? "FormatZeichen .Punkt = " + g$ + wst$ + g$ + ",.Fett = 1,.Kursiv = 0"
   REM IF w97$ = "TRUE" THEN ? "WordBasic.FormatFont Points:=" + g$ + wst$ + g$ + ",Bold:=1,Italic:=0"
   IF w97$ <> "TRUE" THEN ? "AbsatzRechts"
   IF w97$ = "TRUE" THEN ? "WordBasic.RightPara"
   IF PAGE = 1 THEN 
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + DATE$ (Mahndatum1.abdatei$,"0d.mm.yyyy") + g$ + " + CHR$ (13)")
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + DATE$ (Mahndatum1.abdatei$,"0d.mm.yyyy") + g$ + " + CHR(13)"
     IF w97$ <> "TRUE" THEN ? "AbsatzLinks"
     IF w97$ = "TRUE" THEN ? "WordBasic.LeftPara"
     IF w97$ <> "TRUE" THEN ? "FormatZeichen .Punkt = " + g$ + wst$ + g$ + ",.Fett = 1,.Kursiv = 0"
     IF w97$ = "TRUE" THEN ? "WordBasic.FormatFont Points:=" + g$ + wst$ + g$ + ",Bold:=1,Italic:=0"
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + FN ansi("1. Mahnung zur ") + g$ + "  ")
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + FN ansi("1. Mahnung zur ") + g$ + " "
   END IF 
   IF PAGE = 2 THEN 
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + DATE$ (Mahndatum2.abdatei$,"0d.mm.yyyy") + g$ + " + CHR$ (13)")
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + DATE$ (Mahndatum2.abdatei$,"0d.mm.yyyy") + g$ + " + CHR(13)"
     IF w97$ <> "TRUE" THEN ? "AbsatzLinks"
     IF w97$ = "TRUE" THEN ? "WordBasic.LeftPara"
     IF w97$ <> "TRUE" THEN ? "FormatZeichen .Punkt = " + g$ + wst$ + g$ + ",.Fett = 1,.Kursiv = 0"
     IF w97$ = "TRUE" THEN ? "WordBasic.FormatFont Points:=" + g$ + wst$ + g$ + ",Bold:=1,Italic:=0"
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + FN ansi("2. Mahnung zur ") + g$ + " ")
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + FN ansi("2. Mahnung zur ") + g$ + " "
   END IF 
   IF PAGE = 3 THEN 
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + DATE$ (Mahndatum3.abdatei$,"0d.mm.yyyy") + g$ + " + CHR$ (13)")
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + DATE$ (Mahndatum3.abdatei$,"0d.mm.yyyy") + g$ + " + CHR(13)"
     IF w97$ <> "TRUE" THEN ? "AbsatzLinks"
     IF w97$ = "TRUE" THEN ? "WordBasic.LeftPara"
     IF w97$ <> "TRUE" THEN ? "FormatZeichen .Punkt = " + g$ + wst$ + g$ + ",.Fett = 1,.Kursiv = 0"
     IF w97$ = "TRUE" THEN ? "WordBasic.FormatFont Points:=" + g$ + wst$ + g$ + ",Bold:=1,Italic:=0"
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + FN ansi("3. Mahnung zur ") + g$ + " ")
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + FN ansi("3. Mahnung zur ") + g$ + " "
   END IF 
   IF PAGE = 4 THEN 
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + DATE$ (Mahndatum4.abdatei$,"0d.mm.yyyy") + g$ + " + CHR$ (13)")
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + DATE$ (Mahndatum4.abdatei$,"0d.mm.yyyy") + g$ + " + CHR(13)"
     IF w97$ <> "TRUE" THEN ? "AbsatzLinks"
     IF w97$ = "TRUE" THEN ? "WordBasic.LeftPara"
     IF w97$ <> "TRUE" THEN ? "FormatZeichen .Punkt = " + g$ + wst$ + g$ + ",.Fett = 1,.Kursiv = 0"
     IF w97$ = "TRUE" THEN ? "WordBasic.FormatFont Points:=" + g$ + wst$ + g$ + ",Bold:=1,Italic:=0"
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + FN ansi("4. Mahnung zur ") + g$ + " ")
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + FN ansi("4. Mahnung zur ") + g$ + " "
   END IF 
   IF PAGE = 5 THEN 
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + DATE$ (Mahndatum5.abdatei$,"0d.mm.yyyy") + g$ + " + CHR$ (13)")
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + DATE$ (Mahndatum5.abdatei$,"0d.mm.yyyy") + g$ + " + CHR(13)"
     IF w97$ <> "TRUE" THEN ? "AbsatzLinks"
     IF w97$ = "TRUE" THEN ? "WordBasic.LeftPara"
     IF w97$ <> "TRUE" THEN ? "FormatZeichen .Punkt = " + g$ + wst$ + g$ + ",.Fett = 1,.Kursiv = 0"
     IF w97$ = "TRUE" THEN ? "WordBasic.FormatFont Points:=" + g$ + wst$ + g$ + ",Bold:=1,Italic:=0"
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + FN ansi("5. Mahnung zur ") + g$ + " ")
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + FN ansi("5. Mahnung zur ") + g$ + " "
   END IF 
 END IF 
 IF art% <> 6 THEN 
   IF w97$ <> "TRUE" THEN ? "FormatZeichen .Punkt = " + g$ + wsk$ + g$ + ",.Fett = 0,.Kursiv = 0"
   IF w97$ = "TRUE" THEN ? "WordBasic.FormatFont Points:=" + g$ + wsk$ + g$ + ",Bold:=0,Italic:=0"
   IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + "Belegnummer: " + Nummer.abdatei$ + g$ + " + CHR$ (13)")
   IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + "Belegnummer: " + Nummer.abdatei$ + g$ + " + CHR(13)"
 ELSE 
   nrab$ = Nummer.abdatei$ + " vom " + DATE$ (datum.abdatei$,"0d.mm.yyyy")
   IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + "Rechnung: " + Nrab$ + g$ + " + CHR$ (13)")
   IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + "Rechnung: " + nrab$ + g$ + " + CHR(13)"
   IF w97$ <> "TRUE" THEN ? "FormatZeichen .Punkt = " + g$ + wsk$ + g$ + ",.Fett = 0,.Kursiv = 0"
   IF w97$ = "TRUE" THEN ? "WordBasic.FormatFont Points:=" + g$ + wsk$ + g$ + ",Bold:=0,Italic:=0"
 END IF 
 ? FN ansi(wskund$)
 IF art% <> 6 THEN 
   IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + "Kundennummer: " + Kundennummer.abdatei$ + g$ + " + CHR$ (13)")
   IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + "Kundennummer: " + Kundennummer.abdatei$ + g$ + " + CHR(13)"
 END IF 
 IF w97$ <> "TRUE" THEN ? FN ansi("AbsatzLinks :EinfÅgenAbsatz")
 IF w97$ = "TRUE" THEN ? "WordBasic.LeftPara: WordBasic.InsertPara"
 IF wleernachKU% > 0 THEN 
   FOR i% = 0 TO wleernachKu%
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen chr$(13)")
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert Chr(13)"
   NEXT i%
 END IF 
 ? FN ansi(wspro$)
 IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$);
 IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$;
 besch$ = ""
 b% = 0
 IF art.abdatei$ = 7 AND oldRENr.abdatei$ <> "" AND art% <> 6 THEN 
   globalgutschr$ = oldRENr.abdatei$
   prolog$ = "Gutschrift von: " + oldRENr.abdatei$
 END IF 
 IF ProjectJN$ = "TRUE" THEN 
   IF codepr.abdatei$ > 0 THEN 
     IF art% <> 6 THEN 
       IF prolog$ = "" THEN 
         prolog$ = "Projekt: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog.abdatei$
       ELSE 
         prolog$ = prolog$ + " /" + "Projekt: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog.abdatei$
       END IF 
     ELSE 
       IF PAGE = 1 THEN prolog$ = "Projekt: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog1.abdatei$
       IF PAGE = 2 THEN prolog$ = "Projekt: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog2.abdatei$
       IF PAGE = 3 THEN prolog$ = "Projekt: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog3.abdatei$
       IF PAGE = 4 THEN prolog$ = "Projekt: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog4.abdatei$
       IF PAGE = 5 THEN prolog$ = "Projekt: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog5.abdatei$
     END IF 
   ELSE 
     IF art% <> 6 THEN 
       IF prolog$ = "" THEN 
         prolog$ = Prolog.abdatei$
       ELSE 
         IF prolog.abdatei$ <> "" THEN 
           prolog$ = prolog$ + " / " + Prolog.abdatei$
         END IF 
       END IF 
     ELSE 
       IF PAGE = 1 THEN prolog$ = Prolog1.abdatei$
       IF PAGE = 2 THEN prolog$ = Prolog2.abdatei$
       IF PAGE = 3 THEN prolog$ = Prolog3.abdatei$
       IF PAGE = 4 THEN prolog$ = Prolog4.abdatei$
       IF PAGE = 5 THEN prolog$ = Prolog5.abdatei$
     END IF 
   END IF 
 ELSE 
   IF art% <> 6 THEN 
     prolog$ = Prolog.abdatei$
   ELSE 
     IF PAGE = 1 THEN prolog$ = Prolog1.abdatei$
     IF PAGE = 2 THEN prolog$ = Prolog2.abdatei$
     IF PAGE = 3 THEN prolog$ = Prolog3.abdatei$
     IF PAGE = 4 THEN prolog$ = Prolog4.abdatei$
     IF PAGE = 5 THEN prolog$ = Prolog5.abdatei$
   END IF 
 END IF 
 FOR a% = 1 TO LEN (prolog$)
   t$ = MID$ (prolog$,a%,1)
   IF ASC (t$) = 13 THEN 
     besch$ = besch$ + g$ + " + chr$(13) + " + g$
   ELSE 
     IF ASC (t$) = 34 THEN 
       besch$ = besch$ + g$ + " + chr$(34) + " + g$
     ELSE 
       IF ASC (t$) <> 10 THEN besch$ = besch$ + t$
     END IF 
   END IF 
   b% = b% + 1
   IF b% = 255 THEN 
     ? FN ansi(besch$ + g$)
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$);
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$;
     besch$ = ""
     b% = 0
   END IF 
 NEXT a%
 REM andi burzer ? FN ansi(besch$ + g$ + " + chr$(13) + chr$(13)")
 IF w97$ <> "TRUE" THEN ? FN ansi(besch$ + g$ + " + chr$(13)")
 IF w97$ = "TRUE" THEN ? FN ansi(besch$ + g$ + " + Chr(13)")
 IF wleernachpro% > 0 THEN 
   FOR i% = 0 TO wleernachpro%
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen chr$(13)")
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert Chr(13)"
   NEXT i%
 END IF 
 IF art% = 6 THEN GOTO DruMahn981112


 IF w97$ <> "TRUE" THEN ? FN ansi("TabelleTabelleEinfÅgen .AnzSpalten = " + g$ + "6" + g$ + ",.AnzTabZeilen = " + g$ + "1" + g$)
 IF w97$ = "TRUE" THEN ? "WordBasic.TableInsertTable NumColumns:=" + g$ + "6" + g$ + ",NumRows:= " + g$ + "1" + g$
 
 IF w97$ <> "TRUE" THEN ? FN ansi("TabelleSpaltenBreite .SpaltenBreite = " + g$ + "0,88 cm" + g$ + ",.NÑchsteSpalte")
 IF w97$ = "TRUE" THEN ? "WordBasic.TableColumnWidth ColumnWidth:=" + g$ + "0,88 cm" + g$ + ",NextColumn:=1"
 
 IF w97$ <> "TRUE" THEN ? FN ansi("TabelleSpaltenBreite .SpaltenBreite = " + g$ + "1,60 cm" + g$ + ",.NÑchsteSpalte")
 IF w97$ = "TRUE" THEN ? "WordBasic.TableColumnWidth ColumnWidth:=" + g$ + "1,60 cm" + g$ + ",NextColumn:=1"
 
 IF w97$ <> "TRUE" THEN ? FN ansi("TabelleSpaltenBreite .SpaltenBreite = " + g$ + "1,8 cm" + g$ + ",.NÑchsteSpalte")
 IF w97$ = "TRUE" THEN ? "WordBasic.TableColumnWidth ColumnWidth:=" + g$ + "1,8 cm" + g$ + ",NextColumn:=1"
 REM ? FN ansi("TabelleSpaltenBreite .SpaltenBreite = " + g$ + "7,5 cm" + g$ + ",.NÑchsteSpalte")
 
 IF w97$ <> "TRUE" THEN ? FN ansi("TabelleSpaltenBreite .SpaltenBreite = " + g$ + "7,5 cm" + g$ + ",.NÑchsteSpalte")
 IF w97$ = "TRUE" THEN ? "WordBasic.TableColumnWidth ColumnWidth:=" + g$ + "7,5 cm" + g$ + ",NextColumn:=1"
 
 IF w97$ <> "TRUE" THEN ? FN ansi("TabelleSpaltenBreite .SpaltenBreite = " + g$ + "2,59 cm" + g$ + ",.NÑchsteSpalte")
 IF w97$ = "TRUE" THEN ? "WordBasic.TableColumnWidth ColumnWidth:=" + g$ + "2,59 cm" + g$ + ",NextColumn:=1"
 
 IF w97$ <> "TRUE" THEN ? "TabelleSpaltenBreite .SpaltenBreite = " + g$ + "2,33 cm" + g$
 IF w97$ = "TRUE" THEN ? "WordBasic.TableColumnWidth ColumnWidth:=" + g$ + "2,33 cm" + g$
 IF w97$ <> "TRUE" THEN ? "ZeileUnten 1"
 IF w97$ = "TRUE" THEN ? "WordBasic.LineDown 1"
 IF w97$ <> "TRUE" THEN ? FN ansi("TabelleZeileEinfÅgen .AnzTabZeilen = " + g$ + "1" + g$)
 IF w97$ = "TRUE" THEN ? "WordBasic.TableInsertRow NumRows:=" + g$ + "1" + g$
 IF w97$ <> "TRUE" THEN ? "ZeileOben 1"
 IF w97$ = "TRUE" THEN ? "WordBasic.LineUp 1"
 IF w97$ <> "TRUE" THEN ? "TabelleZeileMarkieren"
 IF w97$ = "TRUE" THEN ? "WordBasic.TableSelectRow"
 IF w97$ <> "TRUE" THEN ? "FormatRahmenSchattierung .AnwendenAuf = 2,.schattiert = 0,.ObenRahmenlinie = 1,.LinksRahmenlinie = 1,.UntenRahmenlinie = 1,.RechtsRahmenlinie = 1"
 IF w97$ = "TRUE" THEN ? "WordBasic.FormatBordersAndShading ApplyTo:=2, Shadow:=0, TopBorder:=1, LeftBorder:=1, BottomBorder:=1, RightBorder:=1"
 IF w97$ <> "TRUE" THEN ? FN ansi("Tabelleöberschriften")
 IF w97$ = "TRUE" THEN ? "WordBasic.TableHeadings"
 ? FN ansi(wstabko$)
 IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + "Pos." + g$ + ":NÑchsteZelle")
 IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + "Pos." + g$ + " :WordBasic.NextCell"
 IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + "Anzahl" + g$ + ":NÑchsteZelle")
 IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + "Anzahl" + g$ + " :WordBasic.NextCell"
 IF mwstcount% <> 1 THEN 
   IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + "ME/MwSt" + g$ + ":NÑchsteZelle")
   IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + "ME/MwSt" + g$ + " :WordBasic.NextCell"
 ELSE 
   IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + "ME" + g$ + ":NÑchsteZelle")
   IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + "ME" + g$ + " :WordBasic.NextCell"
 END IF 
 IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + "Artikel / Leistung" + g$ + ":NÑchsteZelle")
 IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + "Artikel / Leistung" + g$ + " :WordBasic.NextCell"
 IF w97$ <> "TRUE" THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + "Einzelpreis" + g$ + ":NÑchsteZelle")
 IF w97$ = "TRUE" THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + "Einzelpreis" + g$ + " :WordBasic.NextCell"
 IF w97$ <> "TRUE" THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + "Gesamtpreis" + g$ + ":NÑchsteZelle")
 IF w97$ = "TRUE" THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + "Gesamtpreis" + g$ + " :WordBasic.NextCell"
 
 IF w97$ <> "TRUE" THEN ? "TabelleZeileMarkieren"
 IF w97$ = "TRUE" THEN ? "WordBasic.TableSelectRow"
 
 IF w97$ <> "TRUE" THEN ? FN ansi("TabelleZeilenHîhe .ZeilenTrennenZulassen = 0")
 IF w97$ = "TRUE" THEN ? "WordBasic.TableRowHeight AllowRowSplit:=0"
 ? FN ansi(wsrest$)
 IF w97$ <> "TRUE" THEN ? "Fett"
 IF w97$ = "TRUE" THEN ? "WordBasic.Bold"
 FILE "SCHEIN"
 REM INDEX CodeMS.SCHEIN
 INDEX QuickCodePos.SCHEIN
 SELECT FIRST 
 quickmspos% = codems% * 1000 + 1
 REM SELECT KEY codems% FILE "SCHEIN" INDEX CodeMS.SCHEIN
 SELECT KEY quickmspos% FILE "SCHEIN" INDEX QuickCodepos.SCHEIN
 WHILE CodeMS.SCHEIN = codems% AND NOT EOF ("SCHEIN")
   IF textvorPosition.schein <> "" THEN 
     IF w97$ <> "TRUE" THEN 
       ? "ZeileUnten 1"
       ? FN ansi("TabelleZeileEinfÅgen .AnzTabZeilen = " + g$ + "1" + g$)
       ? "ZeileOben 1"
       ? FN ansi("ZeichenRechts 6, 1")
       ? FN ansi("TabelleZellenVerbinden")
       ? FN ansi("AbsatzLinks")
       ? FN ansi("BeginnZeile")
       ? FN ansi("EinfÅgen " + g$);
     ELSE 
       ? "WordBasic.LineDown 1 "
       ? "WordBasic.TableInsertRow NumRows:=1"
       ? "WordBasic.LineUp 1"
       ? "WordBasic.CharRight 6,1"
       ? "WordBasic.TableMergeCells"
       ? "WordBasic.LeftPara"
       ? "WordBasic.StartOfLine"
       ? "WordBasic.Insert " + g$;
     END IF 
     besch$ = ""
     b% = 0
     FOR a% = 1 TO LEN (TextvorPosition.SCHEIN)
       t$ = MID$ (TextvorPosition.schein,a%,1)
       IF ASC (t$) = 13 THEN 
         besch$ = besch$ + g$ + " + chr$(11) + " + g$
       ELSE 
         IF ASC (t$) = 34 THEN 
           besch$ = besch$ + g$ + " + chr$(34) + " + g$
         ELSE 
           IF ASC (t$) <> 10 THEN besch$ = besch$ + t$
         END IF 
       END IF 
       b% = b% + 1
       IF b% = 255 THEN 
         ? FN ansi(besch$ + g$)
         IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$);
         IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$;
         besch$ = ""
         b% = 0
       END IF 
     NEXT a%
     ? FN ansi(besch$ + g$ + " + chr$(13)")
     IF w97$ <> "TRUE" THEN ? FN ansi("NÑchsteZelle")
     IF w97$ = "TRUE" THEN ? "WordBasic.NextCell"
   END IF 
   IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + LTRIM$ ( STR$ (PosNr.SCHEIN,"9999")) + g$ + ":NÑchsteZelle")
   IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + LTRIM$ ( STR$ (PosNr.SCHEIN,"9999")) + g$ + ":WordBasic.NextCell"
   IF w97$ <> "TRUE" THEN ? FN ansi("Fett 0")
   IF w97$ = "TRUE" THEN ? "WordBasic.Bold 0"
   ? FN ansi(wsrest$)
 
   IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + LTRIM$ ( STR$ (Anzahl.SCHEIN,"999999.99")) + g$)
   IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$ + LTRIM$ ( STR$ (Anzahl.SCHEIN,"999999.99")) + g$
   IF w97$ <> "TRUE" THEN ? FN ansi("Fett 1")
   IF w97$ = "TRUE" THEN ? "WordBasic.Bold 1"
   IF w97$ <> "TRUE" THEN ? FN ansi("NÑchsteZelle")
   IF w97$ = "TRUE" THEN ? "WordBasic.NextCell"
   ? FN ansi(wsrest$)
   IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + ME_.SCHEIN + g$)
   IF w97$ = "TRUE" THEN ? FN ansi("WordBasic.Insert " + g$ + ME_.SCHEIN + g$)
   IF w97$ <> "TRUE" THEN ? FN ansi("Fett 0")
   IF w97$ = "TRUE" THEN ? "WordBasic.Bold 0"
 
   ? FN ansi(wsrest$)
   IF mwstcount% <> 1 THEN 
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + LTRIM$ ( STR$ (MwSt.SCHEIN,"99.00")) + "%" + g$)
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert Chr(13) + " + g$ + LTRIM$ ( STR$ (MwSt.SCHEIN,"99.00")) + "%" + g$
   ELSE 
     REM ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + "  " + g$)
   END IF 
   REM Alternativpositionen
   IF art.schein = 1 THEN 
     IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + "alternativ" + g$)
     IF w97$ = "TRUE" THEN ? "WordBasic.Insert Chr(13) + " + g$ + "alternativ" + g$
   ELSE 
     REM ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + "  " + g$)
   END IF 
   IF w97$ <> "TRUE" THEN 
     ? FN ansi("Fett 1")
     ? FN ansi("NÑchsteZelle")
     ? FN ansi(wsrest$)
     ? FN ansi("EinfÅgen " + g$);
   ELSE 
     ? "WordBasic.Bold 1"
     ? "WordBasic.NextCell"
     ? FN ansi(wsrest$)
     ? "WordBasic.Insert " + g$;
   END IF 
   besch$ = ""
   b% = 0
   IF artikelnummer.schein <> "" THEN 
     REM bezeichnung$ = Artikelnummer.schein + CHR$ (13) + bezeichnung.schein
     bezeichnung$ = Artikelnummer.schein + " " + bezeichnung.schein
   ELSE 
     bezeichnung$ = bezeichnung.schein
   END IF 
   IF Serienr.schein <> "" AND serienr.schein <> "<ohne Zuordnung>" THEN bezeichnung$ = bezeichnung$ + CHR$ (13) + "Serienr.:" + serienr.schein
   FOR a% = 1 TO LEN (Bezeichnung$)
     t$ = MID$ (Bezeichnung$,a%,1)
     IF ASC (t$) = 13 THEN 
       besch$ = besch$ + g$ + " + chr$(13) + " + g$
     ELSE 
       IF ASC (t$) = 34 THEN 
         besch$ = besch$ + g$ + " + chr$(34) + " + g$
       ELSE 
         IF ASC (t$) <> 10 THEN besch$ = besch$ + t$
       END IF 
     END IF 
     b% = b% + 1
     IF b% = 1000 THEN 
       ? FN ansi(besch$ + g$)
       besch$ = g$
       b% = 0
     END IF 
   NEXT a%
   REM ? FN ansi(besch$);
   IF beschreibung.schein <> "" THEN 
     ? FN ansi(besch$ + g$);
     REM ? FN ansi(g$ + " + CHR$ (11)")
     ? FN ansi(" + CHR$ (11)")
     ? FN ansi(wsrest$)
     IF w97$ <> "TRUE" THEN ? FN ansi("Fett :EinfÅgen " + g$);
     IF w97$ = "TRUE" THEN ? "WordBasic.Bold: WordBasic.Insert " + g$;
     besch$ = ""
     b% = 0
     FOR a% = 1 TO LEN (Beschreibung.SCHEIN)
       t$ = MID$ (Beschreibung.schein,a%,1)
       IF ASC (t$) = 13 THEN 
         besch$ = besch$ + g$ + " + chr$(11) + " + g$
       ELSE 
         IF ASC (t$) = 34 THEN 
           besch$ = besch$ + g$ + " + chr$(34) + " + g$
         ELSE 
           IF ASC (t$) <> 10 THEN besch$ = besch$ + t$
         END IF 
       END IF 
       b% = b% + 1
       IF b% = 255 THEN 
         ? FN ansi(besch$ + g$)
         IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$);
         IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$;
         besch$ = ""
         b% = 0
       END IF 
     NEXT a%
     REM burz ? FN ansi(besch$ + g$ + " + chr$(13)")
     ? FN ansi(besch$ + g$)
   ELSE 
     ? FN ansi(besch$ + g$)
   END IF 
   IF w97$ <> "TRUE" THEN ? FN ansi("Fett :NÑchsteZelle")
   IF w97$ = "TRUE" THEN ? "WordBasic.Bold: WordBasic.NextCell"
   ? FN ansi(wsrest$)
   REM CALL Fehler ("Test Word","")
   IF KalkArt.abdatei$ = 0 THEN 
     IF Rabatt.schein > 0 THEN 
       IF art% <> 3 AND art% <> 8 THEN 
       REM kein Lieferschein
         IF bezugsmenge.schein = 1 THEN 
           vknetto$ = STR$ (VKNetto.schein,"9999999999.00")
           vknettoEU$ = STR$ (VKNettoEU.schein,"9999999999.00")
         ELSE 
           vknetto$ = ExtDM$(VKNetto.schein / Bezugsmenge.schein)
           vknettoEU$ = ExtDM$(VKNettoEU.schein / Bezugsmenge.schein)
         END IF 
         IF w97$ <> "TRUE" THEN 
           IF opt% = 2 THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + VKnetto$ + g$)
           IF opt% = 4 THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + VKnettoEU$ + g$)
           ? FN ansi("Fett")
           ? FN ansi(wsrest$)
           rab$ = "Rabatt: " + TRIM$ ( STR$ (RabattProz.schein,"999.000")) + "%"
           ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + rab$ + g$ + ":NÑchsteZelle")
           IF opt% = 2 THEN ? FN ansi("AbsatzRechts :EinfÅgen" + g$ + STR$ (GesamtNetto.SCHEIN,",99999999.00") + g$)
           IF opt% = 4 THEN ? FN ansi("AbsatzRechts :EinfÅgen" + g$ + STR$ (GesNettoEU.SCHEIN,",99999999.00") + g$)
           ? FN ansi("Fett")
           ? FN ansi(wsrest$)
           IF opt% = 2 THEN ? FN ansi("EinfÅgen CHR$(13) + " + g$ + LTRIM$ ( STR$ (Anzahl.SCHEIN * Rabatt.SCHEIN,",9999999999.00")) + g$)
           IF opt% = 4 THEN ? FN ansi("EinfÅgen CHR$(13) + " + g$ + LTRIM$ ( STR$ (Anzahl.SCHEIN * RabattEU.SCHEIN,",9999999999.00")) + g$)
         ELSE 
           IF opt% = 2 THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + VKnetto$ + g$
           IF opt% = 4 THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + VKnettoEU$ + g$
           ? "WordBasic.Bold"
           ? FN ansi(wsrest$)
           rab$ = "Rabatt: " + TRIM$ ( STR$ (RabattProz.schein,"999.000")) + "%"
           ? "WordBasic.Insert Chr(13) + " + g$ + rab$ + g$ + " :WordBasic.NextCell"
           IF opt% = 2 THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + STR$ (GesamtNetto.SCHEIN,",99999999.00") + g$
           IF opt% = 4 THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + STR$ (GesNettoEU.SCHEIN,",99999999.00") + g$
           ? "WordBasic.Bold"
           ? FN ansi(wsrest$)
           IF opt% = 2 THEN ? "WordBasic.Insert Chr(13) + " + g$ + LTRIM$ ( STR$ (Anzahl.SCHEIN * Rabatt.SCHEIN,",9999999999.00")) + g$
           IF opt% = 4 THEN ? "WordBasic.Insert Chr(13) + " + g$ + LTRIM$ ( STR$ (Anzahl.SCHEIN * RabattEU.SCHEIN,",9999999999.00")) + g$
         END IF 
       ELSE 
       REM Lieferschein
         IF w97$ <> "TRUE" THEN 
           ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + "" + g$)
           ? FN ansi("Fett")
           ? FN ansi(wsrest$)
           rab$ = "Rabatt: " + TRIM$ ( STR$ (RabattProz.schein,"999.000")) + " %"
           REM ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + "Rabatt:" + g$ + ":NÑchsteZelle")
           ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + rab$ + g$ + ":NÑchsteZelle")
           ? FN ansi("AbsatzRechts :EinfÅgen" + g$ + " " + g$)
           ? FN ansi("Fett")
           ? FN ansi(wsrest$)
           ? FN ansi("EinfÅgen CHR$(13) + " + g$ + " " + g$)
         ELSE 
           ? "WordBasic.RightPara: WordBasic.Insert " + g$ + " " + g$
           ? "WordBasic.Bold"
           ? FN ansi(wsrest$)
           rab$ = "Rabatt: " + TRIM$ ( STR$ (RabattProz.schein,"999.000")) + "%"
           ? "WordBasic.Insert Chr(13) + " + g$ + rab$ + g$ + " :WordBasic.NextCell"
           ? "WordBasic.RightPara: WordBasic.Insert " + g$ + " " + g$
           ? "WordBasic.Bold"
           ? FN ansi(wsrest$)
           ? "WordBasic.Insert Chr(13) + " + g$ + " " + g$
         END IF 
       END IF 
     ELSE 
       IF Bezugsmenge.schein = 1 THEN 
         vknetto$ = STR$ (VKNetto.schein,"9999999999.00")
         vknettoEU$ = STR$ (VKNettoEU.schein,"9999999999.00")
       ELSE 
         vknetto$ = ExtDM$(VKNetto.schein / Bezugsmenge.schein)
         vknettoEU$ = ExtDM$(VKNettoEU.schein / Bezugsmenge.schein)
       END IF 
       IF art% <> 3 AND art% <> 8 THEN 
         IF w97$ <> "TRUE" THEN 
           IF opt% = 2 THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + VKnetto$ + g$ + ":NÑchsteZelle")
           IF opt% = 4 THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + VKnettoEU$ + g$ + ":NÑchsteZelle")
         END IF 
         IF w97$ = "TRUE" THEN 
           IF opt% = 2 THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + VKnetto$ + g$ + " :WordBasic.NextCell"
           IF opt% = 4 THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + VKnettoEU$ + g$ + " :WordBasic.NextCell"
         END IF 
         ? FN ansi(wsrest$)
         IF w97$ <> "TRUE" THEN 
           IF opt% = 2 THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + STR$ (GesamtNetto.SCHEIN,",99999999.00") + g$)
           IF opt% = 4 THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + STR$ (GesNettoEU.SCHEIN,",99999999.00") + g$)
         END IF 
         IF w97$ = "TRUE" THEN 
           IF opt% = 2 THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + STR$ (GesamtNetto.SCHEIN,",99999999.00") + g$
           IF opt% = 4 THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + STR$ (GesNettoEU.SCHEIN,",99999999.00") + g$
         END IF 
       ELSE 
         IF w97$ <> "TRUE" THEN 
           ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + " " + g$ + ":NÑchsteZelle")
         END IF 
         IF w97$ = "TRUE" THEN 
           ? "WordBasic.RightPara: WordBasic.Insert " + g$ + " " + g$ + " :WordBasic.NextCell"
         END IF 

         ? FN ansi(wsrest$)
         IF w97$ <> "TRUE" THEN 
           ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + " " + g$)
         END IF 
         IF w97$ = "TRUE" THEN 
           ? "WordBasic.RightPara: WordBasic.Insert " + g$ + " " + g$
         END IF 
       END IF 
     END IF 
   ELSE 
     IF Bezugsmenge.schein = 1 THEN 
       vkbrutto$ = STR$ (VKBrutto.schein,"9999999999.00")
       vkbruttoEU$ = STR$ (VKBruttoEU.schein,"9999999999.00")
     ELSE 
       vkbrutto$ = ExtDM$(VKBrutto.schein / Bezugsmenge.schein)
       vkbruttoEU$ = ExtDM$(VKBruttoEU.schein / Bezugsmenge.schein)
     END IF 
     IF rabatt.schein > 0 THEN 
       IF art% <> 3 AND art% <> 8 THEN 
         IF w97$ <> "TRUE" THEN 
           IF opt% = 2 THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + VKbrutto$ + g$)
           IF opt% = 4 THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + VKbruttoEU$ + g$)
         END IF 
         IF w97$ = "TRUE" THEN 
           IF opt% = 2 THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + VKbrutto$ + g$
           IF opt% = 4 THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + VKbruttoEU$ + g$
         END IF 
         IF w97$ <> "TRUE" THEN ? FN ansi("Fett")
         IF w97$ = "TRUE" THEN ? "WordBasic.Bold"
         
         ? FN ansi(wsrest$)
         REM ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + "Rabatt:" + g$ + ":NÑchsteZelle")
         rab$ = "Rabatt: " + TRIM$ ( STR$ (RabattProz.schein,"999.000")) + "%"
         IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + rab$ + g$ + ":NÑchsteZelle")
         IF w97$ = "TRUE" THEN ? "WordBasic.Insert Chr(13) + " + g$ + rab$ + g$ + " :WordBasic.NextCell"
         IF w97$ <> "TRUE" THEN 
           IF opt% = 2 THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + STR$ (GesamtBrutto.SCHEIN,",99999999.00") + g$)
           IF opt% = 4 THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + STR$ (GesBruttoEU.SCHEIN,",99999999.00") + g$)
         END IF 
         IF w97$ = "TRUE" THEN 
           IF opt% = 2 THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + STR$ (GesamtBrutto.SCHEIN,",99999999.00") + g$
           IF opt% = 4 THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + STR$ (GesBruttoEU.SCHEIN,",99999999.00") + g$
         END IF 
         IF w97$ <> "TRUE" THEN ? FN ansi("Fett")
         IF w97$ = "TRUE" THEN ? "WordBasic.Bold"
         ? FN ansi(wsrest$)
         IF w97$ <> "TRUE" THEN 
           IF opt% = 2 THEN ? FN ansi("EinfÅgen CHR$(13) + " + g$ + LTRIM$ ( STR$ (Anzahl.SCHEIN * Rabatt.SCHEIN,",9999999999.00")) + g$)
           IF opt% = 4 THEN ? FN ansi("EinfÅgen CHR$(13) + " + g$ + LTRIM$ ( STR$ (Anzahl.SCHEIN * RabattEU.SCHEIN,",9999999999.00")) + g$)
         END IF 
         IF w97$ = "TRUE" THEN 
           IF opt% = 2 THEN ? "WordBasic.Insert Chr(13) + " + g$ + LTRIM$ ( STR$ (Anzahl.SCHEIN * Rabatt.SCHEIN,",9999999999.00")) + g$
           IF opt% = 4 THEN ? "WordBasic.Insert Chr(13) + " + g$ + LTRIM$ ( STR$ (Anzahl.SCHEIN * RabattEU.SCHEIN,",9999999999.00")) + g$
         END IF 
       ELSE 
         IF w97$ <> "TRUE" THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + " " + g$)
         IF w97$ = "TRUE" THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + " " + g$
         IF w97$ <> "TRUE" THEN ? FN ansi("Fett")
         IF w97$ = "TRUE" THEN ? "WordBasic.Bold"
         ? FN ansi(wsrest$)
         rab$ = "Rabatt: " + TRIM$ ( STR$ (RabattProz.schein,"999.000")) + "%"
         IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + rab$ + g$ + ":NÑchsteZelle")
         IF w97$ = "TRUE" THEN ? "WordBasic.Insert Chr(13) + " + g$ + rab$ + g$ + " :WordBasic.NextCell"
         REM ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + "Rabatt:" + g$ + ":NÑchsteZelle")
         IF w97$ <> "TRUE" THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + " " + g$)
         IF w97$ = "TRUE" THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + " " + g$
         IF w97$ <> "TRUE" THEN ? FN ansi("Fett")
         IF w97$ = "TRUE" THEN ? "WordBasic.Bold"
         ? FN ansi(wsrest$)
         IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen CHR$(13) + " + g$ + " " + g$)
         IF w97$ = "TRUE" THEN ? "WordBasic.Insert Chr(13) + " + g$ + " " + g$
       END IF 
     ELSE 
       IF art% <> 3 AND art% <> 8 THEN 
         IF w97$ <> "TRUE" THEN 
           IF opt% = 2 THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + VKbrutto$ + g$ + ":NÑchsteZelle")
           IF opt% = 4 THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + VKbruttoEU$ + g$ + ":NÑchsteZelle")
         END IF 
         IF w97$ = "TRUE" THEN 
           IF opt% = 2 THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + VKbrutto$ + g$ + " :WordBasic.NextCell"
           IF opt% = 4 THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + VKbruttoEU$ + g$ + " :WordBasic.NextCell"
         END IF 
         ? FN ansi(wsrest$)
         IF w97$ <> "TRUE" THEN 
           IF opt% = 2 THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + STR$ (GesamtBrutto.SCHEIN,",99999999.00") + g$)
           IF opt% = 4 THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + STR$ (GesBruttoEU.SCHEIN,",99999999.00") + g$)
         END IF 
         IF w97$ = "TRUE" THEN 
           IF opt% = 2 THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + STR$ (GesamtBrutto.SCHEIN,",99999999.00") + g$
           IF opt% = 4 THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + STR$ (GesBruttoEU.SCHEIN,",99999999.00") + g$
         END IF 
       ELSE 
         IF w97$ <> "TRUE" THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + " " + g$ + ":NÑchsteZelle")
         IF w97$ = "TRUE" THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + " " + g$ + " :WordBasic.NextCell"
         ? FN ansi(wsrest$)
         IF w97$ <> "TRUE" THEN ? FN ansi("AbsatzRechts :EinfÅgen " + g$ + " " + g$)
         IF w97$ = "TRUE" THEN ? "WordBasic.RightPara: WordBasic.Insert " + g$ + " " + g$
       END IF 
     END IF 
   END IF 
   REM SELECT NEXT FILE "SCHEIN" INDEX CodeMS.SCHEIN
   SELECT NEXT FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   IF CodeMS.SCHEIN = codems% AND NOT EOF ("SCHEIN") THEN 
     IF w97$ <> "TRUE" THEN ? FN ansi("NÑchsteZelle")
     IF w97$ = "TRUE" THEN ? "WordBasic.NextCell"
     ? FN ansi(wsrest$)
   END IF 
 WEND 
 IF w97$ <> "TRUE" THEN 
   ? "TabelleZeileMarkieren"
   ? "RahmenlinieUnten 1"
   ? "ZeileUnten 1"
   ? "FormatTabulator .Position = " + g$ + "15,5 cm" + g$ + ",.Ausrichten = 3,.Bestimmen"
 ELSE 
   ? "WordBasic.TableSelectRow"
   ? "WordBasic.BorderBottom 1"
   ? "WordBasic.LineDown 1"
   ? "WordBasic.FormatTabs Position:="g$ + "15,5 cm" + g$ + ", Align:= 3, Set:=1"
 END IF 
 REM 220498 WEITER !!!!!!!!!!!!!!!
 
DruMahn981112: 
 IF art% <> 3 AND art% <> 8 THEN 
 REM CALL Fehler("Nettofakturierung","")
 REM wenn kein Lieferschein 
 IF KalkArt.abdatei$ = 0 THEN 
 REM Nettofakturierung
   IF rabatt.abdatei$ <> 0 AND art% <> 6 THEN 
     IF rabattart.abdatei$ = 0 THEN 
     REM Rabatt auf Netto
       REM Summe Netto:
       IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + Zeile1$ + g$)
       IF w97$ = "TRUE" THEN ? FN ansi("WordBasic.Insert " + g$ + Zeile1$ + g$)
       IF w97$ <> "TRUE" THEN 
         IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile1$) + g$ + " + chr$(13)")
         IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile1EU$) + g$ + " + chr$(13)")
       END IF 
       IF w97$ = "TRUE" THEN 
         IF opt% = 2 THEN ? FN ansi("WordBasic.Insert Chr(9) + " + g$ + FN ansi(WertZeile1$) + g$ + " + chr(13)")
         IF opt% = 4 THEN ? FN ansi("WordBasic.Insert Chr(9) + " + g$ + FN ansi(WertZeile1EU$) + g$ + " + chr(13)")
       END IF 
       IF w97$ <> "TRUE" THEN ? "ZeileOben 1"
       IF w97$ = "TRUE" THEN ? "WordBasic.LineUp 1"
       IF w97$ <> "TRUE" THEN ? "BeginnZeile"
       IF w97$ = "TRUE" THEN ? "WordBasic.StartOfLine"
       IF w97$ <> "TRUE" THEN ? "EndeZeile 1"
       IF w97$ = "TRUE" THEN ? "WordBasic.EndOfLine 1"
       REM burz? "FormatZeichen .Punkt = " + g$ + "10" + g$ + ",.Fett = 1,.Kursiv = 1 
       IF w97$ <> "TRUE" THEN ? "FormatZeichen .Punkt = " + g$ + FN ansi(wssu$) + g$ + ",.Fett = 1,.Kursiv = 1"
       IF w97$ = "TRUE" THEN ? "WordBasic.FormatFont Points:=" + g$ + FN ansi(wssu$) + g$ + ",Bold:= 1, Italic:= 1"
       IF w97$ <> "TRUE" THEN ? "ZeileUnten 1"
       IF w97$ = "TRUE" THEN ? "WordBasic.LineDown 1"
       ? FN ansi(wssum$)
       REM abzÅglich Rabatt von x %
       IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + Zeile2$ + g$)
       IF w97$ = "TRUE" THEN ? FN ansi("WordBasic.Insert " + g$ + Zeile2$ + g$)
       IF w97$ <> "TRUE" THEN 
         IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile2$) + g$ + " + chr$(13)")
         IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile2EU$) + g$ + " + chr$(13)")
       END IF 
       IF w97$ = "TRUE" THEN 
         IF opt% = 2 THEN ? FN ansi("WordBasic.Insert chr(9) + " + g$ + FN ansi(WertZeile2$) + g$ + " + chr(13)")
         IF opt% = 4 THEN ? FN ansi("WordBasic.Insert chr(9) + " + g$ + FN ansi(WertZeile2EU$) + g$ + " + chr(13)")
       END IF 
       REM Summe Netto abzÅglich Rabatt
       IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$ + Zeile3$ + g$)
       IF w97$ = "TRUE" THEN ? FN ansi("WordBasic.Insert " + g$ + Zeile3$ + g$)
       IF w97$ <> "TRUE" THEN 
         IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile3$) + g$ + " + chr$(13)")
         IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile3EU$) + g$ + " + chr$(13)")
       END IF 
       IF w97$ = "TRUE" THEN 
         IF opt% = 2 THEN ? "WordBasic.Insert Chr (9) + " + g$ + FN ansi(WertZeile3$) + g$ + " + chr(13)"
         IF opt% = 4 THEN ? "WordBasic.Insert Chr (9) + " + g$ + FN ansi(WertZeile3EU$) + g$ + " + chr(13)"
       END IF 
       IF w97$ <> "TRUE" THEN ? "ZeileOben 1"
       IF w97$ = "TRUE" THEN ? "WordBasic.LineUp 1"
       IF w97$ <> "TRUE" THEN ? "BeginnZeile"
       IF w97$ = "TRUE" THEN ? "WordBasic.StartOfLine"
       IF w97$ <> "TRUE" THEN ? "EndeZeile 1"
       IF w97$ = "TRUE" THEN ? "WordBasic.EndOfLine 1"
       REM burz ? "FormatZeichen .Punkt = " + g$ + "10" + g$ + ",.Fett = 1,.Kursiv = 1 
       IF w97$ <> "TRUE" THEN ? "FormatZeichen .Punkt = " + g$ + FN ansi(wssu$) + g$ + ",.Fett = 1,.Kursiv = 1 
       IF w97$ = "TRUE" THEN ? "WordBasic.FormatFont Points:=" + g$ + FN ansi(wssu$) + g$ + ",Bold:= 1, Italic:= 1"
       IF w97$ <> "TRUE" THEN ? "ZeileUnten 1"
       IF w97$ = "TRUE" THEN ? "WordBasic.LineDown 1"
       REM Mehrwertsteuer
       ? FN ansi(wssum$)
       FOR a% = 0 TO MwStCount% - 1
         IF w97$ <> "TRUE" THEN 
           IF opt% = 2 THEN ? FN ansi("EinfÅgen " + g$ + MwStText2$(a%) + g$)
           IF opt% = 4 THEN ? FN ansi("EinfÅgen " + g$ + MwStText2EU$(a%) + g$)
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(MwStBetrag2$(a%)) + g$)
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(MwStBetrag2EU$(a%)) + g$)
           ? FN ansi("EinfÅgenAbsatz")
           ? "ZeileOben 1"
           ? "BeginnZeile"
           ? "EndeZeile 1"
           REM ? "RahmenlinieUnten 1"
           REM ? "Unterstrichen"
           ? "ZeileUnten 1"
         ELSE 
           IF opt% = 2 THEN ? FN ansi("WordBasic.Insert " + g$ + MwStText2$(a%) + g$)
           IF opt% = 4 THEN ? FN ansi("WordBasic.Insert " + g$ + MwStText2EU$(a%) + g$)
           IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(MwStBetrag2$(a%)) + g$
           IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(MwStBetrag2EU$(a%)) + g$
           ? "WordBasic.InsertPara"
           ? "WordBasic.LineUp 1"
           ? "WordBasic.StartOfLine"
           ? "WordBasic.EndOfLine 1"
           ? "WordBasic.LineDown 1"
         END IF 
       NEXT a%
       REM Gesamtsumme 
       ? FN ansi(wssum$)
       IF w97$ <> "TRUE" THEN 
         ? FN ansi("EinfÅgen " + g$ + Zeile5$ + g$)
         IF opt% = 2 THEN ? FN ansi("EinfÅgen CHR$ (9) + " + g$ + FN ansi(WertZeile5$) + g$)
         IF opt% = 4 THEN ? FN ansi("EinfÅgen CHR$ (9) + " + g$ + FN ansi(WertZeile5EU$) + g$)
         ? FN ansi("EinfÅgenAbsatz")
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         ? "FormatZeichen .Punkt = " + g$ + FN ansi(wssu$) + g$ + ",.Fett = 1,.Kursiv = 1
         ? "Unterstrichen"
         REM ? "RahmenlinieUnten 1"
         ? "ZeileUnten 1"
       ELSE 
         ? FN ansi("WordBasic.Insert " + g$ + Zeile5$ + g$)
         IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(WertZeile5$) + g$
         IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(WertZeile5EU$) + g$
         ? "WordBasic.InsertPara"
         ? "WordBasic.LineUp 1"
         ? "WordBasic.StartOfLine"
         ? "WordBasic.EndOfLine 1"
         ? "WordBasic.FormatFont Points:=" + g$ + FN ansi(wssu$) + g$ + ",Bold:= 1, Italic:= 1"
         ? "WordBasic.Underline"
         ? "WordBasic.LineDown 1"
       END IF 
     ELSE 
     REM Rabatt auf Brutto
       REM Summe Netto:
       ? FN ansi(wssum$)
       IF w97$ <> "TRUE" THEN 
         ? FN ansi("EinfÅgen " + g$ + Zeile1$ + g$)
         IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile1$) + g$ + " + chr$(13)")
         IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile1EU$) + g$ + " + chr$(13)")
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         REM burz ? "FormatZeichen .Punkt = " + g$ + "10" + g$ + ",.Fett = 1,.Kursiv = 1 
         ? "FormatZeichen .Punkt = " + g$ + FN ansi(wssu$) + g$ + ",.Fett = 1,.Kursiv = 1 
         ? "ZeileUnten 1"
       ELSE 
         ? FN ansi("WordBasic.Insert " + g$ + Zeile1$ + g$)
         IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(WertZeile1$) + g$
         IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(WertZeile1EU$) + g$
         ? "WordBasic.LineUp 1"
         ? "WordBasic.StartOfLine"
         ? "WordBasic.EndOfLine 1"
         ? "WordBasic.FormatFont Points:=" + g$ + FN ansi(wssu$) + g$ + ",Bold:= 1, Italic:= 1"
         ? "WordBasic.LineDown 1"
       END IF 
       REM Mehrwertsteuer
       ? FN ansi(wssum$)
       FOR a% = 0 TO MwStCount% - 1
         IF w97$ <> "TRUE" THEN 
           IF opt% = 2 THEN ? FN ansi("EinfÅgen " + g$ + MwStText2$(a%) + g$)
           IF opt% = 4 THEN ? FN ansi("EinfÅgen " + g$ + MwStText2EU$(a%) + g$)
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(MwStBetrag2$(a%)) + g$)
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(MwStBetrag2EU$(a%)) + g$)
           ? FN ansi("EinfÅgenAbsatz")
           ? "ZeileOben 1"
           ? "BeginnZeile"
           ? "EndeZeile 1"
           REM ? "Unterstrichen"
           REM ? "RahmenlinieUnten 1"
           ? "ZeileUnten 1"
         ELSE 
           IF opt% = 2 THEN ? FN ansi("WordBasic.Insert " + g$ + MwStText2$(a%) + g$)
           IF opt% = 4 THEN ? FN ansi("WordBasic.Insert " + g$ + MwStText2EU$(a%) + g$)
           IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(MwStBetrag2$(a%)) + g$
           IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(MwStBetrag2EU$(a%)) + g$
           ? "WordBasic.InsertPara"
           ? "WordBasic.LineUp 1"
           ? "WordBasic.StartOfLine"
           ? "WordBasic.EndOfLine 1"
           ? "WordBasic.LineDown 1"
         END IF 
       NEXT a%
       REM Summe Brutto
       IF w97$ <> "TRUE" THEN 
         ? FN ansi("EinfÅgen " + g$ + Zeile3$ + g$)
         IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile3$) + g$ + " + chr$(13)")
         IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile3EU$) + g$ + " + chr$(13)")
         ? FN ansi("EinfÅgenAbsatz")
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         REM Burz ? "FormatZeichen .Punkt = " + g$ + wssu$ + g$ + ",.Fett = 1,.Kursiv = 1 
         ? "FormatZeichen .Punkt = " + g$ + FN ansi(wssu$) + g$ + ",.Fett = 1,.Kursiv = 1 
         REM ? "RahmenlinieUnten 1"
         ? "Unterstrichen"
         ? "ZeileUnten 1"
         REM Gesamtsumme 
         ? FN ansi("EinfÅgen " + g$ + Zeile5$ + g$)
         IF opt% = 2 THEN ? FN ansi("EinfÅgen CHR$ (9) + " + g$ + FN ansi(WertZeile5$) + g$)
         IF opt% = 4 THEN ? FN ansi("EinfÅgen CHR$ (9) + " + g$ + FN ansi(WertZeile5EU$) + g$)
         ? FN ansi("EinfÅgenAbsatz")
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         ? "FormatZeichen .Punkt = " + g$ + FN ansi(wssu$) + g$ + ",.Fett = 1,.Kursiv = 1
         REM ? "RahmenlinieUnten 1"
         ? "Unterstrichen"
         ? "ZeileUnten 1"
         REM Rabatt
         ? FN ansi(wssum$)
         ? FN ansi("EinfÅgen " + g$ + Zeile4$ + g$)
         IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile4$) + g$ + " + chr$(13)")
         IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile4EU$) + g$ + " + chr$(13)")
         ? "ZeileUnten 1"
       ELSE 
         ? FN ansi("WordBasic.Insert " + g$ + Zeile3$ + g$)
         IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(WertZeile3$) + g$
         IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(WertZeile3EU$) + g$
         ? "WordBasic.InsertPara"
         ? "WordBasic.LineUp 1"
         ? "WordBasic.StartOfLine"
         ? "WordBasic.EndOfLine 1"
         ? "WordBasic.FormatFont Points:=" + g$ + FN ansi(wssu$) + g$ + ",Bold:= 1, Italic:= 1"
         ? "WordBasic.Underline"
         ? "WordBasic.LineDown 1"
         ? FN ansi("WordBasic.Insert " + g$ + Zeile5$ + g$)
         IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(WertZeile5$) + g$
         IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(WertZeile5EU$) + g$
         ? "WordBasic.InsertPara"
         ? "WordBasic.LineUp 1"
         ? "WordBasic.StartOfLine"
         ? "WordBasic.EndOfLine 1"
         ? "WordBasic.FormatFont Points:=" + g$ + FN ansi(wssu$) + g$ + ",Bold:= 1, Italic:= 1"
         ? "WordBasic.Underline"
         ? "WordBasic.LineDown 1"
         ? FN ansi(wssum$)
         ? FN ansi("WordBasic.Insert " + g$ + Zeile4$ + g$)
         IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(WertZeile4$) + g$
         IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(WertZeile4EU$) + g$
         ? "WordBasic.LineDown 1"
 
 
       END IF 
     END IF 
   ELSE 
   REM CALL Fehler("Mahntest","")
   REM kein Rabatt
     REM Summe Netto:
     IF art% = 6 THEN 
       IF w97$ <> "TRUE" THEN 
         ? "FormatTabulator .Position = " + g$ + "15,5 cm" + g$ + ",.Ausrichten = 3,.Bestimmen"
         ? "FormatTabulator .Position = " + g$ + "16,6 cm" + g$ + ",.Ausrichten = 3,.Bestimmen"
       ELSE 
         ? "WordBasic.FormatTabs Position:="g$ + "15,5 cm" + g$ + ", Align:= 3, Set:=1"
         ? "WordBasic.FormatTabs Position:="g$ + "16,6 cm" + g$ + ", Align:= 3, Set:=1"
       END IF 
 
     END IF 
     IF w97$ <> "TRUE" THEN 
       ? "ZeileUnten 1"
       ? FN ansi("EinfÅgen " + g$ + Zeile3$ + g$)
       IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile3$) + g$ + " + chr$(13)")
       IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile3EU$) + g$ + " + chr$(13)")
       IF art% <> 6 THEN 
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         REM burz ? "FormatZeichen .Punkt = " + g$ + wssu$ + g$ + ",.Fett = 1,.Kursiv = 1 
         ? "FormatZeichen .Punkt = " + g$ + wssu$ + g$ + ",.Fett = 1,.Kursiv = 1 
         ? "ZeileUnten 1"
       END IF 
     ELSE 
       ? FN ansi("WordBasic.Insert " + g$ + Zeile3$ + g$)
       IF art% <> 6 THEN 
         IF opt% = 2 THEN ? "WordBasic.Insert Chr(9)  + " + g$ + FN ansi(WertZeile3$) + g$ + " + chr$(13)"
         IF opt% = 4 THEN ? "WordBasic.Insert Chr(9)  + " + g$ + FN ansi(WertZeile3EU$) + g$ + " + chr$(13)"
       ELSE 
         IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) +" + g$ + FN ansi(WertZeile3$) + g$ + " + chr$(13)"
         IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) +" + g$ + FN ansi(WertZeile3EU$) + g$ + " + chr$(13)"
       END IF 
       IF art% <> 6 THEN 
         ? "WordBasic.LineUp 1"
         ? "WordBasic.StartOfLine"
         ? "WordBasic.EndOfLine 1"
         ? "WordBasic.FormatFont Points:=" + g$ + FN ansi(wssu$) + g$ + ",Bold:= 1, Italic:= 1"
         ? "WordBasic.LineDown 1"
       END IF 
     END IF 
     REM Mehrwertsteuer
     ? FN ansi(wssum$)
     IF art% <> 6 THEN 
       FOR a% = 0 TO MwStCount% - 1
         IF w97$ <> "TRUE" THEN 
           IF opt% = 2 THEN ? FN ansi("EinfÅgen " + g$ + MwStText2$(a%) + g$)
           IF opt% = 4 THEN ? FN ansi("EinfÅgen " + g$ + MwStText2EU$(a%) + g$)
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(MwStBetrag2$(a%)) + g$)
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(MwStBetrag2EU$(a%)) + g$)
           ? FN ansi("EinfÅgenAbsatz")
           ? "ZeileOben 1"
           ? "BeginnZeile"
           ? "EndeZeile 1"
           REM ? "RahmenlinieUnten 1"
           ? "ZeileUnten 1"
         ELSE 
           IF opt% = 2 THEN ? FN ansi("WordBasic.Insert " + g$ + MwStText2$(a%) + g$)
           IF opt% = 4 THEN ? FN ansi("WordBasic.Insert " + g$ + MwStText2EU$(a%) + g$)
           IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(MwStBetrag2$(a%)) + g$
           IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(MwStBetrag2EU$(a%)) + g$
           ? "WordBasic.InsertPara"
           ? "WordBasic.LineUp 1"
           ? "WordBasic.StartOfLine"
           ? "WordBasic.EndOfLine 1"
           ? "WordBasic.LineDown 1"
         END IF 
       NEXT a%
     END IF 
     REM Summe Brutto
     IF w97$ <> "TRUE" THEN 
       ? FN ansi("EinfÅgen " + g$ + Zeile5$ + g$)
       IF art% <> 6 THEN 
         IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile5$) + g$ + " + chr$(13)")
         IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile5EU$) + g$ + " + chr$(13)")
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         ? "FormatZeichen .Punkt = " + g$ + FN ansi(wssu$) + g$ + ",.Fett = 1,.Kursiv = 1  
         REM ? "RahmenlinieUnten 1"
         ? "Unterstrichen"
       ELSE 
         IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi( LTRIM$ (WertZeile5$)) + g$ + " +  chr$(13)")
         IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) +  " + g$ + FN ansi( LTRIM$ (WertZeile5EU$)) + g$ + " +  chr$(13)")
       END IF 
       ? "ZeileUnten 1"
       ? "ZeileUnten 1"
     ELSE 
       ? FN ansi("WordBasic.Insert " + g$ + Zeile5$ + g$)
       IF art% <> 6 THEN 
         IF opt% = 2 THEN ? "WordBasic.Insert Chr(9)  + " + g$ + FN ansi(WertZeile5$) + g$ + " + chr(13)"
         IF opt% = 4 THEN ? "WordBasic.Insert Chr(9)  + " + g$ + FN ansi(WertZeile5EU$) + g$ + " + chr(13)"
         ? "WordBasic.LineUp 1"
         ? "WordBasic.StartOfLine"
         ? "WordBasic.EndOfLine 1"
         ? "WordBasic.FormatFont Points:=" + g$ + FN ansi(wssu$) + g$ + ",Bold:= 1, Italic:= 1"
         ? "WordBasic.Underline"
         ? "WordBasic.LineDown 1"
         ? "WordBasic.LineDown 1"
       ELSE 
         IF opt% = 2 THEN ? "WordBasic.Insert Chr(9)  + " + g$ + FN ansi( LTRIM$ (WertZeile5$)) + g$ + " + chr(13)"
         IF opt% = 4 THEN ? "WordBasic.Insert Chr(9)  +  + " + g$ + FN ansi( LTRIM$ (WertZeile5EU$)) + g$ + " + chr(13)"
         ? "WordBasic.LineUp 1"
         ? "WordBasic.StartOfLine"
         ? "WordBasic.EndOfLine 1"
         ? "WordBasic.FormatFont Points:=" + g$ + FN ansi(wssu$) + g$ + ",Bold:= 1, Italic:= 1"
         ? "WordBasic.LineDown 1"
         IF ZahlDatum.master > 0 THEN 
           ? "WordBasic.InsertPara"
           ? "WordBasic.LineUp 1"
           ? "WordBasic.Insert + " + g$ + FN ansi("Zahlungsziel war der: " + DATE$ (ZahlDatum.master,"0d.mm.yyyy")) + g$ + " + chr(13)"
           ? "WordBasic.LineDown 1"
         END IF 
       END IF 
     END IF 
     REM Mahnungen - erfolgte Teilzahlungen
     IF art% = 6 THEN 

 REM 07022000*******************************************************************************************************************
 
     cdatei$ = FILE 
     dat$ = abdatei$
     maske$ = UCASE$ ( FORM )
     codere% = codere.dat$
     codems% = codems.dat$
     umr% = umrechnung.dat$
     waehr$ = waehrung.dat$
     IF codere% > 0 AND EXISTS (codems%,codems.teilraus) THEN 
       FILE "teilraus"
       INDEX codems.teilraus
       SELECT FIRST 
       SELECT KEY codems% LOCK FILE "teilraus" INDEX codems.teilraus
       sumz% = 0
       sumzEu% = 0
       mahn% = 0
       mahneu% = 0
       IF w97$ <> "TRUE" THEN 
         ? FN ansi("EinfÅgenAbsatz")
         ? "FormatTabulator .Position = " + g$ + "15,5 cm" + g$ + ",.Ausrichten = 3,.Bestimmen"
         ? "FormatTabulator .Position = " + g$ + "16,6 cm" + g$ + ",.Ausrichten = 3,.Bestimmen"
   
         IF opt% = 2 THEN ? FN ansi("Zahlungen (erfolgt J/N) ")
         IF opt% = 4 THEN ? FN ansi("Zahlungen (erfolgt J/N) ")
         IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + chr$(9) + " + g$ + "Betrag" + g$)
         IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + chr$(9) + " + g$ + "Betrag" + g$)
         ? FN ansi("EinfÅgenAbsatz")
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         ? "FormatZeichen .Punkt = " + g$ + FN ansi(wssu$) + g$ + ",.Fett = 1,.Kursiv = 1 
         ? "Unterstrichen"
         REM ? "RahmenlinieUnten 1"
         ? "ZeileUnten 1"
         ? "FormatTabulator .Position = " + g$ + "15,5 cm" + g$ + ",.Ausrichten = 3,.Bestimmen"
       ELSE 
         ? "WordBasic.InsertPara"
         ? "WordBasic.LineDown 1"
         ? "WordBasic.FormatTabs Position:="g$ + "15,5 cm" + g$ + ", Align:= 3, Set:=1"
         ? "WordBasic.FormatTabs Position:="g$ + "16,6 cm" + g$ + ", Align:= 3, Set:=1"
         IF opt% = 2 THEN ? FN ansi("WordBasic.Insert " + g$ + "Zahlungen (erfolgt J/N) " + g$)
         IF opt% = 4 THEN ? FN ansi("WordBasic.Insert " + g$ + "Zahlungen (erfolgt J/N) " + g$)
         REM 21072000
         IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + Chr(9) + " + g$ + "Betrag" + g$
         IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + Chr(9) + " + g$ + "Betrag" + g$
         ? "WordBasic.InsertPara"
         ? "WordBasic.LineUp 1"
         ? "WordBasic.StartOfLine"
         ? "WordBasic.EndOfLine 1"
         ? "WordBasic.FormatFont Points:=" + g$ + "10" + g$ + ",Bold:= 1"
         ? "WordBasic.Underline"
         ? "WordBasic.LineDown 1"
         ? "WordBasic.FormatTabs Position:="g$ + "15,5 cm" + g$ + ", Align:= 3, Set:=1"
       END IF 
 
       WHILE NOT EOF ("teilraus") AND codems.teilraus = codems%
          IF RIGHT$ (maske$,1) <> "E" THEN 
            IF erledigt.teilraus = "J" THEN 
              sumz% = sumz% + GesBrutto.teilraus
              IF UCASE$ (mahnjn.teilraus) = "J" THEN mahn% = mahn% + gesbrutto.teilraus
            END IF 
          END IF 
          IF RIGHT$ (maske$,1) = "E" THEN 
            IF erledigt.teilraus = "J" THEN 
              sumzeu% = sumzeu% + GesBruttoeu.teilraus
              IF UCASE$ (mahnjn.teilraus) = "J" THEN mahneu% = mahneu% + gesbruttoeu.teilraus
            END IF 
          END IF 
          codems.teilraus = codems%
          CALL QuickStore("teilraus")
 
          IF gezahltam.teilraus <> 0 THEN 
            IF erledigt.teilraus = "J" THEN text1$ = DATE$ (gezahltam.teilraus,"0d.mm.yyyy") + SPACE$ (15) + "J"
            IF erledigt.teilraus = "N" THEN text1$ = DATE$ (gezahltam.teilraus,"0d.mm.yyyy") + SPACE$ (15) + "N"
          ELSE 
            IF erledigt.teilraus = "J" THEN text1$ = "00.00.0000" + SPACE$ (15) + "J"
            IF erledigt.teilraus = "N" THEN text1$ = "00.00.0000" + SPACE$ (15) + "N"
          END IF 
          IF w97$ <> "TRUE" THEN 
            IF opt% = 2 THEN ? FN ansi(text1$)
            IF opt% = 4 THEN ? FN ansi(text1$)
            IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + STR$ (GesBrutto.teilraus,",999999999.00") + " " + waehrung.teilraus + g$)
            IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + STR$ (GesBruttoEu.teilraus,",999999999.00") + " EUR" + g$)
            ? FN ansi("EinfÅgenAbsatz")
            ? "ZeileOben 1"
            ? "BeginnZeile"
            ? "EndeZeile 1"
            REM ? "RahmenlinieUnten 1"
            ? "ZeileUnten 1"
          ELSE 
            IF opt% = 2 THEN ? FN ansi("WordBasic.Insert " + g$ + text1$ + g$)
            IF opt% = 4 THEN ? FN ansi("WordBasic.Insert " + g$ + text1$ + g$)
            IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi( STR$ (GesBrutto.teilraus,",999999999.00") + " " + waehrung.teilraus) + g$
            IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi( STR$ (GesBruttoEu.teilraus,",999999999.00") + " EUR") + g$
            ? "WordBasic.InsertPara"
            ? "WordBasic.LineUp 1"
            ? "WordBasic.StartOfLine"
            ? "WordBasic.EndOfLine 1"
            ? "WordBasic.LineDown 1"
          END IF 
 
          SELECT NEXT LOCK INDEX codems.teilraus
       WEND 
       IF RIGHT$ (maske$,1) <> "E" THEN 
         IF sumz% <> 0 THEN sumzeu% = sumz% / umr% ELSE sumzeu% = 0
         IF mahn% <> 0 THEN mahneu% = mahn% / umr% ELSE mahneu% = 0
       END IF 
       IF RIGHT$ (maske$,1) = "E" THEN 
         IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr% ELSE sumz% = 0
         IF mahneu% <> 0 THEN mahn% = mahneu% * umr% ELSE mahn% = 0
       END IF 
       FILE dat$
       SELECT FIRST 
       SELECT KEY codems% LOCK FILE dat$ INDEX codems.dat$
       SummeTeil.dat$ = sumz%
       SummeTeilEu.dat$ = sumzeu%
       SummeMahn.dat$ = mahn%
       SummeMahnEu.dat$ = mahneu%
       CALL QuickStore(dat$)
       IF codere% > 0 THEN 
         IF EXISTS (codere%,codere.rausgang) THEN 
           FILE "rausgang"
           INDEX codere.rausgang
           SELECT FIRST 
           SELECT KEY codere% LOCK FILE "rausgang" INDEX codere.rausgang
           SummeTeil.rausgang = sumz%
           SummeTeilEu.rausgang = sumzeu%
           CALL QuickStore("rausgang")
         END IF 
       END IF 
 
       text1$ = "Summe der erfolgten Zahlungen"
       text2$ = "ausstehende Restsumme"
       IF w97$ <> "TRUE" THEN 
         
         ? FN ansi("EinfÅgen chr$(9) + chr$(9) +" + g$ + g$)
         ? FN ansi("EinfÅgenAbsatz")
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         ? "Unterstrichen"
         ? "ZeileUnten 1"
         REM ? "RahmenlinieUnten 1"
         ? FN ansi("EinfÅgenAbsatz")
         IF opt% = 2 THEN ? FN ansi(text1$)
         IF opt% = 4 THEN ? FN ansi(text1$)
         IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + STR$ (sumz%,",999999999.00") + " " + waehr$ + g$)
         IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + STR$ (sumzEU%,",999999999.00") + " EUR" + g$)
         ? FN ansi("EinfÅgenAbsatz")
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         ? "FormatZeichen .Punkt = " + g$ + FN ansi(wssu$) + g$ + ",.Fett = 1,.Kursiv = 1 
         REM ? "RahmenlinieUnten 1"
         ? "ZeileUnten 1"
         IF opt% = 2 THEN ? FN ansi(text2$)
         IF opt% = 4 THEN ? FN ansi(text2$)
         IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + STR$ (Gesbrutto.dat$ - sumz%,",999999999.00") + " " + waehr$ + g$)
         IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + STR$ (GesbruttoEu.dat$ - sumzEU%,",999999999.00") + " EUR" + g$)
         ? FN ansi("EinfÅgenAbsatz")
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         ? "FormatZeichen .Punkt = " + g$ + FN ansi(wssu$) + g$ + ",.Fett = 1,.Kursiv = 1 
         REM ? "RahmenlinieUnten 1"
         ? "ZeileUnten 1"
       ELSE 
         ? "WordBasic.Insert Chr(9) + Chr(9) +" + g$ + " " + g$
         ? "WordBasic.InsertPara"
         ? "WordBasic.LineUp 1"
         ? "WordBasic.StartOfLine"
         ? "WordBasic.EndOfLine 1"
         ? "WordBasic.Underline"
         
         ? "WordBasic.LineDown 1"
         IF opt% = 2 THEN ? FN ansi("WordBasic.Insert " + g$ + text1$ + g$)
         IF opt% = 4 THEN ? FN ansi("WordBasic.Insert " + g$ + text1$ + g$)
         IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi( STR$ (sumz%,",999999999.00") + " " + waehrung.teilraus) + g$
         IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi( STR$ (sumzEu%,",999999999.00") + " EUR") + g$
         ? "WordBasic.InsertPara"
         ? "WordBasic.LineUp 1"
         ? "WordBasic.StartOfLine"
         ? "WordBasic.EndOfLine 1"
         ? "WordBasic.FormatFont Points:=" + g$ + "10" + g$ + ",Bold:= 1"
         ? "WordBasic.LineDown 1"
         ? "WordBasic.InsertPara"
         ? "WordBasic.LineDown 1"
         IF opt% = 2 THEN ? FN ansi("WordBasic.Insert " + g$ + text2$ + g$)
         IF opt% = 4 THEN ? FN ansi("WordBasic.Insert " + g$ + text2$ + g$)
         rest% = sumz%
         restEu% = sumzEU%
         IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi( STR$ (GesBrutto.dat$ - sumz%,",999999999.00") + " " + waehrung.teilraus) + g$
         IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi( STR$ (GesBruttoEu.dat$ - sumzEU%,",999999999.00") + " EUR") + g$
         ? "WordBasic.InsertPara"
         ? "WordBasic.LineUp 1"
         ? "WordBasic.StartOfLine"
         ? "WordBasic.EndOfLine 1"
         ? "WordBasic.FormatFont Points:=" + g$ + "10" + g$ + ",Bold:= 1"
         ? "WordBasic.LineDown 1"
       END IF 
     ELSE 
       rest% = 0
       restEU% = 0
     END IF 
     FILE cdatei$
 
 
 
 
 REM ******************************************************************************************************************* 
      
     END IF 


     REM Mahnzuschlag und Porto

     IF art% = 6 THEN 
       mahnz1% = mahnz1.abdatei$
       mahnp1% = mahnp1.abdatei$
       mahnz2% = mahnz2.abdatei$
       mahnp2% = mahnp2.abdatei$
       mahnz3% = mahnz3.abdatei$
       mahnp3% = mahnp3.abdatei$
       mahnz4% = mahnz4.abdatei$
       mahnp4% = mahnp4.abdatei$
       mahnz5% = mahnz5.abdatei$
       mahnp5% = mahnp5.abdatei$

       mahnz1EU% = mahnz1EU.abdatei$
       mahnp1EU% = mahnp1EU.abdatei$
       mahnz2EU% = mahnz2EU.abdatei$
       mahnp2EU% = mahnp2EU.abdatei$
       mahnz3EU% = mahnz3EU.abdatei$
       mahnp3EU% = mahnp3EU.abdatei$
       mahnz4EU% = mahnz4EU.abdatei$
       mahnp4EU% = mahnp4EU.abdatei$
       mahnz5EU% = mahnz5EU.abdatei$
       mahnp5EU% = mahnp5EU.abdatei$

       REM CALL Fehler("Mahnung","")
 
       tab3$ = CHR$ (9) + CHR$ (9) + CHR$ (9) + CHR$ (9) + CHR$ (9)
       IF w97$ <> "TRUE" THEN 
         IF PAGE = 1 THEN 
           mahnsum% = GesBrutto.abdatei$ + mahnz1.abdatei$ + mahnp1.abdatei$ - rest%
           mahnsumEU% = GesBruttoEU.abdatei$ + mahnz1EU.abdatei$ + mahnp1EU.abdatei$ - restEU%
           mahnz$ = LTRIM$ ( STR$ (mahnz1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz1EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp1EU%,",999999999.00")) + " EUR"
           mdat1$ = DATE$ (MahnDatum1.abdatei$,"0d.mm.yyyy")
           ? FN ansi("EinfÅgen + " + g$ + FN ansi("+ MahngebÅhr 1. Mahnung vom: ") + mdat1$ + g$)
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr$(13)")
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ Mahnporto 1. Mahnung:  ") + g$)
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr$(13)")
         END IF 
         IF PAGE = 2 THEN 
           mdat1$ = DATE$ (MahnDatum1.abdatei$,"0d.mm.yyyy")
           mahnsum% = GesBrutto.abdatei$ + mahnz1.abdatei$ + mahnp1.abdatei$ + mahnz2.abdatei$ + mahnp2.abdatei$ - rest%
           mahnsumEU% = GesBruttoEU.abdatei$ + mahnz1EU.abdatei$ + mahnp1EU.abdatei$ + mahnz2EU.abdatei$ + mahnp2EU.abdatei$ - restEU%
           mahnz$ = LTRIM$ ( STR$ (mahnz1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz1EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp1EU%,",999999999.00")) + " EUR"
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ MahngebÅhr 1. Mahnung vom: ") + mdat1$ + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr$(13)")
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ Mahnporto 1. Mahnung:  ") + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr$(13)")

           mahnz$ = LTRIM$ ( STR$ (mahnz2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz2EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp2EU%,",999999999.00")) + " EUR"
           mdat2$ = DATE$ (MahnDatum2.abdatei$,"0d.mm.yyyy")
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ MahngebÅhr 2. Mahnung vom: ") + mdat2$ + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr$(13)")
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ Mahnporto 2. Mahnung:  ") + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr$(13)")
         END IF 

         IF PAGE = 3 THEN 
           mdat1$ = DATE$ (MahnDatum1.abdatei$,"0d.mm.yyyy")
           mdat2$ = DATE$ (MahnDatum2.abdatei$,"0d.mm.yyyy")
           mdat3$ = DATE$ (MahnDatum3.abdatei$,"0d.mm.yyyy")
           mahnsum% = GesBrutto.abdatei$ + mahnz1.abdatei$ + mahnp1.abdatei$ + mahnz2.abdatei$ + mahnp2.abdatei$ + mahnz3.abdatei$ + mahnp3.abdatei$ - rest%
           mahnsumEU% = GesBruttoEU.abdatei$ + mahnz1EU.abdatei$ + mahnp1EU.abdatei$ + mahnz2EU.abdatei$ + mahnp2EU.abdatei$ + mahnz3EU.abdatei$ + mahnp3EU.abdatei$ - restEU%
           mahnz$ = LTRIM$ ( STR$ (mahnz1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz1EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp1EU%,",999999999.00")) + " EUR"
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ MahngebÅhr 1. Mahnung vom: ") + mdat1$ + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr$(13)")
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ Mahnporto 1. Mahnung:  ") + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr$(13)")
 
           mahnz$ = LTRIM$ ( STR$ (mahnz2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz2EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp2EU%,",999999999.00")) + " EUR"
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ MahngebÅhr 2. Mahnung vom: ") + mdat2$ + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr$(13)")
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ Mahnporto 2. Mahnung:  ") + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr$(13)")

           mahnz$ = LTRIM$ ( STR$ (mahnz3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz3EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp3EU%,",999999999.00")) + " EUR"
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ MahngebÅhr 3. Mahnung vom: ") + mdat3$ + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr$(13)")
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ Mahnporto 3. Mahnung:  ") + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr$(13)")
         END IF 

         IF PAGE = 4 THEN 
           mdat1$ = DATE$ (MahnDatum1.abdatei$,"0d.mm.yyyy")
           mdat2$ = DATE$ (MahnDatum2.abdatei$,"0d.mm.yyyy")
           mdat3$ = DATE$ (MahnDatum3.abdatei$,"0d.mm.yyyy")
           mdat4$ = DATE$ (MahnDatum4.abdatei$,"0d.mm.yyyy")
           mahnsum% = GesBrutto.abdatei$ + mahnz1.abdatei$ + mahnp1.abdatei$ + mahnz2.abdatei$ + mahnp2.abdatei$ + mahnz3.abdatei$ + mahnp3.abdatei$ + mahnz4.abdatei$ + mahnp4.abdatei$ - rest%
           mahnsumEU% = GesBruttoEU.abdatei$ + mahnz1EU.abdatei$ + mahnp1EU.abdatei$ + mahnz2EU.abdatei$ + mahnp2EU.abdatei$ + mahnz3EU.abdatei$ + mahnp3EU.abdatei$ + mahnz4EU.abdatei$ + mahnp4EU.abdatei$ - restEU%
           mahnz$ = LTRIM$ ( STR$ (mahnz1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz1EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp1EU%,",999999999.00")) + " EUR"
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ MahngebÅhr 1. Mahnung vom: ") + mdat1$ + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr$(13)")
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ Mahnporto 1. Mahnung:  ") + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr$(13)")
 
           mahnz$ = LTRIM$ ( STR$ (mahnz2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz2EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp2EU%,",999999999.00")) + " EUR"
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ MahngebÅhr 2. Mahnung vom: ") + mdat2$ + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr$(13)")
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ Mahnporto 2. Mahnung:  ") + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr$(13)")
 
           mahnz$ = LTRIM$ ( STR$ (mahnz3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz3EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp3EU%,",999999999.00")) + " EUR"
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ MahngebÅhr 3. Mahnung vom: ") + mdat3$ + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr$(13)")
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ Mahnporto 3. Mahnung:  ") + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr$(13)")

           mahnz$ = LTRIM$ ( STR$ (mahnz4%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz4EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp4%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp4EU%,",999999999.00")) + " EUR"
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ MahngebÅhr 4. Mahnung vom: ") + mdat4$ + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr$(13)")
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ Mahnporto 4. Mahnung:  ") + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr$(13)")
         END IF 

         IF PAGE = 5 THEN 
           mdat1$ = DATE$ (MahnDatum1.abdatei$,"0d.mm.yyyy")
           mdat2$ = DATE$ (MahnDatum2.abdatei$,"0d.mm.yyyy")
           mdat3$ = DATE$ (MahnDatum3.abdatei$,"0d.mm.yyyy")
           mdat4$ = DATE$ (MahnDatum4.abdatei$,"0d.mm.yyyy")
           mdat5$ = DATE$ (MahnDatum5.abdatei$,"0d.mm.yyyy")
           mahnsum% = GesBrutto.abdatei$ + mahnz1.abdatei$ + mahnp1.abdatei$ + mahnz2.abdatei$ + mahnp2.abdatei$ + mahnz3.abdatei$ + mahnp3.abdatei$ + mahnz4.abdatei$ + mahnp4.abdatei$ + mahnz5.abdatei$ + mahnp5.abdatei$ - rest%
           mahnsumEU% = GesBruttoEU.abdatei$ + mahnz1EU.abdatei$ + mahnp1EU.abdatei$ + mahnz2EU.abdatei$ + mahnp2EU.abdatei$ + mahnz3EU.abdatei$ + mahnp3EU.abdatei$ + mahnz4EU.abdatei$ + mahnp4EU.abdatei$ + mahnp5EU.abdatei$ - restEU%
           mahnsumEU% = mahnsumEU% + mahnz5EU.abdatei$ + mahnp5EU.abdatei$
           mahnz$ = LTRIM$ ( STR$ (mahnz1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz1EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp1EU%,",999999999.00")) + " EUR"
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ MahngebÅhr 1. Mahnung vom: ") + mdat1$ + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr$(13)")
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ Mahnporto 1. Mahnung:  ") + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr$(13)")
 
           mahnz$ = LTRIM$ ( STR$ (mahnz2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz2EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp2EU%,",999999999.00")) + " EUR"
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ MahngebÅhr 2. Mahnung vom: ") + mdat2$ + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr$(13)")
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ Mahnporto 2. Mahnung:  ") + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr$(13)")
 
           mahnz$ = LTRIM$ ( STR$ (mahnz3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz3EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp3EU%,",999999999.00")) + " EUR"
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ MahngebÅhr 3. Mahnung vom: ") + mdat3$ + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr$(13)")
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ Mahnporto 3. Mahnung:  ") + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr$(13)")
 
           mahnz$ = LTRIM$ ( STR$ (mahnz4%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz4EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp4%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp4EU%,",999999999.00")) + " EUR"
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ MahngebÅhr 4. Mahnung vom: ") + mdat4$ + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr$(13)")
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ Mahnporto 4. Mahnung:  ") + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr$(13)")

           mahnz$ = LTRIM$ ( STR$ (mahnz5%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz5EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp5%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp5EU%,",999999999.00")) + " EUR"
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ MahngebÅhr 5. Mahnung vom: ") + mdat5$ + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr$(13)")
           ? FN ansi("EinfÅgen  + " + g$ + FN ansi("+ Mahnporto 5. Mahnung:  ") + g$
           IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr$(13)")
           IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr$(13)")
         END IF 
         WertZeile5$ = LTRIM$ ( STR$ (mahnsum%,",999999999.00")) + " " + waehrung.abdatei$
         WertZeile5EU$ = LTRIM$ ( STR$ (mahnsumEU%,",999999999.00")) + " EUR"
         ? FN ansi("EinfÅgen  + " + g$ + FN ansi("zu Åberweisender Betrag: ") + g$ + " + chr$(9)+ chr$(9)+ chr$(9)")
         IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile5$) + g$ + " + chr$(13)")
         IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile5EU$) + g$ + " + chr$(13)")
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         ? "FormatZeichen .Punkt = " + g$ + FN ansi(wssu$) + g$ + ",.Fett = 1,.Kursiv = 1  
         REM ? "RahmenlinieUnten 1"
         ? "Unterstrichen"
         ? "ZeileUnten 1"
         ? "ZeileUnten 1"
       ELSE 
           mdat1$ = DATE$ (MahnDatum1.abdatei$,"0d.mm.yyyy")
           mdat2$ = DATE$ (MahnDatum2.abdatei$,"0d.mm.yyyy")
           mdat3$ = DATE$ (MahnDatum3.abdatei$,"0d.mm.yyyy")
           mdat4$ = DATE$ (MahnDatum4.abdatei$,"0d.mm.yyyy")
           mdat5$ = DATE$ (MahnDatum5.abdatei$,"0d.mm.yyyy")
         IF PAGE = 1 THEN 
           REM CALL Fehler("PAGE1","")
           mahnsum% = GesBrutto.abdatei$ + mahnz1.abdatei$ + mahnp1.abdatei$ - rest%
           mahnsumEU% = GesBruttoEU.abdatei$ + mahnz1EU.abdatei$ + mahnp1EU.abdatei$ - restEU%
           mahnz$ = LTRIM$ ( STR$ (mahnz1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz1EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp1EU%,",999999999.00")) + " EUR"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ MahngebÅhr 1.Mahnung vom: ") + mdat1$ + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr(13)"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ Mahnporto 1.Mahnung: ") + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr(13)"
         END IF 
         IF PAGE = 2 THEN 
           mahnsum% = GesBrutto.abdatei$ + mahnz1.abdatei$ + mahnp1.abdatei$ + mahnz2.abdatei$ + mahnp2.abdatei$ - rest%
           mahnsumEU% = GesBruttoEU.abdatei$ + mahnz1EU.abdatei$ + mahnp1EU.abdatei$ + mahnz2EU.abdatei$ + mahnp2EU.abdatei$ - restEU%
           mahnz$ = LTRIM$ ( STR$ (mahnz1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz1EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp1EU%,",999999999.00")) + " EUR"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ MahngebÅhr 1.Mahnung vom: ") + mdat1$ + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr(13)"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ Mahnporto 1.Mahnung: ") + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr(13)"

           mahnz$ = LTRIM$ ( STR$ (mahnz2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz2EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp2EU%,",999999999.00")) + " EUR"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ MahngebÅhr 2.Mahnung vom: ") + mdat2$ + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr(13)"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ Mahnporto 2.Mahnung: ") + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr(13)"
         END IF 
         IF PAGE = 3 THEN 
           mahnsum% = GesBrutto.abdatei$ + mahnz1.abdatei$ + mahnp1.abdatei$ + mahnz2.abdatei$ + mahnp2.abdatei$ + mahnz3.abdatei$ + mahnp3.abdatei$ - rest%
           mahnsumEU% = GesBruttoEU.abdatei$ + mahnz1EU.abdatei$ + mahnp1EU.abdatei$ + mahnz2EU.abdatei$ + mahnp2EU.abdatei$ + mahnz3EU.abdatei$ + mahnp3EU.abdatei$ - restEU%
           mahnz$ = LTRIM$ ( STR$ (mahnz1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz1EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp1EU%,",999999999.00")) + " EUR"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ MahngebÅhr 1.Mahnung vom: ") + mdat1$ + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr(13)"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ Mahnporto 1.Mahnung: ") + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr(13)"
 
           mahnz$ = LTRIM$ ( STR$ (mahnz2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz2EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp2EU%,",999999999.00")) + " EUR"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ MahngebÅhr 2.Mahnung vom: ") + mdat2$ + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr(13)"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ Mahnporto 2.Mahnung: ") + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr(13)"

           mahnz$ = LTRIM$ ( STR$ (mahnz3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz3EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp3EU%,",999999999.00")) + " EUR"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ MahngebÅhr 3.Mahnung vom: ") + mdat3$ + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr(13)"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ Mahnporto 3.Mahnung: ") + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr(13)"
         END IF 
         IF PAGE = 4 THEN 
           mahnsum% = GesBrutto.abdatei$ + mahnz1.abdatei$ + mahnp1.abdatei$ + mahnz2.abdatei$ + mahnp2.abdatei$ + mahnz3.abdatei$ + mahnp3.abdatei$ + mahnz4.abdatei$ + mahnp4.abdatei$ - rest%
           mahnsumEU% = GesBruttoEU.abdatei$ + mahnz1EU.abdatei$ + mahnp1EU.abdatei$ + mahnz2EU.abdatei$ + mahnp2EU.abdatei$ + mahnz3EU.abdatei$ + mahnp3EU.abdatei$ + mahnz4EU.abdatei$ + mahnp4EU.abdatei$ - restEU%
           mahnz$ = LTRIM$ ( STR$ (mahnz1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz1EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp1EU%,",999999999.00")) + " EUR"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ MahngebÅhr 1.Mahnung vom: ") + mdat1$ + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr(13)"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ Mahnporto 1.Mahnung: ") + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr(13)"
 
           mahnz$ = LTRIM$ ( STR$ (mahnz2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz2EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp2EU%,",999999999.00")) + " EUR"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ MahngebÅhr 2.Mahnung vom: ") + mdat2$ + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr(13)"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ Mahnporto 2.Mahnung: ") + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr(13)"
 
           mahnz$ = LTRIM$ ( STR$ (mahnz3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz3EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp3EU%,",999999999.00")) + " EUR"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ MahngebÅhr 3.Mahnung vom: ") + mdat3$ + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr(13)"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ Mahnporto 3.Mahnung: ") + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr(13)"

           mahnz$ = LTRIM$ ( STR$ (mahnz4%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz4EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp4%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp4EU%,",999999999.00")) + " EUR"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ MahngebÅhr 4.Mahnung vom: ") + mdat4$ + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr(13)"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ Mahnporto 4.Mahnung: ") + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr(13)"
         END IF 
         IF PAGE = 5 THEN 
           mahnsum% = GesBrutto.abdatei$ + mahnz1.abdatei$ + mahnp1.abdatei$ + mahnz2.abdatei$ + mahnp2.abdatei$ + mahnz3.abdatei$ + mahnp3.abdatei$ + mahnz4.abdatei$ + mahnp4.abdatei$ + mahnz5.abdatei$ + mahnp5.abdatei$ - rest%
           mahnsumEU% = GesBruttoEU.abdatei$ + mahnz1EU.abdatei$ + mahnp1EU.abdatei$ + mahnz2EU.abdatei$ + mahnp2EU.abdatei$ + mahnz3EU.abdatei$ + mahnp3EU.abdatei$ + mahnz4EU.abdatei$ + mahnp4EU.abdatei$ + mahnp5.abdatei$ - restEU%
           mahnsumEU% = mahnsumEU% + mahnz5EU.abdatei$ + mahnp5EU.abdatei$
           mahnz$ = LTRIM$ ( STR$ (mahnz1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz1EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp1EU%,",999999999.00")) + " EUR"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ MahngebÅhr 1.Mahnung vom: ") + mdat1$ + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr(13)"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ Mahnporto 1.Mahnung: ") + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr(13)"
 
           mahnz$ = LTRIM$ ( STR$ (mahnz2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz2EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp2EU%,",999999999.00")) + " EUR"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ MahngebÅhr 2.Mahnung vom: ") + mdat2$ + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr(13)"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ Mahnporto 2.Mahnung: ") + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr(13)"
 
           mahnz$ = LTRIM$ ( STR$ (mahnz3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz3EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp3EU%,",999999999.00")) + " EUR"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ MahngebÅhr 3.Mahnung vom: ") + mdat3$ + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr(13)"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ Mahnporto 3.Mahnung: ") + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr(13)"
 
           mahnz$ = LTRIM$ ( STR$ (mahnz4%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz4EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp4%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp4EU%,",999999999.00")) + " EUR"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ MahngebÅhr 4.Mahnung vom: ") + mdat4$ + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr(13)"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ Mahnporto 4.Mahnung: ") + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr(13)"

           mahnz$ = LTRIM$ ( STR$ (mahnz5%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz5EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp5%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp5EU%,",999999999.00")) + " EUR"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ MahngebÅhr 5.Mahnung vom: ") + mdat5$ + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnz$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnzEU$) + g$ + " + chr(13)"
           ? "WordBasic.Insert + " + g$ + FN ansi("+ Mahnporto 5.Mahnung: ") + g$
           IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnp$) + g$ + " + chr(13)"
           IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi(mahnpEU$) + g$ + " + chr(13)"
         END IF 

  
         WertZeile5$ = LTRIM$ ( STR$ (mahnsum%,",999999999.00")) + " " + waehrung.abdatei$
         WertZeile5EU$ = LTRIM$ ( STR$ (mahnsumEU%,",999999999.00")) + " EUR"
         ? "WordBasic.Insert  chr(13)+ " + g$ + FN ansi("zu Åberweisende Summe: ") + g$
         IF opt% = 2 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi( LTRIM$ (WertZeile5$)) + g$ + " + chr(13)"
         IF opt% = 4 THEN ? "WordBasic.Insert chr(9) + " + g$ + FN ansi( LTRIM$ (WertZeile5EU$)) + g$ + " + chr(13)"
         ? "WordBasic.LineUp 1"
         ? "WordBasic.StartOfLine"
         ? "WordBasic.EndOfLine 1"
         ? "WordBasic.FormatFont Points:=" + g$ + FN ansi(wssu$) + g$ + ",Bold:= 1, Italic:= 1"
         ? "WordBasic.Underline"
         ? "WordBasic.LineDown 1"
         ? "WordBasic.LineDown 1"
       END IF 

     END IF 
   END IF 
 ELSE 
 REM CALL Fehler("Bruttofakturierung","")
   REM Summe Brutto
   IF w97$ <> "TRUE" THEN 
     ? FN ansi("EinfÅgen " + g$ + zeile1$ + g$)
     IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile1$) + g$ + " + chr$(13)")
     IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile1EU$) + g$ + " + chr$(13)")
     ? "ZeileOben 1"
     ? "BeginnZeile"
     ? "EndeZeile 1"
     REM ? "FormatZeichen .Punkt = " + g$ + "10" + g$ + ",.Fett = 1,.Kursiv = 1 
     ? "FormatZeichen .Punkt = " + g$ + FN ansi(wssu$) + g$ + ",.Fett = 1,.Kursiv = 1 
     ? "ZeileUnten 1"
     REM Rabatt
     ? FN ansi(wssum$)
     ? FN ansi("EinfÅgen " + g$ + zeile2$ + g$)
     IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile2$) + g$ + " + chr$(13)")
     IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(WertZeile2EU$) + g$ + " + chr$(13)")
     ? "ZeileUnten 1"
     REM Gesamtsumme 
     ? FN ansi("EinfÅgen " + g$ + Zeile4$ + g$)
     IF opt% = 2 THEN ? FN ansi("EinfÅgen CHR$ (9) + " + g$ + FN ansi(WertZeile4$) + g$)
     IF opt% = 4 THEN ? FN ansi("EinfÅgen CHR$ (9) + " + g$ + FN ansi(WertZeile4EU$) + g$)
     ? FN ansi("EinfÅgenAbsatz")
     ? "ZeileOben 1"
     ? "BeginnZeile"
     ? "EndeZeile 1"
     ? "FormatZeichen .Punkt = " + g$ + FN ansi(wssu$) + g$ + ",.Fett = 1,.Kursiv = 1 
     REM ? "RahmenlinieUnten 1"
     ? "Unterstrichen"
     ? "ZeileUnten 1"
     ? "ZeileUnten 1"
     REM ? FN ansi("EinfÅgenAbsatz")
   ELSE 
     ? FN ansi("WordBasic.Insert " + g$ + Zeile1$ + g$)
     IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(WertZeile1$) + g$ + " + chr(13)"
     IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(WertZeile1EU$) + g$ + " + chr(13)"
     ? "WordBasic.LineUp 1"
     ? "WordBasic.StartOfLine"
     ? "WordBasic.EndOfLine 1"
     ? "WordBasic.FormatFont Points:=" + g$ + FN ansi(wssu$) + g$ + ",Bold:= 1, Italic:= 1"
     ? "WordBasic.LineDown 1"
     ? FN ansi(wssum$)
     ? FN ansi("WordBasic.Insert " + g$ + Zeile2$ + g$)
     IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(WertZeile2$) + g$ + " + chr(13)"
     IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(WertZeile2EU$) + g$ + " + chr(13)"
     ? "WordBasic.LineUp 1"
     REM 250698
     ? FN ansi("WordBasic.Insert " + g$ + Zeile4$ + g$)
     IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(WertZeile4$) + g$
     IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(WertZeile4EU$) + g$
     ? "WordBasic.InsertPara"
     ? "WordBasic.LineUp 1"
     ? "WordBasic.StartOfLine"
     ? "WordBasic.EndOfLine 1"
     ? "WordBasic.FormatFont Points:=" + g$ + FN ansi(wssu$) + g$ + ",Bold:= 1, Italic:= 1"
     ? "WordBasic.Underline"
     ? "WordBasic.LineDown 1"
     ? "WordBasic.LineDown 1"
   END IF 
   ? FN ansi(wssum$)
   IF art% <> 6 THEN 
     FOR a% = 0 TO MwStCount% - 1
       IF w97$ <> "TRUE" THEN 
         IF opt% = 2 THEN ? FN ansi("EinfÅgen " + g$ + MwStText2$(a%) + g$)
         IF opt% = 4 THEN ? FN ansi("EinfÅgen " + g$ + MwStText2EU$(a%) + g$)
         IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(MwStBetrag2$(a%)) + g$)
         IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + FN ansi(MwStBetrag2EU$(a%)) + g$)
         ? FN ansi("EinfÅgenAbsatz")
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         REM ? "RahmenlinieUnten 1"
         ? "ZeileUnten 1"
       ELSE 
         IF opt% = 2 THEN ? FN ansi("WordBasic.Insert " + g$ + MwStText2$(a%) + g$)
         IF opt% = 4 THEN ? FN ansi("WordBasic.Insert " + g$ + MwStText2EU$(a%) + g$)
         IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(MwStBetrag2$(a%)) + g$
         IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi(MwStBetrag2EU$(a%)) + g$
         ? "WordBasic.InsertPara"
         ? "WordBasic.LineUp 1"
         ? "WordBasic.StartOfLine"
         ? "WordBasic.EndOfLine 1"
         ? "WordBasic.LineDown 1"
       END IF 
     NEXT a%
   END IF 
 END IF 
 IF w97$ <> "TRUE" THEN ? "ZeileUnten 1"
 IF w97$ = "TRUE" THEN ? "WordBasic.LineDown 1"
 ? FN ansi (wsepilog$)
 IF skonto.abdatei$ > 0 AND art% <> 6 THEN 
   IF w97$ <> "TRUE" THEN 
     ? FN ansi("EinfÅgenAbsatz")
     ? FN ansi("Fett")
     ? FN ansi(wsepilog$)
     ? FN ansi("EinfÅgen" + g$);
   ELSE 
     ? "Wordbasic.InsertPara"
     ? "Wordbasic.Bold"
     ? FN ansi(wsepilog$)
     ? "Wordbasic.Insert " + g$;
   END IF 
   besch$ = ""
   b% = 0
   IF opt% = 2 THEN 
     FOR a% = 1 TO LEN (RabattText$)
       t$ = MID$ (RabattText$,a%,1)
       IF ASC (t$) = 13 THEN 
         besch$ = besch$ + g$ + " + chr$(13) + " + g$
       ELSE 
         IF ASC (t$) = 34 THEN 
           besch$ = besch$ + g$ + " + chr$(34) + " + g$
         ELSE 
           IF ASC (t$) <> 10 THEN besch$ = besch$ + t$
         END IF 
       END IF 
       b% = b% + 1
       IF b% = 255 THEN 
         ? FN ansi(besch$ + g$)
         IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$);
         IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$;
         besch$ = ""
         b% = 0
       END IF 
     NEXT a%
   END IF 
   REM 06022000
   IF opt% = 4 THEN 
     FOR a% = 1 TO LEN (RabattTextEu$)
       t$ = MID$ (RabattTextEu$,a%,1)
       IF ASC (t$) = 13 THEN 
         besch$ = besch$ + g$ + " + chr$(13) + " + g$
       ELSE 
         IF ASC (t$) = 34 THEN 
           besch$ = besch$ + g$ + " + chr$(34) + " + g$
         ELSE 
           IF ASC (t$) <> 10 THEN besch$ = besch$ + t$
         END IF 
       END IF 
       b% = b% + 1
       IF b% = 255 THEN 
         ? FN ansi(besch$ + g$)
         IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$);
         IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$;
         besch$ = ""
         b% = 0
       END IF 
     NEXT a%
   END IF 



   IF w97$ <> "TRUE" THEN ? FN ansi(besch$ + g$ + " + chr$(13)")
   IF w97$ = "TRUE" THEN ? FN ansi(besch$ + g$ + " + chr(13)")
   REM ? FN ansi("Fett")
 END IF 
 END IF 
 REM von if art%<>3
 REM CALL Fehler("Doktest","")
 IF art% <> 6 THEN 
   IF ZahlDatum.abdatei$ > 0 THEN 
     besch$ = "Zahlungsziel: Bitte zahlen Sie den fÑlligen Betrag bis zum " + DATE$ (ZahlDatum.abdatei$,"0d.mm.yyyy")
     ? FN ansi( CHR$ (13))
     IF w97$ <> "TRUE" THEN 
       ? FN ansi("EinfÅgenAbsatz")
       ? FN ansi("Fett")
       ? FN ansi("Schriftgrad 9")
       ? FN ansi("EinfÅgen" + g$);
       ? FN ansi(besch$ + g$ + " + chr$(13)")
     ELSE 
       ? "WordBasic.InsertPara"
       ? "WordBasic.Bold"
       ? "WordBasic.FontSize 9"
       ? "WordBasic.Insert " + g$;
       ? FN ansi(besch$ + g$ + " + chr(13)")
     END IF 
   END IF 
 ELSE 
   IF PAGE = 1 THEN zahldatum% = ZahlMahnDat1.abdatei$
   IF PAGE = 2 THEN zahldatum% = ZahlMahnDat2.abdatei$
   IF PAGE = 3 THEN zahldatum% = ZahlMahnDat3.abdatei$
   IF PAGE = 4 THEN zahldatum% = ZahlMahnDat4.abdatei$
   IF PAGE = 5 THEN zahldatum% = ZahlMahnDat5.abdatei$
   IF ZahlDatum% > 0 THEN 
     besch$ = "Zahlungsziel: Bitte zahlen Sie den fÑlligen Betrag bis zum " + DATE$ (ZahlDatum%,"0d.mm.yyyy")
     ? FN ansi( CHR$ (13))
     IF w97$ <> "TRUE" THEN 
       ? FN ansi("EinfÅgenAbsatz")
       ? FN ansi("Fett")
       ? FN ansi("Schriftgrad 9")
       ? FN ansi("EinfÅgen" + g$);
       ? FN ansi(besch$ + g$ + " + chr$(13)")
     ELSE 
       ? "WordBasic.InsertPara"
       ? "WordBasic.Bold"
       ? "WordBasic.FontSize 9"
       ? "WordBasic.Insert " + g$;
       ? FN ansi(besch$ + g$ + " + chr(13)")
     END IF 
   END IF 
 END IF 

 REM 07022000 Ausweisen der erfolgten Teilzahlungen
 REM CALL Fehler("Teilzahlungen","")
 IF art% <> 6 THEN 
     cdatei$ = FILE 
     dat$ = abdatei$
     maske$ = UCASE$ ( FORM )
     codere% = codere.dat$
     codems% = codems.dat$
     umr% = umrechnung.dat$
     waehr$ = waehrung.dat$
     IF EXISTS (codems%,codems.teilraus) THEN 
       FILE "teilraus"
       INDEX codems.teilraus
       SELECT FIRST 
       SELECT KEY codems% LOCK FILE "teilraus" INDEX codems.teilraus
       sumz% = 0
       sumzEu% = 0
       mahn% = 0
       mahneu% = 0
       IF w97$ <> "TRUE" THEN 
         ? FN ansi("EinfÅgenAbsatz")
         ? "FormatTabulator .Position = " + g$ + "15,5 cm" + g$ + ",.Ausrichten = 3,.Bestimmen"
         ? "FormatTabulator .Position = " + g$ + "16,6 cm" + g$ + ",.Ausrichten = 3,.Bestimmen"
   
         IF opt% = 2 THEN ? FN ansi("Zahlungen (erfolgt J/N) ")
         IF opt% = 4 THEN ? FN ansi("Zahlungen (erfolgt J/N) ")
         IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + chr$(9) + " + g$ + "Betrag" + g$)
         IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + chr$(9) + " + g$ + "Betrag" + g$)
         ? FN ansi("EinfÅgenAbsatz")
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         ? "FormatZeichen .Punkt = " + g$ + FN ansi(wssu$) + g$ + ",.Fett = 1,.Kursiv = 1 
         ? "Unterstrichen"
         REM ? "RahmenlinieUnten 1"
         ? "ZeileUnten 1"
         ? "FormatTabulator .Position = " + g$ + "15,5 cm" + g$ + ",.Ausrichten = 3,.Bestimmen"
       ELSE 
         ? "WordBasic.InsertPara"
         ? "WordBasic.LineDown 1"
         ? "WordBasic.FormatTabs Position:="g$ + "15,5 cm" + g$ + ", Align:= 3, Set:=1"
         ? "WordBasic.FormatTabs Position:="g$ + "16,6 cm" + g$ + ", Align:= 3, Set:=1"
         IF opt% = 2 THEN ? FN ansi("WordBasic.Insert " + g$ + "Zahlungen (erfolgt J/N) " + g$)
         IF opt% = 4 THEN ? FN ansi("WordBasic.Insert " + g$ + "Zahlungen (erfolgt J/N) " + g$)
         IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + Chr(9) + " + g$ + FN ansi("Betrag") + g$
         IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + Chr(9) + " + g$ + FN ansi("Betrag") + g$
         ? "WordBasic.InsertPara"
         ? "WordBasic.LineUp 1"
         ? "WordBasic.StartOfLine"
         ? "WordBasic.EndOfLine 1"
         ? "WordBasic.FormatFont Points:=" + g$ + "10" + g$ + ",Bold:= 1"
         ? "WordBasic.Underline"
         ? "WordBasic.LineDown 1"
         ? "WordBasic.FormatTabs Position:="g$ + "15,5 cm" + g$ + ", Align:= 3, Set:=1"
       END IF 

       WHILE NOT EOF ("teilraus") AND codems.teilraus = codems%
          IF RIGHT$ (maske$,1) <> "E" THEN 
            IF erledigt.teilraus = "J" THEN 
              sumz% = sumz% + GesBrutto.teilraus
              IF UCASE$ (mahnjn.teilraus) = "J" THEN mahn% = mahn% + gesbrutto.teilraus
            END IF 
          END IF 
          IF RIGHT$ (maske$,1) = "E" THEN 
            IF erledigt.teilraus = "J" THEN 
              sumzeu% = sumzeu% + GesBruttoeu.teilraus
              IF UCASE$ (mahnjn.teilraus) = "J" THEN mahneu% = mahneu% + gesbruttoeu.teilraus
            END IF 
          END IF 
          codems.teilraus = codems%
          CALL QuickStore("teilraus")

          IF gezahltam.teilraus <> 0 THEN 
            IF erledigt.teilraus = "J" THEN text1$ = DATE$ (gezahltam.teilraus,"0d.mm.yyyy") + SPACE$ (15) + "J"
            IF erledigt.teilraus = "N" THEN text1$ = DATE$ (gezahltam.teilraus,"0d.mm.yyyy") + SPACE$ (15) + "N"
          ELSE 
            IF erledigt.teilraus = "J" THEN text1$ = "00.00.0000" + SPACE$ (15) + "J"
            IF erledigt.teilraus = "N" THEN text1$ = "00.00.0000" + SPACE$ (15) + "N"
          END IF 
          IF w97$ <> "TRUE" THEN 
            IF opt% = 2 THEN ? FN ansi(text1$)
            IF opt% = 4 THEN ? FN ansi(text1$)
            IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + STR$ (GesBrutto.teilraus,",999999999.00") + " " + waehrung.teilraus + g$)
            IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + STR$ (GesBruttoEu.teilraus,",999999999.00") + " EUR" + g$)
            ? FN ansi("EinfÅgenAbsatz")
            ? "ZeileOben 1"
            ? "BeginnZeile"
            ? "EndeZeile 1"
            REM ? "RahmenlinieUnten 1"
            ? "ZeileUnten 1"
          ELSE 
            IF opt% = 2 THEN ? FN ansi("WordBasic.Insert " + g$ + text1$ + g$)
            IF opt% = 4 THEN ? FN ansi("WordBasic.Insert " + g$ + text1$ + g$)
            IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi( STR$ (GesBrutto.teilraus,",999999999.00") + " " + waehrung.teilraus) + g$
            IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi( STR$ (GesBruttoEu.teilraus,",999999999.00") + " EUR") + g$
            ? "WordBasic.InsertPara"
            ? "WordBasic.LineUp 1"
            ? "WordBasic.StartOfLine"
            ? "WordBasic.EndOfLine 1"
            ? "WordBasic.LineDown 1"
          END IF 

          SELECT NEXT LOCK INDEX codems.teilraus
       WEND 
       IF RIGHT$ (maske$,1) <> "E" THEN 
         IF sumz% <> 0 THEN sumzeu% = sumz% / umr%
       END IF 
       IF RIGHT$ (maske$,1) = "E" THEN 
         IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr%
       END IF 
       FILE dat$
       SELECT FIRST 
       SELECT KEY codems% LOCK FILE dat$ INDEX codems.dat$
       SummeTeil.dat$ = sumz%
       SummeTeilEu.dat$ = sumzeu%
       SummeMahn.dat$ = mahn%
       SummeMahnEu.dat$ = mahneu%
       CALL QuickStore(dat$)
       IF codere% > 0 THEN 
         IF EXISTS (codere%,codere.rausgang) THEN 
           FILE "rausgang"
           INDEX codere.rausgang
           SELECT FIRST 
           SELECT KEY codere% LOCK FILE "rausgang" INDEX codere.rausgang
           SummeTeil.rausgang = sumz%
           SummeTeilEu.rausgang = sumzeu%
           SummeMahn.rausgang = mahn%
           SummeMahnEu.rausgang = mahneu%
           CALL QuickStore("rausgang")
         END IF 
       END IF 

       text1$ = "Summe der erfolgten Zahlungen"
       text2$ = "ausstehende Restsumme"
       IF w97$ <> "TRUE" THEN 
         
         ? FN ansi("EinfÅgen chr$(9) + chr$(9) +" + g$ + g$)
         ? FN ansi("EinfÅgenAbsatz")
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         ? "Unterstrichen"
         ? "ZeileUnten 1"
         REM ? "RahmenlinieUnten 1"
         ? FN ansi("EinfÅgenAbsatz")
         IF opt% = 2 THEN ? FN ansi(text1$)
         IF opt% = 4 THEN ? FN ansi(text1$)
         IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + STR$ (sumz%,",999999999.00") + " " + waehr$ + g$)
         IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + STR$ (sumzEU%,",999999999.00") + " EUR" + g$)
         ? FN ansi("EinfÅgenAbsatz")
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         ? "FormatZeichen .Punkt = " + g$ + FN ansi(wssu$) + g$ + ",.Fett = 1,.Kursiv = 1 
         REM ? "RahmenlinieUnten 1"
         ? "ZeileUnten 1"
         IF opt% = 2 THEN ? FN ansi(text2$)
         IF opt% = 4 THEN ? FN ansi(text2$)
         IF opt% = 2 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + STR$ (Gesbrutto.dat$ - sumz%,",999999999.00") + " " + waehr$ + g$)
         IF opt% = 4 THEN ? FN ansi("EinfÅgen chr$(9) + " + g$ + STR$ (GesbruttoEu.dat$ - sumzEU%,",999999999.00") + " EUR" + g$)
         ? FN ansi("EinfÅgenAbsatz")
         ? "ZeileOben 1"
         ? "BeginnZeile"
         ? "EndeZeile 1"
         ? "FormatZeichen .Punkt = " + g$ + FN ansi(wssu$) + g$ + ",.Fett = 1,.Kursiv = 1 
         REM ? "RahmenlinieUnten 1"
         ? "ZeileUnten 1"
       ELSE 
         ? "WordBasic.Insert Chr(9) + Chr(9) +" + g$ + " " + g$
         ? "WordBasic.InsertPara"
         ? "WordBasic.LineUp 1"
         ? "WordBasic.StartOfLine"
         ? "WordBasic.EndOfLine 1"
         ? "WordBasic.Underline"
         
         ? "WordBasic.LineDown 1"
         IF opt% = 2 THEN ? FN ansi("WordBasic.Insert " + g$ + text1$ + g$)
         IF opt% = 4 THEN ? FN ansi("WordBasic.Insert " + g$ + text1$ + g$)
         IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi( STR$ (sumz%,",999999999.00") + " " + waehrung.teilraus) + g$
         IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi( STR$ (sumzEu%,",999999999.00") + " EUR") + g$
         ? "WordBasic.InsertPara"
         ? "WordBasic.LineUp 1"
         ? "WordBasic.StartOfLine"
         ? "WordBasic.EndOfLine 1"
         ? "WordBasic.FormatFont Points:=" + g$ + "10" + g$ + ",Bold:= 1"
         ? "WordBasic.LineDown 1"
         IF opt% = 2 THEN ? FN ansi("WordBasic.Insert " + g$ + text2$ + g$)
         IF opt% = 4 THEN ? FN ansi("WordBasic.Insert " + g$ + text2$ + g$)
         IF opt% = 2 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi( STR$ (GesBrutto.dat$ - sumz%,",999999999.00") + " " + waehrung.teilraus) + g$
         IF opt% = 4 THEN ? "WordBasic.Insert Chr(9) + " + g$ + FN ansi( STR$ (GesBruttoEu.dat$ - sumzEU%,",999999999.00") + " EUR") + g$
         ? "WordBasic.InsertPara"
         ? "WordBasic.LineUp 1"
         ? "WordBasic.StartOfLine"
         ? "WordBasic.EndOfLine 1"
         ? "WordBasic.FormatFont Points:=" + g$ + "10" + g$ + ",Bold:= 1"
         ? "WordBasic.LineDown 1"
 
       END IF 
     END IF 
     FILE cdatei$
  END IF 
 REM ***************************************************************************************
 IF art% <> 6 THEN 
   IF Epilog.abdatei$ <> "" THEN 
     IF w97$ <> "TRUE" THEN 
       ? FN ansi("EinfÅgenAbsatz")
       ? FN ansi(wsepilog$)
       ? FN ansi("EinfÅgen " + g$);
     ELSE 
       ? "WordBasic.InsertPara"
       ? FN ansi(wsepilog$)
       ? "WordBasic.Insert " + g$;
     END IF 
     besch$ = ""
     b% = 0
     FOR a% = 1 TO LEN (Epilog.abdatei$)
       t$ = MID$ (Epilog.abdatei$,a%,1)
       IF ASC (t$) = 13 THEN 
         besch$ = besch$ + g$ + " + chr$(13) + " + g$
       ELSE 
         IF ASC (t$) = 34 THEN 
           besch$ = besch$ + g$ + " + chr$(34) + " + g$
         ELSE 
           IF ASC (t$) <> 10 THEN besch$ = besch$ + t$
         END IF 
       END IF 
       b% = b% + 1
       IF b% = 255 THEN 
         ? FN ansi(besch$ + g$)
         IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$);
         IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$;
         besch$ = ""
         b% = 0
       END IF 
     NEXT a%
     IF w97$ <> "TRUE" THEN ? FN ansi(besch$ + g$ + " + chr$(13)")
     IF w97$ = "TRUE" THEN ? FN ansi(besch$ + g$ + " + chr(13)")
   END IF 
 END IF 
 IF art% = 6 THEN 
   IF PAGE = 1 THEN epilogab$ = epilog1.abdatei$
   IF PAGE = 2 THEN epilogab$ = epilog2.abdatei$
   IF PAGE = 3 THEN epilogab$ = epilog3.abdatei$
   IF PAGE = 4 THEN epilogab$ = epilog4.abdatei$
   IF PAGE = 5 THEN epilogab$ = epilog5.abdatei$

   IF Epilogab$ <> "" THEN 
     IF w97$ <> "TRUE" THEN 
       ? FN ansi("EinfÅgenAbsatz")
       ? FN ansi(wsepilog$)
       ? FN ansi("EinfÅgen " + g$);
     ELSE 
       ? "WordBasic.InsertPara"
       ? FN ansi(wsepilog$)
       ? "WordBasic.Insert " + g$;
     END IF 
     besch$ = ""
     b% = 0
     FOR a% = 1 TO LEN (Epilogab$)
       t$ = MID$ (Epilogab$,a%,1)
       IF ASC (t$) = 13 THEN 
         besch$ = besch$ + g$ + " + chr$(13) + " + g$
       ELSE 
         IF ASC (t$) = 34 THEN 
           besch$ = besch$ + g$ + " + chr$(34) + " + g$
         ELSE 
           IF ASC (t$) <> 10 THEN besch$ = besch$ + t$
         END IF 
       END IF 
       b% = b% + 1
       IF b% = 255 THEN 
         ? FN ansi(besch$ + g$)
         IF w97$ <> "TRUE" THEN ? FN ansi("EinfÅgen " + g$);
         IF w97$ = "TRUE" THEN ? "WordBasic.Insert " + g$;
         besch$ = ""
         b% = 0
       END IF 
     NEXT a%
     IF w97$ <> "TRUE" THEN ? FN ansi(besch$ + g$ + " + chr$(13)")
     IF w97$ = "TRUE" THEN ? FN ansi(besch$ + g$ + " + chr(13)")
   END IF 
 END IF 
 CLOSE OUTPUT 
 REM CALL Fehler("Appactivate mit on error","")
  
 DDEINIT 5,"WINWORD","SYSTEM"
 IF w97$ = "TRUE" THEN 
   REM CALL Fehler("DoMakro97.DoCoDIE97","")
   DDEEXEC 5,"[ToolsMacro " + g$ + "DoMakro97.DoCoDIE97" + g$ + ",1]"
   
 ELSE 
   DDEEXEC 5,"[CALL DoMakro.MAIN " + g$ + "C:\M2.ASC" + g$ + "]"
 END IF 
 DDETERM 5
 
 ON ERROR GOTO apperr0501001
 APPACTIVATE "Microsoft Word"
 REM WordApp.Visible = - 1
 GOTO apperr0501002
apperr0501001: 
 APPACTIVATE Gtextdatei$
 ON ERROR GOTO ErrorHandler
apperr0501002: 
 
 END SUB 
  
 
 
 
  
 
 
 
 '      *************
 '      ** Details **
 '      *************
 
SUB Schein()
 CALL DFile(3,"SCHEIN" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"LIEFRUCK" + _fpw$)
 CALL DFile(3,"GRUPPEN" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"VERTRETE" + _fpw$)
 CALL DFile(3,"KOMBI" + _fpw$)
 CALL DFile(3,"AKUPREIS" + _fpw$)
 CALL DFile(3,"serienr" + _fpw$)
 DIM positionen$( RECCOUNT ("master"))
 cums% = CodeMS.master
 IF NEW ("MASTER") OR MOD ("MASTER") THEN CALL FStore("MASTER")
 _formend% = 0
 cusch% = 0
 parentform$ = UCASE$ ( FORM )
 IF parentform$ = "MASTPRJ" OR parentform$ = "MASTER" THEN 
   scheinform$ = "SCHEIN"
 END IF 
 IF parentform$ = "MASTPRJE" OR parentform$ = "MASTERE" THEN 
   scheinform$ = "SCHEINE"
 END IF 

 WHILE _formend% = 0
   SCHsub% = 0
   REM IF UCASE$ ( FORM ) <> SFORM$ THEN 
   IF UCASE$ ( FORM ) <> scheinform$ THEN 
     CALL MNSCHEIN()
     MENU ON 
     REM OPEN FORM SFORM$
     OPEN FORM GPrjForm$ + scheinform$
     SET f = Superbase.Form
     IF Eursupport$ = "FALSE" THEN 
       f.labelwaehr.visible = 0
     ELSE 
       f.labelwaehr.visible = - 1
     END IF 
     SET STATUS "Positionserfassung"
     SET HEADING title$ + " - Positionserfassung"
     FORM 
     CALL SCHIntro()
   END IF 
   IF dokschutz.master > 0 THEN 
     f.posneu.enabled = 0
     f.posneuart.enabled = 0
     f.posneugru.enabled = 0
     f.poseinf.enabled = 0
     f.posw.enabled = 0
     f.posw1.enabled = 0
     f.posw2.enabled = 0
     f.posw3.enabled = 0
     f.posw4.enabled = 0
     f.posw5.enabled = 0
     f.posw6.enabled = 0
     f.posw7.enabled = 0
     f.posw8.enabled = 0
   ELSE 
     f.posneu.enabled = - 1
     f.posneuart.enabled = - 1
     f.posneugru.enabled = - 1
     f.poseinf.enabled = - 1
     f.posw.enabled = - 1
     f.posw1.enabled = - 1
     f.posw2.enabled = - 1
     f.posw3.enabled = - 1
     f.posw4.enabled = - 1
     f.posw5.enabled = - 1
     f.posw6.enabled = - 1
     f.posw7.enabled = - 1
     f.posw8.enabled = - 1
   END IF 
   FORM 
   MOUSE ON 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU FOR 600
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE SCHsub%
   CASE 2
     CALL GRUPPEN()
   CASE 3
     CALL ARTIKEL()
   CASE 4
     CALL SCHEinfÅgen()
   CASE 5
     optNeuBeleg% = 1
     IF codems.master > 0 THEN 
       cums% = CodeMS.master
     END IF 
     IF codeku.adressen > 0 THEN 
       knr% = CodeKU.adressen
     END IF 
     optNeuBeleg% = 0
     CREATE DIALOG "MS",0,0,197,96,"Auswahl","MS Sans Serif",8
     ADD DIALOG "MS",4,3,5,192,63,0,"Bitte wÑhlen zwischen Neuerfassung/HinzufÅgen"
     ADD DIALOG "MS",3,6,22,154,10,0,"Neuerfassung einer Position",0,optNeuBeleg%
     ADD DIALOG "MS",3,6,39,184,10,0,"HinzufÅgen von Positionen aus einem anderen Beleg",1,optNeuBeleg%
     ADD DIALOG "MS",1,35,75,55,16,1,"&OK",1,1
     ADD DIALOG "MS",1,93,75,54,16,0,"&Abbrechen",0,0
     DIALOG "MS",reqzu%
     REMOVE DIALOG "MS"
     IF reqzu% = 1 THEN 
       IF optNeuBeleg% = 0 THEN 
         CALL SCHNeu()
       ELSE 
         aktADR$ = "j"
         CREATE DIALOG "MSNEU",0,0,178,147,title$,"MS Sans Serif",8
         ADD DIALOG "MSNEU",4,0,0,178,100,0,""
         REM ADD DIALOG "MSNEU",3,34,11,132,9,0,"Standardvorlage mit Standardfloskeln",8,opt%
         REM ADD DIALOG "MSNEU",3,34,22,132,10,0,"ohne Vorlage (leer),keine Floskeln",1,opt%
         ADD DIALOG "MSNEU",3,34,22,120,10,0,"HinzufÅgen aus Angebot",2,opt%
         ADD DIALOG "MSNEU",3,34,33,120,10,0,"HinzufÅgen aus Rechnung",3,opt%
         ADD DIALOG "MSNEU",3,34,44,120,10,0,"HinzufÅgen aus Lieferschein",4,opt%
         ADD DIALOG "MSNEU",3,34,55,120,10,0,"HinzufÅgen aus Auftrag",5,opt%
         ADD DIALOG "MSNEU",3,34,66,120,10,0,"HinzufÅgen aus Bestellung",6,opt%
         ADD DIALOG "MSNEU",3,34,77,120,10,0,"HinzufÅgen aus Gutschrift",7,opt%
         ADD DIALOG "MSNEU",9,9,12,20,20,2
         ADD DIALOG "MSNEU",4,0,88,178,25,0,""
         ADD DIALOG "MSNEU",2,34,102,138,10,0,"Vorlagen aus aktueller Adresse wÑhlen","j","n",aktADR$
         ADD DIALOG "MSNEU",1,34,129,55,16,1,"&OK",1,1
         ADD DIALOG "MSNEU",1,92,129,54,16,0,"&Abbrechen",0,0
         DIALOG "MSNEU",req%
         REMOVE DIALOG "MSNEU"
         IF req% = 1 THEN 
           IF aktADR$ = "n" THEN 
             adrser% = 0
             knr% = codeku.adressen
             adrglob% = 0
             adr% = 0
             adr% = ADRSuche%(0)
           END IF 
           REM ***********************************************************************************
   SELECT KEY cums% LOCK FILE "Master" INDEX codems.master
   MSArt% = Art.Master
   SELECT CASE opt%
   CASE 2
     bedingung$ = "art.master=1"
     art% = 1
   CASE 3
     bedingung$ = "art.master=2"
     art% = 2
   CASE 4
     bedingung$ = "art.master=3"
     art% = 3
   CASE 5
     bedingung$ = "art.master=4"
     art% = 4
   CASE 6
     bedingung$ = "art.master=5"
     art% = 5
   CASE 7
     bedingung$ = "art.master=7"
     art% = 7
   END SELECT 
   IF opt% > 1 AND opt% < 8 THEN 
     IF opt% <> 7 THEN 
       vMSArt% = opt% - 1
     ELSE 
       vMSArt% = opt%
     END IF 
     scode% = knr% * 10 + vMSArt%
     vcums% = CodeMS.Master
     CALL FStore("MASTER")
     REM ###***
     MOUSE OFF 
     REDIM auswahl$( RECCOUNT ("master"))
     REDIM positionen$( RECCOUNT ("master"))
     FOR a% = 0 TO RECCOUNT ("master")
       Auswahl$(a%) = ""
     NEXT a%
     FOR a% = 0 TO RECCOUNT ("master")
       Positionen$(a%) = ""
     NEXT a%
     FILE "master"
     SELECT WHERE 
     IF aktADR$ = "j" THEN 
       INDEX quickcodeku.master
       SELECT FIRST 
       SELECT KEY scode% INDEX quickcodeku.master
       counter% = - 1
       WHILE NOT EOF ("master") AND quickcodeku.master = scode%
         counter% = counter% + 1
         Positionen$(counter%) = Nummer.Master + "   " + DATE$ (Datum.MASTER,"0d.mm.yy") + "    " + STR$ (GesBrutto.MASTER,",999999999.00") + "    " + nachname.MASTER + SPACE$ (90) + STR$ (codems.master,"000000")
         SELECT NEXT INDEX quickcodeku.master
       WEND 
     ELSE 
Adrsel02032000:  
       IF aktADR$ = "n" AND adr% > 1 THEN 
         SELECT WHERE codeku.master = adr%
       END IF 
       INDEX art.master
       SELECT FIRST 
       SELECT KEY vMSArt% INDEX art.master
       counter% = - 1
       WHILE NOT EOF ("master") AND art.master = vMSArt%
         counter% = counter% + 1
         Positionen$(counter%) = Nummer.Master + "   " + DATE$ (Datum.MASTER,"0d.mm.yy") + "   " + STR$ (GesBrutto.MASTER,",999999999.00") + "     " + nachname.MASTER + SPACE$ (90) + STR$ (codems.master,"000000")
         SELECT NEXT INDEX art.master
       WEND 
       SELECT WHERE FILE "master"
       REM EXECUTE "REQUEST ~Vorlage (~ + MSArt$ + ~)auswÑhlen:~,~Nummer,Datum,Nettosumme,Nachname~,25,req%,nummer$,72,Nummer.Master,Datum.MASTER,GesNetto.master,Nachname.MASTER INDEX CodeMS.Master WHERE " + bedingung$
     END IF 
     FILE "master"
     INDEX codems.master
     _cums1% = 0
     MOUSE ON 
     IF counter% > - 1 THEN 
       CREATE DIALOG "REGISTER",0,0,322,350,title$,"MS Sans Serif",8
       ADD DIALOG "REGISTER",5,5,4,240,10,0,"WÑhlen Sie einen Beleg"
       ADD DIALOG "REGISTER",7,5,19,309,310,8,2,Positionen$,Auswahl$,Positionen$(0)
       ADD DIALOG "REGISTER",1,129,330,48,16,0,"&OK",1,1
       ADD DIALOG "REGISTER",1,178,330,48,16,0,"&Abbrechen",0,0
       DIALOG "REGISTER",req%
       REMOVE DIALOG "REGISTER"
       IF req% < 1 AND aktADR$ = "n" THEN GOTO Adrsel020320001
       GOTO Adrsel020320002
Adrsel020320001: 
       IF aktADR$ = "n" THEN 
         adrser% = 0
         knr% = codeku.adressen
         adrglob% = 0
         adr% = 0
         adr% = ADRSuche%(0)
         GOTO Adrsel02032000
       END IF 
 
Adrsel020320002:   
     ELSE 
       REQUEST "Keine Vorlage gefunden,","",2
       req% = 1
       opt% = 8
     END IF 
     _cums1% = 0
     IF counter% <> - 1 THEN _cums1% = VAL ( RIGHT$ (Auswahl$(0),6))
     IF cums% = _cums1% THEN 
       CALL Fehler("Das Quelldokument, aus dem Sie Positionen in Ihr Zieldokument kopieren wollen darf nicht Ihr Zieldokument sein!","")
       req% = 0
     END IF 
     IF req% = 1 AND _cums1% <> 0 THEN 
       REM CALL FStore("MASTER")
       SELECT KEY _cums1% FILE "MASTER" INDEX codems.Master
       IF FOUND ("master") THEN 
         REM 2.Dialog einstellen
         flo% = 2
         IF optNeuBeleg% = 0 THEN 
           CREATE DIALOG "MSNEU",0,0,178,74,title$,"MS Sans Serif",8
           ADD DIALOG "MSNEU",4,0,0,178,50,0,""
           ADD DIALOG "MSNEU",3,34,11,132,9,0,"Floskeltexte 1 zu 1 Åbernehmen",1,flo%
           ADD DIALOG "MSNEU",3,34,22,132,10,0,"Standardfloskeln eintragen",2,flo%
           ADD DIALOG "MSNEU",3,34,33,130,10,0,"keine Floskeln eintragen",3,flo%
           ADD DIALOG "MSNEU",9,9,12,20,20,2
           ADD DIALOG "MSNEU",1,62,56,55,16,1,"&OK",1,1
           DIALOG "MSNEU",req%
           REMOVE DIALOG "MSNEU"
         ELSE 
           flo% = 3
         END IF 
         MOUSE OFF 
         IF aktADR$ = "j" THEN 
           CALL MSPrepare(_cums1%,vcums%,flo%,optNeuBeleg%)
         ELSE 
           CALL MSPrepSpezi(_cums1%,vcums%,flo%,optNeuBeleg%)
         END IF 
         OK% = 1
       ELSE 
         opt% = 8
       END IF 
     ELSE 
       opt% = 8
       REM IF req% = 0 THEN 
         REM opt% = - 1
         REM ok% = 0
         REM neumaster$ = "n"
       REM END IF 
     END IF 
   END IF 
   IF OK% = 1 THEN 
     CALL FStore("master")
     SELECT FORM KEY vcums% LOCK FILE "MASTER" INDEX CodeMS.Master
     SELECT KEY vcums% LOCK FILE "MASTER" INDEX CodeMS.Master
     CALL MSRechnen()
     SELECT FORM KEY vcums% LOCK FILE "MASTER" INDEX CodeMS.Master
     SELECT KEY vcums% LOCK FILE "MASTER" INDEX CodeMS.Master
     FORM 
   END IF 
 
 
           REM ***********************************************************************************

         END IF 
       END IF 
     END IF 
   CASE 99
     CALL POSBEARB()
   END SELECT 
   REM CALL BMCheckMail()
 WEND 
 FILE "master"
 INDEX codems.master
 SELECT FIRST 
 REM 070998 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 SELECT KEY cums% FILE "master" INDEX codems.master
 CALL MSCHRabattProz()
 CALL MSCHRabatt()
 FILE "master"
 INDEX codems.master
 SELECT FIRST 
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 CALL SkontoProz()
 CALL Skonto()
 SET STATUS ""
 _formend% = 0
 SELECT WHERE FILE "master"
 SELECT WHERE FILE "schein"
 SELECT KEY cums% FILE "master" INDEX codems.master
 END SUB 
 
SUB ScheinEnde()
 CALL MSRechnen()
 FORM 1
 END SUB 
 
 
 ' SCHEIN Intro
 ' =======================================================================
 
SUB SCHIntro()
 FILE "MASTER"
 INDEX CodeMS.master
 SELECT FORM KEY cums% FILE "MASTER" INDEX CodeMS.master
 quick% = (cums% * 1000) + cusch%
 CALL PosNum(cums%)
 IF cusch% <> 0 THEN 
   SELECT KEY quick% FILE "schein" INDEX quickcodepos.schein
 END IF 
 END SUB 
 
 
 ' SCHEIN neu anlegen
 ' =======================================================================
 
SUB SCHNeu()
 IF NEW ("SCHEIN") OR MOD ("SCHEIN") THEN CALL QuickStore("SCHEIN")
 SELECT KEY cums% FILE "master" INDEX codems.master
 IF DEFA$ = "MEGA" AND StatusM.master = "b" THEN 
   CALL Fehler("Vorgang wurde bereits gebucht!","Eine weiterte Bearbeitung ist nicht mîglich!")
   END SUB 
 END IF 
 BLANK FILE "SCHEIN"
 npos% = AnzPos.MASTER + 1
 scode% = cums% * 1000 + npos%
 CodeMS.schein = cums%
 PosNr.schein = npos%
 Codesch.schein = SER ("schein",1)
 rÅckstmenge.schein = 0
 codema.schein = 999
 serienr.schein = "<ohne Zuordnung>"
 provisproz.schein = 0
 CALL QuickStore("SCHEIN")
 SELECT FORM KEY cums% LOCK FILE "MASTER" INDEX CodeMS.master
 SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.master
 AnzPos.MASTER = npos%
 CALL FStore("MASTER")
 SELECT KEY scode% FILE "SCHEIN" INDEX QuickCodePOS.SCHEIN
 CALL SCHAuswahl()
 END SUB 
 
 
 ' SCHEIN-Position lîschen
 ' =======================================================================
 
SUB SCHLoeschen()
 ms% = Codems.schein
 IF disabled%("SCHLoeschen") THEN END SUB 
 IF NEW ("SCHEIN") OR MOD ("SCHEIN") THEN CALL FStore("SCHEIN")
 IF DEFA$ = "MEGA" AND StatusM.master = "b" THEN 
   CALL Fehler("Vorgang wurde bereits gebucht!","Eine weiterte Bearbeitung ist nicht mîglich!")
   END SUB 
 END IF 
 REQUEST "Wollen Sie die aktuelle Position wirklich lîschen?","",135,req%
 IF req% = 1 THEN 
   MOUSE OFF 
   FILE "SCHEIN"
   scode% = QuickCodePos.SCHEIN
   SELECT KEY scode% LOCK FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   SELECT REMOVE FILE "SCHEIN"
   SELECT KEY ms% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   AnzPos.Master = AnzPos.MASTER - 1
   anzGes% = AnzPos.Master
   CALL QuickStore("MASTER")
 
   REM ****** Positionen neu durchnummerieren ******
   
   FILE "SCHEIN"
   INDEX QuickCodePos.SCHEIN
   SELECT FIRST 
   CALL PosNum(ms%)
    _pos% = 1
   REM FOR a% = 1 TO AnzPos.Master + 1
   REM  scode% = cums% * 1000 + a%
   REM  SELECT KEY scode% LOCK FILE "SCHEIN" INDEX QuickCodePOS.SCHEIN
   REM  IF FOUND ("SCHEIN") THEN 
   REM    PosNr.SCHEIN = _pos%
   REM    _pos% = _pos% + 1
   REM    CALL QuickStore("SCHEIN")
   REM  END IF 
   REM NEXT 
 
   SELECT KEY ms% LOCK FILE "master" INDEX codems.master
   MOUSE OFF 
   
   CALL MSRechnen()
 ELSE 
   MOUSE ON 
   FILE "SCHEIN"
 END IF 
 END SUB 
 

 ' SCHEIN-Positionen neu durchnummerieren
 ' ======================================================================= 
SUB PosNum(ms%)
   MOUSE OFF 
   SELECT KEY ms% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   FILE "SCHEIN"
   INDEX Codems.SCHEIN
   SELECT FIRST 
   SELECT KEY ms% FILE "schein" INDEX CodeMS.schein
   anz% = 0
   WHILE NOT EOF ("schein") AND codems.schein = ms%
     anz% = anz% + 1
     SELECT NEXT LOCK 
   WEND 
   AnzPos.Master = anz%
   CALL QuickStore("master")
   anzGes% = anz%
 
   anz% = 1
   FILE "SCHEIN"
   INDEX QuickCodePos.SCHEIN
   SELECT FIRST 
   scode% = ms% * 1000
   SELECT KEY scode% LOCK FILE "SCHEIN" INDEX QuickCodePOS.SCHEIN
   IF anzGes% = 1 THEN 
       QuickCodePos.SCHEIN = ms% * 1000 + anz%
       PosNr.SCHEIN = anz%
       Workstation.Schein = Workstation%
       QWoNo.Schein = STR$ (Workstation%,"000000") + STR$ (codesch.Schein,"000000")
       RecStatus.Schein = "c"
       STORE FILE "SCHEIN"
       UNLOCK CURRENT FILE "schein"
       UNLOCK FILE "schein" ALL 
   ELSE 
     WHILE NOT EOF ("schein") AND codems.schein = ms% AND anz% < anzGes% + 1
       PosNr.SCHEIN = anz%
       Workstation.Schein = Workstation%
       QWoNo.Schein = STR$ (Workstation%,"000000") + STR$ (codesch.Schein,"000000")
       RecStatus.Schein = "c"
       STORE FILE "SCHEIN"
       UNLOCK CURRENT FILE "schein"
       UNLOCK FILE "schein" ALL 
       SELECT NEXT LOCK 
       anz% = anz% + 1
     WEND 
     UNLOCK CURRENT FILE "schein"
     UNLOCK FILE "schein" ALL 
   END IF 
   INDEX codems.schein
   SELECT FIRST 
   SELECT KEY ms% LOCK FILE "SCHEIN" INDEX CodeMS.SCHEIN
   anz% = 1
   IF anzGes% = 1 THEN 
       QuickCodePos.SCHEIN = ms% * 1000 + PosNr.SCHEIN
       Workstation.Schein = Workstation%
       QWoNo.Schein = STR$ (Workstation%,"000000") + STR$ (codesch.Schein,"000000")
       RecStatus.Schein = "c"
       STORE FILE "SCHEIN"
       UNLOCK CURRENT FILE "schein"
       UNLOCK FILE "schein" ALL 
   ELSE 
     WHILE NOT EOF ("schein") AND codems.schein = ms% AND anz% < anzGes% + 1
       posnra% = PosNr.schein
       QuickCodePos.SCHEIN = ms% * 1000 + PosNra%
       Workstation.Schein = Workstation%
       QWoNo.Schein = STR$ (Workstation%,"000000") + STR$ (codesch.Schein,"000000")
       RecStatus.Schein = "c"
       STORE FILE "SCHEIN"
       UNLOCK CURRENT FILE "schein"
       UNLOCK FILE "schein" ALL 
       SELECT NEXT LOCK 
       anz% = anz% + 1
     WEND 
     UNLOCK CURRENT FILE "schein"
     UNLOCK FILE "schein" ALL 
   END IF 
   INDEX QuickCodePos.SCHEIN
 END SUB 


 
 ' SCHEIN-Position einfÅgen
 ' =======================================================================
 
SUB SCHEinfÅgen()
 IF NEW ("SCHEIN") OR MOD ("SCHEIN") THEN CALL FStore("SCHEIN")
 IF DEFA$ = "MEGA" AND StatusM.master = "b" THEN 
   CALL Fehler("Vorgang wurde bereits gebucht!","Eine weiterte Bearbeitung ist nicht mîglich!")
   END SUB 
 END IF 
 CREATE DIALOG "POSEINF",0,0,224,59,title$,"MS Sans Serif",8
 ADD DIALOG "POSEINF",4,1,3,221,35,0,"Vor welcher Position mîchten Sie die neue Position einfÅgen ?"
 ADD DIALOG "POSEINF",6,144,16,19,12,0,0,poseinf%,3
 ADD DIALOG "POSEINF",5,7,17,135,15,0,"Bitte geben Sie die Positionsnummer ein:"
 ADD DIALOG "POSEINF",1,49,41,55,16,1,"&OK",1,1
 ADD DIALOG "POSEINF",1,109,41,55,16,0,"&Abbrechen",0,0
 DIALOG "POSEINF",req%
 REMOVE DIALOG "POSEINF"
 IF req% = 1 THEN 
   SELECT KEY cums% FILE "master" INDEX codems.master
   FILE "schein"
   FOR a% = AnzPos.master TO poseinf% STEP - 1
     scode% = cums% * 1000 + a%
     SELECT KEY scode% LOCK FILE "SCHEIN" INDEX QuickCodePOS.SCHEIN
     IF FOUND ("SCHEIN") THEN 
       PosNr.SCHEIN = PosNr.Schein + 1
       CALL QuickStore("SCHEIN")
     END IF 
   NEXT a%
 
   BLANK FILE "SCHEIN"
   npos% = poseinf%
   scode% = cums% * 1000 + npos%
   CodeMS.schein = cums%
   PosNr.schein = npos%
   Codesch.schein = SER ("schein",1)
   codesch% = Codesch.schein
   CALL QuickStore("SCHEIN")
   SELECT FORM KEY cums% FILE "MASTER" INDEX CodeMS.master
   SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.master
   AnzPos.MASTER = AnzPos.MASTER + 1
   CALL FStore("MASTER")
   SELECT KEY scode% FILE "SCHEIN" INDEX QuickCodePOS.SCHEIN
   CALL SCHAuswahl()
   MOUSE OFF 
   CALL MSRechnen()
 ELSE 
   MOUSE ON 
   FILE "SCHEIN"
 END IF 
 CALL PosNum(cums%)
 END SUB 
 
 
 
 
  
 ' SCHEIN Artikel auswÑhlen
 ' =======================================================================
 
SUB SCHAuswahl()
 _cuart% = CodeAR.SCHEIN
 REM _cugrp% = CodeGR.SCHEIN
 scode% = QuickCodePos.SCHEIN
 SELECT KEY scode% LOCK FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
 CALL ARTSuchen()
 IF artsucheok% <> 1 THEN GOTO mfal0111981
 IF artsucheok% = 1 THEN 
   FILE "SCHEIN"
   _cuart% = cuart%
   REM CALL Server("LISTBOXSHOW","")
         LAuswahl$ = AdrFound$(0)
         LAuswahl1$(0) = LAuswahl$
         CREATE DIALOG "ADRLISTE",0,0,440,297,"Artikel wÑhlen","MS Sans Serif",8
         REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
         ADD DIALOG "ADRLISTE",7,5,8,428,261,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRLISTE",1,174,274,56,16,1,"&OK",1,1
         ADD DIALOG "ADRLISTE",1,234,274,56,16,0,"&Abbrechen",0,0
         DIALOG "ADRLISTE",req5%
         MOUSE ON 
         REMOVE DIALOG "ADRLISTE"
         LAuswahl$ = LAuswahl1$(0)
         cuart% = VAL ( RIGHT$ (LAuswahl$,6))
         IF cuart% > 0 THEN erg$ = "1"
   MOUSE ON 
   REM erg$ = ServerReply$()
   IF erg$ <> "" THEN 
     scode% = QuickCodePOS.SCHEIN
     REM _cuart% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
     _cuart% = cuart%
     SELECT KEY _cuart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL

     IF UCASE$ ( FORM ) = "SCHEIN" THEN 
       IF waehrmarti% <> codew.artikel THEN 
         t1$ = "Sie versuchen zum Beleg, der in der WÑhrung " + waehrmarti$ + " fakturiert wird einen Artikel in der WÑhrung " + waehrung.artikel + " zu erfassen!"
         t2$ = "Dies ist nur mîglich, wenn Sie in die Euro-Maske wechseln und von dort aus alle Artikel in Euro erfassen!"
         CALL Fehler(t1$,t2$)
         GOTO mfal0111981
       END IF 
     END IF 


     IF IsKombi%(_cuart%) THEN 
       REQUEST "Bei dem gewÑhlten Artikel handelt es sich um einen Kombiartikel!","Soll er neu durchkalkuliert werden?",135,reqab%
       IF reqab% = 1 THEN 
         CALL KOMBRechnen(_cuart%)
       END IF 
     END IF 
     REM CALL Fehler("","")
     IF EXISTS (_cuart%,codear.akupreis) THEN 
       QuickArtKu$ = STR$ (_cuart%,"000000") + STR$ (knr%,"000000")
       SELECT FIRST FILE "AKUPREIS" INDEX QuickArtKu.akupreis
       SELECT KEY QuickArtKu$ FILE "AKUPREIS" INDEX QuickArtKu.akupreis

       anzakupreis% = 0
       REDIM vknettoaku%(10)
       REDIM vkbruttoaku%(10)
       REDIM vknettoeuaku%(10)
       REDIM vkbruttoeuaku%(10)
       FOR i% = 0 TO 10
         vknettoaku%(i%) = - 1
         vkbruttoaku%(i%) = - 1
         vknettoeuaku%(i%) = - 1
         vkbruttoeuaku%(i%) = - 1
       NEXT i%
       WHILE NOT EOF ("AKUPREIS") AND QuickArtKu.akupreis = QuickArtKu$
         IF codeku.akupreis = knr% THEN 
           
             vknettoaku%(anzakupreis%) = netto.akupreis
             vkbruttoaku%(anzakupreis%) = brutto.akupreis
             vknettoeuaku%(anzakupreis%) = nettoeu.akupreis
             vkbruttoeuaku%(anzakupreis%) = bruttoeu.akupreis
             anzakupreis% = anzakupreis% + 1
           END IF 
         SELECT NEXT FILE "AKUPREIS" INDEX QuickArtKu.akupreis
       WEND 
     END IF 
     REM CALL Fehler("Kundenpreis","")
     SELECT KEY scode% LOCK FILE "SCHEIN" INDEX QuickCodePOS.SCHEIN
     IF MwSt.artikel = 0 THEN REQUEST "Achtung der Artikel enthÑlt keine MWST!","Bitte im Artikel Ñndern!",2
     CodeAR.schein = CodeAR.ARTIKEL
     CodeGR.schein = CodeGR.ARTIKEL
     
     Handelsspanne.schein = Handelsspanne.artikel
     Bezeichnung.schein = Bezeichnung.ARTIKEL
     Bestandskonto.schein = Bestandskonto.artikel
     Verbrauchskonto.schein = Verbrauchskonto.artikel
     Bezugsmenge.schein = Bezugsmenge.artikel
     Maschine.schein = Maschine.artikel
     ZeitproBezugsme.schein = ZeitproBezugsme.artikel
     IF mastform$ LIKE "EUR" THEN 
       rme1.schein = rmeEU1.artikel:rmeproz1.schein = rmeproz1.artikel:rmedm1.schein = rmeEU1.artikel
       rme2.schein = rmeEU2.artikel:rmeproz2.schein = rmeproz2.artikel:rmedm2.schein = rmeEU2.artikel
       rme3.schein = rmeEU3.artikel:rmeproz3.schein = rmeproz3.artikel:rmedm3.schein = rmeEU3.artikel
       rme4.schein = rmeEU4.artikel:rmeproz4.schein = rmeproz4.artikel:rmedm4.schein = rmeEU4.artikel
       rme5.schein = rmeEU5.artikel:rmeproz5.schein = rmeproz5.artikel:rmedm5.schein = rmeEU5.artikel
       REM fÅr Euro
       REM HandelsspanneEu.schein = Handelsspanne.artikel
       Umrechnung.schein = umrechnung.stamm
       CodeW.schein = CodeW.stamm
       Waehrung.schein = Waehrung.stamm
     ELSE 
       rme1.schein = rme1.artikel:rmeproz1.schein = rmeproz1.artikel:rmedm1.schein = rmedm1.artikel
       rme2.schein = rme2.artikel:rmeproz2.schein = rmeproz2.artikel:rmedm2.schein = rmedm2.artikel
       rme3.schein = rme3.artikel:rmeproz3.schein = rmeproz3.artikel:rmedm3.schein = rmedm3.artikel
       rme4.schein = rme4.artikel:rmeproz4.schein = rmeproz4.artikel:rmedm4.schein = rmedm4.artikel
       rme5.schein = rme5.artikel:rmeproz5.schein = rmeproz5.artikel:rmedm5.schein = rmedm5.artikel
       REM fÅr Euro
       REM HandelsspanneEu.schein = Handelsspanne.artikel
       Umrechnung.schein = Umrechnung.artikel
       CodeW.schein = CodeW.artikel
       Waehrung.schein = Waehrung.artikel
     END IF 
     rmeEU1.schein = rmeEU1.artikel
     rmeEU2.schein = rmeEU2.artikel
     rmeEU3.schein = rmeEU3.artikel
     rmeEU4.schein = rmeEU4.artikel
     rmeEU5.schein = rmeEU5.artikel
     BestellmitVK$ = BestMitVK.stamm
     IF Art.MASTER = 5 AND UCASE$ (BestellmitVK$) <> "J" THEN 
       IF mastform$ LIKE "EUR" THEN 
         VKnetto.schein = LieferEKEU.ARTIKEL
         VKbrutto.SCHEIN = LieferEKEU.ARTIKEL + (LieferEKEU.ARTIKEL / 100 * MwSt.ARTIKEL)
         GesamtNetto.schein = VKnettoEU.SCHEIN
         GesamtBrutto.schein = VKbruttoEU.SCHEIN
         EK.schein = EKEU.ARTIKEL
         Artikelnummer.SCHEIN = Bestellnummer.ARTIKEL
         REM fÅr Euro
         VKnettoEu.schein = LieferEKEU.ARTIKEL
         VKbruttoEU.SCHEIN = LieferEKEU.ARTIKEL + (LieferEKEU.ARTIKEL / 100 * MwSt.ARTIKEL)
         GesNettoEU.schein = VKnettoEU.SCHEIN
         GesBruttoEU.schein = VKbruttoEU.SCHEIN
         EKEU.schein = EKEU.ARTIKEL
       ELSE 
         VKnetto.schein = LieferEK.ARTIKEL
         VKbrutto.SCHEIN = LieferEK.ARTIKEL + (LieferEK.ARTIKEL / 100 * MwSt.ARTIKEL)
         GesamtNetto.schein = VKnetto.SCHEIN
         GesamtBrutto.schein = VKbrutto.SCHEIN
         EK.schein = EK.ARTIKEL
         Artikelnummer.SCHEIN = Bestellnummer.ARTIKEL
         REM fÅr Euro
         VKnettoEu.schein = LieferEKEU.ARTIKEL
         VKbruttoEU.SCHEIN = LieferEKEU.ARTIKEL + (LieferEKEU.ARTIKEL / 100 * MwSt.ARTIKEL)
         GesNettoEU.schein = VKnettoEU.SCHEIN
         GesBruttoEU.schein = VKbruttoEU.SCHEIN
         EKEU.schein = EKEU.ARTIKEL
       END IF 
     ELSE 
       IF KalkArt.MASTER = 0 THEN 
         IF mastform$ LIKE "EUR" THEN 
           VKnetto.schein = VKnettoEU.ARTIKEL
           vkn$ = STR$ (VknettoEu.artikel,"9999999.00")
           IF anzakupreis% = 1 THEN 
             VKNetto.schein = VKNettoEUaku%(0)
           END IF 
           VKbrutto.SCHEIN = VKnettoEU.ARTIKEL + (VKnettoEU.ARTIKEL / 100 * MwSt.ARTIKEL)
           vkb$ = STR$ (VKbrutto.SCHEIN,"9999999.00")
           REM fÅr Euro
           VKnetto.schein = VKnettoEU.ARTIKEL
           VKnettoEU.schein = VKnettoEU.ARTIKEL
           IF anzakupreis% = 1 THEN VKNettoEu.schein = VKNettoEuaku%(0)
           VKbruttoEU.SCHEIN = VKnettoEU.ARTIKEL + (VKnettoEU.ARTIKEL / 100 * MwSt.ARTIKEL)
         ELSE 
           VKnetto.schein = VKnetto.ARTIKEL
           IF anzakupreis% = 1 THEN 
             VKNetto.schein = VKNettoaku%(0)
           END IF 
           VKbrutto.SCHEIN = VKnetto.ARTIKEL + (VKnetto.ARTIKEL / 100 * MwSt.ARTIKEL)
           REM fÅr Euro
           VKnettoEU.schein = VKnettoEU.ARTIKEL
           IF anzakupreis% = 1 THEN VKNettoEu.schein = VKNettoEuaku%(0)
           VKbruttoEU.SCHEIN = VKnettoEU.ARTIKEL + (VKnettoEU.ARTIKEL / 100 * MwSt.ARTIKEL)
         END IF 
       ELSE 
         IF mastform$ LIKE "EUR" THEN 
           VKbrutto.SCHEIN = VKbruttoEU.ARTIKEL
           IF anzakupreis% = 1 THEN VKBrutto.schein = VKBruttoEUaku%(0)
           VKnetto.SCHEIN = VKbruttoEU.ARTIKEL / (100 + MwSt.ARTIKEL) * 100
           REM fÅr Euro
           VKbruttoEu.SCHEIN = VKbruttoEU.ARTIKEL
           IF anzakupreis% = 1 THEN VKBruttoEu.schein = VKBruttoEuaku%(0)
           VKnettoEU.SCHEIN = VKbruttoEU.ARTIKEL / (100 + MwSt.ARTIKEL) * 100
         ELSE 
           VKbrutto.SCHEIN = VKbrutto.ARTIKEL
           IF anzakupreis% = 1 THEN VKBrutto.schein = VKBruttoaku%(0)
           VKnetto.SCHEIN = VKbrutto.ARTIKEL / (100 + MwSt.ARTIKEL) * 100
           REM fÅr Euro
           VKbruttoEu.SCHEIN = VKbruttoEU.ARTIKEL
           IF anzakupreis% = 1 THEN VKBruttoEu.schein = VKBruttoEuaku%(0)
           VKnettoEU.SCHEIN = VKbruttoEU.ARTIKEL / (100 + MwSt.ARTIKEL) * 100
         END IF 
       END IF 
       IF mastform$ LIKE "EUR" THEN 
         GesamtNetto.schein = VKnettoEU.ARTIKEL
         gesN$ = STR$ (GesamtNetto.schein,"999999,00")
         GesamtBrutto.schein = VKbruttoEU.ARTIKEL
         gesB$ = STR$ (GesamtBrutto.schein,"999999,00")
         EK.schein = EKEU.ARTIKEL
         ek$ = STR$ (EK.schein,"999999,00")
         REM fÅr Euro
         GesNettoEU.schein = VKnettoEU.ARTIKEL
         GesBruttoEU.schein = VKbruttoEU.ARTIKEL
         EKeu.schein = EKeu.ARTIKEL
         Artikelnummer.SCHEIN = Artikelnummer.ARTIKEL
       ELSE 
         GesamtNetto.schein = VKnetto.ARTIKEL
         GesamtBrutto.schein = VKbrutto.ARTIKEL
         EK.schein = EK.ARTIKEL
         REM fÅr Euro
         GesNettoEU.schein = VKnettoEU.ARTIKEL
         GesBruttoEU.schein = VKbruttoEU.ARTIKEL
         EKeu.schein = EKeu.ARTIKEL
         Artikelnummer.SCHEIN = Artikelnummer.ARTIKEL
       END IF 
     END IF 
     Beschreibung.schein = Beschreibung.ARTIKEL
     ME_.SCHEIN = ME_.ARTIKEL
     MwSt.SCHEIN = MwSt.Artikel
     Anzahl.SCHEIN = 1
     CALL QuickStore("SCHEIN")
     REM 091198
     CALL PosNum(codems.schein)
     SELECT KEY scode% LOCK FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
     CALL POSBEARB()
   ELSE 
     CALL Fehler("Es wurde kein entsprechender Artikel gefunden!","")
     REM CALL POSBEARB()
   END IF 
 ELSE 
    MOUSE OFF 
   FILE "SCHEIN"
   REM scode% = QuickCodePos.SCHEIN
   SELECT KEY scode% LOCK FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   SELECT REMOVE FILE "SCHEIN"
   SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.MASTER
   AnzPos.Master = AnzPos.MASTER - 1
   CALL QuickStore("MASTER")
 
   REM ****** Positionen neu durchnummerieren ******
   
   FILE "SCHEIN"
   INDEX QuickCodePos.SCHEIN
     _pos% = 1
   FOR a% = 1 TO AnzPos.Master + 1
     scode% = cums% * 1000 + a%
     SELECT KEY scode% LOCK FILE "SCHEIN" INDEX QuickCodePOS.SCHEIN
     IF FOUND ("SCHEIN") THEN 
       PosNr.SCHEIN = _pos%
       _pos% = _pos% + 1
       CALL QuickStore("SCHEIN")
     END IF 
   NEXT 
   CALL MSRechnen()
   CALL SCHIntro()
 END IF 
 FORM 
mfal0111981: 
 artsucheok% = 0

 END SUB 
   
 ' SCHEIN Anzahlrechnung
 ' =======================================================================
 
SUB SCHAnzahl()
 SELECT KEY CodeAR.SCHEIN FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
 IF BestandsfÅhrung.ARTIKEL = "j" AND Bestand.ARTIKEL < Anzahl.SCHEIN AND msart% = 3 THEN 
   bestand% = Bestand.artikel
   anzahl% = anzahl.schein
   REM ###schanz
   CALL Fehler("Die eingegeben Anzahl Åberschreitet den Bestand.","Maximale Anzahl: " + LTRIM$ ( STR$ (Bestand.ARTIKEL,",9999999999.00")))
   REM REQUEST "Wollen Sie die Anzahl korrigieren?"
   IF IsKombi%(_cuart%) THEN 
     CALL Fehler("Bei dem gewÑhlten Artikel handelt es sich um einen Kombiartikel!","Es kann keine RÅckstellmenge gebildet werden")
     zugopt% = 1
   ELSE 
     zugopt% = 1
     CREATE DIALOG "ZUGART",0,0,166,81,"Anzahl korrigieren","MS Sans Serif",8
     ADD DIALOG "ZUGART",4,2,6,162,53,0,"Anzahl/RÅckstellungsmenge"
     ADD DIALOG "ZUGART",3,17,25,132,10,0,"Anzahl von Hand berichtigen",1,zugopt%
     ADD DIALOG "ZUGART",3,17,36,132,10,0,"RÅckstellungsmenge bilden",2,zugopt%
     ADD DIALOG "ZUGART",1,56,62,54,16,1,"&OK",1,1
     DIALOG "ZUGART",reqzu%
     REMOVE DIALOG "ZUGART"
   END IF 
   codesch% = Codesch.schein
   SELECT KEY Codesch% LOCK FILE "schein" INDEX CodeSch.schein
   rÅckst% = anzahl% - bestand%
   rÅckst$ = STR$ (rÅckst%,",999999999.00")
   IF zugopt% = 2 THEN 
     anzahl.schein = Bestand%
     beschreibung.schein = beschreibung.schein + CHR$ (13) + CHR$ (10) + + CHR$ (13) + CHR$ (10) + "RÅckstellungsmenge: " + rÅckst$ + " " + me_.schein
     rÅckstmenge.schein = rÅckst%
   ELSE 
     anzahl.schein = 1
     rÅckstmenge.schein = 0
   END IF 
     Workstation.Schein = Workstation%
     QWoNo.Schein = STR$ (Workstation%,"000000") + STR$ (codesch.Schein,"000000")
     RecStatus.Schein = "c"
   STORE FILE "SCHEIN"
   UNLOCK CURRENT FILE "schein"
   SELECT FORM KEY Codesch% FILE "schein" INDEX CodeSch.schein
   FORM 
   SELECT KEY Codesch% LOCK FILE "schein" INDEX CodeSch.schein
 END IF 
 
 IF tot% > 1 THEN 
   tot% = 0
   IF anzahl.schein >= rme1.schein THEN 
     rabattproz.schein = rmeproz1.schein
     rabatt.schein = rmedm1.schein
     rabattEU.schein = rmeEU1.schein
   END IF 
   IF anzahl.schein >= rme2.schein THEN 
     rabattproz.schein = rmeproz2.schein
     rabatt.schein = rmedm2.schein
     rabattEU.schein = rmeEU2.schein
   END IF 
   IF anzahl.schein >= rme3.schein THEN 
     rabattproz.schein = rmeproz3.schein
     rabatt.schein = rmedm3.schein
     rabattEU.schein = rmeEU3.schein
   END IF 
   IF anzahl.schein >= rme4.schein THEN 
     rabattproz.schein = rmeproz4.schein
     rabatt.schein = rmedm4.schein
     rabattEU.schein = rmeEU4.schein
   END IF 
   IF anzahl.schein >= rme5.schein THEN 
     rabattproz.schein = rmeproz5.schein
     rabatt.schein = rmedm5.schein
     rabattEU.schein = rmeEU5.schein
   END IF 
 END IF 
 IF UCASE$ ( FORM ) LIKE "POSITIO*" THEN 
   IF KalkArt.MASTER = 0 THEN 
     REM GesamtNetto.SCHEIN = Anzahl.SCHEIN * (VKnetto.SCHEIN - Rabatt.SCHEIN)
     REM GesamtBrutto.SCHEIN = GesamtNetto.SCHEIN + (Gesamtnetto.SCHEIN / 100 * MwSt.SCHEIN)
     vkne$ = STR$ (VKnetto.SCHEIN / Bezugsmenge.schein,",999999999.00")
     vkne% = VAL (vkne$)
     GesamtNetto$ = STR$ (Anzahl.SCHEIN * (vkne% - Rabatt.SCHEIN),",999999999.00")
     GesamtNetto.SCHEIN = VAL (GesamtNetto$)
     GesamtBrutto$ = STR$ (GesamtNetto.SCHEIN + (Gesamtnetto.SCHEIN / 100 * MwSt.SCHEIN),",999999999.00")
     GesamtBrutto.SCHEIN = VAL (GesamtBrutto$)
   ELSE 
     vkbe$ = STR$ (VKbrutto.SCHEIN / Bezugsmenge.schein,",999999999.00")
     vkbe% = VAL (vkbe$)
     GesamtBrutto$ = STR$ (Anzahl.SCHEIN * (vkbe% - Rabatt.SCHEIN),",999999999.00")
     GesamtBrutto.SCHEIN = VAL (GesamtBrutto$)
     GesamtNetto$ = STR$ (GesamtBrutto.SCHEIN / (100 + MwSt.SCHEIN) * 100,",999999999.00")
     GesamtNetto.SCHEIN = VAL (GesamtNetto$)
   END IF 
   vkne$ = STR$ (VKnetto.SCHEIN / Bezugsmenge.schein,",999999999.00")
   vkne% = VAL (vkne$)
   VKBeinzel$ = STR$ (VKBrutto.schein / Bezugsmenge.schein,",999999999.00")
   VKBeinzel% = VAL (VKBeinzel$)

   VKNeinzel$ = STR$ (VKNetto.schein / Bezugsmenge.schein,",999999999.00")
   VKNeinzel% = VAL (VKNeinzel$)

   RabattGes$ = STR$ (Rabatt.SCHEIN * Anzahl.schein,",999999999.00")
   RabattGes% = VAL (RabattGes$)
   handelspdm1% = GesamtNetto.schein - (ek.schein * anzahl.schein / Bezugsmenge.schein) - provision%
   handelspdm1$ = STR$ (handelspdm1%,",999999999.00")
   provision% = handelspdm1% * ProvisProz.schein / 100
   handelspdm1$ = STR$ (handelspdm1% - provision%,",999999999.00")
   ProvisDM.schein = provision%
   Handelsspanne.schein = (handelspdm1% - provision%) * 100 / (ek.schein * anzahl.schein / Bezugsmenge.schein)
   CALL SCHDMEuro()
 END IF 
 REM Euromasken
 IF UCASE$ ( FORM ) LIKE "POSITINE" OR UCASE$ ( FORM ) LIKE "POSITIBE" THEN 
   IF KalkArt.MASTER = 0 THEN 
     REM GesamtNetto.SCHEIN = Anzahl.SCHEIN * (VKnetto.SCHEIN - Rabatt.SCHEIN)
     REM GesamtBrutto.SCHEIN = GesamtNetto.SCHEIN + (Gesamtnetto.SCHEIN / 100 * MwSt.SCHEIN)
     vkneEU$ = STR$ (VKnettoEU.SCHEIN / Bezugsmenge.schein,",999999999.00")
     vkneEU% = VAL (vkneEU$)
     GesNettoEU$ = STR$ (Anzahl.SCHEIN * (vkneEU% - RabattEU.SCHEIN),",999999999.00")
     GesNettoEU.SCHEIN = VAL (GesNettoEU$)
     GesBruttoEU$ = STR$ (GesNettoEU.SCHEIN + (GesnettoEU.SCHEIN / 100 * MwSt.SCHEIN),",999999999.00")
     GesBruttoEU.SCHEIN = VAL (GesBruttoEU$)
   ELSE 
     vkbeE$ = STR$ (VKbruttoEU.SCHEIN / Bezugsmenge.schein,",999999999.00")
     vkbeEU% = VAL (vkbeEU$)
     GesBruttoEU$ = STR$ (Anzahl.SCHEIN * (vkbeEU% - RabattEU.SCHEIN),",999999999.00")
     GesBruttoEU.SCHEIN = VAL (GesBruttoEU$)
     GesNettoEU$ = STR$ (GesBruttoEU.SCHEIN / (100 + MwSt.SCHEIN) * 100,",999999999.00")
     GesNettoEU.SCHEIN = VAL (GesNettoEU$)
   END IF 
   vkneEU$ = STR$ (VKnettoEU.SCHEIN / Bezugsmenge.schein,",999999999.00")
   vkneEU% = VAL (vkneEU$)
   VKBeinzelEU$ = STR$ (VKBruttoEU.schein / Bezugsmenge.schein,",999999999.00")
   VKBeinzelEU% = VAL (VKBeinzelEU$)
   VKNeinzelEU$ = STR$ (VKNettoEU.schein / Bezugsmenge.schein,",999999999.00")
   VKNeinzelEU% = VAL (VKNeinzelEU$)
   RabattGesEU$ = STR$ (RabattEU.SCHEIN * Anzahl.schein,",999999999.00")
   RabattGesEU% = VAL (RabattGesEU$)
   handelspdm1EU% = GesNettoEU.schein - (ekEU.schein * anzahl.schein / Bezugsmenge.schein) - provisionEU%
   handelspdm1EU$ = STR$ (handelspdm1EU%,",999999999.00")
   provisionEU% = handelspdm1EU% * ProvisProz.schein / 100
   handelspdm1EU$ = STR$ (handelspdm1EU% - provisionEU%,",999999999.00")
   ProvisEU.schein = provisionEU%
   Handelsspanne.schein = (handelspdm1EU% - provisionEU%) * 100 / (ekEU.schein * anzahl.schein / Bezugsmenge.schein)
   CALL SCHEuroDM()
 END IF 
 FORM 
 END SUB 
             
SUB SCHVKnetto()
 IF UCASE$ ( FORM ) LIKE "POSITIO*" THEN 
   vkne$ = STR$ (VKnetto.SCHEIN / Bezugsmenge.schein,",999999999.00")
   vkne% = VAL (vkne$)
   Rabatt% = (VKne% / 100) * RabattProz.SCHEIN
   Rabatt$ = STR$ (Rabatt%,",999999999.00")
   Rabatt.SCHEIN = VAL (Rabatt$)
   GesamtNetto% = Anzahl.SCHEIN * (vkne% - Rabatt.SCHEIN)
   GesamtNetto$ = STR$ (GesamtNetto%,",999999999.00")
   GesamtNetto.SCHEIN = VAL (GesamtNetto$)
   VKbrutto% = VKnetto.SCHEIN + (VKnetto.SCHEIN / 100 * MwSt.SCHEIN)
   VKbrutto$ = STR$ (VKbrutto%,",999999999.00")
   VKbrutto.SCHEIN = VAL (VKbrutto$)
   GesamtBrutto% = GesamtNetto.SCHEIN + (GesamtNetto.SCHEIN / 100 * MwSt.SCHEIN)
   GesamtBrutto$ = STR$ (GesamtBrutto%,",999999999.00")
   GesamtBrutto.SCHEIN = VAL (GesamtBrutto$)
   VKBeinzel% = VKBrutto.schein / Bezugsmenge.schein
   VKBeinzel$ = STR$ (VKBeinzel%,",999999999.00")
   VKBeinzel% = VAL (VKBeinzel$)
   VKNeinzel% = VKNetto.schein / Bezugsmenge.schein
   VKNeinzel$ = STR$ (VKNeinzel%,",999999999.00")
   VKNeinzel% = VAL (VKNeinzel$)
   RabattGes% = Rabatt.SCHEIN * Anzahl.schein
   RabattGes$ = STR$ (RabattGes%,",999999999.00")
   RabattGes% = VAL (RabattGes$)
   handelspdm1% = GesamtNetto.schein - (ek.schein * anzahl.schein / Bezugsmenge.schein) - provision%
   handelspdm1$ = STR$ (handelspdm1%,",999999999.00")
   provision% = handelspdm1% * ProvisProz.schein / 100
   handelspdm1$ = STR$ (handelspdm1% - provision%,",999999999.00")
   ProvisDM.schein = provision%
   Handelsspanne.schein = (handelspdm1% - provision%) * 100 / (ek.schein * anzahl.schein / Bezugsmenge.schein)
   CALL SCHDMEuro()
 END IF 
 REM Euro
 IF UCASE$ ( FORM ) LIKE "POSITINE" OR UCASE$ ( FORM ) LIKE "POSITIBE" THEN 
   vkneeu% = VKnettoEu.SCHEIN / Bezugsmenge.schein
   vkneeu$ = STR$ (vkneeu%,",999999999.00")
   vkneeu% = VAL (vkneeu$)
   RabattEu% = (VKneEu% / 100) * RabattProz.SCHEIN
   RabattEu$ = STR$ (RabattEu%,",999999999.00")
   RabattEu.SCHEIN = VAL (RabattEu$)
   GesNettoEu% = Anzahl.SCHEIN * (vkneEu% - RabattEu.SCHEIN)
   GesNettoEu$ = STR$ (GesNettoEu%,",999999999.00")
   GesNettoEu.SCHEIN = VAL (GesNettoEu$)
   VKbruttoEu% = VKnettoEu.SCHEIN + (VKnettoEu.SCHEIN / 100 * MwSt.SCHEIN)
   VKbruttoEu$ = STR$ (VKbruttoEu%,",999999999.00")
   VKbruttoEu.SCHEIN = VAL (VKbruttoEu$)
   GesBruttoEu% = GesNettoEu.SCHEIN + (GesNettoEu.SCHEIN / 100 * MwSt.SCHEIN)
   GesBruttoEu$ = STR$ (GesBruttoEu%,",999999999.00")
   GesBruttoEu.SCHEIN = VAL (GesBruttoEu$)
   VKBeinzelEu% = VKBruttoEu.schein / Bezugsmenge.schein
   VKBeinzelEu$ = STR$ (VKBeinzelEu%,",999999999.00")
   VKBeinzelEu% = VAL (VKBeinzelEu$)
   VKNeinzelEu% = VKNettoEu.schein / Bezugsmenge.schein
   VKNeinzelEu$ = STR$ (VKNeinzelEu%,",999999999.00")
   VKNeinzelEu% = VAL (VKNeinzelEu$)
   RabattGesEu% = RabattEu.SCHEIN * Anzahl.schein
   RabattGesEu$ = STR$ (RabattGesEu%,",999999999.00")
   RabattGesEu% = VAL (RabattGesEu$)
   handelspdm1Eu% = GesNettoEu.schein - (ekEu.schein * anzahl.schein / Bezugsmenge.schein) - provisionEu%
   handelspdm1Eu$ = STR$ (handelspdm1Eu%,",999999999.00")
   provisionEu% = handelspdm1Eu% * ProvisProz.schein / 100
   handelspdm1Eu$ = STR$ (handelspdm1Eu% - provisionEu%,",999999999.00")
   ProvisEu.schein = provisionEu%
   Handelsspanne.schein = (handelspdm1Eu% - provisionEu%) * 100 / (ekEu.schein * anzahl.schein / Bezugsmenge.schein)
   CALL SCHEuroDM()
 END IF 
 FORM 
 END SUB 
 
SUB SCHVKbrutto()
 IF UCASE$ ( FORM ) LIKE "POSITIO*" THEN 
   vkbe$ = STR$ (VKbrutto.SCHEIN / Bezugsmenge.schein,",999999999.00")
   vkbe% = VAL (vkbe$)
   Rabatt$ = STR$ ((VKbe% / 100) * RabattProz.SCHEIN,",999999999.00")
   Rabatt.SCHEIN = VAL (Rabatt$)
   REM GesamtBrutto.SCHEIN = Anzahl.SCHEIN * (VKbrutto.SCHEIN - Rabatt.SCHEIN)
   GesamtBrutto$ = STR$ (Anzahl.SCHEIN * (vkbe% - Rabatt.SCHEIN),",999999999.00")
   GesamtBrutto.SCHEIN = VAL (GesamtBrutto$)
   GesamtNetto$ = STR$ (GesamtBrutto / (100 + MwSt.SCHEIN) * 100,",999999999.00")
   GesamtNetto.SCHEIN = VAL (GesamtNetto$)
   VKnetto$ = STR$ (VKbrutto.SCHEIN / (100 + MwSt) * 100,",999999999.00")
   VKnetto.SCHEIN = VAL (VKnetto$)
   VKBeinzel$ = STR$ (VKBrutto.schein / Bezugsmenge.schein,",999999999.00")
   VKBeinzel% = VAL (VKBeinzel$)
   VKNeinzel$ = STR$ (VKNetto.schein / Bezugsmenge.schein,",999999999.00")
   VKNeinzel% = VAL (VKNeinzel$)
   RabattGes$ = STR$ (Rabatt.SCHEIN * Anzahl.schein,",999999999.00")
   RabattGes% = VAL (RabattGes$)
   handelspdm1% = GesamtNetto.schein - (ek.schein * anzahl.schein / Bezugsmenge.schein) - provision%
   handelspdm1$ = STR$ (handelspdm1%,",999999999.00")
   provision% = handelspdm1% * ProvisProz.schein / 100
   handelspdm1$ = STR$ (handelspdm1% - provision%,",999999999.00")
   ProvisDM.schein = provision%
   Handelsspanne.schein = (handelspdm1% - provision%) * 100 / (ek.schein * anzahl.schein / Bezugsmenge.schein)
   CALL SCHDMEuro()
 END IF 
 REM fÅr Euro
 IF UCASE$ ( FORM ) LIKE "POSITINE" OR UCASE$ ( FORM ) LIKE "POSITIBE" THEN 
   vkbeEu$ = STR$ (VKbruttoEU.SCHEIN / Bezugsmenge.schein,",999999999.00")
   vkbeEu% = VAL (vkbeEu$)
   RabattEu$ = STR$ ((VKbeEu% / 100) * RabattProz.SCHEIN,",999999999.00")
   RabattEu.SCHEIN = VAL (RabattEu$)
   REM GesamtBrutto.SCHEIN = Anzahl.SCHEIN * (VKbrutto.SCHEIN - Rabatt.SCHEIN)
   GesBruttoEu$ = STR$ (Anzahl.SCHEIN * (vkbeEu% - RabattEu.SCHEIN),",999999999.00")
   GesBruttoEu.SCHEIN = VAL (GesBruttoEu$)
   GesNettoEu$ = STR$ (GesBruttoEu / (100 + MwSt.SCHEIN) * 100,",999999999.00")
   GesNettoEu.SCHEIN = VAL (GesNettoEu$)
   VKnettoEu$ = STR$ (VKbruttoEu.SCHEIN / (100 + MwSt) * 100,",999999999.00")
   VKnettoEu.SCHEIN = VAL (VKnettoEu$)
   VKBeinzelEu$ = STR$ (VKBruttoEu.schein / Bezugsmenge.schein,",999999999.00")
   VKBeinzelEu% = VAL (VKBeinzelEu$)
   VKNeinzelEu$ = STR$ (VKNettoEu.schein / Bezugsmenge.schein,",999999999.00")
   VKNeinzelEu% = VAL (VKNeinzelEu$)
   RabattGesEu$ = STR$ (RabattEu.SCHEIN * Anzahl.schein,",999999999.00")
   RabattGesEu% = VAL (RabattGesEu$)
   handelspdm1Eu% = GesNettoEu.schein - (ekEu.schein * anzahl.schein / Bezugsmenge.schein) - provisionEu%
   handelspdm1Eu$ = STR$ (handelspdm1Eu%,"9999999.00")
   provisionEu% = handelspdm1Eu% * ProvisProz.schein / 100
   handelspdm1Eu$ = STR$ (handelspdm1Eu% - provisionEu%,"9999999.00")
   ProvisEu.schein = provisionEu%
   Handelsspanne.schein = (handelspdm1Eu% - provisionEu%) * 100 / (ekEu.schein * anzahl.schein / Bezugsmenge.schein)
   CALL SCHEuroDM()
 END IF 
 FORM 
 END SUB 
 
SUB SCHRabatt()
 IF UCASE$ ( FORM ) LIKE "POSITIO*" THEN 
   IF KalkArt.MASTER = 0 THEN 
     REM GesamtNetto.SCHEIN = Anzahl.SCHEIN * (VKnetto.SCHEIN - Rabatt.SCHEIN)
     vkne$ = STR$ (VKnetto.SCHEIN / Bezugsmenge.schein,",999999999.00")
     vkne% = VAL (vkne$)
     GesamtNetto$ = STR$ (Anzahl.SCHEIN * (VKne% - Rabatt.SCHEIN),",999999999.00")
     GesamtNetto.SCHEIN = VAL (GesamtNetto$)
     GesamtBrutto$ = STR$ (GesamtNetto.SCHEIN + (Gesamtnetto.SCHEIN / 100 * MwSt.SCHEIN),",999999999.00")
     GesamtBrutto.SCHEIN = VAL (GesamtBrutto$)
     REM RabattProz.SCHEIN = (100 / VKnetto.schein) * Rabatt.SCHEIN
     RabattProz.SCHEIN = (100 / VKne%) * Rabatt.SCHEIN
 
   ELSE 
     REM GesamtBrutto.SCHEIN = Anzahl.SCHEIN * (VKbrutto.SCHEIN - Rabatt.SCHEIN)
     vkbe$ = STR$ (VKbrutto.SCHEIN / Bezugsmenge.schein,",999999999.00")
     vkbe% = VAL (vkbe$)
     GesamtBrutto$ = STR$ (Anzahl.SCHEIN * (VKbe% - Rabatt.SCHEIN),",999999999.00")
     GesamtBrutto.SCHEIN = VAL (GesamtBrutto$)
     GesamtNetto$ = STR$ (GesamtBrutto.SCHEIN / (100 + MwSt.SCHEIN) * 100,",999999999.00")
     GesamtNetto.SCHEIN = VAL (GesamtNetto$)
     REM RabattProz.SCHEIN = (100 / GesamtBrutto.SCHEIN) * Rabatt.SCHEIN
     RabattProz.SCHEIN = (100 / vkbe%) * Rabatt.SCHEIN
   END IF 
   vkne$ = STR$ (VKnetto.SCHEIN / Bezugsmenge.schein,",999999999.00")
   vkne% = VAL (vkne$)
   VKBeinzel$ = STR$ (VKBrutto.schein / Bezugsmenge.schein,",999999999.00")
   VKBeinzel% = VAL (VKBeinzel$)
   VKNeinzel$ = STR$ (VKNetto.schein / Bezugsmenge.schein,",999999999.00")
   VKNeinzel% = VAL (VKNeinzel$)
   RabattGes$ = STR$ (Rabatt.SCHEIN * Anzahl.schein,",999999999.00")
   RabattGes% = VAL (RabattGes$)
   handelspdm1% = GesamtNetto.schein - (ek.schein * anzahl.schein / Bezugsmenge.schein) - provision%
   handelspdm1$ = STR$ (handelspdm1%,"9999999.00")
   provision% = handelspdm1% * ProvisProz.schein / 100
   handelspdm1$ = STR$ (handelspdm1% - provision%,"9999999.00")
   ProvisDM.schein = provision%
   Handelsspanne.schein = (handelspdm1% - provision%) * 100 / (ek.schein * anzahl.schein / Bezugsmenge.schein)
   CALL SCHDMEuro()
 END IF 
 IF UCASE$ ( FORM ) LIKE "POSITINE" OR UCASE$ ( FORM ) LIKE "POSITIBE" THEN 
   IF KalkArt.MASTER = 0 THEN 
     REM GesamtNetto.SCHEIN = Anzahl.SCHEIN * (VKnetto.SCHEIN - Rabatt.SCHEIN)
     vkneEU$ = STR$ (VKnettoEU.SCHEIN / Bezugsmenge.schein,",999999999.00")
     vkneEU% = VAL (vkneEU$)
     GesNettoEU$ = STR$ (Anzahl.SCHEIN * (VKneEU% - RabattEU.SCHEIN),",999999999.00")
     GesNettoEU.SCHEIN = VAL (GesNettoEU$)
     GesBruttoEU$ = STR$ (GesNettoEU.SCHEIN + (GesnettoEU.SCHEIN / 100 * MwSt.SCHEIN),",999999999.00")
     GesBruttoEU.SCHEIN = VAL (GesBruttoEU$)
     REM RabattProz.SCHEIN = (100 / VKnetto.schein) * Rabatt.SCHEIN
     RabattProz.SCHEIN = (100 / VKneEU%) * RabattEU.SCHEIN
   ELSE 
     REM GesamtBrutto.SCHEIN = Anzahl.SCHEIN * (VKbrutto.SCHEIN - Rabatt.SCHEIN)
     vkbeEU$ = STR$ (VKbruttoEU.SCHEIN / Bezugsmenge.schein,",999999999.00")
     vkbeEU% = VAL (vkbeEU$)
     GesBruttoEU$ = STR$ (Anzahl.SCHEIN * (VKbeEU% - RabattEU.SCHEIN),",999999999.00")
     GesBruttoEU.SCHEIN = VAL (GesBruttoEU$)
     GesNettoEU$ = STR$ (GesBruttoEU.SCHEIN / (100 + MwSt.SCHEIN) * 100,",999999999.00")
     GesNettoEU.SCHEIN = VAL (GesNettoEU$)
     REM RabattProz.SCHEIN = (100 / GesamtBrutto.SCHEIN) * Rabatt.SCHEIN
     RabattProz.SCHEIN = (100 / vkbeEU%) * RabattEU.SCHEIN
   END IF 
   vkneEU$ = STR$ (VKnettoEU.SCHEIN / Bezugsmenge.schein,",999999999.00")
   vkneEU% = VAL (vkneEU$)
   VKBeinzelEU$ = STR$ (VKBruttoEU.schein / Bezugsmenge.schein,",999999999.00")
   VKBeinzelEU% = VAL (VKBeinzelEU$)
   VKNeinzelEU$ = STR$ (VKNettoEU.schein / Bezugsmenge.schein,",999999999.00")
   VKNeinzelEU% = VAL (VKNeinzelEU$)
   RabattGesEU$ = STR$ (RabattEU.SCHEIN * Anzahl.schein,",999999999.00")
   RabattGesEU% = VAL (RabattGesEU$)
   handelspdm1EU% = GesNettoEU.schein - (ekEU.schein * anzahl.schein / Bezugsmenge.schein) - provisionEU%
   handelspdm1EU$ = STR$ (handelspdm1EU%,"9999999.00")
   provisionEU% = handelspdm1EU% * ProvisProz.schein / 100
   handelspdm1EU$ = STR$ (handelspdm1EU% - provisionEU%,"9999999.00")
   ProvisEU.schein = provisionEU%
   Handelsspanne.schein = (handelspdm1EU% - provisionEU%) * 100 / (ekEU.schein * anzahl.schein / Bezugsmenge.schein)
   CALL SCHEuroDM()
 END IF 
 FORM 
 END SUB 
 
SUB SCHRabattProz()
 IF UCASE$ ( FORM ) LIKE "POSITIO*" THEN 
   IF KalkArt.MASTER = 0 THEN 
     vkne$ = STR$ (VKnetto.SCHEIN / Bezugsmenge.schein,",999999999.00")
     vkne% = VAL (vkne$)
     Rabatt$ = STR$ ((VKne% / 100) * RabattProz.SCHEIN,",999999999.00")
     Rabatt.SCHEIN = VAL (Rabatt$)
     GesamtNetto$ = STR$ (Anzahl.SCHEIN * (VKne% - Rabatt.SCHEIN),",999999999.00")
     GesamtNetto.SCHEIN = VAL (GesamtNetto$)
     GesamtBrutto$ = STR$ (GesamtNetto.SCHEIN + (Gesamtnetto.SCHEIN / 100 * MwSt.SCHEIN),",999999999.00")
     GesamtBrutto.SCHEIN = VAL (GesamtBrutto$)
   ELSE 
     vkbe% = VKbrutto.SCHEIN / Bezugsmenge.schein
     Rabatt$ = STR$ ((VKbe% / 100) * RabattProz.SCHEIN,",999999999.00")
     Rabatt.SCHEIN = VAL (Rabatt$)
     GesamtBrutto$ = STR$ (Anzahl.SCHEIN * (VKbe% - Rabatt.SCHEIN),",999999999.00")
     GesamtBrutto.SCHEIN = VAL (GesamtBrutto$)
     GesamtNetto$ = STR$ (GesamtBrutto.SCHEIN / (100 + MwSt.SCHEIN) * 100,",999999999.00")
     GesamtNetto.SCHEIN = VAL (GesamtNetto$)
   END IF 
   vkne$ = STR$ (VKnetto.SCHEIN / Bezugsmenge.schein,",999999999.00")
   vkne% = VAL (vkne$)
   VKBeinzel$ = STR$ (VKBrutto.schein / Bezugsmenge.schein,",999999999.00")
   VKBeinzel% = VAL (VKBeinzel$)
   VKNeinzel$ = STR$ (VKNetto.schein / Bezugsmenge.schein,",999999999.00")
   VKNeinzel% = VAL (VKNeinzel$)
   RabattGes$ = STR$ (Rabatt.SCHEIN * Anzahl.schein,",999999999.00")
   RabattGes% = VAL (RabattGes$)
   handelspdm1% = GesamtNetto.schein - (ek.schein * anzahl.schein / Bezugsmenge.schein) - provision%
   handelspdm1$ = STR$ (handelspdm1%,"9999999.00")
   provision% = handelspdm1% * ProvisProz.schein / 100
   handelspdm1$ = STR$ (handelspdm1% - provision%,"9999999.00")
   ProvisDM.schein = provision%
   Handelsspanne.schein = (handelspdm1% - provision%) * 100 / (ek.schein * anzahl.schein / Bezugsmenge.schein)
   CALL SCHDMEuro()
 END IF 
 REM fÅr Euro
 IF UCASE$ ( FORM ) LIKE "POSITINE" OR UCASE$ ( FORM ) LIKE "POSITIBE" THEN 
   IF KalkArt.MASTER = 0 THEN 
     vkneEU$ = STR$ (VKnettoEU.SCHEIN / Bezugsmenge.schein,",999999999.00")
     vkneEU% = VAL (vkneEU$)
     RabattEU.SCHEIN = (VKneEU% / 100) * RabattProz.SCHEIN
     GesNettoEU.SCHEIN = Anzahl.SCHEIN * (VKneEU% - RabattEU.SCHEIN)
     GesBruttoEU.SCHEIN = GesNettoEU.SCHEIN + (GesnettoEU.SCHEIN / 100 * MwSt.SCHEIN)
   ELSE 
     vkbeEU$ = STR$ (VKbruttoEU.SCHEIN / Bezugsmenge.schein,",999999999.00")
     vkbeEU% = VAL (vkbeEU$)
     RabattEU$ = STR$ ((VKbeEU% / 100) * RabattProz.SCHEIN,",999999999.00")
     RabattEU.SCHEIN = VAL (RabattEU$)
     GesBruttoEU$ = STR$ (Anzahl.SCHEIN * (VKbeEU% - RabattEU.SCHEIN),",999999999.00")
     GesBruttoEU.SCHEIN = VAL (GesBruttoEU$)
     GesNettoEU$ = STR$ (GesBruttoEU.SCHEIN / (100 + MwSt.SCHEIN) * 100,",999999999.00")
     GesNettoEU.SCHEIN = VAL (GesNettoEU$)
   END IF 
   vkneEU$ = STR$ (VKnettoEU.SCHEIN / Bezugsmenge.schein,",999999999.00")
   vkneEU% = VAL (vkneEU$)
   VKBeinzelEU$ = STR$ (VKBruttoEU.schein / Bezugsmenge.schein,",999999999.00")
   VKBeinzelEU% = VAL (VKBeinzelEU$)
   VKNeinzelEU$ = STR$ (VKNettoEU.schein / Bezugsmenge.schein,",999999999.00")
   VKNeinzelEU% = VAL (VKNeinzelEU$)
   RabattGesEU$ = STR$ (RabattEU.SCHEIN * Anzahl.schein,",999999999.00")
   RabattGesEU% = VAL (RabattGesEU$)
   handelspdm1EU% = GesNettoEU.schein - (ekEU.schein * anzahl.schein / Bezugsmenge.schein) - provisionEU%
   handelspdm1EU$ = STR$ (handelspdm1EU%,"9999999.00")
   provisionEU% = handelspdm1EU% * ProvisProz.schein / 100
   handelspdm1EU$ = STR$ (handelspdm1EU% - provisionEU%,"9999999.00")
   ProvisEU.schein = provisionEU%
   Handelsspanne.schein = (handelspdm1EU% - provisionEU%) * 100 / (ekEU.schein * anzahl.schein / Bezugsmenge.schein)
   CALL SCHEuroDM()
 END IF 
 FORM 
 END SUB 
 
SUB SCHGesNetto()
 IF UCASE$ ( FORM ) LIKE "POSITIO*" THEN 
   vkne$ = STR$ (VKnetto.SCHEIN / Bezugsmenge.schein,",999999999.00")
   vkne% = VAL (vkne$)
   Rabatt$ = STR$ (VKne% - (GesamtNetto.SCHEIN / Anzahl.SCHEIN),",999999999.00")
   Rabatt.SCHEIN = VAL (Rabatt$)
   RabattProz.SCHEIN = (100 / VKne%) * Rabatt.SCHEIN
   GesamtBrutto$ = STR$ (GesamtNetto.SCHEIN + (Gesamtnetto.SCHEIN / 100 * MwSt.SCHEIN),",999999999.00")
   GesamtBrutto.SCHEIN = VAL (GesamtBrutto$)
   VKBeinzel$ = STR$ (VKBrutto.schein / Bezugsmenge.schein,",999999999.00")
   VKBeinzel% = VAL (VKBeinzel$)
   VKNeinzel$ = STR$ (VKNetto.schein / Bezugsmenge.schein,",999999999.00")
   VKNeinzel% = VAL (VKNeinzel$)
   RabattGes$ = STR$ (Rabatt.SCHEIN * Anzahl.schein,",999999999.00")
   RabattGes% = VAL (RabattGes$)
   handelspdm1% = GesamtNetto.schein - (ek.schein * anzahl.schein / Bezugsmenge.schein) - provision%
   handelspdm1$ = STR$ (handelspdm1%,"9999999.00")
   provision% = handelspdm1% * ProvisProz.schein / 100
   handelspdm1$ = STR$ (handelspdm1% - provision%,"9999999.00")
   ProvisDM.schein = provision%
   Handelsspanne.schein = (handelspdm1% - provision%) * 100 / (ek.schein * anzahl.schein / Bezugsmenge.schein)
   CALL SCHDMEuro()
 END IF 
 IF UCASE$ ( FORM ) LIKE "POSITINE" OR UCASE$ ( FORM ) LIKE "POSITIBE" THEN 
   vkneEU$ = STR$ (VKnettoEU.SCHEIN / Bezugsmenge.schein,",999999999.00")
   vkneEU% = VAL (vkneEU$)
   RabattEU$ = STR$ (VKneEU% - (GesNettoEU.SCHEIN / Anzahl.SCHEIN),",999999999.00")
   RabattEU.SCHEIN = VAL (RabattEU$)
   RabattProz.SCHEIN = (100 / VKneEU%) * RabattEU.SCHEIN
   GesBruttoEU$ = STR$ (GesNettoEU.SCHEIN + (GesnettoEU.SCHEIN / 100 * MwSt.SCHEIN),",999999999.00")
   GesBruttoEU.SCHEIN = VAL (GesBruttoEU$)
   VKBeinzelEU$ = STR$ (VKBruttoEU.schein / Bezugsmenge.schein,",999999999.00")
   VKBeinzelEU% = VAL (VKBeinzelEU$)
   VKNeinzelEU$ = STR$ (VKNettoEU.schein / Bezugsmenge.schein,",999999999.00")
   VKNeinzelEU% = VAL (VKNeinzelEU$)
   RabattGesEU$ = STR$ (RabattEU.SCHEIN * Anzahl.schein,",999999999.00")
   RabattGesEU% = VAL (RabattGesEU$)
   handelspdm1EU% = GesNettoEU.schein - (ekEU.schein * anzahl.schein / Bezugsmenge.schein) - provisionEU%
   handelspdm1EU$ = STR$ (handelspdm1EU%,"9999999.00")
   provisionEU% = handelspdm1EU% * ProvisProz.schein / 100
   handelspdm1EU$ = STR$ (handelspdm1EU% - provisionEU%,"9999999.00")
   ProvisEU.schein = provisionEU%
   Handelsspanne.schein = (handelspdm1EU% - provisionEU%) * 100 / (ekEU.schein * anzahl.schein / Bezugsmenge.schein)
   CALL SCHEuroDM()
 END IF 
 FORM 
 END SUB 
 
SUB SCHGesBrutto()
 IF UCASE$ ( FORM ) LIKE "POSITIO*" THEN 
   vkbe$ = STR$ (VKbrutto.SCHEIN / Bezugsmenge.schein,",999999999.00")
   vkbe% = VAL (vkbe$)
   Rabatt$ = STR$ (VKbe% - (GesamtBrutto.SCHEIN / Anzahl.SCHEIN),",999999999.00")
   Rabatt.SCHEIN = VAL (Rabatt$)
   RabattProz.SCHEIN = (100 / VKbe%) * Rabatt.SCHEIN
   GesamtNetto$ = STR$ (GesamtBrutto.SCHEIN / (100 + MwSt.SCHEIN) * 100,",999999999.00")
   GesamtNetto.SCHEIN = VAL (GesamtNetto$)
   VKBeinzel$ = STR$ (VKBrutto.schein / Bezugsmenge.schein,",999999999.00")
   VKBeinzel% = VAL (VKBeinzel$)
   VKNeinzel$ = STR$ (VKNetto.schein / Bezugsmenge.schein,",999999999.00")
   VKNeinzel% = VAL (VKNeinzel$)
   RabattGes$ = STR$ (Rabatt.SCHEIN * Anzahl.schein,",999999999.00")
   RabattGes% = VAL (RabattGes$)
   handelspdm1% = GesamtNetto.schein - (ek.schein * anzahl.schein / Bezugsmenge.schein)
   handelspdm1$ = STR$ (handelspdm1%,"9999999.00")
   provision% = handelspdm1% * ProvisProz.schein / 100
   handelspdm1$ = STR$ (handelspdm1% - provision%,"9999999.00")
   ProvisDM.schein = provision%
   Handelsspanne.schein = (handelspdm1% - provision%) * 100 / (ek.schein * anzahl.schein / Bezugsmenge.schein)
   CALL SCHDMEuro()
 END IF 
 IF UCASE$ ( FORM ) LIKE "POSITINE" OR UCASE$ ( FORM ) LIKE "POSITIBE" THEN 
   vkbeEU$ = STR$ (VKbruttoEU.SCHEIN / Bezugsmenge.schein,",999999999.00")
   vkbeEU% = VAL (vkbeEU$)
   RabattEU$ = STR$ (VKbeEU% - (GesBruttoEU.SCHEIN / Anzahl.SCHEIN),",999999999.00")
   RabattEU.SCHEIN = VAL (RabattEU$)
   RabattProz.SCHEIN = (100 / VKbeEU%) * RabattEU.SCHEIN
   GesNettoEU$ = STR$ (GesBruttoEU.SCHEIN / (100 + MwSt.SCHEIN) * 100,",999999999.00")
   GesNettoEU.SCHEIN = VAL (GesNettoEU$)
   VKBeinzelEU$ = STR$ (VKBruttoEU.schein / Bezugsmenge.schein,",999999999.00")
   VKBeinzelEU% = VAL (VKBeinzelEU$)
   VKNeinzelEU$ = STR$ (VKNettoEU.schein / Bezugsmenge.schein,",999999999.00")
   VKNeinzelEU% = VAL (VKNeinzelEU$)
   RabattGesEU$ = STR$ (RabattEU.SCHEIN * Anzahl.schein,",999999999.00")
   RabattGesEU% = VAL (RabattGesEU$)
   handelspdm1EU% = GesNettoEU.schein - (ekEU.schein * anzahl.schein / Bezugsmenge.schein)
   handelspdm1EU$ = STR$ (handelspdm1EU%,"9999999.00")
   provisionEU% = handelspdm1EU% * ProvisProz.schein / 100
   handelspdm1EU$ = STR$ (handelspdm1EU% - provisionEU%,"9999999.00")
   ProvisEU.schein = provisionEU%
   Handelsspanne.schein = (handelspdm1EU% - provisionEU%) * 100 / (ekEU.schein * anzahl.schein / Bezugsmenge.schein)
   CALL SCHEuroDM()
 END IF 
 FORM 
 END SUB 
 
SUB RechProvProz()
 IF UCASE$ ( FORM ) LIKE "POSITIO*" THEN 
   handelspdm1% = GesamtNetto.schein - (ek.schein * anzahl.schein / Bezugsmenge.schein)
   provision% = handelspdm1% * ProvisProz.schein / 100
   provision$ = STR$ (provision%,"9999999,00")
   handelspdm1$ = STR$ (handelspdm1% - provision%,"9999999.00")
   ProvisDM.schein = provision%
   Handelsspanne.schein = (handelspdm1% - provision%) * 100 / (ek.schein * anzahl.schein / Bezugsmenge.schein)
   CALL SCHDMEuro()
 END IF 
 IF UCASE$ ( FORM ) LIKE "POSITINE" OR UCASE$ ( FORM ) LIKE "POSITIBE" THEN 
   handelspdm1EU% = GesNettoEU.schein - (ekEU.schein * anzahl.schein / Bezugsmenge.schein)
   provisionEU% = handelspdm1EU% * ProvisProz.schein / 100
   provisionEU$ = STR$ (provisionEU%,"9999999,00")
   handelspdm1EU$ = STR$ (handelspdm1EU% - provisionEU%,"9999999.00")
   ProvisEU.schein = provisionEU%
   Handelsspanne.schein = (handelspdm1EU% - provisionEU%) * 100 / (ekEU.schein * anzahl.schein / Bezugsmenge.schein)
   CALL SCHEuroDM()
 END IF 
 FORM 
 END SUB 
   
 '      *************************************************************
 '      ** Routinen fÅr Formular "POSITION" - Positionsbearbeitung **
 '      *************************************************************
  
SUB POSBEARB()
 SET EDIT SELECT ON 
 cusch% = QuickCodePos.SCHEIN
 _formend% = 0
 parentform$ = UCASE$ ( FORM )
 SELECT KEY cusch% LOCK FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
 WHILE _formend% = 0
   IF KalkArt.MASTER = 0 THEN 
     IF parentform$ = "SCHEIN" THEN 
       PFORM$ = "POSITION"
     ELSE 
       PFORM$ = "POSITINE"
     END IF 
   ELSE 
     IF parentform$ = "SCHEIN" THEN 
       PFORM$ = "POSITIOB"
     ELSE 
       PFORM$ = "POSITIBE"
     END IF 
   END IF 
   REM IF KalkArt.MASTER = 0 AND DEFA$ = "MEGA" THEN PFORM$ = "POSDEFN"
   REM IF KalkArt.MASTER <> 0 AND DEFA$ = "MEGA" THEN PFORM$ = "POSDEFBB"
   IF UCASE$ ( FORM ) <> PFORM$ THEN 
     REM CALL MNPOSBEARB()
     MENU ON 
     OPEN FORM GPrjForm$ + PFORM$
     SET f = superbase.form
     SET STATUS "Positionsbearbeitung"
     SET HEADING title$ + " - Positionsbearbeitung"
     SELECT KEY cusch% LOCK FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   END IF 
   IF dokschutz.master > 0 THEN 
     f.posentf.enabled = 0
     f.posok.enabled = 0
   ELSE 
     f.posentf.enabled = - 1
     f.posok.enabled = - 1
   END IF 
   REM kunde1$ = Kundennummer.MASTER + " / " + Nachname.MASTER
   codegr% = Codegr.schein
   SELECT KEY codegr% FILE "Gruppen" INDEX codegr.gruppen
   pgr1$ = Kurzbezeichnung.Gruppen
   VKBeinzel% = VKBrutto.schein / Bezugsmenge.schein
   VKNeinzel% = VKNetto.schein / Bezugsmenge.schein
   RabattGes% = Rabatt.SCHEIN * Anzahl.schein
   REM fÅr Euro
   VKBeinzelEU% = VKBruttoEU.schein / Bezugsmenge.schein
   VKNeinzelEU% = VKNettoEU.schein / Bezugsmenge.schein
   RabattGesEU% = RabattEU.SCHEIN * Anzahl.schein
   IF codew.schein > 0 THEN zweitwaehr$ = LEFT$ (waehrung.schein,4)
   SELECT KEY cusch% LOCK FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   CALL SCHRabattProz()
   CALL QuickStore("schein")
   CALL SCHAnzahl()
   FORM 
   MOUSE ON 
   ENTER TextVorPosition.SCHEIN,0
   ENTER END 
 WEND 
 SET STATUS ""
 SET EDIT SELECT OFF 
 _formend% = 0
 END SUB 
   
 '      ******************************************************
 '      ** Routinen fÅr Formular "gruppen" - Produktgruppen **
 '      ******************************************************
 
SUB GRUPPEN()
  MOUSE OFF 
 CALL DFile(3,"GRUPPEN" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"VERTRETE" + _fpw$)
 _formend% = 0
 prodform$ = UCASE$ (ReadConfig$("FACTURA","PRODUKTFORM"))
 IF UCASE$ (prodform$) = "EUR" OR mastform$ = "EUR" THEN 
     prodform$ = "GRUPPEU"
     euromaske% = 1
     mastform$ = "EUR"
 ELSE 
     prodform$ = "GRUPPEN"
     euromaske% = 0
     mastform$ = ""
 END IF 
 prodform1$ = prodform$
 WHILE _formend% = 0
   GRUPPENsub% = 0
   IF UCASE$ ( FORM ) LIKE prodform$ OR UCASE$ ( FORM ) LIKE prodform1$ THEN 
     REM Leeranweisung
   ELSE 
     CALL MNGRUPPEN()
     MENU ON 
     IF _projekt$ <> "WAWI" THEN 
       OPEN FORM GPrjForm$ + prodform$
     ELSE 
       OPEN FORM GPrjForm$ + prodform1$
     END IF 
     SET f = superbase.form
     SET STATUS "Produktgruppen"
     SET HEADING title$ + " - Produktgruppen"
     GAppName$ = _netpath$ + "DOCP\produkt.pdf"
     MOUSE OFF 
     CALL GRPIntro()
   END IF 
   MOUSE ON 
   f.abbruch.enabled = 0
   f.abbruch.visible = 0
   f.suchen.enabled = - 1
   CALL ClearKBDBuffer()
   SET STATUS "Produktgruppen - Anzahl Produktgruppen" + STR$ ( RECCOUNT ("Gruppen"),",9999999")
   WAIT MOUSE OR KEY OR MENU OR FOR 600
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL GRPrev()
   CASE CrsRight%,PgDn%
     CALL GRNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN 
     IF PAGE > 1 THEN 
       FORM 1
     ELSE 
       _formend% = 1
     END IF 
   END IF 
   SELECT CASE GRUPPENsub%
   CASE 1
     codegr% = Codegr.gruppen
     _cugrp% = Codegr.gruppen
     CALL UMSGRUPPE()
   CASE 2
     CALL GRPSuchen()
   CASE 3
     prodform$ = "GRUPPEU"
     prodform1$ = "GRUPPEU"
     mastform$ = "EUR"
     cugrp% = Codegr.gruppen
   CASE 4
     prodform$ = "GRUPPEN"
     prodform1$ = "GRUPPEN"
     cugrp% = Codegr.gruppen
     mastform$ = ""
   CASE 99
     f.loeschen.enabled = 0
     f.kopieren.enabled = 0
     f.eks.enabled = 0
     f.umsatz.enabled = 0
     CALL ButDesabled()
     ON ERROR GOTO e170620041
     f.but1.enabled = 0
     f.but2.enabled = 0
     f.but3.enabled = 0
     f.but4.enabled = 0
     f.but5.enabled = 0
     f.but6.enabled = 0
     f.but7.enabled = 0
     f.but8.enabled = 0
     f.but9.enabled = 0
     f.but10.enabled = 0
     f.but11.enabled = 0
     f.but12.enabled = 0
     f.but13.enabled = 0
     f.but14.enabled = 0
     f.but15.enabled = 0
     f.but16.enabled = 0
     f.but17.enabled = 0
     f.but18.enabled = 0
     f.but19.enabled = 0
     f.but20.enabled = 0
     f.but21.enabled = 0
e170620041: 
     ON ERROR GOTO e1806200410
     f.b1.enabled = 0
     f.b2.enabled = 0
     f.b3.enabled = 0
     f.b4.enabled = 0
     f.b5.enabled = 0
     f.b6.enabled = 0
     f.b7.enabled = 0
     f.b8.enabled = 0
     f.b9.enabled = 0
     f.b10.enabled = 0
     f.b11.enabled = 0
     f.b12.enabled = 0
     f.b13.enabled = 0
     f.b14.enabled = 0
     f.b15.enabled = 0
     f.b16.enabled = 0
     f.b17.enabled = 0
     f.b18.enabled = 0
     f.b19.enabled = 0
     f.b20.enabled = 0
     f.b21.enabled = 0
e1806200410: 
     ON ERROR GOTO ErrorHandler
     SET EDIT SELECT ON 
     ENTER Kurzbezeichnung.gruppen,0
     SET EDIT SELECT OFF 
     CALL ButEnabled()
     ON ERROR GOTO e170620042
     f.but1.enabled = - 1
     f.but2.enabled = - 1
     f.but3.enabled = - 1
     f.but4.enabled = - 1
     f.but5.enabled = - 1
     f.but6.enabled = - 1
     f.but7.enabled = - 1
     f.but8.enabled = - 1
     f.but9.enabled = - 1
     f.but10.enabled = - 1
     f.but11.enabled = - 1
     f.but12.enabled = - 1
     f.but13.enabled = - 1
     f.but14.enabled = - 1
     f.but15.enabled = - 1
     f.but16.enabled = - 1
     f.but17.enabled = - 1
     f.but18.enabled = - 1
     f.but19.enabled = - 1
     f.but20.enabled = - 1
     f.but21.enabled = - 1
e170620042: 
     ON ERROR GOTO e1806200411
     f.b1.enabled = - 1
     f.b2.enabled = - 1
     f.b3.enabled = - 1
     f.b4.enabled = - 1
     f.b5.enabled = - 1
     f.b6.enabled = - 1
     f.b7.enabled = - 1
     f.b8.enabled = - 1
     f.b9.enabled = - 1
     f.b10.enabled = - 1
     f.b11.enabled = - 1
     f.b12.enabled = - 1
     f.b13.enabled = - 1
     f.b14.enabled = - 1
     f.b15.enabled = - 1
     f.b16.enabled = - 1
     f.b17.enabled = - 1
     f.b18.enabled = - 1
     f.b19.enabled = - 1
     f.b20.enabled = - 1
     f.b21.enabled = - 1
e1806200411: 
     ON ERROR GOTO ErrorHandler
     f.loeschen.enabled = - 1
     f.kopieren.enabled = - 1
     f.eks.enabled = - 1
     f.umsatz.enabled = - 1
     IF abbruch% = - 1 THEN 
       SELECT KEY codegr.gruppen FILE "gruppen" INDEX codegr.gruppen
       FORM 
       abbruch% = 0
     END IF 
   END SELECT 
   REM CALL BMCheckMail()
 WEND 
 _formend% = 0
 cugrp% = 0
 END SUB 
 
 
 ' GRUPPEN Intro 
 ' =======================================================================
 
SUB GRPIntro()
 FILE "gruppen"
 INDEX CodeGR.gruppen
 SELECT FIRST 
 IF RECCOUNT ("GRUPPEN") > 1 THEN 
   FILE "ARTIKEL"
   SELECT WHERE novi1.artikel = 0
   SELECT FIRST 
   FILE "gruppen"
   SELECT WHERE novi1.gruppen = 0
   SELECT FIRST 
 END IF 
 a% = 0
 INDEX CodeGR.gruppen
 IF cugrp% <> 0 THEN 
   SELECT FORM KEY cugrp%
 ELSE 
   INDEX Kurzbezeichnung.gruppen
   SELECT FORM FIRST 
   IF EOF ("") THEN 
     BLANK 
     CodeGR.gruppen = SER ("gruppen",1)
   END IF 
 END IF 
 FORM 
 SET INDEX Kurzbezeichnung.gruppen
 INDEX Kurzbezeichnung.gruppen
 END SUB 
 
 
 ' Produktgruppe Neu
 ' =======================================================================
 
SUB GRPNeu()
 IF Kurzbezeichnung.gruppen <> "" THEN CALL FStore("gruppen")
 GRUPPENsub% = 99
 BLANK FORM 
 CodeGR.gruppen = SER ("gruppen",1)
 FORM 
 END SUB 
 
 
 
 ' Produktgruppe kopieren
 ' =======================================================================
 
SUB GRPKopieren()
 cugrp% = CodeGR.GRUPPEN
 REM IF Kurzbezeichnung.gruppen <> "" THEN CALL FStore("gruppen")
 CALL DFile(3,"KOMBI" + _fpw$)
 CALL DFile(3,"KKOPIE" + _fpw$)
 FILE "gruppen"
 REQUEST "Produktgruppe in die kopiert werden soll auswÑhlen:","",25,req%,grpziel%,72,CodeGR.gruppen,Kurzbezeichnung INDEX Kurzbezeichnung.gruppen
 IF req% <> 1 THEN END SUB 
 INDEX CodeGR.gruppen
 SELECT FIRST 
 FILE "artikel"
 INDEX Codegr.artikel
 SELECT FIRST 
 SELECT WHERE Codegr.artikel = cugrp%
 SELECT FIRST 
 WHILE NOT EOF ("artikel")
   FILE "artikel"
   codearVorlage% = CodeAR.artikel
   COPY FROM VKBrutto,EK,VKnetto,Handelsspanne,MwST,ME_,KombiNetto,KombiBrutto,CodeSYS,Bestellnummer,Lieferant,LieferEK
   Beschreibung$ = Beschreibung.artikel:Bezugsmenge% = Bezugsmenge:Maschine$ = maschine:ZeitproBezug% = ZeitproBezugsme
   IF DEFA$ = "MEGA" THEN 
     Vkonto% = Verbrauchskonto.artikel
     BKonto% = Bestandskonto.artikel
   END IF 
   IF ArtiAutoNum$ <> "j" THEN artikelnr$ = artikelnummer.artikel
   bezeichnung$ = bezeichnung.artikel
   REM codearalt% = SER ("artikel")
   BLANK 
   codearneu% = SER ("ARTIKEL",1)
   CodeAR.ARTIKEL = codearneu%
   CodeGR.ARTIKEL = grpziel%
   Beschreibung.artikel = Beschreibung$
   SET STATUS "Kopiere Artikel " + LEFT$ (bezeichnung$,20)
   IF ArtiAutoNum$ LIKE "j" AND DEFA$ <> "MEGA" THEN 
     SELECT FIRST FILE "stamm"
     nnum% = LASTArtikeln.stamm + 1
     LASTArtikeln.stamm = nnum%
     STORE FILE "stamm"
     UNLOCK CURRENT FILE "Stamm"
     artikelnummer.artikel = LTRIM$ ( STR$ (nnum%,"999999999"))
   END IF 
   IF ArtiAutoNum$ = "TRUE" AND DEFA$ = "MEGA" THEN 
     artcodeneu% = artcsernum%("artikel")
     Artikelnummer.artikel = LTRIM$ ( STR$ (artcodeneu%,"99999999999999")) + "-" + stationsnr$
   END IF 
   IF ArtiAutoNum$ <> "j" THEN artikelnummer.artikel = LEFT$ (artikelnr$,20)
   bezeichnung.artikel = LEFT$ (bezeichnung$,50)
   IF BestfÅhr$ = "j" THEN BestandsfÅhrung.artikel = "j"
   IF DEFA$ = "MEGA" THEN 
     Verbrauchskonto.artikel = VKonto%
     Bestandskonto.artikel = BKonto%
     BestandsfÅhrung.artikel = "j"
   END IF 
   COPY TO VKBrutto,EK,VKnetto,Handelsspanne,MwST,ME_,KombiNetto,KombiBrutto,CodeSYS,Bestellnummer,Lieferant,LieferEK
   Bezugsmenge = Bezugsmenge%:Maschine = maschine$:ZeitproBezugsme = ZeitproBezug%
   CALL QuickStore("Artikel")
   IF IsKombi%(CodearVorlage%) THEN 
     CALL DFile(3,"KOMBI" + _fpw$)
     CALL DFile(3,"KKOpIE" + _fpw$)
     FILE "KOMBI"
     SELECT FIRST LOCK 
     SELECT KEY CodearVorlage% LOCK FILE "KOMBI" INDEX CodeKO.KOMBI
     WHILE CodeKO.kombi = CodearVorlage% AND NOT EOF ("KOMBI")
       codearkom% = CodeAR.Kombi
       codegrkom% = CodeGR.Kombi
       bez$ = bezeichnung.kombi
       kombinetto% = KombiNetto.kombi
       kombibrutto% = kombibrutto.kombi
       anzahl% = anzahl.kombi
       me$ = me_.kombi
       ek% = ek.kombi
       FILE "kkopie"
       BLANK 
       CodeKO.KKOpie = codearneu%
       CodeAR.Kkopie = codearkom%
       CodeGR.Kkopie = grpziel%
       bezeichnung.Kkopie = bez$
       kombinetto.Kkopie = kombinetto%
       kombibrutto.Kkopie = kombibrutto%
       anzahl.kKopie = anzahl%
       me_.Kkopie = me$
       ek.kkopie = ek%
       CALL QuickStore("KKopie")
       FILE "kombi"
       SELECT NEXT LOCK 
     WEND 
     IMPORT "KKOPIE.sbf" TO FILE "KOMBI" WHERE CodeKO.kkopie = codearneu%
     FILE "KKopie"
     REMOVE FROM FILE "KKOPIE"
   END IF 
 FILE "artikel"
 SELECT NEXT LOCK 
 WEND 
 FILE "artikel"
 SELECT WHERE 
 UNLOCK CURRENT FILE "Artikel"
 UNLOCK FILE "artikel" ALL 
 UNLOCK CURRENT FILE "kkopie"
 UNLOCK FILE "kkopie" ALL 
 FILE "gruppen"
 SELECT WHERE 
 UNLOCK CURRENT FILE "gruppen"
 UNLOCK FILE "gruppen" ALL 
 SELECT FIRST 
 SELECT FORM KEY grpziel% FILE "gruppen" INDEX CodeGR.gruppen
 SET INDEX Kurzbezeichnung.GRUPPEN
 INDEX Kurzbezeichnung.GRUPPEN
 FORM 

 END SUB 
 
 
 
 
 ' Produktgruppe Suchen
 ' =======================================================================
 
SUB GRPSuchen()
 IF NEW ("GRUPPEN") OR MOD ("GRUPPEN") THEN CALL FStore("GRUPPEN")
   alle$ = "n"
   _cugrp% = CodeGR.gruppen
   DIM Auswahl1$(1)

anf160120051: 
     FILE "gruppen"
     INDEX CodeGR.gruppen
     SELECT FIRST 
     a% = 0
     REDIM ProdGruppen$(1,1)
     REDIM ProdGruppen$( RECCOUNT ("gruppen") + 10)
     WHILE NOT EOF ("gruppen")
       ok% = - 1
       IF alle$ = "n" THEN 
         IF novi1.gruppen = 1 THEN ok% = 0
       END IF 
       IF ok% = - 1 THEN 
         ProdGruppen$(a%) = Kurzbezeichnung.gruppen
         IF novi1.gruppen = 1 THEN ProdGruppen$(a%) = ProdGruppen$(a%) + " ###"
         ProdGruppen$(a%) = ProdGruppen$(a%) + SPACE$ (100) + STR$ (CodeGR.gruppen,"000000")
         a% = a% + 1
       END IF 
       SELECT NEXT 
     WEND 
     Auswahl$ = ProdGruppen$(0)
     Auswahl1$(0) = Auswahl$
     FILE "artikel"
      CREATE DIALOG "PREISLIS",0,0,200,364,title$,"MS Sans Serif",8
      ADD DIALOG "PREISLIS",4,0,0,199,340,0," Auswahl Produktgruppe"
      ADD DIALOG "PREISLIS",7,5,14,189,325,2,2,Prodgruppen$,Auswahl1$," "
      ADD DIALOG "PREISLIS",1,17,345,55,16,1,"&OK",1,1
      ADD DIALOG "PREISLIS",1,77,345,55,16,0,"&Abbrechen",0,0
      ADD DIALOG "PREISLIS",1,137,345,55,16,0,"Alle",2,2
      DIALOG "PREISLIS",req%
      REMOVE DIALOG "PREISLIS"
      IF req% = 2 THEN 
        alle$ = "j"
        SELECT WHERE FILE "gruppen"
        SELECT WHERE FILE "Artikel"
        GOTO anf160120051
      END IF 
      IF req% = 1 THEN 
        codegr% = VAL ( RIGHT$ (Auswahl1$(0),6))
        IF codegr% > 0 THEN 
          SELECT KEY codegr% FILE "gruppen" INDEX codegr.gruppen
          _cugrp% = CodeGR.gruppen
        END IF 
      END IF 
   FILE "gruppen"
   SELECT FORM KEY _cugrp% FILE "gruppen" INDEX CodeGR.gruppen
   SET INDEX Kurzbezeichnung.GRUPPEN
   INDEX Kurzbezeichnung.GRUPPEN
 FORM 
 END SUB 
 
   
SUB GRPLoeschen()
 IF disabled%("GRPLoeschen") THEN END SUB 
 MOUSE OFF 
 cugrp% = CodeGR.gruppen
 REQUEST "Produktgruppe wirklich lîschen?","Es werden auch die zugehîrigen Artikel gelîscht!",135,req%
 IF req% = 1 THEN 
   SELECT FORM KEY cugrp% LOCK FILE "GRUPPEN" INDEX CodeGR.gruppen
   SELECT KEY cugrp% LOCK FILE "GRUPPEN" INDEX CodeGR.gruppen
   SELECT REMOVE 
   SELECT NEXT 
   FORM 
   FILE "artikel"
   INDEX codegr.artikel
   SELECT FIRST 
   REMOVE FROM FILE "artikel" WHERE Codegr.artikel = cugrp%
   FILE "gruppen"
 END IF 
 MOUSE ON 
 FILE "gruppen"
 CALL GRPIntro()
 FORM 
 END SUB 
 
 
 
SUB GRPrev()
 FILE "GRUPPEN"
 SET INDEX Kurzbezeichnung.gruppen
 INDEX Kurzbezeichnung.gruppen
 CALL PSelectPrev()
 FORM 
 END SUB 
 
SUB GRNext()
 FILE "GRUPPEN"
 SET INDEX Kurzbezeichnung.gruppen
 INDEX Kurzbezeichnung.gruppen
 CALL PSelectNext()
 FORM 
 END SUB 
 
 
SUB GRPArtikel()
 cugrp% = CodeGR.GRUPPEN
 cuart% = CodeAR.ARTIKEL
 IF _projekt$ LIKE "WAWI" THEN maske1$ = "GRUPPEN1"
 IF cuart% > 0 THEN CALL ARTIKEL()
 IF _projekt$ LIKE "WAWI" THEN maske1$ = ""
 END SUB 
 
 
 
  
 
 '      *************************************
 '      ** Routinen fÅr Formular "Floskel" **
 '      *************************************
 
SUB FLOSKEL()
 CALL DFile(3,"FLOSKEL" + _fpw$)
 _formend% = 0
 WHILE _formend% = 0
   FLOSKELsub% = 0
   IF UCASE$ ( FORM ) <> "FLOSKEL" THEN 
     CALL MNFLOSKEL()
     MENU ON 
     OPEN FORM GPrjForm$ + "FLOSKEL"
     SET STATUS "Floskelverwaltung"
     SET HEADING title$ + " - Floskelverwaltung"
     CALL FLIntro()
   END IF 
   GAppName$ = _netpath$ + "DOCP\floskel.pdf"
   MOUSE ON 
   WAIT MOUSE OR KEY OR MENU 
   SELECT CASE FLOSKELsub%
   CASE 1
     cufl% = codefl.floskel
     SELECT FIRST FILE "floskel" INDEX codefl.floskel
     SELECT KEY cufl% LOCK FILE "floskel" INDEX codefl.floskel
     FORM 2
   CASE 2
     SELECT WHERE FILE "floskel"
     FORM 1
     SELECT FORM FIRST 
     cufl% = 0
     CALL FLIntro()
     FORM 
   CASE 3
     CALL FLSuchen()
     SELECT FIRST FILE "floskel" INDEX codefl.floskel
     SELECT KEY cufl% LOCK FILE "floskel" INDEX codefl.floskel
     FORM 2
   CASE 4
     REM Neu
     CALL FLNeu()
     FORM 2
   CASE 5
     REM Duplizieren
     codeflorig% = codefl.floskel
     CALL FLDupli(codeflorig%)
   CASE 6
     REM drucken
     CALL FLOSKDRU()
   CASE 99
     SET EDIT SELECT ON 
     ENTER SortNummer.floskel,0
     SET EDIT SELECT OFF 
   END SELECT 
 WEND 
 _formend% = 0
 cufl% = 0
 END SUB 
 
 ' FLOSKEL Intro 
 ' =======================================================================
 
SUB FLIntro()
 FILE "floskel"
 INDEX Sortnummer.floskel
 IF cufl% <> 0 THEN 
   SELECT FIRST FILE "floskel" INDEX codefl.floskel
   SELECT KEY cufl% FILE "floskel" INDEX codefl.floskel
 ELSE 
   INDEX Sortnummer.floskel
   SELECT FORM FIRST 
   IF EOF ("") THEN 
     BLANK 
     CodeFL.floskel = SER ("floskel",1)
     Floskel.floskel = "Bitte hier eine Floskel eingeben"
   END IF 
 END IF 
 FORM 
 SET INDEX Sortnummer.floskel
 INDEX Sortnummer.floskel
 END SUB 
 
 
 ' Floskel Neu
 ' =======================================================================
 
SUB FLNeu()
 IF Floskel.floskel <> "" THEN CALL FStore("floskel")
 opt% = 0
 osp% = 0
 zugArt% = 0
 spezial% = 0
 CREATE DIALOG "FLSUCHEN",0,0,233,338,"Neue Floskel erfassen","MS Sans Serif",8
 ADD DIALOG "FLSUCHEN",4,0,0,233,89,0,""
 ADD DIALOG "FLSUCHEN",5,34,11,92,9,0,"WÑhlen Sie die gewÅnschte"
 ADD DIALOG "FLSUCHEN",9,5,12,19,21,2
 ADD DIALOG "FLSUCHEN",5,74,22,66,10,0,"Floskelgrupppe aus:"
 REM ADD DIALOG "FLSUCHEN",3,74,36,52,12,0,"alle Floskeln",1,opt%
 ADD DIALOG "FLSUCHEN",3,74,48,76,12,0,"allgemeine Floskeln",0,opt%
 ADD DIALOG "FLSUCHEN",3,74,60,44,12,0,"Kopftexte",1,opt%
 ADD DIALOG "FLSUCHEN",3,74,72,40,12,0,"Fu·texte",2,opt%
 
 ADD DIALOG "FLSUCHEN",4,0,89,233,45,0,"Sprache"
 ADD DIALOG "FLSUCHEN",3,74,99,52,12,0,"deutsch",0,osp%
 ADD DIALOG "FLSUCHEN",3,74,109,76,12,0,"englisch",1,osp%
 REM ADD DIALOG "FLSUCHEN",3,74,119,76,12,0,"beide Sprachen",2,osp%
 

 ADD DIALOG "FLSUCHEN",4,4,139,105,165,0,"Standard fÅr"
 ADD DIALOG "FLSUCHEN",3,14,149,52,12,0,"allgemein",0,spezial%
 ADD DIALOG "FLSUCHEN",3,14,159,76,12,0,"Angebot",1,spezial%
 ADD DIALOG "FLSUCHEN",3,14,169,76,12,0,"Rechnung",2,spezial%
 ADD DIALOG "FLSUCHEN",3,14,179,52,12,0,"Lieferschein",3,spezial%
 ADD DIALOG "FLSUCHEN",3,14,189,76,12,0,"Auftrag",4,spezial%
 ADD DIALOG "FLSUCHEN",3,14,199,76,12,0,"Bestellung",5,spezial%
 ADD DIALOG "FLSUCHEN",3,14,209,76,12,0,"Gutschrift",7,spezial%
 ADD DIALOG "FLSUCHEN",3,14,219,76,12,0,"Preisanfrage",16,spezial%
 ADD DIALOG "FLSUCHEN",3,14,229,76,12,0,"Nachl.Lief.",8,spezial%
 ADD DIALOG "FLSUCHEN",3,14,239,76,12,0,"Nachl.Rech.",9,spezial%
 ADD DIALOG "FLSUCHEN",3,14,249,76,12,0,"1.Mahnung",11,spezial%
 ADD DIALOG "FLSUCHEN",3,14,259,76,12,0,"2.Mahnung",12,spezial%
 ADD DIALOG "FLSUCHEN",3,14,269,76,12,0,"3.Mahnung",13,spezial%
 ADD DIALOG "FLSUCHEN",3,14,279,76,12,0,"4.Mahnung",14,spezial%
 ADD DIALOG "FLSUCHEN",3,14,289,76,12,0,"5.Mahnung",15,spezial%

 ADD DIALOG "FLSUCHEN",4,124,139,105,165,0,"zugehîrig zu"
 ADD DIALOG "FLSUCHEN",3,144,149,52,12,0,"allgemein",0,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,159,76,12,0,"Angebot",1,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,169,76,12,0,"Rechnung",2,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,179,52,12,0,"Lieferschein",3,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,189,76,12,0,"Auftrag",4,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,199,76,12,0,"Bestellung",5,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,209,76,12,0,"Gutschrift",7,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,219,76,12,0,"Preisanfrage",16,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,229,76,12,0,"Nachl.Lief.",8,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,239,76,12,0,"Nachl.Rech.",9,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,249,76,12,0,"1.Mahnung",11,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,259,76,12,0,"2.Mahnung",12,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,269,76,12,0,"3.Mahnung",13,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,279,76,12,0,"4.Mahnung",14,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,289,76,12,0,"5.Mahnung",15,zugArt%
 
 
 
 REM ADD DIALOG "FLSUCHEN",2,9,305,88,11,0,"alle Floskeln anzeigen","j","n",alle$
 ADD DIALOG "FLSUCHEN",1,59,322,55,14,1,"&OK",1,1
 ADD DIALOG "FLSUCHEN",1,118,322,55,14,0,"&Abbrechen",0,0
 DIALOG "FLSUCHEN",req%
 REMOVE DIALOG "FLSUCHEN"
 IF req% = 1 THEN 
   IF spezial% <> 0 THEN zugart% = spezial%
   BLANK FILE "floskel"
   spezial.floskel = spezial%
   zugart.floskel = zugart%
   art.floskel = opt%
   sprache.floskel = osp%
   novi1.floskel = 0
   gueltigvon.floskel = TODAY 
   TextNr.floskel = 0
   CodeFL.floskel = SER ("floskel",1)
   cufl% = codefl.floskel
   sortnummer$ = FloSortNr$(opt%,osp%,spezial%,zugart%)
   REM CALL Fehler(sortnummer$,"")
   sortnummer.floskel = sortnummer$
   REM Nummer erzeugen

   STORE FILE "floskel"
   SELECT FIRST FILE "floskel" INDEX codefl.floskel
   SELECT KEY cufl% LOCK FILE "floskel" INDEX codefl.floskel
   FORM 2
   SET EDIT SELECT ON 
   ENTER SortNummer.floskel,0
   SET EDIT SELECT OFF 
 END IF 
 END SUB 
 

 
 ' Floskel suchen
 ' =======================================================================
 
SUB FLSuchen()
 alle$ = "n"
 DIM Auswahl1$(1)
 cfile$ = FILE 
 FILE "FLOSKEL"
 INDEX floskel.floskel
 SET QUERY ON 
 cufl% = CodeFL.floskel
 vcufl% = cufl%
 IF ( MOD ("floskel") OR NEW ("floskel")) AND Floskel.floskel <> "" THEN CALL FStore("floskel")
 opt% = 1
 osp% = 0
 zugArt% = - 1
anf1601020052: 
 CREATE DIALOG "FLSUCHEN",0,0,133,338,title$,"MS Sans Serif",8
 ADD DIALOG "FLSUCHEN",4,0,0,133,89,0,""
 ADD DIALOG "FLSUCHEN",5,34,11,92,9,0,"WÑhlen Sie die gewÅnschte"
 ADD DIALOG "FLSUCHEN",9,5,12,19,21,2
 ADD DIALOG "FLSUCHEN",5,34,22,66,10,0,"Floskelgrupppe aus:"
 ADD DIALOG "FLSUCHEN",3,34,36,52,12,0,"alle Floskeln",1,opt%
 ADD DIALOG "FLSUCHEN",3,34,48,76,12,0,"allgemeine Floskeln",2,opt%
 ADD DIALOG "FLSUCHEN",3,34,60,44,12,0,"Kopftexte",3,opt%
 ADD DIALOG "FLSUCHEN",3,34,72,40,12,0,"Fu·texte",4,opt%

 ADD DIALOG "FLSUCHEN",4,0,89,133,45,0,"Sprache"
 ADD DIALOG "FLSUCHEN",3,34,99,52,12,0,"deutsch",0,osp%
 ADD DIALOG "FLSUCHEN",3,34,109,76,12,0,"englisch",1,osp%
 ADD DIALOG "FLSUCHEN",3,34,119,76,12,0,"beide Sprachen",2,osp%

 ADD DIALOG "FLSUCHEN",4,0,139,133,165,0,"zugehîrig zu"
 ADD DIALOG "FLSUCHEN",3,34,149,52,12,0,"EGAL", - 1,zugArt%
 ADD DIALOG "FLSUCHEN",3,34,159,52,12,0,"allgemein",0,zugArt%
 ADD DIALOG "FLSUCHEN",3,34,169,76,12,0,"Angebot",1,zugArt%
 ADD DIALOG "FLSUCHEN",3,34,179,76,12,0,"Rechnung",2,zugArt%
 ADD DIALOG "FLSUCHEN",3,34,189,52,12,0,"Lieferschein",3,zugArt%
 ADD DIALOG "FLSUCHEN",3,34,199,76,12,0,"Auftrag",4,zugArt%
 ADD DIALOG "FLSUCHEN",3,34,209,76,12,0,"Bestellung",5,zugArt%
 ADD DIALOG "FLSUCHEN",3,34,219,76,12,0,"Gutschrift",7,zugArt%
 ADD DIALOG "FLSUCHEN",3,34,229,76,12,0,"Preisanfrage",16,zugArt%
 ADD DIALOG "FLSUCHEN",3,34,239,76,12,0,"Nachl.Lief.",8,zugArt%
 ADD DIALOG "FLSUCHEN",3,34,249,76,12,0,"Nachl.Rech.",9,zugArt%
 ADD DIALOG "FLSUCHEN",3,34,259,76,12,0,"1.Mahnung",11,zugArt%
 ADD DIALOG "FLSUCHEN",3,34,269,76,12,0,"2.Mahnung",12,zugArt%
 ADD DIALOG "FLSUCHEN",3,34,279,76,12,0,"3.Mahnung",13,zugArt%
 ADD DIALOG "FLSUCHEN",3,34,289,76,12,0,"4.Mahnung",14,zugArt%
 ADD DIALOG "FLSUCHEN",3,34,299,76,12,0,"5.Mahnung",15,zugArt%



 ADD DIALOG "FLSUCHEN",2,9,309,88,11,0,"alle Floskeln anzeigen","j","n",alle$
 ADD DIALOG "FLSUCHEN",1,9,322,55,14,1,"&OK",1,1
 ADD DIALOG "FLSUCHEN",1,68,322,55,14,0,"&Abbrechen",0,0
 DIALOG "FLSUCHEN",req%
 REMOVE DIALOG "FLSUCHEN"
 be$ = ""
 IF osp% = 0 THEN 
    be$ = "and sprache.floskel = 0"
 END IF 
 IF osp% = 1 THEN 
   be$ = "and sprache.floskel = 1"
 END IF 
 IF osp% = 2 THEN 
   be$ = ""
 END IF 
 IF req% = 1 THEN 
   SELECT WHERE FILE "floskel"
   SELECT CASE opt%
   CASE 1
     REM REQUEST "Bitte wÑhlen Sie aus:","",25,req%,vcufl%,72,Codefl.floskel,Floskel.floskel INDEX Floskel.floskel
     bef$ = "SELECT WHERE "
     IF alle$ = "n" THEN 
       bef$ = bef$ + "  novi1.floskel = 0 "
     END IF 
     bef$ = bef$ + be$
   CASE 2
     bef$ = "SELECT WHERE Art.FLOSKEL = 0 "
     IF alle$ = "n" THEN 
       bef$ = bef$ + " and novi1.floskel = 0 "
     END IF 
     bef$ = bef$ + be$
   CASE 3

     bef$ = "SELECT WHERE Art.FLOSKEL = 1 "
     IF alle$ = "n" THEN 
       bef$ = bef$ + " and novi1.floskel = 0 "
     END IF 
     bef$ = bef$ + be$


   CASE 4
     bef$ = "SELECT WHERE Art.FLOSKEL = 2 "
     IF alle$ = "n" THEN 
       bef$ = bef$ + " and novi1.floskel = 0 "
     END IF 
     bef$ = bef$ + be$
   END SELECT 
   IF zugart% <> - 1 THEN 
     bef$ = bef$ + " AND zugart.Floskel = zugart%"
   END IF 
   IF alle$ <> "j" THEN EXECUTE bef$

     SELECT FIRST FILE "floskel"
     DIM floskel$( RECCOUNT ("floskel"))
     IF GCODIE% = - 1 THEN 
       CALL SearchInitFLO()
     END IF 
     WHILE NOT EOF ("floskel")
       ok% = - 1
       IF alle$ = "n" THEN 
         IF novi1.floskel = 1 THEN ok% = 0
       END IF 
       IF ok% = - 1 THEN 
         floskel$(a%) = floskel.floskel
         IF novi1.floskel = 1 THEN floskel$(a%) = "### " + floskel$(a%)
         floskel$(a%) = floskel$(a%) + SPACE$ (100) + STR$ (CodeFL.floskel,"000000")
         a% = a% + 1
         IF GCODIE% = - 1 THEN 
           CALL SearchVorbFLO("project")
         END IF 
       END IF 
       SELECT NEXT 
     WEND 
     IF GCODIE% = - 1 THEN 
         c$ = "aa"
         cufl% = 0
         req3% = CALL ("_SearchShow",c$)
         REM REQUEST c$,"",2
         REM ret% = CALL ("_SearchClose")
         IF VAL (c$) <> 0 THEN 
           cufl% = VAL (c$)
           ok% = 0
           SET STATUS "Floskel gefunden..."
         ELSE 
           CALL Fehler("Es wurden keine Floskeln gefunden!","")
         END IF 
         IF req3% = 2 THEN 
           CALL Fehler("Diese Funktion wird nur innerhalb der Adressmaske unterstÅtzt!","")
         END IF 
 
     ELSE 
       Auswahl$ = floskel$(0)
       Auswahl1$(0) = Auswahl$
       FILE "floskel"
       CREATE DIALOG "PREISLIS",0,0,550,394,title$,"MS Sans Serif",8
       ADD DIALOG "PREISLIS",4,0,0,550,370,0," Auswahl Floskel"
       ADD DIALOG "PREISLIS",7,5,14,539,355,2,2,floskel$,Auswahl1$," "
       ADD DIALOG "PREISLIS",1,217,375,55,16,1,"&OK",1,1
       ADD DIALOG "PREISLIS",1,277,375,55,16,0,"&Abbrechen",0,0
       REM ADD DIALOG "PREISLIS",1,137,345,55,16,0,"Alle",2,2
       DIALOG "PREISLIS",req%
       REMOVE DIALOG "PREISLIS"
       IF req% = 1 THEN 
         cufl% = VAL ( RIGHT$ (Auswahl1$(0),6))
       ELSE 
         cufl% = 0
       END IF 
     END IF 
 ELSE 
   cufl% = 0
 END IF 
 SELECT FIRST FILE "floskel" INDEX CodeFL.floskel
 SELECT KEY cufl% FILE "floskel" INDEX CodeFL.floskel
 FORM 
 SET INDEX SortNummer.floskel
 INDEX SortNummer.floskel
 FILE cfile$

 END SUB 
 
SUB FLLoeschen()
 IF disabled%("FLLoeschen") THEN END SUB 
 cufl% = CodeFL.floskel
 REQUEST "Floskel wirklich lîschen?","",135,req%
 IF req% = 1 THEN 
   SELECT KEY cufl% LOCK FILE "FLOSKEL" INDEX CodeFL.floskel
   SELECT REMOVE 
   SELECT NEXT 
   FORM 
 END IF 
 FORM 
 END SUB 
 
SUB FLPrev()
 FILE "floskel"
 SET INDEX Sortnummer.floskel
 INDEX Sortnummer.floskel
 CALL PSelectPrev()
 FORM 
 END SUB 
 
SUB FLNext()
 FILE "floskel"
 SET INDEX Sortnummer.floskel
 INDEX Sortnummer.floskel
 CALL PSelectNext()
 FORM 
 END SUB 
 
 
 ' ENTRY/EXIT Prozeduren fÅr ARTIKEL
 ' =======================================================================
 ' Euro 16.09.98
SUB CHEinkauf()
 geseinkauf$ = STR$ (ek.artikel + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel,",9999999999.00")
 geseinkauf% = VAL (geseinkauf$)
 IF ek.artikel > 0 THEN 
   VKnetto$ = STR$ (geseinkauf% + ((geseinkauf% / 100) * Handelsspanne.ARTIKEL),",9999999999.00")
   VKnetto.ARTIKEL = VAL (VKnetto$)
 END IF 
 IF VKbrutto.ARTIKEL > 0 THEN 
   VKbrutto$ = STR$ (VKnetto.ARTIKEL + ((VKnetto.ARTIKEL / 100) * MwSt.ARTIKEL),",9999999999.00")
   VKbrutto.ARTIKEL = VAL (VKbrutto$)
 END IF 
 IF KombiNetto.ARTIKEL <> 0 THEN 
   KHSpanneP$ = STR$ ((100 / geseinkauf% * KombiNetto.ARTIKEL) - 100,",9999999999.00")
   KHSpanneDM$ = STR$ (KombiNetto.ARTIKEL - geseinkauf%,",9999999999.00")
   
 END IF 
 
 CALL ArtDMEuro()
 CALL letztAnpass()
 FORM 
 END SUB 
  
SUB CHEinkaufEu()
   
  geseinkauf$ = STR$ (ekeu.artikel + KostTranseu.artikel + KostRepeu.artikel + KostSonsteu.artikel,",9999999999.00")
  geseinkauf% = VAL (geseinkauf$)
  IF ekeu.artikel > 0 THEN 
     VKnettoeu$ = STR$ (geseinkauf% + ((geseinkauf% / 100) * Handelsspanne.ARTIKEL),",9999999999.00")
     VKnettoeu.ARTIKEL = VAL (VKnettoeu$)
   END IF 
   IF VKbruttoeu.ARTIKEL > 0 THEN 
     VKbruttoeu$ = STR$ (VKnettoeu.ARTIKEL + ((VKnettoeu.ARTIKEL / 100) * MwSt.ARTIKEL),",9999999999.00")
     VKbruttoeu.ARTIKEL = VAL (VKbruttoeu$)
   END IF 
   IF KombiNettoeu.ARTIKEL <> 0 THEN 
     KHSpannePEu$ = STR$ ((100 / geseinkauf% * KombiNettoeu.ARTIKEL) - 100,",9999999999.00")
     KHSpanneEu$ = STR$ (KombiNettoeu.ARTIKEL - geseinkauf%,",9999999999.00")
   END IF 
   CALL ArtEuroDM()
 CALL letztAnpass()
 FORM 
 END SUB 


 ' geÑnderte Handelsspanne.ARTIKEL
 ' =======================================================================
 ' Euro 16.09.98
SUB CHHandelssp()
 IF EK.ARTIKEL > 0 THEN 
   geseinkauf$ = STR$ (ek.artikel + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel,",9999999999.00")
   geseinkauf% = VAL (geseinkauf$)
   VKnetto$ = STR$ (geseinkauf% + ((geseinkauf% / 100) * Handelsspanne.ARTIKEL),",9999999999.00")
   VKnetto.ARTIKEL = VAL (VKnetto$)
   HSpanneDM$ = STR$ (VKnetto.ARTIKEL - geseinkauf%,",9999999999.00")
   IF VKbrutto.ARTIKEL > 0 THEN 
     VKbrutto$ = STR$ (VKnetto.ARTIKEL + ((VKnetto.ARTIKEL / 100) * MwSt.ARTIKEL),",9999999999.00")
     VKbrutto.ARTIKEL = VAL (VKbrutto$)
   END IF 
 END IF 
 CALL ArtDMEuro()
 CALL letztAnpass()
 FORM 
 END SUB 
 
SUB CHHandelsspEu()
 IF EKeu.ARTIKEL > 0 THEN 
   geseinkauf$ = STR$ (ekeu.artikel + KostTranseu.artikel + KostRepeu.artikel + KostSonsteu.artikel,",9999999999.00")
   geseinkauf% = VAL (geseinkauf$)
   VKnettoEu$ = STR$ (geseinkauf% + ((geseinkauf% / 100) * Handelsspanne.ARTIKEL),",9999999999.00")
   VKnettoEu.ARTIKEL = VAL (VKnettoEu$)
   HSpanneEu$ = STR$ (VKnettoEu.ARTIKEL - geseinkauf%,",9999999999.00")
   IF VKbruttoEu.ARTIKEL > 0 THEN 
     VKbruttoEu$ = STR$ (VKnettoEu.ARTIKEL + ((VKnettoEu.ARTIKEL / 100) * MwSt.ARTIKEL),",9999999999.00")
     VKbruttoEu.ARTIKEL = VAL (VKbruttoEu$)
   END IF 
 END IF 
 CALL ArtEuroDM()
 CALL letztAnpass()
 FORM 
 END SUB 

 ' geÑnderte Provisionsprozente
 ' ======================================================================= 
 ' Euro

SUB CHProvProz()
 IF codear.artprov > 0 THEN 
   quickarma$ = quickarma.artprov
   IF vknetto.artikel <> 0 AND codema.artprov > 0 AND codear.artprov > 0 THEN 
     ProvisDM.artprov = (VKNetto.artikel - ek.artikel) * ProvisProz.artprov / 100
     ProvisEu.artprov = (VKNettoEu.artikel - ekEu.artikel) * ProvisProz.artprov / 100
     CALL QuickStore("artprov")
   END IF 
   SELECT KEY quickarma$ LOCK FILE "artprov" INDEX quickarma.artprov
 END IF 
 FORM 
 END SUB 
 
SUB CHProvProzEu()
 IF codear.artprov > 0 THEN 
   quickarma$ = quickarma.artprov
   IF vknettoeu.artikel <> 0 AND codema.artprov > 0 AND codear.artprov > 0 THEN 
     ProvisDM.artprov = (VKNetto.artikel - ek.artikel) * ProvisProz.artprov / 100
     ProvisEu.artprov = (VKNettoEu.artikel - ekEu.artikel) * ProvisProz.artprov / 100
     CALL QuickStore("artprov")
   END IF 
   SELECT KEY quickarma$ LOCK FILE "artprov" INDEX quickarma.artprov
 END IF 
 FORM 
 END SUB 
 



 ' geÑnderte DMProvision
 ' ======================================================================= 
SUB CHProvDM()
 IF codear.artprov > 0 THEN 
   quickarma$ = quickarma.artprov
   IF vknetto.artikel <> 0 AND codema.artprov > 0 AND codear.artprov > 0 THEN 
     ProvisProz.artprov = ProvisDM.artprov * 100 / (VKNetto.artikel - ek.artikel)
     CALL QuickStore("artprov")
   END IF 
   SELECT KEY quickarma$ LOCK FILE "artprov" INDEX quickarma.artprov
   FORM 
 END IF 
 END SUB 

SUB CHProvDMEu()
 IF codear.artprov > 0 THEN 
   quickarma$ = quickarma.artprov
   IF vknettoeu.artikel <> 0 AND codema.artprov > 0 AND codear.artprov > 0 THEN 
     ProvisProz.artprov = ProvisEu.artprov * 100 / (VKNettoEu.artikel - ekeu.artikel)
     CALL QuickStore("artprov")
   END IF 
   SELECT KEY quickarma$ LOCK FILE "artprov" INDEX quickarma.artprov
   FORM 
 END IF 
 END SUB 


 ' geÑnderter VKnetto.ARTIKEL
 ' =======================================================================
 
SUB CHVKNetto()
 geseinkauf$ = STR$ (ek.artikel + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel,",9999999999.00")
 geseinkauf% = VAL (geseinkauf$)
 HSpanneDM$ = STR$ (VKnetto.ARTIKEL - geseinkauf%,",9999999999.00")
 VKbrutto$ = STR$ (VKnetto.ARTIKEL + ((VKnetto.ARTIKEL / 100) * MwSt.ARTIKEL),",9999999999.00")
 VKbrutto.ARTIKEL = VAL (VKbrutto$)
 HSpanneDM$ = STR$ (VKnetto.ARTIKEL - geseinkauf%,",9999999999.00")
 PrDif% = VKnetto.ARTIKEL - geseinkauf%
 Handelsspanne.ARTIKEL = (100 / geseinkauf%) * PrDif%
 CALL ArtDMEuro()
 CALL letztAnpass()
 FORM 
 END SUB 

SUB CHVKNettoEu()
 geseinkauf$ = STR$ (ekeu.artikel + KostTranseu.artikel + KostRepeu.artikel + KostSonsteu.artikel,",9999999999.00")
 geseinkauf% = VAL (geseinkauf$)
 HSpanneEu$ = STR$ (VKnettoEu.ARTIKEL - geseinkauf%,",9999999999.00")
 VKbruttoEu$ = STR$ (VKnettoEu.ARTIKEL + ((VKnettoEu.ARTIKEL / 100) * MwSt.ARTIKEL),",9999999999.00")
 VKbruttoEu.ARTIKEL = VAL (VKbruttoEu$)
 HSpanneEu$ = STR$ (VKnettoEu.ARTIKEL - geseinkauf%,",9999999999.00")
 PrDif% = VKnettoEu.ARTIKEL - geseinkauf%
 Handelsspanne.ARTIKEL = (100 / geseinkauf%) * PrDif%
 CALL ArtEuroDM()
 CALL letztAnpass()
 FORM 
 END SUB 


 ' geÑnderte Mehrwertsteuer.ARTIKEL
 ' =======================================================================
 
SUB CHMwSt()
 VKbrutto$ = STR$ (VKnetto.ARTIKEL + ((VKnetto.ARTIKEL / 100) * MwSt.ARTIKEL),",9999999999.00")
 VKbrutto.ARTIKEL = VAL (VKbrutto$)
 CALL ArtDMEuro()
 CALL letztAnpass()
 FORM 
 END SUB 

SUB CHMwStEu()
 VKbruttoEu$ = STR$ (VKnettoEu.ARTIKEL + ((VKnettoEu.ARTIKEL / 100) * MwSt.ARTIKEL),",9999999999.00")
 VKbruttoEu.ARTIKEL = VAL (VKbruttoEu$)
 CALL ArtEuroDM()
 CALL letztAnpass()
 FORM 
 END SUB 

 ' geÑnderter VKbrutto.ARTIKEL
 ' =======================================================================
 
SUB CHVKBrutto()
 IF frage% <> 1 THEN 
   REQUEST "VK netto neu kalkulieren?","",130,req%
 ELSE 
   req% = 1
 END IF 
 IF req% = 1 THEN 
   geseinkauf$ = STR$ (ek.artikel + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel,",9999999999.00")
   geseinkauf% = VAL (geseinkauf$)
   VKnetto$ = STR$ ((VKBrutto.ARTIKEL / (100 + MwSt.ARTIKEL)) * 100,",9999999999.00")
   VKnetto.ARTIKEL = VAL (VKnetto$)
   PrDif% = VKnetto.ARTIKEL - geseinkauf%
   Handelsspanne.ARTIKEL = (100 / geseinkauf%) * PrDif%
   HSpanneDM$ = STR$ (VKnetto.ARTIKEL - geseinkauf%,",9999999999.00")
 END IF 
 CALL ArtDMEuro()
 CALL letztAnpass()
 FORM 
 END SUB 
 
SUB CHVKBruttoEu()
 IF frage% <> 1 THEN 
   REQUEST "VK netto neu kalkulieren?","",130,req%
 ELSE 
   req% = 1
 END IF 
 IF req% = 1 THEN 
   geseinkauf$ = STR$ (ekeu.artikel + KostTranseu.artikel + KostRepeu.artikel + KostSonsteu.artikel,",9999999999.00")
   geseinkauf% = VAL (geseinkauf$)
   VKnettoEu$ = STR$ ((VKBruttoEu.ARTIKEL / (100 + MwSt.ARTIKEL)) * 100,",9999999999.00")
   VKnettoEu.ARTIKEL = VAL (VKnettoEu$)
   PrDif% = VKnettoEu.ARTIKEL - geseinkauf%
   Handelsspanne.ARTIKEL = (100 / geseinkauf%) * PrDif%
   HSpanneEu$ = STR$ (VKnettoEu.ARTIKEL - geseinkauf%,",9999999999.00")
 END IF 
 CALL ArtEuroDM()
 CALL letztAnpass()
 FORM 
 END SUB 
 


 ' geÑnderter KombiNetto.MASTER
 ' =======================================================================
 
SUB CHKombiN()
 KombiBrutto$ = STR$ (KombiNetto.ARTIKEL + ((KombiNetto.ARTIKEL / 100) * MwSt.ARTIKEL),",9999999999.00")
 KombiBrutto.ARTIKEL = VAL (KombiBrutto$)
 IF KombiNetto.ARTIKEL <> 0 THEN 
   geseinkauf$ = STR$ (ek.artikel + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel,",9999999999.00")
   geseinkauf% = VAL (geseinkauf$)
   KHSpanneP$ = STR$ ((100 / geseinkauf% * KombiNetto.ARTIKEL) - 100,",9999999999.00")
   KHSpanneDM$ = STR$ (KombiNetto.ARTIKEL - geseinkauf%,",9999999999.00")
 ELSE 
   KHSpanneP$ = "- - -"
   KHSpanneDM$ = "- - -"
 END IF 
 CALL ArtDMEuro()
 CALL letztAnpass()
 FORM 
 END SUB 
 
SUB CHKombiNEu()
 KombiBruttoEu$ = STR$ (KombiNettoEu.ARTIKEL + ((KombiNettoEu.ARTIKEL / 100) * MwSt.ARTIKEL),",9999999999.00")
 KombiBruttoEu.ARTIKEL = VAL (KombiBruttoEu$)
 IF KombiNettoEu.ARTIKEL <> 0 THEN 
   geseinkauf$ = STR$ (ekeu.artikel + KostTranseu.artikel + KostRepeu.artikel + KostSonsteu.artikel,",9999999999.00")
   geseinkauf% = VAL (geseinkauf$)
   KHSpannePEu$ = STR$ ((100 / geseinkauf% * KombiNettoEu.ARTIKEL) - 100,",9999999999.00")
   KHSpanneEu$ = STR$ (KombiNettoEu.ARTIKEL - geseinkauf%,",9999999999.00")
 ELSE 
   KHSpannePEu$ = "- - -"
   KHSpanneEu$ = "- - -"
 END IF 
 CALL ArtEuroDM()
 CALL letztAnpass()
 FORM 
 END SUB 
  


 ' geÑnderter KombiBrutto.MASTER
 ' =======================================================================
 
SUB CHKombiB()
 IF frage% <> 1 THEN 
   REQUEST "Kombi netto neu kalkulieren?","",130,req%
 ELSE 
   req% = 1
 END IF 
 IF req% = 1 THEN 
   geseinkauf$ = STR$ (ek.artikel + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel,",9999999999.00")
   geseinkauf% = VAL (geseinkauf$)
   KombiNetto$ = STR$ ((KombiBrutto.ARTIKEL / (100 + MwSt.ARTIKEL)) * 100,",9999999999.00")
   KombiNetto.ARTIKEL = VAL (KombiNetto$)
   KHSpanneP$ = STR$ ((100 / geseinkauf% * KombiNetto.ARTIKEL) - 100,",9999999999.00")
   KHSpanneDM$ = STR$ (KombiNetto.ARTIKEL - geseinkauf%,",9999999999.00")
 END IF 
 IF KombiNettoEu.ARTIKEL = 0 THEN 
   KHSpanneP$ = "- - -"
   KHSpanneDM$ = "- - -"
 END IF 
 CALL ArtDMEuro()
 CALL letztAnpass()
 FORM 
 END SUB 
 
SUB CHKombiBEu()
 IF frage% <> 1 THEN 
   REQUEST "Kombi netto neu kalkulieren?","",130,req%
 ELSE 
   req% = 1
 END IF 
 IF req% = 1 THEN 
   geseinkauf$ = STR$ (ekeu.artikel + KostTranseu.artikel + KostRepeu.artikel + KostSonsteu.artikel,",9999999999.00")
   geseinkauf% = VAL (geseinkauf$)
   KombiNettoEu$ = STR$ ((KombiBruttoEu.ARTIKEL / (100 + MwSt.ARTIKEL)) * 100,",9999999999.00")
   KombiNettoEu.ARTIKEL = VAL (KombiNettoEu$)
   KHSpannePEu$ = STR$ ((100 / geseinkauf% * KombiNettoEu.ARTIKEL) - 100,",9999999999.00")
   KHSpanneEu$ = STR$ (KombiNettoEu.ARTIKEL - geseinkauf%,",9999999999.00")
 END IF 
 IF KombiNettoEu.ARTIKEL = 0 THEN 
   KHSpannePEu$ = "- - -"
   KHSpanneEu$ = "- - -"
 END IF 
 CALL ArtEuroDM()
 CALL letztAnpass()
 FORM 
 END SUB 
 



SUB letztAnpass()
 letzteAnpassung.artikel = TODAY 
 END SUB 
 
SUB AendRabattart()
 cums% = codems.master
 IF NEW ("master") OR MOD ("master") THEN CALL QuickStore("master")
 SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 IF kalkart.master = 1 AND rabattart.master = 0 THEN 
   rabattart.master = kalkart.master
   CALL Fehler("Bei der Bruttofakturierung kann kein Rabatt auf die Nettosumme gegeben werden!","Der Rabatt wird automatisch  auf die Bruttosumme gesetzt!")
 END IF 
 CALL MSCHRabattProz()
 CALL MSCHRabatt()
 FILE "master"
 SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 FORM 
 MOUSE ON 
 END SUB 
 
 
 
 
 ' geÑnderter Prozentsatz Rabatt.MASTER
 ' =======================================================================
 
SUB MSCHRabattProz()
 FILE "master"
 cums% = codems.master
 IF NEW ("master") OR MOD ("master") THEN CALL QuickStore("master")
 SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 CALL MWSTBerechnung()
 REM SELECT FORM KEY cums% FILE "master" INDEX codems.master
 REM SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 IF rabatt.master <> 0 OR rabattproz.master <> 0 THEN 
   IF RabattArt.MASTER = 0 THEN 
     Rabatt.MASTER = (PreisNetto.MASTER / 100) * RabattProz.MASTER
     GesNetto.MASTER = VAL ( STR$ (PreisNetto.MASTER,",999999999.00")) - VAL ( STR$ (Rabatt.MASTER,",999999999.00"))
     GesBrutto.MASTER = VAL ( STR$ (GesNetto.MASTER,",999999999.00")) + VAL ( STR$ (MWSTBetrag1%,",999999999.00"))

     RabattEU.MASTER = (PreisNettoEU.MASTER / 100) * RabattProz.MASTER
     GesNettoEU.MASTER = VAL ( STR$ (PreisNettoEU.MASTER,",999999999.00")) - VAL ( STR$ (RabattEU.MASTER,",999999999.00"))
     GesBruttoEU.MASTER = VAL ( STR$ (GesNettoEU.MASTER,",999999999.00")) + VAL ( STR$ (MWSTBetrag1EU%,",999999999.00"))
   ELSE 
     Rabatt.MASTER = (PreisBrutto.MASTER / 100) * RabattProz.MASTER
     GesBrutto.MASTER = VAL ( STR$ (PreisBrutto.MASTER,",999999999.00")) - VAL ( STR$ (Rabatt.MASTER,",999999999.00"))
     GesNetto.MASTER = VAL ( STR$ (GesBrutto.MASTER,",999999999.00")) - VAL ( STR$ (MWSTBetrag1%,",999999999.00"))

     RabattEU.MASTER = (PreisBruttoEU.MASTER / 100) * RabattProz.MASTER
     GesBruttoEU.MASTER = VAL ( STR$ (PreisBruttoEU.MASTER,",999999999.00")) - VAL ( STR$ (RabattEU.MASTER,",999999999.00"))
     GesNettoEU.MASTER = VAL ( STR$ (GesBruttoEU.MASTER,",999999999.00")) - VAL ( STR$ (MWSTBetrag1EU%,",999999999.00"))
   END IF 
 ELSE 
   GesBrutto.MASTER = VAL ( STR$ (GesNetto.MASTER,",999999999.00")) + VAL ( STR$ (MWSTBetrag1%,",999999999.00"))
   GesBruttoEU.MASTER = VAL ( STR$ (GesNettoEU.MASTER,",999999999.00")) + VAL ( STR$ (MWSTBetrag1EU%,",999999999.00"))
 END IF 
 CALL QuickStore("master")
 SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 FORM 
 MOUSE ON 
 END SUB 
 
 
 ' geÑnderter Rabatt.MASTER
 ' =======================================================================
 
SUB MSCHRabatt()
 cums% = codems.master
 IF NEW ("master") OR MOD ("master") THEN CALL QuickStore("master")
 SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 CALL MWSTBerechnung()
 FILE "master"
 IF rabatt.master <> 0 OR rabattproz.master <> 0 THEN 
   IF RabattArt.MASTER = 0 THEN 
     GesNetto.MASTER = VAL ( STR$ (PreisNetto.MASTER,",999999999.00")) - VAL ( STR$ (Rabatt.MASTER,",999999999.00"))
     GesBrutto.MASTER = VAL ( STR$ (GesNetto.MASTER,",999999999.00")) + VAL ( STR$ (MWSTBetrag1%,",999999999.00"))
     RabattProz.MASTER = (100 / VAL ( STR$ (PreisNetto.MASTER,",999999999.00"))) * VAL ( STR$ (Rabatt.MASTER,",999999999.00"))

     GesNettoEU.MASTER = VAL ( STR$ (PreisNettoEU.MASTER,",999999999.00")) - VAL ( STR$ (RabattEU.MASTER,",999999999.00"))
     GesBruttoEU.MASTER = VAL ( STR$ (GesNettoEU.MASTER,",999999999.00")) + VAL ( STR$ (MWSTBetrag1EU%,",999999999.00"))
     RabattProz.MASTER = (100 / PreisNettoEU.MASTER) * RabattEU.MASTER
   ELSE 
     GesBrutto.MASTER = VAL ( STR$ (PreisBrutto.MASTER,",999999999.00")) - VAL ( STR$ (Rabatt.MASTER,",999999999.00"))
     GesNetto.MASTER = VAL ( STR$ (GesBrutto.MASTER,",999999999.00")) - VAL ( STR$ (MWSTBetrag1%,",999999999.00"))
     RabattProz.MASTER = (100 / PreisBrutto.MASTER) * Rabatt.MASTER

     GesBruttoEU.MASTER = VAL ( STR$ (PreisBruttoEU.MASTER,",999999999.00")) - VAL ( STR$ (RabattEU.MASTER,",999999999.00"))
     GesNettoEU.MASTER = VAL ( STR$ (GesBruttoEU.MASTER,",999999999.00")) - VAL ( STR$ (MWSTBetrag1EU%,",999999999.00"))
     RabattProz.MASTER = (100 / PreisBruttoEU.MASTER) * RabattEU.MASTER
   END IF 
 ELSE 
   GesBrutto.MASTER = VAL ( STR$ (GesNetto.MASTER,",999999999.00")) + VAL ( STR$ (MWSTBetrag1%,",999999999.00"))
   GesBruttoEU.MASTER = VAL ( STR$ (GesNettoEU.MASTER,",999999999.00")) + VAL ( STR$ (MWSTBetrag1EU%,",999999999.00"))
 END IF 
 CALL QuickStore("MASTER")
 SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 FORM 
 MOUSE ON 
 END SUB 
 


 
 ' Mehrwertsteuerberechnung
 ' ======================================================================= 
SUB MWSTBerechnung()
 DIM MwStSchl%(10)
 DIM MwStBetrag%(10)
 DIM MwStBetragEU%(10)
 FOR a% = 0 TO 10
   MwStSchl%(a%) = - 1
   MwStBetrag%(a%) = 0
   MwStText2$(a%) = ""
   MwStBetrag2$(a%) = ""
   MwStBetragEU%(a%) = 0
   MwStText2EU$(a%) = ""
   MwStBetrag2EU$(a%) = ""

 NEXT 
 MwStCount% = 0
 crlf$ = CHR$ (13) + CHR$ (10)
 MOUSE OFF 
 SET STATUS "Ausdruck wird vorbereitet..."
 
 REM -- MehrwertsteuersÑtze und BetrÑge ermitteln --
 codems% = cums%
 SELECT KEY codems% FILE "MASTER" INDEX CodeMS.MASTER
 SELECT FIRST FILE "stamm"
 FILE "SCHEIN"
 INDEX CodeMS.SCHEIN
 SELECT FIRST 
 SELECT KEY codems%
 _gesnetto% = 0
 ProvisDmges% = 0
 _gesnettoEU% = 0
 ProvisDmgesEU% = 0
 REM CALL Fehler("MWST","")
 WHILE CodeMS.SCHEIN = codems% AND NOT EOF ("SCHEIN")
   IF Art.SCHEIN = 0 THEN 
     mwstfound% = - 1
     FOR a% = 0 TO MwStCount%
       IF MwStSchl%(a%) = MwSt.SCHEIN THEN mwstfound% = a%
     NEXT a%
     IF mwstfound% = - 1 THEN 
       MwStSchl%(MwStCount%) = MwSt.SCHEIN
       mwstfound% = MwStCount%
       MwStCount% = MwStCount% + 1
     END IF 
     REM hier Rabatte berÅcksichtigen
     IF KalkArt.MASTER = 0 THEN 
       MwStBetrag%(mwstfound%) = MwStBetrag%(mwstfound%) + ((GesamtNetto.SCHEIN / 100) * MwStSchl%(mwstfound%))
       _gesnetto% = _gesnetto% + GesamtNetto.SCHEIN
       MwStBetragEU%(mwstfound%) = MwStBetragEU%(mwstfound%) + ((GesNettoEU.SCHEIN / 100) * MwStSchl%(mwstfound%))
       _gesnettoEU% = _gesnettoEU% + GesNettoEU.SCHEIN
     ELSE 
       REM MwStBetrag%(mwstfound%) = MwStBetrag%(mwstfound%) + (GesamtBrutto.SCHEIN - ((GesamtBrutto.SCHEIN / (100 + MwStSchl%(mwstfound%)) * 100)))
       MwStBetrag%(mwstfound%) = MwStBetrag%(mwstfound%) + (GesamtBrutto.SCHEIN - ((GesamtBrutto.SCHEIN / (100 + MwStSchl%(mwstfound%)) * 100)))
       MwStBetragEU%(mwstfound%) = MwStBetragEU%(mwstfound%) + (GesBruttoEU.SCHEIN - ((GesBruttoEU.SCHEIN / (100 + MwStSchl%(mwstfound%)) * 100)))
     END IF 
   END IF 
   ProvisDmges% = ProvisDmges% + ProvisDM.schein
   ProvisDmgesEU% = ProvisDmgesEU% + ProvisEU.schein
   SELECT NEXT FILE "SCHEIN" INDEX CodeMS.SCHEIN
 WEND 
 FILE "MASTER"
 SELECT KEY codems% LOCK FILE "MASTER" INDEX CodeMS.MASTER
 REM 160596
 REM ProvisausPosDM.master = ProvisDmges%
 REM STORE FILE "master"
 SELECT KEY codems% LOCK FILE "MASTER" INDEX CodeMS.MASTER
 IF KalkArt.MASTER = 0 THEN 
   rform$ = "N" + SFORM$
 ELSE 
   rform$ = "B" + SFORM$
 END IF 
 MWSTBetrag$ = ""
 MWSTBetragEU$ = ""
 MWSTText$ = ""
 MWSTTextEU$ = ""
 MWSTBetrag1% = 0
 MWSTBetrag1EU% = 0
 IF KalkArt.MASTER = 0 THEN 
   FOR a% = 0 TO MwStCount% - 1
     IF MWSTText$ <> "" THEN MWSTText$ = MWSTText$ + crlf$
     IF MWSTTextEU$ <> "" THEN MWSTTextEU$ = MWSTTextEU$ + crlf$
     IF MWSTBetrag$ <> "" THEN MWSTBetrag$ = MWSTBetrag$ + crlf$
     IF MWSTBetragEU$ <> "" THEN MWSTBetragEU$ = MWSTBetragEU$ + crlf$
     IF druckArt.master LIKE "Belegtexte 2" THEN 
       MWSTText$ = MWSTText$ + "additional " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% VAT"
       MwStText2$(a%) = "additional " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% VAT"
       MWSTTextEU$ = MWSTTextEU$ + "additional " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% VAT"
       MwStText2EU$(a%) = "additional " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% VAT"
     ELSE 
       MWSTText$ = MWSTText$ + "zuzÅglich " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% MwSt."
       MwStText2$(a%) = "zuzÅglich " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% MwSt."
       MWSTTextEU$ = MWSTTextEU$ + "zuzÅglich " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% MwSt."
       MwStText2EU$(a%) = "zuzÅglich " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% MwSt."
     END IF 
     IF rabattproz.master <> 0 AND rabatt.master <> 0 THEN 
       _gesnetto% = _gesnetto% + MwStBetrag%(a%)
       _gesnettoEU% = _gesnettoEU% + MwStBetragEU%(a%)
       mwstRab% = MwStBetrag%(a%) - ((MwStBetrag%(a%) / 100) * rabattproz.master)
       mwstRabEU% = MwStBetragEU%(a%) - ((MwStBetragEU%(a%) / 100) * rabattproz.master)
       MWSTBetrag1% = MWSTBetrag1% + MwStRab%
       MWSTBetrag1EU% = MWSTBetrag1EU% + MwStRabEU%
       MWSTBetrag$ = MWSTBetrag$ + LTRIM$ ( STR$ (MwStRab%,",9999999999.00")) + " " + (zweitwaehr$)
       REM 06022000
       MWSTBetragEU$ = MWSTBetragEU$ + LTRIM$ ( STR$ (MwStRabEU%," ,9999999999.00")) + " EUR"
       MWSTBetrag2$(a%) = LTRIM$ ( STR$ (MwStRab%," ,9999999999.00")) + " " + (zweitwaehr$)
       MWSTBetrag2EU$(a%) = LTRIM$ ( STR$ (MwStRabEU%," ,9999999999.00")) + " EUR"
     ELSE 
       _gesnetto% = _gesnetto% + MwStBetrag%(a%)
       MWSTBetrag$ = MWSTBetrag$ + LTRIM$ ( STR$ (MwStBetrag%(a%),",9999999999.00")) + " " + (zweitwaehr$)
       MwStBetrag2$(a%) = LTRIM$ ( STR$ (MwStBetrag%(a%),",9999999999.00")) + " " + (zweitwaehr$)
       MWSTBetrag1% = MWSTBetrag1% + MwStBetrag%(a%)

       _gesnettoEU% = _gesnettoEU% + MwStBetragEU%(a%)
       MWSTBetragEU$ = MWSTBetragEU$ + LTRIM$ ( STR$ (MwStBetragEU%(a%),",9999999999.00")) + " EUR"
       MwStBetrag2EU$(a%) = LTRIM$ ( STR$ (MwStBetragEU%(a%),",9999999999.00"))
       MWSTBetrag1EU% = MWSTBetrag1EU% + MwStBetragEU%(a%)
     END IF 
   NEXT a%
   GesBrutto% = _gesnetto%
   GesBruttoEU% = _gesnettoEU%
 ELSE 
   
   FOR a% = 0 TO MwStCount% - 1
     IF MWSTText$ <> "" THEN MWSTText$ = MWSTText$ + crlf$
     IF MWSTTextEU$ <> "" THEN MWSTTextEU$ = MWSTTextEU$ + crlf$
     IF rabattproz.master <> 0 AND rabatt.master <> 0 AND rabattart.master = 1 THEN 
       _gesnetto% = _gesnetto% + MwStBetrag%(a%)
       mwstRab% = MwStBetrag%(a%) - ((MwStBetrag%(a%) / 100) * rabattproz.master)
       IF druckArt.master LIKE "Belegtexte 2" THEN 
         nb$ = "/" + TexSumN2.stamm + LTRIM$ ( STR$ (GesNetto.master,",99999999.00")) + ")"
         MWSTText$ = MWSTText$ + "inclusive " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% VAT (specific amount: " + LTRIM$ ( STR$ (MwStrab%," ,9999999999.00")) + " " + (zweitwaehr$) + nb$
         MwStText2$(a%) = "inclusive " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% VAT (specific amount: " + LTRIM$ ( STR$ (MwStrab%," ,9999999999.00")) + " " + (zweitwaehr$) + nb$
       ELSE 
         nb$ = "/der Rechnungs-Nettobetrag ist: " + LTRIM$ ( STR$ (GesNetto.master,",99999999.00")) + ")"
         MWSTText$ = MWSTText$ + "Gesamtsumme enthÑlt " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% MwSt. (MwSt.-Betrag: " + LTRIM$ ( STR$ (MwStrab%," ,9999999999.00")) + " " + (zweitwaehr$) + nb$
         MwStText2$(a%) = "Gesamtsumme enthÑlt " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% MwSt. (MwSt.-Betrag: " + LTRIM$ ( STR$ (MwStrab%," ,9999999999.00")) + " " + (zweitwaehr$) + nb$
       END IF 
       MWSTBetrag1% = MWSTBetrag1% + (MwStrab%)

       _gesnettoEU% = _gesnettoEU% + MwStBetragEU%(a%)
       IF druckArt.master LIKE "Belegtexte 2" THEN 
         nb$ = "/" + TexSumN2.stamm + ":" + LTRIM$ ( STR$ (GesNettoEU.master,",99999999.00")) + ")"
         mwstRabEU% = MwStBetragEU%(a%) - ((MwStBetragEU%(a%) / 100) * rabattproz.master)
         MWSTTextEU$ = MWSTTextEU$ + "inclusive " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% VAT (specific amount: " + LTRIM$ ( STR$ (MwStrabEU%," ,9999999999.00")) + " EUR" + nb$
         MwStText2EU$(a%) = "inclusive " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% VAT (specific amount: " + LTRIM$ ( STR$ (MwStrabEU%," ,9999999999.00")) + " EUR" + nb$
       ELSE 
         nb$ = "/der Rechnungs-Nettobetrag ist: " + LTRIM$ ( STR$ (GesNettoEU.master,",99999999.00")) + ")"
         mwstRabEU% = MwStBetragEU%(a%) - ((MwStBetragEU%(a%) / 100) * rabattproz.master)
         MWSTTextEU$ = MWSTTextEU$ + "Gesamtsumme enthÑlt " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% MwSt. (Betrag: " + LTRIM$ ( STR$ (MwStrabEU%," ,9999999999.00")) + " EUR" + nb$
         MwStText2EU$(a%) = "Gesamtsumme enthÑlt " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% MwSt. (MwSt.-Betrag: " + LTRIM$ ( STR$ (MwStrabEU%," ,9999999999.00")) + " EUR" + nb$
       END IF 
       MWSTBetrag1EU% = MWSTBetrag1EU% + (MwStrabEU%)

     ELSE 
       IF druckArt.master LIKE "Belegtexte 2" THEN 
         nb$ = "/" + TexSumN2.stamm + ": " + LTRIM$ ( STR$ (GesNetto.master,",99999999.00")) + ")"
         MWSTText$ = MWSTText$ + "inclusive " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% VAT (specific amount: " + LTRIM$ ( STR$ (MwStBetrag%(a%)," ,9999999999.00")) + " " + (zweitwaehr$) + nb$
         MwStText2$(a%) = "inclusive " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% VAT (specific amount: " + LTRIM$ ( STR$ (MwStBetrag%(a%)," ,9999999999.00")) + " " + (zweitwaehr$) + nb$
         MWSTBetrag1% = MWSTBetrag1% + (MwStBetrag%(a%))
         nb$ = "/" + TexSumN2.stamm + ": " + LTRIM$ ( STR$ (GesNettoEU.master,",99999999.00")) + ")"
         MWSTTextEU$ = MWSTTextEU$ + "inclusive " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% VAT (specific amount: " + LTRIM$ ( STR$ (MwStBetragEU%(a%)," ,9999999999.00")) + " EUR" + nb$
         MwStText2EU$(a%) = "inclusive " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% VAT (specific amount: " + LTRIM$ ( STR$ (MwStBetragEU%(a%)," ,9999999999.00")) + "EUR" + nb$
       ELSE 
         nb$ = "/der Rechnungs-Nettobetrag ist: " + LTRIM$ ( STR$ (GesNetto.master,",99999999.00")) + ")"
         MWSTText$ = MWSTText$ + "Gesamtsumme enthÑlt " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% MwSt. (Betrag: " + LTRIM$ ( STR$ (MwStBetrag%(a%)," ,9999999999.00")) + " " + (zweitwaehr$) + nb$
         MwStText2$(a%) = "Gesamtsumme enthÑlt " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% MwSt. (MwSt.-Betrag: " + LTRIM$ ( STR$ (MwStBetrag%(a%)," ,9999999999.00")) + " " + (zweitwaehr$) + nb$
         MWSTBetrag1% = MWSTBetrag1% + (MwStBetrag%(a%))
         nb$ = "/der Rechnungs-Nettobetrag ist: " + LTRIM$ ( STR$ (GesNettoEU.master,",99999999.00")) + ")"
         MWSTTextEU$ = MWSTTextEU$ + "Gesamtsumme enthÑlt " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% MwSt. (Betrag: " + LTRIM$ ( STR$ (MwStBetragEU%(a%)," ,9999999999.00")) + " EUR" + nb$
         MwStText2EU$(a%) = "Gesamtsumme enthÑlt " + LTRIM$ ( STR$ (MwStSchl%(a%),"999.00")) + "% MwSt. (MwSt.-Betrag: " + LTRIM$ ( STR$ (MwStBetragEU%(a%)," ,9999999999.00")) + "EUR" + nb$
       END IF 
       MWSTBetrag1EU% = MWSTBetrag1EU% + (MwStBetragEU%(a%))
     END IF 
   NEXT a%
 END IF 
 END SUB 
 
 
 
 
 
 
 
 ' geÑnderter SkontoProzentsatz SkontoProz.MASTER
 ' =======================================================================
 
SUB SkontoProz()
   Skonto.MASTER = (GesBrutto.MASTER / 100) * SkontoProz.MASTER
   SkontoEU.MASTER = (GesBruttoEU.MASTER / 100) * SkontoProz.MASTER
 FORM 
 END SUB 
 
 
 ' geÑnderter Rabatt.MASTER
 ' =======================================================================
 
SUB Skonto()
   SkontoProz.MASTER = (100 / GesBrutto.MASTER) * Skonto.MASTER
   REM SkontoProz.MASTER = (100 / GesBruttoEU.MASTER) * SkontoEU.MASTER
 CALL QuickStore("MASTER")
 FORM 
 END SUB 
 
  
  
 '      *************************
 '      ** allgemeine Routinen **
 '      *************************
    
FUNCTION artcsernum%(datei$)
 datei$ = UCASE$ (datei$)
 CALL DFile(2,"OFFICE\sernum" + _fpw$)
 SELECT KEY datei$ LOCK FILE "sernum" INDEX datei.sernum
 IF NOT FOUND ("sernum") THEN 
   BLANK FILE "sernum"
   CodeSN.sernum = SER ("sernum",1)
   Datei.sernum = datei$
   lastnum.sernum = SER (datei$,1) + 1
   IF _projekt$ LIKE "WAWI" THEN 
     SELECT LAST FILE "artikel" INDEX CodeAR.artikel
     lastartintern.sernum = artikelcode.artikel
   ELSE 
     IF ArtiAutoNum$ LIKE "j" THEN lastartintern.sernum = RECCOUNT ("artikel")
   END IF 
   FILE "sernum"
   ganzzahl% = INT (lastartintern.sernum)
   rest% = lastartintern - ganzzahl%
   IF rest% = 0 THEN 
     artcsernum% = lastartintern.sernum + 1
   ELSE 
     artcsernum% = lastartintern.sernum + 0.01
   END IF 
   lastartintern.sernum = artcsernum%
   Workstation.Sernum = Workstation%
   QWoNo.Sernum = STR$ (Workstation%,"000000") + STR$ (codeser.Sernum,"000000")
   RecStatus.Sernum = "c"
   STORE FILE "sernum"
   UNLOCK CURRENT FILE "sernum"
 ELSE 
   IF lastartintern.sernum < 1 THEN 
     IF _projekt$ LIKE "WAWI" THEN 
       SELECT LAST FILE "artikel" INDEX CodeAR.artikel
       lastartintern.sernum = artikelcode.artikel
     ELSE 
       IF ArtiAutoNum$ LIKE "j" THEN lastartintern.sernum = RECCOUNT ("artikel")
     END IF 
 
     FILE "sernum"
   END IF 
   ganzzahl% = INT (lastartintern.sernum)
   rest% = lastartintern - ganzzahl%
   IF rest% = 0 THEN 
     artcsernum% = lastartintern.sernum + 1
   ELSE 
     artcsernum% = lastartintern.sernum + 0.01
   END IF 
   lastartintern.sernum = artcsernum%
   Workstation.Sernum = Workstation%
   QWoNo.Sernum = STR$ (Workstation%,"000000") + STR$ (codeser.Sernum,"000000")
   RecStatus.Sernum = "c"
   STORE FILE "sernum"
   UNLOCK CURRENT FILE "sernum"
 END IF 
 END FUNCTION 
 
 
 
  
 
 
SUB INVENTUR()
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"GRUPPEN" + _fpw$)
 SELECT KEY vcodema% FILE "supervis" INDEX codema.supervis
 na$ = name.supervis
 FILE "gruppen"
 INDEX kurzbezeichnung.gruppen
 SELECT FIRST 
 FILE "Artikel"
 INDEX codegr.artikel
 SELECT FIRST 
 FILE "gruppen"
 SET STATUS "Ausgabe Inventurliste..."
 MOUSE OFF 
 DIRECTORY _ppath$
 IF euromaske% = 0 THEN 
   t1$ = "Wenn Sie Artikel in unterschiedlichen WÑhrungen erfa·t haben, sollten Sie die öbersicht in EURO ausgeben lassen,"
   t2$ = "da bei der Ausgabe der Artikel in der OriginalwÑhrung zwar die einzelnen Positionen stimmen, aber keine der errechnten Summen richtig sein wird(z.B. DM+US$=?)!"
   CALL Fehler(t1$,t2$)
   REQUEST "öbersicht in EURO drucken?","",130,req%
   IF req% = 1 THEN 
     CALL PRep("INVENTUE")
     REPORT ON invges% AS "suinvges%"
     u1$ = "Inventurliste vom " + DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm") + " in EUR erstellt durch " + na$
   ELSE 
     CALL PRep("INVENTUR")
     u1$ = "Inventurliste vom " + DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm") + " in der ErfassungswÑhrung der jeweiligen Artikel erstellt durch " + na$
   END IF 
 ELSE 
   CALL PRep("INVENTUE")
   REPORT ON invges% AS "suinvges%"
   u1$ = "Inventurliste vom " + DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm") + " in EUR erstellt durch " + na$
 END IF 

 
 uebersch$ = u1$
 AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
 END FOOTING 
 
 GROUP Kurzbezeichnung.GRUPPEN,invges% AS "summe%"
 BEFORE GROUP Kurzbezeichnung.GRUPPEN
     SET REPORT PAGE "H_Kurzbezeic002"
     OUTPUT REPORT PAGE 
 END GROUP 
 
 AFTER GROUP Kurzbezeichnung.GRUPPEN
     SET REPORT PAGE "F_Kurzbezeic002"
     OUTPUT REPORT PAGE 
 END GROUP 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 ON ERROR GOTO ErrINVENTUR
 SELECT ;
   WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND BestandsfÅhrung.ARTIKEL = "j"
   ORDER REPORT Kurzbezeichnung.GRUPPEN,Bezeichnung.ARTIKEL
   TO ASK 
   END SELECT 
ErrINVENTUR: 
 ON ERROR GOTO ErrorHandler
 END SUB 
 
 
 ' Ausgabe Bestellvorschlag
 ' =====================================================================
 
SUB BESTELLV()
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 SET STATUS "Ausgabe Bestellvorschlag"
 CALL PRep("BESTELLV")
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
 END FOOTING 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 ON ERROR GOTO ErrBESTELLV
 SELECT ;
     WHERE CodeKU.ADRESSEN = Lieferant.ARTIKEL AND Bestand.ARTIKEL < Dispomenge.ARTIKEL AND BestandsfÅhrung.ARTIKEL = "j"
     TO ASK 
 END SELECT 
ErrBESTELLV: 
 ON ERROR GOTO ErrorHandler
 END SUB 
 
   
 ' Ausgabe Preisliste netto/brutto
 ' =====================================================================
  
SUB PREISLISTE()
 alle$ = "n"
 MOUSE OFF 
 CALL DFile(3,"GRUPPEN" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 endeschleife$ = "n"
 FILE "artikel"
 INDEX codear.artikel
 SELECT LAST 
 IF codear.artikel < 1 THEN 
   CALL Fehler("Es wurden noch keine Artikel eingegeben!","Es kann deshalb keine Preisliste erzeugt werden!")
   endeschleife$ = "j"
 END IF 
 FILE "gruppen"
 DIM Auswahl1$(1)
 INDEX CodeGR.gruppen
 SELECT FIRST 
 a% = 0
 SELECT WHERE FILE "gruppen"
 FILE "adressen"
 DIM LAuswahl1$(1)
 a% = 0
 INDEX AALieferant.adressen
 SELECT FIRST 
 SELECT KEY "j" FILE "adressen" INDEX aalieferant.adressen
 WHILE aalieferant.adressen = "j" AND NOT EOF ("adressen")
   Lieferant$(a%) = nachname.adressen + SPACE$ (120) + STR$ (codeku.adressen,"000000")
   a% = a% + 1
   SELECT NEXT 
 WEND 
 LAuswahl$ = Lieferant$(0)
 LAuswahl1$(0) = LAuswahl$
 gruppeopt% = 0
 opt% = 0
 INDEX AALieferant.adressen
 SELECT KEY "j" FILE "adressen" INDEX AALieferant.adressen
 IF NOT FOUND ("adressen") THEN 
   CALL Fehler("Es wurden noch keine Lieferanten eingegeben!","Es kann deshalb keine Preisliste erzeugt werden!")
   endeschleife$ = "j"
 END IF 
 
 WHILE endeschleife$ = "n"

anf160120053: 
 FILE "gruppen"
 REDIM ProdGruppen$(1,1)
 REDIM ProdGruppen$( RECCOUNT ("gruppen"))
 a% = 0
 IF alle$ = "n" THEN 
   SELECT WHERE novi1.gruppen = 0
 END IF 
 WHILE NOT EOF ("gruppen")
   ProdGruppen$(a%) = Kurzbezeichnung.gruppen
   IF novi1.gruppen = 1 THEN ProdGruppen$(a%) = ProdGruppen$(a%) + " ###"
   ProdGruppen$(a%) = ProdGruppen$(a%) + SPACE$ (120) + STR$ (codegr.gruppen,"000000")
   a% = a% + 1
   SELECT NEXT 
 WEND 
 Auswahl$ = ProdGruppen$(0)
 Auswahl1$(0) = Auswahl$
 INDEX CodeGR.gruppen
 SELECT LAST 
 IF codegr.gruppen < 1 THEN 
   CALL Fehler("Es wurden noch keine Produktgruppen erstellt!","Es kann deshalb keine Preisliste erzeugt werden!")
   endeschleife$ = "j"
 END IF 
 



 MOUSE ON 
     CREATE DIALOG "PREISLIS",0,0,338,232,title$,"MS Sans Serif",8
    ADD DIALOG "PREISLIS",4,0,1,149,56,0," Ausgabe als ... "
    ADD DIALOG "PREISLIS",3,6,12,60,10,0,"Bruttopreisliste",0,opt%
    ADD DIALOG "PREISLIS",3,6,22,60,11,0,"Nettopreisliste",1,opt%
    ADD DIALOG "PREISLIS",3,6,33,119,11,0,"Liste mit EK und Handelsspanne",2,opt%
    ADD DIALOG "PREISLIS",3,6,44,119,10,0,"Liste mit allen Artikel-Angaben",3,opt%
    ADD DIALOG "PREISLIS",4,150,1,188,207,0," Selektion ..."
    ADD DIALOG "PREISLIS",3,154,12,166,10,0,"Gesamt Sort:PG/[ArtBez][ArtNr][Bestell][P]",0,gruppeopt%
    ADD DIALOG "PREISLIS",3,155,22,177,11,0,"Gesamt Sort:PG/Lief/[ArtBez][ArtNr][Bestell][P]",1,gruppeopt%
    ADD DIALOG "PREISLIS",3,154,33,175,11,0,"Gesamt Sort:Lief/PG/[ArtBez][ArtNr][Bestell][P]",2,gruppeopt%
    ADD DIALOG "PREISLIS",3,154,44,166,10,0,"einzelne PG Sort:[ArtBez][ArtNr][Bestell][P]",3,gruppeopt%
    ADD DIALOG "PREISLIS",3,154,56,178,9,0,"einzelne PG Sort:Lief/[ArtBez][ArtNr][Bestell][P]",4,gruppeopt%
    ADD DIALOG "PREISLIS",3,155,67,180,9,0,"einzelne PG,einz.Lief Sort:[ArtBez][ArtNr][Bestell][P]",5,gruppeopt%
    ADD DIALOG "PREISLIS",3,154,78,183,10,0,"einzelner Lief Sort:PG/[ArtBez][ArtNr][Bestell][P]",6,gruppeopt%
    ADD DIALOG "PREISLIS",3,154,89,176,10,0,"einzelner Lief Sort:[ArtBez][ArtNr][Bestell][Preis]",7,gruppeopt%
    ADD DIALOG "PREISLIS",5,154,106,60,10,0,"Sortierung nach ..."
    ADD DIALOG "PREISLIS",3,154,117,123,10,0,"[ArtBez] - Artikelbezeichnung",0,sort%
    ADD DIALOG "PREISLIS",3,154,128,124,10,0,"[ArtNr]   - Artikelnummer",1,sort%
    ADD DIALOG "PREISLIS",3,154,139,160,10,0,"[Bestell] - Bestellnummer beim Lieferanten",2,sort%
    ADD DIALOG "PREISLIS",3,154,150,123,10,0,"[P] - Preis",3,sort%
    ADD DIALOG "PREISLIS",5,154,161,28,11,0,"Begriffe"
    ADD DIALOG "PREISLIS",5,154,172,136,10,0,"PG    = Produktgruppe"
    ADD DIALOG "PREISLIS",5,154,184,136,9,0,"Lief   = Lieferant"
    ADD DIALOG "PREISLIS",5,154,195,136,9,0,"Sort  = Sortierreihenfolge"
    ADD DIALOG "PREISLIS",4,0,60,149,72,0," Auswahl Produktgruppe"
    ADD DIALOG "PREISLIS",7,2,72,144,57,2,2,Prodgruppen$,Auswahl1$," "
    ADD DIALOG "PREISLIS",4,0,134,149,74,0," Auswahl des Lieferanten"
    ADD DIALOG "PREISLIS",7,2,147,144,57,2,2,Lieferant$,Lauswahl1$," "
    ADD DIALOG "PREISLIS",1,68,214,55,16,1,"&OK",1,1
    ADD DIALOG "PREISLIS",1,128,214,55,16,0,"&Abbrechen",0,0
    ADD DIALOG "PREISLIS",1,188,214,55,16,0,"Alle",2,2
 DIALOG "PREISLIS",req%
 REMOVE DIALOG "PREISLIS"
 IF req% = 2 THEN 
   alle$ = "j"
   SELECT WHERE FILE "gruppen"
   GOTO anf160120053
 END IF 
 IF req% = 1 THEN 
   LAuswahl$ = LAuswahl1$(0)
   Auswahl$ = Auswahl1$(0)
   CALL DFile(3,"ARTIKEL" + _fpw$)
   CALL DFile(3,"ARTPROV" + _fpw$)
   CALL DFile(3,"VERTRETE" + _fpw$)
   MOUSE OFF 
   SET STATUS "Ausgabe Preisliste..."
   SELECT WHERE FILE "gruppen"
   SELECT WHERE FILE "artikel"
   IF gruppeopt% > 2 AND gruppeopt% < 6 THEN 
     SELECT KEY VAL ( RIGHT$ (Auswahl$,6)) FILE "gruppen" INDEX codegr.gruppen
     _cugrp% = CodeGR.gruppen
   END IF 
   IF gruppeopt% > 4 THEN 
     SELECT KEY VAL ( RIGHT$ (LAuswahl$,6)) FILE "adressen" INDEX codeku.adressen
     codeku% = CodeKu.adressen
   END IF 
   
   REM ********************************************************************************
   REM *                          Gesamtliste nach PG                                 *
   REM ********************************************************************************
   IF gruppeopt% = 0 THEN 
     IF opt% = 0 THEN 
       REM ********************         Bruttopreisliste          *********************
       IF sort% <> 2 THEN 
         CALL PRep("PREISLIB")
         IF sort% = 0 THEN 
           Titel$ = "Bruttopreisliste sortiert nach Produktgruppe und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Bruttopreisliste sortiert nach Produktgruppe und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Bruttopreisliste sortiert nach Produktgruppe und Preis"
         END IF 
       ELSE 
         CALL PRep("PRGBB")
         Titel$ = "Bruttopreisliste sortiert nach Produktgruppe und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 1 THEN 
       REM *******************           Nettopreisliste           ********************
       IF sort% <> 2 THEN 
         CALL PRep("PREISLIN")
         IF sort% = 0 THEN 
           Titel$ = "Nettopreisliste sortiert nach PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Nettopreisliste sortiert nach PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Nettopreisliste sortiert nach PG und Preis"
         END IF 
       ELSE 
         CALL PRep("PRGBN")
         Titel$ = "Nettopreisliste sortiert nach PG und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 2 THEN 
       REM *******************           EK - Preisliste           ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRGEK")
         IF sort% = 0 THEN 
           Titel$ = "EK-Preisliste sortiert nach PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "EK-Preisliste sortiert nach PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "EK-Preisliste sortiert nach PG und Preis"
         END IF 
       ELSE 
         CALL PRep("PRGEK")
         Titel$ = "EK-Preisliste sortiert nach PG und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 3 THEN 
       REM *******************           Komplette - Preisliste     ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRGAL")
         IF sort% = 0 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach PG und Preis"
         END IF 
       ELSE 
         CALL PRep("PRGAL")
         Titel$ = "Komplett-Artikelliste sortiert nach PG und Bestellnummer"
       END IF 
     END IF 
     Titel$ = Titel$ + " "
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
     GROUP Kurzbezeichnung.GRUPPEN
     BEFORE GROUP Kurzbezeichnung.GRUPPEN
     SET REPORT PAGE "H_Kurzbezeic002"
     OUTPUT REPORT PAGE 
     END GROUP 
     AFTER GROUP Kurzbezeichnung.GRUPPEN
     SET REPORT PAGE "F_Kurzbezeic002"
     OUTPUT REPORT PAGE 
     EJECT REPORT 
     END GROUP 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     ON ERROR GOTO ErrPREISLISTE
     IF opt% < 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
           WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Kurzbezeichnung.GRUPPEN <> ""
           ORDER REPORT Produktgruppe.gruppen,Bezeichnung.artikel
           TO ASK 
           END SELECT 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
           WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Kurzbezeichnung.GRUPPEN <> ""
           ORDER REPORT Produktgruppe.gruppen,Artikelnummer.artikel
           TO ASK 
           END SELECT 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
           WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Kurzbezeichnung.GRUPPEN <> ""
           ORDER REPORT Produktgruppe.gruppen,Bestellnummer.artikel
           TO ASK 
           END SELECT 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
           WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Kurzbezeichnung.GRUPPEN <> ""
           ORDER REPORT Produktgruppe.gruppen,VKNetto.artikel
           TO ASK 
           END SELECT 
       END IF 
     END IF 
     IF opt% = 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
           WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
           ORDER REPORT Produktgruppe.gruppen,Bezeichnung.artikel
           TO ASK 
           END SELECT 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
           WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
           ORDER REPORT Produktgruppe.gruppen,Artikelnummer.artikel
           TO ASK 
           END SELECT 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
           WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
           ORDER REPORT Produktgruppe.gruppen,Bestellnummer.artikel
           TO ASK 
           END SELECT 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
           WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
           ORDER REPORT Produktgruppe.gruppen,VKNetto.artikel
           TO ASK 
           END SELECT 
       END IF 
     END IF 
   END IF 
 
     REM ********************************************************************************
     REM *                          Gesamtliste nach PG und Lieferant                   *
     REM ********************************************************************************
   IF gruppeopt% = 1 THEN 
     IF opt% = 0 THEN 
     REM ********************         Bruttopreisliste          *********************
       IF sort% <> 2 THEN 
         CALL PRep("PRGPLB")
         IF sort% = 0 THEN 
           Titel$ = "Bruttopreisliste sortiert nach PG/Lieferant und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Bruttopreisliste sortiert nach PG/Lieferant und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Bruttopreisliste sortiert nach PG/Lieferant und Preis"
         END IF 
       ELSE 
         CALL PRep("PRGPLBB")
         Titel$ = "Bruttopreisliste sortiert nach PG/Lieferant und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 1 THEN 
       REM *******************           Nettopreisliste           ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRGPLN")
         IF sort% = 0 THEN 
           Titel$ = "Nettopreisliste sortiert nach PG/Lieferant und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Nettopreisliste sortiert nach PG/Lieferant und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Nettopreisliste sortiert nach PG/Lieferant und Preis"
         END IF 
       ELSE 
         CALL PRep("PRGPLBN")
         Titel$ = "Nettopreisliste sortiert nach PG/Lieferant und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 2 THEN 
       REM *******************           EK - Preisliste           ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRGPLEK")
         IF sort% = 0 THEN 
           Titel$ = "EK-Preisliste sortiert nach PG/Lieferant und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "EK-Preisliste sortiert nach PG/Lieferant und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "EK-Preisliste sortiert nach PG/Lieferant und Preis"
         END IF 
       ELSE 
         CALL PRep("PRGPLEK")
         Titel$ = "EK-Preisliste sortiert nach PG/Lieferant und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 3 THEN 
       REM *******************           Komplette - Preisliste     ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRGPLAL")
         IF sort% = 0 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach PG/Lieferant und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach PG/Lieferant und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach PG/Lieferant und Preis"
         END IF 
       ELSE 
         CALL PRep("PRGPLAL")
         Titel$ = "Komplett-Artikelliste sortiert nach PG/Lieferant und Bestellnummer"
       END IF 
     END IF 
     Titel$ = Titel$ + " "
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
     GROUP Kurzbezeichnung.GRUPPEN
     BEFORE GROUP Kurzbezeichnung.GRUPPEN
     SET REPORT PAGE "H_Kurzbezeic002"
     OUTPUT REPORT PAGE 
     END GROUP 
     AFTER GROUP Kurzbezeichnung.GRUPPEN
     SET REPORT PAGE "F_Kurzbezeic002"
     OUTPUT REPORT PAGE 
     EJECT REPORT 
     END GROUP 
     GROUP Nachname.ADRESSEN
     BEFORE GROUP Nachname.ADRESSEN
     SET REPORT PAGE "H_Nachname.A003"
     OUTPUT REPORT PAGE 
     END GROUP 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     ON ERROR GOTO ErrPREISLISTE
     REM IF opt% < 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
            WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
            ORDER REPORT Produktgruppe.GRUPPEN,Nachname.ADRESSEN,Bezeichnung.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
            WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
            ORDER REPORT Produktgruppe.GRUPPEN,Nachname.ADRESSEN,Artikelnummer.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
            WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
            ORDER REPORT Produktgruppe.GRUPPEN,Nachname.ADRESSEN,Bestellnummer.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
            WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
            ORDER REPORT Produktgruppe.GRUPPEN,Nachname.ADRESSEN,VKNetto.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
     REM END IF 
   END IF 
   REM ********************************************************************************
   REM *                          Gesamtliste nach Lieferant und PG                   *
   REM ********************************************************************************
   IF gruppeopt% = 2 THEN 
     IF opt% = 0 THEN 
     REM ********************         Bruttopreisliste          *********************
       IF sort% <> 2 THEN 
         CALL PRep("PRGLPB")
         IF sort% = 0 THEN 
           Titel$ = "Bruttopreisliste sortiert nach Lieferant/PG/Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Bruttopreisliste sortiert nach Lieferant/PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Bruttopreisliste sortiert nach Lieferant/PG und Preis"
         END IF 
       ELSE 
         CALL PRep("PRGLPBB")
         Titel$ = "Bruttopreisliste sortiert nach Lieferant/PG und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 1 THEN 
       REM *******************           Nettopreisliste           ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRGLPN")
         IF sort% = 0 THEN 
           Titel$ = "Nettopreisliste sortiert nach Lieferant/PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Nettopreisliste sortiert nach Lieferant/PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Nettopreisliste sortiert nach Lieferant/PG und Preis"
         END IF 
       ELSE 
         CALL PRep("PRGLPBN")
         Titel$ = "Nettopreisliste sortiert nach Lieferant/PG und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 2 THEN 
       REM *******************           EK - Preisliste           ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRGLPEK")
         IF sort% = 0 THEN 
           Titel$ = "EK-Preisliste sortiert nach Lieferant/PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "EK-Preisliste sortiert nach Lieferant/PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "EK-Preisliste sortiert nach Lieferant/PG und Preis"
         END IF 
       ELSE 
         CALL PRep("PRGLPEK")
         Titel$ = "EK-Preisliste sortiert nach Lieferant/PG und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 3 THEN 
       REM *******************           Komplette - Preisliste     ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRGLPAL")
         IF sort% = 0 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach Lieferant/PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach Lieferant/PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Komplett-Artikelliste sortiert nach Lieferant/PG und Preis"
         END IF 
       ELSE 
         CALL PRep("PRGLPAL")
         Titel$ = "Komplett-Artikelliste sortiert nach Lieferant/PG und Bestellnummer"
       END IF 
     END IF 
     HEADING 
     Titel$ = Titel$ + " "
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
     GROUP Nachname.ADRESSEN
     BEFORE GROUP Nachname.ADRESSEN
     SET REPORT PAGE "H_Nachname.A002"
     OUTPUT REPORT PAGE 
     END GROUP 
     AFTER GROUP Nachname.ADRESSEN
     SET REPORT PAGE "F_Nachname.A002"
     OUTPUT REPORT PAGE 
     END GROUP 
     GROUP Kurzbezeichnung.GRUPPEN
     BEFORE GROUP Kurzbezeichnung.GRUPPEN
     SET REPORT PAGE "H_Kurzbezeic003"
     OUTPUT REPORT PAGE 
     END GROUP 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     ON ERROR GOTO ErrPREISLISTE
     IF sort% = 0 THEN 
       SELECT ;
          WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
          ORDER REPORT Nachname.ADRESSEN,Produktgruppe.GRUPPEN,Bezeichnung.ARTIKEL
          TO ASK 
          END SELECT 
     END IF 
     IF sort% = 1 THEN 
       SELECT ;
          WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
          ORDER REPORT Nachname.ADRESSEN,Produktgruppe.GRUPPEN,Artikelnummer.ARTIKEL
          TO ASK 
          END SELECT 
     END IF 
     IF sort% = 2 THEN 
       SELECT ;
          WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
          ORDER REPORT Nachname.ADRESSEN,Produktgruppe.GRUPPEN,Bestellnummer.ARTIKEL
          TO ASK 
          END SELECT 
     END IF 
     IF sort% = 3 THEN 
       SELECT ;
          WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = CodeKU.ADRESSEN AND Kurzbezeichnung.GRUPPEN <> ""
          ORDER REPORT Nachname.ADRESSEN,Produktgruppe.GRUPPEN,VKNetto.ARTIKEL
          TO ASK 
          END SELECT 
     END IF 
   END IF 
   REM ********************************************************************************
   REM *                               einzelne PG                                    *
   REM ********************************************************************************
   IF gruppeopt% = 3 THEN 
     IF opt% = 0 THEN 
     REM ********************         Bruttopreisliste          *********************
       IF sort% <> 2 THEN 
         CALL PRep("PRLIGRB")
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + " Bruttopreisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + " Bruttopreisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + " Bruttopreisliste sortiert nach Preis"
         END IF 
       ELSE 
         CALL PRep("PRLIGRBB")
         Titel$ = "PG: " + Auswahl$ + " Bruttopreisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 1 THEN 
       REM *******************           Nettopreisliste           ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRLIGRN")
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + " Nettopreisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + " Nettopreisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + " Nettopreisliste sortiert nach Preis"
         END IF 
       ELSE 
         CALL PRep("PRLIGRBN")
         Titel$ = "PG: " + Auswahl$ + " Nettopreisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 2 THEN 
       REM *******************           EK - Preisliste           ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRLIGREK")
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + " EK - Preisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + " EK - Preisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + " EK - Preisliste sortiert nach Preis"
         END IF 
       ELSE 
         CALL PRep("PRLIGREK")
         Titel$ = "PG: " + Auswahl$ + " EK - Preisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 3 THEN 
       REM *******************           Komplette - Preisliste     ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRLIG3AL")
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + " Komplett - Artikelliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + " Komplett - Artikelliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + " Komplett - Artikelliste sortiert nach Preis"
         END IF 
       ELSE 
         CALL PRep("PRLIG3AL")
         Titel$ = "PG: " + Auswahl$ + " Komplett - Artikelliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     Titel$ = Titel$ + " "
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     ON ERROR GOTO ErrPREISLISTE
     IF opt% < 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp%
            ORDER REPORT Bezeichnung.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp%
            ORDER REPORT Artikelnummer.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp%
            ORDER REPORT Bestellnummer.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp%
            ORDER REPORT VKNetto.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
     END IF 
     IF opt% = 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND codegr.artikel = codegr.gruppen AND Lieferant.artikel = Codeku.adressen
            ORDER REPORT Bezeichnung.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND codegr.artikel = codegr.gruppen AND Lieferant.artikel = Codeku.adressen
            ORDER REPORT Artikelnummer.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND codegr.artikel = codegr.gruppen AND Lieferant.artikel = Codeku.adressen
            ORDER REPORT Bestellnummer.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND codegr.artikel = codegr.gruppen AND Lieferant.artikel = Codeku.adressen
            ORDER REPORT VKNetto.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
     END IF 
   END IF 
   REM ********************************************************************************
   REM *                   einzelne PG / Gruppierung Lieferant                        *
   REM ********************************************************************************
   IF gruppeopt% = 4 THEN 
     IF opt% = 0 THEN 
     REM ********************         Bruttopreisliste          *********************
       IF sort% <> 2 THEN 
         CALL PRep("PREPLB")
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + " Bruttopreisliste sortiert nach Lief/Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + " Bruttopreisliste sortiert nach Lief/Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + " Bruttopreisliste sortiert nach Lief/Preis"
         END IF 
       ELSE 
         CALL PRep("PREPLBB")
         Titel$ = "PG: " + Auswahl$ + " Bruttopreisliste sortiert nach Lief/Bestellnummer"
       END IF 
     END IF 
     IF opt% = 1 THEN 
       REM *******************           Nettopreisliste           ********************
       IF sort% <> 2 THEN 
         CALL PRep("PREPLN")
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + " Nettopreisliste sortiert nach Lief/Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + " Nettopreisliste sortiert nach Lief/Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + " Nettopreisliste sortiert nach Lief/Preis"
         END IF 
       ELSE 
         CALL PRep("PREPLBN")
         Titel$ = "PG: " + Auswahl$ + " Nettopreisliste sortiert nach Lief/Bestellnummer"
       END IF 
     END IF 
     IF opt% = 2 THEN 
       REM *******************           EK - Preisliste           ********************
       IF sort% <> 2 THEN 
         CALL PRep("PREPLEK")
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + " EK - Preisliste sortiert nach Lief/Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + " EK - Preisliste sortiert nach Lief/Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + " EK - Preisliste sortiert nach Lief/Preis"
         END IF 
       ELSE 
         CALL PRep("PREPLEK")
         Titel$ = "PG: " + Auswahl$ + " EK - Preisliste sortiert nach Lief/Bestellnummer"
       END IF 
     END IF 
     IF opt% = 3 THEN 
       REM *******************           Komplette - Preisliste     ********************
       IF sort% <> 2 THEN 
         CALL PRep("PREPL4AL")
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + " Komplett-Artikelliste sortiert nach Lief/Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + " Komplett-Artikelliste sortiert nach Lief/Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + " Komplett-Artikelliste sortiert nach Lief/Preis"
         END IF 
       ELSE 
         CALL PRep("PREPL4AL")
         Titel$ = "PG: " + Auswahl$ + " Komplett-Artikelliste sortiert nach Lief/Bestellnummer"
       END IF 
     END IF 
     Titel$ = Titel$ + " "
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
     GROUP Nachname.ADRESSEN
     BEFORE GROUP Nachname.ADRESSEN
     SET REPORT PAGE "H_Nachname.A002"
     OUTPUT REPORT PAGE 
     END GROUP 
     AFTER GROUP Nachname.ADRESSEN
     SET REPORT PAGE "F_Nachname.A002"
     OUTPUT REPORT PAGE 
     END GROUP 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     ON ERROR GOTO ErrPREISLISTE
     IF opt% < 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = CodeKU.ADRESSEN
            ORDER REPORT Nachname.ADRESSEN,Bezeichnung.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = CodeKU.ADRESSEN
            ORDER REPORT Nachname.ADRESSEN,Artikelnummer.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = CodeKU.ADRESSEN
            ORDER REPORT Nachname.ADRESSEN,Bestellnummer.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = CodeKU.ADRESSEN
            ORDER REPORT Nachname.ADRESSEN,VKNetto.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
     END IF 
     IF opt% = 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = CodeKU.ADRESSEN
            ORDER REPORT Nachname.ADRESSEN,Bezeichnung.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = CodeKU.ADRESSEN
            ORDER REPORT Nachname.ADRESSEN,Artikelnummer.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = CodeKU.ADRESSEN
            ORDER REPORT Nachname.ADRESSEN,Bestellnummer.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
            WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = CodeKU.ADRESSEN
            ORDER REPORT Nachname.ADRESSEN,VKNetto.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
     END IF 
 
   END IF 
   REM ********************************************************************************
   REM *                   einzelne PG / einzelner Lieferant                          *
   REM ********************************************************************************
   IF gruppeopt% = 5 THEN 
     IF opt% = 0 THEN 
     REM ********************         Bruttopreisliste          *********************
       IF sort% <> 2 THEN 
         CALL PRep("PRLIGRB")
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Bruttopreisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Bruttopreisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Bruttopreisliste sortiert nach Preis"
         END IF 
       ELSE 
         CALL PRep("PRLIGRBB")
         Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Bruttopreisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 1 THEN 
       REM *******************           Nettopreisliste           ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRLIGRN")
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Nettopreisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Nettopreisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Nettopreisliste sortiert nach Preis"
         END IF 
       ELSE 
         CALL PRep("PRLIGRBN")
         Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Nettopreisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 2 THEN 
       REM *******************           EK - Preisliste           ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRLIGREK")
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " EK - Preisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " EK - Preisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " EK - Preisliste sortiert nach Preis"
         END IF 
       ELSE 
         CALL PRep("PRLIGREK")
         Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " EK - Preisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 3 THEN 
       REM *******************           Komplette - Preisliste     ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRLIG5AL")
         IF sort% = 0 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Komplett - Artikelliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Komplett - Artikelliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Komplett - Artikelliste sortiert nach Preis"
         END IF 
       ELSE 
         CALL PRep("PRLIG5AL")
         Titel$ = "PG: " + Auswahl$ + "/" + "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Komplett - Artikelliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     Titel$ = Titel$ + " "
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     ON ERROR GOTO ErrPREISLISTE
     IF sort% = 0 THEN 
       SELECT ;
          WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = codeku%
          ORDER REPORT Bezeichnung.ARTIKEL
          TO ASK 
          END SELECT 
     END IF 
     IF sort% = 1 THEN 
       SELECT ;
          WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = codeku%
          ORDER REPORT Artikelnummer.ARTIKEL
          TO ASK 
          END SELECT 
     END IF 
     IF sort% = 2 THEN 
       SELECT ;
          WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = codeku%
          ORDER REPORT Bestellnummer.ARTIKEL
          TO ASK 
          END SELECT 
     END IF 
     IF sort% = 3 THEN 
       SELECT ;
          WHERE CodeGR.ARTIKEL = _cugrp% AND Lieferant.ARTIKEL = codeku%
          ORDER REPORT VKNetto.ARTIKEL
          TO ASK 
          END SELECT 
     END IF 
   END IF 
  
   
   REM ********************************************************************************
   REM *                          einz. Lieferant Gruppierung PG                      *
   REM ********************************************************************************
   IF gruppeopt% = 6 THEN 
     IF opt% = 0 THEN 
       REM ********************         Bruttopreisliste          *********************
       IF sort% <> 2 THEN 
         CALL PRep("PREISLIB")
         IF sort% = 0 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Bruttopreisliste sortiert nach PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Bruttopreisliste sortiert nach PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Bruttopreisliste sortiert nach PG und Preis"
         END IF 
       ELSE 
         CALL PRep("PRGBB")
         Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Bruttopreisliste sortiert nach PG und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 1 THEN 
       REM *******************           Nettopreisliste           ********************
       IF sort% <> 2 THEN 
         CALL PRep("PREISLIN")
         IF sort% = 0 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Nettopreisliste sortiert nach PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Nettopreisliste sortiert nach PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Nettopreisliste sortiert nach PG und Preis"
         END IF 
       ELSE 
         CALL PRep("PRGBN")
         Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Nettopreisliste sortiert nach PG und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 2 THEN 
       REM *******************           EK - Preisliste           ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRGEK")
         IF sort% = 0 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "EK-Preisliste sortiert nach PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "EK-Preisliste sortiert nach PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "EK-Preisliste sortiert nach PG und Preis"
         END IF 
       ELSE 
         CALL PRep("PRGEK")
         Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "EK-Preisliste sortiert nach Produktgruppe und Bestellnummer"
       END IF 
     END IF 
     IF opt% = 3 THEN 
       REM *******************           Komplette - Preisliste     ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRG6AL")
         IF sort% = 0 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Komplett-Artikelliste sortiert nach PG und Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Komplett-Artikelliste sortiert nach PG und Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Komplett-Artikelliste sortiert nach PG und Preis"
         END IF 
       ELSE 
         CALL PRep("PRG6AL")
         Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " " + "Komplett-Artikelliste sortiert nach PG und Bestellnummer"
       END IF 
     END IF 
     Titel$ = Titel$ + " "
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
     GROUP Kurzbezeichnung.GRUPPEN
     BEFORE GROUP Kurzbezeichnung.GRUPPEN
     SET REPORT PAGE "H_Kurzbezeic002"
     OUTPUT REPORT PAGE 
     END GROUP 
     AFTER GROUP Kurzbezeichnung.GRUPPEN
     SET REPORT PAGE "F_Kurzbezeic002"
     OUTPUT REPORT PAGE 
     EJECT REPORT 
     END GROUP 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     ON ERROR GOTO ErrPREISLISTE
     IF sort% = 0 THEN 
       SELECT ;
         WHERE Lieferant.ARTIKEL = codeku% AND CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Kurzbezeichnung.GRUPPEN <> ""
         ORDER REPORT Produktgruppe.gruppen,Bezeichnung.artikel
         TO ASK 
         END SELECT 
     END IF 
     IF sort% = 1 THEN 
       SELECT ;
         WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = codeku% AND Kurzbezeichnung.GRUPPEN <> ""
         ORDER REPORT Produktgruppe.gruppen,Artikelnummer.artikel
         TO ASK 
         END SELECT 
     END IF 
     IF sort% = 2 THEN 
       SELECT ;
         WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = codeku% AND Kurzbezeichnung.GRUPPEN <> ""
         ORDER REPORT Produktgruppe.gruppen,Bestellnummer.artikel
         TO ASK 
         END SELECT 
     END IF 
     IF sort% = 3 THEN 
       SELECT ;
         WHERE CodeGR.GRUPPEN = CodeGR.ARTIKEL AND Lieferant.ARTIKEL = codeku% AND Kurzbezeichnung.GRUPPEN <> ""
         ORDER REPORT Produktgruppe.gruppen,VKNetto.artikel
         TO ASK 
         END SELECT 
     END IF 
   END IF 
 
   REM ********************************************************************************
   REM *                               einzelner Lieferant                            *
   REM ********************************************************************************
   IF gruppeopt% = 7 THEN 
     IF opt% = 0 THEN 
     REM ********************         Bruttopreisliste          *********************
       IF sort% <> 2 THEN 
         CALL PRep("PRLIGRB")
         IF sort% = 0 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Bruttopreisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Bruttopreisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Bruttopreisliste sortiert nach Preis"
         END IF 
       ELSE 
         CALL PRep("PRLIGRBB")
         Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Bruttopreisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 1 THEN 
       REM *******************           Nettopreisliste           ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRLIGRN")
         IF sort% = 0 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Nettopreisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Nettopreisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Nettopreisliste sortiert nach Preis"
         END IF 
       ELSE 
         CALL PRep("PRLIGRBN")
         Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Nettopreisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 2 THEN 
       REM *******************           EK - Preisliste           ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRLIGREK")
         IF sort% = 0 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " EK - Preisliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " EK - Preisliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " EK - Preisliste sortiert nach Preis"
         END IF 
       ELSE 
         CALL PRep("PRLIGREK")
         Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " EK - Preisliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     IF opt% = 3 THEN 
       REM *******************           Komplette - Preisliste     ********************
       IF sort% <> 2 THEN 
         CALL PRep("PRLIG7AL")
         IF sort% = 0 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Komplett - Artikelliste sortiert nach Artikelbezeichnung"
         END IF 
         IF sort% = 1 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Komplett - Artikelliste sortiert nach Artikelnummer"
         END IF 
         IF sort% = 3 THEN 
           Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Komplett - Artikelliste sortiert nach Preis"
         END IF 
       ELSE 
         CALL PRep("PRLIG7AL")
         Titel$ = "Lieferant: " + MID$ (LAuswahl$,1, LEN (LAuswahl$) - 126) + " Komplett - Artikelliste sortiert nach Bestellnummer"
       END IF 
     END IF 
     Titel$ = Titel$ + " "
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     ON ERROR GOTO ErrPREISLISTE
     IF opt% < 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
            WHERE Lieferant.ARTIKEL = codeku%
            ORDER REPORT Bezeichnung.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
            WHERE Lieferant.ARTIKEL = codeku%
            ORDER REPORT Artikelnummer.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
            WHERE Lieferant.ARTIKEL = codeku%
            ORDER REPORT Bestellnummer.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
            WHERE Lieferant.ARTIKEL = codeku%
            ORDER REPORT VKNetto.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
     END IF 
     IF opt% = 3 THEN 
       IF sort% = 0 THEN 
         SELECT ;
            WHERE Lieferant.ARTIKEL = codeku% AND CodeGR.Artikel = CodeGR.gruppen
            ORDER REPORT Bezeichnung.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 1 THEN 
         SELECT ;
            WHERE Lieferant.ARTIKEL = codeku% AND CodeGR.Artikel = CodeGR.gruppen
            ORDER REPORT Artikelnummer.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 2 THEN 
         SELECT ;
            WHERE Lieferant.ARTIKEL = codeku% AND CodeGR.Artikel = CodeGR.gruppen
            ORDER REPORT Bestellnummer.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
       IF sort% = 3 THEN 
         SELECT ;
            WHERE Lieferant.ARTIKEL = codeku% AND CodeGR.Artikel = CodeGR.gruppen
            ORDER REPORT VKNetto.ARTIKEL
            TO ASK 
            END SELECT 
       END IF 
     END IF 
   END IF 
 
 
 
ErrPREISLISTE: 
   ON ERROR GOTO ErrorHandler
 END IF 
 REQUEST "Preislistenausgabe beenden ?","",130,req2%
 IF req2% = 1 THEN endeschleife$ = "j"
 WEND 
 END SUB 
 
  
 
 ' Auflistung und Bearbeitung offener VorgÑnge
 ' ======================================================================
 
SUB OffeneVorgÑnge(art%)
 CALL DFile(3,"rausGANG" + _fpw$)
 CALL DFile(3,"ABZUGANG" + _fpw$)
 CALL DFile(3,"SCHEIN" + _fpw$)
 IF DEFA$ = "MEGA" THEN 
   CALL DFile(3,"KSATZ" + _fpw$)
   CALL DFile(3,"SSATZ" + _fpw$)
 END IF 
 CALL DFile(3,"MASTER" + _fpw$)
 CALL DFile(3,"TEILRAUS" + _fpw$)
 CALL DFile(3,"TEILREIN" + _fpw$)
 CALL DFile(2,"OFFICE\ADRESSEN" + _fpw$)
 CALL DFile(2,"OFFICE\AKQUISE" + _fpw$)
 CALL DFile(2,"OFFICE\DOKUMENT" + _fpw$)
 CALL DFile(2,"OFFICE\TELEFON" + _fpw$)
 FILE "master"
 SELECT CASE art%
 CASE 1
   subHeader$ = "Angebote"
 CASE 2
   subHeader$ = "Rechnungen"
 CASE 3
   subHeader$ = "Lieferscheine"
 CASE 4
   subHeader$ = "AuftrÑge"
 CASE 5
   subHeader$ = "Bestellungen"
 CASE 6
   subHeader$ = "ArtikelzugÑnge"
 CASE 7
   subHeader$ = "Gutschriften"
 END SELECT 
 IF GposOld% <> - 1 THEN 
   REDIM Positionen$(1,1)
   REDIM Positionen$(30000)
 END IF 
 req% = - 1
 
 WHILE req% <> 0
   REDIM Auswahl$(1,1)
   REDIM Auswahl$(500)
   
   FILE "ABZUGANG"
   SELECT WHERE 
   INDEX Termin.ABZUGANG
   IF GposOld% <> - 1 THEN counter% = 0
   SELECT LAST 
   MOUSE OFF 
   
   IF GposOld% <> - 1 THEN 
     REDIM Positionen$(1,1)
     REDIM Positionen$(30000)
     counter% = - 1
   END IF 
   WHILE NOT EOF ("ABZUGANG") AND GposOld% <> - 1
     IF art% = 2 THEN 
       IF GposOld% <> - 1 THEN 
         REM Anzeigen von Rechnungen(art=2) und Gutschriften(art=7)
         IF (Art.ABZUGANG = 2 OR art.abzugang = 7) AND Kontrolle.ABZUGANG LIKE "j" THEN 
           IF termin.abzugang > 0 THEN 
             counter% = counter% + 1
             Positionen$(counter%) = DATE$ (Termin.ABZUGANG,"0d.0m.yyyy") + "  " + Nummer.ABZUGANG + "  " + STR$ (VKBrutto.abzugang,",99999999.00") + "   / " + Buchungstext.ABZUGANG + SPACE$ (150) + STR$ (CodeAZ.ABZUGANG,"000000")
           END IF 
         END IF 
       END IF 
     ELSE 
       IF GposOld% <> - 1 THEN 
         IF Art.ABZUGANG = art% AND Kontrolle.ABZUGANG LIKE "j" THEN 
           IF termin.abzugang > 0 THEN 
             counter% = counter% + 1
             Positionen$(counter%) = DATE$ (Termin.ABZUGANG,"0d.0m.yyyy") + "  " + Nummer.ABZUGANG + "  " + STR$ (VKBrutto.abzugang,",99999999.00") + "   / " + Buchungstext.ABZUGANG + SPACE$ (150) + STR$ (CodeAZ.ABZUGANG,"000000")
           END IF 
         END IF 
       END IF 
     END IF 
     SELECT PREVIOUS FILE "ABZUGANG" INDEX Termin.ABZUGANG
   WEND 
   MOUSE ON 
   IF counter% > - 1 THEN 
    IF GposOld% <> - 1 THEN prompt$ = Positionen$(0)
    REM CREATE DIALOG "REGISTER",0,0,450,300,title$,"MS Sans Serif",8
    CREATE DIALOG "REGISTER",0,0,480,350,title$,"Courier new",8
    ADD DIALOG "REGISTER",5,5,4,240,10,0,"Belegauswahl"
    IF art% = 2 THEN ADD DIALOG "REGISTER",1,314,10,72,16,0,"M&ahnung erzeugen",6,1
    ADD DIALOG "REGISTER",5,6,20,275,10,0,"Termin     Nummer            RA-Betrag      Buchungstext"
    ADD DIALOG "REGISTER",7,2,32,475,300,8,2,Positionen$,Auswahl$,prompt$
    ADD DIALOG "REGISTER",1,45,333,54,16,0,"&Gegenbuchen",2,1
    ADD DIALOG "REGISTER",1,100,333,54,16,0,"&Storno",3,1
    ADD DIALOG "REGISTER",1,154,333,56,16,0,"ö&bersicht",4,1
    ADD DIALOG "REGISTER",1,210,333,47,16,0,"A&usgabe",5,1
    IF art% = 2 THEN ADD DIALOG "REGISTER",1,257,333,72,16,0,"&Mahnung anzeigen",8,1
    ADD DIALOG "REGISTER",1,330,333,55,16,0,"zur Adresse",9,1
    ADD DIALOG "REGISTER",1,385,333,48,16,0,"&Beenden",7,0
     DIALOG "REGISTER",req%
     REMOVE DIALOG "REGISTER"
     prompt$ = Auswahl$(0)
     IF req% = 9 THEN 
       GposOld% = - 1
       _cuaz% = VAL ( RIGHT$ (Auswahl$(0),6))
       prompt$ = Auswahl$(0)
       REM SELECT FIRST FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
       SELECT KEY _cuaz% FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
       codems% = CodeMS.ABZUGANG
       knr% = Codeku.ABZUGANG
       CALL WriteINI(_projekt$,"LastAdress", STR$ (Codeku.ABZUGANG,"000000"))
       SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
       SELECT KEY Codeku.ABZUGANG FILE "ADRESSEN" INDEX codeku.adressen
       CALL ADRESSEN()
     END IF 
     IF req% = 8 THEN 
       GposOld% = - 1
       _cuaz% = VAL ( RIGHT$ (Auswahl$(0),6))
       SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
       codems% = CodeMS.ABZUGANG
       CALL DFile(3,"MAHNUNG" + _fpw$)
       IF EXISTS (codems%,codems.mahnung) THEN 
         CALL DFile(3,"UMSATZ" + _fpw$)
         CALL Mahnung(codems%,euromas%)
       ELSE 
         CALL Fehler("Es existieren zu diesem Dokument noch keine Mahnungen!","Um eine Mahnung zu erzeugen, betÑtigen Sie bitte den Button ~Mahnung erzeugen~!")
       END IF 
     END IF 
     IF req% = 2 THEN 
       GposOld% = 0
       IF art% <> 2 AND art% <> 7 THEN 
         REQUEST "Wollen Sie den Vorgang wirklich als erfolgreich erledigt kennzeichnen?","",130,req1%
         GOTO weit2511981
       ELSE 
         raus% = 1
         REQUEST "Wollen Sie den Vorgang Åber das RA-Buch erledigen?","",130,reqab%
         IF reqab% <> 1 THEN 
           te$ = "Die entsprechenden Eintragungen im Rechnungsausgangsbuch mÅssen dennoch per Hand durchgefÅhrt werden!" + " (wenn Sie mit dem Rechnungsausgangsbuch arbeiten)"
           CALL Fehler("Bitte beachten Sie, da· durch diese Transaktion lediglich die Rechnung aus der Liste der offenen Rechnungen entfernt wird.",te$)
           req1% = 1
           raus% = 0
           GOTO weit2511981
         END IF 
         CALL Fehler("Um den Vorgang zu bearbeiten, wird jetzt in das RA-Buch verzweigt!","Wenn Sie dort den Vorgang als erledigt kennzeichnen, wird er aus der offenen Postenliste entfernt!!!")
       END IF 
       IF req1% = 0 THEN 
           _cuaz% = VAL ( RIGHT$ (Auswahl$(0),6))
           SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
           codems% = CodeMS.ABZUGANG
           CALL DFile(3,"RAUSGANG" + _fpw$)
           IF EXISTS (codems%,codems.rausgang) THEN 
             SELECT KEY codems% LOCK FILE "rausgang" INDEX codems.rausgang
             dat$ = "RAUSGANG"
             codere% = codere.dat$
             CALL ReingPos(codere%,dat$)
           ELSE 
             CALL Fehler("Eintrag nicht im RA-Buch gefunden!","")
           END IF 
       END IF 
weit2511981: 
       IF req1% = 1 THEN 
         SET STATUS "Bitte warten: Gegenbuchung..."
         IF art% = 2 OR art% = 7 THEN 
           IF cashyesno$ = "TRUE" THEN 
             REQUEST "Die Daten werden an die Buchungsdatei Åbergeben!","",2
           END IF 
           _cuaz% = VAL ( RIGHT$ (Auswahl$(0),6))
           SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
           codems% = CodeMS.ABZUGANG
           CALL DFile(3,"MAHNUNG" + _fpw$)
           IF EXISTS (codems%,codems.mahnung) THEN 
             SELECT KEY codems% LOCK FILE "mahnung" INDEX codems.mahnung
             StatusMahn.mahnung = "J"
             DatMahnErledigt.mahnung = TODAY 
             CALL QuickStore("MAHNUNG")
           END IF 
           CALL DFile(3,"RAUSGANG" + _fpw$)
           IF EXISTS (codems%,codems.rausgang) THEN 
             SELECT KEY codems% LOCK FILE "rausgang" INDEX codems.rausgang
             dat$ = "RAUSGANG"
             codere% = codere.dat$
             IF raus% = 1 THEN 
               CALL ReingPos(codere%,dat$)
             ELSE 
             END IF 
             GOTO dat2411981
 
dat2411981: 
           END IF 
         END IF 
         REDIM Auswahl$(counter%)
         FOR a% = 0 TO counter%
           IF Auswahl$(a%) <> "" THEN 
             _cuaz% = VAL ( RIGHT$ (Auswahl$(a%),6))
             SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
             codems% = CodeMS.ABZUGANG
             AnzGebucht.ABZUGANG = Anzahl.ABZUGANG
             DatumGebucht.ABZUGANG = TODAY 
             Kontrolle.ABZUGANG = "n"
             CALL QuickStore("ABZUGANG")
             codems% = CodeMS.ABZUGANG
             SELECT KEY CodeMS.ABZUGANG LOCK FILE "MASTER" INDEX CodeMS.MASTER
             IF EXISTS (CodeMS.ABZUGANG,CodeMS.master) AND art% = 2 THEN 
               SELECT KEY CodeMS.ABZUGANG LOCK FILE "MASTER" INDEX CodeMS.MASTER
               FILE "master"
               StatusM.MASTER = "b"
               CALL QuickStore("MASTER")
               art% = Art.master
               codeaq% = codeaq.master
               codedok% = codedok.master
               REM IF EXISTS (codeaq%,codeaq.GAkquiDat$) THEN 
                 REM SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
                 REM erledigt_termin.GAkquiDat$ = "j"
                 REM notiz.GAkquiDat$ = notiz.GAkquiDat$ + "    " + DATE$ ( TODAY ,"0d.mm.yyyy") + "-" + TIME$ ( NOW ,"hh:mm") + " Rechnung wurde durch Buchung automatisch erledigt!(" + nachname.supervis + ")"
                 REM CALL QuickStore(GAkquiDat$)
               REM END IF 
               REM IF EXISTS (codedok%,codedok.GAkquiDat$) THEN 
                 REM SELECT KEY codedok% LOCK FILE GAkquiDat$ INDEX codedok.GAkquiDat$
                 REM erledigt_termin.GAkquiDat$ = "j"
                 REM notiz.GAkquiDat$ = notiz.GAkquiDat$ + "    " + DATE$ ( TODAY ,"0d.mm.yyyy") + " Rechnung wurde durch Buchung automatisch erledigt!(" + nachname.supervis + ")"
                 REM CALL QuickStore(GAkquiDat$)
               REM END IF 
               IF EXISTS (codems%,codems.GAkquiDat$) THEN 
                 SELECT FIRST FILE GAkquiDat$ INDEX codedok.GAkquiDat$
                 SELECT KEY codems% LOCK FILE GAkquiDat$ INDEX codems.GAkquiDat$
                 WHILE NOT EOF (GAkquiDat$) AND codems.GAkquiDat$ = codems%
                   erledigt_termin.GAkquiDat$ = "j"
                   notiz.GAkquiDat$ = notiz.GAkquiDat$ + "    " + DATE$ ( TODAY ,"0d.mm.yyyy") + " Rechnung wurde durch Buchung automatisch erledigt!(" + nachname.supervis + ")"
                   CALL QuickStore(GAkquiDat$)
                   SELECT NEXT LOCK FILE GAkquiDat$ INDEX codems.GAkquiDat$
                 WEND 
               END IF 
             END IF 
             IF art% = 1 THEN 
               codedok% = codedok.master
               IF EXISTS (codems%,codems.master) THEN 
                 SELECT FIRST FILE "master" INDEX codems.master
                 SELECT KEY codems% LOCK FILE "master" INDEX codems.master
                 erledigt.master = "J"
                 erledigtDatum.master = TODAY 
                 gebustor.master = "angenommen"
                 STORE FILE "master"
               END IF 
               IF EXISTS (codems%,codems.GAkquiDat$) THEN 
                 SELECT FIRST FILE GAkquiDat$ INDEX codedok.GAkquiDat$
                 SELECT KEY codems% LOCK FILE GAkquiDat$ INDEX codems.GAkquiDat$
                 WHILE NOT EOF (GAkquiDat$) AND codems.GAkquiDat$ = codems%
                   erledigt_termin.GAkquiDat$ = "j"
                   notiz.GAkquiDat$ = notiz.GAkquiDat$ + "    " + DATE$ ( TODAY ,"0d.mm.yyyy") + " Angebot wurde durch Buchung automatisch erledigt!(" + nachname.supervis + ")"
                   CALL QuickStore(GAkquiDat$)
                   SELECT NEXT LOCK FILE GAkquiDat$ INDEX codems.GAkquiDat$
                 WEND 
               END IF 
             END IF 
             IF art% = 5 THEN 
               codedok% = codedok.master
               IF EXISTS (codems%,codems.master) THEN 
                 SELECT FIRST FILE "master" INDEX codems.master
                 SELECT KEY codems% LOCK FILE "master" INDEX codems.master
                 erledigt.master = "J"
                 erledigtDatum.master = TODAY 
                 REM gebustor.master = "angenommen"
                 STORE FILE "master"
               END IF 
               IF EXISTS (codems%,codems.GAkquiDat$) THEN 
                 SELECT FIRST FILE GAkquiDat$ INDEX codedok.GAkquiDat$
                 SELECT KEY codems% LOCK FILE GAkquiDat$ INDEX codems.GAkquiDat$
                 WHILE NOT EOF (GAkquiDat$) AND codems.GAkquiDat$ = codems%
                   erledigt_termin.GAkquiDat$ = "j"
                   notiz.GAkquiDat$ = notiz.GAkquiDat$ + "    " + DATE$ ( TODAY ,"0d.mm.yyyy") + " Bestellung wurde durch Buchung automatisch erledigt!(" + nachname.supervis + ")"
                   CALL QuickStore(GAkquiDat$)
                   SELECT NEXT LOCK FILE GAkquiDat$ INDEX codems.GAkquiDat$
                 WEND 
               END IF 
             END IF 
             IF art% = 2 OR art% = 7 THEN 
               IF cashpath$ <> "leer\" AND cashyesno$ = "TRUE" THEN 
                 FILE "master"
                 SELECT KEY codems% FILE "master" INDEX codems.master
                 IF codems% = codems.master THEN 
                   FILE "adressen"
                   SELECT KEY CodeKU.master FILE "adressen" INDEX codeku.adressen
                   IF NOT EOF ("adressen") THEN 
                     IF debitorkto.adressen <> "" THEN 
                       debitakt$ = LTRIM$ (Debitorkto.adressen)
                     END IF 
                   END IF 
                   IF debitakt$ = "" THEN debitakt$ = Debitorkto$
                   DATEBASE "ddmmyy"
                   vdatum$ = DATE$ (datum.master)
                   IF art.master = 2 THEN 
                     betrag$ = LTRIM$ ( STR$ (GesBrutto.master * 100,"999999999999"))
                     buchtext$ = nummer.master + " bezahlt!"
                   ELSE 
                     betrag$ = LTRIM$ ( STR$ (GesBrutto.master * - 100,"999999999999"))
                     buchtext$ = nummer.master + " ausbezahlt!"
                   END IF 
                   BSatz$ = CHR$ (34) + "Z" + CHR$ (34) + "," + CHR$ (34) + LTRIM$ (vdatum$) + CHR$ (34) + "," + CHR$ (34) + buchtext$ + CHR$ (34) + "," + CHR$ (34) + LTRIM$ (nachname.master) + CHR$ (34) + "," + CHR$ (34) + Debitakt$ + CHR$ (34) + ","
                   Bsatz$ = Bsatz$ + CHR$ (34) + Bestandskto$ + CHR$ (34) + "," + CHR$ (34) + LTRIM$ ( STR$ (CodeMS.master,"999999")) + CHR$ (34) + "," + CHR$ (34) + betrag$ + CHR$ (34) + "," + CHR$ (34) + "0" + CHR$ (34)
                   cashdatei$ = cashpath$ + "export.asc"
                   IF EXISTS (cashdatei$) THEN 
                     OPEN cashdatei$ FOR APPEND 
                   ELSE 
                     OPEN cashdatei$ FOR OUTPUT 
                   END IF 
                   ? BSatz$
                   CLOSE OUTPUT 
                   BSatz$ = ""
                   IF cashedit$ = "TRUE" THEN 
                     REQUEST "Mîchten Sie die Buchungsdatei einsehen und ggf.","per Hand Ñndern?",130,req22%
                   ELSE 
                     req22% = 0
                   END IF 
                   IF req22% = 1 THEN 
                     CALL EditASCIIFile(cashdatei$)
                   END IF 
                 END IF 
               END IF 
               FILE "abzugang"
             END IF 
           END IF 
         NEXT a%
         REM CALL Fehler("","")
       END IF 
     END IF 
     IF req% = 6 THEN 
       GposOld% = 0
       SET STATUS "Bitte warten: angemahnt..."
       REQUEST "Wollen Sie wirklich den Vorgang als angemahnt kennzeichnen?","",130,req1%
       IF req1% = 1 THEN 
         CALL DFile(3,"TEILRAUS" + _fpw$)
         CALL DFile(3,"MAHNUNG" + _fpw$)
         CALL DFile(2,"OFFICE\akquise" + _fpw$)
         CALL DFile(2,"OFFICE\adressen" + _fpw$)
         FOR a% = 0 TO counter%
           IF Auswahl$(a%) <> "" THEN 
             _cuaz% = VAL ( RIGHT$ (Auswahl$(a%),6))
             FILE "abzugang"
             SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
             buchungstext.ABZUGANG = "*M*" + DATE$ ( TODAY ,"dd.mm.yyyy") + " " + buchungstext.ABZUGANG
             CALL QuickStore("ABZUGANG")
             SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
             SELECT KEY CodeMS.abzugang FILE "master" INDEX CodeMS.master
             codems% = CodeMS.abzugang
             bruttosum% = GesBrutto.Master
             FILE GAkquiDat$
             BLANK 
             codeaq.GAkquiDat$ = SER (GAkquiDat$,1)
             CodeKU.GAkquiDat$ = CodeKU.ABZUGANG
             CodeMA.GAkquiDat$ = _vcodema%
             CodeAK.GAkquiDat$ = 999998
             Wertung.GAkquiDat$ = 0
             Sprachnotiz.GAkquiDat$ = "n"
             Datum.GAkquiDat$ = TODAY 
             Termin.GAkquiDat$ = TODAY 
             erledigt_Termin.GAkquiDat$ = "n"
             erledigt_Vorg.GAkquiDat$ = "n"
             SELECT KEY CodeKU.ABZUGANG FILE "adressen" INDEX codeku.adressen
             nachname.GAkquiDat$ = nachname.adressen
             SELECT KEY codema.GAkquiDat$ FILE "supervis" INDEX codema.supervis
             Bearbeiter.GAkquiDat$ = nachname.supervis
             Notiz.GAkquiDat$ = "MAHNUNG zur Rechnung: " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosum%,"999999999999.00")) + " DM"
             CALL QuickStore(GAkquiDat$)

             REM 1981111 Datensatz in Datei Mahnung aufnehmen bzw. dorthingehen,um neue Mahnung zu kreieren
             CALL MahnCreate(codems%)

           END IF 
         NEXT 
         FILE "abzugang"
       END IF 
     END IF 
     IF req% = 3 THEN 
       GposOld% = 0
       REQUEST "Wollen Sie den Vorgang wirklich stornieren?","",130,req1%
       IF req1% = 1 THEN 
         SET STATUS "Bitte warten: Stornierung..."
         REDIM Auswahl$(counter%)
         FOR a% = 0 TO counter%
           IF Auswahl$(a%) <> "" THEN 
             _cuaz% = VAL ( RIGHT$ (Auswahl$(a%),6))
             FILE "abzugang"
             SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
             AnzGebucht.ABZUGANG = 0
             DatumGebucht.ABZUGANG = TODAY 
             Kontrolle.ABZUGANG = "n"
             REM Termin.ABZUGANG = 0
             Buchungstext.ABZUGANG = Buchungstext.ABZUGANG + " [STORNO]"
             CALL QuickStore("ABZUGANG")
             codems% = CodeMS.ABZUGANG
             SELECT KEY CodeMS.ABZUGANG LOCK FILE "MASTER" INDEX CodeMS.MASTER
             IF FOUND ("MASTER") THEN 
               FILE "master"
               StatusM.MASTER = "s"
               erledigt.master = "J"
               erledigtdatum.master = TODAY 
               IF art.master = 1 THEN gebustor.master = "abgelehnt"
               CALL QuickStore("MASTER")
               art% = Art.master
               codeaq% = codeaq.master
               codedok% = codedok.master
               IF EXISTS (codeaq%,codeaq.GAkquiDat$) THEN 
                 SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
                 erledigt_termin.GAkquiDat$ = "j"
                 notiz.GAkquiDat$ = notiz.GAkquiDat$ + "    " + DATE$ ( TODAY ,"0d.mm.yyyy") + "-" + TIME$ ( NOW ,"hh:mm") + " Angebot wurde durch Stornierung automatisch erledigt!(" + nachname.supervis + ")"
                 CALL QuickStore(GAkquiDat$)
               END IF 
               IF EXISTS (codedok%,codedok.GAkquiDat$) THEN 
                 SELECT KEY codedok% LOCK FILE GAkquiDat$ INDEX codedok.GAkquiDat$
                 erledigt_termin.GAkquiDat$ = "j"
                 notiz.GAkquiDat$ = notiz.GAkquiDat$ + "    " + DATE$ ( TODAY ,"0d.mm.yyyy") + " Angebot wurde durch Stornierung automatisch erledigt!(" + nachname.supervis + ")"
                 CALL QuickStore(GAkquiDat$)
               END IF 
             END IF 
             IF art% = 2 OR art% = 7 THEN 
               IF cashpath$ LIKE "leer*" THEN cashpath$ = "leer"
               IF cashpath$ <> "leer" THEN 
                 FILE "master"
                 SELECT KEY codems% FILE "master" INDEX codems.master
                 IF codems% = codems.master THEN 
                   FILE "adressen"
                   SELECT KEY CodeKU.master FILE "adressen" INDEX codeku.adressen
                   IF NOT EOF ("adressen") THEN 
                     IF debitorkto.adressen <> "" THEN 
                       debitakt$ = LTRIM$ (Debitorkto.adressen)
                     END IF 
                   END IF 
                   IF debitakt$ = "" THEN debitakt$ = Debitorkto$
                   DATEBASE "ddmmyyyy"
                   vdatum$ = DATE$ (datum.master)
                   mwst$ = LTRIM$ ( STR$ (MwSt.master * 100,"9999"))
                   IF art.master = 2 THEN 
                     betrag$ = LTRIM$ ( STR$ (GesBrutto.master * 100,"999999999999"))
                     buchtext$ = nummer.master + " storniert!"
                   ELSE 
                     betrag$ = LTRIM$ ( STR$ (GesBrutto.master * - 100,"999999999999"))
                     buchtext$ = nummer.master + " storniert!"
                   END IF 
                   BSatz$ = CHR$ (34) + "R" + CHR$ (34) + "," + CHR$ (34) + LTRIM$ (vdatum$) + CHR$ (34) + "," + CHR$ (34) + buchtext$ + CHR$ (34) + "," + CHR$ (34) + LTRIM$ (nachname.master) + CHR$ (34) + "," + CHR$ (34) + Debitakt$ + CHR$ (34) + ","
                   Bsatz$ = Bsatz$ + CHR$ (34) + Warenausgkto$ + CHR$ (34) + "," + CHR$ (34) + LTRIM$ ( STR$ (CodeMS.master,"999999")) + CHR$ (34) + "," + CHR$ (34) + betrag$ + CHR$ (34) + "," + CHR$ (34) + mwst$ + CHR$ (34)
                   cashdatei$ = cashpath$ + "export.asc"
                   IF EXISTS (cashdatei$) THEN 
                     OPEN cashdatei$ FOR APPEND 
                   ELSE 
                     OPEN cashdatei$ FOR OUTPUT 
                   END IF 
                   ? BSatz$
                   CLOSE OUTPUT 
                   BSatz$ = ""
                   REQUEST "Mîchten Sie die Buchungsdatei einsehen und ggf.","per Hand Ñndern?",130,req22%
                   IF req22% = 1 THEN 
                      CALL EditASCIIFile(cashdatei$)
                   END IF 
                 END IF 
                 FILE "abzugang"
               END IF 
             END IF 
 
           END IF 
         NEXT 
       END IF 
     END IF 
     IF req% = 5 THEN 
       GposOld% = - 1
       SET STATUS "Ausgabe eines Vorganges..."
       FOR a% = 0 TO counter%
         IF Auswahl$(a%) <> "" THEN 
           _cuaz% = VAL ( RIGHT$ (Auswahl$(a%),6))
           SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
           codems% = CodeMS.abzugang
           SELECT KEY CodeMS.ABZUGANG LOCK FILE "MASTER" INDEX CodeMS.MASTER
           IF FOUND ("MASTER") THEN 
              FILE "master"
              MSArt$ = "Angebote"
              SFORM$ = "UNI"
              SELECT KEY codems% LOCK FILE "master" INDEX codems.master
              CALL MSCHRabattProz()
              CALL MSCHRabatt()
              noedit$ = "j"
              REM CALL MSDR(CodeMS.master,1)
              CALL MSDrucken(codems.master)
              FILE "abzugang"
           END IF 
         END IF 
       NEXT a%
       REM CALL Fehler("","")
     END IF 
     IF req% = 4 THEN 
       GposOld% = - 1
       CALL DFile(2,"OFFICE\adressen" + _fpw$)
       CALL PRep("OFFEN")
       Ueberschrift$ = "öbersicht Åber offene " + subHeader$
       HEADING 
         SET REPORT PAGE "H_PAGE"
         OUTPUT REPORT PAGE 
       END HEADING 
       FOOTING 1
         SET REPORT PAGE "F_PAGE"
         OUTPUT REPORT PAGE 
       END FOOTING 
       AFTER SELECT 
         SET REPORT PAGE "F_SELECT"
         OUTPUT REPORT PAGE 
       END SELECT 
       SET QUERY OFF 
       SET QUERY LOCK OFF 
       MOUSE OFF 
       ON ERROR GOTO ErrOFFVORG
       SELECT ;
         WHERE CodeKU.ABZUGANG = CodeKU.ADRESSEN AND Art.ABZUGANG = art% AND Kontrolle.ABZUGANG LIKE "j"
         ORDER REPORT Termin.ABZUGANG
         TO ASK 
         END SELECT 
ErrOFFVORG: 
       ON ERROR GOTO ErrorHandler
     END IF 
   ELSE 
     IF req% <> 7 THEN CALL Fehler("keine Positionen gefunden!","")
     req% = 0
   END IF 
 IF req% = 7 THEN 
   req% = 0
   GposOld% = 0
 END IF 
 WEND 
 SET STATUS ""
 MOUSE ON 
 END SUB 
 
 
SUB KALKKOMBI()
 REQUEST "Die Neukalkulation aller Kombiartikel kann eine Zeit benîtigen!","Kombiartikel neu kalkulieren?",135,req%
 IF req% = 1 THEN 
   MOUSE OFF 
   CALL DFile(3,"ARTIKEL" + _fpw$)
   CALL DFile(3,"ARTPROV" + _fpw$)
   CALL DFile(3,"VERTRETE" + _fpw$)
   CALL DFile(3,"KOMBI" + _fpw$)
   CALL Gauge(1,"Kombiartikel neu kalkulieren...")
   _max% = RECCOUNT ("ARTIKEL")
   _anz% = 0
   FILE "ARTIKEL"
   INDEX CodeAR.ARTIKEL
   SELECT FIRST FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
   WHILE NOT EOF ("ARTIKEL")
     _tart% = CodeAR.ARTIKEL
     _proz% = INT (100 / _max% * _anz%)
     IF _proz% > 100 THEN _proz% = 100
     IF _proz% < 2 THEN _proz% = 2
     IF _proz% <> _prozt% THEN 
       _prozt% = _proz%
       SET STATUS "Kombiartikel neu kalkulieren... " + STR$ (_prozt%,"999") + " %"
       CALL Gauge(_proz%,"")
     END IF 
     IF IsKombi%(_tart%) THEN CALL KOMBRechnen(_tart%)
     FILE "ARTIKEL"
     INDEX CodeAR.ARTIKEL
     REM SELECT FIRST FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
     REM SELECT KEY _tart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
     SELECT NEXT FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
     _anz% = _anz% + 1
   WEND 
   CALL Gauge(0,"")
   MOUSE ON 
 END IF 
 END SUB 
 
 
  
 
 ' Formular ADRESSEN
 ' ======================================================================
 
SUB MNADRESSEN()
 MENU CLEAR 
 CALL MNProgramm()
 MENU 1,1,1,"D&rucken...","ADRDrucken","Druckausgabe"
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","ADRNeu","eine neue Adresse erfassen"
 MENU 2,2,1,"S&ichern,F4","MStore","aktuelle Adresse sichern"
 MENU 2,3,1,"&Verwerfen,Alt+RckT","UNDO","letzte énderungen verwerfen"
 MENU 2,4,1,"D&uplizieren,F5","ADRKopieren","Adressdatensatz kopieren"
 MENU 2,5,1,"&Kopieren in Zwischenablage,F11","ADRKopWin","Adresse in Zwischenablage kopieren"
 
 IF NOT MNdisabled%("ADRLoeschen") THEN 
   MENU 2,6,1,"&Lîschen","ADRLoeschen","aktuelle Adresse lîschen"
 ELSE 
   MENU 2,6,0,"&Lîschen"
 END IF 
 MENU 2,7,1,"S&uchen,F6","ADRSuchen","Adresse suchen"
 IF GCodieADR$ LIKE "TRUE" THEN 
   MENU 2,8,1,"Maildelivery verarbeiten","UngMail","Maildelivery verarbeiten"
 END IF 
 MENU 3,0,1,"Be&wegen","",""
 MENU 3,1,1,"&NÑchster,BildAb","ADRNext","nÑchste Adresse"
 MENU 3,2,1,"&Vorheriger,BildAuf","ADRPrev","vorherige Adresse"
 MENU 3,3,1,"&Erster","ADRFirst","erste Adresse"
 MENU 3,4,1,"&Letzter","ADRLast","letzte Adresse"
 MENU 4,0,1,"&Optionen","",""
 MENU 4,1,1,"&Termine","AKQUISE2","Termine zur aktuellen Adresse bearbeiten"
 MENU 4,2,1,"Telefon/&Fax","ADRTelefon1","Anzeige der TelefonÅbersicht/Versand von Kurzfaxen"
 MENU 4,3,1,"Fil&ter...","","nur bestimmte Adressen anzeigen lassen..."
 MENU 4,3;1,1,"normal","ADRFilter1","nur bestimmte Adressen anzeigen lassen (einfache Auswahl)"
 MENU 4,3;2,1,"erweitert","ADRFilter2","nur bestimmte Adressen anzeigen lassen (erweiterte Auswahl)"
 MENU 4,4,1,"&UmsatzÅbersicht","AdrUmsOne","UmsatzÅbersicht des Kunden ausgeben"
 IF title$ LIKE "*FACTURA*" OR title$ LIKE "*firststep*" OR title$ LIKE "*price*" THEN 
   MENU 4,5,0,"TerminÅbersicht,F3","AQAdrHist1","TerminÅbersicht des Kunden ausgeben"
 ELSE 
   MENU 4,5,1,"TerminÅbersicht,F3","AQAdrHist1","TerminÅbersicht des Kunden ausgeben"
 END IF 

 IF GTermAusw% <> - 1 THEN 
   MENU 4,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
 ELSE 
   MENU 4,6,1,"aus Terminsuchliste &wÑhlen,F7","TagestMA1","Auflistung aller vorher gesuchten Adressen"
 END IF 
 IF GTerLispez% = - 1 THEN 
   MENU 4,6,0,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
 END IF 
 MENU 4,7,3
 MENU 4,8,1,"Adressen nach dBase III/IV exportieren","ADRExport"
 MENU 4,9,1,"Adressen aus \CODIE\IMPOADR.DBF importieren","ADRImport"
 MENU 4,10,3
 MENU 4,11,1,"allg.öbersichten Ang./Rechng./Liefersch...","ListeAllg","öbersicht Åber Ang/Rechn/Liefersch/Auftr/Bestell/Gutschr"
 REM dial$ = ReadINI$("Modem","ISDNDial")
 IF andidial$ LIKE "TELES" THEN 
   REM MENU 4,12,1,"Anwahl per TELES.FON,F12","DialTeles"
 END IF 
 MENU 4,12,1,"Export ESTOS","ADRESTOSExp"
 MENU 4,13,1,"Kundenpreisliste-XLS","KuPreisXLS"
 IF GCodieADR$ LIKE "TRUE" THEN 
   MENU 4,14,1,"Import-IMPEM-Stichwort","IMPEML1"
 END IF 

 MENU 5,0,1,"Do&kumente"
 
 WHILE DOKGruppen$(a%) <> ""
    a% = a% + 1
 WEND 

  a% = 0
 WHILE DOKGruppen$(a%) <> ""
   IF a% < 10 THEN mnline$ = "&" ELSE mnline$ = ""
   IF a% < 19 THEN 
     mnline$ = mnline$ + LTRIM$ ( STR$ (a%,"999")) + " " + DOKGruppen$(a%)
   ELSE 
     mnline$ = mnline$ + LTRIM$ ( STR$ (a% - 1,"999")) + " " + DOKGruppen$(a%)
   END IF 
   IF a% < 19 THEN 
     MENU 5,a% + 1,1,mnline$,"ADRDOK","Dokument neu erfassen, einsehen oder bearbeiten"
   ELSE 
     IF a% = 19 THEN 
       i% = 0
       MENU 5,20,1,"Weitere Dokumenten-Gruppen","",""
     ELSE 
       IF a% < 40 THEN 
         i% = i% + 1
         MENU 5,20;i%,1,mnline$,"ADRDOK","Dokument neu erfassen, einsehen oder bearbeiten"
       END IF 
     END IF 
   END IF 
   a% = a% + 1
 WEND 
 MENU 6,0,1,"&VorgÑnge"
 CALL MNHilfe(7)
 END SUB 
  
SUB MNPROJECT()
 MENU CLEAR 
 CALL MNProgramm()
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"Projektdaten in Adressen aktualisieren","PRADRAkt1",""
 IF GCODieRuf% = - 1 THEN 
   MENU 2,2,1,"Suchliste anzeigen,F7","PROKurzSuche",""
 ELSE 
   MENU 2,2,0,"Suchliste anzeigen,F7","PROKurzSuche",""
 END IF 
 CALL MNHilfe(3)
 END SUB 
  
 ' Produktgruppen
 ' =======================================================================
 
SUB MNGRUPPEN()
 MENU CLEAR 
 CALL MNProgramm()
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","GRPNeu","neue Produktgruppe anlegen"
 MENU 2,2,1,"S&ichern,F4","MStore","Daten der aktuellen Produktgruppe sichern"
 MENU 2,3,1,"&Verwerfen,Strg+RckT","UNDO","letzte énderungen verwerfen"
 IF NOT MNdisabled%("GRPLoeschen") THEN 
   MENU 2,4,1,"&Lîschen","GRPLoeschen","aktuelle Produktgruppe lîschen"
 ELSE 
   MENU 2,4,0,"&Lîschen"
 END IF 
 MENU 2,5,1,"S&uchen,F6","GRPSuchen","Produktgruppe suchen"
 MENU 3,0,1,"&Bewegen","",""
 MENU 3,1,1,"&NÑchster,BildAb","SelectNext","nÑchste Produktgruppe"
 MENU 3,2,1,"&Vorheriger,BildAuf","SelectPrevious","vorherige Produktgruppe"
 MENU 3,3,1,"&Erster","SelectFirst","erste Produktgruppe"
 MENU 3,4,1,"&Letzter","SelectLast","letzte roduktgruppe"
 MENU 4,0,1,"&Optionen"
 MENU 4,1,1,"&Artikel bearbeiten,F5","GRPProduct","Artikel der aktuellen Produktgruppe bearbeiten"
 MENU 4,2,1,"&UmsatzÅbersicht","UMSGRUPPE","UmsatzÅbersicht fÅr aktuelle Produktgruppe ausgeben"
 MENU 4,3,1,"&Kopieren","GRPKopieren","Kopieren aller Artikel einer PG in eine neue PG"
 CALL MNHilfe(5)
 END SUB 
 
 
 
 ' Masterformular A/R/L
 ' =======================================================================
 
SUB MNMASTER()
 MENU CLEAR 
 CALL MNProgramm()
 MENU 1,1,0,"&Drucken..."
 REM MENU 1,1;1,1,"Drucker/Bildschirm,F3","MSDrucken","Ausgabe als Seitenvorschau oder Ausdruck"
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","MSNeu","einen neuen Datensatz erfassen"
 MENU 2,2,1,"S&ichern,F4","MStore","Daten des aktuellen Datensatzes sichern"
 MENU 2,3,1,"&Verwerfen,Strg+RckT","UNDO",""
 IF NOT MNdisabled%("MSLoeschen") THEN 
   MENU 2,4,1,"&Lîschen","MSLoeschen","aktuellen Datensatz lîschen"
 ELSE 
   MENU 2,4,0,"&Lîschen"
 END IF 
 MENU 2,5,1,"S&uchen,F6","MSSuchen","Start der Suchfunktion"
 IF ProjectJN$ = "TRUE" THEN 
   MENU 3,0,1,"Projektzuordnung zurÅcksetzen"
   MENU 3,1,1,"Zuordnung zum Projekt zurÅcksetzen","DelProjMa","Zuordnung zum Projekt zurÅcksetzen"
   MENU 3,2,0,"letztes Suchergebnis,F7","LastSearchRe",""
   CALL MNHilfe(4)
 ELSE 
   CALL MNHilfe(3)
 END IF 
 END SUB 
 
 
 ' Detailformular A/R/L
 ' =======================================================================
 
SUB MNSCHEIN()
 MENU CLEAR 
 CALL MNProgramm()
 MENU 1,1,1,"&Drucken,F3","MSDrucken","Ausgabe als Seitenvorschau oder Ausdruck"
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","SCHNeu","einen neuen Datensatz erfassen"
 MENU 2,2,1,"S&ichern,F4","MStore","aktuellen Datensatz sichern"
 MENU 2,3,1,"&Verwerfen,Strg+RckT","UNDO","letzte énderungen verwerfen"
 CALL MNHilfe(3)
 END SUB 
 
 ' MenÅ Floskeln
 ' =======================================================================
 
SUB MNFLOSKEL()
 MENU CLEAR 
 CALL MNProgramm()
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","FLNeu","eine neue Floskel erfassen"
 MENU 2,2,1,"S&ichern,F4","MStore","Daten der aktuellen Floskel sichern"
 MENU 2,3,1,"&Verwerfen,Strg+RckT","UNDO","letzte énderungen verwerfen"
 IF NOT MNdisabled%("FLLoeschen") THEN 
   MENU 2,4,1,"&Lîschen","FLLoeschen","aktuelle Floskel lîschen"
 ELSE 
   MENU 2,4,0,"&Lîschen"
 END IF 
 REM MENU 2,5,1,"Duplizieren","FLDupli","Floskel duplizieren"

 MENU 3,0,1,"&Bewegen","",""
 MENU 3,1,1,"&NÑchster,BildAb","FLNext","nÑchster Datensatz"
 MENU 3,2,1,"&Vorheriger,BildAuf","FLPrev","vorheriger Datensatz"
 CALL MNHilfe(4)
 END SUB 
 
 
 
 
 ' Adre·string erstellen
 ' ===========================================================================
 ' mode%=0      keine Abfrage der Optionen
 ' mode%=-1     Dialog mit Optionen wird angezeigt
 ' opt1%        Telefon/Fax aufnehmen Ja:-1/Nein:0
 ' opt2%        Briefanrede aufnehmen Ja:-1/Nein:0
 ' bei mode%=-1 werden opt1% und opt2% ignoriert
 
FUNCTION MakeAdrMast$(kn%,mode%,opt1%,opt2%)
 cfile$ = FILE 
 FILE "master"
 cuadr% = knr%
 REM SELECT KEY kn% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 lf$ = CHR$ (13) + CHR$ (10)
 SELECT CASE UCASE$ (anrede.master)
 CASE "FIRMA","FA.",""
   Adresse$ = anrede + lf$ + Nachname + lf$
   IF Geburtsname.master <> "" THEN Adresse$ = Adresse$ + Geburtsname.master + lf$
   IF vorname.master <> "" THEN Adresse$ = Adresse$ + "z.H. " + Vorname.master + lf$
 CASE ELSE 
   Adresse$ = anrede + lf$
   IF Vorname.master <> "" THEN Adresse$ = Adresse$ + Vorname.master + " " + Nachname + lf$
 END SELECT 
 Adresse$ = Adresse$ + Stra·e + lf$ + plz + " " + ort + lf$ + lf$
 IF mode% THEN 
   REM IF VAL (ReadConfig$("OFFICE","AdrTelefon")) <> 0 THEN opt1% = 1 ELSE opt1% = 0
   REM IF VAL (ReadConfig$("OFFICE","AdrBriefanrede")) <> 0 THEN opt2% = 1 ELSE opt2% = 0
   CREATE DIALOG "MakeAdr",0,0,273,156,title$,"MS Sans Serif",8
   ADD DIALOG "MakeAdr",4,0,0,272,131,0,""
   ADD DIALOG "MakeAdr",9,3,10,21,22,2
   ADD DIALOG "MakeAdr",5,29,11,233,19,0,"Bitte geben Sie an, wie die Adresse fÅr die öbergabe an die Textverarbeitung in der Zwischenablage bereitgestellt werden soll:"
   ADD DIALOG "MakeAdr",6,30,33,236,66,4,0,Adresse$,800
   REM ADD DIALOG "MakeAdr",2,30,102,131,13,0,"mit Telefon-/Faxnummer",1,0,opt1%
   REM ADD DIALOG "MakeAdr",2,30,116,133,11,0,"Briefanrede",1,0,opt2%
   ADD DIALOG "MakeAdr",1,73,135,55,15,1,"&Weiter",1,1
   ADD DIALOG "MakeAdr",1,129,135,55,15,0,"&Abbrechen",0,0
   DIALOG "MakeAdr",req%
   REMOVE DIALOG "MakeAdr"
 END IF 
 IF mode% = 0 OR req% = 1 THEN 
   IF opt1% = 1 THEN 
     CALL WriteConfig("OFFICE","AdrTelefon","1")
     IF telefon1.adressen <> "" THEN 
       Adresse$ = Adresse$ + lf$ + "Tel.: " + Telefon1
     END IF 
     IF telefax.adressen <> "" THEN 
       Adresse$ = Adresse$ + lf$ + "Fax:  " + Telefax.adressen
     END IF 
   ELSE 
     CALL WriteConfig("OFFICE","AdrTelefon","0")
   END IF 
   IF opt2% = 1 THEN 
     CALL WriteConfig("OFFICE","AdrBriefanrede","1")
     Adresse$ = Adresse$ + lf$ + lf$ + lf$ + Briefanrede.adressen + lf$
   ELSE 
     CALL WriteConfig("OFFICE","AdrBriefanrede","0")
   END IF 
 END IF 
 MakeAdrMast$ = Adresse$
 REM SELECT KEY cuadr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 FILE cfile$
 END FUNCTION 
 
 
 
 
 '      ************************
 '      ** Stichworterfassung **
 '      ************************
 
SUB ARTIStichwort():
 IF ArtiKeyword$ LIKE "TRUE" AND stichwort.artikel = "" THEN CALL ARTIStichNeu()
 END SUB 
 
SUB ARTIStichNeu()
 cuar% = CodeAR.artikel
 IF NEW ("artikel") OR MOD ("artikel") THEN CALL FStore("artikel")
 SET STATUS "Stichwortvergabe Artikel"
 cfile$ = FILE 
 CALL DFile(3,"artikeys" + _fpw$)
 DIM Keyword$( RECCOUNT ("ARTIKEYS"))
 DIM Auswahl$(1)
 MOUSE OFF 
 FILE "ARTIKEYS"
 SELECT FIRST 
 a% = 0
 prompt$ = "ZZZZZZZ"
 WHILE NOT EOF ("ARTIKEYS")
   Keyword$(a%) = keyword.ARTIKEYS
   IF Keyword$(a%) < prompt$ THEN prompt$ = Keyword$(a%)
   a% = a% + 1
   SELECT NEXT 
 WEND 
 MOUSE ON 
 CREATE DIALOG "KEYWORD",0,0,233,200,title$,"MS Sans Serif",8
 ADD DIALOG "KEYWORD",4,0,1,233,176,0,""
 ADD DIALOG "KEYWORD",9,4,12,21,24,2
 ADD DIALOG "KEYWORD",5,31,14,189,19,0,"Bitte wÑhlen Sie das Stichwort aus, das in den aktuellen Artikel aufgenommen werden soll:"
 ADD DIALOG "KEYWORD",7,31,38,188,122,2,2,Keyword$,Auswahl$,prompt$
 ADD DIALOG "KEYWORD",6,31,158,188,12,8,0,KW$,20
 IF MNdisabled%("SUPERVISOR") THEN 
   ADD DIALOG "KEYWORD",1,57,182,55,15,1,"&OK",1,1
   ADD DIALOG "KEYWORD",1,113,182,55,15,0,"&Abbrechen",0,0
 ELSE 
   ADD DIALOG "KEYWORD",1,32,182,55,15,1,"&OK",1,1
   ADD DIALOG "KEYWORD",1,88,182,55,15,0,"&Abbrechen",0,0
   ADD DIALOG "KEYWORD",1,144,182,55,15,0,"&Lîschen",2,1
 END IF 
 DIALOG "KEYWORD",req%
 REMOVE DIALOG "KEYWORD"
 IF req% <> 0 THEN 
   IF kw$ = "" THEN kw$ = Auswahl$(0)
   IF req% = 1 THEN 
     REM ** Stichwort neu aufnehmen
     IF NOT EXISTS (kw$,keyword.ARTIKEYS) THEN 
       BLANK 
       keyword.artikeys = kw$
       CALL FStore("ARTIKEYS")
     END IF 
     SELECT KEY cuar% LOCK FILE "artikel" INDEX CodeAR.artikel
     IF stichwort.artikel <> "" THEN 
       stichwort.artikel = stichwort.artikel + ", " + kw$
     ELSE 
       stichwort.artikel = kw$
     END IF 
     CALL FStore("artikel")
   END IF 
   IF req% = 2 THEN 
     REM ** Stichwort aus Datei ARTIKEYS lîschen
     IF EXISTS (kw$,keyword.ARTIKEYS) THEN 
       SELECT KEY kw$ LOCK FILE "ARTIKEYS" INDEX keyword.ARTIKEYS
       REQUEST "Wollen Sie das Stichwort " + CHR$ (34) + kw$ + CHR$ (34),"wirklich aus der Stichwortliste entfernen?",135,req2%
       IF req2% = 1 THEN 
         SELECT REMOVE 
         SET STATUS "Stichwort gelîscht"
       END IF 
     ELSE 
       CALL Fehler("Das eingegebene Stichwort ist nicht in der Stichwortliste enthalten!","")
     END IF 
   END IF 
 END IF 
 SET STATUS "Bereit"
 FILE cfile$
 MOUSE ON 
 END SUB 
 
 
 
SUB ARTIStichSuch()
 REM REDIM AdrFound$( RECCOUNT ("ADRESSEN"))
 REDIM AuswArtikel$( RECCOUNT ("artikel"))
   b% = RECCOUNT ("artikel")
   FOR a% = 0 TO b%:AuswArtikel$(a%) = "":NEXT 
   feld$ = "stichwort.artikel"
   INDEX stichwort.artikel
   ok% = 1
   REM IF req% = 1 THEN 
     REM IF feld$ LIKE "Stichwort.artikel" THEN 
       CALL DFile(3,"artikeys" + _fpw$)
       FILE "artikeys"
       INDEX keyword
       SELECT FIRST 
       a% = 0
       SELECT WHERE keyword <> ""
       SELECT FIRST 
       WHILE NOT EOF ("artikeys")
         AuswArtikel$(a%) = LTRIM$ (keyword)
         a% = a% + 1
         SELECT NEXT 
       WEND 
       LAuswahl$ = AuswArtikel$(0)
       LAuswahl1$(0) = LAuswahl$
       CREATE DIALOG "ADRSTICHW",0,0,194,202,title$,"MS Sans Serif",8
       ADD DIALOG "ADRSTICHW",7,5,6,183,168,2,2,AuswArtikel$,Lauswahl1$,AuswArtikel$(0)
       ADD DIALOG "ADRSTICHW",1,33,180,55,16,1,"&OK",1,1
       ADD DIALOG "ADRSTICHW",1,93,180,55,16,0,"&Abbrechen",0,0
       DIALOG "ADRSTICHW",req5%
       MOUSE ON 
       REMOVE DIALOG "ADRSTICHW"
       IF req5% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         suna$ = "*" + LEFT$ (LAuswahl$) + "*"
       ELSE 
         ok% = 0
         AdrSuche% = 0
         REDIM AuswArtikel$( RECCOUNT ("Artikel"))
         GOTO Ende1
       END IF 
       MOUSE OFF 
       FOR cl% = 0 TO RECCOUNT ("Artikel")
         AuswArtikel$(cl%) = ""
       NEXT cl%
       FILE "artikel"
       INDEX feld$$
       a% = 0
       SELECT FIRST 
       SELECT KEY suna$ INDEX feld$$
       adrmax% = RECCOUNT ("artikel")
       cp% = 0
       lp% = 0
       pc% = 0
       WHILE NOT EOF ("artikel")
         pc% = pc% + 1
         cp% = INT (100 / adrmax% * pc%)
         IF cp% <> lp% THEN 
           SET STATUS "Verarbeitung: " + STR$ (cp%,"999") + "%"
           lp% = cp%
         END IF 
         IF Stichwort.artikel LIKE suna$ THEN 
           sok% = - 1
           IF MNdisabled%("DATALOCK") THEN 
             IF Sperre.artikel <> 0 AND Sperre.artikel <> vcodema% THEN sok% = 0
           END IF 
           IF sok% THEN 
             AuswArtikel$(a%) = LTRIM$ (Bezeichnung) + ", " + LTRIM$ (Artikelnummer) + SPACE$ (120) + STR$ (codear,"000000")
             a% = a% + 1
           END IF 
         END IF 
         SELECT NEXT 
       WEND 
       SET STATUS "Bereit"
       IF a% = 0 THEN 
         CALL Fehler("Es wurde kein Artikel mit diesem Stichwort gefunden!","")
         AdrSuche% = 0
         ok% = 0
       END IF 
     REM END IF 
     LAuswahl$ = AuswArtikel$(0)
     LAuswahl1$(0) = LAuswahl$
     req3% = 0
     IF a% <> 0 THEN 
       REM MENU 4,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
       MENU 4,3,1,"Auswahl&liste,F7","ArtAusw","Artikel aus der Auswahlliste auswÑhlen"
       CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"MS Sans Serif",8
       ADD DIALOG "ADRLISTE",7,5,8,328,161,2,2,AuswArtikel$,Lauswahl1$,AuswArtikel$(0)
       ADD DIALOG "ADRLISTE",1,114,174,56,16,1,"&OK",1,1
       ADD DIALOG "ADRLISTE",1,174,174,56,16,0,"&Abbrechen",0,0
       DIALOG "ADRLISTE",req3%
       MOUSE ON 
       REMOVE DIALOG "ADRLISTE"
       IF req3% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         ArtiSuche% = VAL ( RIGHT$ (LAuswahl$,6))
         artifound% = VAL ( RIGHT$ (LAuswahl$,6))
         ok% = 0
         SET STATUS "Adresse gefunden..."
       ELSE 
         ArtiSuche% = 0
       END IF 
     ELSE 
       artifound% = 0
       MENU 4,3,0
     END IF 
     IF ArtiSuche% = 0 AND ok% = 1 THEN 
       ArtiSuche% = 0
       ok% = 1
       REQUEST "Eintrag nicht gefunden!","Erweiterte Suche durchfÅhren?",135,req2%
       IF req2% = 1 THEN 
         ok% = 1
       ELSE 
         ok% = 0
       END IF 
     END IF 
     REM REDIM AuswArtikel$( RECCOUNT ("Artikel"))
   REM END IF 
 END SUB 
 
 
 ' Eintrag eines adressenbezogenen Dokumentes in die Termindatei
 ' ============================================================================
 
SUB ADRDokRegister1(textdatei%,codeak%)
 SET STATUS "Eintrag in Termindatei..."
 cfile$ = FILE 
 cdir$ = DIRECTORY 
 FILE GAkquiDat$
 _vcodeak% = codeak%
 SELECT KEY textdatei% FILE "dokument" INDEX CodeDOK.dokument
 RNotiz$ = "Dokument (" + Gruppe.dokument + "): " + Dokument.dokument
 CALL AQRegister1(textdatei%)
 FILE cfile$
 DIRECTORY cdir$
 END SUB 
 
SUB AQRegister1(textdatei%)
 cfile$ = FILE 
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 DIM Aktionen$(300)
 FILE "AKTIONEN"
 INDEX CodeAK
 SELECT FIRST 
 a% = - 1
 WHILE NOT EOF ("AKTIONEN")
   a% = a% + 1
   Aktionen$(a%) = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
   SELECT NEXT 
 WEND 
 SELECT KEY _vcodeak%
 Aktion$ = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
 DIM Mitarbeiter$(300)
 FILE "SUPERVIS"
 INDEX CodeMA
 SELECT FIRST 
 a% = - 1
 WHILE NOT EOF ("SUPERVIS")
   a% = a% + 1
   Mitarbeiter$(a%) = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
   SELECT NEXT 
 WEND 
 SELECT KEY vcodema%
 MANachname$ = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
 datum$ = DATE$ ( TODAY ,"dd.mm.yyyy")
 Termin$ = DATE$ ( TODAY ,"dd.mm.yyyy")
 SELECT KEY knr% FILE "ADRESSEN" INDEX codeku.adressen
 Nachname$ = Nachname.ADRESSEN
 Vorname$ = Vorname.ADRESSEN
 Stra·e$ = Stra·e.ADRESSEN
 Ort$ = PLZ.ADRESSEN + " " + Ort.ADRESSEN
 tmpku% = CodeKU.ADRESSEN
 REM RNotiz$ = ""
    DIM dlg AS Dialog
    DIM control AS DialogControl
    GOTO dwie140420002
dwie140420001: 
    CALL Fehler("Fehler bei der Datumseingabe oder Uhrzeiteingabe!","")
dwie140420002: 
    Superbase.Dialogs.Add("AQREGISTER")
    SET dlg = Superbase.Dialogs.AQREGISTER
    dlg.Move(0,0,354,235)
    dlg.Caption = title$
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(5,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Datum$"
 
    SET control = dlg.Add("DialogTextBox2","DialogTextBox")
    control.Move(49,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Termin$"
 
    SET control = dlg.Add("DialogTextBox3","DialogTextBox")
    control.Move(93,8,25,12)
    control.MaxLength = 5
    control.TextBinding = "Zeit$"
 
    SET control = dlg.Add("DialogTextBox4","DialogTextBox")
    control.Move(130,8,24,12)
    control.MaxLength = 5
    control.TextBinding = "Dauer$"
 
    SET control = dlg.Add("DialogTextBox6","DialogTextBox")
    control.Move(185,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "VTermin$"
 
    SET control = dlg.Add("DialogTextBox7","DialogTextBox")
    control.Move(235,8,25,12)
    control.MaxLength = 5
    control.TextBinding = "VZeit$"
 
    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(130,22,28,11)
    control.Caption = "Dauer"
 
    SET control = dlg.Add("DialogLabel19","DialogLabel")
    control.Move(185,22,45,13)
    control.Caption = "Vorlagetermin"
 
    SET control = dlg.Add("DialogLabel20","DialogLabel")
    control.Move(235,22,54,13)
    control.Caption = "Vorlagezeit"
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(5,22,32,13)
    control.Caption = "Datum"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(49,22,28,13)
    control.Caption = "Termin"
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(93,22,28,13)
    control.Caption = "Uhrzeit"
 
    SET control = dlg.Add("DialogLabel5","DialogLabel")
    control.Move(5,36,123,12)
    control.Caption = "Zuordnung zur Aktion"
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(186,44,160,81)
    control.Caption = "Adresse"
 
    SET control = dlg.Add("DialogLabel8","DialogLabel")
    control.Move(190,59,39,12)
    control.Caption = "Nachname"
 
    SET control = dlg.Add("DialogLabel14","DialogLabel")
    control.Move(230,59,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Nachname$"
 
    SET control = dlg.Add("DialogLabel9","DialogLabel")
    control.Move(190,69,32,12)
    control.Caption = "Vorname"
 
    SET control = dlg.Add("DialogLabel15","DialogLabel")
    control.Move(230,69,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Vorname$"
 
    SET control = dlg.Add("DialogLabel10","DialogLabel")
    control.Move(190,79,24,12)
    control.Caption = "Stra·e"
 
    SET control = dlg.Add("DialogLabel16","DialogLabel")
    control.Move(230,79,116,12)
    control.CaptionBinding = "Stra·e$"
 
    SET control = dlg.Add("DialogLabel11","DialogLabel")
    control.Move(190,89,19,12)
    control.Caption = "Ort"
 
    SET control = dlg.Add("DialogLabel17","DialogLabel")
    control.Move(230,89,116,12)
    control.CaptionBinding = "Ort$"
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(190,104,152,14)
    control.Caption = "Auswahl"
    control.ReturnValue = 2
 
    SET control = dlg.Add("DialogComboBox1","DialogComboBox")
    control.Move(5,46,169,83)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Aktionen$","Aktion$")
 
    SET control = dlg.Add("DialogLabel6","DialogLabel")
    control.Move(5,65,139,8)
    control.Caption = "Eintragen in den Kalender des Mitarbeiters"
 
    SET control = dlg.Add("DialogComboBox2","DialogComboBox")
    control.Move(5,76,169,90)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Mitarbeiter$","MANachname$")
 
    SET control = dlg.Add("DialogLabel7","DialogLabel")
    control.Move(5,96,139,8)
    control.Caption = "Notiz"
 
    SET control = dlg.Add("DialogTextBox5","DialogTextBox")
    control.Move(5,105,169,128)
    control.MultiLine = 1
    control.ScrollBars = 2
    control.MaxLength = 4000
    control.TextBinding = "RNotiz$"
 
    SET control = dlg.Add("DialogLabel12","DialogLabel")
    control.Move(186,133,162,29)
    control.Caption = "Wenn Sie diesen Termin nur zu Informationszwecken aufnehmen mîchten, markieren Sie bitte die Option 'Termin erledigt'."
 
    SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
    control.Move(186,165,76,12)
    control.Caption = "Termin erledigt"
    control.Bind("Terminerl$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel13","DialogLabel")
    control.Move(186,178,159,37)
    control.Caption = "Nach BetÑtigung der SchaltflÑche 'OK' wird der Eintrag in der Termindatei erzeugt."
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(186,217,78,15)
    control.Caption = "&OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
    control.Move(268,217,78,15)
    control.Caption = "&Abbrechen"
    control.ReturnValue = 0
    control.Cancel = 1
 

 ON ERROR GOTO dwie140420001

 _ok% = 0
 WHILE _ok% = 0
   DIALOG "AQREGISTER",req%
   IF req% = 2 THEN 
     kunr% = ADRSuche%(0)
     IF kunr% <> 0 THEN 
       SELECT KEY kunr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
       Nachname$ = Nachname.ADRESSEN
       Vorname$ = Vorname.ADRESSEN
       Stra·e$ = Stra·e.ADRESSEN
       Ort$ = PLZ.ADRESSEN + " " + Ort.ADRESSEN
       tmpku% = CodeKU.ADRESSEN
     END IF 
   END IF 
   IF req% = 0 THEN _ok% = 2
   IF req% = 1 THEN _ok% = 1
 WEND 
 REMOVE DIALOG "AQREGISTER"
 IF _ok% = 1 THEN 
   FILE GAkquiDat$
   BLANK 
   cuaq% = SER (GAkquiDat$,1)
   codeaq.GAkquiDat$ = cuaq%
   codeKU.GAkquiDat$ = tmpku%
   test% = VAL ( MID$ (MANachname$, LEN (MANachname$) - 6,6))
   test$ = MID$ (MANachname$, LEN (MANachname$) - 6,6)
   CodeAK.GAkquiDat$ = VAL ( MID$ (Aktion$, LEN (Aktion$) - 6,6))
   CodeMA.GAkquiDat$ = VAL ( MID$ (MANachname$, LEN (MANachname$) - 6,6))
   SELECT KEY tmpku% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
   nachname.GAkquiDat$ = nachname.adressen
   Wertung.GAkquiDat$ = 0
   Datum.GAkquiDat$ = Datum$
   CodeDOK.GAkquiDat$ = textdatei%
   SELECT KEY codema.GAkquiDat$ FILE "supervis" INDEX codema.supervis
   Bearbeiter.GAkquiDat$ = nachname.supervis
   notiz.GAkquiDat$ = rnotiz$
   termin.GAkquiDat$ = Termin$
   erledigt_Termin.GAkquiDat$ = Terminerl$
   ErDatum.GAkquiDat$ = VTermin$
   ErZeit.GAkquiDat$ = VZeit$
   IF ProjectJN$ = "TRUE" THEN 
     codems = cums%
     codepr.GAkquiDat$ = codepr.master
     ProjeKt.GAkquiDat$ = Projekt.master
   END IF 
   CALL FStore(GAkquiDat$)
 END IF 
 FILE cfile$
 ON ERROR GOTO ErrorHandler
 MOUSE ON 
 END SUB 
 
 
FUNCTION ExtDM$(Wert%)
 tDM$ = STR$ (Wert%,"99999999.99999")
 KommaPos% = INSTR (tDM$,",")
 l1% = LEN ( TRIM$ (tDM$))
 IF LEN ( TRIM$ (tDM$)) > KommaPos% + 1 AND KommaPos% <> 0 THEN 
   tDM$ = STR$ (Wert%,"999999999.99999")
 ELSE 
   tDM$ = STR$ (Wert%,",999999999.00")
 END IF 
 ExtDM$ = LTRIM$ ( TRIM$ (tDM$))
 END FUNCTION 


FUNCTION ExtDMNeu$(Wert%)
 REM wert% = wert% + 0.005
 tDM$ = STR$ (Wert%,"99999999.99999")
 KommaPos% = INSTR (tDM$,",")
 l1% = LEN ( TRIM$ (tDM$))
 IF LEN ( TRIM$ (tDM$)) > KommaPos% + 1 AND KommaPos% <> 0 THEN 
   tDM$ = STR$ (Wert%,",999999999.00")
 ELSE 
   tDM$ = STR$ (Wert%,",999999999.00")
 END IF 
 ExtDMNeu$ = LTRIM$ ( TRIM$ (tDM$))
 END FUNCTION 





FUNCTION ExtDMold$(Wert%)
 tDM$ = STR$ (Wert%,"99999999.99999")
 KommaPos% = INSTR (tDM$,",")
 IF LEN ( TRIM$ (tDM$)) > KommaPos% + 1 AND KommaPos% <> 0 THEN 
   wert% = wert% + 0.005
   tDM$ = STR$ (Wert%,",999999999.00")
 ELSE 
   tDM$ = STR$ (Wert%,",999999999.00")
 END IF 
 ExtDM$ = LTRIM$ ( TRIM$ (tDM$))
 END FUNCTION 
  

 
SUB UmsFuel()
 cfile$ = FILE 
 MOUSE OFF 
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(3,"MASTER" + _fpw$)
 CALL DFile(3,"UMSATZ" + _fpw$)
 CALL DFile(3,"schein" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"VERTRETE" + _fpw$)
 CALL DFile(3,"PROVISIO" + _fpw$)
 CALL DFile(3,"floskel" + _fpw$)
 CALL DFile(3,"rausgang" + _fpw$)
 CALL DFile(3,"reingang" + _fpw$)
 CALL DFile(3,"wagruppe" + _fpw$)
 CALL DFile(3,"warenart" + _fpw$)
 CALL DFile(3,"mahnung" + _fpw$)
 CALL DFile(3,"einzprov" + _fpw$)
 REM CALL Fehler("UMSFUEL","")
 FILE "adressen"
 INDEX codeku.adressen
 SELECT FIRST 
 FILE "master"
 INDEX codeku.master
 SELECT FIRST 
 FILE "umsatz"
 INDEX QuickCodekuJahr.umsatz
 SELECT FIRST 
 SET STATUS "Lîschen der alten UmsÑtze"
 REMOVE FROM FILE "umsatz"
 FILE "provisio"
 INDEX QuickCodeMAJahr.provisio
 SELECT FIRST 
 SET STATUS "Lîschen der alten Provisionen"
 REMOVE FROM FILE "provisio"
 FILE "einzprov"
 INDEX Codems.einzprov
 SELECT FIRST 
 SET STATUS "Lîschen der alten Einzel-Provisionen"
 REMOVE FROM FILE "einzprov"
 FILE "vertrete"
 INDEX codema.vertrete
 SELECT FIRST 
 SET STATUS "RÅcksetzen der Provisionsgesamtfelder"
 UPDATE ReGesGes = 0:GutGesGes = 0:AngGesGes = 0:LieGesGes = 0:AufGesGes = 0:BesGesGes = 0:ProGesGes = 0
 END UPDATE 
 UPDATE ReGesGesEU = 0:GutGesGesEU = 0:AngGesGesEU = 0:LieGesGesEU = 0:AufGesGesEU = 0:BesGesGesEU = 0:ProGesGesEU = 0
 END UPDATE 
 SET STATUS ""
 FILE "adressen"
 INDEX nachname.adressen
 IF NOT EOF ("adressen") THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 codeku% = codeku.adressen
 nachname$ = nachname.adressen
 iab% = 0
 jab% = RECCOUNT ("ADRESSEN")
 WHILE NOT EOF ("adressen")
   iab% = iab% + 1
   SET STATUS "Berechne UmsÑtze fÅr Adresse: " + nachname$ + "  Datensatz: " + LTRIM$ ( STR$ (iab%,",99999999")) + " von " + LTRIM$ ( STR$ (jab%,",99999999"))
   IF EXISTS (codeku%,codeku.master) THEN 
     
     FILE "master"
     INDEX codeku.master
     SELECT FIRST 
     SELECT KEY codeku% LOCK FILE "master" INDEX codeku.master
     AngGesGes% = 0
     ReGesGes% = 0
     LieGesGes% = 0
     AufGesGes% = 0
     BesGesGes% = 0
     GutGesGes% = 0

     AngGesGesEU% = 0
     ReGesGesEU% = 0
     LieGesGesEU% = 0
     AufGesGesEU% = 0
     BesGesGesEU% = 0
     GutGesGesEU% = 0
     WHILE NOT EOF ("master") AND codeku.master = codeku%
       codems% = codems.master
       FILE "schein"
       INDEX codems.schein
       SELECT FIRST 
       SELECT KEY codems% FILE "schein" INDEX codems.schein
       FILE "master"
       CALL ProvFuelGes(codems%)
       FILE "master"
       SELECT KEY codems% LOCK FILE "master" INDEX codems.master
       datum$ = DATE$ (datum.master,"yyyymmdd")
       jahr$ = LEFT$ (datum$,4)
       monat$ = MID$ (datum$,5,2)
       mo% = VAL (monat$)
       art% = art.master
       gesbrutto% = gesBrutto.master
       gesbruttoEU% = gesBruttoEU.master
 
       quickKuJahr$ = STR$ (codeku%,"000000") + jahr$
       BuchBrutto.master = GesBrutto.master
       BuchBruttoEU.master = GesBruttoEU.master
       BuchUms.master = "Y"
       BuchDatum.master = Datum.master
       BuchProv.master = ProvisDM.master
       BuchProvEU.master = ProvisEU.master
       BuchCodeMA.master = CodeMA.master
       CALL QuickStore("master")
       MOUSE OFF 
       FILE "umsatz"
       INDEX QuickCodekuJahr.umsatz
       SELECT FIRST 
       IF EXISTS (quickKuJahr$,QuickCodekuJahr.umsatz) THEN 
         SELECT KEY quickKuJahr$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
       ELSE 
         BLANK FILE "umsatz"
         CodeUm.umsatz = SER ("umsatz",1)
         codeku.umsatz = codeku%
         jahr.umsatz = VAL (jahr$)
         QuickCodekuJahr.umsatz = STR$ (codeku%,"000000") + jahr$
         CALL QuickStore("umsatz")
         MOUSE OFF 
         SELECT FIRST INDEX QuickCodekuJahr.umsatz
         SELECT KEY quickKuJahr$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
       END IF 
       SELECT CASE art%
         CASE 1
           MSArt$ = "Angebote"
           mo% = VAL (monat$)
           IF mo% = 0 THEN mo% = 1
           feld$ = "Ang" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           AngGesJahr.umsatz = AngGesJahr.umsatz + gesbrutto%
           AngGesGes% = AngGesGes% + gesbrutto%

           feldEU$ = "Ang" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           AngGesJahrEU.umsatz = AngGesJahrEU.umsatz + gesbruttoEU%
           AngGesGesEU% = AngGesGesEU% + gesbruttoEU%
           CALL QuickStore("UMSATZ")
         CASE 2
           MSArt$ = "Rechnungen"
           mo% = VAL (monat$)
           IF mo% = 0 THEN mo% = 1
           feld$ = "Rec" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           ReGesJahr.umsatz = REGesJahr.umsatz + gesbrutto%
           ReGesGes% = ReGesGes% + gesbrutto%

           feldEU$ = "Rec" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           ReGesJahrEU.umsatz = REGesJahrEU.umsatz + gesbruttoEU%
           ReGesGesEU% = ReGesGesEU% + gesbruttoEU%
           CALL QuickStore("UMSATZ")
         CASE 3
           MSArt$ = "Lieferscheine"
           mo% = VAL (monat$)
           IF mo% = 0 THEN mo% = 1
           feld$ = "Lie" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           LieGesJahr.umsatz = LieGesJahr.umsatz + gesbrutto%
           LieGesGes% = LieGesGes% + gesbrutto%

           feldEU$ = "Lie" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           LieGesJahrEU.umsatz = LieGesJahrEU.umsatz + gesbruttoEU%
           LieGesGesEU% = LieGesGesEU% + gesbruttoEU%
           CALL QuickStore("UMSATZ")
         CASE 4
           MSArt$ = "AuftrÑge"
           IF mo% = 0 THEN mo% = 1
           feld$ = "Auf" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           AufGesJahr.umsatz = AufGesJahr.umsatz + gesbrutto%
           AufGesGes% = AufGesGes% + gesbrutto%

           feldEU$ = "Auf" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           AufGesJahrEU.umsatz = AufGesJahrEU.umsatz + gesbruttoEU%
           AufGesGesEU% = AufGesGesEU% + gesbruttoEU%
           CALL QuickStore("UMSATZ")
         CASE 5
           MSArt$ = "Bestellungen"
           IF mo% = 0 THEN mo% = 1
           feld$ = "Bes" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           BesGesJahr.umsatz = BesGesJahr.umsatz + gesbrutto%
           BesGesGes% = BesGesGes% + gesbrutto%

           feldEU$ = "Bes" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           BesGesJahrEU.umsatz = BesGesJahrEU.umsatz + gesbruttoEU%
           BesGesGesEU% = BesGesGesEU% + gesbruttoEU%
           CALL QuickStore("UMSATZ")
         CASE 7
           MSArt$ = "Gutschriften"
           IF mo% = 0 THEN mo% = 1
           feld$ = "Gut" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           GutGesJahr.umsatz = GutGesJahr.umsatz + gesbrutto%
           GutGesGes% = GutGesGes% + gesbrutto%

           feldEU$ = "Gut" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           GutGesJahrEU.umsatz = GutGesJahrEU.umsatz + gesbruttoEU%
           GutGesGesEU% = GutGesGesEU% + gesbruttoEU%

           feld$ = "Rec" + STR$ (mo%,"00")
           feld$$ = feld$$ - gesbrutto%
           ReGesJahr.umsatz = REGesJahr.umsatz - gesbrutto%
           ReGesGes% = ReGesGes% - gesbrutto%
 
           feldEU$ = "Rec" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ - gesbruttoEU%
           ReGesJahrEU.umsatz = REGesJahrEU.umsatz - gesbruttoEU%
           ReGesGesEU% = ReGesGesEU% - gesbruttoEU%

           CALL QuickStore("UMSATZ")
       END SELECT 
       FILE "master"
       MOUSE OFF 
     SELECT NEXT LOCK INDEX codeku.master
     WEND 
   END IF 
 
 FILE "adressen"
 INDEX nachname.adressen
 SELECT KEY codeku% LOCK FILE "adressen" INDEX codeku.adressen
 AngGesGes.adressen = AngGesGes%
 ReGesGes.adressen = ReGesGes%
 LieGesGes.adressen = LieGesGes%
 AufGesGes.adressen = AufGesGes%
 BesGesGes.adressen = BesGesGes%
 GutGesGes.adressen = GutGesGes%

 AngGesGesEU.adressen = AngGesGesEU%
 ReGesGesEU.adressen = ReGesGesEU%
 LieGesGesEU.adressen = LieGesGesEU%
 AufGesGesEU.adressen = AufGesGesEU%
 BesGesGesEU.adressen = BesGesGesEU%
 GutGesGesEU.adressen = GutGesGesEU%
 CALL QuickStore("adressen")
 
 SELECT NEXT INDEX nachname.adressen
 SET STATUS "Berechne UmsÑtze fÅr Adresse: " + nachname.adressen
 codeku% = codeku.adressen
 nachname$ = nachname.adressen
 WEND 
 SET STATUS "Berechnung der UmsÑtze beendet!"
 FILE cfile$
 MOUSE ON 
 END SUB 
 
 
 
SUB ProvFuelGes(cums%)
 REM CALL Fehler("ProvFuelGes","")
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 codems% = cums%
 datum$ = DATE$ (datum.master,"yyyymmdd")
 datum% = datum.master
 jahr$ = LEFT$ (datum$,4)
 monat$ = MID$ (datum$,5,2)
 mo% = VAL (monat$)
 art% = art.master
 codema% = codema.master
 provalt% = 0
 provaltEU% = 0
 Buchdat% = 0
 prov% = ProvisDM.master
 provEU% = ProvisEU.master
 buchdat% = datum%
 quickMAJahr$ = STR$ (codema%,"000000") + jahr$
 FILE "provisio"
 INDEX QuickCodeMAJahr.provisio
 SELECT FIRST 
 IF EXISTS (QuickMAJahr$,QuickCodeMAJahr.provisio) THEN 
   SELECT KEY QuickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
 ELSE 
   IF datum% = buchdat% THEN provalt% = 0
   BLANK FILE "provisio"
   CodePr.provisio = SER ("provisio",1)
   codema.provisio = codema%
   jahr.provisio = VAL (jahr$)
   QuickCodeMAJahr.provisio = STR$ (codema%,"000000") + jahr$
   CALL QuickStore("provisio")
 END IF 
 SELECT CASE art%
   CASE 2
     MSArt$ = "Rechnungen"
     IF monat$ = "00" OR monat$ LIKE " " THEN monat$ = "01"
     mo% = VAL (monat$)
     IF mo% = 0 THEN mo% = 1
     feld$ = "Rec" + STR$ (mo%,"00")
     feldEU$ = "Rec" + STR$ (mo%,"00") + "EU"
     SELECT FIRST INDEX QuickCodeMAJahr.provisio
     SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
     feld$$ = feld$$ + prov%
     ReGesJahr.provisio = REGesJahr.provisio + prov%
     feldEU$$ = feldEU$$ + provEU%
     ReGesJahrEU.provisio = REGesJahrEU.provisio + provEU%
     CALL QuickStore("provisio")
     MOUSE OFF 
     FILE "vertrete"
     SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
     ReGesGes.vertrete = ReGesGes.vertrete + prov%
     ReGesGesEU.vertrete = ReGesGesEU.vertrete + provEU%
     CALL QuickStore("VERTRETE")
   CASE 3
     MSArt$ = "Lieferscheine"
     IF monat$ = "00" OR monat$ LIKE " " THEN monat$ = "01"
     mo% = VAL (monat$)
     IF mo% = 0 THEN mo% = 1
     feld$ = "Lie" + STR$ (mo%,"00")
     feldEU$ = "Lie" + STR$ (mo%,"00") + "EU"
     SELECT FIRST INDEX QuickCodeMAJahr.provisio
     SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
     feld$$ = feld$$ + prov%
     LieGesJahr.provisio = LieGesJahr.provisio + prov%
     feldEU$$ = feldEU$$ + provEU%
     LieGesJahrEU.provisio = LieGesJahrEU.provisio + provEU%
     CALL QuickStore("provisio")
     FILE "vertrete"
     SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
     LieGesGes.vertrete = LieGesGes.vertrete + prov%
     LieGesGesEU.vertrete = LieGesGesEU.vertrete + provEU%
     CALL QuickStore("VERTRETE")
   CASE 7
     MSArt$ = "Gutschriften"
     IF monat$ = "00" OR monat$ LIKE " " THEN monat$ = "01"
     mo% = VAL (monat$)
     IF mo% = 0 THEN mo% = 1
     feld$ = "Gut" + STR$ (mo%,"00")
     feldEU$ = "Gut" + STR$ (mo%,"00") + "EU"
     SELECT FIRST INDEX QuickCodeMAJahr.provisio
     SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
     feld$$ = feld$$ + prov%
     GutGesJahr.provisio = GutGesJahr.provisio + prov%
     feldEU$$ = feldEU$$ + provEU%
     GutGesJahrEU.provisio = GutGesJahrEU.provisio + provEU%
     REM Bei den Felder fÅr Rechnungen mu· die Gutschrift abgezogen werden
     feld1$ = "Rec" + STR$ (mo%,"00")
     gesmon% = feld1$$
     feld1$$ = feld1$$ - prov%
     gesmonneu% = feld1$$
     gesj% = ReGesJahr.provisio
     ReGesJahr.provisio = REGesJahr.provisio - prov%
     gesj% = ReGesJahr.provisio

     feld1EU$ = "Rec" + STR$ (mo%,"00") + "EU"
     gesmonEU% = feld1EU$$
     feld1EU$$ = feld1EU$$ - provEU%
     gesmonneuEU% = feld1EU$$
     gesjEU% = ReGesJahrEU.provisio
     ReGesJahrEU.provisio = REGesJahrEU.provisio - provEU%
     gesjEU% = ReGesJahrEU.provisio
     CALL QuickStore("provisio")
     FILE "vertrete"
     SELECT FIRST INDEX codema.vertrete
     SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
     GutGesGes.vertrete = GutGesGes.vertrete + prov%
     ReGesGes.vertrete = ReGesGes.vertrete - prov%
     GutGesGesEU.vertrete = GutGesGesEU.vertrete + provEU%
     ReGesGesEU.vertrete = ReGesGesEU.vertrete - provEU%
     CALL QuickStore("vertrete")
 END SELECT 
 FILE "einzprov"
 INDEX QuickMSSch.einzprov
 SELECT FIRST 
 quickMSSch$ = STR$ (codems%,"0000000") + "000000"
 IF NOT EXISTS (quickMSSch$,quickMSSch.einzprov) THEN 
   REM anlegen Masterkopfsatz
   BLANK FILE "einzprov"
   quickMSSch.einzprov = STR$ (codems%,"000000") + "000000"
 ELSE 
   SELECT KEY quickMSSch$ LOCK FILE "einzprov" INDEX quickMSSch.einzprov
 END IF 
 Codems.einzprov = codems%
 codesch.einzprov = 0
 ProvisProz.einzprov = ProvisProz.master
 ProvisDM.einzprov = ProvisDM.master
 ProvisEU.einzprov = ProvisEU.master
 Codeku.einzprov = Codeku.master
 Codema.einzprov = Codema.master
 Kundname.einzprov = Nachname.master
 Nummer.einzprov = Nummer.master
 Datum.einzprov = Datum.master
 Art.einzprov = Art.master
 GesamtNetto.einzprov = GesNetto.master
 GesamtBrutto.einzprov = GesBrutto.master

 GesNettoEU.einzprov = GesNettoEU.master
 GesBruttoEU.einzprov = GesBruttoEU.master
 SELECT KEY codema.master FILE "vertrete" INDEX codema.vertrete
 MAName.einzprov = Nachname.vertrete
 CALL QuickStore("einzprov")
 MOUSE OFF 
 END IF 
 FILE "schein"
 INDEX codems.schein
 SELECT FIRST 
 SELECT KEY codems% LOCK FILE "schein" INDEX codems.schein
 MOUSE OFF 
 WHILE NOT EOF ("schein") AND codems.schein = codems%
   codesch% = Codesch.schein
   ok% = 0
   IF ProvisDM.schein > 0 OR ProvisEU.schein > 0 THEN 
     IF NOT EXISTS (codesch%,codesch.einzprov) THEN 
       BLANK FILE "einzprov"
       quickMSSch.einzprov = STR$ (codems%,"000000") + STR$ (codesch%,"000000")
     ELSE 
       quickMSSch$ = STR$ (codems%,"000000") + STR$ (codesch%,"000000")
       SELECT KEY quickMSSch$ LOCK FILE "einzprov" INDEX quickMSSch.einzprov
     END IF 
     ok% = 1
   ELSE 
     IF EXISTS (codesch%,codesch.einzprov) THEN 
       quickMSSch$ = STR$ (codems%,"000000") + STR$ (codesch%,"000000")
       SELECT KEY quickMSSch$ LOCK FILE "einzprov" INDEX quickMSSch.einzprov
       ok% = 1
     END IF 
   END IF 
   IF ok% = 1 THEN 
     FILE "einzprov"
     Codems.einzprov = codems%
     codesch.einzprov = codesch.schein
     ProvisProz.einzprov = ProvisProz.schein
     ProvisDM.einzprov = ProvisDM.schein
     ProvisEU.einzprov = ProvisEU.schein
     Codeku.einzprov = Codeku.master
     Codema.einzprov = Codema.schein
     Kundname.einzprov = Nachname.master
     Nummer.einzprov = Nummer.master
     Datum.einzprov = Datum.master
     Art.einzprov = Art.master
     GesamtNetto.einzprov = GesamtNetto.schein
     GesamtBrutto.einzprov = GesamtBrutto.schein
     GesNettoEU.einzprov = GesNettoEU.schein
     GesBruttoEU.einzprov = GesBruttoEU.schein
     Codear.einzprov = codear.schein
     Artikelnummer.einzprov = artikelnummer.schein
     Bezeichnung.einzprov = Bezeichnung.schein
     SELECT KEY codema.schein FILE "vertrete" INDEX codema.vertrete
     MAName.einzprov = Nachname.vertrete
     CALL QuickStore("einzprov")
 
     REM Aktualisierung aller Provisionsrechnungsfelder mit der Einzelprovision
     FILE "schein"
     SELECT KEY codesch% LOCK FILE "schein" INDEX codesch.schein
     codema% = codema.schein
     provalt% = 0
     provaltEU% = 0
     Buchdat% = 0
     prov% = ProvisDM.schein
     provEU% = ProvisEU.schein
     BuchProv.schein = ProvisDM.schein
     BuchProvEU.schein = ProvisEU.schein
     BuchCodeMA.schein = CodeMA.schein
     CALL QuickStore("schein")
     SELECT KEY codesch% LOCK FILE "schein" INDEX codesch.schein
     quickMAJahr$ = STR$ (codema%,"000000") + jahr$
     FILE "provisio"
     INDEX QuickCodeMAJahr.provisio
     SELECT FIRST 
     IF EXISTS (quickMAJahr$,QuickCodeMAJahr.provisio) THEN 
       SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
     ELSE 
       IF datum% = buchdat% THEN provalt% = 0
       BLANK FILE "provisio"
       CodePr.provisio = SER ("provisio",1)
       codema.provisio = codema%
       jahr.provisio = VAL (jahr$)
       QuickCodeMAJahr.provisio = STR$ (codema%,"000000") + jahr$
       CALL QuickStore("provisio")
     END IF 
     SELECT CASE art%
       CASE 2
         MSArt$ = "Rechnungen"
         mo% = VAL (monat$)
         feld$ = "Rec" + STR$ (mo%,"00")
         feldEU$ = "Rec" + STR$ (mo%,"00") + "EU"
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         feld$$ = feld$$ + prov%
         ReGesJahr.provisio = REGesJahr.provisio + prov%
         feldEU$$ = feldEU$$ + provEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio + provEU%
         CALL QuickStore("provisio")
         FILE "vertrete"
         SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
         ReGesGes.vertrete = ReGesGes.vertrete + prov%
         ReGesGesEU.vertrete = ReGesGesEU.vertrete + provEU%
         CALL QuickStore("vertrete")
       CASE 3
         MSArt$ = "Lieferscheine"
         mo% = VAL (monat$)
         feld$ = "Lie" + STR$ (mo%,"00")
         feldEU$ = "Lie" + STR$ (mo%,"00") + "EU"
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         feld$$ = feld$$ + prov%
         LieGesJahr.provisio = LieGesJahr.provisio + prov%
         feldEU$$ = feldEU$$ + provEU%
         LieGesJahrEU.provisio = LieGesJahrEU.provisio + provEU%
         CALL QuickStore("provisio")
         FILE "vertrete"
         SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
         LieGesGes.vertrete = LieGesGes.vertrete + prov%
         LieGesGesEU.vertrete = LieGesGesEU.vertrete + provEU%
         CALL QuickStore("VERTRETE")
       CASE 7
         MSArt$ = "Gutschriften"
         mo% = VAL (monat$)
         feld$ = "Gut" + STR$ (mo%,"00")
         feldEU$ = "Gut" + STR$ (mo%,"00") + "EU"
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         feld$$ = feld$$ + prov% - provalt%
         GutGesJahr.provisio = GutGesJahr.provisio + prov%
         feldEU$$ = feldEU$$ + provEU% - provaltEU%
         GutGesJahrEU.provisio = GutGesJahrEU.provisio + provEU%
         REM Bei den Felder fÅr Rechnungen mu· die Gutschrift abgezogen werden
         feld1$ = "Rec" + STR$ (mo%,"00")
         feld1$$ = feld1$$ - prov%
         ReGesJahr.provisio = REGesJahr.provisio - prov%
         feld1EU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feld1EU$$ = feld1EU$$ - provEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio - provEU%
         CALL QuickStore("provisio")
         FILE "vertrete"
         SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
         GutGesGes.vertrete = GutGesGes.vertrete + prov%
         ReGesGes.vertrete = ReGesGes.vertrete - prov%
         GutGesGesEU.vertrete = GutGesGesEU.vertrete + provEU%
         ReGesGesEU.vertrete = ReGesGesEU.vertrete - provEU%
         CALL QuickStore("VERTRETE")
     END SELECT 
     REM Ende der Aktualisierung der Prov.rechnungsfelder
   END IF 
   FILE "schein"
   SELECT NEXT LOCK FILE "schein" INDEX codems.schein
   MOUSE OFF 
 WEND 
 END SUB 
 
 
 REM **** Aktualisierung der Einzelprovi,Provisio und der Gesamtfelder in Vertrete 
 REM loe%=0 Neueintrag / loe%=1 dann Lîschung eines CodeMS
 
SUB ProvFuelEinzel(cums%,loe%)
 CALL DFile(3,"PROVISIO" + _fpw$)
 REM CALL Fehler("ProvFuelEinzel","")
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 codems% = cums%
 datum$ = DATE$ (datum.master,"yyyymmdd")
 datum% = datum.master
 jahr$ = LEFT$ (datum$,4)
 monat$ = MID$ (datum$,5,2)
 mo% = VAL (monat$)
 art% = art.master
 codema% = codema.master
 provalt% = 0
 provaltEu% = 0
 Buchdat% = 0
 prov% = ProvisDM.master
 provEU% = ProvisEU.master
 
  REM CREATE DIALOG "UMSATZ",0,0,233,137,"Test","MS Sans Serif",8
  REM ADD DIALOG "UMSATZ",4,0,0,233,115,0,""
  REM ADD DIALOG "UMSATZ",9,6,12,20,21,2
  REM ADD DIALOG "UMSATZ",1,58,118,55,14,1,"&OK",1,1
  REM ADD DIALOG "UMSATZ",1,115,118,55,14,0,"&Abbrechen",0,0
  REM DIALOG "UMSATZ",req%
  REM REMOVE DIALOG "UMSATZ"
 
 REM IF loe% = 1 AND BuchUms.master <> "Y" THEN END SUB 
 IF BuchUms.master = "Y" THEN 
   provalt% = BuchProv.master
   provaltEU% = BuchProvEU.master
   Buchdat% = Buchdatum.master
   oldcodema% = BuchCodema.master
   IF datum% <> Buchdat% THEN 
     buchdat$ = DATE$ (Buchdatum.master,"yyyymmdd")
     buchjahr$ = LEFT$ (buchdat$,4)
     buchmonat$ = MID$ (buchdat$,5,2)
     quickMAJahrold$ = STR$ (codema%,"000000") + buchjahr$
     qoldMAJahrold$ = STR$ (oldcodema%,"000000") + buchjahr$
   END IF 
 ELSE 
   buchdat% = datum%
   oldcodema% = codema%
 END IF 
 IF BuchUms.master = "Y" AND loe% = 1 THEN 
   prov% = Provisdm.master * ( - 1)
   provalt% = 0
   provEU% = ProvisEU.master * ( - 1)
   provaltEU% = 0
   Buchdat% = datum%
 ELSE 
   BuchUms.master = "Y"
   BuchProv.master = ProvisDM.master
   BuchProvEU.master = ProvisEU.master
   Buchdatum.master = datum%
   BuchCodeMA.master = CodeMA.master
   CALL QuickStore("master")
 END IF 
 IF codema% <> oldcodema% THEN 
   REM oldcodema% = BuchCodeMA.master
   quickoldMAJahr$ = STR$ (oldcodema%,"000000") + jahr$
   quickMAJahr$ = STR$ (codema%,"000000") + jahr$
 ELSE 
   quickMAJahr$ = STR$ (codema%,"000000") + jahr$
 END IF 

 FILE "provisio"
 INDEX QuickCodeMAJahr.provisio
 SELECT FIRST 
 IF EXISTS (quickMAJahr$,QuickCodeMAJahr.provisio) THEN 
   SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
 ELSE 
   IF datum% = buchdat% THEN provalt% = 0
   BLANK FILE "provisio"
   CodePr.provisio = SER ("provisio",1)
   codema.provisio = codema%
   jahr.provisio = VAL (jahr$)
   QuickCodeMAJahr.provisio = STR$ (codema%,"000000") + jahr$
   CALL QuickStore("provisio")
 END IF 
 SELECT CASE art%
   CASE 2
     MSArt$ = "Rechnungen"
     mo% = VAL (monat$)
     feld$ = "Rec" + STR$ (mo%,"00")
     feldEU$ = "Rec" + STR$ (mo%,"00") + "EU"
     IF codema% = oldcodema% THEN 
       SELECT FIRST INDEX QuickCodeMAJahr.provisio
       SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
       IF buchdat% = datum% THEN 
         feld$$ = feld$$ + prov% - provalt%
         abtest% = feld$$
         ReGesJahr.provisio = REGesJahr.provisio + prov% - provalt%
         feldEU$$ = feldEU$$ + provEU% - provaltEU%
         abtesteu% = feldeu$$
         ReGesJahrEU.provisio = REGesJahrEU.provisio + provEU% - provaltEU%
         CALL QuickStore("provisio")
       ELSE 
         feld$$ = feld$$ + prov%
         ReGesJahr.provisio = REGesJahr.provisio + prov%
         feldEU$$ = feldEU$$ + provEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio + provEU%
         CALL QuickStore("provisio")
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY quickMAJahrOld$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         mo% = VAL (buchmonat$)
         feld$ = "Rec" + STR$ (mo%,"00")
         feld$$ = feld$$ - provalt%
         ReGesJahr.provisio = REGesJahr.provisio - provalt%
         feldEU$ = "Rec" + STR$ (mo%,"00") + "EU"
         ReGesJahrEU.provisio = REGesJahrEU.provisio - provaltEU%
         CALL QuickStore("provisio")
       END IF 
       FILE "vertrete"
       SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
       ReGesGes.vertrete = ReGesGes.vertrete + prov% - provalt%
       ReGesGesEu.vertrete = ReGesGesEU.vertrete + provEu% - provaltEu%
       CALL QuickStore("vertrete")
     ELSE 
       REM wenn Mitabrbeiterwechsel und Datumswechsel -> RÅckrechnen alte Provision
       SELECT FIRST INDEX QuickCodeMAJahr.provisio
       SELECT KEY quickoldMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
       IF buchdat% = datum% THEN 
         feld$$ = feld$$ - provalt%
         ReGesJahr.provisio = REGesJahr.provisio - provalt%
         feldEu$$ = feldEu$$ - provaltEu%
         ReGesJahrEu.provisio = REGesJahrEu.provisio - provaltEu%
         CALL QuickStore("provisio")
       ELSE 
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY qoldMAJahrOld$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         mo% = VAL (buchmonat$)
         feld$ = "Rec" + STR$ (mo%,"00")
         feld$$ = feld$$ - provalt%
         ReGesJahr.provisio = REGesJahr.provisio - provalt%
         feldEU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feldEU$$ = feldEU$$ - provaltEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio - provaltEU%
         CALL QuickStore("provisio")
       END IF 
       FILE "vertrete"
       SELECT KEY oldcodema% LOCK FILE "vertrete" INDEX codema.vertrete
       ReGesGes.vertrete = ReGesGes.vertrete - provalt%
       ReGesGesEu.vertrete = ReGesGesEu.vertrete - provaltEu%
       CALL QuickStore("vertrete")
       REM wenn Mitabrbeiterwechsel und Datumswechsel -> Berechnen neue Provision/neuer Mitarbeiter
       IF codema% <> 999 THEN 
         FILE "provisio"
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         feld$$ = feld$$ + prov%
         ReGesJahr.provisio = REGesJahr.provisio + prov%
         feldEu$$ = feldEu$$ + provEu%
         ReGesJahrEu.provisio = REGesJahrEu.provisio + provEu%
         CALL QuickStore("provisio")
         FILE "vertrete"
         SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
         ReGesGes.vertrete = ReGesGes.vertrete + prov%
         ReGesGesEU.vertrete = ReGesGesEU.vertrete + provEU%
         CALL QuickStore("vertrete")
       END IF 
     END IF 
   CASE 3
     MSArt$ = "Lieferscheine"
     mo% = VAL (monat$)
     feld$ = "Lie" + STR$ (mo%,"00")
     feldEU$ = "Lie" + STR$ (mo%,"00") + "EU"
     IF codema% = oldcodema% THEN 
       SELECT FIRST INDEX QuickCodeMAJahr.provisio
       SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
       IF buchdat% = datum% THEN 
         feld$$ = feld$$ + prov% - provalt%
         LieGesJahr.provisio = LieGesJahr.provisio + prov% - provalt%
         feldEU$$ = feldEU$$ + provEU% - provaltEU%
         LieGesJahrEU.provisio = LieGesJahrEU.provisio + provEU% - provaltEU%
         CALL QuickStore("provisio")
       ELSE 
         feld$$ = feld$$ + prov%
         LieGesJahr.provisio = LieGesJahr.provisio + prov%
         feldEU$$ = feldEU$$ + provEU%
         LieGesJahrEU.provisio = LieGesJahrEU.provisio + provEU%
         CALL QuickStore("provisio")
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY quickMAJahrOld$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         mo% = VAL (buchmonat$)
         feld$ = "Lie" + STR$ (mo%,"00")
         feld$$ = feld$$ - provalt%
         LieGesJahr.provisio = LieGesJahr.provisio - provalt%
         feldEU$ = "Lie" + STR$ (mo%,"00") + "EU"
         feldEU$$ = feldEU$$ - provaltEU%
         LieGesJahrEU.provisio = LieGesJahrEU.provisio - provaltEU%
         CALL QuickStore("provisio")
       END IF 
       FILE "vertrete"
       SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
       LieGesGes.vertrete = LieGesGes.vertrete + prov% - provalt%
       LieGesGesEU.vertrete = LieGesGesEU.vertrete + provEU% - provaltEU%
       CALL QuickStore("vertrete")
     ELSE 
       REM wenn Mitabrbeiterwechsel und Datumswechsel -> RÅckrechnen alte Provision
       SELECT FIRST INDEX QuickCodeMAJahr.provisio
       SELECT KEY quickoldMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
       IF buchdat% = datum% THEN 
         feld$$ = feld$$ - provalt%
         LieGesJahr.provisio = LieGesJahr.provisio - provalt%
         feldEU$$ = feldEU$$ - provaltEU%
         LieGesJahrEU.provisio = LieGesJahrEU.provisio - provaltEU%
         CALL QuickStore("provisio")
       ELSE 
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY qoldMAJahrOld$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         mo% = VAL (buchmonat$)
         feld$ = "Rec" + STR$ (mo%,"00")
         feld$$ = feld$$ - provalt%
         LieGesJahr.provisio = LieGesJahr.provisio - provalt%
         feldEU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feldEU$$ = feldEU$$ - provaltEU%
         LieGesJahrEU.provisio = LieGesJahrEU.provisio - provaltEU%
         CALL QuickStore("provisio")
       END IF 
       FILE "vertrete"
       SELECT KEY oldcodema% LOCK FILE "vertrete" INDEX codema.vertrete
       LieGesGes.vertrete = LieGesGes.vertrete - provalt%
       LieGesGesEU.vertrete = LieGesGesEU.vertrete - provaltEU%
       CALL QuickStore("vertrete")
       REM wenn Mitabrbeiterwechsel und Datumswechsel -> Berechnen neue Provision/neuer Mitarbeiter
       IF codema% <> 999 THEN 
         FILE "provisio"
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         feld$$ = feld$$ + prov%
         LieGesJahr.provisio = LieGesJahr.provisio + prov%
         feldEU$$ = feldEU$$ + provEU%
         LieGesJahrEU.provisio = LieGesJahrEU.provisio + provEU%
         CALL QuickStore("provisio")
         FILE "vertrete"
         SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
         LieGesGes.vertrete = LieGesGes.vertrete + prov%
         LieGesGesEU.vertrete = LieGesGesEU.vertrete + provEU%
         CALL QuickStore("vertrete")
       END IF 
     END IF 
   CASE 7
     MSArt$ = "Gutschriften"
     mo% = VAL (monat$)
     feld$ = "Gut" + STR$ (mo%,"00")
     feldEU$ = "Gut" + STR$ (mo%,"00") + "EU"
     IF codema% = oldcodema% THEN 
       SELECT FIRST INDEX QuickCodeMAJahr.provisio
       SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
       IF buchdat% = datum% THEN 
         feld$$ = feld$$ + prov% - provalt%
         GutGesJahr.provisio = GutGesJahr.provisio + prov% - provalt%
         feldEU$$ = feldEU$$ + provEU% - provaltEU%
         GutGesJahrEU.provisio = GutGesJahrEU.provisio + provEU% - provaltEU%
         REM Bei den Felder fÅr Rechnungen mu· die Gutschrift abgezogen werden
         feld1$ = "Rec" + STR$ (mo%,"00")
         feld1$$ = feld1$$ - prov% + provalt%
         ReGesJahr.provisio = REGesJahr.provisio - prov% + provalt%
         feld1EU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feld1EU$$ = feld1EU$$ - provEU% + provaltEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio - provEU% + provaltEU%
         CALL QuickStore("provisio")
       ELSE 
         feld$$ = feld$$ + prov%
         GutGesJahr.provisio = GutGesJahr.provisio + prov%
         feld1$ = "Rec" + STR$ (mo%,"00")
         feld1$$ = feld1$$ - prov%
         ReGesJahr.provisio = REGesJahr.provisio - prov%
         feldEU$$ = feldEU$$ + provEU%
         GutGesJahrEU.provisio = GutGesJahrEU.provisio + provEU%
         feld1EU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feld1EU$$ = feld1EU$$ - provEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio - provEU%
         CALL QuickStore("provisio")
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY quickMAJahrOld$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         mo% = VAL (buchmonat$)
         feld$ = "Gut" + STR$ (mo%,"00")
         feld$$ = feld$$ - provalt%
         GutGesJahr.provisio = GutGesJahr.provisio - provalt%
         feld1$ = "Rec" + STR$ (mo%,"00")
         feld1$$ = feld1$$ + provalt%
         ReGesJahr.provisio = ReGesJahr.provisio + provalt%

         feldEU$ = "Gut" + STR$ (mo%,"00") + "EU"
         feldEU$$ = feldEU$$ - provaltEU%
         GutGesJahrEU.provisio = GutGesJahrEU.provisio - provaltEU%
         feld1EU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feld1EU$$ = feld1EU$$ + provaltEU%
         ReGesJahrEU.provisio = ReGesJahrEU.provisio + provaltEU%
         CALL QuickStore("provisio")
       END IF 
       FILE "vertrete"
       SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
       GutGesGes.vertrete = GutGesGes.vertrete + prov% - provalt%
       ReGesGes.vertrete = ReGesGes.vertrete - prov% + provalt%

       GutGesGesEU.vertrete = GutGesGesEU.vertrete + provEU% - provaltEU%
       ReGesGesEU.vertrete = ReGesGesEU.vertrete - provEU% + provaltEU%
       CALL QuickStore("VERTRETE")
     ELSE 
       SELECT FIRST INDEX QuickCodeMAJahr.provisio
       SELECT KEY quickoldMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
       IF buchdat% = datum% THEN 
         feld$$ = feld$$ - provalt%
         GutGesJahr.provisio = GutGesJahr.provisio - provalt%
         feld1$ = "Rec" + STR$ (mo%,"00")
         feld1$$ = feld1$$ + provalt%
         ReGesJahr.provisio = REGesJahr.provisio + provalt%

         feldEU$$ = feldEU$$ - provaltEU%
         GutGesJahrEU.provisio = GutGesJahrEU.provisio - provaltEU%
         feld1EU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feld1EU$$ = feld1EU$$ + provaltEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio + provaltEU%
         CALL QuickStore("provisio")
       ELSE 
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY qoldMAJahrOld$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         feld$$ = feld$$ - provalt%
         GutGesJahr.provisio = GutGesJahr.provisio - provalt%
         feld1$ = "Rec" + STR$ (mo%,"00")
         feld1$$ = feld1$$ + provalt%
         ReGesJahr.provisio = REGesJahr.provisio + provalt%

         feldEU$$ = feldEU$$ - provaltEU%
         GutGesJahrEU.provisio = GutGesJahrEU.provisio - provaltEU%
         feld1EU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feld1EU$$ = feld1EU$$ + provaltEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio + provaltEU%
         CALL QuickStore("provisio")
       END IF 
       FILE "vertrete"
       SELECT KEY oldcodema% LOCK FILE "vertrete" INDEX codema.vertrete
       GutGesGes.vertrete = GutGesGes.vertrete - provalt%
       ReGesGes.vertrete = ReGesGes.vertrete + provalt%

       GutGesGesEU.vertrete = GutGesGesEU.vertrete - provaltEU%
       ReGesGesEU.vertrete = ReGesGesEU.vertrete + provaltEU%
       CALL QuickStore("VERTRETE")
 
       REM Berechnung der neuen Provision
       IF codema% <> 999 THEN 
         FILE "provisio"
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         feld$$ = feld$$ + prov%
         GutGesJahr.provisio = GutGesJahr.provisio + prov%

         feldEU$$ = feldEU$$ + provEU%
         GutGesJahrEU.provisio = GutGesJahrEU.provisio + provEU%
         REM Bei den Felder fÅr Rechnungen mu· die Gutschrift abgezogen werden
         feld1$ = "Rec" + STR$ (mo%,"00")
         feld1$$ = feld1$$ - prov%
         ReGesJahr.provisio = REGesJahr.provisio - prov%

         feld1EU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feld1EU$$ = feld1EU$$ - provEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio - provEU%
         CALL QuickStore("provisio")
         FILE "vertrete"
         SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
         GutGesGes.vertrete = GutGesGes.vertrete + prov%
         ReGesGes.vertrete = ReGesGes.vertrete - prov%

         GutGesGesEU.vertrete = GutGesGesEU.vertrete + provEU%
         ReGesGesEU.vertrete = ReGesGesEU.vertrete - provEU%
         CALL QuickStore("VERTRETE")
       END IF 
     END IF 
 END SELECT 
 FILE "einzprov"
 INDEX QuickMSSch.einzprov
 SELECT FIRST 
 quickMSSch$ = STR$ (codems%,"0000000") + "000000"
 IF NOT EXISTS (quickMSSch$,quickMSSch.einzprov) THEN 
   REM anlegen Masterkopfsatz
   BLANK FILE "einzprov"
   quickMSSch.einzprov = STR$ (codems%,"000000") + "000000"
 ELSE 
   SELECT KEY quickMSSch$ LOCK FILE "einzprov" INDEX quickMSSch.einzprov
 END IF 
 Codems.einzprov = codems%
 codesch.einzprov = 0
 ProvisProz.einzprov = ProvisProz.master
 ProvisDM.einzprov = ProvisDM.master

 ProvisEU.einzprov = ProvisEU.master
 Codeku.einzprov = Codeku.master
 Codema.einzprov = Codema.master
 Kundname.einzprov = Nachname.master
 Nummer.einzprov = Nummer.master
 Datum.einzprov = Datum.master
 Art.einzprov = Art.master
 GesamtNetto.einzprov = GesNetto.master
 GesamtBrutto.einzprov = GesBrutto.master

 GesNettoEU.einzprov = GesNettoEU.master
 GesBruttoEU.einzprov = GesBruttoEU.master

 SELECT KEY codema.master FILE "vertrete" INDEX codema.vertrete
 MAName.einzprov = Nachname.vertrete
 CALL QuickStore("einzprov")
 END IF 
 FILE "schein"
 INDEX codems.schein
 SELECT FIRST 
 SELECT KEY codems% FILE "schein" INDEX codems.schein
 WHILE NOT EOF ("schein") AND codems.schein = codems%
   codesch% = Codesch.schein
   ok% = 0
   IF ProvisDM.schein > 0 OR ProvisEU.schein > 0 THEN 
     IF NOT EXISTS (codesch%,codesch.einzprov) THEN 
       BLANK FILE "einzprov"
       quickMSSch.einzprov = STR$ (codems%,"000000") + STR$ (codesch%,"000000")
     ELSE 
       quickMSSch$ = STR$ (codems%,"000000") + STR$ (codesch%,"000000")
       SELECT KEY quickMSSch$ LOCK FILE "einzprov" INDEX quickMSSch.einzprov
     END IF 
     ok% = 1
   ELSE 
     IF EXISTS (codesch%,codesch.einzprov) THEN 
       quickMSSch$ = STR$ (codems%,"000000") + STR$ (codesch%,"000000")
       SELECT KEY quickMSSch$ LOCK FILE "einzprov" INDEX quickMSSch.einzprov
       ok% = 1
     END IF 
   END IF 
   IF ok% = 1 THEN 
     Codems.einzprov = codems%
     codesch.einzprov = codesch.schein
     ProvisProz.einzprov = ProvisProz.schein
     ProvisDM.einzprov = ProvisDM.schein
     ProvisEU.einzprov = ProvisEU.schein
     Codeku.einzprov = Codeku.master
     Codema.einzprov = Codema.schein
     Kundname.einzprov = Nachname.master
     Nummer.einzprov = Nummer.master
     Datum.einzprov = Datum.master
     Art.einzprov = Art.master
     GesamtNetto.einzprov = GesamtNetto.schein
     GesamtBrutto.einzprov = GesamtBrutto.schein
     GesNettoEU.einzprov = GesNettoEU.schein
     GesBruttoEU.einzprov = GesBruttoEU.schein
     Codear.einzprov = codear.schein
     Artikelnummer.einzprov = artikelnummer.schein
     Bezeichnung.einzprov = Bezeichnung.schein
     SELECT KEY codema.schein FILE "vertrete" INDEX codema.vertrete
     MAName.einzprov = Nachname.vertrete
     CALL QuickStore("einzprov")
 
     REM Aktualisierung aller Provisionsrechnungsfelder mit der Einzelprovision
     codema% = codema.schein
     provalt% = 0
     provaltEU% = 0
     Buchdat% = 0
     prov% = ProvisDM.schein
     provEU% = ProvisEU.schein
     IF BuchUms.master = "Y" THEN 
       provalt% = BuchProv.schein
       provaltEU% = BuchProvEU.schein
       Buchdat% = Buchdatum.master
       oldcodema% = BuchCodema.schein
       IF datum% <> Buchdat% THEN 
         buchdat$ = DATE$ (Buchdatum.master,"yyyymmdd")
         buchjahr$ = LEFT$ (buchdat$,4)
         buchmonat$ = MID$ (buchdat$,5,2)
         quickMAJahrold$ = STR$ (codema%,"000000") + buchjahr$
         qoldMAJahrold$ = STR$ (oldcodema%,"000000") + buchjahr$
       END IF 
     ELSE 
       buchdat% = datum%
       oldcodema% = codema%
     END IF 
     IF BuchUms.master = "Y" AND loe% = 1 THEN 
       prov% = Provisdm.schein * ( - 1)
       provalt% = 0
       provEU% = ProvisEU.schein * ( - 1)
       provaltEU% = 0
       Buchdat% = datum%
     ELSE 
       REM 030599
       SELECT KEY codesch% LOCK FILE "schein" INDEX codesch.schein
       BuchProv.schein = ProvisDM.schein
       BuchProvEU.schein = ProvisEU.schein
       BuchCodeMA.schein = CodeMA.schein
       CALL QuickStore("schein")
     END IF 
     REM SELECT KEY codesch% LOCK FILE "schein" INDEX codesch.schein
     quickMAJahr$ = STR$ (codema%,"000000") + jahr$
 
     IF codema% <> oldcodema% THEN 
       REM oldcodema% = BuchCodeMA.master
       quickoldMAJahr$ = STR$ (oldcodema%,"000000") + jahr$
     END IF 
 
     FILE "provisio"
     INDEX QuickCodeMAJahr.provisio
     SELECT FIRST 
     IF EXISTS (quickMAJahr$,QuickCodeMAJahr.provisio) THEN 
       SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
     ELSE 
       IF datum% = buchdat% THEN provalt% = 0
       BLANK FILE "provisio"
       CodePr.provisio = SER ("provisio",1)
       codema.provisio = codema%
       jahr.provisio = VAL (jahr$)
       QuickCodeMAJahr.provisio = STR$ (codema%,"000000") + jahr$
       CALL QuickStore("provisio")
     END IF 
 SELECT CASE art%
   CASE 2
     MSArt$ = "Rechnungen"
     mo% = VAL (monat$)
     feld$ = "Rec" + STR$ (mo%,"00")
     feldEU$ = "Rec" + STR$ (mo%,"00") + "EU"
     IF codema% = oldcodema% THEN 
       SELECT FIRST INDEX QuickCodeMAJahr.provisio
       SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
       IF buchdat% = datum% THEN 
         feld$$ = feld$$ + prov% - provalt%
         ReGesJahr.provisio = REGesJahr.provisio + prov% - provalt%
         feldEU$$ = feldEU$$ + provEU% - provaltEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio + provEU% - provaltEU%
         CALL QuickStore("provisio")
       ELSE 
         feld$$ = feld$$ + prov%
         ReGesJahr.provisio = REGesJahr.provisio + prov%
         feldEU$$ = feldEU$$ + provEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio + provEU%
         CALL QuickStore("provisio")
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY quickMAJahrOld$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         mo% = VAL (buchmonat$)
         feld$ = "Rec" + STR$ (mo%,"00")
         feld$$ = feld$$ - provalt%
         ReGesJahr.provisio = REGesJahr.provisio - provalt%

         feldEU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feldEU$$ = feldEU$$ - provaltEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio - provaltEU%
         CALL QuickStore("provisio")
       END IF 
       FILE "vertrete"
       SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
       ReGesGes.vertrete = ReGesGes.vertrete + prov% - provalt%
       ReGesGesEU.vertrete = ReGesGesEU.vertrete + prov% - provaltEU%
       CALL QuickStore("vertrete")
     ELSE 
       REM wenn Mitabrbeiterwechsel und Datumswechsel -> RÅckrechnen alte Provision
       SELECT FIRST INDEX QuickCodeMAJahr.provisio
       SELECT KEY quickoldMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
       IF buchdat% = datum% THEN 
         feld$$ = feld$$ - provalt%
         ReGesJahr.provisio = REGesJahr.provisio - provalt%
         feldEU$$ = feldEU$$ - provaltEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio - provaltEU%
         CALL QuickStore("provisio")
       ELSE 
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY qoldMAJahrOld$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         mo% = VAL (buchmonat$)
         feld$ = "Rec" + STR$ (mo%,"00")
         feld$$ = feld$$ - provalt%
         ReGesJahr.provisio = REGesJahr.provisio - provalt%
         feldEU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feldEU$$ = feldEU$$ - provaltEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio - provaltEU%
         CALL QuickStore("provisio")
       END IF 
       FILE "vertrete"
       SELECT KEY oldcodema% LOCK FILE "vertrete" INDEX codema.vertrete
       ReGesGes.vertrete = ReGesGes.vertrete - provalt%
       ReGesGesEU.vertrete = ReGesGesEU.vertrete - provaltEU%
       CALL QuickStore("vertrete")
       REM wenn Mitabrbeiterwechsel und Datumswechsel -> Berechnen neue Provision/neuer Mitarbeiter
       IF codema% <> 999 THEN 
         FILE "provisio"
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         feld$$ = feld$$ + prov%
         ReGesJahr.provisio = REGesJahr.provisio + prov%
         feldEU$$ = feldEU$$ + provEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio + provEU%
         CALL QuickStore("provisio")
         FILE "vertrete"
         SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
         ReGesGes.vertrete = ReGesGes.vertrete + prov%
         ReGesGesEU.vertrete = ReGesGesEU.vertrete + provEU%
         CALL QuickStore("vertrete")
       END IF 
     END IF 
   CASE 3
     MSArt$ = "Lieferscheine"
     mo% = VAL (monat$)
     feld$ = "Lie" + STR$ (mo%,"00")
     IF codema% = oldcodema% THEN 
       SELECT FIRST INDEX QuickCodeMAJahr.provisio
       SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
       IF buchdat% = datum% THEN 
         feld$$ = feld$$ + prov% - provalt%
         LieGesJahr.provisio = LieGesJahr.provisio + prov% - provalt%
         feldEU$$ = feldEU$$ + provEU% - provaltEU%
         LieGesJahrEU.provisio = LieGesJahrEU.provisio + provEU% - provaltEU%
         CALL QuickStore("provisio")
       ELSE 
         feld$$ = feld$$ + prov%
         LieGesJahr.provisio = LieGesJahr.provisio + prov%
         feldEU$$ = feldEU$$ + provEU%
         LieGesJahrEU.provisio = LieGesJahrEU.provisio + provEU%
         CALL QuickStore("provisio")
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY quickMAJahrOld$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         mo% = VAL (buchmonat$)
         feld$ = "Lie" + STR$ (mo%,"00")
         feld$$ = feld$$ - provalt%
         LieGesJahr.provisio = LieGesJahr.provisio - provalt%
         feldEU$ = "Lie" + STR$ (mo%,"00") + "EU"
         feldEU$$ = feldEU$$ - provaltEU%
         LieGesJahrEU.provisio = LieGesJahrEU.provisio - provaltEU%
         CALL QuickStore("provisio")
       END IF 
       FILE "vertrete"
       SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
       LieGesGes.vertrete = LieGesGes.vertrete + prov% - provalt%
       LieGesGesEU.vertrete = LieGesGesEU.vertrete + provEU% - provaltEU%
       CALL QuickStore("vertrete")
     ELSE 
       REM wenn Mitabrbeiterwechsel und Datumswechsel -> RÅckrechnen alte Provision
       SELECT FIRST INDEX QuickCodeMAJahr.provisio
       SELECT KEY quickoldMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
       IF buchdat% = datum% THEN 
         feld$$ = feld$$ - provalt%
         LieGesJahr.provisio = LieGesJahr.provisio - provalt%
         feldEU$$ = feldEU$$ - provaltEU%
         LieGesJahrEU.provisio = LieGesJahrEU.provisio - provaltEU%
         CALL QuickStore("provisio")
       ELSE 
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY qoldMAJahrOld$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         mo% = VAL (buchmonat$)
         feld$ = "Rec" + STR$ (mo%,"00")
         feld$$ = feld$$ - provalt%
         LieGesJahr.provisio = LieGesJahr.provisio - provalt%
         feldEU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feldEU$$ = feldEU$$ - provaltEU%
         LieGesJahrEU.provisio = LieGesJahrEU.provisio - provaltEU%
         CALL QuickStore("provisio")
       END IF 
       FILE "vertrete"
       SELECT KEY oldcodema% LOCK FILE "vertrete" INDEX codema.vertrete
       LieGesGes.vertrete = LieGesGes.vertrete - provalt%
       LieGesGesEU.vertrete = LieGesGesEU.vertrete - provaltEU%
       CALL QuickStore("vertrete")
       REM wenn Mitabrbeiterwechsel und Datumswechsel -> Berechnen neue Provision/neuer Mitarbeiter
       IF codema% <> 999 THEN 
         FILE "provisio"
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         feld$$ = feld$$ + prov%
         LieGesJahr.provisio = LieGesJahr.provisio + prov%
         feldEU$$ = feldEU$$ + provEU%
         LieGesJahrEU.provisio = LieGesJahrEU.provisio + provEU%
         CALL QuickStore("provisio")
         FILE "vertrete"
         SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
         LieGesGes.vertrete = LieGesGes.vertrete + prov%
         LieGesGesEU.vertrete = LieGesGesEU.vertrete + provEU%
         CALL QuickStore("vertrete")
       END IF 
     END IF 
   CASE 7
     MSArt$ = "Gutschriften"
     mo% = VAL (monat$)
     feld$ = "Gut" + STR$ (mo%,"00")
     IF codema% = oldcodema% THEN 
       SELECT FIRST INDEX QuickCodeMAJahr.provisio
       SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
       IF buchdat% = datum% THEN 
         feld$$ = feld$$ + prov% - provalt%
         GutGesJahr.provisio = GutGesJahr.provisio + prov% - provalt%
         feldEU$$ = feldEU$$ + provEU% - provaltEU%
         GutGesJahrEU.provisio = GutGesJahrEU.provisio + provEU% - provaltEU%
         REM Bei den Felder fÅr Rechnungen mu· die Gutschrift abgezogen werden
         feld1$ = "Rec" + STR$ (mo%,"00")
         feld1$$ = feld1$$ - prov% + provalt%
         ReGesJahr.provisio = REGesJahr.provisio - prov% + provalt%
         feld1EU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feld1EU$$ = feld1EU$$ - provEU% + provaltEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio - provEU% + provaltEU%
         CALL QuickStore("provisio")
       ELSE 
         feld$$ = feld$$ + prov%
         GutGesJahr.provisio = GutGesJahr.provisio + prov%
         feld1$ = "Rec" + STR$ (mo%,"00")
         feld1$$ = feld1$$ - prov%
         ReGesJahr.provisio = REGesJahr.provisio - prov%

         feldEU$$ = feldEU$$ + provEU%
         GutGesJahrEU.provisio = GutGesJahrEU.provisio + provEU%
         feld1EU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feld1EU$$ = feld1EU$$ - provEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio - provEU%
         CALL QuickStore("provisio")
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY quickMAJahrOld$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         mo% = VAL (buchmonat$)
         feld$ = "Gut" + STR$ (mo%,"00")
         feld$$ = feld$$ - provalt%
         GutGesJahr.provisio = GutGesJahr.provisio - provalt%
         feld1$ = "Rec" + STR$ (mo%,"00")
         feld1$$ = feld1$$ + provalt%
         ReGesJahr.provisio = ReGesJahr.provisio + provalt%

         feldEU$ = "Gut" + STR$ (mo%,"00") + "EU"
         feldEU$$ = feldEU$$ - provaltEU%
         GutGesJahrEU.provisio = GutGesJahrEU.provisio - provaltEU%
         feld1EU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feld1EU$$ = feld1EU$$ + provaltEU%
         ReGesJahrEU.provisio = ReGesJahrEU.provisio + provaltEU%
         CALL QuickStore("provisio")
       END IF 
       FILE "vertrete"
       SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
       GutGesGes.vertrete = GutGesGes.vertrete + prov% - provalt%
       ReGesGes.vertrete = ReGesGes.vertrete - prov% + provalt%

       GutGesGesEU.vertrete = GutGesGesEU.vertrete + provEU% - provaltEU%
       ReGesGesEU.vertrete = ReGesGesEU.vertrete - provEU% + provaltEU%
       CALL QuickStore("VERTRETE")
     ELSE 
       SELECT FIRST INDEX QuickCodeMAJahr.provisio
       SELECT KEY quickoldMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
       IF buchdat% = datum% THEN 
         feld$$ = feld$$ - provalt%
         GutGesJahr.provisio = GutGesJahr.provisio - provalt%
         feld1$ = "Rec" + STR$ (mo%,"00")
         feld1$$ = feld1$$ + provalt%
         ReGesJahr.provisio = REGesJahr.provisio + provalt%

         feldEU$$ = feldEU$$ - provaltEU%
         GutGesJahrEU.provisio = GutGesJahrEU.provisio - provaltEU%
         feld1EU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feld1EU$$ = feld1EU$$ + provaltEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio + provaltEU%
         CALL QuickStore("provisio")
       ELSE 
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY qoldMAJahrOld$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         feld$$ = feld$$ - provalt%
         GutGesJahr.provisio = GutGesJahr.provisio - provalt%
         feld1$ = "Rec" + STR$ (mo%,"00")
         feld1$$ = feld1$$ + provalt%
         ReGesJahr.provisio = REGesJahr.provisio + provalt%

         feldEU$$ = feldEU$$ - provaltEU%
         GutGesJahrEU.provisio = GutGesJahrEU.provisio - provaltEU%
         feld1EU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feld1EU$$ = feld1EU$$ + provaltEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio + provaltEU%
         CALL QuickStore("provisio")
       END IF 
       FILE "vertrete"
       SELECT KEY oldcodema% LOCK FILE "vertrete" INDEX codema.vertrete
       GutGesGes.vertrete = GutGesGes.vertrete - provalt%
       ReGesGes.vertrete = ReGesGes.vertrete + provalt%

       GutGesGesEU.vertrete = GutGesGesEU.vertrete - provaltEU%
       ReGesGesEU.vertrete = ReGesGesEU.vertrete + provaltEU%
       CALL QuickStore("VERTRETE")
 
       REM Berechnung der neuen Provision
       IF codema% <> 999 THEN 
         FILE "provisio"
         SELECT FIRST INDEX QuickCodeMAJahr.provisio
         SELECT KEY quickMAJahr$ LOCK FILE "provisio" INDEX QuickCodeMAJahr.provisio
         feld$$ = feld$$ + prov%
         GutGesJahr.provisio = GutGesJahr.provisio + prov%

         feldEU$$ = feldEU$$ + provEU%
         GutGesJahrEU.provisio = GutGesJahrEU.provisio + provEU%
         REM Bei den Felder fÅr Rechnungen mu· die Gutschrift abgezogen werden
         feld1$ = "Rec" + STR$ (mo%,"00")
         feld1$$ = feld1$$ - prov%
         ReGesJahr.provisio = REGesJahr.provisio - prov%

         feld1EU$ = "Rec" + STR$ (mo%,"00") + "EU"
         feld1EU$$ = feld1EU$$ - provEU%
         ReGesJahrEU.provisio = REGesJahrEU.provisio - provEU%
         CALL QuickStore("provisio")
         FILE "vertrete"
         SELECT KEY codema% LOCK FILE "vertrete" INDEX codema.vertrete
         GutGesGes.vertrete = GutGesGes.vertrete + prov%
         ReGesGes.vertrete = ReGesGes.vertrete - prov%

         GutGesGesEU.vertrete = GutGesGesEU.vertrete + provEU%
         ReGesGesEU.vertrete = ReGesGesEU.vertrete - provEU%
         CALL QuickStore("VERTRETE")
       END IF 
     END IF 
   END SELECT 
   REM Ende der Aktualisierung der Prov.rechnungsfelder
   END IF 
   FILE "schein"
   SELECT NEXT FILE "schein" INDEX codems.schein
 WEND 
 SELECT WHERE FILE "provisio"
 SELECT WHERE FILE "vertrete"
 END SUB 
 
 
 
 REM **** Aktualisierung der Umsatzdatei und der Gesamtfelder in der Adressdatei
 REM loe%=0 Neueintrag / loe%=1 dann Lîschung eines CodeMS
 
SUB UmsFuelEinzel(Codems%,loe%)
 REM CALL Fehler("UmsFuelEinzel","")
 CALL DFile(3,"einzprov" + _fpw$)
 cums% = codems%
 REM **** Aktualisierung der Einzelprovi,Provisio und der Gesamtfelder in Vertrete
 CALL ProvFuelEinzel(cums%,loe%)
 FILE "master"
 REM **** Aktualisierung der Umsatzdatei und der Gesamtfelder in der Adressdatei
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 datum$ = DATE$ (datum.master,"yyyymmdd")
 datum% = datum.master
 jahr$ = LEFT$ (datum$,4)
 monat$ = MID$ (datum$,5,2)
 mo% = VAL (monat$)
 art% = art.master
 codeku% = codeku.master
 codeku1% = codeku%
 gesbruttoalt% = 0
 gesbruttoaltEU% = 0
 Buchdat% = 0
 gesbrutto% = gesBrutto.master
 gesbruttoEU% = gesBruttoEU.master
 IF loe% = 1 AND BuchUms.master <> "Y" THEN END SUB 
 IF BuchUms.master = "Y" THEN 
   gesbruttoalt% = BuchBrutto.master
   gesbruttoaltEU% = BuchBruttoEU.master
   Buchdat% = Buchdatum.master
   IF datum% <> Buchdat% THEN 
     buchdat$ = DATE$ (Buchdatum.master,"yyyymmdd")
     buchjahr$ = LEFT$ (buchdat$,4)
     buchmonat$ = MID$ (buchdat$,5,2)
     quickKuJahrold$ = STR$ (codeku%,"000000") + buchjahr$
   END IF 
 ELSE 
   buchdat% = datum%
 END IF 
 IF BuchUms.master = "Y" AND loe% = 1 THEN 
   gesbrutto% = gesBrutto.master * ( - 1)
   gesbruttoalt% = 0
   gesbruttoEU% = gesBruttoEU.master * ( - 1)
   gesbruttoaltEU% = 0
   Buchdat% = datum%
 ELSE 
   BuchUms.master = "Y"
   BuchBrutto.master = GesBrutto.master
   BuchBrutto1% = GesBrutto.master
   BuchBruttoEU.master = GesBruttoEU.master
   BuchBruttoEU1% = GesBruttoEU.master
   Buchdatum.master = datum%
   Workstation.MASTER = Workstation%
   QWoNo.MASTER = STR$ (Workstation%,"000000") + STR$ (codems.MASTER,"000000")
   RecStatus.MASTER = "c"
   STORE FILE "master"
   UNLOCK CURRENT FILE "master"
 END IF 
 quickKuJahr$ = STR$ (codeku%,"000000") + jahr$
 FILE "umsatz"
 INDEX QuickCodekuJahr.umsatz
 SELECT FIRST 
 IF EXISTS (quickKuJahr$,QuickCodekuJahr.umsatz) THEN 
   SELECT KEY quickKuJahr$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
 ELSE 
   IF datum% = buchdat% THEN 
     gesbruttoalt% = 0
     gesbruttoaltEU% = 0
   END IF 
   BLANK FILE "umsatz"
   CodeUm.umsatz = SER ("umsatz",1)
   codeku.umsatz = codeku1%
   jahr.umsatz = VAL (jahr$)
   QuickCodekuJahr.umsatz = STR$ (codeku1%,"000000") + jahr$
   CALL QuickStore("umsatz")
 END IF 
 SELECT CASE art%
   CASE 1
     MSArt$ = "Angebote"
     mo% = VAL (monat$)
     feld$ = "Ang" + STR$ (mo%,"00")
     feldEU$ = "Ang" + STR$ (mo%,"00") + "EU"
     SELECT FIRST INDEX QuickCodekuJahr.umsatz
     SELECT KEY quickKuJahr$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
     IF buchdat% = datum% THEN 
       feld$$ = feld$$ + gesbrutto% - gesbruttoalt%
       AngGesJahr.umsatz = AngGesJahr.umsatz + gesbrutto% - gesbruttoalt%
       feldEU$$ = feldEU$$ + gesbruttoEU% - gesbruttoaltEU%
       AngGesJahrEU.umsatz = AngGesJahrEU.umsatz + gesbruttoEU% - gesbruttoaltEU%
       CALL QuickStore("umsatz")
     ELSE 
       feld$$ = feld$$ + gesbrutto%
       AngGesJahr.umsatz = AngGesJahr.umsatz + gesbrutto%
       feldEU$$ = feldEU$$ + gesbruttoEU%
       AngGesJahrEU.umsatz = AngGesJahrEU.umsatz + gesbruttoEU%
       CALL QuickStore("umsatz")
       SELECT FIRST INDEX QuickCodekuJahr.umsatz
       SELECT KEY quickKuJahrOld$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
       mo% = VAL (buchmonat$)
       feld$ = "Ang" + STR$ (mo%,"00")
       feld$$ = feld$$ - gesbruttoalt%
       AngGesJahr.umsatz = AngGesJahr.umsatz - gesbruttoalt%
       feldEU$ = "Ang" + STR$ (mo%,"00") + "EU"
       feldEU$$ = feldEU$$ - gesbruttoaltEU%
       AngGesJahrEU.umsatz = AngGesJahrEU.umsatz - gesbruttoaltEU%
       CALL QuickStore("umsatz")
     END IF 
     FILE "adressen"
     SELECT FIRST FILE "adressen" INDEX codeku.adressen
     SELECT KEY codeku1% LOCK FILE "adressen" INDEX codeku.adressen
     AngGesGes.adressen = AngGesGes.adressen + gesbrutto% - gesbruttoalt%
     AngGesGesEU.adressen = AngGesGesEU.adressen + gesbruttoEU% - gesbruttoaltEU%
     Workstation.ADRESSEN = Workstation%
     QWoNo.ADRESSEN = STR$ (Workstation%,"000000") + STR$ (CodeKU.ADRESSEN,"000000")
     RecStatus.ADRESSEN = "c"
     CALL QuickStore("adressen")
   CASE 2
     MSArt$ = "Rechnungen"
     mo% = VAL (monat$)
     feld$ = "Rec" + STR$ (mo%,"00") + ".umsatz"
     feldEU$ = "Rec" + STR$ (mo%,"00") + "EU" + ".umsatz"
     SELECT FIRST INDEX QuickCodekuJahr.umsatz
     SELECT KEY quickKuJahr$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
     IF buchdat% = datum% THEN 
       feld$$ = feld$$ + gesbrutto% - gesbruttoalt%
       ReGesJahr.umsatz = REGesJahr.umsatz + gesbrutto% - gesbruttoalt%
       ReGesJahr% = ReGesJahr.umsatz
       feldEU$$ = feldEU$$ + gesbruttoEU% - gesbruttoaltEU%
       ReGesJahrEU.umsatz = REGesJahrEU.umsatz + gesbruttoEU% - gesbruttoaltEU%
       ReGesJahreu% = ReGesJahreu.umsatz
       CALL QuickStore("umsatz")
     ELSE 
       feld$$ = feld$$ + gesbrutto%
       ReGesJahr.umsatz = REGesJahr.umsatz + gesbrutto%
       feldEU$$ = feldEU$$ + gesbruttoEU%
       ReGesJahrEU.umsatz = REGesJahrEU.umsatz + gesbruttoEU%
       CALL QuickStore("umsatz")
       SELECT FIRST INDEX QuickCodekuJahr.umsatz
       SELECT KEY quickKuJahrOld$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
       mo% = VAL (buchmonat$)
       feld$ = "Rec" + STR$ (mo%,"00")
       feld$$ = feld$$ - gesbruttoalt%
       ReGesJahr.umsatz = REGesJahr.umsatz - gesbruttoalt%
       feldEU$ = "Rec" + STR$ (mo%,"00") + "EU"
       feldEU$$ = feldEU$$ - gesbruttoaltEU%
       ReGesJahrEU.umsatz = REGesJahrEU.umsatz - gesbruttoaltEU%
       CALL QuickStore("umsatz")
     END IF 
     FILE "adressen"
     SELECT FIRST FILE "adressen" INDEX codeku.adressen
     SELECT KEY codeku1% LOCK FILE "adressen" INDEX codeku.adressen
     ReGesGes.adressen = ReGesGes.adressen + gesbrutto% - gesbruttoalt%
     ReGesGesEU.adressen = ReGesGesEU.adressen + gesbruttoEU% - gesbruttoaltEU%
     CALL QuickStore("adressen")
   CASE 3
     MSArt$ = "Lieferscheine"
     mo% = VAL (monat$)
     mo% = VAL (monat$)
     feld$ = "Lie" + STR$ (mo%,"00")
     feldEU$ = "Lie" + STR$ (mo%,"00") + "EU"
     SELECT FIRST INDEX QuickCodekuJahr.umsatz
     SELECT KEY quickKuJahr$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
     IF buchdat% = datum% THEN 
       feld$$ = feld$$ + gesbrutto% - gesbruttoalt%
       LieGesJahr.umsatz = LieGesJahr.umsatz + gesbrutto% - gesbruttoalt%
       feldEU$$ = feldEU$$ + gesbruttoEU% - gesbruttoaltEU%
       LieGesJahrEU.umsatz = LieGesJahrEU.umsatz + gesbruttoEU% - gesbruttoaltEU%
       CALL QuickStore("umsatz")
     ELSE 
       feld$$ = feld$$ + gesbrutto%
       LieGesJahr.umsatz = LieGesJahr.umsatz + gesbrutto%
       feldEU$$ = feldEU$$ + gesbruttoEU%
       LieGesJahrEU.umsatz = LieGesJahrEU.umsatz + gesbruttoEU%
       CALL QuickStore("umsatz")
       SELECT FIRST INDEX QuickCodekuJahr.umsatz
       SELECT KEY quickKuJahrOld$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
       mo% = VAL (buchmonat$)
       feld$ = "Lie" + STR$ (mo%,"00")
       feld$$ = feld$$ - gesbruttoalt%
       LieGesJahr.umsatz = LieGesJahr.umsatz - gesbruttoalt%
       feldEU$ = "Lie" + STR$ (mo%,"00") + "EU"
       feldEU$$ = feldEU$$ - gesbruttoaltEU%
       LieGesJahrEU.umsatz = LieGesJahrEU.umsatz - gesbruttoaltEU%
       CALL QuickStore("umsatz")
     END IF 
     FILE "adressen"
     SELECT FIRST FILE "adressen" INDEX codeku.adressen
     SELECT KEY codeku1% LOCK FILE "adressen" INDEX codeku.adressen
     LieGesGes.adressen = LieGesGes.adressen + gesbrutto% - gesbruttoalt%
     LieGesGesEU.adressen = LieGesGesEU.adressen + gesbruttoEU% - gesbruttoaltEU%
     CALL DFile(2,"OFFICE\TELEFON" + _fpw$)
     CALL QuickStore("adressen")
   CASE 4
     MSArt$ = "AuftrÑge"
     mo% = VAL (monat$)
     feld$ = "Auf" + STR$ (mo%,"00")
     feldEU$ = "Auf" + STR$ (mo%,"00") + "EU"
     SELECT FIRST INDEX QuickCodekuJahr.umsatz
     SELECT KEY quickKuJahr$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
     IF buchdat% = datum% THEN 
       feld$$ = feld$$ + gesbrutto% - gesbruttoalt%
       AufGesJahr.umsatz = AufGesJahr.umsatz + gesbrutto% - gesbruttoalt%
       feldEU$$ = feldEU$$ + gesbruttoEU% - gesbruttoaltEU%
       AufGesJahrEU.umsatz = AufGesJahrEU.umsatz + gesbruttoEU% - gesbruttoaltEU%
       CALL QuickStore("umsatz")
     ELSE 
       feld$$ = feld$$ + gesbrutto%
       AufGesJahr.umsatz = AufGesJahr.umsatz + gesbrutto%
       feldEU$$ = feldEU$$ + gesbruttoEU%
       AufGesJahrEU.umsatz = AufGesJahrEU.umsatz + gesbruttoEU%
       CALL QuickStore("umsatz")
       SELECT FIRST INDEX QuickCodekuJahr.umsatz
       SELECT KEY quickKuJahrOld$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
       mo% = VAL (buchmonat$)
       feld$ = "Auf" + STR$ (mo%,"00")
       feld$$ = feld$$ - gesbruttoalt%
       AufGesJahr.umsatz = AufGesJahr.umsatz - gesbruttoalt%
       feldEU$ = "Auf" + STR$ (mo%,"00") + "EU"
       feldEU$$ = feldEU$$ - gesbruttoaltEU%
       AufGesJahrEU.umsatz = AufGesJahrEU.umsatz - gesbruttoaltEU%
       CALL QuickStore("umsatz")
     END IF 
     FILE "adressen"
     SELECT FIRST FILE "adressen" INDEX codeku.adressen
     SELECT KEY codeku1% LOCK FILE "adressen" INDEX codeku.adressen
     AufGesGes.adressen = AufGesGes.adressen + gesbrutto% - gesbruttoalt%
     AufGesGesEU.adressen = AufGesGesEU.adressen + gesbruttoEU% - gesbruttoaltEU%
     CALL QuickStore("adressen")
   CASE 5
     MSArt$ = "Bestellungen"
     mo% = VAL (monat$)
     feld$ = "Bes" + STR$ (mo%,"00")
     feldEU$ = "Bes" + STR$ (mo%,"00") + "EU"
     SELECT FIRST INDEX QuickCodekuJahr.umsatz
     SELECT KEY quickKuJahr$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
     IF buchdat% = datum% THEN 
       feld$$ = feld$$ + gesbrutto% - gesbruttoalt%
       BesGesJahr.umsatz = BesGesJahr.umsatz + gesbrutto% - gesbruttoalt%
       feldEU$$ = feldEU$$ + gesbruttoEU% - gesbruttoaltEU%
       BesGesJahrEU.umsatz = BesGesJahrEU.umsatz + gesbruttoEU% - gesbruttoaltEU%
       CALL QuickStore("umsatz")
     ELSE 
       feld$$ = feld$$ + gesbrutto%
       BesGesJahr.umsatz = BesGesJahr.umsatz + gesbrutto%
       feldEU$$ = feldEU$$ + gesbruttoEU%
       BesGesJahrEU.umsatz = BesGesJahrEU.umsatz + gesbruttoEU%
       CALL QuickStore("umsatz")
       SELECT FIRST INDEX QuickCodekuJahr.umsatz
       SELECT KEY quickKuJahrOld$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
       mo% = VAL (buchmonat$)
       feld$ = "Bes" + STR$ (mo%,"00")
       feld$$ = feld$$ - gesbruttoalt%
       BesGesJahr.umsatz = BesGesJahr.umsatz - gesbruttoalt%
       feldEU$ = "Bes" + STR$ (mo%,"00") + "EU"
       feldEU$$ = feldEU$$ - gesbruttoaltEU%
       BesGesJahrEU.umsatz = BesGesJahrEU.umsatz - gesbruttoaltEU%
       CALL QuickStore("umsatz")
     END IF 
     FILE "adressen"
     SELECT FIRST FILE "adressen" INDEX codeku.adressen
     SELECT KEY codeku1% LOCK FILE "adressen" INDEX codeku.adressen
     BesGesGes.adressen = BesGesGes.adressen + gesbrutto% - gesbruttoalt%
     BesGesGesEU.adressen = BesGesGesEU.adressen + gesbruttoEU% - gesbruttoaltEU%
     CALL QuickStore("adressen")
   CASE 7
     MSArt$ = "Gutschriften"
     mo% = VAL (monat$)
     feld$ = "Gut" + STR$ (mo%,"00")
     feldEU$ = "Gut" + STR$ (mo%,"00") + "EU"
     SELECT FIRST INDEX QuickCodekuJahr.umsatz
     SELECT KEY quickKuJahr$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
     IF buchdat% = datum% THEN 
       feld$$ = feld$$ + gesbrutto% - gesbruttoalt%
       GutGesJahr.umsatz = GutGesJahr.umsatz + gesbrutto% - gesbruttoalt%
       feldEU$$ = feldEU$$ + gesbruttoEU% - gesbruttoaltEU%
       GutGesJahrEU.umsatz = GutGesJahrEU.umsatz + gesbruttoEU% - gesbruttoaltEU%
       CALL QuickStore("UMSATZ")
     ELSE 
       feld$$ = feld$$ + gesbrutto%
       GutGesJahr.umsatz = GutGesJahr.umsatz + gesbrutto%
       feldEU$$ = feldEU$$ + gesbruttoEU%
       GutGesJahrEU.umsatz = GutGesJahrEU.umsatz + gesbruttoEU%
       CALL QuickStore("UMSATZ")
       SELECT FIRST INDEX QuickCodekuJahr.umsatz
       SELECT KEY quickKuJahrOld$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
       mo% = VAL (buchmonat$)
       feld$ = "Gut" + STR$ (mo%,"00")
       feld$$ = feld$$ - gesbruttoalt%
       GutGesJahr.umsatz = GutGesJahr.umsatz - gesbruttoalt%
       feldEU$ = "Gut" + STR$ (mo%,"00") + "EU"
       feldEU$$ = feldEU$$ - gesbruttoaltEU%
       GutGesJahrEU.umsatz = GutGesJahrEU.umsatz - gesbruttoaltEU%
       CALL QuickStore("UMSATZ")
     END IF 
     FILE "adressen"
     SELECT FIRST FILE "adressen" INDEX codeku.adressen
     SELECT KEY codeku1% LOCK FILE "adressen" INDEX codeku.adressen
     GutGesGes.adressen = GutGesGes.adressen + gesbrutto% - gesbruttoalt%
     GutGesGesEU.adressen = GutGesGesEU.adressen + gesbruttoEU% - gesbruttoaltEU%
     CALL QuickStore("adressen")
 END SELECT 
 END SUB 
 
 
 
 REM ------- automatische Erzeugung und Ausdruck von Scheinen (liefer/Rechnung) -------
 REM param%=0, dann Generierung von Scheinen aus LieferrÅckstÑnden
 REM param%=1, dann periodische Scheine
 
SUB ScheinGenerator(parm%)
 CALL DFile(3,"ABZUGANG" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"GRUPPEN" + _fpw$)
 CALL DFile(3,"Liefruck" + _fpw$)
 CALL DFile(3,"schein" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"VERTRETE" + _fpw$)
 CALL DFile(3,"master" + _fpw$)
 CALL DFile(3,"floskel" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 REM 1. Soll die Generierung gestartet werden
 REM 2. nur Rechnung, nur Lieferschein, Rechnung+Lieferschein erzeugen ? UmsÑtze generieren !!!
 REM 3. Ausgabe auf nur Drucker, nur Bildschirm, auf Bildschirm+Drucker
 REM 4. Generierung der Scheine lieferzugang=y, wenn rÅckerledigt<>y dann lieferzugang="n" setzen 
 REM 5. Ausgabe einer Liste (in extra Datei) der Kunden und Scheinnummern+Scrollauswahl
 REM 6. Lîschen der SÑtze in Liefruck wo lieferzugang=y und rÅckerledigt=y
 IF param% = 0 THEN 
   REQUEST "Soll die Generierung von Lieferscheinen oder/und","Rechnungen gestartet werden?",130,req%
   IF req% <> 1 THEN END SUB 
   zugopt% = 1
   ziel% = 2
    CREATE DIALOG "SGENER",0,0,118,183,"Generierung von Lieferscheine/Rechnungen","MS Sans Serif",8
    ADD DIALOG "SGENER",4,0,0,118,39,0,"Einzelbelege/Sammelbelege?"
    ADD DIALOG "SGENER",3,6,14,108,10,0,"Einzelbelege",1,einzel%
    ADD DIALOG "SGENER",3,6,25,108,10,0,"Sammelbelege",0,einzel%
    ADD DIALOG "SGENER",4,0,41,118,54,0,"Was soll generiert werden?"
    ADD DIALOG "SGENER",3,6,54,108,10,0,"Lieferschein",3,zugopt%
    ADD DIALOG "SGENER",3,6,65,108,10,0,"Rechnung",2,zugopt%
    ADD DIALOG "SGENER",3,6,79,108,10,0,"Lieferschein und Rechnung",1,zugopt%
    ADD DIALOG "SGENER",4,0,100,118,54,0,"Ausgabeziel? "
    ADD DIALOG "SGENER",3,6,114,107,10,0,"Drucker mit Repotgenerator",1,ziel%
    ADD DIALOG "SGENER",3,6,126,100,10,0,"Drucker Åber MS WinWord",3,ziel%
    ADD DIALOG "SGENER",3,6,137,108,10,0,"Bildschirm Åber MS WinWord",2,ziel%
    ADD DIALOG "SGENER",1,2,164,56,16,1,"&OK",1,1
    ADD DIALOG "SGENER",1,60,164,54,16,0,"&Abbrechen",0,0
   DIALOG "SGENER",reqzu%
   REMOVE DIALOG "SGENER"
   IF reqzu% = 1 THEN 
     IF einzel% = 1 THEN CALL ScheinEinzelGen(zugopt%,ziel%)
     IF einzel% = 0 THEN CALL ScheinSammelGen(zugopt%,ziel%)
   END IF 
 END IF 
 END SUB 
 
 
SUB ScheinEinzelGen(zugopt%,ziel%)
     REM -----------Lieferscheine erzeugen----------------
     FILE "liefruck"
     INDEX lieferzugang.liefruck
     SELECT FIRST 
     lieferzu$ = "Y"
     IF EXISTS (lieferzu$,lieferzugang.liefruck) THEN 
       SELECT KEY lieferzu$ LOCK FILE "liefruck" INDEX lieferzugang.liefruck
     ELSE 
       SELECT LAST 
     END IF 
     WHILE NOT EOF ("liefruck") AND lieferzugang.liefruck = "Y" AND vorgangerledigt.liefruck <> "Y"
       codems% = Codems.liefruck
       codelr% = codelr.liefruck
       IF EXISTS (codems%,codems.master) THEN 
         FILE "floskel"
         SELECT WHERE art.floskel = 1 AND spezial.floskel = 8
         SELECT FIRST 
         IF NOT EOF ("floskel") THEN 
           prolog$ = floskel.floskel
         END IF 
         SELECT WHERE art.floskel = 2 AND spezial.floskel = 8
         SELECT FIRST 
         IF NOT EOF ("floskel") THEN 
           epilog$ = floskel.floskel
         END IF 
 
         FILE "master"
         SELECT KEY codems% FILE "master" INDEX codems.master
         MSArt% = Art.master
         kalk% = Kalkart.master
         titel$ = titel.master
         BLANK DUPLICATE 
         CALL QuickStore("master")
         SELECT KEY codems% LOCK FILE "master" INDEX codems.master
         cums% = SER ("MASTER",1)
         cumslief% = cums%
         CodeMS.MASTER = cums%
         datum.master = TODAY 
         BuchBrutto.master = 0:BuchUms.master = "":BuchDatum.master = 0:Codedok.master = 0:StatusM.master = "":SkontoProz.master = 0:SkontoZiel.master = 0:Codeang.master = 0
         CodeLiefer.master = 0:CodeAuf.master = 0:CodeBest.master = 0:CodeGut.master = 0:Coderech.master = 0:Periode.master = 0:Rythmus.master = 0:Enddatum.master = 0:vonCodeMS.master = 0
         AnzPos.MASTER = 1
         titel.master = "Lieferscheine"
         nummer$ = nummer.master
         nummer.master = ""
         IF zugopt% = 3 OR zugopt% = 1 THEN 
           art.master = 3
           msart$ = "Lieferschein"
         END IF 
         IF zugopt% = 2 THEN 
           art.master = 2
           msart$ = "Rechnungen"
           titel.master = "Rechnung"
         END IF 
         prolog.master = prolog$ + ", " + nummer$
         epilog.master = epilog$
         CALL QuickStore("master")
         IF zugopt% = 1 THEN 
           SELECT KEY cums% FILE "master" INDEX codems.master
           BLANK DUPLICATE 
           CALL QuickStore("master")
           SELECT KEY cums% LOCK FILE "master" INDEX codems.master
           cums1% = SER ("MASTER",1)
           cumsrech% = cums1%
           CodeMS.MASTER = cums1%
           datum.master = TODAY 
           AnzPos.MASTER = 1
           titel.master = "Rechnung"
           nummer$ = nummer.master
           nummer.master = ""
           art.master = 2
           prolog.master = prolog$ + ", " + nummer$
           epilog.master = epilog$
           BuchBrutto.master = 0:BuchUms.master = "":BuchDatum.master = 0:Codedok.master = 0:StatusM.master = "":SkontoProz.master = 0:SkontoZiel.master = 0:Codeang.master = 0
           CodeLiefer.master = 0:CodeAuf.master = 0:CodeBest.master = 0:CodeGut.master = 0:Coderech.master = 0:Periode.master = 0:Rythmus.master = 0:Enddatum.master = 0:vonCodeMS.master = 0
           CALL QuickStore("master")
         END IF 
         BLANK FILE "SCHEIN"
         Codesch% = SER ("schein",1)
         Codesch.schein = Codesch%
         CodeMS.schein = cums%
         PosNr.schein = 1
         rÅckstmenge.schein = 0
         anzahl.schein = smenge.liefruck
         Artikelnummer.schein = artikelnummer.liefruck
         codear.schein = Codear.liefruck
         Vknetto.schein = VKNetto.liefruck
         VKBrutto.schein = vkbrutto.liefruck
         art.schein = art.liefruck
         Rabattart.schein = Rabattart.liefruck
         rabattproz = rabattproz.liefruck
         ek.schein = ek.liefruck
         MwSt.schein = MwSt.liefruck
         me_.schein = me_.liefruck
         Bezeichnung.schein = Bezeichnung.liefruck
         IF rÅckerledigt.liefruck = "Y" THEN 
           Beschreibung.schein = Beschreibung.liefruck
         ELSE 
           Beschreibung.schein = Beschreibung.liefruck + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + "RÅckstellung: " + STR$ (RMenge.liefruck,"999999999999.00") + " " + me_.liefruck
         END IF 
         Produktgruppe.schein = Produktgruppe.liefruck
         codegr.schein = codegr.liefruck
         Bezugsmenge.schein = Bezugsmenge.liefruck
         IF KalkArt.MASTER = 0 THEN 
           IF rabattproz.schein <> 0 THEN 
             vkne% = VKnetto.SCHEIN / Bezugsmenge.schein
             Rabatt.SCHEIN = (VKne% / 100) * RabattProz.SCHEIN
             GesamtNetto.SCHEIN = Anzahl.SCHEIN * (VKne% - Rabatt.SCHEIN)
             GesamtBrutto.SCHEIN = GesamtNetto.SCHEIN + (Gesamtnetto.SCHEIN / 100 * MwSt.SCHEIN)
           ELSE 
             vkne% = VKnetto.SCHEIN / Bezugsmenge.schein
             GesamtNetto.SCHEIN = Anzahl.SCHEIN * (vkne% - Rabatt.SCHEIN)
             GesamtBrutto.SCHEIN = GesamtNetto.SCHEIN + (Gesamtnetto.SCHEIN / 100 * MwSt.SCHEIN)
           END IF 
         ELSE 
           IF rabattproz.schein <> 0 THEN 
             vkbe% = VKbrutto.SCHEIN / Bezugsmenge.schein
             Rabatt.SCHEIN = (VKbe% / 100) * RabattProz.SCHEIN
             GesamtBrutto.SCHEIN = Anzahl.SCHEIN * (VKbe% - Rabatt.SCHEIN)
             GesamtNetto.SCHEIN = GesamtBrutto.SCHEIN / (100 + MwSt.SCHEIN) * 100
           ELSE 
             vkbe% = VKbrutto.SCHEIN / Bezugsmenge.schein
             GesamtBrutto.SCHEIN = Anzahl.SCHEIN * (vkbe% - Rabatt.SCHEIN)
             GesamtNetto.SCHEIN = GesamtBrutto.SCHEIN / (100 + MwSt.SCHEIN) * 100
           END IF 
         END IF 
         IF rmenge.liefruck > 0 THEN 
           RÅckstMenge.schein = Rmenge.liefruck
           CALL QuickStore("SCHEIN")
           SELECT KEY codelr% LOCK FILE "liefruck" INDEX codelr.liefruck
           rmengealt.liefruck = rmenge.liefruck
           rmenge.liefruck = 0
           CALL QuickStore("liefruck")
         ELSE 
           CALL QuickStore("SCHEIN")
         END IF 
         SELECT KEY cums% LOCK FILE "master" INDEX codems.master
         CALL MSRechnen()
         IF zugopt% = 1 THEN 
           cums% = cums1%
           FILE "schein"
           SELECT KEY codesch% LOCK FILE "schein" INDEX codesch.schein
           BLANK DUPLICATE 
           CALL QuickStore("schein")
           SELECT KEY codesch% LOCK FILE "schein" INDEX codesch.schein
           codesch.schein = SER ("schein",1)
           codems.schein = cumsrech%
           posnr.schein = 1
           rÅckstMenge.schein = 0
           CALL QuickStore("schein")
           SELECT KEY cums% FILE "master" INDEX codems.master
           CALL MSRechnen()
         END IF 
         REM SELECT FORM KEY cums% LOCK FILE "MASTER" INDEX CodeMS.master
         REM SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.master
         REM AnzPos.MASTER = npos%
         REM CALL FStore("MASTER")
         REM SELECT KEY scode% FILE "SCHEIN" INDEX QuickCodePOS.SCHEIN
         FILE "liefruck"
         IF rÅckerledigt.liefruck = "Y" THEN 
           vorgangerledigt.liefruck = "Y"
           CALL QuickStore("Liefruck")
         END IF 
       END IF 
       IF NOT EOF ("liefruck") AND lieferzugang.liefruck = "Y" AND vorgangerledigt.liefruck <> "Y" THEN 
         SELECT NEXT LOCK FILE "liefruck" INDEX lieferzugang.liefruck
       END IF 
       CALL RÅckMSDruck(cumslief%,ziel%)
       IF zugopt% = 1 THEN 
         CALL RÅckMSDruck(cumsrech%,ziel%)
       END IF 
     WEND 
 END SUB 
 
SUB ScheinSammelGen(zugopt%,ziel%)
     MOUSE OFF 
     FILE "liefruck"
     INDEX codeku.liefruck
     IF RECCOUNT ("liefruck") > 0 THEN SELECT FIRST LOCK 
     codekuold% = - 1
     druvlen% = ( RECCOUNT ("liefruck") * 2)
     DIM druckvektor%(druvlen%)
     drlen% = 0
     WHILE NOT EOF ("liefruck")
       REM AND lieferzugang.liefruck = "Y" AND vorgangerledigt.liefruck <> "Y"
       codems% = Codems.liefruck
       codeku% = codeku.liefruck
       codelr% = codelr.liefruck
       IF EXISTS (codems%,codems.master) AND lieferzugang.liefruck = "Y" AND vorgangerledigt.liefruck <> "Y" THEN 
         IF codeku% <> codekuold% THEN 
           codekuold% = codeku%
           FILE "floskel"
           SELECT WHERE art.floskel = 1 AND spezial.floskel = 8
           SELECT FIRST 
           IF NOT EOF ("floskel") THEN 
             prolog$ = floskel.floskel
             REM prolog1$ = floskel.floskel
           END IF 
           SELECT WHERE art.floskel = 2 AND spezial.floskel = 8
           SELECT FIRST 
           IF NOT EOF ("floskel") THEN 
             epilog$ = floskel.floskel
             REM epilog1$ = floskel.floskel
           END IF 
 
           FILE "master"
           SELECT KEY codems% FILE "master" INDEX codems.master
           MSArt% = Art.master
           kalk% = Kalkart.master
           titel$ = titel.master
           REM 190896priebe$
           IF priebe$ = "TRUE" THEN 
             prolog$ = prolog.master
           END IF 
           REM prolog$ = prolog.master + CHR$ (12) + CHR$ (10) + "NACHLIEFERUNG: " + prolog1$
           REM epilog$=epilog.master
           BLANK DUPLICATE FILE "MASTER"
           CALL QuickStore("master")
           SELECT KEY codems% LOCK FILE "master" INDEX codems.master
           cums% = SER ("MASTER",1)
           cumslief% = cums%
           druckvektor%(drulen%) = cumslief%
           drulen% = drulen% + 1
           CodeMS.MASTER = cums%
           datum.master = TODAY 
           AnzPos.MASTER = 1
           posnr% = 0
           BuchProv.master = 0:BuchProvEU.master = 0
           BuchBrutto.master = 0:BuchBruttoEU.master = 0:BuchUms.master = "":BuchDatum.master = 0:Codedok.master = 0:StatusM.master = "":SkontoProz.master = 0:SkontoZiel.master = 0:Codeang.master = 0
           CodeLiefer.master = 0:CodeAuf.master = 0:CodeBest.master = 0:CodeGut.master = 0:Coderech.master = 0:Periode.master = 0:Rythmus.master = 0:Enddatum.master = 0:vonCodeMS.master = 0
           nummer$ = nummer.master
           Titel.master = "Lieferschein"
           nummer.master = ""
           IF zugopt% = 3 OR zugopt% = 1 THEN 
             art.master = 3
             msart$ = "Lieferscheine"
           END IF 
           IF zugopt% = 2 THEN 
             art.master = 2
             msart$ = "Rechnungen"
             titel.master = "Rechnung"
           END IF 
           prolog.master = prolog$
           epilog.master = epilog$
           CALL QuickStore("master")
           IF zugopt% = 1 THEN 
             SELECT KEY cums% FILE "master" INDEX codems.master
             BLANK DUPLICATE 
             CALL QuickStore("master")
             SELECT KEY cums% LOCK FILE "master" INDEX codems.master
             cums1% = SER ("MASTER",1)
             cumsrech% = cums1%
             druckvektor%(drulen%) = cumsrech%
             drulen% = drulen% + 1
             CodeMS.MASTER = cums1%
             datum.master = TODAY 
             REM nummer1$ = nummer.master
             nummer.master = ""
             art.master = 2
             titel.master = "Rechnung"
             msart$ = "Rechnungen"
             prolog.master = prolog$ + ", " + nummer$
             epilog.master = epilog$
             BuchProv.master = 0:BuchProvEU.master = 0:BuchBruttoEU.master = 0
             BuchBrutto.master = 0:BuchUms.master = "":BuchDatum.master = 0:Codedok.master = 0:StatusM.master = "":SkontoProz.master = 0:SkontoZiel.master = 0:Codeang.master = 0
             CodeLiefer.master = 0:CodeAuf.master = 0:CodeBest.master = 0:CodeGut.master = 0:Coderech.master = 0:Periode.master = 0:Rythmus.master = 0:Enddatum.master = 0:vonCodeMS.master = 0
             CALL QuickStore("master")
           END IF 
         END IF 
         BLANK FILE "SCHEIN"
         Codesch% = SER ("schein",1)
         Codesch.schein = Codesch%
         CodeMS.schein = cumslief%
         cums% = cumslief%
         posnr% = posnr% + 1
         PosNr.schein = posnr%
         rÅckstmenge.schein = 0
         anzahl.schein = smenge.liefruck
         codear.schein = Codear.liefruck
         Artikelnummer.schein = artikelnummer.liefruck
         Vknetto.schein = VKNetto.liefruck
         VKBrutto.schein = vkbrutto.liefruck
         VknettoEU.schein = VKNettoEU.liefruck
         VKBruttoEU.schein = vkbruttoEU.liefruck
         art.schein = art.liefruck
         Rabattart.schein = Rabattart.liefruck
         rabattproz = rabattproz.liefruck
         ek.schein = ek.liefruck
         ekEU.schein = ekEU.liefruck
         MwSt.schein = MwSt.liefruck
         me_.schein = me_.liefruck
         Bezeichnung.schein = Bezeichnung.liefruck
         codew.schein = codew.liefruck
         umrechnung.schein = umrechnung.liefruck
         waehrung.schein = waehrung.liefruck
         IF rÅckerledigt.liefruck = "Y" THEN 
           Beschreibung.schein = Beschreibung.liefruck + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + "Nachlieferung von: " + nummer$
         ELSE 
           Beschreibung.schein = Beschreibung.liefruck + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + "Nachlieferung von: " + nummer$
           Beschreibung.schein = Beschreibung.schein + CHR$ (13) + CHR$ (10) + "RÅckstellung: " + STR$ (RMenge.liefruck,"999999999999.00") + " " + me_.liefruck
         END IF 
         Produktgruppe.schein = Produktgruppe.liefruck
         codegr.schein = codegr.liefruck
         Bezugsmenge.schein = Bezugsmenge.liefruck
         IF KalkArt.MASTER = 0 THEN 
           IF rabattproz.schein <> 0 THEN 
             vkne% = VKnetto.SCHEIN / Bezugsmenge.schein
             Rabatt.SCHEIN = (VKne% / 100) * RabattProz.SCHEIN
             rabatteu.schein = Rabatt.SCHEIN / umrechnung.schein
             GesamtNetto.SCHEIN = Anzahl.SCHEIN * (VKne% - Rabatt.SCHEIN)
             GesNettoEu.schein = GesamtNetto.SCHEIN / umrechnung.schein
             GesamtBrutto.SCHEIN = GesamtNetto.SCHEIN + (Gesamtnetto.SCHEIN / 100 * MwSt.SCHEIN)
             GesBruttoEU.SCHEIN = GesamtBrutto.SCHEIN / umrechnung.schein
           ELSE 
             vkne% = VKnetto.SCHEIN / Bezugsmenge.schein
             GesamtNetto.SCHEIN = Anzahl.SCHEIN * (vkne% - Rabatt.SCHEIN)
             GesNettoEu.schein = GesamtNetto.SCHEIN / umrechnung.schein
             GesamtBrutto.SCHEIN = GesamtNetto.SCHEIN + (Gesamtnetto.SCHEIN / 100 * MwSt.SCHEIN)
             GesBruttoEU.SCHEIN = GesamtBrutto.SCHEIN / umrechnung.schein
           END IF 
         ELSE 
           IF rabattproz.schein <> 0 THEN 
             vkbe% = VKbrutto.SCHEIN / Bezugsmenge.schein
             Rabatt.SCHEIN = (VKbe% / 100) * RabattProz.SCHEIN
             rabatteu.schein = Rabatt.SCHEIN / umrechnung.schein
             GesamtBrutto.SCHEIN = Anzahl.SCHEIN * (VKbe% - Rabatt.SCHEIN)
             GesBruttoEU.SCHEIN = GesamtBrutto.SCHEIN / umrechnung.schein
             GesamtNetto.SCHEIN = GesamtBrutto.SCHEIN / (100 + MwSt.SCHEIN) * 100
             GesNettoEu.schein = GesamtNetto.SCHEIN / umrechnung.schein
           ELSE 
             vkbe% = VKbrutto.SCHEIN / Bezugsmenge.schein
             GesamtBrutto.SCHEIN = Anzahl.SCHEIN * (vkbe% - Rabatt.SCHEIN)
             GesBruttoEU.SCHEIN = GesamtBrutto.SCHEIN / umrechnung.schein
             GesamtNetto.SCHEIN = GesamtBrutto.SCHEIN / (100 + MwSt.SCHEIN) * 100
             GesNettoEu.schein = GesamtNetto.SCHEIN / umrechnung.schein
           END IF 
         END IF 
         IF rmenge.liefruck > 0 THEN 
           RÅckstMenge.schein = Rmenge.liefruck
           CALL QuickStore("SCHEIN")
           SELECT KEY codelr% LOCK FILE "liefruck" INDEX codelr.liefruck
           rmengealt.liefruck = rmenge.liefruck
           rmenge.liefruck = 0
           CALL QuickStore("liefruck")
         ELSE 
           CALL QuickStore("SCHEIN")
         END IF 
         SELECT KEY cumslief% LOCK FILE "master" INDEX codems.master
         anzpos.master = posnr%
         CALL QuickStore("master")
         SELECT KEY cumslief% LOCK FILE "master" INDEX codems.master
         CALL MSRechnen()
         IF zugopt% = 1 THEN 
           cums% = cumsrech%
           FILE "schein"
           SELECT KEY codesch% LOCK FILE "schein" INDEX codesch.schein
           BLANK DUPLICATE 
           CALL QuickStore("schein")
           SELECT KEY codesch% LOCK FILE "schein" INDEX codesch.schein
           codesch.schein = SER ("schein",1)
           codems.schein = cumsrech%
           CALL QuickStore("schein")
           SELECT KEY cumsrech% LOCK FILE "master" INDEX codems.master
           anzpos.master = posnr%
           RÅckstMenge.schein = 0
           CALL QuickStore("master")
           SELECT KEY cumsrech% LOCK FILE "master" INDEX codems.master
           CALL MSRechnen()
         END IF 
         REM SELECT FORM KEY cums% LOCK FILE "MASTER" INDEX CodeMS.master
         REM SELECT KEY cums% LOCK FILE "MASTER" INDEX CodeMS.master
         REM AnzPos.MASTER = npos%
         REM CALL FStore("MASTER")
         REM SELECT KEY scode% FILE "SCHEIN" INDEX QuickCodePOS.SCHEIN
         FILE "liefruck"
         SELECT KEY codelr% LOCK FILE "liefruck" INDEX codelr.liefruck
         IF rÅckerledigt.liefruck = "Y" THEN 
           vorgangerledigt.liefruck = "Y"
           CALL QuickStore("LIEFRUCK")
         END IF 
       END IF 
     IF NOT EOF ("liefruck") THEN 
       SELECT NEXT LOCK FILE "liefruck" INDEX codeku.liefruck
     END IF 
     WEND 
 
     MOUSE ON 
     IF drulen% > 0 THEN 
       FOR i% = 0 TO drulen%
         cums% = druckvektor%(i%)
         IF cums% > 0 THEN 
           CALL RÅckMSDruck(cums%,ziel%)
         ELSE 
           i% = drulen%
         END IF 
       NEXT i%
       FOR i% = 0 TO drulen%
         cums% = druckvektor%(i%)
         IF cums% > 0 THEN 
           CALL MSBuchung(cums%,1)
         ELSE 
           i% = drulen%
         END IF 
       NEXT i%
     ELSE 
       CALL Fehler("Es wurden keine LieferrÅckstellungen gefunden!","")
     END IF 
 END SUB 
 
 
 
 REM opt%=1 Drucken Åber Reportgen.
 REM opt%=2 Druck Åber WW auf Bildschirm
 REM opt%=3 Druck Åber WW auf Drucker
 
SUB RÅckMSDruck(codems%,opt%)
 MOUSE OFF 
 CALL DFile(3,"UMSATZ" + _fpw$)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(3,"TEILRAUS" + _fpw$)
 CREATE DIALOG "SGENER",0,0,118,183,"Generierung von Lieferscheine/Rechnungen","MS Sans Serif",8
 ADD DIALOG "SGENER",4,0,0,118,39,0,"Einzelbelege/Sammelbelege?"
 ADD DIALOG "SGENER",1,2,164,56,16,1,"&OK",1,1
 ADD DIALOG "SGENER",1,60,164,54,16,0,"&Abbrechen",0,0
 DIALOG "SGENER",reqzu%
 REMOVE DIALOG "SGENER"
 
 dokneu% = 0
 FILE "master"
 SELECT KEY codems% FILE "master" INDEX codems.master
 cums% = codems.master
 codems% = cums%
 codeku% = Codeku.master
 knr% = Codeku.Master
 art% = Art.master
 codedok% = Codedok.master
 cudoc% = codedok%
 IF NEW ("master") OR MOD ("master") THEN CALL QuickStore("master")
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 CALL MSCHRabattProz()
 CALL MSCHRabatt()
 FILE "master"
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 CALL UmsFuelEinzel(Codems%,0)
 SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 dokname$ = Nummer.master + "/" + nachname.master
 
 MOUSE OFF 
 req% = 1
 IF opt% < 2 AND req% = 1 THEN 
   CALL MSDR(CodeMS.MASTER,opt%)
 END IF 
 IF opt% > 1 AND req% = 1 THEN 
   REM *** Aufbereitung der Dokumentenvorlage, in die gedruckt werden soll
   REM *** Voraussetzung ist, das die Aktionen Angebote, Rechnungen,...
   REM *** existieren, sonst Zuweisung allgemeine Termine, allgemeine Schreiben
   FILE "dokument"
   INDEX Codedok.dokument
   SELECT FIRST LOCK 
   IF codedok% > 0 THEN 
     dokneu% = 1
     SELECT KEY codedok% LOCK FILE "Dokument" INDEX codedok.dokument
   ELSE 
     REM *** neues Dokument erstellen
     IF _WPSuffix$ LIKE "leer" THEN 
       CALL Fehler("Keine Textverarbeitung ausgewÑhlt!","Bitte starten Sie Åber den Hauptbildschirm die Funktion 'Einstellungen' und wÑhlen Sie dort eine Textverarbeitung aus.")
       DOKNeu% = - 1
     ELSE 
       MOUSE OFF 
       SET STATUS "Dokument wird vorbereitet..."
       SELECT CASE Art%
       CASE 1
         aktion1$ = "Angebot*"
         aktion2$ = "*Angebot*"
       CASE 2
         aktion1$ = "Rechnung*"
         aktion2$ = "*Rechnung*"
       CASE 3
         aktion1$ = "Liefersch*"
         aktion2$ = "*Liefersch*"
       CASE 4
         aktion1$ = "Auftr*"
         aktion2$ = "*Auftr*"
       CASE 5
         aktion1$ = "Bestell*"
         aktion2$ = "*Bestell*"
       CASE 7
         aktion1$ = "Gutschr*"
         aktion2$ = "*Gutschr*"
       END SELECT 
       FILE "Aktionen"
       INDEX Bezeichnung.aktionen
       SELECT FIRST 
       ok% = - 1
       WHILE NOT EOF ("aktionen") AND ok% = - 1
         IF bezeichnung.aktionen LIKE aktion1$ OR bezeichnung.aktionen LIKE aktion2$ THEN 
           codeak% = codeak.aktionen
           ok% = 0
         END IF 
       SELECT NEXT INDEX bezeichnung.aktionen
       WEND 
       IF ok% = - 1 THEN codeak% = 1
       a% = 0
       ok% = - 1
       WHILE DOKGruppen$(a%) <> "" AND ok% = - 1
         a% = a% + 1
         IF DOKGruppen$(a%) LIKE aktion1$ OR DOKGruppen$(a%) LIKE aktion1$ THEN 
            gruppe$ = DOKGruppen$(a%)
            ok% = 0
         END IF 
       WEND 
       IF ok% = - 1 THEN gruppe$ = DOKGruppen$(0):REM allgemeine Schreiben  
         IF vorlage% = 0 THEN 
           IF wxp$ LIKE "TRUE" THEN 
             _vorlage$ = ReadConfig$("VORLAGENWord97",Gruppe$)
             IF _vorlage$ <> "leer" THEN 
               REM textvorlage$ = LEFT$ (_netpath$,2) + ReadConfig$("DOKUMENTE", FN ansi(Gruppe$)) + _vorlage$
               textvorlage$ = ReadConfig$("DOKUMENTE", FN ansi(Gruppe$))
               IF LEFT$ (textvorlage$,1) = "#" THEN 
                 tt1$ = MID$ (textvorlage$,2)
                 textvorlage$ = UCASE$ (tt1$)
               ELSE 
                 pfad$ = MID$ ( UCASE$ (_netpath$),3)
                 l1% = 0
                 l1% = LEN (pfad$)
                 pos% = 0
                 pos% = INSTR (textvorlage$,pfad$)
                 IF pos% > 0 THEN 
                   dateiname1$ = MID$ (textvorlage$,pos% + l1%)
                   textvorlage$ = dateiname1$
                   IF RIGHT$ (textvorlage$,1) <> "\" THEN textvorlage$ = textvorlage$ + "\"
                   IF LEFT$ (textvorlage$,1) = "\" THEN textvorlage$ = MID$ (textvorlage$,2)
                   CALL WriteConfig("DOKUMENTE", FN ansi(Gruppe$),"#" + textvorlage$)
                 ELSE 
                   t1% = INSTR (4,textvorlage$,"\")
                   zw1$ = MID$ (textvorlage$,t1%)
                   textvorlage$ = zw1$
                   IF RIGHT$ (textvorlage$,1) <> "\" THEN textvorlage$ = textvorlage$ + "\"
                   IF LEFT$ (textvorlage$,1) = "\" THEN textvorlage$ = MID$ (textvorlage$,2)
                   CALL WriteConfig("DOKUMENTE", FN ansi(Gruppe$),"#" + textvorlage$)
                 END IF 
               END IF 
             ELSE 
               textvorlage$ = _netpath$ + "OFFICE\TEXT\0xp.doc"
             END IF 
           ELSE 
             IF w97$ <> "TRUE" THEN _vorlage$ = ReadConfig$("VORLAGEN",Gruppe$)
             IF w97$ = "TRUE" THEN _vorlage$ = ReadConfig$("VORLAGENWord97",Gruppe$)
             IF _vorlage$ <> "leer" THEN 
               REM textvorlage$ = LEFT$ (_netpath$,2) + ReadConfig$("DOKUMENTE", FN ansi(Gruppe$)) + _vorlage$
               textvorlage$ = ReadConfig$("DOKUMENTE", FN ansi(Gruppe$)) + _vorlage$
               IF LEFT$ (textvorlage$,1) = "#" THEN 
                 tt1$ = MID$ (textvorlage$,2)
                 textvorlage$ = UCASE$ (tt1$)
               ELSE 
                 pfad$ = MID$ ( UCASE$ (_netpath$),3)
                 l1% = 0
                 l1% = LEN (pfad$)
                 pos% = 0
                 pos% = INSTR (textvorlage$,pfad$)
                 IF pos% > 0 THEN 
                   dateiname1$ = MID$ (textvorlage$,pos% + l1%)
                   textvorlage$ = dateiname1$
                   IF RIGHT$ (textvorlage$,1) <> "\" THEN textvorlage$ = textvorlage$ + "\"
                   IF LEFT$ (textvorlage$,1) = "\" THEN textvorlage$ = MID$ (textvorlage$,2)
                   CALL WriteConfig("DOKUMENTE", FN ansi(Gruppe$),"#" + textvorlage$)
                 ELSE 
                   t1% = INSTR (4,textvorlage$,"\")
                   zw1$ = MID$ (textvorlage$,t1%)
                   textvorlage$ = zw1$
                   IF RIGHT$ (textvorlage$,1) <> "\" THEN textvorlage$ = textvorlage$ + "\"
                   IF LEFT$ (textvorlage$,1) = "\" THEN textvorlage$ = MID$ (textvorlage$,2)
                   CALL WriteConfig("DOKUMENTE", FN ansi(Gruppe$),"#" + textvorlage$)
                 END IF 
               END IF 
             ELSE 
               IF w97$ <> "TRUE" THEN 
                 textvorlage$ = _netpath$ + "OFFICE\TEXT\0." + _WPSuffix$
              ELSE 
                 textvorlage$ = _netpath$ + "OFFICE\TEXT\0w97.doc"
               END IF 
             END IF 
           END IF 
         ELSE 
           SELECT KEY vorlage% FILE "dokument" INDEX CodeDOK.dokument
           textvorlage$ = _netpath$ + Dateiname.DOKUMENT
         END IF 
       REM docpath$ = LEFT$ (_netpath$,2) + ReadConfig$("DOKUMENTE", FN ansi(Gruppe$))
       docpath$ = GetDocPath$(Gruppe$)
       IF RIGHT$ (docpath$,1) <> "\" THEN docpath$ = docpath$ + "\"
       FILE "dokument"
       BLANK FILE "dokument"
       CodeDOK% = SER ("dokument",1)
       CodeDOK.dokument = codedok%
       codeErs.dokument = GMACodema%
       Creator.dokument = GMAName$
       dokument.dokument = dokname$
       erstellt_am.dokument = TODAY 
       letzte_Bearbeit.dokument = TODAY 
       CodeMA.dokument = _vcodema%
       CodeKU.dokument = knr%
       SELECT KEY codema.dokument FILE "supervis" INDEX codema.supervis
       Bearbeiter$ = nachname.supervis
       Bearbeiter.dokument = nachname.supervis
       REM textdatei$ = docpath$ + LTRIM$ ( STR$ (CodeDOK.dokument,"999999")) + "." + RIGHT$ (textvorlage$,3)
           docpath$ = GetDocPath$(Gruppe$)
           textdatei$ = docpath$ + LTRIM$ ( STR$ (CodeDOK.dokument,"999999")) + "." + RIGHT$ (textvorlage$,3)
 
       Dateiname.dokument = textdatei$
       Gruppe.dokument = Gruppe$
       link.dokument = codeku%
       CALL QuickStore("DOKUMENT")
       cudoc% = CodeDOK.dokument
       codedok% = cudoc%
       IF EXISTS (textvorlage$) THEN 
         FILE "schein"
         IF NOT EXISTS (cums%,Codems.schein) THEN 
           CALL Fehler ("Export nach MSWord6/7(deutsch) nicht mîglich, da noch keine Positionen erfa·t wurden!","Erfassen Sie bitte mindestens eine Position!")
           dokneu% = - 1
           FILE "master"
         ELSE 
           FILE "master"
           SELECT KEY cums% LOCK FILE "master" INDEX codems.master
           codedok.master = codedok%
           CALL QuickStore("master")
           SELECT KEY cums% LOCK FILE "master" INDEX codems.master
           FILE "dokument"
           COPY textvorlage$,textdatei$
           DOKNeu% = CodeDOK.dokument
           req122% = 1
           SET STATUS "Eintrag in Termindatei..."
           cfile$ = FILE 
           cdir$ = DIRECTORY 
           FILE GAkquiDat$
           _vcodeak% = codeak%
           SELECT KEY textdatei% FILE "dokument" INDEX CodeDOK.dokument
           RNotiz$ = "Dokument (" + Gruppe.dokument + "): " + Dokument.dokument + " Nachlieferung aus: " + nummer$
 
           FILE GAkquiDat$
           BLANK 
           cuaq% = SER (GAkquiDat$,1)
           codeaq.GAkquiDat$ = cuaq%
           codeKU.GAkquiDat$ = knr%
           CodeAK.GAkquiDat$ = codeak%
           CodeMA.GAkquiDat$ = _vcodema%
           SELECT KEY knr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
           nachname.GAkquiDat$ = nachname.adressen
           Wertung.GAkquiDat$ = 0
           Datum.GAkquiDat$ = TODAY 
           CodeDOK.GAkquiDat$ = codedok%
           Bearbeiter.GAkquiDat$ = bearbeiter$
           notiz.GAkquiDat$ = rnotiz$
           termin.GAkquiDat$ = TODAY 
           erledigt_Termin.GAkquiDat$ = "N"
           CALL FStore(GAkquiDat$)
 
           FILE cfile$
           DIRECTORY cdir$
         END IF 
       ELSE 
         CALL Fehler("Textvorlage " + textvorlage$ + " konnte nicht gefunden werden!","Eintrag wird aus Dokumentenverwaltung entfernt.")
         SELECT KEY cudoc% LOCK FILE "dokument" INDEX CodeDOK.dokument
         SELECT REMOVE FILE "DOKUMENT"
         DOKNeu% = - 1
       END IF 
       FILE "master"
       SELECT KEY cums% LOCK FILE "master" INDEX codems.master
     END IF :REM Textverarbeitung vorhanden
   END IF :REM codedok% in master eingetragen
   IF dokneu% <> - 1 THEN 
     IF dokfehl% <> 1 THEN 
       IF (wxp$ LIKE "true") OR (w97$ LIKE "true" AND cspeed% = 1000) THEN 
         REM CALL Fehler("Shellexe1-CALL Out2WinWord",textdatei$)
         CALL open_doc(textdatei$,"")
         wordapplication.Visible = - 1
         wordapplication.delete()
 
         CALL Out2WinWord(cums%,opt%)
       ELSE 
         REM CALL Fehler("Shellexe1-CALL Out2WinWordold",textdatei$)
         i% = CALL ("ShellExecute",0,"open",textdatei$,"","",1)
         CALL Out2WinWold(cums%,opt%)
       END IF 
       
       
     END IF 
   END IF 
 END IF 
 MOUSE ON 
 END SUB 
 


 REM opt%=3 direkt drucken

SUB DOKWW(dok%,opt%)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 SET STATUS "Dokument bearbeiten..."
 cfile$ = FILE 
 cdir$ = DIRECTORY 
 FILE "adressen"
 MOUSE OFF 
 REM CALL Fehler("Dokumentenverarbeitung","")
 IF UCASE$ ( FORM ) = "ADRESSEN" OR UCASE$ ( FORM ) = "ADRPROJ" THEN 
   
   Adresse$ = MakeAdr$(CodeKU.ADRESSEN, - 1,0,0)
   COPY FROM Adresse$
 END IF 
 SELECT KEY vcodema% FILE "SUPERVIS" INDEX CodeMA.supervis
 FILE "DOKUMENT"
 SELECT KEY dok% LOCK FILE "DOKUMENT" INDEX CodeDOK.dokument
 textdatei$ = _netpath$ + Dateiname.dokument
 IF FOUND ("DOKUMENT") THEN 
   CodeMA.dokument = vcodema%
   Bearbeiter.dokument = Nachname.supervis
   letzte_Bearbeit.DOKUMENT = TODAY 
   textdatei$ = _netpath$ + Dateiname.dokument
   REM i% = CALL ("ShellExecute",0,"open","c:\codie\office\text\0w97.doc","","",1)
   IF EXISTS (textdatei$) THEN 
     CALL QuickStore("dokument")
     IF opt% = 3 THEN 
       REM Dokument gleich ausdrucken
       REM i% = CALL ("ShellExecute",0,"open",textdatei$,"","",1)
       MOUSE OFF 
       REM IF PROGRAMFILE ("WORD") THEN CLOSE PROGRAMFILE "WORD"
       REM CALL WORD()
       IF errormessage$ LIKE "OK" THEN 
         CALL open_doc(textdatei$,"")
         wordapplication.Visible = - 1
         wordapplication.delete()
         i% = 33
       ELSE 
         i% = 31
       END IF 
       MOUSE ON 
     ELSE 
       REM CALL Fehler ("Appactivat ohne","ShellExecute" + textdatei$)
       IF UCASE$ ( RIGHT$ (textdatei$,3)) = "DOC" THEN 
         MOUSE OFF 
         REM i% = CALL ("ShellExecute",0,"open",textdatei$,"","",1)
         REM IF i% <= 32 THEN 
           REM IF (i% = 31) OR (i% = 2) THEN 
             REM CALL Fehler("Das benîtigte Bearbeitungsprogramm konnte nicht gefunden werden!","Bitte wÑhlen Sie das Bearbeitungsprogramm aus.")
             REM WordProc$ = "*.EXE"
             REM REQUEST "Programm fÅr " + UCASE$ ( RIGHT$ (textdatei$,3)) + "-Dateien...","",26,req%,WordProc$
             REM IF req% = 1 THEN 
               REM CALL WordProc$ + " " + textdatei$
             REM END IF 
           REM END IF 
         REM END IF 
         IF errormessage$ LIKE "OK" THEN 
           CALL open_doc(textdatei$,"")
           REM CALL set_font("f1,arial,12,enter,tabulator")
           REM CALL write("hello")
           GTextDatei$ = LTRIM$ ( STR$ (dok%,"999999"))
           IF gvisible% <> - 1 THEN 
             ON ERROR GOTO wo2906200301
             wordapplication.Visible = - 1
             wordapplication.delete()
wo2906200301: 
             ON ERROR GOTO gt090720011
             APPACTIVATE GTextDatei$
             GOTO gt090720012
gt090720011: 
             ON ERROR GOTO gt090720012
             APPACTIVATE "Microsoft Word"
gt090720012: 
             ON ERROR GOTO ErrorHandler
           END IF 
           i% = 33
         ELSE 
           i% = 31
         END IF 
         MOUSE ON 
       ELSE 
         REM WAIT FOR 2
         i% = CALL ("ShellExecute",0,"open",textdatei$,"","",1)
       END IF 
     END IF 
     IF i% <= 32 THEN 
       IF (i% = 31) OR (i% = 2) THEN 
         CALL Fehler("Das benîtigte Bearbeitungsprogramm konnte nicht gefunden werden!","Bitte wÑhlen Sie das Bearbeitungsprogramm aus.")
         WordProc$ = "*.EXE"
         REQUEST "Programm fÅr " + UCASE$ ( RIGHT$ (textdatei$,3)) + "-Dateien...","",26,req%,WordProc$
         IF req% = 1 THEN 
           CALL WordProc$ + " " + textdatei$
         END IF 
       END IF 
     END IF 
     IF _projekt$ LIKE "FACTURA" THEN dokfehl% = 0
   ELSE 
     CALL Fehler("Die benîtigte Dokumentendatei konnte nicht gefunden werden!","")
     dokfehl% = 1
   END IF 
 ELSE 
   CALL Fehler("Das entsprechende Dokument konnte nicht gefunden werden!","Es wurde wahrscheinlich innerhalb der Dokumentenverwaltung gelîscht.")
   IF _projekt$ LIKE "FACTURA" THEN 
     CALL DFile(3,"MASTER" + _fpw$)
     FILE "master"
     IF EXISTS (dok%,codedok.MASTER) THEN 
       INDEX codedok.master
       SELECT FIRST 
       SELECT KEY dok% LOCK FILE "master" INDEX CodeDOK.master
       codedok.master = 0
       CALL Fehler("Beim nÑchsten Aufruf der Winwordausgabe wird ein neues Dokument angelegt!","")
       CALL QuickStore("master")
       dokfehl% = 1
     END IF 
   END IF 
 END IF 
 MOUSE ON 
 FILE cfile$
 DIRECTORY cdir$
 END SUB 
 
 

 


 REM opt%=3 ausgabe auf drucker 
 
SUB DOKWWold(dok%,opt%)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 SET STATUS "Dokument bearbeiten..."
 cfile$ = FILE 
 cdir$ = DIRECTORY 
 FILE "adressen"
 MOUSE OFF 
 
 IF UCASE$ ( FORM ) = "ADRESSEN" OR UCASE$ ( FORM ) = "ADRPROJ" THEN 
   
   Adresse$ = MakeAdr$(CodeKU.ADRESSEN, - 1,0,0)
   COPY FROM Adresse$
 END IF 
 SELECT KEY vcodema% FILE "SUPERVIS" INDEX CodeMA.supervis
 FILE "DOKUMENT"
 SELECT KEY dok% LOCK FILE "DOKUMENT" INDEX CodeDOK.dokument
 textdatei$ = _netpath$ + Dateiname.dokument
 IF FOUND ("DOKUMENT") THEN 
   CodeMA.dokument = vcodema%
   Bearbeiter.dokument = Nachname.supervis
   letzte_Bearbeit.DOKUMENT = TODAY 
   textdatei$ = _netpath$ + Dateiname.dokument
   REM i% = CALL ("ShellExecute",0,"open","c:\codie\office\text\0w97.doc","","",1)
   IF EXISTS (textdatei$) THEN 
     CALL QuickStore("dokument")
     IF opt% = 3 THEN 
       WAIT FOR 2
       i% = CALL ("ShellExecute",0,"open",textdatei$,"","",1)
       
       REM 140798
       IF w97$ = "TRUE" THEN 
         IF EXISTS ("c:\m97.asc") THEN DELETE "c:\m97.asc"
         OPEN "c:\m97.asc" FOR OUTPUT 
         g$ = CHR$ (34)
         ? "Dim aktDokument$"
         ? "Dim Absatzsteuerung"
         ? "aktDokument$ = WordBasic.[WindowName$]()"
         ? "WordBasic.Aktivate aktDokument$"
         ? "WordBasic.DocMaximize - 1"
         REM ? "BeginnDokument"
         REM ? "EndeDokument 1"
         REM ? FN ansi("DateiDruckenStandard")
         CLOSE OUTPUT 
       ELSE 
         IF EXISTS ("c:\m2.asc") THEN DELETE "c:\m2.asc"
         OPEN "c:\m2.asc" FOR OUTPUT 
         g$ = CHR$ (34)
         ? "aktDokument$ = FensterName$()"
         ? "Aktivieren aktDokument$"
         ? "DokumentMaximieren - 1"
         REM ? "BeginnDokument"
         REM ? "EndeDokument 1"
         ? FN ansi("DateiDruckenStandard")
         CLOSE OUTPUT 
       END IF 
       
       APPACTIVATE "Microsoft Word",""
       DDEINIT 5,"WINWORD","SYSTEM"
       IF win97$ = "TRUE" THEN 
         
         DDEEXEC 5,"[ToolsMacro " + g$ + "DoMakro97.DoCoDIE97" + g$ + ",1]"
       ELSE 
         DDEEXEC 5,"[CALL DoMakro.MAIN " + g$ + "C:\M2.ASC" + g$ + "]"
       END IF 
 
       DDETERM 5
     ELSE 
       REM CALL Fehler ("Appactivat ohne","ShellExecute" + textdatei$)
       IF UCASE$ ( RIGHT$ (textdatei$,3)) = "DOC" THEN 
         MOUSE OFF 
         REM CALL textdatei$
         REM WAIT FOR 3
         REM textdatei$ = "winword.exe " + textdatei$
         REM i% = CALL ("ShellExecute",0,"open","winword.exe","","",1)
         WAIT FOR 2
         i% = CALL ("ShellExecute",0,"open",textdatei$,"","",1)
         MOUSE ON 
       ELSE 
         WAIT FOR 2
         i% = CALL ("ShellExecute",0,"open",textdatei$,"","",1)
       END IF 
     END IF 
     IF i% <= 32 THEN 
       IF (i% = 31) OR (i% = 2) THEN 
         CALL Fehler("Das benîtigte Bearbeitungsprogramm konnte nicht gefunden werden!","Bitte wÑhlen Sie das Bearbeitungsprogramm aus.")
         WordProc$ = "*.EXE"
         REQUEST "Programm fÅr " + UCASE$ ( RIGHT$ (textdatei$,3)) + "-Dateien...","",26,req%,WordProc$
         IF req% = 1 THEN 
           CALL WordProc$ + " " + textdatei$
         END IF 
       END IF 
     END IF 
     IF _projekt$ LIKE "FACTURA" THEN dokfehl% = 0
   ELSE 
     CALL Fehler("Die benîtigte Dokumentendatei konnte nicht gefunden werden!","")
     dokfehl% = 1
   END IF 
 ELSE 
   CALL Fehler("Das entsprechende Dokument konnte nicht gefunden werden!","Es wurde wahrscheinlich innerhalb der Dokumentenverwaltung gelîscht.")
   IF _projekt$ LIKE "FACTURA" THEN 
     CALL DFile(3,"MASTER" + _fpw$)
     FILE "master"
     IF EXISTS (dok%,codedok.MASTER) THEN 
       INDEX codedok.master
       SELECT FIRST 
       SELECT KEY dok% LOCK FILE "master" INDEX CodeDOK.master
       codedok.master = 0
       CALL Fehler("Beim nÑchsten Aufruf der Winwordausgabe wird ein neues Dokument angelegt!","")
       CALL QuickStore("master")
       dokfehl% = 1
     END IF 
   END IF 
 END IF 
 MOUSE ON 
 FILE cfile$
 DIRECTORY cdir$
 END SUB 
 
 
SUB PosSerieBe()
 codear% = codear.schein
 codesch% = codesch.schein
 nummer$ = nummer.master
 datum% = datum.master
 IF MOD ("schein") OR NEW ("schein") THEN CALL QuickStore("schein")
 SELECT FIRST INDEX codesch.schein
 SELECT KEY codesch% FILE "schein" INDEX codesch.schein
 serienr$ = serienr.schein
 quickArSer$ = STR$ (codear%,"000000") + serienr$
 IF EXISTS (quickArSer$,quickArSer.serienr) THEN 
   FILE "serienr"
   INDEX quickArSer.serienr
   SELECT FIRST 
   SELECT KEY quickArSer$ LOCK FILE "serienr" INDEX quickArSer.serienr
   Nummer.serienr = nummer$
   datum.serienr = datum%
   codems.serienr = codems.master
   QuickSerNumm.serienr = serienr.serienr + nummer.serienr
   Workstation.serienr = Workstation%
   QWoNo.serienr = STR$ (Workstation%,"000000") + STR$ (codeser.serienr,"000000")
   RecStatus.serienr = "c"
   STORE FILE "serienr"
   UNLOCK CURRENT FILE "serienr"
 END IF 
 FILE "schein"
 INDEX codems.schein
 REM SELECT FIRST 
 SELECT KEY codesch% LOCK FILE "schein" INDEX codesch.schein
 FORM 
 END SUB 
 
  
SUB ArtiEintrPrNet()
 codear% = Codear.schein
 codesch% = CodeSch.schein
 REQUEST "Wollen Sie die Artikelpreise Åbernehmen?","",130,req%
 IF req% <> 1 THEN END SUB 
 IF Bezeichnung.schein = "" THEN Bezeichnung.schein = "NEU"
 IF codear% = 0 THEN 
   BLANK FILE "artikel"
   codear% = SER ("artikel",1)
   codear.schein = codear%
   CALL QuickStore("Schein")
   codear.artikel = codear%
   REM 130699
     NUMBASE "z99999999.999999"
     SELECT FIRST FILE "STAMM"
         euro% = umrechnung.stamm
         codew% = codew.stamm
 
     waehrung.artikel = zweitwaehr$
     umrechnung.artikel = euro%
     codew.artikel = codew%
   CALL QuickStore("artikel")
 ELSE 
   CALL QuickStore("Schein")
 END IF 
 IF codegr.schein = 0 THEN CALL ARTGruppeS()
 SELECT KEY codear% LOCK FILE "Artikel" INDEX codear.artikel
 IF Bezeichnung.ARTIKEL = "" AND Bezeichnung.schein = "" THEN 
   Bezeichnung.ARTIKEL = "NEU"
 ELSE 
   IF Bezeichnung.artikel = "" THEN Bezeichnung.artikel = Bezeichnung.schein
 END IF 
  uuu% = umrechnung.artikel
 ek.artikel = ek.schein * umrechnung.artikel
 vknetto.artikel = vknetto.schein * umrechnung.artikel
 bezugsmenge.artikel = bezugsmenge.schein
 rme1.artikel = rme1.schein
 rmeproz1.artikel = rmeproz1.schein
 rmedm1.artikel = rmedm1.schein * umrechnung.artikel
 rme2.artikel = rme2.schein
 rmeproz2.artikel = rmeproz2.schein
 rmedm2.artikel = rmedm2.schein * umrechnung.artikel
 rme3.artikel = rme3.schein
 rmeproz3.artikel = rmeproz3.schein
 rmedm3.artikel = rmedm3.schein * umrechnung.artikel
 rme4.artikel = rme4.schein
 rmeproz4.artikel = rmeproz4.schein
 rmedm4.artikel = rmedm4.schein * umrechnung.artikel
 rme5.artikel = rme5.schein
 rmeproz5.artikel = rmeproz5.schein
 rmedm5.artikel = rmedm5.schein * umrechnung.artikel
 CALL CHVKNetto()
 IF MwSt.artikel <> MwSt.schein THEN 
   MwSt.artikel = MwSt.schein
   CALL CHMwSt()
 END IF 
 
 CALL ArtDMEuro()
 CALL QuickStore("artikel")
 REQUEST "Artikelpreise wurden Åbernommen","",2
 SELECT KEY codesch% LOCK FILE "schein" INDEX codesch.schein
 END SUB 
 
SUB ArtiEintrPrBru()
 codear% = Codear.schein
 codesch% = CodeSch.schein
 REQUEST "Wollen Sie die Artikelpreise Åbernehmen?","",130,req%
 IF req% <> 1 THEN END SUB 
 IF Bezeichnung.schein = "" THEN Bezeichnung.schein = "NEU"
 IF codear% = 0 THEN 
   BLANK FILE "artikel"
   codear% = SER ("artikel")
   codear.schein = codear%
   CALL QuickStore("Schein")
   codear.artikel = codear%
   CALL QuickStore("artikel")
 ELSE 
   CALL QuickStore("Schein")
 END IF 
 IF codegr.schein = 0 THEN CALL ARTGruppeS()
 SELECT KEY codear% LOCK FILE "Artikel" INDEX codear.artikel
 IF Bezeichnung.ARTIKEL = "" AND Bezeichnung.schein = "" THEN 
   Bezeichnung.ARTIKEL = "NEU"
 ELSE 
   IF Bezeichnung.artikel = "" THEN Bezeichnung.artikel = Bezeichnung.schein
 END IF 
 ek.artikel = ek.schein
 vkbrutto.artikel = vknetto.schein
 bezugsmenge.artikel = bezugsmenge.schein
 rme1.artikel = rme1.schein
 rmeproz1.artikel = rmeproz1.schein
 rmedm1.artikel = rmedm1.schein
 rme2.artikel = rme2.schein
 rmeproz2.artikel = rmeproz2.schein
 rmedm2.artikel = rmedm2.schein
 rme3.artikel = rme3.schein
 rmeproz3.artikel = rmeproz3.schein
 rmedm3.artikel = rmedm3.schein
 rme4.artikel = rme4.schein
 rmeproz4.artikel = rmeproz4.schein
 rmedm4.artikel = rmedm4.schein
 rme5.artikel = rme5.schein
 rmeproz5.artikel = rmeproz5.schein
 rmedm5.artikel = rmedm5.schein
 CALL CHVKBrutto()
 IF MwSt.artikel <> MwSt.schein THEN 
   MwSt.artikel = MwSt.schein
   CALL CHMwSt()
 END IF 
 CALL ArtDMEuro()
 CALL QuickStore("artikel")
 REQUEST "Artikelpreise wurden Åbernommen","",2
 SELECT KEY codesch% LOCK FILE "schein" INDEX codesch.schein
 END SUB 
 
SUB ArtiEintragText()
 codear% = Codear.schein
 codesch% = CodeSch.schein
 REQUEST "Wollen Sie die Artikeltexte Åbernehmen?","",130,req%
 IF req% <> 1 THEN END SUB 
 IF codear% = 0 THEN 
   BLANK FILE "artikel"
   codear% = SER ("artikel",1)
   codear.schein = codear%
   CALL QuickStore("Schein")
   codear.artikel = codear%
   REM 130699
     NUMBASE "z99999999.999999"
         euro% = umrechnung.stamm
         codew% = codew.stamm
 
     waehrung.artikel = zweitwaehr$
     umrechnung.artikel = euro%
     codew.artikel = codew%
   CALL QuickStore("artikel")
 ELSE 
   CALL QuickStore("Schein")
 END IF 
 IF codegr.schein = 0 THEN CALL ARTGruppeS()
 SELECT KEY codear% LOCK FILE "Artikel" INDEX codear.artikel
 Artikelnummer.artikel = artikelnummer.schein
 Bezeichnung.artikel = Bezeichnung.schein
 Beschreibung.artikel = Beschreibung.schein
 ME_.artikel = ME_.schein
 CALL QuickStore("artikel")
  REQUEST "Artikeltexte wurden Åbernommen","",2
 SELECT KEY codesch% LOCK FILE "schein" INDEX codesch.schein
 END SUB 
 
 
 
SUB Warenart(dat$)
 codere% = Codere.dat$
 alle$ = "n"
 IF NEW (dat$) OR MOD (dat$) THEN CALL QuickStore(dat$)
 SET STATUS "Warenartvergabe"
 cfile$ = FILE 
 CALL DFile(3,"Warenart" + _fpw$)
 CALL DFile(3,"Wagruppe" + _fpw$)
 DIM Keyword$( RECCOUNT ("Warenart"))
 DIM Auswahl$(1)
bnf170120051: 
 REDIM Keyword$(1,1)
 REDIM Keyword$( RECCOUNT ("Warenart"))
 
     a% = 0
     FILE "WAGRUPPE"
     INDEX wgruppe.wagruppe
     SELECT FIRST FILE "WAGRUPPE"
     FILE "Warenart"
     INDEX Warenart.warenart
     SELECT FIRST 
     rec1a% = RECCOUNT ("wagruppe") + RECCOUNT ("warenart")
     REDIM ProdGruppen1$(1,1)
     REDIM ProdGruppen1$(rec1a%)
     WHILE NOT EOF ("wagruppe")
       FILE "wagruppe"
       sok% = - 1
       IF alle$ = "n" THEN 
         IF novi1.wagruppe = 1 THEN sok% = 0
       END IF 
       IF sok% THEN 
         codewgru% = codewgru.wagruppe
         IF novi1.wagruppe = 1 THEN 
           ProdGruppen1$(a%) = wgruppe.wagruppe + " ### " + SPACE$ (100) + STR$ (codewgru.wagruppe,"000000")
         ELSE 
           ProdGruppen1$(a%) = wgruppe.wagruppe + SPACE$ (100) + STR$ (codewgru.wagruppe,"000000")
         END IF 
         a% = a% + 1
         FILE "warenart"
         INDEX warenart.warenart
         SELECT FIRST FILE "warenart"
         WHILE NOT EOF ("warenart")
           ook% = - 1
           IF alle$ = "n" THEN 
             IF novi1.warenart = 1 THEN ook% = 0
           END IF 
           IF codewgru.warenart <> codewgru% THEN ook% = 0
           IF dat$ LIKE "reing*" THEN 
             IF rea.warenart = 1 THEN ook% = 0
           END IF 
           IF dat$ LIKE "rausg*" THEN 
             IF rea.warenart = 2 THEN ook% = 0
           END IF 
           IF ook% THEN 
             IF novi1.wagruppe = 1 THEN 
               ProdGruppen1$(a%) = "  |-- " + Warenart.warenart + " ### " + SPACE$ (100) + STR$ (codewa.warenart,"000000")
             ELSE 
               ProdGruppen1$(a%) = "  |-- " + Warenart.warenart + SPACE$ (100) + STR$ (codewa.warenart,"000000")
             END IF 
             a% = a% + 1
           END IF 
           SELECT NEXT FILE "warenart"
         WEND 
         REM war1old$ = war1$
       END IF 
       FILE "WAGRUPPE"
       SELECT NEXT FILE "Wagruppe"
     WEND 
  
  
 MOUSE ON 
nochmal170120051: 
 CREATE DIALOG "KEYWORD",0,0,233,310,"Buchungskonto","MS Sans Serif",8
 ADD DIALOG "KEYWORD",4,0,1,233,280,0,""
 ADD DIALOG "KEYWORD",9,4,12,21,24,2
 IF dat$ LIKE "rausgan*" THEN 
   ADD DIALOG "KEYWORD",5,31,14,189,29,0,"Bitte wÑhlen Sie das Buchungskonto, das in den aktuellen Rech.ausgang aufgenommen werden soll:"
 ELSE 
   ADD DIALOG "KEYWORD",5,31,14,189,29,0,"Bitte wÑhlen Sie das Buchungskonto, das in den aktuellen Rech.eingang aufgenommen werden soll:"
 END IF 
 ADD DIALOG "KEYWORD",5,5,258,189,19,0,"Falls das Buchungskonto nicht existiert, ist dieses unter Stammdaten/Buchungskonto zu erfassen!"
 ADD DIALOG "KEYWORD",7,5,38,222,222,0,2,ProdGruppen1$,Auswahl$,prompt$
 REM ADD DIALOG "KEYWORD",6,31,178,188,12,8,0,KW$,20
 ADD DIALOG "KEYWORD",1,37,292,55,15,1,"&OK",1,1
 ADD DIALOG "KEYWORD",1,93,292,55,15,0,"&Abbrechen",0,0
 ADD DIALOG "KEYWORD",1,149,292,55,15,0,"Alle",2,2
 DIALOG "KEYWORD",req%
 REMOVE DIALOG "KEYWORD"
 IF req% = 2 THEN 
   alle$ = "j"
   GOTO bnf170120051
 END IF 
 IF req% < 2 AND req% > 0 THEN 
   REM IF kw$ = "" THEN kw$ = Auswahl$(0)
   REM 17012005
   IF Auswahl$(0) LIKE "*|--*" THEN 
     codewa% = VAL ( RIGHT$ (Auswahl$(0),6))
   ELSE 
     CALL Fehler("Sie dÅrfen keine Buchungsgruppe auswÑhlen, sondern mÅssen ein Buchungskonto auswÑhlen!","Die Buchungskonten sind mit |-- gekennzeichnet!")
     GOTO nochmal170120051
   END IF 
   SELECT FIRST FILE "Warenart" INDEX codewa.Warenart
   SELECT KEY codewa% FILE "Warenart" INDEX codewa.Warenart
     codewgru% = codewgru.warenart
     SELECT FIRST FILE "wagruppe" INDEX codewgru.wagruppe
     SELECT KEY codewgru% FILE "wagruppe" INDEX codewgru.wagruppe
     SELECT KEY codewa% FILE "warenart" INDEX codewa.warenart
     SELECT KEY codere% LOCK FILE dat$ INDEX Codere.dat$
     Warenart.dat$ = Warenart.warenart
     codewa.dat$ = codewa%
     codewgru.dat$ = codewgru.warenart
     wgruppe.dat$ = WGruppe.wagruppe
     CALL FStore(dat$)
     CALL REUpdate(dat$)
 END IF 
   IF req% = 2 THEN 
     REM ** Stichwort aus Datei ARTIKEYS lîschen
     IF EXISTS (kw$,Warenart.Warenart) THEN 
       SELECT KEY kw$ LOCK FILE "Warenart" INDEX Warenart.Warenart
       REQUEST "Wollen Sie die Warenart " + CHR$ (34) + kw$ + CHR$ (34),"wirklich aus der Warenartliste entfernen?",135,req2%
       IF req2% = 1 THEN 
         SELECT REMOVE 
         SET STATUS "Warenart gelîscht"
       END IF 
     ELSE 
       CALL Fehler("Die eingegebene Warenart ist nicht in der Warenartliste enthalten!","")
     END IF 
   END IF 
 END IF 
 SET STATUS "Bereit"
 FILE cfile$
 MOUSE ON 
 END SUB 
  
 REM Umrechnung DM->Euro fÅr Artikeldatei
SUB ArtDMEuro()
 REM Euro
 IF umrechnung.artikel <> 0 THEN euro% = umrechnung.artikel
 IF KombiNetto.ARTIKEL <> 0 THEN 
   KombiNettoEu.ARTIKEL = VAL ( STR$ (KombiNetto.ARTIKEL / euro%,",999999999.00"))
 ELSE 
   KombiNettoEu.ARTIKEL = 0
 END IF 
 IF ek.artikel <> 0 THEN 
   ek$ = STR$ (ek.artikel,",99999.00")
   ekeu.artikel = VAL ( STR$ (ek.artikel / euro%,",999999999.00"))
 ELSE 
   ekeu.artikel = 0
 END IF 
 IF KostenTransport.artikel <> 0 THEN 
   KostTransEu.artikel = VAL ( STR$ (KostenTransport.artikel / euro%,",999999999.00"))
 ELSE 
   Kosttranseu.artikel = 0
 END IF 
 IF KostenReparatur.artikel <> 0 THEN 
   KostRepEu.artikel = VAL ( STR$ (KostenReparatur.artikel / euro%,",999999999.00"))
 ELSE 
   kostrepeu.artikel = 0
 END IF 
 IF KostenSonstiges.artikel <> 0 THEN 
   KostSonstEu.artikel = VAL ( STR$ (KostenSonstiges.artikel / euro%,",999999999.00"))
 ELSE 
   kostsonsteu.artikel = 0
 END IF 
 geseinkauf% = VAL ( STR$ (ekeu.artikel + KostTransEu.artikel + KostRepEu.artikel + KostSonstEu.artikel,",999999999.00"))
 IF VKnetto.ARTIKEL <> 0 THEN 
   VKnettoEu.ARTIKEL = VAL ( STR$ (VKnetto.ARTIKEL / euro%,",999999999.00"))
 ELSE 
   vknettoeu.artikel = 0
 END IF 
 IF vknettoeu.artikel <> 0 THEN 
   VKbruttoEu.ARTIKEL = VAL ( STR$ (VKnettoEu.ARTIKEL + ((VKnettoEu.ARTIKEL / 100) * MwSt.ARTIKEL),",999999999.00"))
 ELSE 
   vkbruttoeu.artikel = 0
 END IF 
 IF KombiNetto.ARTIKEL <> 0 THEN 
   KombiNettoEu.ARTIKEL = VAL ( STR$ (KombiNetto.ARTIKEL / euro%,",999999999.00"))
 ELSE 
   kombinettoeu.artikel = 0
 END IF 
 IF KombiNettoEu.ARTIKEL <> 0 THEN 
   KombiBruttoEu.ARTIKEL = VAL ( STR$ (KombiNettoEu.ARTIKEL + ((KombiNettoEu.ARTIKEL / 100) * MwSt.Artikel),",999999999.00"))
 ELSE 
   kombibruttoeu.artikel = 0
 END IF 
 IF KombiNettoEu.ARTIKEL <> 0 THEN KHSpannePEu$ = STR$ ((100 / geseinkauf% * KombiNettoEu.ARTIKEL) - 100,",9999999999.00")
 IF KombiNettoEu.ARTIKEL <> 0 THEN KHSpanneEu$ = STR$ (KombiNettoEu.ARTIKEL - geseinkauf%,",9999999999.00")
 IF lieferek.artikel <> 0 THEN 
   LieferEKEu.artikel = VAL ( STR$ (Lieferek.artikel / euro%,",999999999.00"))
 ELSE 
   lieferekeu.artikel = 0
 END IF 
 IF lieferek2.artikel <> 0 THEN 
   LieferEK2Eu.artikel = VAL ( STR$ (Lieferek2.artikel / euro%,",999999999.00"))
 ELSE 
   lieferek2eu.artikel = 0
 END IF 
 IF lieferek3.artikel <> 0 THEN 
   LieferEK3Eu.artikel = VAL ( STR$ (Lieferek3.artikel / euro%,",999999999.00"))
 ELSE 
   lieferek3eu.artikel = 0
 END IF 
 IF RMeDM1.artikel <> 0 THEN 
   RMeEu1.artikel = VAL ( STR$ (Rmedm1.artikel / euro%,",999999999.00"))
 ELSE 
   rmeeu1.artikel = 0
 END IF 
 IF RMeDM2.artikel <> 0 THEN 
   RMeEu2.artikel = VAL ( STR$ (Rmedm2.artikel / euro%,",999999999.00"))
 ELSE 
   rmeeu2.artikel = 0
 END IF 
 IF RMeDM3.artikel <> 0 THEN 
   RMeEu3.artikel = VAL ( STR$ (Rmedm3.artikel / euro%,",999999999.00"))
 ELSE 
   rmeeu3.artikel = 0
 END IF 
 IF RMeDM4.artikel <> 0 THEN 
   RMeEu4.artikel = VAL ( STR$ (Rmedm4.artikel / euro%,",999999999.00"))
 ELSE 
   rmeeu4.artikel = 0
 END IF 
 IF RMeDM5.artikel <> 0 THEN 
   RMeEu5.artikel = VAL ( STR$ (Rmedm5.artikel / euro%,",999999999.00"))
 ELSE 
   rmeeu5.artikel = 0
 END IF 
 IF Inventurpreis.artikel <> 0 THEN 
   InventurpreisEu.artikel = VAL ( STR$ (Inventurpreis.artikel / euro%,",999999999.00"))
 ELSE 
   Inventurpreiseu.artikel = 0
 END IF 
  IF KombiNettoEu.ARTIKEL = 0 THEN 
   KHSpannePEu$ = "- - -"
   KHSpanneEu$ = "- - -"
 END IF 
 END SUB 
 
 REM Umrechnung Euro->DM fÅr Artikeldatei
SUB ArtEuroDM()
 REM Euro
 IF umrechnung.artikel <> 0 THEN euro% = umrechnung.artikel
 IF KombiNettoEu.ARTIKEL <> 0 THEN 
   KombiNetto.ARTIKEL = VAL ( STR$ (KombiNettoeu.ARTIKEL * euro%,",999999999.00"))
 END IF 
 IF ekeu.artikel <> 0 THEN 
   ek.artikel = VAL ( STR$ (ekeu.artikel * euro%,",999999999.00"))
 ELSE 
   ek.artikel = 0
 END IF 
 IF KostTransEu.artikel <> 0 THEN 
   KostenTransport.artikel = VAL ( STR$ (KostTransEu.artikel * euro%,",999999999.00"))
 ELSE 
   kostentransport.artikel = 0
 END IF 
 IF KostRepEu.artikel <> 0 THEN 
   KostenReparatur.artikel = VAL ( STR$ (KostRepEu.artikel * euro%,",999999999.00"))
 ELSE 
   kostenreparatur.artikel = 0
 END IF 
 IF KostSonstEu.artikel <> 0 THEN 
   KostenSonstiges.artikel = VAL ( STR$ (KostSonstEu.artikel * euro%,",999999999.00"))
 ELSE 
   kostensonstiges.artikel = 0
 END IF 
 geseinkauf% = VAL ( STR$ (ek.artikel + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel,",999999999.00"))
 IF VKnettoEu.ARTIKEL <> 0 THEN 
   VKnetto.ARTIKEL = VAL ( STR$ (VKnettoEu.ARTIKEL * euro%,",999999999.00"))
 ELSE 
   vknetto.artikel = 0
 END IF 
 IF vknetto.artikel <> 0 THEN 
   VKbrutto.ARTIKEL = VAL ( STR$ (VKnetto.ARTIKEL + ((VKnetto.ARTIKEL / 100) * MwSt.ARTIKEL),",999999999.00"))
 ELSE 
   vkbrutto.artikel = 0
 END IF 
 IF KombiNettoEU.ARTIKEL <> 0 THEN 
   KombiNetto.ARTIKEL = VAL ( STR$ (KombiNettoEU.ARTIKEL * euro%,",999999999.00"))
 ELSE 
   KombiNetto.artikel = 0
 END IF 
 IF KombiNetto.ARTIKEL <> 0 THEN 
   KombiBrutto.ARTIKEL = VAL ( STR$ (KombiNetto.ARTIKEL + ((KombiNetto.ARTIKEL / 100) * MwSt.Artikel),",999999999.00"))
 ELSE 
   kombibrutto.artikel = 0
 END IF 
 IF KombiNetto.ARTIKEL <> 0 THEN KHSpanneP$ = STR$ ((100 / geseinkauf% * KombiNetto.ARTIKEL) - 100,",9999999999.00")
 IF KombiNetto.ARTIKEL <> 0 THEN KHSpanneDM$ = STR$ (KombiNetto.ARTIKEL - geseinkauf%,",9999999999.00")

 IF lieferekeu.artikel <> 0 THEN 
   LieferEK.artikel = VAL ( STR$ (Lieferekeu.artikel * euro%,",999999999.00"))
 ELSE 
   lieferek.artikel = 0
 END IF 
 IF lieferek2eu.artikel <> 0 THEN 
   LieferEK2.artikel = VAL ( STR$ (Lieferek2eu.artikel * euro%,",999999999.00"))
 ELSE 
   lieferek2.artikel = 0
 END IF 
 IF lieferek3eu.artikel <> 0 THEN 
   LieferEK3.artikel = VAL ( STR$ (Lieferek3eu.artikel * euro%,",999999999.00"))
 ELSE 
   lieferek3.artikel = 0
 END IF 
 IF RMeEu1.artikel <> 0 THEN 
   RMeDM1.artikel = VAL ( STR$ (RmeEu1.artikel * euro%,",999999999.00"))
 ELSE 
   rmedm1.artikel = 0
 END IF 
 IF RMeEu2.artikel <> 0 THEN 
   RMeDM2.artikel = VAL ( STR$ (RmeEu2.artikel * euro%,",999999999.00"))
 ELSE 
   rmedm2.artikel = 0
 END IF 
 IF RMeEu3.artikel <> 0 THEN 
   RMeDM3.artikel = VAL ( STR$ (RmeEu3.artikel * euro%,",999999999.00"))
 ELSE 
   rmedm3.artikel = 0
 END IF 
 IF RMeEu4.artikel <> 0 THEN 
   RMeDM4.artikel = VAL ( STR$ (RmeEu4.artikel * euro%,",999999999.00"))
 ELSE 
   rmedm4.artikel = 0
 END IF 
 IF RMeEu5.artikel <> 0 THEN 
   RMeDM5.artikel = VAL ( STR$ (RmeEu5.artikel * euro%,",999999999.00"))
 ELSE 
   rmedm5.artikel = 0
 END IF 
 IF InventurpreisEu.artikel <> 0 THEN 
   Inventurpreis.artikel = VAL ( STR$ (InventurpreisEu.artikel * euro%,",999999999.00"))
 ELSE 
   Inventurpreis.artikel = 0
 END IF 
 IF KombiNetto.ARTIKEL = 0 THEN 
   KHSpanneP$ = "- - -"
   KHSpanneDM$ = "- - -"
 END IF 
 END SUB 
  
 REM Umrechnung MASTER DM->EURO
SUB MADMEuro()
   IF umrechnung.master <> 0 THEN euro% = umrechnung.master
   IF EKNetto <> 0 THEN EKNettoEu = VAL ( STR$ (EKNetto / euro%,",999999999.00")) ELSE EKNettoEu = 0
   IF PreisNetto <> 0 THEN PreisNettoEu = VAL ( STR$ (PreisNetto / euro%,",999999999.00")) ELSE PreisNettoEu = 0
   IF PreisBrutto <> 0 THEN PreisBruttoEu = VAL ( STR$ (PreisBrutto / euro%,",999999999.00")) ELSE PreisBruttoEu = 0
   IF GesNetto <> 0 THEN GesNettoEu = VAL ( STR$ (GesNetto / euro%,",999999999.00")) ELSE GesNettoEu = 0
   IF GesBrutto <> 0 THEN GesBruttoEu = VAL ( STR$ (GesBrutto / euro%,",999999999.00")) ELSE GesBruttoEu = 0
   IF Skonto <> 0 THEN SkontoEu = VAL ( STR$ (Skonto / euro%,",999999999.00")) ELSE SkontoEu = 0
   IF Rabatt <> 0 THEN RabattEu = VAL ( STR$ (Rabatt / euro%,",999999999.00")) ELSE RabattEu = 0
   IF BuchBrutto <> 0 THEN BuchBruttoEu = VAL ( STR$ (BuchBrutto / euro%,",999999999.00")) ELSE BuchBruttoEu = 0
   IF ProvisDM <> 0 THEN ProvisEu = VAL ( STR$ (ProvisDM / euro%,",999999999.00")) ELSE ProvisEu = 0
   IF BuchProv <> 0 THEN BuchProvEu = VAL ( STR$ (BuchProv / euro%,",999999999.00")) ELSE BuchProvEu = 0
   IF ProvisGesDM <> 0 THEN ProvisGesEu = VAL ( STR$ (ProvisGesDM / euro%,",999999999.00")) ELSE ProvisGesEu = 0
   IF ProvisausPosDM <> 0 THEN ProvisausPosEu = VAL ( STR$ (ProvisausPosDM / euro%,",999999999.00")) ELSE ProvisausPosEu = 0
   IF frachtfrei <> 0 THEN frachtfreiEu = VAL ( STR$ (frachtfrei / euro%,",999999999.00")) ELSE frachtfreiEu = 0
 
 END SUB 






 REM Umrechnung DM->Euro Schein-Datei

SUB SCHDMEuro()
 IF umrechnung.schein <> 0 THEN euro% = umrechnung.schein
 IF ek.schein <> 0 THEN 
   EKeu$ = STR$ (EK.schein / euro%,",999999999.00")
   EKeu.schein = VAL (EKeu$)
 ELSE 
   ekeu.schein = 0
 END IF 
 IF VKNetto.schein <> 0 THEN 
   VKNettoEu$ = STR$ (VKNetto.schein / euro%,",999999999.00")
   VKNettoEu.schein = VAL (VKNettoEu$)
 ELSE 
   VKNettoEU.schein = 0
 END IF 
 IF VKBrutto.schein <> 0 THEN 
   VKBruttoEu$ = STR$ (VKBrutto.schein / euro%,",999999999.00")
   VKBruttoEu.schein = VAL (VKBruttoEu$)
 ELSE 
   VKBruttoEu.schein = 0
 END IF 
 IF GesamtNetto.schein <> 0 THEN 
   GesNettoEu$ = STR$ (GesamtNetto.schein / euro%,",999999999.00")
   GesNettoEu.schein = VAL (GesNettoEu$)
 ELSE 
   GesNettoEU.schein = 0
 END IF 
 IF GesamtBrutto.schein <> 0 THEN 
   GesBruttoEu$ = STR$ (GesamtBrutto.schein / euro%,",999999999.00")
   GesBruttoEu.schein = VAL (GesBruttoEu$)
 ELSE 
   GesBruttoEU.schein = 0
 END IF 
 IF Rabatt.schein <> 0 THEN 
   RabattEu$ = STR$ (Rabatt.schein / euro%,",999999999.00")
   RabattEu.schein = VAL (RabattEu$)
 ELSE 
   RabattEU.schein = 0
 END IF 
 IF RmeDM1.schein <> 0 THEN 
   RmeEu1$ = STR$ (RmeDM1.schein / euro%,",999999999.00")
   RmeEu1.schein = VAL (RmeEu1$)
 ELSE 
   RmeEU1.schein = 0
 END IF 
 IF RmeDM2.schein <> 0 THEN 
   RmeEu2$ = STR$ (RmeDM2.schein / euro%,",999999999.00")
   RmeEu2.schein = VAL (RmeEu2$)
 ELSE 
   RmeEU2.schein = 0
 END IF 
 IF RmeDM3.schein <> 0 THEN 
   RmeEu3$ = STR$ (RmeDM3.schein / euro%,",999999999.00")
   RmeEu3.schein = VAL (RmeEu3$)
 ELSE 
   RmeEU3.schein = 0
 END IF 
 IF RmeDM4.schein <> 0 THEN 
   RmeEu4$ = STR$ (RmeDM4.schein / euro%,",999999999.00")
   RmeEu4.schein = VAL (RmeEu4$)
 ELSE 
   RmeEU4.schein = 0
 END IF 
 IF RmeDM5.schein <> 0 THEN 
   RmeEu5$ = STR$ (RmeDM5.schein / euro%,",999999999.00")
   RmeEu5.schein = VAL (RmeEu5$)
 ELSE 
   RmeEU5.schein = 0
 END IF 

 IF ProvisDM.schein <> 0 THEN 
   ProvisEu$ = STR$ (ProvisDM.schein / euro%,",999999999.00")
   ProvisEu.schein = VAL (ProvisEu$)
 ELSE 
   ProvisEU.schein = 0
 END IF 

 END SUB 
  


 REM Umrechnung Euro->DM Schein-Datei
 
SUB SCHEuroDM()
 IF umrechnung.schein <> 0 THEN euro% = umrechnung.schein
 IF ekEU.schein <> 0 THEN 
   EK.schein = VAL ( STR$ (EKEU.schein * euro%,",999999999.00"))
 ELSE 
   ek.schein = 0
 END IF 
 IF VKNettoEU.schein <> 0 THEN 
   VKNetto.schein = VAL ( STR$ (VKNettoEU.schein * euro%,",999999999.00"))
 ELSE 
   VKNetto.schein = 0
 END IF 
 IF VKBruttoEU.schein <> 0 THEN 
   VKBrutto.schein = VAL ( STR$ (VKBruttoEU.schein * euro%,",999999999.00"))
 ELSE 
   VKBrutto.schein = 0
 END IF 
 IF GesNettoEU.schein <> 0 THEN 
   GesamtNetto.schein = VAL ( STR$ (GesNettoEU.schein * euro%,",999999999.00"))
 ELSE 
   GesamtNetto.schein = 0
 END IF 
 IF GesBruttoEU.schein <> 0 THEN 
   GesamtBrutto.schein = VAL ( STR$ (GesBruttoEU.schein * euro%,",999999999.00"))
 ELSE 
   GesamtBrutto.schein = 0
 END IF 
 IF RabattEU.schein <> 0 THEN 
   Rabatt.schein = VAL ( STR$ (RabattEU.schein * euro%,",999999999.00"))
 ELSE 
   Rabatt.schein = 0
 END IF 
 IF RmeEU1.schein <> 0 THEN 
   RmeDM1.schein = VAL ( STR$ (RmeEU1.schein * euro%,",999999999.00"))
 ELSE 
   RmeDM1.schein = 0
 END IF 



 IF RmeEU2.schein <> 0 THEN 
   RmeDM2.schein = VAL ( STR$ (RmeEU2.schein * euro%,",999999999.00"))
 ELSE 
   RmeDM2.schein = 0
 END IF 
 IF RmeEU3.schein <> 0 THEN 
   RmeDM3.schein = VAL ( STR$ (RmeEU3.schein * euro%,",999999999.00"))
 ELSE 
   RmeDM3.schein = 0
 END IF 
 IF RmeEU4.schein <> 0 THEN 
   RmeDM4.schein = VAL ( STR$ (RmeEU4.schein * euro%,",999999999.00"))
 ELSE 
   RmeDM4.schein = 0
 END IF 
 IF RmeEU5.schein <> 0 THEN 
   RmeDM5.schein = VAL ( STR$ (RmeEU5.schein * euro%,",999999999.00"))
 ELSE 
   RmeDM5.schein = 0
 END IF 
 IF ProvisEU.schein <> 0 THEN 
   ProvisDM.schein = VAL ( STR$ (ProvisEU.schein * euro%,",999999999.00"))
 ELSE 
   ProvisDM.schein = 0
 END IF 
 END SUB 
 
 



 REM Berechnung fÅr Brutto/Netto RA und RE Buch
SUB RERABrut()
   test1% = Gesnetto
   mwstberech$ = STR$ ((Gesnetto / 100 * MwSt),"99999999.00")
   bruttoberech$ = STR$ ((GesNetto + (Gesnetto / 100 * MwSt)),"99999999.00")
   skontoberech$ = STR$ (( VAL (bruttoberech$) / 100 * SkontoProz),"99999999.00")
   skbruttoberech$ = STR$ (( VAL (bruttoberech$) - ( VAL (bruttoberech$) / 100 * SkontoProz)),"99999999.00")
   
   mwstberechEU$ = STR$ ((GesnettoEU / 100 * MwSt),"99999999.00")
   brutberechEU$ = STR$ ((GesNettoEU + (GesnettoEU / 100 * MwSt)),"99999999.00")
   skontoberechEU$ = STR$ (( VAL (brutberechEU$) / 100 * SkontoProz),"99999999.00")
   skbrutberechEU$ = STR$ (( VAL (brutberechEU$) - ( VAL (brutberechEU$) / 100 * SkontoProz)),"99999999.00")
 END SUB 




 REM Sichern RE/RA
SUB Sich(dat$)
 MOUSE OFF 
 codere% = codere.dat$
 codems% = codems.dat$
 fff$ = FORM 
 
   IF UCASE$ ( FORM ) = "PRJRAUS" OR UCASE$ ( FORM ) = "PRJREIN" THEN 
     umrechnung% = umrechnung.dat$
     gesnettoeu.dat$ = gesnetto.dat$ / umrechnung.dat$
     gesbruttoeu.dat$ = gesbrutto.dat$ / umrechnung.dat$
     gesnettoskeu.dat$ = gesnettosk.dat$ / umrechnung.dat$
     gesbruttoskeu.dat$ = gesbruttosk.dat$ / umrechnung.dat$
     preisnettoeu.dat$ = preisnetto.dat$ / umrechnung.dat$
     preisbruttoeu.dat$ = preisbrutto.dat$ / umrechnung.dat$
     proviseu.dat$ = provis.dat$ / umrechnung.dat$
     rabatteu.dat$ = rabatt.dat$ / umrechnung.dat$
     mwsteu.dat$ = MwStDM.dat$ / umrechnung.dat$
     skontoeu.dat$ = skonto.dat$ / umrechnung.dat$
     GesGutschrEU.dat$ = GesGutschr.dat$ / umrechnung.dat$
     GesNettoteileu.dat$ = gesnettoteil.dat$ / umrechnung.dat$
     GesBruttoteileu.dat$ = gesbruttoteil.dat$ / umrechnung.dat$
   END IF 
   IF UCASE$ ( FORM ) = "PRJRAUSE" OR UCASE$ ( FORM ) = "PRJREINE" THEN 
     gesnetto.dat$ = gesnettoeu.dat$ * umrechnung.dat$
     gesbrutto.dat$ = gesbruttoeu.dat$ * umrechnung.dat$
     gesnettosk.dat$ = gesnettoskeu.dat$ * umrechnung.dat$
     gesbruttosk.dat$ = gesbruttoskeu.dat$ * umrechnung.dat$
     preisnetto.dat$ = preisnettoeu.dat$ * umrechnung.dat$
     preisbrutto.dat$ = preisbruttoeu.dat$ * umrechnung.dat$
     provis.dat$ = proviseu.dat$ * umrechnung.dat$
     rabatt.dat$ = rabatteu.dat$ * umrechnung.dat$
     mwstdm.dat$ = MwSteu.dat$ * umrechnung.dat$
     skonto.dat$ = skontoeu.dat$ * umrechnung.dat$
     GesGutschr.dat$ = GesGutschreu.dat$ * umrechnung.dat$
     GesNettoteil.dat$ = gesnettoteileu.dat$ * umrechnung.dat$
     GesBruttoteil.dat$ = gesbruttoteileu.dat$ * umrechnung.dat$
     codere% = Codere.dat$
     IF dat$ LIKE "REINGANG" THEN 
       
       zuletztbearb% = 0
       GesMahnEu.dat$ = 0
       STORE FILE dat$
       IF MBetr1.dat$ <> 0 THEN 
         
         IF MCodeTeil1.dat$ = 0 OR NOT EXISTS (MCodeTeil1.dat$,codeteil.teilrein) THEN 
           CALL RENeuTeilM("Teilrein","reingang",1)
         ELSE 
           Gcodeteil% = MCodeTeil1.dat$
           SELECT FIRST FILE "teilrein" INDEX codeteil.teilrein
           SELECT KEY GCodeteil% LOCK FILE "teilrein" INDEX codeteil.teilrein
           CALL RENeuTeilME("Teilrein","reingang",1)
         END IF 
         SELECT FIRST FILE "reingang" INDEX codere.reingang
         SELECT KEY codere% LOCK FILE "reingang" INDEX codere.reingang
         MCodeTeil1.dat$ = Gcodeteil%
         GesMahnEu.dat$ = MBetr1.dat$
         STORE FILE "reingang"
         zuletztbearb% = Gcodeteil%
         REM 28122005
       END IF 
       IF MBetr2.dat$ <> 0 THEN 
         IF MCodeTeil2.dat$ = 0 OR NOT EXISTS (MCodeTeil2.dat$,codeteil.teilrein) THEN 
           CALL RENeuTeilM("Teilrein","reingang",2)
         ELSE 
           Gcodeteil% = MCodeTeil2.dat$
           SELECT FIRST FILE "teilrein" INDEX codeteil.teilrein
           SELECT KEY GCodeteil% LOCK FILE "teilrein" INDEX codeteil.teilrein
           CALL RENeuTeilME("Teilrein","reingang",2)
         END IF 
         SELECT FIRST FILE "reingang" INDEX codere.reingang
         SELECT KEY codere% LOCK FILE "reingang" INDEX codere.reingang
         MCodeTeil2.dat$ = Gcodeteil%
         GesMahnEu.dat$ = GesMahnEu.dat$ + MBetr2.dat$
         STORE FILE "reingang"
         zuletztbearb% = Gcodeteil%
       END IF 
       IF MBetr3.dat$ <> 0 THEN 
         IF MCodeTeil3.dat$ = 0 OR NOT EXISTS (MCodeTeil3.dat$,codeteil.teilrein) THEN 
           CALL RENeuTeilM("Teilrein","reingang",3)
         ELSE 
           Gcodeteil% = MCodeTeil3.dat$
           SELECT FIRST FILE "teilrein" INDEX codeteil.teilrein
           SELECT KEY GCodeteil% LOCK FILE "teilrein" INDEX codeteil.teilrein
           CALL RENeuTeilME("Teilrein","reingang",3)
         END IF 
         SELECT FIRST FILE "reingang" INDEX codere.reingang
         SELECT KEY codere% LOCK FILE "reingang" INDEX codere.reingang
         MCodeTeil3.dat$ = Gcodeteil%
         GesMahnEu.dat$ = GesMahnEu.dat$ + MBetr3.dat$
         STORE FILE "reingang"
         zuletztbearb% = Gcodeteil%
       END IF 
       IF MBetr4.dat$ <> 0 THEN 
         IF MCodeTeil4.dat$ = 0 OR NOT EXISTS (MCodeTeil4.dat$,codeteil.teilrein) THEN 
           CALL RENeuTeilM("Teilrein","reingang",4)
         ELSE 
           Gcodeteil% = MCodeTeil4.dat$
           SELECT FIRST FILE "teilrein" INDEX codeteil.teilrein
           SELECT KEY GCodeteil% LOCK FILE "teilrein" INDEX codeteil.teilrein
           CALL RENeuTeilME("Teilrein","reingang",4)
         END IF 
         SELECT FIRST FILE "reingang" INDEX codere.reingang
         SELECT KEY codere% LOCK FILE "reingang" INDEX codere.reingang
         MCodeTeil4.dat$ = Gcodeteil%
         GesMahnEu.dat$ = GesMahnEu.dat$ + MBetr4.dat$
         STORE FILE "reingang"
         zuletztbearb% = Gcodeteil%
       END IF 
       IF MBetr5.dat$ <> 0 THEN 
         IF MCodeTeil5.dat$ = 0 OR NOT EXISTS (MCodeTeil5.dat$,codeteil.teilrein) THEN 
           CALL RENeuTeilM("Teilrein","reingang",5)
         ELSE 
           Gcodeteil% = MCodeTeil5.dat$
           SELECT FIRST FILE "teilrein" INDEX codeteil.teilrein
           SELECT KEY GCodeteil% LOCK FILE "teilrein" INDEX codeteil.teilrein
           CALL RENeuTeilME("Teilrein","reingang",5)
         END IF 
         SELECT FIRST FILE "reingang" INDEX codere.reingang
         SELECT KEY codere% LOCK FILE "reingang" INDEX codere.reingang
         MCodeTeil5.dat$ = Gcodeteil%
         GesMahnEu.dat$ = GesMahnEu.dat$ + MBetr5.dat$
         STORE FILE "reingang"
         zuletztbearb% = Gcodeteil%
       END IF 


       SELECT FIRST FILE "reingang" INDEX codere.reingang
       SELECT KEY codere% LOCK FILE "reingang" INDEX codere.reingang

       IF erledigt.dat$ <> "J" THEN 
         MahnJN.dat$ = "N"
         IF MBetr1.dat$ <> 0 AND Merl1.dat$ <> "J" THEN MahnJN.dat$ = "J"
         IF MBetr2.dat$ <> 0 AND Merl2.dat$ <> "J" THEN MahnJN.dat$ = "J"
         IF MBetr3.dat$ <> 0 AND Merl3.dat$ <> "J" THEN MahnJN.dat$ = "J"
         IF MBetr4.dat$ <> 0 AND Merl4.dat$ <> "J" THEN MahnJN.dat$ = "J"
         IF MBetr5.dat$ <> 0 AND Merl5.dat$ <> "J" THEN MahnJN.dat$ = "J"
       ELSE 
          MahnJN.dat$ = "N"
       END IF 
       IF erledigt.dat$ LIKE "J" AND NOT EXISTS (codere.dat$,codere.teilrein) THEN 
         SummeMahnEu.dat$ = 0
         MahnJN.dat$ = "N"
         IF Merl1.dat$ LIKE "J" THEN SummeMahnEu.dat$ = MBetr1.dat$
         IF Merl2.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr2.dat$
         IF Merl3.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr3.dat$
         IF Merl4.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr4.dat$
         IF Merl5.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr5.dat$
         SummeTeilEu.dat$ = GesBruttoEu.dat$ + SummeMahnEu.dat$
         REM SummeMahnEu.dat$ = GesMahnEu.dat$
         restEu% = GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$
       ELSE 
         IF NOT EXISTS (codere.dat$,codere.teilrein) THEN 
           SummeMahnEu.dat$ = 0
           IF Merl1.dat$ LIKE "J" THEN SummeMahnEu.dat$ = MBetr1.dat$
           IF Merl2.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr2.dat$
           IF Merl3.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr3.dat$
           IF Merl4.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr4.dat$
           IF Merl5.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr5.dat$
           SummeTeilEu.dat$ = GesBruttoEu.dat$ + SummeMahnEu.dat$
           REM SummeMahnEu.dat$ = GesMahnEu.dat$
           restEu% = GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$
           SummeTeilEU.dat$ = SummeMahnEu.dat$
         ELSE 
           GesMahnEu.dat$ = 0
           IF MBetr1.dat$ <> 0 THEN 
             GesMahnEu.dat$ = MBetr1.dat$
           END IF 
           IF MBetr2.dat$ <> 0 THEN GesMahnEu.dat$ = GesMahnEu.dat$ + MBetr2.dat$
           IF MBetr3.dat$ <> 0 THEN GesMahnEu.dat$ = GesMahnEu.dat$ + MBetr3.dat$
           IF MBetr4.dat$ <> 0 THEN GesMahnEu.dat$ = GesMahnEu.dat$ + MBetr4.dat$
           IF MBetr5.dat$ <> 0 THEN GesMahnEu.dat$ = GesMahnEu.dat$ + MBetr5.dat$

           SummeMahnEu.dat$ = 0
           IF Merl1.dat$ LIKE "J" THEN SummeMahnEu.dat$ = MBetr1.dat$
           IF Merl2.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr2.dat$
           IF Merl3.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr3.dat$
           IF Merl4.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr4.dat$
           IF Merl5.dat$ LIKE "J" THEN SummeMahnEu.dat$ = SummeMahnEu.dat$ + MBetr5.dat$
           SummeTeilEu.dat$ = GesBruttoEu.dat$ + SummeMahnEu.dat$
           REM SummeMahnEu.dat$ = GesMahnEu.dat$
           restEu% = GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$
           SummeTeilEU.dat$ = SummeMahnEu.dat$
         END IF 
       END IF 
       IF zuletztbearb% > 0 THEN 
       END IF 
     END IF 
   END IF 
   REM CALL RERABrut()
   STORE FILE dat$
   UNLOCK CURRENT FILE dat$
   SELECT KEY codere% FILE dat$ INDEX codere.dat$
   mwstberech$ = STR$ ((Gesnetto / 100 * MwSt),"99999999.00")
   bruttoberech$ = STR$ ((GesNetto + (Gesnetto / 100 * MwSt)),"99999999.00")
   skontoberech$ = STR$ (( VAL (bruttoberech$) / 100 * SkontoProz),"99999999.00")
   skbruttoberech$ = STR$ (( VAL (bruttoberech$) - ( VAL (bruttoberech$) / 100 * SkontoProz)),"99999999.00")
   
   mwstberechEU$ = STR$ ((GesnettoEU / 100 * MwSt),"99999999.00")
   brutberechEU$ = STR$ ((GesNettoEU + (GesnettoEU / 100 * MwSt)),"99999999.00")
   skontoberechEU$ = STR$ (( VAL (brutberechEU$) / 100 * SkontoProz),"99999999.00")
   skbrutberechEU$ = STR$ (( VAL (brutberechEU$) - ( VAL (brutberechEU$) / 100 * SkontoProz)),"99999999.00")
   IF dat$ LIKE "rausgang" THEN 
     CALL DFile(3,"ABZUGANG" + _fpw$)
     CALL DFile(3,"MASTER" + _fpw$)
     CALL DFile(3,"MAHNUNG" + _fpw$)
   END IF 
    MOUSE OFF 
    REM 231098
    SELECT KEY codere% LOCK FILE dat$ INDEX codere.dat$
    CALL QuickStore(dat$)
    REM 251198
    IF dat$ LIKE "RAUSGANG" THEN 
      IF UCASE$ (erledigt.dat$) LIKE "J" THEN 
        IF codems% > 0 AND EXISTS (codems%,codems.abzugang) THEN 
             SELECT KEY codems% LOCK FILE "ABZUGANG" INDEX Codems.ABZUGANG
             art% = art.abzugang
             DatumGebucht.ABZUGANG = TODAY 
             Kontrolle.ABZUGANG = "n"
             CALL QuickStore("ABZUGANG")
             IF art% = 2 OR art% = 7 THEN 
               IF cashpath$ <> "leer\" AND cashyesno$ = "TRUE" THEN 
                 FILE "master"
                 SELECT KEY codems% FILE "master" INDEX codems.master
                 IF codems% = codems.master THEN 
                   FILE "adressen"
                   SELECT KEY CodeKU.master FILE "adressen" INDEX codeku.adressen
                   IF NOT EOF ("adressen") THEN 
                     IF debitorkto.adressen <> "" THEN 
                       debitakt$ = LTRIM$ (Debitorkto.adressen)
                     END IF 
                   END IF 
                   IF debitakt$ = "" THEN debitakt$ = Debitorkto$
                   DATEBASE "ddmmyy"
                   vdatum$ = DATE$ (datum.master)
                   IF art.master = 2 THEN 
                     betrag$ = LTRIM$ ( STR$ (GesBrutto.master * 100,"999999999999"))
                     buchtext$ = nummer.master + " bezahlt!"
                   ELSE 
                     betrag$ = LTRIM$ ( STR$ (GesBrutto.master * - 100,"999999999999"))
                     buchtext$ = nummer.master + " ausbezahlt!"
                   END IF 
                   BSatz$ = CHR$ (34) + "Z" + CHR$ (34) + "," + CHR$ (34) + LTRIM$ (vdatum$) + CHR$ (34) + "," + CHR$ (34) + buchtext$ + CHR$ (34) + "," + CHR$ (34) + LTRIM$ (nachname.master) + CHR$ (34) + "," + CHR$ (34) + Debitakt$ + CHR$ (34) + ","
                   Bsatz$ = Bsatz$ + CHR$ (34) + Bestandskto$ + CHR$ (34) + "," + CHR$ (34) + LTRIM$ ( STR$ (CodeMS.master,"999999")) + CHR$ (34) + "," + CHR$ (34) + betrag$ + CHR$ (34) + "," + CHR$ (34) + "0" + CHR$ (34)
                   cashdatei$ = cashpath$ + "export.asc"
                   IF EXISTS (cashdatei$) THEN 
                     OPEN cashdatei$ FOR APPEND 
                   ELSE 
                     OPEN cashdatei$ FOR OUTPUT 
                   END IF 
                   ? BSatz$
                   CLOSE OUTPUT 
                   BSatz$ = ""
                   IF cashedit$ = "TRUE" THEN 
                     REQUEST "Mîchten Sie die Buchungsdatei einsehen und ggf.","per Hand Ñndern?",130,req22%
                   ELSE 
                     req22% = 0
                   END IF 
                   IF req22% = 1 THEN 
                     CALL EditASCIIFile(cashdatei$)
                   END IF 
                 END IF 
               END IF 
               FILE "abzugang"
             END IF 
           END IF 
           IF EXISTS (codems%,codems.mahnung) THEN 
             SELECT KEY codems% LOCK FILE "mahnung" INDEX codems.mahnung
             StatusMahn.mahnung = "J"
             DatMahnErledigt.mahnung = TODAY 
             CALL QuickStore("MAHNUNG")
           END IF 
      ELSE 
        IF codems% > 0 AND NOT EXISTS (codems%,codems.abzugang) THEN 
          REQUEST "Kein Eintrag in die offenen Postenliste vorhanden!","Wollen Sie einen Eintrag erzeugen?",130,req2%
          IF req2% = 1 THEN 
            SELECT KEY codems% LOCK FILE "master" INDEX Codems.master
            CALL MSBuchung(codems%,0)
          END IF 
        ELSE 
          IF codems% > 0 THEN 
            SELECT KEY codems% LOCK FILE "Abzugang" INDEX codems.abzugang
            Kontrolle.ABZUGANG = "j"
            CALL QuickStore("abzugang")
          END IF 
        END IF 

      END IF 
    END IF 
    CALL DFile(3,"master" + _fpw$)
    IF codems% > 0 AND EXISTS (codems%,codems.master) AND dat$ LIKE "RAUSGANG" THEN 
      SELECT KEY codems% LOCK FILE "master" INDEX codems.master
      Mahnsperre.master = Mahnsperre.rausgang
      MahnsperBisdat.master = MahnsperBisdat.rausgang
      belegnr.master = belegnr.rausgang
      CALL QuickStore("master")
      codeaq% = codeaq.master
      IF EXISTS (codeaq%,codeaq.GAkquiDat$) THEN 
        SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
        IF UCASE$ (erledigt.dat$) LIKE "J" THEN 
          erledigt_Termin.GAkquiDat$ = "j"
        ELSE 
          erledigt_Termin.GAkquiDat$ = "n"
        END IF 
        CALL QuickStore(GAkquiDat$)
      END IF 
    END IF 
    FILE dat$
       IF Gesnetto = 0 THEN 
       MOUSE ON 
       REM CALL Fehler
       REM SELECT FORM KEY codere% FILE dat$ INDEX codere
       REM ENTER gesnetto,0
     ELSE 
       IF mwst = 0 THEN 
         MOUSE ON 
         IF UCASE$ (dat$) <> "REINGANG" THEN CALL Fehler("Das Feld MWST in Prozent mu· ausgefÅllt werden!","Der Datensatz wurde trotzdem gespeichert, wenn Sie Ihn momentan nicht weiterbearbeiten wollen, drÅcken Sie den Button Abbruch!")
         REM SELECT FORM KEY codere% FILE dat$ INDEX codere
         REM ENTER mwst,0
       ELSE 
         IF mwstdm = 0 THEN 
           MOUSE ON 
           CALL Fehler("Das Feld MWST in DM mu· ausgefÅllt werden!","Der Datensatz wurde trotzdem gespeichert, wenn Sie Ihn momentan nicht weiterbearbeiten wollen, drÅcken Sie den Button Abbruch!")
           REM SELECT FORM KEY codere% FILE dat$ INDEX codere
           REM ENTER mwstdm,0
         ELSE 
           IF gesbrutto = 0 THEN 
             MOUSE ON 
             CALL Fehler("Das Feld RE Brutto mu· ausgefÅllt werden!","Der Datensatz wurde trotzdem gespeichert, wenn Sie Ihn momentan nicht weiterbearbeiten wollen, drÅcken Sie den Button Abbruch!")
             REM SELECT FORM KEY codere% FILE dat$ INDEX codere
             REM ENTER gesbrutto,0
           END IF 
         END IF 
       END IF 
     END IF 
     mwstdm$ = STR$ (mwstdm,"9999999999.00")
     mwstdm% = VAL (mwstdm$)
     mwbere% = VAL (mwstberech$)
     brut$ = STR$ (GesBrutto,"9999999999.00")
     brut% = VAL (brut$)
     brutbere% = VAL (bruttoberech$)
     skdm$ = STR$ (skonto,",999999999.00")
     skdm% = VAL (skdm$)
     skbere% = VAL (skontoberech$)

     skbrut$ = STR$ (GesBruttoSK,"9999999999.00")
     skbrut% = VAL (skbrut$)
     skbrutber% = VAL (skbruttoberech$)
     IF dat$ LIKE "rausgang" THEN 
       IF mwbere% <> mwstdm% AND mwstdm% <> 0 THEN CALL Fehler("Die errechnete MWST-Betrag  unterscheidet sich von dem eingegeben MWST-Betrag!","Bitte prÅfen!!!!")
       IF brut% <> brutbere% AND brut% <> 0 THEN CALL Fehler("Der errechnete Bruttobetrag unterscheidet sich von dem eingegeben Bruttobetrag!","Bitte prÅfen!!!!")
       IF skbere% <> skdm% AND skdm% <> 0 THEN CALL Fehler("Der errechnete Skonto-Betrag unterscheidet sich von dem eingegeben Skonto-Betrag!","Bitte prÅfen!!!!")
       IF skbrutber% <> skbrut% AND skbrut% <> 0 THEN CALL Fehler("Der errechnete Bruttobetrag abzÅglich Skonto unterscheidet sich von dem eingegeben Bruttobetrag abz. Skonto!","Bitte prÅfen!!!!")
     END IF 
     MOUSE ON 
 END SUB 


 REM Duplizeren RE/RA
SUB RECopy(dat$)
   REQUEST "Neue Belegnummer vergeben?","",130,req%
   IF req% = 1 THEN 
     IF dat$ LIKE "REINGANG" THEN 
       SELECT FIRST LOCK FILE "stamm"
       REBelegnr.stamm = REBelegnr.stamm + 1
       STORE FILE "stamm"
       UNLOCK CURRENT FILE "stamm"
       nnum% = REBelegnr.stamm
       num$ = "E" + DATE$ ( TODAY ,"yyyymm0d") + "-" + STR$ (nnum%,"000000")
     ELSE 
       SELECT FIRST LOCK FILE "stamm"
       RABelegnr.stamm = RABelegnr.stamm + 1
       STORE FILE "stamm"
       UNLOCK CURRENT FILE "stamm"
       nnum% = RABelegnr.stamm
       num$ = "A" + DATE$ ( TODAY ,"yyyymm0d") + "-" + STR$ (nnum%,"000000")
     END IF 
   END IF 
   SET STATUS "Lege neuen Datensatz an..."
   BLANK DUPLICATE 
   CodeREneu% = SER (dat$,1)
   CodeRE = CodeREneu%
   gesNetto = 0
   gesBrutto = 0
   mwstdm = 0
   skonto = 0
   GesBruttoSK = 0
   IF req% = 1 THEN 
     Belegnr.dat$ = num$
   END IF 
   CALL QuickStore(dat$)
   SELECT FORM KEY codereneu% FILE dat$ INDEX codere
   SET STATUS ""
 END SUB 

 REM Routine zur öbernahme alter Rechunungen in das RA-Buch

SUB TransOldRechRA()
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"schein" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"master" + _fpw$)
 FILE "rausgang"
 INDEX datum.rausgang
 SELECT FIRST 
 ok% = - 1
 WHILE ok% AND NOT EOF ("rausgang")
   date2% = DAYS (datum.rausgang)
   IF date2% > 0 THEN 
     datum1% = datum.rausgang
     ok% = 0
   END IF 
 WEND 
 FILE "master"
 INDEX codems.master
 SELECT FIRST 
 nnum% = 0
 MOUSE OFF 
 WHILE NOT EOF ("master")
   cums% = codems.master
   art% = art.master

   IF (art% = 2 OR art% = 7) AND (datum.master < datum1%) THEN 
       FILE "rausgang"
       IF NOT EXISTS (cums%,codems.rausgang) THEN 
         BLANK FILE "rausgang"
         codere% = SER ("rausgang",1)
         codere.rausgang = codere%
         nnum% = nnum% + 1
         REM nnum% = VAL (ReadConfig$("FACTURA","RABelegnr")) + 1
         REM CALL WriteConfig("FACTURA","RABelegnr", LTRIM$ ( STR$ (nnum%,"0000000")))
         REM num$ = "A" + DATE$ (datum.master,"yyyymm0d") + "-" + STR$ (nnum%,"000000")
         num$ = "OLD" + STR$ (nnum%,"000000")
         belegnr.rausgang = num$
         codems.rausgang = cums%
         codedok.rausgang = codedok.master
         zero.rausgang = 0
         CALL QuickStore("rausgang")
 
         SELECT KEY cums% LOCK FILE "rausgang" INDEX codems.rausgang
         codeku.rausgang = codeku.master
         nachname.rausgang = nachname.master
         zero.rausgang = 0
         vorname.rausgang = vorname.master
         plz.rausgang = plz.master
         ort.rausgang = ort.master
         LRENummer.rausgang = Nummer.master
         SET STATUS nummer.master
         IF Skonto.master <> 0 THEN GesBruttoSK.rausgang = gesBrutto.master - Skonto.master
         Datum.rausgang = Datum.master
         PreisBrutto.rausgang = PreisBrutto.master
         PreisNetto.rausgang = PreisNetto.master
         GesNetto.rausgang = GesNetto.master
         GesBrutto.rausgang = GesBrutto.master
         Kundennummer.rausgang = Kundennummer.master
         KasseJN.rausgang = KasseJN$
         IF KasseJN$ = "J" THEN 
           Ktoauszugsnr.rausgang = "KASSE"
           erledigt.rausgang = "J"
           gezahltAM.rausgang = TODAY 
         END IF 
         IF art% = 7 THEN 
           GutschriftJN.rausgang = "J"
           gesGutschr.rausgang = gesBrutto.master
         ELSE 
           GutschriftJN.rausgang = "N"
         END IF 
         erledigt.rausgang = "J"
         Rabatt.rausgang = Rabatt.master
         RabattProz.rausgang = RabattProz.master
         art.rausgang = art.master
         MwSt.rausgang = MwSt.master
         mwstdm.rausgang = GesBrutto.master - GesNetto.master
         Skonto.rausgang = skonto.master
         SkontoProz.rausgang = SkontoProz.master
         SkontoZiel.rausgang = SkontoZiel.master
         ZahlbarBis.rausgang = Zahldatum.master

         codema.rausgang = codema.master
         codewa.rausgang = 3
         warenart.rausgang = "WARE"
       
         CALL QuickStore("rausgang")
         SELECT KEY cums% LOCK FILE "master" INDEX codems.master
         belegnr.master = belegnr.rausgang
         CALL QuickStore("master")
       END IF 
     END IF 
     FILE "master"
     SELECT NEXT FILE "master"
   WEND 
   SET STATUS ""
   MOUSE ON 
 END SUB 


 ' Rechnungen an WÑhrung anpassen
SUB REDMEuro(dat$)
 IF GesNetto <> 0 THEN GesNettoEu = VAL ( STR$ (GesNetto / umrechnung,",999999999.00"))
 IF GesBrutto <> 0 THEN GesBruttoEu = VAL ( STR$ (GesBrutto / umrechnung,",999999999.00"))
 IF GesNettoSK <> 0 THEN GesNettoSKEu = VAL ( STR$ (GesNettoSK / umrechnung,",999999999.00"))
 IF GesBruttoSK <> 0 THEN GesBruttoSKEu = VAL ( STR$ (GesBruttoSK / umrechnung,",999999999.00"))
 IF PreisNetto <> 0 THEN PreisNettoEu = VAL ( STR$ (PreisNetto / umrechnung,",999999999.00"))
 IF PreisBrutto <> 0 THEN PreisBruttoEu = VAL ( STR$ (PreisBrutto / umrechnung,",999999999.00"))
 IF Provis <> 0 THEN ProvisEU = VAL ( STR$ (Provis / umrechnung,",999999999.00"))
 IF RABATT <> 0 THEN RABATTEU = VAL ( STR$ (RABATT / umrechnung,",999999999.00"))
 IF MWSTDM <> 0 THEN MWSTEU = VAL ( STR$ (MWSTDM / umrechnung,",999999999.00"))
 IF Skonto <> 0 THEN SkontoEU = VAL ( STR$ (Skonto / umrechnung,",999999999.00"))
 IF GesGutschr <> 0 THEN GesGutschrEu = VAL ( STR$ (GesGutschr / umrechnung,",999999999.00"))

 END SUB 

SUB REEuroDM(dat$)
 IF GesNettoEU <> 0 THEN GesNetto = VAL ( STR$ (GesNettoEU * umrechnung,",999999999.00"))
 IF GesBruttoEU <> 0 THEN GesBrutto = VAL ( STR$ (GesBruttoEU * umrechnung,",999999999.00"))
 IF GesNettoSKEU <> 0 THEN GesNettoSK = VAL ( STR$ (GesNettoSKEU * umrechnung,",999999999.00"))
 IF GesBruttoSKEU <> 0 THEN GesBruttoSK = VAL ( STR$ (GesBruttoSKEU * umrechnung,",999999999.00"))
 IF PreisNettoEU <> 0 THEN PreisNetto = VAL ( STR$ (PreisNettoEU * umrechnung,",999999999.00"))
 IF PreisBruttoEU <> 0 THEN PreisBrutto = VAL ( STR$ (PreisBruttoEU * umrechnung,",999999999.00"))
 IF ProvisEU <> 0 THEN Provis = VAL ( STR$ (ProvisEU * umrechnung,",999999999.00"))
 IF RABATTEU <> 0 THEN RABATT = VAL ( STR$ (RABATTEU * umrechnung,",999999999.00"))
 IF MWSTEU <> 0 THEN MWSTDM = VAL ( STR$ (MWSTEU * umrechnung,",999999999.00"))
 IF SkontoEU <> 0 THEN Skonto = VAL ( STR$ (SkontoEU * umrechnung,",999999999.00"))
 IF GesGutschrEU <> 0 THEN GesGutschr = VAL ( STR$ (GesGutschrEU * umrechnung,",999999999.00"))
 
 END SUB 
 


 ' Erstellung einer Mahnung

SUB MahnCreate(codems%,codeaq%)
 MOUSE OFF 
 CALL DFile(3,"RAUSGANG" + _fpw$)
 CALL DFile(3,"MAHNuNG" + _fpw$)
 CALL DFile(3,"FLOSKEL" + _fpw$)
 CALL DFile(3,"UMSATZ" + _fpw$)
 CALL DFile(3,"Teilraus" + _fpw$)
 FILE "MASTER"
 INDEX codems.master
 SELECT FIRST FILE "Master" INDEX codems.master
 SELECT KEY codems% FILE "Master" INDEX codems.master
 FILE "Mahnung"
 INDEX codems.Mahnung
 SELECT FIRST 
 IF NOT EXISTS (codems%,codems.mahnung) THEN 
   prolog1$ = ""
   FILE "floskel"
   SELECT WHERE art.floskel = 1 AND spezial.floskel = 11:REM Kopftext 1. Mahnung
   SELECT FIRST 
   IF NOT EOF ("floskel") THEN 
     prolog1$ = floskel.floskel
   END IF 
   epilog1$ = ""
   SELECT WHERE art.floskel = 2 AND spezial.floskel = 11:REM Fu·text 1. Mahnung
   SELECT FIRST 
   IF NOT EOF ("floskel") THEN 
     epilog1$ = floskel.floskel
   END IF 
   GOTO w260320071
   FILE "master"
   COPY FROM Anrede,Nachname,Geburtsname,Vorname,Stra·e,Ort,PLZ,CodeKU,LAAnrede,LANachname,LAStra·e,LAOrt,LAPLZ,Lieferdatum,Kundennummer,PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   adress$ = adresstext.master
   nummer$ = nummer.master
   datum% = datum.master
   Belegnr$ = belegnr.master
   ProvPosDM% = ProvisausPosDM.master
   ProvisDM% = ProvisDM.master
   ProvisProz% = ProvisProz.master
   ProvisGesDM% = ProvisGesDM.master
   CodeMa% = Codema.master
   Skonto% = Skonto.master
   Rabatt% = Rabatt.master
   BuchBrutto% = BuchBrutto.master
   zahlbarbis% = zahldatum.master
   skontoproz% = skontoproz.master
   skontoziel% = skontoziel.master

   EKNettoEu% = EKNettoEu.master
   PreisNettoEu% = PreisNettoEu.master
   PreisBruttoEu% = PreisBruttoEu.master
   GesNettoEu% = GesNettoEu.master
   GesBruttoEu% = GesBruttoEu.master
   SkontoEu% = SkontoEu.master
   RabattEu% = RabattEu.master
   BuchBruttoEu% = BuchBruttoEu.master
   ProvisEu% = ProvisEu.master
   BuchProvEu% = BuchProvEu.master
   ProvisGesEu% = ProvisGesEu.master
   ProvisausPosEu% = ProvisausPosEu.master
   frachtfreiEu% = frachtfreiEu.master
   Umrechnung% = Umrechnung.master
   CodeW% = CodeW.master
   Waehrung$ = Waehrung.master
   WaehrungBez$ = WaehrungBezeich.master
   codere% = codere.master
 
   numm1$ = GetMahnNr$()
   lieferdat% = Lieferdatum.master









w260320071: 
   BLANK FILE "mahnung"
   aa% = CopyRecord%("master","mahnung")
   GOTO w260320072
   lieferdatum.mahnung = Lieferdat%
   codems.MAHNUNG = codems%
   REM BelegM1.mahnung = numm1$
   BelegM1.mahnung = GetMahnNr$()
   COPY TO Anrede,Nachname,Geburtsname,Vorname,Stra·e,Ort,PLZ,CodeKU,LAAnrede,LANachname,LAStra·e,LAOrt,LAPLZ,Lieferdatum,Kundennummer,PreisNetto,GesNetto,Rabatt,RabattArt,skonto,skontoproz,PreisBrutto,GesBrutto,RabattProz,EKNetto,MwSt,KalkArt,AnzPos
   adresstext.MAHNUNG = adress$
   nummer.mahnung = nummer$
   datum.mahnung = datum%
   Belegnr.mahnung = belegnr$
   ProvisausPosDM.MAHNUNG = ProvPosDM%
   ProvisDM.MAHNUNG = ProvisDM%
   ProvisProz.MAHNUNG = ProvisProz%
   ProvisGesDM.MAHNUNG = ProvisGesDM%
   Codema.MAHNUNG = CodeMa%
   Skonto.MAHNUNG = Skonto%
   Rabatt.MAHNUNG = Rabatt%
   BuchBrutto.MAHNUNG = BuchBrutto%
   BuchProv.MAHNUNG = BuchProv%
   zahldatum.mahnung = zahlbarbis%
   skontoproz.mahnung = skontoproz%
   skontoziel.mahnung = skontoziel%
   codere.mahnung = codere%
   EKNettoEu.MAHNUNG = EKNettoEu%
   PreisNettoEu.MAHNUNG = PreisNettoEu%
   PreisBruttoEu.MAHNUNG = PreisBruttoEu%
   GesNettoEu.MAHNUNG = GesNettoEu%
   GesBruttoEu.MAHNUNG = GesBruttoEu%
   SkontoEu.MAHNUNG = SkontoEu%
   RabattEu.MAHNUNG = RabattEu%
   BuchBruttoEu.MAHNUNG = BuchBruttoEu%
   ProvisEu.MAHNUNG = ProvisEu%
   BuchProvEu.MAHNUNG = BuchProvEu%
   ProvisGesEu.MAHNUNG = ProvisGesEu%
   ProvisausPosEu.MAHNUNG = ProvisausPosEu%
   frachtfreiEu.MAHNUNG = frachtfreiEu%
   Umrechnung.MAHNUNG = Umrechnung%
   CodeW.MAHNUNG = CodeW%
   Waehrung.MAHNUNG = Waehrung$
   WaehrungBezeich.MAHNUNG = WaehrungBez$
w260320072: 
   codems.MAHNUNG = codems%
   REM BelegM1.mahnung = numm1$
   BelegM1.mahnung = GetMahnNr$()
   MahnDatum1.MAHNUNG = TODAY 
   StatusMahn.MAHNUNG = "N"
   codeaq.mahnung = codeaq%
   codemahn.mahnung = SER ("mahnung",1)
   prolog1.mahnung = prolog1$
   epilog1.mahnung = epilog1$
   STORE FILE "mahnung"
   FILE "mahnung"
   INDEX codems.mahnung
   SELECT FIRST FILE "mahnung" INDEX codems.mahnung
   SELECT KEY codems% LOCK FILE "mahnung" INDEX codems.mahnung
 ELSE 
     SELECT KEY codems% LOCK FILE "mahnung" INDEX codems.mahnung
     IF Mahndatum2.MAHNUNG < "01.01.1980" THEN 
       Mahndatum2.MAHNUNG = TODAY 
       FILE "floskel"
       SELECT WHERE art.floskel = 1 AND spezial.floskel = 12:REM Kopftext 2. Mahnung
       SELECT FIRST 
       IF NOT EOF ("floskel") THEN 
         prolog2.MAHNUNG = floskel.floskel
       END IF 
       SELECT WHERE art.floskel = 2 AND spezial.floskel = 12:REM Fu·text 2. Mahnung
       SELECT FIRST 
       IF NOT EOF ("floskel") THEN 
         epilog2.MAHNUNG = floskel.floskel
       END IF 
       CALL QuickStore("mahnung")
       SELECT KEY codems% LOCK FILE "mahnung" INDEX codems.mahnung
     ELSE 
 
       IF Mahndatum3.MAHNUNG < "01.01.1980" THEN 
         Mahndatum3.MAHNUNG = TODAY 
         FILE "floskel"
         SELECT WHERE art.floskel = 1 AND spezial.floskel = 13:REM Kopftext 3. Mahnung
         SELECT FIRST 
         IF NOT EOF ("floskel") THEN 
           prolog3.MAHNUNG = floskel.floskel
         END IF 
         SELECT WHERE art.floskel = 2 AND spezial.floskel = 13:REM Fu·text 3. Mahnung
         SELECT FIRST 
         IF NOT EOF ("floskel") THEN 
           epilog3.MAHNUNG = floskel.floskel
         END IF 
         CALL QuickStore("mahnung")
         SELECT KEY codems% LOCK FILE "mahnung" INDEX codems.mahnung
       ELSE 
 
         IF Mahndatum4.MAHNUNG < "01.01.1980" THEN 
           Mahndatum4.MAHNUNG = TODAY 
           FILE "floskel"
           SELECT WHERE art.floskel = 1 AND spezial.floskel = 14:REM Kopftext 4. Mahnung
           SELECT FIRST 
           IF NOT EOF ("floskel") THEN 
             prolog4.MAHNUNG = floskel.floskel
           END IF 
           SELECT WHERE art.floskel = 2 AND spezial.floskel = 14:REM Fu·text 4. Mahnung
           SELECT FIRST 
           IF NOT EOF ("floskel") THEN 
             epilog4.MAHNUNG = floskel.floskel
           END IF 
           CALL QuickStore("mahnung")
           SELECT KEY codems% LOCK FILE "mahnung" INDEX codems.mahnung
         ELSE 
 
           IF Mahndatum5.MAHNUNG < "01.01.1980" THEN 
             Mahndatum5.MAHNUNG = TODAY 
             FILE "floskel"
             SELECT WHERE art.floskel = 1 AND spezial.floskel = 15:REM Kopftext 5. Mahnung
             SELECT FIRST 
             IF NOT EOF ("floskel") THEN 
               prolog5.MAHNUNG = floskel.floskel
             END IF 
             SELECT WHERE art.floskel = 2 AND spezial.floskel = 15:REM Fu·text 5. Mahnung
             SELECT FIRST 
             IF NOT EOF ("floskel") THEN 
               epilog5.MAHNUNG = floskel.floskel
             END IF 
             CALL QuickStore("mahnung")
             SELECT KEY codems% LOCK FILE "mahnung" INDEX codems.mahnung
           END IF 
 
         END IF 
 
       END IF 
     END IF 
 END IF 

         IF EXISTS (codems%,codems.teilraus) THEN 
           umr% = umrechnung.mahnung
           dat$ = "mahnung"
           FILE "teilraus"
           INDEX codems.teilraus
           SELECT FIRST 
           SELECT KEY codems% LOCK FILE "teilraus" INDEX codems.teilraus
           sumz% = 0
           sumzeu% = 0
           mahn% = 0
           mahneu% = 0
           WHILE NOT EOF ("teilraus") AND codems.teilraus = codems%
             IF euromaske% = 0 THEN 
               IF erledigt.teilraus = "J" THEN 
                 sumz% = sumz% + GesBrutto.teilraus
                 IF UCASE$ (mahnjn.teilraus) = "J" THEN mahn% = mahn% + gesbrutto.teilraus
               END IF 
             ELSE 
               IF erledigt.teilraus = "J" THEN 
                 sumzeu% = sumzeu% + GesBruttoeu.teilraus
                 IF UCASE$ (mahnjn.teilraus) = "J" THEN mahneu% = mahneu% + gesbruttoeu.teilraus
               END IF 
             END IF 
             codere.teilraus = codere%
             CALL QuickStore("teilraus")
             SELECT NEXT LOCK 
           WEND 
           IF euromaske% = 0 THEN 
             IF sumz% <> 0 THEN sumzeu% = sumz% / umr% ELSE sumzeu% = 0
           ELSE 
             IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr% ELSE sumz% = 0
           END IF 
           FILE dat$
           SELECT FIRST 
           SELECT KEY codems% LOCK FILE dat$ INDEX codems.dat$
           SummeTeil.dat$ = sumz%
           SummeTeilEu.dat$ = sumzeu%
           SummeMahn.dat$ = mahn%
           SummeMahnEu.dat$ = mahneu%
           CALL QuickStore(dat$)
         END IF 


 SELECT KEY codems% FILE "MAHNUNG" INDEX codems.mahnung
 IF EXISTS (codems%,codems.rausgang) THEN 
   SELECT KEY codems.mahnung LOCK FILE "rausgang" INDEX codems.rausgang
   MahnJN.rausgang = "j"
   CALL QuickStore("RAUSGANG")
   SELECT KEY codems.mahnung LOCK FILE "rausgang" INDEX codems.rausgang
 END IF 
 CALL Mahnung(codems%,euromas%)
 END SUB 



 ' einzelne Mahnung bearbeiten
SUB Mahnung(codems%,euromas%)
 fromForm$ = UCASE$ ( FORM )
 abbruch% = 0
 IF disabled%("MAHNUNG") THEN END SUB 
 CALL DFile(3,"FLOSKEL" + _fpw$)
 CALL DFile(3,"ABZUGANG" + _fpw$)
 CALL DFile(3,"RAUSGANG" + _fpw$)
 REM cudo% = CodeDOK.DOKUMENT
 _formend% = 0
 SET STATUS "Bereit"
 IF euromaske% = 0 THEN 
   maske$ = "MAHNUNG"
 ELSE 
   maske$ = "MAHNUNGE"
 END IF 
 IF ProjectJN$ = "TRUE" THEN 
   IF euromaske% = 0 THEN 
     maske$ = "MAHNUNG"
   ELSE 
     maske$ = "MAHNUNGE"
   END IF 
 END IF 
 FILE "MAHNUNG"
 INDEX codems.MAHNUNG
 SELECT FIRST 
 SELECT KEY codems% FILE "Mahnung" INDEX codems.mahnung
 IF codere.mahnung < 1 THEN 
   SELECT KEY codems% LOCK FILE "Mahnung" INDEX codems.mahnung
   codere.mahnung = codere.rausgang
   CALL QuickStore("Mahnung")
 END IF 
 SELECT KEY codems% FILE "Mahnung" INDEX codems.mahnung
 vonSeite% = 0
 WHILE _formend% = 0
   
   IF UCASE$ ( FORM ) <> maske$ THEN 
     SET HEADING title$ + " - Mahnverwaltung"
     OPEN FORM GPrjForm$ + maske$
     SET f = superbase.form
     IF ProjectJN$ = "TRUE" THEN 
       f.LabelProjekt.visible = - 1
       f.CProjekt.visible = - 1
       f.LabelProjekt1.visible = - 1
       f.CProjekt1.visible = - 1
       f.LabelProjekt2.visible = - 1
       f.CProjekt2.visible = - 1
       f.LabelProjekt3.visible = - 1
       f.CProjekt3.visible = - 1
       f.LabelProjekt4.visible = - 1
       f.CProjekt4.visible = - 1
     ELSE 
       f.LabelProjekt.visible = 0
       f.CProjekt.visible = 0
       f.LabelProjekt1.visible = 0
       f.CProjekt1.visible = 0
       f.LabelProjekt2.visible = 0
       f.CProjekt2.visible = 0
       f.LabelProjekt3.visible = 0
       f.CProjekt3.visible = 0
       f.LabelProjekt4.visible = 0
       f.CProjekt4.visible = 0
     END IF 
     CALL MahnEnable()
     SET STATUS "Mahnverwaltung"
     CALL MNMAHN1()

     CALL MahnEinzINT(codems%)
     dat$ = "MAHNUNG"
     IF EXISTS (codems.dat$,codems.Teilraus) THEN 
       teil1$ = "Zahlungen Æ"
     ELSE 
       teil1$ = "Zahlungen"
     END IF 
     IF mahndatum5.mahnung > "01.01.1980" THEN 
         f.s12.enabled = - 1
         f.s13.enabled = - 1
         f.s14.enabled = - 1
         f.s15.enabled = - 1
         f.s23.enabled = - 1
         f.s24.enabled = - 1
         f.s25.enabled = - 1
         f.s45.enabled = - 1
       FORM 5
     ELSE 
       IF mahndatum4.mahnung > "01.01.1980" THEN 
         f.s12.enabled = - 1
         f.s13.enabled = - 1
         f.s14.enabled = - 1
         f.s15.enabled = 0
         f.s23.enabled = - 1
         f.s24.enabled = - 1
         f.s25.enabled = 0
         f.s45.enabled = 0
         FORM 4
       ELSE 
         IF mahndatum3.mahnung > "01.01.1980" THEN 
           f.s12.enabled = - 1
           f.s13.enabled = - 1
           f.s14.enabled = 0
           f.s15.enabled = 0
           f.s23.enabled = 0
           f.s24.enabled = 0
           f.s25.enabled = 0
           f.s34.enabled = 0
           f.s35.enabled = 0
           FORM 3
         ELSE 
           IF mahndatum2.mahnung > "01.01.1980" THEN 
             f.s12.enabled = - 1
             f.s13.enabled = 0
             f.s14.enabled = 0
             f.s15.enabled = 0
             f.s23.enabled = 0
             f.s24.enabled = 0
             f.s25.enabled = 0
             FORM 2
           ELSE 
             f.s12.enabled = 0
             f.s13.enabled = 0
             f.s14.enabled = 0
             f.s15.enabled = 0
             FORM 1
           END IF 
         END IF 
       END IF 
     END IF 
     FORM 
     SET DISPLAY ON 
   END IF 
   MENU ON 
   codems% = codems.mahnung
   SELECT FIRST FILE "rausgang" INDEX codems.rausgang
   SELECT KEY codems% FILE "rausgang" INDEX codems.rausgang
   codeku% = codeku.mahnung
   SELECT FIRST FILE "adressen" INDEX codeku.adressen
   SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
   IF mahnsperre.rausgang LIKE "j" OR mahnsperre.adressen LIKE "j" THEN 
     f.neu1.enabled = 0
     f.neu2.enabled = 0
     f.neu3.enabled = 0
     f.neu4.enabled = 0
     f.neu5.enabled = 0
   ELSE 
     f.neu1.enabled = - 1
     f.neu2.enabled = - 1
     f.neu3.enabled = - 1
     f.neu4.enabled = - 1
     f.neu5.enabled = - 1
   END IF 
   FORM 
   MOUSE ON 
   REM dokgrup$ = Gruppe.Dokument
   projre$ = projekt.mahnung
   ON ERROR GOTO M2040120042
   IF dokschutz1.mahnung > 0 THEN 
     f.schutz1.Backcolor = 2
     schutz1$ = "Schutz Æ"
   ELSE 
     f.schutz1.Backcolor = 3
     schutz1$ = "Schutz"
   END IF 
   IF dokschutz2.mahnung > 0 THEN 
     f.schutz2.Backcolor = 2
     schutz2$ = "Schutz Æ"
   ELSE 
     f.schutz2.Backcolor = 3
     schutz2$ = "Schutz"
   END IF 
   IF dokschutz3.mahnung > 0 THEN 
     f.schutz3.Backcolor = 2
     schutz3$ = "Schutz Æ"
   ELSE 
     f.schutz3.Backcolor = 3
     schutz3$ = "Schutz"
   END IF 
   IF dokschutz4.mahnung > 0 THEN 
     f.schutz4.Backcolor = 2
     schutz4$ = "Schutz Æ"
   ELSE 
     f.schutz4.Backcolor = 3
     schutz4$ = "Schutz"
   END IF 
   IF dokschutz5.mahnung > 0 THEN 
     f.schutz5.Backcolor = 2
     schutz5$ = "Schutz Æ"
   ELSE 
     f.schutz5.Backcolor = 3
     schutz5$ = "Schutz"
   END IF 
M2040120042: 
   ON ERROR GOTO ErrorHandler

   FORM 
   
   CALL ClearKBDBuffer()
   IF vonSeite% > 0 AND MAHNEinzsub% <> 20 AND MAHNEinzsub% <> 21 THEN 
     FORM vonSeite%
     FORM 
     vonSeite% = 0
   END IF 
   MAHNEinzsub% = 0
   vonSeite% = 0
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE MAHNEinzsub%
   CASE 200
     REM Dokumentenschutz
     IF PAGE = 1 THEN 
       CALL DokSchutzMahn(codemahn.mahnung,1,DokSchutz1.mahnung)
     END IF 
     IF PAGE = 2 THEN 
       CALL DokSchutzMahn(codemahn.mahnung,2,DokSchutz2.mahnung)
     END IF 
     IF PAGE = 3 THEN 
       CALL DokSchutzMahn(codemahn.mahnung,3,DokSchutz3.mahnung)
     END IF 
     IF PAGE = 4 THEN 
       CALL DokSchutzMahn(codemahn.mahnung,4,DokSchutz4.mahnung)
     END IF 
     IF PAGE = 5 THEN 
       CALL DokSchutzMahn(codemahn.mahnung,5,DokSchutz5.mahnung)
     END IF 
     ON ERROR GOTO M2040120043
     IF dokschutz1.mahnung > 0 THEN 
       f.schutz1.Backcolor = 2
       schutz1$ = "Schutz Æ"
     ELSE 
       f.schutz1.Backcolor = 3
       schutz1$ = "Schutz"
     END IF 
     IF dokschutz2.mahnung > 0 THEN 
       f.schutz2.Backcolor = 2
       schutz2$ = "Schutz Æ"
     ELSE 
       f.schutz2.Backcolor = 3
       schutz2$ = "Schutz"
     END IF 
     IF dokschutz3.mahnung > 0 THEN 
       f.schutz3.Backcolor = 2
       schutz3$ = "Schutz Æ"
     ELSE 
       f.schutz3.Backcolor = 3
       schutz3$ = "Schutz"
     END IF 
     IF dokschutz4.mahnung > 0 THEN 
       f.schutz4.Backcolor = 2
       schutz4$ = "Schutz Æ"
     ELSE 
       f.schutz4.Backcolor = 3
       schutz4$ = "Schutz"
     END IF 
     IF dokschutz5.mahnung > 0 THEN 
       f.schutz5.Backcolor = 2
       schutz5$ = "Schutz Æ"
     ELSE 
       f.schutz5.Backcolor = 3
       schutz5$ = "Schutz"
     END IF 
M2040120043: 
     ON ERROR GOTO ErrorHandler
     FORM 
   CASE 1
     REM CALL ADRDOK()
   CASE 3
     IF PAGE = 2 THEN 

     END IF 
   CASE 4
     REM Drucken der Mahnungen
     CALL MSDrucken(codems.mahnung)
     IF PAGE = 1 THEN 
       REM Mahndatum2.MAHNUNG
     END IF 
     IF PAGE = 2 THEN 
       REM Mahndatum2.MAHNUNG
     END IF 
     IF PAGE = 3 THEN 
       REM Mahndatum3.MAHNUNG
     END IF 
     IF PAGE = 4 THEN 
       REM Mahndatum4.MAHNUNG
     END IF 
     IF PAGE = 5 THEN 
       REM Mahndatum5.MAHNUNG
     END IF 
   CASE 15
     CALL FLOSKEL()
   CASE 8
     REM neuerfassung von Mahnungen
     codems% = codems.mahnung
     IF codeku.mahnung > 0 THEN 
       codeku% = codeku.mahnung
     ELSE 
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT KEY codems% FILE "master" INDEX codems.master
       codeku% = codeku.master
     END IF 
     codere% = codere.mahnung
     FILE "rausgang"
     ind1$ = INDEX 
     INDEX codems.rausgang
     SELECT FIRST FILE "rausgang" INDEX codems.rausgang
     SELECT KEY codems% FILE "rausgang" INDEX codems.rausgang
     IF mahnsperre.rausgang LIKE "j" THEN 
       CALL Fehler("ACHTUNG Mahnsperre existiert!!!","Bevor Sie zu dieser Rechnung eine weitere Mahnung erfassen kînnen, mÅssen Sie im Rechnungsausgang die Mahnsperre zu dieser Rechnung aufheben!")
       GOTO e22120601
     END IF 
     INDEX ind1$
     FILE "adressen"
     INDEX codeku.adressen
     SELECT FIRST FILE "adressen" INDEX codeku.adressen
     SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
     FILE "mahnung"
     INDEX codems.mahnung
     SELECT FIRST FILE "mahnung" INDEX codems.mahnung
     SELECT KEY codems% LOCK FILE "mahnung" INDEX codems.mahnung
     POSTan$ = VSNRPack$(Postanschrift.adressen)
     adrtxt$ = VSNRPack$(Adresstext.mahnung)
     IF postan$ <> "" THEN 
       IF adrtxt$ <> postan$ THEN 
         Adresstext.mahnung = Postanschrift.adressen
       END IF 
     ELSE 
       postan$ = MakeAdraa$(codeku%,0,0,0)
       IF adrtxt$ <> postan$ THEN 
         Adresstext.mahnung = Postanschrift.adressen
       END IF 
     END IF 
     IF Mahndatum2.MAHNUNG < "01.01.1980" THEN 
       Mahndatum2.MAHNUNG = TODAY 
       BelegM2.mahnung = GetMahnNr$()
       FILE "floskel"
       SELECT WHERE art.floskel = 1 AND spezial.floskel = 12:REM Kopftext 2. Mahnung
       SELECT FIRST 
       IF NOT EOF ("floskel") THEN 
         prolog2.MAHNUNG = floskel.floskel
       END IF 
       SELECT WHERE art.floskel = 2 AND spezial.floskel = 12:REM Fu·text 2. Mahnung
       SELECT FIRST 
       IF NOT EOF ("floskel") THEN 
         epilog2.MAHNUNG = floskel.floskel
       END IF 
       CALL QuickStore("mahnung")
       FILE "abzugang"
       REM 251198
       IF NOT EXISTS (codems%,codems.abzugang) THEN 
         CALL MSBuchung(codems%,0)
       END IF 
       SELECT KEY codems% LOCK FILE "ABZUGANG" INDEX Codems.ABZUGANG
       buchungstext.ABZUGANG = "*M*" + DATE$ ( TODAY ,"dd.mm.yyyy") + " " + buchungstext.ABZUGANG
       Kontrolle.ABZUGANG = "j"
       CALL QuickStore("ABZUGANG")
       FILE "Mahnung"
       CALL MahnDisable()
       FORM 2
       ENTER Mahndatum2.MAHNUNG,0
       CALL MahnEnable()
       f.s13.enabled = 0
       f.s14.enabled = 0
       f.s15.enabled = 0
       f.s23.enabled = 0
       f.s24.enabled = 0
       f.s25.enabled = 0

     ELSE 

       IF Mahndatum3.MAHNUNG < "01.01.1980" THEN 
         Mahndatum3.MAHNUNG = TODAY 
         BelegM3.mahnung = GetMahnNr$()
         FILE "floskel"
         SELECT WHERE art.floskel = 1 AND spezial.floskel = 13:REM Kopftext 3. Mahnung
         SELECT FIRST 
         IF NOT EOF ("floskel") THEN 
           prolog3.MAHNUNG = floskel.floskel
         END IF 
         SELECT WHERE art.floskel = 2 AND spezial.floskel = 13:REM Fu·text 3. Mahnung
         SELECT FIRST 
         IF NOT EOF ("floskel") THEN 
           epilog3.MAHNUNG = floskel.floskel
         END IF 
         CALL QuickStore("mahnung")
         CALL MahnDisable()
         FORM 3
         ENTER Mahndatum3.MAHNUNG,0
         CALL MahnEnable()
         f.s14.enabled = 0
         f.s15.enabled = 0
         f.s24.enabled = 0
         f.s25.enabled = 0
         f.s34.enabled = 0
         f.s35.enabled = 0
       ELSE 
         IF Mahndatum4.MAHNUNG < "01.01.1980" THEN 
           Mahndatum4.MAHNUNG = TODAY 
           BelegM4.mahnung = GetMahnNr$()
           FILE "floskel"
           SELECT WHERE art.floskel = 1 AND spezial.floskel = 14:REM Kopftext 4. Mahnung
           SELECT FIRST 
           IF NOT EOF ("floskel") THEN 
             prolog4.MAHNUNG = floskel.floskel
           END IF 
           SELECT WHERE art.floskel = 2 AND spezial.floskel = 14:REM Fu·text 4. Mahnung
           SELECT FIRST 
           IF NOT EOF ("floskel") THEN 
             epilog4.MAHNUNG = floskel.floskel
           END IF 
           CALL QuickStore("mahnung")
           CALL MahnDisable()
           FORM 4
           ENTER Mahndatum4.MAHNUNG,0
           CALL MahnEnable()
           f.s15.enabled = 0
           f.s25.enabled = 0
           f.s35.enabled = 0
           f.s45.enabled = 0
         ELSE 
 
           IF Mahndatum5.MAHNUNG < "01.01.1980" THEN 
             Mahndatum5.MAHNUNG = TODAY 
             BelegM5.mahnung = GetMahnNr$()
             FILE "floskel"
             SELECT WHERE art.floskel = 1 AND spezial.floskel = 15:REM Kopftext 5. Mahnung
             SELECT FIRST 
             IF NOT EOF ("floskel") THEN 
               prolog5.MAHNUNG = floskel.floskel
             END IF 
             SELECT WHERE art.floskel = 2 AND spezial.floskel = 15:REM Fu·text 5. Mahnung
             SELECT FIRST 
             IF NOT EOF ("floskel") THEN 
               epilog5.MAHNUNG = floskel.floskel
             END IF 
             CALL QuickStore("mahnung")
             CALL MahnDisable()
             FORM 5
             ENTER Mahndatum5.MAHNUNG,0
             CALL MahnEnable()
           END IF 

         END IF 

       END IF 
     END IF 
     FILE "mahnung"
     
     mahnges% = mahnz1.mahnung + mahnz2.mahnung + mahnz3.mahnung + mahnz4.mahnung + mahnz5.mahnung
     mahnges% = mahnges% + mahnp1.mahnung + mahnp2.mahnung + mahnp3.mahnung + mahnp4.mahnung + mahnp5.mahnung
     REM 12072000 codere% = - 1
     IF EXISTS (codems%,codems.master) THEN 
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT KEY codems% LOCK FILE "master" INDEX codems.master
       codeaq% = codeaq.master
       codedok% = codedok.master
       codere% = codere.master
       umr% = umrechnung.master
       GesMahn.master = mahnges%
       GesMahneu.master = mahnges% / umr%
       CALL QuickStore("Master")
       IF statusmahn$ LIKE "J" THEN 
         IF EXISTS (codeaq%,codeaq.GAkquiDat$) THEN 
           SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           IF erledigt_termin <> "j" THEN 
             erledigt_termin.GAkquiDat$ = "j"
             notiz.GAkquiDat$ = notiz.GAkquiDat$ + "    " + DATE$ ( TODAY ,"0d.mm.yyyy") + "-" + TIME$ ( NOW ,"hh:mm") + " Mahnung wurde erledigt!(" + nachname.supervis + ")"
             CALL QuickStore(GAkquiDat$)
           END IF 
         END IF 
         IF EXISTS (codedok%,codedok.GAkquiDat$) THEN 
           SELECT KEY codedok% LOCK FILE GAkquiDat$ INDEX codedok.GAkquiDat$
           IF erledigt_termin <> "j" THEN 
             erledigt_termin.GAkquiDat$ = "j"
             notiz.GAkquiDat$ = notiz.GAkquiDat$ + "    " + DATE$ ( TODAY ,"0d.mm.yyyy") + " Mahnung wurde erledigt!(" + nachname.supervis + ")"
             CALL QuickStore(GAkquiDat$)
           END IF 
         END IF 
       END IF 
     END IF 
     IF EXISTS (codere%,codere.rausgang) THEN 
       SELECT FIRST FILE "rausgang" INDEX codere.rausgang
       SELECT KEY codere% LOCK FILE "rausgang" INDEX codere.rausgang
       GesMahn.rausgang = mahnges%
       GesMahneu.rausgang = mahnges% / umr%
       CALL QuickStore("rausgang")
     END IF 
e22120601: 
   CASE 11
     REM Auswahl Kopftext
     codems% = codems.mahnung
     CALL DFile(3,"FLOSKEL" + _fpw$)
     CALL MahnKopftext(codems%)
   CASE 12
     REM Auswahl Fusstext
     codems% = codems.mahnung
     CALL DFile(3,"FLOSKEL" + _fpw$)
     CALL MahnFusstext(codems%)
   CASE 20
     IF fromform$ LIKE "MAHNGES" THEN 
       CALL FTeilraus()
     ELSE 
       CALL RTeilraus()
       IF UCASE$ ( FORM ) = "TEILRR" THEN 
         euromaske% = 0
         maske$ = "MAHNUNG"
       ELSE 
         euromaske% = 1
         maske$ = "MAHNUNGE"
       END IF 
     END IF 
     vonSeite% = PAGE 
     REM TeilzahlungsÅbersicht
     REM TeilzahlungsÅbersicht
   CASE 21
     REM einzelne Teilzahlung
       vonSeite% = PAGE 
       codeteil% = codeteil.teilraus
       FORM 7
       SELECT FORM KEY codeteil% FILE "Teilraus" INDEX codeteil.teilraus
       IF UCASE$ ( RIGHT$ ( FORM ,1)) <> "E" THEN 
         mastwaehr$ = "WÑhrung: " + waehrung.teilraus
       ELSE 
         mastwaehr$ = "Erfass.wÑhrung war: " + waehrung.teilraus
       END IF 
       waehr$ = waehrung.teilraus
       FORM 
   CASE 22
     REM neue Teilzahlung
     REM neue Teilzahlung
     codere% = codere.mahnung
     codems% = codems.mahnung
     
     SELECT FIRST FILE "master" INDEX codems.master
     SELECT KEY codems% FILE "master" INDEX codems.master
     okrau% = 0
     IF codere% > 0 THEN 
       IF EXISTS (codere%,codere.rausgang) THEN 
         FILE "rausgang"
         INDEX codere.rausgang
         SELECT FIRST 
         okrau% = 1
       END IF 
     END IF 
     BLANK FILE "Teilraus"
     codeteil% = SER ("Teilraus",1)
     codeteil.teilraus = codeteil%
     codere.teilraus = codere.master
     codems.teilraus = codems.master
     codeku.teilraus = codeku.master
     nachname.teilraus = nachname.master
     vorname.teilraus = vorname.master
     ort.teilraus = ort.master
     plz.teilraus = plz.master
     stra·e.teilraus = stra·e.master
     gezahltam.teilraus = TODAY 
     GesNetto.teilraus = 0
     GesBrutto.teilraus = 0
     PreisNetto.teilraus = 0
     PreisBrutto.teilraus = 0
     PreisNettoEu.teilraus = 0
     PreisBruttoEu.teilraus = 0
     GesNettoTeil.teilraus = 0
     GesBruttoTeil.teilraus = 0
     GesNettoTeilEu.teilraus = 0
     GesBruttoTeilEu.teilraus = 0
     GesNettoEu.teilraus = 0
     GesBruttoEu.teilraus = 0
     MwSt.teilraus = 0
     mwstdm.teilraus = 0
     GutschriftJN.teilraus = "n"
     Ktoauszugsnr.teilraus = ""
     KasseJN.teilraus = "n"
     gezmitskonto.teilraus = "n"
     Notiz.teilraus = ""
     erledigt.teilraus = "n"
     zero.teilraus = 0
     lrenummer.teilraus = nummer.master
     datum.teilraus = datum.master
     codew.teilraus = codew.master
     waehrung.teilraus = waehrung.master
     umrechnung.teilraus = umrechnung.master
     waehr$ = waehrung.teilraus
     CALL QuickStore("teilraus")
     SELECT FORM KEY codeteil% FILE "teilraus" INDEX codeteil.teilraus
     vonSeite% = 7
   CASE 23
     REM Teilz. bearb
     f.bearbt2.enabled = 0
     f.sicht2.enabled = - 1
     f.abbrucht2.enabled = - 1
     f.abbrucht2.visible = - 1
     f.loet2.enabled = 0
     f.eurot2.enabled = 0
     f.zurt2.enabled = 0
     IF euromaske% = 0 THEN 
       ENTER Gesbrutto.teilraus,0
     ELSE 
       ENTER GesbruttoEu.teilraus,0
     END IF 
     f.bearbt2.enabled = - 1
     f.sicht2.enabled = 0
     f.abbrucht2.enabled = 0
     f.abbrucht2.visible = 0
     f.loet2.enabled = - 1
     f.eurot2.enabled = - 1
     f.zurt2.enabled = - 1
   CASE 24
     REM Abbruch Teilz
     ENTER END 
     f.bearbt2.enabled = - 1
     f.sicht2.enabled = 0
     f.abbrucht2.enabled = 0
     f.abbrucht2.visible = 0
     f.loet2.enabled = - 1
     f.eurot2.enabled = - 1
     f.zurt2.enabled = - 1
   CASE 25
     REM Lîschen Teilzahl
     qu$ = "teilraus"
     quell$ = "rausgang"
     codere% = codere.qu$
     codeteil% = codeteil.qu$
     codems% = codems.qu$
     SELECT KEY codeteil% LOCK FILE qu$ INDEX codeteil.qu$
     REQUEST "Datensatz wirklich lîschen?","",130,req%
     IF req% = 1 THEN 
       FILE "teilraus"
       codere% = codere.qu$
       SELECT REMOVE 
     END IF 
 
     FILE "master"
     INDEX codems.master
     SELECT FIRST 
     SELECT KEY codems% FILE "master" INDEX codere.master
     umr% = umrechnung.master
 
     FILE qu$
     INDEX codems.qu$
     SELECT FIRST 
     SELECT KEY codems% FILE qu$ INDEX codems.qu$

     sumz% = 0
     sumzeu% = 0
     ok% = 0
     CALL SumTeil(codems%,codere%,qu$,"master")
 
     FILE "master"
     INDEX codems.master
     SELECT FIRST 
     SELECT KEY codems% FILE "master" INDEX codems.master
     IF EXISTS (codems.master,codems.teilraus) THEN 
       rest$ = STR$ (GesBrutto.master + gesMahn.master$ - SummeTeil.master,",9999999.00")
       restEu$ = STR$ (GesBruttoEu.master + gesMahnEU.master$ - SummeTeilEU.master,",9999999.00")
     ELSE 
       rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
       restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$,",9999999.00")
     END IF 
     IF UCASE$ (gezmitskonto.dat$) = "J" THEN 
       rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$ - skonto.dat$,",9999999.00")
       restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEU.dat$ - SummeTeilEU.dat$ - skontoeu.dat$,",9999999.00")
     END IF 
     sumZ% = GesBrutto.master
     sumZEu% = GesBruttoEu.master
     IF EXISTS (codere%,codere.rausgang) AND codere% > 0 THEN 
       SELECT KEY codere% LOCK FILE "rausgang" INDEX codere.rausgang
       SummeTeil.rausgang = sumz%
       SummeTeileu.rausgang = sumzeu%
       SummeMahn.rausgang = SummeMahn.master
       SummeMahn.eu.rausgang = SummeMahneu.master
       CALL QuickStore("rausgang")
     END IF 
 
     FILE "Teilraus"
     SELECT FORM KEY codems% FILE "teilraus" INDEX codems.teilraus
     FORM 6
     vonSeite% = 6
   CASE 26
     codems% = codems.teilraus
     SELECT FORM KEY codems% FILE "teilraus" INDEX codems.teilraus
     FORM 6
     vonSeite% = 6
   CASE 27
     FORM vonSeite%
   CASE 28
     vonSeite% = PAGE 
     IF RIGHT$ ( UCASE$ ( FORM ),1) = "E" THEN 
       maske$ = "MAHNUNG"
       eurosupport% = 0
     ELSE 
       maske$ = "MAHNUNGE"
       eurosupport% = 1
     END IF 
   CASE 29
      codems% = codems.mahnung
      IF EXISTS (codems%,codems.master) THEN 
        SELECT KEY codems% FILE "Master" INDEX codems.master
        opt% = 1
        leerz% = VAL (ReadConfig$("FACTURA","ZPLEERVORADR"))
        leerzn% = VAL (ReadConfig$("FACTURA","ZPNACHADR"))
        CREATE DIALOG "MS",0,0,197,126,"Scheinerstellung","MS Sans Serif",8
        ADD DIALOG "MS",4,0,5,195,98,0,"Bitte wÑhlen Sie, wie gedruckt werden soll"
        ADD DIALOG "MS",3,53,30,76,10,0,"alle WÑhrungen",0,opt%
        ADD DIALOG "MS",3,53,41,84,10,0,"EUR",1,opt%
        ADD DIALOG "MS",5,28,55,113,10,0,"Anzahl Leerzeilen vor der Adresse:"
        ADD DIALOG "MS",6,73,65,18,10,0,0,leerz%,2
        ADD DIALOG "MS",5,28,77,120,10,0,"Anzahl Leerzeilen nach der Adresse:"
        ADD DIALOG "MS",6,73,87,18,10,0,0,leerzn%,2
        ADD DIALOG "MS",1,35,105,55,16,1,"&OK",1,1
        ADD DIALOG "MS",1,93,105,54,16,0,"&Abbrechen",0,0
        DIALOG "MS",reqzu%
        REMOVE DIALOG "MS"
        CALL WriteConfig("FACTURA","ZPLEERVORADR", LTRIM$ ( STR$ (leerz%,"99")))
        CALL WriteConfig("FACTURA","ZPNACHADR", LTRIM$ ( STR$ (leerzn%,"99")))
        CALL ZP1(codems.master,opt%,leerz%,leerzn%)
      ELSE 
        CALL Fehler("Kann Zahlungsplan nicht drucken, da hiezu keine DatensÑtze in der Master-Datei(Rechnungen), existieren!","")
      END IF 
   CASE 99
     SET EDIT SELECT ON 
     codems% = codems.mahnung
     codere% = codere.mahnung
     CALL MahnDisable()
    IF euromaske% = 1 THEN 
     IF PAGE = 1 THEN 
       ENTER Mahnz1EU.MAHNUNG,0
     END IF 
     IF PAGE = 2 THEN 
       ENTER Mahnz2EU.MAHNUNG,0
     END IF 
     IF PAGE = 3 THEN 
       ENTER Mahnz3EU.MAHNUNG,0
     END IF 
     IF PAGE = 4 THEN 
       ENTER Mahnz4EU.MAHNUNG,0
     END IF 
     IF PAGE = 5 THEN 
       ENTER Mahnz5EU.MAHNUNG,0
     END IF 
    ELSE 
     IF PAGE = 1 THEN 
       ENTER Mahnz1.MAHNUNG,0
     END IF 
     IF PAGE = 2 THEN 
       ENTER Mahnz2.MAHNUNG,0
     END IF 
     IF PAGE = 3 THEN 
       ENTER Mahnz3.MAHNUNG,0
     END IF 
     IF PAGE = 4 THEN 
       ENTER Mahnz4.MAHNUNG,0
     END IF 
     IF PAGE = 5 THEN 
       ENTER Mahnz5.MAHNUNG,0
     END IF 
    END IF 
     statusmahn$ = statusmahn.mahnung
     codeaq% = codeaq.mahnung
     IF statusmahn.mahnung LIKE "J" THEN 
       IF codeaq.mahnung > 0 THEN 
         IF EXISTS (codeaq%,codeaq.GAkquiDat$) THEN 
           SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           erledigt_Termin.GAkquiDat$ = "j"
           notiz.GAkquiDat$ = notiz.GAkquiDat$ + "    " + DATE$ ( TODAY ,"0d.mm.yyyy") + "-" + TIME$ ( NOW ,"hh:mm") + " Mahnung wurde erledigt!(" + nachname.supervis + ")"
           CALL QuickStore(GAkquiDat$)
         END IF 
       END IF 
     END IF 
     IF abbruch% = - 1 THEN 
       SELECT KEY codems% FILE "mahnung" INDEX codems.mahnung
       abbruch% = 0
     END IF 
     mahnges% = mahnz1.mahnung + mahnz2.mahnung + mahnz3.mahnung + mahnz4.mahnung + mahnz5.mahnung
     mahnges% = mahnges% + mahnp1.mahnung + mahnp2.mahnung + mahnp3.mahnung + mahnp4.mahnung + mahnp5.mahnung
     REM 12072000 codere% = - 1
     IF EXISTS (codems%,codems.master) THEN 
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT KEY codems% LOCK FILE "master" INDEX codems.master
       codeaq% = codeaq.master
       codedok% = codedok.master
       codere% = codere.master
       umr% = umrechnung.master
       GesMahn.master = mahnges%
       GesMahneu.master = mahnges% / umr%
       CALL QuickStore("Master")
       IF statusmahn$ LIKE "J" THEN 
         IF EXISTS (codeaq%,codeaq.GAkquiDat$) THEN 
           SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           IF erledigt_termin <> "j" THEN 
             erledigt_termin.GAkquiDat$ = "j"
             notiz.GAkquiDat$ = notiz.GAkquiDat$ + "    " + DATE$ ( TODAY ,"0d.mm.yyyy") + "-" + TIME$ ( NOW ,"hh:mm") + " Mahnung wurde erledigt!(" + nachname.supervis + ")"
             CALL QuickStore(GAkquiDat$)
           END IF 
         END IF 
         IF EXISTS (codedok%,codedok.GAkquiDat$) THEN 
           SELECT KEY codedok% LOCK FILE GAkquiDat$ INDEX codedok.GAkquiDat$
           IF erledigt_termin <> "j" THEN 
             erledigt_termin.GAkquiDat$ = "j"
             notiz.GAkquiDat$ = notiz.GAkquiDat$ + "    " + DATE$ ( TODAY ,"0d.mm.yyyy") + " Mahnung wurde erledigt!(" + nachname.supervis + ")"
             CALL QuickStore(GAkquiDat$)
           END IF 
         END IF 
       END IF 
     END IF 
     IF EXISTS (codere%,codere.rausgang) THEN 
       SELECT FIRST FILE "rausgang" INDEX codere.rausgang
       SELECT KEY codere% LOCK FILE "rausgang" INDEX codere.rausgang
       GesMahn.rausgang = mahnges%
       GesMahneu.rausgang = mahnges% / umr%
       CALL QuickStore("rausgang")
     END IF 
     REM 12072000
     CALL MahnEinzINT(codems%)
     SET EDIT SELECT OFF 
     CALL MahnEnable()
   END SELECT 
 
 WEND 
 _formend% = 0
 REM IF FileChanged%("MAHNUNG") = 1 THEN CALL FStore("MAHNUNG")
 
 END SUB 

SUB MahnEnable()
     f.neu1.enabled = - 1
     f.neu2.enabled = - 1
     f.neu3.enabled = - 1
     f.neu4.enabled = - 1
     f.neu5.enabled = - 1
 
     f.nf1.enabled = - 1
     f.nf2.enabled = - 1
     f.nf3.enabled = - 1
     f.nf4.enabled = - 1
     f.nf5.enabled = - 1
 
     f.dr1.enabled = - 1
     f.dr2.enabled = - 1
     f.dr3.enabled = - 1
     f.dr4.enabled = - 1
     f.dr5.enabled = - 1

     f.ed1.enabled = - 1
     f.ed2.enabled = - 1
     f.ed3.enabled = - 1
     f.ed4.enabled = - 1
     f.ed5.enabled = - 1
     f.sichern.enabled = - 1
     ON ERROR GOTO mahn040120042
     IF druckschutz1.mahnung < 1 THEN 
       f.ed1.enabled = - 1
       f.sichern.enabled = - 1
     ELSE 
       f.ed1.enabled = 0
       f.sichern.enabled = 0
     END IF 
     IF druckschutz2.mahnung < 1 THEN 
       f.ed2.enabled = - 1
       f.si2.enabled = - 1
     ELSE 
       f.ed2.enabled = 0
       f.si2.enabled = 0
     END IF 
     IF druckschutz3.mahnung < 1 THEN 
       f.ed3.enabled = - 1
       f.si3.enabled = - 1
     ELSE 
       f.ed3.enabled = 0
       f.si3.enabled = 0
     END IF 
     IF druckschutz4.mahnung < 1 THEN 
       f.ed4.enabled = - 1
       f.si4.enabled = - 1
     ELSE 
       f.ed4.enabled = 0
       f.si4.enabled = 0
     END IF 
     IF druckschutz5.mahnung < 1 THEN 
       f.ed5.enabled = - 1
       f.si5.enabled = - 1
     ELSE 
       f.ed5.enabled = 0
       f.si5.enabled = 0
     END IF 
mahn040120042: 
     ON ERROR GOTO ErrorHandler
     f.p1.enabled = - 1
     f.p2.enabled = - 1
     f.p3.enabled = - 1
     f.p4.enabled = - 1
     f.p5.enabled = - 1

     f.zu1.enabled = - 1
     f.zu2.enabled = - 1
     f.zu3.enabled = - 1
     f.zu4.enabled = - 1
     f.zu5.enabled = - 1
 
     f.s12.enabled = - 1
     f.s13.enabled = - 1
     f.s14.enabled = - 1
     f.s15.enabled = - 1
 
     f.s21.enabled = - 1
     f.s23.enabled = - 1
     f.s24.enabled = - 1
     f.s25.enabled = - 1
 
     f.s31.enabled = - 1
     f.s32.enabled = - 1
     f.s34.enabled = - 1
     f.s35.enabled = - 1
 
     f.s41.enabled = - 1
     f.s42.enabled = - 1
     f.s43.enabled = - 1
     f.s45.enabled = - 1
 
     f.s51.enabled = - 1
     f.s52.enabled = - 1
     f.s53.enabled = - 1
     f.s54.enabled = - 1
 
     f.ab1.visible = 0
     f.ab2.visible = 0
     f.ab3.visible = 0
     f.ab4.visible = 0
     f.ab5.visible = 0
 
     f.ne1.enabled = - 1
     f.ne2.enabled = - 1
     f.ne3.enabled = - 1
     f.ne4.enabled = - 1
     f.ne5.enabled = - 1

     f.e1.enabled = - 1
     f.e2.enabled = - 1
     f.e3.enabled = - 1
     f.e4.enabled = - 1
     f.e5.enabled = - 1

 END SUB 

SUB MahnDisable()
     f.neu1.enabled = 0
     f.neu2.enabled = 0
     f.neu3.enabled = 0
     f.neu4.enabled = 0
     f.neu5.enabled = 0
 
     f.nf1.enabled = 0
     f.nf2.enabled = 0
     f.nf3.enabled = 0
     f.nf4.enabled = 0
     f.nf5.enabled = 0
 
     f.dr1.enabled = 0
     f.dr2.enabled = 0
     f.dr3.enabled = 0
     f.dr4.enabled = 0
     f.dr5.enabled = 0
 
     f.ed1.enabled = 0
     f.ed2.enabled = 0
     f.ed3.enabled = 0
     f.ed4.enabled = 0
     f.ed5.enabled = 0

     f.e1.enabled = 0
     f.e2.enabled = 0
     f.e3.enabled = 0
     f.e4.enabled = 0
     f.e5.enabled = 0
 
     f.p1.enabled = 0
     f.p2.enabled = 0
     f.p3.enabled = 0
     f.p4.enabled = 0
     f.p5.enabled = 0
 
     f.zu1.enabled = 0
     f.zu2.enabled = 0
     f.zu3.enabled = 0
     f.zu4.enabled = 0
     f.zu5.enabled = 0
 
     f.s12.enabled = 0
     f.s13.enabled = 0
     f.s14.enabled = 0
     f.s15.enabled = 0
 
     f.s21.enabled = 0
     f.s23.enabled = 0
     f.s24.enabled = 0
     f.s25.enabled = 0
 
     f.s31.enabled = 0
     f.s32.enabled = 0
     f.s34.enabled = 0
     f.s35.enabled = 0
 
     f.s41.enabled = 0
     f.s42.enabled = 0
     f.s43.enabled = 0
     f.s45.enabled = 0
 
     f.s51.enabled = 0
     f.s52.enabled = 0
     f.s53.enabled = 0
     f.s54.enabled = 0
 
     f.ab1.visible = - 1
     f.ab2.visible = - 1
     f.ab3.visible = - 1
     f.ab4.visible = - 1
     f.ab5.visible = - 1

     f.ne1.enabled = 0
     f.ne2.enabled = 0
     f.ne3.enabled = 0
     f.ne4.enabled = 0
     f.ne5.enabled = 0
 
 END SUB 
 



SUB MahnEinzINT(codems%)
   SELECT FORM KEY codems% FILE "mahnung" INDEX codems.mahnung
   codere% = codere.mahnung
   dat$ = "rausgang"
   IF EXISTS (codere%,codere.Teilraus) THEN 
     FILE "teilraus"
     INDEX codere.teilraus
     SELECT FIRST 
     SELECT KEY codere% FILE "teilraus" INDEX codere.teilraus
     CALL SumTeil(codems%,codere%,"teilraus",dat$)
     FILE dat$
     SELECT FIRST 
     SELECT KEY codere% FILE dat$ INDEX codere.dat$
     rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$,",9999999.00")
   ELSE 
     rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$,",9999999.00")
   END IF 
   IF EXISTS (codems%,codems.teilraus) THEN 
     FILE "teilraus"
     INDEX codere.teilraus
     SELECT FIRST 
     SELECT KEY codere% FILE "teilraus" INDEX codere.teilraus
     CALL SumTeil(codems%,codere%,"teilraus",dat$)
     FILE dat$
     SELECT FIRST 
     SELECT KEY codere% FILE dat$ INDEX codere.dat$
     rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$,",9999999.00")
   ELSE 
     rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$,",9999999.00")
   END IF 
   IF UCASE$ (gezmitskonto.dat$) = "J" THEN 
     rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$ - skonto.dat$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEU.dat$ - SummeTeilEU.dat$ - skontoeu.dat$,",9999999.00")
   END IF 
 END SUB 


 ' MAHNUNG Auswahl Kopftext/PROLOG
 ' =======================================================================
 
SUB MahnKopftext(codems%)
 IF NEW ("MAHNUNG") OR MOD ("MAHNUNG") THEN CALL FStore("MAHNUNG")
 CALL FLSuchen()
 p$ = ""
 psend$ = Floskel.floskel
 IF cufl% <> 0 THEN 
   SELECT KEY codems% LOCK FILE "MAHNUNG" INDEX CodeMS.MAHNUNG
   IF PAGE = 1 THEN 
     p$ = prolog1.MAHNUNG
   END IF 
   IF PAGE = 2 THEN 
     p$ = prolog2.MAHNUNG
   END IF 
   IF PAGE = 3 THEN 
     p$ = prolog3.MAHNUNG
   END IF 
   IF PAGE = 4 THEN 
     p$ = prolog4.MAHNUNG
   END IF 
   IF PAGE = 5 THEN 
     p$ = prolog5.MAHNUNG
   END IF 
   IF p$ = "" THEN 
     IF PAGE = 1 THEN 
       prolog1.MAHNUNG = psend$
     END IF 
     IF PAGE = 2 THEN 
       prolog2.MAHNUNG = psend$
     END IF 
     IF PAGE = 3 THEN 
       prolog3.MAHNUNG = psend$
     END IF 
     IF PAGE = 4 THEN 
       prolog4.MAHNUNG = psend$
     END IF 
     IF PAGE = 5 THEN 
       prolog5.MAHNUNG = psend$
     END IF 

   ELSE 
     opt% = 2
     CREATE DIALOG "FLOSKEL",0,0,139,83,title$,"MS Sans Serif",8
     ADD DIALOG "FLOSKEL",4,0,0,138,62,0,""
     ADD DIALOG "FLOSKEL",9,4,13,20,22,2
     ADD DIALOG "FLOSKEL",3,30,17,103,11,0,"vor aktuellem Text einfÅgen",1,opt%
     ADD DIALOG "FLOSKEL",3,30,28,89,12,0,"aktuellen Text ersetzen",2,opt%
     ADD DIALOG "FLOSKEL",3,30,40,103,11,0,"an aktuellen Text anhÑngen",3,opt%
     ADD DIALOG "FLOSKEL",1,13,65,55,14,1,"&Weiter",1,1
     ADD DIALOG "FLOSKEL",1,69,65,55,14,0,"&Abbrechen",0,0
     DIALOG "FLOSKEL",req%
     REMOVE DIALOG "FLOSKEL"
     IF req% = 1 THEN 
       SELECT CASE opt%
       CASE 1
         IF PAGE = 1 THEN 
           prolog1.MAHNUNG = Floskel.floskel + CHR$ (13) + CHR$ (10) + prolog1.MAHNUNG
         END IF 
         IF PAGE = 2 THEN 
           prolog2.MAHNUNG = Floskel.floskel + CHR$ (13) + CHR$ (10) + prolog2.MAHNUNG
         END IF 
         IF PAGE = 3 THEN 
           prolog3.MAHNUNG = Floskel.floskel + CHR$ (13) + CHR$ (10) + prolog3.MAHNUNG
         END IF 
         IF PAGE = 4 THEN 
           prolog4.MAHNUNG = Floskel.floskel + CHR$ (13) + CHR$ (10) + prolog4.MAHNUNG
         END IF 
         IF PAGE = 5 THEN 
           prolog5.MAHNUNG = Floskel.floskel + CHR$ (13) + CHR$ (10) + prolog5.MAHNUNG
         END IF 
       CASE 2
         IF PAGE = 1 THEN 
           prolog1.MAHNUNG = Floskel.floskel
         END IF 
         IF PAGE = 2 THEN 
           prolog2.MAHNUNG = Floskel.floskel
         END IF 
         IF PAGE = 3 THEN 
           prolog3.MAHNUNG = Floskel.floskel
         END IF 
         IF PAGE = 4 THEN 
           prolog4.MAHNUNG = Floskel.floskel
         END IF 
         IF PAGE = 5 THEN 
           prolog5.MAHNUNG = Floskel.floskel
         END IF 
       CASE 3
         IF PAGE = 1 THEN 
           prolog1.MAHNUNG = prolog1.MAHNUNG + Floskel.floskel + CHR$ (13) + CHR$ (10)
         END IF 
         IF PAGE = 2 THEN 
           prolog2.MAHNUNG = prolog2.MAHNUNG + Floskel.floskel + CHR$ (13) + CHR$ (10)
         END IF 
         IF PAGE = 3 THEN 
           prolog3.MAHNUNG = prolog3.MAHNUNG + Floskel.floskel + CHR$ (13) + CHR$ (10)
         END IF 
         IF PAGE = 4 THEN 
           prolog4.MAHNUNG = prolog4.MAHNUNG + Floskel.floskel + CHR$ (13) + CHR$ (10)
         END IF 
         IF PAGE = 5 THEN 
           prolog5.MAHNUNG = prolog5.MAHNUNG + Floskel.floskel + CHR$ (13) + CHR$ (10)
         END IF 
       END SELECT 
     END IF 
   END IF 
   CALL FStore("MAHNUNG")
 END IF 
 FORM 
 END SUB 
 
 
 ' MAHNUNG Auswahl Fu·text/EPILOG
 ' =======================================================================
 
SUB MahnFusstext(codems%)
 IF NEW ("MAHNUNG") OR MOD ("MAHNUNG") THEN CALL FStore("MAHNUNG")
 CALL FLSuchen()
 p$ = ""
 psend$ = Floskel.floskel
 IF cufl% <> 0 THEN 
   SELECT KEY codems% LOCK FILE "MAHNUNG" INDEX CodeMS.MAHNUNG
   IF PAGE = 1 THEN 
     p$ = epilog1.MAHNUNG
   END IF 
   IF PAGE = 2 THEN 
     p$ = epilog2.MAHNUNG
   END IF 
   IF PAGE = 3 THEN 
     p$ = epilog3.MAHNUNG
   END IF 
   IF PAGE = 4 THEN 
     p$ = epilog4.MAHNUNG
   END IF 
   IF PAGE = 5 THEN 
     p$ = epilog5.MAHNUNG
   END IF 
   IF p$ = "" THEN 
     IF PAGE = 1 THEN 
       epilog1.MAHNUNG = psend$
     END IF 
     IF PAGE = 2 THEN 
       epilog2.MAHNUNG = psend$
     END IF 
     IF PAGE = 3 THEN 
       epilog3.MAHNUNG = psend$
     END IF 
     IF PAGE = 4 THEN 
       epilog4.MAHNUNG = psend$
     END IF 
     IF PAGE = 5 THEN 
       epilog5.MAHNUNG = psend$
     END IF 
 
   ELSE 
     opt% = 2
     CREATE DIALOG "FLOSKEL",0,0,139,83,title$,"MS Sans Serif",8
     ADD DIALOG "FLOSKEL",4,0,0,138,62,0,""
     ADD DIALOG "FLOSKEL",9,4,13,20,22,2
     ADD DIALOG "FLOSKEL",3,30,17,103,11,0,"vor aktuellem Text einfÅgen",1,opt%
     ADD DIALOG "FLOSKEL",3,30,28,89,12,0,"aktuellen Text ersetzen",2,opt%
     ADD DIALOG "FLOSKEL",3,30,40,103,11,0,"an aktuellen Text anhÑngen",3,opt%
     ADD DIALOG "FLOSKEL",1,13,65,55,14,1,"&Weiter",1,1
     ADD DIALOG "FLOSKEL",1,69,65,55,14,0,"&Abbrechen",0,0
     DIALOG "FLOSKEL",req%
     REMOVE DIALOG "FLOSKEL"
     IF req% = 1 THEN 
       SELECT CASE opt%
       CASE 1
         IF PAGE = 1 THEN 
           epilog1.MAHNUNG = Floskel.floskel + CHR$ (13) + CHR$ (10) + epilog1.MAHNUNG
         END IF 
         IF PAGE = 2 THEN 
           epilog2.MAHNUNG = Floskel.floskel + CHR$ (13) + CHR$ (10) + epilog2.MAHNUNG
         END IF 
         IF PAGE = 3 THEN 
           epilog3.MAHNUNG = Floskel.floskel + CHR$ (13) + CHR$ (10) + epilog3.MAHNUNG
         END IF 
         IF PAGE = 4 THEN 
           epilog4.MAHNUNG = Floskel.floskel + CHR$ (13) + CHR$ (10) + epilog4.MAHNUNG
         END IF 
         IF PAGE = 5 THEN 
           epilog5.MAHNUNG = Floskel.floskel + CHR$ (13) + CHR$ (10) + epilog5.MAHNUNG
         END IF 
       CASE 2
         IF PAGE = 1 THEN 
           epilog1.MAHNUNG = Floskel.floskel
         END IF 
         IF PAGE = 2 THEN 
           epilog2.MAHNUNG = Floskel.floskel
         END IF 
         IF PAGE = 3 THEN 
           epilog3.MAHNUNG = Floskel.floskel
         END IF 
         IF PAGE = 4 THEN 
           epilog4.MAHNUNG = Floskel.floskel
         END IF 
         IF PAGE = 5 THEN 
           epilog5.MAHNUNG = Floskel.floskel
         END IF 
       CASE 3
         IF PAGE = 1 THEN 
           epilog1.MAHNUNG = epilog1.MAHNUNG + Floskel.floskel + CHR$ (13) + CHR$ (10)
         END IF 
         IF PAGE = 2 THEN 
           epilog2.MAHNUNG = epilog2.MAHNUNG + Floskel.floskel + CHR$ (13) + CHR$ (10)
         END IF 
         IF PAGE = 3 THEN 
           epilog3.MAHNUNG = epilog3.MAHNUNG + Floskel.floskel + CHR$ (13) + CHR$ (10)
         END IF 
         IF PAGE = 4 THEN 
           epilog4.MAHNUNG = epilog4.MAHNUNG + Floskel.floskel + CHR$ (13) + CHR$ (10)
         END IF 
         IF PAGE = 5 THEN 
           epilog5.MAHNUNG = epilog5.MAHNUNG + Floskel.floskel + CHR$ (13) + CHR$ (10)
         END IF 
       END SELECT 
     END IF 
   END IF 
   CALL FStore("MAHNUNG")
 END IF 
 FORM 
 
 END SUB 
 

 REM Druck Zahlungsplan
 REM opt%=0 alle WÑhrungen
 REM opt%=1 Euro

SUB ZP1(codems%,opt%,leerz%,leerzn%,kopftext1$,fusstext1$)
 CALL DFile(3,"master" + _fpw$)
 CALL DFile(3,"rausgang" + _fpw$)
 IF opt% = 0 THEN 
   repo$ = "ZP1"
 ELSE 
   repo$ = "ZP1E"
 END IF 
 maske$ = repo$
 MOUSE OFF 
 CALL PRep(repo$)
 BEFORE REPORT 
     SET REPORT PAGE "H_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
 END FOOTING 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
     dat$ = "master"
     codere% = codere.dat$
     REM codems% = codems.dat$
     umr% = umrechnung.dat$
         IF EXISTS (codems%,codems.teilraus) THEN 
           SELECT KEY codems% FILE "Master" INDEX codems.master
           gesbrutto% = GesBrutto.master
           FILE "teilraus"
           INDEX codems.teilraus
           SELECT FIRST 
           SELECT KEY codems% FILE "teilraus" INDEX codems.teilraus
           sumz% = 0
           sumzEu% = 0
           mahn% = 0
           mahnEu% = 0

           mahnoff% = 0
           mahnoffEu% = 0

           gesbruttot% = 0
           gesbruttoteu% = 0
           gesmahn% = 0
           gesmahneu% = 0
           
           WHILE NOT EOF ("teilraus") AND codems.teilraus = codems%
             gesbruttot% = gesbruttot% + GesBrutto.teilraus
             gesbruttoteu% = gesbruttoteu% + GesBruttoEU.teilraus
             IF UCASE$ (mahnjn.teilraus) = "J" THEN 
               gesmahn% = gesmahn% + GesBrutto.teilraus
               gesmahneu% = gesmahneu% + GesBruttoEU.teilraus
             END IF 

             IF RIGHT$ (maske$,1) <> "E" THEN 
               IF erledigt.teilraus = "J" THEN 
                 sumz% = sumz% + GesBrutto.teilraus
                 IF UCASE$ (mahnjn.teilraus) = "J" THEN 
                   mahn% = mahn% + gesbrutto.teilraus
                 END IF 
               ELSE 
                 IF UCASE$ (mahnjn.teilraus) = "J" THEN mahnoff% = mahnoff% + gesbrutto.teilraus
               END IF 
             END IF 
             IF RIGHT$ (maske$,1) = "E" THEN 
               IF erledigt.teilraus = "J" THEN 
                 sumzeu% = sumzeu% + GesBruttoeu.teilraus
                 IF UCASE$ (mahnjn.teilraus) = "J" THEN 
                   mahneu% = mahneu% + gesbruttoeu.teilraus
                 END IF 
               ELSE 
                 IF UCASE$ (mahnjn.teilraus) = "J" THEN mahnoffeu% = mahnoffeu% + gesbruttoeu.teilraus
               END IF 
             END IF 
             
             SELECT NEXT 
           WEND 
           
           

           IF RIGHT$ (maske$,1) <> "E" THEN 
             IF sumz% <> 0 THEN sumzeu% = sumz% / umr%
             WertZeile1$ = STR$ (sumz%,",999999999.00") + " " + waehrung.master
             WertZeile2$ = STR$ (GesBrutto.master - sumz% + gesmahn%,",999999999.00") + " " + waehrung.master
             zgesbruttoeu$ = LTRIM$ ( STR$ (GesBrutto.master,",9999999.00"))
             IF gesmahn% > 0 THEN 
               zgesbruttoeu$ = zgesbruttoeu$ + " " + waehrung.master + "  zuzÅglich MahngebÅhren von " + LTRIM$ ( STR$ (gesmahn%,",999999.00")) + " " + waehrung.master
             END IF 
           END IF 
           IF RIGHT$ (maske$,1) = "E" THEN 
             IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr%
             WertZeile1$ = STR$ (sumzeu%,",999999999.00") + " EUR"
             WertZeile2$ = STR$ (GesBruttoeu.master - sumzeu% + gesmahneu%,",999999999.00") + " EUR"
             zgesbruttoeu$ = LTRIM$ ( STR$ (GesBruttoEU.master,",9999999.00"))
             IF gesmahneu% > 0 THEN 
               zgesbruttoeu$ = zgesbruttoeu$ + " EUR" + "  zuzÅglich MahngebÅhren von " + LTRIM$ ( STR$ (gesmahneu%,",999999.00")) + " EUR"
             END IF 
           END IF 
           FILE dat$
           SELECT FIRST 
           SELECT KEY codems% LOCK FILE dat$ INDEX codems.dat$
           SummeTeil.dat$ = sumz%
           SummeTeilEu.dat$ = sumzeu%
           SummeMahn.dat$ = mahn%
           SummeMahnEu.dat$ = mahneu%
           CALL QuickStore(dat$)
           Zeile1$ = "Summe erfolgter Zahlungen"
           IF mahnoff% > 0 OR mahnoffeu% > 0 THEN 
             IF RIGHT$ (maske$,1) <> "E" THEN 
               Zeile2$ = "ausstehender Restbetrag inclusive MahngebÅhren von " + LTRIM$ ( STR$ (mahnoff%,",999999.00")) + " " + Waehrung.master
             END IF 
             IF RIGHT$ (maske$,1) = "E" THEN 
               Zeile2$ = "ausstehender Restbetrag inclusive MahngebÅhren von " + LTRIM$ ( STR$ (mahnoffeu%,",999999.00")) + " EUR"
             END IF 
           ELSE 
             Zeile2$ = "ausstehender Restbetrag"
           END IF 
           IF EXISTS (codems%,codems.rausgang) THEN 
             FILE "RAUSGANG"
             INDEX codems.rausgang
             SELECT FIRST 
             SELECT KEY codems% LOCK FILE "rausgang" INDEX codems.rausgang
             SummeTeil.rausgang = sumz%
             SummeTeilEu.rausgang = sumzeu%
             SummeMahn.rausgang = mahn%
             SummeMahnEu.rausgang = mahneu%
           END IF 
           SELECT FIRST 
         END IF 
 ON ERROR GOTO zp1end080200
         leervorAdr$ = ""
         FOR i% = 0 TO leerz%
            leervorAdr$ = leervorAdr$ + " " + CHR$ (13) + CHR$ (10)
         NEXT i%
         leernachAdr$ = ""
         FOR i% = 0 TO leerzn%
            leernachAdr$ = leernachAdr$ + " " + CHR$ (13) + CHR$ (10)
         NEXT i%
         adrtext$ = Postanschrift.adressen
 kopftext$ = kopftext1$
 fusstext$ = fusstext1$
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 SET FIRST PAGE HEADING OFF 
 SELECT ;
     WHERE CodeMS.MASTER = CodeMS.TEILRAUS AND codems.master = codems%
     ORDER REPORT gezahltAm.TEILRAUS
     TO ASK 
     END SELECT 
 
zp1end080200: 
 MOUSE ON 
 ON ERROR GOTO ErrorHandler
 END SUB 
 
 REM Druck Zahlungsplan aus Rechnungsausgangsbuch
SUB ZP2(dat$,codere%,opt%,leerz%,leerzn%,kopftext1$,fusstext1$)
 CALL DFile(3,"master" + _fpw$)
 CALL DFile(3,"rausgang" + _fpw$)
 CALL DFile(3,"reingang" + _fpw$)
 IF dat$ LIKE "rausgang" THEN 
   IF opt% = 0 THEN 
     repo$ = "ZP2"
   ELSE 
     repo$ = "ZP2E"
   END IF 
 ELSE 
   repo$ = "ZP2EREIE"
 END IF 
 maske$ = repo$
 MOUSE OFF 
 CALL PRep(repo$)
 BEFORE REPORT 
     SET REPORT PAGE "H_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
 END FOOTING 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 
     REM codere% = codere.dat$
     codems% = codems.dat$
     umr% = umrechnung.dat$
     IF dat$ LIKE "rausgang" THEN teil$ = "teilraus"
     IF dat$ LIKE "reingang" THEN teil$ = "teilrein"
         IF EXISTS (codere%,codere.dat$) THEN 
           SELECT FIRST FILE dat$ INDEX codere.dat$
           SELECT KEY codere% FILE dat$ INDEX codere.dat$
           gesbrutto% = GesBrutto.dat$
           gesmahn% = GesMahn.dat$
           FILE teil$
           INDEX codere.teil$
           SELECT FIRST 
           SELECT KEY codere% FILE teil$ INDEX codere.teil$
           sumz% = 0
           sumzEu% = 0
           mahn% = 0
           mahneu% = 0


           mahnoff% = 0
           mahnoffEu% = 0
 
           gesbruttot% = 0
           gesbruttoteu% = 0
           gesmahn% = 0
           gesmahneu% = 0
           
           WHILE NOT EOF (teil$) AND codere.teil$ = codere%
             gesbruttot% = gesbruttot% + GesBrutto.teil$
             gesbruttoteu% = gesbruttoteu% + GesBruttoEU.teil$
             IF UCASE$ (mahnjn.teil$) = "J" THEN 
               gesmahn% = gesmahn% + GesBrutto.teil$
               gesmahneu% = gesmahneu% + GesBruttoEU.teil$
             END IF 
 
             IF RIGHT$ (maske$,1) <> "E" THEN 
               IF erledigt.teil$ = "J" THEN 
                 sumz% = sumz% + GesBrutto.teil$

                 IF UCASE$ (mahnjn.teil$) = "J" THEN 
                   mahn% = mahn% + gesbrutto.teil$
                 END IF 
               ELSE 
                 IF UCASE$ (mahnjn.teil$) = "J" THEN mahnoff% = mahnoff% + gesbrutto.teil$
               END IF 
             END IF 
             IF RIGHT$ (maske$,1) = "E" THEN 
               IF erledigt.teil$ = "J" THEN 
                 sumzeu% = sumzeu% + GesBruttoeu.teil$
                 IF UCASE$ (mahnjn.teil$) = "J" THEN 
                   mahneu% = mahneu% + gesbruttoeu.teil$
                 END IF 
               ELSE 
                 IF UCASE$ (mahnjn.teil$) = "J" THEN 
                   mahnoffeu% = mahnoffeu% + gesbruttoeu.teil$
                 END IF 
               END IF 
             END IF 
             
             SELECT NEXT 
           WEND 



 
           IF RIGHT$ (maske$,1) <> "E" AND dat$ LIKE "rausgang" THEN 
             REM IF sumz% <> 0 THEN sumzeu% = sumz% / umr%
             IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr%
             IF sumzeu% = 0 THEN sumzeu% = sumz% / umr%
             WertZeile1$ = STR$ (sumz%,",999999999.00") + " " + waehrung.master
             WertZeile2$ = STR$ (GesBrutto.rausgang - sumz% + gesmahn%,",999999999.00") + " " + waehrung.master
             zgesbruttoeu$ = LTRIM$ ( STR$ (GesBrutto.rausgang,",9999999.00"))
             IF gesmahn% > 0 THEN 
               zgesbruttoeu$ = zgesbruttoeu$ + " " + waehrung.master + "  zuzÅglich MahngebÅhren von " + LTRIM$ ( STR$ (gesmahn%,",999999.00")) + " " + waehrung.master
             END IF 
           END IF 
           IF RIGHT$ (maske$,1) = "E" OR dat$ LIKE "reingang" THEN 
             IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr%
             IF sumzeu% = 0 THEN sumzeu% = sumz% / umr%
             WertZeile1$ = STR$ (sumzeu%,",999999999.00") + " EUR"
             WertZeile2$ = STR$ (GesBruttoeu.dat$ - sumzeu% + gesmahneu%,",999999999.00") + " EUR"
             zgesbruttoeu$ = LTRIM$ ( STR$ (GesBruttoEU.dat$,",9999999.00"))
             IF gesmahneu% > 0 THEN 
               zgesbruttoeu$ = zgesbruttoeu$ + " EUR" + "  zuzÅglich MahngebÅhren von " + LTRIM$ ( STR$ (gesmahneu%,",999999.00")) + " EUR"
             END IF 
           END IF 



           FILE dat$
           SELECT FIRST FILE dat$
           SELECT KEY codere% LOCK FILE dat$ INDEX codere.dat$
           SummeTeil.dat$ = sumz%
           SummeTeilEu.dat$ = sumzeu%
           SummeMahn.dat$ = mahn%
           SummeMahnEu.dat$ = mahneu%
           REM CALL QuickStore(dat$)


           Zeile1$ = "Summe erfolgter Zahlungen"
           IF mahnoff% > 0 OR mahnoffeu% > 0 THEN 
             IF RIGHT$ (maske$,1) <> "E" AND dat$ LIKE "rausgang" THEN 
               Zeile2$ = "ausstehender Restbetrag inclusive MahngebÅhren von " + LTRIM$ ( STR$ (mahnoff%,",999999.00")) + " " + Waehrung.master
             END IF 
             IF RIGHT$ (maske$,1) = "E" OR dat$ LIKE "reingang" THEN 
               Zeile2$ = "ausstehender Restbetrag inclusive MahngebÅhren von " + LTRIM$ ( STR$ (mahnoffeu%,",999999.00")) + " EUR"
             END IF 
           ELSE 
             Zeile2$ = "ausstehender Restbetrag"
           END IF 




           SELECT FIRST FILE teil$
           SELECT KEY codere% FILE teil$ INDEX codere.Teil$

         END IF 
         leervorAdr$ = ""
         FOR i% = 0 TO leerz%
            leervorAdr$ = leervorAdr$ + " " + CHR$ (13) + CHR$ (10)
         NEXT i%
         leernachAdr$ = ""
         FOR i% = 0 TO leerzn%
            leernachAdr$ = leernachAdr$ + " " + CHR$ (13) + CHR$ (10)
         NEXT i%
         adrtext$ = Postanschrift.adressen
 REM adrtext$ = Anrede.RAUSGANG + CHR$ (13) + Nachname.RAUSGANG + ", " + Vorname.RAUSGANG + CHR$ (13) + Stra·e.RAUSGANG + CHR$ (13) + Plz.RAUSGANG + " " + Ort.RAUSGANG
 
 ON ERROR GOTO zp2end080200
 kopftext$ = kopftext1$
 fusstext$ = fusstext1$
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 SET FIRST PAGE HEADING OFF 
 SELECT ;
     WHERE CodeRE.dat$ = CodeRE.TEIL$ AND CodeKU.dat$ = CodeKU.ADRESSEN AND codere.dat$ = codere%
     ORDER REPORT gezahltAm.TEIL$
     TO ASK 
     END SELECT 
zp2end080200: 
 MOUSE ON 
 ON ERROR GOTO ErrorHandler
 END SUB 
 
 
SUB AKuPreis()
 cuart% = Codear.artikel
 
 REM IF disabled%("MAHNUNG") THEN END SUB 
 REM cudo% = CodeDOK.DOKUMENT
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "AKUPR"
 IF ProjectJN$ = "TRUE" THEN maske$ = "AKUPR"
 IF euromaske% = 1 THEN 
   maske$ = "AKUPRE"
 END IF 
 FILE "AKUPREIS"
 INDEX codear.AKUPREIS
 SELECT FIRST 
 
 
 WHILE _formend% = 0
   MAHNsub% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     SET HEADING title$ + " - Kundenpreisverwaltung"
     OPEN FORM GPrjForm$ + maske$
     SET STATUS "Kundenpreisverwaltung"
     CALL MNAKUP1()
     CALL AKUPINT1()
     FORM 
     SET DISPLAY ON 
   END IF 
   zweitwaehr$ = waehrung.artikel
   IF euromaske% = 0 THEN 
     waehr$ = "WÑhrung: " + waehrung.artikel
   ELSE 
     waehr$ = "Erfass.wÑhrung war: " + waehrung.artikel
   END IF 


   MENU ON 
   FORM 
   MOUSE ON 
   REM dokgrup$ = Gruppe.Dokument
   FORM 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE MAHNsub%
   CASE 1
     REM neuen Kundenpreis aufnehmen
     adr% = ADRSuche%(0)
     IF adr% <> 0 THEN 
       cuknr% = adr%
       codear% = codear.artikel
       testkuart$ = STR$ (cuknr%,"000000") + STR$ (cuart%,"000000")

       VK% = VKNetto.artikel
       IF mastform$ LIKE "EUR" THEN VK% = VKNettoEu.artikel
       IF EXISTS (testkuart$,quickkuart.akupreis) THEN 
         SELECT KEY testkuart$ FILE "AKUPREIS" INDEX quickkuart.akupreis
         vk% = netto.akupreis
         IF mastform$ LIKE "EUR" THEN vk% = nettoeu.akupreis
       END IF 
       CREATE DIALOG "ABZUGANG",104,82,292,239,title$,"MS Sans Serif",8
       ADD DIALOG "ABZUGANG",4,0,0,292,211,0,""
       ADD DIALOG "ABZUGANG",9,4,10,20,22,2
       ADD DIALOG "ABZUGANG",5,36,9,68,10,0,Artikelnummer.ARTIKEL
       ADD DIALOG "ABZUGANG",5,107,9,180,10,128,Bezeichnung.ARTIKEL
       ADD DIALOG "ABZUGANG",4,36,24,253,100,0," Beschreibung "
       ADD DIALOG "ABZUGANG",5,38,36,244,85,128,Beschreibung.ARTIKEL
       ADD DIALOG "ABZUGANG",5,36,128,62,10,0,"aktueller Bestand:"
       ADD DIALOG "ABZUGANG",5,100,128,170,10,0, LTRIM$ ( STR$ (Bestand.ARTIKEL,",999999999.00")) + " " + ME_.ARTIKEL
       ADD DIALOG "ABZUGANG",5,36,140,37,10,0,"letzter EK:"
       IF mastform$ LIKE "EUR" THEN 
         ADD DIALOG "ABZUGANG",5,100,140,200,10,0, LTRIM$ ( STR$ (LieferEKEU.ARTIKEL,",9999999999.00")) + " EUR " + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yyyy") + "/Mischpreis:" + LTRIM$ ( STR$ (EKEU.ARTIKEL,",9999999999.00"))
       ELSE 
         ADD DIALOG "ABZUGANG",5,100,140,200,10,0, LTRIM$ ( STR$ (LieferEK.ARTIKEL,",9999999999.00")) + " " + waehrung.artikel + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yyyy") + "/Mischpreis:" + LTRIM$ ( STR$ (EK.ARTIKEL,",9999999999.00"))
       END IF 
       ADD DIALOG "ABZUGANG",5,36,153,37,10,0,"Lieferant:"
       SELECT KEY Lieferant.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
       IF FOUND ("ADRESSEN") THEN Nachname$ = Nachname.ADRESSEN ELSE Nachname$ = "<keine Zuordnung>"
       ADD DIALOG "ABZUGANG",5,100,153,150,10,128,Nachname$
       ADD DIALOG "ABZUGANG",5,36,193,45,10,0,"VK Netto:"
       ADD DIALOG "ABZUGANG",6,100,193,120,10,0,0,VK%,20
       ADD DIALOG "ABZUGANG",1,84,214,55,15,0,"&OK",1,1
       ADD DIALOG "ABZUGANG",1,146,214,55,15,0,"&Abbrechen",0,0
       DIALOG "ABZUGANG",req%
       REMOVE DIALOG "ABZUGANG"
       SELECT KEY cuknr% FILE "Adressen" INDEX codeku.adressen
       IF req% = 1 THEN 
         FILE "AKUPREIS"
         IF NOT EXISTS (testkuart$,quickkuart.akupreis) THEN 
           BLANK FILE "AKUPREIS"
           codekey% = SER ("AKUPREIS",1)
           codekey.akupreis = codekey%
         ELSE 
           SELECT KEY testkuart$ LOCK FILE "AKUPREIS" INDEX quickkuart.akupreis
         END IF 
         codear.akupreis = cuart%
         codeku.akupreis = cuknr%
         datum.akupreis = TODAY 
         quickartku.akupreis = STR$ (cuart%,"000000") + STR$ (cuknr%,"000000")
         quickkuart.akupreis = STR$ (cuknr%,"000000") + STR$ (cuart%,"000000")
         MwSt.akupreis = MwSt.artikel
         IF mastform$ LIKE "EUR" THEN 
           Codew.AKUPREIS = 3
           waehrung.AKUPREIS = "EUR"
           zweitwaehr$ = "EUR"
           umrechnung.AKUPREIS = 1
           euro% = umrechnung.AKUPREIS
           nettoeu.akupreis = VK%
           name.akupreis = nachname.adressen + "," + vorname.adressen + "," + kundennummer.adressen
           bruttoeu.akupreis = nettoeu.akupreis + ((nettoeu.akupreis / 100) * MwSt.akupreis)
           CALL AkuEuroDM()
         ELSE 
           Codew.AKUPREIS = codew.artikel
           waehrung.AKUPREIS = waehrung.Artikel
           zweitwaehr$ = waehrung.Artikel
           umrechnung.AKUPREIS = umrechnung.artikel
           euro% = umrechnung.AKUPREIS
           netto.akupreis = VK%
           name.akupreis = nachname.adressen + "," + vorname.adressen + "," + kundennummer.adressen
           brutto.akupreis = netto.akupreis + ((netto.akupreis / 100) * MwSt.akupreis)
           CALL AkuDMEuro()
         END IF 
         STORE FILE "AKUPREIS"
         UNLOCK CURRENT FILE "akupreis"

       END IF 

       IF UCASE$ ( FORM ) = "AKUPR" THEN 
         waehr$ = "WÑhrung: " + zweitwaehr$
       ELSE 
         waehr$ = "Erfass.wÑhrung war: " + zweitwaehr$
       END IF 
       CALL AKUPINT1()
     END IF 
   CASE 2
     REM Kundenpreis Ñndern/lîschen
       FILE "AKUPREIS"
       codekey% = codekey.akupreis
       SELECT KEY codekey% LOCK FILE "AKUPREIS" INDEX codekey.akupreis
       SELECT KEY codeku.akupreis FILE "Adressen" INDEX codeku.adressen
       IF euromaske% <> 1 THEN 
         VK% = Netto.akupreis
       ELSE 
         VK% = NettoEU.akupreis
       END IF 
       CREATE DIALOG "ABZUGANG",104,82,292,239,title$,"MS Sans Serif",8
       ADD DIALOG "ABZUGANG",4,0,0,292,211,0,""
       ADD DIALOG "ABZUGANG",9,4,10,20,22,2
       ADD DIALOG "ABZUGANG",5,36,9,68,10,0,Artikelnummer.ARTIKEL
       ADD DIALOG "ABZUGANG",5,107,9,180,10,128,Bezeichnung.ARTIKEL
       ADD DIALOG "ABZUGANG",4,36,24,253,100,0," Beschreibung "
       ADD DIALOG "ABZUGANG",5,38,36,244,85,128,Beschreibung.ARTIKEL
       ADD DIALOG "ABZUGANG",5,36,128,62,10,0,"aktueller Bestand:"
       IF mastform$ LIKE "EUR" THEN 
         ADD DIALOG "ABZUGANG",5,100,128,170,10,0, LTRIM$ ( STR$ (Bestand.ARTIKEL,",999999999.00")) + " " + ME_.ARTIKEL
         ADD DIALOG "ABZUGANG",5,36,140,37,10,0,"letzter EK:"
         ADD DIALOG "ABZUGANG",5,100,140,200,10,0, LTRIM$ ( STR$ (LieferEKeu.ARTIKEL,",9999999999.00")) + " EUR " + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yyyy") + "/Mischpreis:" + LTRIM$ ( STR$ (EKEU.ARTIKEL,",9999999999.00"))
       ELSE 
         ADD DIALOG "ABZUGANG",5,100,128,170,10,0, LTRIM$ ( STR$ (Bestand.ARTIKEL,",999999999.00")) + " " + ME_.ARTIKEL
         ADD DIALOG "ABZUGANG",5,36,140,37,10,0,"letzter EK:"
         ADD DIALOG "ABZUGANG",5,100,140,200,10,0, LTRIM$ ( STR$ (LieferEK.ARTIKEL,",9999999999.00")) + " " + waehrung.artikel + "/" + DATE$ (letzteLieferung.ARTIKEL,"dd.mm.yyyy") + "/Mischpreis:" + LTRIM$ ( STR$ (EK.ARTIKEL,",9999999999.00"))
       END IF 
       ADD DIALOG "ABZUGANG",5,36,153,37,10,0,"Kunde:"
       ADD DIALOG "ABZUGANG",5,100,153,150,30,128,name.akupreis
       ADD DIALOG "ABZUGANG",5,36,193,45,10,0,"VK Netto:"
       ADD DIALOG "ABZUGANG",6,100,193,120,10,0,0,VK%,20
       ADD DIALOG "ABZUGANG",1,54,214,55,15,0,"&OK",1,1
       ADD DIALOG "ABZUGANG",1,116,214,55,15,0,"&Abbrechen",0,0
       ADD DIALOG "ABZUGANG",1,178,214,55,15,0,"&Lîschen",2,1
       DIALOG "ABZUGANG",req%
       REMOVE DIALOG "ABZUGANG"
       IF req% = 1 THEN 
         IF mastform$ LIKE "EUR" THEN 
           nettoeu.akupreis = VK%
           name.akupreis = nachname.adressen + "," + vorname.adressen + "," + kundennummer.adressen
           bruttoeu.akupreis = nettoeu.akupreis + ((nettoeu.akupreis / 100) * MwSt.akupreis)
           CALL AkuEuroDM()
           STORE FILE "AKUPREIS"
           UNLOCK CURRENT FILE "AKUPREIS"
         ELSE 
           netto.akupreis = VK%
           name.akupreis = nachname.adressen + "," + vorname.adressen + "," + kundennummer.adressen
           brutto.akupreis = netto.akupreis + ((netto.akupreis / 100) * MwSt.akupreis)
           CALL AkuDMEuro()
           STORE FILE "AKUPREIS"
           UNLOCK CURRENT FILE "AKUPREIS"
         END IF 
       ELSE 
         IF req% = 2 THEN 
           SELECT REMOVE 
         ELSE 
           UNLOCK CURRENT 
         END IF 
       END IF 
       CALL AKUPINT1()
   CASE 3
     REM wechsel zwischen Euromaske und WÑhrungsmaske
     IF euromaske% = 0 THEN 
       maske$ = "AKUPRE"
       euromaske% = 1
     ELSE 
       maske$ = "AKUPR"
       euromaske% = 0
     END IF 
   END SELECT 
 WEND 
 _formend% = 0
 FILE "ARTIKEL"
 END SUB 
  
SUB MNAKUP1()
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
SUB AKUPINT1()
 SELECT FORM KEY cuart% FILE "ARTIKEL" INDEX codear.ARTIKEL
 SELECT KEY cuart% FILE "AKUPREIS" INDEX codear.AKUPREIS
 END SUB 
 

SUB AkuDMEuro()
 REM Euro
 IF umrechnung.AKUPREIS <> 0 THEN euro% = umrechnung.AKUPREIS
 IF netto.AKUPREIS <> 0 THEN nettoEu.AKUPREIS = netto.AKUPREIS / euro% ELSE nettoeu.AKUPREIS = 0
 IF nettoeu.AKUPREIS <> 0 THEN bruttoEu.AKUPREIS = nettoEu.AKUPREIS + ((nettoEu.AKUPREIS / 100) * MwSt.AKUPREIS) ELSE bruttoeu.AKUPREIS = 0
 END SUB 
 
 REM Umrechnung Euro->DM fÅr Artikeldatei
SUB AkuEuroDM()
 REM Euro
 IF umrechnung.AKUPREIS <> 0 THEN euro% = umrechnung.AKUPREIS
 IF nettoEu.AKUPREIS <> 0 THEN netto.akupreis = nettoEu.akupreis * euro% ELSE netto.akupreis = 0
 IF netto.akupreis <> 0 THEN brutto.akupreis = netto.akupreis + ((netto.akupreis / 100) * MwSt.akupreis) ELSE brutto.akupreis = 0
 END SUB 




















 ' zieldru%=2 nur WÑhrung
 ' zieldru%=4 nur Euro
 ' zieldru%=5 WÑhrung+Euro
 REM ziel%=3 auf Drucker
 
SUB Out2WinWord(codems%,zieldru%)
 MOUSE OFF 

 ansionoff$ = UCASE$ (ReadINI$("SYSTEM","WinWordAnsi"))
 opt% = zieldru%
 cums% = codems%
 IF UCASE$ ( FORM ) LIKE "Mahnung*" THEN 
   art% = 6
   abdatei$ = "MAHNUNG"
 ELSE 
   art% = art.master
   abdatei$ = "MASTER"
 END IF 
 IF NEW (abdatei$) OR MOD (abdatei$) THEN CALL QuickStore(abdatei$)
 MOUSE OFF 
 SELECT FORM KEY cums% LOCK FILE abdatei$ INDEX codems.abdatei$
 SELECT KEY cums% LOCK FILE abdatei$ INDEX codems.abdatei$
 knr% = codeku.abdatei$
 SELECT FIRST FILE "Adressen" INDEX codeku.adressen
 SELECT KEY knr% FILE "Adressen" INDEX codeku.adressen
 Kundennummer.abdatei$ = Kundennummer.adressen
 CALL QuickStore(abdatei$)
 SELECT FORM KEY cums% LOCK FILE abdatei$ INDEX codems.abdatei$
 SELECT KEY cums% LOCK FILE abdatei$ INDEX codems.abdatei$
 zweitwaehr$ = Waehrung.abdatei$
 IF zweitwaehr$ = "" THEN zweitwaehr$ = waehrung.stamm
 REM IF UCASE$ (zweitwaehr$) LIKE "÷S" THEN 
   REM zweitwaehr$ = "îS"
 REM END IF 
 REM CALL Fehler("Ausgabe Word neu","rechtslinks")
 
 IF art% <> 6 THEN 
   CALL MSCHRabattProz()
   CALL MSCHRabatt()
   FILE "master"
   IF art.master = 4 THEN 
     titel.master = "AuftragsbestÑtigung"
     CALL QuickStore("master")
     MOUSE OFF 
   END IF 
   SELECT FORM KEY cums% LOCK FILE "master" INDEX codems.master
   SELECT KEY cums% LOCK FILE "master" INDEX codems.master
 END IF 
 RabattText$ = ""
 IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
   TexLieferdat$ = TexLiefdat2.stamm
   TexAngeb$ = TexAng2.stamm
   TexAnfr$ = TexAnfr2.stamm
   TexRech$ = TexRech2.stamm
   TexLief$ = TexLief2.stamm
   TexAuftr$ = TexAuftr2.stamm
   TexBestell$ = TexBestell2.stamm
   TexGutschr$ = TexGutschr2.stamm
   TexMahn$ = TexMahn2.stamm
   TexBeleg$ = TexBeleg2.stamm
   TexBelegdat$ = "voucher date"
   TexKunr$ = TexKunnr2.stamm
   REM TexLief$ = TexLiefnr2.stamm
   TexPos$ = TexPos2.stamm
   TexAnzahl$ = TexAnzahl2.stamm
   TexME$ = TexME2.stamm
   TexArtik$ = TexArtik2.stamm
   TexEinzpr$ = TexEinzpr2.stamm
   TexGespr$ = TexGespr2.stamm
   TexSumN$ = TexSumN2.stamm
   TexSumG$ = TexSumG2.stamm
   TexMWSTv$ = TexMWST2v.stamm
   TexMWSTn$ = TexMWST2n.stamm
   TexRabatt$ = TexRabatt2.stamm
   TexZZ$ = TexZZ2.stamm
   TexZaZiel$ = TexZaZiel2.stamm
   TEXMahngeb$ = TEXMahngeb2.stamm
   TEXMahnport$ = TEXMahnport2.stamm
   TexTeilzA$ = TexTeilzA2.stamm
   TexTeilzB$ = TexTeilzB2.stamm
   TexTeilzC$ = TexTeilzC2.stamm
   TexSktoA$ = TexSktoA2.stamm
   TexSktoB$ = TexSktoB2.stamm
   TexSktoC$ = TexSktoC2.stamm
   TexAGNr$ = TexAGNr2.stamm
 ELSE 
   TexSktoA$ = TexSktoA1.stamm
   TexSktoB$ = TexSktoB1.stamm
   TexSktoC$ = TexSktoC1.stamm
   TexTeilzA$ = TexTeilzA1.stamm
   TexTeilzB$ = TexTeilzB1.stamm
   TexTeilzC$ = TexTeilzC1.stamm
   TEXMahnport$ = TEXMahnport1.stamm
   TEXMahngeb$ = TEXMahngeb1.stamm
   TexMahn$ = TexMahn1.stamm
   TexZZ$ = TexZZ1.stamm
   TexZaZiel$ = TexZaZiel1.stamm
   TexRabatt$ = TexRabatt1.stamm
   TexMWSTv$ = TexMWST1v.stamm
   TexMWSTn$ = TexMWST1n.stamm
   TexSumN$ = TexSumN1.stamm
   TexSumG$ = TexSumG1.stamm
   TexGespr$ = TexGespr1.stamm
   TexEinzpr$ = TexEinzpr1.stamm
   TexArtik$ = TexArtik1.stamm
   TexME$ = TexME1.stamm
   TexAnzahl$ = TexAnzahl1.stamm
   TexAngeb$ = TexAng1.stamm
   TexAnfr$ = TexAnfr1.stamm
   TexRech$ = TexRech1.stamm
   TexLief$ = TexLief1.stamm
   TexAuftr$ = TexAuftr1.stamm
   TexBestell$ = TexBestell1.stamm
   TexGutschr$ = TexGutschr1.stamm
   TexBeleg$ = TexBeleg1.stamm
   TexBelegdat$ = "Belegdatum"
   TexKunr$ = TexKunnr1.stamm
   REM TexLief$ = TexLiefnr1.stamm
   TexPos$ = TexPos1.stamm
   TexLieferdat$ = TexLiefdat1.stamm
   TexAGNr$ = TexAGNr1.stamm
 END IF 
 IF art% <> 6 AND (skonto.abdatei$ > 0 OR skontoEU.abdatei$ > 0) THEN 
   RabattText$ = ""
   summezahl% = GesBrutto.abdatei$ - Skonto.abdatei$
   s1ges$ = STR$ (GesBrutto.abdatei$,",999999999.00")
   s2sk$ = STR$ (Skonto.abdatei$,",999999999.00")
   summezahl% = VAL (s1ges$) - VAL (s2sk$)
   summezahl$ = LTRIM$ ( STR$ (Summezahl%," ,9999999999.00"))
   skontoproz$ = LTRIM$ ( STR$ (SkontoProz.abdatei$,"999.00"))
   skonto$ = LTRIM$ ( STR$ (Skonto.abdatei$," ,9999999999.00"))
   gesbrut$ = LTRIM$ ( STR$ (GesBrutto.abdatei$," ,9999999999.00"))
   REM z1$ = "bei Zahlung bis zum " + DATE$ (skontoziel.abdatei$,"dd.mm.yyyy") + " gewÑhren wir ein Skonto von "
   z1$ = TexSktoA$ + " " + DATE$ (skontoziel.abdatei$,"dd.mm.yyyy") + " " + TexSktoB$ + " "
   w$ = waehrung.abdatei$
   IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
     RabattText$ = z1$ + skontoproz$ + " % (amount: " + skonto$ + " " + w$ + "), to  " + gesbrut$ + " " + w$ + CHR$ (13) + TexSktoC$ + ": " + summezahl$ + " " + w$
   ELSE 
     REM RabattText$ = z1$ + skontoproz$ + " % (Betrag: " + skonto$ + " " + w$ + "), auf  " + gesbrut$ + " " + w$ + CHR$ (13) + "zu zahlende Summe: " + summezahl$ + " " + w$
     RabattText$ = z1$ + skontoproz$ + " % (Betrag: " + skonto$ + " " + w$ + "), auf  " + gesbrut$ + " " + w$ + CHR$ (13) + TexSktoC$ + ": " + summezahl$ + " " + w$
   END IF 
 
   summezahlEU% = GesBruttoEU.abdatei$ - SkontoEU.abdatei$
   s1ges$ = STR$ (GesBruttoEU.abdatei$,",999999999.00")
   s2sk$ = STR$ (SkontoEU.abdatei$,",999999999.00")
   summezahlEU% = VAL (s1ges$) - VAL (s2sk$)
   summezahlEU$ = LTRIM$ ( STR$ (SummezahlEU%," ,9999999999.00"))
   skontoEU$ = LTRIM$ ( STR$ (SkontoEU.abdatei$," ,9999999999.00"))
   gesbrutEU$ = LTRIM$ ( STR$ (GesBruttoEU.abdatei$," ,9999999999.00"))
   IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
     RabattTextEU$ = z1$ + skontoproz$ + " % (amount: " + skontoEu$ + "EUR), to  " + gesbrutEu$ + " EUR" + CHR$ (13) + TexSktoC$ + ": " + summezahlEU$ + " EUR"
   ELSE 
     RabattTextEU$ = z1$ + skontoproz$ + " % (Betrag: " + skontoEu$ + "EUR), auf  " + gesbrutEu$ + " EUR" + CHR$ (13) + "zu zahlende Summe: " + summezahlEU$ + " EUR"
   END IF 
 ELSE 
   RabattText$ = ""
   RabattTextEU$ = ""
 END IF 
 
 REM Nettofakturierung
   IF art% <> 6 AND (rabatt.abdatei$ <> 0 OR rabattproz.abdatei$) <> 0 THEN 
     IF rabattart.abdatei$ = 0 THEN 
       REM Rabatt auf Netto
       Zeile1$ = TexSumN$
       WertZeile1$ = LTRIM$ ( STR$ (PreisNetto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile1EU$ = LTRIM$ ( STR$ (PreisNettoEU.abdatei$,",9999999999.00")) + " EUR"
       IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
         Zeile2$ = "less " + STR$ (Rabattproz.abdatei$,"999.000") + "% discounts"
       ELSE 
         Zeile2$ = "abzÅglich Rabatt von " + STR$ (Rabattproz.abdatei$,"999.000") + "% auf Summe Netto"
       END IF 
       WertZeile2$ = "-" + LTRIM$ ( STR$ (Rabatt.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile2EU$ = "-" + LTRIM$ ( STR$ (RabattEU.abdatei$,",9999999999.00")) + " EUR"
       IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
         Zeile3$ = TexSumn$ + " less discounts"
       ELSE 
         Zeile3$ = "Summe Netto abzÅglich Rabatt"
       END IF 
       WertZeile3$ = LTRIM$ ( STR$ (GesNetto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile3EU$ = LTRIM$ ( STR$ (GesNettoEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile4$ = MWSTText$
       WertZeile4$ = MWSTBetrag$ + " " + (zweitwaehr$)
       WertZeile4EU$ = MWSTBetragEU$ + " EUR"
       Zeile5$ = TexSumG$
       Summegesbrutto% = VAL ( STR$ (gesnetto.abdatei$,",999999999.00")) + VAL ( STR$ (mwstBetrag1%,",999999999.00"))
       WertZeile5$ = LTRIM$ ( STR$ (Summegesbrutto%,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile5$ = LTRIM$ ( STR$ (Summegesbrutto%,",9999999999.00")) + " " + (zweitwaehr$)
       SummegesbrutEu% = VAL ( STR$ (gesnettoEu.abdatei$,",999999999.00")) + VAL ( STR$ (mwstBetrag1EU%,",999999999.00"))
       WertZeile5EU$ = LTRIM$ ( STR$ (SummegesbrutEU%,",9999999999.00")) + " EUR"
     ELSE 
       REM Rabatt auf Brutto
       
       WertZeile1$ = LTRIM$ ( STR$ (PreisNetto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile1EU$ = LTRIM$ ( STR$ (PreisNettoEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile2$ = MWSTText$
       WertZeile2$ = MWSTBetrag$ + " " + (zweitwaehr$)
       WertZeile2EU$ = MWSTBetragEU$ + " EUR"
       
       WertZeile3$ = LTRIM$ ( STR$ (PreisBrutto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile3EU$ = LTRIM$ ( STR$ (PreisBruttoEU.abdatei$,",9999999999.00")) + " EUR"
       IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
         Zeile1$ = TexSumN$ + " exclusive discounts"
         Zeile3$ = TexSumG$ + " exclusive discounts"
         Zeile4$ = "less discounts " + STR$ (Rabattproz.abdatei$,"999.000") + "% "
       ELSE 
         Zeile1$ = TexSumN$ + " ohne Rabatt"
         Zeile3$ = TexSumG$ + " ohne Rabatt"
         Zeile4$ = "abzÅglich Rabatt von " + STR$ (Rabattproz.abdatei$,"999.000") + "% auf Summe Brutto"
       END IF 
       WertZeile4$ = LTRIM$ ( STR$ (Rabatt.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile4EU$ = LTRIM$ ( STR$ (RabattEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile5$ = TexSumG$
       WertZeile5$ = LTRIM$ ( STR$ (GesBrutto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile5EU$ = LTRIM$ ( STR$ (GesBruttoEU.abdatei$,",9999999999.00")) + " EUR"
     END IF 
   ELSE 
     REM ohne Rabatt
     IF art% <> 6 THEN 
       Zeile3$ = TexSumN$
       WertZeile3$ = LTRIM$ ( STR$ (PreisNetto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile3EU$ = LTRIM$ ( STR$ (PreisNettoEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile4$ = MWSTText$
       WertZeile4$ = MWSTBetrag$ + " " + (zweitwaehr$)
       WertZeile4EU$ = MWSTBetragEU$ + " EUR"
       Zeile1$ = ""
       WertZeile1$ = ""
       WertZeile1EU$ = ""
       Zeile2$ = ""
       WertZeile2$ = ""
       WertZeile2EU$ = ""
       Zeile5$ = TexSumG$
       REM 011198 WertZeile5$ = LTRIM$ ( STR$ (GesBrutto.abdatei$,",9999999999.00")) + " " + FN ibm(zweitwaehr$)
       WertZeile5$ = LTRIM$ ( STR$ (GesBrutto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile5EU$ = LTRIM$ ( STR$ (GesBruttoEU.abdatei$,",9999999999.00")) + " EUR"
     ELSE 
       IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
         Zeile3$ = TexRech$ + " " + TexSumN$ + ":   "
       ELSE 
         Zeile3$ = "Rechnungssumme Netto:   "
       END IF 
       WertZeile3$ = LTRIM$ ( STR$ (GesNetto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile3EU$ = LTRIM$ ( STR$ (GesNettoEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile4$ = MWSTText$
       WertZeile4$ = MWSTBetrag$ + " " + (zweitwaehr$)
       WertZeile4EU$ = MWSTBetragEU$ + " EUR"
       Zeile1$ = ""
       WertZeile1$ = ""
       WertZeile1EU$ = ""
       Zeile2$ = ""
       WertZeile2$ = ""
       WertZeile2EU$ = ""
       IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
         Zeile5$ = TexRech$ + " " + TexSumG$ + ":   "
       ELSE 
         Zeile5$ = "Rechnungssumme Brutto:  "
       END IF 
       REM 011198 WertZeile5$ = LTRIM$ ( STR$ (GesBrutto.abdatei$,",9999999999.00")) + " " + FN ibm(zweitwaehr$)
       WertZeile5$ = LTRIM$ ( STR$ (GesBrutto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile5EU$ = LTRIM$ ( STR$ (GesBruttoEU.abdatei$,",9999999999.00")) + " EUR"
     END IF 
   END IF 
 END IF 
 IF art% <> 6 AND kalkart.abdatei$ <> 0 THEN 
 REM Bruttofakturierung
   IF (rabatt.abdatei$ <> 0 OR rabattproz.abdatei$ <> 0) THEN 
   REM Rabatt gegeben
     IF rabattart.abdatei$ = 0 THEN 
     REM Rabatt auf Netto gegeben, darf nicht sein
     CALL Fehler("Sie dÅrfen bei einer Bruttofakturierung keinen Rabatt auf die Nettosumme geben!","Bitte Ñndern!")
       Zeile1$ = ""
       WertZeile1$ = ""
       WertZeile1EU$ = ""
       Zeile2$ = ""
       WertZeile2$ = ""
       WertZeile2EU$ = ""
       Zeile3$ = ""
       WertZeile3$ = ""
       WertZeile3EU$ = ""
       Zeile4$ = TexSumG$
       WertZeile4$ = LTRIM$ ( STR$ (GesBrutto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile4EU$ = LTRIM$ ( STR$ (GesBruttoEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile5$ = MWSTText$
       Zeile5EU$ = MWSTTextEU$
       WertZeile5$ = ""
       WertZeile5EU$ = ""
     ELSE 
       
       WertZeile1$ = LTRIM$ ( STR$ (PreisBrutto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile1EU$ = LTRIM$ ( STR$ (PreisBruttoEU.abdatei$,",9999999999.00")) + " EUR"
       IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
         Zeile1$ = TexSumG$ + " exclusive discounts"
         Zeile2$ = "less discounts " + STR$ (Rabattproz.abdatei$,"999.000") + "%"
       ELSE 
         Zeile1$ = TexSumG$ + " ohne Rabatt"
         Zeile2$ = "abzÅglich Rabatt von " + STR$ (Rabattproz.abdatei$,"999.000") + "% auf Summe Brutto"
       END IF 
       WertZeile2$ = "-" + LTRIM$ ( STR$ (Rabatt.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile2EU$ = "-" + LTRIM$ ( STR$ (RabattEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile3$ = ""
       WertZeile3$ = ""
       WertZeile3EU$ = ""
       Zeile4$ = TexSumG$
       WertZeile4$ = LTRIM$ ( STR$ (GesBrutto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
       WertZeile4EU$ = LTRIM$ ( STR$ (GesBruttoEU.abdatei$,",9999999999.00")) + " EUR"
       Zeile5$ = MWSTText$
       Zeile5EU$ = MWSTTextEU$
       WertZeile5$ = ""
       WertZeile5EU$ = ""
     END IF 
   ELSE 
     Zeile1$ = ""
     WertZeile1$ = ""
     WertZeile1EU$ = ""
     Zeile2$ = ""
     WertZeile2$ = ""
     WertZeile2EU$ = ""
     Zeile3$ = ""
     WertZeile3$ = ""
     WertZeile3EU$ = ""
     Zeile4$ = TexSumG$
     WertZeile4$ = LTRIM$ ( STR$ (GesBrutto.abdatei$,",9999999999.00")) + " " + (zweitwaehr$)
     WertZeile4EU$ = LTRIM$ ( STR$ (GesBruttoEU.abdatei$,",9999999999.00")) + " EUR"
     Zeile5$ = MWSTText$
     Zeile5EU$ = MWSTTextEU$
     WertZeile5$ = ""
     WertZeile5EU$ = ""
   END IF 
 END IF 
 
 
 IF art.abdatei$ <> 5 AND art.abdatei$ <> 8 THEN 
   kundennr$ = TexKunr$ + ":" + Kundennummer.abdatei$
   IF DEFA$ = "MEGA" THEN 
     IF Kostenstelle.abdatei$ <> 0 THEN kundennr$ = "Kostenstelle: " + STR$ (Kostenstelle.abdatei$,"000000")
     IF KostentrÑger.abdatei$ <> "" THEN kundennr$ = "KostentrÑger: " + KostentrÑger.abdatei$
   END IF 
 ELSE 
   IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
     kundennr$ = "ours " + TexKunr$ + ":" + Kundennummer.abdatei$
   ELSE 
     kundennr$ = "unsere " + TexKunr$ + ": " + Kundennummer.abdatei$
   END IF 
 END IF 
  
 REM ** Anzeige von Alternativpositionen ein/ausschalten ** 
 SELECT CASE MSArt%
 CASE 1
   alt% = 1
 CASE 2
   alt% = 0
 CASE 3
   alt% = 0
 CASE 4
   alt% = 0
 CASE 5
   alt% = 0
 END SELECT 
 
 REM ** Ausgabe nach WinWord 6 **
 
 
 SELECT KEY codems% FILE abdatei$ INDEX CodeMS.abdatei$
 SET ANSICONVERT ON 
 IF UCASE$ ( FORM ) LIKE "Mahnung*" THEN 
   art% = 6
   abdatei$ = "MAHNUNG"
 ELSE 
   art% = art.abdatei$
   abdatei$ = "MASTER"
 END IF 
 
 g$ = CHR$ (34)
 
 wleernachPro% = WLeerNachProlog.stamm
 IF wleernachPro% < 0 OR wleernachPro% > 100 THEN wleernachPro% = 0
 wleernachKu% = WLeerNachKnr.stamm
 IF wleernachKu% < 0 OR wleernachKu% > 100 THEN wleernachKu% = 0
 wleernachAdr% = WLeernachAdr.stamm
 IF wleernachAdr% < 0 OR wleernachAdr% > 100 THEN wleernachAdr% = 1
 wleerVorAdr% = WLeerVorAdr.stamm
 IF wleerVorAdr% < 0 OR wleerVorAdr% > 100 THEN wleerVorAdr% = 1
 wstitel% = WSTitel.stamm
 IF wstitel% < 4 OR wstitel% > 35 THEN wstitel% = 12
 wskund% = WSKundennr.stamm
 IF wskund% < 4 OR wskund% > 35 THEN wskund% = 10
 wsrest% = WSRest.stamm
 IF wsRest% < 4 OR wsRest% > 35 THEN wsRest% = 9
 wspro% = WSProlog.stamm
 IF wspro% < 4 OR wspro% > 35 THEN wspro% = 9
 wsepilog% = WSEpilog.stamm
 IF wsepilog% < 4 OR wsepilog% > 35 THEN wsepilog% = 9
 wssum% = WSSumme.stamm
 IF wssum% < 4 OR wssum% > 35 THEN wssum% = 10
 wstabko% = WSTabellenKopf.stamm
 IF wstabko% < 4 OR wstabko% > 35 THEN wstabko% = 10
 wsadr% = WSAdresse.stamm
 IF wsadr% < 4 OR wsadr% > 35 THEN wsadr% = 10

 REM Setzen der verschiedenen Fondsgrî·en
 wstabko$ = STR$ (wstabko%,"99")
 wsepilog$ = STR$ (wsepilog%,"99")
 wssum$ = STR$ (wssum%,"99")
 wssu$ = STR$ (wssum%,"99")
 wsadr$ = STR$ (wsadr%,"99")
 wst$ = STR$ (wstitel%,"99")
 wstitel$ = wst$
 wsk$ = STR$ (wskund%,"99")
 wskund$ = wsk$
 wspro$ = STR$ (wspro%,"99")
 wsr$ = STR$ (wsrest%,"99")
 wsrest$ = wsr$
 wsbelegno$ = STR$ (wsbelegno.stamm,"99")
 REM CALL Fehler("wsbelegno$",wsbelegno$)
 REM Setzen der verschiedenen SchriftFonds
 SABelegno$ = SABelegno.stamm
 SAAdresse$ = SAAdresse.stamm
 IF SAAdresse$ = "" THEN SAAdresse$ = "Arial"
 SATitel$ = SATitel.stamm
 IF SATitel$ = "" THEN SATitel$ = "Arial"
 SAKunr$ = SAKunr.stamm
 IF SAKunr$ = "" THEN SAKunr$ = "Arial"
 SAProlog$ = SAProlog.stamm
 IF SAProlog$ = "" THEN SAProlog$ = "Arial"
 SAEpilog$ = SAEpilog.stamm
 IF SAEpilog$ = "" THEN SAEpilog$ = "Arial"
 SATabinh$ = SATabinh.stamm
 IF SATabinh$ = "" THEN SATabinh$ = "Arial"
 SATabkopf$ = SATabkopf.stamm
 IF SATabkopf$ = "" THEN SATabkopf$ = "Arial"
 SASummeN$ = SASummeN.stamm
 IF SASummeN$ = "" THEN SASummeN$ = "Arial"
 SASummeB$ = SASummeB.stamm
 IF SASummeB$ = "" THEN SASummeB$ = "Arial"
 REM Setzen der verschiedenen Dokumententexte
 SELECT CASE art%
   CASE 1
     REM Angebot
     TexTitel$ = TexAngeb$
   CASE 2
     REM Rechnung
     TexTitel$ = TexRech$
   CASE 3
     REM Lieferschein
     TexTitel$ = TexLief$
   CASE 4
     REM AuftragsbestÑtigung
     TexTitel$ = TexAuftr$
   CASE 5
     REM Bestellung
     TexTitel$ = TexBestell$
   CASE 6
     REM Mahnung
     TexTitel$ = TexMahn$
   CASE 7
     REM Gutschrift
     TexTitel$ = TexGutschr$
   CASE 8
     REM externe Preisanfrage
     TexTitel$ = TexAnfr$
 END SELECT 

 
 CALL del_all()
 CALL line_down(wleervoradr%)
 REM wordapplication.Visible = - 1
 AdresseBold$ = UCASE$ (ReadConfig$("FACTURA","WAdresseBold"))
 IF AdresseBold$ = "TRUE" THEN 
   at$ = "f1," + wsadr$ + ",l," + SAAdresse$
   CALL set_font(at$)
 ELSE 
   at$ = "f0," + wsadr$ + ",l," + SAAdresse$
   CALL set_font(at$)
 END IF 
 besch$ = Adresstext.abdatei$
 REM CALL Fehler("Initialisierung Wordausgabe neu","28122003")
 REM besch$ = ""
 REM b% = 0
 REM FOR a% = 1 TO LEN (Adresse$) STEP 255
   REM t$ = MID$ (Adresse$,a%,1)
   REM besch$ = besch$ + t$
   REM b% = b% + 1
   REM IF b% = 255 THEN 
     REM IF ansionoff$ LIKE "off" THEN 
       REM CALL write(besch$)
     REM ELSE 
       REM CALL write( FN ansi(besch$))
     REM END IF 
     REM CALL line_down(1)
     REM besch$ = ""
     REM b% = 0
   REM END IF 
 REM NEXT a%
 IF ansionoff$ LIKE "off" THEN 
   CALL write(besch$)
 ELSE 
   CALL write( FN ansi(besch$))
 END IF 
 CALL line_down(wleernachAdr%)
 REM CALL set_font("f0,r")
 SET STATUS "öbertrage Datum"
 REM CALL Fehler("öbertrage Datum","")
 IF art% <> 6 THEN 
   REM at$ = "f1,k1,r," + wst$ + "," + SATitel$
   IF Grechtslinks$ LIKE "L" THEN 
     CALL set_font("f0,l")
     at$ = "f1,k1,l," + wst$ + "," + SATitel$
   ELSE 
     CALL set_font("f0,r")
     at$ = "f1,k1,r," + wst$ + "," + SATitel$
   END IF 
   
   CALL set_font(at$)

   IF ansionoff$ LIKE "off" THEN 
     CALL write(TexTitel$)
   ELSE 
     CALL write( FN ansi(TexTitel$))
   END IF 
   CALL line_down(1)
   CALL set_font(at$)
   CALL set_font("f0,k0," + wsbelegno$)
   CALL write(TexBelegdat$ + " " + DATE$ (datum.abdatei$,"0d.mm.yyyy"))
   CALL line_down(1)
 ELSE 
   IF PAGE = 1 THEN 

     CALL write( DATE$ (Mahndatum1.abdatei$,"0d.mm.yyyy"))
     CALL line_down(1)
     at$ = "f1,k0,l," + wst$ + "," + SATitel$
     CALL set_font(at$)
     IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
       CALL write( FN ansi("1. " + TexTitel$ + " for "))
     ELSE 
       CALL write( FN ansi("1. " + TexTitel$ + " zur "))
     END IF 
     REM CALL line_down(1)
   END IF 
   IF PAGE = 2 THEN 
     CALL write( DATE$ (Mahndatum2.abdatei$,"0d.mm.yyyy"))
     CALL line_down(1)
     at$ = "f1,k0,l," + wst$ + "," + SATitel$
     CALL set_font(at$)
     IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
       CALL write( FN ansi("2. " + TexTitel$ + " for "))
     ELSE 
       CALL write( FN ansi("2. " + TexTitel$ + " zur "))
     END IF 
     REM CALL line_down(1)
   END IF 
   IF PAGE = 3 THEN 
     CALL write( DATE$ (Mahndatum3.abdatei$,"0d.mm.yyyy"))
     CALL line_down(1)
     at$ = "f1,k0,l," + wst$ + "," + SATitel$
     CALL set_font(at$)
     IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
       CALL write( FN ansi("3. " + TexTitel$ + " for "))
     ELSE 
       CALL write( FN ansi("3. " + TexTitel$ + " zur "))
     END IF 
     REM CALL line_down(1)
   END IF 
   IF PAGE = 4 THEN 
     CALL write( DATE$ (Mahndatum4.abdatei$,"0d.mm.yyyy"))
     CALL line_down(1)
     at$ = "f1,k0,l," + wst$ + "," + SATitel$
     CALL set_font(at$)
     druckArt$ = druckArt.abdatei$
     IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
       CALL write( FN ansi("4. " + TexTitel$ + " for "))
     ELSE 
       CALL write( FN ansi("4. " + TexTitel$ + " zur "))
     END IF 
     REM CALL line_down(1)
   END IF 
   IF PAGE = 5 THEN 
     CALL write( DATE$ (Mahndatum5.abdatei$,"0d.mm.yyyy"))
     CALL line_down(1)
     at$ = "f1,k0,l," + wst$ + "," + SATitel$
     CALL set_font(at$)
     IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
       CALL write( FN ansi("5. " + TexTitel$ + " for "))
     ELSE 
       CALL write( FN ansi("5. " + TexTitel$ + " zur "))
     END IF 
     REM CALL line_down(1)
   END IF 
 END IF 
 IF art% <> 6 THEN 
   SET STATUS "öbertrage Belegnummer"
   REM at$ = "f0,k0,r," + wsbelegno$ + "," + SAbelegno$
   IF Grechtslinks$ LIKE "L" THEN 
     at$ = "f0,k0,l," + wsbelegno$ + "," + SAbelegno$
   ELSE 
     at$ = "f0,k0,r," + wsbelegno$ + "," + SAbelegno$
   END IF 
   CALL set_font(at$)
   CALL write( FN ansi(TexBeleg$ + ": " + Nummer.abdatei$))
   CALL line_down(1)
   IF Lieferdatum.abdatei$ > 0 THEN 
     CALL write(TexLieferdat$ + " " + DATE$ (Lieferdatum.abdatei$,"0d.mm.yyyy"))
     CALL line_down(1)
   END IF 
 ELSE 
   IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
     nrab$ = Nummer.abdatei$ + " from " + DATE$ (datum.abdatei$,"0d.mm.yyyy")
   ELSE 
     nrab$ = Nummer.abdatei$ + " vom " + DATE$ (datum.abdatei$,"0d.mm.yyyy")
   END IF 
   at$ = "f0,k0,r," + wsbelegno$ + "," + sabelegno$
   REM CALL set_font(at$)
   CALL write( FN ansi(TexRech$ + ": " + nrab$))
   CALL line_down(1)
   REM CALL Fehler("nach Mahnkopf","")
 END IF 
 REM CALL Fehler("15062004-Rechnung","art%=2")

 REM at$ = "f0,k0,r," + wsk$ + "," + SAKunr$
   IF Grechtslinks$ LIKE "L" THEN 
     at$ = "f0,k0,l," + wsk$ + "," + SAKunr$
   ELSE 
     at$ = "f0,k0,r," + wsk$ + "," + SAKunr$
   END IF 
 SET STATUS "öbertrage Kundennummer"
 REM CALL Fehler("Druck Kundennummer","")

 Ustno$ = ""
 REM CALL Fehler("","")
 IF UstNo.master <> "" OR UstNo.adressen <> "" THEN 
   REM Ustno$ = CHR$ (13) + CHR$ (10)
   IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
     Ustno$ = "VAT-ID: "
   ELSE 
     Ustno$ = "USt-ID: "
   END IF 
   IF UstNo.master <> "" THEN 
     Ustno$ = Ustno$ + UstNo.master
   REM ELSE 
     REM Ustno$ = Ustno$ + UstNo.adressen
   END IF 
 END IF 

 IF abdatei$ LIKE "MAHNUNG" THEN 
   SELECT FIRST FILE "master" INDEX codems.master
   SELECT KEY codems.mahnung FILE "master" INDEX codems.master
   CALL set_font(at$)
   CALL write( FN ansi(TexKunr$ + ": " + Kundennummer.master))
   CALL line_down(1)
   IF ustno$ <> "" AND Gustdruck$ = "j" THEN 
     CALL write( FN ansi(Ustno$))
     CALL line_down(1)
   END IF 
 ELSE 
   CALL set_font(at$)
   CALL write( FN ansi(TexKunr$ + ": " + Kundennummer.abdatei$))
   CALL line_down(1)
   IF ustno$ <> "" AND Gustdruck$ = "j" THEN 
     CALL write( FN ansi(Ustno$))
     CALL line_down(1)
   END IF 
 END IF 




 IF art% = 6 THEN 
       IF PAGE = 1 THEN 
         CALL write( FN ansi(TexBeleg$ + ": " + BelegM1.abdatei$))
         CALL line_down(1)
       END IF 
       IF PAGE = 2 THEN 
         CALL write( FN ansi(TexBeleg$ + ": " + BelegM2.abdatei$))
         CALL line_down(1)
       END IF 
       IF PAGE = 3 THEN 
         CALL write( FN ansi(TexBeleg$ + ": " + BelegM3.abdatei$))
         CALL line_down(1)
       END IF 
       IF PAGE = 4 THEN 
         CALL write( FN ansi(TexBeleg$ + ": " + BelegM4.abdatei$))
         CALL line_down(1)
       END IF 
       IF PAGE = 5 THEN 
         CALL write( FN ansi(TexBeleg$ + ": " + BelegM5.abdatei$))
         CALL line_down(1)
       END IF 
       IF Lieferdatum.mahnung > 0 THEN 
         CALL write( FN ansi(TexLieferdat$ + ": ") + DATE$ (Lieferdatum.mahnung,"0d.mm.yyyy"))
         CALL line_down(1)
       ELSE 
         REM CALL write( FN ansi(TexLieferdat$ + ": "))
         REM CALL line_down(1)
       END IF 
 END IF 
 IF abdatei$ LIKE "master" THEN 
   IF (art% = 2 OR art% = 4 OR art% = 3) AND auftragsnr.abdatei$ <> "" THEN 
     aufttxt$ = auftragsnr.abdatei$
     IF auftragsdat.abdatei$ > 0 THEN 
       aufttxt$ = aufttxt$ + "/" + DATE$ (auftragsdat.abdatei$,"0d.mm.yyyy")
     END IF 
     CALL write( FN ansi(TexAGNr$ + ": " + aufttxt$))
     CALL line_down(1)
   ELSE 
     IF (art% = 2 OR art% = 4 OR art% = 3) AND auftragsdat.abdatei$ > 0 THEN 
       aufttxt$ = DATE$ (auftragsdat.abdatei$,"0d.mm.yyyy")
       CALL write( FN ansi(TexAGNr$ + ": " + aufttxt$))
       CALL line_down(1)
     END IF 
   END IF 
 END IF 



 CALL line_down(wleernachKu%)
 at$ = "f0,k0,l," + wspro$ + "," + SAProlog$
 CALL set_font(at$)
 
 besch$ = ""
 b% = 0
 IF art.abdatei$ = 7 AND oldRENr.abdatei$ <> "" AND art% <> 6 THEN 
   globalgutschr$ = oldRENr.abdatei$
   IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
     prolog$ = TexTitel$ + " from: " + oldRENr.abdatei$
   ELSE 
     prolog$ = TexTitel$ + " von: " + oldRENr.abdatei$
   END IF 
 END IF 
 IF ProjectJN$ = "TRUE" THEN 
   SET STATUS "Erstelle Prolog"
   IF codepr.abdatei$ > 0 THEN 
     IF art% <> 6 THEN 
       IF prolog$ = "" THEN 
         IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
           prolog$ = "subject project: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog.abdatei$
         ELSE 
           prolog$ = "Projekt: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog.abdatei$
         END IF 
       ELSE 
         prolog$ = prolog$ + " / " + "Projekt: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog.abdatei$
       END IF 
     ELSE 
       IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
         IF PAGE = 1 THEN prolog$ = "subject project: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog1.abdatei$
         IF PAGE = 2 THEN prolog$ = "subject project: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog2.abdatei$
         IF PAGE = 3 THEN prolog$ = "subject project: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog3.abdatei$
         IF PAGE = 4 THEN prolog$ = "subject project: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog4.abdatei$
         IF PAGE = 5 THEN prolog$ = "subject project: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog5.abdatei$
       ELSE 
         IF PAGE = 1 THEN prolog$ = "Projekt: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog1.abdatei$
         IF PAGE = 2 THEN prolog$ = "Projekt: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog2.abdatei$
         IF PAGE = 3 THEN prolog$ = "Projekt: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog3.abdatei$
         IF PAGE = 4 THEN prolog$ = "Projekt: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog4.abdatei$
         IF PAGE = 5 THEN prolog$ = "Projekt: " + projekt.abdatei$ + CHR$ (13) + CHR$ (13) + Prolog5.abdatei$
       END IF 
     END IF 
   ELSE 
     IF art% <> 6 THEN 
       IF prolog$ = "" THEN 
         prolog$ = Prolog.abdatei$
       ELSE 
         IF prolog.abdatei$ <> "" THEN 
           prolog$ = prolog$ + " / " + Prolog.abdatei$
         END IF 
       END IF 
     ELSE 
       IF PAGE = 1 THEN prolog$ = Prolog1.abdatei$
       IF PAGE = 2 THEN prolog$ = Prolog2.abdatei$
       IF PAGE = 3 THEN prolog$ = Prolog3.abdatei$
       IF PAGE = 4 THEN prolog$ = Prolog4.abdatei$
       IF PAGE = 5 THEN prolog$ = Prolog5.abdatei$
     END IF 
   END IF 
 ELSE 
   IF art% <> 6 THEN 
     prolog$ = Prolog.abdatei$
   ELSE 
     IF PAGE = 1 THEN prolog$ = Prolog1.abdatei$
     IF PAGE = 2 THEN prolog$ = Prolog2.abdatei$
     IF PAGE = 3 THEN prolog$ = Prolog3.abdatei$
     IF PAGE = 4 THEN prolog$ = Prolog4.abdatei$
     IF PAGE = 5 THEN prolog$ = Prolog5.abdatei$
   END IF 
 END IF 
 SET STATUS "öbertrage Prolog"
 REM CALL Fehler("öbertrage Prolog","")
 besch$ = prolog$
 IF ansionoff$ LIKE "off" THEN 
   CALL write(besch$)
 ELSE 
   CALL write( FN ansi(besch$))
 END IF 
 CALL line_down(1)
 CALL line_down(wleernachpro%)
 REM CALL Fehler("nach Mahnprolog","")
 
 IF art% = 6 THEN GOTO DruMahn020701
  REM CALL Fehler("Erzeuge Tabelle","")
  SET STATUS "Erzeuge Tabelle"
  CALL new_table(2,6,0,"borderstyle0")
  ak$ = "f1,k0,r," + wstabko$ + "," + SATAbkopf$
  ak1$ = "f1,k0,l," + wstabko$ + "," + SATAbkopf$
  CALL set_font(ak1$)
  CALL write(TexPos$)
  CALL move(1,"right",0)
  CALL set_font(ak1$)
  CALL write(TexAnzahl$)
  CALL move(1,"right",0)
  CALL set_font(ak1$)
  CALL write(TexMe$)
  CALL move(1,"right",0)
  CALL set_font(ak1$)
  CALL write(TexArtik$)
  CALL move(1,"right",0)
  CALL set_font(ak$)
  CALL write(TexEinzpr$)
  CALL move(1,"right",0)
  CALL set_font(ak$)
  CALL write(TexGespr$)
 
  CALL set_row(1,1,"borderstyleout1")
  CALL set_col(1,1,"width25")
  CALL set_col(1,2,"width40")
  CALL set_col(1,3,"width52")
  CALL set_col(1,4,"width230")
  CALL set_col(1,5,"width70")
  CALL set_col(1,6,"width70")
  REM set_tablehead(1,1)
  REM set_cell(tabelle%,zeile%,spalte%,eigenschaft$)
  CALL set_cell(1,2,1,"")
  at$ = "f1," + wsrest$ + "," + SATabInh$
  CALL set_font(at$)
  REM CALL Fehler("010820031","")
 FILE "SCHEIN"
 REM INDEX CodeMS.SCHEIN
 INDEX QuickCodePos.SCHEIN
 SELECT FIRST 
 quickmspos% = codems% * 1000 + 1
 REM SELECT KEY codems% FILE "SCHEIN" INDEX CodeMS.SCHEIN
 SELECT KEY quickmspos% FILE "SCHEIN" INDEX QuickCodepos.SCHEIN
 zeile% = 2
 WHILE CodeMS.SCHEIN = codems% AND NOT EOF ("SCHEIN")
   IF textvorPosition.schein <> "" THEN 
     SET STATUS "öbertrage Text vor Position"
     REM CALL Fehler ("Text vor Position","")
     REM set_cell(tabelle%,zeile%,spalte%,eigenschaft$)
     CALL new_row(1,zeile%,"")
     CALL set_row(1,zeile%,"borderstyleout1")
     CALL set_row(1,zeile% + 1,"borderstyleout1")
     CALL set_cell(1,zeile%,1,"")
     at$ = "f1," + wsrest$ + "," + SATabinh$
     CALL set_font(at$)
     
     CALL merge_cells(1,zeile%,1,zeile%,6)
     besch$ = TextvorPosition.SCHEIN
     b% = 0
     IF ansionoff$ LIKE "off" THEN 
       CALL write(besch$)
     ELSE 
       CALL write( FN ansi(besch$))
     END IF 
     zeile% = zeile% + 1
     CALL set_cell(1,zeile%,1,"")
     REM CALL new_row(1,zeile%,"")
   END IF 
   CALL new_row(1,zeile%,"")
   CALL set_row(1,zeile%,"borderstyleout1")
   CALL set_row(1,zeile% + 1,"borderstyleout1")
   REM CALL Fehler("Ende Text vor Position","")
   REM set_cell(tabelle%,zeile%,spalte%,eigenschaft$)
   CALL set_cell(1,zeile%,1,"")
   at$ = "f1,k0,r," + wsrest$ + "," + SATabInh$
   CALL set_font(at$)
   REM CALL set_font("f1")
   SET STATUS "öbertrage Positionsnummer"
   CALL write( LTRIM$ ( STR$ (PosNr.SCHEIN,"9999")))
   CALL set_cell(1,zeile%,2,"")
   at$ = "f1,k0,r," + wsrest$
   CALL set_font(at$)
   REM CALL set_font("f1")
   SET STATUS "öbertrage Anzahl"
   CALL write( LTRIM$ ( STR$ (Anzahl.SCHEIN,"999999.99")))
   SET STATUS "öbertrage Mengeneinheit"
   CALL set_cell(1,zeile%,3,"")
   at$ = "f1,k0,l," + wsrest$ + "," + SATabInh$
   CALL set_font(at$)
   REM CALL set_font("f1,l")
   IF ansionoff$ LIKE "off" THEN 
     CALL write(ME_.SCHEIN)
   ELSE 
     CALL write( FN ansi(ME_.SCHEIN))
   END IF 
   REM 15062004  IF mwstcount% <>  1 THEN 
   IF mwstcount% <> - 1 AND art% <> 3 AND art% <> 8 THEN 
     SET STATUS "öbertrage Positions MWST"
     CALL line_down(1)
     at$ = "f0,k0,r," + wsrest$ + "," + SATabInh$
     CALL set_font(at$)
     REM CALL set_font("f0")
     CALL write( LTRIM$ ( STR$ (MwSt.SCHEIN,"99.00")) + "%")
   END IF 
   REM Alternativpositionen
   IF art.schein = 1 THEN 
     CALL line_down(1)
     CALL write("alternativ")
   END IF 
   CALL set_cell(1,zeile%,4,"")
   at$ = "f1,k0,l," + wsrest$ + "," + SATabInh$
   CALL set_font(at$)
   REM CALL set_font("f1,l")
   besch$ = ""
   b% = 0
   IF artikelnummer.schein <> "" THEN 
     REM bezeichnung$ = Artikelnummer.schein + CHR$ (13) + bezeichnung.schein
     bezeichnung$ = Artikelnummer.schein + " " + bezeichnung.schein
   ELSE 
     bezeichnung$ = bezeichnung.schein
   END IF 
   IF Serienr.schein <> "" AND serienr.schein <> "<ohne Zuordnung>" THEN bezeichnung$ = bezeichnung$ + CHR$ (13) + "Serienr.:" + serienr.schein
   SET STATUS "öbertrage Artikelbezeichnung"
   besch$ = Bezeichnung$
   IF ansionoff$ LIKE "off" THEN 
     CALL write(besch$)
   ELSE 
     CALL write( FN ansi(besch$))
   END IF 
   CALL set_font("enter,f0")
   REM ? FN ansi(besch$);
   IF beschreibung.schein <> "" THEN 
     SET STATUS "öbertrage Artikelbeschreibung"
       besch$ = ""
     b% = 0
     besch$ = Beschreibung.SCHEIN
     IF ansionoff$ LIKE "off" THEN 
       CALL write(besch$)
     ELSE 
       CALL write( FN ansi(besch$))
     END IF 
   ELSE 
     IF ansionoff$ LIKE "off" THEN 
       CALL write(besch$)
     ELSE 
       CALL write( FN ansi(besch$))
     END IF 
   END IF 
   REM CALL Fehler("010820032","")
   CALL set_cell(1,zeile%,5,"")
   at$ = "f1,k0,r," + wsrest$ + "," + SATabInh$
   CALL set_font(at$)
   REM CALL set_font("f1,r")
   REM CALL Fehler("Nach Artikeltext","")
   REM CALL Fehler ("Test Word","")
   IF KalkArt.abdatei$ = 0 THEN 
     IF Rabatt.schein > 0 THEN 
       IF art% <> 3 AND art% <> 8 THEN 
         SET STATUS "öbertrage Netto/Bruttopreise"
         REM kein Lieferschein
         IF bezugsmenge.schein = 1 THEN 
           vknetto$ = STR$ (VKNetto.schein,"9999999999.00")
           vknettoEU$ = STR$ (VKNettoEU.schein,"9999999999.00")
         ELSE 
           vknetto$ = ExtDM$(VKNetto.schein / Bezugsmenge.schein)
           vknettoEU$ = ExtDM$(VKNettoEU.schein / Bezugsmenge.schein)
         END IF 
         IF opt% = 2 THEN CALL write(VKnetto$)
         IF opt% = 4 THEN CALL write(VKnettoEU$)
         IF RabattProz.schein <> 0 THEN 
           CALL set_font("enter,f0")
           rab$ = TexRabatt$ + ": " + TRIM$ ( STR$ (RabattProz.schein,"999.000")) + "%"
           CALL write(rab$)
         END IF 
         CALL set_cell(1,zeile%,6,"")
         at$ = "f1,k0,r," + wsrest$ + "," + SATabInh$
         CALL set_font(at$)
         REM CALL set_font("f1,r")
         n1% = VKnetto.schein
         n2% = GesamtNetto.SCHEIN
         REM 15062004   IF opt% = 2 THEN CALL write( STR$ (GesamtNetto.SCHEIN,",99999999.00"))
         REM 15062004   IF opt% = 4 THEN CALL write( STR$ (GesNettoEU.SCHEIN,",99999999.00"))

         IF opt% = 2 THEN CALL write( LTRIM$ ( STR$ (Anzahl.SCHEIN * VKNetto.SCHEIN,",99999999.00")))
         IF opt% = 4 THEN CALL write( LTRIM$ ( STR$ (Anzahl.SCHEIN * VKNettoEU.SCHEIN,",99999999.00")))
         CALL set_font("enter,f0")
         IF opt% = 2 THEN CALL write("-" + LTRIM$ ( STR$ (Anzahl.SCHEIN * Rabatt.SCHEIN,",9999999999.00")))
         IF opt% = 4 THEN CALL write("-" + LTRIM$ ( STR$ (Anzahl.SCHEIN * RabattEU.SCHEIN,",9999999999.00")))
       ELSE 
         REM Lieferschein
         IF RabattProz.schein <> 0 THEN 
           REM CALL set_font("enter,f0")
           rab$ = TexRabatt$ + ": " + TRIM$ ( STR$ (RabattProz.schein,"999.000")) + "%"
           REM CALL write(rab$)
         END IF 
       END IF 
     ELSE 
       IF Bezugsmenge.schein = 1 THEN 
         vknetto$ = STR$ (VKNetto.schein,"9999999999.00")
         vknettoEU$ = STR$ (VKNettoEU.schein,"9999999999.00")
       ELSE 
         vknetto$ = ExtDM$(VKNetto.schein / Bezugsmenge.schein)
         vknettoEU$ = ExtDM$(VKNettoEU.schein / Bezugsmenge.schein)
       END IF 
       IF art% <> 3 AND art% <> 8 THEN 
         IF opt% = 2 THEN CALL write(VKnetto$)
         IF opt% = 4 THEN CALL write(VKnettoEU$)
         CALL set_cell(1,zeile%,6,"")
         at$ = "f1,k0,r," + wsrest$ + "," + SATabInh$
         CALL set_font(at$)
         REM ? FN ansi(wsrest$)
         IF opt% = 2 THEN CALL write( STR$ (GesamtNetto.SCHEIN,",99999999.00"))
         IF opt% = 4 THEN CALL write( STR$ (GesNettoEU.SCHEIN,",99999999.00"))
       ELSE 
       END IF 
     END IF 
   ELSE 
     IF Bezugsmenge.schein = 1 THEN 
       vkbrutto$ = STR$ (VKBrutto.schein,"9999999999.00")
       vkbruttoEU$ = STR$ (VKBruttoEU.schein,"9999999999.00")
     ELSE 
       vkbrutto$ = ExtDM$(VKBrutto.schein / Bezugsmenge.schein)
       vkbruttoEU$ = ExtDM$(VKBruttoEU.schein / Bezugsmenge.schein)
     END IF 
     IF rabatt.schein > 0 THEN 
       IF art% <> 3 AND art% <> 8 THEN 
         CALL set_cell(1,zeile%,5,"")
         CALL set_font("f1,r," + wsrest$ + "," + SATabInh$)
 
         IF opt% = 2 THEN CALL write(VKbrutto$)
         IF opt% = 4 THEN CALL write(VKbruttoEU$)
         
         REM ? FN ansi(wsrest$)
         REM ? FN ansi("EinfÅgen  CHR$(13) + " + g$ + "Rabatt:" + g$ + ":NÑchsteZelle")
         IF rabatt.schein <> 0 THEN 
           CALL set_font("enter,f0," + wsrest$ + "," + SATabInh$)
           rab$ = TexRabatt$ + ": " + TRIM$ ( STR$ (RabattProz.schein,"999.000")) + "%"
           CALL write(rab$)
         END IF 
         CALL set_cell(1,zeile%,6,"")
         CALL set_font("f1,r," + wsrest$ + "," + SATabInh$)
         IF opt% = 2 THEN CALL write( LTRIM$ ( STR$ (Anzahl.SCHEIN * VKBrutto.SCHEIN,",99999999.00")))
         IF opt% = 4 THEN CALL write( LTRIM$ ( STR$ (Anzahl.SCHEIN * VKBruttoEU.SCHEIN,",99999999.00")))
         CALL set_font("enter,f0," + wsrest$ + "," + SATabInh$)
         IF opt% = 2 THEN CALL write("-" + LTRIM$ ( STR$ (Anzahl.SCHEIN * Rabatt.SCHEIN,",9999999999.00")))
         IF opt% = 4 THEN CALL write("-" + LTRIM$ ( STR$ (Anzahl.SCHEIN * RabattEU.SCHEIN,",9999999999.00")))
       ELSE 
         CALL set_cell(1,zeile%,5,"")
         REM CALL set_font("f1,r," + wsrest$ + "," + SATabInh$)
         rab$ = TexRabatt$ + ": " + TRIM$ ( STR$ (RabattProz.schein,"999.000")) + "%"
         REM CALL write(rab$)
       END IF 
     ELSE 
       IF art% <> 3 AND art% <> 8 THEN 
         CALL set_cell(1,zeile%,5,"")
         CALL set_font("f1,r," + wsrest$ + "," + SATabInh$)
         IF opt% = 2 THEN CALL write(VKbrutto$)
         IF opt% = 4 THEN CALL write(VKbruttoEU$)
         CALL set_cell(1,zeile%,6,"")
         CALL set_font("f1,r," + wsrest$ + "," + SATabInh$)
         IF opt% = 2 THEN CALL write( STR$ (GesamtBrutto.SCHEIN,",99999999.00"))
         IF opt% = 4 THEN CALL write( STR$ (GesBruttoEU.SCHEIN,",99999999.00"))
       ELSE 
       END IF 
     END IF 
   END IF 
   REM SELECT NEXT FILE "SCHEIN" INDEX CodeMS.SCHEIN
   SELECT NEXT FILE "SCHEIN" INDEX QuickCodePos.SCHEIN
   IF CodeMS.SCHEIN = codems% AND NOT EOF ("SCHEIN") THEN 
     REM CALL new_row(1,zeile%,"")
     zeile% = zeile% + 1
   END IF 
 
 WEND 
 REM CALL Fehler ("Bis jetzt ENDE","")
 REM wordapplication.Visible = - 1
 IF art% <> 3 AND art% <> 8 THEN 
   zeile% = zeile% + 1
   CALL set_cell(1,zeile%,1,"")
   CALL new_row(1,zeile%,"")
   CALL set_row(1,zeile% + 1,"borderstyleout0")
   CALL set_cell(1,zeile%,1,"")
   CALL set_font("f1")
 ELSE 
   CALL behind_table(1)
   CALL line_down(2)
 END IF 
DruMahn020701: 
 IF art% <> 3 AND art% <> 8 THEN 
 REM CALL Fehler("Nettofakturierung","")
 REM wenn kein Lieferschein 
 IF KalkArt.abdatei$ = 0 THEN 
 REM Nettofakturierung
   IF rabatt.abdatei$ <> 0 AND art% <> 6 THEN 
     IF rabattart.abdatei$ = 0 THEN 
       CALL set_cell(1,zeile%,1,"")
       CALL set_font("l")
       CALL set_font("f1,k0," + wssu$ + "," + SASummeN$)
       REM Rabatt auf Netto
       REM Summe Netto:
       IF ansionoff$ LIKE "off" THEN 
         CALL write(Zeile1$)
       ELSE 
         CALL write( FN ansi(Zeile1$))
       END IF 
       
       CALL set_cell(1,zeile%,6,"")
       CALL set_font("f1,k0,r," + wssu$ + "," + SASummeN$)
 
       IF opt% = 2 THEN 
         IF ansionoff$ LIKE "off" THEN 
           CALL write(WertZeile1$)
         ELSE 
           CALL write( FN ansi(WertZeile1$))
         END IF 
       END IF 
       IF opt% = 4 THEN 
         IF ansionoff$ LIKE "off" THEN 
           CALL write(WertZeile1EU$)
         ELSE 
           CALL write( FN ansi(WertZeile1EU$))
         END IF 
       END IF 
       CALL set_cell(1,zeile% + 1,1,"")
       CALL new_row(1,zeile% + 1,"")
       REM CALL Fehler("Borderstyle","")
       CALL set_row(1,zeile% + 2,"borderstyleout1")
       CALL merge_cells(1,zeile%,5,zeile%,6)
       CALL merge_cells(1,zeile%,1,zeile%,4)
       CALL set_font("f1,k0,l")
       REM CALL merge_cells(1,zeile%,5,zeile%,6)
       zeile% = zeile% + 1
       CALL set_cell(1,zeile%,1,"")
       IF LTRIM$ (Zeile2$) <> "" THEN 
         CALL set_row(1,zeile%,"borderstyleout1")
       END IF 
       CALL set_font("f0,l")
       REM abzÅglich Rabatt von x %
       IF ansionoff$ LIKE "off" THEN 
         CALL write(Zeile2$)
       ELSE 
         CALL write( FN ansi(Zeile2$))
       END IF 
       CALL set_cell(1,zeile%,6,"")
       CALL set_font("f1,k0,r")
       IF opt% = 2 THEN CALL write(WertZeile2$)
       IF opt% = 4 THEN CALL write(WertZeile2EU$)

       CALL set_cell(1,zeile% + 1,1,"")
       CALL new_row(1,zeile% + 1,"")
       CALL set_row(1,zeile% + 2,"borderstyleout1")
       CALL merge_cells(1,zeile%,5,zeile%,6)
       CALL merge_cells(1,zeile%,1,zeile%,4)
       CALL set_font("f1,k0,l")
       REM CALL merge_cells(1,zeile%,5,zeile%,6)
       zeile% = zeile% + 1
       CALL set_cell(1,zeile%,1,"")
       CALL set_font("f1,k0,l," + wssu$ + + "," + SASummeN$)

       REM Summe Netto abzÅglich Rabatt
       IF ansionoff$ LIKE "off" THEN 
         CALL write(Zeile3$)
       ELSE 
         CALL write( FN ansi(Zeile3$))
       END IF 
       CALL set_cell(1,zeile%,6,"")
       CALL set_font("f1,k0,r," + wssu$ + "," + SASummeN$)
       IF opt% = 2 THEN CALL write(WertZeile3$)
       IF opt% = 4 THEN CALL write(WertZeile3EU$)
       REM Mehrwertsteuer

       CALL set_cell(1,zeile% + 1,1,"")
       CALL new_row(1,zeile% + 1,"")
       CALL set_row(1,zeile% + 2,"borderstyleout1")
       CALL merge_cells(1,zeile%,5,zeile%,6)
       CALL merge_cells(1,zeile%,1,zeile%,4)
       CALL set_font("f1,k0,l")
       REM CALL merge_cells(1,zeile%,5,zeile%,6)
       zeile% = zeile% + 1
       CALL set_cell(1,zeile%,1,"")
       CALL set_font("f1,k0,l," + wssu$ + "," + SASummeN$)

       FOR a% = 0 TO MwStCount% - 1
         IF opt% = 2 THEN 
           IF ansionoff$ LIKE "off" THEN 
             CALL write(MwStText2$(a%))
           ELSE 
             CALL write( FN ansi(MwStText2$(a%)))
           END IF 
         END IF 
         IF opt% = 4 THEN 
           IF ansionoff$ LIKE "off" THEN 
             CALL write(MwStText2EU$(a%))
           ELSE 
             CALL write( FN ansi(MwStText2EU$(a%)))
           END IF 
         END IF 
         CALL set_cell(1,zeile%,6,"")
         CALL set_font("f1,k0,r," + wssu$ + "," + SASummeN$)
         IF opt% = 2 THEN CALL write(MwStBetrag2$(a%))
         IF opt% = 4 THEN CALL write(MwStBetrag2EU$(a%))
         CALL set_cell(1,zeile% + 1,1,"")
         CALL new_row(1,zeile% + 1,"")
         CALL set_row(1,zeile% + 2,"borderstyleout1")
         CALL merge_cells(1,zeile%,5,zeile%,6)
         CALL merge_cells(1,zeile%,1,zeile%,4)
         CALL set_font("f1,k0,l," + wssu$ + "," + SASummeN$)
         REM CALL merge_cells(1,zeile%,5,zeile%,6)
         zeile% = zeile% + 1
         CALL set_cell(1,zeile%,1,"")
         CALL set_font("f1,k0,l," + wssu$ + "," + SASummeN$)
       NEXT a%
       REM Gesamtsumme 
       CALL set_font("f1,k0,l," + wssu$ + "," + SASummeB$)
       IF ansionoff$ LIKE "off" THEN 
         CALL write(Zeile5$)
       ELSE 
         CALL write( FN ansi(Zeile5$))
       END IF 
       CALL set_cell(1,zeile%,6,"")
       CALL set_font("f1,k0,r," + wssu$ + "," + SASummeB$)
       IF opt% = 2 THEN CALL write(WertZeile5$)
       IF opt% = 4 THEN CALL write(WertZeile5EU$)

       CALL set_cell(1,zeile% + 1,1,"")
       CALL new_row(1,zeile% + 1,"")
       CALL set_row(1,zeile% + 2,"borderstyleout1")
       CALL merge_cells(1,zeile%,5,zeile%,6)
       CALL merge_cells(1,zeile%,1,zeile%,4)
       CALL set_font("f1,k0,l," + wssu$ + "," + SASummeB$)
       REM CALL merge_cells(1,zeile%,5,zeile%,6)
       zeile% = zeile% + 1
       CALL set_cell(1,zeile%,1,"")
       CALL set_font("f1,k0,l," + wssu$)
       CALL set_row(1,zeile% + 0,"borderstyleout0")
       CALL set_row(1,zeile% + 1,"borderstyleout0")
       CALL set_row(1,zeile% - 1,"borderstyleout7")
     ELSE 
       REM Rabatt auf Brutto
       REM Summe Netto:
       
       CALL set_cell(1,zeile%,1,"")
       CALL set_font("f1,k0,l," + wssu$)
       REM ? FN ansi(wssum$)
       IF ansionoff$ LIKE "off" THEN 
         CALL write(Zeile1$)
       ELSE 
         CALL write( FN ansi(Zeile1$))
       END IF 
       IF opt% = 2 THEN 
         CALL set_cell(1,zeile%,6,"")
         CALL set_font("f1,k0,r," + wssu$ + "," + SASummeN$)
         IF ansionoff$ LIKE "off" THEN 
           CALL write(WertZeile1$)
         ELSE 
           CALL write( FN ansi(WertZeile1$))
         END IF 
       END IF 
       IF opt% = 4 THEN 
         CALL set_cell(1,zeile%,6,"")
         CALL set_font("f1,k0,r," + wssu$ + "," + SASummeN$)
         IF ansionoff$ LIKE "off" THEN 
           CALL write(WertZeile1EU$)
         ELSE 
           CALL write( FN ansi(WertZeile1EU$))
         END IF 
       END IF 
       CALL merge_cells(1,zeile%,5,zeile%,6)
       CALL merge_cells(1,zeile%,1,zeile%,4)
       CALL set_font("f1,k0,l," + wssu$)
       CALL set_cell(1,zeile% + 1,1,"")
       CALL new_row(1,zeile% + 1,"")
       CALL set_row(1,zeile% + 2,"borderstyleout0")
       zeile% = zeile% + 1
       CALL set_cell(1,zeile%,1,"")
       CALL set_font("f1,k0,l," + wssu$ + "," + SASummeN$)
       REM Mehrwertsteuer
       REM ? FN ansi(wssum$)
       FOR a% = 0 TO MwStCount% - 1
           IF opt% = 2 THEN CALL write(MwStText2$(a%))
           IF opt% = 4 THEN CALL write(MwStText2EU$(a%))
           CALL set_cell(1,zeile%,6,"")
           CALL set_font("f0,k1,r," + wssu$ + "," + SASummeN$)
           IF opt% = 2 THEN CALL write(MwStBetrag2$(a%))
           IF opt% = 4 THEN CALL write(MwStBetrag2EU$(a%))
           CALL merge_cells(1,zeile%,1,zeile%,4)
           CALL set_font("f0,k1,l," + wssu$ + "," + SASummeN$)
           CALL set_cell(1,zeile% + 1,1,"")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout0")
           REM CALL merge_cells(1,zeile%,1,zeile%,4)
           REM CALL merge_cells(1,zeile%,5,zeile%,6)
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f1,k0,l," + wssu$ + "," + SASummeN$)
       NEXT a%
       REM Summe Brutto

         CALL write(Zeile3$)
         CALL set_cell(1,zeile%,6,"")
         CALL set_font("f1,k0,r," + wssu$ + "," + SASummeB$)
         IF opt% = 2 THEN CALL write( LTRIM$ (WertZeile3$))
         IF opt% = 4 THEN CALL write( LTRIM$ (WertZeile3EU$))
         CALL merge_cells(1,zeile%,5,zeile%,6)
         CALL merge_cells(1,zeile%,1,zeile%,4)
         CALL set_font("f1,k0,l," + wssu$ + "," + SASummeB$)
         CALL set_cell(1,zeile% + 1,1,"")
         CALL new_row(1,zeile% + 1,"")
         CALL set_row(1,zeile% + 2,"borderstyleout0")
         REM CALL merge_cells(1,zeile%,1,zeile%,4)
         REM CALL merge_cells(1,zeile%,5,zeile%,6)
         zeile% = zeile% + 1
         CALL set_cell(1,zeile%,1,"")
         CALL set_font("f1,k0,l," + wssu$ + "," + SASummeB$)
         CALL write(Zeile5$)
         CALL set_cell(1,zeile%,6,"")
         CALL set_font("f1,k0,r," + wssu$ + "," + SASummeB$)
         IF opt% = 2 THEN CALL write( LTRIM$ (WertZeile5$))
         IF opt% = 4 THEN CALL write( LTRIM$ (WertZeile5EU$))
         CALL merge_cells(1,zeile%,5,zeile%,6)
         CALL merge_cells(1,zeile%,1,zeile%,4)
         CALL set_font("f1,k0,l," + wssu$ + "," + SASummeB$)
         CALL set_cell(1,zeile% + 1,1,"")
         CALL new_row(1,zeile% + 1,"")
         CALL set_row(1,zeile% + 2,"borderstyleout0")
         REM CALL merge_cells(1,zeile%,1,zeile%,4)
         REM CALL merge_cells(1,zeile%,5,zeile%,6)
         zeile% = zeile% + 1
         CALL set_cell(1,zeile%,1,"")
         CALL set_font("f1,k0,l," + wssu$ + "," + SASummeB$)
         CALL write(Zeile4$)
         CALL set_cell(1,zeile%,6,"")
         CALL set_font("f1,k0,r," + wssu$ + "," + SASummeB$)
         IF opt% = 2 THEN CALL write( LTRIM$ (WertZeile4$))
         IF opt% = 4 THEN CALL write( LTRIM$ (WertZeile4EU$))
         CALL merge_cells(1,zeile%,5,zeile%,6)
         CALL merge_cells(1,zeile%,1,zeile%,4)
         REM hier sichtbar machen
         wordapplication.Visible = - 1
     END IF 
   ELSE 
     REM CALL Fehler("Mahntest","")
     REM kein Rabatt
     REM Summe Netto:
     IF art% = 6 THEN 
       CALL new_table(2,2,0,"borderstyle1")
       zeile% = 1
       CALL set_cell(1,zeile%,1,"")
       CALL set_font("f1,k0,l," + wssu$)
     END IF 
     CALL set_cell(1,zeile%,1,"")
     CALL set_font("f1,k0,l," + wssu$)
     IF ansionoff$ LIKE "off" THEN 
       CALL write(Zeile3$)
     ELSE 
       CALL write( FN ansi(Zeile3$))
     END IF 
     IF art% <> 6 THEN 
       CALL set_cell(1,zeile%,6,"")
       CALL set_font("f1,k0,r," + wssu$)
       IF opt% = 2 THEN CALL write( LTRIM$ (WertZeile3$))
       IF opt% = 4 THEN CALL write( LTRIM$ (WertZeile3EU$))
       CALL merge_cells(1,zeile%,5,zeile%,6)
       CALL merge_cells(1,zeile%,1,zeile%,4)
       CALL set_row(1,zeile%,"borderstyleout1")
     ELSE 
       CALL set_cell(1,zeile%,2,"")
       CALL set_font("f1,r")
       IF opt% = 2 THEN CALL write( LTRIM$ (WertZeile3$))
       IF opt% = 4 THEN CALL write( LTRIM$ (WertZeile3EU$))
     END IF 
 
     CALL set_cell(1,zeile% + 1,1,"")
     CALL set_font("f1,l")
     CALL new_row(1,zeile% + 1,"")
     CALL set_row(1,zeile% + 2,"borderstyleout1")
     REM CALL merge_cells(1,zeile%,1,zeile%,4)
       REM CALL merge_cells(1,zeile%,5,zeile%,6)
     zeile% = zeile% + 1
     CALL set_cell(1,zeile%,1,"")
     CALL set_font("f1,k0,l," + wssu$)
     REM Mehrwertsteuer
     REM ? FN ansi(wssum$)
     IF art% <> 6 THEN 
       FOR a% = 0 TO MwStCount% - 1
         IF opt% = 2 THEN 
           IF ansionoff$ LIKE "off" THEN 
             CALL write(MwStText2$(a%))
           ELSE 
             CALL write( FN ansi(MwStText2$(a%)))
           END IF 
         END IF 
         IF opt% = 4 THEN 
           IF ansionoff$ LIKE "off" THEN 
             CALL write(MwStText2EU$(a%))
           ELSE 
             CALL write( FN ansi(MwStText2EU$(a%)))
           END IF 
         END IF 
         CALL set_cell(1,zeile%,6,"")
         CALL set_font("f1,k0,r," + wssu$)
         IF opt% = 2 THEN CALL write(MwStBetrag2$(a%))
         IF opt% = 4 THEN CALL write(MwStBetrag2EU$(a%) + " EUR")
         CALL set_cell(1,zeile% + 1,1,"")
         CALL set_font("f1,l")
         CALL new_row(1,zeile% + 1,"")
         CALL set_row(1,zeile% + 2,"borderstyleout1")
         CALL merge_cells(1,zeile%,5,zeile%,6)
         CALL merge_cells(1,zeile%,1,zeile%,4)
         REM CALL merge_cells(1,zeile%,5,zeile%,6)
         CALL set_row(1,zeile%,"borderstyleout1")
         zeile% = zeile% + 1
         CALL set_cell(1,zeile%,1,"")
         CALL set_font("f1,k0,l," + wssu$)

       NEXT a%
       REM CALL Fehler("nach mwst","")
        ON ERROR GOTO ErrVisible280120021
        wordapplication.Visible = - 1
       REM hier visible machen
ErrVisible280120021: 
       ON ERROR GOTO ErrorHandler
     END IF 
     REM Summe Brutto

       IF art% <> 6 THEN 
         CALL set_cell(1,zeile%,1,"")
         CALL set_font("f1,k0,l," + wssu$)
         IF ansionoff$ LIKE "off" THEN 
           CALL write(Zeile5$)
         ELSE 
           CALL write( FN ansi(Zeile5$))
         END IF 
         CALL set_cell(1,zeile%,6,"")
         CALL set_font("f1,k0,r," + wssu$)
         IF opt% = 2 THEN 
           IF ansionoff$ LIKE "off" THEN 
             CALL write(WertZeile5$)
           ELSE 
             CALL write( FN ansi(WertZeile5$))
           END IF 
         END IF 
         IF opt% = 4 THEN 
            IF ansionoff$ LIKE "off" THEN 
             CALL write(WertZeile5EU$)
           ELSE 
             CALL write( FN ansi(WertZeile5EU$))
           END IF 
         END IF 
         CALL merge_cells(1,zeile%,5,zeile%,6)
         CALL merge_cells(1,zeile%,1,zeile%,4)
         CALL set_row(1,zeile%,"borderstyleout7")
         CALL set_row(1,zeile% + 1,"borderstyleout0")
         CALL set_row(1,zeile%,"borderstyleout7")
         ON ERROR GOTO err131220021
         wordapplication.Visible = - 1
err131220021: 
         ON ERROR GOTO ErrorHandler
       ELSE 
         CALL set_cell(1,zeile%,1,"")
         CALL set_font("f1,l")
         IF ansionoff$ LIKE "off" THEN 
           CALL write(Zeile5$)
         ELSE 
           CALL write( FN ansi(Zeile5$))
         END IF 
         IF art% <> 6 THEN 
           CALL set_cell(1,zeile%,6,"")
           CALL set_font("f1,r")
         ELSE 
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f1,r")
         END IF 
         IF opt% = 2 THEN CALL write( LTRIM$ (WertZeile5$))
         IF opt% = 4 THEN CALL write( LTRIM$ (WertZeile5EU$))
         IF ZahlDatum.master > 0 THEN 
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout0")
           IF art% <> 6 THEN CALL merge_cells(1,zeile%,1,zeile%,4)
           REM CALL merge_cells(1,zeile%,5,zeile%,6)
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f1,l")
           IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
              IF ansionoff$ LIKE "off" THEN 
               CALL write("time for payment allowed was: " + DATE$ (ZahlDatum.master,"0d.mm.yyyy"))
             ELSE 
               CALL write( FN ansi("time for payment allowed was: " + DATE$ (ZahlDatum.master,"0d.mm.yyyy")))
             END IF 
           ELSE 
             REM time for payment allowed
              IF ansionoff$ LIKE "off" THEN 
               CALL write("Zahlungsziel war der: " + DATE$ (ZahlDatum.master,"0d.mm.yyyy"))
             ELSE 
               CALL write( FN ansi("Zahlungsziel war der: " + DATE$ (ZahlDatum.master,"0d.mm.yyyy")))
             END IF 
           END IF 
         END IF 
       END IF 
     REM Mahnungen - erfolgte Teilzahlungen
     IF art% = 6 THEN 
       REM CALL Fehler("Jetzt gehts mit Mahnungen richtig los","")
 REM 07022000*******************************************************************************************************************
 
     cdatei$ = FILE 
     dat$ = abdatei$
     maske$ = UCASE$ ( FORM )
     codere% = codere.dat$
     codems% = codems.dat$
     umr% = umrechnung.dat$
     waehr$ = waehrung.dat$
     IF codere% > 0 AND EXISTS (codems%,codems.teilraus) THEN 
       FILE "teilraus"
       INDEX codems.teilraus
       SELECT FIRST 
       SELECT KEY codems% LOCK FILE "teilraus" INDEX codems.teilraus
       sumz% = 0
       sumzEu% = 0
       mahn% = 0
       mahneu% = 0
       REM CALL Fehler("test","")
       CALL set_cell(1,zeile% + 1,1,"")
       CALL set_font("f1,l")
       CALL new_row(1,zeile% + 1,"")
       CALL set_row(1,zeile% + 2,"borderstyleout1")
       zeile% = zeile% + 1
       CALL set_cell(1,zeile%,1,"")
       CALL set_font("f1,l")
       IF ansionoff$ LIKE "off" THEN 
         CALL write("Zahlungen (erfolgt J/N)")
       ELSE 
         CALL write( FN ansi("Zahlungen (erfolgt J/N)"))
       END IF 
       CALL set_cell(1,zeile%,2,"")
       CALL set_font("f1,r")
       CALL write("Betrag")
       CALL set_cell(1,zeile% + 1,1,"")
       CALL set_font("f1,l")
       CALL new_row(1,zeile% + 1,"")
       CALL set_row(1,zeile% + 2,"borderstyleout1")
       zeile% = zeile% + 1
       CALL set_cell(1,zeile%,1,"")
       CALL set_font("f0,l")
       WHILE NOT EOF ("teilraus") AND codems.teilraus = codems%
          IF RIGHT$ (maske$,1) <> "E" THEN 
            IF erledigt.teilraus = "J" THEN 
              sumz% = sumz% + GesBrutto.teilraus
              IF UCASE$ (mahnjn.teilraus) = "J" THEN mahn% = mahn% + gesbrutto.teilraus
            END IF 
          END IF 
          IF RIGHT$ (maske$,1) = "E" THEN 
            IF erledigt.teilraus = "J" THEN 
              sumzeu% = sumzeu% + GesBruttoeu.teilraus
              IF UCASE$ (mahnjn.teilraus) = "J" THEN mahneu% = mahneu% + gesbruttoeu.teilraus
            END IF 
          END IF 
          codems.teilraus = codems%
          CALL QuickStore("teilraus")
          MOUSE OFF 
 
          IF gezahltam.teilraus <> 0 THEN 
            IF erledigt.teilraus = "J" THEN text1$ = DATE$ (gezahltam.teilraus,"0d.mm.yyyy") + SPACE$ (15) + "J"
            IF erledigt.teilraus = "N" THEN text1$ = DATE$ (gezahltam.teilraus,"0d.mm.yyyy") + SPACE$ (15) + "N"
          ELSE 
            IF erledigt.teilraus = "J" THEN text1$ = "00.00.0000" + SPACE$ (15) + "J"
            IF erledigt.teilraus = "N" THEN text1$ = "00.00.0000" + SPACE$ (15) + "N"
          END IF 
          IF ansionoff$ LIKE "off" THEN 
            CALL write(text1$)
          ELSE 
            CALL write( FN ansi(text1$))
          END IF 
          CALL set_cell(1,zeile%,2,"")
          CALL set_font("f0,r")
 
          IF opt% = 2 THEN CALL write( STR$ (GesBrutto.teilraus,",999999999.00") + " " + waehrung.teilraus)
          IF opt% = 4 THEN CALL write( FN ansi( STR$ (GesBruttoEu.teilraus,",999999999.00") + " EUR"))
          SELECT NEXT LOCK INDEX codems.teilraus
          CALL set_cell(1,zeile% + 1,1,"")
          CALL set_font("f0,l")
          CALL new_row(1,zeile% + 1,"")
          CALL set_row(1,zeile% + 2,"borderstyleout1")
          zeile% = zeile% + 1
          CALL set_cell(1,zeile%,1,"")
          CALL set_font("f0,l")
       WEND 
       IF RIGHT$ (maske$,1) <> "E" THEN 
         IF sumz% <> 0 THEN sumzeu% = sumz% / umr% ELSE sumzeu% = 0
         IF mahn% <> 0 THEN mahneu% = mahn% / umr% ELSE mahneu% = 0
       END IF 
       IF RIGHT$ (maske$,1) = "E" THEN 
         IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr% ELSE sumz% = 0
         IF mahneu% <> 0 THEN mahn% = mahneu% * umr% ELSE mahn% = 0
       END IF 
       FILE dat$
       SELECT FIRST 
       SELECT KEY codems% LOCK FILE dat$ INDEX codems.dat$
       SummeTeil.dat$ = sumz%
       SummeTeilEu.dat$ = sumzeu%
       SummeMahn.dat$ = mahn%
       SummeMahnEu.dat$ = mahneu%
       CALL QuickStore(dat$)
       MOUSE OFF 
       IF codere% > 0 THEN 
         IF EXISTS (codere%,codere.rausgang) THEN 
           FILE "rausgang"
           INDEX codere.rausgang
           SELECT FIRST 
           SELECT KEY codere% LOCK FILE "rausgang" INDEX codere.rausgang
           SummeTeil.rausgang = sumz%
           SummeTeilEu.rausgang = sumzeu%
           CALL QuickStore("rausgang")
           MOUSE OFF 
         END IF 
       END IF 
       CALL set_cell(1,zeile%,1,"")
       CALL set_font("f1,l")
       text1$ = "Summe der erfolgten Zahlungen"
       text2$ = "ausstehende Restsumme"
         
       IF opt% = 2 THEN CALL write(text1$)
       IF opt% = 4 THEN CALL write(text1$)
       CALL set_cell(1,zeile%,2,"")
       CALL set_font("f1,r")
       IF opt% = 2 THEN CALL write( STR$ (sumz%,",999999999.00") + " " + waehrung.teilraus)
       IF opt% = 4 THEN CALL write( STR$ (sumzEu%,",999999999.00") + " EUR")
       CALL set_cell(1,zeile% + 1,1,"")
       CALL set_font("f1,l")
       CALL new_row(1,zeile% + 1,"")
       CALL set_row(1,zeile% + 2,"borderstyleout0")
       zeile% = zeile% + 1
       CALL set_cell(1,zeile%,1,"")
       CALL set_font("f1,l")

       IF opt% = 2 THEN CALL write(text2$)
       IF opt% = 4 THEN CALL write(text2$)
       CALL set_cell(1,zeile%,2,"")
       CALL set_font("f1,r")
       rest% = sumz%
       restEu% = sumzEU%
       IF opt% = 2 THEN CALL write( STR$ (GesBrutto.dat$ - sumz%,",999999999.00") + " " + waehrung.teilraus)
       IF opt% = 4 THEN CALL write( STR$ (GesBruttoEu.dat$ - sumzEU%,",999999999.00") + " EUR")

     ELSE 
       rest% = 0
       restEU% = 0
     END IF 
     FILE cdatei$
 
 
 
 
 REM ******************************************************************************************************************* 
      
     END IF 
 
 
     REM Mahnzuschlag und Porto
 
     IF art% = 6 THEN 
       mahnz1% = mahnz1.abdatei$
       mahnp1% = mahnp1.abdatei$
       mahnz2% = mahnz2.abdatei$
       mahnp2% = mahnp2.abdatei$
       mahnz3% = mahnz3.abdatei$
       mahnp3% = mahnp3.abdatei$
       mahnz4% = mahnz4.abdatei$
       mahnp4% = mahnp4.abdatei$
       mahnz5% = mahnz5.abdatei$
       mahnp5% = mahnp5.abdatei$
 
       mahnz1EU% = mahnz1EU.abdatei$
       mahnp1EU% = mahnp1EU.abdatei$
       mahnz2EU% = mahnz2EU.abdatei$
       mahnp2EU% = mahnp2EU.abdatei$
       mahnz3EU% = mahnz3EU.abdatei$
       mahnp3EU% = mahnp3EU.abdatei$
       mahnz4EU% = mahnz4EU.abdatei$
       mahnp4EU% = mahnp4EU.abdatei$
       mahnz5EU% = mahnz5EU.abdatei$
       mahnp5EU% = mahnp5EU.abdatei$
 
       REM CALL Fehler("Mahnung weitere","")
 
       tab3$ = CHR$ (9) + CHR$ (9) + CHR$ (9) + CHR$ (9) + CHR$ (9)
           mdat1$ = DATE$ (MahnDatum1.abdatei$,"0d.mm.yyyy")
           mdat2$ = DATE$ (MahnDatum2.abdatei$,"0d.mm.yyyy")
           mdat3$ = DATE$ (MahnDatum3.abdatei$,"0d.mm.yyyy")
           mdat4$ = DATE$ (MahnDatum4.abdatei$,"0d.mm.yyyy")
           mdat5$ = DATE$ (MahnDatum5.abdatei$,"0d.mm.yyyy")
         IF PAGE = 1 THEN 
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           mahnsum% = GesBrutto.abdatei$ + mahnz1.abdatei$ + mahnp1.abdatei$ - rest%
           mahnsumEU% = GesBruttoEU.abdatei$ + mahnz1EU.abdatei$ + mahnp1EU.abdatei$ - restEU%
           mahnz$ = LTRIM$ ( STR$ (mahnz1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz1EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp1EU%,",999999999.00")) + " EUR"
           IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
             IF ansionoff$ LIKE "off" THEN 
               CALL write(TEXMahngeb$ + " 1." + TexMahn$ + ": " + mdat1$)
             ELSE 
               CALL write( FN ansi(TEXMahngeb$ + " 1." + TexMahn$ + ": " + mdat1$))
             END IF 
           ELSE 
             IF ansionoff$ LIKE "off" THEN 
               CALL write(TEXMahngeb$ + " 1." + TexMahn$ + ": " + mdat1$)
             ELSE 
               CALL write( FN ansi(TEXMahngeb$ + " 1." + TexMahn$ + ": " + mdat1$))
             END IF 
           END IF 
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnz$)
           IF opt% = 4 THEN CALL write(mahnzEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           CALL write(TexMahnport$ + " 1." + TexMahn$ + ":")
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnp$)
           IF opt% = 4 THEN CALL write(mahnpEU$)
         END IF 
         IF PAGE = 2 THEN 
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           mahnsum% = GesBrutto.abdatei$ + mahnz1.abdatei$ + mahnp1.abdatei$ + mahnz2.abdatei$ + mahnp2.abdatei$ - rest%
           mahnsumEU% = GesBruttoEU.abdatei$ + mahnz1EU.abdatei$ + mahnp1EU.abdatei$ + mahnz2EU.abdatei$ + mahnp2EU.abdatei$ - restEU%
           mahnz$ = LTRIM$ ( STR$ (mahnz1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz1EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp1EU%,",999999999.00")) + " EUR"
           IF ansionoff$ LIKE "off" THEN 
             CALL write(TEXMahngeb$ + " 1." + TexMahn$ + ": " + mdat1$)
           ELSE 
             CALL write( FN ansi(TEXMahngeb$ + " 1." + TexMahn$ + ": " + mdat1$))
           END IF 
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnz$)
           IF opt% = 4 THEN CALL write(mahnzEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           REM CALL write("Mahnporto 1.Mahnung:")
           CALL write(TexMahnport$ + " 1." + TexMahn$ + ":")
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnp$)
           IF opt% = 4 THEN CALL write(mahnpEU$)
 
           mahnz$ = LTRIM$ ( STR$ (mahnz2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz2EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp2EU%,",999999999.00")) + " EUR"
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           IF ansionoff$ LIKE "off" THEN 
             CALL write(TEXMahngeb$ + " 2." + TexMahn$ + ": " + mdat2$)
           ELSE 
             CALL write( FN ansi(TEXMahngeb$ + " 2." + TexMahn$ + ": " + mdat2$))
           END IF 
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnz$)
           IF opt% = 4 THEN CALL write(mahnzEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           CALL write(TexMahnport$ + " 2." + TexMahn$ + ":")
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnp$)
           IF opt% = 4 THEN CALL write(mahnpEU$)
         END IF 
         IF PAGE = 3 THEN 
 
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           mahnsum% = GesBrutto.abdatei$ + mahnz1.abdatei$ + mahnp1.abdatei$ + mahnz2.abdatei$ + mahnp2.abdatei$ + mahnz3.abdatei$ + mahnp3.abdatei$ - rest%
           mahnsumEU% = GesBruttoEU.abdatei$ + mahnz1EU.abdatei$ + mahnp1EU.abdatei$ + mahnz2EU.abdatei$ + mahnp2EU.abdatei$ + mahnz3EU.abdatei$ + mahnp3EU.abdatei$ - restEU%
           mahnz$ = LTRIM$ ( STR$ (mahnz1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz1EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp1EU%,",999999999.00")) + " EUR"
           IF ansionoff$ LIKE "off" THEN 
             CALL write(TEXMahngeb$ + " 1." + TexMahn$ + ": " + mdat1$)
           ELSE 
             CALL write( FN ansi(TEXMahngeb$ + " 1." + TexMahn$ + ": " + mdat1$))
           END IF 
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnz$)
           IF opt% = 4 THEN CALL write(mahnzEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           CALL write(TexMahnport$ + " 1." + TexMahn$ + ":")
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnp$)
           IF opt% = 4 THEN CALL write(mahnpEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
 
           mahnz$ = LTRIM$ ( STR$ (mahnz2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz2EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp2EU%,",999999999.00")) + " EUR"
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           IF ansionoff$ LIKE "off" THEN 
             CALL write(TEXMahngeb$ + " 2." + TexMahn$ + ": " + mdat2$)
           ELSE 
             CALL write( FN ansi(TEXMahngeb$ + " 2." + TexMahn$ + ": " + mdat2$))
           END IF 
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnz$)
           IF opt% = 4 THEN CALL write(mahnzEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           CALL write(TexMahnport$ + " 2." + TexMahn$ + ":")
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnp$)
           IF opt% = 4 THEN CALL write(mahnpEU$)
           CALL set_row(1,zeile%,"borderstyleout1")




           mahnz$ = LTRIM$ ( STR$ (mahnz3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz3EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp3EU%,",999999999.00")) + " EUR"
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           IF ansionoff$ LIKE "off" THEN 
             CALL write(TEXMahngeb$ + " 3." + TexMahn$ + ": " + mdat3$)
           ELSE 
             CALL write( FN ansi(TEXMahngeb$ + " 3." + TexMahn$ + ": " + mdat3$))
           END IF 
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnz$)
           IF opt% = 4 THEN CALL write(mahnzEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           CALL write(TexMahnport$ + " 3." + TexMahn$ + ":")
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnp$)
           IF opt% = 4 THEN CALL write(mahnpEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
         END IF 
         IF PAGE = 4 THEN 
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           mahnsum% = GesBrutto.abdatei$ + mahnz1.abdatei$ + mahnp1.abdatei$ + mahnz2.abdatei$ + mahnp2.abdatei$ + mahnz3.abdatei$ + mahnp3.abdatei$ + mahnz4.abdatei$ + mahnp4.abdatei$ - rest%
           mahnsumEU% = GesBruttoEU.abdatei$ + mahnz1EU.abdatei$ + mahnp1EU.abdatei$ + mahnz2EU.abdatei$ + mahnp2EU.abdatei$ + mahnz3EU.abdatei$ + mahnp3EU.abdatei$ + mahnz4EU.abdatei$ + mahnp4EU.abdatei$ - restEU%
           mahnz$ = LTRIM$ ( STR$ (mahnz1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz1EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp1EU%,",999999999.00")) + " EUR"
           REM dunning charge 
           IF ansionoff$ LIKE "off" THEN 
             CALL write(TEXMahngeb$ + " 1." + TexMahn$ + ": " + mdat1$)
           ELSE 
             CALL write( FN ansi(TEXMahngeb$ + " 1." + TexMahn$ + ": " + mdat1$))
           END IF 
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnz$)
           IF opt% = 4 THEN CALL write(mahnzEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           CALL write(TexMahnport$ + " 1." + TexMahn$ + ":")
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnp$)
           IF opt% = 4 THEN CALL write(mahnpEU$)
           CALL set_row(1,zeile%,"borderstyleout1")

 
           mahnz$ = LTRIM$ ( STR$ (mahnz2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz2EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp2EU%,",999999999.00")) + " EUR"
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           IF ansionoff$ LIKE "off" THEN 
             CALL write(TEXMahngeb$ + " 2." + TexMahn$ + ": " + mdat2$)
           ELSE 
             CALL write( FN ansi(TEXMahngeb$ + " 2." + TexMahn$ + ": " + mdat2$))
           END IF 
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnz$)
           IF opt% = 4 THEN CALL write(mahnzEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           CALL write(TexMahnport$ + " 2." + TexMahn$ + ":")
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnp$)
           IF opt% = 4 THEN CALL write(mahnpEU$)
           CALL set_row(1,zeile%,"borderstyleout1")

           mahnz$ = LTRIM$ ( STR$ (mahnz3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz3EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp3EU%,",999999999.00")) + " EUR"
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           IF ansionoff$ LIKE "off" THEN 
             CALL write(TEXMahngeb$ + " 3." + TexMahn$ + ": " + mdat3$)
           ELSE 
             CALL write( FN ansi(TEXMahngeb$ + " 3." + TexMahn$ + ": " + mdat3$))
           END IF 
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnz$)
           IF opt% = 4 THEN CALL write(mahnzEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           CALL write(TexMahnport$ + " 3." + TexMahn$ + ":")
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnp$)
           IF opt% = 4 THEN CALL write(mahnpEU$)
           CALL set_row(1,zeile%,"borderstyleout1")

           mahnz$ = LTRIM$ ( STR$ (mahnz4%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz4EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp4%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp4EU%,",999999999.00")) + " EUR"
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           IF ansionoff$ LIKE "off" THEN 
             CALL write(TEXMahngeb$ + " 4." + TexMahn$ + ": " + mdat4$)
           ELSE 
             CALL write( FN ansi(TEXMahngeb$ + " 4." + TexMahn$ + ": " + mdat4$))
           END IF 
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnz$)
           IF opt% = 4 THEN CALL write(mahnzEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           CALL write(TexMahnport$ + " 4." + TexMahn$ + ":")
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnp$)
           IF opt% = 4 THEN CALL write(mahnpEU$)
           CALL set_row(1,zeile%,"borderstyleout1")

         END IF 
         IF PAGE = 5 THEN 
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           mahnsum% = GesBrutto.abdatei$ + mahnz1.abdatei$ + mahnp1.abdatei$ + mahnz2.abdatei$ + mahnp2.abdatei$ + mahnz3.abdatei$ + mahnp3.abdatei$ + mahnz4.abdatei$ + mahnp4.abdatei$ + mahnz5.abdatei$ + mahnp5.abdatei$ - rest%
           mahnsumEU% = GesBruttoEU.abdatei$ + mahnz1EU.abdatei$ + mahnp1EU.abdatei$ + mahnz2EU.abdatei$ + mahnp2EU.abdatei$ + mahnz3EU.abdatei$ + mahnp3EU.abdatei$ + mahnz4EU.abdatei$ + mahnp4EU.abdatei$ - restEU%
           mahnsumEU% = mahnsumEU% + mahnz5EU.abdatei$ + mahnp5EU.abdatei$
           mahnz$ = LTRIM$ ( STR$ (mahnz1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz1EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp1%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp1EU%,",999999999.00")) + " EUR"
           IF ansionoff$ LIKE "off" THEN 
             CALL write(TEXMahngeb$ + " 1." + TexMahn$ + ": " + mdat1$)
           ELSE 
             CALL write( FN ansi(TEXMahngeb$ + " 1." + TexMahn$ + ": " + mdat1$))
           END IF 
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnz$)
           IF opt% = 4 THEN CALL write(mahnzEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           CALL write(TexMahnport$ + " 1." + TexMahn$ + ":")
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnp$)
           IF opt% = 4 THEN CALL write(mahnpEU$)
           CALL set_row(1,zeile%,"borderstyleout1")

           mahnz$ = LTRIM$ ( STR$ (mahnz2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz2EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp2%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp2EU%,",999999999.00")) + " EUR"
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           IF ansionoff$ LIKE "off" THEN 
             CALL write(TEXMahngeb$ + " 2." + TexMahn$ + ": " + mdat2$)
           ELSE 
             CALL write( FN ansi(TEXMahngeb$ + " 2." + TexMahn$ + ": " + mdat2$))
           END IF 
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnz$)
           IF opt% = 4 THEN CALL write(mahnzEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           CALL write(TexMahnport$ + " 2." + TexMahn$ + ":")
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnp$)
           IF opt% = 4 THEN CALL write(mahnpEU$)
           CALL set_row(1,zeile%,"borderstyleout1")

           mahnz$ = LTRIM$ ( STR$ (mahnz3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz3EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp3%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp3EU%,",999999999.00")) + " EUR"
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           IF ansionoff$ LIKE "off" THEN 
             CALL write(TEXMahngeb$ + " 3." + TexMahn$ + ": " + mdat3$)
           ELSE 
             CALL write( FN ansi(TEXMahngeb$ + " 3." + TexMahn$ + ": " + mdat3$))
           END IF 
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnz$)
           IF opt% = 4 THEN CALL write(mahnzEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           CALL write(TexMahnport$ + " 3." + TexMahn$ + ":")
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnp$)
           IF opt% = 4 THEN CALL write(mahnpEU$)
           CALL set_row(1,zeile%,"borderstyleout1")


           mahnz$ = LTRIM$ ( STR$ (mahnz4%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz4EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp4%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp4EU%,",999999999.00")) + " EUR"
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           IF ansionoff$ LIKE "off" THEN 
             CALL write(TEXMahngeb$ + " 4." + TexMahn$ + ": " + mdat4$)
           ELSE 
             CALL write( FN ansi(TEXMahngeb$ + " 4." + TexMahn$ + ": " + mdat4$))
           END IF 
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnz$)
           IF opt% = 4 THEN CALL write(mahnzEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           CALL write(TexMahnport$ + " 4." + TexMahn$ + ":")
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnp$)
           IF opt% = 4 THEN CALL write(mahnpEU$)
           CALL set_row(1,zeile%,"borderstyleout1")

           mahnz$ = LTRIM$ ( STR$ (mahnz5%,",999999999.00")) + " " + waehrung.abdatei$
           mahnzEU$ = LTRIM$ ( STR$ (mahnz5EU%,",999999999.00")) + " EUR"
           mahnp$ = LTRIM$ ( STR$ (mahnp5%,",999999999.00")) + " " + waehrung.abdatei$
           mahnpEU$ = LTRIM$ ( STR$ (mahnp5EU%,",999999999.00")) + " EUR"
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           IF ansionoff$ LIKE "off" THEN 
             CALL write(TEXMahngeb$ + " 5." + TexMahn$ + ": " + mdat5$)
           ELSE 
             CALL write( FN ansi(TEXMahngeb$ + " 5." + TexMahn$ + ": " + mdat5$))
           END IF 
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnz$)
           IF opt% = 4 THEN CALL write(mahnzEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
           CALL set_cell(1,zeile% + 1,1,"")
           CALL set_font("f1,l")
           CALL new_row(1,zeile% + 1,"")
           CALL set_row(1,zeile% + 2,"borderstyleout1")
           zeile% = zeile% + 1
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f0,l")
           CALL write(TexMahnport$ + " 5." + TexMahn$ + ":")
           CALL set_cell(1,zeile%,2,"")
           CALL set_font("f0,r")
           IF opt% = 2 THEN CALL write(mahnp$)
           IF opt% = 4 THEN CALL write(mahnpEU$)
           CALL set_row(1,zeile%,"borderstyleout1")
         END IF 
         REM CALL Fehler("M-Test","")
         CALL set_cell(1,zeile% + 1,1,"")
         CALL set_font("f1,k0,l," + wssu$)
         REM CALL new_row(1,zeile% + 1,"")
         REM CALL set_row(1,zeile% + 2,"borderstyleout0")
         zeile% = zeile% + 1
         CALL set_cell(1,zeile%,1,"")
         CALL set_font("f1,,k0,l," + wssu$)
         IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
           CALL write("total to be paid:")
         ELSE 
           IF ansionoff$ LIKE "off" THEN 
             CALL write("zu Åberweisende Summe:")
           ELSE 
             CALL write( FN ansi("zu Åberweisende Summe:"))
           END IF 
         END IF 
         CALL set_cell(1,zeile%,2,"")
         CALL set_font("f1,r")
 
         WertZeile5$ = LTRIM$ ( STR$ (mahnsum%,",999999999.00")) + " " + waehrung.abdatei$
         WertZeile5EU$ = LTRIM$ ( STR$ (mahnsumEU%,",999999999.00")) + " EUR"
         IF opt% = 2 THEN CALL write(WertZeile5$)
         IF opt% = 4 THEN CALL write(WertZeile5EU$)
         CALL set_row(1,zeile%,"borderstyleout7")
     END IF 
   END IF 
 ELSE 
   REM CALL Fehler("Bruttofakturierung","")
   REM Summe Brutto
           CALL set_cell(1,zeile%,1,"")
           CALL set_font("f1,k0,l," + wssu$)
           REM CALL merge_cells(1,zeile%,1,zeile%,4)
           REM CALL new_row(1,zeile% + 1,"")
           REM CALL set_row(1,zeile% + 2,"borderstyleout0")
           REM CALL merge_cells(1,zeile%,1,zeile%,4)
           REM CALL merge_cells(1,zeile%,5,zeile%,6)
           REM zeile% = zeile% + 1
           REM CALL set_cell(1,zeile%,1,"")
           REM CALL set_font("f1,l")
   IF ansionoff$ LIKE "off" THEN 
     CALL write(Zeile1$)
   ELSE 
     CALL write( FN ansi(Zeile1$))
   END IF 
   CALL set_cell(1,zeile%,6,"")
   CALL set_font("f1,k0,r," + wssu$)
   IF opt% = 2 THEN CALL write(WertZeile1$)
   IF opt% = 4 THEN CALL write(WertZeile1EU$)
   
   CALL merge_cells(1,zeile%,5,zeile%,6)
   CALL merge_cells(1,zeile%,1,zeile%,4)
   IF LTRIM$ (WertZeile1$) = "" THEN 
     CALL set_row(1,zeile%,"borderstyleout0")
   ELSE 
     CALL set_row(1,zeile%,"borderstyleout1")
   END IF 

   CALL set_cell(1,zeile% + 1,1,"")
   CALL set_font("f1,l")
   CALL new_row(1,zeile% + 1,"")
   CALL set_row(1,zeile% + 2,"borderstyleout0")
   REM CALL merge_cells(1,zeile%,1,zeile%,4)
   zeile% = zeile% + 1
   CALL set_cell(1,zeile%,1,"")
   CALL set_font("f1,k0,l")
   IF ansionoff$ LIKE "off" THEN 
     CALL write(Zeile2$)
   ELSE 
     CALL write( FN ansi(Zeile2$))
   END IF 
   CALL set_cell(1,zeile%,6,"")
   CALL set_font("f1,k0,r")
   IF opt% = 2 THEN CALL write(WertZeile2$)
   IF opt% = 4 THEN CALL write(WertZeile2EU$)
   REM 250698
   CALL merge_cells(1,zeile%,1,zeile%,4)
   IF LTRIM$ (Wertzeile2$) = "" THEN 
     CALL set_row(1,zeile%,"borderstyleout0")
   ELSE 
     CALL set_row(1,zeile%,"borderstyleout1")
   END IF 
   CALL set_cell(1,zeile% + 1,1,"")
   CALL set_font("f1,k0,l," + wssu$)
   CALL new_row(1,zeile% + 1,"")
   CALL set_row(1,zeile% + 2,"borderstyleout0")
   REM CALL merge_cells(1,zeile%,1,zeile%,4)
   zeile% = zeile% + 1
   CALL set_cell(1,zeile%,1,"")
   CALL set_font("f1,k0,l," + wssum$)
   IF ansionoff$ LIKE "off" THEN 
     CALL write(Zeile4$)
   ELSE 
     CALL write( FN ansi(Zeile4$))
   END IF 
   CALL set_cell(1,zeile%,6,"")
   CALL set_font("f1,k0,r," + wssum$)
   IF opt% = 2 THEN CALL write(WertZeile4$)
   IF opt% = 4 THEN CALL write(WertZeile4EU$)
   CALL merge_cells(1,zeile%,5,zeile%,6)
   CALL merge_cells(1,zeile%,1,zeile%,4)
   CALL set_row(1,zeile%,"borderstyleout7")
   zeile% = zeile% + 1
   IF art% <> 6 THEN 
     CALL new_row(1,zeile%,"")
     CALL set_row(1,zeile%,"borderstyleout0")
     CALL set_row(1,zeile% + 1,"borderstyleout0")
     CALL set_row(1,zeile% - 1,"borderstyleout7")
     CALL set_cell(1,zeile% + 1,1,"")
     
     CALL set_font("f1,k0,l," + wsrest$)
     CALL new_row(1,zeile% + 1,"")
     CALL set_row(1,zeile% + 2,"borderstyleout0")
     REM CALL merge_cells(1,zeile%,1,zeile%,4)
     zeile% = zeile% + 1
     CALL set_cell(1,zeile%,1,"")
     CALL set_font("f1,k0,l," + wsrest$)
     FOR a% = 0 TO MwStCount% - 1
       IF opt% = 2 THEN 
         IF ansionoff$ LIKE "off" THEN 
           CALL write(MwStText2$(a%))
         ELSE 
           CALL write( FN ansi(MwStText2$(a%)))
         END IF 
       END IF 
       IF opt% = 4 THEN 
         IF ansionoff$ LIKE "off" THEN 
           CALL write(MwStText2EU$(a%))
         ELSE 
           CALL write( FN ansi(MwStText2EU$(a%)))
         END IF 
       END IF 
       CALL set_cell(1,zeile%,6,"")
       CALL set_font("f1,k0,r," + wsrest$)
       IF opt% = 2 THEN CALL write(MwStBetrag2$(a%))
       IF opt% = 4 THEN CALL write(MwStBetrag2EU$(a%))
       CALL merge_cells(1,zeile%,5,zeile%,6)
       CALL merge_cells(1,zeile%,1,zeile%,4)
       CALL set_cell(1,zeile% + 1,1,"")
       CALL set_font("f1,k0,l," + wsrest$)
       CALL new_row(1,zeile% + 1,"")
       CALL set_row(1,zeile% + 2,"borderstyleout0")
       REM CALL merge_cells(1,zeile%,1,zeile%,4)
       zeile% = zeile% + 1
       CALL set_cell(1,zeile%,1,"")
       CALL set_font("f1,k0,l," + wsrest$)
     NEXT a%
   END IF 
 END IF 
 CALL behind_table(1)
 CALL line_down(1)
 CALL set_font("f0,l," + wsepilog$)
 REM CALL Fehler("SKONTO","")
 IF skonto.abdatei$ > 0 AND art% <> 6 THEN 
   CALL set_font("f1,l," + wsepilog$ + "," + SAEpilog$)
   besch$ = ""
   b% = 0
   IF opt% = 2 THEN 
     besch$ = RabattText$
   END IF 
   REM 06022000
   IF opt% = 4 THEN 
     besch$ = RabattTextEu$
   END IF 
 
   IF ansionoff$ LIKE "off" THEN 
     CALL write(besch$)
   ELSE 
     CALL write( FN ansi(besch$))
   END IF 
   CALL line_down(1)
 
 END IF 
 END IF 
 REM von if art%<>3
 REM CALL Fehler("Zahlungsziel","")
 IF art% <> 6 THEN 
   IF ZahlDatum.abdatei$ > 0 THEN 
     CALL set_font("f1,l," + wsepilog$ + "," + SAEpilog$)
     IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
       besch$ = TexZZ$ + TexZaZiel$ + " " + DATE$ (ZahlDatum.abdatei$,"0d.mm.yyyy")
       REM ": please pay up to the due date " + DATE$ (ZahlDatum.abdatei$,"0d.mm.yyyy")
     ELSE 
       besch$ = TexZZ$ + TexZaZiel$ + " " + DATE$ (ZahlDatum.abdatei$,"0d.mm.yyyy")
       REM "Zahlungsziel: Bitte zahlen Sie den fÑlligen Betrag bis zum " + DATE$ (ZahlDatum.abdatei$,"0d.mm.yyyy")
     END IF 
     IF ansionoff$ LIKE "off" THEN 
       CALL write(besch$)
     ELSE 
       CALL write( FN ansi(besch$))
     END IF 
     CALL line_down(2)
   END IF 
 ELSE 
   IF PAGE = 1 THEN zahldatum% = ZahlMahnDat1.abdatei$
   IF PAGE = 2 THEN zahldatum% = ZahlMahnDat2.abdatei$
   IF PAGE = 3 THEN zahldatum% = ZahlMahnDat3.abdatei$
   IF PAGE = 4 THEN zahldatum% = ZahlMahnDat4.abdatei$
   IF PAGE = 5 THEN zahldatum% = ZahlMahnDat5.abdatei$
   IF ZahlDatum% > 0 THEN 
     CALL set_font("f1,l," + wsepilog$ + "," + SAEpilog$)
     IF druckArt.abdatei$ LIKE "Belegtexte 2" THEN 
       besch$ = TexZZ$ + TexZaZiel$ + " " + DATE$ (ZahlDatum%,"0d.mm.yyyy")
       REM ": please pay up to the due date " + DATE$ (ZahlDatum.abdatei$,"0d.mm.yyyy")
     ELSE 
       besch$ = TexZZ$ + TexZaZiel$ + " " + DATE$ (ZahlDatum%,"0d.mm.yyyy")
       REM "Zahlungsziel: Bitte zahlen Sie den fÑlligen Betrag bis zum " + DATE$ (ZahlDatum.abdatei$,"0d.mm.yyyy")
     END IF 
 

     IF ansionoff$ LIKE "off" THEN 
       CALL write(besch$)
     ELSE 
       CALL write( FN ansi(besch$))
     END IF 
     CALL line_down(1)
   END IF 
 END IF 
 
 REM 07022000 Ausweisen der erfolgten Teilzahlungen
 REM CALL Fehler("Teilzahlungen","")
 IF art% <> 6 THEN 
     cdatei$ = FILE 
     dat$ = abdatei$
     maske$ = UCASE$ ( FORM )
     codere% = codere.dat$
     codems% = codems.dat$
     umr% = umrechnung.dat$
     waehr$ = waehrung.dat$
     IF EXISTS (codems%,codems.teilraus) THEN 
       FILE "teilraus"
       INDEX codems.teilraus
       SELECT FIRST 
       SELECT KEY codems% LOCK FILE "teilraus" INDEX codems.teilraus
       sumz% = 0
       sumzEu% = 0
       mahn% = 0
       mahneu% = 0
       CALL new_table(2,2,0,"borderstyle1")
       CALL set_cell(2,1,1,"")
       CALL set_font("f1,l")
       CALL write(TexTeilzA$)
       CALL move(2,"right",0)
       CALL set_font("f1,r")
       CALL write(TexGespr$)
       CALL set_row(2,1,"borderstyleout1")
       zeile% = 2
       CALL set_cell(2,zeile%,1,"")
       CALL new_row(2,zeile%,"")
       CALL set_row(2,zeile% + 1,"borderstyleout1")
       REM zeile% = zeile% + 1
       CALL set_cell(2,zeile%,1,"")
       CALL set_font("f0,l")

       WHILE NOT EOF ("teilraus") AND codems.teilraus = codems%
          IF RIGHT$ (maske$,1) <> "E" THEN 
            IF erledigt.teilraus = "J" THEN 
              sumz% = sumz% + GesBrutto.teilraus
              IF UCASE$ (mahnjn.teilraus) = "J" THEN mahn% = mahn% + gesbrutto.teilraus
            END IF 
          END IF 
          IF RIGHT$ (maske$,1) = "E" THEN 
            IF erledigt.teilraus = "J" THEN 
              sumzeu% = sumzeu% + GesBruttoeu.teilraus
              IF UCASE$ (mahnjn.teilraus) = "J" THEN mahneu% = mahneu% + gesbruttoeu.teilraus
            END IF 
          END IF 
          codems.teilraus = codems%
          CALL QuickStore("teilraus")
          MOUSE OFF 
 
          IF gezahltam.teilraus <> 0 THEN 
            IF erledigt.teilraus = "J" THEN text1$ = DATE$ (gezahltam.teilraus,"0d.mm.yyyy") + SPACE$ (15) + "J"
            IF erledigt.teilraus = "N" THEN text1$ = DATE$ (gezahltam.teilraus,"0d.mm.yyyy") + SPACE$ (15) + "N"
          ELSE 
            IF erledigt.teilraus = "J" THEN text1$ = "00.00.0000" + SPACE$ (15) + "J"
            IF erledigt.teilraus = "N" THEN text1$ = "00.00.0000" + SPACE$ (15) + "N"
          END IF 

            IF opt% = 2 THEN 
              IF ansionoff$ LIKE "off" THEN 
                CALL write(text1$)
              ELSE 
                CALL write( FN ansi(text1$))
              END IF 
            END IF 
            IF opt% = 4 THEN 
              IF ansionoff$ LIKE "off" THEN 
                CALL write(text1$)
              ELSE 
                CALL write( FN ansi(text1$))
              END IF 
            END IF 
            REM CALL Fehler("Teilraus","")
            CALL set_cell(2,zeile%,2,"")
            CALL set_font("f0,r")
 
            IF opt% = 2 THEN CALL write( STR$ (GesBrutto.teilraus,",999999999.00") + " " + waehrung.teilraus)
            IF opt% = 4 THEN CALL write( STR$ (GesBruttoEu.teilraus,",999999999.00") + " EUR")
 
          SELECT NEXT LOCK INDEX codems.teilraus
          CALL set_cell(2,zeile% + 1,1,"")
          CALL new_row(2,zeile% + 1,"")
          CALL set_row(2,zeile% + 2,"borderstyleout1")
          zeile% = zeile% + 1
          CALL set_cell(2,zeile%,1,"")
          CALL set_font("f0,l")
       WEND 
       IF RIGHT$ (maske$,1) <> "E" THEN 
         IF sumz% <> 0 THEN sumzeu% = sumz% / umr%
       END IF 
       IF RIGHT$ (maske$,1) = "E" THEN 
         IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr%
       END IF 
       FILE dat$
       SELECT FIRST 
       SELECT KEY codems% LOCK FILE dat$ INDEX codems.dat$
       SummeTeil.dat$ = sumz%
       SummeTeilEu.dat$ = sumzeu%
       SummeMahn.dat$ = mahn%
       SummeMahnEu.dat$ = mahneu%
       CALL QuickStore(dat$)
       MOUSE OFF 
       IF codere% > 0 THEN 
         IF EXISTS (codere%,codere.rausgang) THEN 
           FILE "rausgang"
           INDEX codere.rausgang
           SELECT FIRST 
           SELECT KEY codere% LOCK FILE "rausgang" INDEX codere.rausgang
           SummeTeil.rausgang = sumz%
           SummeTeilEu.rausgang = sumzeu%
           SummeMahn.rausgang = mahn%
           SummeMahnEu.rausgang = mahneu%
           CALL QuickStore("rausgang")
           MOUSE OFF 
         END IF 
       END IF 
 
       text1$ = TexTeilzB$
       text2$ = TexTeilzC$
       REM CALL Fehler("test","")
       REM CALL behind_table(2)
       REM CALL line_down(1)
         CALL set_cell(2,zeile%,1,"")
         CALL set_font("f1,l")
         IF opt% = 2 THEN CALL write(text1$)
         IF opt% = 4 THEN CALL write(text1$)
         CALL set_cell(2,zeile%,2,"")
         CALL set_font("f1,r")
         IF opt% = 2 THEN CALL write( STR$ (sumz%,",999999999.00") + " " + waehrung.teilraus)
         IF opt% = 4 THEN CALL write( STR$ (sumzEu%,",999999999.00") + " EUR")
         CALL set_cell(2,zeile% + 1,1,"")
         REM CALL new_row(2,zeile% + 1,"")
         REM CALL set_row(2,zeile% + 2,"borderstyleout1")
         zeile% = zeile% + 1
         CALL set_cell(2,zeile%,1,"")
         CALL set_font("f1,l")

         IF opt% = 2 THEN CALL write(text2$)
         IF opt% = 4 THEN CALL write(text2$)
         CALL set_cell(2,zeile%,2,"")
         CALL set_font("f1,r")
         IF opt% = 2 THEN CALL write( STR$ (GesBrutto.dat$ - sumz%,",999999999.00") + " " + waehrung.teilraus)
         IF opt% = 4 THEN CALL write( STR$ (GesBruttoEu.dat$ - sumzEU%,",999999999.00") + " EUR")

         REM CALL set_row(2,zeile% + 1,"borderstyleout0")
         REM CALL set_row(2,zeile%,"borderstyleout1")
         CALL behind_table(2)
         CALL line_down(2)
     END IF 
     FILE cdatei$
   END IF 
 REM ***************************************************************************************
 IF art% <> 6 THEN 
   IF Epilog.abdatei$ <> "" THEN 
     CALL set_font("f0,l," + wsepilog$)
     besch$ = Epilog.abdatei$
     b% = 0
     REM FOR a% = 1 TO LEN (Epilog.abdatei$)
     REM  t$ = MID$ (Epilog.abdatei$,a%,1)
     REM  besch$ = besch$ + t$
     REM  b% = b% + 1
     REM   IF b% = 255 THEN 
     REM   IF ansionoff$ LIKE "off" THEN 
     REM   CALL write(besch$)
     REM   ELSE 
     REM   CALL write( FN ansi(besch$))
     REM   END IF 
     REM  besch$ = ""
     REM  b% = 0
     REM   END IF 
     REM NEXT a%
     IF ansionoff$ LIKE "off" THEN 
       CALL write(besch$)
     ELSE 
       CALL write( FN ansi(besch$))
     END IF 
     CALL line_down(1)
   END IF 
 END IF 
 REM CALL Fehler("nach Epilog","")
 IF art% = 6 THEN 
   IF PAGE = 1 THEN epilogab$ = epilog1.abdatei$
   IF PAGE = 2 THEN epilogab$ = epilog2.abdatei$
   IF PAGE = 3 THEN epilogab$ = epilog3.abdatei$
   IF PAGE = 4 THEN epilogab$ = epilog4.abdatei$
   IF PAGE = 5 THEN epilogab$ = epilog5.abdatei$
 
   IF Epilogab$ <> "" THEN 
     CALL set_font("f0,l," + wsepilog$ + "," + SAEpilog$)
     besch$ = Epilogab$
     b% = 0
     REM FOR a% = 1 TO LEN (Epilogab$)
     REM  t$ = MID$ (Epilogab$,a%,1)
     REM  besch$ = besch$ + t$
     REM  b% = b% + 1
     REM   IF b% = 255 THEN 
     REM   IF ansionoff$ LIKE "off" THEN 
     REM   CALL write(besch$)
     REM   ELSE 
     REM   CALL write( FN ansi(besch$))
     REM   END IF 
     REM  besch$ = ""
     REM  b% = 0
     REM   END IF 
     REM NEXT a%
     IF ansionoff$ LIKE "off" THEN 
       CALL write(besch$)
     ELSE 
       CALL write( FN ansi(besch$))
     END IF 
     CALL line_down(1)
   END IF 
 END IF 
 REM CLOSE OUTPUT 
 MOUSE ON 
 SET STATUS "Fertig mit Dokumentenerstellung"
 REM CALL Fehler("Das Dokument wurde erstellt!","")
 REM CALL Fehler("Appactivate mit on error","")
 ON ERROR GOTO apperr0207011
 APPACTIVATE "Microsoft Word"
 REM WordApp.Visible = - 1
 GOTO apperr0207012
 
apperr0207011: 
 ON ERROR GOTO apperr0207012
 APPACTIVATE Gtextdatei$
 
apperr0207012: 
 ON ERROR GOTO apperr0207013
 wordapplication.Visible = - 1
apperr0207013:  
 ON ERROR GOTO apperr0207014
 wordapplication.delete()
apperr0207014:  
 gvisible% = - 1
 ON ERROR GOTO ErrorHandler
 END SUB 
 


SUB KassTeilr(codere%,codems%,codeku%,gut$)
     IF NOT EXISTS (codere%,codere.teilraus) THEN 
       BLANK FILE "Teilraus"
       codeteil% = SER ("Teilraus",1)
       codeteil.teilraus = codeteil%
       codere.teilraus = codere.master
       codems.teilraus = codems.master
       codeku.teilraus = codeku.master
     ELSE 
       SELECT FIRST FILE "teilraus" INDEX codere.teilraus
       SELECT KEY codere% LOCK FILE "teilraus" INDEX codere.teilraus
     END IF 
     nachname.teilraus = nachname.master
     vorname.teilraus = vorname.master
     ort.teilraus = ort.master
     plz.teilraus = plz.master
     stra·e.teilraus = stra·e.master
     gezahltam.teilraus = TODAY 
     GesNetto.teilraus = GesNetto.master
     GesBrutto.teilraus = GesBrutto.master
     PreisNetto.teilraus = PreisNetto.master
     PreisBrutto.teilraus = PreisBrutto.master
     PreisNettoEu.teilraus = PreisNettoEu.master
     PreisBruttoEu.teilraus = PreisBruttoEu.master
     GesNettoTeil.teilraus = GesNetto.master
     GesBruttoTeil.teilraus = GesBrutto.teilraus
     GesNettoTeilEu.teilraus = GesNettoEU.master
     GesBruttoTeilEu.teilraus = GesBruttoEU.master
     GesNettoEu.teilraus = GesNettoEU.master
     GesBruttoEu.teilraus = GesBruttoEU.master
     MwSt.teilraus = MwSt.master
     REM mwstdm.teilraus = mwstdm.master
     IF gut$ LIKE "j" THEN 
       GutschriftJN.teilraus = "j"
     ELSE 
       GutschriftJN.teilraus = "n"
     END IF 
     Ktoauszugsnr.teilraus = "KASSE"
     KasseJN.teilraus = "j"
     gezmitskonto.teilraus = "n"
     Notiz.teilraus = "automatisch erzeugt beim Buchen der Rechnung mit Kasseneingang"
     erledigt.teilraus = "j"
     zero.teilraus = 0
     lrenummer.teilraus = nummer.master
     datum.teilraus = datum.master
     codew.teilraus = codew.master
     waehrung.teilraus = waehrung.master
     umrechnung.teilraus = umrechnung.master
     CALL QuickStore("teilraus")
 END SUB 






SUB UmsFuel1einz(codeku%)
 cfile$ = FILE 
 MOUSE OFF 
 CALL DFile(3,"UMSATZ" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"VERTRETE" + _fpw$)
 CALL DFile(3,"PROVISIO" + _fpw$)
 CALL DFile(3,"floskel" + _fpw$)
 CALL DFile(3,"einzprov" + _fpw$)
 FILE "adressen"
 INDEX codeku.adressen
 SELECT FIRST 
 FILE "master"
 INDEX codeku.master
 SELECT FIRST 
 FILE "umsatz"
 INDEX QuickCodekuJahr.umsatz
 SELECT FIRST 
 SET STATUS "Lîschen der alten UmsÑtze"
 REMOVE FROM FILE "umsatz" WHERE codeku.umsatz = codeku%
 FILE "provisio"
 INDEX QuickCodeMAJahr.provisio
 SELECT FIRST 
 SET STATUS "Lîschen der alten Provisionen"
 FILE "einzprov"
 INDEX Codems.einzprov
 SELECT FIRST 
 SET STATUS "Lîschen der alten Einzel-Provisionen"
 FILE "vertrete"
 INDEX codema.vertrete
 SELECT FIRST 
 SET STATUS "RÅcksetzen der Provisionsgesamtfelder"
 SET STATUS ""
 FILE "adressen"
 INDEX nachname.adressen
 SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
 SELECT KEY codeku% LOCK FILE "ADRESSEN" INDEX codeku.adressen
 nachname$ = nachname.adressen
   IF EXISTS (codeku%,codeku.master) THEN 
     SET STATUS "Berechne UmsÑtze fÅr Adresse: " + nachname$
     FILE "master"
     INDEX codeku.master
     SELECT FIRST 
     SELECT KEY codeku% LOCK FILE "master" INDEX codeku.master
     AngGesGes% = 0
     ReGesGes% = 0
     LieGesGes% = 0
     AufGesGes% = 0
     BesGesGes% = 0
     GutGesGes% = 0
 
     AngGesGesEU% = 0
     ReGesGesEU% = 0
     LieGesGesEU% = 0
     AufGesGesEU% = 0
     BesGesGesEU% = 0
     GutGesGesEU% = 0
     WHILE NOT EOF ("master") AND codeku.master = codeku%
       codems% = codems.master
       FILE "schein"
       INDEX codems.schein
       SELECT FIRST 
       SELECT KEY codems% FILE "schein" INDEX codems.schein
       FILE "master"
       REM CALL ProvFuelGes(codems%)
       FILE "master"
       SELECT KEY codems% LOCK FILE "master" INDEX codems.master
       datum$ = DATE$ (datum.master,"yyyymmdd")
       jahr$ = LEFT$ (datum$,4)
       monat$ = MID$ (datum$,5,2)
       mo% = VAL (monat$)
       art% = art.master
       gesbrutto% = gesBrutto.master
       gesbruttoEU% = gesBruttoEU.master
 
       quickKuJahr$ = STR$ (codeku%,"000000") + jahr$
       BuchBrutto.master = GesBrutto.master
       BuchBruttoEU.master = GesBruttoEU.master
       BuchUms.master = "Y"
       BuchDatum.master = Datum.master
       BuchProv.master = ProvisDM.master
       BuchProvEU.master = ProvisEU.master
       BuchCodeMA.master = CodeMA.master
       STORE FILE "master"
       FILE "umsatz"
       INDEX QuickCodekuJahr.umsatz
       SELECT FIRST 
       IF EXISTS (quickKuJahr$,QuickCodekuJahr.umsatz) THEN 
         SELECT KEY quickKuJahr$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
       ELSE 
         BLANK FILE "umsatz"
         CodeUm.umsatz = SER ("umsatz",1)
         codeku.umsatz = codeku%
         jahr.umsatz = VAL (jahr$)
         QuickCodekuJahr.umsatz = STR$ (codeku%,"000000") + jahr$
         STORE FILE "umsatz"
         SELECT FIRST INDEX QuickCodekuJahr.umsatz
         SELECT KEY quickKuJahr$ LOCK FILE "umsatz" INDEX QuickCodekuJahr.umsatz
       END IF 
       SELECT CASE art%
         CASE 1
           MSArt$ = "Angebote"
           mo% = VAL (monat$)
           IF mo% = 0 THEN mo% = 1
           feld$ = "Ang" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           AngGesJahr.umsatz = AngGesJahr.umsatz + gesbrutto%
           AngGesGes% = AngGesGes% + gesbrutto%
 
           feldEU$ = "Ang" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           AngGesJahrEU.umsatz = AngGesJahrEU.umsatz + gesbruttoEU%
           AngGesGesEU% = AngGesGesEU% + gesbruttoEU%
           CALL QuickStore("UMSATZ")
         CASE 2
           MSArt$ = "Rechnungen"
           mo% = VAL (monat$)
           IF mo% = 0 THEN mo% = 1
           feld$ = "Rec" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           ReGesJahr.umsatz = REGesJahr.umsatz + gesbrutto%
           ReGesGes% = ReGesGes% + gesbrutto%
 
           feldEU$ = "Rec" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           ReGesJahrEU.umsatz = REGesJahrEU.umsatz + gesbruttoEU%
           ReGesGesEU% = ReGesGesEU% + gesbruttoEU%
           CALL QuickStore("UMSATZ")
         CASE 3
           MSArt$ = "Lieferscheine"
           mo% = VAL (monat$)
           IF mo% = 0 THEN mo% = 1
           feld$ = "Lie" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           LieGesJahr.umsatz = LieGesJahr.umsatz + gesbrutto%
           LieGesGes% = LieGesGes% + gesbrutto%
 
           feldEU$ = "Lie" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           LieGesJahrEU.umsatz = LieGesJahrEU.umsatz + gesbruttoEU%
           LieGesGesEU% = LieGesGesEU% + gesbruttoEU%
           CALL QuickStore("UMSATZ")
         CASE 4
           MSArt$ = "AuftrÑge"
           IF mo% = 0 THEN mo% = 1
           feld$ = "Auf" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           AufGesJahr.umsatz = AufGesJahr.umsatz + gesbrutto%
           AufGesGes% = AufGesGes% + gesbrutto%
 
           feldEU$ = "Auf" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           AufGesJahrEU.umsatz = AufGesJahrEU.umsatz + gesbruttoEU%
           AufGesGesEU% = AufGesGesEU% + gesbruttoEU%
           CALL QuickStore("UMSATZ")
         CASE 5
           MSArt$ = "Bestellungen"
           IF mo% = 0 THEN mo% = 1
           feld$ = "Bes" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           BesGesJahr.umsatz = BesGesJahr.umsatz + gesbrutto%
           BesGesGes% = BesGesGes% + gesbrutto%
 
           feldEU$ = "Bes" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           BesGesJahrEU.umsatz = BesGesJahrEU.umsatz + gesbruttoEU%
           BesGesGesEU% = BesGesGesEU% + gesbruttoEU%
           CALL QuickStore("UMSATZ")
         CASE 7
           MSArt$ = "Gutschriften"
           IF mo% = 0 THEN mo% = 1
           feld$ = "Gut" + STR$ (mo%,"00")
           feld$$ = feld$$ + gesbrutto%
           GutGesJahr.umsatz = GutGesJahr.umsatz + gesbrutto%
           GutGesGes% = GutGesGes% + gesbrutto%
 
           feldEU$ = "Gut" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ + gesbruttoEU%
           GutGesJahrEU.umsatz = GutGesJahrEU.umsatz + gesbruttoEU%
           GutGesGesEU% = GutGesGesEU% + gesbruttoEU%


           feld$ = "Rec" + STR$ (mo%,"00")
           feld$$ = feld$$ - gesbrutto%
           ReGesJahr.umsatz = REGesJahr.umsatz - gesbrutto%
           ReGesGes% = ReGesGes% - gesbrutto%
 
           feldEU$ = "Rec" + STR$ (mo%,"00") + "EU"
           feldEU$$ = feldEU$$ - gesbruttoEU%
           ReGesJahrEU.umsatz = REGesJahrEU.umsatz - gesbruttoEU%
           ReGesGesEU% = ReGesGesEU% - gesbruttoEU%

           CALL QuickStore("UMSATZ")
           MOUSE OFF 
       END SELECT 
       FILE "master"
       MOUSE OFF 
     SELECT NEXT LOCK INDEX codeku.master
     WEND 
   END IF 
 
 FILE "adressen"
 INDEX nachname.adressen
 SELECT KEY codeku% LOCK FILE "adressen" INDEX codeku.adressen
 AngGesGes.adressen = AngGesGes%
 REM ReGesGes.adressen = ReGesGes% - GutGesGes%
 ReGesGes.adressen = ReGesGes%
 LieGesGes.adressen = LieGesGes%
 AufGesGes.adressen = AufGesGes%
 BesGesGes.adressen = BesGesGes%
 GutGesGes.adressen = GutGesGes%
 
 AngGesGesEU.adressen = AngGesGesEU%
 REM ReGesGesEU.adressen = ReGesGesEU% - GutGesGesEU%
 ReGesGesEU.adressen = ReGesGesEU%
 LieGesGesEU.adressen = LieGesGesEU%
 AufGesGesEU.adressen = AufGesGesEU%
 BesGesGesEU.adressen = BesGesGesEU%
 GutGesGesEU.adressen = GutGesGesEU%
 STORE FILE "adressen"
 
 SELECT NEXT INDEX nachname.adressen
 SET STATUS "Berechne UmsÑtze fÅr Adresse: " + nachname.adressen
 codeku% = codeku.adressen
 nachname$ = nachname.adressen
 SET STATUS "Berechnung der UmsÑtze beendet!"
 FILE cfile$
 MOUSE ON 
 END SUB 
 
 
SUB DokSchutz(codems%,schutz%)
 SELECT FIRST FILE "stamm"
 passw$ = Dokpass.stamm
 IF schutz% < 1 THEN 
   CALL Fehler("Durch den Dokumentenschutz wird festgelegt, dass dieses Dokument nicht mehr geÑndert werden kann!","")
   REQUEST "Soll das Dokument jetzt geschÅtzt werden?","",135,req%
   IF req% = 1 THEN 
     SELECT FIRST FILE "master" INDEX codems.master
     SELECT KEY codems% LOCK FILE "master" INDEX codems.master
     dokschutz.master = 1
     STORE FILE "master"
     IF codedok.master > 0 THEN 
       SELECT FIRST FILE "Dokument" INDEX codedok.dokument
       SELECT KEY codedok.master LOCK FILE "Dokument" INDEX codedok.dokument
       IF EXISTS ( LEFT$ (_netpath$,2) + Dateiname.dokument) THEN 
         ON ERROR GOTO Mas301220031
         CALL open_doc( LEFT$ (_netpath$,2) + Dateiname.dokument,"")
         REM CALL SchutzDok("Paris")
         CALL set_password(passw$)
         CALL close_doc( - 1)
Mas301220031: 
         ON ERROR GOTO ErrorHandler
         DokPass.dokument = passw$
         STORE FILE "Dokument"
         REM call set_password(passw$)
       END IF 
     END IF 
   END IF 
 ELSE 
   IF NOT MNdisabled%("DOKSCHUTZAUFHEBEN") THEN 
     REQUEST "Soll der Dokumentenschutz jetzt aufgehoben werden?","",135,req%
     IF req% = 1 THEN 
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT KEY codems% LOCK FILE "master" INDEX codems.master
       dokschutz.master = 0
       STORE FILE "master"
       IF codedok.master > 0 THEN 
         SELECT FIRST FILE "Dokument" INDEX codedok.dokument
         SELECT KEY codedok.master LOCK FILE "Dokument" INDEX codedok.dokument
         IF EXISTS ( LEFT$ (_netpath$,2) + Dateiname.dokument) THEN 
           passw$ = DokPass.dokument
           ON ERROR GOTO Mas301220032
           CALL open_doc( LEFT$ (_netpath$,2) + Dateiname.dokument,"")
           REM CALL SchutzDok("Paris")
           CALL remove_password(passw$)
           CALL close_doc( - 1)
Mas301220032: 
           ON ERROR GOTO ErrorHandler
           DokPass.dokument = ""
           STORE FILE "Dokument"
           REM call set_password(passw$)
         END IF 
       END IF 
     END IF 
   ELSE 
     CALL Fehler("Das Dokument wurde bereits geschÅtzt","")
   END IF 
 END IF 
 END SUB 




SUB DokSchutzMahn(codemahn%,seite%,schutz%)
 SELECT FIRST FILE "stamm"
 passw$ = Dokpass.stamm
 IF schutz% < 1 THEN 
   CALL Fehler("Durch den Dokumentenschutz wird festgelegt, dass dieses Dokument nicht mehr geÑndert werden kann!","")
   REQUEST "Soll das Dokument jetzt geschÅtzt werden?","",135,req%
   IF req% = 1 THEN 
     SELECT FIRST FILE "mahnung" INDEX codemahn.mahnung
     SELECT KEY codemahn% LOCK FILE "mahnung" INDEX codemahn.mahnung
     feld1$ = "dokschutz" + STR$ (seite%,"9") + ".mahnung"
     REM dokschutz.mahnung = 1
     feld1$$ = 1
     STORE FILE "mahnung"
     feld2$ = "codedok" + STR$ (seite%,"9") + ".mahnung"
     REM IF codedok.mahnung > 0 THEN 
     IF feld2$$ > 0 THEN 
       SELECT FIRST FILE "Dokument" INDEX codedok.dokument
       SELECT KEY feld2$$ LOCK FILE "Dokument" INDEX codedok.dokument
       IF EXISTS ( LEFT$ (_netpath$,2) + Dateiname.dokument) THEN 
         ON ERROR GOTO Mahn301220031
         CALL open_doc( LEFT$ (_netpath$,2) + Dateiname.dokument,"")
         REM CALL SchutzDok("Paris")
         CALL set_password(passw$)
         CALL close_doc( - 1)
Mahn301220031: 
         ON ERROR GOTO ErrorHandler
         DokPass.dokument = passw$
         STORE FILE "Dokument"
         REM call set_password(passw$)
       END IF 
     END IF 
   END IF 
 ELSE 
   IF NOT MNdisabled%("DOKSCHUTZAUFHEBEN") THEN 
     REQUEST "Soll der Dokumentenschutz jetzt aufgehoben werden?","",135,req%
     IF req% = 1 THEN 
       SELECT FIRST FILE "mahnung" INDEX codemahn.mahnung
       SELECT KEY codemahn% LOCK FILE "mahnung" INDEX codemahn.mahnung
       feld1$ = "dokschutz" + STR$ (seite%,"9") + ".mahnung"
       REM dokschutz.mahnung = 0
       feld1$$ = 0
       STORE FILE "mahnung"
       feld2$ = "codedok" + STR$ (seite%,"9") + ".mahnung"
       IF feld2$$ > 0 THEN 
         SELECT FIRST FILE "Dokument" INDEX codedok.dokument
         SELECT KEY feld2$$ LOCK FILE "Dokument" INDEX codedok.dokument
         IF EXISTS ( LEFT$ (_netpath$,2) + Dateiname.dokument) THEN 
           passw$ = DokPass.dokument
           ON ERROR GOTO Mahn301220032
           CALL open_doc( LEFT$ (_netpath$,2) + Dateiname.dokument,"")
           REM CALL SchutzDok("Paris")
           CALL remove_password(passw$)
           CALL close_doc( - 1)
Mahn301220032: 
           ON ERROR GOTO ErrorHandler
           DokPass.dokument = ""
           STORE FILE "Dokument"
           REM call set_password(passw$)
         END IF 
       END IF 
     END IF 
   ELSE 
     CALL Fehler("Das Dokument wurde bereits geschÅtzt","")
   END IF 
 END IF 
 END SUB 
 
 




 '      ******************************************************
 '      ** Routinen fÅr Formular "WAgruppe" - Warengruppen **
 '      ******************************************************
 
SUB WAGRUPPEN()
  MOUSE OFF 
   CALL DFile(2,"OFFICE\produkt" + _fpw$)
   CALL DFile(2,"OFFICE\prgruppe" + _fpw$)
 CALL DFile(3,"WAGRUPPE" + _fpw$)
 CALL DFile(3,"warenart" + _fpw$)
 _formend% = 0
 prodform$ = "WAGRUPPE"
 WHILE _formend% = 0
   GRUPPENsub% = 0
   IF UCASE$ ( FORM ) LIKE prodform$ OR UCASE$ ( FORM ) LIKE prodform1$ THEN 
     REM Leeranweisung
   ELSE 
     CALL MNWAGRUPPE()
     MENU ON 
     IF _projekt$ <> "WAWI" THEN 
       OPEN FORM GPrjForm$ + prodform$
     ELSE 
       OPEN FORM GPrjForm$ + prodform1$
     END IF 
     SET f = superbase.form
     SET STATUS "Buchungsgruppen"
     SET HEADING title$ + " - Buchungsgruppen"
     GAppName$ = _netpath$ + "DOCP\produkt.pdf"
     MOUSE OFF 
     CALL WAGRPIntro()
   END IF 
   MOUSE ON 
   f.abbruch.enabled = 0
   f.abbruch.visible = 0
   f.suchen.enabled = - 1
   CALL ClearKBDBuffer()
   SET STATUS "Buchungsgruppen - Anzahl Buchungsgruppen" + STR$ ( RECCOUNT ("WAGruppe"),",9999999")
   WAIT MOUSE OR KEY OR MENU OR FOR 600
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL WAGRPrev()
   CASE CrsRight%,PgDn%
     CALL WAGRNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN 
     IF PAGE > 1 THEN 
       FORM 1
     ELSE 
       _formend% = 1
     END IF 
   END IF 
   SELECT CASE GRUPPENsub%
   CASE 1
     REM Umsatz
     codewgru% = Codewgru.wagruppe
     _codewgru% = Codewgru.wagruppe
     REM CALL UMSGRUPPE()
   CASE 2
     CALL WAGRPSuchen()
   CASE 3
     codewgru% = Codewgru.wagruppe
     _codewgru% = Codewgru.wagruppe
     CALL WAGRPwarenart()
   CASE 99
     f.umsatz.enabled = 0
     CALL ButDesabled()
     ON ERROR GOTO ErrorHandler
     SET EDIT SELECT ON 
     ENTER WGruppe.wagruppe,0
     SET EDIT SELECT OFF 
     CALL ButEnabled()
     f.umsatz.enabled = - 1
     IF abbruch% = - 1 THEN 
       SELECT KEY codewgru.wagruppe FILE "wagruppe" INDEX codewgru.wagruppe
       FORM 
       abbruch% = 0
     END IF 
   END SELECT 
   REM CALL BMCheckMail()
 WEND 
 _formend% = 0
 CLOSE FILE "WAGRUPPE"
 cugrp% = 0
 END SUB 
 
 
 ' GRUPPEN Intro 
 ' =======================================================================
 
SUB WAGRPIntro()
 FILE "wagruppe"
 INDEX CodewGRu.wagruppe
 SELECT FIRST 
 IF RECCOUNT ("wagruppe") > 1 THEN 
   FILE "warenart"
   SELECT WHERE novi1.warenart = 0
   SELECT FIRST 
   FILE "wagruppe"
   SELECT WHERE novi1.wagruppe = 0
   SELECT FIRST 
 END IF 
 a% = 0
 INDEX codewgru.wagruppe
 IF _codewgru% <> 0 THEN 
   SELECT FORM KEY _codewgru%
 ELSE 
   INDEX WGruppe.wagruppe
   SELECT FORM FIRST 
   IF EOF ("") THEN 
     BLANK 
     codewgru.wagruppe = SER ("wagruppe",1)
   END IF 
 END IF 
 FORM 
 SET INDEX WGruppe.wagruppe
 INDEX WGruppe.wagruppe
 END SUB 
 
 
 ' Buchungsgruppe Neu
 ' =======================================================================
 
SUB WAGRPNeu()
 IF WGruppe.wagruppe <> "" THEN CALL FStore("wagruppe")
 wagruppeSUB% = 99
 BLANK FORM 
 codewgru.wagruppe = SER ("wagruppe",1)
 wgruppe.wagruppe = "NEU"
 FORM 
 ENTER wgruppe.wagruppe,0
 END SUB 
 
 
 
 
 
 
 ' Buchungsgruppe Suchen
 ' =======================================================================
 
SUB WAGRPSuchen()
 IF NEW ("wagruppe") OR MOD ("wagruppe") THEN CALL FStore("wagruppe")
   alle$ = "n"
   _codewgru% = codewgru.wagruppe
   DIM Auswahl1$(1)
 
anf160120054: 
     FILE "wagruppe"
     INDEX codewgru.wagruppe
     SELECT FIRST 
     a% = 0
     REDIM Prodwagruppe$(1,1)
     REDIM Prodwagruppe$( RECCOUNT ("wagruppe") + 10)
     WHILE NOT EOF ("wagruppe")
       ok% = - 1
       IF alle$ = "n" THEN 
         IF novi1.wagruppe = 1 THEN ok% = 0
       END IF 
       IF ok% = - 1 THEN 
         Prodwagruppe$(a%) = WGruppe.wagruppe
         IF novi1.wagruppe = 1 THEN Prodwagruppe$(a%) = Prodwagruppe$(a%) + " ###"
         Prodwagruppe$(a%) = Prodwagruppe$(a%) + SPACE$ (100) + STR$ (codewgru.wagruppe,"000000")
         a% = a% + 1
       END IF 
       SELECT NEXT 
     WEND 
     Auswahl$ = Prodwagruppe$(0)
     Auswahl1$(0) = Auswahl$
     FILE "warenart"
      CREATE DIALOG "PREISLIS",0,0,200,364,title$,"MS Sans Serif",8
      ADD DIALOG "PREISLIS",4,0,0,199,340,0," Auswahl Buchungsgruppe"
      ADD DIALOG "PREISLIS",7,5,14,189,325,2,2,Prodwagruppe$,Auswahl1$," "
      ADD DIALOG "PREISLIS",1,17,345,55,16,1,"&OK",1,1
      ADD DIALOG "PREISLIS",1,77,345,55,16,0,"&Abbrechen",0,0
      ADD DIALOG "PREISLIS",1,137,345,55,16,0,"Alle",2,2
      DIALOG "PREISLIS",req%
      REMOVE DIALOG "PREISLIS"
      IF req% = 2 THEN 
        alle$ = "j"
        SELECT WHERE FILE "wagruppe"
        SELECT WHERE FILE "warenart"
        GOTO anf160120054
      END IF 
      IF req% = 1 THEN 
        codewgru% = VAL ( RIGHT$ (Auswahl1$(0),6))
          SELECT KEY codewgru% FILE "wagruppe" INDEX codewgru.wagruppe
          _codewgru% = codewgru.wagruppe
      END IF 
   FILE "wagruppe"
   SELECT FORM KEY _codewgru% FILE "wagruppe" INDEX codewgru.wagruppe
   SET INDEX WGruppe.wagruppe
   INDEX WGruppe.wagruppe
 FORM 
 END SUB 
 
   
 
 
SUB WAGRPrev()
 FILE "wagruppe"
 SET INDEX WGruppe.wagruppe
 INDEX WGruppe.wagruppe
 CALL PSelectPrev()
 FORM 
 END SUB 
 
SUB WAGRNext()
 FILE "wagruppe"
 SET INDEX WGruppe.wagruppe
 INDEX WGruppe.wagruppe
 CALL PSelectNext()
 FORM 
 END SUB 
 
 
SUB WAGRPwarenart()
 _codewgru% = codewgru.wagruppe
 _codewa% = Codewa.warenart
 IF _codewa% > 0 THEN CALL WARENART()
 END SUB 
 
 
 
 
 
SUB MNWAGRUPPE()
 MENU CLEAR 
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
 

















 
 '      ******************************************************
 '      ** Routinen fÅr Formular "Buchungskonto" - Warenart **
 '      ******************************************************
 
SUB WARENART()
  MOUSE OFF 
 CALL DFile(2,"OFFICE\PRGRUPPE" + _fpw$)
 CALL DFile(2,"OFFICE\PRODUKT" + _fpw$)
 CALL DFile(3,"WAGRUPPE" + _fpw$)
 CALL DFile(3,"warenart" + _fpw$)
 CALL DFile(3,"reingang" + _fpw$)
 CALL DFile(3,"rausgang" + _fpw$)
 _formend% = 0
 prodform$ = "Warenart"
 WHILE _formend% = 0
   GRUPPENsub% = 0
   IF UCASE$ ( FORM ) LIKE prodform$ THEN 
     REM Leeranweisung
   ELSE 
     CALL MNWarenart()
     MENU ON 
     IF _projekt$ <> "WAWI" THEN 
       OPEN FORM GPrjForm$ + prodform$
     ELSE 
       OPEN FORM GPrjForm$ + prodform1$
     END IF 
     SET f = superbase.form
     SET STATUS "Buchungskonto"
     SET HEADING title$ + " - Buchungskonto"
     GAppName$ = _netpath$ + "DOCP\produkt.pdf"
     MOUSE OFF 
     CALL AWAGRPIntro()
   END IF 
   MOUSE ON 
   f.abbruch.enabled = 0
   f.abbruch.visible = 0
   f.suchen.enabled = - 1
   CALL ClearKBDBuffer()
   SET STATUS "Buchungskonto - Anzahl Buchungskonten" + STR$ ( RECCOUNT ("Warenart"),",9999999")
   WAIT MOUSE OR KEY OR MENU OR FOR 600
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL AWAGRPrev()
   CASE CrsRight%,PgDn%
     CALL AWAGRNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN 
     IF PAGE > 1 THEN 
       FORM 1
     ELSE 
       _formend% = 1
     END IF 
   END IF 
   SELECT CASE GRUPPENsub%
   CASE 1
     REM Umsatz
     codewa% = codewa.Warenart
     _codewa% = codewa.Warenart
     REM CALL UMSGRUPPE()
   CASE 2
     CALL AWAGRPSuchen()
   CASE 3
     REM WAGruppe zuweisen
     CALL WAGruZuweis()
     CALL AWAGRPIntro()
   CASE 99
     f.umsatz.enabled = 0
     CALL ButDesabled()
     ON ERROR GOTO ErrorHandler
     SET EDIT SELECT ON 
     ENTER Warenart.Warenart,0
     SET EDIT SELECT OFF 
     CALL ButEnabled()
     f.umsatz.enabled = - 1
     IF abbruch% = - 1 THEN 
       SELECT KEY codewa.Warenart FILE "Warenart" INDEX codewa.Warenart
       FORM 
       abbruch% = 0
     END IF 
   END SELECT 
   REM CALL BMCheckMail()
 WEND 
 _formend% = 0
 CLOSE FILE "WAGRUPPE"
 CLOSE FILE "WARENART"
 cugrp% = 0
 END SUB 
 
 
SUB WAGruZuweis()
  _codewa% = codewa.warenart
  CALL WAGRPSuchen()
  IF _codewgru% > - 1 THEN 
    wgruppe$ = wgruppe.wagruppe
    REQUEST wgruppe$,"zuweisen?",130,req%
    IF req% = 1 THEN 
      SELECT FIRST FILE "warenart" INDEX codewa.warenart
      SELECT KEY _codewa% LOCK FILE "warenart" INDEX codewa.warenart
      codewgru.warenart = _codewgru%
      STORE FILE "Warenart"
      wagruppe$ = "Buchungsgruppe:" + wgruppe$
      REM jetzt alle in reingang und rausgang umweise
      CALL Fehler("Es werden jetzt in der Rechnungseingangsdatei und in der Rechnungsausgangsdatei Anpassungen vorgenommen!","")
      MOUSE OFF 
      FILE "reingang"
      UPDATE codewgru.reingang = _codewgru%:wgruppe.reingang = wgruppe$ WHERE codewa.reingang = _codewa%
      END UPDATE 
      UPDATE codewgru.rausgang = _codewgru%:wgruppe.rausgang = wgruppe$ WHERE codewa.rausgang = _codewa%
      END UPDATE 
      REQUEST "énderungen beendet!"
      MOUSE ON 
    END IF 
  END IF 
 END SUB 



 ' GRUPPEN Intro 
 ' =======================================================================
 
SUB AWAGRPIntro()
 FILE "Warenart"
 INDEX codewa.Warenart
 SELECT FIRST 
 IF RECCOUNT ("Warenart") > 1 THEN 
   FILE "warenart"
   SELECT WHERE novi1.warenart = 0
   SELECT FIRST 
 END IF 
 a% = 0
 INDEX codewa.Warenart
 IF _codewa% <> 0 THEN 
   SELECT FORM KEY _codewa%
 ELSE 
   INDEX Warenart.Warenart
   SELECT FORM FIRST 
   IF EOF ("Warenart") THEN 
     BLANK 
     codewa.Warenart = SER ("Warenart",1)
   END IF 
 END IF 
 _codewgru% = codewgru.warenart
 SELECT FIRST FILE "WAGRUPPE" INDEX codewgru.wagruppe
 SELECT KEY _codewgru% FILE "WAGRUPPE" INDEX codewgru.wagruppe
 wagruppe$ = "Buchungsgruppe:" + Wgruppe.wagruppe
 FORM 
 SET INDEX Warenart.Warenart
 INDEX Warenart.Warenart
 END SUB 
 
 

SUB AWAGRNext()
 FILE "Warenart"
 SET INDEX Warenart.Warenart
 INDEX Warenart.Warenart
 CALL PSelectNext()
 _codewgru% = codewgru.warenart
 SELECT FIRST FILE "WAGRUPPE" INDEX codewgru.wagruppe
 SELECT KEY _codewgru% FILE "WAGRUPPE" INDEX codewgru.wagruppe
 wagruppe$ = "Buchungsgruppe:" + Wgruppe.wagruppe
 FORM 
 END SUB 
 
 
SUB MNWarenart()
 MENU CLEAR 
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 


 ' Buchungsgruppe Neu
 ' =======================================================================
 
SUB AWAGRPNeu()
 IF Warenart.Warenart <> "" THEN CALL FStore("Warenart")
 REM WarenartSUB% = 99
 GRUPPENsub% = 99
 BLANK FORM 
 codewa.Warenart = SER ("Warenart",1)
 Warenart.Warenart = "NEU"
 wagruppe$ = "Buchungsgruppe: <ohne Zuordnung>"
 FORM 
 END SUB 
 
 
 
 
 
 
 ' Buchungsgruppe Suchen
 ' =======================================================================
 
SUB AWAGRPSuchen()
 IF NEW ("Warenart") OR MOD ("Warenart") THEN CALL FStore("Warenart")
   alle$ = "n"
   _codewa% = codewa.Warenart
   DIM Auswahl1$(1)
 
anf160120055: 
     a% = 0
     FILE "WAGRUPPE"
     INDEX wgruppe.wagruppe
     SELECT FIRST FILE "WAGRUPPE"
     FILE "Warenart"
     INDEX Warenart.warenart
     SELECT FIRST 
     rec1a% = RECCOUNT ("wagruppe") + RECCOUNT ("warenart")
     REDIM ProdGruppen1$(1,1)
     REDIM ProdGruppen1$(rec1a%)
     WHILE NOT EOF ("wagruppe")
       FILE "wagruppe"
       sok% = - 1
       IF alle$ = "n" THEN 
         IF novi1.wagruppe = 1 THEN sok% = 0
       END IF 
       IF sok% THEN 
         codewgru% = codewgru.wagruppe
         IF novi1.wagruppe = 1 THEN 
           ProdGruppen1$(a%) = wgruppe.wagruppe + " ### " + SPACE$ (100) + STR$ (codewgru.wagruppe,"000000")
         ELSE 
           ProdGruppen1$(a%) = wgruppe.wagruppe + SPACE$ (100) + STR$ (codewgru.wagruppe,"000000")
         END IF 
         a% = a% + 1
         FILE "warenart"
         INDEX warenart.warenart
         SELECT FIRST FILE "warenart"
         WHILE NOT EOF ("warenart")
           ook% = - 1
           IF alle$ = "n" THEN 
             IF novi1.warenart = 1 THEN ook% = 0
           END IF 
           IF dat$ LIKE "reing*" THEN 
             IF rea.warenart = 1 THEN ook% = 0
           END IF 
           IF dat$ LIKE "rausg*" THEN 
             IF rea.warenart = 2 THEN ook% = 0
           END IF 
           IF codewgru.warenart <> codewgru% THEN ook% = 0
           IF ook% THEN 
             IF novi1.wagruppe = 1 THEN 
               ProdGruppen1$(a%) = "  |-- " + Warenart.warenart + " ### " + SPACE$ (100) + STR$ (codewa.warenart,"000000")
             ELSE 
               ProdGruppen1$(a%) = "  |-- " + Warenart.warenart + SPACE$ (100) + STR$ (codewa.warenart,"000000")
             END IF 
             a% = a% + 1
           END IF 
           SELECT NEXT FILE "warenart"
         WEND 
         REM war1old$ = war1$
       END IF 
       FILE "WAGRUPPE"
       SELECT NEXT FILE "Wagruppe"
     WEND 


     Auswahl$ = ProdWarenart$(0)
     Auswahl1$(0) = Auswahl$
 MOUSE ON 
nochmal240120051: 
 CREATE DIALOG "KEYWORD",0,0,233,310,"Buchungskonto","MS Sans Serif",8
 ADD DIALOG "KEYWORD",4,0,1,233,280,0,""
 ADD DIALOG "KEYWORD",9,4,12,21,24,2
 ADD DIALOG "KEYWORD",5,31,14,189,29,0,"Bitte wÑhlen Sie das Buchungskonto aus, das in den aktuellen Rech.eingang aufgenommen werden soll:"
 ADD DIALOG "KEYWORD",5,5,258,189,19,0,"Falls das Buchungskonto nicht existiert, ist dieses unter Stammdaten/Buchungkonto zu erfassen!"
 ADD DIALOG "KEYWORD",7,5,38,222,222,0,2,ProdGruppen1$,Auswahl$,prompt$
 REM ADD DIALOG "KEYWORD",6,31,178,188,12,8,0,KW$,20
 ADD DIALOG "KEYWORD",1,37,292,55,15,1,"&OK",1,1
 ADD DIALOG "KEYWORD",1,93,292,55,15,0,"&Abbrechen",0,0
 ADD DIALOG "KEYWORD",1,149,292,55,15,0,"Alle",2,2
 DIALOG "KEYWORD",req%
 REMOVE DIALOG "KEYWORD"
 IF req% = 2 THEN 
   alle$ = "j"
   SELECT WHERE FILE "Warenart"
   GOTO anf160120055 
 END IF 
 IF req% < 2 AND req% > 0 THEN 
   REM IF kw$ = "" THEN kw$ = Auswahl$(0)
   REM 17012005
   IF Auswahl$(0) LIKE "*|--*" THEN 
     codewa% = VAL ( RIGHT$ (Auswahl$(0),6))
     SELECT KEY codewa% FILE "Warenart" INDEX codewa.Warenart
     _codewa% = codewa.Warenart
   ELSE 
     CALL Fehler("Sie dÅrfen keine Buchungsgruppe auswÑhlen, sondern mÅssen ein Buchungskonto auswÑhlen!","Die Buchungskonten sind mit |-- gekennzeichnet!")
     GOTO nochmal240120051
   END IF 
 END IF 


   FILE "Warenart"
   SELECT FORM KEY _codewa% FILE "Warenart" INDEX codewa.Warenart
   SET INDEX Warenart.Warenart
   INDEX Warenart.Warenart
   _codewgru% = codewgru.warenart
   SELECT FIRST FILE "WAGRUPPE" INDEX codewgru.wagruppe
   SELECT KEY _codewgru% FILE "WAGRUPPE" INDEX codewgru.wagruppe
   wagruppe$ = "Buchungsgruppe:" + Wgruppe.wagruppe
 FORM 
 END SUB 
 
   
 
 
SUB AWAGRPrev()
 FILE "Warenart"
 SET INDEX Warenart.Warenart
 INDEX Warenart.Warenart
 CALL PSelectPrev()
 _codewgru% = codewgru.warenart
 SELECT FIRST FILE "WAGRUPPE" INDEX codewgru.wagruppe
 SELECT KEY _codewgru% FILE "WAGRUPPE" INDEX codewgru.wagruppe
 wagruppe$ = "Buchungsgruppe:" + Wgruppe.wagruppe
 FORM 
 END SUB 
 
 
 
 


SUB ADRNoteBig(fnam$,dd$)
 REM IF disabled%("STAMMBLATT") THEN GOTO stend120620051
  GTElDat$ = "TELEFON"
   notizn$ = fnam$ + "." + dd$
   LÑnge$ = FIELDINFO$ (notizn$,4)
   lÑnge% = VAL (LÑnge$)
   inh$ = notizn$$
   SET EDIT SELECT OFF 
   SET EDIT SELECT ON 
   IF dd$ LIKE "ADRE*" THEN 
     nr$ = Nachname.dd$ + "/" + vorname.dd$
   END IF 
   IF dd$ LIKE "AKQUI*" THEN 
     nr$ = Nachname.dd$
   END IF 
   CREATE DIALOG GTelDat$,0,0,443,253,"Notiz","MS Sans Serif",8
   ADD DIALOG GTelDat$,5,5,6,56,10,0,"Kunde:"
   ADD DIALOG GTelDat$,5,62,6,380,9,128,nr$
   ADD DIALOG GTelDat$,5,5,22,165,10,0,"Notiz: zum Zeilenumbruch Strg+Enter drÅcken"
   REM ADD DIALOG GTelDat$,6,5,32,430,200,4,0,inh$
   ADD DIALOG GTelDat$,6,5,32,430,200,4,3,inh$,lÑnge%
   ADD DIALOG GTelDat$,1,170,235,55,15,1,"&OK",1,1
   ADD DIALOG GTelDat$,1,237,235,55,15,0,"&Drucken",2,2
   SET EDIT SELECT OFF 
   DIALOG GTelDat$,req%
   SET EDIT SELECT OFF 
   REMOVE DIALOG ALL 
   IF inh$ <> notizn$$ THEN 
     REM es wurde geÑndert
     IF NOT disabled%("ADRBEARB") THEN 
       REQUEST "énderungen speichern?","",130,req%
       IF req% = 1 THEN 
         SELECT CURRENT LOCK FILE dd$
         notizn$$ = LEFT$ (inh$,lÑnge%)
         CALL QuickStore(dd$)
       END IF 
     END IF 
   END IF 
   IF req% = 2 THEN 
     PRINT ;
     ? inh$
     DISPLAY ;
   END IF 
stend120620051: 
   SET EDIT SELECT ON 
 END SUB 


 REM Ausdruck der Lieferanten, die im Zeitraum von ..bis eine Rechnung gestellt haben
SUB liefakt()
 REDIM AdrFound$(1,1)
 REDIM AdrFound$(20000)
 REM CALL Fehler("Generierung einer XLS-Tabelle aller Lieferanten, die im Zeitraum von ..bis eine Rechnung gestellt haben","")
     IF bis$ = "" THEN bis$ = DATE$ ( TODAY ,"0d.mm.yyyy")
lief241120054: 
     CREATE DIALOG "UMSATZ",0,0,233,142,"Lieferanten-XLS","MS Sans Serif",8
     ADD DIALOG "UMSATZ",4,0,1,233,117,0,""
     ADD DIALOG "UMSATZ",9,6,12,20,21,2
     ADD DIALOG "UMSATZ",5,5,35,200,9,0,"Bitte geben Sie den Zeitraum ein, fÅr den Sie eine"
     ADD DIALOG "UMSATZ",5,5,45,200,10,0,"LieferantenÅbersicht an Hand der Rechnungseingangsdatei"
     ADD DIALOG "UMSATZ",5,5,55,200,10,0,"wÅnschen."
     ADD DIALOG "UMSATZ",5,5,65,200,8,0,"Wenn Sie keinen Zeitraum bestimmen, werden sÑmtliche"
     ADD DIALOG "UMSATZ",5,5,75,200,9,0,"Lieferanten angezeigt."
     ADD DIALOG "UMSATZ",6,62,97,40,13,0,0,von$,10
     ADD DIALOG "UMSATZ",6,153,97,40,13,0,0,bis$,10
     ADD DIALOG "UMSATZ",5,40,99,18,9,0,"von:"
     ADD DIALOG "UMSATZ",5,133,99,13,9,0,"bis:"
     ADD DIALOG "UMSATZ",1,57,124,55,15,1,"&OK",1,1
     ADD DIALOG "UMSATZ",1,114,124,55,15,0,"&Abbrechen",0,0
     DIALOG "UMSATZ",req%
     REMOVE DIALOG ALL 
     IF req% = 0 THEN GOTO lief241120053
     IF LTRIM$ (von$) = "" THEN von$ = "01.01.0001"
     IF NOT DateOK%(von$) THEN 
       CALL Fehler("Datum von ... ist nicht in Ordnung","Bitte korrigieren!")
       GOTO lief241120054
     END IF 
     IF NOT DateOK%(bis$) THEN 
       CALL Fehler("Datum bis ... ist nicht in Ordnung","Bitte korrigieren!")
       GOTO lief241120054
     END IF 
     von% = DAYS (von$)
     bis% = DAYS (bis$)
     GADRDat$ = "Adressen"
     GTELDAT$ = "Telefon"
 FILE "ADRESSEN"
 INDEX codeku.adressen
 FILE "telefon"
 INDEX codeku
 SELECT FIRST 
 FILE "reingang"
 INDEX codeku.reingang
 SELECT FIRST 
 i% = 0
 f% = 0
 j% = RECCOUNT ("reingang")
 IF GCODIE% = - 1 THEN 
   CALL SearchInitADR()
 END IF 
 WHILE NOT EOF ("reingang")
   MOUSE OFF 
   i% = i% + 1
   codeku% = codeku.reingang
   IF NOT EXISTS (codeku%,codeku.ADRTEMP) THEN 
     IF datum.reingang >= von% AND Datum.reingang <= bis% THEN 
       AdrFound$(f%) = STR$ (codeku,"000000")
       f% = f% + 1
       SELECT FIRST FILE "adressen" INDEX codeku.adressen
       SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
       REM CALL Fehler(nachname.adressen,"")
       REM anrede$ = LTRIM$ (Anrede.adressen)
       REM titel$ = LTRIM$ (Titel.adressen)
       REM IF anrede$ LIKE "Herr*" OR anrede$ LIKE "Fr*" OR anrede$ LIKE "Fam*" OR anrede$ LIKE "Ehe*" OR anrede$ LIKE "Kind*" THEN 
         REM nachname$ = LTRIM$ (nachname.adressen)
         REM vorname$ = LTRIM$ (vorname.adressen)
       REM ELSE 
         REM nachname$ = LTRIM$ (nachname.adressen)
         REM vorname$ = LTRIM$ (Geburtsname.adressen)
       REM END IF 
       REM gebdat% = Geburtstag.adressen
       REM CALL WriteAdrTemp(codeku%,anrede$,titel$,nachname$,vorname$,gebdat%)
       BLANK FILE "adrtemp"
       codeku.adrtemp = codeku%
       STORE FILE "adrtemp"
       
             IF GCODIE% = - 1 THEN 
               CALL SearchVorbAdr("ADRESSEN")
             END IF 
             IF EXISTS (codeku%,codeku.telefon) THEN 
               FILE "telefon"
               INDEX codetel.telefon
               SELECT FIRST 
               SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
               GTELDAT$ = "TELEFON"
               IF _projekt$ <> "WAWI" THEN CALL SearchVorbTel("ADRESSEN")
               telefon$ = nummer.telefon
               FILE "adressen"
             END IF 
             IF GCODIE% = - 1 THEN 
               ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
             END IF 
     END IF 
   END IF 
   SET STATUS STR$ (i%,"999999") + " verarbeitet von " + STR$ (j%,"999999") + " /gefunden " + STR$ (f%,"999999")
   SELECT NEXT FILE "reingang" INDEX codeku.reingang
 WEND 
 CALL Fehler("Fertig mit der Zusammenstellung","")
 IF f% > 0 THEN 
    a% = f%
    IF GCODIE% = - 1 THEN 
         c$ = "aa"
         req3% = CALL ("_SearchShow",c$)
         REM REQUEST c$,"",2
         REM ret% = CALL ("_SearchClose")
         IF VAL (c$) <> 0 THEN 
           AdrSuche% = VAL (c$)
           adrfound% = VAL (c$)
           ok% = 0
           SET STATUS "Adresse gefunden..."
         END IF 
         IF req3% = 2 THEN 
           adrser% = 1
           CALL SerieNeu1(GAdrDat$)
           GOTO Ende1
         END IF 
         ja% = - 1
         IF disabled%("ADRDrucken") THEN ja% = 0
         IF req3% = 3 AND ja% = - 1 THEN 
           GADRDat$ = "ADRESSEN"
           CALL DFile(2,"OFFICE\aktionen" + _fpw$)
           REM drucken
           ON ERROR GOTO liefxls190620021
           DIM dlg AS Dialog
           DIM control AS DialogControl
liefxls190620021: 
           ON ERROR GOTO ErrorHandler
           Superbase.Dialogs.Add("ADRFilter")
           SET dlg = Superbase.Dialogs.ADRFilter
           dlg.Move(0,0,158,111)
           dlg.Caption = title$
           dlg.FontName = "MS Sans Serif"
           dlg.FontSize = 8
 
           SET control = dlg.Add("DialogFrame2","DialogFrame")
           control.Move(5,7,141,77)
           control.Caption = "Druckoptionen"
 
           SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
           control.Move(11,24,85,10)
           control.Caption = "Alle Angaben drucken"
           control.Bind("KurzLang$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCheckBox2","DialogCheckBox")
           control.Move(11,38,85,11)
           control.Caption = "Termine mitdrucken"
           control.Bind("Terminejn$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           REM SET control = dlg.Add("DialogCheckBox3","DialogCheckBox")
           REM control.Move(11,53,115,11)
           REM control.Caption = "VertrÑge zur Adresse drucken!"
           REM control.Bind("VertragJN$")
           REM control.ValueOn = "j"
           REM control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCheckBox4","DialogCheckBox")
           control.Move(11,68,105,11)
           control.Caption = "als Telefonliste"
           control.Bind("adrtelefon$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
           control.Move(22,89,48,15)
           control.Default = 1
           control.Caption = "&Weiter"
           control.ReturnValue = 1
 
           SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
           control.Move(74,89,48,15)
           control.Caption = "&Abbruch"
           control.ReturnValue = 0
           control.Cancel = 1
           DIALOG "ADRFilter",req%
           REMOVE DIALOG ALL 
           IF req% = 1 THEN 
             REM jetzt das Array auslesen und in eine Datei speichern
             FILE GADRDat$
             cindex$ = INDEX 
             INDEX codeku.Gadrdat$
             CALL DFile(2,"OFFICE\ADRLEER" + _fpw$)
             FOR xi% = 0 TO a% - 1
               codeku% = VAL ( RIGHT$ (AdrFound$(xi%),6))
               SELECT FIRST FILE GADRDat$ INDEX codeku.GADRDat$
               SELECT KEY codeku% FILE GADRDat$ INDEX codeku.GADRDat$
               anrede$ = Anrede.GadrDat$
               titel$ = Titel.GADRDat$
               IF anrede$ LIKE "Herr*" OR anrede$ LIKE "Fr*" OR anrede$ LIKE "Fam*" OR anrede$ LIKE "Ehe*" OR anrede$ LIKE "Kind*" THEN 
                 nachname$ = LTRIM$ (nachname.GAdrDat$)
                 vorname$ = LTRIM$ (vorname.GAdrDat$)
               ELSE 
                 nachname$ = LTRIM$ (nachname.GAdrDat$)
                 vorname$ = LTRIM$ (Geburtsname.GAdrDat$)
               END IF 
               gebdat% = Geburtstag.GAdrDat$
               REM CALL WriteAdrTemp(codeku%,anrede$,titel$,nachname$,vorname$,gebdat%)
               BLANK FILE "ADRLEER"
               a% = CopyRecord%(GADRDat$,"ADRLEER")
               Nachname.adrleer = nachname$
               Vorname.adrleer = Vorname$
               STORE FILE "ADRLEER"
               UNLOCK FILE "ADRLEER"
               SET STATUS STR$ (xi%,",999999") + " Adressen fÅr Druck aufbereitet!"
             NEXT xi%
             REM dann drucken auslîsen
             Wbericht$ = "ADRLEER"
             title2$ = "Adressliste "
             CALL VPEADRGr(Wbericht$,FormatPrint$,title2$,Terminejn$,KurzLang$)
             WAIT MOUSE OR KEY OR MENU 
             MOUSE OFF 
             INDEX cindex$
             REMOVE FROM FILE "ADRLEER"
             MOUSE ON 
             REM CALL Fehler("Druck beendet!","")
             GOTO lief241120053
           END IF 
         END IF 
       END IF 
 END IF 
lief241120053: 
 ON ERROR GOTO ErrorHandler
 MOUSE ON 
 END SUB 
 
 
  
SUB ReZuGut(codeo%)
  scode% = knr% * 10 + 2
     REDIM auswahl$( RECCOUNT ("master"),1)
     REDIM auswahl$( RECCOUNT ("master"))
     REDIM positionen$( RECCOUNT ("master"))
 
     FILE "master"
     SELECT WHERE 
 
     INDEX quickcodeku.master
     SELECT FIRST 
     SELECT KEY scode% INDEX quickcodeku.master
     counter% = - 1
     WHILE NOT EOF ("master") AND quickcodeku.master = scode%
       counter% = counter% + 1
       IF euromaske% = 1 THEN 
         Positionen$(counter%) = Nummer.Master + "   " + DATE$ (Datum.MASTER,"0d.mm.yy") + "    " + STR$ (GesBruttoEU.MASTER,",999999999.00") + " EUR" + nachname.MASTER + + "  [" + projekt.master + "]" + + SPACE$ (190) + STR$ (codems.master,"000000")
       END IF 
       SELECT NEXT INDEX quickcodeku.master
     WEND 
 
     FILE "master"
     INDEX codems.master
 
     _cums1% = 0
     MOUSE ON 
     IF counter% > - 1 THEN 
       CREATE DIALOG "REGISTER",0,0,522,350,title$,"MS Sans Serif",8
       ADD DIALOG "REGISTER",5,5,4,240,10,0,"WÑhlen Sie einen Beleg"
       ADD DIALOG "REGISTER",7,5,19,509,310,8,2,Positionen$,Auswahl$,Positionen$(0)
       ADD DIALOG "REGISTER",1,209,330,48,16,1,"&OK",1,1
       ADD DIALOG "REGISTER",1,258,330,48,16,0,"&Abbrechen",0,0
       DIALOG "REGISTER",req%
       REMOVE DIALOG "REGISTER"
       IF req% < 1 THEN 
         REM SELECT FIRST FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
         REM SELECT KEY codekurech% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
         REM knr% = codekurech%
         REQUEST "Auswahl wurde abgebrochen! ","",2
         REM IF req% = 0 THEN GOTO anf111020051
         REM IF req% = 1 THEN GOTO anf111020052
       END IF 
       REM GOTO Adrsel160120002
     END IF 
     IF req% > 0 THEN 
       REM CALL Fehler("Belegnr","BuchnrRe")
       codems% = VAL ( RIGHT$ (Auswahl$(0),6))
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT KEY codems% FILE "master" INDEX codems.master
       BuchnrRe$ = Belegnr.master
       oldReNr$ = Nummer.master
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT KEY codeo% LOCK FILE "master" INDEX codems.master
       BuchnrRe.master = BuchnrRe$
       oldReNr.master = oldReNr$
       STORE FILE "master"
       IF EXISTS (codeo%,codems.rausgang) THEN 
         SELECT FIRST FILE "rausgang" INDEX codems.rausgang
         SELECT KEY codeo% LOCK FILE "rausgang" INDEX codems.rausgang
         BuchnrRe.rausgang = BuchnrRe$
         oldReNr.rausgang = oldReNr$
         STORE FILE "rausgang"
       END IF 
       FORM 
     END IF 
 END SUB 


SUB ADRNoteBig(fnam$,dd$)
   ON ERROR GOTO ErrorHandler
   notizn$ = fnam$ + "." + dd$
   LÑnge$ = FIELDINFO$ (notizn$,4)
   lÑnge% = VAL (LÑnge$)
   inh$ = notizn$$
   SET EDIT SELECT OFF 
   SET EDIT SELECT ON 
   IF dd$ LIKE "ADR*" THEN 
     nr$ = Nachname.dd$ + "/" + vorname.dd$
     Label$ = "Kunde"
     IF dd$ LIKE "ADRESSEN" AND inh$ = "" AND fnam$ LIKE "EmpfehlTXTxx" THEN 
       REM CALL Fehler("Es wurde unter Empfehlung noch nicht eingetragen!","")
       REQUEST "Es wurde unter Empfehlung noch nichts eingetragen!","Mîchten Sie einen Eintrag erzeugen lassen?",130,req%
       IF req% = 1 THEN 
         codekuakt% = codeku.adressen
         CALL GenerateEmpf(codekuakt%,0)
         inh$ = notizn$$
       END IF 
     END IF 
   END IF 
   IF dd$ LIKE "akqui*" THEN 
     nr$ = Nachname.GAkquiDat$
     Label$ = "Kunde"
   END IF 
anf170920051: 
   CREATE DIALOG GTelDat$,0,0,543,303,"Notiz","Courier New",9
   ADD DIALOG GTelDat$,5,5,6,56,10,0,Label$
   ADD DIALOG GTelDat$,5,62,6,380,9,128,nr$
   ADD DIALOG GTelDat$,5,5,22,165,10,0,"Notiz: zum Zeilenumbruch Strg+Enter drÅcken"
   REM ADD DIALOG GTelDat$,6,5,32,430,200,4,0,inh$
   ADD DIALOG GTelDat$,6,5,32,530,250,4,3,inh$,lÑnge%
   ADD DIALOG GTelDat$,1,195,285,55,15,1,"&OK",1,1
   ADD DIALOG GTelDat$,1,255,285,55,15,0,"A&bbruch",0,0
   ADD DIALOG GTelDat$,1,315,285,55,15,0,"&Drucken",2,2
   SET EDIT SELECT OFF 
   DIALOG GTelDat$,req%
   SET EDIT SELECT OFF 
   REMOVE DIALOG ALL 
 
   IF req% = 0 THEN GOTO end230420062
 
   IF inh$ <> notizn$$ THEN 
     REM es wurde geÑndert
     IF NOT disabled%("ADRBEARB") AND LABEL$ LIKE "Kunde" THEN 
       REQUEST "énderungen speichern?","",130,req%
       IF req% = 1 THEN 
         SELECT CURRENT LOCK FILE dd$
         notizn$$ = LEFT$ (inh$,lÑnge%)
         STORE FILE dd$
       END IF 
     END IF 
   END IF 
   IF req% = 2 THEN 
     PRINT ;
     ? inh$
     DISPLAY ;
   END IF 
   SET EDIT SELECT ON 
end230420062: 
 END SUB 
 

SUB AQNoteBig()
   codeku% = codeku.GAkquiDat$
   
   SELECT FIRST FILE "adressen" INDEX codeku.adressen
   SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen

   ON ERROR GOTO ErrorHandler
   notizn$ = Postanschrift.adressen + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
   IF Datum.GAkquiDat$ > 0 THEN notizn$ = notizn$ + "Datum: " + DATE$ (Datum.GAkquiDat$,"0d.mm.yyyy")
   IF Termin.GAkquiDat$ > 0 THEN notizn$ = notizn$ + "  Termin: " + DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy")
   IF Uhrzeit.GAkquiDat$ > 0 THEN notizn$ = notizn$ + "  Uhrzeit: " + LEFT$ ( TIME$ (Uhrzeit.GAkquiDat$,"hh:mm:ss"),5)
   notizn$ = notizn$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
   notizn$ = notizn$ + "Termin fÅr Projekt: " + Projekt.GAkquiDat$ + CHR$ (13) + CHR$ (10)
   notizn$ = notizn$ + "Termin fÅr Mitarbeiter: " + bearbeiter.GAkquiDat$ + CHR$ (13) + CHR$ (10)
   
   notizn$ = notizn$ + "Notiz:" + CHR$ (13) + CHR$ (10)
   notizn$ = notizn$ + Notiz.GAkquiDat$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
   notizn$ = notizn$ + "Ergebnis:" + CHR$ (13) + CHR$ (10)
   notizn$ = notizn$ + Ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
   REM LÑnge$ = FIELDINFO$ (notizn$,4)

   REM lÑnge% = VAL (LÑnge$)
   lÑnge% = 4000
   inh$ = notizn$
   SET EDIT SELECT OFF 
   SET EDIT SELECT ON 
   IF dd$ LIKE "AKQ*" THEN 
     nr$ = fnam$
     Label$ = ""
   END IF 
anf070120071: 
   CREATE DIALOG GTelDat$,0,0,543,303,"Notiz","Courier New",9
   ADD DIALOG GTelDat$,5,5,6,56,10,0,Label$
   ADD DIALOG GTelDat$,5,62,6,380,9,128,nr$
   ADD DIALOG GTelDat$,5,5,22,165,10,0,"Notiz: keine Eingabe tÑtigen"
   REM ADD DIALOG GTelDat$,6,5,32,430,200,4,0,inh$
   ADD DIALOG GTelDat$,6,5,32,530,250,4,3,inh$,lÑnge%
   ADD DIALOG GTelDat$,1,195,285,55,15,1,"&OK",1,1
   ADD DIALOG GTelDat$,1,255,285,55,15,0,"A&bbruch",0,0
   ADD DIALOG GTelDat$,1,315,285,55,15,0,"&Drucken",2,2
   SET EDIT SELECT OFF 
   DIALOG GTelDat$,req%
   SET EDIT SELECT OFF 
   REMOVE DIALOG ALL 
 
   IF req% = 0 THEN GOTO END 070120072
 
   IF inh$ <> notizn$ AND andi$ = "blond" THEN 
     REM es wurde geÑndert
       REQUEST "énderungen speichern?","",130,req%
       IF req% = 1 THEN 
         SELECT CURRENT LOCK FILE dd$
         notizn$$ = LEFT$ (inh$,lÑnge%)
         STORE FILE dd$
       END IF 
   END IF 
   IF req% = 2 THEN 
     PRINT ;
     ? inh$
     DISPLAY ;
   END IF 
   SET EDIT SELECT ON 
end070120072: 
 END SUB 
 





 
SUB EmailBig()
   codeku% = codeku.GAkquiDat$
   SELECT FIRST FILE "adressen" INDEX codeku.adressen
   SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
 
   ON ERROR GOTO ErrorHandler
   notizn$ = Postanschrift.adressen + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
   IF EMAILSendDat.GAkquiDat$ > 0 THEN notizn$ = notizn$ + "Sende Datum : " + DATE$ (EMAILSendDat.GAkquiDat$,"0d.mm.yyyy")
   IF EMAILSendZeit.GAkquiDat$ > 0 THEN notizn$ = notizn$ + "  Uhrzeit: " + LEFT$ ( TIME$ (EMAILSendZeit.GAkquiDat$,"hh:mm:ss"),5)
   notizn$ = notizn$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
   notizn$ = notizn$ + "Senden an:  " + emailto.GAkquiDat$ + CHR$ (13) + CHR$ (10)
   notizn$ = notizn$ + "Senden CC:  " + emailcc.GAkquiDat$ + CHR$ (13) + CHR$ (10)
   notizn$ = notizn$ + "Senden BCC: " + emailbcc.GAkquiDat$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
   notizn$ = notizn$ + "Betreff: " + emailbetreff.GAkquiDat$ + CHR$ (13) + CHR$ (10)


   notizn$ = notizn$ + emailtext.GAkquiDat$ + CHR$ (13) + CHR$ (10) + emailtext1.GAkquiDat$ + CHR$ (13) + CHR$ (10)
   REM LÑnge$ = FIELDINFO$ (notizn$,4)
 
   remm lÑnge% = VAL (LÑnge$)
   lÑnge% = 4000
   inh$ = notizn$
   SET EDIT SELECT OFF 
   SET EDIT SELECT ON 
   IF dd$ LIKE "AKQ*" THEN 
     nr$ = fnam$
     Label$ = ""
   END IF 
anf070120071: 
   CREATE DIALOG GTelDat$,0,0,543,303,"Notiz","Courier New",9
   ADD DIALOG GTelDat$,5,5,6,56,10,0,Label$
   ADD DIALOG GTelDat$,5,62,6,380,9,128,nr$
   ADD DIALOG GTelDat$,5,5,22,165,10,0,"Notiz: keine Eingabe tÑtigen!!"
   REM ADD DIALOG GTelDat$,6,5,32,430,200,4,0,inh$
   ADD DIALOG GTelDat$,6,5,32,530,250,4,3,inh$,lÑnge%
   ADD DIALOG GTelDat$,1,195,285,55,15,1,"&OK",1,1
   ADD DIALOG GTelDat$,1,255,285,55,15,0,"A&bbruch",0,0
   ADD DIALOG GTelDat$,1,315,285,55,15,0,"&Drucken",2,2
   SET EDIT SELECT OFF 
   DIALOG GTelDat$,req%
   SET EDIT SELECT OFF 
   REMOVE DIALOG ALL 
 
   IF req% = 0 THEN GOTO END 070120073
 
   IF inh$ <> notizn$ AND andi$ = "blond" THEN 
     REM es wurde geÑndert
       REQUEST "énderungen speichern?","",130,req%
       IF req% = 1 THEN 
         SELECT CURRENT LOCK FILE dd$
         notizn$$ = LEFT$ (inh$,lÑnge%)
         STORE FILE dd$
       END IF 
   END IF 
   IF req% = 2 THEN 
     PRINT ;
     ? inh$
     DISPLAY ;
   END IF 
   SET EDIT SELECT ON 
end070120073:  
 END SUB 


SUB MahnsperrADR(codeku%)

 END SUB 


FUNCTION GetMahnNr$()
 numm1$ = ""
       IF BelegNrArt.stamm = 0 THEN 
         nummerok$ = "False"
           td$ = DATE$ ( TODAY ,"ddmmyy")
           td2$ = ReadConfig$("FACTURA","TODAY")
           IF td$ <> td2$ THEN 
             CALL WriteConfig("FACTURA","TODAY",td$)
             CALL WriteConfig("FACTURA","LASTNUM","1")
             nnum% = 1
           ELSE 
             nnum% = VAL (ReadConfig$("FACTURA","LASTNUM")) + 1
             CALL WriteConfig("FACTURA","LASTNUM", LTRIM$ ( STR$ (nnum%,"9999")))
           END IF 
           numm1$ = "M" + DATE$ ( TODAY ,"ddmmyy") + STR$ (nnum%,"000")
       END IF 
       IF BelegNrArt.stamm > 0 THEN 
         nummerok$ = "False"
           SELECT FIRST LOCK FILE "stamm"
           LASTMahnung.stamm = LastMahnung.stamm + 1
           nnum% = LASTMahnung.stamm
           STORE FILE "stamm"
           IF BelegNrArt.stamm = 2 THEN 
             numm1$ = "M" + LTRIM$ ( STR$ (nnum%,"99999999999999"))
           END IF 
           IF BelegNrArt.stamm = 1 THEN 
             numm1$ = "M" + DATE$ ( TODAY ,"ddmmyy") + "000/" + LTRIM$ ( STR$ (nnum%,"99999999999999"))
           END IF 
       END IF 
       GetMahnNr$ = numm1$
 END FUNCTION 

