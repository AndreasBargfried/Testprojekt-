 

 '      ***************************************************************************
 '      ** Warenwirtschaft fÅr Kleinbetriebe (c)'93,'05 CODIE, Andreas Bargfried **
 '      ** Version 2006 A01                                                      **
 '      ** Stand: 01.02.2006                                                     ** 
 '      ***************************************************************************
 ' 05.01.2003 Korrektur Mahnungen/Zahlungseingang
 ' 08.01.2003 Kopieren Projekt
 '            énderung Projektadressliste
SUB main()
 MOUSE OFF 
 REM DEBUG OFF 
 CLOSE ALL 
 REM OPEN FORM "START"
 IF NOT PROGRAMFILE ("WORD1") THEN LOAD "WORD1.SBR", NEW 
 IF NOT PROGRAMFILE ("CLIB") THEN LOAD "CLIB.SBR", NEW 
 IF NOT PROGRAMFILE ("CLIB1") THEN LOAD "CLIB1.SBR", NEW 
 IF NOT PROGRAMFILE ("EXTLIB") THEN LOAD "EXTLIB.SBR", NEW 
 IF NOT PROGRAMFILE ("EMAILFUN") THEN LOAD "EMAILFUN.SBR", NEW 
 REM IF NOT PROGRAMFILE ("SERSEPA") THEN LOAD "SERSEPA.SBP", NEW 
 REM CALL LIBInit("FACTURA","SmartBusiness99",0,20):REM  ohne EURO
 REM CALL LIBInit("FACTURA","SmartBusiness99",1,25):REM  mit EURO
 REM CALL LIBInit("FACTURA","SmartProject99",0,30):REM ohne Euro
 CALL LIBInit("FACTURA","SmartPROJECT",1,35):REM mit Euro
 REM CALL LIBInit("FACTURA","SmartPROJECT2002ASP",1,36):REM mit EuroASP


 REM ************************** assistant publishing anfang ****************************
 REM CALL LIBInit("FACTURA","assistant price it",0,5)
 REM CALL LIBInit("FACTURA","assistant works",0,6)
  REM ************************** assistant publishing ende ****************************
 _help% = 0
 CALL INIT()
 REM CALL Fehler("Anfang","")
 _formend% = 0
 REM Upd$ = ReadConfig$(_projekt$,"UPDATE")
 REM IF Upd$ LIKE "TRUE" THEN 
   REM IF NOT PROGRAMFILE ("UPDATE") THEN LOAD _netpath$ + "UPDATE.SBR", NEW 
   REM CALL DoUpdate()
 REM END IF 
 a% = 0
 GAutoKArt1$(0) = "FON"
 WHILE GAutoKArt1$(a%) <> "leer" AND GAutoKArt1$(a%) <> ""
   a% = a% + 1
   m$ = FN ibm(ReadConfig$("Telefonart1","Art" + LTRIM$ ( STR$ (a%,"999999"))))
   IF m$ <> "leer" THEN GAutoKArt1$(a%) = m$
 WEND 
 
 a% = 0
 GAutoKArt2$(0) = "PRIVAT"
 WHILE GAutoKArt2$(a%) <> "leer" AND GAutoKArt2$(a%) <> ""
   a% = a% + 1
   m$ = FN ibm(ReadConfig$("Telefonart2","Art" + LTRIM$ ( STR$ (a%,"999999"))))
   IF m$ <> "leer" THEN GAutoKArt2$(a%) = m$
 WEND 
 GHerba% = 0
 gherba$ = UCASE$ (ReadConfig$("PROJECT","HERBALIFE"))
 IF gherba$ LIKE "TRUE" THEN GHerba% = - 1
 a% = 0
 REM CALL Fehler("test","")
 WHILE _formend% = 0
   CALL FACTURA()
   SET STATUS "Programmende?"
   REQUEST "Programm wirklich beenden?","",130,req%
   IF req% = 1 THEN _formend% = 1
           REM GCODieRuf% = 0
           REM GCODieRuf1% = 0
           REM GCODieRuf2% = 0
 WEND 
 CALL EXIT()
 END SUB 
 
 
 '      *********************
 '      ** INITIALISIERUNG **
 '      *********************
 
 ' Konstantendeklaration/Initialisierung
 ' ======================================================================
 
SUB INIT()
 MOUSE OFF 
 GLOBAL f AS form
 REM GLOBAL WordApp AS Object
 GLOBAL errormessage$
 
 GLOBAL cuvl%,cuvi%,gvisible%
 GLOBAL VERLEIHsub%,FILMEsub%,Medium$(10)
 GLOBAL GRUPPENsub%,ARTIKELsub%,MSsub%,SCHsub%,FLOSKELsub%,MSArt%,MSArt$
 GLOBAL cugrp%,cuart%,_mwst%,cums%,cupos%,cufl%,ProdGruppen$(100),ProdGruppen1$(1000)
 GLOBAL Rabatt$,RabattBetrag$,cums1%,MSart1%,MSArt1$
 GLOBAL Ansicht$(200),SFORM$
 GLOBAL MwStSchl%(10),MwStBetrag%(10),MWStBetrag1%,MwStCount%,MWSTText2$(10),MWSTBetrag2$(10)
 GLOBAL MwStText$,MwStBetrag$,RabattText$,asuchopt%,asuchglob%,Gruppenausw$,sunaglob$,artausw$

 GLOBAL MwStBetragEU%(10),MWStBetrag1EU%,MWSTText2EU$(10),MWSTBetrag2EU$(10)
 GLOBAL MwStTextEU$,MwStBetragEU$,RabattTextEU$

 GLOBAL kundennr$,leervorAdr$,Lieferant$(8000),AuswArtikel$(30000),AuswArtikel1$,neumaster$
 GLOBAL Debitorkto$,Bestandskto$,Warenausgkto$,cashpath$,stationsnr$
 GLOBAL GlervorAdr%,GlernachAdr%,GlerKopfSeite%,GlerFusSeite%
 GLOBAL DEFA$,BestfÅhr$,ArtiAutoNum$,Bestrechnung$,Provrechnung$,_kalkart$,periode%,defaneu$
 GLOBAL vkonto%(10),perieing%
 GLOBAL Nummernkreise$,TerminVorlage%,artsucheok%,frage%,ARTIKeyword$
 GLOBAL Zeile1$,Zeile2$,Zeile3$,Zeile4$,Zeile5$,Zeile6$
 GLOBAL WertZeile1$,WertZeile2$,WertZeile3$,WertZeile4$,WertZeile5$,WertZeile6$,dokfehl%
 GLOBAL noedit$,abbruch%,tot%,priebe$,artsort$,cusch%,vondat$,bisdat$,belegart$,optli%,sort%,title2$
 GLOBAL Kontrollfeld$,_cugrp%,cashedit$,cashyesno$,InvListe$
 GLOBAL REIusub%,REIsub%,w220398%
 GLOBAL prj%,maxproz%,codeprdok%,projektdok$,W97$,wxp$,cspeed%,globalGutsch$
 GLOBAL euro%,_cuwaehr%,cuwaehr%,artiform$,artiform1$,zweitwaehr$,waehrmarti%,waehrmarti$,mastwaehr$,mastform$,ergRE$
 GLOBAL MSwaehrart%,scheinsupport$,MAHNEinzsub%,MAHNsub%,Versionsverw$,VerleihAdr$,Projecteab$(1)
 GLOBAL Gtextdatei$,noscheinfound%,codere%
 GLOBAL vknettoaku%(1),vkbruttoaku%(1),vknettoeuaku%(1),vkbruttoeuaku%(1)
 GLOBAL euromaske%,rerlauto%,GADRDat$,GAkquiDat$,GTelDat$,GDokDat$
 rerlauto% = 0
 REM GLOBAL eurosupport$
  REM  eurosupport$ = "FALSE"
  REM  ProjectJN$ = "FALSE"


 


 scheinsupport$ = UCASE$ (ReadConfig$("FACTURA","SCHEINSUPPORT"))
 
 Lieferant$(0) = ""
 ProdGruppen1$(0) = ""

 
 ergRE$ = "j"
 globalGutsch$ = "FALSE"
 mastform$ = UCASE$ (ReadConfig$("FACTURA","MASTERFORM"))
 
 artiform$ = UCASE$ (ReadConfig$("FACTURA","ARTIKELFORM"))
 Versionsverw$ = UCASE$ (ReadConfig$("FACTURA","Versionsverwaltung"))
 
 VerleihAdr$ = "j"
 BestellmitVK$ = UCASE$ (ReadConfig$("FACTURA","BESTELLUNGMITVK"))




 REM IF UCASE$ (artiform$) = "ARTIKEL" THEN artiform$ = "ARTIKEL"
 REM artiform$ = UCASE$ (ReadConfig$("FACTURA","ARTIKELFORM"))
 IF UCASE$ (artiform$) = "EUR" THEN 
   artiform$ = "ARTIKEEU"
 ELSE 
   artiform$ = "ARTIKEL"
 END IF 

 InvListe$ = "n"
 maxproz% = 0
 tot% = 0
 abbruch% = 0
 ProServ$ = "FALSE"
 noedit$ = "n"
 ARTIKeyword$ = UCASE$ (ReadINI$("FACTURA","AutoKeyword"))
 artsucheok% = 0
 
 cashpath$ = ReadINI$("CASH","NetDirectory")
 w97$ = UCASE$ (ReadINI$("SYSTEM","WinWord97"))
 wxp$ = UCASE$ (ReadINI$("SYSTEM","WinWordXP"))
 REM cspeed% = VAL (ReadINI$("SYSTEM","CSPEED"))
 IF wxp$ LIKE "TRUE" THEN w97$ = ""
 cashedit$ = UCASE$ (ReadConfig$("FACTURA","CASHEDIT"))

 cashyesno$ = UCASE$ (ReadConfig$("FACTURA","CASHYESNO"))
 REM ON ERROR GOTO euro1609981
 REM euro% = VAL (ReadConfig$("FACTURA","EUR"))
 REM GOTO euro1609982
euro1609981: 
 REM CALL Fehler("Es wurde in der Datei ...\codie\codieapp.net im Abschnitt [Factura] der Eintag EURO= xyz nicht gefunden","Es sool dort der Umrechnungsfaktor fÅr 1 Euro = xyz DM eingegeben werden. Der Wet wir jetzt auf 1.9999 gesetzt!")
 REM euro% = 1.9999
 ON ERROR GOTO ErrorHandler
euro1609982:  
 IF RIGHT$ (cashpath$,1) <> "\" THEN cashpath$ = cashpath$ + "\"
 priebe$ = UCASE$ (ReadConfig$("FACTURA","Priebe"))
 DEFA$ = UCASE$ (ReadConfig$("FACTURA","DEFA"))
 IF DEFA$ = "MEGA" THEN 
   IF stationsnr$ = "leer" THEN CALL Fehler("Beim DEFA-Projekt mu· in der \codie\codieapp.net","im Abschnitt [FACTURA] eine Stationsnummer angegeben werden!")
 END IF 
 i% = 0
 FOR i% = 0 TO 9
   v$ = "V" + STR$ (i%,"0")
   vkonto%(i%) = VAL (ReadConfig$("FACTURA",v$))
 NEXT i%
 
 
 defaneu$ = "n"
 
 neumaster$ = "n"
 artausw$ = "n"
 gruppenausw$ = ""
 asuchopt% = 1
 asuchglob% = 4
 SET HELP FILE _netpath$ + _projekt$ + "\" + _projekt$ + ".HLP"
 SET QUERY ON 
 CALL DFile(2,"supervis" + _fpw$)
 _vcodema% = vcodema%
 bezug% = 2
 vbezug$ = "Adresse"
 IF GTest% = 0 THEN ON ERROR GOTO ErrorHandler
 REM ON ERROR GOTO ErrorHandler
 REM CALL Fehler("factcodi.sbv","")
 truetest% = 0
 IF GCODieADR$ LIKE "TRUE" THEN 
   truetest% = - 1
   w97$ = "TRUE"
   wxp$ = "FALSE"
 END IF 
 IF NOT OPEN ("ADRESSEN") THEN CALL DFile(2,"OFFICE\Adressen" + _fpw$)
 FILE "adressen"
 INDEX codeku.adressen
 SELECT FIRST FILE "adressen" INDEX codeku.adressen
 SELECT KEY 4 FILE "adressen" INDEX codeku.adressen
 IF stichwort.adressen LIKE "AVECS*" OR nachname.adressen LIKE "Ahrens*" THEN 
   truetest% = - 1
 END IF 
 IF truetest% = - 1 THEN 
   IF NOT EXISTS (_netpathlw$ + "Pitt2.jpg") THEN 
     REQUEST "MS Windows verursachte eine Schutzmodlulverletzung in Base-NTVDM.EXE!"
     CALL EXIT()
   END IF 
 END IF 
 IF GCODieADR$ LIKE "TRUE" THEN 
   OPEN FORM GPrjForm$ + "FACTCODI"
 ELSE 
     IF gasp% THEN 
      OPEN FORM GPrjForm$ + "FACTASP"
     ELSE 
       OPEN FORM GPrjForm$ + "FACTPROJ"
     END IF 
 END IF 
     
     REM CALL MNFACTURA()
     SET HEADING title$ + " - HauptÅbersicht"
     SET STATUS "HauptÅbersicht"
     SET DISPLAY ON 
     GAppName$ = _netpath$ + "DOCP\project.pdf"

 CALL LOGIN()
 CALL DFile(22,"CONFIG" + _fpw$)

 REM CALL LizenzNeu()
 REM CALL Lizensierung()
 Vista$ = UCASE$ (ReadINI$("SYSTEM","MSVista"))
 REM CALL Fehler(vista$,"")
 IF vista$ LIKE "LEER" OR vista$ LIKE "" THEN 
   REQUEST "LÑuft Ihr System mit MS Windows Vista?","",130,req%
   IF req% = 1 THEN 
     Vista$ = "TRUE"
   ELSE 
     Vista$ = "FALSE"
   END IF 
   CALL WriteINI("SYSTEM","MSVista",Vista$)
 END IF 

 FOR m% = 0 TO 11
   monate$(m%) = MONTH$ ("1." + STR$ (m% + 1,"00") + ".92")
 NEXT m%
 IF GTest% = 0 THEN SET REQUEST 134 BELL 1824
 DOKKundFound% = 0
 DOKGesFound% = 0
 a% = 0
 b% = 0
 REDIM DOKGruppen$(100)
 DOKGruppen$(0) = "allgemeine Schreiben"
 CALL FillDokGruppe(0)

 CALL DFile(3,"GRUPPEN" + _fpw$)
 FILE "gruppen"
 INDEX CodeGR.gruppen
 SELECT FIRST FILE "gruppen" INDEX CodeGR.gruppen
 REDIM ProdGruppen$(1,1)
 REDIM ProdGruppen$( RECCOUNT ("gruppen"))
 a% = 0
 alle$ = "n"
 WHILE NOT EOF ("gruppen")
   ok% = - 1
   IF alle$ = "n" THEN 
   END IF 
   IF LTRIM$ (Kurzbezeichnung.gruppen) = "" THEN ok% = 0
   IF ok% = - 1 THEN 
     ProdGruppen$(a%) = Kurzbezeichnung.gruppen + SPACE$ (100) + STR$ (Codegr.gruppen,"000000")
     a% = a% + 1
   END IF 
   SELECT NEXT FILE "gruppen" INDEX CodeGR.gruppen
 WEND 
 CALL WORD()
 END SUB 
 

SUB FillDokGruppe(awert%)
 DOKKundFound% = 0
 DOKGesFound% = 0
 a% = awert%
 b% = 0
 
 REM CALL Fehler("Doktest","")
 WHILE DOKGruppen$(a%) <> "leer"
   IF MNdisabled%("DOCSINTERN") THEN 
     a% = a% + 1
     c$ = FN ibm(ReadConfig$("Dokumentengruppen","Gruppe" + LTRIM$ ( STR$ (a%,"999999"))))
     
     REM CALL Fehler("Doktest",c$)
     IF c$ LIKE "interne Sc*" OR c$ LIKE "Vertr*" THEN 
       REM CALL Fehler("Doktest",c$)
       DOKGruppen$(a%) = "---------------------" + LTRIM$ ( STR$ (a%,"999999"))
     ELSE 
       DOKGruppen$(a%) = FN ibm(ReadConfig$("Dokumentengruppen","Gruppe" + LTRIM$ ( STR$ (a%,"999999"))))
     END IF 
   ELSE 
     a% = a% + 1
     DOKGruppen$(a%) = FN ibm(ReadConfig$("Dokumentengruppen","Gruppe" + LTRIM$ ( STR$ (a%,"999999"))))
   END IF 
 WEND 
 DOKGruppen$(a%) = ""
 
 END SUB 
 
 '      ************************************
 '      ** Formular "FACTURA" - HauptmenÅ **
 '      ************************************
 
SUB FACTURA()
 GAkquiDat$ = "AKQUISE"
 ON ERROR GOTO ErrorHandler
 CALL MNFACTURA()
 GADRDat$ = "ADRESSEN"
 
 GTelDat$ = "TELEFON"
 GDokDat$ = "DOKUMENT"
 IF _wpsuffix$ LIKE "DOC" THEN 
   REM SET WordApp = CREATEOBJECT ("Word.Application")
   REM WordApp.Visible = - 1
 END IF 
 SET STATUS "Hauptauswahl: WÑhlen Sie die gewÅnschte Funktion!"
 _formend% = 0
 maske$ = "FACTURA"
 IF ProjectJN$ = "TRUE" THEN 
   maske$ = "FACTPROJ"
   IF Gherba% = - 1 THEN 
     maske$ = "FACTPROH"
   END IF 
 END IF 
 IF gasp% THEN 
   maske$ = "FACTASP"
 END IF 
 IF GCODieADR$ LIKE "TRUE" THEN 
   maske$ = "FACTCODI"
 END IF 
 fir% = 0
  
   aa% = 0
 WHILE _formend% = 0
 
   NUMBASE "z99999999.999999"
   PRICEsub% = 0
   Upd$ = UCASE$ (ReadConfig$(_projekt$,"UPDATE"))
   IF UCASE$ ( FORM ) <> maske$ THEN 
st3004981: 
     
     OPEN FORM GPrjForm$ + maske$
     SET HEADING title$ + " - HauptÅbersicht"
     SET STATUS "HauptÅbersicht"
     SET DISPLAY ON 
     CALL HideStartup()
     GAppName$ = _netpath$ + "DOCP\project.pdf"
     REM CALL BMCheckMail()
   END IF 
   CALL MNFACTURA()
   CALL DFile(3,"STAMM" + _fpw$)
   CALL DFile(3,"WAEHRUNG" + _fpw$)
   FILE "STAMM"
   SELECT FIRST 
   
   IF codew.stamm > 0 THEN 
     zweitwaehr$ = waehrung.stamm
     euro% = umrechnung.stamm
     ZWCodew% = codew.stamm
   ELSE 
     CALL Fehler("Es wurde fÅr diese Anwendung noch keine allgemeine FirmenwÑhrung festgelegt(z.B. DM)!","WÑhlen Sie nachfolgend eine FirmenwÑhrung aus! Die Umrechnungskurse kînnen Sie Åber Stammdaten->Einstellungen->WÑhrungstabelle festlegen!")
     CALL WaehrStamm()
   END IF 
   _mwst% = mwst.stamm
   euro% = umrechnung.stamm
   euro1% = umrechnung.stamm
   zweitwaehr$ = waehrung.stamm
   codew1% = codew.stamm
   ZWCodew% = codew.stamm
   REM Grechtslinks$ = linksrechts.stamm
 GUpd% = 0
 Upd$ = ReadConfig$(_projekt$,"UPDATE")
 IF Upd$ LIKE "TRUE" THEN 
   GUpd% = - 1
   IF NOT PROGRAMFILE ("UPDATE") THEN LOAD _netpath$ + "UPDATE.SBR", NEW 
   CALL DoUpdate()
   Upd$ = UCASE$ (ReadConfig$(_projekt$,"UPDATE"))
 END IF 
 CALL DFile(3,"WAEHRUNG" + _fpw$)
 CALL DFile(3,"STAMM" + _fpw$)
 SELECT FIRST FILE "stamm"
   _mwst% = mwst.stamm
   euro% = umrechnung.stamm
   euro1% = umrechnung.stamm
   zweitwaehr$ = waehrung.stamm
   codew1% = codew.stamm
   ZWCodew% = codew.stamm
   Grechtslinks$ = linksrechts.stamm
 IF UCASE$ (zweitwaehr$) LIKE "÷S" THEN zweitwaehr$ = "îS"
 Superbase.CurrencySymbol = zweitwaehr$:REM                    Menu:  SetSystem
 Superbase.SaveSettings("CurrencySymbol")
 IF KalkSchemaNet.stamm = "" OR lastprojekt.stamm < 1 OR REBelegnr.stamm < 1 THEN CALL FillStamm()
 CALL INITStamm()
 IF zweitwaehr$ LIKE "Eur*" THEN 
   mastform$ = "EUR"
   euromaske% = 1
 END IF 
 IF UCASE$ (mastform$) = "EUR" THEN 
   artiform$ = "ARTIKEEU"
 ELSE 
   artiform$ = "ARTIKEL"
 END IF 
 



   IF NOT OPEN ("AKUPREIS") THEN CALL DFile(3,"AKUPREIS" + _fpw$)
   IF NOT OPEN ("ABZFLOSK") THEN CALL DFile(3,"ABZFLOSK" + _fpw$)
   IF NOT OPEN ("TVORLAGE") THEN CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
   IF NOT OPEN (GAkquiDat$) THEN CALL DFile(2,"OFFICE\akquiseb" + _fpw$)
   REM 17072009
   IF GCODieADR$ LIKE "TRUE" THEN 
     IF NOT OPEN ("SPROJECT") THEN CALL DFile(2,"OFFICE\SPROJECT" + _fpw$)
     IF NOT OPEN ("SCATEGOR") THEN CALL DFile(2,"OFFICE\SCATEGOR" + _fpw$)
     IF NOT OPEN ("SStatus") THEN CALL DFile(2,"OFFICE\SStatus" + _fpw$)
     IF NOT OPEN ("Stest") THEN CALL DFile(2,"OFFICE\Stest" + _fpw$)
     IF NOT OPEN ("SLoesung") THEN CALL DFile(2,"OFFICE\SLoesung" + _fpw$)
     IF NOT OPEN ("SKompon") THEN CALL DFile(2,"OFFICE\SKompon" + _fpw$)
     REM IF NOT OPEN ("Bugs") THEN CALL DFile(3,"bugs" + _fpw$)
   END IF 
   IF NOT OPEN ("AQUIMASK") THEN CALL DFile(2,"OFFICE\AQUIMASK" + _fpw$)
   IF NOT OPEN ("ADRSTAT") THEN CALL DFile(2,"OFFICE\ADRStat" + _fpw$)
   IF NOT OPEN ("EMAIL") THEN CALL DFile(2,"OFFICE\email" + _fpw$)
   IF NOT OPEN ("PRCONECT") THEN CALL DFile(3,"PRCONECT" + _fpw$)
   IF NOT OPEN ("PRJMASK") THEN CALL DFile(3,"PRJMASK" + _fpw$)
   IF NOT OPEN ("PRCONADR") THEN CALL DFile(3,"PRCONADR" + _fpw$)
   IF NOT OPEN ("PROJECT") THEN CALL DFile(3,"PROJECT" + _fpw$)
   IF NOT OPEN ("FREEVORL") THEN CALL DFile(2,"OFFICE\FREEVORL" + _fpw$)
   IF VerleihAdr$ = "j" THEN 
     IF NOT OPEN ("VERLEIH") THEN CALL DFile(3,"VERLEIH" + _fpw$)
     IF NOT OPEN ("JOURNAL") THEN CALL DFile(3,"JOURNAL" + _fpw$)
 
   END IF 
  ON ERROR GOTO w1009200812
  GImpExpAktiv% = ImpExpAktiv.stamm
  IF GImpExpAktiv% = 1 THEN 
    GnachExp$ = nachExport.stamm
    datei$ = "EXPIMP\ADR" + GnachExp$
    IF NOT OPEN (datei$) THEN CALL DFile(2,datei$ + _fpw$)
    datei$ = "EXPIMP\AKQ" + GnachExp$
    IF NOT OPEN (datei$) THEN CALL DFile(2,datei$ + _fpw$)
    datei$ = "EXPIMP\AKT" + GnachExp$
    IF NOT OPEN (datei$) THEN CALL DFile(2,datei$ + _fpw$)
    datei$ = "EXPIMP\CON" + GnachExp$
    IF NOT OPEN (datei$) THEN CALL DFile(2,datei$ + _fpw$)
    datei$ = "EXPIMP\DOK" + GnachExp$
    IF NOT OPEN (datei$) THEN CALL DFile(2,datei$ + _fpw$)
    datei$ = "EXPIMP\PRO" + GnachExp$
    IF NOT OPEN (datei$) THEN CALL DFile(2,datei$ + _fpw$)
    datei$ = "EXPIMP\TEL" + GnachExp$
    IF NOT OPEN (datei$) THEN CALL DFile(2,datei$ + _fpw$)
    datei$ = "EXPIMP\TVO" + GnachExp$
    IF NOT OPEN (datei$) THEN CALL DFile(2,datei$ + _fpw$)
  END IF 

w1009200812: 
   ON ERROR GOTO ErrorHandler
   Gmaul$ = ""
   Gmaul$ = ReadConfig$("FACTURA","AUTORECHSPERRE")
   MENU ON addon1%,addon2%
   MOUSE ON 
   IF MATagest$ = "TRUE" AND fir% = 0 AND upd$ <> "TRUE" THEN 
     REM REQUEST "Mîchten Sie Ihre Tagestermine sehen?","",130,req%
 
 


 gnab$ = ""
 gnab0$ = "Sie erhalten hier die Mîglichkeit sich eine öbersicht Åber erledigte/nichterledigte/alle Termine eines oder aller Mitarbeiter in einem freiwÑhlbaren Zeitraum fÅr"
 gnab0$ = gnab0$ + " einen oder fÅr alle Terminkalender (Aktionen) zu verschaffen. Weiterhin kînnen Sie die Termine auch selektieren und als erledigt kennzeichnen!"
 gnab0$ = gnab0$ + gnab$
    DIM dlg1 AS Dialog
    DIM control1 AS DialogControl
 
    Superbase.Dialogs.Add("LHELP")
    SET dlg1 = Superbase.Dialogs.LHELP
    dlg1.Move(0,0,302,159)
    dlg1.Caption = "Hilfe"
    dlg1.FontName = "MS Sans Serif"
    dlg1.FontSize = 8
 
    SET control1 = dlg1.Add("DialogFrame2","DialogFrame")
    control1.Move(0,3,301,135)
    control1.Caption = ""
 
    SET control1 = dlg1.Add("DialogIcon1","DialogIcon")
    control1.Move(6,17,22,21)
    control1.Icon = 2
 
    SET control1 = dlg1.Add("DialogLabel1","DialogLabel")
    control1.Move(6,41,291,92)
    control1.CaptionBinding = "gnab0$"
 
    SET control1 = dlg1.Add("DialogCommandButton3","DialogCommandButton")
    control1.Move(125,143,55,14)
    control1.Caption = "&OK"
    control1.ReturnValue = 0
  
    DIM dlg AS Dialog
    DIM control AS DialogControl
 
    Superbase.Dialogs.Add("TLISTE")
    SET dlg = Superbase.Dialogs.TLISTE
    dlg.Move(0,0,288,67)
    dlg.Caption = "Adressaktualisierungen"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame2","DialogFrame")
    control.Move(0,2,286,46)
    control.Caption = ""
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(30,16,255,23)
    control.Caption = "Mîchten Sie die Tagestermine des aktuellen, Mitarbeiters angezeigt bekommen ?"
 
    SET control = dlg.Add("DialogIcon1","DialogIcon")
    control.Move(6,16,22,20)
    control.Icon = 2
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(58,49,55,15)
    control.Default = 1
    control.Caption = "&Weiter"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(114,49,55,15)
    control.Caption = "&Abbrechen"
    control.ReturnValue = 0
 
    SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
    control.Move(170,49,55,15)
    control.Caption = "&Hilfe"
    control.ReturnValue = 0
    control.NestedDialogName = "LHELP"
 
 DIALOG "TLISTE",req%
 REMOVE DIALOG ALL 
 ON ERROR GOTO ErrorHandler 
     IF req% = 1 THEN CALL TagestMA()
       fir% = 1
   END IF 
   SELECT FIRST FILE "Supervis" INDEX codema.supervis
   SELECT KEY GMACodeMA% FILE "Supervis" INDEX codema.supervis
   SELECT FIRST FILE "stamm"
   GEMAIL% = EMAILJN.stamm
   REM CALL Fehler("Budi email","")
   MOUSE OFF 
   IF GEMAIL% = - 1 THEN 
     GEMAIL% = 0
     GEMAIL% = EMAILJN.supervis
     GEMAILJNAuto% = EMAILJNAuto.stamm
     IF GEMAILJNAuto% = - 1 THEN 
       GEMAILJNAuto% = EMAILJNAuto.supervis
     END IF 
   END IF 
   REM CALL Fehler("Budi email","")
   IF gemail% = - 1 AND gemailinit% <> - 1 THEN 
     gemailinit% = - 1
     REM CALL Fehler("emailinitial","")
     ON ERROR GOTO e2506200301
     REGISTER _netpath$ + "CODieEMAILSend.dll","_SendEMAILAuto","IFFFFFFFFF"
     REGISTER _netpath$ + "CODieEMAILSend.dll","_SendEMAILForm","IFFFFFFFFFFFFFFFFFFFFFFF"
     GOTO e2506200302
e2506200301: 
     CALL Fehler("Bei der Initialisierung des EMAIL-Moduls ist ein Fehler aufgetreten!","Sie kînnen die EMAIL-Funktionen nicht verwenden!")
e2506200302: 
   END IF 
   MOUSE ON 
   ON ERROR GOTO ErrorHandler
   IF FN sys(5) > 1 THEN Variante$ = "Netzwerk mit " + LTRIM$ ( STR$ ( FN sys(5),"99")) + " PlÑtzen" ELSE Variante$ = "Einzelplatz"
   Version$ = "Version: " + ReadConfig$(_projekt$,"Version")
   Release$ = "Release: " + ReadConfig$(_projekt$,"Release") + " - Variante: " + Variante$
   GCopyright$ = "Copyright ∏ 1990 - " + STR$ ( YEAR ( TODAY ),"0000")
   IF seite% > 1 THEN 
     FORM seite%
   ELSE 
     FORM 
   END IF 
   IF UCASE$ ( FORM ) <> maske$ THEN 
     GOTO st3004981
   END IF 
   ON ERROR GOTO ErrorHandler
   MOUSE ON 
   MENU ON 
   cspeed% = 1000
   CALL ClearKBDBuffer()
   gvonadr% = - 1
   SET STATUS ""
   WAIT MOUSE OR KEY OR MENU OR FOR 600
   GET k$
   IF k$ = CHR$ (27) THEN 
     IF PAGE = 1 THEN _formend% = 1
     IF PAGE > 1 THEN FORM 1
   END IF 
   IF pricesub% = 0 THEN 
     IF UCASE$ ( FORM ) = UCASE$ (maske$) AND _formend% = 0 AND PAGE = 1 THEN CALL BMCheckMail()
   END IF 
   CALL Server("LISTBOXINIT","Auswahl")
   artausw$ = "n"
   SELECT CASE PRICEsub%
   CASE 1
     gvonadr% = - 1
     CALL ADRESSEN()
     gvonadr% = 0
   CASE 2
     MOUSE OFF 
     IF NOT disabled%("PRODUKTGRUPPENVWERAL") THEN 
       CALL GRUPPEN()
     END IF 
   CASE 3
     CALL DFile(3,"GRUPPEN" + _fpw$)
     CALL DFile(3,"AKUPREIS" + _fpw$)
     CALL DFile(2,"OFFICE\TELEFON" + _fpw$)
     FILE "gruppen"
     INDEX CodeGR.gruppen
     SELECT FIRST 
     a% = 0
     REDIM ProdGruppen$(1,1)
     REDIM ProdGruppen$( RECCOUNT ("gruppen"))
     alle$ = "n"
     WHILE NOT EOF ("gruppen")
       ok% = - 1
       IF alle$ = "n" THEN 
         IF novi1.gruppen = 1 THEN ok% = 0
       END IF 
       IF LTRIM$ (Kurzbezeichnung.gruppen) = "" THEN ok% = 0
       IF ok% = - 1 THEN 
         ProdGruppen$(a%) = Kurzbezeichnung.gruppen + SPACE$ (100) + STR$ (Codegr.gruppen,"000000")
         a% = a% + 1
       END IF 
       SELECT NEXT FILE "gruppen" INDEX CodeGR.gruppen
     WEND 
     IF NOT disabled%("ARTIKELVERWALTUNG") THEN 
       CALL ARTIKEL()
     END IF 
   CASE 4
     CALL ABZUGANG(0)
     CALL ScheinGenerator(0)
   CASE 5
     REM CALL VERLUST()
     CALL ABZUGANG(1)
   CASE 6
     IF DEFA$ = "MEGA" THEN 
       CALL DFile(3,"ARTIKEL" + _fpw$)
       CALL DFile(3,"ARTPROV" + _fpw$)
       CALL DFile(3,"VERTRETE" + _fpw$)
       REM CALL INVDEFA()
       NUMBASE "99999999.00"
       LOAD QUERY "c:\codie\FACTURA\invarti.sbq"
       ? QUERY TO ASK 
     ELSE 
       CALL INVENTUR()
     END IF 
   CASE 7
     REM CALL UMSKUNDEN()
     CALL AdrUmsAll()
   CASE 8
     REM CALL UMSARTIKEL()
     CALL ArtUmsAll()
   CASE 9
     IF NOT disabled%("öBERSICHTOFFRE") AND NOT disabled%("öBERSICHTEN") THEN 
       CALL UMSGRUPPE()
     END IF 
   CASE 10
     REM CALL ORECHNUNGEN()
     REM CALL RechnungAllg()
     IF NOT disabled%("öBERSICHTOFFRE") THEN 
       GposOld% = 0
       CALL OffeneVorgÑnge(2)
     END IF 
   CASE 11
     REM CALL OANGEBOTE()
     IF NOT disabled%("öBERSICHTOFFANG") THEN 
       GposOld% = 0
       REM CALL OffeneVorgÑnge(1)
       CALL AllAngNEW(1)
     END IF 
   CASE 12
     REM CALL OBESTELLUNGEN()
     IF NOT disabled%("öBERSICHTOFFBESTELL") THEN 
       GposOld% = 0
       REM CALL OffeneVorgÑnge(5)
       CALL AllAngNEW(5)
     END IF 
   CASE 13
     CALL BESTELLV()
   CASE 14
   CALL DFile(3,"AKUPREIS" + _fpw$)
     CALL PREISLISTE()
     REM CALL ArtDruckNeu(2)
   CASE 15
     CALL FLOSKEL()
   CASE 16
     CALL DFile(3,"AKUPREIS" + _fpw$)
     CALL DFile(3,"ABZUGANG" + _fpw$)
     CALL DFile(3,"MASTER" + _fpw$)
     CALL DFile(3,"ARTIKEL" + _fpw$)
     CALL DFile(3,"SCHEIN" + _fpw$)
     CALL DFile(3,"ARTPROV" + _fpw$)
     CALL DFile(3,"LIEFRUCK" + _fpw$)
     CALL DFile(3,"UMSATZ" + _fpw$)
     CALL DFile(3,"VERTRETE" + _fpw$)
     CALL DFile(3,"serienr" + _fpw$)
     CALL DFile(3,"PROVISIO" + _fpw$)
     CALL DFile(3,"FLOSKEL" + _fpw$)
     IF DEFA$ = "MEGA" THEN 
       CALL DFile(3,"KSATZ" + _fpw$)
       CALL DFile(3,"SSATZ" + _fpw$)
     END IF 
     NUMBASE "$ ,9999999999.00"
     CALL BMKurzbericht()
   CASE 17
     CALL OFFICE()
   CASE 18
     CALL SETUP()
   CASE 19
     IF NOT disabled%("öBERSICHTOFFRE") THEN 
       opt% = 2
       CALL AufrufRech()
     END IF 
   CASE 20
     REM Dokumentenimport
     CALL DOKUMENTSRV()
     IF GCODieRuf% = - 1 THEN 
       REM ret% = CALL ("_SearchClose")
            GCODieRuf% = 0
           GCODieRuf1% = 0
           GCODieRuf2% = 0
     END IF 
     IF GCODieRuf1% = - 1 THEN 
       REM ret% = CALL ("_SearchClose1")
            GCODieRuf% = 0
           GCODieRuf1% = 0
           GCODieRuf2% = 0
     END IF 
   CASE 66
     CALL RueckStell()
   CASE 77
     CALL LBelege()
   CASE 88
     CALL PROJECT()
   CASE 89
     CALL WAGRUPPEN()
   CASE 90
     CALL WARENART()
   CASE 91
     REM alteSerienemails
     CALL EMAILform()
   CASE 92
     REM Netmail
     CALL MAIL1a()
   CASE 93
     REM Werbe-Email-Vorlagen
     CALL WEMAILform()
   CASE 94
     REM Stammdaten
     seite% = 2
     FORM seite%
   CASE 95
     REM von  Stammdaten zurÅck
     seite% = 1
     FORM seite%
   CASE 96
     REM Produktgruppen
     CALL PRGRUPPEN()
   CASE 97
     REM Produkte
     CALL ProduktN()
   CASE 98
     REM BUG Tracker
     CALL BUGAkquiNew()
   CASE 200
     REM FREEVorl
     CALL FREEVorl()
   CASE 201
     REM offene AuftrÑge
     IF NOT disabled%("öBERSICHTOFFAUF") THEN 
       GposOld% = 0
       REM CALL OffeneVorgÑnge(1)
       CALL AllAngNEW(4)
     END IF 
   CASE 202
     REM offene  Anfragen
     IF NOT disabled%("öBERSICHTOFFANF") THEN 
       GposOld% = 0
       REM CALL OffeneVorgÑnge(1)
       CALL AllAngNEW(8)
     END IF 
   END SELECT 
   REM seite% = PAGE 

   REM CALL BMCheckMail()
 WEND 
 _formend% = 0
 END SUB 
 

SUB AufrufRech()
     CALL DFile(3,"WAGRUPPE" + _fpw$)
     CALL DFile(2,"OFFICE\connect" + _fpw$)
     REM 080398
     opt% = 4
     CREATE DIALOG "MS",0,0,197,96,"Auswahl","MS Sans Serif",8
     ADD DIALOG "MS",4,3,5,192,63,0,"Bitte wÑhlen zwischen Rechnungeingang/-ausgang"
     ADD DIALOG "MS",3,73,24,76,10,0,"Eingang",2,opt%
     ADD DIALOG "MS",3,73,45,84,10,0,"Ausgang",4,opt%
     ADD DIALOG "MS",9,7,20,20,19,2
     ADD DIALOG "MS",1,35,75,55,16,1,"&OK",1,1
     ADD DIALOG "MS",1,93,75,54,16,0,"&Abbrechen",0,0
     DIALOG "MS",reqzu%
     REMOVE DIALOG "MS"
     IF reqzu% = 1 THEN 
       GAppName$ = _netpath$ + "DOCP\rechbu.pdf"
       IF opt% = 2 THEN 
         CALL DFile(3,"TEILREIN" + _fpw$)
         CALL DFile(3,"REINGANG" + _fpw$)
         CALL DFile(2,"ZERO" + _fpw$)
         IF RECCOUNT ("reingang") < 1 THEN CALL RENeu("reingang")
         FILE "reingang"
         INDEX Belegnr.reingang
         SELECT FIRST 
         CALL Reingang("reingang")
       ELSE 
         CALL DFile(3,"TEILRAUS" + _fpw$)
         CALL DFile(3,"RAUSGANG" + _fpw$)
         CALL DFile(2,"ZERO" + _fpw$)
         IF RECCOUNT ("RAUSGANG") < 1 THEN CALL RENeu("RAUSGANG")
         FILE "rausgang"
         INDEX belegnr.rausgang
         SELECT FIRST 
         CALL Reingang("RAUSGANG")
       END IF 
     END IF 
 END SUB 

SUB RueckStell()
 CALL DFile(3,"Liefruck" + _fpw$)
 von$ = ""
 bis$ = ""
 buch$ = "n"
 sort% = 1
    CREATE DIALOG "UMSATZ",0,0,233,137,"Liefer - RÅckstellungen","MS Sans Serif",8
    ADD DIALOG "UMSATZ",4,0,0,233,115,0,""
    ADD DIALOG "UMSATZ",9,6,12,20,21,2
    ADD DIALOG "UMSATZ",5,40,16,166,9,0,"Bitte geben Sie den Zeitraum ein, fÅr den Sie eine"
    ADD DIALOG "UMSATZ",5,40,25,141,10,0,"Liefer - RÅckstellungsÅbersicht wÅnschen."
    ADD DIALOG "UMSATZ",5,40,38,184,8,0,"Wenn Sie keinen Zeitraum bestimmen, werden sÑmtliche"
    ADD DIALOG "UMSATZ",5,40,48,119,9,0,"Liefer - RÅckstellungen angezeigt."
    ADD DIALOG "UMSATZ",3,40,59,150,13,0,"Sortierung nach Kunden",0,sort%
    ADD DIALOG "UMSATZ",3,40,73,150,13,0,"Sortierung nach Lieferanten",1,sort%
    ADD DIALOG "UMSATZ",6,62,96,40,13,0,0,von$,10
    ADD DIALOG "UMSATZ",6,153,96,40,13,0,0,bis$,10
    ADD DIALOG "UMSATZ",5,40,98,18,9,0,"von:"
    ADD DIALOG "UMSATZ",5,133,98,13,9,0,"bis:"
    ADD DIALOG "UMSATZ",1,58,118,55,14,1,"&OK",1,1
    ADD DIALOG "UMSATZ",1,115,118,55,14,0,"&Abbrechen",0,0
 DIALOG "UMSATZ",req%
 REMOVE DIALOG "UMSATZ"
 IF req% <> 1 THEN END SUB 
 ok% = 0
 IF DateOK%(von$) OR von$ = "" THEN 
   IF DateOK%(bis$) OR bis$ = "" THEN 
     IF von$ = "" THEN vondat$ = "1.1.1980" ELSE vondat$ = von$
     IF bis$ = "" THEN bisdat$ = DATE$ ( TODAY ) ELSE bisdat$ = bis$
   ELSE 
     CALL Fehler("Falsches Datum bei 'bis:'!","Bitte geben Sie das Datum in der Form tt.mm.jj ein.")
     ok% = - 1
   END IF 
 ELSE 
   CALL Fehler("Falsches Datum bei 'von:'!","Bitte geben Sie das Datum in der Form tt.mm.jj ein.")
   ok% = - 1
 END IF 
 IF ok% <> - 1 THEN 
   IF sort% = 0 THEN CALL Rueckk(vondat$,bisdat$)
   IF sort% = 1 THEN CALL Rueckl(vondat$,bisdat$)
 END IF 
 END SUB 
 
SUB LBelege()
 CALL DFile(3,"lbelege" + _fpw$)
 von$ = ""
 bis$ = ""
 buch$ = "n"
 sort% = 1
    CREATE DIALOG "UMSATZ",0,0,233,137,"BelegÅbersicht","MS Sans Serif",8
    ADD DIALOG "UMSATZ",4,0,0,233,115,0,""
    ADD DIALOG "UMSATZ",9,6,12,20,21,2
    ADD DIALOG "UMSATZ",5,40,16,166,9,0,"Bitte geben Sie den Zeitraum ein, fÅr den Sie eine"
    ADD DIALOG "UMSATZ",5,40,25,141,10,0,"BelegÅbersicht wÅnschen."
    ADD DIALOG "UMSATZ",5,40,38,184,8,0,"Wenn Sie keinen Zeitraum bestimmen, werden sÑmtliche"
    ADD DIALOG "UMSATZ",5,40,48,119,9,0,"Belege angezeigt."
    ADD DIALOG "UMSATZ",3,40,59,150,13,0,"Sortierung nach Kunden",0,sort%
    ADD DIALOG "UMSATZ",3,40,73,150,13,0,"Sortierung nach Lieferanten",1,sort%
    ADD DIALOG "UMSATZ",6,62,96,40,13,0,0,von$,10
    ADD DIALOG "UMSATZ",6,153,96,40,13,0,0,bis$,10
    ADD DIALOG "UMSATZ",5,40,98,18,9,0,"von:"
    ADD DIALOG "UMSATZ",5,133,98,13,9,0,"bis:"
    ADD DIALOG "UMSATZ",1,58,118,55,14,1,"&OK",1,1
    ADD DIALOG "UMSATZ",1,115,118,55,14,0,"&Abbrechen",0,0
 DIALOG "UMSATZ",req%
 REMOVE DIALOG "UMSATZ"
 IF req% <> 1 THEN END SUB 
 ok% = 0
 IF DateOK%(von$) OR von$ = "" THEN 
   IF DateOK%(bis$) OR bis$ = "" THEN 
     IF von$ = "" THEN vondat$ = "1.1.1980" ELSE vondat$ = von$
     IF bis$ = "" THEN bisdat$ = DATE$ ( TODAY ) ELSE bisdat$ = bis$
   ELSE 
     CALL Fehler("Falsches Datum bei 'bis:'!","Bitte geben Sie das Datum in der Form tt.mm.jj ein.")
     ok% = - 1
   END IF 
 ELSE 
   CALL Fehler("Falsches Datum bei 'von:'!","Bitte geben Sie das Datum in der Form tt.mm.jj ein.")
   ok% = - 1
 END IF 
 IF ok% <> - 1 THEN 
   IF sort% = 0 THEN CALL LBelegk(vondat$,bisdat$)
   IF sort% = 1 THEN CALL LBelegl(vondat$,bisdat$)
 END IF 
 END SUB 
 
SUB LBelegl(vondat$,bisdat$)
 CALL PRep("LBELEGEL")
 BEFORE REPORT 
     SET REPORT PAGE "H_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
 END FOOTING 
 
 GROUP Liefname.LBELEGE
 BEFORE GROUP Liefname.LBELEGE
     SET REPORT PAGE "H_Liefname.L002"
     OUTPUT REPORT PAGE 
 END GROUP 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 SELECT ;
     WHERE datum >= DAYS (vondat$) AND datum <= DAYS (bisdat$)
     ORDER REPORT Liefname.LBELEGE,Datum.LBELEGE,Kundenname.LBELEGE
     TO ASK 
 END SELECT 
 END SUB 
 
SUB LBelegk(vondat$,bisdat$)
 CALL PRep("LBELEGEK")
 BEFORE REPORT 
     SET REPORT PAGE "H_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
 END FOOTING 
 
 GROUP Kundenname.LBELEGE
 BEFORE GROUP Kundenname.LBELEGE
     SET REPORT PAGE "H_Kundenname002"
     OUTPUT REPORT PAGE 
 END GROUP 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 SELECT ;
     WHERE datum >= DAYS (vondat$) AND datum <= DAYS (bisdat$)
     ORDER REPORT Kundenname.LBELEGE,Datum.LBELEGE,Liefname.LBELEGE
     TO ASK 
 END SELECT 
 END SUB 
 
SUB Rueckl(vondat$,bisdat$)
 CALL PRep("RUECKL")
 BEFORE REPORT 
     SET REPORT PAGE "H_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
 END FOOTING 
 
 GROUP Liefname.LIEFRUCK
 BEFORE GROUP Liefname.LIEFRUCK
     SET REPORT PAGE "H_Liefname.L002"
     OUTPUT REPORT PAGE 
 END GROUP 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 SELECT ;
     WHERE RMenge.LIEFRUCK > 0 AND rdatum >= DAYS (vondat$) AND rdatum <= DAYS (bisdat$)
     ORDER REPORT Liefname.LIEFRUCK,Produktgruppe.LIEFRUCK,RDatum.LIEFRUCK
     TO ASK 
 END SELECT 
 END SUB 
 
SUB Rueckk(vondat$,bisdat$)
 CALL PRep("RUECKKU")
 BEFORE REPORT 
     SET REPORT PAGE "H_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
 END FOOTING 
 
 GROUP Kundenname.LIEFRUCK
 BEFORE GROUP Kundenname.LIEFRUCK
     SET REPORT PAGE "H_Kundenname002"
     OUTPUT REPORT PAGE 
 END GROUP 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 SELECT ;
     WHERE RMenge.LIEFRUCK > 0 AND rdatum >= DAYS (vondat$) AND rdatum <= DAYS (bisdat$)
     ORDER REPORT Kundenname.LIEFRUCK,Liefname.LIEFRUCK,Produktgruppe.LIEFRUCK,RDatum.LIEFRUCK
     TO ASK 
 END SELECT 
 END SUB 
 
 
 
SUB PeriodenPruef()
  IF DEFA$ = "MEGA" THEN 
   CALL DFile(3,"ABZUGANG" + _fpw$)
   REM --- Abfragen, ob Periodenabschlu· fÑllig oder Åberschritten ist ----------
   ym% = VAL ( LEFT$ ( DATE$ ( TODAY ,"yymmdd"),4))
   yy% = VAL ( LEFT$ ( DATE$ ( TODAY ,"yymmdd"),2))
   mm% = VAL ( LEFT$ ( DATE$ ( TODAY ,"mmyydd"),2))
   IF mm% = 1 THEN 
     mmvor% = 12
     yyvor% = yy% - 1
   ELSE 
     mmvor% = mm% - 1
     yyvor% = yy%
   END IF 
   pabschlus% = yyvor% * 100 + mmvor%
   pabschlus$ = STR$ (pabschlus%,"0000")
   FILE "abzugang"
   INDEX PAbschlus.abzugang
   IF NOT EXISTS (pabschlus%,Pabschlus.abzugang) THEN 
     REM --- vorherige Periode wurde noch nicht abgeschlossen ---
     REQUEST "Die Periode " + pabschlus$ + " ist noch nicht abgeschlossen","Mîchten Sie trotzdem mit der Eingabe fortfahren?",130,reqp%
     IF reqp% <> 1 THEN 
       periode% = 0
       END SUB 
     ELSE 
       periode% = pabschlus%
     END IF 
   ELSE 
     periode% = ym%
   END IF 
 END IF 
 END SUB 
 
SUB PeriodenAb()
 IF DEFA$ = "MEGA" THEN 
   CALL DFile(3,"ABZUGANG" + _fpw$)
   REM --- Abfragen, ob Periodenabschlu· fÑllig oder Åberschritten ist ----------
   ym% = VAL ( LEFT$ ( DATE$ ( TODAY ,"yymmdd"),4))
   yy% = VAL ( LEFT$ ( DATE$ ( TODAY ,"yymmdd"),2))
   mm% = VAL ( LEFT$ ( DATE$ ( TODAY ,"mmyydd"),2))
   IF mm% = 1 THEN 
     mmvor% = 12
     yyvor% = yy% - 1
   ELSE 
     mmvor% = mm% - 1
     yyvor% = yy%
   END IF 
   pabschlus% = yyvor% * 100 + mmvor%
   pabschlus$ = STR$ (pabschlus%,"0000")
   FILE "abzugang"
   INDEX PAbschlus.abzugang
   IF NOT EXISTS (pabschlus%,Pabschlus.abzugang) THEN 
     REM --- vorherige Periode wurde noch nicht abgeschlossen ---
     REQUEST "Die Periode " + pabschlus$ + " ist noch nicht abgeschlossen","Soll der Periodenabschlu· durchgefÅhrt werden?",130,reqp%
     IF reqp% <> 1 THEN 
       periode% = 0
       END SUB 
     ELSE 
       periode% = pabschlus%
       INDEX periode.abzugang
       SELECT FIRST 
       SELECT KEY periode% FILE "abzugang" INDEX periode.abzugang
       i% = 0
       WHILE periode.abzugang = periode% AND NOT EOF ("abzugang")
         PAbschlus.abzugang = periode%
         i% = i% + 1
         i$ = STR$ (i%,"9999999")
         SET STATUS "                            Anzahl der SÑtze: " + i$
         CALL QuickStore("abzugang")
       SELECT NEXT LOCK 
       WEND 
       CALL DFile(3,"KSATZ" + _fpw$)
       CALL DFile(3,"SSATZ" + _fpw$)
       FILE "Ksatz"
       INDEX periode.ksatz
       SELECT FIRST 
       SELECT KEY periode% FILE "ksatz" INDEX periode.ksatz
       i% = 0
       WHILE periode.ksatz = periode% AND NOT EOF ("ksatz")
         PAbschlus.ksatz = periode%
         i% = i% + 1
         i$ = STR$ (i%,"9999999")
         SET STATUS "Anzahl der SÑtze: " + i$
         CALL QuickStore("ksatz")
       SELECT NEXT LOCK 
       WEND 
       FILE "ssatz"
       INDEX periode.ssatz
       SELECT FIRST 
       SELECT KEY periode% FILE "ssatz" INDEX periode.ssatz
       i% = 0
       WHILE periode.ssatz = periode% AND NOT EOF ("ssatz")
         PAbschlus.ssatz = periode%
         i% = i% + 1
         i$ = STR$ (i%,"9999999")
         SET STATUS "Anzahl der SÑtze: " + i$
         CALL QuickStore("ssatz")
       SELECT NEXT LOCK 
       WEND 
      REM Exportieren der S/K-SÑtze  
       CALL SKExport()
     END IF 
   ELSE 
     REQUEST "Der Periode " + pabschlus$ + " ist bereits abgeschlossen worden !!!","Soll der Abschlu· wiederholt werden?",130,reqw%
     IF reqw% <> 1 THEN 
       periode% = ym%
     END IF 
   END IF 
 END IF 
 END SUB 
 
SUB SKExport()
  CALL DFile(3,"ABZUGANG" + _fpw$)
  CALL DFile(3,"KSATZ" + _fpw$)
  CALL DFile(3,"SSATZ" + _fpw$)
   ym% = VAL ( LEFT$ ( DATE$ ( TODAY ,"yymmdd"),4))
   my% = VAL ( LEFT$ ( DATE$ ( TODAY ,"ddmmyy"),4))
   yy% = VAL ( LEFT$ ( DATE$ ( TODAY ,"yymmdd"),2))
   mm% = VAL ( LEFT$ ( DATE$ ( TODAY ,"mmyydd"),2))
   IF mm% = 1 THEN 
     mmvor% = 12
     yyvor% = yy% - 1
   ELSE 
     mmvor% = mm% - 1
     yyvor% = yy%
   END IF 
   pabschlus% = yyvor% * 100 + mmvor%
   pabschlus$ = STR$ (pabschlus%,"0000")
   FILE "abzugang"
   INDEX PAbschlus.abzugang
   IF NOT EXISTS (pabschlus%,Pabschlus.abzugang) THEN 
     REM --- vorherige Periode wurde noch nicht abgeschlossen ---
     REQUEST "Die Periode " + pabschlus$ + " ist noch nicht abgeschlossen","FÅhren Sie erst den Periodenabschlu· durch?",2
     END SUB 
   END IF 
   REQUEST "Soll der Export der S/K-SÑtze fÅr die Periode " + pabschlu$," durchgefÅhrt werden?",130,reqex%
   IF reqex% <> 1 THEN END SUB 
   MOUSE OFF 
   dateiname$ = "K" + STR$ (my%,"0000") + ".asc"
   SET STATUS "Exportiere Datei nach " + dateiname$ + " ..."
   IF EXISTS (dateiname$) THEN DELETE dateiname$
   FILE "KSATZ"
   SET ANSICONVERT OFF 
   SELECT WHERE periode.ksatz = periode%
   SELECT FIRST 
   OPEN dateiname$ FOR OUTPUT 
   CLOSE OUTPUT 
   WHILE NOT EOF ("KSATZ") AND periode.ksatz = periode%
     ksatz$ = "k!"
     IF kostentrÑger.ksatz <> "" THEN 
       ksatz$ = ksatz$ + kostentrÑger.ksatz + "!"
     ELSE 
       ksatz$ = ksatz$ + "949999999999999!"
     END IF 
     IF kostenstelle.ksatz <> 0 THEN 
       ksatz$ = ksatz$ + STR$ (kostenstelle.ksatz,"000000") + "!"
     ELSE 
       ksatz$ = ksatz$ + LEFT$ (kostentrÑger.ksatz,1) + "3" + MID$ (kostentrÑger.ksatz,3,4) + "!"
     END IF 
     NUMDELIM ".,"
     ksatz$ = ksatz$ + STR$ (Nettobetrag.ksatz,"999999999999.00") + "!"
     NUMDELIM ",."
     ksatz$ = ksatz$ + "Materialverbrauch"
     SET STATUS ksatz$
     OPEN dateiname$ FOR APPEND 
     ? FN ansi(ksatz$)
     CLOSE OUTPUT 
     SELECT NEXT 
   WEND 
   SET STATUS "Ausgabe " + dateiname$ + " beendet!"
   FILE "SSATZ"
   dateiname$ = "S" + STR$ (my%,"0000") + ".asc"
   SET STATUS "Exportiere Datei nach " + dateiname$ + " ..."
   IF EXISTS (dateiname$) THEN DELETE dateiname$
   SET ANSICONVERT OFF 
   SELECT WHERE periode.ssatz = periode%
   SELECT FIRST 
   OPEN dateiname$ FOR OUTPUT 
   CLOSE OUTPUT 
   WHILE NOT EOF ("SSATZ") AND periode.ssatz = periode%
     ssatz$ = "S!"
     ssatz$ = ssatz$ + STR$ (Verbrauchskonto.ssatz,"000000") + "!" + STR$ (Bestandskonto.ssatz,"000000") + "!"
     ssatz$ = ssatz$ + belegnummer.ssatz + "!"
     ssatz$ = ssatz$ + DATE$ (Belegdatum.ssatz,"ddmmyy") + "!"
     NUMDELIM ".,"
     ssatz$ = ssatz$ + LTRIM$ ( STR$ (Nettobetrag.ssatz,"999999999999.00")) + "!"
     NUMDELIM ",."
     ssatz$ = ssatz$ + "s!Materialverbrauch!01"
     SET STATUS ssatz$
     OPEN dateiname$ FOR APPEND 
     ? FN ansi(ssatz$)
     CLOSE OUTPUT 
     SELECT NEXT 
   WEND 
   SET STATUS "Ausgabe " + dateiname$ + " beendet!"
   MOUSE ON 
 END SUB 
 
SUB CHKombi()
 REM 170998
 codear% = codear.artikel
 CALL QuickStore("artikel")
 SELECT KEY codear% LOCK FILE "artikel" INDEX codear.artikel
 IF IsKombi%(CodeAR%) AND (KostenTransport <> 0 OR KostenReparatur <> 0 OR KostenSonstiges <> 0) THEN 
   REQUEST "Eingabe von Kosten bei Kombiartikeln nicht mîglich!","Kalkulieren Sie die Kosten bei den einzelnen Artikeln!",2
   FILE "artikel"
   REM SELECT KEY codear% LOCK FILE "artikel" INDEX codear.artikel
   IF UCASE$ (artiform$) = "ARTIKEL" THEN 
     KostenTransport.artikel = 0
     Kostenreparatur.artikel = 0
     Kostensonstiges.artikel = 0
     CALL QuickStore("artikel")
     SELECT KEY codear% LOCK FILE "artikel" INDEX codear.artikel
   ELSE 
     KostTransEu.artikel = 0
     KostrepEu.artikel = 0
     KostsonstEu.artikel = 0
     CALL QuickStore("artikel")
     SELECT KEY codear% LOCK FILE "artikel" INDEX codear.artikel
   END IF 
   FORM 
   ENTER Handelsspanne.artikel,0
 END IF 
 frage% = 1
 IF UCASE$ (artiform$) = "ARTIKEL" THEN 
   CALL CHVKNetto()
   REM CALL CHHandelssp()
   CALL CHMwSt()
   CALL CHVKBrutto()
   CALL CHKombiN()
   CALL CHKombiB()
 ELSE 
   CALL CHVKNettoEu()
   REM CALL CHHandelssp()
   CALL CHMwStEu()
   CALL CHVKBruttoEu()
   CALL CHKombiNEu()
   CALL CHKombiBEu()
 END IF 
 geseinkauf% = ek.artikel + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel
 HSpanneDM$ = STR$ (VKnetto.ARTIKEL - geseinkauf%,",9999999999.00")
 PrDif% = VKnetto.ARTIKEL - geseinkauf%
 Handelsspanne.ARTIKEL = (100 / geseinkauf%) * PrDif%
 REM CALL QuickStore("artikel")
 frage% = 0
 FORM 
 END SUB 
 
  
 
 ' RechnungsÅbersicht allgemein
 ' =======================================================================
 ' ! 
 ' ! 
 
 
SUB RechnungAllg()
 
 END SUB 
 
 
 ' UmsatzÅbersicht kundenbezogen
 ' =======================================================================
 ' ! beim Aufruf aus ADRESSEN heraus wird nur der aktuelle
 ' ! Kunde ausgewertet
 
SUB UMSKUNDEN()
 von$ = ""
 bis$ = ""
 adrform$ = "ADRESSEN"
 IF DEFA$ = "MEGA" THEN adrform$ = "ADRDEFA"
 IF FORM LIKE adrform$ THEN 
   IF AAKunde.ADRESSEN LIKE "j" AND AALieferant.ADRESSEN LIKE "j" THEN 
     opt% = 1
     CREATE DIALOG "UMSADR",177,150,117,78,title$,"MS Sans Serif",8
     ADD DIALOG "UMSADR",4,0,0,117,56,0,""
     ADD DIALOG "UMSADR",9,5,9,20,21,2
     ADD DIALOG "UMSADR",5,33,12,72,10,0,"UmsatzÅbersicht fÅr"
     ADD DIALOG "UMSADR",3,33,25,37,11,0,"&Kunde",1,opt%
     ADD DIALOG "UMSADR",3,33,38,44,11,0,"&Lieferant",2,opt%
     ADD DIALOG "UMSADR",1,2,59,55,15,1,"&OK",1,1
     ADD DIALOG "UMSADR",1,58,59,55,15,0,"&Abbrechen",0,0
     DIALOG "UMSADR",req%
     REMOVE DIALOG "UMSADR"
     IF req% = 0 THEN opt% = 0
   ELSE 
     IF AAKunde.ADRESSEN LIKE "j" THEN opt% = 1
     IF AALieferant.ADRESSEN LIKE "j" THEN opt% = 2
     IF opt% = 0 THEN opt% = 1
   END IF 
 ELSE 
   opt% = 3
 END IF 
 IF opt% <> 0 THEN 
    buch$ = "n"
    CREATE DIALOG "UMSATZ",0,0,233,142,title$,"MS Sans Serif",8
    ADD DIALOG "UMSATZ",4,0,1,233,117,0,""
    ADD DIALOG "UMSATZ",9,6,12,20,21,2
    ADD DIALOG "UMSATZ",5,40,16,166,9,0,"Bitte geben Sie den Zeitraum ein, fÅr den Sie eine"
    ADD DIALOG "UMSATZ",5,40,25,93,10,0,"UmsatzÅbersicht wÅnschen."
    ADD DIALOG "UMSATZ",5,40,38,184,8,0,"Wenn Sie keinen Zeitraum bestimmen, werden sÑmtliche"
    ADD DIALOG "UMSATZ",5,40,48,65,9,0,"UmsÑtze angezeigt."
    ADD DIALOG "UMSATZ",2,40,70,180,16,0,"nur gebuchte Belege anzeigen","j","n",buch$
    ADD DIALOG "UMSATZ",6,62,97,40,13,0,0,von$,10
    ADD DIALOG "UMSATZ",6,153,97,40,13,0,0,bis$,10
    ADD DIALOG "UMSATZ",5,40,99,18,9,0,"von:"
    ADD DIALOG "UMSATZ",5,133,99,13,9,0,"bis:"
    ADD DIALOG "UMSATZ",1,57,124,55,15,1,"&OK",1,1
    ADD DIALOG "UMSATZ",1,114,124,55,15,0,"&Abbrechen",0,0
    DIALOG "UMSATZ",req%
   REMOVE DIALOG "UMSATZ"
   IF req% = 1 THEN 
     IF DateOK%(von$) OR von$ = "" THEN 
       IF DateOK%(bis$) OR bis$ = "" THEN 
         MOUSE OFF 
         CALL DFile(3,"MASTER" + _fpw$)
         CALL DFile(2,"OFFICE\adressen" + _fpw$)
         IF von$ = "" THEN vondat$ = "1.1.1980" ELSE vondat$ = von$
         IF bis$ = "" THEN bisdat$ = DATE$ ( TODAY ) ELSE bisdat$ = bis$
         CALL PRep("UMSATZK")
         REPORT ON sumNetto% AS "gummnetto%",sumBrutto% AS "gumbrutto%",brabatt% AS "gesrabattb%",nrabatt% AS "gesrabattn%"
         AFTER REPORT 
           SET REPORT PAGE "F_REPORT"
           OUTPUT REPORT PAGE 
         END REPORT 
 
         SELECT CASE opt%
         CASE 1
           Header2$ = "Umsatz nach Kunde (Einzelkunde)
         CASE 2
           Header2$ = "Umsatz nach Lieferant"
         CASE 3
           Header2$ = "Umsatz nach Kunde (gesamt)"
         END SELECT 
         Ueberschrift$ = "Zeitraum:"
         IF von$ = "" AND bis$ <> "" THEN Ueberschrift$ = Ueberschrift$ + " bis " + DATE$ ( TODAY ,"dd.mm.yy")
         IF von$ <> "" AND bis$ = "" THEN Ueberschrift$ = Ueberschrift$ + " ab " + von$
         IF von$ <> "" AND bis$ <> "" THEN Ueberschrift$ = Ueberschrift$ + " vom " + von$ + " bis " + bis$
         IF von$ = "" AND bis$ = "" THEN Ueberschrift$ = Ueberschrift$ + " (GesamtÅbersicht)"
         HEADING 
           SET REPORT PAGE "H_PAGE"
           OUTPUT REPORT PAGE 
         END HEADING 
         FOOTING 1
           SET REPORT PAGE "F_PAGE"
           OUTPUT REPORT PAGE 
         END FOOTING 
         GROUP CodeKU.ADRESSEN,sumNetto% AS "KundenUmsatzN%",sumBrutto% AS "KundenUmsatzB%",nrabatt% AS "sumrabattn%",brabatt% AS "sumrabattb%"
         BEFORE GROUP CodeKU.ADRESSEN
         SET REPORT PAGE "H_CodeKU.ADR002"
           OUTPUT REPORT PAGE 
         END GROUP 
         AFTER GROUP CodeKU.ADRESSEN
           SET REPORT PAGE "F_CodeKU.ADR002"
           OUTPUT REPORT PAGE 
         END GROUP 
         AFTER SELECT 
           SET REPORT PAGE "F_SELECT"
           OUTPUT REPORT PAGE 
         END SELECT 
         SET QUERY OFF 
         SET QUERY LOCK OFF 
         vondat% = DAYS (vondat$)
         bisdat% = DAYS (bisdat$)
         ON ERROR GOTO ErrUMSK
         IF opt% = 1 THEN 
           _cuku% = CodeKU.ADRESSEN
           IF buch$ = "j" THEN 
             SELECT ;
               WHERE CodeKU.ADRESSEN = CodeKU.MASTER AND CodeKU.MASTER = _cuku% AND StatusM.MASTER = "b" AND (Art.MASTER = 2 OR Art.master = 7) AND Datum.MASTER >= DAYS (vondat$) AND Datum.MASTER <= DAYS (bisdat$)
               ORDER Nachname.ADRESSEN,Datum.MASTER
               TO ASK 
             END SELECT 
             SELECT FORM KEY _cuku% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
           ELSE 
             SELECT ;
               WHERE CodeKU.ADRESSEN = CodeKU.MASTER AND CodeKU.MASTER = _cuku% AND (Art.MASTER = 2 OR Art.master = 7) AND Datum.MASTER >= DAYS (vondat$) AND Datum.MASTER <= DAYS (bisdat$)
               ORDER Nachname.ADRESSEN,Datum.MASTER
               TO ASK 
               END SELECT 
             SELECT FORM KEY _cuku% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
           END IF 
         END IF 
         IF opt% = 2 THEN 
           _cuku% = CodeKU.ADRESSEN
           IF buch$ = "j" THEN 
             SELECT ;
               WHERE CodeKU.ADRESSEN = CodeKU.MASTER AND CodeKU.MASTER = _cuku% AND StatusM.MASTER = "b" AND Art.MASTER = 5 AND Datum.MASTER >= DAYS (vondat$) AND Datum.MASTER <= DAYS (bisdat$)
               ORDER Nachname.ADRESSEN,Datum.MASTER
               TO ASK 
               END SELECT 
             SELECT FORM KEY _cuku% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
           ELSE 
             SELECT ;
               WHERE CodeKU.ADRESSEN = CodeKU.MASTER AND CodeKU.MASTER = _cuku% AND Art.MASTER = 5 AND Datum.MASTER >= DAYS (vondat$) AND Datum.MASTER <= DAYS (bisdat$)
               ORDER Nachname.ADRESSEN,Datum.MASTER
               TO ASK 
               END SELECT 
             SELECT FORM KEY _cuku% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
           END IF 
         END IF 
         IF opt% = 3 THEN 
           IF buch$ = "j" THEN 
             SELECT ;
               WHERE CodeKU.ADRESSEN = CodeKU.MASTER AND StatusM.MASTER = "b" AND (Art.MASTER = 2 OR Art.master = 7) AND Datum.MASTER >= DAYS (vondat$) AND Datum.MASTER <= DAYS (bisdat$)
               ORDER Nachname.ADRESSEN,Datum.MASTER
               TO ASK 
               END SELECT 
           ELSE 
             SELECT ;
               WHERE CodeKU.ADRESSEN = CodeKU.MASTER AND (Art.MASTER = 2 OR Art.master = 7) AND Datum.MASTER >= DAYS (vondat$) AND Datum.MASTER <= DAYS (bisdat$)
               ORDER Nachname.ADRESSEN,Datum.MASTER
               TO ASK 
               END SELECT 
           END IF 
ErrUMSK: 
             ON ERROR GOTO ErrorHandler
         END IF 
       ELSE 
         CALL Fehler("Falsches Datum bei 'bis:'!","Bitte geben Sie das Datum in der Form tt.mm.jj ein.")
       END IF 
     ELSE 
       CALL Fehler("Falsches Datum bei 'von:'!","Bitte geben Sie das Datum in der Form tt.mm.jj ein.")
     END IF 
   END IF 
 END IF 
 adrform$ = "ADRESSEN"
 IF DEFA$ = "MEGA" THEN adrform$ = "ADRDEFA"
 IF FORM LIKE adrform$ THEN FILE "ADRESSEN"
 MOUSE ON 
 END SUB 
 
 
 
 
 
 
SUB ListeAllg()
 IF disabled%("öBERSICHTEN") THEN END SUB 
 
 CALL DFile(3,"MASTER" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 von$ = ""
 bis$ = ""
 adrform$ = "ADRESSEN"
 IF DEFA$ = "MEGA" THEN adrform$ = "ADRDEFA"
 opt% = 2
 kontrollfeld$ = "n"
 CREATE DIALOG "ZUGART",0,0,134,139,title$,"MS Sans Serif",8
 ADD DIALOG "ZUGART",9,6,1,20,21,2
 ADD DIALOG "ZUGART",9,6,1,20,21,2
 ADD DIALOG "ZUGART",4,26,1,84,85,0,"öbersicht fÅr"
 IF NOT MNdisabled%("öBERSICHTOFFANG") THEN 
   ADD DIALOG "ZUGART",3,33,16,60,10,0,"Angebote",1,opt%
 END IF 
 IF NOT MNdisabled%("öBERSICHTOFFRE") THEN 
   ADD DIALOG "ZUGART",3,33,27,60,10,0,"Rechnungen",2,opt%
   ADD DIALOG "ZUGART",3,33,71,60,10,0,"Gutschriften",7,opt%
 END IF 
 ADD DIALOG "ZUGART",3,33,38,60,10,0,"Lieferscheine",3,opt%
 ADD DIALOG "ZUGART",3,33,49,60,10,0,"AuftrÑge",4,opt%
 IF NOT MNdisabled%("öBERSICHTOFFBESTELL") THEN 
   ADD DIALOG "ZUGART",3,33,60,60,10,0,"Bestellungen",5,opt%
 END IF 
 
 ADD DIALOG "ZUGART",2,28,94,85,10,0,"Export nach EXCEL","j","n",Kontrollfeld$
 ADD DIALOG "ZUGART",1,11,118,55,14,1,"&OK",1,1
 ADD DIALOG "ZUGART",1,67,118,55,14,0,"&Abbrechen",0,0
 DIALOG "ZUGART",req%
 REMOVE DIALOG "ZUGART"
 IF req% = 0 THEN opt% = 0
 IF FORM LIKE adrform$ THEN 
   ausgart% = 1
 ELSE 
   ausgart% = 2
 END IF 
 IF opt% <> 0 THEN 
   CREATE DIALOG "UMSATZ",0,0,233,108,title$,"MS Sans Serif",8
   ADD DIALOG "UMSATZ",4,0,0,233,86,0,""
   ADD DIALOG "UMSATZ",9,6,12,20,21,2
   ADD DIALOG "UMSATZ",5,40,16,166,9,0,"Bitte geben Sie den Zeitraum ein, fÅr den Sie eine"
   ADD DIALOG "UMSATZ",5,40,26,93,9,0,"öbersicht wÅnschen."
   ADD DIALOG "UMSATZ",5,40,38,184,9,0,"Wenn Sie keinen Zeitraum bestimmen, werden sÑmtliche"
   ADD DIALOG "UMSATZ",5,40,48,65,9,0,"VorgÑnge angezeigt."
   ADD DIALOG "UMSATZ",6,62,65,40,13,0,0,von$,10
   ADD DIALOG "UMSATZ",6,153,65,40,13,0,0,bis$,10
   ADD DIALOG "UMSATZ",5,40,67,18,9,0,"von:"
   ADD DIALOG "UMSATZ",5,133,67,13,10,0,"bis:"
   ADD DIALOG "UMSATZ",1,57,89,55,15,1,"&OK",1,1
   ADD DIALOG "UMSATZ",1,114,89,55,15,0,"&Abbrechen",0,0
   DIALOG "UMSATZ",req%
   REMOVE DIALOG "UMSATZ"
   IF req% = 1 THEN 
     IF DateOK%(von$) OR von$ = "" THEN 
       IF DateOK%(bis$) OR bis$ = "" THEN 
         MOUSE OFF 
         IF von$ = "" THEN vondat$ = "1.1.1980" ELSE vondat$ = von$
         IF bis$ = "" THEN bisdat$ = DATE$ ( TODAY ) ELSE bisdat$ = bis$
         IF kontrollfeld$ = "n" THEN 
           DIRECTORY GPrjForm$
           CALL PRep("LISTEALG")
           DIRECTORY _ppath$
           SELECT CASE opt%
           CASE 1
             Header2$ = "AngebotsÅbersicht"
           CASE 2
             Header2$ = "RechnungsÅbersicht"
           CASE 3
             Header2$ = "LieferscheinÅbersicht"
           CASE 4
             Header2$ = "AuftragsÅbersicht"
           CASE 5
             Header2$ = "BestellÅbersicht"
           CASE 7
             Header2$ = "GutschriftsÅbersicht"
           END SELECT 
           IF ausgart% = 1 THEN 
             SELECT KEY codeku.adressen FILE "adressen" INDEX codeku.adressen
             nachname$ = nachname.adressen
             header2$ = Header2$ + " fÅr Adresse: " + nachname.adressen
             FILE "master"
           END IF 
           Ueberschrift$ = "Zeitraum:"
           IF von$ = "" AND bis$ <> "" THEN Ueberschrift$ = Ueberschrift$ + " bis " + DATE$ ( TODAY ,"dd.mm.yy")
           IF von$ <> "" AND bis$ = "" THEN Ueberschrift$ = Ueberschrift$ + " ab " + von$
           IF von$ <> "" AND bis$ <> "" THEN Ueberschrift$ = Ueberschrift$ + " vom " + von$ + " bis " + bis$
           IF von$ = "" AND bis$ = "" THEN Ueberschrift$ = Ueberschrift$ + " (GesamtÅbersicht)"
           REPORT ON GesBrutto.MASTER AS "summeges%",GesBruttoEu.MASTER AS "summegese%"
           AFTER REPORT 
           SET REPORT PAGE "F_REPORT"
           OUTPUT REPORT PAGE 
           END REPORT 
        
           HEADING 
           SET REPORT PAGE "H_PAGE"
           OUTPUT REPORT PAGE 
           END HEADING 
       
           FOOTING 1
           SET REPORT PAGE "F_PAGE"
           OUTPUT REPORT PAGE 
           END FOOTING 
      
           AFTER SELECT 
           SET REPORT PAGE "F_SELECT"
           OUTPUT REPORT PAGE 
           END SELECT 
      
           SET QUERY ON 
           SET QUERY LOCK OFF 
           vondat% = DAYS (vondat$)
           bisdat% = DAYS (bisdat$)
           ON ERROR GOTO ErrUMSK
           IF ausgart% = 2 THEN 
             SELECT ;
               WHERE Datum.MASTER >= DAYS (vondat$) AND Datum.MASTER <= DAYS (bisdat$) AND art.master = opt%
               ORDER Datum.MASTER,nummer.master
               TO ASK 
             END SELECT 
           END IF 
           IF ausgart% = 1 THEN 
             _cuku% = CodeKU.ADRESSEN
             SELECT ;
               WHERE CodeKU.MASTER = _cuku% AND Datum.MASTER >= DAYS (vondat$) AND Datum.MASTER <= DAYS (bisdat$) AND art.master = opt%
               ORDER Datum.MASTER
               TO ASK 
               END SELECT 
             SELECT FORM KEY _cuku% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
ErrUMSK: 
             ON ERROR GOTO ErrorHandler
           END IF 
         ELSE 
           vondat% = DAYS (vondat$)
           bisdat% = DAYS (bisdat$)
           CALL MasterExport(vondat$,bisdat$,opt%)
         END IF 
       ELSE 
         CALL Fehler("Falsches Datum bei 'bis:'!","Bitte geben Sie das Datum in der Form tt.mm.jj ein.")
       END IF 
     ELSE 
       CALL Fehler("Falsches Datum bei 'von:'!","Bitte geben Sie das Datum in der Form tt.mm.jj ein.")
     END IF 
   END IF 
 END IF 
 adrform$ = "ADRESSEN"
 IF DEFA$ = "MEGA" THEN adrform$ = "ADRDEFA"
 IF FORM LIKE adrform$ THEN FILE "ADRESSEN"
 MOUSE ON 
 END SUB 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 ' UmsatzÅbersicht artikelbezogen
 ' =======================================================================
 ' ! beim Aufruf aus ARTIKEL heraus wird nur der aktuelle
 ' ! Artikel ausgewertet
 
SUB UMSARTIKEL()
 von$ = ""
 bis$ = ""
 buch$ = "n"
 sort% = 1
 CREATE DIALOG "UMSATZ",0,0,233,168,title$,"MS Sans Serif",8
 ADD DIALOG "UMSATZ",4,0,0,233,142,0,""
 ADD DIALOG "UMSATZ",9,6,12,20,21,2
 ADD DIALOG "UMSATZ",5,40,16,166,9,0,"Bitte geben Sie den Zeitraum ein, fÅr den Sie eine"
 ADD DIALOG "UMSATZ",5,40,25,93,10,0,"UmsatzÅbersicht wÅnschen."
 ADD DIALOG "UMSATZ",5,40,38,184,8,0,"Wenn Sie keinen Zeitraum bestimmen, werden sÑmtliche"
 ADD DIALOG "UMSATZ",5,40,48,65,9,0,"UmsÑtze angezeigt."
 ADD DIALOG "UMSATZ",2,40,70,180,16,0,"nur gebuchte Belege anzeigen","j","n",buch$
 ADD DIALOG "UMSATZ",3,40,89,151,13,0,"Sortierung nach Artikelnummer",0,sort%
 ADD DIALOG "UMSATZ",3,40,104,150,12,0,"Sortierung nach Artikelbezeichnung",1,sort%
 ADD DIALOG "UMSATZ",6,62,126,40,13,0,0,von$,10
 ADD DIALOG "UMSATZ",6,153,126,40,13,0,0,bis$,10
 ADD DIALOG "UMSATZ",5,40,128,18,9,0,"von:"
 ADD DIALOG "UMSATZ",5,133,128,13,9,0,"bis:"
 ADD DIALOG "UMSATZ",1,56,148,55,15,1,"&OK",1,1
 ADD DIALOG "UMSATZ",1,113,148,55,15,0,"&Abbrechen",0,0
 DIALOG "UMSATZ",req%
 REMOVE DIALOG "UMSATZ"
 IF req% = 1 THEN 
   CALL DFile(3,"SCHEIN" + _fpw$)
   CALL DFile(3,"LIEFRUCK" + _fpw$)
   FILE "schein"
   IF sort% = 1 THEN 
     INDEX bezeichnung.schein
     SELECT FIRST 
   ELSE 
     INDEX artikelnummer.schein
     SELECT FIRST 
   END IF 
   IF DateOK%(von$) OR von$ = "" THEN 
     IF DateOK%(bis$) OR bis$ = "" THEN 
       MOUSE OFF 
       CALL DFile(3,"ARTIKEL" + _fpw$)
       CALL DFile(3,"schein" + _fpw$)
       CALL DFile(3,"LIEFRUCK" + _fpw$)
       CALL DFile(3,"ARTPROV" + _fpw$)
       CALL DFile(3,"VERTRETE" + _fpw$)
       CALL DFile(3,"master" + _fpw$)
       IF von$ = "" THEN vondat$ = "1.1.1980" ELSE vondat$ = von$
       IF bis$ = "" THEN bisdat$ = DATE$ ( TODAY ) ELSE bisdat$ = bis$
       IF sort% = 1 THEN CALL PRep("UMSART")
       IF sort% = 0 THEN CALL PRep("UMSART1")
       Ueberschrift$ = "Zeitraum:"
       IF von$ = "" AND bis$ <> "" THEN Ueberschrift$ = Ueberschrift$ + " bis " + DATE$ ( TODAY ,"dd.mm.yy")
       IF von$ <> "" AND bis$ = "" THEN Ueberschrift$ = Ueberschrift$ + " ab " + von$
       IF von$ <> "" AND bis$ <> "" THEN Ueberschrift$ = Ueberschrift$ + " vom " + von$ + " bis " + bis$
      IF von$ = "" AND bis$ = "" THEN Ueberschrift$ = Ueberschrift$ + " (GesamtÅbersicht)"
       vondat% = DAYS (vondat$)
       bisdat% = DAYS (bisdat$)
 
       REPORT ON vknetto% AS "gsumnetto%",vkbrutto% AS "gsumbrutto%",rabattb% AS "bgesumrab%",rabattn% AS "ngesumrab%"
       AFTER REPORT 
       SET REPORT PAGE "F_REPORT"
       OUTPUT REPORT PAGE 
       END REPORT 
       HEADING 
       SET REPORT PAGE "H_PAGE"
       OUTPUT REPORT PAGE 
       END HEADING 
       FOOTING 1
       SET REPORT PAGE "F_PAGE"
       OUTPUT REPORT PAGE 
       END FOOTING 
       IF sort% = 1 THEN 
         GROUP Bezeichnung.SCHEIN,vknetto% AS "sumnetto%",vkbrutto% AS "sumbrutto%",rabattb% AS "rabattgesb%",rabattn% AS "rabattgesn%",anzahl% AS "gesanz%"
         BEFORE GROUP Bezeichnung.SCHEIN
         SET REPORT PAGE "H_Bezeichnun002"
       ELSE 
         GROUP Artikelnummer.SCHEIN,vknetto% AS "sumnetto%",vkbrutto% AS "sumbrutto%",rabattb% AS "rabattgesb%",rabattn% AS "rabattgesn%",anzahl% AS "gesanz%"
         BEFORE GROUP Artikelnummer.SCHEIN
         SET REPORT PAGE "H_Artikelnum002"
       END IF 
       OUTPUT REPORT PAGE 
       END GROUP 
       IF sort% = 1 THEN 
         AFTER GROUP Bezeichnung.SCHEIN
         SET REPORT PAGE "F_Bezeichnun002"
       ELSE 
         AFTER GROUP Artikelnummer.SCHEIN
         SET REPORT PAGE "F_Artikelnum002"
       END IF 
       OUTPUT REPORT PAGE 
       END GROUP 
 
       AFTER SELECT 
       SET REPORT PAGE "F_SELECT"
       OUTPUT REPORT PAGE 
       END SELECT 
 
 
      SET QUERY OFF 
      SET QUERY LOCK OFF 
       ON ERROR GOTO ErrUMSART
       IF FORM LIKE "artikel" THEN 
         _cuart% = CodeAR.ARTIKEL
         IF buch$ = "j" THEN 
           IF sort% = 1 THEN 
             SELECT ;
             WHERE CodeAR.schein = _cuart% AND StatusM.MASTER = "b" AND CodeMS.SCHEIN = CodeMS.MASTER AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$) AND (Art.MASTER = 2 OR Art.MASTER = 7)
             ORDER REPORT bezeichnung.schein
             TO ASK 
           ELSE 
             SELECT ;
             WHERE CodeAR.schein = _cuart% AND StatusM.MASTER = "b" AND CodeMS.SCHEIN = CodeMS.MASTER AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$) AND (Art.MASTER = 2 OR Art.MASTER = 7)
             ORDER REPORT Artikelnummer.schein
             TO ASK 
             END SELECT 
           END IF 
           SELECT FORM KEY _cuart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
         ELSE 
           IF sort% = 1 THEN 
             SELECT ;
             WHERE CodeAR.schein = _cuart% AND CodeMS.SCHEIN = CodeMS.MASTER AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$) AND (Art.MASTER = 2 OR Art.MASTER = 7)
             ORDER REPORT bezeichnung.schein
             TO ASK 
             END SELECT 
           ELSE 
             SELECT ;
             WHERE CodeAR.schein = _cuart% AND CodeMS.SCHEIN = CodeMS.MASTER AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$) AND (Art.MASTER = 2 OR Art.MASTER = 7)
             ORDER REPORT Artikelnummer.schein
             TO ASK 
             END SELECT 
           END IF 
           SELECT FORM KEY _cuart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
         END IF 
       ELSE 
         IF buch$ = "j" THEN 
           IF sort% = 1 THEN 
             SELECT ;
             WHERE CodeMS.SCHEIN = CodeMS.MASTER AND StatusM.MASTER = "b" AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$) AND (Art.MASTER = 2 OR Art.MASTER = 7)
             ORDER REPORT bezeichnung.schein
             TO ASK 
             END SELECT 
           ELSE 
             SELECT ;
             WHERE CodeMS.SCHEIN = CodeMS.MASTER AND StatusM.MASTER = "b" AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$) AND (Art.MASTER = 2 OR Art.MASTER = 7)
             ORDER REPORT Artikelnummer.schein
             TO ASK 
             END SELECT 
           END IF 
         ELSE 
           IF sort% = 1 THEN 
             SELECT ;
             WHERE CodeMS.SCHEIN = CodeMS.MASTER AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$) AND (Art.MASTER = 2 OR Art.MASTER = 7)
             ORDER REPORT bezeichnung.schein
             TO ASK 
             END SELECT 
           ELSE 
             SELECT ;
             WHERE CodeMS.SCHEIN = CodeMS.MASTER AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$) AND (Art.MASTER = 2 OR Art.MASTER = 7)
             ORDER REPORT Artikelnummer.schein
             TO ASK 
             END SELECT 
           END IF 
         END IF 
ErrUMSART: 
           ON ERROR GOTO ErrorHandler
       END IF 
     ELSE 
       CALL Fehler("Falsches Datum bei 'bis:'!","Bitte geben Sie das Datum in der Form tt.mm.jj ein.")
     END IF 
   ELSE 
     CALL Fehler("Falsches Datum bei 'von:'!","Bitte geben Sie das Datum in der Form tt.mm.jj ein.")
   END IF 
 END IF 
 IF FORM LIKE "artikel" THEN 
   FILE "ARTIKEL"
   CALL MNARTIKEL()
   CALL ARTUpdate()
 END IF 
 MOUSE ON 
 END SUB 
 
 
 ' UmsatzÅbersicht gruppenbezogen
 ' =======================================================================
 ' ! beim Aufruf aus GRUPPEN heraus wird nur der aktuelle
 ' ! Produktgruppe ausgewertet
 
SUB UMSGRUPPE()
 IF disabled%("öBERSICHTEN") THEN END SUB 
 von$ = ""
 bis$ = ""
 buch$ = "n"
 sort% = 1
 REQUEST "Mîchten Sie eine bestimmte Produktgruppe ausgegen?","",135,req%
 IF req% = 1 THEN 
   CALL PGWahl()
 ELSE 
   _cugrp% = 0
 END IF 
 bis$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 CREATE DIALOG "UMSATZ",0,0,233,168,title$,"MS Sans Serif",8
 ADD DIALOG "UMSATZ",4,0,0,233,142,0,""
 ADD DIALOG "UMSATZ",9,6,12,20,21,2
 ADD DIALOG "UMSATZ",5,40,16,166,9,0,"Bitte geben Sie den Zeitraum ein, fÅr den Sie eine"
 ADD DIALOG "UMSATZ",5,40,25,93,10,0,"UmsatzÅbersicht wÅnschen."
 ADD DIALOG "UMSATZ",5,40,38,184,8,0,"Wenn Sie keinen Zeitraum bestimmen, werden sÑmtliche"
 ADD DIALOG "UMSATZ",5,40,48,65,9,0,"UmsÑtze angezeigt."
 ADD DIALOG "UMSATZ",2,40,70,180,16,0,"nur gebuchte Belege anzeigen","j","n",buch$
 ADD DIALOG "UMSATZ",3,40,89,151,13,0,"Sortierung nach Artikelnummer",0,sort%
 ADD DIALOG "UMSATZ",3,40,104,150,12,0,"Sortierung nach Artikelbezeichnung",1,sort%
 ADD DIALOG "UMSATZ",6,62,126,40,13,0,0,von$,10
 ADD DIALOG "UMSATZ",6,153,126,40,13,0,0,bis$,10
 ADD DIALOG "UMSATZ",5,40,128,18,9,0,"von:"
 ADD DIALOG "UMSATZ",5,133,128,13,9,0,"bis:"
 ADD DIALOG "UMSATZ",1,56,148,55,15,1,"&OK",1,1
 ADD DIALOG "UMSATZ",1,113,148,55,15,0,"&Abbrechen",0,0
 DIALOG "UMSATZ",req%
 REMOVE DIALOG "UMSATZ"
 IF req% = 1 THEN 
   IF mastform$ = "EUR" THEN 
     reqeu% = 1
   ELSE 
     REQUEST "öbersicht in Euro ausgeben?","",135,reqeu%
   END IF 
   IF DateOK%(von$) OR von$ = "" THEN 
     IF DateOK%(bis$) OR bis$ = "" THEN 
       MOUSE OFF 
       CALL DFile(3,"master" + _fpw$)
       CALL DFile(3,"schein" + _fpw$)
       CALL DFile(3,"ARTPROV" + _fpw$)
       CALL DFile(3,"LIEFRUCK" + _fpw$)
       CALL DFile(3,"GRUPPEN" + _fpw$)
       FILE "schein"
       INDEX Produktgruppe.schein
       IF RECCOUNT ("schein") > 0 THEN 
         SELECT FIRST LOCK 
       ELSE 
         SELECT LAST 
       END IF 
       IF Produktgruppe.schein = "" THEN 
         MOUSE OFF 
         i% = 0
         WHILE NOT EOF ("Schein")
           i% = i% + 1
           SET STATUS "Eintragen der Produktgruppe in " + Bezeichnung.schein + "  " + STR$ (i%)
           IF Produktgruppe.schein = "" THEN 
             IF EXISTS (codegr.schein,codegr.gruppen) THEN 
               SELECT FIRST FILE "gruppen" INDEX codegr.gruppen
               SELECT KEY codegr.schein FILE "gruppen" INDEX codegr.gruppen
               Produktgruppe.schein = Kurzbezeichnung.gruppen
               STORE FILE "schein"
               UNLOCK CURRENT FILE "schein"
               SELECT FIRST LOCK FILE "schein"
             ELSE 
               Produktgruppe.schein = "existiert nicht mehr"
               STORE FILE "schein"
               UNLOCK CURRENT FILE "schein"
               SELECT FIRST LOCK FILE "schein"
             END IF 
           ELSE 
             GOTO e1507001gr01
           END IF 
         WEND 
e1507001gr01: 
         MOUSE OFF 
         SET STATUS ""
       END IF 
       IF von$ = "" THEN vondat$ = "1.1.1980" ELSE vondat$ = von$
       IF bis$ = "" THEN bisdat$ = DATE$ ( TODAY ) ELSE bisdat$ = bis$
       IF reqeu% = 1 THEN 
         CALL PRep("UMSATZGE")
       ELSE 
         CALL PRep("UMSATZG")
       END IF 
       Ueberschrift$ = "UmsatzÅbersicht Produktgruppen im Zeitraum:"
       IF von$ = "" AND bis$ <> "" THEN Ueberschrift$ = Ueberschrift$ + " bis " + DATE$ ( TODAY ,"dd.mm.yy")
       IF von$ <> "" AND bis$ = "" THEN Ueberschrift$ = Ueberschrift$ + " ab " + von$
       IF von$ <> "" AND bis$ <> "" THEN Ueberschrift$ = Ueberschrift$ + " vom " + von$ + " bis " + bis$
       IF von$ = "" AND bis$ = "" THEN Ueberschrift$ = Ueberschrift$ + " (GesamtÅbersicht)"

         REPORT ON vknetto% AS "gsumnetto%",vkbrutto% AS "gsumbrutto%",rabattb% AS "bgesumrab%",rabattn% AS "ngesumrab%"
         AFTER REPORT 
         SET REPORT PAGE "F_REPORT"
         OUTPUT REPORT PAGE 
         END REPORT 
         HEADING 
         SET REPORT PAGE "H_PAGE"
         OUTPUT REPORT PAGE 
         END HEADING 
         FOOTING 1
         SET REPORT PAGE "F_PAGE"
         OUTPUT REPORT PAGE 
         END FOOTING 
 
         GROUP Produktgruppe.SCHEIN,vknetto% AS "sunnetto%",vkbrutto% AS "sumbrutto%",rabattb% AS "rabattgesb%",rabattn% AS "rabattgesn%",anzahl% AS "gesanz%"
         BEFORE GROUP Produktgruppe.SCHEIN
         SET REPORT PAGE "H_Produktgru002"
         OUTPUT REPORT PAGE 
         END GROUP 
         AFTER GROUP Produktgruppe.SCHEIN
         SET REPORT PAGE "F_Produktgru002"
         OUTPUT REPORT PAGE 
         END GROUP 
 
         AFTER SELECT 
         SET REPORT PAGE "F_SELECT"
         OUTPUT REPORT PAGE 
         END SELECT 
       vondat% = DAYS (vondat$)
       bisdat% = DAYS (bisdat$)
       _cugr% = _cugrp%
       ON ERROR GOTO ErrUMSGRP

       IF FORM LIKE "gruppen" THEN 
         
         IF buch$ = "j" THEN 
           IF sort% = 1 THEN 
             IF _cugr% <> 0 THEN 
               SELECT ;
               WHERE CodeGR.schein = _cugr% AND CodeMS.SCHEIN = CodeMS.MASTER AND (Art.MASTER = 2 OR Art.MASTER = 7) AND StatusM.MASTER = "b" AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$)
               ORDER REPORT Produktgruppe.schein,Bezeichnung.schein,Datum.master
               TO ASK 
               END SELECT 
             ELSE 
               SELECT ;
               WHERE CodeGR.schein = codegr.gruppen AND CodeMS.SCHEIN = CodeMS.MASTER AND (Art.MASTER = 2 OR Art.MASTER = 7) AND StatusM.MASTER = "b" AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$)
               ORDER REPORT Produktgruppe.schein,Bezeichnung.schein,Datum.master
               TO ASK 
               END SELECT 
             END IF 
           ELSE 
             IF _cugr% <> 0 THEN 
               SELECT ;
               WHERE CodeGR.schein = _cugr% AND CodeMS.SCHEIN = CodeMS.MASTER AND (Art.MASTER = 2 OR Art.MASTER = 7) AND StatusM.MASTER = "b" AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$)
               ORDER REPORT Produktgruppe.schein,Artikelnummer.schein,Datum.master
               TO ASK 
               END SELECT 
             ELSE 
               SELECT ;
               WHERE CodeGR.schein = codegr.gruppen AND CodeMS.SCHEIN = CodeMS.MASTER AND (Art.MASTER = 2 OR Art.MASTER = 7) AND StatusM.MASTER = "b" AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$)
               ORDER REPORT Produktgruppe.schein,Artikelnummer.schein,Datum.master
               TO ASK 
               END SELECT 
             END IF 
           END IF 
             SELECT FORM KEY _cugr% FILE "GRUPPEN" INDEX CodeGR.GRUPPEN

         ELSE 
           IF sort% = 1 THEN 
             IF _cugr% <> 0 THEN 
               SELECT ;
               WHERE CodeGR.schein = _cugr% AND CodeMS.schein = CodeMS.MASTER AND (Art.MASTER = 2 OR Art.MASTER = 7) AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$)
               ORDER REPORT Produktgruppe.schein,Bezeichnung.schein,Datum.master
               TO ASK 
               END SELECT 
             ELSE 
               SELECT ;
               WHERE CodeGR.schein = codegr.gruppen AND CodeMS.schein = CodeMS.MASTER AND (Art.MASTER = 2 OR Art.MASTER = 7) AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$)
               ORDER REPORT Produktgruppe.schein,Bezeichnung.schein,Datum.master
               TO ASK 
               END SELECT 
             END IF 
           ELSE 
             IF _cugr% <> 0 THEN 
               SELECT ;
               WHERE CodeGR.schein = _cugr% AND CodeMS.schein = CodeMS.MASTER AND (Art.MASTER = 2 OR Art.MASTER = 7) AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$)
               ORDER REPORT Produktgruppe.schein,Artikelnummer.schein,Datum.master
               TO ASK 
               END SELECT 
             ELSE 
               SELECT ;
               WHERE CodeGR.schein = codegr.gruppen AND CodeMS.schein = CodeMS.MASTER AND (Art.MASTER = 2 OR Art.MASTER = 7) AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$)
               ORDER REPORT Produktgruppe.schein,Artikelnummer.schein,Datum.master
               TO ASK 
               END SELECT 
             END IF 
           END IF 
             SELECT FORM KEY _cugr% FILE "GRUPPEN" INDEX CodeGR.GRUPPEN
         END IF 
       ELSE 
         IF buch$ = "j" THEN 
           IF sort% = 1 THEN 
             IF _cugr% <> 0 THEN 
               SELECT ;
               WHERE CodeGR.schein = _cugr% AND CodeMS.SCHEIN = CodeMS.MASTER AND (Art.MASTER = 2 OR Art.MASTER = 7) AND StatusM.MASTER = "b" AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$)
               ORDER REPORT Produktgruppe.schein,Bezeichnung.schein,datum.master
               TO ASK 
               END SELECT 
             ELSE 
               SELECT ;
               WHERE CodeGR.schein = codegr.gruppen AND CodeMS.SCHEIN = CodeMS.MASTER AND (Art.MASTER = 2 OR Art.MASTER = 7) AND StatusM.MASTER = "b" AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$)
               ORDER REPORT Produktgruppe.schein,Bezeichnung.schein,datum.master
               TO ASK 
               END SELECT 
             END IF 
           ELSE 
             IF _cugr% <> 0 THEN 
               SELECT ;
               WHERE CodeGR.schein = _cugr% AND CodeMS.SCHEIN = CodeMS.MASTER AND (Art.MASTER = 2 OR Art.MASTER = 7) AND StatusM.MASTER = "b" AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$)
               ORDER REPORT Produktgruppe.schein,Artikelnummer.schein,datum.master
               TO ASK 
               END SELECT 
             ELSE 
               SELECT ;
               WHERE CodeGR.schein = codegr.gruppen AND CodeMS.SCHEIN = CodeMS.MASTER AND (Art.MASTER = 2 OR Art.MASTER = 7) AND StatusM.MASTER = "b" AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$)
               ORDER REPORT Produktgruppe.schein,Artikelnummer.schein,datum.master
               TO ASK 
               END SELECT 
             END IF 
           END IF 
         ELSE 
           IF sort% = 1 THEN 
             IF _cugr% <> 0 THEN 
               SELECT ;
               WHERE CodeGR.schein = _cugr% AND CodeMS.SCHEIN = CodeMS.MASTER AND (Art.MASTER = 2 OR Art.MASTER = 7) AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$)
               ORDER REPORT Produktgruppe.schein,Bezeichnung.schein,datum.master
               TO ASK 
               END SELECT 
             ELSE 
               SELECT ;
               WHERE CodeGR.schein = codegr.gruppen AND CodeMS.SCHEIN = CodeMS.MASTER AND (Art.MASTER = 2 OR Art.MASTER = 7) AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$)
               ORDER REPORT Produktgruppe.schein,Bezeichnung.schein,datum.master
               TO ASK 
               END SELECT 
             END IF 
           ELSE 
             IF _cugr% <> 0 THEN 
               SELECT ;
               WHERE CodeGR.schein = _cugr% AND CodeMS.SCHEIN = CodeMS.MASTER AND (Art.MASTER = 2 OR Art.MASTER = 7) AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$)
               ORDER REPORT Produktgruppe.schein,Artikelnummer.schein,datum.master
               TO ASK 
               END SELECT 
             ELSE 
               SELECT ;
               WHERE CodeGR.schein = codegr.gruppen AND CodeMS.SCHEIN = CodeMS.MASTER AND (Art.MASTER = 2 OR Art.MASTER = 7) AND Datum.master >= DAYS (vondat$) AND Datum.master <= DAYS (bisdat$)
               ORDER REPORT Produktgruppe.schein,Artikelnummer.schein,datum.master
               TO ASK 
               END SELECT 
             END IF 
           END IF 
         END IF 
ErrUMSGRP: 
           ON ERROR GOTO ErrorHandler
       END IF 
     ELSE 
       CALL Fehler("Falsches Datum bei 'bis:'!","Bitte geben Sie das Datum in der Form tt.mm.jj ein.")
     END IF 
   ELSE 
     CALL Fehler("Falsches Datum bei 'von:'!","Bitte geben Sie das Datum in der Form tt.mm.jj ein.")
   END IF 
 END IF 
 IF FORM LIKE "GRUPPEN" THEN FILE "GRUPPEN"
 MOUSE ON 
 END SUB 
 
 
  
 ' Produkte einer Gruppe bearbeiten
 ' =======================================================================
 
SUB GRPProduct()
 cugrp% = CodeGR.gruppen
 CALL ARTIKEL()
 END SUB 
 
 
 '      ******************************************************
 '      ** Routinen fÅr Formular "ARTIKEL" - Produktdetails **
 '      ******************************************************
 
SUB ARTIKEL()
 CALL DFile(3,"GRUPPEN" + _fpw$)
 CALL DFile(3,"master" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"VERTRETE" + _fpw$)
 CALL DFile(3,"KOMBI" + _fpw$)
 CALL DFile(3,"Serienr" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 _formend% = 0
 REM artiform$ = "ARTIKEL"
 IF DEFA$ = "MEGA" THEN artiform$ = "ARTIDEFA"
 IF mastform$ LIKE "EUR" THEN 
     artiform$ = "ARTIKEEU"
     euromaske% = 1
     mastform$ = "EUR"
 ELSE 
     artiform$ = "ARTIKEL"
     euromaske% = 0
     mastform$ = ""
 END IF 
 artiform1$ = artiform$
 WHILE _formend% = 0
   ARTIKELsub% = 0
   IF UCASE$ ( FORM ) <> artiform1$ THEN 
     CALL MNARTIKEL()
     MENU ON 
     OPEN FORM GPrjForm$ + artiform1$
     SET f = superbase.form
     IF eurosupport$ = "TRUE" AND artiform$ = "ARTIKEL" THEN 
       f.euromaske1.visible = - 1
       f.euromaske1.enabled = - 1
       f.labelwaehr1.visible = - 1
       f.labelwaehr1.enabled = - 1
       f.euromaske2.visible = - 1
       f.euromaske2.enabled = - 1
       f.labelwaehr2.visible = - 1
       f.labelwaehr2.enabled = - 1
       f.euromaske3.visible = - 1
       f.euromaske3.enabled = - 1
       f.labelwaehr3.visible = - 1
       f.labelwaehr3.enabled = - 1
       f.labelwaehr0.visible = - 1
       f.labelwaehr0.enabled = - 1
       f.waehrbutton1.visible = - 1
       f.waehrbutton1.enabled = - 1
       f.waehrbutton2.visible = - 1
       f.waehrbutton2.enabled = - 1
       f.waehrbutton3.visible = - 1
       f.waehrbutton3.enabled = - 1
     ELSE 
       IF artiform$ = "ARTIKEL" THEN 
         f.euromaske1.visible = 0
         f.euromaske1.enabled = 0
         f.labelwaehr1.visible = 0
         f.labelwaehr1.enabled = 0
         f.euromaske2.visible = 0
         f.euromaske2.enabled = 0
         f.labelwaehr2.visible = 0
         f.labelwaehr2.enabled = 0
         f.euromaske3.visible = 0
         f.euromaske3.enabled = 0
         f.labelwaehr3.visible = 0
         f.labelwaehr3.enabled = 0
         f.labelwaehr0.visible = 0
         f.labelwaehr0.enabled = 0
         f.waehrbutton1.visible = 0
         f.waehrbutton1.enabled = 0
         f.waehrbutton2.visible = 0
         f.waehrbutton2.enabled = 0
         f.waehrbutton3.visible = 0
         f.waehrbutton3.enabled = 0
       END IF 
     END IF 
     SET HEADING title$ + " - Artikel"
     SET STATUS "Artikel"
     SELECT WHERE novi1.artikel = 0
     CALL ARTIntro()
     CALL ARTUpdate()
     GAppName$ = _netpath$ + "DOCP\artikel.pdf"
   END IF 
   REM CALL ARTUpdate()
   MOUSE ON 
   f.abbruch1.visible = 0
   f.abbruch1.enabled = 0
   f.abbruch.visible = 0
   f.abbruch.enabled = 0
   f.suchen.enabled = - 1
   f.suchen.visible = - 1
   CALL ClearKBDBuffer()
   REM CALL MNARTIKEL()
   SET STATUS "Artikelverwaltung - Anzahl Artikel" + STR$ ( RECCOUNT ("ARTIKEL"),",9999999")
   WAIT MOUSE OR KEY OR MENU OR FOR 600
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL ARTPrev()
   CASE CrsRight%,PgDn%
     CALL ARTNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN 
     IF PAGE > 1 THEN 
       FORM 1
     ELSE 
       _formend% = 1
     END IF 
   END IF 
   SELECT CASE ARTIKELsub%
   CASE 1
     CALL KOMBIntro()
     CALL ARTUpdate()
   CASE 2
     codear% = codear.artikel
     cugrp% = Codegr.artikel
     CALL SerienListe(codear%)
     CALL ARTUpdate()
   CASE 3
     cuart% = codear.artikel
     cugrp% = Codegr.artikel
     REM CALL UMSARTIKEL()
     IF NOT disabled%("öBERSICHTEN") THEN 
       CALL ArtDruckNeu(0)
     END IF 
     CALL ARTUpdate()
   CASE 4
     CALL ArtDruckNeu(0)
   CASE 5
     CALL ChangeToEur()
   CASE 6
     REM Kundenpreise
     cuart% = codear.artikel
     cugrp% = Codegr.artikel
     CALL AKuPreis()
     IF euromaske% = 0 THEN 
       artiform$ = "ARTIKEL"
       artiform1$ = artiform$
     ELSE 
       artiform$ = "ARTIKEEU"
       artiform1$ = artiform$
     END IF 
   CASE 7
     ON ERROR GOTO ErrBild150120031
     FORM 4
     FORM SHOW 
ErrBild150120031: 
     ON ERROR GOTO ErrorHandler
   CASE 98
     IF DEFA$ = "MEGA" THEN ENTER Artikelnummer.artikel,0
     IF DEFA$ <> "MEGA" THEN ENTER Bezeichnung.artikel,0
         CALL ButEnabled()
         codear% = Codear.artikel
         f.suchen.enabled = - 1
         f.suchen.visible = - 1
         f.abbruch.enabled = 0
         f.abbruch.visible = 0
         f.abbruch1.enabled = 0
         f.abbruch1.visible = 0
         f.loeschen.enabled = - 1
         f.kopieren.enabled = - 1
         f.umsatz.enabled = - 1
         f.bestandsfuehrung.enabled = - 1
         f.bestandteile.enabled = - 1
         f.produktgruppe.enabled = - 1
         f.lieferant1.enabled = - 1
         f.lieferant2.enabled = - 1
         f.lieferant3.enabled = - 1
         f.seriennummer.enabled = - 1
 
     CALL ARTUpdate()
   CASE 99
     IF DEFA$ = "MEGA" THEN 
       IF PAGE = 1 THEN ENTER Artikelnummer.artikel,0
     END IF 
     IF PAGE = 1 AND DEFA$ <> "MEGA" THEN 
       IF RECCOUNT ("ARTIKEL") = 0 THEN 
         CALL ARTNeu()
       ELSE 
         CALL ButDesabled()
         f.suchen.enabled = 0
         f.suchen.visible = 0
         f.abbruch.enabled = - 1
         f.abbruch.visible = - 1
         f.abbruch1.enabled = - 1
         f.abbruch1.visible = - 1
         f.loeschen.enabled = 0
         f.bestandsfuehrung.enabled = 0
         f.bestandteile.enabled = 0
         f.produktgruppe.enabled = 0
         f.kopieren.enabled = 0
         f.lieferant1.enabled = 0
         f.lieferant2.enabled = 0
         f.lieferant3.enabled = 0
         f.seriennummer.enabled = 0
         f.umsatz.enabled = 0
         f.euromaske1.enabled = 0
         SET EDIT SELECT ON 
         ENTER Bezeichnung.ARTIKEL,0
         SET EDIT SELECT OFF 
         CALL ButEnabled()
         f.euromaske1.enabled = - 1
         codear% = Codear.artikel
         f.suchen.enabled = - 1
         f.suchen.visible = - 1
         f.abbruch.enabled = 0
         f.abbruch.visible = 0
         f.abbruch1.enabled = 0
         f.abbruch1.visible = 0
         f.loeschen.enabled = - 1
         f.kopieren.enabled = - 1
         f.umsatz.enabled = - 1
         f.bestandsfuehrung.enabled = - 1
         f.bestandteile.enabled = - 1
         f.produktgruppe.enabled = - 1
         f.lieferant1.enabled = - 1
         f.lieferant2.enabled = - 1
         f.lieferant3.enabled = - 1
         f.seriennummer.enabled = - 1
 
         WHILE NOT EOF ("vertrete")
           codema% = codema.vertrete
           quickarma$ = STR$ (codear%,"000000") + STR$ (codema%,"000000")
           name$ = name.vertrete
           IF NOT EXISTS (quickarma$,quickarma.artprov) THEN 
             IF name$ LIKE "ZZZ GELôSCHT" THEN 
             ELSE 
               BLANK FILE "artprov"
               codear.artprov = codear%
               codema.artprov = codema.vertrete
               ProvisProz.artprov = 0
               ProvisDM.artprov = 0
               CALL QuickStore("artprov")
             END IF 
           END IF 
         SELECT NEXT FILE "vertrete"
         WEND 
         FILE "artprov"
         INDEX codear.artprov
         SELECT FIRST 
         SELECT FORM KEY codear% FILE "artprov" INDEX codear.artprov
         MOUSE ON 
       END IF 
     END IF 
     IF DEFA$ = "MEGA" THEN 
       SET EDIT SELECT ON 
       IF PAGE = 3 THEN ENTER Dispomenge.artikel,0
       SET EDIT SELECT OFF 
     ELSE 
       IF PAGE = 3 THEN 
         f.abbruch1.enabled = - 1
         f.abbruch1.visible = - 1
         f.seite1.enabled = 0
         f.bearb1.enabled = 0
         f.lief1.enabled = 0
         f.lief2.enabled = 0
         f.lief3.enabled = 0
         f.erg.enabled = 0
         SET EDIT SELECT ON 
         ENTER Bestand.ARTIKEL,0
         SET EDIT SELECT OFF 
         f.abbruch1.enabled = 0
         f.abbruch1.visible = 0
         f.seite1.enabled = - 1
         f.bearb1.enabled = - 1
         f.lief1.enabled = - 1
         f.lief2.enabled = - 1
         f.lief3.enabled = - 1
         f.erg.enabled = - 1
       END IF 
     END IF 
     CALL ARTUpdate()
   END SELECT 
   
   IF abbruch% = - 1 THEN 
     SELECT KEY codear.artikel FILE "artikel" INDEX codear.artikel
     FORM 
     abbruch% = 0
   END IF 
   REM CALL BMCheckMail()
 WEND 
 _formend% = 0
 FILE "Artikel"
 SELECT WHERE FILE "Artikel"
 INDEX codear.artikel
 SELECT FIRST 
 END SUB 
 
 REM Berechnung des Mengenrabattes in DM
SUB RmeDM()
 IF UCASE$ ( FORM ) = "ARTIKEL" THEN 
   IF rme1.artikel > 0 THEN 
     IF rmeproz1.artikel > 0 THEN 
       rmedm1.artikel = rmeproz1.artikel * vknetto.artikel / 100
     END IF 
   END IF 
   IF rme2.artikel > 0 THEN 
     IF rmeproz2.artikel > 0 THEN 
       rmedm2.artikel = rmeproz2.artikel * vknetto.artikel / 100
     END IF 
   END IF 
   IF rme3.artikel > 0 THEN 
     IF rmeproz3.artikel > 0 THEN 
       rmedm3.artikel = rmeproz3.artikel * vknetto.artikel / 100
     END IF 
   END IF 
   IF rme4.artikel > 0 THEN 
     IF rmeproz4.artikel > 0 THEN 
       rmedm4.artikel = rmeproz4.artikel * vknetto.artikel / 100
     END IF 
   END IF 
   IF rme5.artikel > 0 THEN 
     IF rmeproz5.artikel > 0 THEN 
       rmedm5.artikel = rmeproz5.artikel * vknetto.artikel / 100
     END IF 
   END IF 

   IF rme1.artikel > 0 THEN 
     IF rmeproz1.artikel > 0 THEN 
       rmeeu1.artikel = rmeproz1.artikel * vknettoeu.artikel / 100
     END IF 
   END IF 
   IF rme2.artikel > 0 THEN 
     IF rmeproz2.artikel > 0 THEN 
       rmeeu2.artikel = rmeproz2.artikel * vknettoeu.artikel / 100
     END IF 
   END IF 
   IF rme3.artikel > 0 THEN 
     IF rmeproz3.artikel > 0 THEN 
       rmeeu3.artikel = rmeproz3.artikel * vknettoeu.artikel / 100
     END IF 
   END IF 
   IF rme4.artikel > 0 THEN 
     IF rmeproz4.artikel > 0 THEN 
       rmeeu4.artikel = rmeproz4.artikel * vknettoeu.artikel / 100
     END IF 
   END IF 
   IF rme5.artikel > 0 THEN 
     IF rmeproz5.artikel > 0 THEN 
       rmeeu5.artikel = rmeproz5.artikel * vknettoeu.artikel / 100
     END IF 
   END IF 
 ELSE 
   IF rme1.artikel > 0 THEN 
     IF rmeproz1.artikel > 0 THEN 
       rmeeu1.artikel = rmeproz1.artikel * vknettoeu.artikel / 100
     END IF 
   END IF 
   IF rme2.artikel > 0 THEN 
     IF rmeproz2.artikel > 0 THEN 
       rmeeu2.artikel = rmeproz2.artikel * vknettoeu.artikel / 100
     END IF 
   END IF 
   IF rme3.artikel > 0 THEN 
     IF rmeproz3.artikel > 0 THEN 
       rmeeu3.artikel = rmeproz3.artikel * vknettoeu.artikel / 100
     END IF 
   END IF 
   IF rme4.artikel > 0 THEN 
     IF rmeproz4.artikel > 0 THEN 
       rmeeu4.artikel = rmeproz4.artikel * vknettoeu.artikel / 100
     END IF 
   END IF 
   IF rme5.artikel > 0 THEN 
     IF rmeproz5.artikel > 0 THEN 
       rmeeu5.artikel = rmeproz5.artikel * vknettoeu.artikel / 100
     END IF 
   END IF 

   IF rme1.artikel > 0 THEN 
     IF rmeproz1.artikel > 0 THEN 
       rmedm1.artikel = rmeproz1.artikel * vknetto.artikel / 100
     END IF 
   END IF 
   IF rme2.artikel > 0 THEN 
     IF rmeproz2.artikel > 0 THEN 
       rmedm2.artikel = rmeproz2.artikel * vknetto.artikel / 100
     END IF 
   END IF 
   IF rme3.artikel > 0 THEN 
     IF rmeproz3.artikel > 0 THEN 
       rmedm3.artikel = rmeproz3.artikel * vknetto.artikel / 100
     END IF 
   END IF 
   IF rme4.artikel > 0 THEN 
     IF rmeproz4.artikel > 0 THEN 
       rmedm4.artikel = rmeproz4.artikel * vknetto.artikel / 100
     END IF 
   END IF 
   IF rme5.artikel > 0 THEN 
     IF rmeproz5.artikel > 0 THEN 
       rmedm5.artikel = rmeproz5.artikel * vknetto.artikel / 100
     END IF 
   END IF 
 END IF 
 FORM 
 END SUB 
 
SUB RmeDMS()
 
   IF rme1.schein > 0 THEN 
     IF rmeproz1.schein > 0 THEN 
       rmedm1.schein = rmeproz1.schein * vknetto.schein / 100
       rmeEU1.schein = rmeproz1.schein * vknettoEU.schein / 100
     END IF 
   END IF 
   IF rme2.schein > 0 THEN 
     IF rmeproz2.schein > 0 THEN 
       rmedm2.schein = rmeproz2.schein * vknetto.schein / 100
       rmeEU2.schein = rmeproz2.schein * vknettoEU.schein / 100
     END IF 
   END IF 
   IF rme3.schein > 0 THEN 
     IF rmeproz3.schein > 0 THEN 
       rmedm3.schein = rmeproz3.schein * vknetto.schein / 100
       rmeEU3.schein = rmeproz3.schein * vknettoEU.schein / 100
     END IF 
   END IF 
   IF rme4.schein > 0 THEN 
     IF rmeproz4.schein > 0 THEN 
       rmedm4.schein = rmeproz4.schein * vknetto.schein / 100
       rmeEU4.schein = rmeproz4.schein * vknettoEU.schein / 100
     END IF 
   END IF 
   IF rme5.schein > 0 THEN 
     IF rmeproz5.schein > 0 THEN 
       rmedm5.schein = rmeproz5.schein * vknetto.schein / 100
       rmeEU5.schein = rmeproz5.schein * vknettoEU.schein / 100
     END IF 
   END IF 
 
 FORM 
 END SUB 
 
 
 
  REM Berechnung des Mengenrabattes in %
SUB RmeProz()
 IF UCASE$ ( FORM ) = "ARTIKEL" THEN 
   IF rme1.artikel > 0 THEN 
     IF rmedm1.artikel > 0 THEN 
       rmeproz1.artikel = rmedm1.artikel * 100 / VKNetto.artikel
     END IF 
   END IF 
   IF rme2.artikel > 0 THEN 
     IF rmedm2.artikel > 0 THEN 
       rmeproz2.artikel = rmedm2.artikel * 100 / VKNetto.artikel
     END IF 
   END IF 
   IF rme3.artikel > 0 THEN 
     IF rmedm3.artikel > 0 THEN 
       rmeproz3.artikel = rmedm3.artikel * 100 / VKNetto.artikel
     END IF 
   END IF 
   IF rme4.artikel > 0 THEN 
     IF rmedm4.artikel > 0 THEN 
       rmeproz4.artikel = rmedm4.artikel * 100 / VKNetto.artikel
     END IF 
   END IF 
   IF rme5.artikel > 0 THEN 
     IF rmedm5.artikel > 0 THEN 
       rmeproz5.artikel = rmedm5.artikel * 100 / VKNetto.artikel
     END IF 
   END IF 
 ELSE 
   IF rme1.artikel > 0 THEN 
     IF rmeeu1.artikel > 0 THEN 
       rmeproz1.artikel = rmeeu1.artikel * 100 / VKNettoeu.artikel
     END IF 
   END IF 
   IF rme2.artikel > 0 THEN 
     IF rmeeu2.artikel > 0 THEN 
       rmeproz2.artikel = rmeeu2.artikel * 100 / VKNettoeu.artikel
     END IF 
   END IF 
   IF rme3.artikel > 0 THEN 
     IF rmeeu3.artikel > 0 THEN 
       rmeproz3.artikel = rmeeu3.artikel * 100 / VKNettoeu.artikel
     END IF 
   END IF 
   IF rme4.artikel > 0 THEN 
     IF rmeeu4.artikel > 0 THEN 
       rmeproz4.artikel = rmeeu4.artikel * 100 / VKNettoeu.artikel
     END IF 
   END IF 
   IF rme5.artikel > 0 THEN 
     IF rmeeu5.artikel > 0 THEN 
       rmeproz5.artikel = rmeeu5.artikel * 100 / VKNettoeu.artikel
     END IF 
   END IF 
 END IF 
 FORM 
 END SUB 
 
SUB RmeProzS()
 
   IF rme1.schein > 0 THEN 
     IF rmedm1.schein > 0 THEN 
       rmeproz1.schein = rmedm1.schein * 100 / VKNetto.schein
       
     END IF 
   END IF 
   IF rme2.schein > 0 THEN 
     IF rmedm2.schein > 0 THEN 
       rmeproz2.schein = rmedm2.schein * 100 / VKNetto.schein
     END IF 
   END IF 
   IF rme3.schein > 0 THEN 
     IF rmedm3.schein > 0 THEN 
       rmeproz3.schein = rmedm3.schein * 100 / VKNetto.schein
     END IF 
   END IF 
   IF rme4.schein > 0 THEN 
     IF rmedm4.schein > 0 THEN 
       rmeproz4.schein = rmedm4.schein * 100 / VKNetto.schein
     END IF 
   END IF 
   IF rme5.schein > 0 THEN 
     IF rmedm5.schein > 0 THEN 
       rmeproz5.schein = rmedm5.schein * 100 / VKNetto.schein
     END IF 
   END IF 
 
  FORM 
 END SUB 
 
 
 
SUB CHKombi()
 codear% = codear.artikel
 CALL QuickStore("artikel")
 IF IsKombi%(CodeAR%) AND (KostenTransport <> 0 OR KostenReparatur <> 0 OR KostenSonstiges <> 0) THEN 
   REQUEST "Eingabe von Kosten bei Kombiartikeln nicht mîglich!","Kalkulieren Sie die Kosten bei den einzelnen Artikeln!",2
   FILE "artikel"
   SELECT KEY codear% LOCK FILE "artikel" INDEX codear.artikel
     KostenTransport.artikel = 0
     Kostenreparatur.artikel = 0
     Kostensonstiges.artikel = 0
     KostTransEu.artikel = 0
     KostrepEu.artikel = 0
     KostsonstEu.artikel = 0
   CALL QuickStore("artikel")
   FORM 
   SET EDIT SELECT ON 
   ENTER Handelsspanne.artikel,0
   SET EDIT SELECT OFF 
 END IF 
 END SUB 
 
 ' ARTIKEL Update
 ' =======================================================================
 
SUB ARTUpdate()
 SELECT KEY CodeGR.ARTIKEL FILE "GRUPPEN" INDEX CodeGR.GRUPPEN
 IF CodeGR.GRUPPEN = CodeGR.ARTIKEL THEN pgr$ = Kurzbezeichnung.GRUPPEN
 SELECT KEY CodeW.ARTIKEL FILE "waehrung" INDEX CodeW.waehrung
 IF CodeW.waehrung = CodeW.ARTIKEL THEN 
   IF UCASE$ ( FORM ) = "ARTIKEL" THEN 
     waehr$ = "WÑhrung: " + waehrungbezeich.waehrung
   ELSE 
     waehr$ = "Erfass.wÑhrung war: " + waehrungbezeich.waehrung
   END IF 
 END IF 
 IF Bild1.ARTIKEL <> "" OR Bild2.ARTIKEL <> "" OR Bild3.ARTIKEL <> "" OR Bild4.ARTIKEL <> "" OR Bild5.ARTIKEL <> "" OR Bild6.ARTIKEL <> "" OR Bild7.ARTIKEL <> "" OR Bild8.ARTIKEL <> "" THEN 
   biiild$ = "Bilder Æ"
 ELSE 
   biiild$ = "Bilder"
 END IF 
 zweitwaehr$ = LEFT$ (waehrung.waehrung,4)
 IF umrechnung.artikel <> 0 THEN euro% = umrechnung.artikel
 SELECT KEY Lieferant.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 IF Lieferant.ARTIKEL = CodeKU.ADRESSEN THEN lieferant$ = Nachname.ADRESSEN ELSE lieferant$ = "<keine Zuordnung>"
 SELECT KEY Lieferant2.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 IF Lieferant2.ARTIKEL = CodeKU.ADRESSEN THEN lieferant2$ = Nachname.ADRESSEN ELSE lieferant2$ = "<keine Zuordnung>"
 SELECT KEY Lieferant3.ARTIKEL FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 IF Lieferant3.ARTIKEL = CodeKU.ADRESSEN THEN lieferant3$ = Nachname.ADRESSEN ELSE lieferant3$ = "<keine Zuordnung>"
 SELECT FORM KEY CodeAR.ARTIKEL FILE "serienr" INDEX Codear.serienr
 SELECT KEY CodeAR.ARTIKEL FILE "KOMBI" INDEX CodeKO.KOMBI
 IF FOUND ("KOMBI") THEN kombi$ = "Bestandteile erfassen Æ" ELSE kombi$ = "Bestandteile erfassen"
 IF KombiNetto.ARTIKEL <> 0 THEN 
   geseinkauf% = ek.artikel + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel
   KHSpanneP$ = STR$ ((100 / geseinkauf% * KombiNetto.ARTIKEL) - 100,",9999999999.00")
   KHSpanneDM$ = STR$ (KombiNetto.ARTIKEL - geseinkauf%,",9999999999.00")
 ELSE 
   KHSpanneP$ = "- - -"
   KHSpanneDM$ = "- - -"
 END IF 
 geseinkauf% = ek.artikel + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel
 HSpanneDM$ = STR$ (VKnetto.ARTIKEL - geseinkauf%,",9999999999.00")
 geseinkauf% = ekeu.artikel + KostTransEu.artikel + KostRepEu.artikel + KostSonstEu.artikel
 HSpanneEu$ = STR$ (VKnettoeu.ARTIKEL - geseinkauf%,",9999999999.00")
 IF KombiNettoEu.ARTIKEL <> 0 THEN KHSpannePEu$ = STR$ ((100 / geseinkauf% * KombiNettoEu.ARTIKEL) - 100,",9999999999.00")
 IF KombiNettoEu.ARTIKEL <> 0 THEN KHSpanneEu$ = STR$ (KombiNettoEu.ARTIKEL - geseinkauf%,",9999999999.00")
 IF KombiNettoEu.ARTIKEL = 0 THEN 
   KHSpannePEu$ = "- - -"
   KHSpanneEu$ = "- - -"
 END IF 
 IF IsKombi%(CodeAR.ARTIKEL) THEN MENU 4,2,1,"Kombiartikel neu kalkulieren","ARTKALK","Kombiartikel neu kalkulieren" ELSE MENU 4,2,0,"Kombiartikel neu kalkulieren"
 IF BestandsfÅhrung.ARTIKEL LIKE "j" THEN s2$ = "Bestands&fÅhrung Æ" ELSE s2$ = "Bestands&fÅhrung"
 CALL CLMNARTIKEL()
 IF INDEX LIKE "Bezeichnung" THEN MENU 5,1,2
 IF INDEX LIKE "Artikelnummer" THEN MENU 5,2,2
 IF INDEX LIKE "CodeGR" THEN MENU 5,3,2
 IF INDEX LIKE "Lieferant" THEN MENU 5,4,2
 IF Bild1.artikel <> "" OR Bild2.artikel <> "" OR Bild3.artikel <> "" OR Bild4.artikel <> "" OR Bild5.artikel <> "" OR Bild6.artikel <> "" OR Bild7.artikel <> "" OR Bild8.artikel <> "" THEN 
   biiild$ = "Bilder Æ"
 ELSE 
   biiild$ = "Bilder"
 END IF 
 IF EXISTS (codear.artikel,codear.akupreis) THEN 
   akupr$ = "Kundenpreise Æ"
 ELSE 
   akupr$ = "Kundenpreise"
 END IF 
 FORM 
 END SUB 
 
SUB ARTKALK()
 CALL KOMBRechnen(CodeAR.ARTIKEL)
 FORM 
 END SUB 
 
 
 
 ' ARTIKEL Intro 
 ' =======================================================================
 
SUB ARTIntro()
 MOUSE OFF 
 FILE "ARTIKEL"
 INDEX Bezeichnung.ARTIKEL
 IF cugrp% <> 0 THEN 
   IF cuart% <> 0 THEN 
     SELECT KEY cuart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
     SELECT KEY cuart% FILE "ARTPROV" INDEX CodeAR.ARTPROV
   ELSE 
     WHILE CodeGR.ARTIKEL <> cugrp% AND NOT EOF ("ARTIKEL")
       SELECT NEXT FILE "ARTIKEL"
       SELECT FORM CURRENT 
     WEND 
   END IF 
 ELSE 
   SELECT FIRST 
   IF EOF ("") THEN 
     REM BLANK 
     REM CodeAR.ARTIKEL = SER ("ARTIKEL",1)
     REM ARTIKELsub% = 99
     CALL ARTNeu()
   END IF 
 END IF 
 vknettoeinz% = vknetto.artikel / bezugsmenge.artikel
 vknettoeinz% = vknettoeu.artikel / bezugsmenge.artikel
 FORM 
 MOUSE ON 
 END SUB 
 
 
 ' Produktdetail Neu
 ' =======================================================================
 
SUB ARTNeu()
 MOUSE OFF 
 _cugrp% = CodeGR.ARTIKEL
 _cuku% = Lieferant.ARTIKEL
 _mwstt% = MwSt.ARTIKEL
 IF DEFA$ = "MEGA" THEN 
   _cuart% = CodeAR.artikel
   INDEX CodeAR.ARTIKEL
   SELECT LAST 
   bkonto% = Bestandskonto.artikel
   me$ = me_.artikel
 END IF 
 FILE "stamm"
 SELECT FIRST 
 NUMBASE "z99999999.999999"
     euro% = umrechnung.stamm
     codew% = codew.stamm
 
 FILE "artikel"
 IF Bezeichnung.ARTIKEL <> "" THEN CALL FStore("ARTIKEL")
 ARTIKELsub% = 99
 MOUSE OFF 
         CALL ButDesabled()
         f.suchen.enabled = 0
         f.suchen.visible = 0
         f.abbruch.enabled = - 1
         f.abbruch.visible = - 1
         f.abbruch1.enabled = - 1
         f.abbruch1.visible = - 1
         f.loeschen.enabled = 0
         f.bestandsfuehrung.enabled = 0
         f.bestandteile.enabled = 0
         f.produktgruppe.enabled = 0
         f.kopieren.enabled = 0
         f.lieferant1.enabled = 0
         f.lieferant2.enabled = 0
         f.lieferant3.enabled = 0
         f.seriennummer.enabled = 0
         f.umsatz.enabled = 0
 BLANK FORM 
 CodeAR% = SER ("ARTIKEL",1)
 CodeAR.ARTIKEL = CodeAR%
 CodeGR.ARTIKEL = _cugrp%
 Codew.artikel = codew%
 waehrung.artikel = zweitwaehr$
 REM umrechnung.artikel = umr%
 umrechnung.artikel = euro%
   IF UCASE$ ( FORM ) = "ARTIKEL" THEN 
     waehr$ = "WÑhrung: " + zweitwaehr$
   ELSE 
     waehr$ = "Erfass.wÑhrung war: " + zweitwaehr$
   END IF 
 Lieferant.ARTIKEL = _cuku%
 Bestandskonto.artikel = bkonto%
 me_.artikel = me$
 Bezugsmenge.artikel = 1
 Bezeichnung.artikel = "Neu"
 SET EDIT SELECT ON 
 IF BestfÅhr$ = "j" THEN BestandsfÅhrung.artikel = "j"
 IF ArtiAutoNum$ = "j" AND DEFA$ = "MEGA" THEN 
   artcodeneu% = artcsernum%("artikel")
   Artikelnummer.artikel = LTRIM$ ( STR$ (artcodeneu%,"99999999999999")) + "-" + stationsnr$
 END IF 
 IF ArtiAutoNum$ = "j" AND DEFA$ <> "MEGA" THEN 
   SELECT FIRST FILE "stamm"
   nnum% = LASTArtikeln.stamm + 1
   LASTArtikeln.stamm = nnum%
   STORE FILE "stamm"
   UNLOCK CURRENT FILE "Stamm"
   Artikelnummer.artikel = nnum%
 END IF 
 IF DEFA$ = "MEGA" THEN BestandsfÅhrung.artikel = "j"
 MwST.ARTIKEL = _mwst%
 CALL QuickStore("artikel")
 SELECT KEY codear% LOCK FILE "artikel" INDEX codear.artikel
 IF eurosupport$ = "TRUE" THEN 
   IF mastform$ LIKE "EUR" THEN 
     cuart% = codear%
     CodeW.ARTIKEL = 3
     NUMBASE "z99999999.000000"
     Waehrung.artikel = "EUR"
     umrechnung.artikel = 1
     CALL FStore("ARTIKEL")
     SELECT KEY cuart% LOCK FILE "Artikel" INDEX codear.artikel
     waehr$ = "Erfass.wÑhrung war: " + "EUR"
     CALL ArtEuroDM()
     CALL QuickStore("Artikel")
     zweitwaehr$ = Waehrung.artikel
     SELECT FORM KEY cuart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
     SET INDEX bezeichnung.ARTIKEL
     INDEX bezeichnung.ARTIKEL
     FORM 
   ELSE 
     CALL ARTWaehrung()
   END IF 
 END IF 
 MOUSE OFF 
 ARTIKELsub% = 98
 IF cugrp% <> 0 THEN SELECT KEY cugrp% FILE "gruppen" INDEX CodeGR.gruppen
 FILE "vertrete"
 INDEX nachname.vertrete
 SELECT FIRST 
 WHILE NOT EOF ("vertrete")
   IF name.vertrete LIKE "ZZZ GELôSCHT" THEN 
   ELSE 
     BLANK FILE "artprov"
     codear.artprov = codear%
     codema.artprov = codema.vertrete
     ProvisProz.artprov = 0
     ProvisDM.artprov = 0
     ProvisEu.artprov = 0
     CALL QuickStore("artprov")
     MOUSE OFF 
   END IF 
 SELECT NEXT FILE "vertrete"
 WEND 
 FILE "artprov"
 INDEX codear.artprov
 SELECT FIRST 
 SELECT FORM KEY codear% FILE "artprov" INDEX codear.artprov
 MOUSE ON 
 FILE "artikel"
 SELECT KEY codear% FILE "artikel" INDEX codear.artikel
 FORM 
 MOUSE ON 
 END SUB 
 
SUB VKontoGener()
 IF DEFA$ = "MEGA" THEN 
   REQUEST "Wurde die Verbrauchskontonummer an die Artikelnummer","angehangen?",130,req%
   IF req% = 1 THEN 
     nummer% = VAL ( RIGHT$ (Artikelnummer.artikel,1))
     Verbrauchskonto.artikel = VKonto%(nummer%)
     CALL QuickStore("Artikel")
     ENTER ME_.artikel,0
   END IF 
 END IF 
 END SUB 
 
 REM ***********************************************************************
 REM *                     Artikel kopieren                                *
 REM ***********************************************************************
 
SUB ARTKopieren()
 FILE "artikel"
 codearVorlage% = CodeAR.artikel
 REQUEST "Wollen Sie den Artikel kopieren ?","",130,req%
 IF req% <> 1 THEN END SUB 
 IF Bezeichnung.ARTIKEL <> "" THEN CALL FStore("ARTIKEL")
 COPY FROM CodeGR,EK,VKbrutto,VKnetto,Handelsspanne,MwST,ME_,KombiNetto,KombiBrutto,CodeSYS,Bestellnummer,Lieferant,LieferEK,rme1,rmeproz1,rmedm1,rme2,rmeproz2,rmedm2,rme3,rmeproz3,rmedm3,rme4,rmeproz4,rmedm4,rme5,rmeproz5,rmedm5
 Bezugsmenge% = Bezugsmenge:Maschine$ = Maschine:ZeitproBezug% = ZeitproBezugsme
 Beschreibung$ = Beschreibung.artikel
 IF DEFA$ = "MEGA" THEN 
   Vkonto% = Verbrauchskonto.artikel
   BKonto% = Bestandskonto.artikel
 END IF 
 artikelnr$ = artikelnummer.artikel
 bezeichnung$ = "(K) " + bezeichnung.artikel
 codew% = codew.artikel
 umrechnung% = umrechnung.artikel
 waehrung$ = waehrung.artikel
 KombiNettoEU% = KombiNettoEu.artikel
 KombibruttoEu% = KombibruttoEu.artikel
 ekeu% = ekeu.artikel
 VKNettoEu% = VKNettoEu.artikel
 VKBruttoEu% = VKBruttoEu.artikel
 InventPreisEu% = InventurPreisEu.artikel
 KostRepEu% = KostRepEu.artikel
 KostTransEu% = KostTransEu.artikel
 KostSonstEu% = KostSonstEu.artikel
 lieferEKEu% = lieferEKEu.artikel
 lieferEK2Eu% = lieferEK2Eu.artikel
 lieferEK3Eu% = lieferEK3Eu.artikel
 Kostenrep% = Kostenreparatur.artikel
 Kostentr% = KostenTransport.artikel
 Kostenso% = Kostensonstiges.artikel
 rmeu1% = rmeeu1.artikel
 rmeu2% = rmeeu2.artikel
 rmeu3% = rmeeu3.artikel
 rmeu4% = rmeeu4.artikel
 rmeu5% = rmeeu5.artikel
 BLANK FILE "artikel"
 codearneu% = SER ("ARTIKEL",1)
 CodeAR.ARTIKEL = codearneu%
 CodeGR.ARTIKEL = _cugrp%
 artikelnummer.artikel = "(K)" + LEFT$ (artikelnr$,20)
 IF ArtiAutoNum$ LIKE "j" AND DEFA$ <> "MEGA" THEN 
   SELECT FIRST FILE "stamm"
   nnum% = LASTArtikeln.stamm + 1
   LASTArtikeln.stamm = nnum%
   STORE FILE "stamm"
   UNLOCK CURRENT FILE "Stamm"
 END IF 
 IF ArtiAutoNum$ = "j" AND DEFA$ = "MEGA" THEN 
   artcodeneu% = artcsernum%("artikel")
   Artikelnummer.artikel = LTRIM$ ( STR$ (artcodeneu%,"99999999999999"))
 END IF 
 Beschreibung.artikel = Beschreibung$
 bezeichnung.artikel = LEFT$ (bezeichnung$,50)
 IF BestfÅhr$ = "j" THEN BestandsfÅhrung.artikel = "j"
 IF DEFA$ = "MEGA" THEN 
   Verbrauchskonto.artikel = VKonto%
   Bestandskonto.artikel = BKonto%
   BestandsfÅhrung.artikel = "j"
 END IF 
 REM CALL QuickStore("Artikel")
 REM COPY TO CodeGR,EK,VKbrutto,VKnetto,Handelsspanne,MwST,ME_,KombiNetto,KombiBrutto,CodeSYS,Bestellnummer,Lieferant,LieferEK
 COPY TO CodeGR,EK,VKbrutto,VKnetto,Handelsspanne,MwST,ME_,KombiNetto,KombiBrutto,CodeSYS,Bestellnummer,Lieferant,LieferEK,rme1,rmeproz1,rmedm1,rme2,rmeproz2,rmedm2,rme3,rmeproz3,rmedm3,rme4,rmeproz4,rmedm4,rme5,rmeproz5,rmedm5
 Bezugsmenge = Bezugsmenge%:Maschine = Maschine$:ZeitproBezugsme = ZeitproBezug%
 codew.artikel = codew%
 umrechnung.artikel = umrechnung%
 waehrung.artikel = waehrung$
 KombiNettoEU% = KombiNettoEu%
 KombibruttoEu% = KombibruttoEu%
 ekeu.artikel = ekeu%
 VKNettoEu.artikel = VKNettoEu%
 VKBruttoEu.artikel = VKBruttoEu%
 InventurPreisEu.artikel = InventPreisEu%
 KostRepEu.artikel = KostRepEu%
 KostTransEu.artikel = KostTransEu%
 KostSonstEu.artikel = KostSonstEu%
 lieferEKEu.artikel = lieferEKEu%
 lieferEK2Eu.artikel = lieferEK2Eu%
 lieferEK3Eu.artikel = lieferEK3Eu%
 rmeeu1.artikel = rmeu1%
 rmeeu2.artikel = rmeu2%
 rmeeu3.artikel = rmeu3%
 rmeeu4.artikel = rmeu4%
 rmeeu5.artikel = rmeu5%
 Kostenreparatur.artikel = Kostenrep%
 KostenTransport.artikel = Kostentr%
 Kostensonstiges.artikel = Kostenso%
 CALL QuickStore("Artikel")
 SELECT KEY codearneu% LOCK FILE "artikel" INDEX codear.artikel
 IF IsKombi%(CodearVorlage%) THEN 
   CALL DFile(3,"KOMBI" + _fpw$)
   CALL DFile(3,"KKOpIE" + _fpw$)
   FILE "KOMBI"
   SELECT FIRST 
   SELECT KEY CodearVorlage% LOCK FILE "KOMBI" INDEX CodeKO.KOMBI
   WHILE CodeKO.kombi = CodearVorlage% AND NOT EOF ("KOMBI")
     codearkom% = CodeAR.Kombi
     codegrkom% = CodeGR.Kombi
     bez$ = bezeichnung.kombi
     anzahl% = anzahl.kombi
     me$ = me_.kombi
     ek% = ek.kombi
     ekeu% = ekeu.kombi
     codew% = codew.kombi
     umrechnung% = umrechnung.kombi
     waehrung$ = waehrung.kombi
     FILE "kkopie"
     BLANK 
     CodeKO.Kkopie = codearneu%
     CodeAR.Kkopie = codearkom%
     CodeGR.Kkopie = codegrkom%
     bezeichnung.Kkopie = bez$
     anzahl.kKopie = anzahl%
     me_.Kkopie = me$
     ek.kkopie = ek%
     ekeu.kombi = ekeu%
     codew.kombi = codew%
     umrechnung.kombi = umrechnung%
     waehrung.kombi = waehrung$
     CALL QuickStore("KKopie")
     FILE "kombi"
     SELECT NEXT LOCK 
   WEND 
   IMPORT "KKOPIE.sbf" TO FILE "KOMBI" WHERE CodeKO.kkopie = codearneu%
   FILE "KKopie"
   REMOVE FROM FILE "KKOPIE"
 END IF 
 DIM zw%(10000)
 i% = 0
 FILE "artprov"
 SELECT FIRST 
 SELECT KEY codearVorlage% FILE "artprov" INDEX codear.artprov
 WHILE NOT EOF ("artprov") AND codear.artprov = codearVorlage%
   zw%(i%) = codearneu%
   zw%(i% + 1) = codema.artprov
   zw%(i% + 2) = ProvisProz.artprov
   zw%(i% + 3) = ProvisDM.artprov
   i% = i% + 4
   SELECT NEXT 
 WEND 
 FOR a% = 0 TO i% - 5 STEP 4
   BLANK FILE "artprov"
   codear.artprov = zw%(a%)
   codema.artprov = zw%(a% + 1)
   ProvisProz.artprov = zw%(a% + 2)
   ProvisDM.artprov = zw%(a% + 3)
   CALL QuickStore("artprov")
 NEXT a%
 MOUSE ON 
 FILE "artikel"
 SELECT FORM KEY codearneu% LOCK FILE "artikel" INDEX codear.artikel
 SELECT KEY codearneu% LOCK FILE "artikel" INDEX codear.artikel
 FORM 
 REM ENTER bezeichnung.artikel
 END SUB 
 
 
 
 
 ' auf doppelte Artikelnummern testen
 ' =======================================================================
 
SUB ARTArtNummer()
 _cuart% = CodeAR.ARTIKEL
 IF Artikelnummer.ARTIKEL <> "" THEN 
   _nummer$ = Artikelnummer.ARTIKEL
   IF NEW ("ARTIKEL") OR MOD ("ARTIKEL") AND DEFA$ <> "MEGA" THEN 
     CALL FStore("ARTIKEL")
   ELSE 
     CALL QuickStore("Artikel")
     _cuart% = CodeAR.artikel
   END IF 
 
   MOUSE OFF 
   SET STATUS "Suche doppelte Artikelnummern..."
   _index$ = INDEX 
   FILE "ARTIKEL"
   INDEX Artikelnummer.ARTIKEL
   SELECT FIRST 
   _found% = 0
   SELECT KEY _nummer$ FILE "ARTIKEL" INDEX Artikelnummer.ARTIKEL
   WHILE Artikelnummer.ARTIKEL = _nummer$ AND NOT EOF ("ARTIKEL")
     IF CodeAR.ARTIKEL <> _cuart% AND _found% = 0 THEN 
       REQUEST "Es ist bereits ein Artikel mit dieser Nummer vorhanden!","",139
       _found% = 1
     END IF 
     SELECT NEXT FILE "ARTIKEL" INDEX Artikelnummer.ARTIKEL
   WEND 
   SET INDEX _index$$
   INDEX _index$$
   SELECT KEY _cuart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
   SET STATUS ""
 END IF 
 MOUSE ON 
 FORM 
 END SUB 
 
 
  
 ' Produkt Suchen
 ' =======================================================================
 
SUB ARTSuchen()
 alle$ = "n"
 FILE "ARTIKEL"
 
 REM artiform$ = "ARTIKEL"
 IF DEFA$ = "MEGA" THEN artiform$ = "ARTIDEFA"
 IF UCASE$ ( FORM ) = artiform$ OR UCASE$ ( FORM ) LIKE "ARTIKEEU" THEN 
   cuart% = CodeAR.ARTIKEL
   _cugrp% = CodeGR.ARTIKEL
   IF NEW ("ARTIKEL") OR MOD ("ARTIKEL") THEN CALL FStore("ARTIKEL")
 ELSE 
   FILE "artikel"
   SELECT LAST 
   _cugrp% = CodeGR.ARTIKEL
 END IF 
 artsucheok% = 0
 CALL DFile(3,"GRUPPEN" + _fpw$)
 FILE "gruppen"
 INDEX CodeGR.gruppen
 SELECT FIRST 
 
   REDIM ProdGruppen$(1,1)
   REDIM ProdGruppen$( RECCOUNT ("gruppen"))
   WHILE NOT EOF ("gruppen")
     IF novi1.gruppen = 0 AND LTRIM$ (Kurzbezeichnung.gruppen) <> "" THEN 
       ProdGruppen$(a%) = Kurzbezeichnung.gruppen + SPACE$ (100) + STR$ (codegr.gruppen,"000000")
       a% = a% + 1
     END IF 
     SELECT NEXT 
   WEND 
 
 a% = 0
a160120051: 
 artsucheok% = 0
 FILE "gruppen"
 INDEX CodeGR.gruppen
 SELECT FIRST 
 IF alle$ = "j" THEN 
   REDIM ProdGruppen$(1,1)
   REDIM ProdGruppen$( RECCOUNT ("gruppen"))
   SELECT WHERE FILE "GRuppen"
   WHILE NOT EOF ("gruppen")
     IF LTRIM$ (Kurzbezeichnung.gruppen) <> "" THEN 
       IF novi1.gruppen = 1 THEN 
         ProdGruppen$(a%) = "### " + Kurzbezeichnung.gruppen + SPACE$ (100) + STR$ (codegr.gruppen,"000000")
       ELSE 
         ProdGruppen$(a%) = Kurzbezeichnung.gruppen + SPACE$ (100) + STR$ (codegr.gruppen,"000000")
       END IF 
       a% = a% + 1
     END IF 
     SELECT NEXT 
   WEND 
 END IF 
 Auswahl$ = ProdGruppen$(0)
 asuchopt% = 0
 suna$ = ""
 req% = 1
 REDIM AuswArtikel$(1,1)
 REDIM AuswArtikel$( RECCOUNT ("Artikel"))
 WHILE suna$ = "" AND asuchopt% < 4 AND req% = 1
   suna$ = sunaglob$
   IF asuchglob% < 1 THEN 
     asuchopt% = 4
     IF _projekt$ LIKE "WAWI" THEN asuchopt% = 1
   ELSE 
     asuchopt% = asuchglob%
   END IF 
   IF Gruppenausw$ <> "" THEN Auswahl$ = Gruppenausw$
   CREATE DIALOG "SCHAuswahl",0,0,237,170,title$,"MS Sans Serif",8
   ADD DIALOG "SCHAuswahl",4,0,1,237,138,0,""
   ADD DIALOG "SCHAuswahl",9,4,12,20,23,2
   ADD DIALOG "SCHAuswahl",4,30,14,200,95,0," Suche Åber... "
   ADD DIALOG "SCHAuswahl",3,38,25,60,12,0,"Artikel&nummer",1,asuchopt%
   ADD DIALOG "SCHAuswahl",3,38,36,60,12,0,"&Bestellnummer",2,asuchopt%
   ADD DIALOG "SCHAuswahl",3,38,49,79,12,0,"Artikelbe&zeichnung",3,asuchopt%
   ADD DIALOG "SCHAuswahl",3,38,60,79,12,0,"&Stichwort",5,asuchopt%
   IF _projekt$ <> "WAWI" THEN 
    ADD DIALOG "SCHAuswahl",3,38,72,103,12,0,"Produkt&gruppen/Leistungen",4,asuchopt%
    ADD DIALOG "SCHAuswahl",8,48,86,169,220,259,2,Auswahl$,ProdGruppen$
   END IF 
   ADD DIALOG "SCHAuswahl",5,30,112,147,8,0,"&Suchbezeichnung"
   ADD DIALOG "SCHAuswahl",6,30,121,200,12,0,0,suna$,20
   ADD DIALOG "SCHAuswahl",1,5,145,53,16,1,"&Weiter",1,1
   ADD DIALOG "SCHAuswahl",1,60,145,53,16,0,"&Abbruch",0,0
   ADD DIALOG "SCHAuswahl",1,115,145,53,16,0,"Alle",3,0
   IF artausw$ = "j" THEN ADD DIALOG "SCHAuswahl",1,176,145,54,16,0,"Auswahl&liste",2,0
   DIALOG "SCHAuswahl",req%
   REMOVE DIALOG "SCHAuswahl"
   IF asuchopt% < 4 AND suna$ = "" AND req% = 1 THEN REQUEST "Bitte geben Sie einen Suchbegriff ein !!!","",139
 WEND 
 IF req% = 0 THEN artsucheok% = 0
 IF req% > 0 THEN 
   artsucheok% = 1
   IF artausw$ <> "j" OR asuchglob% <> asuchopt% THEN 
     REM CALL Server("LISTBOXINIT","Artikelauswahl")
   END IF 
   asuchglob% = asuchopt%
   IF req% = 2 THEN 
     REM 11022000 artiform$ = "ARTI*"
     IF DEFA$ = "MEGA" THEN artiform$ = "ARTIDEFA"
     IF UCASE$ ( FORM ) LIKE artiform$ OR UCASE$ ( FORM ) LIKE "ARTIKEEU" THEN 
       SET STATUS "Bitte wÑhlen Sie einen Artikel aus"
       REM CALL Server("LISTBOXSHOW","Bitte wÑhlen Sie den gewÅnschten Artikel aus:")
       REM erg$ = ServerReply$()
       REM IF erg$ <> "" THEN 
         REM cuart% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
       REM END IF 
         REM AdrFound$(a%) = ""
         LAuswahl$ = AdrFound$(0)
         LAuswahl1$(0) = LAuswahl$
         CREATE DIALOG "ADRLISTE",0,0,490,397,"Artikel wÑhlen","MS Sans Serif",8
         REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
         ADD DIALOG "ADRLISTE",7,5,8,478,361,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRLISTE",1,174,374,56,16,1,"&OK",1,1
         ADD DIALOG "ADRLISTE",1,234,374,56,16,0,"&Abbrechen",0,0
         DIALOG "ADRLISTE",req5%
         MOUSE ON 
         REMOVE DIALOG "ADRLISTE"
         IF req5% = 1 THEN 
           LAuswahl$ = LAuswahl1$(0)
           cuart% = VAL ( RIGHT$ (LAuswahl$,6))
           finde% = 1
         END IF 
       GOTO ENDESuch1 
     ELSE 
       GOTO ENDESuch2
     END IF 
   ELSE 
     a% = 0
     REDIM AdrFound$(1,1)
     REDIM AdrFound$( RECCOUNT ("artikel"))
     IF req% = 3 THEN 
       alle$ = "j"
       SELECT WHERE FILE "artikel"
       GOTO a160120051
     END IF 
   END IF 
   SELECT CASE asuchopt%
   CASE 1
     feld$ = "artikelnummer.artikel"
   CASE 2
     feld$ = "bestellnummer.artikel"
   CASE 3
     feld$ = "bezeichnung.artikel"
   CASE 4
     feld$ = "bezeichnung.artikel"
   END SELECT 
   IF asuchopt% = 5 THEN 
     FILE "artikel"
     REDIM AuswArtikel$( RECCOUNT ("artikel"))
     b% = RECCOUNT ("artikel")
     FOR a% = 0 TO b%:AuswArtikel$(a%) = "":NEXT 
     feld$ = "stichwort.artikel"
     INDEX stichwort.artikel
     ok% = 1
     REM --------------- IF req% = 1 THEN 
     REM --------------- IF feld$ LIKE "Stichwort.artikel" THEN 
     CALL DFile(3,"artikeys" + _fpw$)
     FILE "artikeys"
     INDEX keyword
     SELECT FIRST 
     a% = 0
     SELECT WHERE keyword <> ""
     SELECT FIRST 
     WHILE NOT EOF ("artikeys")
       AuswArtikel$(a%) = LTRIM$ (keyword)
       a% = a% + 1
       SELECT NEXT 
     WEND 
     LAuswahl$ = AuswArtikel$(0)
     LAuswahl1$(0) = LAuswahl$
     CREATE DIALOG "ADRSTICHW",0,0,194,202,title$,"MS Sans Serif",8
     ADD DIALOG "ADRSTICHW",7,5,6,183,168,2,2,AuswArtikel$,Lauswahl1$,AuswArtikel$(0)
     ADD DIALOG "ADRSTICHW",1,33,180,55,16,1,"&OK",1,1
     ADD DIALOG "ADRSTICHW",1,93,180,55,16,0,"&Abbrechen",0,0
     DIALOG "ADRSTICHW",req5%
     MOUSE ON 
     REMOVE DIALOG "ADRSTICHW"
     IF req5% = 1 THEN 
       LAuswahl$ = LAuswahl1$(0)
       suna$ = LEFT$ (LAuswahl$) + "*"
     ELSE 
       ok% = 0
       AdrSuche% = 0
       REDIM AuswArtikel$(1,1)
       REDIM AuswArtikel$( RECCOUNT ("Artikel"))
       GOTO a160120051
     END IF 
     MOUSE OFF 
     FOR cl% = 0 TO RECCOUNT ("Artikel")
       AuswArtikel$(cl%) = ""
     NEXT cl%
     FILE "artikel"
     INDEX feld$$
     a% = 0
     SELECT FIRST 
     IF feld$ <> "stichwort.artikel" THEN SELECT KEY suna$ INDEX feld$$
     adrmax% = RECCOUNT ("artikel")
     cp% = 0
     lp% = 0
     pc% = 0
     artlistok% = 0
     a% = 0
     REM CALL Server("LISTBOXINIT","Artikelauswahl")
     WHILE NOT EOF ("artikel")
       pc% = pc% + 1
       cp% = INT (100 / adrmax% * pc%)
       IF cp% <> lp% THEN 
         SET STATUS "Verarbeitung: " + STR$ (cp%,"999") + "%"
         lp% = cp%
       END IF 
       IF Stichwort.artikel LIKE suna$ OR Stichwort.artikel LIKE "*" + suna$ THEN 
         sok% = - 1
         IF MNdisabled%("DATALOCK") THEN 
           IF Sperre.artikel <> 0 AND Sperre.artikel <> vcodema% THEN sok% = 0
         END IF 
         IF alle$ = "n" THEN 
           IF novi1.artikel = 1 THEN sok% = 0
         END IF 
         IF sok% THEN 
           REM artiform$ = "ARTI*"
           IF DEFA$ = "MEGA" THEN artiform$ = "ARTIDEFA"
           IF UCASE$ ( FORM ) LIKE artiform$ OR UCASE$ ( FORM ) LIKE "ARTIKEEU" THEN 
             item$ = Artikelnummer.ARTIKEL
             IF item$ <> "" THEN item$ = item$ + ";"
             item$ = item$ + Bezeichnung.ARTIKEL + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
             REM CALL Server("LISTBOXADD",item$)
             AdrFound$(a%) = item$
             a% = a% + 1
             artlistok% = 1
           ELSE 
             IF KalkArt.MASTER = 0 THEN 
               item$ = Artikelnummer.ARTIKEL
               IF item$ <> "" THEN item$ = item$ + ";"
               IF mastform$ LIKE "EUR" THEN 
                 item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (VKnettoEU.ARTIKEL,",9999999999.00"))
               ELSE 
                 item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (VKnetto.ARTIKEL,",9999999999.00"))
               END IF 
               IF BestandsfÅhrung.ARTIKEL = "j" THEN item$ = item$ + " **Bestand:" + STR$ (Bestand.artikel,"99999999.00") + " **"
               item$ = item$ + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
             ELSE 
               item$ = Artikelnummer.ARTIKEL
               IF item$ <> "" THEN item$ = item$ + ";"
               IF mastform$ LIKE "EUR" THEN 
                 item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (VKbruttoEu.ARTIKEL,",9999999999.00"))
               ELSE 
                 item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (VKbrutto.ARTIKEL,",9999999999.00"))
               END IF 
               IF BestandsfÅhrung.ARTIKEL = "j" THEN item$ = item$ + " **Bestand:" + STR$ (Bestand.artikel,"99999999.00") + " **"
               item$ = item$ + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
             END IF 
             IF BestandsfÅhrung.ARTIKEL <> "j" THEN 
               REM CALL Server("LISTBOXADD",item$)
               AdrFound$(a%) = item$
               IF novi1.artikel = 1 THEN AdrFound$(a%) = "### " + item$
               a% = a% + 1
               artlistok% = 1
             ELSE 
               IF MSArt% <> 2 AND MSArt% <> 3 THEN 
                 REM CALL Server("LISTBOXADD",item$)
                 AdrFound$(a%) = item$
                 IF novi1.artikel = 1 THEN AdrFound$(a%) = "### " + item$
                 a% = a% + 1
                 artlistok% = 1
               ELSE 
                 REM IF Bestand.ARTIKEL > 0 THEN 
                   REM item$ = item$ + " Bestand:" + STR$ (Bestand.artikel,"99999999.00")
                   REM CALL Server("LISTBOXADD",item$)
                   AdrFound$(a%) = item$
                   IF novi1.artikel = 1 THEN AdrFound$(a%) = "### " + item$
                   a% = a% + 1
                   artlistok% = 1
                 REM END IF 
               END IF 
             END IF 
           END IF 
           REM AuswArtikel$(a%) = LTRIM$ (Bezeichnung) + ", " + LTRIM$ (Artikelnummer) + SPACE$ (120) + STR$ (codear,"000000")
           a% = a% + 1
         END IF 
       END IF 
       SELECT NEXT 
     WEND 
     AdrFound$(a%) = ""
     SET STATUS "Bereit"
     IF a% = 0 THEN 
       CALL Fehler("Es wurde kein Artikel mit diesem Stichwort gefunden!","")
       artsucheok% = 0
       AdrSuche% = 0
       ok% = 0
     END IF 
     REM ------     END IF 
     LAuswahl$ = AuswArtikel$(0)
     LAuswahl1$(0) = LAuswahl$
     req3% = 0
     IF a% <> 0 THEN 
       artausw$ = "j"
       MENU 4,3,1,"Auswahl&liste,F7","ArtAusw","Artikel aus der Auswahlliste auswÑhlen"
       REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"MS Sans Serif",8
       REM ADD DIALOG "ADRLISTE",7,5,8,328,161,2,2,AuswArtikel$,Lauswahl1$,AuswArtikel$(0)
       REM ADD DIALOG "ADRLISTE",1,114,174,56,16,1,"&OK",1,1
       REM ADD DIALOG "ADRLISTE",1,174,174,56,16,0,"&Abbrechen",0,0
       REM DIALOG "ADRLISTE",req3%
       MOUSE ON 
       REM REMOVE DIALOG "ADRLISTE"
       REM IF req3% = 1 THEN 
       REM LAuswahl$ = LAuswahl1$(0)
       REM ArtiSuche% = VAL ( RIGHT$ (LAuswahl$,6))
       REM artifound% = VAL ( RIGHT$ (LAuswahl$,6))
       REM cuart% = artifound%
       IF ( UCASE$ ( FORM ) = artiform$ OR UCASE$ ( FORM ) LIKE "ARTIKEEU") AND artlistok% <> 0 THEN 
         REM CALL Server("LISTBOXSHOW","")
         MOUSE ON 
         REM erg$ = ServerReply$()
         REM IF erg$ <> "" THEN 
           REM cuart% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
         REM END IF 
         LAuswahl$ = AdrFound$(0)
         LAuswahl1$(0) = LAuswahl$
         CREATE DIALOG "ADRLISTE",0,0,490,397,"Artikel wÑhlen","MS Sans Serif",8
         REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
         ADD DIALOG "ADRLISTE",7,5,8,478,361,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRLISTE",1,174,374,56,16,1,"&OK",1,1
         ADD DIALOG "ADRLISTE",1,234,374,56,16,0,"&Abbrechen",0,0
         DIALOG "ADRLISTE",req5%
         MOUSE ON 
         REMOVE DIALOG "ADRLISTE"
         LAuswahl$ = LAuswahl1$(0)
         cuart% = VAL ( RIGHT$ (LAuswahl$,6))
         IF cuart% > 0 THEN finde% = 1
       ELSE 
         CALL Fehler("Es konnte kein entsprechender Artikel gefunden werden!","")
         artsucheok% = 0
       END IF 
       ok% = 0
       SET STATUS "Artikel gefunden..."
     ELSE 
       ArtiSuche% = 0
     END IF 
   END IF 
   REM ### ende asuchopt%=5 
   IF asuchopt% = 4 THEN 
     SELECT FIRST FILE "gruppen" INDEX codegr.gruppen
     SELECT KEY VAL ( RIGHT$ (Auswahl$,6)) FILE "gruppen" INDEX codegr.gruppen
     _cugrp% = CodeGR.gruppen
     Gruppenausw$ = Auswahl$
     IF cugrp% <> 0 THEN cugrp% = _cugrp%
     artlistok% = 0
     REM CALL Server("LISTBOXINIT","Auswahl")
     FILE "ARTIKEL"
     INDEX CodeGR.ARTIKEL
     SELECT FIRST 
     SELECT KEY _cugrp%
     finde% = 0
     a% = 0
     WHILE CodeGR.ARTIKEL = _cugrp% AND NOT EOF ("ARTIKEL")
       finde% = finde% + 1
       artausw$ = "j"
       MOUSE OFF 
       IF Bezeichnung.ARTIKEL LIKE "*" + suna$ + "*" OR Beschreibung.ARTIKEL LIKE "*" + suna$ + "*" THEN 
         REM artiform$ = "ARTI*"
         IF DEFA$ = "MEGA" THEN artiform$ = "ARTIDEFA"
         IF UCASE$ ( FORM ) LIKE artiform$ OR UCASE$ ( FORM ) LIKE "ARTIKEEU" THEN 
           item$ = Artikelnummer.ARTIKEL
           IF item$ <> "" THEN item$ = item$ + ";"
           item$ = item$ + Bezeichnung.ARTIKEL + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
           REM CALL Server("LISTBOXADD",item$)
           ok% = - 1
           IF alle$ = "n" THEN 
             IF novi1.artikel = 1 THEN ok% = 0
           END IF 
           IF ok% THEN 
             AdrFound$(a%) = item$
             IF novi1.artikel = 1 THEN AdrFound$(a%) = "### " + item$
             a% = a% + 1
             artlistok% = 1
           END IF 
         ELSE 
           IF KalkArt.MASTER = 0 THEN 
             item$ = Artikelnummer.ARTIKEL
             IF item$ <> "" THEN item$ = item$ + ";"
             IF mastform$ LIKE "EUR" THEN 
               item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (VKnettoEu.ARTIKEL,",9999999999.00"))
             ELSE 
               item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (VKnetto.ARTIKEL,",9999999999.00"))
             END IF 
             IF BestandsfÅhrung.ARTIKEL = "j" THEN item$ = item$ + " **Bestand:" + STR$ (Bestand.artikel,"99999999.00") + " **"
             item$ = item$ + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
           ELSE 
             item$ = Artikelnummer.ARTIKEL
             IF item$ <> "" THEN item$ = item$ + ";"
             IF mastform$ LIKE "EUR" THEN 
               item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (VKbruttoEU.ARTIKEL,",9999999999.00"))
             ELSE 
               item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (VKbrutto.ARTIKEL,",9999999999.00"))
             END IF 
             IF BestandsfÅhrung.ARTIKEL = "j" THEN item$ = item$ + " **Bestand:" + STR$ (Bestand.artikel,"99999999.00") + " **"
             item$ = item$ + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
           END IF 
           IF BestandsfÅhrung.ARTIKEL <> "j" THEN 
             REM CALL Server("LISTBOXADD",item$)
             ok% = - 1
             IF alle$ = "n" THEN 
               IF novi1.artikel = 1 THEN ok% = 0
             END IF 
             IF ok% THEN 
               AdrFound$(a%) = item$
               IF novi1.artikel = 1 THEN AdrFound$(a%) = "### " + item$
               a% = a% + 1
               artlistok% = 1
             END IF 
           ELSE 
             IF MSArt% <> 2 AND MSArt% <> 3 THEN 
               REM CALL Server("LISTBOXADD",item$)
               ok% = - 1
               IF alle$ = "n" THEN 
                 IF novi1.artikel = 1 THEN ok% = 0
               END IF 
               IF ok% THEN 
                 AdrFound$(a%) = item$
                 IF novi1.artikel = 1 THEN AdrFound$(a%) = "### " + item$
                 a% = a% + 1
                 artlistok% = 1
               END IF 
             ELSE 
               REM IF Bestand.ARTIKEL > 0 THEN 
                 REM item$ = item$ + " Bestand:" + STR$ (Bestand.artikel,"99999999.00")
                 REM CALL Server("LISTBOXADD",item$)
                 ok% = - 1
                 IF alle$ = "n" THEN 
                   IF novi1.artikel = 1 THEN ok% = 0
                 END IF 
                 IF ok% THEN 
                   AdrFound$(a%) = item$
                   IF novi1.artikel = 1 THEN AdrFound$(a%) = "### " + item$
                   a% = a% + 1
                   artlistok% = 1
                 END IF 
               REM END IF 
             END IF 
           END IF 
         END IF 
       END IF 
       SELECT NEXT FILE "ARTIKEL" INDEX CodeGR.ARTIKEL
     WEND 
     AdrFound$(a%) = ""
     MOUSE ON 
     artiform$ = "ARTIKE*"
     testf$ = FORM 
     IF DEFA$ = "MEGA" THEN artiform$ = "ARTIDEFA"
     IF ( UCASE$ ( FORM ) LIKE artiform$ OR UCASE$ ( FORM ) LIKE "ARTIKEEU") AND artlistok% <> 0 THEN 
       REM DEBUG ASK 
       REM CALL Server("LISTBOXSHOW","")
       MOUSE ON 
       REM erg$ = ServerReply$()
       REM IF erg$ <> "" THEN 
         REM cuart% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
       REM END IF 
         LAuswahl$ = AdrFound$(0)
         LAuswahl1$(0) = LAuswahl$
         
         CREATE DIALOG "ADRLISTE",0,0,490,397,"Artikel wÑhlen","MS Sans Serif",8
         REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
         ADD DIALOG "ADRLISTE",7,5,8,478,361,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRLISTE",1,174,374,56,16,1,"&OK",1,1
         ADD DIALOG "ADRLISTE",1,234,374,56,16,0,"&Abbrechen",0,0
         DIALOG "ADRLISTE",req5%
         MOUSE ON 
         REMOVE DIALOG "ADRLISTE"
         LAuswahl$ = LAuswahl1$(0)
         cuart% = VAL ( RIGHT$ (LAuswahl$,6))
 
     ELSE 
       REM CALL Fehler("Es konnte kein entsprechender Artikel gefunden werden!","")
       REM artsucheok% = 0
     END IF 
   END IF 
   IF asuchopt% < 4 THEN 
     FILE "ARTIKEL"
     INDEX feld$$
     SELECT FIRST FILE "ARTIKEL"
     SET STATUS "Suche Artikel..."
     SELECT KEY UCASE$ (suna$) INDEX feld$$
     suche% = 0
     REM artiform$ = "ARTI*"
     IF DEFA$ = "MEGA" THEN artiform$ = "ARTIDEFA"
     wi% = 0
     artlistok% = 0
     REM CALL Server("LISTBOXINIT","Artikelauswahl")
     FILE "ARTIKEL"
     INDEX feld$$
     SELECT FIRST 
     SELECT KEY UCASE$ (suna$) INDEX feld$$
     MOUSE OFF 
     finde% = 0
     a% = 0
     WHILE UCASE$ ( LEFT$ (feld$$, LEN (suna$))) = UCASE$ (suna$) AND NOT EOF ("artikel")
       finde% = finde% + 1
       MOUSE OFF 
       artausw$ = "j"
       adrfound% = 0
       wi% = wi% + 1
       listok% = 0
       REM artiform$ = "ARTIKEL"
       IF DEFA$ = "MEGA" THEN artiform$ = "ARTIDEFA"
       IF UCASE$ ( FORM ) LIKE artiform$ OR UCASE$ ( FORM ) LIKE "ARTIKEEU" THEN 
         IF feld$ LIKE "bestellnummer.artikel" THEN 
           item$ = Bestellnummer.ARTIKEL
           IF item$ <> "" THEN item$ = item$ + ";"
           IF mastform$ LIKE "EUR" THEN 
             item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (EKeu.ARTIKEL,",9999999999.00")) + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
           ELSE 
             item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (EK.ARTIKEL,",9999999999.00")) + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
           END IF 
         ELSE 
           item$ = Artikelnummer.ARTIKEL
           IF item$ <> "" THEN item$ = item$ + ";"
           IF mastform$ LIKE "EUR" THEN 
             item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (VKnettoEU.ARTIKEL,",9999999999.00")) + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
           ELSE 
             item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (VKnetto.ARTIKEL,",9999999999.00")) + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
           END IF 
         END IF 
         REM CALL Server("LISTBOXADD",item$)
               ok% = - 1
               IF alle$ = "n" THEN 
                 IF novi1.artikel = 1 THEN ok% = 0
               END IF 
               IF ok% THEN 
                 AdrFound$(a%) = item$
                 IF novi1.artikel = 1 THEN AdrFound$(a%) = "### " + item$
                 a% = a% + 1
                 artlistok% = 1
               END IF 
       ELSE 
         IF KalkArt.MASTER = 0 THEN 
           IF feld$ LIKE "bestellnummer.artikel" THEN 
             item$ = Bestellnummer.ARTIKEL
             IF item$ <> "" THEN item$ = item$ + ";"
             IF mastform$ LIKE "EUR" THEN 
               item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (EKeu.ARTIKEL,",9999999999.00"))
             ELSE 
               item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (EK.ARTIKEL,",9999999999.00"))
             END IF 
             IF BestandsfÅhrung.ARTIKEL = "j" THEN item$ = item$ + " **Bestand:" + STR$ (Bestand.artikel,"99999999.00") + " **"
             item$ = item$ + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
           ELSE 
             item$ = Artikelnummer.ARTIKEL
             IF item$ <> "" THEN item$ = item$ + ";"
             IF mastform$ LIKE "EUR" THEN 
               item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (VKnettoEU.ARTIKEL,",9999999999.00"))
             ELSE 
               item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (VKnetto.ARTIKEL,",9999999999.00"))
             END IF 
             IF BestandsfÅhrung.ARTIKEL = "j" THEN item$ = item$ + " **Bestand:" + STR$ (Bestand.artikel,"99999999.00") + " **"
             item$ = item$ + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
           END IF 
         ELSE 
           IF feld$ LIKE "bestellnummer.artikel" THEN 
             item$ = Bestellnummer.ARTIKEL
             IF item$ <> "" THEN item$ = item$ + ";"
             IF mastform$ LIKE "EUR" THEN 
               item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (EKeu.ARTIKEL,",9999999999.00"))
             ELSE 
               item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (EK.ARTIKEL,",9999999999.00"))
             END IF 
             IF BestandsfÅhrung.ARTIKEL = "j" THEN item$ = item$ + " **Bestand:" + STR$ (Bestand.artikel,"99999999.00") + " **"
             item$ = item$ + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
           ELSE 
             item$ = Artikelnummer.ARTIKEL
             IF item$ <> "" THEN item$ = item$ + ";"
             IF mastform$ LIKE "EUR" THEN 
               item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (VKBruttoEU.ARTIKEL,",9999999999.00"))
             ELSE 
               item$ = item$ + Bezeichnung.ARTIKEL + ", " + LTRIM$ ( STR$ (VKBrutto.ARTIKEL,",9999999999.00"))
             END IF 
             IF BestandsfÅhrung.ARTIKEL = "j" THEN item$ = item$ + " **Bestand:" + STR$ (Bestand.artikel,"99999999.00") + " **"
             item$ = item$ + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
           END IF 
         END IF 
         IF BestandsfÅhrung.ARTIKEL <> "j" THEN 
           REM CALL Server("LISTBOXADD",item$)
               ok% = - 1
               IF alle$ = "n" THEN 
                 IF novi1.artikel = 1 THEN ok% = 0
               END IF 
               IF ok% THEN 
                 AdrFound$(a%) = item$
                 IF novi1.artikel = 1 THEN AdrFound$(a%) = "### " + item$
                 a% = a% + 1
                 artlistok% = 1
               END IF 
         ELSE 
           IF MSArt% <> 2 AND MSArt% <> 3 THEN 
             REM CALL Server("LISTBOXADD",item$)
               ok% = - 1
               IF alle$ = "n" THEN 
                 IF novi1.artikel = 1 THEN ok% = 0
               END IF 
               IF ok% THEN 
                 AdrFound$(a%) = item$
                 IF novi1.artikel = 1 THEN AdrFound$(a%) = "### " + item$
                 a% = a% + 1
                 artlistok% = 1
               END IF 
           ELSE 
             REM IF Bestand.ARTIKEL > 0 THEN 
               REM item$ = item$ + " Bestand:" + STR$ (bestand.artikel,"99999999.00")
               REM CALL Server("LISTBOXADD",item$)
               ok% = - 1
               IF alle$ = "n" THEN 
                 IF novi1.artikel = 1 THEN ok% = 0
               END IF 
               IF ok% THEN 
                 AdrFound$(a%) = item$
                 IF novi1.artikel = 1 THEN AdrFound$(a%) = "### " + item$
                 a% = a% + 1
                 artlistok% = 1
               END IF 
             REM END IF 
           END IF 
         END IF 
       END IF 
       REM CALL Server("GaugeMessage","Artikeldatei wird durchsucht... " + TRIM$ ( STR$ (wi%,"9999")) + " gefunden")
       SELECT NEXT FILE "ARTIKEL" INDEX feld$$
     WEND 
     AdrFound$(a%) = ""
     MOUSE ON 
     REM CALL Gauge(0,"")
     SET STATUS ""
     REM artiform$ = "ARTI*"
     IF DEFA$ = "MEGA" THEN artiform$ = "ARTIDEFA"
     IF UCASE$ ( FORM ) LIKE artiform$ OR UCASE$ ( FORM ) LIKE "ARTIKEEU" THEN 
       IF wi% <> 0 AND artlistok% <> 0 THEN 
         SET STATUS "Bitte wÑhlen Sie einen Artikel aus"
         REM MENU 2,6,1,"aus Suchliste &wÑhlen,F7","ADRWahl"
         REM CALL Server("LISTBOXSHOW","Bitte wÑhlen Sie den gewÅnschten Artikel aus:")
         REM erg$ = ServerReply$()
         LAuswahl$ = AdrFound$(0)
         LAuswahl1$(0) = LAuswahl$
         CREATE DIALOG "ADRLISTE",0,0,490,397,"Artikel wÑhlen","MS Sans Serif",8
         REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
         ADD DIALOG "ADRLISTE",7,5,8,478,361,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRLISTE",1,174,374,56,16,1,"&OK",1,1
         ADD DIALOG "ADRLISTE",1,234,374,56,16,0,"&Abbrechen",0,0
         DIALOG "ADRLISTE",req5%
         MOUSE ON 
         REMOVE DIALOG "ADRLISTE"
         LAuswahl$ = LAuswahl1$(0)
         cuart% = VAL ( RIGHT$ (LAuswahl$,6))

         REM IF erg$ <> "" THEN 
           REM cuart% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
         REM END IF 
       ELSE 
         CALL Fehler("Es konnte kein entsprechender Artikel gefunden werden!","")
         artsucheok% = 0
       END IF 
     ELSE 
       IF wi% = 0 THEN 
         CALL Fehler("Keinen entsprechenden Artikel gefunden!","")
         artsucheok% = 0
       END IF 
     END IF 
   END IF 
 END IF 
ENDESuch1: 
 IF finde% = 0 THEN 
   artsucheok% = 0
   CALL Fehler("Es konnte kein entsprechender Artikel gefunden werden!","")
 END IF 
 REM artiform$ = "ARTI*"
 IF DEFA$ = "MEGA" THEN artiform$ = "ARTIDEFA"
 IF UCASE$ ( FORM ) LIKE artiform$ OR UCASE$ ( FORM ) LIKE "ARTIKEEU" THEN 
   FILE "ARTIKEL"
   SELECT FORM KEY cuart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
   SET INDEX Bezeichnung.artikel
   INDEX Bezeichnung.artikel
   MOUSE ON 
   CALL ARTUpdate()
   FORM 
   MENU 4,3,1,"Auswahl&liste,F7","ArtAusw","Artikel aus der Auswahlliste auswÑhlen"
 END IF 
ENDESuch2: 
 END SUB 
 
SUB ArtAusw()
 REM artiform$ = "ARTI*"
 IF DEFA$ = "MEGA" THEN artiform$ = "ARTIDEFA"
 IF UCASE$ ( FORM ) LIKE artiform$ OR UCASE$ ( FORM ) LIKE "ARTIKEEU" THEN 
   SET STATUS "Bitte wÑhlen Sie einen Artikel aus"
   REM MENU 2,6,1,"aus Suchliste &wÑhlen,F7","ADRWahl"
   REM   CALL Server("LISTBOXSHOW","Bitte wÑhlen Sie den gewÅnschten Artikel aus:")
   REM erg$ = ServerReply$()
   REM IF erg$ <> "" THEN 
     REM cuart% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
   REM END IF 
         REM AdrFound$(a%) = ""
         LAuswahl$ = AdrFound$(0)
         LAuswahl1$(0) = LAuswahl$
         CREATE DIALOG "ADRLISTE",0,0,490,397,"Artikel wÑhlen","MS Sans Serif",8
         REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
         ADD DIALOG "ADRLISTE",7,5,8,478,361,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRLISTE",1,174,374,56,16,1,"&OK",1,1
         ADD DIALOG "ADRLISTE",1,234,374,56,16,0,"&Abbrechen",0,0
         DIALOG "ADRLISTE",req5%
         MOUSE ON 
         REMOVE DIALOG "ADRLISTE"
         LAuswahl$ = LAuswahl1$(0)
         cuart% = VAL ( RIGHT$ (LAuswahl$,6))
 
   FILE "ARTIKEL"
   SELECT FORM KEY cuart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
   SET INDEX Bezeichnung.artikel
   INDEX Bezeichnung.artikel
   MOUSE ON 
   FORM 
   MENU 4,3,1,"Auswahl&liste,F7","ArtAusw","Artikel aus der Auswahlliste auswÑhlen"
 END IF 
 END SUB 
 
  
 
 
 
 
 
 
 
 ' Produkt lîschen
 ' =======================================================================
 
SUB ARTLoeschen()
 IF disabled%("ARTLoeschen") THEN END SUB 
 cuart% = CodeAR.ARTIKEL
 REQUEST "Datensatz lîschen?","",130,req%
 IF req% = 1 THEN 
   MOUSE OFF 
   SET STATUS "WARTEN: Datensatz wird gelîscht..."
   SELECT KEY cuart% LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
   SELECT REMOVE 
 END IF 
 FILE "artprov"
 INDEX codear.artprov
 SELECT FIRST 
 SELECT KEY cuart% FILE "artprov" INDEX codear.artprov
 WHILE NOT EOF ("artprov") AND codear.artprov = cuart%
   SELECT FIRST 
   IF EXISTS (cuart%,codear.artprov) THEN 
     SELECT KEY cuart% LOCK FILE "artprov" INDEX codear.artprov
     SELECT REMOVE 
   ELSE 
     SELECT LAST 
   END IF 
 WEND 
 FILE "ARTIKEL"
 SET INDEX Bezeichnung.artikel
 INDEX Bezeichnung.artikel
 CALL ARTUpdate()
 FORM 
 SET STATUS ""
 MOUSE ON 
 END SUB 
 
 
 ' Produktgruppe zuordnen
 ' =======================================================================
 
SUB ARTGruppe()
 alle$ = "n"
 IF Bezeichnung.ARTIKEL <> "" THEN 
   _cugrp% = CodeGR.ARTIKEL
   cuart% = CodeAR.ARTIKEL
   IF NEW ("ARTIKEL") OR MOD ("ARTIKEL") THEN CALL FStore("ARTIKEL")
   DIM Auswahl1$(1)
anf150120051: 
     FILE "gruppen"
     INDEX CodeGR.gruppen
     SELECT FIRST 
     a% = 0
     REDIM ProdGruppen$(1,1)
     REDIM ProdGruppen$( RECCOUNT ("gruppen") + 10)
     WHILE NOT EOF ("gruppen")
       ok% = - 1
       IF alle$ = "n" THEN 
         IF novi1.gruppen = 1 THEN ok% = 0
       END IF 
       IF ok% = - 1 THEN 
         ProdGruppen$(a%) = Kurzbezeichnung.gruppen
         IF novi1.gruppen = 1 THEN ProdGruppen$(a%) = ProdGruppen$(a%) + " ###"
         ProdGruppen$(a%) = ProdGruppen$(a%) + SPACE$ (100) + STR$ (CodeGR.gruppen,"000000")
         a% = a% + 1
       END IF 
       SELECT NEXT 
     WEND 
     Auswahl$ = ProdGruppen$(0)
     Auswahl1$(0) = Auswahl$
     FILE "artikel"
      CREATE DIALOG "PREISLIS",0,0,200,364,title$,"MS Sans Serif",8
      ADD DIALOG "PREISLIS",4,0,0,199,340,0," Auswahl Produktgruppe"
      ADD DIALOG "PREISLIS",7,5,14,189,325,2,2,Prodgruppen$,Auswahl1$," "
      ADD DIALOG "PREISLIS",1,17,345,55,16,1,"&OK",1,1
      ADD DIALOG "PREISLIS",1,77,345,55,16,0,"&Abbrechen",0,0
      ADD DIALOG "PREISLIS",1,137,345,55,16,0,"Alle",2,2
      DIALOG "PREISLIS",req%
      REMOVE DIALOG "PREISLIS"
      IF req% = 2 THEN 
        alle$ = "j"
        GOTO anf150120051
      END IF 
      IF req% = 1 THEN 
        codegr% = VAL ( RIGHT$ (Auswahl1$(0),6))
        IF codegr% > 0 THEN 
          SELECT KEY codegr% FILE "gruppen" INDEX codegr.gruppen
          _cugrp% = CodeGR.gruppen
          IF cugrp% > 0 THEN cugrp% = _cugrp%
          SELECT KEY _cugrp% FILE "gruppen" INDEX CodeGR.gruppen
          SELECT KEY cuart% LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
          CodeGR.ARTIKEL = _cugrp%
          IF Handelsspanne.ARTIKEL < 1 THEN 
            Handelsspanne.ARTIKEL = Handelsspanne.gruppen
          END IF 
          CALL FStore("ARTIKEL")
        END IF 
        SELECT FORM KEY cuart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
        SET INDEX bezeichnung.ARTIKEL
        INDEX bezeichnung.ARTIKEL
        pgr$ = Kurzbezeichnung.GRUPPEN
      END IF 
 END IF 
 REM pgr$ = Kurzbezeichnung.GRUPPEN
 MOUSE ON 
 FORM 
 END SUB 
 
 
SUB ARTGruppeS()
 codear% = Codear.schein
 codesch% = CodeSch.schein
 IF Bezeichnung.schein = "" THEN Bezeichnung.schein = "NEU"
 IF codear% = 0 THEN 
   BLANK FILE "artikel"
   codear% = SER ("artikel")
   codear.schein = codear%
   CALL QuickStore("Schein")
   codear.artikel = codear%
   CALL QuickStore("artikel")
 ELSE 
   CALL QuickStore("Schein")
 END IF 
 SELECT KEY codear% LOCK FILE "Artikel" INDEX codear.artikel
 IF Bezeichnung.ARTIKEL = "" AND Bezeichnung.schein = "" THEN 
   Bezeichnung.ARTIKEL = "NEU"
 ELSE 
   IF Bezeichnung.artikel = "" THEN Bezeichnung.artikel = Bezeichnung.schein
 END IF 
 IF Bezeichnung.ARTIKEL <> "" THEN 
   _cugrp% = CodeGR.ARTIKEL
   cuart% = CodeAR.ARTIKEL
   IF NEW ("ARTIKEL") OR MOD ("ARTIKEL") THEN CALL FStore("ARTIKEL")
     anzeige$ = "n"
anf150120052: 
     FILE "gruppen"
     DIM Auswahl1$(1)
     INDEX CodeGR.gruppen
     SELECT FIRST 
     a% = 0
     REDIM ProdGruppen$(1,1)
     REDIM ProdGruppen$( RECCOUNT ("gruppen"))
     
     WHILE NOT EOF ("gruppen")
       ok% = - 1
       IF alle$ = "n" THEN 
         IF novi1.gruppen = 1 THEN ok% = 0
       END IF 
       IF ok% = - 1 THEN 
         ProdGruppen$(a%) = Kurzbezeichnung.gruppen
         IF novi1.gruppen = 1 THEN ProdGruppen$(a%) = ProdGruppen$(a%) + " ###"
         ProdGruppen$(a%) = ProdGruppen$(a%) + SPACE$ (100) + STR$ (CodeGR.gruppen,"000000")
         a% = a% + 1
       END IF 
       SELECT NEXT 
     WEND 
     Auswahl$ = ProdGruppen$(0)
     Auswahl1$(0) = Auswahl$
     FILE "artikel"
      CREATE DIALOG "PREISLIS",0,0,200,364,title$,"MS Sans Serif",8
      ADD DIALOG "PREISLIS",4,0,0,199,340,0," Auswahl Produktgruppe"
      ADD DIALOG "PREISLIS",7,5,14,189,325,2,2,Prodgruppen$,Auswahl1$," "
      ADD DIALOG "PREISLIS",1,17,345,55,16,1,"&OK",1,1
      ADD DIALOG "PREISLIS",1,77,345,55,16,0,"&Abbrechen",0,0
      ADD DIALOG "PREISLIS",1,137,345,55,16,0,"Alle",2,2
      DIALOG "PREISLIS",req%
      REMOVE DIALOG "PREISLIS"
      IF req% = 2 THEN 
        alle$ = "j"
        GOTO anf150120051
      END IF 


      IF req% = 1 THEN 
        codegr% = VAL ( RIGHT$ (Auswahl1$(0),6))
        
        SELECT KEY codegr% FILE "gruppen" INDEX codegr.gruppen
        _cugrp% = CodeGR.gruppen
        IF cugrp% > 0 THEN cugrp% = _cugrp%
        SELECT KEY _cugrp% FILE "gruppen" INDEX CodeGR.gruppen
        SELECT KEY cuart% LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
        CodeGR.ARTIKEL = _cugrp%
        IF Handelsspanne.ARTIKEL < 1 THEN 
          Handelsspanne.ARTIKEL = Handelsspanne.gruppen
        END IF 
        CALL QuickStore("ARTIKEL")
        SELECT KEY cuart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
        SELECT KEY codesch% LOCK FILE "schein" INDEX codesch.schein
        CodeGR.schein = _cugrp%
        CALL QuickStore("schein")
      END IF 
 END IF 
 pgr1$ = Kurzbezeichnung.GRUPPEN
 MOUSE ON 
 SELECT FORM KEY codesch% FILE "schein" INDEX codesch.schein
 FORM 
 END SUB 
 
 
 
 
SUB ARTNext()
 FILE "artikel"
 MOUSE OFF 
 ind$ = INDEX 
 cuart% = CodeAR.ARTIKEL
 IF NEW ("ARTIKEL") OR MOD ("ARTIKEL") THEN CALL FStore("ARTIKEL")
 SELECT FORM NEXT FILE "Artikel" INDEX ind$$
 IF cugrp% <> 0 THEN 
   IF CodeGR.ARTIKEL <> cugrp% THEN 
     WHILE CodeGR.ARTIKEL <> cugrp% AND NOT EOF ("ARTIKEL")
       SELECT FORM NEXT FILE "Artikel" INDEX ind$$
       cuart% = CodeAR.ARTIKEL
     WEND 
   END IF 
 END IF 
 IF EOF ("ARTIKEL") THEN 
   REQUEST "keine weiteren Eintragungen!","",2
   SELECT FORM KEY cuart% FILE "Artikel" INDEX CodeAR.ARTIKEL
   SET INDEX ind$$
   INDEX ind$$
 END IF 
 CALL ARTUpdate()
 FORM 
 MOUSE ON 
 END SUB 
 
SUB ARTPrev()
 MOUSE OFF 
 FILE "artikel"
 ind$ = INDEX 
 cuart% = CodeAR.ARTIKEL
 IF NEW ("ARTIKEL") OR MOD ("ARTIKEL") THEN CALL FStore("ARTIKEL")
 SELECT FORM PREVIOUS FILE "Artikel" INDEX ind$$
 IF cugrp% <> 0 THEN 
   IF CodeGR.ARTIKEL <> cugrp% THEN 
     WHILE CodeGR.ARTIKEL <> cugrp% AND NOT EOF ("ARTIKEL")
       SELECT FORM PREVIOUS FILE "Artikel" INDEX ind$$
       cuart% = CodeAR.ARTIKEL
     WEND 
   END IF 
 END IF 
 IF EOF ("ARTIKEL") THEN 
   REQUEST "keine weiteren Eintragungen!","",2
   SELECT FORM KEY cuart% FILE "Artikel" INDEX CodeAR.ARTIKEL
   SET INDEX ind$$
   INDEX ind$$
 END IF 
 CALL ARTUpdate()
 FORM 
 MOUSE ON 
 END SUB 
 
 
 ' Lieferant fÅr einen Artikel bestimmen
 ' =======================================================================
 
SUB ARTLieferant(nr%)
 cuart% = CodeAR.ARTIKEL
 MOUSE OFF 
 IF NEW ("ARTIKEL") OR MOD ("ARTIKEL") THEN CALL FStore("ARTIKEL")
 FILE "adressen"
 DIM LAuswahl1$(1)
 a% = 0
 INDEX AALieferant.adressen
 SELECT FIRST 
 SELECT KEY "j" FILE "adressen" INDEX aalieferant.adressen
 WHILE aalieferant.adressen = "j" AND NOT EOF ("adressen")
   Lieferant$(a%) = nachname.adressen + SPACE$ (120) + STR$ (codeku.adressen,"000000")
   a% = a% + 1
   SELECT NEXT 
 WEND 
 LAuswahl$ = Lieferant$(0)
 LAuswahl1$(0) = LAuswahl$
 CREATE DIALOG "PREISLIS",0,0,155,148,title$,"MS Sans Serif",8
    ADD DIALOG "PREISLIS",4,1,1,152,123,0," Auswahl des Lieferanten"
    ADD DIALOG "PREISLIS",7,4,14,146,114,2,2,Lieferant$,Lauswahl1$," "
    ADD DIALOG "PREISLIS",1,16,130,54,16,1,"&OK",1,1
    ADD DIALOG "PREISLIS",1,76,130,54,16,0,"&Abbrechen",0,0
 DIALOG "PREISLIS",req%
 REMOVE DIALOG "PREISLIS"
 IF req% = 1 THEN 
   LAuswahl$ = LAuswahl1$(0)
   SELECT KEY VAL ( RIGHT$ (LAuswahl$,6)) FILE "adressen" INDEX codeku.adressen
   codeku% = CodeKu.adressen
   FILE "Artikel"
   SELECT KEY cuart% LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
   IF nr% = 1 THEN Lieferant.artikel = codeku%
   IF nr% = 2 THEN Lieferant2.artikel = codeku%
   IF nr% = 3 THEN Lieferant3.artikel = codeku%
   CALL FStore("ARTIKEL")
 END IF 
 CALL ARTUpdate()
 FORM 
 MOUSE ON 
 END SUB 
 
 
 ' Kombination Intro
 ' =======================================================================
 
SUB KOMBIntro()
 cuart% = CodeAR.ARTIKEL
 FORM 2
 SELECT FORM KEY cuart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
 FORM 
 END SUB 
 
 ' Kombination neu
 ' =======================================================================
 
SUB KOMBNeu()
 IF NEW ("KOMBI") OR MOD ("KOMBI") THEN CALL FStore("KOMBI")
 BLANK FILE "KOMBI"
 CodeKO.KOMBI = CodeAR.ARTIKEL
 waehrmarti% = codew.artikel
 waehrmarti$ = waehrung.artikel
 CALL FStore("KOMBI")
 SELECT FORM KEY cuart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
 CALL KOMBAuswahl()
 END SUB 
 
 ' Kombination sichern
 ' =======================================================================
 
SUB KOMBSichern()
 IF NEW ("KOMBI") OR MOD ("KOMBI") THEN CALL FStore("KOMBI")
 CALL KOMBRechnen(cuart%)
 END SUB 
 
 ' Kombi-Positionen in Hauptartikel Åbernehmen
 ' =======================================================================
 
SUB KOMBRechnen(Artikel%)
 MOUSE OFF 
 cfile$ = FILE 
 SET STATUS "Gesamtpreis wird kalkuliert..."
 vknetto% = 0
 vkbrutto% = 0
 ek% = 0
 vknettoEu% = 0
 vkbruttoEu% = 0
 ekEu% = 0
 FILE "KOMBI"
 INDEX CodeKO.KOMBI
 SELECT FIRST 
 SELECT KEY Artikel%
 waehrpruefnew$ = ""
 waehrpruefold$ = ""
 artnew$ = ""
 artold$ = ""
 WHILE CodeKO.KOMBI = Artikel% AND NOT EOF ("KOMBI")
   SELECT KEY CodeAR.KOMBI FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
   waehrpruefnew$ = waehrung.artikel
   artnew$ = bezeichnung.artikel
   IF waehrpruefold$ = "" THEN waehrpruefold$ = waehrpruefnew$
   IF KombiNetto.ARTIKEL <> 0 THEN vknetto% = vknetto% + (Anzahl.KOMBI * KombiNetto.ARTIKEL) ELSE vknetto% = vknetto% + (Anzahl.KOMBI * VKnetto.ARTIKEL)
   IF KombiBrutto.ARTIKEL <> 0 THEN vkbrutto% = vkbrutto% + (Anzahl.KOMBI * KombiBrutto.ARTIKEL) ELSE vkbrutto% = vkbrutto% + (Anzahl.KOMBI * VKbrutto.ARTIKEL)
   IF LieferEK.ARTIKEL <> 0 THEN ek% = ek% + (Anzahl.KOMBI * LieferEK.ARTIKEL) ELSE ek% = ek% + (Anzahl.KOMBI * EK.ARTIKEL)

   IF KombiNettoEu.ARTIKEL <> 0 THEN vknettoEu% = vknettoEU% + (Anzahl.KOMBI * KombiNettoEu.ARTIKEL) ELSE vknettoEU% = vknettoeu% + (Anzahl.KOMBI * VKnettoEU.ARTIKEL)
   IF KombiBruttoEU.ARTIKEL <> 0 THEN vkbruttoEU% = vkbruttoEu% + (Anzahl.KOMBI * KombiBruttoEU.ARTIKEL) ELSE vkbruttoEU% = vkbruttoEu% + (Anzahl.KOMBI * VKbruttoEU.ARTIKEL)
   IF LieferEKEU.ARTIKEL <> 0 THEN ekEu% = ekEu% + (Anzahl.KOMBI * LieferEKEU.ARTIKEL) ELSE ekEU% = ekEU% + (Anzahl.KOMBI * EKEU.ARTIKEL)
   mwst% = MwSt.ARTIKEL
   IF UCASE$ (artiform$) = "ARTIKEL" THEN 
     IF waehrpruefold$ <> waehrpruefnew$ THEN 
       t1$ = "Artikel: " + artnew$ + " wurde in der WÑhrung " + waehrpruefnew$ + " erfa·t!" + " Der  Artikel " + artold$ + " wurde in der WÑhrung " + waehrpruefold$ + " erfa·t!"
       t2$ = "Bei der Erfassung von Kombiartikeln in der WÑhrungsmaske mÅssen alle Artikel die gleiche WÑhrung haben! Sie kînnen jedoch solche Artikel in der EURO-Maske erfassen!"
       CALL Fehler(t1$,t2$)
     END IF 
   END IF 
   artold$ = artnew$
   SELECT NEXT FILE "KOMBI" INDEX CodeKO.KOMBI
 WEND 
 FILE "ARTIKEL"
 SELECT FORM KEY Artikel% LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
 SELECT KEY Artikel% LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
 IF UCASE$ (artiform$) = "ARTIKEL" THEN 
   EK.ARTIKEL = ek%
   gesek% = ek% + KostenTransport.artikel + KostenReparatur.artikel + KostenSonstiges.artikel
   VKNetto.ARTIKEL = vknetto%
   VKbrutto.ARTIKEL = VKnetto% + ((VKnetto% / 100) * mwst%)
   Handelsspanne.ARTIKEL = (100 / ek%) * (VKnetto.ARTIKEL - ek%)
   HSpanneDM$ = STR$ (VKnetto.ARTIKEL - ek%,",9999999999.00")
   MwSt.ARTIKEL = mwst%
   CALL ArtDMEuro()
 ELSE 
   EKEu.ARTIKEL = ekEu%
   gesekeu% = ekeu% + KostTransEu.artikel + KostRepEu.artikel + KostSonstEu.artikel
   VKNettoEu.ARTIKEL = vknettoEu%
   VKbruttoEu.ARTIKEL = VKnettoEu% + ((VKnettoEu% / 100) * mwst%)
   Handelsspanne.ARTIKEL = (100 / ekeu%) * (VKnettoeu.ARTIKEL - ekeu%)
   HSpanneEu$ = STR$ (VKnettoEu.ARTIKEL - ekeu%,",9999999999.00")
   MwSt.ARTIKEL = mwst%
   CALL ArtEuroDM()
 END IF 
   
 CALL QuickStore("ARTIKEL")
 FILE cfile$
 MOUSE ON 
 SET STATUS ""
 FORM 
 END SUB 
 
 
 ' öberprÅfung, ob Artikel aus Kombiartikeln besteht
 ' =======================================================================
 
FUNCTION IsKombi%(CodeAR%)
 SELECT KEY CodeAR% FILE "KOMBI" INDEX CodeKO.KOMBI
 IF FOUND ("KOMBI") THEN IsKombi% = - 1 ELSE IsKombi% = 0
 END FUNCTION 
 
 
 ' Kombi-Position lîschen
 ' =======================================================================
 
SUB KOMBLoeschen()
 IF disabled%("KOMBLoeschen") THEN END SUB 
 scode% = QuickCode.KOMBI
 IF NEW ("KOMBI") OR MOD ("KOMBI") THEN CALL FStore("KOMBI")
 REQUEST "Wollen Sie die aktuelle Position wirklich lîschen?","",135,req%
 IF req% = 1 THEN 
   MOUSE OFF 
   FILE "KOMBI"
   SELECT KEY scode% LOCK FILE "KOMBI" INDEX QuickCode.KOMBI
   SELECT REMOVE FILE "KOMBI"
   SELECT FORM KEY cuart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
   SELECT FORM CURRENT PAGE 
   FORM 
   MOUSE ON 
 END IF 
 END SUB 
 
 
 ' KOMBI-Position auswÑhlen
 ' =======================================================================
 
SUB KOMBAuswahl()
 scode% = QuickCode.KOMBI
 SELECT KEY scode% LOCK FILE "KOMBI" INDEX QuickCode.KOMBI
 IF CodeGR.KOMBI > 0 THEN 
   _cugrp% = CodeGR.KOMBI
 ELSE 
   _cugrp% = 0
 END IF 
 FILE "gruppen"
 INDEX CodeGR
 SELECT FIRST 
 a% = 0
 WHILE NOT EOF ("gruppen")
   ProdGruppen$(a%) = Kurzbezeichnung.gruppen
   a% = a% + 1
   SELECT NEXT 
 WEND 
 SELECT KEY _cugrp% FILE "GRUPPEN" INDEX CodeGR.GRUPPEN
 Auswahl$ = Kurzbezeichnung.GRUPPEN
 suna$ = ""
 CREATE DIALOG "KOMBAuswahl",0,0,186,84,title$,"MS Sans Serif",8
 ADD DIALOG "KOMBAuswahl",9,2,6,20,22,2
 ADD DIALOG "KOMBAuswahl",5,34,8,86,8,0,"Produkt-/Leistungs&gruppe"
 ADD DIALOG "KOMBAuswahl",8,34,18,148,53,259,2,Auswahl$,ProdGruppen$
 ADD DIALOG "KOMBAuswahl",5,34,36,147,9,0,"&Such&bezeichnung"
 ADD DIALOG "KOMBAuswahl",6,34,46,148,14,0,0,suna$,20
 ADD DIALOG "KOMBAuswahl",1,54,64,50,14,1,"&Weiter",1,1
 ADD DIALOG "KOMBAuswahl",1,106,64,50,14,0,"&Abbruch",0,0
 DIALOG "KOMBAuswahl",req%
 REMOVE DIALOG "KOMBAuswahl"
 IF req% = 1 THEN 
   MOUSE OFF 
   SELECT KEY Auswahl$ FILE "gruppen" INDEX Kurzbezeichnung.gruppen
   _cugrp% = CodeGR.GRUPPEN
   CALL Server("LISTBOXINIT","Auswahl")
   FILE "ARTIKEL"
   INDEX CodeGR.ARTIKEL
   SELECT FIRST 
   SELECT KEY _cugrp%
   REM 160998
   WHILE CodeGR.ARTIKEL = _cugrp% AND NOT EOF ("ARTIKEL")
     IF UCASE$ (artiform$) = "ARTIKEL" THEN 
       IF KombiNetto.ARTIKEL = 0 THEN 
         nettopr$ = LTRIM$ ( STR$ (VKNetto.ARTIKEL,",9999999.00")) + " " + waehrung.artikel
       ELSE 
         nettopr$ = LTRIM$ ( STR$ (KombiNetto.ARTIKEL,",9999999.00")) + " " + waehrung.artikel
       END IF 
       waehr1$ = " -PREIS in:" + waehrung.artikel
     ELSE 
       IF KombiNettoEu.ARTIKEL = 0 THEN 
         nettopr$ = LTRIM$ ( STR$ (VKNettoEu.ARTIKEL,",9999999.00")) + " EUR"
       ELSE 
         nettopr$ = LTRIM$ ( STR$ (KombiNettoEu.ARTIKEL,",9999999.00")) + " EUR"
       END IF 
       waehr1$ = " -PREIS in:" + "EUR"
     END IF 
     item$ = Bezeichnung.ARTIKEL + ", " + LEFT$ (Beschreibung.ARTIKEL,100) + "; " + nettopr$ + " (" + STR$ (CodeAR.ARTIKEL,"000000") + ")"
     IF Bezeichnung.ARTIKEL LIKE "*" + suna$ + "*" OR Beschreibung.ARTIKEL LIKE "*" + suna$ + "*" THEN CALL Server("LISTBOXADD",item$)
     SELECT NEXT FILE "ARTIKEL" INDEX CodeGR.ARTIKEL
   WEND 
   CALL Server("LISTBOXSHOW","")
   MOUSE ON 
   erg$ = ServerReply$()
   
   IF erg$ <> "" THEN 
     _cuart% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
     SELECT KEY _cuart% LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
     IF UCASE$ (artiform$) = "ARTIKEL" THEN 
       IF waehrmarti% <> codew.artikel THEN 
         t1$ = "Sie versuchen zum Hauptartikel, der die WÑhrung " + waehrmarti$ + " hat einen Kombiartikel in der WÑhrung " + waehrung.artikel + " zu erfassen!"
         t2$ = "Dies ist nur mîglich, wenn Sie in die EURO-Maske wechseln und von dort aus alle Kombiartikel in Euro erfassen!"
         CALL Fehler(t1$,t2$)
         req% = 0
         GOTO wfalsch1709981
       END IF 
     END IF 
     Anzahl% = 1
     IF UCASE$ (artiform$) = "ARTIKEL" THEN 
       IF KombiNetto.ARTIKEL = 0 THEN Einzelpreis% = VKnetto.ARTIKEL ELSE Einzelpreis% = KombiNetto.ARTIKEL
     ELSE 
       IF KombiNettoEu.ARTIKEL = 0 THEN Einzelpreis% = VKnettoEu.ARTIKEL ELSE Einzelpreis% = KombiNettoEu.ARTIKEL
     END IF 
     CREATE DIALOG "KOMBAuswahl",0,0,230,92,title$ + waehr1$,"MS Sans Serif",8
     ADD DIALOG "KOMBAuswahl",9,5,4,21,24,2
     ADD DIALOG "KOMBAuswahl",5,41,11,185,12,0,Bezeichnung.ARTIKEL
     ADD DIALOG "KOMBAuswahl",5,41,25,45,12,0,"Anzahl:"
     ADD DIALOG "KOMBAuswahl",6,84,25,40,12,0,0,Anzahl%,20
     ADD DIALOG "KOMBAuswahl",6,84,41,76,12,0,0,Einzelpreis%,20
     ADD DIALOG "KOMBAuswahl",5,41,43,42,18,0,"Einzelpreis (netto):"
     ADD DIALOG "KOMBAuswahl",1,53,68,55,15,0,"&Weiter",1,1
     ADD DIALOG "KOMBAuswahl",1,112,68,55,15,0,"&Abbrechen",0,0
     DIALOG "KOMBAuswahl",req%
     REMOVE DIALOG "KOMBAuswahl"
wfalsch1709981: 
     IF req% = 1 THEN 
       IF UCASE$ (artiform$) = "ARTIKEL" THEN 
         KombiNetto.ARTIKEL = Einzelpreis%
         KombiBrutto.ARTIKEL = KombiNetto.ARTIKEL + (KombiNetto.ARTIKEL / 100 * MwSt.ARTIKEL)
         CALL ArtDMEuro()
       ELSE 
         KombiNettoEu.ARTIKEL = Einzelpreis%
         KombiBruttoEu.ARTIKEL = KombiNettoEu.ARTIKEL + (KombiNettoEu.ARTIKEL / 100 * MwSt.ARTIKEL)
         CALL ArtEuroDM()
       END IF 
       
       
       CALL QuickStore("ARTIKEL")
       SELECT KEY scode% LOCK FILE "KOMBI" INDEX QuickCode.KOMBI
       CodeAR.KOMBI = CodeAR.ARTIKEL
       Anzahl.KOMBI = Anzahl%
       Bezeichnung.KOMBI = Bezeichnung.ARTIKEL
       codew.kombi = codew.artikel
       umrechnung.kombi = umrechnung.artikel
       waehrung.kombi = waehrung.artikel
       REM EK.KOMBI = EK.ARTIKEL
       CodeGR.KOMBI = CodeGR.ARTIKEL
       ME_.KOMBI = ME_.ARTIKEL
       FILE "Kombi"
       CALL FStore("KOMBI")
       CALL KOMBRechnen(cuart%)
     END IF 
   END IF 
 END IF 
 SELECT FORM KEY cuart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
 SELECT KEY scode% LOCK FILE "KOMBI" INDEX QuickCode.KOMBI
 FORM 
 END SUB 
 
 
 ' Artikelbeschreibung generieren
 ' =======================================================================
 
SUB KOMBBeschr()
 SET STATUS "Artikelbeschreibung wird erstellt..."
 MOUSE OFF 
 FILE "KOMBI"
 INDEX CodeKO.KOMBI
 SELECT FIRST 
 beschr$ = "bestehend aus:"
 SELECT KEY cuart%
 WHILE cuart% = CodeKO.KOMBI AND NOT EOF ("KOMBI")
   SELECT KEY CodeAR.KOMBI FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
   IF Anzahl.KOMBI > 1 THEN 
     beschr$ = beschr$ + CHR$ (13) + CHR$ (10) + LTRIM$ ( STR$ (Anzahl.KOMBI,",9999999999")) + "x " + Bezeichnung.ARTIKEL
   ELSE 
     beschr$ = beschr$ + CHR$ (13) + CHR$ (10) + Bezeichnung.ARTIKEL
   END IF 
   IF Beschreibung.ARTIKEL <> "" THEN beschr$ = beschr$ + "; " + Beschreibung.ARTIKEL
   SELECT NEXT FILE "KOMBI" INDEX CodeKO.KOMBI
 WEND 
 FILE "ARTIKEL"
 SELECT FORM KEY cuart% LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
 SELECT KEY cuart% LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
 IF Beschreibung.ARTIKEL <> "" THEN beschr$ = Beschreibung.ARTIKEL + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + beschr$
 CREATE DIALOG "KOMBBeschr",0,0,302,224,title$,"MS Sans Serif",8
 ADD DIALOG "KOMBBeschr",9,5,8,20,20,2
 ADD DIALOG "KOMBBeschr",5,32,12,66,10,0,"Artikelbezeichnung:"
 ADD DIALOG "KOMBBeschr",5,100,12,180,10,0,Bezeichnung.artikel
 ADD DIALOG "KOMBBeschr",5,100,22,153,11,0,Artikelnummer.ARTIKEL
 ADD DIALOG "KOMBBeschr",5,32,24,49,11,0,"Artikelnummer:"
 ADD DIALOG "KOMBBeschr",5,32,41,68,10,0,"Artikelbeschreibung:"
 ADD DIALOG "KOMBBeschr",6,32,52,261,143,68,2,beschr$,4000
 ADD DIALOG "KOMBBeschr",1,176,200,55,15,0,"&OK",1,1
 ADD DIALOG "KOMBBeschr",1,235,200,55,15,0,"&Abbrechen",0,0
 DIALOG "KOMBBeschr",req%
 REMOVE DIALOG "KOMBBeschr"
 IF req% = 1 THEN 
   Beschreibung.ARTIKEL = beschr$
   CALL FStore("ARTIKEL")
 END IF 
 MOUSE ON 
 END SUB 
 
 
 
  
 
 
 ' Kombination beenden
 ' =======================================================================
 
SUB KOMBEnde()
 FORM 1
 END SUB 
 
 
 
  
 ' Artikel/Leistungsverwaltung
 ' =======================================================================
 
SUB MNARTIKEL()
 MENU CLEAR 
 CALL MNProgramm()
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","ARTNeu","einen neuen Artikel erfassen"
 MENU 2,2,1,"S&ichern,F4","MStore","Daten des aktuellen Artikels sichern"
 MENU 2,3,1,"&Verwerfen,Strg+RckT","UNDO","letzte énderungen verwerfen"
 IF NOT MNdisabled%("ARTLoeschen") THEN 
   MENU 2,4,1,"&Lîschen","ARTLoeschen","aktuellen Artikel lîschen"
 ELSE 
   MENU 2,4,0,"&Lîschen"
 END IF 
 MENU 2,5,1,"&Kopieren,F5","ARTKopieren",""
 MENU 2,6,1,"S&uchen,F6","ARTSuchen","Artikel suchen"
 MENU 3,0,1,"&Bewegen","",""
 MENU 3,1,1,"&NÑchster,BildAb","ARTNext","nÑchster Artikel"
 MENU 3,2,1,"&Vorheriger,BildAuf","ARTPrev","vorheriger Artikel"
 MENU 3,3,1,"&Erster","SelectFirst","erster Artikel"
 MENU 3,4,1,"&Letzter","SelectLast","letzter Artikel"
 MENU 4,0,1,"&Optionen"
 MENU 4,1,1,"&UmsatzÅbersicht","ArtUmsOne","UmsatzÅbersicht des Artikels anzeigen"
 IF artausw$ = "j" THEN 
   MENU 4,3,1,"Auswahl&liste,F7","ArtAusw","Artikel aus der Auswahlliste auswÑhlen"
 ELSE 
   MENU 4,3,0,"Auswahl&liste,F7","ArtAusw","Artikel aus der Auswahlliste auswÑhlen"
 END IF 
 IF VerleihAdr$ = "j" THEN 
   MENU 4,4,1,"Verleih Rechnungen öbersicht","JournalDru","öbersicht der Rechnungen zum Verleih"
   MENU 4,5,1,"Verleih Scheine öbersicht","VerleihDru","öbersicht der Verleihscheine zum Verleih"
 END IF 
 MENU 5,0,1,"Sor&tierung"
 MENU 5,1,1,"Bezeichnung","SortBezeichnung","Sortierung nach Bezeichnung"
 MENU 5,2,1,"Artikelnummer","SortNummer","Sortierung nach Artikelnummer"
 MENU 5,3,1,"Produktgruppen","SortGruppe","Sortierung nach Produktgruppen"
 MENU 5,4,1,"Lieferant","SortLiefer","Sortierung nach Lieferanten"
 MENU 6,0,1,"&Mehrwertsteuer"
 MENU 6,1,1,"MWST anpassen","MWSTChange","Mehrwertsteuer anpassen"
 CALL MNHilfe(7)
 END SUB 
 
SUB MNREIN()
 MENU CLEAR 
 CALL MNProgramm()
   MENU 2,0,1,"Daten","",""
   IF GRechSu1% = 0 THEN 
     MENU 2,1,0,"letztes Suchergebnis,F7","LastSearch1",""
   ELSE 
     MENU 2,1,1,"letztes Suchergebnis,F7","LastSearch1",""
   END IF 
   MENU 2,2,1,"Aktualisierung Buchungsgruppen/Konten","AktBUREI",""
 CALL MNHilfe(3)
 END SUB 


SUB AktBUREI()
   FILE "adressen"
   INDEX codeku
   FILE "reingang"
   SELECT FIRST LOCK 
   WHILE NOT EOF ("reingang")
     IF Kundennummer.reingang = "" AND codeku.reingang > 0 THEN 
       codeku% = codeku.reingang
       SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
       SELECT KEY codeku% FILE "ADRESSEN" INDEX codeku.adressen
       Kundennummer.reingang = Kundennummer.adressen
       ok% = - 1
     END IF 
     IF codewgru.reingang > 0 THEN 
       SELECT FIRST FILE "WAGRUPPE" INDEX codewgru.wagruppe
       SELECT KEY codewgru.reingang FILE "WAGRUPPE" INDEX codewgru.wagruppe
       WGruppe.reingang = wgruppe.wagruppe
       ok% = - 1
     END IF 
     IF codewa.reingang > 0 THEN 
       SELECT FIRST FILE "WARENART" INDEX codewa.WARENART
       SELECT KEY codewa.reingang FILE "WARENART" INDEX codewa.WARENART
       WARENART.reingang = WARENART.WARENART
       ok% = - 1
     END IF 
     IF ok% = - 1 THEN 
       STORE FILE "reingang"
     END IF 
     FILE "reingang"
     SELECT NEXT LOCK FILE "reingang"
     SET STATUS STR$ (codere,"000000")
     ok% = 1
   WEND 
 
 END SUB 


SUB MNRAUS()
 MENU CLEAR 
 CALL MNProgramm()
   MENU 2,0,1,"Daten","",""
   IF GRechSu1% = 0 THEN 
     MENU 2,1,0,"letztes Suchergebnis,F7","LastSearch2",""
   ELSE 
     MENU 2,1,1,"letztes Suchergebnis,F7","LastSearch2",""
   END IF 
   MENU 2,2,1,"Aktualisierung Buchungsgruppen/Konten","AktBURAU",""
 CALL MNHilfe(3)
 END SUB 


SUB AktBURAU()
   FILE "adressen"
   INDEX codeku
 
    FILE "rausgang"
   SELECT FIRST LOCK 
   WHILE NOT EOF ("rausgang")
     IF Kundennummer.rausgang = "" AND codeku.rausgang > 0 THEN 
       codeku% = codeku.rausgang
       SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
       SELECT KEY codeku% FILE "ADRESSEN" INDEX codeku.adressen
       Kundennummer.rausgang = Kundennummer.adressen
       ok% = - 1
     END IF 
     IF codewgru.rausgang > 0 THEN 
       SELECT FIRST FILE "WAGRUPPE" INDEX codewgru.wagruppe
       SELECT KEY codewgru.rausgang FILE "WAGRUPPE" INDEX codewgru.wagruppe
       WGruppe.rausgang = wgruppe.wagruppe
       ok% = - 1
     END IF 
     IF codewa.rausgang > 0 THEN 
       SELECT FIRST FILE "WARENART" INDEX codewa.WARENART
       SELECT KEY codewa.rausgang FILE "WARENART" INDEX codewa.WARENART
       WARENART.rausgang = WARENART.WARENART
       ok% = - 1
     END IF 
     ok% = - 1
 
     IF ok% = - 1 THEN STORE FILE "RAUSGANG"
     SELECT NEXT LOCK 
     ok% = 1
     SET STATUS STR$ (codere,"000000")
   WEND 
 
 
 END SUB 


SUB LastSearch1()
 REM fÅr Reingang
 CALL RESuche("REINGANG",1)
 END SUB 

SUB LastSearch2()
 REM fÅr Rausgang
 CALL RESuche("RAUSGANG",1)
 END SUB 
 
  
 
SUB CLMNARTIKEL()
 MENU 5,1,1
 MENU 5,2,1
 MENU 5,3,1
 MENU 5,4,1
 END SUB 
 
SUB SortBezeichnung()
 FILE "Artikel"
 SET INDEX Bezeichnung.ARTIKEL
 INDEX Bezeichnung.ARTIKEL
 bez$ = Bezeichnung.ARTIKEL
 artsort$ = "Bezeichnung"
 SELECT FIRST 
 SELECT FORM KEY bez$ FILE "Artikel" INDEX Bezeichnung.ARTIKEL
 FORM 
 END SUB 
 
SUB SortNummer()
 FILE "Artikel"
 SET INDEX Artikelnummer.ARTIKEL
 INDEX Artikelnummer.ARTIKEL
 artsort$ = "Artikelnummer"
 art$ = Artikelnummer.ARTIKEL
 SELECT FIRST 
 SELECT FORM KEY art$ FILE "Artikel" INDEX Artikelnummer.ARTIKEL
 FORM 
 END SUB 
 
SUB SortGruppe()
 FILE "Artikel"
 SET INDEX CodeGR.ARTIKEL
 INDEX CodeGR.ARTIKEL
 artsort$ = "Produktgruppe"
 gr% = codegr.artikel
 SELECT FIRST 
 SELECT FORM KEY gr% FILE "Artikel" INDEX codegr.artikel
 FORM 
 END SUB 
 
SUB SortLiefer()
 FILE "Artikel"
 SET INDEX Lieferant.ARTIKEL
 INDEX Lieferant.ARTIKEL
 artsort$ = "Lieferant"
 lie% = Lieferant.ARTIKEL
 SELECT FIRST 
 SELECT FORM KEY lie% FILE "Artikel" INDEX Lieferant.ARTIKEL
 FORM 
 END SUB 
 
 
 ' HauptmenÅ
 ' ======================================================================
SUB FO2()
 FORM 2
 END SUB 

SUB MNFACTURA()
 MENU CLEAR 
 CALL MNProgramm()
 MENU 1,1,1,"&Drucken...","",""
 MENU 1,1;1,1,"Journal","Journal",""
 MENU 1,1;2,1,"Fehlliste","Fehlliste",""
 MENU 2,0,1,"Datenbanken"
 MENU 2,1,1,"Projekte,F2","PROJECT","Projektverwaltung"
 MENU 2,2,1,"Adressen,F3","ADRESSEN","Adre·verwaltung"
 MENU 2,3,1,"Produktgruppen,F4","GRUPPEN","Produktgruppenverwaltung"
 MENU 2,4,1,"Artikel,F5","ARTIKEL","Artikelverwaltung"
 MENU 2,5,1,"Dokumente,F6","DOKUMENTSRV","Dokumentenverwaltung"
 MENU 2,6,1,"Rechnungsbuch,F7","AufrufRech","Rechnungsein- und Ausgangsbuch"
 MENU 2,7,1,"Stammdaten,F8","FO2","Stammdaten und Listen"
 IF MNdisabled%("öBERSICHTEN") THEN 
   MENU 3,0,0,"öbersichten"
 ELSE 
   MENU 3,0,1,"öbersichten"
 END IF 
 IF MNdisabled%("öBERSICHTOFFRE") THEN 
   MENU 3,1,0,"Umsatz Kunden","AdrUmsAll","UmsatzÅbersicht nach Kunden"
   MENU 3,2,0,"Umsatz Artikel","ArtUmsAll","UmsatzÅbersicht nach Artikeln"
   MENU 3,3,0,"Umsatz Produktgruppe","UMSGRUPPE","UmsatzÅbersicht nach Produktgruppen"
   MENU 3,4,0,"offene Rechnungen","ORECHNUNGEN","öbersicht Åber offene Rechnungen"
 ELSE 
   MENU 3,1,1,"Umsatz Kunden","AdrUmsAll","UmsatzÅbersicht nach Kunden"
   MENU 3,2,1,"Umsatz Artikel","ArtUmsAll","UmsatzÅbersicht nach Artikeln"
   MENU 3,3,1,"Umsatz Produktgruppe","UMSGRUPPE","UmsatzÅbersicht nach Produktgruppen"
   MENU 3,4,1,"offene Rechnungen","ORECHNUNGEN","öbersicht Åber offene Rechnungen"
 END IF 
 IF MNdisabled%("öBERSICHTOFFANG") THEN 
   MENU 3,5,0,"offene Angebote,F11","OANGEBOTE","öbersicht Åber offene Angebote"
 ELSE 
   MENU 3,5,1,"offene Angebote,F11","OANGEBOTE","öbersicht Åber offene Angebote"
 END IF 
 IF MNdisabled%("öBERSICHTOFFBESTELL") THEN 
   MENU 3,6,0,"offene Bestellungen","OBESTELLUNGEN","öbersicht Åber offene Bestellungen"
 ELSE 
   MENU 3,6,1,"offene Bestellungen","OBESTELLUNGEN","öbersicht Åber offene Bestellungen"
 END IF 
 MENU 3,7,3
 IF MNdisabled%("öBERSICHTEN") THEN 
   MENU 3,8,0,"allg.öbersichten Ang./Rechn/Liefer...","ListeAllg","öbersicht ÅberAng/Rechn/Liefersch/Auftr/Bestell/Gutschr"
 ELSE 
   MENU 3,8,1,"allg.öbersichten Ang./Rechn/Liefer...","ListeAllg","öbersicht ÅberAng/Rechn/Liefersch/Auftr/Bestell/Gutschr"
 END IF 
 MENU 4,0,1,"Sonstiges"
 MENU 4,1,1,"Bestellvorschlag","BESTELLV","Bestellvorschlag"
 MENU 4,2,1,"Preisliste","PREISLISTE","Preislistenausgabe"
 MENU 4,3,1,"Floskeltexte","FLOSKEL","Floskeltextverwaltung"
 MENU 4,4,1,"Kurzberichte","BMKurzbericht","Kurzberichte"
 MENU 4,5,1,"BÅromanager","OFFICE","Aufruf BÅromanager/OFFICE"
 MENU 4,6,1,"UmsÑtze neu berechnen","UmsFuel","Alle UmsÑtze neu berechnen"
 MENU 4,7,1,"Programmeinstellungen","SETUP","Einstellungen/Mitarbeiterverwaltung"
 MENU 4,8,3
 MENU 4,9,1,"Reorganisation der Datenbank","ReorgDB","Reorganisiert alle Dateien, die zur Datenbank gehîren"
 MENU 5,0,1,"Optionen"
 MENU 5,1,1,"Kombiartikel neu kalkulieren","KALKKOMBI","Kombiartikel neu kalkulieren"
 MENU 5,2,1,"Akt&ionen","AKTIONEN","Aufruf der Aktionsverwaltung"
 IF title$ LIKE "*FACTURA*" OR title$ LIKE "*firststep*" THEN 
   MENU 5,3,0,"Termine","AKQUISE1()","TerminÅbersicht"
 ELSE 
   MENU 5,3,1,"Termine","AKQUISE1()","TerminÅbersicht"
 END IF 
 MENU 5,4,1,"Do&kumente","DOKallg","Dokumente erstellen, einsehen und bearbeiten"
 SELECT KEY vcodema% FILE "SUPERVIS" INDEX CodeMA.supervis
 IF NOT MNdisabled%("DOKUMENTE") THEN 
   MENU 5,5,1,"&Dokumentenverwaltung","DOKUMENTSRV","erweiterte Dokumentenverwaltung"
 ELSE 
   MENU 5,5,0,"&Dokumentenverwaltung"
 END IF 
 mnline$ = ReadINI$("AddOn","1")
 IF mnline$ <> "leer" THEN 
   a% = 0
   AddOn$(0) = ""
   WHILE AddOn$(a%) <> "leer"
     AddOn$(a%) = FN ibm(ReadINI$("AddOn", LTRIM$ ( STR$ (a% + 1,"999999"))))
     IF AddOn$(a%) <> "leer" THEN a% = a% + 1
   WEND 
   AddOn$(a%) = ""
   MENU 6,0,1,"An&wendungen"
   a% = 0
   WHILE AddOn$(a%) <> ""
     IF a% < 10 THEN mnline$ = "&" ELSE mnline$ = ""
     mnline$ = mnline$ + LTRIM$ ( STR$ (a%,"999")) + " " + AddOn$(a%)
     MENU 6,a% + 1,1,mnline$,"ADDON"
     a% = a% + 1
   WEND 
   CALL MNHilfe(7)
 ELSE 
   CALL MNHilfe(6)
 END IF 
 END SUB 
 



SUB MNFACTURAold()
 MENU CLEAR 
 CALL MNProgramm()
 MENU 1,1,1,"&Drucken...","",""
 MENU 1,1;1,1,"Journal","Journal",""
 MENU 1,1;2,1,"Fehlliste","Fehlliste",""
 MENU 2,0,1,"Datenbanken"
 MENU 2,1,1,"Adressen","ADRESSEN","Adre·verwaltung"
 MENU 2,2,1,"Produktgruppen","GRUPPEN","Produktgruppenverwaltung"
 MENU 2,3,1,"Artikel","ARTIKEL","Artikelverwaltung"
 MENU 2,4,1,"ZugÑnge","ABZUGANG","Erfassung von ArtikelzugÑngen"
 MENU 2,5,1,"Verlustbuchung","VERLUST","Verlustbuchung"
 MENU 2,6,1,"Inventur","INVENTUR","Inventur"
 MENU 3,0,1,"öbersichten"
 MENU 3,1,1,"Umsatz Kunden","AdrUmsAll","UmsatzÅbersicht nach Kunden"
 MENU 3,2,1,"Umsatz Artikel","ArtUmsAll","UmsatzÅbersicht nach Artikeln"
 MENU 3,3,1,"Umsatz Produktgruppe","UMSGRUPPE","UmsatzÅbersicht nach Produktgruppen"
 MENU 3,4,1,"offene Rechnungen","ORECHNUNGEN","öbersicht Åber offene Rechnungen"
 MENU 3,5,1,"offene Angebote","OANGEBOTE","öbersicht Åber offene Angebote"
 MENU 3,6,1,"offene Bestellungen","OBESTELLUNGEN","öbersicht Åber offene Bestellungen"
 MENU 3,7,3
 MENU 3,8,1,"allg.öbersichten Ang./Rechn/Liefer...","ListeAllg","öbersicht ÅberAng/Rechn/Liefersch/Auftr/Bestell/Gutschr"
 MENU 4,0,1,"Sonstiges"
 MENU 4,1,1,"Bestellvorschlag","BESTELLV","Bestellvorschlag"
 MENU 4,2,1,"Preisliste","PREISLISTE","Preislistenausgabe"
 MENU 4,3,1,"Floskeltexte","FLOSKEL","Floskeltextverwaltung"
 MENU 4,4,1,"Kurzberichte","BMKurzbericht","Kurzberichte"
 MENU 4,5,1,"BÅromanager","OFFICE","Aufruf BÅromanager/OFFICE"
 MENU 4,6,1,"UmsÑtze neu berechnen","UmsFuel","Alle UmsÑtze neu berechnen"
 MENU 4,7,1,"Programmeinstellungen","SETUP","Einstellungen/Mitarbeiterverwaltung"
 MENU 4,8,3
 MENU 4,9,1,"Reorganisation der Datenbank","ReorgDB","Reorganisiert alle Dateien, die zur Datenbank gehîren"
 MENU 5,0,1,"Optionen"
 MENU 5,1,1,"Kombiartikel neu kalkulieren","KALKKOMBI","Kombiartikel neu kalkulieren"
 MENU 5,2,1,"Akt&ionen","AKTIONEN","Aufruf der Aktionsverwaltung"
 IF title$ LIKE "*FACTURA*" OR title$ LIKE "*firststep*" THEN 
   MENU 5,3,0,"Termine","AKQUISE1()","TerminÅbersicht"
 ELSE 
   MENU 5,3,1,"Termine","AKQUISE1()","TerminÅbersicht"
 END IF 
 MENU 5,4,1,"Do&kumente","DOKallg","Dokumente erstellen, einsehen und bearbeiten"
 SELECT KEY vcodema% FILE "SUPERVIS" INDEX CodeMA.supervis
 IF NOT MNdisabled%("DOKUMENTE") THEN 
   MENU 5,5,1,"&Dokumentenverwaltung","DOKUMENTSRV","erweiterte Dokumentenverwaltung"
 ELSE 
   MENU 5,5,0,"&Dokumentenverwaltung"
 END IF 
 mnline$ = ReadINI$("AddOn","1")
 IF mnline$ <> "leer" THEN 
   a% = 0
   AddOn$(0) = ""
   WHILE AddOn$(a%) <> "leer"
     AddOn$(a%) = FN ibm(ReadINI$("AddOn", LTRIM$ ( STR$ (a% + 1,"999999"))))
     IF AddOn$(a%) <> "leer" THEN a% = a% + 1
   WEND 
   AddOn$(a%) = ""
   MENU 6,0,1,"An&wendungen"
   a% = 0
   WHILE AddOn$(a%) <> ""
     IF a% < 10 THEN mnline$ = "&" ELSE mnline$ = ""
     mnline$ = mnline$ + LTRIM$ ( STR$ (a%,"999")) + " " + AddOn$(a%)
     MENU 6,a% + 1,1,mnline$,"ADDON"
     a% = a% + 1
   WEND 
   CALL MNHilfe(7)
 ELSE 
   CALL MNHilfe(6)
 END IF 
 END SUB 
  
 ' Umsetzungen fÅr MenÅaufrufe
 ' =======================================================================
 
SUB ORECHNUNGEN()
 IF disabled%("öBERSICHTOFFRE") THEN END SUB 
 CALL OffeneVorgÑnge(2)
 END SUB 
 
SUB OANGEBOTE()
 IF disabled%("öBERSICHTOFFANG") THEN END SUB 
 REM CALL OffeneVorgÑnge(1)
 CALL AllAngNEW()
 END SUB 
 
SUB OBESTELLUNGEN()
 IF disabled%("öBERSICHTOFFBESTELL") THEN END SUB 
 CALL OffeneVorgÑnge(5)
 END SUB 
 
 
SUB MasterExport(vondat$,bisdat$,opt%)
 REM OPEN FIELDS Kundennummer,Anrede,Nachname,Vorname,Geburtsname,Stra·e,Ort,Plz,Nummer,Datum,GesNetto,Rabatt,GesBrutto 
 REM                                                           ExportFile
 REM EXPORT FILE "MASTER" INDEX CodeKU TO "C:\CODIE\FACTURA\TEST1.XLS" WHERE Nachname.MASTER LIKE "1&1*" USING LABELS 
 REQUEST "Wollen Sie die ausgewÑhlten SÑtze nach EXCEL exportieren?","",130,req%
 CALL Fehler("MasterExport","")
 IF req% = 1 THEN 
   MOUSE OFF 
   FILE "master"
   INDEX codems.master
   IF ausgart% = 1 THEN 
     SELECT WHERE CodeKU.MASTER = _cuku% AND Datum.MASTER >= DAYS (vondat$) AND Datum.MASTER <= DAYS (bisdat$) AND art.master = opt%
     SELECT WHERE ASK 
   ELSE 
     SELECT WHERE Datum.MASTER >= DAYS (vondat$) AND Datum.MASTER <= DAYS (bisdat$) AND art.master = opt%
     SELECT WHERE ASK 
   END IF 
   bedingung$ = WHERE 
   SET ANSICONVERT OFF 
   OPEN FIELDS Kundennummer,Anrede,Nachname,Vorname,Geburtsname,Stra·e,Ort,Plz,Nummer,Datum,GesNetto,Rabatt,GesBrutto:VIEW 
   OPEN FIELDS ASK 
   ind$ = "datum"
   ORDER ASK 
   ind$ = ORDER 
   cdir$ = DIRECTORY 
   DIRECTORY _netpath$
   dateiname$ = "EXPMAST.XLS"
   REQUEST "Export nach EXCEL..."," ",27,req%,dateiname$
   IF req% = 1 THEN 
     befehl$ = "EXPORT FILE " + CHR$ (34) + "MASTER" + CHR$ (34) + " INDEX " + ind$ + " TO " + CHR$ (34) + dateiname$ + CHR$ (34) + " where " + bedingung$ + " USING LABELS"
     REM EXPORT FILE "MASTER" INDEX CodeKU TO "C:\CODIE\EXPMAST.XLS" USING LABELS 
     EXECUTE befehl$
     REQUEST "Export nach EXCEL beendet!","",2
   END IF 
 END IF 
 FILE "master"
 SELECT WHERE 
 CLOSE FIELDS 
 DIRECTORY cdir$
 MOUSE ON 
 END SUB 

 
SUB MastADRCon()
 IF MOD ("master") THEN CALL QuickStore("master")
 codems% = codems.master
 SELECT KEY codems% LOCK FILE "master" INDEX codems.master
 DIM AdrListe$( RECCOUNT ("ADRESSEN"))
 knr% = CodeKU.ADRESSEN
 
 FILE "connect"
 INDEX codeku.connect
 
 REM FILE "ADRESSEN"
 REM INDEX VorgÑnger.ADRESSEN
 SELECT FIRST 
 SELECT KEY knr%
 prompt$ = "ZZZZZZZZ"
 a% = 0
 WHILE codeku.connect = knr% AND NOT EOF ("connect")
   aok% = - 1
   IF MNdisabled%("DATALOCK") THEN 
     IF Sperre.ADRESSEN <> 0 AND Sperre.ADRESSEN <> vcodema% THEN aok% = 0
   END IF 
   IF aok% THEN 
     AdrListe$(a%) = Typ.connect + ", " + Nachname + ", " + Vorname + ", " + Ort + ", " + Strasse + SPACE$ (120) + STR$ (CodeCon,"000000")
     IF Nachname < prompt$ THEN prompt$ = AdrListe$(a%)
     a% = a% + 1
   END IF 
   SELECT NEXT 
 WEND 
 SELECT KEY knr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 CREATE DIALOG "ADRCON1",0,0,341,182,title$,"MS Sans Serif",8
 ADD DIALOG "ADRCON1",4,0,0,341,158,0,""
 ADD DIALOG "ADRCON1",9,5,9,20,21,2
 ADD DIALOG "ADRCON1",5,30,10,306,28,0,"Bitte wÑhlen Sie eine der untergeordneten Adressen aus oder wÑhlen Sie 'Neu' um eine neue Adresse in die Gruppe aufzunehmen."
 ADD DIALOG "ADRCON1",5,30,40,305,20,0,"Mit 'Lîschen' kînnen Sie die VerknÅpfung zur angewÑhlten Adresse lîschen."
 ADD DIALOG "ADRCON1",7,30,64,304,89,2,2,AdrListe$,Auswahl$,prompt$
 ADD DIALOG "ADRCON1",1,30,162,55,15,1,"&WÑhlen",1,1
 ADD DIALOG "ADRCON1",1,270,162,55,15,0,"&Abbrechen",0,0
 DIALOG "ADRCON1",req%
 REMOVE DIALOG "ADRCON1"
 MOUSE OFF 
 nknr% = VAL ( RIGHT$ (Auswahl$(0),6))
 IF req% <> 1 THEN 
   END SUB 
 END IF 
 SELECT CASE req%
 CASE 1
   IF nknr% <> 0 THEN 
     Adresse$ = MakeAdr$(nknr%, - 1,0,0)
     adresstext.master = adresse$
     CALL QuickStore("Master")
     SELECT KEY knr% FILE "ADRESSEN" INDEX codeku.adressen
   END IF 
 END SELECT 
 END SUB 

SUB MastADRCon1()
 IF MOD ("master") THEN CALL QuickStore("master")
 codems% = codems.master
 SELECT KEY codems% LOCK FILE "master" INDEX codems.master
 DIM AdrListe$( RECCOUNT ("ADRESSEN"))
 knr% = CodeKU.ADRESSEN
 FILE "ADRESSEN"
 INDEX VorgÑnger.ADRESSEN
 SELECT FIRST 
 SELECT KEY knr%
 prompt$ = "ZZZZZZZZ"
 a% = 0
 WHILE VorgÑnger.ADRESSEN = knr% AND NOT EOF ("ADRESSEN")
   AdrListe$(a%) = Nachname + ", " + Vorname + ", " + Ort + SPACE$ (120) + STR$ (CodeKU,"000000")
   IF Nachname < prompt$ THEN prompt$ = AdrListe$(a%)
   SELECT NEXT 
   a% = a% + 1
 WEND 
 SELECT KEY knr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 CREATE DIALOG "ADRCON1",0,0,241,182,title$,"MS Sans Serif",8
 ADD DIALOG "ADRCON1",4,0,0,241,158,0,""
 ADD DIALOG "ADRCON1",9,5,9,20,21,2
 ADD DIALOG "ADRCON1",5,30,10,206,28,0,"Bitte wÑhlen Sie eine der untergeordneten Adressen aus oder wÑhlen Sie 'Neu' um eine neue Adresse in die Gruppe aufzunehmen."
 ADD DIALOG "ADRCON1",5,30,40,205,20,0,"Mit 'Lîschen' kînnen Sie die VerknÅpfung zur angewÑhlten Adresse lîschen."
 ADD DIALOG "ADRCON1",7,30,64,204,89,2,2,AdrListe$,Auswahl$,prompt$
 ADD DIALOG "ADRCON1",1,3,162,55,15,1,"&WÑhlen",1,1
 IF UCASE$ ( FORM ) LIKE "ADRESSEN" THEN 
   ADD DIALOG "ADRCON1",1,63,162,55,15,0,"&Neu",2,1
   ADD DIALOG "ADRCON1",1,123,162,55,15,0,"&Lîschen",3,1
 END IF 
 ADD DIALOG "ADRCON1",1,183,162,55,15,0,"&Abbrechen",0,0
 DIALOG "ADRCON1",req%
 REMOVE DIALOG "ADRCON1"
 MOUSE OFF 
 nknr% = VAL ( RIGHT$ (Auswahl$(0),6))
 SELECT CASE req%
 CASE 0
   FILE "adressen"
   SELECT FIRST 
   SELECT FORM KEY knr% FILE "adressen" INDEX codeku.adressen
   FILE "master"
   MOUSE ON 
   FORM 
   END SUB 
 CASE 1
   IF nknr% <> 0 THEN SELECT KEY nknr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 CASE 2
   nachfolger% = ADRSuche%()
   IF nachfolger% <> 0 THEN 
     SELECT KEY nachfolger% LOCK FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
     ok% = - 1
     IF VorgÑnger.ADRESSEN <> 0 AND VorgÑnger.ADRESSEN <> knr% THEN 
       REQUEST "Die gewÑhlte Adresse gehîrt bereits zu einer anderen Gruppe!","Trotzdem Åbernehmen?",134,req2%
       IF req2% <> 1 THEN ok% = 0
     END IF 
     IF ok% THEN VorgÑnger.ADRESSEN = knr%
     CALL QuickStore("ADRESSEN")
   END IF 
   SELECT KEY knr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 CASE 3
   IF nknr% <> 0 THEN 
     SELECT KEY nknr% LOCK FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
     VorgÑnger.ADRESSEN = 0
     CALL QuickStore("ADRESSEN")
   END IF 
   SELECT KEY knr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 END SELECT 
 SET INDEX Nachname.ADRESSEN
 INDEX Nachname.ADRESSEN
 
 REM öbernahme der gewÑhlten Adresse in Masterdatei
 REQUEST "Mîchten Sie die gewÑhlte Adresse Åbernehmen?","",130,req%
 IF req% = 1 THEN 
   FILE "master"
   REM CodeKU.MASTER = codeku.adressen
   Anrede.MASTER = Anrede.adressen
   Nachname.Master = Nachname.adressen
   Vorname.master = Vorname.adressen
   Geburtsname.master = Geburtsname.adressen
   Stra·e.master = Stra·e.adressen
   PLZ.master = PLZ.adressen
   Ort.Master = Ort.Adressen
   Adresse$ = MakeAdr$(CodeKU.ADRESSEN, - 1,0,0)
   adresstext.master = adresse$
   IF MSArt% <> 5 THEN 
     REM Kundennummer.Master = Kundennummer.adressen
     IF DEFA$ = "MEGA" AND KostentrÑger.adressen <> "" THEN 
       REM KostentrÑger.master = KostentrÑger.adressen
     ELSE 
       REM Kostenstelle.master = Kostenstelle.adressen
     END IF 
   ELSE 
     REM Kundennummer.Master = eigKunr.Adressen
   END IF 
   CALL QuickStore("master")
 END IF 
 FILE "master"
 knr% = codeku.master
 CALL MSUpdate()
 MOUSE ON 
 FORM 
 END SUB 
 
SUB MastADRVorg()
 IF MOD ("master") THEN CALL QuickStore("master")
 codems% = codems.master
 codeku% = codeku.master
 SELECT KEY codems% LOCK FILE "master" INDEX codems.master
 FILE "adressen"
 SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
 REQUEST "Mîchten Sie wieder die Originaladresse eintragen?","",130,req%
 IF req% = 1 THEN 
   FILE "master"
   REM CodeKU.MASTER = codeku.adressen
   Anrede.MASTER = Anrede.adressen
   Nachname.Master = Nachname.adressen
   Vorname.master = Vorname.adressen
   Geburtsname.master = Geburtsname.adressen
   Stra·e.master = Stra·e.adressen
   PLZ.master = PLZ.adressen
   Ort.Master = Ort.Adressen
   Adresse$ = MakeAdr$(CodeKU.ADRESSEN, - 1,0,0)
   adresstext.master = adresse$
   IF MSArt% <> 5 THEN 
     REM Kundennummer.Master = Kundennummer.adressen
     IF DEFA$ = "MEGA" AND KostentrÑger.adressen <> "" THEN 
       REM KostentrÑger.master = KostentrÑger.adressen
     ELSE 
       REM Kostenstelle.master = Kostenstelle.adressen
     END IF 
   ELSE 
     REM Kundennummer.Master = eigKunr.Adressen
   END IF 
   CALL QuickStore("master")
 END IF 
 
 FILE "master"
 knr% = codeku.master
 CALL MSUpdate()
 FORM 
 END SUB 
 
SUB SumList()
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"schein" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"master" + _fpw$)
 CALL DFile(3,"LIEFRUCK" + _fpw$)
 von% = YEAR ( TODAY )
 buch$ = "n"
 CREATE DIALOG "UMSATZ",0,0,233,142,title$,"MS Sans Serif",8
 ADD DIALOG "UMSATZ",4,0,1,233,117,0,""
 ADD DIALOG "UMSATZ",9,6,12,20,21,2
 ADD DIALOG "UMSATZ",5,40,16,166,9,0,"Bitte geben Sie das Jahr ein, fÅr das Sie eine"
 ADD DIALOG "UMSATZ",5,40,25,93,10,0,"UmsatzÅbersicht wÅnschen."
 ADD DIALOG "UMSATZ",2,40,70,180,16,0,"nur gebuchte Belege anzeigen","j","n",buch$
 ADD DIALOG "UMSATZ",6,62,97,35,13,0,0,von%,8
 ADD DIALOG "UMSATZ",5,40,99,18,9,0,"von:"
 ADD DIALOG "UMSATZ",5,133,99,13,9,0,"bis:"
 ADD DIALOG "UMSATZ",1,57,124,55,15,1,"&OK",1,1
 ADD DIALOG "UMSATZ",1,114,124,55,15,0,"&Abbrechen",0,0
 DIALOG "UMSATZ",req%
 IF req% = 1 THEN 
   FILE "schein"
   INDEX codems.schein
   SELECT FIRST 
   FILE "master"
   INDEX codems.master
   SELECT FIRST 
   WHILE NOT EOF ("master")
     datum% = YEAR (date.master)
     monat% = MONTH (date.master)
     IF (Art.MASTER = 2 OR Art.master = 7) AND datum% = von% THEN 
       SELECT CASE monat%
         CASE 1
           IF buch$ = "j" THEN 
             SELECT KEY CodeMS.MASTER FILE "ABZUGANG" INDEX CodeMS.ABZUGANG
             IF FOUND ("ABZUGANG") THEN buchung$ = "Bu&chung Æ" ELSE buchung$ = "Bu&chung"
           ELSE 
 
           END IF 
         CASE 2
  
         CASE 3
 
         CASE 4
     
         CASE 5
 
         CASE 6
 
         CASE 7
 
         CASE 8
 
         CASE 9
 
         CASE 10
 
         CASE 11
      
         CASE 12
       END SELECT 
 
     END IF 
     SELECT NEXT 
   WEND 
 END IF 
 END SUB 
 
 REM Aufbau der TemporÑren Datei UMSTEMP1.sbf fÅr Ausdruck UmsÑtze
 
SUB WriteUmsTemp1(codeku%,kundennr$,belegart$)
  codeku% = codeku.master
  BLANK FILE "umstemp1"
  IF EXISTS (codeku%,codeku.adressen) THEN 
    SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
    Kundennummer.umstemp1 = kundennr$
    Anrede.umstemp1 = anrede.adressen
    Nachname.umstemp1 = nachname.adressen
    Vorname.umstemp1 = Vorname.adressen
    Stra·e.umstemp1 = Stra·e.adressen
    PLZ.umstemp1 = PLZ.adressen
    Ort.umstemp1 = Ort.adressen
    Geburtsname.umstemp1 = Geburtsname.adressen
    K1Bank.umstemp1 = K1Bank.adressen
    K1BLZ.umstemp1 = K1BLZ.adressen
    K1Konto.umstemp1 = K1Konto.adressen
    K2Bank.umstemp1 = K2Bank.adressen
    K2BLZ.umstemp1 = K2BLZ.adressen
    K2Konto.umstemp1 = K2Konto.adressen
    Kunde_seit.umstemp1 = DATE$ (Kunde_seit.adressen,"0d.mm.yyyy")
    Briefanrede.umstemp1 = Briefanrede.adressen
  ELSE 
    Kundennummer.umstemp1 = kundennr$
    Anrede.umstemp1 = anrede.master
    Nachname.umstemp1 = nachname.master
    Vorname.umstemp1 = Vorname.master
    Stra·e.umstemp1 = Stra·e.master
    PLZ.umstemp1 = PLZ.master
    Ort.umstemp1 = Ort.master
    Geburtsname.umstemp1 = "<Adresse nicht im Adressbestand vorhanden!>"
  END IF 
  Datum.umstemp1 = datum.master
  Belegart.umstemp1 = belegart$
  Nummer.umstemp1 = nummer.master
  codeku.umstemp1 = codeku%
  BelegNetto.umstemp1 = STR$ (GesNetto.master,"999999999.00") + " " + waehrung.master
  BelegBrutto.umstemp1 = STR$ (GesBrutto.master,"999999999.00") + " " + waehrung.master
  BelegNettoEU.umstemp1 = STR$ (GesNettoEU.master,"999999999.00") + " EUR"
  BelegBruttoEU.umstemp1 = STR$ (GesBruttoEU.master,"999999999.00") + " EUR"
  codew.umstemp1 = codew.master
  umrechnung.umstemp1 = umrechnung.master
  waehrung.umstemp1 = waehrung.master
  QNameDatum.umstemp1 = LEFT$ (nachname.umstemp1) + STR$ (codeku%,"000000") + DATE$ (datum.umstemp1,"yyyymmdd")
  QName.umstemp1 = LEFT$ (nachname.umstemp1) + STR$ (codeku%,"000000")
  feld1$ = "Telart"
  feld2$ = "Telnr"
  feld3$ = "FaxJn"
  codema% = codema.adressen
  IF EXISTS (codeku%,codeku.telefon) THEN 
    FILE "telefon"
    INDEX codeku.telefon
    SELECT FIRST 
    SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
    abi% = 0
    WHILE codeku.telefon = codeku% AND abi% < 20 AND NOT EOF ("telefon")
      abi% = abi% + 1
      IF abi% < 10 THEN 
        feldart$ = feld1$ + STR$ (abi%,"9") + ".umstemp1"
        feldnum$ = feld2$ + STR$ (abi%,"9") + ".umstemp1"
        feldfax$ = feld3$ + STR$ (abi%,"9") + ".umstemp1"
      ELSE 
        feldart$ = feld1$ + STR$ (abi%,"99") + ".umstemp1"
        feldnum$ = feld2$ + STR$ (abi%,"99") + ".umstemp1"
        feldfax$ = feld3$ + STR$ (abi%,"99") + ".umstemp1"
      END IF 
      feldart$$ = LEFT$ (art.telefon,50)
      feldnum$$ = LEFT$ (nummer.telefon,35)
      feldfax$ = FonOderFax.telefon
      SELECT NEXT FILE "telefon" INDEX codeku.telefon
    WEND 
  END IF 
  IF _projekt$ LIKE "FACTURA" THEN 
    IF EXISTS (codema%,codema.vertrete) THEN 
      FILE "vertrete"
      INDEX codema.vertrete
      SELECT FIRST 
      SELECT KEY codema% FILE "vertrete" INDEX codema.vertrete
      Mitarbeiter.umstemp1 = TRIM$ (nachname.vertrete) + ", " + TRIM$ (vorname.vertrete)
      QuickMaKund.umstemp1 = TRIM$ (nachname.vertrete) + TRIM$ (vorname.vertrete) + nachname.adressen
    END IF 
  END IF 
  FILE "umstemp1"
  STORE FILE "umstemp1"
  UNLOCK CURRENT FILE "umstemp1"
 END SUB 
  
  
 
 
 REM Drucken Umsatz fÅr Adresse
 
SUB VPEADR1Ums(Wbericht$,FormatPrint$,title2$,wbsort$,listart%,Kontrollfeld$,drucknameonly$)
 MOUSE OFF 
 REM wbericht$ enthÑlt den Namen der zu druckenden Datei
 REM Initialisierung der VPE
 FormatPrint$ = "A4h"
 CALL VPEINI(title2$,FormatPrint$)
 FILE wbericht$
 IF wbsort$ = "" THEN 
   INDEX nachname.wbericht$
 ELSE 
   INDEX wbsort$$
 END IF 
 req% = 0
 SELECT FIRST 
 eu% = 0
 drwaehr$ = ""
  IF eurosupport$ = "TRUE" THEN 
   t1$ = "Wenn Sie Rechnungen in unterschiedlichen WÑhrungen erfa·t haben, sollten Sie die RechnungsÅbersicht in EURO ausgeben lassen,"
   t2$ = "da bei der Ausgabe der Rechnungen in der OriginalwÑhrung zwar die einzelnen RechnungsbetrÑge stimmen, aber keine der errechnten Summen richtig sein wird(z.B. DM+US$=?)!"
   CALL Fehler(t1$,t2$)
   REQUEST "öbersicht in EURO drucken?","",130,req%
   IF req% = 1 THEN 
     eu% = 1
     drwaehr$ = " in EUR"
   ELSE 
     eu% = 0
     drwaehr$ = " in allen WÑhrungen"
   END IF 
 END IF 
 title2$ = title2$ + drwaehr$
 gruppeneu$ = QName.wbericht$
 gruppeold$ = ""
 vzeil% = mTop%
 CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
 CALL VWrite(mleft%,vzeil% + 10,mright% - 3,"['Arial' S 8 B C BLACK]" + title2$ + " vom " + DATE$ ( TODAY ,"dd.mm.yyyy"))
 CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " vom " + LTRIM$ ( STR$ (cPage%,"999")))
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 vzeil% = obBottom% + 20
 ueberpos% = vzeil%
 CALL VTransp(0)
 CALL VSetPen(0,0)
 zeilenabstand% = 40
 zeilenoffset% = 40
 i% = 1
 sumgesnet% = 0
 sumgesbrut% = 0
 sumgesmwst% = 0
 sumgrnet% = 0
 sumgrbrut% = 0
 sumgrmwst% = 0
 uebertrnet% = 0
 uebertrbrut% = 0
 uebertrmwst% = 0
 fstgroup% = 0
 t% = 1
 mbottom% = mbottom% - 15
 WHILE NOT EOF (wbericht$)
   REM codeku% = codeku.wbericht$
   a% = vzeil%
   czeile% = vzeil%
   cPage% = CALL ("VpeGetCurrentPage",hdoc%)
   cPageold% = cPage%
   ok% = - 1
   
   gruppeneu$ = QName.wbericht$
   IF listart% = 1 THEN 
     IF gruppeneu$ <> gruppeold$ THEN 
       REM IF nachname.wbericht$ LIKE "Botte*" THEN 
         REM CALL Fehler("test","")
       REM END IF 
       IF fstgroup% <> 0 AND gruppeold$ <> "nextpage" THEN 
         CALL VAlign(1)
         CALL VPrint(mleft%,a%,"['Arial' S 8 B C BLACK]" + "Kunde gesamt: ")
         IF eu% = 0 THEN 
           CALL VWrite(mleft% + 800,a%,mleft% + 1090,"['Arial' S 8 B C BLACK]" + STR$ (sumgrnet%,",999999999.00"))
           CALL VWrite(mleft% + 1100,a%,mleft% + 1390,"['Arial' S 8 B C BLACK]" + STR$ (sumgrmwst%,",999999999.00"))
           CALL VWrite(mleft% + 1400,a%,mleft% + 1690,"['Arial' S 8 B C BLACK]" + STR$ (sumgrbrut%,",999999999.00"))
         ELSE 
           CALL VWrite(mleft% + 800,a%,mleft% + 1090,"['Arial' S 8 B C BLACK]" + STR$ (sumgrnet%,",999999999.00") + " EUR")
           CALL VWrite(mleft% + 1100,a%,mleft% + 1390,"['Arial' S 8 B C BLACK]" + STR$ (sumgrmwst%,",999999999.00") + " EUR")
           CALL VWrite(mleft% + 1400,a%,mleft% + 1690,"['Arial' S 8 B C BLACK]" + STR$ (sumgrbrut%,",999999999.00") + " EUR")
         END IF 
         CALL VAlign(0)
         sumgrnet% = 0
         sumgrbrut% = 0
         sumgrmwst% = 0
         a% = vzeil% + 5
         CALL VLine(mleft% - 7,a%,mright%,a%)
         CALL VLine(mleft% - 7,a% + 2,mright%,a% + 2)
         a% = vzeil% + 10
         sumdruck$ = "j"
         czeile% = a%
       END IF 
       czeile1% = czeile%
       IF nachname <> "" THEN 
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + nachname.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Firma: ")
         REM a% = vzeil%
       END IF 
 
       IF Kundennummer.wbericht$ <> "" THEN 
         CALL VPrint(mleft% + 810,a%,"['Arial' S 8 B C BLACK]" + "Kundennummer: ")
         CALL VWrite(mleft% + 1100,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + Kundennummer.wbericht$)
         a% = vzeil%
       END IF 
  
       IF geburtsname.wbericht$ <> "" AND drucknameonly$ <> "j" THEN 
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + geburtsname.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Zusatz: ")
         a% = vzeil%
       END IF 
       IF stra·e.wbericht$ <> "" AND drucknameonly$ <> "j" THEN 
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Stra·e: ")
         CALL VWrite(mleft% + 270,a%,2000,"['Arial' S 8 B C BLACK]" + stra·e.wbericht$)
         a% = vzeil%
       END IF 
       IF ((plz.wbericht$ <> "" OR ort.wbericht$ <> "") AND drucknameonly$ <> "j") THEN 
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "PLZ/Ort: ")
         CALL VWrite(mleft% + 270,a%,1490,"['Arial' S 8 B C BLACK]" + plz.wbericht$)
         CALL VWrite(mleft% + 370,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + ort.wbericht$)
         a% = vzeil%
         
       END IF 
       a% = vzeil%
       abi% = 0
       vzeil% = a%
 
       a% = vzeil% + 10
       CALL VLine(mleft% - 7,a%,mright%,a%)
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       a% = vzeil% + 10
       vzeil% = a%
       IF Kontrollfeld$ <> "j" THEN 
         CALL VPrint(mleft%,a%,"['Arial' S 8 B C BLACK]" + "Datum")
         CALL VPrint(mleft% + 300,a%,"['Arial' S 8 B C BLACK]" + "Nummer")
         CALL VPrint(mleft% + 600,a%,"['Arial' S 8 B C BLACK]" + "Belegart")
         CALL VPrint(mleft% + 940,a%,"['Arial' S 8 B C BLACK]" + "Beleg Netto")
         CALL VPrint(mleft% + 1320,a%,"['Arial' S 8 B C BLACK]" + "MWST")
         CALL VPrint(mleft% + 1500,a%,"['Arial' S 8 B C BLACK]" + "Beleg Brutto")
         vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         a% = vzeil% + 10
         CALL VLine(mleft% - 7,a%,mright%,a%)
         vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         a% = vzeil% + 10
       END IF 
       vzeil% = a%
       fstgroup% = 1
     ELSE 
       sumdruck$ = "n"
     END IF 
     gruppeold$ = gruppeneu$
     vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     a% = vzeil% + 10
     vzeil% = a%
     IF Kontrollfeld$ <> "j" THEN 
       REM Ausdruck der einzelnen Belege
       CALL VAlign(0)
       CALL VPrint(mleft%,a%,"['Arial' S 8 B C BLACK]" + DATE$ (datum.wbericht$,"0d.mm.yyyy"))
       CALL VPrint(mleft% + 300,a%,"['Arial' S 8 B C BLACK]" + Nummer.wbericht$)
       CALL VPrint(mleft% + 600,a%,"['Arial' S 8 B C BLACK]" + Belegart.wbericht$)
       IF eu% = 0 THEN 
         mwst% = VAL (BelegBrutto.wbericht$) - VAL (BelegNetto.wbericht$)
         mwst$ = STR$ (mwst%,",999999999.00") + " " + waehrung.wbericht$
       ELSE 
         mwst% = VAL (BelegBruttoEU.wbericht$) - VAL (BelegNettoEU.wbericht$)
         mwst$ = STR$ (mwst%,",999999999.00") + " EUR"
       END IF 
       CALL VAlign(1)
       IF eu% = 0 THEN 
         CALL VWrite(mleft% + 800,a%,mleft% + 1090,"['Arial' S 8 B C BLACK]" + BelegNetto.wbericht$)
         CALL VWrite(mleft% + 1100,a%,mleft% + 1390,"['Arial' S 8 B C BLACK]" + mwst$)
         CALL VWrite(mleft% + 1400,a%,mleft% + 1690,"['Arial' S 8 B C BLACK]" + BelegBrutto.wbericht$)
       ELSE 
         CALL VWrite(mleft% + 800,a%,mleft% + 1090,"['Arial' S 8 B C BLACK]" + BelegNettoEU.wbericht$)
         CALL VWrite(mleft% + 1100,a%,mleft% + 1390,"['Arial' S 8 B C BLACK]" + mwst$)
         CALL VWrite(mleft% + 1400,a%,mleft% + 1690,"['Arial' S 8 B C BLACK]" + BelegBruttoEU.wbericht$)
       END IF 
       CALL VAlign(0)
     END IF 
   END IF 
 
 
  
 
   maxbottom% = vzeil%
   a% = vzeil%
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   IF obBottom% < a% THEN obBottom% = a%
   IF obBottom% >= mBottom% THEN 
     REM CALL VBox(mleft% - 7,mTop%,mright%,obBottom%)
     CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
     CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
     CALL VLine(mright%,mtop%,mright%,czeile%)
     
     CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
     CALL VAlign(1)
     CALL VPrint(mleft% + 300,czeile% + 10,"['Arial' S 8 B C BLACK]" + "öbertrag:")
     IF eu% = 0 THEN 
       CALL VWrite(mleft% + 800,czeile% + 10,mleft% + 1090,"['Arial' S 8 B C BLACK]" + STR$ (uebertrnet%,",999999999.00"))
       CALL VWrite(mleft% + 1100,czeile% + 10,mleft% + 1390,"['Arial' S 8 B C BLACK]" + STR$ (uebertrmwst%,",999999999.00"))
       CALL VWrite(mleft% + 1400,czeile% + 10,mleft% + 1690,"['Arial' S 8 B C BLACK]" + STR$ (uebertrbrut%,",999999999.00"))
     ELSE 
       CALL VWrite(mleft% + 800,czeile% + 10,mleft% + 1090,"['Arial' S 8 B C BLACK]" + STR$ (uebertrnet%,",999999999.00") + " EUR")
       CALL VWrite(mleft% + 1100,czeile% + 10,mleft% + 1390,"['Arial' S 8 B C BLACK]" + STR$ (uebertrmwst%,",999999999.00") + " EUR")
       CALL VWrite(mleft% + 1400,czeile% + 10,mleft% + 1690,"['Arial' S 8 B C BLACK]" + STR$ (uebertrbrut%,",999999999.00") + " EUR")
     END IF 
     CALL VAlign(0)
     ab% = CALL ("VpePageBreak",hdoc%)
     vzeil% = ueberpos%
     a% = vzeil%
     gruppeold$ = "nextpage"
   ELSE 
     IF eu% = 0 THEN 
       sumgesnet% = sumgesnet% + VAL (BelegNetto.wbericht$)
       sumgesbrut% = sumgesbrut% + VAL (BelegBrutto.wbericht$)
       sumgesmwst% = sumgesbrut% - sumgesnet%
       sumgrnet% = sumgrnet% + VAL (BelegNetto.wbericht$)
       sumgrbrut% = sumgrbrut% + VAL (BelegBrutto.wbericht$)
       sumgrmwst% = sumgrbrut% - sumgrnet%
       uebertrnet% = uebertrnet% + VAL (BelegNetto.wbericht$)
       uebertrbrut% = uebertrbrut% + VAL (BelegBrutto.wbericht$)
       uebertrmwst% = uebertrbrut% - uebertrnet%
     ELSE 
       sumgesnet% = sumgesnet% + VAL (BelegNettoEU.wbericht$)
       sumgesbrut% = sumgesbrut% + VAL (BelegBruttoEU.wbericht$)
       sumgesmwst% = sumgesbrut% - sumgesnet%
       sumgrnet% = sumgrnet% + VAL (BelegNettoEU.wbericht$)
       sumgrbrut% = sumgrbrut% + VAL (BelegBruttoEU.wbericht$)
       sumgrmwst% = sumgrbrut% - sumgrnet%
       uebertrnet% = uebertrnet% + VAL (BelegNettoEU.wbericht$)
       uebertrbrut% = uebertrbrut% + VAL (BelegBruttoEU.wbericht$)
       uebertrmwst% = uebertrbrut% - uebertrnet%
     END IF 
     SELECT NEXT 
     i% = i% + 1
     SET STATUS STR$ (i%,"0000000") + " Adressen verarbeitet!"
     vzeil% = a%
     IF EOF (wbericht$) THEN 
       CALL VPrint(mleft%,a%,"['Arial' S 10 B C BLACK]" + "Kunde gesamt: ")
       CALL VAlign(1)
       IF eu% = 0 THEN 
         CALL VWrite(mleft% + 800,a%,mleft% + 1090,"['Arial' S 8 B C BLACK]" + STR$ (sumgrnet%,",999999999.00"))
         CALL VWrite(mleft% + 1100,a%,mleft% + 1390,"['Arial' S 8 B C BLACK]" + STR$ (sumgrmwst%,",999999999.00"))
         CALL VWrite(mleft% + 1400,a%,mleft% + 1690,"['Arial' S 8 B C BLACK]" + STR$ (sumgrbrut%,",999999999.00"))
       ELSE 
         CALL VWrite(mleft% + 800,a%,mleft% + 1090,"['Arial' S 8 B C BLACK]" + STR$ (sumgrnet%,",999999999.00") + " EUR")
         CALL VWrite(mleft% + 1100,a%,mleft% + 1390,"['Arial' S 8 B C BLACK]" + STR$ (sumgrmwst%,",999999999.00") + " EUR")
         CALL VWrite(mleft% + 1400,a%,mleft% + 1690,"['Arial' S 8 B C BLACK]" + STR$ (sumgrbrut%,",999999999.00") + " EUR")
       END IF 
       CALL VAlign(0)
       a% = vzeil% + 20
       obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       IF obBottom% < a% THEN obBottom% = a%
       CALL VPrint(mleft%,a%,"['Arial' S 10 B C BLACK]" + "Bericht gesamt: ")
       CALL VAlign(1)
       IF eu% = 0 THEN 
         CALL VWrite(mleft% + 800,a%,mleft% + 1090,"['Arial' S 8 B C BLACK]" + STR$ (sumgesnet%,",999999999.00"))
         CALL VWrite(mleft% + 1100,a%,mleft% + 1390,"['Arial' S 8 B C BLACK]" + STR$ (sumgesmwst%,",999999999.00"))
         CALL VWrite(mleft% + 1400,a%,mleft% + 1690,"['Arial' S 8 B C BLACK]" + STR$ (sumgesbrut%,",999999999.00"))
       ELSE 
         CALL VWrite(mleft% + 800,a%,mleft% + 1090,"['Arial' S 8 B C BLACK]" + STR$ (sumgesnet%,",999999999.00") + " EUR")
         CALL VWrite(mleft% + 1100,a%,mleft% + 1390,"['Arial' S 8 B C BLACK]" + STR$ (sumgesmwst%,",999999999.00") + " EUR")
         CALL VWrite(mleft% + 1400,a%,mleft% + 1690,"['Arial' S 8 B C BLACK]" + STR$ (sumgesbrut%,",999999999.00") + " EUR")
       END IF 
       CALL VAlign(0)
 
       CALL VLine(mleft% - 7,mtop%,mleft% - 7,obBottom%)
       CALL VLine(mright%,mtop%,mright%,obBottom%)
       CALL VLine(mleft% - 7,obBottom%,mright%,obBottom%)
     END IF 
   END IF 
 WEND 
 REM vzeil% = listende% + 100
 vzeil% = mBottom%
 CALL VPrint(mleft%,vzeil% + 20,"['Arial' S 15 B C BLACK]Ende der Liste")
 cPage% = CALL ("VpeGetCurrentPage",hdoc%)
 
 FOR b% = 1 TO cPage%
   vzeil% = mTop%
   a% = CALL ("VpeGotoPage",hdoc%,b%)
   CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
   CALL VWrite(mleft%,vzeil% + 10,mright% - 3,"['Arial' S 8 B C BLACK]" + title2$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
   CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
 NEXT b%
 a% = CALL ("VpeGotoPage",hdoc%,1)
 MOUSE ON 
 IF scedov% = 1 AND reqbild% <> 1 THEN 
   CALL VPrintDoc()
 ELSE 
   CALL VPrevDoc()
 END IF 
 REM Nach dem Drucken, Drucker auf A4 hoch setzen
 c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,1,9
 REM CLOSE FILE wbericht$
 END SUB 
  
  
 REM Aufbau der TemporÑren Datei UMSTEMP1.sbf fÅr Ausdruck UmsÑtze
 
SUB WriteUmsArt(codeku%,codear%,belegart$)
 REM CALL Fehler(belegart$ + " " + STR$ (codeku%), STR$ (GesBrutto.master,",999999999.00"))
 CALL DFile(3,"umstemp1" + _fpw$)
  codeku% = codeku.master
  BLANK FILE "umstemp1"
   IF EXISTS (codeku%,codeku.adressen) THEN 
    SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
    Kundennummer.umstemp1 = kundennummer.adressen
    Anrede.umstemp1 = anrede.adressen
    Nachname.umstemp1 = nachname.adressen
    Vorname.umstemp1 = Vorname.adressen
    Stra·e.umstemp1 = Stra·e.adressen
    PLZ.umstemp1 = PLZ.adressen
    Ort.umstemp1 = Ort.adressen
    Geburtsname.umstemp1 = Geburtsname.adressen
    K1Bank.umstemp1 = K1Bank.adressen
    K1BLZ.umstemp1 = K1BLZ.adressen
    K1Konto.umstemp1 = K1Konto.adressen
    K2Bank.umstemp1 = K2Bank.adressen
    K2BLZ.umstemp1 = K2BLZ.adressen
    K2Konto.umstemp1 = K2Konto.adressen
    Kunde_seit.umstemp1 = DATE$ (Kunde_seit.adressen,"0d.mm.yyyy")
    Briefanrede.umstemp1 = Briefanrede.adressen
  ELSE 
    Kundennummer.umstemp1 = kundennr$
    Anrede.umstemp1 = anrede.master
    Nachname.umstemp1 = nachname.master
    Vorname.umstemp1 = Vorname.master
    Stra·e.umstemp1 = Stra·e.master
    PLZ.umstemp1 = PLZ.master
    Ort.umstemp1 = Ort.master
    Geburtsname.umstemp1 = "<Adresse nicht im Adressbestand vorhanden!>"
  END IF 
  Datum.umstemp1 = datum.master
  Belegart.umstemp1 = belegart$
  Nummer.umstemp1 = nummer.master
  codeku.umstemp1 = codeku%
 
  BelegNetto.umstemp1 = STR$ (GesNetto.master,",999999999.00") + waehrung.master
  BelegBrutto.umstemp1 = STR$ (GesBrutto.master,",999999999.00") + waehrung.master
  BelegNettoEU.umstemp1 = STR$ (GesNettoEU.master,",999999999.00") + " EUR"
  BelegBruttoEU.umstemp1 = STR$ (GesBruttoEU.master,",999999999.00") + " EUR"
  codew.umstemp1 = codew.waehrung
  umrechnung.umstemp1 = umrechnung.master
  waehrung.umstemp1 = waehrung.master
  QNameDatum.umstemp1 = LEFT$ (nachname.umstemp1) + STR$ (codeku%,"000000") + DATE$ (datum.umstemp1,"yyyymmdd")
  QName.umstemp1 = LEFT$ (nachname.umstemp1) + STR$ (codeku%,"000000")
  K1Bank.umstemp1 = K1Bank.adressen
  K1BLZ.umstemp1 = K1BLZ.adressen
  K1Konto.umstemp1 = K1Konto.adressen
  K2Bank.umstemp1 = K2Bank.adressen
  K2BLZ.umstemp1 = K2BLZ.adressen
  K2Konto.umstemp1 = K2Konto.adressen
  feld1$ = "Telart"
  feld2$ = "Telnr"
  feld3$ = "FaxJn"
  codema% = codema.adressen
  IF EXISTS (codeku%,codeku.telefon) THEN 
    FILE "telefon"
    INDEX codeku.telefon
    SELECT FIRST 
    SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
    abi% = 0
    WHILE codeku.telefon = codeku% AND abi% < 20 AND NOT EOF ("telefon")
      abi% = abi% + 1
      IF abi% < 10 THEN 
        feldart$ = feld1$ + STR$ (abi%,"9") + ".umstemp1"
        feldnum$ = feld2$ + STR$ (abi%,"9") + ".umstemp1"
        feldfax$ = feld3$ + STR$ (abi%,"9") + ".umstemp1"
      ELSE 
        feldart$ = feld1$ + STR$ (abi%,"99") + ".umstemp1"
        feldnum$ = feld2$ + STR$ (abi%,"99") + ".umstemp1"
        feldfax$ = feld3$ + STR$ (abi%,"99") + ".umstemp1"
      END IF 
      feldart$$ = LEFT$ (art.telefon,50)
      feldnum$$ = LEFT$ (nummer.telefon,35)
      feldfax$ = FonOderFax.telefon
      SELECT NEXT FILE "telefon" INDEX codeku.telefon
    WEND 
  END IF 
  IF _projekt$ LIKE "FACTURA" THEN 
    IF EXISTS (codema%,codema.vertrete) THEN 
      FILE "vertrete"
      INDEX codema.vertrete
      SELECT FIRST 
      SELECT KEY codema% FILE "vertrete" INDEX codema.vertrete
      Mitarbeiter.umstemp1 = TRIM$ (nachname.vertrete) + ", " + TRIM$ (vorname.vertrete)
      QuickMaKund.umstemp1 = TRIM$ (nachname.vertrete) + TRIM$ (vorname.vertrete) + nachname.adressen
    END IF 
  END IF 
  codekul% = Lieferant.artikel
  IF EXISTS (codekul%,codeku.adressen) THEN 
    SELECT KEY codekul% FILE "Adressen" INDEX codeku.adressen
    LNachname.umstemp1 = Nachname.adressen
    LGeburtsname = Geburtsname.adressen
    LVorname.umstemp1 = Vorname.adressen
    LOrt.umstemp1 = Ort.adressen
    LPLZ.umstemp1 = PLZ.adressen
    LStra·e.umstemp1 = Stra·e.adressen
    codekul.umstemp1 = codekul%
    
  ELSE 
    LNachname.umstemp1 = "<ohne Zuordnung>"
  END IF 
  QLNameDatum.umstemp1 = LEFT$ (Lnachname.umstemp1) + STR$ (codekul%,"000000") + DATE$ (datum.umstemp1,"yyyymmdd")
  QLName.umstemp1 = LEFT$ (Lnachname.umstemp1) + STR$ (codekul%,"000000")
  codegr% = codegr.schein
  IF EXISTS (codegr%,codegr.gruppen) THEN 
    SELECT KEY codegr% FILE "Gruppen" INDEX codegr.gruppen
    Produktgruppe.umstemp1 = Kurzbezeichnung.gruppen
    codegr.umstemp1 = codegr%
  ELSE 
    Produktgruppe.umstemp1 = "<ohne Zuordnung>"
  END IF 
 
  Bezeichnung.umstemp1 = Bezeichnung.artikel
  QBezDatum.umstemp1 = Bezeichnung.schein + STR$ (codear.schein,"000000") + DATE$ (datum.umstemp1,"yyyymmdd")
  QBez.umstemp1 = Bezeichnung.schein + STR$ (codear.schein,"000000")
 
  Artikelnummer.umstemp1 = Artikelnummer.artikel
  QArtnrDatum.umstemp1 = Artikelnummer.artikel + STR$ (codear.schein,"000000") + DATE$ (datum.umstemp1,"yyyymmdd")
  QArtnr.umstemp1 = Artikelnummer.artikel + STR$ (codear.schein,"000000")
  QLNamArtnrDatum.umstemp1 = LEFT$ (Lnachname.umstemp1) + STR$ (codekul%,"000000") + Artikelnummer.artikel + STR$ (codear.schein,"000000") + DATE$ (datum.umstemp1,"yyyymmdd")
  QLNamArtnr.umstemp1 = LEFT$ (Lnachname.umstemp1) + STR$ (codekul%,"000000") + Artikelnummer.artikel + STR$ (codear.schein,"000000")
  QLNamBezDatum.umstemp1 = LEFT$ (Lnachname.umstemp1) + STR$ (codekul%,"000000") + Bezeichnung.artikel + STR$ (codear.schein,"000000") + DATE$ (datum.umstemp1,"yyyymmdd")
  QLNamBez.umstemp1 = LEFT$ (Lnachname.umstemp1) + STR$ (codekul%,"000000") + Bezeichnung.artikel + STR$ (codear.schein,"000000")
  QPGArtnrDatum.umstemp1 = Produktgruppe.umstemp1 + STR$ (codegr%,"000000") + Artikelnummer.artikel + STR$ (codear.schein,"000000") + DATE$ (datum.umstemp1,"yyyymmdd")
  QPGArtnr.umstemp1 = Produktgruppe.umstemp1 + STR$ (codegr%,"000000") + Artikelnummer.artikel + STR$ (codear.schein,"000000")
  QPGBezDatum.umstemp1 = Produktgruppe.umstemp1 + STR$ (codegr%,"000000") + Bezeichnung.artikel + STR$ (codear.schein,"000000") + DATE$ (datum.umstemp1,"yyyymmdd")
  QPGBez.umstemp1 = Produktgruppe.umstemp1 + STR$ (codegr%,"000000") + Bezeichnung.artikel + STR$ (codear.schein,"000000")
 
  Beschreibung.umstemp1 = Beschreibung.artikel
  codear.umstemp1 = Codear.schein
  VKNetto.umstemp1 = VKNetto.schein
  VKBrutto.umstemp1 = VKBrutto.schein
  LieferEK.umstemp1 = EK.schein
  Anzahl.umstemp1 = anzahl.schein
  Bestand.umstemp1 = Bestand.artikel
  ME_.umstemp1 = ME_.artikel
  Handelsspanne.umstemp1 = Handelsspanne.schein
  Bezugsmenge.umstemp1 = Bezugsmenge.artikel
  Serienr.umstemp1 = Serienr.schein
  GesNetto.umstemp1 = GesamtNetto.schein
  GesBrutto.umstemp1 = GesamtBrutto.schein
  REM 041198
  GesNettoEU.umstemp1 = GesNettoEU.schein
  GesBruttoEU.umstemp1 = GesBruttoEU.schein
  VKNettoEU.umstemp1 = VKNettoEU.schein
  VKBruttoEU.umstemp1 = VKBruttoEU.schein
  LieferEKEU.umstemp1 = EKEU.schein
  FILE "umstemp1"
  STORE FILE "umstemp1"
  UNLOCK CURRENT FILE "umstemp1"
 END SUB 
  
  
 
 
 REM Drucken Umsatz fÅr Artikel
 
SUB VPEART1Ums(Wbericht$,FormatPrint$,title2$,sort%,listart%,Kontrollfeld$)
 MOUSE OFF 
 REM 260298
 REM wbericht$ enthÑlt den Namen der zu druckenden Datei
 REM Initialisierung der VPE
 FormatPrint$ = "A4h"

 CALL VPEINI(title2$,FormatPrint$)
 FILE wbericht$
 IF sort% = 0 THEN 
   INDEX Artikelnummer.wbericht$
   gruppe$ = "Artikelnummer"
   gruppet$ = "Artnr ges"
 END IF 
 IF sort% = 1 THEN 
   INDEX Bezeichnung.wbericht$
   gruppe$ = "Bezeichnung"
   gruppet$ = "Art.Bez ges"
 END IF 
 IF sort% = 2 THEN 
   INDEX QLNamArtnrDatum.wbericht$
   gruppe$ = "QLNamArtnr"
   gruppet$ = "Lief/Artnr ges"
 END IF 
 IF sort% = 3 THEN 
   INDEX QLNamBezDatum.wbericht$
   gruppe$ = "QLNamBez"
   gruppet$ = "Lief/Artbez ges"
 END IF 
 IF sort% = 4 THEN 
   INDEX QPGArtnrDatum.wbericht$
   gruppe$ = "QPGArtnr"
   gruppet$ = "Prod.gr/Artnr ges"
 END IF 
 IF sort% = 5 THEN 
   INDEX QPGBezDatum.wbericht$
   gruppe$ = "QPGBez"
   gruppet$ = "Prod.gr/Artnr ges"
 END IF 
 req% = 0
 SELECT FIRST 
 eu% = 0
 drwaehr$ = ""
  IF eurosupport$ = "TRUE" THEN 
    IF mastform$ <> "EUR" THEN 
      t1$ = "Wenn Sie in unterschiedlichen WÑhrungen erfa·t haben, sollten Sie die öbersicht in EURO ausgeben lassen,"
      t2$ = "da bei der Ausgabe der Belege in der OriginalwÑhrung zwar die einzelnen BetrÑge stimmen, aber keine der errechnten Summen richtig sein wird(z.B. DM+US$=?)!"
      CALL Fehler(t1$,t2$)
      REQUEST "öbersicht in EURO drucken?","",130,req%
    ELSE 
      req% = 1
    END IF 
    IF req% = 1 THEN 
      eu% = 1
      drwaehr$ = " in EUR"
    ELSE 
      eu% = 0
      drwaehr$ = " in allen WÑhrungen"
    END IF 
  END IF 
 title2$ = title2$ + drwaehr$
 REM CALL Fehler("","")
 gruppeneu$ = gruppe$$
 gruppeold$ = ""
 vzeil% = mTop%
 CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
 CALL VWrite(mleft%,vzeil% + 10,mright% - 3,"['Arial' S 9 B C BLACK]" + title2$ + " vom " + DATE$ ( TODAY ,"dd.mm.yyyy"))
 CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 vzeil% = obBottom% + 20
 ueberpos% = vzeil%
 CALL VTransp(0)
 CALL VSetPen(0,0)
 zeilenabstand% = 40
 zeilenoffset% = 40
 i% = 1
 sumgesnet% = 0
 sumgesanz% = 0
 sumgesbrut% = 0
 sumgrnet% = 0
 sumgranz% = 0
 sumgrbrut% = 0
 uebertrnet% = 0
 uebertranz% = 0
 uebertrbrut% = 0
 fstgroup% = 0
 mbottom% = mbottom% - 15
 drwaehr$ = waehrung.wbericht$
 WHILE NOT EOF (wbericht$)
   REM codeku% = codeku.wbericht$
   a% = vzeil%
   czeile% = vzeil%
   cPage% = CALL ("VpeGetCurrentPage",hdoc%)
   cPageold% = cPage%
   ok% = - 1
   
   gruppeneu$ = gruppe$$
   IF listart% = 1 THEN 
     IF gruppeneu$ <> gruppeold$ THEN 
       IF fstgroup% <> 0 AND gruppeold$ <> "nextpage" THEN 
         CALL VAlign(1)
         CALL VPrint(mleft%,a%,"['Arial' S 8 B C BLACK]" + gruppet$)
         IF eu% = 0 THEN 
           drwaehr$ = waehrung.wbericht$
           CALL VWrite(mleft% + 500,a%,890,"['Arial' S 8 B C BLACK]" + STR$ (sumgranz%,",999999999.00"))
           CALL VWrite(mleft% + 1000,a%,1590,"['Arial' S 8 B C BLACK]" + STR$ (sumgrnet%,",999999999.00") + " " + drwaehr$)
           CALL VWrite(mleft% + 1400,a%,1890,"['Arial' S 8 B C BLACK]" + STR$ (sumgrbrut%,",999999999.00") + " " + drwaehr$)
         ELSE 
           CALL VWrite(mleft% + 500,a%,890,"['Arial' S 8 B C BLACK]" + STR$ (sumgranz%,",999999999.00") + " EUR")
           CALL VWrite(mleft% + 1000,a%,1590,"['Arial' S 8 B C BLACK]" + STR$ (sumgrnet%,",999999999.00") + " EUR")
           CALL VWrite(mleft% + 1400,a%,1890,"['Arial' S 8 B C BLACK]" + STR$ (sumgrbrut%,",999999999.00") + " EUR")
         END IF 
         CALL VAlign(0)
         sumgrnet% = 0
         sumgrbrut% = 0
         sumgranz% = 0
         a% = vzeil% + 5
         CALL VLine(mleft% - 7,a%,mright%,a%)
         CALL VLine(mleft% - 7,a% + 2,mright%,a% + 2)
         a% = vzeil% + 10
         czeile% = a%
       END IF 
       IF Artikelnummer <> "" THEN 
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + Artikelnummer.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Artikelnummer.nr.: ")
         REM a% = vzeil%
       END IF 
 
       IF Bezeichnung.wbericht$ <> "" THEN 
         CALL VPrint(mleft% + 610,a%,"['Arial' S 8 B C BLACK]" + "Artikel Bezeichnung: ")
         CALL VWrite(mleft% + 900,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + Bezeichnung.wbericht$)
         a% = vzeil%
       END IF 
 
       IF Produktgruppe.wbericht$ <> "" THEN 
         CALL VWrite(mleft% + 250,a%,900,"['Arial' S 8 B C BLACK]" + Produktgruppe.wbericht$)
         CALL VWrite(mleft%,a%,410,"['Arial' S 8 B C BLACK]" + "Produktgruppe: ")
         REM a% = vzeil%
       END IF 
       IF Bezugsmenge.wbericht$ <> 0 THEN 
         CALL VPrint(mleft% + 610,a%,"['Arial' S 8 B C BLACK]" + "Bezugsmenge: ")
         CALL VWrite(mleft% + 900,a%,1390,"['Arial' S 8 B C BLACK]" + STR$ (Bezugsmenge.wbericht$,",999999999.00"))
         REM a% = vzeil%
       END IF 
       IF ME_.wbericht$ <> "" THEN 
         CALL VWrite(mleft% + 1200,a%,mright% - 3,"['Arial' S 8 B C BLACK]ME:" + ME_.wbericht$)
         a% = vzeil%
       END IF 
         
       REM END IF 
       a% = vzeil%
       abi% = 0
       vzeil% = a%
 
       a% = vzeil% + 10
       CALL VLine(mleft% - 7,a%,mright%,a%)
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       a% = vzeil% + 10
       vzeil% = a%
       IF Kontrollfeld$ <> "j" THEN 
         REM Ausdruck der einzelnen Belege
         CALL VPrint(mleft%,a%,"['Arial' S 8 B C BLACK]" + "Datum")
         CALL VPrint(mleft% + 300,a%,"['Arial' S 8 B C BLACK]" + "Nummer")
         CALL VPrint(mleft% + 570,a%,"['Arial' S 8 B C BLACK]" + "Anzahl")
         CALL VPrint(mleft% + 700,a%,"['Arial' S 8 B C BLACK]" + "Kunde")
         CALL VPrint(mleft% + 1230,a%,"['Arial' S 8 B C BLACK]" + "VK Netto")
         CALL VPrint(mleft% + 1500,a%,"['Arial' S 8 B C BLACK]" + "VK Brutto")
         vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         a% = vzeil% + 10
         CALL VLine(mleft% - 7,a%,mright%,a%)
         vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         a% = vzeil% + 10
         vzeil% = a%
       END IF 
       fstgroup% = 1
     END IF 
     gruppeold$ = gruppeneu$
     vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     a% = vzeil% + 10
     vzeil% = a%
     REM Ausdruck der einzelnen Belege
     IF Kontrollfeld$ <> "j" THEN 
       REM Ausdruck der einzelnen Belege 
       CALL VAlign(0)
       CALL VPrint(mleft%,a%,"['Arial' S 8 B C BLACK]" + DATE$ (datum.wbericht$,"0d.mm.yyyy"))
       CALL VPrint(mleft% + 300,a%,"['Arial' S 8 B C BLACK]" + Nummer.wbericht$)
       CALL VPrint(mleft% + 700,a%,"['Arial' S 8 B C BLACK]" + Nachname.wbericht$)
       CALL VAlign(1)
       IF eu% = 0 THEN 
         drwaehr$ = waehrung.wbericht$
         CALL VWrite(mleft% + 1100,a%,1590,"['Arial' S 8 B C BLACK]" + STR$ (GesNetto.wbericht$,",999999999999.00") + " " + drwaehr$)
         CALL VWrite(mleft% + 500,a%,890,"['Arial' S 8 B C BLACK]" + STR$ (Anzahl.wbericht$,",999999999.00"))
         CALL VWrite(mleft% + 1400,a%,1890,"['Arial' S 8 B C BLACK]" + STR$ (GesBrutto.wbericht$,",999999999999.00") + " " + drwaehr$)
       ELSE 
         
         CALL VWrite(mleft% + 1100,a%,1590,"['Arial' S 8 B C BLACK]" + STR$ (GesNettoEU.wbericht$,",999999999999.00") + " EUR")
         CALL VWrite(mleft% + 500,a%,890,"['Arial' S 8 B C BLACK]" + STR$ (Anzahl.wbericht$,",999999999.00"))
         CALL VWrite(mleft% + 1400,a%,1890,"['Arial' S 8 B C BLACK]" + STR$ (GesBruttoEU.wbericht$,",999999999999.00") + " EUR")
       END IF 
       CALL VAlign(0)
     END IF 
   END IF 
 
 
  
 
   maxbottom% = vzeil%
   a% = vzeil%
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   IF obBottom% < a% THEN obBottom% = a%
   IF obBottom% >= mBottom% THEN 
     REM CALL VBox(mleft% - 7,mTop%,mright%,obBottom%)
     CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
     CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
     CALL VLine(mright%,mtop%,mright%,czeile%)
     CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
     CALL VAlign(1)
     
     IF sumgranz% <> 0 THEN 
       IF eu% = 0 THEN 
         CALL VPrint(mleft%,czeile% + 8,"['Arial' S 8 B C BLACK]" + gruppet$ + " öbertrag")
         CALL VWrite(mleft% + 500,czeile% + 8,890,"['Arial' S 8 B C BLACK]" + STR$ (sumgranz%,",999999999.00"))
         CALL VWrite(mleft% + 1000,czeile% + 8,1590,"['Arial' S 8 B C BLACK]" + STR$ (sumgrnet%,",999999999.00") + " " + drwaehr$)
         CALL VWrite(mleft% + 1400,czeile% + 8,1890,"['Arial' S 8 B C BLACK]" + STR$ (sumgrbrut%,",999999999.00") + " " + drwaehr$)
       ELSE 
         CALL VPrint(mleft%,czeile% + 8,"['Arial' S 8 B C BLACK]" + gruppet$ + " öbertrag")
         CALL VWrite(mleft% + 500,czeile% + 8,890,"['Arial' S 8 B C BLACK]" + STR$ (sumgranz%,",999999999.00") + " EUR")
         CALL VWrite(mleft% + 1000,czeile% + 8,1590,"['Arial' S 8 B C BLACK]" + STR$ (sumgrnet%,",999999999.00") + " EUR")
         CALL VWrite(mleft% + 1400,czeile% + 8,1890,"['Arial' S 8 B C BLACK]" + STR$ (sumgrbrut%,",999999999.00") + " EUR")
       END IF 
     END IF 
     CALL VPrint(mleft%,czeile% + 40,"['Arial' S 9 B C BLACK]" + "öbertrag:")
     IF eu% = 0 THEN 
       CALL VWrite(mleft% + 300,czeile% + 40,890,"['Arial' S 9 B C BLACK]" + STR$ (uebertranz%,",999999999.00"))
       CALL VWrite(mleft% + 1000,czeile% + 40,1590,"['Arial' S 9 B C BLACK]" + STR$ (uebertrnet%,",999999999.00") + " " + drwaehr$)
       CALL VWrite(mleft% + 1400,czeile% + 40,1890,"['Arial' S 9 B C BLACK]" + STR$ (uebertrbrut%,",999999999.00") + " " + drwaehr$)
     ELSE 
       CALL VWrite(mleft% + 300,czeile% + 40,890,"['Arial' S 9 B C BLACK]" + STR$ (uebertranz%,",999999999.00") + " EUR")
       CALL VWrite(mleft% + 1000,czeile% + 40,1590,"['Arial' S 9 B C BLACK]" + STR$ (uebertrnet%,",999999999.00") + " EUR")
       CALL VWrite(mleft% + 1400,czeile% + 40,1890,"['Arial' S 9 B C BLACK]" + STR$ (uebertrbrut%,",999999999.00") + " EUR")
     END IF 
     CALL VAlign(0)
     ab% = CALL ("VpePageBreak",hdoc%)
     vzeil% = ueberpos%
     a% = vzeil%
     gruppeold$ = "nextpage"
   ELSE 
     IF eu% = 0 THEN 
       sumgesnet% = sumgesnet% + GesNetto.wbericht$
       sumgesanz% = sumgesanz% + anzahl.wbericht$
       sumgesbrut% = sumgesbrut% + GesBrutto.wbericht$
       sumgrnet% = sumgrnet% + GesNetto.wbericht$
       sumgranz% = sumgranz% + anzahl.wbericht$
       sumgrbrut% = sumgrbrut% + GesBrutto.wbericht$
       uebertrnet% = uebertrnet% + GesNetto.wbericht$
       uebertranz% = uebertranz% + anzahl.wbericht$
       uebertrbrut% = uebertrbrut% + GesBrutto.wbericht$
     ELSE 
       sumgesnet% = sumgesnet% + GesNettoEU.wbericht$
       sumgesanz% = sumgesanz% + anzahl.wbericht$
       sumgesbrut% = sumgesbrut% + GesBruttoEU.wbericht$
       sumgrnet% = sumgrnet% + GesNettoEU.wbericht$
       sumgranz% = sumgranz% + anzahl.wbericht$
       sumgrbrut% = sumgrbrut% + GesBruttoEU.wbericht$
       uebertrnet% = uebertrnet% + GesNettoEU.wbericht$
       uebertranz% = uebertranz% + anzahl.wbericht$
       uebertrbrut% = uebertrbrut% + GesBruttoEU.wbericht$
     END IF 
     REM w$ = FN alpha(BelegNetto.wbericht$)
     w$ = drwaehr$
     SELECT NEXT 
     i% = i% + 1
     SET STATUS STR$ (i%,"0000000") + " DatensÑtze fÅr Ausdruck vorbereitet!"
     vzeil% = a%
     IF EOF (wbericht$) THEN 
       CALL VPrint(mleft%,a%,"['Arial' S 8 B C BLACK]" + gruppet$)
       CALL VAlign(1)
       IF eu% = 0 THEN 
         REM CALL Fehler ("Jetzt Zahl","")
         CALL VWrite(mleft% + 500,a%,890,"['Arial' S 8 B C BLACK]" + STR$ (sumgranz%,",999999999.00"))
         CALL VWrite(mleft% + 1000,a%,1590,"['Arial' S 8 B C BLACK]" + STR$ (sumgrnet%,",999999999.00") + " " + w$)
         CALL VWrite(mleft% + 1400,a%,1890,"['Arial' S 8 B C BLACK]" + STR$ (sumgrbrut%,",999999999.00") + " " + w$)
       ELSE 
         CALL VWrite(mleft% + 500,a%,890,"['Arial' S 8 B C BLACK]" + STR$ (sumgranz%,",999999999.00") + " EUR")
         CALL VWrite(mleft% + 1000,a%,1590,"['Arial' S 8 B C BLACK]" + STR$ (sumgrnet%,",999999999.00") + " EUR")
         CALL VWrite(mleft% + 1400,a%,1890,"['Arial' S 8 B C BLACK]" + STR$ (sumgrbrut%,",999999999.00") + " EUR")
       END IF 
       CALL VAlign(0)
       a% = vzeil% + 20
       obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       IF obBottom% < a% THEN obBottom% = a%
       CALL VPrint(mleft%,a%,"['Arial' S 9 B C BLACK]" + "Bericht ges:")
       CALL VAlign(1)
       IF eu% = 0 THEN 
         CALL VWrite(mleft% + 300,a%,890,"['Arial' S 9 B C BLACK]" + STR$ (sumgesanz%,",999999999.00"))
         CALL VWrite(mleft% + 1000,a%,1590,"['Arial' S 9 B C BLACK]" + STR$ (sumgesnet%,",999999999.00") + " " + w$)
         CALL VWrite(mleft% + 1400,a%,1890,"['Arial' S 9 B C BLACK]" + STR$ (sumgesbrut%,",999999999.00") + " " + w$)
       ELSE 
         CALL VWrite(mleft% + 300,a%,890,"['Arial' S 9 B C BLACK]" + STR$ (sumgesanz%,",999999999.00") + " EUR")
         CALL VWrite(mleft% + 1000,a%,1590,"['Arial' S 9 B C BLACK]" + STR$ (sumgesnet%,",999999999.00") + " EUR")
         CALL VWrite(mleft% + 1400,a%,1890,"['Arial' S 9 B C BLACK]" + STR$ (sumgesbrut%,",999999999.00") + " EUR")
       END IF 
       CALL VAlign(0)
 
       CALL VLine(mleft% - 7,mtop%,mleft% - 7,obBottom%)
       CALL VLine(mright%,mtop%,mright%,obBottom%)
       CALL VLine(mleft% - 7,obBottom%,mright%,obBottom%)
     END IF 
   END IF 
 WEND 
 REM vzeil% = listende% + 100
 vzeil% = mBottom%
 CALL VPrint(mleft%,vzeil% + 20,"['Arial' S 15 B C BLACK]Ende der Liste")
 cPage% = CALL ("VpeGetCurrentPage",hdoc%)
 
 FOR b% = 1 TO cPage%
   vzeil% = mTop%
   a% = CALL ("VpeGotoPage",hdoc%,b%)
   CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
   CALL VWrite(mleft%,vzeil% + 10,mright% - 3,"['Arial' S 9 B C BLACK]" + title2$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
   CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
 NEXT b%
 a% = CALL ("VpeGotoPage",hdoc%,1)
 MOUSE ON 
 IF scedov% = 1 AND reqbild% <> 1 THEN 
   CALL VPrintDoc()
 ELSE 
   CALL VPrevDoc()
 END IF 
 REM Nach dem Drucken, Drucker auf A4 hoch setzen
 c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,1,9
 REM CLOSE FILE wbericht$
 END SUB 
 
 REM vonmaske%=0 - Artikelmaske, =1 von Adressmaske 
SUB ArtDruckNeu(vonmaske%)
 IF disabled%("öBERSICHTEN") THEN END SUB 
 CALL DFile(3,"MASTER" + _fpw$)
 CALL DFile(3,"SCHEIN" + _fpw$)
 CALL DFile(3,"gruppen" + _fpw$)
 CALL DFile(3,"Artikel" + _fpw$)
 CALL DFile(3,"ARTPROV" + _fpw$)
 CALL DFile(3,"VERTRETE" + _fpw$)
 CALL DFile(3,"KOMBI" + _fpw$)
 CALL DFile(3,"Serienr" + _fpw$)
 opt% = 5
 knr% = 0
 cuku% = 0
 REM 020398
 IF vonmaske% = 2 THEN 
   CREATE DIALOG "ADRLIST",0,0,292,105,"WÑhlen Sie den Ausdruck","MS Sans Serif",8
   ADD DIALOG "ADRLIST",9,4,9,20,21,2
   ADD DIALOG "ADRLIST",5,30,22,238,14,0,"WÑhlen Sie aus, in welcher Form die Artikel gedruckt werden sollen"
   ADD DIALOG "ADRLIST",3,30,35,236,10,0,"Preisliste alle Artikel",9,opt%
   ADD DIALOG "ADRLIST",3,30,46,236,10,0,"Preisliste Artikel einer Produktgruppe",10,opt%
   ADD DIALOG "ADRLIST",3,30,57,236,10,0,"Preisliste Artikel eines Lieferanten",11,opt%
   ADD DIALOG "ADRLIST",1,78,78,51,14,1,"&Weiter",1,1
   ADD DIALOG "ADRLIST",1,130,78,51,14,0,"&Abbruch",0,0
   DIALOG "ADRLIST",reqadr%
   REMOVE DIALOG "ADRLIST"
 ELSE 
  IF vonmaske% = 0 THEN 
   CREATE DIALOG "ADRLIST",0,0,292,235,"WÑhlen Sie den Ausdruck","MS Sans Serif",8
   ADD DIALOG "ADRLIST",9,4,9,20,21,2
   ADD DIALOG "ADRLIST",5,30,22,238,14,0,"WÑhlen Sie aus, in welcher Form die Artikel gedruckt werden sollen"
   REM ADD DIALOG "ADRLIST",3,30,36,91,10,0,"nur der aktuelle Artikel",1,opt%
   REM ADD DIALOG "ADRLIST",3,30,47,96,10,0,"Artikelliste (alle Artikel)",2,opt%
   REM ADD DIALOG "ADRLIST",3,30,58,236,10,0,"Artikelliste (ausgewÑhlte Artikel)",3,opt%
   REM ADD DIALOG "ADRLIST",3,30,69,124,10,0,"Screenshot akt. Artikel",4,opt%
   REM ADD DIALOG "ADRLIST",3,30,102,236,10,0,"UmsÑtze aktueller Artikel",5,opt%
   REM ADD DIALOG "ADRLIST",3,30,113,236,10,0,"UmsÑtze alle Artikel",6,opt%
   REM ADD DIALOG "ADRLIST",3,30,124,236,10,0,"UmsÑtze Artikel einer Produktgruppe",7,opt%
   ADD DIALOG "ADRLIST",3,30,36,236,10,0,"UmsÑtze aktueller Artikel",5,opt%
   ADD DIALOG "ADRLIST",3,30,47,236,10,0,"UmsÑtze alle Artikel",6,opt%
   ADD DIALOG "ADRLIST",3,30,58,236,10,0,"UmsÑtze Artikel einer Produktgruppe",7,opt%
   ADD DIALOG "ADRLIST",3,30,69,236,10,0,"UmsÑtze Artikel eines Lieferanten",8,opt%
 
   ADD DIALOG "ADRLIST",3,30,85,236,10,0,"Preisliste alle Artikel",9,opt%
   ADD DIALOG "ADRLIST",3,30,96,236,10,0,"Preisliste Artikel einer Produktgruppe",10,opt%
   ADD DIALOG "ADRLIST",3,30,107,236,10,0,"Preisliste Artikel eines Lieferanten",11,opt%
 
   ADD DIALOG "ADRLIST",3,30,123,236,10,0,"Inventurliste alle Artikel",12,opt%
   ADD DIALOG "ADRLIST",3,30,134,236,10,0,"Inventurliste Artikel einer Produktgruppe",13,opt%
   ADD DIALOG "ADRLIST",3,30,145,236,10,0,"Inventurliste Artikel eines Lieferanten",14,opt%
   REM ADD DIALOG "ADRLIST",1,78,168,51,14,1,"&Weiter",1,1
   REM ADD DIALOG "ADRLIST",1,130,168,51,14,0,"&Abbruch",0,0
   ADD DIALOG "ADRLIST",2,30,157,255,10,0," nur Artikel mit BestandsfÅhrung fÅr Inventurlisten einbeziehen","j","n",Kontrollfeld$
   ADD DIALOG "ADRLIST",2,30,178,255,10,0," nur ArtikelumsÑtze eines Kunden einbeziehen","j","n",Kontrollkunde$
   ADD DIALOG "ADRLIST",2,30,189,255,10,0," nur Artikel eines Vertriebsmitarbeiters einbeziehen","j","n",KontrollMA$
   ADD DIALOG "ADRLIST",1,78,215,51,14,1,"&Weiter",1,1
   ADD DIALOG "ADRLIST",1,130,215,51,14,0,"&Abbruch",0,0
   DIALOG "ADRLIST",reqadr%
   REMOVE DIALOG "ADRLIST"
  ELSE 
   CREATE DIALOG "ADRLIST",0,0,292,235,"WÑhlen Sie den Ausdruck","MS Sans Serif",8
   ADD DIALOG "ADRLIST",9,4,9,20,21,2
   ADD DIALOG "ADRLIST",5,30,22,238,14,0,"WÑhlen Sie aus, in welcher Form die Artikel gedruckt werden sollen"
   ADD DIALOG "ADRLIST",3,30,47,236,10,0,"UmsÑtze alle Artikel",6,opt%
   ADD DIALOG "ADRLIST",3,30,58,236,10,0,"UmsÑtze Artikel einer Produktgruppe",7,opt%
   ADD DIALOG "ADRLIST",3,30,69,236,10,0,"UmsÑtze Artikel eines Lieferanten",8,opt%
 
   ADD DIALOG "ADRLIST",2,30,189,255,10,0," nur Artikel eines Vertriebsmitarbeiters einbeziehen","j","n",KontrollMA$
   ADD DIALOG "ADRLIST",1,78,215,51,14,1,"&Weiter",1,1
   ADD DIALOG "ADRLIST",1,130,215,51,14,0,"&Abbruch",0,0
   DIALOG "ADRLIST",reqadr%
   REMOVE DIALOG "ADRLIST"
  END IF 
 END IF 
 IF reqadr% = 0 THEN GOTO artdruckneuend
 IF reqadr% <> 0 AND Kontrollkunde$ = "j" THEN 
   cuknr% = codeku.adressen
   adrglob% = 0
   adr% = 0
   knr% = 0
   adr% = ADRSuche%(0)
   IF adr% <> 0 THEN knr% = adr%
 END IF 
 IF vonmaske% = 1 THEN 
   cuknr% = codeku.adressen
   adrglob% = 0
   adr% = 0
   knr% = 0
   adr% = codeku.adressen
   IF adr% <> 0 THEN knr% = adr%
   Kontrollkunde$ = "j"
 END IF 
 IF reqadr% <> 0 AND KontrollMA$ = "j" THEN 
           FILE "vertrete"
           INDEX nachname
           SELECT FIRST 
           a% = 0
           SELECT FIRST 
           REDIM AdrFound$( RECCOUNT ("vertrete"))
           WHILE NOT EOF ("vertrete")
             AdrFound$(a%) = LTRIM$ (nachname) + "," + LTRIM$ (vorname) + SPACE$ (80) + STR$ (codema,"000000")
             a% = a% + 1
             SELECT NEXT 
           WEND 
           cuku% = 0
           AdrFound$(a%) = ""
           LAuswahl$ = AdrFound$(0)
           LAuswahl1$(0) = LAuswahl$
           CREATE DIALOG "ADRSTICHW",0,0,194,202,title$,"MS Sans Serif",8
           ADD DIALOG "ADRSTICHW",7,5,6,183,168,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
           ADD DIALOG "ADRSTICHW",1,33,180,55,16,1,"&OK",1,1
           ADD DIALOG "ADRSTICHW",1,93,180,55,16,0,"&Abbrechen",0,0
           DIALOG "ADRSTICHW",req5%
           MOUSE ON 
           REMOVE DIALOG "ADRSTICHW"
           IF req5% = 1 THEN 
             LAuswahl$ = LAuswahl1$(0)
             cuku% = VAL ( RIGHT$ (LAuswahl$,6))
           END IF 
 END IF 
 REM Umsatz alle Artikel eines Lieferanten
 IF opt% > 11 THEN 
   InvListe$ = "j"
 ELSE 
   InvListe$ = "n"
 END IF 
 IF opt% = 8 THEN 
  CALL ArtUmsSelLief()
 END IF 
 
 REM Preis alle Artikel 
 IF opt% = 9 OR opt% = 12 THEN 
   FILE "Artikel"
   INDEX codear.artikel
   IF RECCOUNT ("ARTIKEL") > 1 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   MOUSE OFF 
   IF invListe$ = "j" THEN 
     eingrenz% = 0
     REQUEST "Inventurliste nur fÅr Artikel mit BestandsfÅhrung erzeugen?","",130,req%
     IF req% = 1 THEN eingrenz% = - 1
   END IF 
   i% = 0
   j% = RECCOUNT ("ARTIKEL")
   IF OPEN ("ARTIKTMP") THEN CLOSE FILE "ARTIKTMP"
   CALL DFile(3,"artiktmp" + _fpw$)
   REMOVE FROM FILE "artiktmp"
  WHILE NOT EOF ("Artikel")
    ok% = 0
    IF invListe$ = "j" THEN 
      IF eingrenz% = - 1 THEN 
        IF BestandsfÅhrung.artikel LIKE "j" THEN ok% = - 1
      ELSE 
        ok% = - 1
      END IF 
    ELSE 
      ok% = - 1
    END IF 
    IF ok% = - 1 THEN 
      FILE "Artiktmp"
      BLANK FILE "Artiktmp"
      Codear.Artiktmp = Codear.artikel
      codegr.Artiktmp = codegr.artikel
      ek.Artiktmp = ek.artikel
      VKNetto.Artiktmp = vknetto.artikel
      Bezeichnung.Artiktmp = Bezeichnung.artikel
      Beschreibung.Artiktmp = Beschreibung.artikel
      vkbrutto.Artiktmp = vkbrutto.artikel
      Handelsspanne.Artiktmp = Handelsspanne.artikel
      MwST.Artiktmp = mwst.artikel
      ME_.Artiktmp = me_.artikel
      artikelnummer.Artiktmp = artikelnummer.artikel
      Bestellnummer.Artiktmp = Bestellnummer.artikel
      Lieferant.Artiktmp = Lieferant.artikel
      bestand.Artiktmp = bestand.artikel
      BestandsfÅhrung.Artiktmp = BestandsfÅhrung.artikel
      Lieferek.Artiktmp = lieferek.artikel
      Inventurpreis.Artiktmp = Inventurpreis.artikel
      notiz.Artiktmp = notiz.artikel
      kostenreparatur.Artiktmp = Kostenreparatur.artikel
      Kostentransport.Artiktmp = kostentransport.artikel
      Kostensonstiges.Artiktmp = kostensonstiges.artikel
      stichwort.Artiktmp = stichwort.artikel
      Bezugsmenge.Artiktmp = Bezugsmenge.artikel
      ZeitproBezugsme.Artiktmp = ZeitproBezugsme.artikel
      Maschine.Artiktmp = Maschine.artikel
      Gewichtseinheit.Artiktmp = Gewichtseinheit.artikel
      GewichtBezugsme.Artiktmp = GewichtBezugsMe.artikel
      Matsorte.Artiktmp = Matsorte.artikel
      Mateinsatz.Artiktmp = Mateinsatz.artikel
      Matstaerke.Artiktmp = Matstaerke.artikel
      MatFarbe.Artiktmp = Matfarbe.artikel
      SollStd100.Artiktmp = SollStd100.artikel
      QuickGRBez.Artiktmp = STR$ (CodeGR.artikel,"000000") + LEFT$ ( TRIM$ (Bezeichnung.artikel),20)
      QuickGRArtnr.Artiktmp = STR$ (CodeGR.artikel,"000000") + LEFT$ ( TRIM$ (Artikelnummer.artikel),20)
      QuickLiefBez.Artiktmp = STR$ (Lieferant.artikel,"000000") + LEFT$ ( TRIM$ (Bezeichnung.artikel),20)
      QuickLiefArtnr.Artiktmp = STR$ (Lieferant.artikel,"000000") + LEFT$ ( TRIM$ (Artikelnummer.artikel),20)
 
      ekEU.Artiktmp = ekEU.artikel
      VKNettoEU.Artiktmp = vknettoEU.artikel
      vkbruttoEU.Artiktmp = vkbruttoEU.artikel
      LieferekEU.Artiktmp = lieferekEU.artikel
      InventurpreisEU.Artiktmp = InventurpreisEU.artikel
      kostrepEU.Artiktmp = KostrepEU.artikel
      KostTransEU.Artiktmp = kosttransEU.artikel
      KostsonstEU.Artiktmp = kostsonstEU.artikel
      codew.Artiktmp = codew.artikel
      umrechnung.Artiktmp = umrechnung.artikel
      waehrung.Artiktmp = waehrung.artikel
      STORE FILE "Artiktmp"
      UNLOCK CURRENT FILE "artiktmp"
      i% = i% + 1
      SET STATUS "Artikel gefunden: " + STR$ (i%,"9999999")
    END IF 
    FILE "Artikel"
    SELECT NEXT FILE "ARTIKEL" INDEX codear.artikel
  WEND 
   SET STATUS ""
   MOUSE ON 
  CALL PreisLiNew("Artiktmp",gruppe$)

 END IF 
 
 REM Preise alle Artikel einer PG
 IF opt% = 10 OR opt% = 13 THEN 
   CALL ArtPreisPG()
 END IF 
 
 REM Preise alle Artikel eines Lieferanten
 IF opt% = 11 OR opt% = 14 THEN 
   CALL ArtPreisLief()
 END IF 
 
 REM Screenshot aktueller Artikel
 IF opt% = 4 THEN 
   CALL PrinterSetup()
   CALL SeiteDrucken()
 END IF 
 
 REM Umsatz aktueller Artikel
 IF opt% = 5 THEN 
   codear% = cuart%
   i% = 0
   CALL ArtUmsOne()
 END IF 
 
 REM Umsatz alle Artikel
 IF opt% = 6 THEN 
   CALL ArtUmsAll()
 END IF 
 
 REM Umsatz ausgewÑhlte Artikel
 IF opt% = 7 THEN 
   CALL ArtUmsSel()
 END IF 
 
 SET STATUS ""
artdruckneuend: 
 END SUB 
 
 
SUB AdrUmsOne()
 IF disabled%("öBERSICHTEN") THEN END SUB 
     knr% = Codeku.adressen
     optli% = 2
     CREATE DIALOG "ZUGART",0,0,134,139,"Umsatz aus","MS Sans Serif",8
     ADD DIALOG "ZUGART",9,6,1,20,21,2
     ADD DIALOG "ZUGART",9,6,1,20,21,2
     ADD DIALOG "ZUGART",4,26,1,84,85,0,"öbersicht fÅr"


     IF NOT MNdisabled%("öBERSICHTOFFANG") THEN 
       ADD DIALOG "ZUGART",3,33,16,60,10,0,"Angebote",1,optli%
     END IF 
     IF NOT MNdisabled%("öBERSICHTOFFRE") THEN 
       ADD DIALOG "ZUGART",3,33,27,60,10,0,"Rechnungen",2,optli%
       ADD DIALOG "ZUGART",3,33,71,60,10,0,"Gutschriften",7,optli%
     END IF 
     ADD DIALOG "ZUGART",3,33,38,60,10,0,"Lieferscheine",3,optli%
     ADD DIALOG "ZUGART",3,33,49,60,10,0,"AuftrÑge",4,optli%
     IF NOT MNdisabled%("öBERSICHTOFFBESTELL") THEN 
       ADD DIALOG "ZUGART",3,33,60,60,10,0,"Bestellungen",5,optli%
     END IF 


     ADD DIALOG "ZUGART",2,28,94,85,10,0,"  nur Summen","j","n",Kontrollfeld$
     ADD DIALOG "ZUGART",1,11,118,55,14,1,"&OK",1,1
     ADD DIALOG "ZUGART",1,67,118,55,14,0,"&Abbrechen",0,0
     DIALOG "ZUGART",reqliart%
     REMOVE DIALOG "ZUGART"
     IF reqliart% = 0 THEN GOTO adrdrumsone
adrdrdatwo1: 
     drucknameonly$ = "j"
     bis$ = DATE$ ( TODAY ,"0d.mm.yyyy")
     CREATE DIALOG "UMSATZ",0,0,233,142,"Umsatz","MS Sans Serif",8
     ADD DIALOG "UMSATZ",4,0,1,233,117,0,""
     ADD DIALOG "UMSATZ",9,6,12,20,21,2
     ADD DIALOG "UMSATZ",5,40,16,166,9,0,"Bitte geben Sie den Zeitraum ein, fÅr den Sie eine"
     ADD DIALOG "UMSATZ",5,40,25,93,10,0,"UmsatzÅbersicht wÅnschen."
     ADD DIALOG "UMSATZ",5,40,38,184,8,0,"Wenn Sie keinen Zeitraum bestimmen, werden sÑmtliche"
     ADD DIALOG "UMSATZ",5,40,48,65,9,0,"UmsÑtze angezeigt."
     ADD DIALOG "UMSATZ",2,40,60,180,16,0,"nur gebuchte Belege anzeigen","j","n",buch$
     ADD DIALOG "UMSATZ",2,40,72,180,16,0,"nur den Firmennamen drucken","j","n",drucknameonly$
     ADD DIALOG "UMSATZ",6,62,97,40,13,0,0,von$,10
     ADD DIALOG "UMSATZ",6,153,97,40,13,0,0,bis$,10
     ADD DIALOG "UMSATZ",5,40,99,18,9,0,"von:"
     ADD DIALOG "UMSATZ",5,133,99,13,9,0,"bis:"
     ADD DIALOG "UMSATZ",1,57,124,55,15,1,"&OK",1,1
     ADD DIALOG "UMSATZ",1,114,124,55,15,0,"&Abbrechen",0,0
     DIALOG "UMSATZ",req%
     REMOVE DIALOG "UMSATZ"
     IF req% = 0 THEN GOTO adrdrumsone
       IF von$ <> "" OR bis$ <> "" THEN 
       IF von$ = "" THEN von$ = "1.1.1980"
       IF von$ <> "" AND bis$ = "" THEN 
         bis$ = von$
       END IF 
       IF DateOK%(von$) <> - 1 THEN GOTO adrdrdatwo1
       IF DateOK%(bis$) <> - 1 THEN GOTO adrdrdatwo1
       kundennr$ = Kundennummer.adressen
       FILE "master"
       INDEX codeku.master
       SELECT WHERE FILE "master"
 
       SELECT FIRST 
       SELECT KEY knr% FILE "master" INDEX codeku.master
       IF OPEN ("umstemp1") THEN CLOSE FILE "UMSTEMP1"
       CALL DFile(3,"umstemp1" + _fpw$)
       REM REMOVE FROM FILE "umstemp1"
       SELECT CASE optli%
          CASE 1
           belegart$ = "Angebot"
         CASE 2
           belegart$ = "Rechnung"
         CASE 3
           belegart$ = "Liefersch"
         CASE 4
           belegart$ = "Auftrag"
         CASE 5
           belegart$ = "Bestellung"
         CASE 7
           belegart$ = "Gutschrift"
       END SELECT 
       WHILE NOT EOF ("master") AND codeku.master = knr%
         ok% = 1
         IF art.master = optli% THEN 
           IF buch$ = "j" THEN 
             IF UCASE$ (StatusM.master) <> "B" THEN 
               ok% = 0
             END IF 
           END IF 
         ELSE 
           ok% = 0
         END IF 
         IF datum.master < DAYS (von$) OR datum.master > DAYS (bis$) THEN 
           ok% = 0
         END IF 
         IF ok% = 1 THEN 
           
           CALL WriteUmsTemp1(knr%,kundennr$,belegart$)
         END IF 
       SELECT NEXT FILE "master" INDEX codeku.master
       WEND 
       REM CALL Fehler("040198","")
       wbericht$ = "umstemp1"
       title2$ = "Umsatzliste selektiert nach letzter Umsatz von : " + von$ + " bis: " + bis$
       wbsort$ = "QNameDatum"
       listart% = 1
       CALL VPEADR1Ums(Wbericht$,FormatPrint$,title2$,wbsort$,listart%,Kontrollfeld$,drucknameonly$)
     ELSE 
       CALL Fehler("Es mu· mindestens ein Datum fÅr - bis - eingegeben werden!","")
     END IF 
adrdrumsone: 
 END SUB 
 
 
 
SUB AdrUmsAll()
 IF disabled%("öBERSICHTEN") THEN END SUB 
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(3,"vertrete" + _fpw$)
 CALL DFile(3,"master" + _fpw$)
 CALL DFile(3,"schein" + _fpw$)
 CALL DFile(3,"artikel" + _fpw$)
     optli% = 2
     CREATE DIALOG "ZUGART",0,0,134,139,"Umsatz aus","MS Sans Serif",8
     ADD DIALOG "ZUGART",9,6,1,20,21,2
     ADD DIALOG "ZUGART",9,6,1,20,21,2
     ADD DIALOG "ZUGART",4,26,1,84,85,0,"öbersicht fÅr"
     IF NOT MNdisabled%("öBERSICHTOFFANG") THEN 
       ADD DIALOG "ZUGART",3,33,16,60,10,0,"Angebote",1,optli%
     END IF 
     IF NOT MNdisabled%("öBERSICHTOFFRE") THEN 
       ADD DIALOG "ZUGART",3,33,27,60,10,0,"Rechnungen",2,optli%
       ADD DIALOG "ZUGART",3,33,71,60,10,0,"Gutschriften",7,optli%
     END IF 
     ADD DIALOG "ZUGART",3,33,38,60,10,0,"Lieferscheine",3,optli%
     ADD DIALOG "ZUGART",3,33,49,60,10,0,"AuftrÑge",4,optli%
     IF NOT MNdisabled%("öBERSICHTOFFBESTELL") THEN 
       ADD DIALOG "ZUGART",3,33,60,60,10,0,"Bestellungen",5,optli%
     END IF 
     ADD DIALOG "ZUGART",2,28,94,85,10,0,"  nur Summen","j","n",Kontrollfeld$
     ADD DIALOG "ZUGART",1,11,118,55,14,1,"&OK",1,1
     ADD DIALOG "ZUGART",1,67,118,55,14,0,"&Abbrechen",0,0
     DIALOG "ZUGART",reqliart%
     REMOVE DIALOG "ZUGART"
     IF reqliart% = 0 THEN GOTO adrdruall
adrdrall: 
     drucknameonly$ = "j"
     IF bis$ = "" THEN bis$ = DATE$ ( TODAY ,"0d.mm.yyyy")
     CREATE DIALOG "UMSATZ",0,0,233,142,"Umsatz","MS Sans Serif",8
     ADD DIALOG "UMSATZ",4,0,1,233,117,0,""
     ADD DIALOG "UMSATZ",9,6,12,20,21,2
     ADD DIALOG "UMSATZ",5,40,16,166,9,0,"Bitte geben Sie den Zeitraum ein, fÅr den Sie eine"
     ADD DIALOG "UMSATZ",5,40,25,93,10,0,"UmsatzÅbersicht wÅnschen."
     ADD DIALOG "UMSATZ",5,40,38,184,8,0,"Wenn Sie keinen Zeitraum bestimmen, werden sÑmtliche"
     ADD DIALOG "UMSATZ",5,40,48,65,9,0,"UmsÑtze angezeigt."
     ADD DIALOG "UMSATZ",2,40,60,180,16,0,"nur gebuchte Belege anzeigen","j","n",buch$
     ADD DIALOG "UMSATZ",2,40,72,180,16,0,"nur den Firmennamen drucken","j","n",drucknameonly$
     ADD DIALOG "UMSATZ",6,62,97,40,13,0,0,von$,10
     ADD DIALOG "UMSATZ",6,153,97,40,13,0,0,bis$,10
     ADD DIALOG "UMSATZ",5,40,99,18,9,0,"von:"
     ADD DIALOG "UMSATZ",5,133,99,13,9,0,"bis:"
     ADD DIALOG "UMSATZ",1,57,124,55,15,1,"&OK",1,1
     ADD DIALOG "UMSATZ",1,114,124,55,15,0,"&Abbrechen",0,0
     DIALOG "UMSATZ",req%
     REMOVE DIALOG "UMSATZ"
     IF req% = 0 THEN GOTO adrdruall
       IF von$ <> "" OR bis$ <> "" THEN 
       IF von$ = "" THEN von$ = "1.1.1980"
       IF von$ <> "" AND bis$ = "" THEN 
         bis$ = von$
       END IF 
       IF DateOK%(von$) <> - 1 THEN GOTO adrdrall
       IF DateOK%(bis$) <> - 1 THEN GOTO adrdrall
       kundennr$ = Kundennummer.adressen
       FILE "master"
       INDEX codeku.master
       SELECT WHERE FILE "master"
       SELECT FIRST 
       IF OPEN ("umstemp1") THEN CLOSE FILE "umstemp1"
       CALL DFile(3,"umstemp1" + _fpw$)
       SELECT CASE optli%
         CASE 1
           belegart$ = "Angebote"
         CASE 2
           belegart$ = "Rechnungen"
         CASE 3
           belegart$ = "Lieferscheine"
         CASE 4
           belegart$ = "AuftrÑge"
         CASE 5
           belegart$ = "Bestellungen"
         CASE 7
           belegart$ = "Gutschriften"
       END SELECT 
       SET STATUS "Datei durchsuchen nach DatensÑtzen"
       i% = 0
       WHILE NOT EOF ("master")
         ok% = 1
         IF art.master = optli% AND codeku.master > 0 THEN 
           IF buch$ = "j" THEN 
             IF UCASE$ (StatusM.master) <> "B" THEN 
               ok% = 0
             END IF 
           END IF 
         ELSE 
           ok% = 0
         END IF 
         IF datum.master < DAYS (von$) OR datum.master > DAYS (bis$) THEN 
           ok% = 0
         END IF 
         IF ok% = 1 THEN 
           knr% = codeku.master
           kundennr$ = Kundennummer.master
           i% = i% + 1
           SET STATUS STR$ (i%,"999999") + " DatensÑtze gefunden!"
           CALL WriteUmsTemp1(knr%,kundennr$,belegart$)
         END IF 
       SELECT NEXT FILE "master" INDEX codeku.master
       WEND 
       SET STATUS ""
       REM CALL Fehler("040198","")
       wbericht$ = "umstemp1"
       title2$ = UCASE$ (belegart$) + " Umsatzliste alle Adressen, selektiert nach letzter Umsatz von : " + von$ + " bis: " + bis$
       IF buch$ = "j" THEN 
         title2$ = title2$ + " (nur gebuchte Belege)"
       ELSE 
         title2$ = title2$ + " (gebuchte und ungebuchte Belege)"
       END IF 
       wbsort$ = "QNameDatum"
       listart% = 1
       REM 240298
       CALL VPEADR1Ums(Wbericht$,FormatPrint$,title2$,wbsort$,listart%,Kontrollfeld$,drucknameonly$)
     ELSE 
       CALL Fehler("Es mu· mindestens ein Datum fÅr - bis - eingegeben werden!","")
     END IF 
adrdruall: 
 END SUB 
 
SUB AdrUmsSel()
      cfilt$ = WHERE 
     opt1% = 2
     stichw$ = "n"
     stichwort$ = ""
     option2% = 1
     CREATE DIALOG "ADRFilter",0,0,290,211,title$,"MS Sans Serif",8
     ADD DIALOG "ADRFilter",4,5,0,280,124,0," Suche nach "
     ADD DIALOG "ADRFilter",6,169,30,112,13,128,0,suna$,50
     ADD DIALOG "ADRFilter",6,169,46,112,13,128,0,suna1$,50
     ADD DIALOG "ADRFilter",3,14,11,72,11,0,"Kundennummer",6,opt1%
     ADD DIALOG "ADRFilter",3,14,25,34,11,0,"Anrede",1,opt1%
     ADD DIALOG "ADRFilter",3,14,38,68,11,0,"Nachname/Firma",2,opt1%
     ADD DIALOG "ADRFilter",3,14,52,22,10,0,"Ort",3,opt1%
     ADD DIALOG "ADRFilter",3,14,67,28,11,0,"PLZ",4,opt1%
     ADD DIALOG "ADRFilter",3,14,81,79,11,0,"Stra·e",5,opt1%
     ADD DIALOG "ADRFilter",5,169,16,111,12,0,"Bitte den Suchbegriff eingeben"
     ADD DIALOG "ADRFilter",5,150,32,14,11,0,"von"
     ADD DIALOG "ADRFilter",5,150,46,12,11,0,"bis"
     REM ADD DIALOG "ADRFilter",2,169,60,85,11,0,"Alle Angaben drucken","j","n",KurzLang$
     REM ADD DIALOG "ADRFilter",2,169,75,85,11,0,"Termine mitdrucken","j","n",Terminejn$
     ADD DIALOG "ADRFilter",2,14,108,84,11,0,"Stichwort einbeziehen","j","n",stichw$
     IF _projekt$ LIKE "FACTURA" THEN 
       ADD DIALOG "ADRFilter",2,105,108,105,11,0,"Adressen eines Vertreters","j","n",mitarb$
     END IF 
     ADD DIALOG "ADRFilter",4,5,125,279,60,0,"Ausgabeziel"
     ADD DIALOG "ADRFilter",3,14,139,124,11,0,"Ausgabe auf Drucker/Fenster",1,Option2%
     ADD DIALOG "ADRFilter",3,14,152,155,11,0,"Ausgabe in dBASE - Datei fÅr Serienbriefe",2,Option2%
     ADD DIALOG "ADRFilter",3,14,165,148,11,0,"Ausgabe in EXCEL - Datei",3,Option2%
     ADD DIALOG "ADRFilter",1,90,194,49,14,1,"&Weiter",1,1
     ADD DIALOG "ADRFilter",1,142,194,49,14,0,"&Abbruch",0,0
     DIALOG "ADRFilter",req%
     REMOVE DIALOG ALL 
     IF req% = 0 THEN GOTO adrdr140996
     IF req% = 1 THEN 
       IF mitarb$ = "j" THEN 
 
         IF _projekt$ LIKE "FACTURA" THEN 
           FILE "vertrete"
           INDEX nachname
           SELECT FIRST 
           a% = 0
           SELECT FIRST 
           REDIM AdrFound$( RECCOUNT ("vertrete"))
           WHILE NOT EOF ("vertrete")
             AdrFound$(a%) = LTRIM$ (nachname) + "," + LTRIM$ (vorname) + SPACE$ (80) + STR$ (codema,"000000")
             a% = a% + 1
             SELECT NEXT 
           WEND 
           AdrFound$(a%) = ""
           LAuswahl$ = AdrFound$(0)
           LAuswahl1$(0) = LAuswahl$
           CREATE DIALOG "ADRSTICHW",0,0,194,202,title$,"MS Sans Serif",8
           ADD DIALOG "ADRSTICHW",7,5,6,183,168,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
           ADD DIALOG "ADRSTICHW",1,33,180,55,16,1,"&OK",1,1
           ADD DIALOG "ADRSTICHW",1,93,180,55,16,0,"&Abbrechen",0,0
           DIALOG "ADRSTICHW",req5%
           MOUSE ON 
           REMOVE DIALOG "ADRSTICHW"
           IF req5% = 1 THEN 
             LAuswahl$ = LAuswahl1$(0)
             scodema% = VAL ( RIGHT$ (LAuswahl$,6))
             SELECT FIRST 
             SELECT KEY scodema% FILE "vertrete" INDEX codema.vertrete
             smaname$ = nachname.vertrete + ", " + vorname.vertrete
           ELSE 
             mitarb$ = "n"
             GOTO adrdr140996
           END IF 
         END IF 
       END IF 
       FILE "adressen"
       IF stichw$ = "j" THEN 
         CALL DFile(2,"OFFICE\keywords" + _fpw$)
         FILE "keywords"
         INDEX keyword
         SELECT FIRST 
         a% = 0
         SELECT WHERE keyword <> ""
         SELECT FIRST 
         REDIM AdrFound$( RECCOUNT ("keywords"))
         WHILE NOT EOF ("keywords")
           AdrFound$(a%) = LTRIM$ (keyword)
           a% = a% + 1
           SELECT NEXT 
         WEND 
         AdrFound$(a%) = ""
         LAuswahl$ = AdrFound$(0)
         LAuswahl1$(0) = LAuswahl$
         CREATE DIALOG "ADRSTICHW",0,0,194,202,title$,"MS Sans Serif",8
         ADD DIALOG "ADRSTICHW",7,5,6,183,168,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRSTICHW",1,33,180,55,16,1,"&OK",1,1
         ADD DIALOG "ADRSTICHW",1,93,180,55,16,0,"&Abbrechen",0,0
         DIALOG "ADRSTICHW",req5%
         MOUSE ON 
         REMOVE DIALOG "ADRSTICHW"
         IF req5% = 1 THEN 
           LAuswahl$ = LAuswahl1$(0)
           stichwort$ = "*" + LEFT$ (LAuswahl$) + "*"
         ELSE 
           stichw$ = "n"
           GOTO adrdr140996
         END IF 
         FILE "adressen"
       END IF 
       SELECT CASE opt1%
       CASE 1
         feld$ = "Anrede.adressen"
         IF suna1$ = "" THEN 
           REM suna$ = suna$ + "*"
           suna$ = UCASE$ (suna$)
           suna1$ = suna$
         ELSE 
           IF suna$ <> "" THEN 
             suna$ = UCASE$ (suna$)
             suna1$ = UCASE$ (suna1$)
           ELSE 
             suna$ = UCASE$ (suna1$)
             suna1$ = suna$
           END IF 
         END IF 
       CASE 2
         feld$ = "nachname.adressen"
         IF suna1$ = "" THEN 
           suna$ = UCASE$ (suna$)
           suna1$ = suna$
         ELSE 
           IF suna$ <> "" THEN 
             suna$ = UCASE$ (suna$)
             suna1$ = UCASE$ (suna1$)
           ELSE 
             suna$ = UCASE$ (suna1$)
             suna1$ = suna$
           END IF 
         END IF 
       CASE 3
         feld$ = "Ort.adressen"
         IF suna1$ = "" THEN 
           suna$ = UCASE$ (suna$)
           suna1$ = suna$
         ELSE 
           IF suna$ <> "" THEN 
             suna$ = UCASE$ (suna$)
             suna1$ = UCASE$ (suna1$)
           ELSE 
             suna$ = UCASE$ (suna1$)
             suna1$ = suna$
           END IF 
         END IF 
       CASE 4
         feld$ = "PLZ.adressen"
         IF suna1$ = "" THEN 
           suna$ = UCASE$ (suna$)
           suna1$ = suna$
         ELSE 
           IF suna$ <> "" THEN 
             suna$ = UCASE$ (suna$)
             suna1$ = UCASE$ (suna1$)
           ELSE 
             suna$ = UCASE$ (suna1$)
             suna1$ = suna$
           END IF 
         END IF 
       CASE 5
         feld$ = "Stra·e.adressen"
         IF suna1$ = "" THEN 
           suna$ = UCASE$ (suna$)
           suna1$ = suna$
         ELSE 
           IF suna$ <> "" THEN 
             suna$ = UCASE$ (suna$)
             suna1$ = UCASE$ (suna1$)
           ELSE 
             suna$ = UCASE$ (suna1$)
             suna1$ = suna$
           END IF 
         END IF 
       CASE 6
         feld$ = "Kundennummer.adressen"
         IF suna1$ = "" THEN 
           suna$ = UCASE$ (suna$)
           suna1$ = suna$
         ELSE 
           IF suna$ <> "" THEN 
             suna$ = UCASE$ (suna$)
             suna1$ = UCASE$ (suna1$)
           ELSE 
             suna$ = UCASE$ (suna1$)
             suna1$ = suna$
           END IF 
         END IF 
       CASE 7
         REM feld$="Telefon/Faxnummer"
       END SELECT 
       
       x% = ASC ( LEFT$ ( UCASE$ (suna$),1))
       SELECT CASE x%
         CASE 142
           sun$ = "A" + RIGHT$ (suna$, LEN (suna$) - 1)
           suna$ = sun$
         CASE 153
           sun$ = "O" + RIGHT$ (suna$, LEN (suna$) - 1)
           suna$ = sun$
         CASE 154
           sun$ = "U" + RIGHT$ (suna$, LEN (suna$) - 1)
           suna$ = sun$
       END SELECT 
 
       MOUSE OFF 
       SET STATUS "Bitte warten Adressdatei wird vorbereitet!"
       SELECT WHERE FILE "adressen"
       REM IF suna$ = "*" THEN suna$ = "**"
       stichwort$ = "*" + stichwort$ + "*"
       IF stichw$ = "j" THEN 
         IF opt1% = 1 THEN title2$ = "Umsatzliste selektiert nach Anrede von : " + suna$ + " bis: " + suna1$ + " und Stichwort: *" + stichwort$
         IF opt1% = 2 THEN title2$ = "Umsatzliste selektiert nach Nachname von: " + suna$ + " bis: " + suna1$ + " und Stichwort: *" + stichwort$
         IF opt1% = 3 THEN title2$ = "Umsatzliste selektiert nach Ort von: " + suna$ + " bis: " + suna1$ + " und Stichwort: *" + stichwort$
         IF opt1% = 4 THEN title2$ = "Umsatzliste selektiert nach PLZ von: " + suna$ + " bis: " + suna1$ + " und Stichwort: *" + stichwort$
         IF opt1% = 5 THEN title2$ = "Umsatzliste selektiert nach Stra·e von: " + suna$ + " bis: " + suna1$ + " und Stichwort: *" + stichwort$
         IF opt1% = 6 THEN title2$ = "Umsatzliste selektiert nach Kundennummer von: " + suna$ + " bis: " + suna1$ + " und Stichwort: *" + stichwort$
         IF suna$ = "" AND stichw$ = "j" THEN title2$ = "Umsatzliste selektiert nach Stichwort: *" + stichwort$
       ELSE 
         IF opt1% = 1 THEN title2$ = "Umsatzliste selektiert nach Anrede von: " + suna$ + " bis: " + suna1$
         IF opt1% = 2 THEN title2$ = "Umsatzliste selektiert nach Nachname von: " + suna$ + " bis: " + suna1$
         IF opt1% = 3 THEN title2$ = "Umsatzliste selektiert nach Ort von: " + suna$ + " bis: " + suna1$
         IF opt1% = 4 THEN title2$ = "Umsatzliste selektiert nach PLZ von: " + suna$ + " bis: " + suna1$
         IF opt1% = 6 THEN title2$ = "Umsatzliste selektiert nach Stra·e von: " + suna$ + " bis: " + suna1$
         IF opt1% = 6 THEN title2$ = "Umsatzliste selektiert nach Kundennummer von: " + suna$ + " bis: " + suna1$
         IF suna$ = "" AND stichw$ <> "j" THEN title2$ = "Umsatzliste alle Adressen"
       END IF 
       x% = ASC ( LEFT$ (suna$,1))
       b1$ = "select where "
       IF mitarb$ = "j" THEN 
         title2$ = title2$ + " fÅr Mitarbeiter: " + smaname$
         IF stichw$ = "j" OR suna$ <> "" THEN 
           b1$ = "select where codema.adressen=scodema% AND "
         ELSE 
           beding$ = "select where codema.adressen=scodema%"
         END IF 
       END IF 
       IF stichw$ = "j" AND suna$ <> "" THEN 
         beding$ = b1$ + "LEFT$(UCASE$(feld$$),LEN(suna$)) >= suna$ and LEFT$(UCASE$(feld$$),LEN(suna$)) <= suna1$ AND Stichwort.adressen LIKE Stichwort$"
         SELECT CASE x%
           CASE 142,65
             beding$ = b1$ + "( LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna$)) <= suna1$ AND Stichwort.adressen LIKE Stichwort$) OR ASC ( LEFT$ ( UCASE$ (feld$$), LEN (suna$))) = 142"
           CASE 153,79
             beding$ = b1$ + "( LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna$)) <= suna1$ AND Stichwort.adressen LIKE Stichwort$) OR ASC ( LEFT$ ( UCASE$ (feld$$), LEN (suna$))) = 153"
           CASE 154,85
             beding$ = b1$ + "( LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna$)) <= suna1$ AND Stichwort.adressen LIKE Stichwort$) OR ASC ( LEFT$ ( UCASE$ (feld$$), LEN (suna$))) = 154"
           CASE 225
             beding$ = b1$ + "( LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna$)) <= suna1$ AND Stichwort.adressen LIKE Stichwort$) OR ASC ( LEFT$ ( UCASE$ (feld$$), LEN (suna$))) = 225"
         END SELECT 
       ELSE 
       END IF 
       IF stichw$ <> "j" AND suna$ <> "" THEN 
         beding$ = b1$ + "LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna1$)) <= suna1$"
         SELECT CASE x%
           CASE 142,65
             beding$ = b1$ + "( LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna$)) <= suna1$) OR ASC ( LEFT$ ( UCASE$ (feld$$), LEN (suna$))) = 142"
           CASE 153,79
             beding$ = b1$ + "( LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna$)) <= suna1$) OR ASC ( LEFT$ ( UCASE$ (feld$$), LEN (suna$))) = 153"
           CASE 154,85
             beding$ = b1$ + "( LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna$)) <= suna1$) OR ASC ( LEFT$ ( UCASE$ (feld$$), LEN (suna$))) = 154"
           CASE 225
             beding$ = b1$ + "( LEFT$ ( UCASE$ (feld$$), LEN (suna$)) >= suna$ AND LEFT$ ( UCASE$ (feld$$), LEN (suna$)) <= suna1$) OR ASC ( LEFT$ ( UCASE$ (feld$$), LEN (suna$))) = 225"
         END SELECT 
       ELSE 
       END IF 
       IF stichw$ = "j" AND suna$ = "" THEN 
         beding$ = b1$ + "stichwort.adressen LIKE Stichwort$"
       END IF 
       IF stichw$ <> "j" AND suna$ = "" AND mitarb$ <> "j" THEN beding$ = "select where"
       EXECUTE beding$
       SELECT FIRST 
       optli% = 2
       CREATE DIALOG "ZUGART",0,0,134,139,"Umsatz aus","MS Sans Serif",8
       ADD DIALOG "ZUGART",9,6,1,20,21,2
       ADD DIALOG "ZUGART",9,6,1,20,21,2
       ADD DIALOG "ZUGART",4,26,1,84,85,0,"öbersicht fÅr"

       IF NOT MNdisabled%("öBERSICHTOFFANG") THEN 
         ADD DIALOG "ZUGART",3,33,16,60,10,0,"Angebote",1,optli%
       END IF 
       IF NOT MNdisabled%("öBERSICHTOFFRE") THEN 
         ADD DIALOG "ZUGART",3,33,27,60,10,0,"Rechnungen",2,optli%
         ADD DIALOG "ZUGART",3,33,71,60,10,0,"Gutschriften",7,optli%
       END IF 
       ADD DIALOG "ZUGART",3,33,38,60,10,0,"Lieferscheine",3,optli%
       ADD DIALOG "ZUGART",3,33,49,60,10,0,"AuftrÑge",4,optli%
       IF NOT MNdisabled%("öBERSICHTOFFBESTELL") THEN 
         ADD DIALOG "ZUGART",3,33,60,60,10,0,"Bestellungen",5,optli%
       END IF 


       ADD DIALOG "ZUGART",2,28,94,85,10,0,"  nur Summen","j","n",Kontrollfeld$
       ADD DIALOG "ZUGART",1,11,118,55,14,1,"&OK",1,1
       ADD DIALOG "ZUGART",1,67,118,55,14,0,"&Abbrechen",0,0
       DIALOG "ZUGART",reqliart%
       REMOVE DIALOG "ZUGART"
       IF reqliart% = 0 THEN GOTO adrdr140996 
adrdrdatw3: 
       drucknameonly$ = "j"
       CREATE DIALOG "UMSATZ",0,0,233,142,"Umsatz","MS Sans Serif",8
       ADD DIALOG "UMSATZ",4,0,1,233,117,0,""
       ADD DIALOG "UMSATZ",9,6,12,20,21,2
       ADD DIALOG "UMSATZ",5,40,16,166,9,0,"Bitte geben Sie den Zeitraum ein, fÅr den Sie eine"
       ADD DIALOG "UMSATZ",5,40,25,93,10,0,"UmsatzÅbersicht wÅnschen."
       ADD DIALOG "UMSATZ",5,40,38,184,8,0,"Wenn Sie keinen Zeitraum bestimmen, werden sÑmtliche"
       ADD DIALOG "UMSATZ",5,40,48,65,9,0,"UmsÑtze angezeigt."
       ADD DIALOG "UMSATZ",2,40,60,180,16,0,"nur gebuchte Belege anzeigen","j","n",buch$
       ADD DIALOG "UMSATZ",2,40,72,180,16,0,"nur den Firmennamen drucken","j","n",drucknameonly$
       ADD DIALOG "UMSATZ",6,62,97,40,13,0,0,von$,10
       ADD DIALOG "UMSATZ",6,153,97,40,13,0,0,bis$,10
       ADD DIALOG "UMSATZ",5,40,99,18,9,0,"von:"
       ADD DIALOG "UMSATZ",5,133,99,13,9,0,"bis:"
       ADD DIALOG "UMSATZ",1,57,124,55,15,1,"&OK",1,1
       ADD DIALOG "UMSATZ",1,114,124,55,15,0,"&Abbrechen",0,0
       DIALOG "UMSATZ",req%
       REMOVE DIALOG "UMSATZ"
       IF req% = 0 THEN GOTO adrdr140996 
       IF bis$ = "" THEN bis$ = TODAY 
       IF von$ <> "" OR bis$ <> "" THEN 
       IF von$ = "" THEN von$ = "1.1.1980"
       IF von$ <> "" AND bis$ = "" THEN 
         bis$ = von$
       END IF 
       IF DateOK%(von$) <> - 1 THEN GOTO adrdrdatw1
       IF DateOK%(bis$) <> - 1 THEN GOTO adrdrdatw1
       kundennr$ = Kundennummer.adressen
       FILE "master"
       INDEX codeku.master
       SELECT WHERE FILE "master"
 
       SELECT FIRST 
       IF OPEN ("umstemp1") THEN CLOSE FILE "umstemp1"
       CALL DFile(3,"umstemp1" + _fpw$)
       REM REMOVE FROM FILE "umstemp1"
       SELECT CASE optli%
          CASE 1
           belegart$ = "Angebot"
         CASE 2
           belegart$ = "Rechnung"
         CASE 3
           belegart$ = "Liefersch"
         CASE 4
           belegart$ = "Auftrag"
         CASE 5
           belegart$ = "Bestellung"
         CASE 7
           belegart$ = "Gutschrift"
       END SELECT 
       WHILE NOT EOF ("Adressen")
         knr% = codeku.adressen
         kundenr$ = Kundennummer.adressen
         FILE "master"
         SELECT FIRST 
         SELECT KEY knr% FILE "master" INDEX codeku.master
         WHILE NOT EOF ("master") AND codeku.master = knr%
           ok% = 1
           IF art.master = optli% THEN 
             IF buch$ = "j" THEN 
               IF UCASE$ (StatusM.master) <> "B" THEN 
                 ok% = 0
               END IF 
             END IF 
           ELSE 
             ok% = 0
           END IF 
           IF datum.master < DAYS (von$) OR datum.master > DAYS (bis$) THEN 
             ok% = 0
           END IF 
           IF ok% = 1 THEN 
             knr% = codeku.master
             kundennr$ = Kundennummer.master
             CALL WriteUmsTemp1(knr%,kundennr$,belegart$)
           END IF 
         SELECT NEXT FILE "master" INDEX codeku.master
         WEND 
         FILE "Adressen"
         SELECT NEXT 
       WEND 
       REM CALL Fehler("040198","")
       wbericht$ = "umstemp1"
       REM title2$ = "Umsatzliste selektiert nach letzter Umsatz von : " + von$ + " bis: " + bis$
       wbsort$ = "QNameDatum"
       listart% = 1
       CALL VPEADR1Ums(Wbericht$,FormatPrint$,title2$,wbsort$,listart%,Kontrollfeld$,drucknameonly$)
     ELSE 
       CALL Fehler("Es mu· mindestens ein Datum fÅr - bis - eingegeben werden!","")
     END IF 
   END IF 
adrdr140996: 
 END SUB 
 
SUB ArtUmsOne()
  codear% = codear.artikel
  CALL DFile(3,"SCHEIN" + _fpw$)
  CALL Umsopt()
   cuart% = codear%
   SELECT KEY cuart% FILE "Artikel" INDEX codear.artikel
   FILE "schein"
   INDEX codear.schein
   SELECT FIRST 
   SELECT KEY cuart% FILE "schein" INDEX codear.schein
   WHILE NOT EOF ("schein") AND codear.schein = cuart%
     ok% = 1
     codems% = codems.schein
     SELECT KEY codems% FILE "master" INDEX codems.master
     codeku% = codeku.master
     IF art.master = optli% THEN 
       IF buch$ = "j" THEN 
         IF UCASE$ (StatusM.master) <> "B" THEN 
           ok% = 0
         END IF 
       END IF 
       IF knr% <> 0 AND codeku.master <> knr% THEN ok% = 0
       IF cuku% <> 0 THEN 
         SELECT KEY codeku.master FILE "Adressen" INDEX codeku.adressen
         IF codeku.adressen = codeku.master THEN 
           IF codema.adressen <> cuku% THEN ok% = 0
         ELSE 
           ok% = 0
         END IF 
       END IF 

     ELSE 
       ok% = 0
     END IF 
     IF datum.master < DAYS (vondat$) OR datum.master > DAYS (bisdat$) THEN 
       ok% = 0
     END IF 
     IF ok% = 1 THEN 
       REM öbernahme Datensatz in umstemp1
       i% = i% + 1
       SET STATUS "Verarbeitete DatensÑtze: " + STR$ (i%,",999999999")
       CALL WriteUmsArt(codeku%,codear%,belegart$)
     END IF 
   FILE "schein"
   SELECT NEXT FILE "schein" INDEX codear.schein
   WEND 
   wbericht$ = "umstemp1"
   listart% = 1
   IF i% > 0 THEN 
     REM CALL Fehler("","")
     CALL VPEART1Ums(Wbericht$,FormatPrint$,title2$,sort%,listart%,Kontrollfeld$)
   ELSE 
     CALL Fehler("Es wurden keine DatensÑtze fÅr die Auswertung gefunden!","")
   END IF 
 END SUB 
 
SUB Umsopt()
   von$ = ""
   bis$ = ""
   buch$ = "n"
   sort% = 1
   optli% = 2
   CREATE DIALOG "ZUGART",0,0,134,139,"Umsatz aus","MS Sans Serif",8
   ADD DIALOG "ZUGART",9,6,1,20,21,2
   ADD DIALOG "ZUGART",9,6,1,20,21,2
   ADD DIALOG "ZUGART",4,26,1,84,85,0,"öbersicht fÅr"

     IF NOT MNdisabled%("öBERSICHTOFFANG") THEN 
       ADD DIALOG "ZUGART",3,33,16,60,10,0,"Angebote",1,optli%
     END IF 
     IF NOT MNdisabled%("öBERSICHTOFFRE") THEN 
       ADD DIALOG "ZUGART",3,33,27,60,10,0,"Rechnungen",2,optli%
       ADD DIALOG "ZUGART",3,33,71,60,10,0,"Gutschriften",7,optli%
     END IF 
     ADD DIALOG "ZUGART",3,33,38,60,10,0,"Lieferscheine",3,optli%
     ADD DIALOG "ZUGART",3,33,49,60,10,0,"AuftrÑge",4,optli%
     IF NOT MNdisabled%("öBERSICHTOFFBESTELL") THEN 
       ADD DIALOG "ZUGART",3,33,60,60,10,0,"Bestellungen",5,optli%
     END IF 

   ADD DIALOG "ZUGART",2,28,94,85,10,0,"  nur Summen","j","n",Kontrollfeld$
   ADD DIALOG "ZUGART",1,11,118,55,14,1,"&OK",1,1
   ADD DIALOG "ZUGART",1,67,118,55,14,0,"&Abbrechen",0,0
   DIALOG "ZUGART",reqliart%
   REMOVE DIALOG "ZUGART"
   IF reqliart% = 0 THEN 
     w220398% = 0
     _cugrp% = 0
     cuku% = 0
     GOTO artdruckneuend
   END IF 
   SELECT CASE optli%
     CASE 1
       belegart$ = "Angebote"
     CASE 2
       belegart$ = "Rechnungen"
     CASE 3
       belegart$ = "Lieferscheine"
     CASE 4
       belegart$ = "AuftrÑge"
     CASE 5
       belegart$ = "Bestellungen"
     CASE 7
       belegart$ = "Gutschriften"
   END SELECT 
   bis$ = DATE$ ( TODAY ,"0d.mm.yyyy")
   CREATE DIALOG "UMSATZ",0,0,233,220,title$,"MS Sans Serif",8
   ADD DIALOG "UMSATZ",4,0,0,233,167,0,""
   ADD DIALOG "UMSATZ",9,6,12,20,21,2
   ADD DIALOG "UMSATZ",5,40,16,166,9,0,"Bitte geben Sie den Zeitraum ein, fÅr den Sie eine"
   ADD DIALOG "UMSATZ",5,40,25,93,10,0,"UmsatzÅbersicht wÅnschen."
   ADD DIALOG "UMSATZ",5,40,38,184,8,0,"Wenn Sie keinen Zeitraum bestimmen, werden sÑmtliche"
   ADD DIALOG "UMSATZ",5,40,48,65,9,0,"UmsÑtze angezeigt."
   ADD DIALOG "UMSATZ",2,40,59,180,16,0,"nur gebuchte Belege anzeigen","j","n",buch$
   ADD DIALOG "UMSATZ",3,40,74,151,13,0,"Sortierung nach Artikelnummer",0,sort%
   ADD DIALOG "UMSATZ",3,40,89,150,12,0,"Sortierung nach Artikelbezeichnung",1,sort%
   ADD DIALOG "UMSATZ",3,40,104,150,12,0,"Sortierung nach Lieferant/Artikelnummer",2,sort%
   ADD DIALOG "UMSATZ",3,40,119,170,13,0,"Sortierung nach Lieferant/Artikelbezeichnung",3,sort%
   ADD DIALOG "UMSATZ",3,40,134,180,12,0,"Sortierung nach Produktgruppe/Artikelnummer",4,sort%
   ADD DIALOG "UMSATZ",3,40,149,180,12,0,"Sortierung nach Produktgruppe/Artikelbezeichnung",5,sort%
   ADD DIALOG "UMSATZ",6,62,178,40,13,0,0,von$,10
   ADD DIALOG "UMSATZ",6,153,178,40,13,0,0,bis$,10
   ADD DIALOG "UMSATZ",5,40,178,18,9,0,"von:"
   ADD DIALOG "UMSATZ",5,133,178,13,9,0,"bis:"
   ADD DIALOG "UMSATZ",1,56,200,55,15,1,"&OK",1,1
   ADD DIALOG "UMSATZ",1,113,200,55,15,0,"&Abbrechen",0,0
   DIALOG "UMSATZ",req%
   REMOVE DIALOG "UMSATZ"
   IF req% <> 1 THEN 
     w220398% = 0
     GOTO artdruckneuend
   END IF 
   w220398% = 1
 END IF 
 IF OPEN ("umstemp1") THEN 
   CLOSE FILE "umstemp1"
 END IF 
 CALL DFile(3,"umstemp1" + _fpw$)
 REM IF RECCOUNT ("UMSTEMP1") > 0 THEN REMOVE FROM FILE "umstemp1"
 CALL DFile(3,"SCHEIN" + _fpw$)
 CALL DFile(3,"LIEFRUCK" + _fpw$)
 FILE "schein"
 INDEX codear.schein
 SELECT FIRST 
 IF DateOK%(von$) OR von$ = "" THEN 
   IF DateOK%(bis$) OR bis$ = "" THEN 
     MOUSE OFF 
     CALL DFile(2,"OFFICE\telefon" + _fpw$)
     CALL DFile(3,"ARTPROV" + _fpw$)
     CALL DFile(3,"VERTRETE" + _fpw$)
     CALL DFile(3,"master" + _fpw$)
     IF von$ = "" THEN vondat$ = "1.1.1980" ELSE vondat$ = von$
     IF bis$ = "" THEN bisdat$ = DATE$ ( TODAY ) ELSE bisdat$ = bis$
     Ueberschrift$ = "Artikelumsatzliste Zeitraum:"
     IF von$ = "" AND bis$ <> "" THEN Ueberschrift$ = Ueberschrift$ + " bis " + bis$
     IF von$ <> "" AND bis$ = "" THEN Ueberschrift$ = Ueberschrift$ + " ab " + von$ + "bis " + bis$
     IF von$ <> "" AND bis$ <> "" THEN Ueberschrift$ = Ueberschrift$ + " vom " + von$ + " bis " + bis$
     IF von$ = "" AND bis$ = "" THEN Ueberschrift$ = Ueberschrift$ + " (gesamter Zeitraum)"
     vondat% = DAYS (vondat$)
     bisdat% = DAYS (bisdat$)
     IF sort% = 0 THEN 
       Ueberschrift$ = Ueberschrift$ + " Gruppierung Artikelnummer"
     END IF 
     IF sort% = 1 THEN 
       Ueberschrift$ = Ueberschrift$ + " Gruppierung Artikelbezeichnung"
     END IF 
     IF sort% = 2 THEN 
       Ueberschrift$ = Ueberschrift$ + " Gruppierung Lieferant/Artikelnr"
     END IF 
     IF sort% = 3 THEN 
       Ueberschrift$ = Ueberschrift$ + " Gruppierung Lieferant/Artikelbez"
     END IF 
     IF sort% = 4 THEN 
       Ueberschrift$ = Ueberschrift$ + " Gruppierung PG/Artikelnr"
     END IF 
     IF sort% = 5 THEN 
       Ueberschrift$ = Ueberschrift$ + " Gruppierung PG/Artikelbez"
     END IF 
   END IF 
   IF buch$ = "j" THEN 
     title2$ = UCASE$ (belegart$) + " " + Ueberschrift$ + " (gebuchte Belege)"
   ELSE 
     title2$ = UCASE$ (belegart$) + " " + Ueberschrift$ + " (gebuchte und ungebuchte Belege)"
   END IF 
 END SUB 
 
 
SUB ArtUmsAll()
 IF disabled%("öBERSICHTEN") THEN END SUB 
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(3,"vertrete" + _fpw$)
 CALL DFile(3,"master" + _fpw$)
 CALL DFile(3,"schein" + _fpw$)
 CALL DFile(3,"artikel" + _fpw$)
  CALL Umsopt()
  IF w220398% = 0 THEN END SUB 
   FILE "Artikel"
   INDEX codear.artikel
   SELECT FIRST 
   i% = 0
   j% = RECCOUNT ("Artikel")
   k% = RECCOUNT ("Schein")
   l% = 0
   WHILE NOT EOF ("Artikel")
     l% = l% + 1
     cuart% = codear.artikel
     codear% = codear.artikel
     SET STATUS PAD$ ("PrÅfe Artikel: " + bezeichnung.artikel,60) + STR$ (l%,"999999") + " von " + STR$ (j%,"999999")
     FILE "schein"
     INDEX codear.schein
     SELECT FIRST 
     SELECT KEY cuart% FILE "schein" INDEX codear.schein
     WHILE NOT EOF ("schein") AND codear.schein = cuart%
       ok% = 1
       codems% = codems.schein
       SELECT KEY codems% FILE "master" INDEX codems.master
       codeku% = codeku.master
       IF art.master = optli% THEN 
         IF buch$ = "j" THEN 
           IF UCASE$ (StatusM.master) <> "B" THEN 
             ok% = 0
           END IF 
         END IF 
         IF knr% <> 0 AND codeku.master <> knr% THEN ok% = 0
         IF cuku% <> 0 THEN 
           SELECT KEY codeku.master FILE "Adressen" INDEX codeku.adressen
           IF codeku.adressen = codeku.master THEN 
             IF codema.adressen <> cuku% THEN ok% = 0
           ELSE 
             ok% = 0
           END IF 
         END IF 
       ELSE 
         ok% = 0
       END IF 
       IF datum.master < DAYS (vondat$) OR datum.master > DAYS (bisdat$) THEN 
         ok% = 0
       END IF 
       IF ok% = 1 THEN 
         REM öbernahme Datensatz in umstemp1
         i% = i% + 1
         SET STATUS "Verarbeitete DatensÑtze: " + STR$ (i%,",999999999")

         CALL WriteUmsArt(codeku%,codear%,belegart$)
       END IF 
     FILE "schein"
     SELECT NEXT FILE "schein" INDEX codear.schein
     WEND 
   FILE "Artikel"
   SELECT NEXT FILE "Artikel" INDEX codear.artikel
   WEND 
   wbericht$ = "umstemp1"
   listart% = 1
   IF i% > 0 THEN 
     REM CALL Fehler("","")
     CALL VPEART1Ums(Wbericht$,FormatPrint$,title2$,sort%,listart%,Kontrollfeld$)
   ELSE 
     CALL Fehler("Es wurden keine DatensÑtze fÅr die Auswertung gefunden!","")
   END IF 
   IF OPEN ("umstemp1") THEN CLOSE FILE "umstemp1"
 END SUB 
 
SUB PGWahl()
     FILE "gruppen"
     DIM Auswahl1$(1)
     INDEX CodeGR.gruppen
     SELECT FIRST 
     a% = 0
     alle$ = "n"
anf150120053: 
     FILE "gruppen"
     INDEX CodeGR.gruppen
     SELECT FIRST 
     a% = 0
     REDIM ProdGruppen$(1,1)
     REDIM ProdGruppen$( RECCOUNT ("gruppen") + 10)
     WHILE NOT EOF ("gruppen")
       ok% = - 1
       IF alle$ = "n" THEN 
         IF novi1.gruppen = 1 THEN ok% = 0
       END IF 
       IF ok% = - 1 THEN 
         ProdGruppen$(a%) = Kurzbezeichnung.gruppen
         IF novi1.gruppen = 1 THEN ProdGruppen$(a%) = ProdGruppen$(a%) + " ###"
         ProdGruppen$(a%) = ProdGruppen$(a%) + SPACE$ (100) + STR$ (CodeGR.gruppen,"000000")
         a% = a% + 1
       END IF 
       SELECT NEXT 
     WEND 
     Auswahl$ = ProdGruppen$(0)
     Auswahl1$(0) = Auswahl$
     FILE "artikel"
      CREATE DIALOG "PREISLIS",0,0,200,364,title$,"MS Sans Serif",8
      ADD DIALOG "PREISLIS",4,0,0,199,340,0," Auswahl Produktgruppe"
      ADD DIALOG "PREISLIS",7,5,14,189,325,2,2,Prodgruppen$,Auswahl1$," "
      ADD DIALOG "PREISLIS",1,17,345,55,16,1,"&OK",1,1
      ADD DIALOG "PREISLIS",1,77,345,55,16,0,"&Abbrechen",0,0
      ADD DIALOG "PREISLIS",1,137,345,55,16,0,"Alle",2,2
      DIALOG "PREISLIS",req%
      REMOVE DIALOG "PREISLIS"
      IF req% = 2 THEN 
        alle$ = "j"
        GOTO anf150120051
      END IF 
  

      IF req% = 1 THEN 
        codegr% = VAL ( RIGHT$ (Auswahl1$(0),6))
        SELECT KEY codegr% FILE "gruppen" INDEX codegr.gruppen
        cugrp% = CodeGR.gruppen
        IF cugrp% > 0 THEN 
          _cugrp% = cugrp%
        SELECT KEY _cugrp% FILE "gruppen" INDEX CodeGR.gruppen
        ELSE 
         _cugrp% = 0
        END IF 
        
      END IF 
 END SUB 
 
 REM Preisliste fÅr Artikel einer Produktgruppe
SUB ArtPreisPG()
  _cugrp% = 0
  CALL PGWahl()
  IF _cugrp% = 0 THEN GOTO artpreispgend 
  SELECT KEY _cugrp% FILE "Gruppen" INDEX codegr.gruppen
  gruppe$ = Kurzbezeichnung.gruppen
  IF OPEN ("ARTIKTMP") THEN CLOSE FILE "ARTIKTMP"
  CALL DFile(3,"artiktmp" + _fpw$)
  REM REMOVE FROM FILE "artiktmp"
  FILE "Artikel"
  INDEX codegr.artikel
  SELECT FIRST 
  SELECT KEY _cugrp% FILE "Artikel" INDEX codegr.artikel
  i% = 0
  IF invListe$ = "j" THEN 
    eingrenz% = 0
    REQUEST "Inventurliste nur fÅr Artikel mit BestandsfÅhrung erzeugen?","",130,req%
    IF req% = 1 THEN eingrenz% = - 1
  END IF 
  WHILE NOT EOF ("Artikel") AND codegr.artikel = _cugrp%
    ok% = 0
    IF invListe$ = "j" THEN 
      IF eingrenz% = - 1 THEN 
        IF BestandsfÅhrung.artikel LIKE "j" THEN ok% = - 1
      ELSE 
        ok% = - 1
      END IF 
    ELSE 
      ok% = - 1
    END IF 
    IF ok% = - 1 THEN 
      FILE "Artiktmp"
      BLANK FILE "Artiktmp"
      Codear.Artiktmp = Codear.artikel
      codegr.Artiktmp = codegr.artikel
      ek.Artiktmp = ek.artikel
      VKNetto.Artiktmp = vknetto.artikel
      Bezeichnung.Artiktmp = Bezeichnung.artikel
      Beschreibung.Artiktmp = Beschreibung.artikel
      vkbrutto.Artiktmp = vkbrutto.artikel
      Handelsspanne.Artiktmp = Handelsspanne.artikel
      MwST.Artiktmp = mwst.artikel
      ME_.Artiktmp = me_.artikel
      artikelnummer.Artiktmp = artikelnummer.artikel
      Bestellnummer.Artiktmp = Bestellnummer.artikel
      Lieferant.Artiktmp = Lieferant.artikel
      bestand.Artiktmp = bestand.artikel
      BestandsfÅhrung.Artiktmp = BestandsfÅhrung.artikel
      Lieferek.Artiktmp = lieferek.artikel
      Inventurpreis.Artiktmp = Inventurpreis.artikel
      notiz.Artiktmp = notiz.artikel
      kostenreparatur.Artiktmp = Kostenreparatur.artikel
      Kostentransport.Artiktmp = kostentransport.artikel
      Kostensonstiges.Artiktmp = kostensonstiges.artikel
      stichwort.Artiktmp = stichwort.artikel
      Bezugsmenge.Artiktmp = Bezugsmenge.artikel
      ZeitproBezugsme.Artiktmp = ZeitproBezugsme.artikel
      Maschine.Artiktmp = Maschine.artikel
      Gewichtseinheit.Artiktmp = Gewichtseinheit.artikel
      GewichtBezugsme.Artiktmp = GewichtBezugsMe.artikel
      Matsorte.Artiktmp = Matsorte.artikel
      Mateinsatz.Artiktmp = Mateinsatz.artikel
      Matstaerke.Artiktmp = Matstaerke.artikel
      MatFarbe.Artiktmp = Matfarbe.artikel
      SollStd100.Artiktmp = SollStd100.artikel
      QuickGRBez.Artiktmp = STR$ (CodeGR.artikel,"000000") + LEFT$ ( TRIM$ (Bezeichnung.artikel),20)
      QuickGRArtnr.Artiktmp = STR$ (CodeGR.artikel,"000000") + LEFT$ ( TRIM$ (Artikelnummer.artikel),20)
      QuickLiefBez.Artiktmp = STR$ (Lieferant.artikel,"000000") + LEFT$ ( TRIM$ (Bezeichnung.artikel),20)
      QuickLiefArtnr.Artiktmp = STR$ (Lieferant.artikel,"000000") + LEFT$ ( TRIM$ (Artikelnummer.artikel),20)

      ekEU.Artiktmp = ekEU.artikel
      VKNettoEU.Artiktmp = vknettoEU.artikel
      vkbruttoEU.Artiktmp = vkbruttoEU.artikel
      LieferekEU.Artiktmp = lieferekEU.artikel
      InventurpreisEU.Artiktmp = InventurpreisEU.artikel
      kostrepEU.Artiktmp = KostrepEU.artikel
      KostTransEU.Artiktmp = kosttransEU.artikel
      KostsonstEU.Artiktmp = kostsonstEU.artikel
      codew.Artiktmp = codew.artikel
      umrechnung.Artiktmp = umrechnung.artikel
      waehrung.Artiktmp = waehrung.artikel
      STORE FILE "Artiktmp"
      UNLOCK CURRENT FILE "artiktmp"
      i% = i% + 1
      SET STATUS "Artikel gefunden: " + STR$ (i%,"9999999")
    END IF 
    FILE "Artikel"
    SELECT NEXT INDEX codegr.artikel
  WEND 
  CALL PreisLiNew("Artiktmp",gruppe$)
artpreispgend: 
 END SUB 
 
 REM Preisliste fÅr einen Lieferanten
SUB ArtPreisLief()
  cuku% = 0
  CALL LiefWahl()
  IF cuku% = 0 THEN GOTO artpreisLend
  SELECT KEY cuko% FILE "Adressen" INDEX codeku.adressen
  gruppe$ = Nachname.adressen
  IF OPEN ("ARTIKTMP") THEN CLOSE FILE "ARTIKTMP"
  CALL DFile(3,"artiktmp" + _fpw$)
  REM REMOVE FROM FILE "artiktmp"
  FILE "Artikel"
  INDEX Lieferant.artikel
  SELECT FIRST 
  SELECT KEY cuku% FILE "Artikel" INDEX Lieferant.artikel
  i% = 0
  IF invListe$ = "j" THEN 
    eingrenz% = 0
    REQUEST "Inventurliste nur fÅr Artikel mit BestandsfÅhrung erzeugen?","",130,req%
    IF req% = 1 THEN eingrenz% = - 1
  END IF 
  WHILE NOT EOF ("Artikel") AND Lieferant.artikel = cuku%
    ok% = 0
    IF invListe$ = "j" THEN 
      IF eingrenz% = - 1 THEN 
        IF BestandsfÅhrung.artikel LIKE "j" THEN ok% = - 1
      ELSE 
        ok% = - 1
      END IF 
    ELSE 
      ok% = - 1
    END IF 
    IF ok% = - 1 THEN 
      FILE "Artiktmp"
      BLANK FILE "Artiktmp"
      Codear.Artiktmp = Codear.artikel
      codegr.Artiktmp = codegr.artikel
      ek.Artiktmp = ek.artikel
      VKNetto.Artiktmp = vknetto.artikel
      Bezeichnung.Artiktmp = Bezeichnung.artikel
      Beschreibung.Artiktmp = Beschreibung.artikel
      vkbrutto.Artiktmp = vkbrutto.artikel
      Handelsspanne.Artiktmp = Handelsspanne.artikel
      MwST.Artiktmp = mwst.artikel
      ME_.Artiktmp = me_.artikel
      artikelnummer.Artiktmp = artikelnummer.artikel
      Bestellnummer.Artiktmp = Bestellnummer.artikel
      Lieferant.Artiktmp = Lieferant.artikel
      bestand.Artiktmp = bestand.artikel
      BestandsfÅhrung.Artiktmp = BestandsfÅhrung.artikel
      Lieferek.Artiktmp = lieferek.artikel
      Inventurpreis.Artiktmp = Inventurpreis.artikel
      notiz.Artiktmp = notiz.artikel
      kostenreparatur.Artiktmp = Kostenreparatur.artikel
      Kostentransport.Artiktmp = kostentransport.artikel
      Kostensonstiges.Artiktmp = kostensonstiges.artikel
      stichwort.Artiktmp = stichwort.artikel
      Bezugsmenge.Artiktmp = Bezugsmenge.artikel
      ZeitproBezugsme.Artiktmp = ZeitproBezugsme.artikel
      Maschine.Artiktmp = Maschine.artikel
      Gewichtseinheit.Artiktmp = Gewichtseinheit.artikel
      GewichtBezugsme.Artiktmp = GewichtBezugsMe.artikel
      Matsorte.Artiktmp = Matsorte.artikel
      Mateinsatz.Artiktmp = Mateinsatz.artikel
      Matstaerke.Artiktmp = Matstaerke.artikel
      MatFarbe.Artiktmp = Matfarbe.artikel
      SollStd100.Artiktmp = SollStd100.artikel
      QuickGRBez.Artiktmp = STR$ (CodeGR.artikel,"000000") + LEFT$ ( TRIM$ (Bezeichnung.artikel),20)
      QuickGRArtnr.Artiktmp = STR$ (CodeGR.artikel,"000000") + LEFT$ ( TRIM$ (Artikelnummer.artikel),20)
      QuickLiefBez.Artiktmp = STR$ (Lieferant.artikel,"000000") + LEFT$ ( TRIM$ (Bezeichnung.artikel),20)
      QuickLiefArtnr.Artiktmp = STR$ (Lieferant.artikel,"000000") + LEFT$ ( TRIM$ (Artikelnummer.artikel),20)

      ekEU.Artiktmp = ekEU.artikel
      VKNettoEU.Artiktmp = vknettoEU.artikel
      vkbruttoEU.Artiktmp = vkbruttoEU.artikel
      LieferekEU.Artiktmp = lieferekEU.artikel
      InventurpreisEU.Artiktmp = InventurpreisEU.artikel
      kostrepEU.Artiktmp = KostrepEU.artikel
      KostTransEU.Artiktmp = kosttransEU.artikel
      KostsonstEU.Artiktmp = kostsonstEU.artikel
      codew.Artiktmp = codew.artikel
      umrechnung.Artiktmp = umrechnung.artikel
      waehrung.Artiktmp = waehrung.artikel
      STORE FILE "Artiktmp"
      UNLOCK CURRENT FILE "artiktmp"
    
      i% = i% + 1
      SET STATUS "Artikel gefunden: " + STR$ (i%,"9999999")
    END IF 
    FILE "Artikel"
    SELECT NEXT INDEX Lieferant.artikel
  WEND 
  CALL PreisLiNew("Artiktmp",gruppe$)
artpreisLend: 
 END SUB 
 
SUB PreisLiNew(wbericht$,gruppevor$)
 sort% = 1
 CREATE DIALOG "UMSATZ",0,0,200,125,"Sortierung","MS Sans Serif",8
 ADD DIALOG "UMSATZ",5,5,7,155,36,0,"Bitte geben Sie die Sortierreihenfolge fÅr die Liste an"
 ADD DIALOG "UMSATZ",3,5,24,180,12,0,"Sortierung nach Artikelnummer",0,sort%
 ADD DIALOG "UMSATZ",3,5,36,180,12,0,"Sortierung nach Artikelbezeichnung",1,sort%
 IF UCASE$ (wbericht$) = "ARTIKEL" THEN 
   ADD DIALOG "UMSATZ",3,5,48,181,12,0,"Sortierung nach Produktgruppe/Artikelnummer",2,sort%
   ADD DIALOG "UMSATZ",3,5,60,180,12,0,"Sortierung nach Produktgruppe/Artikelbezeichnung",3,sort%
   ADD DIALOG "UMSATZ",3,5,72,181,12,0,"Sortierung nach Lieferant/Artikelnummer",4,sort%
   ADD DIALOG "UMSATZ",3,5,84,180,12,0,"Sortierung nach Lieferant/Artikelbezeichnung",5,sort%
 END IF 
 ADD DIALOG "UMSATZ",1,56,105,55,15,1,"&OK",1,1
 ADD DIALOG "UMSATZ",1,113,105,55,15,0,"&Abbrechen",0,0
 DIALOG "UMSATZ",req%
 REMOVE DIALOG "UMSATZ"
 IF req% <> 1 THEN END SUB 
 MOUSE OFF 
 REM wbericht$ enthÑlt den Namen der zu druckenden Datei
 REM Initialisierung der VPE
 FormatPrint$ = "A4h"
 CALL VPEINI(title2$,FormatPrint$)
 FILE wbericht$
 SELECT CASE sort%
   CASE 0
     INDEX Artikelnummer
 
   CASE 1
     INDEX bezeichnung
   CASE 2
     INDEX QPGArtnr
   CASE 3
     INDEX QPGArtBez
   CASE 4
     INDEX QLieArtnr
   CASE 5
     INDEX QLieArtBez
 END SELECT 
 req% = 0
 SELECT FIRST 
 eu% = 0
 drwaehr$ = ""
  IF eurosupport$ = "TRUE" THEN 
   t1$ = "Wenn Sie in unterschiedlichen WÑhrungen erfa·t haben, sollten Sie die öbersicht in EURO ausgeben lassen,"
   t2$ = "da bei der Ausgabe der Belege in der OriginalwÑhrung zwar die einzelnen BetrÑge stimmen, aber keine der errechnten Summen richtig sein wird(z.B. DM+US$=?)!"
   CALL Fehler(t1$,t2$)
   REQUEST "öbersicht in EURO drucken?","",130,req%
   IF req% = 1 THEN 
     eu% = 1
     drwaehr$ = " in EUR"
   ELSE 
     eu% = 0
     drwaehr$ = " in allen WÑhrungen"
   END IF 
 END IF 
 title2$ = title2$ + drwaehr$
 IF gruppevor$ <> "" THEN 
   gruppeneu$ = gruppevor$
 END IF 
 gruppierung$ = ""
 IF gruppevor$ = "" THEN 
   SELECT CASE sort%
     CASE 2
       REM INDEX QPGArtnr
       gruppeneu$ = STR$ (codegr.wbericht$,"0000000")
       gruppierung$ = "gruppiert nach Produktgruppe/Artikelnr."
     CASE 3
       REM INDEX QPGArtBez
       gruppeneu$ = STR$ (codegr.wbericht$,"0000000")
       gruppierung$ = "gruppiert nach Produktgruppe/Artikelbez."
     CASE 4
       REM INDEX QLieArtnr
       gruppeneu$ = STR$ (Lieferant.wbericht$,"0000000")
       gruppierung$ = "gruppiert nach Lieferant/Artikelnr."
     CASE 5
       REM INDEX QLieArtBez
       gruppeneu$ = STR$ (Lieferant.wbericht$,"0000000")
       gruppierung$ = "gruppiert nach Lieferant/Artikelbez."
 END SELECT 
 END IF 
 gruppeold$ = ""
 vzeil% = mTop%
 IF InvListe$ = "n" THEN 
   title2$ = "Preisliste " + gruppierung$ + " " + drwaehr$
 ELSE 
   title2$ = "Inventurliste " + gruppierung$ + " " + drwaehr$
 END IF 
 CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
 CALL VWrite(mleft%,vzeil% + 10,mright% - 3,"['Arial' S 9 B C BLACK]" + title2$ + " vom " + DATE$ ( TODAY ,"dd.mm.yyyy"))
 CALL VWrite(mleft%,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 a% = vzeil% + 50
 IF InvListe$ = "n" THEN 
   CALL VWrite(mright% - 350,a%,mright% - 175,"['Arial' S 9 B]" + "Netto VK")
   CALL VWrite(mright% - 175,a%,mright%,"['Arial' S 9 B]" + "Brutto VK")
   CALL VWrite(mleft% + 925,a%,mleft% + 1150,"['Arial' S 9 B]" + "Bezugsmenge")
   CALL VWrite(mleft% + 1155,a%,mleft% + 1250,"['Arial' S 9 B]" + "ME")
   IF sort% = 0 OR sort% = 2 OR sort% = 4 THEN 
     CALL VWrite(mleft%,a%,mleft% + 200,"['Arial' S 9 B]" + "Artikelnr.")
     CALL VWrite(mleft% + 205,a%,mleft% + 600,"['Arial' S 9 B]" + "Artikelbez.")
   ELSE 
     CALL VWrite(mleft%,a%,mleft% + 700,"['Arial' S 9 B]" + "Artikelbez.")
     CALL VWrite(mleft% + 705,a%,mleft% + 900,"['Arial' S 9 B]" + "Artikelnr.")
   END IF 
 ELSE 
   CALL VWrite(mright% - 200,a%,mright% - 5,"['Arial' S 9 B]" + "Inventurpreis")
   CALL VWrite(mleft% + 625,a%,mleft% + 850,"['Arial' S 9 B]" + "Bezugsmenge")
   CALL VWrite(mleft% + 845,a%,mleft% + 950,"['Arial' S 9 B]" + "ME")
   CALL VWrite(mleft% + 1055,a%,mleft% + 1250,"['Arial' S 9 B]" + "Soll Bestand")
   CALL VWrite(mleft% + 1275,a%,mleft% + 1450,"['Arial' S 9 B]" + "Bestands-")
   IF sort% = 0 OR sort% = 2 OR sort% = 4 THEN 
     CALL VWrite(mleft%,a%,mleft% + 300,"['Arial' S 9 B]" + "Artikelnr.")
     a% = vzeil%
     CALL VWrite(mleft%,a%,mleft% + 600,"['Arial' S 9 B]" + "Artikelbez.")
     CALL VWrite(mleft% + 1055,a%,mleft% + 1250,"['Arial' S 9 B]" + "Ist Bestand")
     CALL VWrite(mleft% + 1275,a%,mleft% + 1450,"['Arial' S 9 B]" + "fÅhrung")
   ELSE 
     CALL VWrite(mleft%,a%,mleft% + 600,"['Arial' S 9 B]" + "Artikelbez.")
     a% = vzeil%
     CALL VWrite(mleft%,a%,mleft% + 300,"['Arial' S 9 B]" + "Artikelnr.")
     CALL VWrite(mleft% + 1055,a%,mleft% + 1250,"['Arial' S 9 B]" + "Ist Bestand")
     CALL VWrite(mleft% + 1275,a%,mleft% + 1450,"['Arial' S 9 B]" + "fÅhrung")
   END IF 
 END IF 
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 vzeil% = obBottom% + 30
 a% = vzeil%
 ueberpos% = vzeil%
 CALL VTransp(0)
 CALL VSetPen(0,0)
 zeilenabstand% = 40
 zeilenoffset% = 40
 i% = 1
 sumgesnet% = 0
 sumgesbrut% = 0
 sumgesmwst% = 0
 sumgrnet% = 0
 sumgrbrut% = 0
 sumgrmwst% = 0
 uebertrnet% = 0
 uebertrbrut% = 0
 uebertrmwst% = 0
 fstgroup% = 0
 t% = 1
 mbottom% = mbottom% - 15
 WHILE NOT EOF (wbericht$)
   REM codeku% = codeku.wbericht$
   a% = vzeil%
   czeile% = vzeil%
   cPage% = CALL ("VpeGetCurrentPage",hdoc%)
   cPageold% = cPage%
   ok% = - 1
   
   
   IF gruppevor$ = "" THEN 
     SELECT CASE sort%
       CASE 2
         REM INDEX QPGArtnr
         gruppeneu$ = STR$ (codegr.wbericht$,"0000000")
       CASE 3
         REM INDEX QPGArtBez
         gruppeneu$ = STR$ (codegr.wbericht$,"0000000")
       CASE 4
         REM INDEX QLieArtnr
         gruppeneu$ = STR$ (Lieferant.wbericht$,"0000000")
       CASE 5
         REM INDEX QLieArtBez
         gruppeneu$ = STR$ (Lieferant.wbericht$,"0000000")
       END SELECT 
   END IF 
     REM 040398ab
     IF Kontrollfeld$ = "j" THEN 
       IF UCASE$ (bestandsfÅhrung.wbericht$) <> "J" THEN GOTO weit050398
     END IF 
     IF gruppeneu$ <> gruppeold$ THEN 
       REM CALL Fehler("Ausdruck","")
       czeile1% = czeile%
       IF sort% = 2 OR sort% = 3 THEN 
         SELECT KEY codegr.wbericht$ FILE "Gruppen" INDEX codegr.gruppen
         CALL VWrite(mleft%,a%,mleft% + 500,"['Arial' S 9 B C BLACK]" + Kurzbezeichnung.gruppen)
         a% = vzeil% + 10
         CALL VLine(mleft% - 7,a%,mright%,a%)
         a% = vzeil% + 20
       ELSE 
         IF sort% > 3 THEN 
           SELECT KEY lieferant.wbericht$ FILE "Adressen" INDEX codeku.adressen
           CALL VWrite(mleft%,a%,mleft% + 500,"['Arial' S 9 B C BLACK]" + nachname.adressen)
           a% = vzeil% + 10
           CALL VLine(mleft% - 7,a%,mright%,a%)
           a% = vzeil% + 20
         END IF 
       END IF 
       gruppeold$ = gruppeneu$
     END IF 
     MAXz% = 0
     IF InvListe$ = "n" THEN 
       CALL VAlign(1)
       IF eu% = 0 THEN 
         CALL VWrite(mright% - 500,a%,mright% - 250,"['Arial' S 8 B C BLACK]" + STR$ (vknetto.wbericht$,",99999999.00"))
         CALL VWrite(mright% - 250,a%,mright% - 5,"['Arial' S 8 B C BLACK]" + STR$ (vkbrutto.wbericht$,",99999999.00") + " " + waehrung.wbericht$)
       ELSE 
         CALL VWrite(mright% - 500,a%,mright% - 250,"['Arial' S 8 B C BLACK]" + STR$ (vknettoEU.wbericht$,",99999999.00"))
         CALL VWrite(mright% - 250,a%,mright% - 5,"['Arial' S 8 B C BLACK]" + STR$ (vkbruttoEU.wbericht$,",99999999.00") + " EUR")
       END IF 
       CALL VWrite(mleft% + 905,a%,mleft% + 1150,"['Arial' S 8 B C BLACK]" + STR$ (bezugsmenge.wbericht$,",99999999.00"))
       CALL VAlign(0)
       CALL VWrite(mleft% + 1155,a%,mleft% + 1350,"['Arial' S 8 B C BLACK]" + ME_.wbericht$)
       IF sort% = 0 OR sort% = 2 OR sort% = 4 THEN 
         IF artikelnummer <> "" THEN 
           CALL VWrite(mleft%,a%,mleft% + 200,"['Arial' S 8 B C BLACK]" + Artikelnummer.wbericht$)
           IF MAXz% < vzeil% THEN MAXz% = vzeil%
         END IF 
         IF bezeichnung <> "" THEN 
           CALL VWrite(mleft% + 205,a%,mleft% + 900,"['Arial' S 8 B C BLACK]" + bezeichnung.wbericht$)
           IF MAXz% < vzeil% THEN MAXz% = vzeil%
         END IF 
       ELSE 
         IF bezeichnung <> "" THEN 
           CALL VWrite(mleft%,a%,mleft% + 700,"['Arial' S 8 B C BLACK]" + bezeichnung.wbericht$)
           IF MAXz% < vzeil% THEN MAXz% = vzeil%
         END IF 
         IF artikelnummer <> "" THEN 
           CALL VWrite(mleft% + 705,a%,mleft% + 900,"['Arial' S 8 B C BLACK]" + Artikelnummer.wbericht$)
           IF MAXz% < vzeil% THEN MAXz% = vzeil%
         END IF 
       END IF 
     ELSE 
       CALL VAlign(1)
       IF eu% = 0 THEN 
         CALL VWrite(mright% - 500,a%,mright% - 5,"['Arial' S 8 B C BLACK]" + STR$ (InventurPreis.wbericht$,",99999999.00") + " " + waehrung.wbericht$)
       ELSE 
         CALL VWrite(mright% - 500,a%,mright% - 5,"['Arial' S 8 B C BLACK]" + STR$ (InventurPreisEU.wbericht$,",99999999.00") + " EUR")
       END IF 
       CALL VWrite(mleft% + 605,a%,mleft% + 840,"['Arial' S 8 B C BLACK]" + STR$ (bezugsmenge.wbericht$,",99999999.00"))
       CALL VWrite(mleft% + 1055,a%,mleft% + 1250,"['Arial' S 8 B]" + STR$ (Bestand.wbericht$,",99999999.00"))
       CALL VWrite(mleft% + 1320,a%,mleft% + 1350,"['Arial' S 8 B]" + BestandsfÅhrung.wbericht$)
       CALL VAlign(0)
       CALL VWrite(mleft% + 845,a%,mleft% + 1050,"['Arial' S 8 B C BLACK]" + ME_.wbericht$)
       artnr$ = artikelnummer
       IF artnr$ = "" THEN artnr$ = "---"
       bez$ = bezeichnung
       IF bez$ = "" THEN bez$ = "---"
       IF sort% = 0 OR sort% = 2 OR sort% = 4 THEN 
         IF artnr$ <> "" THEN 
           CALL VWrite(mleft%,a%,mleft% + 300,"['Arial' S 8 B C BLACK]" + artnr$)
           a% = vzeil%
         END IF 
         IF bez$ <> "" THEN 
           CALL VWrite(mleft%,a%,mleft% + 600,"['Arial' S 8 B C BLACK]" + bez$)
           IF MAXz% < vzeil% THEN MAXz% = vzeil%
         END IF 
       ELSE 
         IF bez$ <> "" THEN 
           CALL VWrite(mleft%,a%,mleft% + 600,"['Arial' S 8 B C BLACK]" + bez$)
           a% = vzeil%
         END IF 
         IF artnr$ <> "" THEN 
           CALL VWrite(mleft%,a%,mleft% + 300,"['Arial' S 8 B C BLACK]" + artnr$)
           IF MAXz% < vzeil% THEN MAXz% = vzeil%
         END IF 
       END IF 
     END IF 
     IF InvListe$ = "n" THEN 
       REM CALL VAlign(1)
       REM CALL VWrite(mright% - 300,a%,mright% - 5,"['Arial' S 8 B C BLACK]" + STR$ (vknetto.wbericht$,",99999999.00"))
       REM CALL VWrite(mleft% + 905,a%,mleft% + 1150,"['Arial' S 8 B C BLACK]" + STR$ (bezugsmenge.wbericht$,",99999999.00"))
       REM CALL VAlign(0)
       REM CALL VWrite(mleft% + 1155,a%,mleft% + 1350,"['Arial' S 8 B C BLACK]" + ME_.wbericht$)
       IF MAXz% < vzeil% THEN MAXz% = vzeil%
       IF maxz% > vzeil% THEN vzeil% = maxz%
       a% = vzeil%
       IF matsorte.wbericht$ <> "" THEN 
         CALL VWrite(mleft%,a%,mleft% + 300,"['Arial' S 8 B C BLACK] Materialsorte:")
         CALL VWrite(mleft% + 305,a%,mright% + 300,"['Arial' S 8 B C BLACK]" + matsorte.wbericht$)
         a% = vzeil%
       END IF 
       IF mateinsatz.wbericht$ <> "" THEN 
         CALL VWrite(mleft%,a%,mleft% + 300,"['Arial' S 8 B C BLACK] Materialeinsatz:")
         CALL VWrite(mleft% + 305,a%,mright%,"['Arial' S 8 B C BLACK]" + mateinsatz.wbericht$)
         a% = vzeil%
       END IF 
       IF matstaerke.wbericht$ <> "" THEN 
         CALL VWrite(mleft%,a%,mleft% + 300,"['Arial' S 8 B C BLACK] MaterialstÑrke:")
         CALL VWrite(mleft% + 305,a%,mright%,"['Arial' S 8 B C BLACK]" + matstaerke.wbericht$)
         a% = vzeil%
       END IF 
       IF matfarbe.wbericht$ <> "" THEN 
         CALL VWrite(mleft%,a%,mleft% + 300,"['Arial' S 8 B C BLACK] Materialfarbe:")
         CALL VWrite(mleft% + 305,a%,mright%,"['Arial' S 8 B C BLACK]" + matfarbe.wbericht$)
         a% = vzeil%
       END IF 
       IF SollStd100.wbericht$ <> 0 THEN 
         CALL VWrite(mleft%,a%,mleft% + 300,"['Arial' S 8 B C BLACK] Sollstd/100 StÅck:")
         CALL VWrite(mleft% + 305,a%,mright%,"['Arial' S 8 B C BLACK]" + STR$ (SollStd100.wbericht$,",99999999.00"))
         a% = vzeil%
       END IF 
     ELSE 
       REM CALL VAlign(1)
       REM CALL VWrite(mright% - 300,a%,mright% - 5,"['Arial' S 8 B C BLACK]" + STR$ (InventurPreis.wbericht$,",99999999.00"))
       REM CALL VWrite(mleft% + 905,a%,mleft% + 1150,"['Arial' S 8 B C BLACK]" + STR$ (bezugsmenge.wbericht$,",99999999.00"))
       REM CALL VAlign(0)
       REM CALL VWrite(mleft% + 1155,a%,mleft% + 1350,"['Arial' S 8 B C BLACK]" + ME_.wbericht$)
       IF MAXz% < vzeil% THEN MAXz% = vzeil%
       IF maxz% > vzeil% THEN vzeil% = maxz%
       a% = vzeil%
     END IF 
     abi% = 0
     vzeil% = a%
 
     a% = vzeil% + 10
     CALL VLine(mleft% - 7,a%,mright%,a%)
     vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     a% = vzeil% + 10
     vzeil% = a%
 
 
     REM gruppeold$ = gruppeneu$
weit050398: 
   maxbottom% = vzeil%
   a% = vzeil%
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   IF obBottom% < a% THEN obBottom% = a%
   IF obBottom% >= mBottom% THEN 
     REM CALL VBox(mleft% - 7,mTop%,mright%,obBottom%)
     CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
     CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
     CALL VLine(mright%,mtop%,mright%,czeile%)
     
     CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
     ab% = CALL ("VpePageBreak",hdoc%)
     vzeil% = ueberpos%
     a% = vzeil%
     gruppeold$ = "nextpage"
   ELSE 
     SELECT NEXT 
     i% = i% + 1
     SET STATUS STR$ (i%,"0000000") + " Artikel verarbeitet!"
     vzeil% = a%
     IF EOF (wbericht$) THEN 
       CALL VLine(mleft% - 7,mtop%,mleft% - 7,obBottom%)
       CALL VLine(mright%,mtop%,mright%,obBottom%)
       CALL VLine(mleft% - 7,obBottom%,mright%,obBottom%)
     END IF 
   END IF 
 WEND 
 SET STATUS ""
 REM vzeil% = listende% + 100
 vzeil% = mBottom%
 CALL VPrint(mleft%,vzeil% + 20,"['Arial' S 15 B C BLACK]Ende der Liste")
 cPage% = CALL ("VpeGetCurrentPage",hdoc%)
 
 FOR b% = 1 TO cPage%
   vzeil% = mTop%
   a% = CALL ("VpeGotoPage",hdoc%,b%)
   CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
   CALL VWrite(mleft%,vzeil% + 10,mright% - 3,"['Arial' S 9 B C BLACK]" + title2$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
   CALL VWrite(mleft%,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   a% = vzeil% + 50
   IF InvListe$ = "n" THEN 
     CALL VWrite(mright% - 350,a%,mright% - 175,"['Arial' S 9 B]" + "Netto VK")
     CALL VWrite(mright% - 175,a%,mright%,"['Arial' S 9 B]" + "Brutto VK")
     CALL VWrite(mleft% + 925,a%,mleft% + 1150,"['Arial' S 9 B]" + "Bezugsmenge")
     CALL VWrite(mleft% + 1155,a%,mleft% + 1250,"['Arial' S 9 B]" + "ME")
     IF sort% = 0 OR sort% = 2 OR sort% = 4 THEN 
       CALL VWrite(mleft%,a%,mleft% + 200,"['Arial' S 9 B]" + "Artikelnr.")
       CALL VWrite(mleft% + 205,a%,mleft% + 600,"['Arial' S 9 B]" + "Artikelbez.")
     ELSE 
       CALL VWrite(mleft%,a%,mleft% + 700,"['Arial' S 9 B]" + "Artikelbez.")
       CALL VWrite(mleft% + 705,a%,mleft% + 900,"['Arial' S 9 B]" + "Artikelnr.")
     END IF 
   ELSE 
     CALL VWrite(mright% - 200,a%,mright% - 5,"['Arial' S 9 B]" + "Inventurpreis")
     CALL VWrite(mleft% + 625,a%,mleft% + 850,"['Arial' S 9 B]" + "Bezugsmenge")
     CALL VWrite(mleft% + 845,a%,mleft% + 950,"['Arial' S 9 B]" + "ME")
     CALL VWrite(mleft% + 1055,a%,mleft% + 1250,"['Arial' S 9 B]" + "Soll Bestand")
     CALL VWrite(mleft% + 1275,a%,mleft% + 1450,"['Arial' S 9 B]" + "Bestands-")
     IF sort% = 0 OR sort% = 2 OR sort% = 4 THEN 
       CALL VWrite(mleft%,a%,mleft% + 300,"['Arial' S 9 B]" + "Artikelnr.")
       a% = vzeil%
       CALL VWrite(mleft%,a%,mleft% + 600,"['Arial' S 9 B]" + "Artikelbez.")
       CALL VWrite(mleft% + 1055,a%,mleft% + 1250,"['Arial' S 9 B]" + "Ist Bestand")
       CALL VWrite(mleft% + 1275,a%,mleft% + 1450,"['Arial' S 9 B]" + "fÅhrung")
     ELSE 
       CALL VWrite(mleft%,a%,mleft% + 600,"['Arial' S 9 B]" + "Artikelbez.")
       a% = vzeil%
       CALL VWrite(mleft%,a%,mleft% + 300,"['Arial' S 9 B]" + "Artikelnr.")
       CALL VWrite(mleft% + 1055,a%,mleft% + 1250,"['Arial' S 9 B]" + "Ist Bestand")
       CALL VWrite(mleft% + 1275,a%,mleft% + 1450,"['Arial' S 9 B]" + "fÅhrung")
     END IF 
   END IF 
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   vzeil% = obBottom% + 30
 NEXT b%
 a% = CALL ("VpeGotoPage",hdoc%,1)
 MOUSE ON 
 IF scedov% = 1 AND reqbild% <> 1 THEN 
   CALL VPrintDoc()
 ELSE 
   CALL VPrevDoc()
 END IF 
 REM Nach dem Drucken, Drucker auf A4 hoch setzen
 c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,1,9
 REM CLOSE FILE wbericht$ 
 
 
 
 END SUB 
 
 
 
 
 REM UmsÑtze fÅr Artikel einer Produktgruppe
SUB ArtUmsSel()
  CALL PGWahl()
  IF _cugrp% = 0 THEN GOTO artumselend
  CALL Umsopt()
  IF _cugrp% = 0 THEN GOTO artumselend
   FILE "Artikel"
   INDEX codegr.artikel
   SELECT FIRST 
   SELECT KEY _cugrp% FILE "Artikel" INDEX codegr.artikel
   i% = 0
   WHILE NOT EOF ("Artikel") AND codegr.artikel = _cugrp%
     cuart% = codear.artikel
     codear% = codear.artikel
     FILE "schein"
     INDEX codear.schein
     SELECT FIRST 
     SELECT KEY cuart% FILE "schein" INDEX codear.schein
     WHILE NOT EOF ("schein") AND codear.schein = cuart%
       ok% = 1
       codems% = codems.schein
       SELECT KEY codems% FILE "master" INDEX codems.master
       codeku% = codeku.master
       IF art.master = optli% THEN 
         IF buch$ = "j" THEN 
           IF UCASE$ (StatusM.master) <> "B" THEN 
             ok% = 0
           END IF 
         END IF 
           IF knr% <> 0 AND codeku.master <> knr% THEN ok% = 0
           IF cuku% <> 0 THEN 
             SELECT KEY codeku.master FILE "Adressen" INDEX codeku.adressen
             IF codeku.adressen = codeku.master THEN 
               IF codema.adressen <> cuku% THEN ok% = 0
             ELSE 
               ok% = 0
             END IF 
           END IF 
       ELSE 
         ok% = 0
       END IF 
       IF datum.master < DAYS (vondat$) OR datum.master > DAYS (bisdat$) THEN 
         ok% = 0
       END IF 
       IF codegr.artikel <> _cugrp% THEN 
         ok% = 0
       END IF 
       IF ok% = 1 THEN 
         REM öbernahme Datensatz in umstemp1
         i% = i% + 1
         SET STATUS "Verarbeitete DatensÑtze: " + STR$ (i%,",999999999")
         CALL WriteUmsArt(codeku%,codear%,belegart$)
       END IF 
     FILE "schein"
     SELECT NEXT FILE "schein" INDEX codear.schein
     WEND 
   FILE "Artikel"
   SELECT NEXT FILE "Artikel" INDEX codegr.artikel
   WEND 
   wbericht$ = "umstemp1"
   listart% = 1
   IF i% > 0 THEN 
     
     CALL VPEART1Ums(Wbericht$,FormatPrint$,title2$,sort%,listart%,Kontrollfeld$)
   ELSE 
     CALL Fehler("Es wurden keine DatensÑtze fÅr die Auswertung gefunden!","")
   END IF 
artumselend: 
 END SUB 
 
 
SUB LiefWahl()
 cuart% = CodeAR.ARTIKEL
 MOUSE OFF 
 IF NEW ("ARTIKEL") OR MOD ("ARTIKEL") THEN CALL FStore("ARTIKEL")
 FILE "adressen"
 DIM LAuswahl1$(1)
 REDIM Lieferant$(1,1)
 REDIM Lieferant$(29000)

 a% = 0
 INDEX AALieferant.adressen
 SELECT FIRST 
 SELECT KEY "j" FILE "adressen" INDEX aalieferant.adressen
 WHILE aalieferant.adressen = "j" AND NOT EOF ("adressen")
   Lieferant$(a%) = nachname.adressen + SPACE$ (120) + STR$ (codeku.adressen,"000000")
   a% = a% + 1
   SELECT NEXT 
 WEND 
 LAuswahl$ = Lieferant$(0)
 LAuswahl1$(0) = LAuswahl$
 CREATE DIALOG "PREISLIS",0,0,205,348,"Auswahl Lieferant","MS Sans Serif",8
    ADD DIALOG "PREISLIS",4,1,1,202,329,0," Auswahl des Lieferanten"
    ADD DIALOG "PREISLIS",7,4,13,196,314,2,2,Lieferant$,Lauswahl1$," "
    ADD DIALOG "PREISLIS",1,31,331,54,16,1,"&OK",1,1
    ADD DIALOG "PREISLIS",1,91,331,54,16,0,"&Abbrechen",0,0
 DIALOG "PREISLIS",req%
 REMOVE DIALOG "PREISLIS"
 IF req% = 1 THEN 
   LAuswahl$ = LAuswahl1$(0)
   SELECT KEY VAL ( RIGHT$ (LAuswahl$,6)) FILE "adressen" INDEX codeku.adressen
   cuku% = CodeKu.adressen
   FILE "Artikel"
 END IF 
 
 
 MOUSE ON 
 END SUB 
  
 REM UmsÑtze fÅr Artikel eines Lieferanten
SUB ArtUmsSelLief()
  CALL LiefWahl()
  IF cuku% = 0 THEN GOTO artumselLend
  CALL Umsopt()
  IF cuku% = 0 THEN GOTO artumselLend
   FILE "Artikel"
   INDEX Lieferant.artikel
   SELECT FIRST 
   SELECT KEY cuku% FILE "Artikel" INDEX Lieferant.artikel
   i% = 0
   WHILE NOT EOF ("Artikel") AND Lieferant.artikel = cuku%
     cuart% = codear.artikel
     codear% = codear.artikel
     FILE "schein"
     INDEX codear.schein
     SELECT FIRST 
     SELECT KEY cuart% FILE "schein" INDEX codear.schein
     WHILE NOT EOF ("schein") AND codear.schein = cuart%
       ok% = 1
       codems% = codems.schein
       SELECT KEY codems% FILE "master" INDEX codems.master
       codeku% = codeku.master
       IF art.master = optli% THEN 
         IF buch$ = "j" THEN 
           IF UCASE$ (StatusM.master) <> "B" THEN 
             ok% = 0
           END IF 
         END IF 
       ELSE 
         ok% = 0
       END IF 
       IF datum.master < DAYS (vondat$) OR datum.master > DAYS (bisdat$) THEN 
         ok% = 0
       END IF 
       IF ok% = 1 THEN 
         REM öbernahme Datensatz in umstemp1
         i% = i% + 1
         SET STATUS "Verarbeitete DatensÑtze: " + STR$ (i%,",999999999")
         CALL WriteUmsArt(codeku%,codear%,belegart$)
       END IF 
     FILE "schein"
     SELECT NEXT FILE "schein" INDEX codear.schein
     WEND 
   FILE "Artikel"
   SELECT NEXT FILE "Artikel" INDEX Lieferant.artikel
   WEND 
   wbericht$ = "umstemp1"
   listart% = 1
   IF i% > 0 THEN 
     
     CALL VPEART1Ums(Wbericht$,FormatPrint$,title2$,sort%,listart%,Kontrollfeld$)
   ELSE 
     CALL Fehler("Es wurden keine DatensÑtze fÅr die Auswertung gefunden!","")
   END IF 
artumselLend: 
 cuku% = 0
 END SUB 
 
  
 
 
 ' Rechnungseingangsverwaltung 
 
SUB Reingang(dat$)
 rec% = RECCOUNT (dat$)
 REDIM Lieferant$(rec%)
 REDIM ProdGruppen1$(rec%)
 REDIM Projecteab$(rec%)
 Projecteab$(0) = ""
 Lieferant$(0) = ""
 ProdGruppen1$(0) = ""
 IF disabled%("Reingang") THEN 
   GOTO endreing071020031
 END IF 
  CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(2,"OFFICE\connect" + _fpw$)
 CALL DFile(2,"OFFICE\banken" + _fpw$)
 CALL DFile(3,"MASTER" + _fpw$)
 CALL DFile(3,"MAHNUNG" + _fpw$)
 CALL DFile(3,"UMSATZ" + _fpw$)
 CALL DFile(3,"VERTRETE" + _fpw$)
 CALL DFile(3,"PROVISIO" + _fpw$)
 CALL DFile(3,"VERLEIH" + _fpw$)
 CALL DFile(3,"JOURNAL" + _fpw$)
 CALL DFile(2,"OFFICE\produkt" + _fpw$)
 CALL DFile(2,"OFFICE\prgruppe" + _fpw$)
 CALL DFile(2,"OFFICE\kprodukt" + _fpw$)
 
 CALL DFile(2,"ZERO" + _fpw$)
  _formend% = 0
 SET STATUS "Bereit"
 aktform$ = UCASE$ ( FORM )
 IF mastform$ = "EUR" THEN 
   IF aktform$ LIKE "ADR*" THEN 
     maskeraus$ = "ADRRAUSE"
     maskerein$ = "ADRREINE"
   ELSE 
     maskeraus$ = "RAINGUEE"
     maskerein$ = "REINGUEE"
   END IF 
 ELSE 
   maskerein$ = "REINGUEB"
   maskeraus$ = "RAINGUEB"
 END IF 
 WHILE _formend% = 0
 MOUSE OFF 
   REIusub% = 0
   IF dat$ LIKE "REINGANG" THEN 
     IF FORM <> maskerein$ THEN 
       SET HEADING title$ + " - Rechnungseingangserfassung"
       FILE "REINGANG"
       INDEX belegnr.REINGANG
       SELECT FIRST 
       OPEN FORM GPrjForm$ + maskerein$
       SET f = superbase.form
       IF eurosupport$ = "FALSE" THEN 
         f.waehrmask.visible = 0
         f.labelwaehr.visible = 0
       ELSE 
         f.waehrmask.visible = - 1
         f.labelwaehr.visible = - 1
       END IF 
       ON ERROR GOTO w180120051
       IF GRechSu1% = - 1 THEN 
         f.suerg.enabled = - 1
         f.suerg.visible = - 1
       ELSE 
         f.suerg.enabled = 0
         f.suerg.visible = 0
       END IF 
w180120051: 
       ON ERROR GOTO ErrorHandler
       SET STATUS "Rechnungseingangserfassung"
       CALL MNREIN()
       IF aktform$ LIKE "ADR*" THEN 
         SELECT FIRST FILE "Adressen" INDEX codeku.adressen
         SELECT FORM KEY knr% FILE "Adressen" INDEX codeku.adressen
         SELECT FIRST FILE "REINGANG" INDEX codeku.reingang
         SELECT FORM KEY knr% FILE "reingang" INDEX codeku.reingang
       END IF 
       FORM 
       SET DISPLAY ON 
     END IF 
   ELSE 
     IF FORM <> maskeraus$ THEN 
       SET HEADING title$ + " - Rechnungsausgangserfassung"
       FILE "RAUSGANG"
       INDEX belegnr.dat$
       SELECT FIRST 
       OPEN FORM GPrjForm$ + maskeraus$
       SET f = superbase.form
       IF eurosupport$ = "FALSE" THEN 
         f.waehrmask.visible = 0
         f.labelwaehr.visible = 0
       ELSE 
         f.waehrmask.visible = - 1
         f.labelwaehr.visible = - 1
       END IF 
       ON ERROR GOTO w180120052 
       IF GRechSu1% = - 1 THEN 
         f.suerg.enabled = - 1
         f.suerg.visible = - 1
       ELSE 
         f.suerg.enabled = 0
         f.suerg.visible = 0
       END IF 
w180120052: 
       ON ERROR GOTO ErrorHandler
 
       SET STATUS "Rechnungsausgangserfassung"
       CALL MNREIN()
       IF aktform$ LIKE "ADR*" THEN 
         SELECT FIRST FILE "Adressen" INDEX codeku.adressen
         SELECT FORM KEY knr% FILE "Adressen" INDEX codeku.adressen
         SELECT FIRST FILE "RAUSGANG" INDEX codeku.rausgang
         SELECT FORM KEY knr% FILE "rausgang" INDEX codeku.rausgang
       END IF 
       FORM 
       SET DISPLAY ON 
     END IF 
   END IF 
   MENU ON 
   MOUSE ON 
   
   FORM 
   MOUSE ON 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU FOR 600
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE REIusub%
   CASE 1
     REM Neu
     IF dat$ LIKE "reingang" THEN 
         CALL RENeu(dat$)
         REM 191098
         codere% = codere.dat$
         SELECT KEY codere% FILE dat$ INDEX codere.dat$
         REIsub% = 2
         CALL ReingPos(codere%,dat$)
     ELSE 
       REQUEST "Mîchten Sie eine Handbuchung erfassen?","",130,req%
       IF req% = 1 THEN 
         CALL RAUSNeu(dat$)
         REM 191098
         codere% = codere.dat$
         SELECT KEY codere% FILE dat$ INDEX codere.dat$
      
         REIsub% = 2
         CALL ReingPos(codere%,dat$)
       END IF 
     END IF 
   CASE 2
     IF GCodie% = - 1 THEN 
     sprung% = 1
     CALL RESuche(dat$,sprung%)
     END IF 
   CASE 3
     REM Drucken
     CALL DRUCKREA(dat$)
   CASE 10
     codere% = codere.dat$
     SELECT KEY codere% FILE dat$ INDEX codere.dat$
     
     CALL ReingPos(codere%,dat$)
   CASE 11
     sprung% = 0
     CALL RESuche(dat$,sprung%)
   CASE 111
     IF dat$ LIKE "reingang" THEN 
       IF UCASE$ ( FORM ) = "REINGUEB" THEN 
         maskerein$ = "REINGUEE"
         mastform$ = "EUR"
         euromaske% = 1
       ELSE 
         IF UCASE$ ( FORM ) = "REINGUEE" THEN 
           maskerein$ = "REINGUEB"
           mastform$ = ""
           euromaske% = 0
         END IF 
       END IF 
     END IF 
     IF dat$ LIKE "rausgang" THEN 
       IF UCASE$ ( FORM ) = "RAINGUEB" THEN 
         maskeraus$ = "RAINGUEE"
         mastform$ = "EUR"
         euromaske% = 1
       ELSE 
         IF UCASE$ ( FORM ) = "RAINGUEE" THEN 
           maskeraus$ = "RAINGUEB"
           mastform$ = ""
           euromaske% = 0
         END IF 
       END IF 
     END IF 
   CASE 112
     REM Summendruck Buchungskonten
     REM CALL Fehler("Summendruck Buchungskonten","")
     CALL BktoSumDru(dat$)
   END SELECT 
   REM CALL BMCheckMail()
 WEND 
endreing071020031: 
 IF GCODieRuf% <> 0 OR GCODieRuf1% <> 0 OR GCODieRuf2% <> 0 THEN 
   ret% = CALL ("_SearchClose")
 END IF 
 UNLOCK ALL FILE dat$
 CLOSE FILE dat$
 IF OPEN ("WAGRUPPE") THEN CLOSE FILE "WAGRUPPE"
 IF OPEN ("Warenart") THEN CLOSE FILE "Warenart"
 GRechSu1% = 0
 GCodieRuf% = 0
 GCodieRuf1% = 0
 GCodieRuf2% = 0
 Lieferant$(0) = ""
 ProdGruppen1$(0) = ""
 _formend% = 0
 REM IF FileChanged%(dat$) = 1 THEN CALL QuickStore(dat$)
 
 END SUB 
 
 
 ' Rechnungseingangsverwaltung 
 
SUB ReingPos(codere%,dat$)
 IF disabled%("Reingang") THEN END SUB 
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 CALL DFile(3,"REINGANG" + _fpw$)
 CALL DFile(3,"RAUSGANG" + _fpw$)
 CALL DFile(3,"MAHNUNG" + _fpw$)
 CALL DFile(3,"REINGANG" + _fpw$)
 CALL DFile(2,"ZERO" + _fpw$)
  _formend% = 0
 SET STATUS "Bereit"
 maskerein1$ = "REINGANG"
 maskeraus1$ = "RAINGANG"
 IF ProjectJN$ = "TRUE" THEN 
   maskerein1$ = "PRJREIN"
   maskeraus1$ = "PRJRAUS"
 END IF 
 seitenr% = 0
 WHILE _formend% = 0
   IF REIsub% <> 2 THEN REIsub% = 0
   IF dat$ LIKE "REINGANG" THEN 
     IF FORM <> maskerein1$ THEN 
       SET HEADING title$ + " - Rechnungseingangserfassung"
       IF UCASE$ ( FORM ) = "REINGUEB" THEN 
         IF ProjectJN$ = "TRUE" THEN 
           maskerein1$ = "PRJREIN"
           euromaske% = 0
         ELSE 
           maskerein1$ = "REINGANG"
           euromaske% = 0
         END IF 
       ELSE 
         IF UCASE$ ( FORM ) = "REINGUEE" OR UCASE$ ( FORM ) LIKE "ADRR*" THEN 
           IF ProjectJN$ = "TRUE" THEN 
             maskerein1$ = "PRJREINE"
             euromaske% = 1
           ELSE 
             maskerein1$ = "REINGANE"
             euromaske% = 1
           END IF 
         END IF 
       END IF 
       OPEN FORM GPrjForm$ + maskerein1$
       SET f = superbase.form
       IF eurosupport$ = "FALSE" THEN 
         f.waehrmask.visible = 0
         f.labelwaehr.visible = 0
       ELSE 
         f.waehrmask.visible = - 1
         f.labelwaehr.visible = - 1
       END IF 
       ON ERROR GOTO w180120053
       IF GRechSu1% = - 1 THEN 
         f.suerg.enabled = - 1
         f.suerg.visible = - 1
       ELSE 
         f.suerg.enabled = 0
         f.suerg.visible = 0
       END IF 
w180120053: 
       
       ON ERROR GOTO ErrorHandler
       SET STATUS "Rechnungseingangserfassung"
       FILE "REINGANG"
       CALL MNREIN()
       INDEX CodeRE.dat$
       SELECT FIRST FILE dat$ INDEX codere.dat$
       SELECT FORM KEY codere% FILE dat$ INDEX codere.dat$
       REM SELECT FORM KEY codeku.dat$ FILE "Adressen" INDEX codeku.adressen
       CALL REUpdate(dat$)
       IF codedok.reingang > 0 THEN 
         reanz1$ = "Rechnung anzeigen Æ"
       ELSE 
         reanz1$ = "Rechnung anzeigen"
       END IF 
       FORM 
       SET DISPLAY ON 
     END IF 
   ELSE 
     IF FORM <> maskeraus1$ THEN 
       SET HEADING title$ + " - Rechnungsausgangserfassung"
       IF UCASE$ ( FORM ) = "RAINGUEB" THEN 
         IF ProjectJN$ = "TRUE" THEN 
           maskeraus1$ = "PRJRAUS"
           euromaske% = 0
         ELSE 
           maskeraus1$ = "RAINGANG"
           euromaske% = 0
         END IF 
       ELSE 
         IF UCASE$ ( FORM ) = "RAINGUEE" OR UCASE$ ( FORM ) LIKE "ADRR*" THEN 
           IF ProjectJN$ = "TRUE" THEN 
             maskeraus1$ = "PRJRAUSE"
             euromaske% = 1
           ELSE 
             maskeraus1$ = "RAINGANE"
             euromaske% = 1
           END IF 
         END IF 
       END IF 
       OPEN FORM GPrjForm$ + maskeraus1$
       SET f = superbase.form
       IF eurosupport$ = "FALSE" THEN 
         f.waehrmask.visible = 0
         f.labelwaehr.visible = 0
       ELSE 
         f.waehrmask.visible = - 1
         f.labelwaehr.visible = - 1
       END IF 
       ON ERROR GOTO w180120054
       IF GRechSu1% = - 1 THEN 
         f.suerg.enabled = - 1
         f.suerg.visible = - 1
       ELSE 
         f.suerg.enabled = 0
         f.suerg.visible = 0
       END IF 
w180120054: 
       ON ERROR GOTO ErrorHandler 
       IF seitenr% > 0 THEN FORM seitenr%
       SET STATUS "Rechnungsausgangserfassung"
       FILE "RAUSGANG"
       CALL MNRAUS()
       INDEX CodeRE.dat$
       SELECT FORM KEY codere% FILE dat$ INDEX codere.dat$
       REM SELECT FORM KEY codeku.dat$ FILE "Adressen" INDEX codeku.adressen
       IF dat$ LIKE "rausgang" AND MahnJN.rausgang LIKE "j" AND EXISTS (codems.rausgang,codems.mahnung) THEN 
         f.mahnung.enabled = - 1
         mahn1$ = "Mahnungen Æ"
       ELSE 
         f.mahnung.enabled = - 1
         mahn1$ = "Mahnungen"
       END IF 
       IF dat$ LIKE "rausgang" AND GutschriftJN.rausgang LIKE "J" THEN 
         ON ERROR GOTO w240220094
         f.oldReNr.visible = - 1
         oldReNr$ = "von Rech: " + oldReNr.rausgang
 
         
         f.buchnrre.visible = - 1
         f.buchnrretxt.visible = - 1
w240220094: 
         ON ERROR GOTO ErrorHandler
       ELSE 
         ON ERROR GOTO w240220095
         oldReNr$ = ""
         f.oldReNr.visible = 0
         f.buchnrre.visible = 0
         f.buchnrretxt.visible = 0
w240220095: 
         ON ERROR GOTO ErrorHandler
       END IF 
       IF Handbuchung.dat$ > 0 THEN 
         f.mahnung.enabled = 0
       ELSE 
         f.mahnung.enabled = - 1
       END IF 
       CALL REUpdate(dat$)
       SELECT FORM KEY codere% FILE dat$ INDEX codere.dat$
       SELECT KEY codere% FILE "teilraus" INDEX codere.teilraus
       FORM 
       SET DISPLAY ON 
     ELSE 
       IF seitenr% < 2 THEN 
         IF dat$ LIKE "rausgang" AND MahnJN.rausgang LIKE "j" AND EXISTS (codems.rausgang,codems.mahnung) THEN 
           f.mahnung.enabled = - 1
           mahn1$ = "Mahnungen Æ"
         ELSE 
           f.mahnung.enabled = - 1
           mahn1$ = "Mahnungen"
         END IF 
         IF Handbuchung.dat$ > 0 THEN 
           f.mahnung.enabled = 0
         ELSE 
           f.mahnung.enabled = - 1
         END IF 
         codere% = codere.dat$
         CALL REUpdate(dat$)
         SELECT FORM KEY codere% FILE dat$ INDEX codere.dat$
         SELECT KEY codere% FILE "teilraus" INDEX codere.teilraus
       END IF 
     END IF 
   END IF 
   MENU ON 
   MOUSE ON 
   
   
   FORM 
   CALL ButEnabled()
   f.namebut.enabled = - 1
   f.warenart.enabled = - 1
   f.kopy.enabled = - 1
   f.loesche.enabled = - 1
   f.waehrmask.enabled = - 1
   f.sichern.enabled = 0
   CALL ClearKBDBuffer()
   IF dat$ LIKE "reingang" THEN 
       IF codedok.reingang > 0 THEN 
         reanz1$ = "Rechnung anzeigen Æ"
       ELSE 
         reanz1$ = "Rechnung anzeigen"
       END IF 
       FORM 
   END IF 
   IF REIsub% <> 2 THEN WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE REIsub%
   CASE 1
     REM Neu
     IF dat$ LIKE "reingang" THEN 
       REM CALL RAUSNeu(dat$)
       CALL RENeu(dat$)
       CALL REUpdate(dat$)
     ELSE 
       REQUEST "Mîchten Sie eine Handbuchung erfassen?","",130,req%
       IF req% = 1 THEN 
         CALL RAUSNeu(dat$)
         codere% = codere.dat$
         CALL REUpdate(dat$)
       END IF 
     END IF 
   CASE 2
     REM Bearbeiten
     CALL ButDesabled()
     f.sichern.enabled = - 1
     f.namebut.enabled = 0
     f.warenart.enabled = 0
     f.loesche.enabled = 0
     f.kopy.enabled = 0
     f.waehrmask.enabled = 0
     IF UCASE$ ( FORM ) <> "PRJRAUSE" THEN f.waehr.enabled = 0
     f.projekt.enabled = 0
     f.kund.enabled = 0
     IF dat$ LIKE "rausgang" THEN f.vorg.enabled = 0
     IF dat$ LIKE "rausgang" THEN f.mahnung.enabled = 0
     IF dat$ LIKE "rausgang" THEN f.teilzahlung.enabled = 0
     IF dat$ LIKE "rausgang" THEN f.rech.enabled = 0
     ENTER LRENummer.dat$,0
     CALL ButEnabled()
     f.sichern.enabled = 0
     f.namebut.enabled = - 1
     f.warenart.enabled = - 1
     f.loesche.enabled = - 1
     f.kopy.enabled = - 1
     f.waehrmask.enabled = - 1
     IF UCASE$ ( FORM ) <> "PRJRAUSE" THEN f.waehr.enabled = - 1
     f.projekt.enabled = - 1
     f.kund.enabled = - 1
     IF dat$ LIKE "rausgang" THEN f.vorg.enabled = - 1
     IF dat$ LIKE "rausgang" THEN f.mahnung.enabled = - 1
     IF dat$ LIKE "rausgang" THEN f.teilzahlung.enabled = - 1
     IF dat$ LIKE "rausgang" THEN f.rech.enabled = - 1
     CALL REUpdate(dat$)
   CASE 3
     REM Sichern
     CALL QuickStore(dat$)
     CALL ButEnabled()
     f.namebut.enabled = - 1
     f.warenart.enabled = - 1
     f.loesche.enabled = - 1
     f.kopy.enabled = - 1
     f.waehrmask.enabled = - 1
     CALL REUpdate(dat$)
   CASE 4
     ENTER END 
     CALL ButEnabled()
     f.namebut.enabled = - 1
     f.warenart.enabled = - 1
     f.loesche.enabled = - 1
     f.kopy.enabled = - 1
     f.waehrmask.enabled = - 1
     CALL REUpdate(dat$)
   CASE 5
     REM Lîschen
     
     codere% = codere.dat$
     SELECT KEY codere% LOCK FILE dat$ INDEX codere.dat$
     REQUEST "Datensatz wirklich lîschen?","",130,req%
     MOUSE OFF 
     IF req% = 1 THEN 
       codere% = codere.dat$
       SELECT REMOVE 
       _formend% = 1
     END IF 
     CALL REUpdate(dat$)
     SET STATUS ""
     MOUSE ON 
   CASE 6
     SELECT FORM PREVIOUS 
     codere% = codere.dat$
     IF EOF (dat$) THEN REQUEST "Dateianfang"
     CALL REUpdate(dat$)
     FORM 
   CASE 7
     SELECT FORM NEXT 
     codere% = codere.dat$
     IF EOF (dat$) THEN REQUEST "Dateiende"
     CALL REUpdate(dat$)
     FORM 
   CASE 11
     REM Suchen
     CALL RESuche(dat$,0)
     codere% = codere.dat$
     CALL REUpdate(dat$)
   CASE 12
     REM Kopieren
     CALL RECopy(dat$)
     codere% = codere
     REIsub% = 2
     CALL REUpdate(dat$)
   CASE 13
      IF Codeku.dat$ > 0 THEN 
        CALL WriteINI(_projekt$,"LastAdress", STR$ (Codeku.dat$,"000000"))
        CALL ADRESSEN()
      ELSE 
        CALL Fehler("Sie mÅssen erst einen Kunden/Lieferanten Åber den nebenstehenden Button zuordnen, bevor Sie die Adresse ansteuern kînnen!","")
      END IF 
   CASE 14
     REM Button Rechnung
     IF codems.rausgang > 0 THEN 
       knr% = codeku.rausgang
       SELECT FIRST FILE "Adressen" INDEX codeku.adressen
       SELECT KEY knr% FILE "Adressen" INDEX codeku.adressen
       cums% = codems.rausgang
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT KEY cums% FILE "master" INDEX codems.master
       IF GutschriftJN LIKE "J" THEN 
         CALL ADRGutschr()
       ELSE 
         CALL ADRRechnung()
       END IF 
     ELSE 
       CALL Fehler("Dieser Buchung ist keine maschinenerstellte Rechnung zugeordnet!","Es handelt sich wahrscheinlich um eine Handbuchung!")
     END IF 
   CASE 15
     REM Aufruf Ergebnisformular
     sprung% = 1
     CALL RESuche(dat$,sprung%)
   CASE 111
     IF dat$ LIKE "reingang" THEN 
       IF UCASE$ ( FORM ) = "REINGANG" OR UCASE$ ( FORM ) = "PRJREIN" THEN 
         IF UCASE$ ( FORM ) = "REINGANG" THEN 
           maskerein1$ = "REINGANE"
           euromaske% = 1
         END IF 
         IF UCASE$ ( FORM ) = "PRJREIN" THEN 
           maskerein1$ = "PRJREINE"
           euromaske% = 1
         END IF 
       ELSE 
         IF UCASE$ ( FORM ) = "REINGANE" OR UCASE$ ( FORM ) = "PRJREINE" THEN 
           IF UCASE$ ( FORM ) = "REINGANE" THEN 
             maskerein1$ = "REINGANG"
             euromaske% = 0
           END IF 
           IF UCASE$ ( FORM ) = "PRJREINE" THEN 
             maskerein1$ = "PRJREIN"
             euromaske% = 0
           END IF 
         END IF 
       END IF 
     END IF 
     IF dat$ LIKE "rausgang" THEN 
       seitenr% = PAGE 
       IF UCASE$ ( FORM ) = "RAINGANG" OR UCASE$ ( FORM ) = "PRJRAUS" THEN 
         IF UCASE$ ( FORM ) = "RAINGANG" THEN 
           maskeraus1$ = "RAINGANE"
           euromaske% = 1
           mastform$ = "EUR"
         END IF 
         IF UCASE$ ( FORM ) = "PRJRAUS" THEN 
           maskeraus1$ = "PRJRAUSE"
           euromaske% = 1
           mastform$ = "EUR"
         END IF 
       ELSE 
         IF UCASE$ ( FORM ) = "RAINGANE" OR UCASE$ ( FORM ) = "PRJRAUSE" THEN 
           IF UCASE$ ( FORM ) = "RAINGANE" THEN 
             maskeraus1$ = "RAINGANG"
             euromaske% = 0
             mastform$ = ""
           END IF 
           IF UCASE$ ( FORM ) = "PRJRAUSE" THEN 
             maskeraus1$ = "PRJRAUS"
             euromaske% = 0
             mastform$ = ""
           END IF 
         END IF 
       END IF 
     END IF 
     CALL REUpdate(dat$)
   CASE 112
     REM Auswahl der WÑhrung
     CALL RERAWaehrung(dat$)
     CALL REUpdate(dat$)
   CASE 113
     IF dat$ LIKE "RAUSGANG" THEN 
       codems% = codems.rausgang
       codeku% = codeku.rausgang
       CALL DFile(3,"UMSATZ" + _fpw$)
       IF EXISTS (codems%,codems.mahnung) THEN 
         CALL Mahnung(codems%,euromas%)
       ELSE 
         SELECT FIRST FILE "Adressen" INDEX codeku.adressen
         SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
         IF mahnsperre.rausgang LIKE "j" OR mahnsperre.adressen LIKE "j" THEN 
           IF mahnsperre.adressen LIKE "j" THEN 
             CALL Fehler("ACHTUNG es wurde in der Adresse die generelle Mahnsperre gesetzt!!!","")
             GOTO e22120602
           ELSE 
             CALL Fehler("ACHTUNG Mahnsperre existiert!!!","Bevor Sie zu dieser Rechnung eine weitere Mahnung erfassen kînnen, mÅssen Sie im Rechnungsausgang die Mahnsperre zu dieser Rechnung aufheben!")
             GOTO e22120602
           END IF 
         END IF 
         IF erledigt.rausgang LIKE "j" THEN 
           CALL Fehler("Die Rechnung wurde als <vollstÑndig erledigt> gekennzeichnet, deshalb kann hier keine Mahnung erfa·t werden!","")
           GOTO e22120602
         END IF 
         REQUEST "Es existiert zu dieser Rechnung noch keine Mahnung!","Wollen Sie eine neue Mahnung erzeugen?",130,req1%
         IF req1% = 1 THEN 
           CALL DFile(3,"ABZUGANG" + _fpw$)
           CALL DFile(2,"OFFICE\AKQUISE" + _fpw$)
           CALL DFile(3,"MASTER" + _fpw$)
           FILE "abzugang"
           IF NOT EXISTS (codems%,codems.abzugang) THEN 
             REQUEST "Es existiert zu dieser Rechnung kein Eintrag in der offenen Postenliste!","Wollen Sie einen Eintrag erzeugen?",130,req2%
             IF req2% = 1 THEN 
               SELECT KEY codems% LOCK FILE "master" INDEX Codems.master
               CALL MSBuchung(codems%,0)
               SELECT KEY codems% LOCK FILE "ABZUGANG" INDEX Codems.ABZUGANG
               _cuaz% = codeaz.abzugang
               buchungstext.ABZUGANG = "*M*" + DATE$ ( TODAY ,"dd.mm.yyyy") + " " + buchungstext.ABZUGANG
               CALL QuickStore("ABZUGANG")
               SELECT KEY _cuaz% FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
               SELECT KEY CodeMS.abzugang FILE "master" INDEX CodeMS.master
               REM codems% = CodeMS.abzugang
               bruttosum% = GesBrutto.Master
             END IF 
           ELSE 
             SELECT KEY codems% LOCK FILE "ABZUGANG" INDEX Codems.ABZUGANG
             _cuaz% = codeaz.abzugang
             buchungstext.ABZUGANG = "*M*" + DATE$ ( TODAY ,"dd.mm.yyyy") + " " + buchungstext.ABZUGANG
             CALL QuickStore("ABZUGANG")
             SELECT KEY _cuaz% FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
             SELECT KEY CodeMS.abzugang FILE "master" INDEX CodeMS.master
             REM codems% = CodeMS.abzugang
             bruttosum% = GesBrutto.Master
           END IF 
           FILE GAkquiDat$
           BLANK 
           codeaq.GAkquiDat$ = SER (GAkquiDat$,1)
           codeaq% = codeaq.GAkquiDat$
           CodeKU.GAkquiDat$ = CodeKU.ABZUGANG
           CodeMA.GAkquiDat$ = vcodema%
           CodeAK.GAkquiDat$ = 999998
           Wertung.GAkquiDat$ = 0
           Sprachnotiz.GAkquiDat$ = "n"
           Datum.GAkquiDat$ = TODAY 
           Termin.GAkquiDat$ = TODAY 
           erledigt_Termin.GAkquiDat$ = "n"
           erledigt_Vorg.GAkquiDat$ = "n"
           SELECT KEY CodeKU.ABZUGANG FILE "adressen" INDEX codeku.adressen
           nachname.GAkquiDat$ = nachname.adressen
           SELECT KEY codema.GAkquiDat$ FILE "supervis" INDEX codema.supervis
           Bearbeiter.GAkquiDat$ = nachname.supervis
           Notiz.GAkquiDat$ = "MAHNUNG zur Rechnung: " + "(" + Nummer.ABZUGANG + ") " + Buchungstext.ABZUGANG + " BRUTTOBETRAG: " + LTRIM$ ( STR$ (bruttosum%,"999999999999.00")) + " DM"
           CALL QuickStore(GAkquiDat$)
 
           REM 1981111 Datensatz in Datei Mahnung aufnehmen bzw. dorthingehen,um neue Mahnung zu kreieren
           CALL MahnCreate(codems%,codeaq%)
         END IF 
         FILE dat$


       END IF 
     END IF 
     CALL REUpdate(dat$)
e22120602: 
   CASE 114
     IF UCASE$ ( FORM ) LIKE "PRJREIN*" THEN 
       codere1% = codere.reingang
       Gcodere% = codere.reingang
       REM Gcodems% = codems.reingang
       CALL RTeilrein()
       codere% = Gcodere%
       SELECT FIRST FILE "reingang" INDEX codere.reingang
       SELECT KEY codere1% LOCK FILE "reingang" INDEX codere.reingang
       CALL Sich("reingang")
       maskeraus1$ = "PRJREINE"
       euromaske% = 1
     ELSE 
       codere1% = codere.rausgang
       CALL RTeilraus()
       SELECT FIRST FILE "rausgang" INDEX codere.rausgang
       SELECT KEY codere1% FILE "rausgang" INDEX codere.rausgang
       codere% = codere1%
       IF RIGHT$ ( UCASE$ ( FORM ),1) LIKE "E" THEN 
           IF ProjectJN$ = "TRUE" THEN 
             maskeraus1$ = "PRJRAUSE"
             euromaske% = 1
           ELSE 
             maskeraus1$ = "RAINGANE"
             euromaske% = 1
           END IF 
       ELSE 
         IF ProjectJN$ = "TRUE" THEN 
           maskeraus1$ = "PRJRAUS"
           euromaske% = 0
         ELSE 
           maskeraus1$ = "RAINGANG"
           euromaske% = 0
         END IF 
       END IF 
     END IF 
   CASE 123
     REM Zahlungseingang Vorgang erledigen
     codere% = codere.reingang
     Gcodere% = codere%
      IF erledigt.reingang <> "J" THEN 
        REQUEST "Wollen Sie den Gesamtvorgang als erledigt kennzeichnen?","",130,req%
        IF req% = 1 THEN 
          IF EXISTS (codere%,codere.teilrein) THEN 
            dat1$ = "teilrein"
            quell$ = "reingang"
ST080220052: 
            FILE dat1$
            INDEX codere.dat1$
            SELECT FIRST 
            SELECT KEY codere% FILE dat1$ INDEX codere.dat1$
            codeteil% = codeteil.dat1$
            umr% = umrechnung.dat1$
            sumz% = 0
            sumzeu% = 0
            i% = 0
            mahn% = 0
            mahneu% = 0
            erledigt$ = "J"
            WHILE NOT EOF (dat1$) AND codere% = codere.dat1$
              
              IF codere% = codere.dat1$ THEN 
                i% = i% + 1
                IF euromaske% = 0 THEN 
                  IF erledigt.dat1$ = "J" THEN 
                    sumz% = sumz% + gesbrutto.dat1$
                    IF UCASE$ (mahnjn.dat1$) = "J" THEN mahn% = mahn% + gesbrutto.dat1$
                  ELSE 
                    erledigt$ = "N"
                  END IF 
                ELSE 
                  IF erledigt.dat1$ = "J" THEN 
                    sumzeu% = sumzeu% + gesbruttoeu.dat1$
                    IF UCASE$ (mahnjn.dat1$) = "J" THEN mahneu% = mahneu% + gesbruttoeu.dat1$
                  ELSE 
                    erledigt$ = "N"
                  END IF 
                END IF 
              END IF 
              SELECT NEXT 
            WEND 
            IF euromaske% = 0 THEN 
              IF sumz% <> 0 THEN sumzeu% = sumz% / umr% ELSE sumzEu% = 0
              IF mahn% <> 0 THEN mahneu% = mahn% / umr% ELSE mahnEu% = 0
            ELSE 
              IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr% ELSE sumz% = 0
              IF mahneu% <> 0 THEN mahn% = mahneu% * umr% ELSE mahn% = 0
            END IF 
            FILE quell$
            INDEX codere.quell$
            SELECT FIRST 
            SELECT KEY codere% LOCK FILE quell$ INDEX codere.quell$
            SummeTeil.quell$ = sumz%
            SummeTeileu.quell$ = sumzeu%
            SummeMahn.quell$ = mahn%
            SummeMahnEU.quell$ = mahneu%
            SELECT KEY codere% FILE dat1$ INDEX codere.dat1$
            IF UCASE$ (gezmitskonto.quell$) = "J" THEN 
              test% = Gesbrutto.quell$ + gesmahn.quell$ - skonto.quell$
              testEu% = GesbruttoEU.quell$ + gesmahnEU.quell$ - skontoEU.quell$
            ELSE 
              test% = Gesbrutto.quell$ + gesmahn.quell$
              testEu% = GesbruttoEU.quell$ + gesmahnEU.quell$
            END IF 
            sumz$ = STR$ (sumz%,"999999999.00")
            test$ = STR$ (test%,"999999999.00")
            sumz% = VAL (sumz$)
            test% = VAL (test$)
            sumzeu$ = STR$ (sumzeu%,"999999999.00")
            testeu$ = STR$ (testeu%,"999999999.00")
            sumzeu% = VAL (sumz$)
            testeu% = VAL (test$)
            IF sumz% >= test% OR sumzeu% >= testeu% THEN 
              IF sumz% > test% OR sumzEu% > testeu% THEN 
                CALL Fehler ("ACHTUNG die Summe der Teilzahlungen ist grî·er als der Rechnungsbetrag!","BITTE PRöFEN!")
              END IF 
              REQUEST "Die Summe der Teilzahlungen deckt die Rechnungssumme!","Soll der Gesamtvorgang als erledigt gekennzeichnet werden?",130,req2%
              IF req2% = 1 THEN 
                erledigt.quell$ = "J"
              ELSE 
                erledigt.quell$ = "N"
              END IF 
            END IF 
            IF i% = 1 OR (gezahltam.quell$ < 1 AND ktoauszugsnr.quell$ = "") THEN 
              SELECT KEY codeteil% FILE dat1$ INDEX codeteil.dat1$
              IF gezahltam.dat1$ > 0 AND erledigt.dat1$ = "J" THEN 
                IF gezahltam.dat1$ > 0 AND erledigt.dat1$ = "J" AND ktoauszugsnr.dat1$ <> "" THEN 
                  gezahltam.quell$ = gezahltam.dat1$
                  ktoauszugsnr.quell$ = ktoauszugsnr.dat1$
                  KasseJN.quell$ = KasseJN.dat1$
                ELSE 
                  IF KasseJN.dat1$ <> "J" AND ktoauszugsnr.dat1$ = "" THEN 
                    REQUEST "Teilvorgang wurde als erledigt gekennzeichnet aber keine ","Kontoauszugsnummer vergeben! Ist das richtig?",130,req3%
                    IF req3% = 1 THEN 
                      gezahltam.quell$ = gezahltam.dat1$
                      ktoauszugsnr.quell$ = "<keine Angaben>"
                    ELSE 
                      erledigt.quell$ = "N"
                    END IF 
                  ELSE 
                    gezahltam.quell$ = gezahltam.dat1$
                    KasseJN.quell$ = "J"
                    IF ktoauszugsnr.dat1$ <> "" THEN ktoauszugsnr.quell$ = ktoauszugsnr.dat1$
                    IF ktoauszugsnr.dat1$ = "" THEN ktoauszugsnr.quell$ = "Kasseneingang"
                  END IF 
                END IF 
              END IF 
            END IF 
            IF i% = 1 THEN 
              IF UCASE$ (gezmitskonto.dat1$) = "J" THEN gezmitskonto.dat1$ = "J"
            END IF 
            CALL QuickStore(quell$)
            SELECT KEY codere% LOCK FILE quell$ INDEX codere.quell$
 
            REM GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$ - skonto.dat$
            IF test% <> SummeTeil.dat1$ THEN 
              REQUEST "Summe der Teilzahlungen stimmt nicht mit der Rechnungssumme Åberein?","Trotzdem als erledigt kennzeichnen?",130,req4%
              IF req4% = 1 THEN 
                erledigt.quell$ = "J"
              ELSE 
                erledigt.quell$ = "N"
              END IF 
              CALL QuickStore(quell$)
            END IF 
          ELSE 
            REQUEST "Es existiert noch keine Teilzahlung!","Soll dieser automatisch erzeugt werden",130,req5%
            IF req5% = 1 THEN 
              CALL RENeuTeil("Teilrein","reingang")
              SELECT KEY codere% LOCK FILE "teilrein" INDEX codere.teilrein
              codeteil% = codeteil.teilrein
              SELECT KEY codere% FILE "reingang" INDEX codere.reingang
              Gesbrutto.teilrein = Gesbrutto.reingang
              GesbruttoEU.teilrein = GesbruttoEu.reingang
              GutschriftJN.teilrein = GutschriftJN.reingang
              erledigt.teilrein = "J"
              rerlauto% = 1
              CALL SichTeil("Teilrein",1)
              REM CALL QuickStore("Teilrein")
              rerlauto% = 1
              CALL RTeilrein()
              SELECT FORM KEY codeteil% FILE "Teilrein" INDEX codeteil.teilrein
              FORM 
            END IF 
          END IF 
        END IF 
      ELSE 
        REQUEST "Wollen Sie den Gesamtvorgang als UNERLEDIGT kennzeichnen?","",130,req6%
        IF req6% = 1 THEN 
          SELECT KEY codere% LOCK FILE "reingang" INDEX codere.reingang
          erledigt.reingang = "N"
          CALL QuickStore("reingang")
        END IF 
      END IF 
      REM codere% = Gcodere%
      SELECT FORM KEY codere% FILE "reingang" INDEX codere.reingang
      CALL REUpdate(dat$)
   CASE 124
      REM Vorgang erledigen
      codere% = codere.rausgang
      REM f.bearbt2.enabled = - 1
      REM f.sicht2.enabled = 0
      REM f.abbrucht2.enabled = 0
      REM f.abbrucht2.visible = 0
      REM f.loet2.enabled = - 1
      REM f.eurot2.enabled = - 1
      REM f.zurt2.enabled = - 1
      IF erledigt.rausgang <> "J" THEN 
        REQUEST "Wollen Sie den Gesamtvorgang als erledigt kennzeichnen?","",130,req%
        IF req% = 1 THEN 
          IF EXISTS (codere%,codere.teilraus) THEN 
            dat1$ = "teilraus"
            quell$ = "rausgang"
ST080220002: 
            FILE dat1$
            INDEX codere.dat1$
            SELECT FIRST 
            SELECT KEY codere% FILE dat1$ INDEX codere.dat1$
            codeteil% = codeteil.dat1$
            umr% = umrechnung.dat1$
            sumz% = 0
            sumzeu% = 0
            i% = 0
            mahn% = 0
            mahneu% = 0
            erledigt$ = "J"
            WHILE NOT EOF (dat1$) AND codere% = codere.dat1$
              
              IF codere% = codere.dat1$ THEN 
                i% = i% + 1
                IF euromaske% = 0 THEN 
                  IF erledigt.dat1$ = "J" THEN 
                    sumz% = sumz% + gesbrutto.dat1$
                    IF UCASE$ (mahnjn.dat1$) = "J" THEN mahn% = mahn% + gesbrutto.dat1$
                  ELSE 
                    erledigt$ = "N"
                  END IF 
                ELSE 
                  IF erledigt.dat1$ = "J" THEN 
                    sumzeu% = sumzeu% + gesbruttoeu.dat1$
                    IF UCASE$ (mahnjn.dat1$) = "J" THEN mahneu% = mahneu% + gesbruttoeu.dat1$
                  ELSE 
                    erledigt$ = "N"
                  END IF 
                END IF 
              END IF 
              SELECT NEXT 
            WEND 
            IF euromaske% = 0 THEN 
              IF sumz% <> 0 THEN sumzeu% = sumz% / umr% ELSE sumzEu% = 0
              IF mahn% <> 0 THEN mahneu% = mahn% / umr% ELSE mahnEu% = 0
            ELSE 
              IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr% ELSE sumz% = 0
              IF mahneu% <> 0 THEN mahn% = mahneu% * umr% ELSE mahn% = 0
            END IF 
            FILE quell$
            INDEX codere.quell$
            SELECT FIRST 
            SELECT KEY codere% LOCK FILE quell$ INDEX codere.quell$
            SummeTeil.quell$ = sumz%
            SummeTeileu.quell$ = sumzeu%
            SummeMahn.quell$ = mahn%
            SummeMahnEU.quell$ = mahneu%
            SELECT KEY codere% FILE dat1$ INDEX codere.dat1$
            IF UCASE$ (gezmitskonto.rausgang) = "J" THEN 
              test% = Gesbrutto.rausgang + gesmahn.rausgang - skonto.rausgang
              testEu% = GesbruttoEU.rausgang + gesmahnEU.rausgang - skontoEU.rausgang
            ELSE 
              test% = Gesbrutto.rausgang + gesmahn.rausgang
              testEu% = GesbruttoEU.rausgang + gesmahnEU.rausgang
            END IF 
            sumz$ = STR$ (sumz%,"999999999.00")
            test$ = STR$ (test%,"999999999.00")
            sumz% = VAL (sumz$)
            test% = VAL (test$)
            sumzeu$ = STR$ (sumzeu%,"999999999.00")
            testeu$ = STR$ (testeu%,"999999999.00")
            sumzeu% = VAL (sumz$)
            testeu% = VAL (test$)
            IF sumz% >= test% OR sumzeu% >= testeu% THEN 
              IF sumz% > test% OR sumzEu% > testeu% THEN 
                CALL Fehler ("ACHTUNG die Summe der ZahlungseingÑnge ist grî·er als der geforderte Rechnungsbetrag!","BITTE PRöFEN!")
              END IF 
              REQUEST "Die Summe der ZahlungseingÑnge deckt die Rechnungssumme!","Soll der Gesamtvorgang als erledigt gekennzeichnet werden?",130,req2%
              IF req2% = 1 THEN 
                erledigt.quell$ = "J"
              ELSE 
                erledigt.quell$ = "N"
              END IF 
            END IF 
            IF i% = 1 OR (gezahltam.quell$ < 1 AND ktoauszugsnr.quell$ = "") THEN 
              SELECT KEY codeteil% FILE "teilraus" INDEX codeteil.teilraus
              IF gezahltam.teilraus > 0 AND erledigt.teilraus = "J" THEN 
                IF gezahltam.teilraus > 0 AND erledigt.teilraus = "J" AND ktoauszugsnr.teilraus <> "" THEN 
                  gezahltam.quell$ = gezahltam.teilraus
                  ktoauszugsnr.quell$ = ktoauszugsnr.teilraus
                  KasseJN.quell$ = KasseJN.teilraus
                ELSE 
                  IF KasseJN.teilraus <> "J" AND ktoauszugsnr.teilraus = "" THEN 
                    REQUEST "Teilvorgang wurde als erledigt gekennzeichnet aber keine ","Kontoauszugsnummer vergeben! Ist das richtig?",130,req3%
                    IF req3% = 1 THEN 
                      gezahltam.quell$ = gezahltam.teilraus
                      ktoauszugsnr.quell$ = "<keine Angaben>"
                    ELSE 
                      erledigt.quell$ = "N"
                    END IF 
                  ELSE 
                    gezahltam.quell$ = gezahltam.teilraus
                    KasseJN.quell$ = "J"
                    IF ktoauszugsnr.teilraus <> "" THEN ktoauszugsnr.quell$ = ktoauszugsnr.teilraus
                    IF ktoauszugsnr.teilraus = "" THEN ktoauszugsnr.quell$ = "Kasseneingang"
                  END IF 
                END IF 
              END IF 
            END IF 
            IF i% = 1 THEN 
              IF UCASE$ (gezmitskonto.dat1$) = "J" THEN gezmitskonto.rausgang = "J"
            END IF 
            CALL QuickStore(quell$)
            SELECT KEY codere% LOCK FILE "rausgang" INDEX codere.rausgang

            REM GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$ - skonto.dat$
            test$ = LTRIM$ ( STR$ (test%,"99999999.00"))
            SummeTeil% = SummeTeil.rausgang
            SummeTeil$ = LTRIM$ ( STR$ (SummeTeil%,"99999999.00"))
            IF test$ <> SummeTeil$ THEN 
              REQUEST "Summe der ZahlungseingÑnge stimmt nicht mit der Rechnungssumme Åberein?","Trotzdem als erledigt kennzeichnen?",130,req4%
              IF req4% = 1 THEN 
                erledigt.rausgang = "J"
              ELSE 
                erledigt.rausgang = "N"
              END IF 
              CALL QuickStore("rausgang")
            END IF 
            IF EXISTS (codere%,codere.master) THEN 
              SELECT KEY codere% FILE "master" INDEX codere.master
              IF codeaq.master > 0 THEN 
                SELECT KEY codeaq.master LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
                IF erledigt.quell$ = "J" THEN 
                  erledigt_Termin.GAkquiDat$ = "j"
                ELSE 
                  erledigt_Termin.GAkquiDat$ = "n"
                END IF 
                CALL QuickStore(GAkquiDat$)
              END IF 
            END IF 
            IF EXISTS (codems.rausgang,codems.master) AND codems.rausgang > 0 THEN 
              SELECT FIRST FILE "master" INDEX codems.master
              SELECT KEY codems.rausgang LOCK FILE "master" INDEX codems.master
              erledigt.master = "J"
              erledigtDatum.master = gezahltam.rausgang
              STORE FILE "master"
            END IF 
            IF EXISTS (codere%,codere.mahnung) THEN 
              SELECT KEY codere% LOCK FILE "mahnung" INDEX codere.mahnung
              IF erledigt.quell$ = "J" THEN 
                statusmahn.mahnung = "J"
                DatMahnErledigt.mahnung = TODAY 
              ELSE 
                statusmahn.mahnung = "N"
                DatMahnErledigt.mahnung = ""
              END IF 
              STORE FILE "MAHNUNG"
              UNLOCK CURRENT FILE "MAHNUNG"
              IF codeaq.mahnung > 0 THEN 
                SELECT KEY codeaq.mahnung LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
                IF erledigt.quell$ = "J" THEN 
                  erledigt_Termin.GAkquiDat$ = "j"
                ELSE 
                  erledigt_Termin.GAkquiDat$ = "n"
                END IF 
                CALL QuickStore(GAkquiDat$)
              END IF 
            END IF 
          ELSE 
            REQUEST "Es existiert noch kein Zahlungseingang!","Soll dieser automatisch erzeugt werden",130,req5%
            IF req5% = 1 THEN 
              CALL RENeuTeil("Teilraus","rausgang")
              SELECT KEY codere% LOCK FILE "teilraus" INDEX codere.teilraus
              codeteil% = codeteil.teilraus
              SELECT KEY codere% FILE "rausgang" INDEX codere.rausgang
              Gesbrutto.teilraus = Gesbrutto.rausgang
              GesbruttoEU.teilraus = GesbruttoEu.rausgang
              erledigt.teilraus = "J"
              CALL QuickStore("Teilraus")
              rerlauto% = 1
              CALL RTeilraus()
              SELECT FORM KEY codeteil% FILE "Teilraus" INDEX codeteil.teilraus
              FORM 
            END IF 
          END IF 
        END IF 
      ELSE 
        REQUEST "Wollen Sie den Gesamtvorgang als UNERLEDIGT kennzeichnen?","",130,req6%
        IF req6% = 1 THEN 
          SELECT KEY codere% LOCK FILE "rausgang" INDEX codere.rausgang
          erledigt.rausgang = "N"
          CALL QuickStore("rausgang")
          IF EXISTS (codems.rausgang,codems.master) AND codems.rausgang > 0 THEN 
            SELECT FIRST FILE "master" INDEX codems.master
            SELECT KEY codems.rausgang LOCK FILE "master" INDEX codems.master
            erledigt.master = "N"
            erledigtDatum.master = 0
            STORE FILE "master"
          END IF 
        END IF 
      END IF 
      IF EXISTS (codere%,codere.master) THEN 
        SELECT KEY codere% FILE "master" INDEX codere.master
        IF codeaq.master > 0 THEN 
          SELECT KEY codeaq.master LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
          IF erledigt.rausgang = "J" THEN 
            erledigt_Termin.GAkquiDat$ = "j"
          ELSE 
            erledigt_Termin.GAkquiDat$ = "n"
          END IF 
          CALL QuickStore(GAkquiDat$)
        END IF 
      END IF 
      IF EXISTS (codere%,codere.mahnung) THEN 
        SELECT KEY codere% LOCK FILE "mahnung" INDEX codere.mahnung
        IF erledigt.rausgang = "J" THEN 
          statusmahn.mahnung = "J"
          DatMahnErledigt.mahnung = TODAY 
        ELSE 
          statusmahn.mahnung = "N"
          DatMahnErledigt.mahnung = ""
        END IF 
        STORE FILE "MAHNUNG"
        UNLOCK CURRENT FILE "MAHNUNG"
        IF codeaq.mahnung > 0 THEN 
          SELECT KEY codeaq.mahnung LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
          IF erledigt.rausgang = "J" THEN 
            erledigt_Termin.GAkquiDat$ = "j"
          ELSE 
            erledigt_Termin.GAkquiDat$ = "n"
          END IF 
          CALL QuickStore(GAkquiDat$)
        END IF 
      END IF 
      SELECT FORM KEY codere% FILE "rausgang" INDEX codere.rausgang
      CALL REUpdate(dat$)
   CASE 125
     CALL ZEADRWahl(dat$)
   CASE 126
     REM 27122005 Dokument importieren
     cfile$ = FILE 
     FILE "adressen"
     INDEX codeku.adressen
     codeku% = codeku.reingang
     knr% = codeku%
     SELECT FIRST FILE "Adressen" INDEX codeku.adressen
     SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
     
     codere% = codere.reingang
     GCodeDok% = 0
     CALL DOKImport()
     IF GCodeDok% > 0 THEN 
       SELECT FIRST FILE "reingang" INDEX codere.reingang
       SELECT KEY codere% LOCK FILE "reingang" INDEX codere.reingang
       codedok.reingang = gcodedok%
       STORE FILE "reingang"
     END IF 
     GCodeDok% = 0
     FILE cfile$
     REM CALL REUpdate(dat$)
       IF codedok.reingang > 0 THEN 
         reanz1$ = "Rechnung anzeigen Æ"
       ELSE 
         reanz1$ = "Rechnung anzeigen"
       END IF 
       FORM 

   CASE 127
     REM Dokument anzeigen
     IF codedok.reingang > 0 THEN 
       codere% = codere.reingang
       codedok% = codedok.reingang
       CALL DOKBearbeiten(codedok%,0)
       SELECT FIRST FILE "reingang" INDEX codere.reingang
       SELECT KEY codere% LOCK FILE "reingang" INDEX codere.reingang
     ELSE 
       CALL Fehler("Es wurde kein Dokument hinterlegt!","")
     END IF 
   CASE 128
     REM Mahnsperre setzen
     REM Mahnsperre setzen
     codere% = codere.rausgang
     codeku% = codeku.rausgang
     IF NOT disabled%("MAHNSPERRE") THEN 
       SELECT FIRST FILE "adressen" INDEX codeku.adressen
       SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
       IF mahnsperre.adressen LIKE "j" THEN 
         CALL Fehler("Es wurde die generelle Mahnsperre gesetzt, deshalb sind hier keine Aktionen mîglich!","")
         GOTO emaend230120071r
       END IF 
       SELECT FIRST FILE "rausgang" INDEX codere.rausgang
       SELECT KEY codere% LOCK FILE "rausgang" INDEX codere.rausgang
       Msper$ = Mahnsperre.rausgang
       dat1ab% = MahnsperBisdat.rausgang
       IF dat1ab% > 0 THEN 
         dat1ab$ = DATE$ (dat1ab%,"0d.mm.yyyy")
       ELSE 
         dat1ab$ = ""
       END IF 
a230120071r: 
       
       CREATE DIALOG "MS",0,0,187,96,"Mahnsperre","MS Sans Serif",8
       ADD DIALOG "MS",4,3,5,182,63,0,""
       ADD DIALOG "MS",5,5,10,175,30,0,"Bitte ak-/deakttivieren Sie die Mahnsperre und tragen Sie ggf.ein, bis wann die Mahnsperre gelten soll!"
       ADD DIALOG "MS",2,10,40,74,12,0,"Mahnsperre J/N","j","n",Msper$
       ADD DIALOG "MS",6,90,40,44,12,0,0,dat1ab$,10
       REM ADD DIALOG "MS",9,7,20,20,19,2
       ADD DIALOG "MS",1,35,75,55,16,1,"&OK",1,1
       ADD DIALOG "MS",1,93,75,54,16,0,"&Abbrechen",0,0
       DIALOG "MS",req%
       REMOVE DIALOG "MS"
       IF req% = 1 THEN 
         IF NOT DateOK%(dat1ab$) AND dat1ab$ <> "" THEN 
           CALL Fehler("Sie haben keinen korrekten Datumswert eingegeben!","Datumsformat:  dd.mm.yyyy")
           GOTO a230120071r
         END IF 
         Mahnsperre.rausgang = Msper$
         IF msper$ LIKE "j" THEN 
           MahnsperBisdat.rausgang = dat1ab$
         ELSE 
           MahnsperBisdat.rausgang = 0
         END IF 
         CALL Sich("rausgang")
       END IF 
     END IF 
emaend230120071r:  
   END SELECT 
 WEND 
 _formend% = 0
 UNLOCK ALL FILE dat$
 REM IF FileChanged%(dat$) = 1 THEN CALL QuickStore(dat$)
 END SUB 
 
 
SUB RENeuTeil(dat$,dat1$)
 FILE dat$
 BLANK FILE dat$
 a% = CopyRecord%(dat1$,dat$)
 Gcodeteil% = SER (dat$,1)
 REM 271220051
 REM FILE dat$
 stra·e.dat$ = stra·e.dat1$
 codeteil.dat$ = Gcodeteil%
 gezahltam.dat$ = TODAY 
 GesNetto.dat$ = 0
 GesBrutto.dat$ = 0
 PreisNetto.dat$ = 0
 PreisBrutto.dat$ = 0
 PreisNettoEu.dat$ = 0
 PreisBruttoEu.dat$ = 0
 GesNettoTeil.dat$ = 0
 GesBruttoTeil.dat$ = 0
 GesNettoTeilEu.dat$ = 0
 GesBruttoTeilEu.dat$ = 0
 GesNettoEu.dat$ = 0
 GesBruttoEu.dat$ = 0
 mwst.dat$ = 0
 mwstdm.dat$ = 0
 REM GutschriftJN.dat$ = "N"
 Ktoauszugsnr.dat$ = ""
 KasseJN.dat$ = "n"
 gezmitskonto.dat$ = "N"
 Notiz.dat$ = ""
 erledigt.dat$ = "N"
 zero.dat$ = 0
 mahnJN.dat$ = "N"
 CALL QuickStore(dat$)
 SELECT FORM KEY codere% FILE dat$ INDEX codere.dat$
 FORM 
 END SUB 
 
 REM Erzeugung Teilrechnung fÅr Mahnung
 REM x% = 1Mahnwert1... 
SUB RENeuTeilM(dat$,dat1$,x%)
 mdatum$ = "MDATUM" + STR$ (x%,"0") + ".reingang"
 mbetr$ = "MBETR" + STR$ (x%,"0") + ".reingang"
 merl$ = "MERL" + STR$ (x%,"0") + ".reingang"
 FILE dat$
 BLANK FILE dat$
 a% = CopyRecord%(dat1$,dat$)
 Gcodeteil% = SER (dat$,1)
 REM 271220051
 REM FILE dat$
 stra·e.dat$ = stra·e.dat1$
 codeteil.dat$ = Gcodeteil%
 gezahltam.dat$ = TODAY 
 GesNetto.dat$ = 0
 GesBrutto.dat$ = 0
 PreisNetto.dat$ = 0
 PreisBrutto.dat$ = 0
 PreisNettoEu.dat$ = 0
 PreisBruttoEu.dat$ = 0
 GesNettoTeil.dat$ = 0
 GesBruttoTeil.dat$ = 0
 GesNettoTeilEu.dat$ = 0
 GesBruttoTeilEu.dat$ = 0
 GesNettoEu.dat$ = 0
 GesBruttoEu.dat$ = 0
 mwst.dat$ = 0
 mwstdm.dat$ = 0
 GutschriftJN.dat$ = "N"
 Ktoauszugsnr.dat$ = ""
 KasseJN.dat$ = "n"
 gezmitskonto.dat$ = "N"
 Notiz.dat$ = ""
 erledigt.dat$ = "N"
 zero.dat$ = 0
 mahnJN.dat$ = "N"
 gezahltAm.teilrein = MDatum$$
 MahnJN.teilrein = "J"
 IF Merl$$ = "J" THEN erledigt.teilrein = "J"
 IF FORM LIKE "PRJREINE" THEN 
   GesBruttoEu.teilrein = MBetr$$
   GesBrutto.teilrein = MBetr$$
 ELSE 
   GesBrutto.teilrein = GesBruttoEu.teilrein * umrechnung.teilrein
 END IF 
 CALL QuickStore(dat$)
 END SUB 
 

SUB RENeuTeilME(dat$,dat1$,x%)
 mdatum$ = "MDATUM" + STR$ (x%,"0") + ".reingang"
 mbetr$ = "MBETR" + STR$ (x%,"0") + ".reingang"
 merl$ = "MERL" + STR$ (x%,"0") + ".reingang"
 erledigt.dat$ = "N"
 zero.dat$ = 0
 mahnJN.dat$ = "N"
 gezahltAm.teilrein = MDatum$$
 MahnJN.teilrein = "J"
 IF Merl$$ = "J" THEN erledigt.teilrein = "J"
 GesBruttoEu.teilrein = MBetr$$
 CALL QuickStore(dat$)
 END SUB 


SUB RENeu(dat$)
 FILE dat$
 BLANK FILE dat$
 codere% = SER (dat$,1)
 codere.dat$ = codere%
 erledigt.dat$ = "N"
 IF dat$ LIKE "REINGANG" THEN 
   SELECT FIRST LOCK FILE "stamm"
   REBelegnr.stamm = REBelegnr.stamm + 1
   STORE FILE "stamm"
   UNLOCK CURRENT FILE "stamm"
   nnum% = REBelegnr.stamm
   num$ = "E" + DATE$ ( TODAY ,"yyyymm0d") + "-" + STR$ (nnum%,"000000")
 ELSE 
   SELECT FIRST LOCK FILE "stamm"
   RABelegnr.stamm = RABelegnr.stamm + 1
   STORE FILE "stamm"
   UNLOCK CURRENT FILE "stamm"
   nnum% = RABelegnr.stamm
   num$ = "A" + DATE$ ( TODAY ,"yyyymm0d") + "-" + STR$ (nnum%,"000000")
 END IF 
 IF dat$ LIKE "REING*" THEN 
   mwst.dat$ = mwst.stamm
 END IF 
 belegnr.dat$ = num$
 nachname.dat$ = "<ohne Zuordnung>"
 warenart.dat$ = "<ohne Zuordnung>"
 zero.dat$ = 0
 IF mastform$ LIKE "EUR" THEN 
   codew.dat$ = 3
   waehrung.dat$ = "EUR"
   umrechnung.dat$ = 1
 ELSE 
   codew.dat$ = codew.stamm
   umrechnung.dat$ = umrechnung.stamm
   waehrung.dat$ = waehrung.stamm
 END IF 
 CALL QuickStore(dat$)
 SELECT FORM KEY codere% FILE dat$ INDEX codere.dat$
 FORM 
 END SUB 
 

SUB RAUSNeu(dat$)
 FILE dat$
 BLANK FILE dat$
 
 codere% = SER (dat$,1)
 codere.dat$ = codere%
 erledigt.dat$ = "N"
   SELECT FIRST LOCK FILE "stamm"
   RABelegnr.stamm = RABelegnr.stamm + 1
   STORE FILE "stamm"
   UNLOCK CURRENT FILE "stamm"
   nnum% = RABelegnr.stamm
   num$ = "Z" + DATE$ ( TODAY ,"yyyymm0d") + "-" + STR$ (nnum%,"000000")
 LRENummer.dat$ = "HANDBUCHUNG"
 Handbuchung.dat$ = 1
 belegnr.dat$ = num$
 nachname.dat$ = "<ohne Zuordnung>"
 warenart.dat$ = "<ohne Zuordnung>"
 IF mastform$ LIKE "EUR" THEN 
   codew.dat$ = 3
   waehrung.dat$ = "EUR"
   umrechnung.dat$ = 1
 ELSE 
   codew.dat$ = codew.stamm
   umrechnung.dat$ = umrechnung.stamm
   waehrung.dat$ = waehrung.stamm
 END IF 
 zero.dat$ = 0
 CALL QuickStore(dat$)
 SELECT FORM KEY codere% FILE dat$ INDEX codere.dat$
 FORM 
 END SUB 



SUB RAAdr()
 codere% = codere.rausgang
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(3,"umsatz" + _fpw$)
 CALL DFile(3,"master" + _fpw$)
 dat$ = "RAUSGANG"
 CALL ADRSuchen()
 IF knr% > 0 THEN 
   SELECT KEY knr% FILE "adressen" INDEX codeku.adressen
   codeku% = CodeKu.adressen
   FILE dat$
   SELECT KEY codere% LOCK FILE dat$ INDEX CodeRE.dat$
   codeku.dat$ = codeku%
   nachname.dat$ = nachname.adressen
   vorname.dat$ = vorname.adressen
   geburtsname.dat$ = geburtsname.adressen
   ort.dat$ = ort.adressen
   plz.dat$ = plz.adressen
   stra·e.dat$ = stra·e.adressen
   CALL QuickStore(dat$)
 END IF 
 SELECT KEY codere% FILE "rausgang" INDEX codere.rausgang
 CALL REUpdate(dat$)
 FORM 
 MOUSE ON 
 END SUB 
 
SUB RELieferant(dat$)
 codere% = Codere.dat$
 MOUSE OFF 
 IF NEW (dat$) OR MOD (dat$) THEN CALL QuickStore(dat$)
 FILE "adressen"
 DIM LAuswahl1$(1)
 DIM Lieferant$( RECCOUNT ("ADRESSEN"))
 a% = 0
 INDEX AALieferant.adressen
 SELECT FIRST 
 SELECT KEY "j" FILE "adressen" INDEX aalieferant.adressen
 WHILE aalieferant.adressen LIKE "j" AND NOT EOF ("adressen")
   Lieferant$(a%) = nachname.adressen + SPACE$ (120) + STR$ (codeku.adressen,"000000")
   a% = a% + 1
   SELECT NEXT FILE "adressen" INDEX AALieferant.adressen
 WEND 
 LAuswahl$ = Lieferant$(0)
 LAuswahl1$(0) = LAuswahl$
 CREATE DIALOG "PREISLIS",0,0,155,248,title$,"MS Sans Serif",8
    ADD DIALOG "PREISLIS",4,1,1,152,123,0," Auswahl des Lieferanten"
    ADD DIALOG "PREISLIS",7,4,14,146,214,2,2,Lieferant$,Lauswahl1$," "
    ADD DIALOG "PREISLIS",1,16,230,54,16,1,"&OK",1,1
    ADD DIALOG "PREISLIS",1,76,230,54,16,0,"&Abbrechen",0,0
 DIALOG "PREISLIS",req%
 REMOVE DIALOG "PREISLIS"
 IF req% = 1 THEN 
   LAuswahl$ = LAuswahl1$(0)
   SELECT KEY VAL ( RIGHT$ (LAuswahl$,6)) FILE "adressen" INDEX codeku.adressen
   codeku% = CodeKu.adressen
   FILE dat$
   SELECT KEY codere% LOCK FILE dat$ INDEX CodeRE.dat$
   codeku.dat$ = codeku%
   Kundennummer.dat$ = Kundennummer.adressen
   nachname.dat$ = nachname.adressen
   vorname.dat$ = vorname.adressen
   geburtsname.dat$ = geburtsname.adressen
   ort.dat$ = ort.adressen
   plz.dat$ = plz.adressen
   stra·e.dat$ = stra·e.adressen
   CALL QuickStore(dat$)
 END IF 
 CALL REUpdate(dat$)
 FORM 
 MOUSE ON 
 END SUB 
 
 
 
SUB REUpdate(dat$)
 CALL DFile(3,"teilrein" + _fpw$)
 CALL DFile(3,"teilraus" + _fpw$)
 name1$ = nachname.dat$
 codere% = Codere.dat$
 codems% = codems.dat$
 warenart$ = WGruppe.dat$ + "/" + warenart.dat$
 REM CALL Fehler("Teilrein","")
 IF UCASE$ ( FORM ) = "RAINGANG" OR UCASE$ ( FORM ) = "REINGANG" OR UCASE$ ( FORM ) = "PRJREIN" OR UCASE$ ( FORM ) = "PRJRAUS" THEN 
   waehr$ = "WÑhrung: " + waehrung.dat$
 ELSE 
   waehr$ = "Erfass.wÑhrung war: " + waehrung.dat$
 END IF 
 IF UCASE$ ( FORM ) LIKE "PRJREIN*" OR UCASE$ ( FORM ) LIKE "PRJRAUS*" THEN 
   IF Projekt.dat$ <> "" THEN 
     projre$ = Projekt.dat$
   ELSE 
     projre$ = "<ohne Zuordnung>"
   END IF 
 END IF 
 IF dat$ LIKE "rausgang" THEN 
   ON ERROR GOTO a240120071
   IF Mahnsperre.rausgang LIKE "j" THEN 
     IF MahnsperBisdat.rausgang > 0 THEN 
       mahnsperre$ = "Mahnsperre bis: " + DATE$ (MahnsperBisdat.rausgang,"0d.mm.yyyy")
     ELSE 
       mahnsperre$ = "Mahnsperre gesetzt"
     END IF 
     f.mahnsperre.BackColor = 2
   ELSE 
     mahnsperre$ = "Mahnsperre setzen"
     f.mahnsperre.BackColor = 254
   END IF 
a240120071: 
   ON ERROR GOTO ErrorHandler
 END IF 
 IF dat$ LIKE "reingang" THEN 
   IF EXISTS (codere%,codere.Teilrein) THEN 
     rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$,",9999999.00")
   ELSE 
     rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$,",9999999.00")
   END IF 
   IF UCASE$ (gezmitskonto.dat$) = "J" THEN 
     rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$ - skonto.dat$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEU.dat$ - SummeTeilEU.dat$ - skontoeu.dat$,",9999999.00")
   END IF 
   IF EXISTS (codere%,codere.Teilrein) THEN 
     teil1$ = "Zahlungen Æ"
   ELSE 
     teil1$ = "Zahlungen"
   END IF 
 ELSE 
   IF erledigt.rausgang = "J" THEN 
     vorg$ = "Vorgang als unerledigt kennzeichnen"
   ELSE 
     vorg$ = "Vorgang vollstÑndig erledigen"
   END IF 
   IF EXISTS (codere%,codere.Teilraus) THEN 
     FILE "teilraus"
     INDEX codere.teilraus
     SELECT FIRST 
     SELECT KEY codere% FILE "teilraus" INDEX codere.teilraus
     CALL SumTeil(codems%,codere%,"teilraus",dat$)
     FILE dat$
     SELECT FIRST 
     SELECT KEY codere% FILE dat$ INDEX codere.dat$
     rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$,",9999999.00")
   ELSE 
     gesbrutto1% = GesBrutto.dat$
     gesmahn1% = gesMahn.dat$
     SummeTeil1% = SummeTeil.dat$
     rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$,",9999999.00")
   END IF 
   IF codems% > 0 AND EXISTS (codems%,codems.teilraus) THEN 
     FILE "teilraus"
     INDEX codere.teilraus
     SELECT FIRST 
     SELECT KEY codere% FILE "teilraus" INDEX codere.teilraus
     CALL SumTeil(codems%,codere%,"teilraus",dat$)
     FILE dat$
     SELECT FIRST 
     SELECT KEY codere% FILE dat$ INDEX codere.dat$
     rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$,",9999999.00")
   ELSE 
     rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$,",9999999.00")
   END IF 
   IF UCASE$ (gezmitskonto.dat$) = "J" THEN 
     rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$ - skonto.dat$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEU.dat$ - SummeTeilEU.dat$ - skontoeu.dat$,",9999999.00")
   END IF 
   IF EXISTS (codere%,codere.Teilraus) THEN 
     teil1$ = "Zahlungen Æ"
   ELSE 
     teil1$ = "Zahlungen"
   END IF 
 END IF 
 CALL RERABrut()
 FILE dat$
 SELECT FIRST FILE dat$ INDEX codere.dat$
 SELECT FORM KEY codere% FILE dat$ INDEX codere.dat$
 FORM 
 END SUB 
  
 
 REM Druck Rechnungs E/A Buch 
 REM 100499
SUB DRUCKREA(wbericht$)
 alle$ = "n"
 CALL DFile(3,"WAGRUPPE" + _fpw$)
 CALL DFile(3,"warenart" + _fpw$)
 IF bis$ = "" THEN bis$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 DIM LAuswahl1$(1)
 DIM Auswahl1$(1)
 DIM PAuswahl1$(1)
 a% = 0
 MOUSE OFF 
 IF UCASE$ (wbericht$) LIKE "RE*" THEN 
   
   a% = 0
   FILE "reingang"
   rec% = RECCOUNT ("reingang")
   INDEX codeku.reingang
   SELECT FIRST 
   codeku% = codeku.reingang
   codekuold% = 0
   IF UCASE$ ( FORM ) LIKE "ADRR*" THEN 
     REDIM Lieferant$(1,1)
     REDIM Lieferant$(1)
     Lieferant$(0) = Nachname.adressen + SPACE$ (120) + STR$ (codeku.adressen,"000000")
   END IF 

   IF Lieferant$(0) = "" THEN 
     REDIM Lieferant$(1,1)
     REDIM Lieferant$(rec%)
     REM FOR i% = 0 TO rec%
       REM Lieferant$(i%) = ""
     REM NEXT i%
     WHILE NOT EOF ("reingang")
       codeku% = codeku.reingang
       IF codekuold% <> codeku% THEN 
         Lieferant$(a%) = nachname.reingang + SPACE$ (120) + STR$ (codeku.reingang,"000000")
         a% = a% + 1
         codekuold% = codeku%
       END IF 
       SELECT NEXT 
     WEND 
   END IF 
   SELECT WHERE FILE "reingang"
 ELSE 
   a% = 0
   FILE "rausgang"
   INDEX warenart.rausgang
   SELECT FIRST 
   war1$ = warenart.rausgang
   war1old$ = ""
   rec% = RECCOUNT ("rausgang")
   a% = 0
   INDEX codeku.rausgang
   SELECT FIRST 
   codeku% = codeku.rausgang
   codekuold% = 0
   IF UCASE$ ( FORM ) LIKE "ADRR*" THEN 
     REDIM Lieferant$(1,1)
     REDIM Lieferant$(1)
     Lieferant$(0) = Nachname.adressen + SPACE$ (120) + STR$ (codeku.adressen,"000000")
   END IF 
   IF Lieferant$(0) = "" THEN 
     REDIM Lieferant$(1,1)
     REDIM Lieferant$(rec%)
     REM FOR i% = 0 TO rec%
       REM Lieferant$(i%) = ""
     REM NEXT i%
     WHILE NOT EOF ("rausgang")
       codeku% = codeku.rausgang
       IF codekuold% <> codeku% THEN 
         Lieferant$(a%) = nachname.rausgang + SPACE$ (120) + STR$ (codeku.rausgang,"000000")
         a% = a% + 1
         codekuold% = codeku%
       END IF 
       SELECT NEXT 
     WEND 
   END IF 
   SELECT WHERE FILE "rausgang"
 END IF 
 REM LAuswahl$ = Lieferant$(0)
 REM LAuswahl1$(0) = LAuswahl$
 DIM MASTUFLIST$(7)
 MASTUFLIST$(0) = "-1"
 MASTUFLIST$(1) = "0"
 MASTUFLIST$(2) = "1"
 MASTUFLIST$(3) = "2"
 MASTUFLIST$(4) = "3"
 MASTUFLIST$(5) = "4"
 MASTUFLIST$(6) = "5"
 mastufe$ = "-1"

adr170120054: 
       a% = 0
       FILE "project"
       INDEX name1.project
       SELECT FIRST FILE "project"
       rec% = RECCOUNT ("project")
       REDIM Projecteab$(1,1)
       REDIM Projecteab$(rec%)
       WHILE NOT EOF ("project")
         sok% = - 1
         IF alle$ = "n" THEN 
           IF novi1.project = 1 THEN sok% = 0
         END IF 
         IF sok% THEN 
           IF novi1.project = 1 THEN 
             Projecteab$(a%) = "### " + LTRIM$ (Projektnummer.project) + "/" + LTRIM$ (name1.project) + SPACE$ (120) + STR$ (codepr.project,"000000")
           ELSE 
             Projecteab$(a%) = LTRIM$ (Projektnummer.project) + "/" + LTRIM$ (name1.project) + SPACE$ (120) + STR$ (codepr.project,"000000")
           END IF 
           a% = a% + 1
         END IF 
         SELECT NEXT 
       WEND 


       a% = 0
       IF NOT OPEN ("adrgrup") THEN CALL DFile(2,"OFFICE\adrgrup" + _fpw$)
       FILE "adrgrup"
       INDEX keyword 
       SELECT FIRST FILE "adrgrup"
       rec% = RECCOUNT ("adrgrup")
       REDIM GADRGrup$(1,1)
       REDIM GADRGrup$(rec%)
       WHILE NOT EOF ("adrgrup")
         sok% = - 1
         IF sok% THEN 
           GADRGrup$(a%) = LTRIM$ (keyword)
           a% = a% + 1
         END IF 
         SELECT NEXT 
       WEND 



 
     a% = 0
     FILE "WAGRUPPE"
     INDEX wgruppe.wagruppe
     SELECT FIRST FILE "WAGRUPPE"
     FILE "Warenart"
     INDEX Warenart.warenart
     SELECT FIRST 
     rec1a% = RECCOUNT ("wagruppe") + RECCOUNT ("warenart")
     REDIM ProdGruppen1$(1,1)
     REDIM ProdGruppen1$(rec1a%)
     WHILE NOT EOF ("wagruppe")
       FILE "wagruppe"
       sok% = - 1
       IF alle$ = "n" THEN 
         IF novi1.wagruppe = 1 THEN sok% = 0
       END IF 
       IF sok% THEN 
         codewgru% = codewgru.wagruppe
         IF novi1.wagruppe = 1 THEN 
           ProdGruppen1$(a%) = wgruppe.wagruppe + " ### " + SPACE$ (100) + STR$ (codewgru.wagruppe,"000000")
         ELSE 
           ProdGruppen1$(a%) = wgruppe.wagruppe + SPACE$ (100) + STR$ (codewgru.wagruppe,"000000")
         END IF 
         a% = a% + 1
         FILE "warenart"
         INDEX warenart.warenart
         SELECT FIRST FILE "warenart"
         WHILE NOT EOF ("warenart")
           ook% = - 1
           IF alle$ = "n" THEN 
             IF novi1.warenart = 1 THEN ook% = 0
           END IF 
           IF codewgru.warenart <> codewgru% THEN ook% = 0
           IF ook% THEN 
             IF novi1.wagruppe = 1 THEN 
               ProdGruppen1$(a%) = "  |-- " + Warenart.warenart + " ### " + SPACE$ (100) + STR$ (codewa.warenart,"000000")
             ELSE 
               ProdGruppen1$(a%) = "  |-- " + Warenart.warenart + SPACE$ (100) + STR$ (codewa.warenart,"000000")
             END IF 
             a% = a% + 1
           END IF 
           SELECT NEXT FILE "warenart"
         WEND 
         REM war1old$ = war1$
       END IF 
       FILE "WAGRUPPE"
       SELECT NEXT FILE "Wagruppe"
     WEND 
 
 



 opt1% = 1
 opt% = 3
 nichterl$ = "j"
 MOUSE ON 
druea1703981: 
 gdrumitkunr$ = "j"
 gadrname$ = ""
 ON ERROR GOTO ErrorHandler
 CREATE DIALOG "UMSATZ",0,0,530,342,"Druck RE/RA-Buch","MS Sans Serif",8
 ADD DIALOG "UMSATZ",4,0,1,233,137,0,""
 ADD DIALOG "UMSATZ",4,235,1,95,137,0,""
 ADD DIALOG "UMSATZ",5,250,16,66,9,0,"Sortierreihenfolge"
 REM ADD DIALOG "UMSATZ",9,6,12,20,21,2
 ADD DIALOG "UMSATZ",5,5,6,186,9,0,"Bitte geben Sie den Zeitraum ein, fÅr den Sie eine"
 ADD DIALOG "UMSATZ",5,5,15,196,10,0,"Ausgabe wÅnschen.(Standard:1.1.1900-31.12.2999"
 REM ADD DIALOG "UMSATZ",5,5,24,184,8,0,"Wenn Sie keinen Zeitraum bestimmen, werden sÑmtliche"
 REM ADD DIALOG "UMSATZ",5,5,33,184,9,0,"Rechnungen angezeigt."

 
 REM ADD DIALOG "UMSATZ",2,5,45,94,10,0,"nur nichterledigt VorgÑnge","j","n",nichterl$
 ADD DIALOG "UMSATZ",5,5,30,103,9,0,"nichterledigte VorgÑnge:"
 ADD DIALOG "UMSATZ",3,85,30,20,10,0,"Ja","j",nichterl$
 ADD DIALOG "UMSATZ",3,105,30,30,10,0,"Nein","n",nichterl$
 ADD DIALOG "UMSATZ",3,135,30,30,10,0,"egal","",nichterl$
 ADD DIALOG "UMSATZ",2,108,44,55,10,0," Mahnsperre?","j","n",Mahnsperre$
 ADD DIALOG "UMSATZ",6,178,44,40,11,0,0,msperrebis$,10
 ADD DIALOG "UMSATZ",2,168,65,55,10,0," angemahnt?","J","N",MahnJN$
 ADD DIALOG "UMSATZ",8,182,85,24,70,2,2,mastufe$,MASTUFLIST$

 ADD DIALOG "UMSATZ",2,10,56,128,10,0,"Liste mit offenen Rechnungsbetrag","j","n",offBetr$
 ADD DIALOG "UMSATZ",3,10,67,130,10,0,"nur KONTO - Bewegungen anzeigen",1,opt%
 ADD DIALOG "UMSATZ",3,10,79,130,10,0,"nur KASSEN - Bewegungen anzeigen",2,opt%
 ADD DIALOG "UMSATZ",3,10,91,155,10,0,"alle KONTO/KASSEN Bewegungen anzeigen",3,opt%
 REM ADD DIALOG "UMSATZ",3,40,55,98,10,0,"nur nichterledigt VorgÑnge",4,opt%
 ADD DIALOG "UMSATZ",6,62,103,40,13,0,0,von$,10
 ADD DIALOG "UMSATZ",6,133,103,40,13,0,0,bis$,10

 ADD DIALOG "UMSATZ",5,5,124,48,10,0,"Adressgruppe"
 ADD DIALOG "UMSATZ",8,61,122,169,195,259,2,gadrname$,GADRGrup$

 ADD DIALOG "UMSATZ",3,240,35,80,10,0,"Belegnummer",1,opt1%
 ADD DIALOG "UMSATZ",3,240,47,80,10,0,"RE-Datum",2,opt1%
 IF wbericht$ LIKE "rausga*" THEN 
   ADD DIALOG "UMSATZ",3,240,59,80,10,0,"Kunde",3,opt1%
   ADD DIALOG "UMSATZ",3,240,71,80,10,0,"RE-Nummer",4,opt1%
 ELSE 
   ADD DIALOG "UMSATZ",3,240,59,80,10,0,"Lieferant",3,opt1%
   ADD DIALOG "UMSATZ",3,240,71,80,10,0,"RE-Nummer Lieferant",4,opt1%
 END IF 
 
 ADD DIALOG "UMSATZ",3,240,83,85,10,0,"Konto-Auszugsnummer",5,opt1%
 ADD DIALOG "UMSATZ",3,240,95,80,10,0,"Buchungskonto",6,opt1%
 ADD DIALOG "UMSATZ",3,240,107,80,10,0,"bezahlt am",7,opt1%
 ADD DIALOG "UMSATZ",3,240,119,80,10,0,"interne Nummer",8,opt1%


 ADD DIALOG "UMSATZ",5,330,5,50,10,0,"Belegnummer:"
 ADD DIALOG "UMSATZ",6,385,5,80,10,0,0,Bnr$,20
 ADD DIALOG "UMSATZ",5,330,15,50,10,0,"Ktoauszugsnr:"
 ADD DIALOG "UMSATZ",6,385,15,80,10,0,0,knr$,20

 ADD DIALOG "UMSATZ",5,330,25,50,10,0,"RE-Nummer:"
 ADD DIALOG "UMSATZ",6,385,25,80,10,0,0,rnr$,20
 
 ADD DIALOG "UMSATZ",5,330,35,50,10,0,"RE-Netto von:"
 ADD DIALOG "UMSATZ",6,385,35,50,10,0,0,renv$,20
 ADD DIALOG "UMSATZ",5,440,35,20,10,0,"bis:"
 ADD DIALOG "UMSATZ",6,460,35,50,10,0,0,renb$,20
 
 ADD DIALOG "UMSATZ",5,330,45,50,10,0,"RE-Brutto von:"
 ADD DIALOG "UMSATZ",6,385,45,50,10,0,0,rebv$,20
 ADD DIALOG "UMSATZ",5,440,45,20,10,0,"bis:"
 ADD DIALOG "UMSATZ",6,460,45,50,10,0,0,rebb$,20
 
 ADD DIALOG "UMSATZ",5,330,55,60,10,0,"bezahlt am von:"
 ADD DIALOG "UMSATZ",6,385,55,50,10,0,0,bezv$,10
 ADD DIALOG "UMSATZ",5,440,55,20,10,0,"bis:"
 ADD DIALOG "UMSATZ",6,460,55,50,10,0,0,bezb$,10

 ADD DIALOG "UMSATZ",5,330,65,60,10,0,"Zahlungsziel vom:"
 ADD DIALOG "UMSATZ",6,385,65,50,10,0,0,zzielvon$,10
 ADD DIALOG "UMSATZ",5,440,65,20,10,0,"bis:"
 ADD DIALOG "UMSATZ",6,460,65,50,10,0,0,zzielbis$,10

 IF wbericht$ LIKE "reing*" THEN 
   ADD DIALOG "UMSATZ",5,330,85,160,10,0,"öberschrift: STRG+ENTER fÅr Zeilenumbruch"
   ADD DIALOG "UMSATZ",6,330,95,190,40,4,3,Guebschrift$,4000
 ELSE 
   ADD DIALOG "UMSATZ",5,330,75,160,10,0,"öberschrift: STRG+ENTER fÅr Zeilenumbruch"
   ADD DIALOG "UMSATZ",6,330,85,190,52,4,3,Guebschrift$,4000
 END IF 

 
 IF wbericht$ LIKE "reing*" THEN 
   ADD DIALOG "UMSATZ",5,330,75,50,10,0,"RE-Brut.F von:"
   ADD DIALOG "UMSATZ",6,385,75,50,10,0,0,FBv$,20
   ADD DIALOG "UMSATZ",5,440,75,20,10,0,"bis:"
   ADD DIALOG "UMSATZ",6,460,75,50,10,0,0,FBb$,20
 END IF 

 ADD DIALOG "UMSATZ",4,0,144,138,167,0," Ausw.Buch.gruppen/Konten(opt.)"
 ADD DIALOG "UMSATZ",7,2,156,133,165,0,2,Prodgruppen1$,Auswahl1$," "
 IF wbericht$ LIKE "RAUSGANG" THEN ADD DIALOG "UMSATZ",4,144,144,201,167,0," Auswahl der Adresse (optional)"
 IF wbericht$ LIKE "REINGANG" THEN ADD DIALOG "UMSATZ",4,144,144,201,167,0," Auswahl des Lieferanten (optional)"
 ADD DIALOG "UMSATZ",7,147,156,195,165,2,2,Lieferant$,Lauswahl1$," "
 ADD DIALOG "UMSATZ",4,350,144,180,167,0," Auswahl des Projektes (optional)"
 ADD DIALOG "UMSATZ",7,352,156,175,165,2,2,Projecteab$,Pauswahl1$," "

 ADD DIALOG "UMSATZ",5,40,107,18,9,0,"von:"
 ADD DIALOG "UMSATZ",5,113,107,13,9,0,"bis:"
 ADD DIALOG "UMSATZ",5,178,75,43,9,0,"Mahnstufe ="
 ADD DIALOG "UMSATZ",5,165,45,10,9,0,"bis"
 ADD DIALOG "UMSATZ",1,47,324,55,15,1,"&OK",1,1
 ADD DIALOG "UMSATZ",1,104,324,55,15,0,"&Abbrechen",0,0
 ADD DIALOG "UMSATZ",1,161,324,125,15,0,"alle Konten und Projekte anzeigen",2,2
 ADD DIALOG "UMSATZ",2,295,326,130,10,0,"Kundennummer mit ausgeben","j","n",gdrumitkunr$
 DIALOG "UMSATZ",req%
 REMOVE DIALOG "UMSATZ"

 IF req% = 0 THEN END SUB 
 mastufe% = VAL (mastufe$)
 IF req% = 2 THEN 
   alle$ = "j"
   GOTO adr170120054
 END IF 
 REM REQUEST "Liste mit offenem Rechnungsbetrag drucken?","",130,req%
 MOUSE OFF 
 REM IF bis$ = "" THEN bis$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 REM IF von$ = "" THEN von$ = "01.01.0001"
 IF msperrebis$ <> "" AND NOT DateOK%(msperrebis$) THEN 
   GOTO druea1703981
 END IF 
 IF von$ <> "" AND NOT DateOK%(von$) THEN 
   GOTO druea1703981
 END IF 
 IF bis$ <> "" AND NOT DateOK%(bis$) THEN 
   GOTO druea1703981
 END IF 
 IF LTRIM$ (bezv$) <> "" THEN 
   IF NOT DateOK%(bezv$) THEN 
     CALL Fehler("Datum Bezahlt am von: " + bezv$,"ist nicht gÅltig, bitte korrigieren!")
     GOTO druea1703981
   END IF 
 END IF 
 IF LTRIM$ (bezb$) <> "" THEN 
   IF NOT DateOK%(bezv$) THEN 
     CALL Fehler("Datum Bezahlt am bis: " + bezb$,"ist nicht gÅltig, bitte korrigieren!")
     GOTO druea1703981
   END IF 
 END IF 

 IF LTRIM$ (zzielvon$) <> "" THEN 
   IF NOT DateOK%(zzielvon$) THEN 
     CALL Fehler("Datum Zahlungsziel vom: " + zzielvon$,"ist nicht gÅltig, bitte korrigieren!")
     GOTO druea1703981
   END IF 
 END IF 
 IF LTRIM$ (zzielbis$) <> "" THEN 
   IF NOT DateOK%(zzielbis$) THEN 
     CALL Fehler("Datum Zahlungsziel bis: " + zzielbis$,"ist nicht gÅltig, bitte korrigieren!")
     GOTO druea1703981
   END IF 
 END IF 

 ON ERROR GOTO ErrorHandler
 IF LTRIM$ (renv$) <> "" THEN 
   ON ERROR GOTO renv2911051
   renv% = VAL (renv$)
   GOTO renv2911052
 ELSE 
   GOTO renv2911052
 END IF 
renv2911051: 
 CALL Fehler("Der Wert bei RE-Netto von ist ungÅltig " + renv$,"Bitte korrigieren!")
 GOTO druea1703981
renv2911052: 

 IF LTRIM$ (renb$) <> "" THEN 
   ON ERROR GOTO renb2911051
   renb% = VAL (renb$)
   GOTO renb2911052
 ELSE 
   GOTO renb2911052
 END IF 
renb2911051: 
 CALL Fehler("Der Wert bei RE-Netto bis ist ungÅltig " + renb$,"Bitte korrigieren!")
 GOTO druea1703981
renb2911052: 
 


 IF LTRIM$ (rebv$) <> "" THEN 
   ON ERROR GOTO rebv2911051
   rebv% = VAL (rebv$)
   GOTO rebv2911052
 ELSE 
   GOTO rebv2911052
 END IF 
rebv2911051: 
 CALL Fehler("Der Wert bei RE-Brutto von ist ungÅltig " + rebv$,"Bitte korrigieren!")
 GOTO druea1703981
rebv2911052: 
 
 IF LTRIM$ (rebb$) <> "" THEN 
   ON ERROR GOTO rebb2911051
   rebb% = VAL (rebb$)
   GOTO rebb2911052
 ELSE 
   GOTO rebb2911052
 END IF 
rebb2911051: 
 CALL Fehler("Der Wert bei RE-Brutto bis ist ungÅltig " + rebb$,"Bitte korrigieren!")
 GOTO druea1703981
rebb2911052:  


 IF LTRIM$ (fbv$) <> "" THEN 
   ON ERROR GOTO fbv2911051
   fbv% = VAL (fbv$)
   GOTO fbv2911052
 ELSE 
   GOTO fbv2911052
 END IF 
fbv2911051: 
 CALL Fehler("Der Wert bei RE-Fremd-Brutto von ist ungÅltig " + fbv$,"Bitte korrigieren!")
 GOTO druea1703981
fbv2911052: 
 
 IF LTRIM$ (fbb$) <> "" THEN 
   ON ERROR GOTO fbb2911051
   fbb% = VAL (fbb$)
   GOTO fbb2911052
 ELSE 
   GOTO fbb2911052
 END IF 
fbb2911051: 
 CALL Fehler("Der Wert bei RE-Fremd-Brutto bis ist ungÅltig " + fbb$,"Bitte korrigieren!")
 GOTO druea1703981
fbb2911052:  
 





  ON ERROR GOTO ErrorHandler
druea1703982: 
 FILE wbericht$
 sortnr$ = ""
 SELECT CASE opt1%
   CASE 1
     INDEX belegnr.wbericht$
     sortnr$ = "Belegnummer"
   CASE 2
     INDEX datum.wbericht$
     sortnr$ = "Rech_Datum"
   CASE 3
     INDEX nachname.wbericht$
     sortnr$ = "Kunde"
   CASE 4
     INDEX lrenummer.wbericht$
     sortnr$ = "Rech_Nummer"
   CASE 5
     INDEX ktoauszugsnr.wbericht$
     sortnr$ = "Kontoauszug"
   CASE 6
     INDEX warenart.wbericht$
     sortnr$ = "Buchungskonto"
   CASE 7
     INDEX gezahltAm.wbericht$
     sortnr$ = ""
   CASE 8
     INDEX Nummer2.wbericht$
     sortnr$ = ""
 END SELECT 
 SELECT WHERE 
 SELECT FIRST 
 REM 070998
 IF opt% = 1 THEN 
   bef$ = "Select where ucase$(kassejn)<>~J~"
   IF von$ <> "" THEN 
     bef$ = bef$ + " AND datum >= von$"
   END IF 
   IF bis$ <> "" THEN 
     bef$ = bef$ + " AND datum <= bis$"
   END IF 
 END IF 
 IF opt% = 2 THEN 
   bef$ = "Select where ucase$(kassejn)=~J~"
   IF von$ <> "" THEN 
     bef$ = bef$ + " AND datum >= von$"
   END IF 
   IF bis$ <> "" THEN 
     bef$ = bef$ + " AND datum <= bis$"
   END IF 
 END IF 
 IF opt% = 3 THEN 
   bef$ = "Select where"
   gesetzt% = 0
   IF von$ <> "" THEN 
     bef$ = bef$ + " datum >= von$"
     gesetzt% = - 1
   END IF 
   IF gesetzt% = - 1 THEN 
     IF bis$ <> "" THEN 
       bef$ = bef$ + " AND datum <= bis$"
     END IF 
   ELSE 
     bis$ = "31.12.2999"
     bef$ = bef$ + " datum <= bis$"
   END IF 
 END IF 
 REM IF opt% = 4 THEN 
   REM bef$ = "Select where ucase$(erledigt)<>~J~ and datum >= von$ and datum <= bis$"
 REM END IF 
 ueb1$ = ""
 IF Auswahl1$(0) <> "" THEN 
   war$ = Auswahl1$(0)
   REM bef$ = bef$ + " and warenart=war$"
   REM CALL Fehler("","")
   IF war$ LIKE "*|--*" THEN 
     codewa% = VAL ( RIGHT$ (Auswahl1$(0),6))
     bef$ = bef$ + " and codewa=codewa%"
     lenge% = LEN (Auswahl1$(0)) - 6
     ueb2a$ = LEFT$ (Auswahl1$(0),lenge%)
     ueb2$ = MID$ (ueb2a$,7)
   ELSE 
     codewgru% = VAL ( RIGHT$ (Auswahl1$(0),6))
     bef$ = bef$ + " and codewgru=codewgru%"
     lenge% = LEN (Auswahl1$(0)) - 6
     ueb1$ = LEFT$ (Auswahl1$(0),lenge%)
   END IF 
 END IF 
 IF LAuswahl1$(0) <> "" THEN 
   lie$ = LAuswahl1$(0)
   codeku1% = VAL ( RIGHT$ (lie$,6))
   bef$ = bef$ + " and codeku=codeku1%"
 END IF 
 proj$ = ""
 IF PAuswahl1$(0) <> "" THEN 
   proj$ = PAuswahl1$(0)
   codepr1% = VAL ( RIGHT$ (proj$,6))
   bef$ = bef$ + " and codepr=codepr1%"
 END IF 
 IF MahnJN$ LIKE "j" THEN 
   IF bef$ = "" THEN 
     bef$ = "Select where MahnJN like MahnJN$"
   ELSE 
     bef$ = bef$ + " and MahnJN like MahnJN$"
   END IF 
 END IF 
 IF mastufe% > - 1 THEN 
   IF bef$ = "" THEN 
     bef$ = "Select where MahnStufe = mastufe%"
   ELSE 
     bef$ = bef$ + " and MahnStufe = mastufe%"
   END IF 
 END IF 
 IF Mahnsperre$ LIKE "j" THEN 
   IF bef$ = "" THEN 
     bef$ = "Select where Mahnsperre like Mahnsperre$"
   ELSE 
     bef$ = bef$ + " and Mahnsperre like Mahnsperre$"
   END IF 
   IF msperrebis$ <> "" THEN 
     bef$ = bef$ + " and MahnsperbisDat <= msperrebis$"
   END IF 
 END IF 
 IF nichterl$ = "j" THEN 
   bef$ = bef$ + " and ucase$(erledigt)<>~J~ "
 ELSE 
   IF nichterl$ = "n" THEN 
     bef$ = bef$ + " and ucase$(erledigt) like ~J~ "
   END IF 
 END IF 


 IF LTRIM$ (bezv$) <> "" THEN 
   bezv% = DAYS (bezv$)
   bef$ = bef$ + " AND gezahltam >= bezv%"
 END IF 

 IF LTRIM$ (bezb$) <> "" THEN 
   bezb% = DAYS (bezb$)
   bef$ = bef$ + " AND gezahltam <= bezb%"
 END IF 

 IF LTRIM$ (zzielvon$) <> "" THEN 
   zzielvon% = DAYS (zzielvon$)
   bef$ = bef$ + " AND zahlbarbis >= zzielvon%"
 END IF 
 
 IF LTRIM$ (zzielbis$) <> "" THEN 
   zzielbis% = DAYS (zzielbis$)
   bef$ = bef$ + " AND zahlbarbis <= zzielbis%"
 END IF 


 IF LTRIM$ (renv$) <> "" THEN 
   renv% = VAL (renv$)
   bef$ = bef$ + " AND gesnettoeu >= renv%"
 END IF 
 IF LTRIM$ (renb$) <> "" THEN 
   renb% = VAL (renb$)
   bef$ = bef$ + " AND gesnettoeu <= renb%"
 END IF 

 IF LTRIM$ (rebv$) <> "" THEN 
   rebv% = VAL (rebv$)
   bef$ = bef$ + " AND gesbruttoeu >= rebv%"
 END IF 
 IF LTRIM$ (rebb$) <> "" THEN 
   rebb% = VAL (rebb$)
   bef$ = bef$ + " AND gesbruttoeu <= rebb%"
 END IF 


 IF LTRIM$ (fbv$) <> "" THEN 
   fbv% = VAL (fbv$)
   bef$ = bef$ + " AND brutto1 >= fbv%"
 END IF 
 IF LTRIM$ (fbb$) <> "" THEN 
   fbb% = VAL (fbb$)
   bef$ = bef$ + " AND brutto1 <= fbb%"
 END IF 


  IF bnr$ <> "" THEN 
     tB$ = NRPack$(bnr$) + "*"
     tV$ = NRPack$(belegnr)
     bef$ = bef$ + " AND NRPack$(belegnr) like tb$"
   END IF 
 
 
 
   IF rnr$ <> "" THEN 
     tr$ = NRPack$(rnr$) + "*"
     bef$ = bef$ + " AND NRPack$(LREnummer) like tr$"
   END IF 

   IF knr$ <> "" THEN 
     tk$ = NRPack$(knr$) + "*"
     tV$ = NRPack$(ktoauszugsnr)
     bef$ = bef$ + " AND NRPack$(ktoauszugsnr) like tk$"
   END IF 




 EXECUTE bef$
 SELECT FIRST FILE wbericht$
 SELECT LAST FILE wbericht$
 SELECT FIRST FILE wbericht$
 REM CALL Fehler(wbericht$,"")
 IF gadrname$ <> "" AND gadrname$ <> "<OHNE ZUORDNUNG>" THEN 
   wok% = - 1
   WHILE NOT EOF (wbericht$) AND wok% = - 1
     codeku% = codeku.wbericht$
     SELECT FIRST FILE "adressen" INDEX codeku.adressen
     SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
     REM CALL Fehler(adrgruppe.adressen,gadrname$)
     IF adrgruppe.adressen LIKE gadrname$ THEN 
       REM CALL Fehler(adrgruppe.adressen,gadrname$)
       wok% = 0
     ELSE 
       SELECT NEXT FILE wbericht$
     END IF 
   WEND 
 END IF 

 eu% = 0
 drwaehr$ = " in DM"
 IF eurosupport$ = "TRUE" THEN 
   t1$ = "Wenn Sie Rechnungen in unterschiedlichen WÑhrungen erfa·t haben, sollten Sie die RechnungsÅbersicht in EURO ausgeben lassen!"
   t2$ = ""
   CALL Fehler(t1$,t2$)
   REQUEST "öbersicht in EURO drucken?","",130,req%
   IF req% = 1 THEN 
     eu% = 1
     drwaehr$ = " in EUR"
   ELSE 
     eu% = 0
     drwaehr$ = " in allen WÑhrungen"
   END IF 
 END IF 
 FormatPrint$ = "A4q"
 datvon% = DAYS (von$)
 von$ = DATE$ (datvon%,"0d.mm.yyyy")
 datbis% = DAYS (bis$)
 bis$ = DATE$ (datbis%,"0d.mm.yyyy")
 IF UCASE$ (wbericht$) LIKE "RE*" THEN 
   IF opt% = 1 THEN 
     IF nichterl$ = "j" THEN 
       title2$ = "Rechnungseingang (nichterledigte Kontobewegungen) vom: " + von$ + " bis: " + bis$
     ELSE 
       IF nichterl$ = "n" THEN 
         title2$ = "Rechnungseingang (erledigte Kontobewegungen) vom: " + von$ + " bis: " + bis$
       ELSE 
         title2$ = "Rechnungseingang (alle Kontobewegungen) vom: " + von$ + " bis: " + bis$
       END IF 
     END IF 
   END IF 
   IF opt% = 2 THEN 
     IF nichterl$ = "j" THEN 
       title2$ = "Rechnungseingang (nichterledigte Kassenbewegungen) vom: " + von$ + " bis: " + bis$
     ELSE 
       IF nichterl$ = "n" THEN 
         title2$ = "Rechnungseingang (erledigte Kassenbewegungen) vom: " + von$ + " bis: " + bis$
       ELSE 
         title2$ = "Rechnungseingang (alle Kassenbewegungen) vom: " + von$ + " bis: " + bis$
       END IF 
     END IF 
   END IF 
   IF opt% = 3 THEN 
     IF nichterl$ = "j" THEN 
       title2$ = "Rechnungseingang (alle nichterledigten Bewegungen) vom: " + von$ + " bis: " + bis$
     ELSE 
       IF nichterl$ = "n" THEN 
         title2$ = "Rechnungseingang (erledigte Bewegungen) vom: " + von$ + " bis: " + bis$
       ELSE 
         title2$ = "Rechnungseingang (alle Bewegungen) vom: " + von$ + " bis: " + bis$
       END IF 
     END IF 
   END IF 
   IF opt% = 4 THEN 
     title2$ = "Rechnungseingang (nichterledigt VorgÑnge) vom: " + von$ + " bis: " + bis$
   END IF 
 ELSE 
   IF opt% = 1 THEN 
     IF nichterl$ = "j" THEN 
       IF MahnJN$ LIKE "j" THEN 
         title2$ = "Rechnungsausgang (nichterledigte-angemahnte Kontobewegungen) vom: " + von$ + " bis: " + bis$
       ELSE 
         title2$ = "Rechnungsausgang (nichterledigte Kontobewegungen) vom: " + von$ + " bis: " + bis$
       END IF 
     ELSE 
       IF nichterl$ = "n" THEN 
         IF MahnJN$ LIKE "j" THEN 
           title2$ = "Rechnungsausgang (angemahnte erledigte Kontobewegungen) vom: " + von$ + " bis: " + bis$
         ELSE 
           title2$ = "Rechnungsausgang (erledigte Kontobewegungen) vom: " + von$ + " bis: " + bis$
         END IF 
       ELSE 
         IF MahnJN$ LIKE "j" THEN 
           title2$ = "Rechnungsausgang (alle angemahnten Kontobewegungen) vom: " + von$ + " bis: " + bis$
         ELSE 
           title2$ = "Rechnungsausgang (alle Kontobewegungen) vom: " + von$ + " bis: " + bis$
         END IF 
       END IF 
     END IF 
   END IF 
   IF opt% = 2 THEN 
     IF nichterl$ = "j" THEN 
       IF MahnJN$ LIKE "j" THEN 
         title2$ = "Rechnungsausgang (nichterledigte-angemahnte Kassenbewegungen) vom: " + von$ + " bis: " + bis$
       ELSE 
         title2$ = "Rechnungsausgang (nichterledigte Kassenbewegungen) vom: " + von$ + " bis: " + bis$
       END IF 
     ELSE 
       IF nichterl$ = "n" THEN 
         IF MahnJN$ LIKE "j" THEN 
           title2$ = "Rechnungsausgang (erledigte angemahnten Kassenbewegungen) vom: " + von$ + " bis: " + bis$
         ELSE 
           title2$ = "Rechnungsausgang (erledigte Kassenbewegungen) vom: " + von$ + " bis: " + bis$
         END IF 
       ELSE 
         IF MahnJN$ LIKE "j" THEN 
           title2$ = "Rechnungsausgang (alle angemahnten Kassenbewegungen) vom: " + von$ + " bis: " + bis$
         ELSE 
           title2$ = "Rechnungsausgang (alle Kassenbewegungen) vom: " + von$ + " bis: " + bis$
         END IF 
       END IF 
     END IF 
   END IF 
   IF opt% = 3 THEN 
     IF nichterl$ = "j" THEN 
       IF MahnJN$ LIKE "j" THEN 
         title2$ = "Rechnungsausgang (nichterledigten-angemahnten Bewegungen) vom: " + von$ + " bis: " + bis$
       ELSE 
         title2$ = "Rechnungsausgang (nichterledigten Bewegungen) vom: " + von$ + " bis: " + bis$
       END IF 
     ELSE 
       IF nichterl$ = "n" THEN 
         IF MahnJN$ LIKE "j" THEN 
           title2$ = "Rechnungsausgang (erledigte angemahnten Bewegungen) vom: " + von$ + " bis: " + bis$
         ELSE 
           title2$ = "Rechnungsausgang (erledigte Bewegungen) vom: " + von$ + " bis: " + bis$
         END IF 
       ELSE 
         IF MahnJN$ LIKE "j" THEN 
           title2$ = "Rechnungsausgang (alle angemahnten Bewegungen) vom: " + von$ + " bis: " + bis$
         ELSE 
           title2$ = "Rechnungsausgang (alle Bewegungen) vom: " + von$ + " bis: " + bis$
         END IF 
       END IF 
     END IF 
   END IF 
   IF opt% = 4 THEN 
     IF nichterl$ = "j" THEN 
       IF MahnJN$ LIKE "j" THEN 
         title2$ = "Rechnungsausgang (nichterledigte-angemahnte VorgÑnge) vom: " + von$ + " bis: " + bis$
       ELSE 
         title2$ = "Rechnungsausgang (nichterledigte VorgÑnge) vom: " + von$ + " bis: " + bis$
       END IF 
     ELSE 
       IF nichterl$ = "n" THEN 
         IF MahnJN$ LIKE "j" THEN 
           title2$ = "Rechnungsausgang (erledigte-angemahnte VorgÑnge) vom: " + von$ + " bis: " + bis$
         ELSE 
           title2$ = "Rechnungsausgang (erledigte VorgÑnge) vom: " + von$ + " bis: " + bis$
         END IF 
       ELSE 
         IF MahnJN$ LIKE "j" THEN 
           title2$ = "Rechnungsausgang (alle erledigten-angemahnte VorgÑnge) vom: " + von$ + " bis: " + bis$
         ELSE 
           title2$ = "Rechnungsausgang (alle erledigten VorgÑnge) vom: " + von$ + " bis: " + bis$
         END IF 
       END IF 
     END IF 
   END IF 
 END IF 
 IF proj$ <> "" THEN 
   title2$ = title2$ + "fÅr Projekt: " + LTRIM$ ( LEFT$ (proj$,100))
 END IF 
 IF mastufe% > - 1 THEN 
   title2$ = title2$ + " Mahnstufe: " + mastufe$
 END IF 
 IF ueb1$ <> "" THEN title2$ = title2$ + " Buchungsgruppe: " + ueb1$
 IF ueb2$ <> "" THEN title2$ = title2$ + " Buchungskonto: " + ueb2$
 title2$ = title2$ + "  " + drwaehr$
 IF Guebschrift$ <> "" THEN 
   Guebschrift$ = "*** " + Guebschrift$ + " ***"
   title2$ = Guebschrift$ + CHR$ (13) + CHR$ (10) + title2$
   REM title2$ = "*** " + title2tmp$ + " ****"
 END IF 



 IF offbetr$ = "j" THEN 
   IF gadrname$ <> "" AND gadrname$ <> "<OHNE ZUORDNUNG>" THEN 
     adrgruppe$ = gadrname$
   ELSE 
     adrgruppe$ = ""
   END IF 
   CALL OffXLSAUS(wbericht$,title2$,eu%,sortnr$,adrgruppe$)
   GOTO w140820073
 END IF 


 MOUSE OFF 
 IF eu% = 0 THEN 
   DIM Waehrung%( RECCOUNT ("waehrung"))
   DIM Waehrung$( RECCOUNT ("waehrung"))
   DIM WSumNetUM%( RECCOUNT ("waehrung"))
   DIM WSumBrut%( RECCOUNT ("waehrung"))
   DIM WSumBrutU%( RECCOUNT ("waehrung"))
   DIM WaehrungMW%( RECCOUNT ("waehrung"))

   DIM WSumNetUMSK%( RECCOUNT ("waehrung"))
   DIM WSumBrutSK%( RECCOUNT ("waehrung"))
   DIM WSumBrutUSK%( RECCOUNT ("waehrung"))
   DIM WaehrungMWSK%( RECCOUNT ("waehrung"))
   DIM WSumAngez%( RECCOUNT ("waehrung"))
   FILE "waehrung"
   INDEX Codew.waehrung
   SELECT FIRST 
   az% = 0
   WHILE NOT EOF ("waehrung")
     Waehrung%(az%) = CodeW.waehrung
     Waehrung$(az%) = Waehrung.waehrung
     az% = az% + 1
     SELECT NEXT FILE "waehrung"
   WEND 
 END IF 
 FILE wbericht$
 CALL VPEINI(title2$,FormatPrint$)
 vzeil% = mTop%
 IF eurosupport$ = "TRUE" THEN 
   mbottom% = mbottom% - 55 - (az% * 40)
 ELSE 
   mbottom% = mbottom% - 55 - (az% * 40)
 END IF 
 CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
 CALL VWrite(mleft%,vzeil% + 10,mright% - 3,"['Arial' S 9 B C BLACK]" + title2$)
 CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")) + " gedruckt am: " + DATE$ ( TODAY ,"0d.mm.yyyy") + "/" + TIME$ ( NOW ,"hh:mm"))
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 vzeil% = obBottom% + 20
 a% = vzeil%
 IF gdrumitkunr$ = "j" THEN 
   CALL VWrite(mleft%,a%,mleft% + 380,"['Arial' S 8 B C BLACK]" + "Kundennummer - Name/Ort")
 ELSE 
   CALL VWrite(mleft%,a%,mleft% + 380,"['Arial' S 8 B C BLACK]" + "Name/Ort")
 END IF 
 CALL VWrite(mleft% + 2020,a%,mleft% + 2210,"['Arial' S 8 B C BLACK]" + "Beleg-Datum")
 CALL VAlign(1)
 CALL VWrite(mleft% + 590,a%,mleft% + 890,"['Arial' S 8 B C BLACK]" + "Brut.Betr./mit Skonto")
 REM CALL VWrite(mleft% + 690,a% + 35,mleft% + 890,"['Arial' S 8 B C BLACK]" + "Bruttobetrag")
 IF offBetr$ LIKE "J" THEN 
   CALL VWrite(mleft% + 690,a% + 35,mleft% + 890,"['Arial' S 8 B C BLACK]" + "MahngebÅhren")
   CALL VWrite(mleft% + 900,a% + 35,mleft% + 1200,"['Arial' S 8 B C BLACK]" + "noch offen/angezahlt")
    REM CALL VWrite(mleft% + 900,a% + 70,mleft% + 1200,"['Arial' S 8 B C BLACK]" + "noch offen/angezahlt")
 END IF 

 IF eu% = 0 THEN CALL VWrite(mleft% + 1150,a% + 35,mleft% + 1410,"['Arial' S 8 B C BLACK]" + "MwSt")
 IF eu% = 1 THEN CALL VWrite(mleft% + 1150,a% + 35,mleft% + 1410,"['Arial' S 8 B C BLACK]" + "MwSt EUR")
 IF vzeil% > a% THEN 
   maxv% = vzeil%
 ELSE 
   maxv% = a%
 END IF 
 IF offBetr$ LIKE "J" THEN 
   REM CALL VWrite(mleft% + 900,a% + 70,mleft% + 1200,"['Arial' S 8 B C BLACK]" + "noch offen/angezahlt")
 ELSE 
   REM CALL VWrite(mleft% + 900,a%,mleft% + 1200,"['Arial' S 8 B C BLACK]" + "Gutschrift")
 END IF 
 REM CALL VWrite(mleft% + 900,a%,mleft% + 1200,"['Arial' S 8 B C BLACK]" + "noch offen")
 CALL VWrite(mleft% + 1150,a%,mleft% + 1410,"['Arial' S 8 B C BLACK]" + "MwSt %")
 CALL VAlign(0)
 CALL VWrite(mleft% + 1420,a%,mleft% + 1710,"['Arial' S 8 B C BLACK]" + "RE-Nr")
 CALL VWrite(mleft% + 1420,a% + 35,mleft% + 1710,"['Arial' S 8 B C BLACK]" + "Buchungskonto")
 CALL VWrite(mleft% + 1720,a%,mleft% + 2010,"['Arial' S 8 B C BLACK]" + "Buchnr.")
 CALL VWrite(mleft% + 2220,a%,mleft% + 2410,"['Arial' S 8 B C BLACK]" + "bezahlt am")
 CALL VWrite(mleft% + 2370,a%,mright%,"['Arial' S 8 B C BLACK]" + "Ktoauszug")
 obBottom% = maxv%
 CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 vzeil% = obBottom% + 20
 REM CALL VPrevDoc()
 
 ueberpos% = vzeil%
 CALL VTransp(0)
 CALL VSetPen(0,0)
 zeilenabstand% = 40
 zeilenoffset% = 40
 i% = 1

 gesmahnoff% = 0
 gesmahngez% = 0
 gesmahn% = 0

 summahnoff% = 0
 summahngez% = 0
 summahn% = 0

 remahnoff% = 0
 remahngez% = 0
 remahn% = 0

 sumangez% = 0
 gesangez% = 0
 sumoffen% = 0
 sumgesnet% = 0
 sumgesanz% = 0
 sumgesbrut% = 0
 uebertrnet% = 0
 uebertranz% = 0
 uebertrbrut% = 0
 uebertroffen% = 0
 uebertrangez% = 0
 resum% = 0
 remw% = 0
 reoffen% = 0
 reangez% = 0
 belegnr$ = belegnr
 belegnrold$ = belegnr$
 belegcount% = 0
 zw$ = "n"

 fstgroup% = 0
 REM mbottom% = mbottom% - 15
 gruppeold$ = "nextpage"

 REM CALL Fehler(wbericht$,"111111111")
 FILE wbericht$
 SELECT FIRST FILE wbericht$
 i% = 0
 j% = RECCOUNT (wbericht$)

 SELECT FIRST FILE wbericht$
 REM **************************************************************
     IF gadrname$ <> "" AND gadrname$ <> "<OHNE ZUORDNUNG>" THEN 
       wok% = - 1
       REM SELECT NEXT 
       WHILE NOT EOF (wbericht$) AND wok% = - 1
         codeku% = codeku.wbericht$
         SELECT FIRST FILE "adressen" INDEX codeku.adressen
         SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
         IF adrgruppe.adressen LIKE gadrname$ THEN 
           wok% = 0
         ELSE 
           SELECT NEXT 
         END IF 
       WEND 
     ELSE 
       REM SELECT NEXT 
     END IF 
 REM **************************************************************
  
 WHILE NOT EOF (wbericht$)
   REM codeku% = codeku.wbericht$
   a% = vzeil%
   czeile% = vzeil%
   cPage% = CALL ("VpeGetCurrentPage",hdoc%)
   cPageold% = cPage%
   ok% = - 1
   REM 08022000

   belegcount% = belegcount% + 1
   belegnr$ = belegnr
   REM 07022000
   CALL VAlign(0)
   IF gdrumitkunr$ = "j" THEN 
     IF offBetr$ LIKE "J" THEN 
       CALL VWrite(mleft%,a%,mleft% + 680,"['Arial' S 8 B C BLACK]" + Kundennummer + " - " + LEFT$ (Nachname) + "/" + LEFT$ (Ort))
     ELSE 
       CALL VWrite(mleft%,a%,mleft% + 680,"['Arial' S 8 B C BLACK]" + Kundennummer + " - " + LEFT$ (Nachname) + "/" + LEFT$ (Ort))
     END IF 
   ELSE 
     IF offBetr$ LIKE "J" THEN 
       CALL VWrite(mleft%,a%,mleft% + 680,"['Arial' S 8 B C BLACK]" + LEFT$ (Nachname) + "/" + LEFT$ (Ort))
     ELSE 
       CALL VWrite(mleft%,a%,mleft% + 680,"['Arial' S 8 B C BLACK]" + LEFT$ (Nachname) + "/" + LEFT$ (Ort))
     END IF 
   END IF 
   CALL VWrite(mleft% + 2020,a%,mleft% + 2210,"['Arial' S 8 B C BLACK]" + DATE$ (Datum,"0d.mm.yyyy"))
   CALL VAlign(1)

   IF gutschriftJN <> "J" THEN 
     IF eu% = 0 THEN 
       tg$ = STR$ (gesbrutto,",9999999999.00")
       tm$ = STR$ (mwstdm,"9999999999.00")
       IF offBetr$ LIKE "J" THEN 
         CALL VWrite(mleft% + 660,a%,mleft% + 860,"['Arial' S 8 B C BLACK]" + LTRIM$ (tg$) + " " + LTRIM$ (waehrung))
       ELSE 
         CALL VWrite(mleft% + 660,a%,mleft% + 860,"['Arial' S 8 B C BLACK]" + LTRIM$ (tg$) + " " + LTRIM$ (waehrung))
       END IF 
       gesoffen% = 0
       goffb$ = ""
       IF offBetr$ LIKE "J" THEN 
         gesoffen% = gesbrutto - summeteil + summemahn
         goffb$ = STR$ (gesoffen%,",9999999.00")
         CALL VWrite(mleft% + 870,a%,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (gesoffen%,",9999999999.00")) + " / " + LTRIM$ ( STR$ (summeteil - summemahn,",9999999999.00")) + LTRIM$ (waehrung))
         CALL VWrite(mleft% + 870,a% + 35,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (gesmahn - summemahn,",9999999999.00")) + " / " + LTRIM$ ( STR$ (summemahn,",9999999999.00")) + LTRIM$ (waehrung))
       END IF 
       gesBrutto% = VAL (tg$)
       gesmwst% = VAL (tm$)
       gesmahnoff% = gesmahn - summemahn
       gesmahngez% = summemahn
       gesmahn% = gesmahn
     ELSE 
       tg$ = STR$ (gesbruttoEU,",9999999999.00")
       tm$ = STR$ (mwstEU,"9999999999.00")
       tgSK$ = STR$ (gesbruttoSK,",9999999999.00")
       IF GesBruttoSK <> 0 THEN 
         CALL VWrite(mleft% + 560,a%,mleft% + 860,"['Arial' S 8 B C BLACK]" + LTRIM$ (tg$) + "/" + LTRIM$ (tgsk$))
       ELSE 
         CALL VWrite(mleft% + 560,a%,mleft% + 860,"['Arial' S 8 B C BLACK]" + LTRIM$ (tg$) + "/" + LTRIM$ (tg$))
       END IF 
       gesoffen% = 0
       goffb$ = ""
       REM CALL Fehler("offen","")
       IF offBetr$ LIKE "J" THEN 
         CALL VWrite(mleft% + 560,a% + 35,mleft% + 860,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (gesmahneu,",9999999999.00")))
         gesoffen% = gesbruttoeu - summeteileu + summemahneu
         goffb$ = STR$ (gesoffen%,",9999999.00")
         CALL VWrite(mleft% + 870,a%,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (gesoffen%,",9999999999.00")) + " / " + LTRIM$ ( STR$ (summeteil - summemahneu,",9999999999.00")))
         CALL VWrite(mleft% + 870,a% + 35,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (gesmahneu - summemahneu,",9999999999.00")) + " / " + LTRIM$ ( STR$ (summemahneu,",9999999999.00")))
       END IF 
       gesBrutto% = VAL (tg$)
       gesmwst% = VAL (tm$)
       gesangez% = summeteileu - summemahneu
       gesmahnoff% = gesmahneu - summemahneu
       gesmahngez% = summemahneu
       gesmahn% = gesmahneu
     END IF 
     IF GesBruttoSK <> 0 THEN 
       IF eu% = 0 THEN 
         tgSK$ = STR$ (gesbruttoSK,",9999999999.00")
         tmSK$ = STR$ ((GesBruttosk - (GesBruttosk / (100 + MwSt) * 100)),"9999999999.00")
         gesBruttoSK% = VAL (tgSK$)
         gesmwstSK% = VAL (tmSK$)
         tg$ = STR$ (gesbrutto,",9999999999.00")
         tm$ = STR$ (mwstdm,"9999999999.00")
         gesBrutto% = VAL (tg$)
         gesmwst% = VAL (tm$)
         gesoffen1% = 0
         goffb$ = ""
         IF offBetr$ LIKE "J" THEN 
           gesoffen1% = gesbruttosk - summeteil + summemahn
           goffb$ = STR$ (gesoffen%,",9999999.00")
           CALL VWrite(mleft% + 870,a% + 35,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (Gesoffen1%,",9999999999.00")) + " / " + LTRIM$ ( STR$ (summeteil - summemahneu,",9999999999.00")))
           CALL VWrite(mleft% + 870,a% + 35,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (gesmahneu - summemahneu,",9999999999.00")) + " / " + LTRIM$ ( STR$ (summemahneu,",9999999999.00")))
         END IF 
         gesangez% = summeteileu
         gesmahnoff% = gesmahneu - summemahneu
         gesmahngez% = summemahneu
         gesmahn% = gesmahneu 
         CALL VWrite(mleft% + 660,a% + 35,mleft% + 860,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (GesBruttoSK,",9999999999.00")))
         CALL VAlign(0)
         CALL VWrite(mleft% + 1180,a% + 35,mleft% + 1300,"['Arial' S 8 B C BLACK]" + "mit Skto")
         CALL VAlign(1)
       ELSE 
         tgSK$ = STR$ (gesbruttoSKEU,",9999999999.00")
         tmSK$ = STR$ ((GesBruttoskEU - (GesBruttoskEU / (100 + MwSt) * 100)),"9999999999.00")
         gesBruttoSK% = VAL (tgSK$)
         gesmwstSK% = VAL (tmSK$)
         tg$ = STR$ (gesbruttoEU,",9999999999.00")
         tm$ = STR$ (mwsteu,"9999999999.00")
         gesBrutto% = VAL (tg$)
         gesmwst% = VAL (tm$)
         gesoffe1n% = 0
         goffb$ = ""
         IF offBetr$ LIKE "J" THEN 
           gesoffen1% = gesbruttoskeu - summeteileu + summemahneu
           goffb$ = STR$ (gesoffen%,",9999999.00")
           CALL VWrite(mleft% + 870,a% + 35,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (Gesoffen1%,",9999999999.00")) + " / " + LTRIM$ ( STR$ (summeteil - summemahneu,",9999999999.00")))
           CALL VWrite(mleft% + 870,a% + 35,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (gesmahneu - summemahneu,",9999999999.00")) + " / " + LTRIM$ ( STR$ (summemahneu,",9999999999.00")))
         END IF 
         gesangez% = summeteileu - summemahneu
         gesmahnoff% = gesmahneu - summemahneu
         gesmahngez% = summemahneu
         gesmahn% = gesmahneu 
         REM CALL VWrite(mleft% + 560,a% + 35,mleft% + 860,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (GesBruttoSKEU,",9999999999.00")))
         CALL VAlign(0)
         REM CALL VWrite(mleft% + 870,a% + 35,mleft% + 1010,"['Arial' S 8 B C BLACK]" + "mit Skto")
         CALL VWrite(mleft% + 1180,a% + 35,mleft% + 1300,"['Arial' S 8 B C BLACK]" + "mit Skto")
         CALL VAlign(1)
       END IF 
     ELSE 
       gesBruttoSK% = gesBrutto%
       gesmwstSK% = gesmwst%
       gesangez% = summeteileu
       gesmahnoff% = gesmahneu - summemahneu
       gesmahngez% = summemahneu
       gesmahn% = gesmahneu 
       IF offBetr$ LIKE "J" THEN 
       END IF 
     END IF 
   END IF 

   IF gutschriftJN = "J" THEN 

     gesoffen% = 0
     IF eu% = 0 THEN 
       tg$ = STR$ (gesbrutto,",9999999999.00")
       tm$ = STR$ (mwstdm,"9999999999.00")
       gesBrutto% = VAL (tg$) * ( - 1)
       gesmwst% = VAL (tm$) * ( - 1)
       tgSK$ = STR$ (gesbruttoSK,",9999999999.00")
       tmSK$ = STR$ ((GesBruttosk - (GesBruttosk / (100 + MwSt) * 100)),"9999999999.00")
       gesBruttoSK% = VAL (tgSK$) * ( - 1)
       gesmwstSK% = VAL (tmSK$) * ( - 1)
       IF GesBruttoSK = 0 THEN 
         gesBruttoSK% = VAL (tg$) * ( - 1)
         gesmwstSK% = VAL (tm$) * ( - 1)
       END IF 
     ELSE 
       tg$ = STR$ (gesbruttoEU,",9999999999.00")
       tm$ = STR$ (mwstEU,"9999999999.00")
       gesBrutto% = VAL (tg$) * ( - 1)
       gesmwst% = VAL (tm$) * ( - 1)
       tgSK$ = STR$ (gesbruttoSKEU,",9999999999.00")
       tmSK$ = STR$ ((GesBruttoskEU - (GesBruttoskEU / (100 + MwSt) * 100)),"9999999999.00")
       gesBruttoSK% = VAL (tgSK$) * ( - 1)
       gesmwstSK% = VAL (tmSK$) * ( - 1)
       IF GesBruttoSK = 0 THEN 
         gesBruttoSK% = VAL (tg$) * ( - 1)
         gesmwstSK% = VAL (tm$) * ( - 1)
       END IF 
     END IF 
     IF GesBruttoSK <> 0 THEN 
       CALL VWrite(mleft% + 560,a%,mleft% + 860,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (gesBrutto%,",9999999.00")) + "/" + LTRIM$ ( STR$ (gesbruttosk%,",99999999.00")))
     ELSE 
       CALL VWrite(mleft% + 560,a%,mleft% + 860,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (gesBrutto%,",9999999.00")) + "/" + LTRIM$ ( STR$ (gesbrutto%,",99999999.00")))
     END IF 
     
       IF offBetr$ LIKE "J" THEN 
         gesmahneu% = gesmahneu * - 1
         CALL VWrite(mleft% + 560,a% + 35,mleft% + 860,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (gesmahneu%,",9999999999.00")))
         gesoffen1% = (gesbruttoeu - summeteileu + summemahneu) * - 1
         goffb$ = STR$ (gesoffen%,",9999999.00")
         CALL VWrite(mleft% + 870,a%,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (gesoffen1%,",9999999999.00")) + " / " + LTRIM$ ( STR$ ((summeteil - summemahneu ) * - 1,",9999999999.00")))
         CALL VWrite(mleft% + 870,a% + 35,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ ((gesmahneu - summemahneu) * - 1,",9999999999.00")) + " / " + LTRIM$ ( STR$ (summemahneu * - 1,",9999999999.00")))
       END IF 
       gesangez% = (summeteileu - summemahneu) * - 1
       gesmahnoff% = (gesmahneu - summemahneu) * - 1
       gesmahngez% = summemahneu * - 1
       gesmahn% = gesmahneu * - 1

     REM CALL VWrite(mleft% + 590,a%,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (gesBrutto%,",9999999999.00")) + " " + LTRIM$ (waehrung))
           REM 
     REM IF GesBruttoSK <> 0 THEN 
       REM IF eu% = 0 THEN 
         REM CALL VWrite(mleft% + 590,a% + 35,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (GesBruttoSK,",9999999999.00")))
       REM ELSE 
         REM CALL VWrite(mleft% + 590,a% + 35,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (GesBruttoSKEU,",9999999999.00")))
       REM END IF 
       REM CALL VAlign(0)
       REM CALL VWrite(mleft% + 370,a% + 35,mleft% + 570,"['Arial' S 8 B C BLACK]" + "mit Skto")
       REM CALL VAlign(1)
     REM END IF 
     REM CALL VWrite(mleft% + 1180,a%,mleft% + 1370,"['Arial' S 8 B C BLACK]" + STR$ (gesmwst%,",999.00"))
   END IF 


   CALL VWrite(mleft% + 1250,a%,mleft% + 1370,"['Arial' S 8 B C BLACK]" + STR$ (mwst,",999.00"))
   CALL VAlign(0)
   CALL VWrite(mleft% + 1420,a%,mleft% + 1710,"['Arial' S 8 B C BLACK]" + LEFT$ (LRENummer))
   CALL VWrite(mleft% + 1420,a% + 35,mleft% + 2300,"['Arial' S 8 B C BLACK]" + LEFT$ (Warenart))
   IF eu% = 0 THEN 
     CALL VWrite(mleft% + 1720,a%,mleft% + 2010,"['Arial' S 8 B C BLACK]" + LEFT$ (Belegnr))
   ELSE 
     CALL VWrite(mleft% + 1720,a%,mleft% + 2010,"['Arial' S 8 B C BLACK]" + LEFT$ (Belegnr))
   END IF 
   CALL VWrite(mleft% + 2220,a%,mleft% + 2410,"['Arial' S 8 B C BLACK]" + DATE$ (gezahltam,"0d.mm.yyyy"))
   CALL VWrite(mleft% + 2370,a%,mright%,"['Arial' S 8 B C BLACK]" + LEFT$ (Ktoauszugsnr))
   CALL VAlign(1)
   REM IF eu% = 0 THEN 
     REM IF gutschriftJN <> "J" THEN CALL VWrite(mleft% + 1180,a% + 35,mleft% + 1370,"['Arial' S 8 B C BLACK]" + STR$ (mwstdm,",99999999.00"))
   REM ELSE 
     REM IF gutschriftJN <> "J" THEN CALL VWrite(mleft% + 1180,a% + 35,mleft% + 1370,"['Arial' S 8 B C BLACK]" + STR$ (mwstEU,",99999999.00"))
   REM END IF 
   REM IF gutschriftJN = "J" THEN CALL VWrite(mleft% + 1180,a% + 35,mleft% + 1370,"['Arial' S 8 B C BLACK]" + STR$ (gesmwst%,",99999999.00"))
   IF GesBruttoSK <> 0 THEN 
     CALL VWrite(mleft% + 1150,a% + 35,mleft% + 1370,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (gesmwst%,",99999999.00")) + " / " + LTRIM$ ( STR$ (gesmwstSK%,",99999999.00")))
   ELSE 
     CALL VWrite(mleft% + 1150,a% + 35,mleft% + 1370,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (gesmwst%,",99999999.00")) + " / " + LTRIM$ ( STR$ (gesmwst%,",99999999.00")))
   END IF 

   CALL VAlign(0)
   IF eu% = 0 THEN 
     FOR i% = 0 TO az%
       IF codew.wbericht$ = waehrung%(i%) THEN 
         WSumBrut%(i%) = WSumBrut%(i%) + gesBrutto%
         WaehrungMW%(i%) = WaehrungMW%(i%) + gesmwst%
         WSumBrutU%(i%) = WSumBrutU%(i%) + gesBrutto%
         WSumNetUM%(i%) = WSumNetUM%(i%) + gesmwst%

         WSumBrutSK%(i%) = WSumBrutSK%(i%) + gesBruttoSK%
         WaehrungMWSK%(i%) = WaehrungMWSK%(i%) + gesmwstSK%
         WSumBrutUSK%(i%) = WSumBrutUSK%(i%) + gesBruttoSK%
         WSumNetUMSK%(i%) = WSumNetUMSK%(i%) + gesmwstSK%
         WSumAngez%(i%) = WSumAngez%(i%) + gesangez%
       END IF 
     NEXT i%
   ELSE 
     sumges% = sumges% + gesBrutto%
     sumgesmwst% = sumgesmwst% + gesmwst%
     sumuebertrg% = sumuebertrg% + gesBrutto%
     sumuebertrm% = sumuebertrm% + gesmwst%

     uebertroffen% = uebertroffen% + gesoffen%
     uebertrangez% = uebertrangez% + gesangez%

     sumgesSK% = sumgesSK% + gesBruttoSK%
     sumgesmwstSK% = sumgesmwstSK% + gesmwstSK%
     sumuebertrgSK% = sumuebertrgSK% + gesBruttoSK%
     sumuebertrmSK% = sumuebertrmSK% + gesmwstSK%

     sumoffen% = sumoffen% + gesoffen%
     sumangez% = sumangez% + gesangez%

     summahnoff% = summahnoff% + gesmahnoff%
     summahngez% = summahngez% + gesmahngez%
     summahn% = summahn% + gesmahn%

   END IF 
   a% = vzeil%
   a% = vzeil% + 10
   REM CALL Fehler("Rechzaehl","")
   REM IF belegnr$ = belegnrold$ THEN 
     REM resum% = resum% + gesbrutto%
     REM remw% = remw% + gesmwst%
   REM END IF 
   IF belegnr$ <> belegnrold$ THEN 
     CALL Fehler("print","")
     IF belegcount% < 2 THEN belegnrold$ = belegnr$
     IF belegcount% > 1 THEN 
       REM CALL Fehler("TTT1","")
       REM Zwischensumme mu· wohl ausgegeben werden
       CALL VWrite(mleft%,a%,mleft% + 1000,"['Arial' S 8 B C BLACK]" + "Summe Beleg: " + belegnrold$)
       belegnrold$ = belegnr$
       CALL VAlign(1)
       CALL VWrite(mleft% + 670,a%,mleft% + 860,"['Arial' S 8 B C BLACK]" + STR$ (resum%,",9999999999.00"))
       IF offBetr$ LIKE "J" THEN 
         CALL VWrite(mleft% + 870,a%,mleft% + 1270,"['Arial' S 8 B C BLACK]" + STR$ (reoffen%,",99999.00"))
       END IF 
       CALL VWrite(mleft% + 1280,a%,mleft% + 1570,"['Arial' S 8 B C BLACK]" + STR$ (remw%,",999.00"))
       CALL VAlign(1)
       a% = vzeil% + 10
       CALL VLine(mleft% - 7,a%,mright%,a%)
       CALL VLine(mleft% - 7,a% + 2,mright%,a% + 2)
       a% = vzeil% + 30
       vzeil% = a%
       zw$ = "j"
     ELSE 
       belegcount% = 0
       resum% = gesbrutto%
       remw% = gesmwst%
       reoffen% = gesoffen%
       reangez% = gesangez%
       remahn% = gesmahn%
       remahnoffen% = gesmahnoffen%
       remahngez% = gesmahngez%
     END IF 
   END IF 


   CALL VLine(mleft% - 7,a%,mright%,a%)
   vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   a% = vzeil% + 10
   vzeil% = a%
   a% = vzeil%
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   IF obBottom% < a% THEN obBottom% = a%
   IF obBottom% >= mBottom% THEN 
     REM CALL VBox(mleft% - 7,mTop%,mright%,obBottom%)
     CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
     CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
     CALL VLine(mright%,mtop%,mright%,czeile%)
     REM 071098
     IF eu% = 0 THEN 
       FOR i% = 0 TO az%
         IF codew.wbericht$ = waehrung%(i%) THEN 
           WSumBrut%(i%) = WSumBrut%(i%) - gesBrutto%
           WaehrungMW%(i%) = WaehrungMW%(i%) - gesmwst%
           WSumBrutU%(i%) = WSumBrutU%(i%) - gesBrutto%
           WSumNetUM%(i%) = WSumNetUM%(i%) - gesmwst%

           WSumBrutSK%(i%) = WSumBrutSK%(i%) - gesBruttoSK%
           WaehrungMWSK%(i%) = WaehrungMWSK%(i%) - gesmwstSK%
           WSumBrutUSK%(i%) = WSumBrutUSK%(i%) - gesBruttoSK%
           WSumNetUMSK%(i%) = WSumNetUMSK%(i%) - gesmwstSK%
           WSumAngez%(i%) = WSumAngez%(i%) + gesangez%
         END IF 
       NEXT i%
     ELSE 
       sumuebertrg% = sumuebertrg% - gesBrutto%
       sumuebertrm% = sumuebertrm% - gesmwst%
       sumges% = sumges% - gesBrutto%
       sumgesmwst% = sumgesmwst% - gesmwst%
       uebertroffen% = uebertroffen% - gesoffen%
       uebertrangez% = uebertrangez% - gesangez%

       sumuebertrgSK% = sumuebertrgSK% - gesBruttoSK%
       sumuebertrmSK% = sumuebertrmSK% - gesmwstSK%
       sumgesSK% = sumgesSK% - gesBruttoSK%
       sumgesmwstSK% = sumgesmwstSK% - gesmwstSK%

       sumoffen% = sumoffen% - gesoffen%
       sumangez% = sumangez% - gesangez%
       summahnoff% = summahnoff% - gesmahnoff%
       summahngez% = summahngez% - gesmahngez%
       summahn% = summahn% - gesmahn%
     END IF 
     REM resum% = resum% - gesbrutto%
     REM remw% = remw% - gesmwst%

     CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
     CALL VAlign(0)
     CALL VWrite(mleft%,czeile% + 35,mleft% + 540,"['Arial' S 9 B C BLACK]" + "öbertrag:Total/mit Skto")
     CALL VAlign(1)
     IF eu% = 0 THEN 
       j% = 0
       FOR i% = 0 TO az%
         IF WSumBrutU%(i%) <> 0 THEN 
           CALL VWrite(mleft% + 350,czeile% + 35 + j%,mleft% + 870,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (WSumBrutU%(i%),",99999999999.00")) + " " + waehrung$(i%) + " / " + LTRIM$ ( STR$ (WSumBrutUSK%(i%),",99999999999.00")) + " " + waehrung$(i%))
           CALL VWrite(mleft% + 910,czeile% + 35 + j%,mleft% + 1370,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (WSumNetUM%(i%),",9999999999.00")) + " " + waehrung$(i%) + " / " + LTRIM$ ( STR$ (WSumNetUMSK%(i%),",9999999999.00")) + " " + waehrung$(i%))
           j% = j% + 40
         END IF 
       NEXT i%
     ELSE 
       CALL VWrite(mleft% + 350,czeile% + 35,mleft% + 870,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (sumuebertrg%,",99999999999.00")) + " / " + LTRIM$ ( STR$ (sumuebertrgSK%,",99999999999.00")))
       IF offBetr$ LIKE "J" THEN 
         CALL VWrite(mleft% + 870,czeile% + 35,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (uebertroffen%,",9999999.00")) + " / " + LTRIM$ ( STR$ (uebertrangez%,",9999999.00")))
       END IF 
       CALL VWrite(mleft% + 1180,czeile% + 35,mleft% + 1470,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (sumuebertrm%,",9999999999.00")) + " / " + LTRIM$ ( STR$ (sumuebertrmSK%,",9999999999.00")))
     END IF 
     CALL VAlign(0)
     ab% = CALL ("VpePageBreak",hdoc%)
     vzeil% = ueberpos% - 30
     a% = vzeil%
     CALL VLine(mleft% - 7,a%,mright%,a%)
     CALL VAlign(0)
     CALL VWrite(mleft%,a% + 35,mleft% + 1370,"['Arial' S 9 B C BLACK]" + "öbertrag:Total/mit Skto")
     CALL VAlign(1)
     IF eu% = 0 THEN 
       j% = 0
       FOR i% = 0 TO az%
         IF WSumBrutU%(i%) <> 0 THEN 
           CALL VWrite(mleft% + 350,a% + 35 + j%,mleft% + 870,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (WSumBrutU%(i%),",99999999999.00")) + " " + waehrung$(i%) + " / " + LTRIM$ ( STR$ (WSumBrutUSK%(i%),",99999999999.00")) + " " + waehrung$(i%))
           CALL VWrite(mleft% + 910,a% + 35 + j%,mleft% + 1370,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (WSumNetUM%(i%),",9999999999.00")) + " " + waehrung$(i%) + " / " + LTRIM$ ( STR$ (WSumNetUMSK%(i%),",9999999999.00")) + " " + waehrung$(i%))
           j% = j% + 40
         END IF 
       NEXT i%
     ELSE 
       CALL VWrite(mleft% + 350,a% + 35,mleft% + 870,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (sumuebertrg%,",99999999999.00")) + " / " + LTRIM$ ( STR$ (sumuebertrgSK%,",99999999999.00")))
       IF offBetr$ LIKE "J" THEN 
         CALL VWrite(mleft% + 870,a% + 35,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (uebertroffen%,",9999999.00")) + " / " + LTRIM$ ( STR$ (uebertrangez%,",9999999.00")))
       END IF 
       CALL VWrite(mleft% + 1180,a% + 35,mleft% + 1570,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (sumuebertrm%,",9999999999.00")) + " / " + LTRIM$ ( STR$ (sumuebertrmSK%,",9999999999.00")))
     END IF 
     vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     a% = vzeil% + 10
     CALL VLine(mleft% - 7,a%,mright%,a%)
     vzeil% = vzeil% + 20
     a% = vzeil%
     belegcount% = belegcount% - 1
   ELSE 
     IF belegnr$ = belegnrold$ THEN 
       IF belegcount% < 2 THEN 
         resum% = 0
         remw% = 0
         reoffen% = 0
         reangez% = 0
       END IF 
       resum% = resum% + gesbrutto%
       remw% = remw% + gesmwst%
       reoffen% = reoffen% + gesoffen%
       reangez% = reangez% + gesangez%
       remahn% = remahn% + gesmahn%
       remahnoff% = remahnoff% + gesmahnoff%
       remahngez% = remahngez% + gesmahngez%

     END IF 

     REM 15012007   SELECT NEXT 
     IF gadrname$ <> "" AND gadrname$ <> "<OHNE ZUORDNUNG>" THEN 
       wok% = - 1
       SELECT NEXT 
       WHILE NOT EOF (wbericht$) AND wok% = - 1
         codeku% = codeku.wbericht$
         SELECT FIRST FILE "adressen" INDEX codeku.adressen
         SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
         IF adrgruppe.adressen LIKE gadrname$ THEN 
           wok% = 0
         ELSE 
           SELECT NEXT 
         END IF 
       WEND 
     ELSE 
       SELECT NEXT 
     END IF 
     belegnr$ = belegnr
     IF belegnrold$ <> belegnr THEN 
       
       IF belegcount% < 2 THEN belegnrold$ = belegnr$
       REM IF belegnr$ <> belegnrold$ THEN 
       IF belegcount% > 1 THEN 
         
         REM CALL Fehler("TTT2","")
         REM Zwischensumme mu· wohl ausgegeben werden
         CALL VWrite(mleft%,a%,mleft% + 1000,"['Arial' S 8 B C BLACK]" + "Summe Beleg: " + belegnrold$)
         CALL VAlign(1)
         belegnrold$ = belegnr$
         CALL VWrite(mleft% + 670,a%,mleft% + 860,"['Arial' S 8 B C BLACK]" + STR$ (resum%,",9999999999.00"))
         IF offBetr$ LIKE "J" THEN 
           CALL VWrite(mleft% + 670,a% + 35,mleft% + 860,"['Arial' S 8 B C BLACK]" + STR$ (remahn%,",9999999999.00"))
           CALL VWrite(mleft% + 870,a%,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (reoffen%,",9999999.00")) + " / " + LTRIM$ ( STR$ (reangez%,",9999999.00")))
           CALL VWrite(mleft% + 870,a% + 35,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (remahnoff%,",9999999.00")) + " / " + LTRIM$ ( STR$ (remahngez%,",9999999.00")))
         END IF 
         CALL VWrite(mleft% + 1180,a%,mleft% + 1470,"['Arial' S 8 B C BLACK]" + STR$ (remw%,",999.00"))
         CALL VAlign(1)
         a% = vzeil% + 10
         CALL VLine(mleft% - 7,a%,mright%,a%)
         CALL VLine(mleft% - 7,a% + 2,mright%,a% + 2)
         a% = vzeil% + 30
         vzeil% = a%
         zw$ = "j"
       ELSE 
         belegcount% = 0
         resum% = gesbrutto%
         remw% = gesmwst%
         reoffen% = gesoffen%
         reangez% = gesangez%
         remahn% = gesmahn%
         remahnoff% = gesmahnoff%
         remahngez% = gesmahngez%
       END IF 
     END IF 
     REM SELECT NEXT 
     IF zw$ = "j" THEN 
       zw$ = "n"
       belegcount% = 0
       belegnrold$ = belegnr$
     END IF 
      
   END IF 
 
   REM SELECT NEXT 
 WEND 
  a% = vzeil%
  CALL VLine(mleft% - 7,mtop%,mleft% - 7,a%)
  CALL VLine(mright%,mtop%,mright%,a%)
 
 IF belegcount% > 1 THEN 
   REM CALL Fehler("TTT3","")
   REM Zwischensumme mu· wohl ausgegeben werden
   CALL VWrite(mleft%,a%,mleft% + 1000,"['Arial' S 8 B C BLACK]" + "Summe Beleg: " + belegnrold$)
   CALL VAlign(1)
   CALL VWrite(mleft% + 670,a%,mleft% + 860,"['Arial' S 8 B C BLACK]" + STR$ (resum%,",9999999999.00"))
   IF offBetr$ LIKE "J" THEN 
     CALL VWrite(mleft% + 670,a% + 35,mleft% + 860,"['Arial' S 8 B C BLACK]" + STR$ (remahn%,",9999999999.00"))
     CALL VWrite(mleft% + 870,a%,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (reoffen%,",9999999.00")) + " / " + LTRIM$ ( STR$ (reangez%,",9999999.00")))
     CALL VWrite(mleft% + 870,a% + 35,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (remahnoff%,",9999999.00")) + " / " + LTRIM$ ( STR$ (remahngez%,",9999999.00")))
   END IF 
   CALL VWrite(mleft% + 1180,a%,mleft% + 1470,"['Arial' S 8 B C BLACK]" + STR$ (remw%,",999.00"))
   CALL VAlign(1)
   a% = vzeil% + 10
   CALL VLine(mleft% - 7,a%,mright%,a%)
   CALL VLine(mleft% - 7,a% + 2,mright%,a% + 2)
   a% = a% + 2
   CALL VLine(mleft% - 7,mtop%,mleft% - 7,a%)
   CALL VLine(mright%,mtop%,mright%,a%)
   a% = vzeil% + 30
   vzeil% = a%
   zw$ = "j"
 END IF 





  vzeil% = vzeil% + 35
  a% = vzeil%
  CALL VAlign(0)
  CALL VWrite(mleft%,a%,mleft% + 1500,"['Arial' S 9 B C BLACK]" + "Ges.Rechbetr./mit Skto:")
  IF offBetr$ LIKE "J" THEN 
    CALL VWrite(mleft%,a% + 35,mleft% + 1400,"['Arial' S 9 B C BLACK]" + "Gesamt Mahnung:")
  END IF 
  CALL VAlign(1)
  IF eu% = 0 THEN 
    j% = 0
    FOR i% = 0 TO az%
      IF WSumBrutU%(i%) <> 0 THEN 
        CALL VWrite(mleft% + 350,a% + j%,mleft% + 870,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (WSumBrut%(i%),",99999999999.00")) + " " + waehrung$(i%) + " / " + LTRIM$ ( STR$ (WSumBrutSK%(i%),",99999999999.00")) + " " + waehrung$(i%))
        CALL VWrite(mleft% + 910,a% + j%,mleft% + 1370,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (WaehrungMW%(i%),",9999999999.00")) + " " + waehrung$(i%) + " / " + LTRIM$ ( STR$ (WaehrungMWSK%(i%),",9999999999.00")) + " " + waehrung$(i%))
        j% = j% + 40
      END IF 
    NEXT i%
  ELSE 
    CALL VWrite(mleft% + 350,a%,mleft% + 870,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (sumges%,",99999999999.00")) + " " + " / " + LTRIM$ ( STR$ (sumgesSK%,",99999999999.00")))
    
    IF offBetr$ LIKE "J" THEN 
      CALL VWrite(mleft% + 350,a% + 35,mleft% + 870,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (SUmmahn%,",99999999999.00")))
      CALL VWrite(mleft% + 870,a%,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (sumoffen%,",9999999.00")) + " / " + LTRIM$ ( STR$ (sumangez%,",9999999.00")))
      CALL VWrite(mleft% + 870,a% + 35,mleft% + 1170,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (summahnoff%,",9999999.00")) + " / " + LTRIM$ ( STR$ (SUMmahngez%,",9999999.00")))
    END IF 
    CALL VWrite(mleft% + 1150,a%,mleft% + 1470,"['Arial' S 8 B C BLACK]" + LTRIM$ ( STR$ (sumgesmwst%,",9999999999.00")) + " " + " / " + LTRIM$ ( STR$ (sumgesmwstSK%,",9999999999.00")))
  END IF 
  CALL VAlign(0)
  
  
 vzeil% = mBottom%
 CALL VPrint(mleft%,vzeil% + 20,"['Arial' S 15 B C BLACK]Ende der Liste")
 cPage% = CALL ("VpeGetCurrentPage",hdoc%)
 
 FOR b% = 1 TO cPage%
   vzeil% = mTop%
   a% = CALL ("VpeGotoPage",hdoc%,b%)
   CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
   CALL VWrite(mleft%,vzeil% + 10,mright% - 3,"['Arial' S 9 B C BLACK]" + title2$)
   CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")) + " gedruckt am: " + DATE$ ( TODAY ,"0d.mm.yyyy") + "/" + TIME$ ( NOW ,"hh:mm"))
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   vzeil% = obBottom% + 20
   a% = vzeil%

   CALL VWrite(mleft%,a%,mleft% + 380,"['Arial' S 8 B C BLACK]" + "Name/Ort")
   CALL VWrite(mleft% + 2020,a%,mleft% + 2210,"['Arial' S 8 B C BLACK]" + "Beleg-Datum")
   CALL VAlign(1)
   CALL VWrite(mleft% + 590,a%,mleft% + 890,"['Arial' S 8 B C BLACK]" + "Brut.Betr./mit Skonto")
   IF offBetr$ LIKE "J" THEN 
     CALL VWrite(mleft% + 690,a% + 35,mleft% + 890,"['Arial' S 8 B C BLACK]" + "MahngebÅhren")
     CALL VWrite(mleft% + 900,a% + 35,mleft% + 1200,"['Arial' S 8 B C BLACK]" + "noch offen/angezahlt")
   END IF 
   REM CALL VWrite(mleft% + 900,a% + 70,mleft% + 1200,"['Arial' S 8 B C BLACK]" + "noch offen/angezahlt")
   REM CALL VWrite(mleft% + 690,a% + 35,mleft% + 890,"['Arial' S 8 B C BLACK]" + "Bruttobetrag")
   IF eu% = 0 THEN CALL VWrite(mleft% + 1150,a% + 35,mleft% + 1410,"['Arial' S 8 B C BLACK]" + "MwSt")
   IF eu% = 1 THEN CALL VWrite(mleft% + 1150,a% + 35,mleft% + 1410,"['Arial' S 8 B C BLACK]" + "MwSt EUR")
   IF vzeil% > a% THEN 
     maxv% = vzeil%
   ELSE 
     maxv% = a%
   END IF 
   REM CALL VWrite(mleft% + 900,a%,mleft% + 1200,"['Arial' S 8 B C BLACK]" + "Gutschrift")
   IF offBetr$ LIKE "J" THEN 
     CALL VWrite(mleft% + 900,a%,mleft% + 1200,"['Arial' S 8 B C BLACK]" + "noch offen/angezahlt")
   END IF 
   CALL VWrite(mleft% + 1150,a%,mleft% + 1410,"['Arial' S 8 B C BLACK]" + "MwSt %")
   CALL VAlign(0)
   CALL VWrite(mleft% + 1420,a%,mleft% + 1710,"['Arial' S 8 B C BLACK]" + "RE-Nr")
   CALL VWrite(mleft% + 1420,a% + 35,mleft% + 1710,"['Arial' S 8 B C BLACK]" + "Buchungskonto")
   CALL VWrite(mleft% + 1720,a%,mleft% + 2010,"['Arial' S 8 B C BLACK]" + "Belegnr")
   CALL VWrite(mleft% + 2220,a%,mleft% + 2410,"['Arial' S 8 B C BLACK]" + "bezahlt am")
   CALL VWrite(mleft% + 2370,a%,mright%,"['Arial' S 8 B C BLACK]" + "Ktoauszug")
   obBottom% = maxv%
   CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   vzeil% = obBottom% + 20
 NEXT b%
 
 a% = CALL ("VpeGotoPage",hdoc%,1)
 MOUSE ON 
 IF scedov% = 1 AND reqbild% <> 1 THEN 
   CALL VPrintDoc()
 ELSE 
   CALL VPrevDoc()
 END IF 


w140820073: 
 REM Nach dem Drucken, Drucker auf A4 hoch setzen
 c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,1,9
 REM CLOSE FILE wbericht$ 
 FILE wbericht$
 SELECT WHERE FILE wbericht$
 INDEX belegnr.wbericht$
 SELECT FIRST 
 MOUSE ON 
 END SUB 
 


SUB OffXLSAUS(wbericht$,title2$,eu%,sortnr$,adrgruppe$)
 ON ERROR GOTO ErrorHandler
 IF EXISTS (GMACodeDir$ + "xlsaus.sbf") THEN 
   IF OPEN ("xlsaus") THEN CLOSE FILE "xlsaus"
   DELETE GMACodeDir$ + "xlsaus.*"
   WAIT FOR 1
 END IF 
 IF OPEN ("xlsaus") THEN CLOSE FILE "xlsaus"
 IF EXISTS (_ppath$ + "xlsaus.sb!") THEN DELETE _ppath$ + "xlsaus.sb!"
 COPY _Ppath$ + "xlsaus.*" TO GMACodeDir$ + "xlsaus.*"
 WAIT FOR 1
 OPEN FILE GMACodeDir$ + "XLSAUS;paris"
 MOUSE OFF 
 FILE wbericht$
 SELECT FIRST FILE wbericht$
 i% = 0
 j% = RECCOUNT (wbericht$)
 

 REM Frage nach Excel oder drucken
 optemail% = 2
     DIM dlg1 AS Dialog
     DIM control AS DialogControl 
 
     Superbase.Dialogs.Add("Dialogname")
     SET dlg1 = Superbase.Dialogs.Dialogname
     dlg1.Move(0,0,150,73)
     dlg1.Caption = "Art der Ausgabe"
     dlg1.FontName = "MS Sans Serif"
     dlg1.FontSize = 8
 
     SET control = dlg1.Add("DialogFrame1","DialogFrame")
     control.Move(2,8,150,44)
     control.Caption = " WÑhlen Sie eine Option "
 
     SET control = dlg1.Add("DialogOptionButton1","DialogOptionButton")
     control.Move(6,20,114,10)
     control.Caption = "Ausgabe nach MS Excel"
     control.Bind("optemail%")
     control.ValueOn = 1
 
     SET control = dlg1.Add("DialogOptionButton2","DialogOptionButton")
     control.Move(6,32,114,9)
     control.Caption = "Ausgabe auf Drucker"
     control.Bind("optemail%")
     control.ValueOn = 2
 
 
 
     SET control = dlg1.Add("DialogCommandButton1","DialogCommandButton")
     control.Move(39,54,43,16)
     control.Default = 1
     control.Caption = "OK"
     control.ReturnValue = 1
 
     SET control = dlg1.Add("DialogCommandButton2","DialogCommandButton")
     control.Move(85,54,42,16)
     control.Caption = "Abbruch"
     control.ReturnValue = 0
 
     DIALOG "Dialogname",reqemail%
     REMOVE DIALOG "Dialogname"
     IF reqemail% <> 1 THEN GOTO w140820073 


 soffen% = 0
 sangez% = 0
 sbrutto% = 0
 sbruttosk% = 0
 smahnges% = 0
 smahnoffen% = 0
 smahnangez% = 0
 smwst% = 0
 smwstsk% = 0
 
 WHILE NOT EOF (wbericht$)
   i% = i% + 1
   SET STATUS STR$ (i%,",9999999") + "/" + STR$ (j%,",9999999")
   code% = codeku.wbericht$
   codere% = codere.wbericht$
   IF adrgruppe$ <> "" THEN 
     SELECT FIRST FILE "Adressen" INDEX codeku.adressen
     SELECT KEY code% FILE "Adressen" INDEX codeku.adressen
     IF adrgruppe.adressen <> adrgruppe$ THEN GOTO w240920091 
   END IF 
   BLANK FILE "xlsaus"
   codeku.xlsaus = SER ("xlsaus")
   kUNDe.xlsaus = Kundennummer + " - " + LEFT$ (Nachname) + "/" + LEFT$ (Ort)
   Rech_Datum.xlsaus = Datum
 
   IF gutschriftJN <> "J" THEN 
     IF eu% = 0 THEN 
       Bruttobetrag.xlsaus = gesbrutto
       WÑhrung.xlsaus = waehrung
       gesoffen% = gesbrutto - summeteil + summemahn
       angez% = summeteil - summemahn
       Brutto_Skonto.xlsaus = GesBruttoSK
       noch_offen.xlsaus = gesoffen%
       angezahlt.xlsaus = angez%
       Mahn_Gesamt.xlsaus = gesmahn
       Mahn_noch_offen.xlsaus = gesmahn - summemahn
       Mahn_angezahlt.xlsaus = summemahn
       MWST_Prozent.xlsaus = mwst 
       MWST.xlsaus = mwstdm
       tmSK$ = STR$ ((GesBruttosk - (GesBruttosk / (100 + MwSt) * 100)),"9999999999.00")
       gesmwstSK% = VAL (tmSK$)
       MWST_Skonto.xlsaus = gesmwstSK%
 
       soffen% = soffen% + gesoffen%
       sangez% = sangez% + angez%
       sbrutto% = sbrutto% + gesbrutto
       sbruttosk% = sbruttosk% + gesbruttosk
       smahnges% = smahnges% + gesmahn
       smahnoffen% = smahnoffen% + (gesmahn - summemahn )
       smahnangez% = smahnangez% + summemahn
       smwst% = smwst% + mwstdm
       smwstsk% = smwstsk% + gesmwstSK%
     ELSE 
       Bruttobetrag.xlsaus = gesbruttoeu
       WÑhrung.xlsaus = "EUR"
       gesoffen% = gesbruttoeu - summeteileu + summemahneu
       a1gesbruttoeu% = gesbruttoeu
       a1summeteileu% = summeteileu
       a1summemahneu% = summemahneu

       angez% = summeteileu - summemahneu
       Brutto_Skonto.xlsaus = GesBruttoSKeu
       noch_offen.xlsaus = gesoffen%
       angezahlt.xlsaus = angez%
       Mahn_Gesamt.xlsaus = gesmahneu
       IF summemahneu > gesmahneu THEN 
         Mahn_noch_offen.xlsaus = summeteileu - summemahneu
         Mahn_angezahlt.xlsaus = summeteileu - summemahneu + gesmahn
       ELSE 
         Mahn_noch_offen.xlsaus = gesmahneu - summemahneu
         Mahn_angezahlt.xlsaus = summemahneu
       END IF 
       a1gesmahneu% = gesmahneu
       a1summemahneu% = summemahneu

       MWST_Prozent.xlsaus = mwst
       MWST.xlsaus = mwsteu
       tmSK$ = STR$ ((GesBruttoskeu - (GesBruttoskeu / (100 + MwSt) * 100)),"9999999999.00")
       gesmwstSK% = VAL (tmSK$)
       MWST_Skonto.xlsaus = gesmwstSK%
 
       soffen% = soffen% + gesoffen%
       sangez% = sangez% + angez%
       sbrutto% = sbrutto% + gesbruttoeu
       sbruttosk% = sbruttosk% + gesbruttoskeu
       smahnges% = smahnges% + gesmahneu
       smahnoffen% = smahnoffen% + (gesmahneu - summemahneu )
       smahnangez% = smahnangez% + summemahneu
       smwst% = smwst% + mwsteu
       smwstsk% = smwstsk% + gesmwstSK%
     END IF 
   ELSE 
     IF eu% = 0 THEN 
       Bruttobetrag.xlsaus = gesbrutto * - 1
       WÑhrung.xlsaus = waehrung 
       gesoffen% = (gesbrutto - summeteil + summemahn) * - 1
       angez% = (summeteil - summemahn) * - 1
       Brutto_Skonto.xlsaus = GesBruttoSK * - 1
       noch_offen.xlsaus = gesoffen%
       angezahlt.xlsaus = angez%
       Mahn_Gesamt.xlsaus = gesmahn * - 1
       Mahn_noch_offen.xlsaus = (gesmahn - summemahn) * - 1
       Mahn_angezahlt.xlsaus = summemahn * - 1
       MWST_Prozent.xlsaus = mwst 
       MWST.xlsaus = mwstdm * - 1
       tmSK$ = STR$ ((GesBruttosk - (GesBruttosk / (100 + MwSt) * 100)),"9999999999.00")
       gesmwstSK% = VAL (tmSK$)
       MWST_Skonto.xlsaus = gesmwstSK% * - 1
 
       soffen% = soffen% + gesoffen%
       sangez% = sangez% + angez%
       sbrutto% = sbrutto% + (gesbrutto * - 1)
       sbruttosk% = sbruttosk% + (gesbruttosk * - 1)
       smahnges% = smahnges% + (gesmahn * - 1)
       smahnoffen% = smahnoffen% + ((gesmahn - summemahn ) * - 1)
       smahnangez% = smahnangez% + (summemahn * - 1)
       smwst% = smwst% + (mwstdm * - 1)
       smwstsk% = smwstsk% + (gesmwstSK% * - 1)
     ELSE 
       Bruttobetrag.xlsaus = gesbruttoeu * - 1
       WÑhrung.xlsaus = "EUR"
       gesoffen% = (gesbruttoeu - summeteileu + summemahneu) * - 1
       angez% = (summeteileu - summemahneu) * - 1
       Brutto_Skonto.xlsaus = GesBruttoSKeu * - 1
       noch_offen.xlsaus = gesoffen%
       angezahlt.xlsaus = angez%
       Mahn_Gesamt.xlsaus = gesmahneu * - 1
       Mahn_noch_offen.xlsaus = (gesmahneu - summemahneu) * - 1
       Mahn_angezahlt.xlsaus = summemahneu * - 1
       MWST_Prozent.xlsaus = mwst
       MWST.xlsaus = mwsteu * - 1
       tmSK$ = STR$ ((GesBruttoskeu - (GesBruttoskeu / (100 + MwSt) * 100)),"9999999999.00")
       gesmwstSK% = VAL (tmSK$)
       MWST_Skonto.xlsaus = gesmwstSK% * - 1
 
       soffen% = soffen% + gesoffen%
       sangez% = sangez% + angez%
       sbrutto% = sbrutto% + (gesbruttoeu * - 1)
       sbruttosk% = sbruttosk% + (gesbruttoskeu * - 1)
       smahnges% = smahnges% + (gesmahneu * - 1)
       smahnoffen% = smahnoffen% + ((gesmahneu - summemahneu ) * - 1)
       smahnangez% = smahnangez% + (summemahneu * - 1)
       smwst% = smwst% + (mwsteu * - 1)
       smwstsk% = smwstsk% + (gesmwstSK% * - 1)
     END IF 
   END IF 
   Rech_Nummer = LRenummer
   Rech_Datum = Datum
   Buchungskonto = Warenart 
   Belegnummer = Belegnr
   gez$ = ""
   IF gezahltam > 0 THEN 
     gez$ = DATE$ (gezahltam,"0d.mm.yyyy")
   END IF 
   Kontoauszug = gez$ + " " + Ktoauszugsnr
   STORE FILE "xlsaus"
   REM IF MWST_Skonto.xlsaus <> 0 THEN 

   stxt$ = Lrenummer + " Betrag: " + LTRIM$ ( STR$ (Bruttobetrag.xlsaus,",999999.00"))
   stxt$ = stxt$ + " Betrag_SK: " + LTRIM$ ( STR$ (Brutto_Skonto.xlsaus,",999999.00"))
   stxt$ = stxt$ + " noch offen: " + LTRIM$ ( STR$ (noch_offen.xlsaus,",999999.00"))
   stxt$ = stxt$ + " angezahlt: " + LTRIM$ ( STR$ (angezahlt.xlsaus,",999999.00"))
   stxt$ = stxt$ + " Mahn ges: " + LTRIM$ ( STR$ (Mahn_gesamt.xlsaus,",999999.00"))
   stxt$ = stxt$ + " Mahn_offen: " + LTRIM$ ( STR$ (Mahn_noch_offen.xlsaus,",999999.00"))
   stxt$ = stxt$ + " Mahn_angezahlt: " + LTRIM$ ( STR$ (Mahn_angezahlt.xlsaus,",999999.00"))
   stxt$ = stxt$ + " MWST: " + LTRIM$ ( STR$ (MWST.xlsaus,",999999.00"))
   stxt$ = stxt$ + " MWST_Skonto: " + LTRIM$ ( STR$ (MWST_Skonto.xlsaus,",999999.00"))
   stxt$ = stxt$ + " sbrutto%: " + LTRIM$ ( STR$ (sbrutto%,",999999.00"))
   stxt$ = stxt$ + " sbruttosk%: " + LTRIM$ ( STR$ (sbruttosk%,",999999.00"))
   stxt$ = stxt$ + " soffen%: " + LTRIM$ ( STR$ (soffen%,",999999.00"))
   stxt$ = stxt$ + " smahnges%: " + LTRIM$ ( STR$ (smahnges%,",999999.00"))
   stxt$ = stxt$ + " smahnoffen%: " + LTRIM$ ( STR$ (smahnoffen%,",999999.00"))
   stxt$ = stxt$ + " smahnangez%: " + LTRIM$ ( STR$ (smahnangez%,",999999.00"))
   stxt$ = stxt$ + " smwst%: " + LTRIM$ ( STR$ (smwst%,",999999.00"))
   stxt$ = stxt$ + " smwstsk%: " + LTRIM$ ( STR$ (smwstsk%,",999999.00"))
   REM CALL Fehler(stxt$,"")
   REM END IF 
w240920091: 
   FILE wbericht$
   SELECT NEXT FILE wbericht$
 WEND 
 IF optemail% = 1 THEN 
   BLANK FILE "xlsaus"
   codeku.xlsaus = SER ("xlsaus")
   STORE FILE "xlsaus"
   BLANK FILE "xlsaus"
   codeku.xlsaus = SER ("xlsaus")
   kUNDe.xlsaus = "Summen"
   Bruttobetrag.xlsaus = sbrutto%
   Brutto_Skonto.xlsaus = sbruttosk%
   noch_offen.xlsaus = soffen%
   angezahlt.xlsaus = sangez%
   Mahn_Gesamt.xlsaus = smahnges%
   Mahn_noch_offen.xlsaus = smahnoffen%
   Mahn_angezahlt.xlsaus = smahnangez%
   MWST.xlsaus = smwst%
   MWST_Skonto.xlsaus = smwstsk%
   STORE FILE "xlsaus"

   BLANK FILE "xlsaus"
   codeku.xlsaus = SER ("xlsaus")
   STORE FILE "xlsaus"
   BLANK FILE "xlsaus"
   codeku.xlsaus = SER ("xlsaus")
   Kunde.xlsaus = title2$ + " erstellt am: " + DATE$ ( TODAY ,"0d.mm.yyyy") + "/" + TIME$ ( NOW ,"hh:mm")
   STORE FILE "xlsaus"
   CALL Fehler("Es erfolgt die Ausgabe nach MS Excel in Datei: ",GMACodeDir$ + "xlsaus.xls")
   ON ERROR GOTO w140820071
   IF EXISTS (GMACodeDir$ + "xlsaus.xls") THEN 
     DELETE GMACodeDir$ + "xlsaus.xls"
     GOTO w140820072
   ELSE 
     GOTO w140820072
   END IF 
w140820071: 
   ON ERROR GOTO ErrorHandler
   CALL Fehler("Zur Erzeugung der MS XLS - Datei: " + GMACodeDir$ + "xlsaus.xls muss diese Datei zunÑchst gelîscht werden. Sie kann zur Zeit nicht gelîscht werden!","Wahrscheinlich ist die Datei noch geîffnet.")
   GOTO w140820073
w140820072: 
   ON ERROR GOTO ErrorHandler 
   FILE "xlsaus"
   DIRECTORY GMACodeDir$
   REM                                                    Menu:  FieldSelection
   OPEN FIELDS Kunde,Bruttobetrag,Brutto_Skonto,noch_offen,angezahlt,Mahn_gesamt,Mahn_noch_offen,Mahn_angezahlt,MWST_Prozent,MWST,MWST_Skonto,Rech_Nummer,Rech_Datum,Buchungskonto,Belegnummer,Kontoauszug,WÑhrung 
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM        ExportFile
   Superbase.Converters.SBF.SourceFile = "XLSAUS"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = GMACodeDir$ + "xlsaus.xls"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
 
   DIRECTORY _netpath$
   WAIT FOR 1
   IF EXISTS (GMACodeDir$ + "xlsaus.xls") THEN 
     i% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "xlsaus.xls","","",1)
   END IF 
 END IF 
 IF optemail% = 2 THEN 
   REM Druckausgabe
   REM Nach dem Drucken, Drucker auf A4 quer setzen
   c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,2,9
   CALL Fehler("Bitte den Drucker auf A4-Qerformat setzen!","")
   SET PRINTER REQUEST 
   CALL PRep("XLSAUS")
   ueberschr$ = title2$
   ssbetrag% = 0
   sssbetrag% = 0
 REPORT ON Bruttobetrag.XLSAUS AS "Sbbetrag%",Brutto_Skonto.XLSAUS AS "SbbetragSK%",noch_offen.XLSAUS AS "SbbetragO%",angezahlt.XLSAUS AS "SbbetragA%",Mahn_gesamt.XLSAUS AS "SbbetragM%",Mahn_noch_offen.XLSAUS AS "SbbetragMo%"
 REPORT ON Mahn_angezahlt.XLSAUS AS "SbbetragMA%",MWST.XLSAUS AS "SMWST%",MWST_Skonto.XLSAUS AS "SMWSTSK%"
 AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
 END FOOTING 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 

   SET QUERY ON 
   SET QUERY LOCK ON 
   SELECT DISTINCT ;
     ORDER sortnr$
     TO ASK 
   END SELECT 
 
 END IF 
 END SUB 

 REM 200398 Routine zur MWST - Anpassung 
SUB MWSTChange()
mwst200398: 
 CREATE DIALOG "UMSATZ",0,0,233,120,"Mehrwertsteuer - Anpassung","MS Sans Serif",8
 ADD DIALOG "UMSATZ",4,0,1,233,117,0,""
 ADD DIALOG "UMSATZ",9,6,12,20,21,2
 ADD DIALOG "UMSATZ",5,40,16,166,9,0,"Bitte geben Sie den alten und den neuen"
 ADD DIALOG "UMSATZ",5,40,25,93,10,0,"Mehrwertsteuersatz ein."
 ADD DIALOG "UMSATZ",5,40,38,184,8,0,"Wenn Sie mehrere MWST anpassen wollen,"
 ADD DIALOG "UMSATZ",5,40,48,65,9,0,"kînnen Sie den Durchlauf beliebig oft wiederholen"
 
 ADD DIALOG "UMSATZ",6,62,82,20,10,0,0,von%,3
 ADD DIALOG "UMSATZ",6,114,82,20,10,0,0,bis%,3
 ADD DIALOG "UMSATZ",5,62,68,45,9,0,"MWST alt:"
 ADD DIALOG "UMSATZ",5,114,68,45,9,0,"MWST neu:"
 ADD DIALOG "UMSATZ",1,57,100,55,15,1,"&OK",1,1
 ADD DIALOG "UMSATZ",1,114,100,55,15,0,"&Abbrechen",0,0
 DIALOG "UMSATZ",req%
 REMOVE DIALOG "UMSATZ"
 IF req% <> 1 THEN END SUB 
 IF von% <= 0 OR bis% <= 0 THEN 
   CALL Fehler("Fehler !","Es mÅssen beide MehrwertsteuersÑtze >0 sein")
   GOTO mwst200398
 END IF 
 
 FILE "Artikel"
 codear% = codear.artikel
 MOUSE OFF 
 i% = 0
 z% = RECCOUNT ("Adressen")
 j% = 0
 SELECT FIRST LOCK 
 WHILE NOT EOF ("artikel")
   i% = i% + 1
   IF mwst.artikel = von% THEN 
     j% = j% + 1
     MwST.ARTIKEL = bis%
     VKbrutto.ARTIKEL = VKnetto.ARTIKEL + ((VKnetto.ARTIKEL / 100) * MwST.ARTIKEL)
     KombiBrutto.ARTIKEL = Kombinetto.ARTIKEL + ((Kombinetto.ARTIKEL / 100) * MwST.ARTIKEL)
     letzteAnpassung.artikel = TODAY 
     CALL QuickStore("Artikel")
   END IF 
   SET STATUS STR$ (i%,"000000000") + " Artikel von " + STR$ (z%,"99999999") + " verarbeitet, angepa·t wurden: " + STR$ (j%,"000000000")
   SELECT NEXT LOCK 
 WEND 
 SELECT KEY codear% FILE "Artikel" INDEX codear.artikel
 FORM 
 SET STATUS ""
 MOUSE ON 
 END SUB 
 
 
 '      *********************************************
 '      ** allgemeine Routinen fÅr Projektverwaltung **
 '      *********************************************
 
SUB PROJECT()
 IF disabled%("PROJECT") THEN END SUB 
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\connect" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 CALL DFile(3,"MASTER" + _fpw$)
 CALL DFile(3,"VERTRETE" + _fpw$)
 DIM prconadr%(1)
 MOUSE OFF 
 FILE "project"
 IF prj% = 0 THEN prj% = LASTPROJEKT.stamm
 _formend% = 0
 ADRsub% = 0
 WHILE _formend% = 0
   ADRsub% = 0
   adrmaske$ = "PROJECT1"
   IF Projektmaske.project <> "" THEN adrmaske$ = Projektmaske.project
   prj% = codepr.project
   MOUSE OFF 
   IF UCASE$ ( FORM ) <> UCASE$ (adrmaske$) THEN 
     SET HEADING title$ + " - Projektverwaltung"
     OPEN FORM GPrjFORM$ + adrmaske$
     
     SET f = Superbase.Form
     SET STATUS "Projektverwaltung"
 
 
     IF mastform$ <> "EUR" THEN 
       mastw$ = "Anzeige in WÑhrung"
     ELSE 
       mastw$ = "Anzeige in EURO"
     END IF 
     FILE "project"
     IF RECCOUNT ("project") > 1 THEN 
       SELECT WHERE novi1.project = 0
       SELECT FORM FIRST 
     END IF 
     CALL PRJIntro()
     MOUSE OFF 
     CALL MNPROJECT()
     GAppName$ = _netpath$ + "DOCP\projVer.pdf"
     MOUSE OFF 
     SET DISPLAY ON 
   END IF 
   IF FN sys(5) > 1 THEN Variante$ = "Netzwerk mit " + LTRIM$ ( STR$ ( FN sys(5),"99")) + " PlÑtzen" ELSE Variante$ = "Einzelplatz"
   Version$ = "Version: " + ReadConfig$(_projekt$,"Version")
   Release$ = "Release: " + ReadConfig$(_projekt$,"Release") + " - Variante: " + Variante$
   REM FORM 
   FILE "project"
   INDEX codepr.project
   REM IF adrsub% <> 14 THEN CALL PRJFeldnamen()
   MOUSE ON 
   MENU ON mnadr1%,mnadr2%
   CALL ClearKBDBuffer()
     f.abbruch.visible = 0
     f.abbruch.enabled = 0
     f.suchen.enabled = - 1
     f.suchen.visible = - 1
   IF RECCOUNT ("project") < 1 THEN 
     BLANK FILE "project"
     codepr% = SER ("project",1)
     codepr.project = codepr%
     name1.project = "NEU"
     CALL QuickStore("project")
     SELECT FORM KEY codepr% FILE "project" INDEX codepr.project
   END IF 
   FORM 
   IF ProjectJN$ = "TRUE" AND maxproz% > 4 THEN CALL Fehler("Die maximale Anzahl der Verschachtelungstiefe ist erreicht!","")
   CALL PRJFeldnamen()
   IF PAGE = 2 THEN 
     FORM SHOW 
   END IF 
   MENU ON 
   IF ADRsub% <> 99 THEN WAIT MOUSE OR KEY OR MENU OR FOR 600
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL PRJPrev()
   CASE CrsRight%,PgDn%
     CALL PRJNext()
   CASE ASC ("T"), ASC ("t")
     CALL AKQUISE(2)
   END SELECT 
   IF k$ = CHR$ (27) THEN 
     IF PAGE = 1 THEN _formend% = 1
     IF PAGE > 1 THEN FORM 1
   END IF 
   SELECT CASE ADRsub%
   CASE 100
     IF land.project <> "" THEN 
       IF land.project LIKE "deutsch*" OR land.project LIKE "brd*" OR land.project LIKE "germa*" OR land.project LIKE "D" THEN 
         land$ = "Germany"
       ELSE 
         land$ = FN ansi(land.project)
       END IF 
     ELSE 
       land$ = "Germany"
     END IF 
 
     nr$ = "http://maps.google.de/?Land=" + land$ + "&PLZ=" + plz.project + "+" + (ort.project) + "&Strasse=" + (strasse.project) + "&q=" + (strasse.project) + "%2c+" + plz.project + "+" + (ort.project)
     nr$ = FN ansi(nr$)
     IF NOT EXISTS (GMACodeDir$ + "openurl.exe") THEN COPY _netpath$ + "\local\openurl.exe" TO GMACodeDir$ + "openurl.exe"
     prg$ = GMACodeDir$ + "openurl.exe"
     IF EXISTS (GMACodeDir$ + "opurl.bat") THEN DELETE GMACodeDir$ + "opurl.bat"
     OPEN GMACodeDir$ + "opurl.bat" FOR APPEND 
     ? "echo OFF"
     ? prg$ + " " + CHR$ (34) + FN oem(nr$) + CHR$ (34)
     CLOSE OUTPUT 
 
 
     COPY FROM nr$
     CALL Fehler("Bitte im geîffneten Browser in der Eingabezeile STRG+V und anschlie·end ENTER drÅcken, dann wird Ihnen in Google-Maps die georgrafische Position der Adresse angezeigt!","")
     CALL (GMACodeDir$ + "opurl.bat"),0
   CASE 1
     CALL FStore("project")
     CALL AKQUISE(2)
     CALL PRJFeldnamen()
   CASE 2
     REQUEST "Einen Moment bitte, es werden die zum Projekt","gehîrenden Adressen ermittelt",2
     MOUSE OFF 
     ON ERROR GOTO adrf2606022
     REM DIM AdrFound$( RECCOUNT ("adressen"))
adrf2606022: 
     ON ERROR GOTO ErrorHandler
     REDIM AdrFound$( RECCOUNT ("adressen"),1)
     REDIM AdrFound$( RECCOUNT ("adressen"))
     prj% = Codepr.project
     FILE "prconadr"
     INDEX codepr.prconadr
     IF suchopt$ LIKE "Projekt*" THEN suchopt$ = "Nachname"
     SELECT FIRST 
     SELECT KEY prj%
     prompt$ = "ZZZZZZZZ"
     a% = 0
     WHILE codepr.prconadr = prj% AND NOT EOF ("prconadr")
       aok% = - 1
       IF aok% THEN 
         AdrFound$(a%) = Typ + ", " + Nachname + ", " + Vorname + ", " + Ort + ", " + Strasse + SPACE$ (120) + STR$ (CodeKU,"000000")
         REM IF Nachname < prompt$ THEN prompt$ = AdrFound$(a%)
         a% = a% + 1
       END IF 
      SELECT NEXT 
     WEND 
     MOUSE ON 
     CALL SerieNeu1("ADRESSEN")
   CASE 3
     REQUEST "Projekt wirklich kopieren?","",130,req%
     IF req% <> 1 THEN GOTO prjkopend07012003
     MOUSE OFF 
     codepr% = codepr.project
     nameold$ = Name1.prconadr
     REDIM prconadr%( RECCOUNT ("PRCONADR"),1)
     REDIM prconadr%( RECCOUNT ("PRCONADR"))
     SELECT FIRST FILE "prconadr" INDEX codepr.prconadr
     SELECT KEY CodePR% FILE "prconadr" INDEX codepr.prconadr
     MOUSE OFF 
     adranz% = 0
     WHILE NOT EOF ("PRCONADR") AND codepr.prconadr = codepr%
       prconadr%(adranz%) = codekey.prconadr
       adranz% = adranz% + 1
       SELECT NEXT FILE "prconadr" INDEX codepr.prconadr
       REM SELECT DUPLICATE FILE "prconadr" INDEX codepr.prconadr
     WEND 
     FILE "project"
     BLANK DUPLICATE FILE "project"
     SET STATUS "Datensatz neu angelegt..."
     CodePRneu% = SER ("project",1)
     CodePR.project = codeprneu%
     prj% = codeprneu%
     IF _projekt$ <> "WAWI" THEN 
       codema.project = 999
       Project_seit.project = TODAY 
     END IF 
     name1.project = nameold$ + " #"
     IF _projekt$ <> "AKTE" THEN 
       SELECT FIRST LOCK FILE "stamm"
       LASTProjekt.stamm = LASTProjekt.stamm + 1
       STORE FILE "stamm"
       UNLOCK CURRENT FILE "stamm"
       nnum% = LASTProjekt.stamm
       Projektnummer.project = LTRIM$ ( STR$ (nnum%,"999999"))
       IF _projekt$ <> "WAWI" THEN CodeMA.project = 999
     END IF 
     CALL QuickStore("project")

     FOR i% = 0 TO adranz% - 1
       FILE "prconadr"
       SELECT FIRST FILE "prconadr" INDEX codekey.prconadr
       SELECT KEY prconadr%(i%) FILE "prconadr" INDEX codekey.prconadr
       BLANK DUPLICATE FILE "prconadr"
       codekey.prconadr = SER ("prconadr",1)
       codepr.prconadr = CodePRneu%
       CodePRKU.prconadr = STR$ (CodePRneu%,"000000") + STR$ (codeKU.prconadr,"000000")
       Name1.prconadr = Name1.project
       Projektnummer.prconadr = Projektnummer.project
       Typ.prconadr = "N"
       CALL QuickStore("prconadr")
     NEXT i%

     MOUSE ON 
     REQUEST "Kopieren beendet!"
prjkopend07012003: 
     REM CALL PRJKopie()
   CASE 13
     CALL FStore("project")
     CALL AQAdrHist(3):REM TerminÅbersicht aus Projekt heraus 
     CALL PRJFeldnamen()
     _formend% = 0
   CASE 15
     REM Drucken von Adressen
     CALL ADRDrucken()
     CALL PRJFeldnamen()
   CASE 16
     CALL PRJDokNew()
   CASE 17
     ON ERROR GOTO BildErr200620031
     FORM 2
     FORM SHOW 
BildErr200620031: 
     ON ERROR GOTO ErrorHandler 
   CASE 18
     REM neues Projekt
     CALL PRJNeu()
     prj% = codepr.project
   CASE 99
     IF NOT disabled%("PRJBEARB") THEN 
       IF title$ LIKE "*DEMO*" AND RECCOUNT ("project") >= 10 THEN 
         CALL DemoInfo()
       ELSE 
         MOUSE ON 
         prj% = codepr.project
         CALL ButDesabled()
         f.drucken.enabled = 0
         f.liste.enabled = 0
         MENU OFF 
         SET EDIT SELECT ON 
         GPN1$ = Name1.project
         ENTER Projektnummer.project,0
         SET EDIT SELECT OFF 
         MENU ON 
         f.drucken.enabled = - 1
         f.liste.enabled = - 1
         CALL ButEnabled()
         IF GPN1$ <> Name1.project THEN 
           IF EXISTS (prj%,codepr.prconadr) THEN 
             REQUEST "Es werden jetzt die ProjektverknÅpfungen zu den Adressen aktualisiert!",""
             MOUSE OFF 
             prj% = codepr.project
             CALL PRADRAkt(prj%)
           END IF 
           SELECT FIRST FILE "PROJECT" INDEX codepr.project
           SELECT FORM KEY prj% FILE "PROJECT" INDEX codepr.project
           CALL PRJIntro()
           CALL PRJFeldnamen()
           MOUSE ON 
         END IF 
       END IF 
       IF ( MOD ("project") OR NEW ("project")) THEN 
         CALL FStore( FILE )
       ELSE 
         IF abbruch% = - 1 THEN 
           SELECT KEY codepr.project FILE "project" INDEX codepr.project
           FORM 
         END IF 
       END IF 
     END IF 
   END SELECT 
   REM CALL BMCheckMail()
 WEND 
 knr% = 0
 Gposold% = 0
 SELECT WHERE FILE "project"
 maxproz% = maxproz% - 1
 REM IF FileChanged%("project") = 1 THEN CALL FStore("project")
 _formend% = 0
 CALL WriteINI(_projekt$,"LastProjekt", STR$ (Codepr.project,"000000"))
     IF GCODieRuf% = - 1 THEN 
       REM ret% = CALL ("_SearchClose")
       REM GCODieRuf% = 0
     END IF 
     IF GCODieRuf1% = - 1 OR GCODieRuf% = - 1 THEN 
       ret% = CALL ("_SearchClose")
       GCODieRuf% = 0
       GCODieRuf1% = 0
       GCODieRuf2% = 0
     END IF 
 END SUB 
  
 
  
 
 
SUB PRJIntro()
 MOUSE OFF 
 IF prj% < 1 THEN prj% = VAL (ReadINI$(_projekt$,"LastProjekt"))
 IF RECCOUNT ("project") < 1 THEN 
   BLANK FILE "project"
   codepr% = SER ("project",1)
   codepr.project = codepr%
   name1.project = "NEU"
   CALL QuickStore("project")
   SELECT KEY codeku% FILE "project" INDEX codepr.project
 END IF 
 FILE "project"
 REM SELECT WHERE 
 INDEX Name1.project
 IF prj% <> 0 THEN 
   SELECT KEY prj% FILE "project" INDEX codepr.project
   SELECT FORM KEY prj% FILE "prconect" INDEX codepr.prconect
   SELECT FORM KEY prj% FILE "prconadr" INDEX codepr.prconadr
   SELECT FORM KEY prj% FILE "dokument" INDEX codepr.dokument
   SET INDEX name1.project
 ELSE 
   SELECT FIRST FILE "project"
   ok% = 0
   WHILE NOT EOF ("project") AND ok% = 0
     IF novi1.project = 0 THEN 
       ok% = 1
     END IF 
     SELECT NEXT FILE "project"
   WEND 
   prj% = codepr.project
   SELECT FORM KEY prj% FILE "prconect" INDEX codepr.prconect
 END IF 
 FORM 
 MOUSE ON 
 END SUB 
 
SUB PRJFeldnamen()
  MOUSE OFF 
  codepr% = codepr.project
  adranz% = 0
 IF Bild1.project <> "" OR Bild2.project <> "" OR Bild3.project <> "" OR Bild4.project <> "" OR Bild5.project <> "" OR Bild6.project <> "" OR Bild7.project <> "" OR Bild8.project <> "" THEN 
   biiild$ = "Bilder Æ"
 ELSE 
   biiild$ = "Bilder"
 END IF 
  IF MOD ("project") OR NEW ("project") THEN 
    IF name1.project = "" THEN name1.project = "NEU"
    CALL QuickStore("project")
    SELECT KEY codepr% FILE "project" INDEX codepr.project
  END IF 
 st$ = "Termine: "
   IF EXISTS (CodePR.project,codepr.prconect) THEN 
     adrvlistep$ = "ProjektverknÅpfungen Æ"
   ELSE 
     adrvlistep$ = "ProjektverknÅpfungen"
   END IF 
   IF EXISTS (CodePR.project,codepr.dokument) THEN 
     dok1$ = "Dokumente Æ"
   ELSE 
     dok1$ = "Dokumente"
   END IF 
   IF EXISTS (CodePR.project,codepr.prconadr) THEN 
     adrv$ = "neue Adresszuordnung Æ"
     SELECT FIRST FILE "prconadr" INDEX codepr.prconadr
     SELECT KEY CodePR.project FILE "prconadr" INDEX codepr.prconadr
     codepr% = CodePR.project
     MOUSE OFF 
     WHILE NOT EOF ("PRCONADR") AND codepr.prconadr = codepr%
       adranz% = adranz% + 1
       REM SELECT NEXT FILE "prconadr" INDEX codepr.prconadr
       SELECT DUPLICATE FILE "prconadr" INDEX codepr.prconadr
     WEND 
   ELSE 
     adrv$ = "neue Adresszuordnung"
   END IF 
 IF EXISTS (Codepr.project,CodePR.GAkquiDat$) THEN 
   akquise$ = "&Termine Æ"
   cfile$ = FILE 
   FILE GAkquiDat$
   INDEX CodePR.GAkquiDat$
   REM SELECT DUPLICATE 
   SELECT WHERE 
   SELECT FIRST INDEX codepr.GAkquiDat$
   SELECT KEY Codepr.project FILE GAkquiDat$ INDEX Codepr.GAkquiDat$
   a% = 0
   WHILE NOT EOF (GAkquiDat$):REM AND CodeKU.GAkquiDat$ = CodeKU.ADRESSEN
     a% = a% + 1
     REM SELECT NEXT FILE GAkquiDat$ INDEX CodeKU.GAkquiDat$
     SELECT DUPLICATE 
   WEND 
   SELECT WHERE 
   FILE cfile$
   st$ = st$ + LTRIM$ ( STR$ (a%,"999999"))
 ELSE 
   akquise$ = "&Termine"
   st$ = st$ + "0"
 END IF 
 sort$ = INDEX 
 b$ = "                               DatensÑtze gesamt: " + STR$ ( RECCOUNT ("project"),",99999999") + "    Adressen im Projekt:" + STR$ (adranz%,",999999")
 SET STATUS st$ + b$
 FORM 
 MOUSE ON 
 END SUB 
 
 
SUB PRJNeu()
 IF disabled%("PRJNeu") THEN END SUB 
 IF title$ LIKE "*DEMO*" AND RECCOUNT ("project") >= 10 THEN 
   CALL DemoInfo()
   END SUB 
 END IF 
 SET STATUS "Lege neuen Datensatz an..."
 IF ( MOD ("project") OR NEW ("project")) AND name1.project <> "" THEN CALL FStore( FILE )
 IF title$ LIKE "*ffffffirststep*" THEN 
   IF RECCOUNT ( FILE ) > 250 THEN 
     CALL Fehler("In der FirstStep - Version kînnen maximal 250 Adressen erfa·t werden!","")
     END SUB 
   END IF 
 END IF 
 FILE "project"
 BLANK FILE "project"
 SET STATUS "Datensatz neu angelegt..."
 CodePR% = SER ("project",1)
 CodePR.project = codepr%
 IF _projekt$ <> "WAWI" THEN 
   codema.project = 999
   Project_seit.project = TODAY 
 END IF 
 name1.project = "NEU"
 IF _projekt$ <> "AKTE" THEN 
   SELECT FIRST LOCK FILE "stamm"
   LASTProjekt.stamm = LASTProjekt.stamm + 1
   STORE FILE "stamm"
   UNLOCK CURRENT FILE "stamm"
   nnum% = LASTProjekt.stamm
   Projektnummer.project = LTRIM$ ( STR$ (nnum%,"999999"))
   IF _projekt$ <> "WAWI" THEN CodeMA.project = 999
 END IF 
 CALL QuickStore("project")
 SELECT FORM KEY codepr% FILE "project" INDEX codepr.project
 FORM 
 MOUSE ON 
 ADRsub% = 99
 END SUB 
 
SUB PRJLoeschen()
 IF title$ LIKE "*DEMO*" AND RECCOUNT ("project") >= 10 THEN 
   CALL DemoInfo()
   END SUB 
 END IF 
 IF disabled%("PRJLoeschen") THEN END SUB 
 prj% = Codepr.project
 REQUEST "Projekt wirklich lîschen?","",135,req%
 IF req% = 1 THEN 
   IF EXISTS (prj%,codepr.project) THEN 
     SELECT KEY prj% LOCK FILE "project" INDEX Codepr.project
     SELECT REMOVE 
     FILE "prconect"
     INDEX codepr.prconect
     SELECT FIRST 
     IF EXISTS (prj%,codepr.prconect) THEN 
       REMOVE FROM FILE "prconect" WHERE codepr.prconect = prj%
     END IF 
     FILE "project"
     SELECT FORM NEXT 
     codepr% = codepr.project
     SELECT FORM KEY codepr% FILE "prconect" INDEX codepr.prconect
     FORM 
   END IF 
   FORM 
 END IF 
 CALL PRJFeldnamen()
 FORM 
 END SUB 
 

SUB PRJNext()
 CALL PSelectNext()
 CALL PRJFeldnamen()
 FORM 
 END SUB 
 

SUB PRJPrev()
 CALL PSelectPrev()
 CALL PRJFeldnamen()
 FORM 
 END SUB 
 
SUB PRJFirst()
 REM IF FileChanged%("project") = 1 THEN CALL FStore("project")
 CALL PSelectFirst()
 CALL PRJFeldnamen()
 FORM 
 END SUB 
 
SUB PRJLast()
 REM IF FileChanged%("project") = 1 THEN CALL FStore("project")
 CALL PSelectLast()
 CALL PRJFeldnamen()
 FORM 
 END SUB 
 

SUB PRJConnect()
 DIM AdrListe$( RECCOUNT ("project"))
 prj% = Codepr.project
 FILE "prconect"
 INDEX codepr.prconect
 
 SELECT FIRST 
 SELECT KEY prj%
 prompt$ = "ZZZZZZZZ"
 a% = 0
 WHILE codepr.prconect = prj% AND NOT EOF ("prconect")
   aok% = - 1
   IF aok% THEN 
     AdrListe$(a%) = Typ + ", " + Nachname + ", " + Vorname + ", " + Ort + ", " + Strasse + SPACE$ (120) + STR$ (CodeCon,"000000")
     IF Nachname < prompt$ THEN prompt$ = AdrListe$(a%)
     a% = a% + 1
   END IF 
   SELECT NEXT 
 WEND 
 SELECT KEY prj% FILE "project" INDEX Codepr.project
 CREATE DIALOG "ADRCON1",0,0,341,182,title$,"MS Sans Serif",8
 ADD DIALOG "ADRCON1",4,0,0,341,158,0,""
 ADD DIALOG "ADRCON1",9,5,9,20,21,2
 ADD DIALOG "ADRCON1",5,30,10,306,28,0,"Bitte wÑhlen Sie eines der untergeordneten Projekte aus oder wÑhlen Sie 'Neu' um ein weiteres Projekt in die Gruppe aufzunehmen."
 ADD DIALOG "ADRCON1",5,30,40,305,20,0,"Mit 'Lîschen' kînnen Sie die VerknÅpfung zum angewÑhlten Projekt lîschen."
 ADD DIALOG "ADRCON1",7,30,64,304,89,2,2,AdrListe$,Auswahl$,prompt$
 ADD DIALOG "ADRCON1",1,30,162,55,15,1,"&WÑhlen",1,1
 ADD DIALOG "ADRCON1",1,90,162,55,15,0,"&Details",4,1
 ADD DIALOG "ADRCON1",1,150,162,55,15,0,"&Neu",2,1
 ADD DIALOG "ADRCON1",1,210,162,55,15,0,"&Lîschen",3,1
 ADD DIALOG "ADRCON1",1,270,162,55,15,0,"&Abbrechen",0,0
 DIALOG "ADRCON1",req%
 REMOVE DIALOG "ADRCON1"
 MOUSE OFF 
 nknr% = VAL ( RIGHT$ (Auswahl$(0),6))
 SELECT CASE req%
 CASE 1
   IF nknr% <> 0 THEN 
     SELECT KEY nknr% FILE "project" INDEX Codepr.project
     prj% = nknr%
   END IF 
 CASE 2
   nachfolger% = PRJSuche%(0)
   IF nachfolger% <> 0 THEN 
     SELECT KEY nachfolger% LOCK FILE "project" INDEX Codepr.project
     BLANK FILE "prconect"
     codepr.prconect = prj%
     codecon.prconect = nachfolger%
     CodePRCon.prconect = STR$ (prj%,"000000") + STR$ (nachfolger%,"000000")
     Nachname.prconect = Name1.project
     vorname.prconect = Name2.project
     Ort.prconect = Ort.project
     Strasse.prconect = Strasse.project
     Typ.prconect = "N"
     CALL QuickStore("prconect")
     SELECT KEY prj% LOCK FILE "project" INDEX Codepr.project
     BLANK FILE "prconect"

     codepr.prconect = nachfolger%
     codecon.prconect = prj%
     CodeConPR.prconect = STR$ (nachfolger%,"000000") + STR$ (prj%,"000000")
     Nachname.prconect = Name1.project
     vorname.prconect = Name2.project
     Ort.prconect = Ort.project
     Strasse.prconect = Strasse.project
     Typ.prconect = "V"
     CALL QuickStore("prconect")
 
   END IF 
   SELECT KEY prj% FILE "project" INDEX Codepr.project
 CASE 3
   IF nknr% <> 0 THEN 
     FILE "prconect"
     loe1$ = STR$ (prj%,"000000") + STR$ (nknr%,"000000")
     loe2$ = STR$ (nknr%,"000000") + STR$ (prj%,"000000")
     REMOVE FROM FILE "prConect" WHERE CodePRCon.prconect = loe1$
     REMOVE FROM FILE "prConect" WHERE CodeConPR.prconect = loe2$
     REMOVE FROM FILE "prConect" WHERE CodePRCon.prconect = loe2$
     REMOVE FROM FILE "prConect" WHERE CodeConPR.prconect = loe1$
   END IF 
   SELECT KEY prj% FILE "project" INDEX Codepr.project
  CASE 4
   REM Details
   nknr% = VAL ( RIGHT$ (Auswahl$(0),6))
   FILE "prConect"
   INDEX codecon.prconect
   SELECT KEY nknr% LOCK FILE "prconect" INDEX codecon.prconect
   Adr$ = Typ.prconect + ", " + Nachname + ", " + Vorname + ", " + Ort + ", " + Strasse
   notiz1$ = Notiz.prconect
   CREATE DIALOG "ADRCON1",0,0,341,182,"Details zur VerknÅpfung","MS Sans Serif",8
   ADD DIALOG "ADRCON1",4,0,0,341,158,0,""
   ADD DIALOG "ADRCON1",9,5,9,20,21,2
   ADD DIALOG "ADRCON1",5,30,10,306,28,0,"Tragen Sie hier Kommentare zur aktuellen ProjektverknÅpfung ein und bestÑtigen Sie mit éndern"
   ADD DIALOG "ADRCON1",5,30,40,305,20,0,adr$
   ADD DIALOG "ADRCON1",6,30,64,304,89,4,2,Notiz.prconect,4000
   REM ADD DIALOG "ADRCON1",7,30,64,304,89,2,2,AdrListe$,Auswahl$,prompt$
   ADD DIALOG "ADRCON1",1,30,162,55,15,1,"&WÑhlen",1,1
   ADD DIALOG "ADRCON1",1,90,162,55,15,0,"é&ndern",4,1
   ADD DIALOG "ADRCON1",1,270,162,55,15,0,"&Abbrechen",0,0
   DIALOG "ADRCON1",req%
   REMOVE DIALOG "ADRCON1"
   IF req% = 0 THEN END SUB 
   IF req% = 1 THEN 
     IF notiz1$ <> Notiz.prconect THEN 
       REQUEST "Der Kommentar wurde geÑndert!","Soll die énderung Åbernommen werden?",130,req1%
       IF req1% = 1 THEN CALL QuickStore("prCONECT")
     END IF 
     SELECT KEY nknr% FILE "project" INDEX Codepr.project
     prj% = nknr%
   END IF 
   IF req% = 4 THEN 
     CALL QuickStore("prconect")
     SELECT KEY nknr% FILE "project" INDEX Codepr.project
   END IF 
 END SELECT 
 FILE "project"
 SET INDEX Name1.project
 INDEX Name1.project
 CALL PRJIntro()
 CALL PRJFeldnamen()
 MOUSE ON 
 END SUB 
 



 ' Projekte Suchen (projektunabhÑngig)
 ' ====================================================================== 
 ' Zweck:       Suchen eines Projektes
 ' Nutzung:     wird vom Adressenformular verwendet
 ' Parameter:   filtertype%     0 - keine Filtergenerierung
 '                              1 - mit Filtergenerierung
 ' filtertyp%
 ' ======================================================================
 
  
FUNCTION PRJSuche%(filtertype%)
 cfile$ = FILE 
 adrfound% = 0
 REM ** Feldnamen definieren
 DIM Feldnamen$(22)
 DIM FeldN$(22)
 IF _projekt$ <> "AKTE" THEN 
   Feldnamen$(0) = "Projektnummer"
   Feldnamen$(1) = "Name1"
   Feldnamen$(2) = "Name2"
   Feldnamen$(3) = "Name3"
   Feldnamen$(4) = "Strasse"
   Feldnamen$(5) = "Ort"
   Feldnamen$(6) = "Postleitzahl"
   Feldnamen$(7) = "Stadtteil"
   IF UCASE$ ( FORM ) = "PROJECT" THEN 
     Feldnamen$(8) = "R1"
     Feldnamen$(9) = "H1"
     Feldnamen$(10) = "R2"
     Feldnamen$(11) = "H2"
     Feldnamen$(12) = "Bauwerk"
     Feldnamen$(13) = "GrÅndung"
     Feldnamen$(14) = "Nachbarbau"
     Feldnamen$(15) = "Boden"
     Feldnamen$(16) = "Keller J/N"
     Feldnamen$(17) = "Grundwasser J/N"
     Feldnamen$(18) = "Wasserhaltung J/N"
     Feldnamen$(19) = "offene Baugrube J/N"
     Feldnamen$(20) = "Altlasten J/N"
     Feldnamen$(21) = "Notiz"
     sw% = 22
   END IF 
   IF UCASE$ ( FORM ) = "PROJECT1" THEN 
     Feldnamen$(8) = "Notiz"
     sw% = 9
   END IF 
 
 END IF 
 REM IF _projekt$ <> "AKTE" THEN Feldnamen$(sw%) = "Stichwort"
 REM sw% = sw% + 1
 SET STATUS "Projekt suchen"
 
 REM 070398
 datsu$ = "Project"
 alle$ = "n"
 FILE "Project":INDEX Projektnummer.datsu$
 suchopt$ = "Projektnummer"
 Auswahl$ = suchopt$
 REM 280199
 CREATE DIALOG "ADRSUCH",0,0,205,240,"Projekt suchen","MS Sans Serif",8
 ADD DIALOG "ADRSUCH",4,0,0,202,240,0,""
 ADD DIALOG "ADRSUCH",9,6,12,20,23,2
 ADD DIALOG "ADRSUCH",5,32,14,164,19,0,"Bitte wÑhlen Sie aus, in welchem Datenbankfeld gesucht werden soll."
 REM ADD DIALOG "ADRSUCH",5,32,35,164,33,0,"Bei der Suche Åber Stichwort/Agentur/Vertreter kînnen Sie den Suchbegriff weglassen, um eine Liste aller Stichwîrter/Agenturen/Vertreter zu erhalten."
 ADD DIALOG "ADRSUCH",5,32,75,56,8,0,"Suchfeld:"
 ADD DIALOG "ADRSUCH",6,33,205,88,11,128,0,suna$,50
 ADD DIALOG "ADRSUCH",2,33,220,88,11,0,"alle Projekte anzeigen","j","n",alle$
 REM ADD DIALOG "ADRSUCH",7,32,34,100,158,2,2,Auswahl$,Feldnamen$,Auswahl$(0)
 ADD DIALOG "ADRSUCH",7,33,34,100,158,1,2,Feldnamen$,Auswahl$,Feldnamen$(0)
 ADD DIALOG "ADRSUCH",1,135,116,64,15,1,"&Suchmaske",3,1
 ADD DIALOG "ADRSUCH",1,135,133,64,15,1,"&Schnellsuche",1,1
 ADD DIALOG "ADRSUCH",1,135,150,64,15,0,"&erweiterte Suche",2,1
 ADD DIALOG "ADRSUCH",1,135,167,64,15,0,"&Abbruch",0,0
 ADD DIALOG "ADRSUCH",5,33,195,61,10,0,"Suchbegriff:"
 DIALOG "ADRSUCH",req%
 REMOVE DIALOG "ADRSUCH"
 PRJSuche% = 0
 IF req% > 0 AND alle$ = "n" THEN SELECT WHERE novi1.project = 0
 IF req% > 0 AND alle$ = "j" THEN SELECT WHERE FILE "Project"
 IF req% = 3 THEN CALL PRJGlobalSuch()
 IF (req% > 0 AND req% < 3 AND suna$ <> "") THEN 
   suchopt$ = Auswahl$(0)
   MOUSE OFF 
   SELECT CASE suchopt$
   CASE "H1"
     feld$ = "M1"
   CASE "H2"
     feld$ = "M2"
   CASE "Postleitzahl"
     feld$ = "PLZ"
   CASE "Keller J/N"
     feld$ = "Keller"
     IF UCASE$ (suna$) <> "J" THEN 
       IF UCASE$ (suna$) <> "N" THEN 
         CALL Fehler("Falscher Abfragewert!","Der Wert kann nur J oder N sein!")
       END IF 
     END IF 
   CASE "Grundwasser J/N"
     feld$ = "Grundwasser"
     IF UCASE$ (suna$) <> "J" THEN 
       IF UCASE$ (suna$) <> "N" THEN 
         CALL Fehler("Falscher Abfragewert!","Der Wert kann nur J oder N sein!")
       END IF 
     END IF 
   CASE "Wasserhaltung J/N"
     feld$ = "Wasserhaltung"
     IF UCASE$ (suna$) <> "J" THEN 
       IF UCASE$ (suna$) <> "N" THEN 
         CALL Fehler("Falscher Abfragewert!","Der Wert kann nur J oder N sein!")
       END IF 
     END IF 
   CASE "offene Baugrube J/N"
     feld$ = "offeneBaugrube"
     IF UCASE$ (suna$) <> "J" THEN 
       IF UCASE$ (suna$) <> "N" THEN 
         CALL Fehler("Falscher Abfragewert!","Der Wert kann nur J oder N sein!")
       END IF 
     END IF 
   CASE "Altlasten J/N"
     feld$ = "Altlasten"
     IF UCASE$ (suna$) <> "J" THEN 
       IF UCASE$ (suna$) <> "N" THEN 
         CALL Fehler("Falscher Abfragewert!","Der Wert kann nur J oder N sein!")
       END IF 
     END IF 
   CASE ELSE 
     feld$ = Auswahl$(0)
   END SELECT 
  
   
   REM SET STATUS "Adre·suche nach " + feld$ + " = " + suna$
   SET STATUS "Projektsuche lÑuft..."
   feld$ = feld$ + ".project"
   a% = 0
   REDIM AdrFound$( RECCOUNT ("project"),1)
   REDIM AdrFound$( RECCOUNT ("project"))
   b% = RECCOUNT ("project")
   REM FOR i% = 0 TO b%
     REM AdrFound$(i%) = ""
   REM NEXT i%
   SET INDEX feld$$
   INDEX feld$$
 REM END IF 
   ok% = 1
   IF req% = 1 THEN 
ptel181096: 
     IF feld$ LIKE "Stichwort*" THEN 
       CALL DFile(2,"OFFICE\keywords" + _fpw$)
       FILE "keywords"
       INDEX keyword
       SELECT FIRST 
       a% = 0
       SELECT WHERE keyword <> ""
       SELECT FIRST 
       WHILE NOT EOF ("keywords")
         AdrFound$(a%) = LTRIM$ (keyword)
         a% = a% + 1
         SELECT NEXT 
       WEND 
       AdrFound$(a%) = ""
       LAuswahl$ = AdrFound$(0)
       LAuswahl1$(0) = LAuswahl$
       CREATE DIALOG "ADRSTICHW",0,0,194,202,title$,"MS Sans Serif",8
       ADD DIALOG "ADRSTICHW",7,5,6,183,168,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
       ADD DIALOG "ADRSTICHW",1,33,180,55,16,1,"&OK",1,1
       ADD DIALOG "ADRSTICHW",1,93,180,55,16,0,"&Abbrechen",0,0
       DIALOG "ADRSTICHW",req5%
       MOUSE ON 
       REMOVE DIALOG "ADRSTICHW"
       IF req5% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         suna$ = "*" + LEFT$ (LAuswahl$) + "*"
       ELSE 
         ok% = 0
         PRJSuche% = 0
         REDIM AdrFound$( RECCOUNT ("PROJECT"))
         GOTO pEnde010498
       END IF 
       MOUSE OFF 
       REM FOR cl% = 0 TO RECCOUNT ("ADRESSEN")
       REM   AdrFound$(cl%) = ""
       REM NEXT cl%
       FILE "adressen"
       INDEX feld$$
       a% = 0
       SELECT FIRST 
       SELECT KEY suna$ INDEX feld$$
       adrmax% = RECCOUNT ("ADRESSEN")
       cp% = 0
       lp% = 0
       pc% = 0
       wi% = 0
       CALL Server("LISTBOXINIT","Adre·auswahl")
       MOUSE OFF 
       CALL Gauge(1,"Adre·datei wird durchsucht...")
       CALL Server("GAUGEENABLECANCEL","")
       _prozt% = 0
       _proz2% = 0
       _anz% = RECCOUNT ("adressen")
       WHILE NOT EOF ("adressen") AND ServerReply$() <> "CANCEL"
         _proz% = INT ((100 / _anz%) * _proz2%)
         IF _proz% > 100 THEN _proz% = 100
         IF _proz% < 2 THEN _proz% = 2
         IF _proz% <> _prozt% THEN 
           _prozt% = _proz%
           SET STATUS "erweiterte Suche... " + STR$ (_prozt%,"999") + " %"
           CALL Gauge(_proz%,"")
         END IF 
         _proz2% = _proz2% + 1
         adrfound% = 0
         pc% = pc% + 1
         cp% = INT (100 / adrmax% * pc%)
         IF Stichwort.datsu$ LIKE suna$ THEN 
           sok% = - 1
           IF MNdisabled%("DATALOCK") THEN 
             IF Sperre.datsu$ <> 0 AND Sperre.datsu$ <> vcodema% THEN sok% = 0
           END IF 
           IF sok% THEN 
             codeku% = codeku.datsu$
             IF EXISTS (codeku%,codeku.telefon) THEN 
               FILE "telefon"
               INDEX codetel.telefon
               SELECT FIRST 
               SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
               telefon$ = nummer.telefon
               FILE "adressen"
             END IF 
             tmpZeile$ = LTRIM$ (nachname) + ", " + LTRIM$ (vorname) + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Stra·e) + ", " + LTRIM$ (telefon$) + SPACE$ (120) + STR$ (codeku,"000000")
             AdrFound$(a%) = tmpZeile$
             CALL Server("GaugeMessage","Adre·datei wird durchsucht... " + TRIM$ ( STR$ (a%,"9999")) + " gefunden (" + LTRIM$ (Nachname.datsu$) + ", " + LEFT$ ( LTRIM$ (Vorname.datsu$),13) + ".)")
             CALL Server("LISTBOXADD",tmpZeile$)
             a% = a% + 1
           END IF 
         END IF 
         SELECT NEXT 
       WEND 
       AdrFound$(a%) = ""
       CALL Gauge(0,"")
       SET STATUS "Bereit"
       IF a% = 0 THEN 
         CALL Fehler("Es wurde kein Projekt mit diesem Stichwort gefunden!","")
         PRJSuche% = 0
         ok% = 0
       END IF 
       GOTO Telf190896
     ELSE 
       IF feld$ <> "Kostenstelle.project" THEN 
         a% = 0
         locktest% = MNdisabled%("DATALOCK")
         INDEX feld$$
         SELECT FIRST 
         SELECT KEY suna$ INDEX feld$$
         IF GCODIE% = - 1 THEN 
           CALL SearchInitPRO()
         END IF 
         AdrFound$(a%) = "<ohne Zuordnung>" + SPACE$ (120) + "000000"
         a% = a% + 1
         WHILE feld$$ LIKE suna$ + "*" AND NOT EOF ("project")
           sok% = - 1
           IF alle$ = "n" THEN 
             IF novi1.project = 1 THEN sok% = 0
           END IF 
           IF sok% THEN 
             codepr% = codepr.project
             AF1$ = LTRIM$ (Projektnummer) + "/" + LTRIM$ (name1) + ", " + LTRIM$ (name2) + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Strasse) + ", "
             IF novi1.project = 1 THEN AF1$ = "### " + AF1$
             FILE "project"
             IF GCODIE% = - 1 THEN 
               CALL SearchVorbPRO("project")
             END IF 
             AdrFound$(a%) = AF1$ + SPACE$ (120) + STR$ (codepr,"000000")
             a% = a% + 1
           END IF 
           SELECT NEXT FILE "project"
         WEND 
         REM AdrFound$(a%) = ""
       ELSE 
         a% = 0
         INDEX feld$$
         SELECT FIRST 
         suna% = VAL (suna$)
         SELECT KEY suna% INDEX feld$$
         IF GCODIE% = - 1 THEN 
           CALL SearchInitPRO()
         END 
         AdrFound1$(a%) = "<ohne Zuordnung>" + SPACE$ (120) + "000000"
         a% = a% + 1
         WHILE feld$$ = suna% AND NOT EOF ("project")
           sok% = - 1
           sok% = - 1
           IF alle$ = "n" THEN 
             IF novi1.project = 1 THEN sok% = 0
           END IF 
           IF sok% THEN 
             IF GCODIE% = - 1 THEN 
               CALL SearchVorbPRO("project")
             END IF 
             AdrFound1$(a%) = LTRIM$ (Projektnummer) + "/" + LTRIM$ (name1) + ", " + LTRIM$ (name2) + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Strasse) + ", " + LTRIM$ (telefon1) + SPACE$ (120) + STR$ (codepr,"000000")
             IF novi1.project = 1 THEN AdrFound1$(a%) = "### " + AdrFound1$(a%)
             a% = a% + 1
           END IF 
           SELECT NEXT 
         WEND 
         REM AdrFound$(a%) = ""
       END IF 
     END IF 
pTelf190896: 
     LAuswahl$ = AdrFound$(0)
     LAuswahl1$(0) = LAuswahl$
     req3% = 0
     IF a% <> 0 THEN 
       MENU 2,2,1,"Suchliste anzeigen,F7","PROKurzSuche",""
       IF GCODIE% = - 1 THEN 
         c$ = "aa"
         REM CALL Fehler("Test","")
         req3% = CALL ("_SearchShow",c$)
         REM REQUEST c$,"",2
         REM ret% = CALL ("_SearchClose")
         IF VAL (c$) <> 0 THEN 
           PRJSuche% = VAL (c$)
           adrfound% = VAL (c$)
           ok% = 0
           SET STATUS "Projekt gefunden..."
         END IF 
         IF req3% = 2 THEN 
           CALL Fehler("Diese Funktion wird nur innerhalb der Adressmaske unterstÅtzt!","")
         END IF 
         IF adrfound% < 1 THEN 
           PRJSuche% = 0
           adrfound% = 0
         END IF 
       ELSE 
         CREATE DIALOG "ADRLISTE",0,0,340,297,title$,"MS Sans Serif",8
         ADD DIALOG "ADRLISTE",7,5,8,328,261,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRLISTE",1,114,274,56,16,1,"&OK",1,1
         ADD DIALOG "ADRLISTE",1,174,274,56,16,0,"&Abbrechen",0,0
         DIALOG "ADRLISTE",req3%
         MOUSE ON 
         REMOVE DIALOG "ADRLISTE"
         IF req3% = 1 THEN 
           LAuswahl$ = LAuswahl1$(0)
           PRJSuche% = VAL ( RIGHT$ (LAuswahl$,6))
           adrfound% = VAL ( RIGHT$ (LAuswahl$,6))
           ok% = 0
           SET STATUS "Projekt gefunden..."
         ELSE 
           PRJSuche% = 0
         END IF 
       END IF 
     ELSE 
       MENU 2,2,0,"Suchliste anzeigen,F7","PROKurzSuche",""
       adrfound% = 0
     END IF 
     IF PRJSuche% = 0 AND ok% = 1 THEN 
       PRJSuche% = 0
       ok% = 1
       IF feld$ LIKE "Telefon1*" THEN 
         REQUEST "Keine Telefonnummer gefunden!","",2
         ok% = 0
       ELSE 
         REQUEST "Eintrag nicht gefunden!","Erweiterte Suche durchfÅhren?",135,req2%
         IF req2% = 1 THEN 
           ok% = 1
         ELSE 
           ok% = 0
         END IF 
       END IF 
     END IF 
     REM REDIM AdrFound$( RECCOUNT ("ADRESSEN"))
   END IF 
 END IF 
 IF PRJSuche% = 0 AND ok% = 1 THEN 
 
     IF feld1ab$ LIKE "Agentur" OR feld1ab$ LIKE "Vertreter" THEN 
       IF feld1ab$ LIKE "Agentur" THEN datei1$ = "MAADR"
       IF feld1ab$ LIKE "Vertreter" THEN datei1$ = "VERTRETE"
       CALL DFile(3,datei1$ + _fpw$)
       FILE datei1$
       INDEX nachname.datei1$
       SELECT FIRST 
       a% = 0
       SELECT WHERE nachname.datei1$ <> ""
       SELECT FIRST 
       WHILE NOT EOF (datei1$)
         sok% = - 1
         IF alle$ = "n" THEN 
           IF novi1.project = 1 THEN sok% = 0
         END IF 
 
         IF sok% THEN 
           AdrFound$(a%) = LTRIM$ (nachname) + "," + LTRIM$ (vorname) + SPACE$ (120) + STR$ (codema,"000000")
           IF novi1.project = 1 THEN AdrFound$(a%) = "### " + AdrFound$(a%)
           a% = a% + 1
         END IF 
         SELECT NEXT 
       WEND 
       REM AdrFound$(a%) = ""
       LAuswahl$ = AdrFound$(0)
       LAuswahl1$(0) = LAuswahl$
       CREATE DIALOG "ADRSTICHW",0,0,194,302,title$,"MS Sans Serif",8
       ADD DIALOG "ADRSTICHW",7,5,6,183,268,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
       ADD DIALOG "ADRSTICHW",1,33,280,55,16,1,"&OK",1,1
       ADD DIALOG "ADRSTICHW",1,93,280,55,16,0,"&Abbrechen",0,0
       DIALOG "ADRSTICHW",req5%
       MOUSE ON 
       REMOVE DIALOG "ADRSTICHW"
       IF req5% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         suna% = VAL ( RIGHT$ (LAuswahl$,6))
       ELSE 
         ok% = 0
         PRJSuche% = 0
         REDIM AdrFound$( RECCOUNT ("PROJECT"))
         GOTO pEnde010498
       END IF 
     END IF 
 
 
     IF feld$ LIKE "Stichwort.project" THEN 
       CALL DFile(3,"prkeywo" + _fpw$)
       FILE "prkeywo"
       INDEX keyword
       SELECT FIRST 
       a% = 0
       SELECT WHERE keyword <> ""
       SELECT FIRST 
       WHILE NOT EOF ("prkeywo")
         AdrFound$(a%) = LTRIM$ (keyword)
         a% = a% + 1
         SELECT NEXT 
       WEND 
       AdrFound$(a%) = ""
       LAuswahl$ = AdrFound$(0)
       LAuswahl1$(0) = LAuswahl$
       CREATE DIALOG "ADRSTICHW",0,0,194,202,title$,"MS Sans Serif",8
       ADD DIALOG "ADRSTICHW",7,5,6,183,168,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
       ADD DIALOG "ADRSTICHW",1,33,180,55,16,1,"&OK",1,1
       ADD DIALOG "ADRSTICHW",1,93,180,55,16,0,"&Abbrechen",0,0
       DIALOG "ADRSTICHW",req5%
       MOUSE ON 
       REMOVE DIALOG "ADRSTICHW"
       IF req5% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         suna$ = LEFT$ (LAuswahl$)
       ELSE 
         ok% = 0
         PRJSuche% = 0
         REDIM AdrFound$( RECCOUNT ("project"))
         GOTO pEnde010498
       END IF 
       MOUSE OFF 
     END IF 
 
     suna1$ = suna$ + "*"
     suna$ = "*" + suna$ + "*"
     SELECT CASE feld$
      CASE "Keller.project"
         IF UCASE$ (suna1$) LIKE "N*" THEN 
           suna1$ = ""
           suna$ = "N"
         ELSE 
           suna$ = "J"
         END IF 
       CASE "Grundwasser.project"
         IF UCASE$ (suna1$) LIKE "N*" THEN 
           suna1$ = ""
           suna$ = "N"
         ELSE 
           suna$ = "J"
         END IF 
       CASE "Wasserhaltung.project"
         IF UCASE$ (suna1$) LIKE "N*" THEN 
           suna1$ = ""
           suna$ = "N"
         ELSE 
           suna$ = "J"
         END IF 
       CASE "offeneBaugrube.project"
         IF UCASE$ (suna1$) LIKE "N*" THEN 
           suna1$ = ""
           suna$ = "N"
         ELSE 
           suna$ = "J"
         END IF 
       CASE "Altlasten.project"
         IF UCASE$ (suna1$) LIKE "N*" THEN 
           suna1$ = ""
           suna$ = "N"
         ELSE 
           suna$ = "J"
         END IF 
       
     END SELECT 
     REM SET STATUS "Adre·suche nach " + feld$ + " = " + suna$
     SET STATUS "Projektsuche lÑuft..."
     wi% = 0
     REM 101198
     CALL Server("LISTBOXINIT","Projektauswahl")
     FILE "project"
     SELECT FIRST 
     MOUSE OFF 
     CALL Gauge(1,"Projektdatei wird durchsucht...")
     CALL Server("GAUGEENABLECANCEL","")
     _prozt% = 0
     _proz2% = 0
     _anz% = RECCOUNT ("project")
     IF feld$ LIKE "Telefon*" THEN GOTO ptel181096
     IF GCODIE% = - 1 THEN 
       CALL SearchInitPRO()
     END IF 
     WHILE NOT EOF ("project") AND ServerReply$() <> "CANCEL"
       _proz% = INT ((100 / _anz%) * _proz2%)
       IF _proz% > 100 THEN _proz% = 100
       IF _proz% < 2 THEN _proz% = 2
       IF _proz% <> _prozt% THEN 
         _prozt% = _proz%
         SET STATUS "erweiterte Suche... " + STR$ (_prozt%,"999") + " %"
         CALL Gauge(_proz%,"")
       END IF 
       _proz2% = _proz2% + 1
       adrfound% = 0
       SELECT CASE feld$
       CASE "Projektnummer.project"
         IF Projektnummer.project LIKE suna$ OR Projektnummer.project LIKE suna1$ THEN adrfound% = 1
       CASE "Name1.project","Name2.project","Name3.project"
         IF name1.project LIKE suna$ OR name1.project LIKE suna1$ THEN adrfound% = 1
         IF _projekt$ <> "AKTE" THEN 
           IF name2.project LIKE suna$ OR name2.project LIKE suna1$ THEN adrfound% = 1
           IF name3.project LIKE suna$ OR name3.project LIKE suna1$ THEN adrfound% = 1
         END IF 
       CASE "Strasse.project"
         IF Strasse.project LIKE suna$ OR Strasse.project LIKE suna1$ THEN adrfound% = 1
       CASE "Ort.project"
         IF Ort.project LIKE suna$ OR Ort.project LIKE suna1$ THEN adrfound% = 1
       CASE "PLZ.project"
         IF PLZ.project LIKE suna$ OR PLZ.project LIKE suna1$ THEN adrfound% = 1
       CASE "Stichwort.project"
         IF Stichwort.project LIKE suna$ OR Stichwort.project LIKE suna1$ THEN adrfound% = 1
         IF Notiz.project LIKE suna$ OR Notiz.project LIKE suna1$ THEN adrfound% = 1
       CASE "Land.project"
         IF Land.project LIKE suna$ OR Land.project LIKE suna1$ THEN adrfound% = 1
       CASE "Stadtteil.project"
         IF Stadtteil.project LIKE suna$ OR Stadtteil.project LIKE suna1$ THEN adrfound% = 1
       CASE "R1.project","R2.project"
         IF R1.project LIKE suna$ OR R1.project LIKE suna1$ THEN adrfound% = 1
         IF R2.project LIKE suna$ OR R2.project LIKE suna1$ THEN adrfound% = 1
       CASE "M1.project","M2.project"
         IF M1.project LIKE suna$ OR M1.project LIKE suna1$ THEN adrfound% = 1
         IF M2.project LIKE suna$ OR M2.project LIKE suna1$ THEN adrfound% = 1
       CASE "Bauwerk.project"
         IF Bauwerk.project LIKE suna$ OR Bauwerk.project LIKE suna1$ THEN adrfound% = 1
       CASE "GrÅndung.project"
         IF GrÅndung.project LIKE suna$ OR GrÅndung.project LIKE suna1$ THEN adrfound% = 1
       CASE "Nachbarbau.project"
         IF Nachbarbau.project LIKE suna$ OR Nachbarbau.project LIKE suna1$ THEN adrfound% = 1
       CASE "Boden.project"
         IF Boden.project LIKE suna$ OR Boden.project LIKE suna1$ THEN adrfound% = 1
       CASE "Keller.project"
         keller$ = keller.project
         IF keller$ LIKE suna$ OR keller$ = suna1$ THEN 
           adrfound% = 1
         END IF 
       CASE "Grundwasser.project"
         IF Grundwasser.project LIKE suna$ OR Grundwasser.project = suna1$ THEN adrfound% = 1
       CASE "Wasserhaltung.project"
         IF Wasserhaltung.project LIKE suna$ OR Wasserhaltung.project = suna1$ THEN adrfound% = 1
       CASE "offeneBaugrube.project"
         IF offeneBaugrube.project LIKE suna$ OR offeneBaugrube.project = suna1$ THEN adrfound% = 1
       CASE "Altlasten.project"
         IF Altlasten.project LIKE suna$ OR Altlasten.project = suna1$ THEN adrfound% = 1
       CASE "Notiz.project"
         IF Notiz.project LIKE suna$ OR Notiz.project LIKE suna1$ THEN adrfound% = 1
       END SELECT 
       IF alle$ = "n" THEN 
         IF novi1.project = 1 THEN adrfound% = 0
       END IF 
       IF adrfound% = 1 THEN 
         ok% = - 1
         IF ok% THEN 
           IF GCODIE% = - 1 THEN 
             CALL SearchVorbPRO("project")
           END IF 
           tmpZeile$ = LTRIM$ (Projektnummer.project) + "/" + name1.project + ", " + name2.project + ", " + ort.project + " (" + STR$ (Codepr.project,"000000") + ")"
           IF novi1.project = 1 THEN tmpZeile$ = "### " + tmpZeile$
           wi% = wi% + 1
           CALL Server("GaugeMessage","Projektdatei wird durchsucht... " + TRIM$ ( STR$ (wi%,"9999")) + " gefunden (" + Projektnummer.project + ", " + LEFT$ (Name1.project,20) + ".)")
           CALL Server("LISTBOXADD",tmpZeile$)
         END IF 
       END IF 
       SELECT NEXT FILE "project"
     WEND 
     CALL Gauge(0,"")
     SET STATUS "Bereit"
     IF wi% <> 0 THEN 
       MENU 2,2,1,"Suchliste anzeigen,F7","PROKurzSuche",""
       IF GCODIE% = - 1 THEN 
         c$ = "aa"
         CALL Fehler("Test","")
         req3% = CALL ("_SearchShow",c$)
         REM REQUEST c$,"",2
         REM ret% = CALL ("_SearchClose")
         IF VAL (c$) <> 0 THEN 
           PRJSuche% = VAL (c$)
           adrfound% = VAL (c$)
           ok% = 0
           SET STATUS "Projekt gefunden..."
         END IF 
         IF req3% = 2 THEN 
           CALL Fehler("Diese Funktion wird nur innerhalb der Adressmaske unterstÅtzt!","")
         END IF 
         IF adrfound% < 1 THEN 
           PRJSuche% = 0
           adrfound% = 0
         END IF 
       ELSE 
         SET STATUS "Bitte wÑhlen Sie ein Projekt aus"
         CALL Server("LISTBOXSHOW","Bitte wÑhlen Sie das gewÅnschte Projekt aus:")
         erg$ = ServerReply$()
         IF erg$ <> "" THEN 
           PRJSuche% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
         ELSE 
           PRJSuche% = 0
         END IF 
       END IF 
     ELSE 
       CALL Fehler("Keine entsprechendes Projekt gefunden!","")
       PRJSuche% = 0
     END IF 
   END IF 
   tfoundadr% = a%
 ELSE 
   tfoundadr% = 0
   REM IF _projekt$ <> "AKTE" THEN MENU 4,6,0,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Projekte"
 END IF 
pEnde010498: 
 SET STATUS "Bereit"
 MOUSE ON 
 FILE cfile$
 suchopt$ = ""
 END FUNCTION 
 
 
SUB PRJSuchen()
 SET STATUS "Projekt suchen"
 FILE "project"
 prj% = codepr.project
 IF ( MOD ("project") OR NEW ("project")) AND name1.project <> "" THEN CALL FStore("project")
 SELECT WHERE FILE "project"
 prj1% = PRJSuche%(0)
 IF prj1% <> 0 THEN prj% = prj1%
 SELECT FORM KEY prj% FILE "project" INDEX Codepr.project
 SELECT FORM KEY prj% FILE "prconect" INDEX Codepr.prconect
 SELECT FORM KEY prj% FILE "prconadr" INDEX Codepr.prconadr
 REM prj% = prj1%
 SET INDEX INDEX 
 CALL PRJFeldnamen()
 FORM 
 MOUSE ON 
 END SUB 
 
SUB PRJADRConnect()
 DIM AdrListe$( RECCOUNT ("adressen"))
 prj% = Codepr.project
 FILE "prconadr"
 INDEX codepr.prconadr
 IF suchopt$ LIKE "Projekt*" THEN suchopt$ = "Nachname"
 SELECT FIRST 
 SELECT KEY prj%
 prompt$ = "ZZZZZZZZ"
 a% = 0
 WHILE codepr.prconadr = prj% AND NOT EOF ("prconadr")
   aok% = - 1
   IF aok% THEN 
     AdrListe$(a%) = Typ + ", " + Nachname + ", " + Vorname + ", " + Ort + ", " + Strasse + SPACE$ (120) + STR$ (CodeKU,"000000")
     IF Nachname < prompt$ THEN prompt$ = AdrListe$(a%)
     a% = a% + 1
   END IF 
   SELECT NEXT 
 WEND 
 SELECT KEY prj% FILE "prconadr" INDEX Codepr.prconadr
 CREATE DIALOG "ADRCON1",0,0,441,382,title$,"MS Sans Serif",8
 ADD DIALOG "ADRCON1",4,0,0,441,358,0,""
 ADD DIALOG "ADRCON1",9,5,9,20,21,2
 ADD DIALOG "ADRCON1",5,30,10,306,28,0,"Bitte wÑhlen Sie eine der untergeordneten Adressen aus oder wÑhlen Sie 'Neu' um ein weitere Adresse in die Gruppe aufzunehmen."
 ADD DIALOG "ADRCON1",5,30,40,305,20,0,"Mit 'Lîschen' kînnen Sie die VerknÅpfung zur angewÑhlten Adresse lîschen."
 ADD DIALOG "ADRCON1",7,30,64,404,289,2,2,AdrListe$,Auswahl$,prompt$
 IF maxproz% < 5 THEN ADD DIALOG "ADRCON1",1,30,362,55,15,1,"&WÑhlen",1,1
 ADD DIALOG "ADRCON1",1,90,362,55,15,0,"&Details",4,1
 ADD DIALOG "ADRCON1",1,150,362,55,15,0,"&Neu",2,1
 ADD DIALOG "ADRCON1",1,210,362,55,15,0,"&Lîschen",3,1
 ADD DIALOG "ADRCON1",1,270,362,55,15,0,"&Abbrechen",0,0
 DIALOG "ADRCON1",req%
 REMOVE DIALOG "ADRCON1"
 MOUSE OFF 
 nknr% = VAL ( RIGHT$ (Auswahl$(0),6))
 SELECT CASE req%
 CASE 1
   IF nknr% <> 0 THEN 
     SELECT KEY nknr% FILE "adressen" INDEX Codeku.adressen
     knr% = nknr%
     maxproz% = maxproz% + 1
     CALL ADRESSEN()
   END IF 
 CASE 2
   nachfolger% = ADRSuche%(0)
   IF nachfolger% <> 0 THEN 
     SELECT KEY nachfolger% LOCK FILE "adressen" INDEX Codeku.adressen
     BLANK FILE "prconadr"
     codekey.prconadr = SER ("prconadr",1)
     codepr.prconadr = prj%
     codeKU.prconadr = nachfolger%
     CodePRKU.prconadr = STR$ (prj%,"000000") + STR$ (nachfolger%,"000000")
     Nachname.prconadr = Nachname.adressen
     vorname.prconadr = vorname.adressen
     plz.prconadr = plz.adressen
     Ort.prconadr = Ort.adressen
     Strasse.prconadr = Stra·e.adressen
     Name1.prconadr = Name1.project
     Name2.prconadr = Name2.project
     Name3.prconadr = Name3.project
     Ortprj.prconadr = Ort.project
     Strasseprj.prconadr = Strasse.project
     Projektnummer.prconadr = Projektnummer.project
     Typ.prconadr = "N"
     CALL QuickStore("prconadr")
     REM SELECT KEY prj% LOCK FILE "project" INDEX Codepr.project
     REM BLANK FILE "prconect"
 
     REM codepr.prconadr = nachfolger%
     REM codecon.prconect = prj%
     REM CodeConPR.prconect = STR$ (nachfolger%,"000000") + STR$ (prj%,"000000")
     REM Nachname.prconect = Name1.project
     REM vorname.prconect = Name2.project
     REM Ort.prconect = Ort.project
     REM Strasse.prconect = Strasse.project
     REM Typ.prconect = "V"
     REM CALL QuickStore("prconect")
 
   END IF 
   SELECT KEY prj% FILE "project" INDEX Codepr.project
   CALL PRJIntro()
   CALL PRJFeldnamen()
 CASE 3
   IF nknr% <> 0 THEN 
     FILE "prconadr"
     loe1$ = STR$ (prj%,"000000") + STR$ (nknr%,"000000")
     loe2$ = STR$ (nknr%,"000000") + STR$ (prj%,"000000")
     REMOVE FROM FILE "prConadr" WHERE CodePR.prconadr = prj% AND codeku.prconadr = nknr%
     REM REMOVE FROM FILE "prConadr" WHERE CodeKUPR.prconadr = loe2$
   END IF 
   SELECT KEY prj% FILE "project" INDEX Codepr.project
   CALL PRJIntro()
   CALL PRJFeldnamen()
  CASE 4
   REM Details
   nknr% = VAL ( RIGHT$ (Auswahl$(0),6))
   FILE "prConadr"
   INDEX codeku.prconadr
   CodePRKU$ = STR$ (prj%,"000000") + STR$ (nknr%,"000000")
   SELECT KEY codePRKU$ LOCK FILE "prconadr" INDEX codeprku.prconadr
   Adr$ = Typ.prconadr + ", " + Nachname + ", " + Vorname + ", " + Ort + ", " + Strasse
   notiz1$ = Notiz.prconadr
   CREATE DIALOG "ADRCON1",0,0,341,182,"Details zur VerknÅpfung","MS Sans Serif",8
   ADD DIALOG "ADRCON1",4,0,0,341,158,0,""
   ADD DIALOG "ADRCON1",9,5,9,20,21,2
   ADD DIALOG "ADRCON1",5,30,10,306,28,0,"Tragen Sie hier Kommentare zur aktuellen AdressverknÅpfung ein und bestÑtigen Sie mit éndern"
   ADD DIALOG "ADRCON1",5,30,40,305,20,0,adr$
   ADD DIALOG "ADRCON1",6,30,64,304,89,4,2,Notiz.prconadr,4000
   REM ADD DIALOG "ADRCON1",7,30,64,304,89,2,2,AdrListe$,Auswahl$,prompt$
   IF maxproz% < 5 THEN ADD DIALOG "ADRCON1",1,30,162,55,15,1,"&WÑhlen",1,1
   ADD DIALOG "ADRCON1",1,90,162,55,15,0,"é&ndern",4,1
   ADD DIALOG "ADRCON1",1,270,162,55,15,0,"&Abbrechen",0,0
   DIALOG "ADRCON1",req%
   REMOVE DIALOG "ADRCON1"
   IF req% = 0 THEN END SUB 
   IF req% = 1 THEN 
     IF notiz1$ <> Notiz.prconadr THEN 
       REQUEST "Der Kommentar wurde geÑndert!","Soll die énderung Åbernommen werden?",130,req1%
       IF req1% = 1 THEN CALL QuickStore("prCONADR")
     END IF 
     SELECT KEY nknr% FILE "adressen" INDEX CodeKU.adressen
     knr% = nknr%
     maxproz% = maxproz% + 1
     CALL ADRESSEN()
   END IF 
   IF req% = 4 THEN 
     CALL QuickStore("prconadr")
     SELECT KEY nknr% FILE "adressen" INDEX CodeKU.adressen
   END IF 
 END SELECT 
 FILE "project"
 SET INDEX Name1.project
 INDEX Name1.project
 CALL PRJIntro()
 CALL PRJFeldnamen()
 MOUSE ON 
 END SUB 
 

SUB ADRPRJConnect()
 IF RECCOUNT ("PROJECT") < 1 THEN 
   CALL Fehler("Es wurden noch keine Projekte angelegt, deshalb kînnen Sie diese Adresse nicht mit einem Projekt verknÅpfen!","Bitte legen Sie zuerst ein Projekt an!")
   END SUB 
 END IF 
 DIM AdrListe$( RECCOUNT ("prconadr"))
 knr% = Codeku.adressen
 FILE "prconadr"
 INDEX codeku.prconadr
 
 SELECT FIRST 
 SELECT KEY knr%
 prompt$ = "ZZZZZZZZ"
 a% = 0
 WHILE codeku.prconadr = knr% AND NOT EOF ("prconadr")
   aok% = - 1
   IF aok% THEN 
     AdrListe$(a%) = Projektnummer + "/" + Name1 + ", " + name2 + ", " + Ortprj + ", " + Strasseprj + SPACE$ (120) + STR$ (Codepr,"000000")
     IF name1 < prompt$ THEN prompt$ = AdrListe$(a%)
     a% = a% + 1
   END IF 
   SELECT NEXT 
 WEND 
 SELECT KEY prj% FILE "prconadr" INDEX Codepr.prconadr
 CREATE DIALOG "ADRCON1",0,0,441,382,title$,"MS Sans Serif",8
 ADD DIALOG "ADRCON1",4,0,0,441,358,0,""
 ADD DIALOG "ADRCON1",9,5,9,20,21,2
 ADD DIALOG "ADRCON1",5,30,10,306,28,0,"Bitte wÑhlen Sie ein Projekt aus oder wÑhlen Sie 'Neu' um ein weiteres Projekt in die Gruppe aufzunehmen."
 ADD DIALOG "ADRCON1",5,30,40,305,20,0,"Mit 'Lîschen' kînnen Sie die VerknÅpfung zum angewÑhlten Projekt lîschen."
 ADD DIALOG "ADRCON1",7,5,64,424,289,2,2,AdrListe$,Auswahl$,prompt$
 IF maxproz% < 5 THEN ADD DIALOG "ADRCON1",1,30,362,55,15,1,"&WÑhlen",1,1
 ADD DIALOG "ADRCON1",1,90,362,55,15,0,"&Details",4,1
 ADD DIALOG "ADRCON1",1,150,362,55,15,0,"&Neu",2,1
 ADD DIALOG "ADRCON1",1,210,362,55,15,0,"&Lîschen",3,1
 ADD DIALOG "ADRCON1",1,270,362,55,15,0,"&Abbrechen",0,0
 DIALOG "ADRCON1",req%
 REMOVE DIALOG "ADRCON1"
 MOUSE OFF 
 nknr% = VAL ( RIGHT$ (Auswahl$(0),6))
 SELECT CASE req%
 CASE 1
   IF nknr% <> 0 THEN 
     
     SELECT KEY nknr% FILE "project" INDEX Codepr.project
     maxproz% = maxproz% + 1
     prj% = nknr%
     codeku% = knr%
     CALL PROJECT()
     knr% = codeku%
   END IF 
 CASE 2
   nachfolger% = PRJSuche%(0)
   IF nachfolger% <> 0 THEN 
     SELECT KEY nachfolger% LOCK FILE "project" INDEX Codepr.project
     BLANK FILE "prconadr"
     codekey.prconadr = SER ("prconadr",1)
     codeku.prconadr = knr%
     codePR.prconadr = nachfolger%
     CodePRKU.prconadr = STR$ (prj%,"000000") + STR$ (nachfolger%,"000000")
     Nachname.prconadr = Nachname.adressen
     vorname.prconadr = vorname.adressen
     Ort.prconadr = Ort.adressen
     Strasse.prconadr = Stra·e.adressen
     plz.prconadr = plz.adressen
     Name1.prconadr = Name1.project
     Name2.prconadr = Name2.project
     Name3.prconadr = Name3.project
     Ortprj.prconadr = Ort.project
     Strasseprj.prconadr = Strasse.project
     Projektnummer.prconadr = Projektnummer.project
     Typ.prconadr = "N"
     CALL QuickStore("prconadr")
     REM SELECT KEY prj% LOCK FILE "project" INDEX Codepr.project
     REM BLANK FILE "prconect"
 
     REM codepr.prconadr = nachfolger%
     REM codecon.prconect = prj%
     REM CodeConPR.prconect = STR$ (nachfolger%,"000000") + STR$ (prj%,"000000")
     REM Nachname.prconect = Name1.project
     REM vorname.prconect = Name2.project
     REM Ort.prconect = Ort.project
     REM Strasse.prconect = Strasse.project
     REM Typ.prconect = "V"
     REM CALL QuickStore("prconect")
 
   END IF 
   SELECT KEY prj% FILE "project" INDEX Codepr.project
   CALL ADRIntro()
   CALL ADRFeldnamen()
 CASE 3
   IF nknr% <> 0 THEN 
     FILE "prconadr"
     INDEX codeprku
     SELECT FIRST FILE "prconadr" INDEX codeprku
     loe1$ = STR$ (nknr%,"000000") + STR$ (knr%,"000000")
anfloe310520061: 
     SELECT KEY loe1$ LOCK FILE "prconadr" INDEX codeprku
     IF loe1$ = codeprku THEN 
       SELECT REMOVE 
       SELECT FIRST FILE "prconadr" INDEX codeprku
       GOTO anfloe310520061
     END IF 
     loe2$ = STR$ (knr%,"000000") + STR$ (nknr%,"000000")
     codeku1% = codeku.adressen
     REM REMOVE FROM FILE "prConadr" WHERE CodePR.prconadr = nknr% AND codeku.prconadr = codeku1%
     REM REMOVE FROM FILE "prConadr" WHERE CodeKUPR.prconadr = loe2$
   END IF 
   SELECT KEY knr% FILE "adressen" INDEX Codeku.adressen
   CALL ADRIntro()
   CALL ADRFeldnamen()
  CASE 4
   REM Details
   nknr% = VAL ( RIGHT$ (Auswahl$(0),6))
   FILE "prConadr"
   INDEX codeku.prconadr
   CodePRKU$ = STR$ (nknr%,"000000") + STR$ (knr%,"000000")
   SELECT KEY codePRKU$ LOCK FILE "prconadr" INDEX codeprku.prconadr
   Adr$ = Projektnummer + ", " + name1 + ", " + name2 + ", " + Ortprj + ", " + Strasseprj
   notiz1$ = Notiz.prconadr
   CREATE DIALOG "ADRCON1",0,0,341,182,"Details zur VerknÅpfung","MS Sans Serif",8
   ADD DIALOG "ADRCON1",4,0,0,341,158,0,""
   ADD DIALOG "ADRCON1",9,5,9,20,21,2
   ADD DIALOG "ADRCON1",5,30,10,306,28,0,"Tragen Sie hier Kommentare zur aktuellen AdressverknÅpfung ein und bestÑtigen Sie mit éndern"
   ADD DIALOG "ADRCON1",5,30,40,305,20,0,adr$
   ADD DIALOG "ADRCON1",6,5,64,324,89,4,2,Notiz.prconadr,4000
   REM ADD DIALOG "ADRCON1",7,30,64,304,89,2,2,AdrListe$,Auswahl$,prompt$
   IF maxproz% < 5 THEN ADD DIALOG "ADRCON1",1,30,162,55,15,1,"&WÑhlen",1,1
   ADD DIALOG "ADRCON1",1,90,162,55,15,0,"é&ndern",4,1
   ADD DIALOG "ADRCON1",1,270,162,55,15,0,"&Abbrechen",0,0
   DIALOG "ADRCON1",req%
   REMOVE DIALOG "ADRCON1"
   IF req% = 0 THEN END SUB 
   IF req% = 1 THEN 
     IF notiz1$ <> Notiz.prconadr THEN 
       REQUEST "Der Kommentar wurde geÑndert!","Soll die énderung Åbernommen werden?",130,req1%
       IF req1% = 1 THEN CALL QuickStore("prCONADR")
     END IF 
     SELECT KEY nknr% FILE "project" INDEX Codepr.project
     prj% = nknr%
     maxproz% = maxproz% + 1
     IF ProjectJN$ = "TRUE" AND maxproz% > 4 THEN 
       CALL Fehler("Die maximale Anzahl der Verschachtelungstiefe ist erreicht!","")
     ELSE 
       CALL PROJECT()
     END IF 
   END IF 
   IF req% = 4 THEN 
     CALL QuickStore("prconadr")
     SELECT KEY knr% FILE "adressen" INDEX CodeKU.adressen
   END IF 
 END SELECT 
 FILE "project"
 SET INDEX Name1.project
 INDEX Name1.project
 CALL PRJIntro()
 CALL PRJFeldnamen()
 MOUSE ON 
 IF req% = 0 THEN 
   CALL ADRFeldnamen()
 END IF 
 END SUB 
  


SUB PRJADRWahl()
  Gposold% = - 1
  knr% = codeku.prconadr
  SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
  SELECT KEY knr% FILE "ADRESSEN" INDEX codeku.adressen
  IF MNdisabled%("DATALOCK") THEN 
    cfile$ = "ADRESSEN"
    sperre% = Sperre.cfile$
    IF Sperre.cfile$ <> 0 AND Sperre.cfile$ <> GMAcodema% THEN 
      CALL Fehler("Sie sind nicht berechtigt diese Adresse einzusehen!","")
      GOTO e210320071
    END IF 
  END IF 
  maxproz% = maxproz% + 1
  IF ProjectJN$ = "TRUE" AND maxproz% > 4 THEN 
    CALL Fehler("Die maximale Anzahl der Verschachtelungstiefe ist erreicht!","")
  ELSE 
    CALL ADRESSEN()
  END IF 
e210320071: 
 END SUB 


SUB ZEADRWahl(dat$)
  Gposold% = - 1
  knr% = codeku.dat$
  maxproz% = maxproz% + 1
  IF dat$ LIKE "RAUS*" THEN 
    GfromRA% = - 1
  ELSE 
    GfromRE% = - 1
  END IF 
  IF ProjectJN$ = "TRUE" AND maxproz% > 4 THEN 
    CALL Fehler("Die maximale Anzahl der Verschachtelungstiefe ist erreicht!","")
  ELSE 
    CALL ADRESSEN()
  END IF 
  GfromRA% = 0
  GfromRE% = 0
 END SUB 


SUB AQPRJZuord()
 codeaq% = codeaq.GAkquiDat$
 SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 nachfolger% = PRJSuche%(0)
 IF nachfolger% <> 0 THEN 
   SELECT KEY nachfolger% FILE "project" INDEX codepr.project
   codepr.GAkquiDat$ = nachfolger%
   Projekt.GAkquiDat$ = LTRIM$ (Projektnummer.project) + "/" + LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
   CALL QuickStore(GAkquiDat$)
 END IF 
 CALL AQButtUpdate()
 END SUB 

SUB MAPRJZuord()
 CALL DFile(3,"RAUSGANG" + _fpw$)
 codems% = codems.master
 SELECT KEY codems% LOCK FILE "master" INDEX codems.master
 nachfolger% = PRJSuche%(0)
 IF nachfolger% <> 0 THEN 
   SELECT KEY nachfolger% FILE "project" INDEX codepr.project
   codepr.master = nachfolger%
   Projekt.master = LTRIM$ (Projektnummer.project) + "/" + LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
   CALL QuickStore("master")
   IF codedok.master > 0 THEN 
     IF EXISTS (codedok.master,codedok.dokument) THEN 
       SELECT KEY codedok.master LOCK FILE "Dokument" INDEX codedok.dokument
       Projekt.dokument = Projekt.master
       codepr.dokument = codepr.master
       CALL QuickStore("Dokument")
     END IF 
   END IF 
   cums% = codems.master
   IF codeaq.master > 0 OR EXISTS (codems.master,codems.GAkquiDat$) THEN 
     IF EXISTS (codems.master,codems.GAkquiDat$) THEN 
       datei22$ = FILE 
       FILE GAkquiDat$
       INDEX codems.GAkquiDat$
       SELECT FIRST 
       SELECT KEY codems.master LOCK FILE GAkquiDat$ INDEX codems.GAkquiDat$
       WHILE codems.GAkquiDat$ = cums%
         codems.GAkquiDat$ = codems.master
         Projekt.GAkquiDat$ = Projekt.master
         codepr.GAkquiDat$ = codepr.master
         CALL QuickStore(GAkquiDat$)
         SELECT NEXT LOCK FILE GAkquiDat$
         IF EOF (GAkquiDat$) THEN cums% = - 1
       WEND 
       UNLOCK CURRENT FILE GAkquiDat$
       UNLOCK FILE GAkquiDat$ ALL 
       FILE datei22$
       cums% = codems.master
     ELSE 
       IF EXISTS (codeaq.master,codeaq.GAkquiDat$) THEN 
         SELECT KEY codeaq.master LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         codems.GAkquiDat$ = codems.master
         Projekt.GAkquiDat$ = Projekt.master
         codepr.GAkquiDat$ = codepr.master
         CALL QuickStore(GAkquiDat$)
       END IF 
     END IF 
   END IF 
   IF EXISTS (codems.master,codems.rausgang) THEN 
     SELECT KEY codems.master LOCK FILE "rausgang" INDEX codems.rausgang
     Projekt.rausgang = Projekt.master
     codepr.rausgang = codepr.master
     CALL QuickStore("rausgang")
   END IF 
 END IF 
 CALL MSUpdate()
 END SUB 

SUB DOPRJZuord()
 codedok% = codedok.dokument
 SELECT KEY codedok% LOCK FILE "dokument" INDEX codedok.dokument
 nachfolger% = PRJSuche%(0)
 IF nachfolger% <> 0 THEN 
   SELECT KEY nachfolger% FILE "project" INDEX codepr.project
   codepr.dokument = nachfolger%
   Projekt.dokument = LTRIM$ (Projektnummer.project) + "/" + LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
   CALL QuickStore("dokument")
 END IF 
 END SUB 




SUB PRJGlobalSuch()
AnfSuPrj280498: 
 IF UCASE$ ( FORM ) = "PROJECT" THEN 
   CREATE DIALOG "ADRCON1",0,0,418,278,"Projektsuche","MS Sans Serif",8
   ADD DIALOG "ADRCON1",4,0,0,418,253,0,""
   ADD DIALOG "ADRCON1",5,30,8,306,11,0,"Tragen Sie hier die einzelnen Suchbegriffe in die zugehîrigen Felder ein!"
   ADD DIALOG "ADRCON1",9,5,9,20,21,2
   ADD DIALOG "ADRCON1",5,30,20,51,11,0,"Projektnummer"
   ADD DIALOG "ADRCON1",5,30,32,51,11,0,"Name1"
   ADD DIALOG "ADRCON1",5,30,44,51,11,0,"Name2"
   ADD DIALOG "ADRCON1",5,30,56,51,11,0,"Name3"
   ADD DIALOG "ADRCON1",5,30,68,50,11,0,"Stra·e"
   ADD DIALOG "ADRCON1",5,30,80,50,11,0,"PLZ"
   ADD DIALOG "ADRCON1",5,30,92,50,11,0,"Ort"
   ADD DIALOG "ADRCON1",5,30,104,49,11,0,"Land"
   ADD DIALOG "ADRCON1",5,30,116,49,11,0,"Stadtteil"
   ADD DIALOG "ADRCON1",5,30,128,59,11,0,"Projektstart von"
   ADD DIALOG "ADRCON1",5,135,129,19,11,0,"bis"
   ADD DIALOG "ADRCON1",5,30,140,49,11,0,"R1"
   ADD DIALOG "ADRCON1",5,30,152,49,11,0,"H1"
   ADD DIALOG "ADRCON1",5,30,164,49,11,0,"R2"
   ADD DIALOG "ADRCON1",5,30,176,50,11,0,"H2"
   ADD DIALOG "ADRCON1",5,30,188,51,11,0,"Bauwerk"
   ADD DIALOG "ADRCON1",5,30,200,51,11,0,"GrÅndung"
   ADD DIALOG "ADRCON1",5,30,212,51,11,0,"Nachbarbau"
   ADD DIALOG "ADRCON1",5,30,224,51,11,0,"Boden"
   ADD DIALOG "ADRCON1",6,85,20,136,11,128,0,Projektnummer$,20
   ADD DIALOG "ADRCON1",6,85,32,136,11,128,0,name1$,50
   ADD DIALOG "ADRCON1",6,85,43,136,11,128,0,name2$,50
   ADD DIALOG "ADRCON1",6,85,56,136,11,128,0,name3$,50
   ADD DIALOG "ADRCON1",6,85,68,136,11,128,0,Strasse$,50
   ADD DIALOG "ADRCON1",6,85,80,136,11,128,0,PLZ$,8
   ADD DIALOG "ADRCON1",6,85,92,136,11,128,0,Ort$,50
   ADD DIALOG "ADRCON1",6,85,104,136,11,128,0,Land$,50
   ADD DIALOG "ADRCON1",6,85,116,136,11,128,0,Stadtteil$,50
   ADD DIALOG "ADRCON1",6,85,128,40,11,0,0,Projektstart$,10
   ADD DIALOG "ADRCON1",6,155,128,40,11,0,0,Projektstart2$,10
   ADD DIALOG "ADRCON1",6,85,140,136,11,128,0,R1$,20
   ADD DIALOG "ADRCON1",6,85,152,136,11,128,0,M1$,20
   ADD DIALOG "ADRCON1",6,85,164,136,11,128,0,R2$,20
   ADD DIALOG "ADRCON1",6,85,176,136,11,128,0,M2$,20
   ADD DIALOG "ADRCON1",6,85,188,136,11,128,0,Bauwerk$,20
   ADD DIALOG "ADRCON1",6,85,200,136,11,128,0,GrÅndung$,20
   ADD DIALOG "ADRCON1",6,85,212,136,11,128,0,Nachbarbau$,20
   ADD DIALOG "ADRCON1",6,85,224,136,11,128,0,Boden$,20
   ADD DIALOG "ADRCON1",2,242,140,52,11,0,"Auswahl ?","J","N",AKeller$
   ADD DIALOG "ADRCON1",2,325,140,52,11,0,"Keller J/N","J","N",Keller$
   ADD DIALOG "ADRCON1",2,242,152,71,11,0,"Auswahl ?","J","N",AGrund$
   ADD DIALOG "ADRCON1",2,325,152,71,11,0,"Grundwasser J/N","J","N",Grundwasser$
   ADD DIALOG "ADRCON1",2,242,164,71,11,0,"Auswahl ?","J","N",AWasser$
   ADD DIALOG "ADRCON1",2,325,164,71,11,0,"Wasserhaltung J/N","J","N",Wasserhaltung$
   ADD DIALOG "ADRCON1",2,242,176,81,11,0,"Auswahl ?","J","N",ABaugrube$
   ADD DIALOG "ADRCON1",2,325,176,81,11,0,"offene Baugrube J/N","J","N",Baugrube$
   ADD DIALOG "ADRCON1",2,242,188,81,11,0,"Auswahl ?","J","N",AAltlast$
   ADD DIALOG "ADRCON1",2,325,188,81,11,0,"Altlasten J/N","J","N",Altlasten$
   REM ADD DIALOG "ADRCON1",6,242,20,98,90,4,2,Notiz$,4000
   ADD DIALOG "ADRCON1",1,130,259,55,14,1,"&OK",1,1
   ADD DIALOG "ADRCON1",1,188,259,54,14,0,"&Abbrechen",0,0
   DIALOG "ADRCON1",reqsu%
   REMOVE DIALOG ALL 
 END IF 
 IF UCASE$ ( FORM ) = "PROJECT1" THEN 
   CREATE DIALOG "ADRCON1",0,0,280,185,"Projektsuche","MS Sans Serif",8
   ADD DIALOG "ADRCON1",4,0,0,278,150,0,""
   ADD DIALOG "ADRCON1",5,30,8,240,11,0,"Tragen Sie hier die einzelnen Suchbegriffe in die zugehîrigen Felder ein!"
   ADD DIALOG "ADRCON1",9,5,9,20,21,2
   ADD DIALOG "ADRCON1",5,30,20,51,11,0,"Projektnummer"
   ADD DIALOG "ADRCON1",5,30,32,51,11,0,"Name1"
   ADD DIALOG "ADRCON1",5,30,44,51,11,0,"Name2"
   ADD DIALOG "ADRCON1",5,30,56,51,11,0,"Name3"
   ADD DIALOG "ADRCON1",5,30,68,50,11,0,"Stra·e"
   ADD DIALOG "ADRCON1",5,30,80,50,11,0,"PLZ"
   ADD DIALOG "ADRCON1",5,30,92,50,11,0,"Ort"
   ADD DIALOG "ADRCON1",5,30,104,49,11,0,"Land"
   ADD DIALOG "ADRCON1",5,30,116,49,11,0,"Stadtteil"
   ADD DIALOG "ADRCON1",5,30,128,59,11,0,"Projektstart von"
   ADD DIALOG "ADRCON1",5,135,129,19,11,0,"bis"
   ADD DIALOG "ADRCON1",6,85,20,136,11,128,0,Projektnummer$,20
   ADD DIALOG "ADRCON1",6,85,32,136,11,128,0,name1$,50
   ADD DIALOG "ADRCON1",6,85,43,136,11,128,0,name2$,50
   ADD DIALOG "ADRCON1",6,85,56,136,11,128,0,name3$,50
   ADD DIALOG "ADRCON1",6,85,68,136,11,128,0,Strasse$,50
   ADD DIALOG "ADRCON1",6,85,80,136,11,128,0,PLZ$,8
   ADD DIALOG "ADRCON1",6,85,92,136,11,128,0,Ort$,50
   ADD DIALOG "ADRCON1",6,85,104,136,11,128,0,Land$,50
   ADD DIALOG "ADRCON1",6,85,116,136,11,128,0,Stadtteil$,50
   ADD DIALOG "ADRCON1",6,85,128,40,11,0,0,Projektstart$,10
   ADD DIALOG "ADRCON1",6,155,128,40,11,0,0,Projektstart2$,10
   REM ADD DIALOG "ADRCON1",6,242,20,98,90,4,2,Notiz$,4000
   ADD DIALOG "ADRCON1",1,80,159,55,14,1,"&OK",1,1
   ADD DIALOG "ADRCON1",1,138,159,54,14,0,"&Abbrechen",0,0
   DIALOG "ADRCON1",reqsu%
   REMOVE DIALOG ALL 
 END IF 
 IF reqsu% <> 1 THEN END SUB 
 suna1$ = "J"
 IF projektnummer$ <> "" THEN 
   suna$ = projektnummer$
   feld$ = "Projektnummer.project"
 ELSE 
   IF name1$ <> "" THEN 
     suna$ = name1$
     feld$ = "Name1.project"
   ELSE 
     IF name2$ <> "" THEN 
       suna$ = name2$
       feld$ = "Name2.project"
     ELSE 
       IF name3$ <> "" THEN 
         suna$ = name3$
         feld$ = "Name3.project"
       ELSE 
         IF strasse$ <> "" THEN 
           suna$ = strasse$
           feld$ = "strasse.project"
         ELSE 
           IF plz$ <> "" THEN 
             suna$ = plz$
             feld$ = "plz.project"
           ELSE 
             IF ort$ <> "" THEN 
               suna$ = ort$
               feld$ = "ort.project"
             ELSE 
               IF land$ <> "" THEN 
                 suna$ = land$
                 feld$ = "land.project"
               ELSE 
                 IF Stadtteil$ <> "" THEN 
                   suna$ = stadtteil$
                   feld$ = "Stadtteil.project"
                 ELSE 
                   IF projektstart$ <> "" OR projektstart2$ <> "" THEN 
                     suna$ = projektstart$
                     feld$ = "Project_seit.project"
                   ELSE 
                     IF r1$ <> "" THEN 
                       suna$ = r1$
                       feld$ = "r1.project"
                     ELSE 
                       IF m1$ <> "" THEN 
                         suna$ = m1$
                         feld$ = "m1.project"
                       ELSE 
                         IF r2$ <> "" THEN 
                           suna$ = r2$
                           feld$ = "r2.project"
                         ELSE 
                           IF m2$ <> "" THEN 
                             suna$ = m2$
                             feld$ = "m2.project"
                           ELSE 
                             IF Bauwerk$ <> "" THEN 
                               suna$ = Bauwerk$
                               feld$ = "Bauwerk.project"
                             ELSE 
                               IF GrÅndung$ <> "" THEN 
                                 suna$ = GrÅndung$
                                 feld$ = "GrÅndung.project"
                               ELSE 
                                 IF Nachbarbau$ <> "" THEN 
                                   suna$ = Nachbarbau$
                                   feld$ = "Nachbarbau.project"
                                 ELSE 
                                  IF Boden$ <> "" THEN 
                                    suna$ = Boden$
                                    feld$ = "Boden.project"
                                  ELSE 
                                    IF akeller$ = "J" THEN 
                                      suna$ = Keller$
                                      IF suna$ = "N" THEN suna1$ = ""
                                      IF suna$ = "J" THEN suna1$ = "Z"
                                      feld$ = "Keller.project
                                    ELSE 
                                      IF agrund$ = "J" THEN 
                                        suna$ = Grundwasser$
                                        IF suna$ = "N" THEN suna1$ = ""
                                        IF suna$ = "J" THEN suna1$ = "Z"
                                        feld$ = "Grundwasser.project"
                                      ELSE 
                                        IF awasser$ = "J" THEN 
                                          suna$ = Wasserhaltung$
                                          IF suna$ = "N" THEN suna1$ = ""
                                          IF suna$ = "J" THEN suna1$ = "Z"
                                          feld$ = "Wasserhaltung.project"
                                        ELSE 
                                            IF abaugrube$ = "J" THEN 
                                              suna$ = Baugrube$
                                              IF suna$ = "N" THEN suna1$ = ""
                                              IF suna$ = "J" THEN suna1$ = "Z"
                                              feld$ = "offeneBaugrube.project"
                                            ELSE 
                                              IF aaltlast$ = "J" THEN 
                                                suna$ = Altlasten$
                                                IF suna$ = "N" THEN suna1$ = ""
                                                IF suna$ = "J" THEN suna1$ = "Z"
                                                feld$ = "Altlasten.project"
                                              ELSE 
                                                CALL Fehler("Zuwenig Angaben, um eine Auswertung durchzufÅhren!","")
                                                GOTO end270498 
                                              END IF 
                                            END IF 
                                        END IF 
                                      END IF 
                                    END IF 
                                   END IF 
                                 END IF 
                               END IF 
                             END IF 
                           END IF 
                         END IF 
                       END IF 
                     END IF 
                   END IF 
                 END IF 
               END IF 
             END IF 
           END IF 
         END IF 
       END IF 
     END IF 
   END IF 
 END IF 
 FILE "Project"
 INDEX feld$$
 SELECT FIRST 
 datind$ = "FALSE"
 datind1$ = "FALSE"
 IF feld$ LIKE "Project_seit*" THEN 
   IF projektstart$ = "" THEN projektstart$ = 1.1.1980"
   IF DateOK%(projektstart$) THEN 
     datind$ = "TRUE"
   ELSE 
     GOTO AnfSuPrj280498
   END IF 
   IF projektstart2$ <> "" THEN 
     IF DateOK%(projektstart2$) THEN 
       datind1$ = "TRUE"
     ELSE 
       GOTO AnfSuPrj280498
     END IF 
   END IF 
 END IF 
 IF datind$ <> "TRUE" THEN 
   SELECT KEY suna$ INDEX feld$$
 ELSE 
   suna% = DAYS (suna$)
   SELECT KEY suna% INDEX feld$$
 END IF 
 REM suna$ = suna$ + "*"
 SET STATUS "Projektsuche lÑuft..."
 a% = 0
 REDIM AdrFound$( RECCOUNT ("project"))
 b% = RECCOUNT ("project")
 FOR i% = 0 TO b%
   AdrFound$(i%) = ""
 NEXT i%
 i% = 0
 adrfound% = 1
 projektstart% = suna%
 projektstart2% = DAYS (projektstart2$)

 IF datind$ <> "TRUE" THEN WHILE feld$$ LIKE suna$ + "*" AND NOT EOF ("Project")
 IF datind$ = "TRUE" AND datind1$ = "FALSE" THEN WHILE feld$$ = DAYS (projektstart$) AND NOT EOF ("Project")
 IF datind$ = "TRUE" AND datind1$ = "TRUE" THEN WHILE feld$$ >= projektstart% AND feld$$ <= projektstart2% + 1 AND NOT EOF ("Project")
   test$ = name1.project
   IF projektnummer$ <> "" THEN 
     IF projektnummer LIKE projektnummer$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF name1$ <> "" THEN 
     IF Name1.project LIKE name1$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 

   IF name2$ <> "" THEN 
     IF name2 LIKE name2$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF name3$ <> "" THEN 
     IF name3 LIKE name3$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF strasse$ <> "" THEN 
     IF strasse LIKE strasse$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF plz$ <> "" THEN 
     IF plz LIKE plz$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF ort$ <> "" THEN 
     IF ort LIKE ort$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF land$ <> "" THEN 
     IF land LIKE land$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF Stadtteil$ <> "" THEN 
     IF stadtteil LIKE stadtteil$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF projektstart$ <> "" THEN 
     IF DateOK%(projektstart$) THEN 
       IF projektstart2$ <> "" THEN 
         IF DateOK%(projektstart2$) THEN 
         ELSE 
           GOTO AnfSuPrj280498
         END IF 
         IF project_seit >= projektstart% AND project_seit <= projektstart2% THEN 
         ELSE 
           adrfound% = 0
         END IF 
       ELSE 
         IF projektstart$ <> "" AND project_seit = DAYS (projektstart$) THEN 
         ELSE 
           adrfound% = 0
         END IF 
       END IF 
     ELSE 
       GOTO AnfSuPrj280498
     END IF 
   END IF 
   IF r1$ <> "" THEN 
     IF r1 LIKE r1$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF m1$ <> "" THEN 
     IF m1 LIKE m1$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF r2$ <> "" THEN 
     IF r2 LIKE r2$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF m2$ <> "" THEN 
     IF m2 LIKE m2$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF Bauwerk$ <> "" THEN 
     IF bauwerk LIKE bauwerk$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF GrÅndung$ <> "" THEN 
     IF GrÅndung LIKE GrÅndung$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF Nachbarbau$ <> "" THEN 
     IF Nachbarbauwerk LIKE Nachbarbau$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF Boden$ <> "" THEN 
     IF Boden LIKE Boden$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF AKeller$ = "J" THEN 
     IF Keller = Keller$ THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF agrund$ = "J" THEN 
     IF Grundwasser = Grundwasser$ THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF awasser$ = "J" THEN 
     IF wasserhaltung = Wasserhaltung$ THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF abaugrube$ = "J" THEN 
     IF offenebaugrube = Baugrube$ THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF aaltlast$ = "J" THEN 
     IF Altlasten.project = Altlasten$ THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF adrfound% = 1 THEN 
     codepr% = codepr.project
     AdrFound1$ = LTRIM$ (Projektnummer) + "/" + LTRIM$ (name1) + ", " + LTRIM$ (name2) + ", " + LTRIM$ (ort) + ", " + PLZ + ", " + LTRIM$ (Strasse) + ", "
     REM FILE "project"
     AdrFound$(a%) = AdrFound1$ + SPACE$ (120) + STR$ (codepr,"000000")
     a% = a% + 1
   ELSE 
     adrfound% = 1
   END IF 
   SELECT NEXT 
   test$ = name1.project
 WEND 
 IF a% > 0 THEN 
   LAuswahl$ = AdrFound$(0)
   LAuswahl1$(0) = LAuswahl$
   CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"MS Sans Serif",8
   ADD DIALOG "ADRLISTE",7,5,8,328,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
   ADD DIALOG "ADRLISTE",1,114,174,56,16,1,"&OK",1,1
   ADD DIALOG "ADRLISTE",1,174,174,56,16,0,"&Abbrechen",0,0
   DIALOG "ADRLISTE",req3%
   MOUSE ON 
   REMOVE DIALOG "ADRLISTE"
   IF req3% = 1 THEN 
     LAuswahl$ = LAuswahl1$(0)
     prj% = VAL ( RIGHT$ (LAuswahl$,6))
     adrfound% = VAL ( RIGHT$ (LAuswahl$,6))
     ok% = 0
     SET STATUS "Projekt gefunden..."
     SELECT FORM KEY prj% FILE "project" INDEX Codepr.project
     SELECT FORM KEY prj% FILE "prconect" INDEX Codepr.prconect
     SET INDEX INDEX 
     CALL PRJFeldnamen()
     FORM 
     MOUSE ON 
   END IF 
 ELSE 
   CALL Fehler ("Es wurden keine Projekte gefunden, die den angegebenen Kriterien entsprechen!","")
   GOTO AnfSuPrj280498
 END IF 
end270498: 
 END SUB 



SUB PRJDokNew()
 prj% = Codepr.project
 IF disabled%("DOKUMENT") THEN END SUB 
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 cudo% = CodeDOK.DOKUMENT
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "DOKPRJ"
 IF ProjectJN$ = "TRUE" THEN maske$ = "DOKPRJ"
 FILE "DOKUMENT"
 INDEX codepr.Dokument
 SELECT FIRST 
 
 
 WHILE _formend% = 0
   DOKsub% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     SET HEADING title$ + " - Dokumentenverwaltung"
     OPEN FORM GOFFForm$ + maske$
     SET STATUS "Dokumentenverwaltung"
     CALL MNDOKSRV2()
     CALL PRJDokNewInt()
     FORM 
     SET DISPLAY ON 
   END IF 
   MENU ON 
   FORM 
   MOUSE ON 
   dokgrup$ = Gruppe.Dokument
   FORM 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE DOKsub%
   CASE 1
     CALL ADRDOK()
   CASE 2
     CALL DOKSRV1()
   CASE 3
     adrfound1% = DokSuchenP%(codepr.project)
     cudo% = adrfound1%
     SELECT FIRST FILE "Dokument" INDEX codedok.dokument
     SELECT KEY adrfound1% FILE "Dokument" INDEX codedok.dokument
     CALL DOKSRV1()
   CASE 5
     REM Sortierung nach Bearbeiter
     maske$ = "DOKPRJ2"
   CASE 6
     REM Sortierung nach erstellt am
     maske$ = "DOKPRJ3"
   CASE 7
     REM Sortierung nach letzte Bearb
     maske$ = "DOKPRJ4"
   CASE 8
     REM Sortierung nach Dokument
     maske$ = "DOKPRJ"
   CASE 9
     REM Sortierung nach Dokgruppe
     maske$ = "DOKPRJ5"
   END SELECT 
 WEND 
 _formend% = 0
 REM IF FileChanged%("DOKUMENT") = 1 THEN CALL FStore("DOKUMENT")
 _formend% = 0
 END SUB 
 

SUB MNDOKSRV2()
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
SUB PRJDokNewInt()
 SELECT FORM KEY prj% FILE "Project" INDEX codepr.project
 SELECT FORM KEY prj% FILE "Dokument" INDEX codepr.dokument
 END SUB 
 

 REM ProjektadressÅbersicht

SUB PRJADRprin()
 IF disabled%("ADRDrucken") THEN END SUB 
 codepr% = codepr.project
 opt% = 1
 CREATE DIALOG "ADRLIST",0,0,292,100,"WÑhlen Sie den Ausdruck","MS Sans Serif",8
 ADD DIALOG "ADRLIST",9,4,9,20,21,2
 ADD DIALOG "ADRLIST",5,30,22,238,14,0,"WÑhlen Sie aus, in welcher Form die Adresse(n) gedruckt werden sollen"
 ADD DIALOG "ADRLIST",3,30,36,120,10,0,"Adressen vom akt. Projekt",1,opt%
 ADD DIALOG "ADRLIST",3,30,47,120,10,0,"Adre·liste aller Projekte",2,opt%
 REM  ADD DIALOG "ADRLIST",3,30,58,236,10,0,"Adre·liste (ausgewÑhlte Adressen) / EXPORT als Serienbriefdatei",3,opt%
 REM ADD DIALOG "ADRLIST",3,30,69,124,10,0,"Screenshot akt. Adresse",4,opt%
 ADD DIALOG "ADRLIST",1,78,80,51,14,1,"&Weiter",1,1
 ADD DIALOG "ADRLIST",1,130,80,51,14,0,"&Abbruch",0,0
 DIALOG "ADRLIST",req%
 REMOVE DIALOG "ADRLIST"
 IF req% = 1 THEN 
   IF opt% = 1 THEN 
     CALL GenAdrTemp(codepr%)
   END IF 
   IF opt% = 2 THEN 
     CALL GenAdrTemp(0)
   END IF 
   IF opt% = 2 OR opt% = 1 THEN 
     CALL PRep("PRJADR")
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
 
     GROUP Name1.PROJECT
     BEFORE GROUP Name1.PROJECT
     SET REPORT PAGE "H_Name1.PROJ002"
     OUTPUT REPORT PAGE 
     END GROUP 
 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
 
     SET QUERY ON 
     SET QUERY LOCK ON 
     SELECT DISTINCT ;
     WHERE CodePR.PROJECT = Codepr.ADRTEMP
     ORDER REPORT Name1.PROJECT,QuickPRKU.ADRTEMP
     TO ASK 
     END SELECT 
     
     REM IF opt% = 1 THEN 
       REM SELECT DISTINCT ;
       REM WHERE CodePR.PROJECT = CodePR.PRCONADR AND CodeKU.PRCONADR = CodeKU.ADRESSEN AND codepr.project = codepr%
       REM ORDER REPORT Name1.PROJECT,Nachname.PRCONADR
       REM TO ASK 
     REM END IF 
   END IF 
 END IF 
 END SUB 
 
 ' WÑhrung zuordnen in Artikeldatei
 ' =======================================================================
 ' 17.09.98
SUB ARTWaehrung()
 IF Bezeichnung.ARTIKEL <> "" THEN 
   _cuwaehr% = CodeW.ARTIKEL
   cuart% = CodeAR.ARTIKEL
   DIM Waehrung$( RECCOUNT ("waehrung"))
   IF NEW ("ARTIKEL") OR MOD ("ARTIKEL") THEN CALL FStore("ARTIKEL")
     FILE "waehrung"
     DIM Auswahl1$(1)
     INDEX Codew.waehrung
     SELECT FIRST 
     a% = 0
     WHILE NOT EOF ("waehrung")
       Waehrung$(a%) = waehrung.waehrung + " (1Euro = " + STR$ (umrechnung.waehrung,",999999.000000") + " " + waehrung.waehrung + ")" + + SPACE$ (120) + STR$ (CodeW.waehrung,"000000")
       a% = a% + 1
       SELECT NEXT 
     WEND 
     prompt$ = Waehrung$(0)
     FILE "artikel"
     CREATE DIALOG "PREISLIS",0,0,190,164,title$,"MS Sans Serif",8
      ADD DIALOG "PREISLIS",4,0,0,189,137,0," Auswahl WÑhrung"
      ADD DIALOG "PREISLIS",7,5,14,139,125,2,2,Waehrung$,Auswahl1$,prompt$
      ADD DIALOG "PREISLIS",1,37,145,55,16,1,"&OK",1,1
      ADD DIALOG "PREISLIS",1,107,145,55,16,0,"&Abbrechen",0,0
      DIALOG "PREISLIS",req%
      REMOVE DIALOG "PREISLIS"
      IF req% = 1 THEN 
        _cuwaehr% = VAL ( RIGHT$ (Auswahl1$(0),6))
        SELECT KEY _cuwaehr% FILE "waehrung" INDEX codew.waehrung
        _cuwaehr% = CodeW.waehrung
        IF _cuwaehr% > 0 THEN cuwaehr% = _cuwaehr%
        
        SELECT KEY cuart% LOCK FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
        CodeW.ARTIKEL = _cuwaehr%
        NUMBASE "z99999999.000000"
        euro% = umrechnung.waehrung
        Waehrung.artikel = waehrung.waehrung
        umrechnung.artikel = euro%
        CALL FStore("ARTIKEL")
        SELECT FORM KEY cuart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
        SET INDEX bezeichnung.ARTIKEL
        INDEX bezeichnung.ARTIKEL
      
      SELECT KEY cuart% LOCK FILE "Artikel" INDEX codear.artikel
      IF UCASE$ ( FORM ) = "ARTIKEL" THEN 
        waehr$ = "WÑhrung: " + waehrung.waehrung
        CALL ArtDMEuro()
      ELSE 
        waehr$ = "Erfass.wÑhrung war: " + waehrung.waehrung
        CALL ArtEuroDM()
      END IF 
      CALL QuickStore("Artikel")
      zweitwaehr$ = Waehrung.artikel
    END IF 
 END IF 
 MOUSE ON 
 FORM 
 END SUB 



 ' Wechsel zwischen den verschiedenen Artikelmasken
 ' 16.09.98
 '================================================================================
SUB ChangeToEur()
    cuart% = codear.artikel
    cugrp% = codegr.gruppen
    artiform1$ = "ARTIKEL"
    seite% = PAGE 
   IF UCASE$ ( FORM ) <> artiform1$ THEN 
     artiform1$ = "ARTIKEL"
     euromaske% = 0
     mastform$ = ""
   ELSE 
     artiform1$ = "ARTIKEEU"
     euromaske% = 1
     mastform$ = "EUR"
   END IF 
   artiform$ = artiform1$
     CALL MNARTIKEL()
     MENU ON 
     OPEN FORM GPrjForm$ + artiform1$
     SET f = superbase.form
     SET HEADING title$ + " - Artikel"
     SET STATUS "Artikel"
     FORM seite%
     CALL ARTIntro()
     CALL ARTUpdate()
     
 END SUB 

 ' Rechnung suchen 
 ' =======================================================================
 ' 100499
  
 REM Rechnung suchen 
SUB RESuche(dat$,sprung%)
 CALL DFile(3,"WAGRUPPE" + _fpw$)
 CALL DFile(3,"warenart" + _fpw$)
 CALL DFile(3,"rausgang" + _fpw$)
 CALL DFile(3,"reingang" + _fpw$)

 wbericht$ = dat$
 MOUSE OFF 
 FILE wbericht$
 SELECT WHERE FILE wbericht$
 REM IF bis$ = "" THEN bis$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 DIM LAuswahl1$(1)
 DIM Auswahl1$(1)
 DIM PAuswahl1$(1)
 a% = 0
 alle$ = "n"
 DIM Keyword$( RECCOUNT (wbericht$))
 DIM Auswahl$(1)

 IF sprung% = 1 THEN GOTO test18012005 

 IF UCASE$ (wbericht$) LIKE "RE*" THEN 
 
   IF UCASE$ ( FORM ) LIKE "ADRR*" THEN 
     REDIM Lieferant$(1,1)
     REDIM Lieferant$(1)
     Lieferant$(0) = Nachname.adressen + "," + vorname.adressen + SPACE$ (120) + STR$ (codeku.adressen,"000000")
   END IF 
   IF Lieferant$(0) = "" THEN 
     a% = 0
     INDEX codeku.reingang
     SELECT FIRST 
     codeku% = codeku.reingang
     codekuold% = 0
     rec% = RECCOUNT ("reingang")
     REDIM Lieferant$(1,1)
     REDIM Lieferant$(rec%)
     WHILE NOT EOF ("reingang")
       codeku% = codeku.reingang
       IF codekuold% <> codeku% THEN 
         Lieferant$(a%) = nachname.reingang + "," + vorname.reingang + "," + ort.reingang + SPACE$ (120) + STR$ (codeku.reingang,"000000")
         a% = a% + 1
         codekuold% = codeku%
       END IF 
       SELECT NEXT 
     WEND 
   END IF 
   SELECT WHERE FILE "reingang"
 ELSE 
   FILE "rausgang"
   IF UCASE$ ( FORM ) LIKE "ADRR*" THEN 
     REDIM Lieferant$(1,1)
     REDIM Lieferant$(1)
     Lieferant$(0) = Nachname.adressen + "," + vorname.adressen + SPACE$ (120) + STR$ (codeku.adressen,"000000")
   END IF 
   IF Lieferant$(0) = "" THEN 
     a% = 0
     INDEX codeku.rausgang
     SELECT FIRST 
     codeku% = codeku.rausgang
     codekuold% = 0
     rec% = RECCOUNT ("rausgang")
     REDIM Lieferant$(1,1)
     REDIM Lieferant$(rec%)
     WHILE NOT EOF ("rausgang")
       codeku% = codeku.rausgang
       IF codekuold% <> codeku% THEN 
         Lieferant$(a%) = nachname.rausgang + "," + vorname.rausgang + "," + ort.rausgang + SPACE$ (120) + STR$ (codeku.rausgang,"000000")
         a% = a% + 1
         codekuold% = codeku%
       END IF 
       SELECT NEXT 
     WEND 
   END IF 
  
   SELECT WHERE FILE "rausgang"
 END IF 

 DIM MASTUFLIST$(7)
 MASTUFLIST$(0) = "-1"
 MASTUFLIST$(1) = "0"
 MASTUFLIST$(2) = "1"
 MASTUFLIST$(3) = "2"
 MASTUFLIST$(4) = "3"
 MASTUFLIST$(5) = "4"
 MASTUFLIST$(6) = "5"
 mastufe$ = "-1"

anf170120052: 

       a% = 0
       FILE "project"
       INDEX name1.project
       SELECT FIRST FILE "project"
       rec% = RECCOUNT ("project")
       REDIM Projecteab$(1,1)
       REDIM Projecteab$(rec%)
       WHILE NOT EOF ("project")
         sok% = - 1
         IF alle$ = "n" THEN 
           IF novi1.project = 1 THEN sok% = 0
         END IF 
         IF sok% THEN 
           IF novi1.project = 1 THEN 
             Projecteab$(a%) = "### " + LTRIM$ (Projektnummer.project) + "/" + LTRIM$ (name1.project) + SPACE$ (120) + STR$ (codepr.project,"000000")
           ELSE 
             Projecteab$(a%) = LTRIM$ (Projektnummer.project) + "/" + LTRIM$ (name1.project) + SPACE$ (120) + STR$ (codepr.project,"000000")
           END IF 
           a% = a% + 1
         END IF 
         SELECT NEXT 
       WEND 


     a% = 0
     FILE "WAGRUPPE"
     INDEX wgruppe.wagruppe
     SELECT FIRST FILE "WAGRUPPE"
     FILE "Warenart"
     INDEX Warenart.warenart
     SELECT FIRST 
     rec1a% = RECCOUNT ("wagruppe") + RECCOUNT ("warenart")
     REDIM ProdGruppen1$(1,1)
     REDIM ProdGruppen1$(rec1a%)
     WHILE NOT EOF ("wagruppe")
       FILE "wagruppe"
       sok% = - 1
       IF alle$ = "n" THEN 
         IF novi1.wagruppe = 1 THEN sok% = 0
       END IF 
       IF sok% THEN 
         codewgru% = codewgru.wagruppe
         IF novi1.wagruppe = 1 THEN 
           ProdGruppen1$(a%) = wgruppe.wagruppe + " ### " + SPACE$ (100) + STR$ (codewgru.wagruppe,"000000")
         ELSE 
           ProdGruppen1$(a%) = wgruppe.wagruppe + SPACE$ (100) + STR$ (codewgru.wagruppe,"000000")
         END IF 
         a% = a% + 1
         FILE "warenart"
         INDEX warenart.warenart
         SELECT FIRST FILE "warenart"
         WHILE NOT EOF ("warenart")
           ook% = - 1
           IF alle$ = "n" THEN 
             IF novi1.warenart = 1 THEN ook% = 0
           END IF 
           IF dat$ LIKE "reing*" THEN 
             IF rea.warenart = 1 THEN ook% = 0
           END IF 
           IF dat$ LIKE "rausg*" THEN 
             IF rea.warenart = 2 THEN ook% = 0
           END IF 
           IF codewgru.warenart <> codewgru% THEN ook% = 0
           IF ook% THEN 
             IF novi1.wagruppe = 1 THEN 
               ProdGruppen1$(a%) = "  |-- " + Warenart.warenart + " ### " + SPACE$ (100) + STR$ (codewa.warenart,"000000")
             ELSE 
               ProdGruppen1$(a%) = "  |-- " + Warenart.warenart + SPACE$ (100) + STR$ (codewa.warenart,"000000")
             END IF 
             a% = a% + 1
           END IF 
           SELECT NEXT FILE "warenart"
         WEND 
         REM war1old$ = war1$
       END IF 
       FILE "WAGRUPPE"
       SELECT NEXT FILE "Wagruppe"
     WEND 


       a% = 0
       IF NOT OPEN ("adrgrup") THEN CALL DFile(2,"OFFICE\adrgrup" + _fpw$)
       FILE "adrgrup"
       INDEX keyword 
       SELECT FIRST FILE "adrgrup"
       rec% = RECCOUNT ("adrgrup")
       REDIM GADRGrup$(1,1)
       REDIM GADRGrup$(rec%)
       WHILE NOT EOF ("adrgrup")
         sok% = - 1
         IF sok% THEN 
           GADRGrup$(a%) = LTRIM$ (keyword)
           a% = a% + 1
         END IF 
         SELECT NEXT 
       WEND 
 
 

 
 
 opt1% = 2
 opt% = 3
 
resu2010981: 
 IF ProjectJN$ = "TRUE" THEN CREATE DIALOG "UMSATZ",0,0,530,400,"Rechnungssuche","MS Sans Serif",8
 IF ProjectJN$ <> "TRUE" THEN CREATE DIALOG "UMSATZ",0,0,430,400,"Rechnungssuche","MS Sans Serif",8
 ADD DIALOG "UMSATZ",4,0,1,233,117,0,""
 IF GCODie% <> - 1 THEN ADD DIALOG "UMSATZ",4,235,1,95,117,0,""
 ADD DIALOG "UMSATZ",4,0,119,430,117,0,"Feldauswahl"
 
 IF GCODie% <> - 1 THEN ADD DIALOG "UMSATZ",5,250,12,66,9,0,"Sortierreihenfolge"
 ADD DIALOG "UMSATZ",9,6,12,20,21,2

 ADD DIALOG "UMSATZ",5,40,16,166,9,0,"Bitte geben Sie den Zeitraum ein, fÅr den Sie eine"
 ADD DIALOG "UMSATZ",5,40,25,193,10,0,"Suche wÅnschen.(Standard:1.1.1900-31.12.2999"
 REM ADD DIALOG "UMSATZ",5,40,34,184,8,0,"Wenn Sie keinen Zeitraum bestimmen, werden sÑmtliche"
 REM ADD DIALOG "UMSATZ",5,40,43,184,9,0,"Rechnungen angezeigt."
 REM ADD DIALOG "UMSATZ",2,40,60,180,16,0,"nur KASSEN  anzeigen","j","n",kasse$
 REM ADD DIALOG "UMSATZ",2,40,72,180,16,0,"nur KONTO anzeigen","j","n",konto$
 
 REM ADD DIALOG "UMSATZ",3,40,55,180,10,0,"nur nichterledigt VorgÑnge",4,opt%

 ADD DIALOG "UMSATZ",5,5,40,103,9,0,"nichterledigte VorgÑnge:"
 ADD DIALOG "UMSATZ",3,85,40,20,10,0,"Ja","j",nichterl$
 ADD DIALOG "UMSATZ",3,105,40,30,10,0,"Nein","n",nichterl$
 ADD DIALOG "UMSATZ",3,135,40,30,10,0,"egal","",nichterl$

 REM ADD DIALOG "UMSATZ",2,5,55,95,10,0,"nur nichterledigt VorgÑnge","j","n",nichterl$
 REM ADD DIALOG "UMSATZ",2,102,55,58,10,0,"angemahnte","J","N",mahnjn$
 REM ADD DIALOG "UMSATZ",2,160,55,78,10,0,"Mahnsperre","j","n",mahnsperre$

 ADD DIALOG "UMSATZ",2,108,55,55,10,0," Mahnsperre?","j","n",Mahnsperre$
 ADD DIALOG "UMSATZ",6,178,54,40,11,0,0,msperrebis$,10
 ADD DIALOG "UMSATZ",2,168,75,55,10,0," angemahnt?","J","N",MahnJN$
 ADD DIALOG "UMSATZ",8,182,95,24,70,2,2,mastufe$,MASTUFLIST$

 ADD DIALOG "UMSATZ",3,5,67,150,10,0,"nur KONTO - Bewegungen anzeigen",1,opt%
 ADD DIALOG "UMSATZ",3,5,79,150,10,0,"nur KASSEN - Bewegungen anzeigen",2,opt%
 ADD DIALOG "UMSATZ",3,5,91,150,10,0,"alle Bewegungen anzeigen",3,opt%
 ADD DIALOG "UMSATZ",5,5,104,18,9,0,"von:"
 ADD DIALOG "UMSATZ",5,66,104,13,9,0,"bis:"
 ADD DIALOG "UMSATZ",5,165,55,10,9,0,"bis"


 ADD DIALOG "UMSATZ",5,250,103,48,10,0,"Adressgruppe"
 ADD DIALOG "UMSATZ",8,300,101,169,195,259,2,gadrname$,GADRGrup$

 ADD DIALOG "UMSATZ",5,5,130,50,10,0,"Belegnummer:"
 ADD DIALOG "UMSATZ",6,55,130,80,13,0,0,Belegnr$,20

 ADD DIALOG "UMSATZ",5,140,130,50,10,0,"Ktoauszugsnr:"
 ADD DIALOG "UMSATZ",6,195,130,80,13,0,0,ktonr$,20

 IF dat$ LIKE "rausgang" THEN 
   ADD DIALOG "UMSATZ",5,280,145,80,10,0,"interne Nummer:"
   ADD DIALOG "UMSATZ",6,335,145,80,13,0,0,intnum$,20
 END IF 

 IF dat$ LIKE "rausgang" THEN 
   ADD DIALOG "UMSATZ",5,280,130,80,10,0,"Kundennummer:"
   ADD DIALOG "UMSATZ",6,335,130,80,13,0,0,Kundnr$,20
 ELSE 
   REM ADD DIALOG "UMSATZ",5,140,145,80,10,0,"Kundennummer:"
   REM ADD DIALOG "UMSATZ",6,195,145,80,13,0,0,Kundnr$,20
 END IF 

 ADD DIALOG "UMSATZ",5,5,147,50,10,0,"RE-Nummer:"
 ADD DIALOG "UMSATZ",6,55,147,80,13,0,0,rechnr$,20

 REM IF dat$ LIKE "rausgang" THEN ADD DIALOG "UMSATZ",2,140,147,85,10,0,"  angemahnt?","j","n",MahnJN$
 ADD DIALOG "UMSATZ",5,5,164,50,10,0,"RE-Netto von:"
 ADD DIALOG "UMSATZ",6,55,164,80,13,0,0,renetvon$,20
 ADD DIALOG "UMSATZ",5,140,164,50,10,0,"RE-Netto bis:"
 ADD DIALOG "UMSATZ",6,195,164,80,13,0,0,renetbis$,20

 ADD DIALOG "UMSATZ",5,5,181,50,10,0,"RE-Brutto von:"
 ADD DIALOG "UMSATZ",6,55,181,80,13,0,0,rebrutvon$,20
 ADD DIALOG "UMSATZ",5,140,181,50,10,0,"RE-Brutto bis:"
 ADD DIALOG "UMSATZ",6,195,181,80,13,0,0,rebrutbis$,20

 ADD DIALOG "UMSATZ",5,5,196,50,20,0,"letzte Zahlung von:"
 ADD DIALOG "UMSATZ",6,55,198,50,13,0,0,bezamvon$,10
 ADD DIALOG "UMSATZ",5,140,196,50,20,0,"letzte Zahlung bis:"
 ADD DIALOG "UMSATZ",6,195,198,50,13,0,0,bezambis$,10

 ADD DIALOG "UMSATZ",5,5,215,50,20,0,"Zahlungsziel von:"
 ADD DIALOG "UMSATZ",6,55,215,50,13,0,0,zzielvon$,10
 ADD DIALOG "UMSATZ",5,140,215,50,20,0,"Zahlungsziel bis:"
 ADD DIALOG "UMSATZ",6,195,215,50,13,0,0,zzielbis$,10


 IF dat$ LIKE "reing*" THEN 
   ADD DIALOG "UMSATZ",5,280,160,50,10,0,"RE-Brut.F von:"
   ADD DIALOG "UMSATZ",6,335,160,80,13,0,0,FBruttovon$,20
   ADD DIALOG "UMSATZ",5,280,175,50,10,0,"RE-Brut.F bis:"
   ADD DIALOG "UMSATZ",6,335,175,80,13,0,0,FBruttobis$,20
 END IF 


 ADD DIALOG "UMSATZ",6,22,103,40,11,0,0,von$,10
 ADD DIALOG "UMSATZ",6,87,103,40,11,0,0,bis$,10



 IF GCODie% <> - 1 THEN 
   ADD DIALOG "UMSATZ",3,240,23,80,10,0,"Kundennummer",8,opt1%
 END IF 
 IF GCODie% <> - 1 THEN ADD DIALOG "UMSATZ",3,240,35,80,10,0,"Belegnummer",1,opt1%
 IF GCODie% <> - 1 THEN ADD DIALOG "UMSATZ",3,240,47,80,10,0,"RE-Datum",2,opt1%
 IF GCODie% <> - 1 THEN ADD DIALOG "UMSATZ",3,240,59,80,10,0,"Name",3,opt1%
 IF GCODie% <> - 1 THEN ADD DIALOG "UMSATZ",3,240,71,80,10,0,"RE-Nummer",4,opt1%
 IF GCODie% <> - 1 THEN ADD DIALOG "UMSATZ",3,240,83,85,10,0,"Konto-Auszugsnummer",5,opt1%
 IF GCODie% <> - 1 THEN ADD DIALOG "UMSATZ",3,240,95,80,10,0,"Buchungskonto",6,opt1%
 IF GCODie% <> - 1 THEN ADD DIALOG "UMSATZ",3,240,107,80,10,0,"bezahlt am",7,opt1%
 REM 191098-1 ADD DIALOG "UMSATZ",2,28,94,85,10,0,"  nur Summen","j","n",Kontrollfeld$
 
 ADD DIALOG "UMSATZ",4,0,239,205,135,0,"Auswahl Buchungsgruppe/Buchungskonto(opt)"
 ADD DIALOG "UMSATZ",7,2,251,200,125,0,2,Prodgruppen1$,Auswahl1$," "
 IF ProjectJN$ <> "TRUE" THEN 
   IF dat$ LIKE "RAUSGANG" THEN ADD DIALOG "UMSATZ",4,212,239,218,135,0," Auswahl der Adresse (optional)"
   IF dat$ LIKE "REINGANG" THEN ADD DIALOG "UMSATZ",4,212,239,218,135,0," Auswahl des Lieferanten (optional)"
   ADD DIALOG "UMSATZ",7,214,251,212,125,2,2,Lieferant$,Lauswahl1$," "
 END IF 
 IF ProjectJN$ = "TRUE" THEN 
   IF dat$ LIKE "RAUSGANG" THEN ADD DIALOG "UMSATZ",4,212,239,168,135,0," Auswahl der Adresse (optional)"
   IF dat$ LIKE "REINGANG" THEN ADD DIALOG "UMSATZ",4,212,239,168,135,0," Auswahl des Lieferanten (optional)"
   ADD DIALOG "UMSATZ",7,214,251,162,125,2,2,Lieferant$,Lauswahl1$," "
   ADD DIALOG "UMSATZ",4,382,239,147,135,0," Auswahl des Projektes (optional)"
   ADD DIALOG "UMSATZ",7,384,251,142,125,2,2,Projecteab$,Pauswahl1$," "
 END IF 
 ADD DIALOG "UMSATZ",5,178,85,43,9,0,"Mahnstufe ="
 ADD DIALOG "UMSATZ",1,107,382,55,15,1,"&OK",1,1
 ADD DIALOG "UMSATZ",1,164,382,55,15,0,"&Abbrechen",0,0
 ADD DIALOG "UMSATZ",1,221,382,125,15,0,"Alle Konten und Projekte zeigen",2,2
 DIALOG "UMSATZ",req%
 REMOVE DIALOG "UMSATZ"
 MOUSE ON 
 IF req% = 0 THEN END SUB 
 SELECT WHERE FILE dat$
 mastufe% = VAL (mastufe$)
 IF req% = 2 THEN 
   alle$ = "j"
   GOTO anf170120052
 END IF 
 MOUSE OFF 
 IF msperrebis$ <> "" AND NOT DateOK%(msperrebis$) THEN 
   GOTO anf170120052
 END IF 
 IF bis$ = "" THEN 
   bis$ = DATE$ ( TODAY + 50000,"0d.mm.yyyy")
 END IF 
 REM IF von$ = "" THEN von$ = "01.01.1980"

 REM IF bezambis$ = "" THEN bezambis$ = DATE$ ( TODAY ,"0d.mm.yyyy")

 IF zzielvon$ = "" THEN 
   REM zzielvon$ = "01.01.1980"
 END IF 
 IF zzielbis$ = "" THEN 
   REM zzielbis$ = "31.12.2999"
 END IF 
 IF zzielvon$ <> "" AND NOT DateOK%(zzielvon$) THEN 
   CALL Fehler("Zahlungsziel VON ist falsch!","Bitte prÅfen!")
   GOTO resu2010981 
 END IF 

 IF zzielbis$ <> "" AND NOT DateOK%(zzielbis$) THEN 
   CALL Fehler("Zahlungsziel BIS ist falsch!","Bitte prÅfen!")
   GOTO resu2010981 
 END IF 

 IF bezamvon$ = "" THEN 
   bezamvon$ = "01.01.1980"
   bz$ = ""
 ELSE 
   bz$ = bezamvon$
 END IF 
 IF von$ <> "" THEN 
   IF DateOK%(von$) THEN 
   ELSE 
     CALL Fehler("RE-Datum VON ist falsch!","Bitte prÅfen!")
     GOTO resu2010981
   END IF 
 END IF 
 IF DateOK%(bis$) THEN 
 ELSE 
   CALL Fehler("RE-Datum BIS ist falsch!","Bitte prÅfen!")
   GOTO resu2010981
 END IF 

 IF DateOK%(bezamvon$) THEN 
   bezamvon$ = bz$
 ELSE 
   CALL Fehler("bezahlt am VON ist falsch!","Bitte prÅfen!")
   GOTO resu2010981
 END IF 
 IF bezambis$ <> "" THEN 
   IF DateOK%(bezambis$) THEN 
   ELSE 
     CALL Fehler("bezahlt am BIS ist falsch!","Bitte prÅfen!")
     GOTO resu2010981
   END IF 
 END IF 
 ON ERROR GOTO resu2010983
 IF renetvon$ = "" THEN renetvon$ = "-99999999.99"
 IF renetbis$ = "" THEN renetbis$ = "99999999.99"
 IF rebrutvon$ = "" THEN rebrutvon$ = "-99999999.99"
 IF rebrutbis$ = "" THEN rebrutbis$ = "99999999.99"

 IF FBruttovon$ = "" THEN FBruttovon$ = "-99999999.99"
 IF FBruttobis$ = "" THEN FBruttobis$ = "99999999.99"
 renetvon% = VAL (renetvon$)
 GOTO resu2010984
resu2010983: 
 CALL Fehler("RE-Netto VON ungÅltiger Wert!","Bitte prÅfen!")
 GOTO resu2010981
resu2010984: 
 ON ERROR GOTO resu2010985
 renetbis% = VAL (renetbis$)
 GOTO resu2010986
resu2010985: 
 CALL Fehler("RE-Netto BIS ungÅltiger Wert!","Bitte prÅfen!")
 GOTO resu2010981
resu2010986: 
 ON ERROR GOTO resu2010987
 rebrutvon% = VAL (rebrutvon$)
 GOTO resu2010988
resu2010987: 
 CALL Fehler("RE-Brutto VON ungÅltiger Wert!","Bitte prÅfen!")
 GOTO resu2010981
resu2010988: 
 ON ERROR GOTO resu2010989
 rebrutbis% = VAL (rebrutbis$)
 GOTO resu2010982
resu2010989: 
 CALL Fehler("RE-Brutto BIS ungÅltiger Wert!","Bitte prÅfen!")
 GOTO resu2010981
resu2010982: 
 ON ERROR GOTO resu020520041
 FBruttovon% = VAL (FBruttovon$)
 GOTO resu020520042
resu020520041: 
 CALL Fehler("RE-Brut.F VON ungÅltiger Wert!","Bitte prÅfen!")
 GOTO resu2010981
resu020520042:  
 ON ERROR GOTO resu020520043
 FBruttobis% = VAL (FBruttobis$)
 GOTO resu020520044
resu020520043: 
 CALL Fehler("RE-Brut.F BIS ungÅltiger Wert!","Bitte prÅfen!")
 GOTO resu2010981
resu020520044:  
 IF LTRIM$ (intnum$) <> "" THEN intnum% = VAL (intnum$)

 wbericht$ = dat$
 ON ERROR GOTO ErrorHandler
 FILE wbericht$
 SELECT CASE opt1%
   CASE 1
     INDEX belegnr.wbericht$
   CASE 2
     INDEX datum.wbericht$
   CASE 3
     INDEX nachname.wbericht$
   CASE 4
     REM INDEX lrenummer.wbericht$
     INDEX codems.wbericht$
   CASE 5
     INDEX ktoauszugsnr.wbericht$
   CASE 6
     INDEX warenart.wbericht$
   CASE 7
     INDEX gezahltAm.wbericht$
   CASE 8
     INDEX Kundennummer.wbericht$
 END SELECT 
 SELECT WHERE 
 SELECT FIRST 
 
 REM rest$ = "  and gesnetto>=renetvon% and gesnetto%<=renetbis% and gesbrutto >=rebrutvon% and gesbrutto<=rebrutbis% "
 IF opt% = 1 THEN 
   bef$ = "Select where ucase$(kassejn)<>~J~ and datum >= von$ and datum <= bis$"
   IF von$ = "" THEN bef$ = "Select where ucase$(kassejn)<>~J~ and datum <= bis$"
 END IF 
 IF opt% = 2 THEN 
   bef$ = "Select where ucase$(kassejn)=~J~ and datum >= von$ and datum <= bis$"
   IF von$ = "" THEN bef$ = "Select where ucase$(kassejn)=~J~ and datum <= bis$"
 END IF 
 IF opt% = 3 THEN 
   bef$ = "Select where datum >= von$ and datum <= bis$"
   IF von$ = "" THEN bef$ = "Select where datum <= bis$"
 END IF 
 IF opt% = 4 THEN 
   bef$ = "Select where ucase$(erledigt)<>~J~ and datum >= von$ and datum <= bis$"
   IF von$ = "" THEN bef$ = "Select where ucase$(erledigt)<>~J~ and datum <= bis$"
 END IF 
 rest1$ = ""

 IF bezamvon$ <> "" THEN 
   rest1$ = " AND gezahltam >= bezamvon$"
 END IF 
  IF bezambis$ <> "" THEN 
   rest1$ = rest1$ + " AND gezahltam <= bezambis$"
 END IF 

 IF zzielvon$ <> "" THEN 
   rest1$ = " AND zahlbarbis >= zzielvon$"
 END IF 
  IF zzielbis$ <> "" THEN 
   rest1$ = rest1$ + " AND zahlbarbis <= zzielbis$"
 END IF 


 IF Auswahl1$(0) <> "" THEN 
   war$ = Auswahl1$(0)
   IF war$ LIKE "*|--*" THEN 
     codewa% = VAL ( RIGHT$ (Auswahl1$(0),6))
     bef$ = bef$ + " and codewa=codewa%"
   ELSE 
     codewgru% = VAL ( RIGHT$ (Auswahl1$(0),6))
     bef$ = bef$ + " and codewgru=codewgru%"
   END IF 
   
 END IF 
 IF LAuswahl1$(0) <> "" THEN 
   lie$ = LAuswahl1$(0)
   codeku1% = VAL ( RIGHT$ (lie$,6))
   bef$ = bef$ + " and codeku=codeku1%"
 END IF 
 IF PAuswahl1$(0) <> "" THEN 
   proj$ = PAuswahl1$(0)
   codepr1% = VAL ( RIGHT$ (proj$,6))
   bef$ = bef$ + " and codepr=codepr1%"
 END IF 
 IF MahnJN$ LIKE "j" THEN 
   IF bef$ = "" THEN 
     bef$ = "select where MahnJN like MahnJN$"
   ELSE 
     bef$ = bef$ + " and MahnJN like MahnJN$"
   END IF 
 END IF 
 IF mahnsperre$ LIKE "j" THEN 
    IF bef$ = "" THEN 
     bef$ = "select where Mahnsperre like Mahnsperre$"
   ELSE 
     bef$ = bef$ + " and Mahnsperre like Mahnsperre$"
   END IF 
   IF msperrebis$ <> "" THEN 
     bef$ = bef$ + " and MahnsperbisDat <= msperrebis$"
   END IF 
 END IF 
 IF mastufe% > - 1 THEN 
   IF bef$ = "" THEN 
     bef$ = "Select where MahnStufe = mastufe%"
   ELSE 
     bef$ = bef$ + " and MahnStufe = mastufe%"
   END IF 
 END IF 
 IF nichterl$ LIKE "j" THEN 
   IF bef$ = "" THEN 
     bef$ = "select where ucase$(erledigt)<>~J~"
   ELSE 
     bef$ = bef$ + " and ucase$(erledigt)<>~J~"
   END IF 
 ELSE 
   IF nichterl$ = "n" THEN 
     IF bef$ = "" THEN 
       bef$ = "select where ucase$(erledigt)<>~J~"
     ELSE 
       bef$ = bef$ + " and ucase$(erledigt)<>~J~"
     END IF 
   END IF 
 END IF 
 IF mahnjn$ LIKE "Jjj" THEN 
   IF bef$ = "" THEN 
     bef$ = "select where ucase$(mahnjn)<>~J~"
   ELSE 
     bef$ = bef$ + " and ucase$(mahnjn)<>~J~"
   END IF 
 END IF 
 REM IF dat$ LIKE "rausgang" THEN 
 REM END IF 
 REM bef$ = bef$ + rest$ + rest1$
 IF intnum% > 0 THEN 
   bef$ = bef$ + " and nummer2 = intnum%"
 END IF 
 IF Kundnr$ <> "" THEN 
   IF RIGHT$ (kundnr$,1) <> "*" THEN Kundnr$ = Kundnr$ + "*"
   bef$ = bef$ + " and Kundennummer like Kundnr$"
 END IF 
 bef$ = bef$ + rest1$
 EXECUTE bef$
 FILE wbericht$
 IF opt1% = 2 THEN 
   SELECT LAST 
 ELSE 
   SELECT FIRST 
 END IF 
 REM  tNR$ = NRPack$(NR$)
 a% = 0
 MOUSE OFF 
 IF GCODIE% = - 1 THEN 
   CALL SearchInitRE()
 END IF 
 WHILE NOT EOF (wbericht$)
   SET STATUS " Durchsuche " + LREnummer.wbericht$
   ok% = - 1
   IF belegnr$ <> "" THEN 
     tB$ = NRPack$(belegnr$)
     tV$ = NRPack$(belegnr)
     IF tV$ LIKE tB$ + "*" THEN 
     ELSE 
       ok% = 0
     END IF 
   END IF 

   IF gadrname$ <> "" AND gadrname$ <> "<OHNE ZUORDNUNG>" THEN 
     codeku% = codeku.wbericht$
     SELECT FIRST FILE "adressen" INDEX codeku.adressen
     SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
     REM CALL Fehler(adrgruppe.adressen,gadrname$)
     IF adrgruppe.adressen LIKE gadrname$ THEN 
     ELSE 
       ok% = 0
     END IF 
   END IF 

   REM IF Kundnr$ <> "" THEN 
     REM tB$ = NRPack$(Kundnr$)
     REM tV$ = NRPack$(Kundennummer)
     REM IF tV$ LIKE tB$ + "*" THEN 
     REM ELSE 
       REM ok% = 0
     REM END IF 
   REM END IF 

   IF rechnr$ <> "" THEN 
     tB$ = NRPack$(rechnr$)
     tV$ = NRPack$(LREnummer)
     IF tV$ LIKE tB$ + "*" THEN 
     ELSE 
       ok% = 0
     END IF 
   END IF 
   IF ktonr$ <> "" THEN 
     tB$ = NRPack$(ktonr$)
     tV$ = NRPack$(ktoauszugsnr)
     IF tV$ LIKE tB$ + "*" THEN 
     ELSE 
       ok% = 0
     END IF 
   END IF 
   REM CALL Fehler(lrenummer + "   " + FORM + " " + wbericht$ + " Net:" + STR$ (gesnettoeu,",9999999.00"),"Brut:" + STR$ (gesbruttoeu,",9999999.00"))
   IF FORM LIKE "rainguee" OR FORM LIKE "reinguee" OR FORM LIKE "prjreine" OR FORM LIKE "prjrause" THEN 
     ggesnettoeu$ = STR$ (gesnettoeu.wbericht$,"99999999.00")
     ggesnettoeu% = VAL (ggesnettoeu$)
     ggesbruttoeu$ = STR$ (gesbruttoeu.wbericht$,"99999999.00")
     ggesbruttoeu% = VAL (ggesbruttoeu$)
     ggesbrutto$ = STR$ (gesbrutto.wbericht$,"99999999.00")
     ggesbrutto% = VAL (ggesbrutto$)
     IF ggesnettoeu% >= renetvon% AND ggesnettoeu% <= renetbis% THEN 
     ELSE 
       ok% = 0
     END IF 
     IF ggesbruttoeu% >= rebrutvon% AND ggesbruttoeu% <= rebrutbis% THEN 
     ELSE 
       ok% = 0
     END IF 
     IF dat$ LIKE "reingang" THEN 
       gbrutto1$ = STR$ (brutto1.wbericht$,"99999999.00")
       gbrutto1% = VAL (gbrutto1$)
       IF gbrutto1% >= FBruttovon% AND gbrutto1% <= FBruttobis% THEN 
       ELSE 
         ok% = 0
       END IF 
     END IF 
   ELSE 
     ggesnetto$ = STR$ (gesnetto.wbericht$,"99999999.00")
     ggesnetto% = VAL (ggesnetto$)
     ggesbrutto$ = STR$ (gesbrutto.wbericht$,"99999999.00")
     ggesbrutto% = VAL (ggesbrutto$)
     IF ggesnetto% >= renetvon% AND ggesnetto% <= renetbis% THEN 
     ELSE 
       ok% = 0
     END IF 
     IF ggesbrutto% >= rebrutvon% AND ggesbrutto% <= rebrutbis% THEN 
     ELSE 
       ok% = 0
     END IF 
     IF dat$ LIKE "reingang" THEN 
       gbrutto1$ = STR$ (brutto1.wbericht$,"99999999.00")
       gbrutto1% = VAL (gbrutto1$)
       IF gbrutto1% >= FBruttovon% AND gbrutto1% <= FBruttobis% THEN 
       ELSE 
         ok% = 0
       END IF 
     END IF 
   END IF 
   IF OK% THEN 
     IF GCODIE% = - 1 THEN 
       CALL SearchVorbRE(wbericht$)
     END IF 
     leng% = LEN (belegnr)
     IF leng% = 0 THEN 
       bel1$ = "                 "
     ELSE 
       bel1$ = LEFT$ (belegnr,20)
       IF leng% < 20 THEN 
         leng2% = 20 - leng%
         bel1$ = bel1$ + SPACE$ (leng2%)
       END IF 
     END IF 
     leng% = LEN (lrenummer)
     IF leng% = 0 THEN 
       lre$ = "                    "
     ELSE 
       lre$ = LEFT$ (lrenummer,20)
       IF leng% < 20 THEN 
         leng2% = 20 - leng%
         lre$ = lre$ + SPACE$ (leng2%)
       END IF 
     END IF 
     na$ = LEFT$ (nachname,20)
     leng% = LEN (nachname)
     IF leng% < 20 THEN 
       leng2% = 20 - leng%
       na$ = na$ + SPACE$ (leng2%)
     END IF 

     gn$ = STR$ (gesnetto,"99999999.00")
     leng% = LEN (gn$)


     SELECT CASE opt1%
       CASE 1
         REM INDEX belegnr.wbericht$
           IF euromaske% = 1 THEN 
             Keyword$(a%) = bel1$ + " " + Kundennummer + " " + LEFT$ (lre$,10) + " " + LEFT$ (na$,15) + " " + DATE$ (datum,"0d.mm.yyyy") + " " + waehrung + " " + STR$ (gesnettoeu,"99999999.00") + " EUR" + STR$ (gesbruttoeu,"99999999.00") + " "
           ELSE 
             Keyword$(a%) = bel1$ + " " + Kundennummer + " " + LEFT$ (lre$,10) + " " + LEFT$ (na$,15) + " " + DATE$ (datum,"0d.mm.yyyy") + " " + STR$ (gesnetto,"99999999.00") + " " + waehrung + " " + STR$ (gesbrutto,"99999999.00") + " "
           END IF 
           Keyword$(a%) = Keyword$(a%) + " " + erledigt + " " + LTRIM$ (ktoauszugsnr) + " " + DATE$ (gezahltam,"0d.mm.yyyy") + SPACE$ (80) + STR$ (codere,"000000")
       
       CASE 2
         REM INDEX datum.wbericht$
         IF euromaske% = 1 THEN 
           Keyword$(a%) = DATE$ (datum,"0d.mm.yyyy") + " " + Kundennummer + " " + bel1$ + " " + lre$ + " " + na$ + " " + STR$ (gesnettoeu,"99999999.00") + " EUR  " + STR$ (gesbruttoeu,"99999999.00") + " "
         ELSE 
           Keyword$(a%) = DATE$ (datum,"0d.mm.yyyy") + " " + Kundennummer + " " + bel1$ + " " + lre$ + " " + na$ + " " + STR$ (gesnetto,"99999999.00") + " " + waehrung + " " + STR$ (gesbrutto,"99999999.00") + " "
         END IF 
         Keyword$(a%) = Keyword$(a%) + " " + erledigt + " " + LTRIM$ (ktoauszugsnr) + " " + DATE$ (gezahltam,"0d.mm.yyyy") + SPACE$ (80) + STR$ (codere,"000000")
       CASE 3
         REM INDEX na$.wbericht$
         IF euromaske% = 1 THEN 
           Keyword$(a%) = na$ + " " + Kundennummer + " " + DATE$ (datum,"0d.mm.yyyy") + " " + bel1$ + " " + lre$ + " " + STR$ (gesnettoeu,"99999999.00") + " EUR " + STR$ (gesbruttoeu,"99999999.00") + " "
         ELSE 
           Keyword$(a%) = na$ + " " + Kundennummer + " " + DATE$ (datum,"0d.mm.yyyy") + " " + bel1$ + " " + lre$ + " " + STR$ (gesnetto,"99999999.00") + " " + waehrung + " " + STR$ (gesbrutto,"99999999.00") + " "
         END IF 
         Keyword$(a%) = Keyword$(a%) + " " + erledigt + " " + LTRIM$ (ktoauszugsnr) + + " " + DATE$ (gezahltam,"0d.mm.yyyy") + SPACE$ (80) + STR$ (codere,"000000")
       CASE 4
         REM INDEX lre$.wbericht$
         IF euromaske% = 1 THEN 
           Keyword$(a%) = lre$ + " " + Kundennummer + " " + bel1$ + " " + na$ + " " + DATE$ (datum,"0d.mm.yyyy") + " " + STR$ (gesnettoeu,"99999999.00") + " EUR " + STR$ (gesbruttoeu,"99999999.00") + " "
         ELSE 
           Keyword$(a%) = lre$ + " " + Kundennummer + " " + bel1$ + " " + na$ + " " + DATE$ (datum,"0d.mm.yyyy") + " " + STR$ (gesnetto,"99999999.00") + " " + waehrung + " " + STR$ (gesbrutto,"99999999.00") + " "
         END IF 
         Keyword$(a%) = Keyword$(a%) + " " + erledigt + " " + LTRIM$ (ktoauszugsnr) + " " + DATE$ (gezahltam,"0d.mm.yyyy") + SPACE$ (80) + STR$ (codere,"000000")
       CASE 5
         REM INDEX ktoauszugsnr.wbericht$
         IF euromaske% = 1 THEN 
           Keyword$(a%) = LTRIM$ (ktoauszugsnr) + " " + Kundennummer + " " + bel1$ + " " + lre$ + " " + na$ + " " + DATE$ (datum,"0d.mm.yyyy") + " " + STR$ (gesnettoeu,"99999999.00") + " EUR " + STR$ (gesbruttoeu,"99999999.00") + " "
         ELSE 
           Keyword$(a%) = LTRIM$ (ktoauszugsnr) + " " + Kundennummer + " " + bel1$ + " " + lre$ + " " + na$ + " " + DATE$ (datum,"0d.mm.yyyy") + " " + STR$ (gesnetto,"99999999.00") + " " + waehrung + " " + STR$ (gesbrutto,"99999999.00") + " "
         END IF 
         Keyword$(a%) = Keyword$(a%) + " " + erledigt + " " + DATE$ (gezahltam,"0d.mm.yyyy") + SPACE$ (80) + STR$ (codere,"000000")
       CASE 6
         REM INDEX warenart.wbericht$
         IF euromaske% = 1 THEN 
           Keyword$(a%) = LTRIM$ (warenart) + " " + Kundennummer + " " + bel1$ + " " + lre$ + " " + na$ + " " + DATE$ (datum,"0d.mm.yyyy") + " " + STR$ (gesnettoeu,"99999999.00") + " EUR " + STR$ (gesbruttoeu,"99999999.00") + " "
         ELSE 
           Keyword$(a%) = LTRIM$ (warenart) + " " + Kundennummer + " " + bel1$ + " " + lre$ + " " + na$ + " " + DATE$ (datum,"0d.mm.yyyy") + " " + STR$ (gesnetto,"99999999.00") + " " + waehrung + " " + STR$ (gesbrutto,"99999999.00") + " "
         END IF 
         Keyword$(a%) = Keyword$(a%) + " " + erledigt + " " + LTRIM$ (ktoauszugsnr) + " " + DATE$ (gezahltam,"0d.mm.yyyy") + SPACE$ (80) + STR$ (codere,"000000")
       CASE 7
         REM INDEX gezahltAm.wbericht$
         IF euromaske% = 1 THEN 
           Keyword$(a%) = DATE$ (gezahltam,"0d.mm.yyyy") + " " + Kundennummer + " " + bel1$ + " " + lre$ + " " + na$ + " " + DATE$ (datum,"0d.mm.yyyy") + " " + STR$ (gesnettoeu,"99999999.00") + " EUR " + STR$ (gesbruttoeu,"99999999.00") + " "
         ELSE 
           Keyword$(a%) = DATE$ (gezahltam,"0d.mm.yyyy") + " " + Kundennummer + " " + bel1$ + " " + lre$ + " " + na$ + " " + DATE$ (datum,"0d.mm.yyyy") + " " + STR$ (gesnetto,"99999999.00") + " " + waehrung + " " + STR$ (gesbrutto,"99999999.00") + " "
         END IF 
         Keyword$(a%) = Keyword$(a%) + " " + erledigt + " " + LTRIM$ (ktoauszugsnr) + SPACE$ (80) + STR$ (codere,"000000")
       CASE 8
         IF euromaske% = 1 THEN 
           Keyword$(a%) = bel1$ + " " + LEFT$ (lre$,10) + " " + LEFT$ (na$,15) + " " + DATE$ (datum,"0d.mm.yyyy") + " " + STR$ (gesnettoeu,"99999999.00") + " EUR " + STR$ (gesbruttoeu,"99999999.00") + " "
         ELSE 
           Keyword$(a%) = bel1$ + " " + LEFT$ (lre$,10) + " " + LEFT$ (na$,15) + " " + DATE$ (datum,"0d.mm.yyyy") + " " + STR$ (gesnetto,"99999999.00") + " " + waehrung + " " + STR$ (gesbrutto,"99999999.00") + " "
         END IF 
         Keyword$(a%) = Keyword$(a%) + " " + erledigt + " " + LTRIM$ (ktoauszugsnr) + " " + DATE$ (gezahltam,"0d.mm.yyyy") + SPACE$ (80) + STR$ (codere,"000000")
         Keyword$(a%) = Kundennummer + " " + Keyword$(a%)
     END SELECT 
     
     a% = a% + 1
   END IF 
 
   IF opt1% = 2 THEN 
     SELECT PREVIOUS 
   ELSE 
     SELECT NEXT 
   END IF 
 WEND 
 IF a% = 0 THEN 
   CALL Fehler("Es wurde kein Beleg gefunden!","")
   GOTO end150499E
 END IF 
test18012005: 
 ok% = - 1
 SELECT WHERE FILE wbericht$
 SELECT FIRST FILE wbericht$
 form1$ = UCASE$ ( FORM )
 ergRE$ = "n"
 prompt$ = Keyword$(0)
 WHILE ok%
 MOUSE OFF 
 SELECT WHERE FILE dat$
 REM CALL Fehler("","")
 IF GCODIE% = - 1 THEN 
   c$ = "aa"
   REM CALL Fehler("","")
   IF sprung% = 0 THEN 
     req% = CALL ("_SearchShow",c$)
   ELSE 
     req% = CALL ("_SearchReShow",c$)
   END IF 
   GRechSu1% = - 1
   IF wbericht$ LIKE "RAUSGANG" THEN 
     MENU 2,1,1,"letztes Suchergebnis,F7","LastSearch2",""
   ELSE 
     MENU 2,1,1,"letztes Suchergebnis,F7","LastSearch1",""
   END IF 
   MENU ON 
   ON ERROR GOTO rs081220051
   f.suerg.visible = - 1
   f.suerg.enabled = - 1
rs081220051: 
   ON ERROR GOTO ErrorHandler
   ok% = 0
   REM REQUEST c$,"",2
   REM ret% = CALL ("_SearchClose")
   REM CALL Fehler(c$,"")
   IF VAL (c$) <> 0 THEN 
     codere% = VAL (c$)
     Gcodere% = codere%
     req% = 1
     SET STATUS "Rechnung gefunden..."
   ELSE 
     req% = 0
   END IF 
   IF req3% = 2 THEN 
     CALL Fehler("Diese Funktion wird nur innerhalb der Adressmaske unterstÅtzt!","")
   END IF 
 ELSE 




   f.suerg.visible = 0
   f.suerg.enabled = 0
   CREATE DIALOG "KEYWORD",0,0,523,290,"Rechnungssuche","Courier New",8
   ADD DIALOG "KEYWORD",4,0,1,523,270,0,""
   ADD DIALOG "KEYWORD",9,4,12,21,24,2
   ADD DIALOG "KEYWORD",5,31,14,189,19,0,"Bitte wÑhlen Sie die Rechnung aus:"
 
   ADD DIALOG "KEYWORD",7,5,38,515,230,0,2,Keyword$,Auswahl$,prompt$
   ADD DIALOG "KEYWORD",2,2,274,150,10,0,"  Ergebnismenge immer anzeigen","j","n",ergRE$
   ADD DIALOG "KEYWORD",1,177,274,55,15,1,"&OK",1,1
   ADD DIALOG "KEYWORD",1,233,274,55,15,0,"&Abbrechen",0,0
   DIALOG "KEYWORD",req%
   REMOVE DIALOG "KEYWORD"
   IF req% = 0 THEN ok% = 0
   IF req% = 1 THEN 
     IF ergRE$ = "n" THEN ok% = 0
     codere% = VAL ( RIGHT$ (Auswahl$(0),6))
     prompt$ = Auswahl$(0)
   END IF 
 END IF 
 

     IF UCASE$ (form1$) LIKE "RAINGUE*" OR UCASE$ (form1$) LIKE "REINGUE*" AND req% > 0 THEN 
       CALL ReingPos(codere%,wbericht$)
       MOUSE OFF 
       OPEN FORM GPrjForm$ + form1$
       
       SET f = superbase.form
       CALL MNREIN()
       REM 07022000
       
       FILE wbericht$
       INDEX belegnr.wbericht$
       CALL REUpdate(wbericht$)
       SELECT FORM FIRST 
       FORM 
     ELSE 
       fo$ = FORM 
       IF UCASE$ ( FORM ) LIKE "PRJRAUSE" OR UCASE$ ( FORM ) LIKE "RAINGUEE" OR UCASE$ ( FORM ) LIKE "ADRRAUS*" THEN 
         dat$ = "RAUSGANG"
         wbericht$ = "RAUSGANG"
       ELSE 
         dat$ = "REINGANG"
         wbericht$ = "REINGANG"
       END IF 
       codere$ = STR$ (codere%,"000000")
       REM CALL Fehler(codere$,"")
       SELECT WHERE FILE wbericht$
       SELECT FIRST FILE wbericht$ INDEX codere.wbericht$
       SELECT KEY codere% FILE wbericht$ INDEX codere.wbericht$
       SELECT FORM KEY codere% FILE wbericht$ INDEX codere.wbericht$
       REM FORM 
       codere$ = STR$ (codere.wbericht$,"000000")
       REM CALL Fehler(codere$,"")
       REM CALL ReingPos(codere%,wbericht$)
       CALL REUpdate(wbericht$)
       FORM 
       ok% = 0
     END IF 
   END IF 
 WEND 
end150499E: 
 SELECT WHERE FILE wbericht$
 MOUSE ON 
 END SUB 





 ' QuickCode-Erzeugung fÅr Alphanumerische Nummern
 ' =======================================================================
 
FUNCTION NRPack$(NR$)
 tNR$ = ""
 FOR a% = 1 TO LEN (NR$)
   tC$ = UCASE$ ( MID$ (NR$,a%,1))
   SELECT CASE tC$
   CASE "A" TO "Z","0" TO "9"
     tNR$ = tNR$ + tC$
   END SELECT 
 NEXT a%
 NRPack$ = tNR$
 END FUNCTION 


 ' Erzeugung temporÑre Adressdatei ADRTEMP zum Drucken von Projektadressen
 ' wenn codepr%>0, dann Adressen fÅr ein Projekt

SUB GenAdrTemp(codepr%)
  MOUSE OFF 
  CALL DFile(2,"OFFICE\adressen" + _fpw$)
  CALL DFile(2,"OFFICE\adrtemp" + _fpw$)
  CALL DFile(2,"OFFICE\telefon" + _fpw$)
  REMOVE FROM FILE "AdrTemp"
  FILE "PRCONADR"
  INDEX QuickPRKU.prconadr
  SELECT FIRST 
  IF (codepr% > 0) THEN 
    ind$ = STR$ (codepr%,"000000")
    SELECT KEY ind$ FILE "prconadr" INDEX QuickPRKU.prconadr
  END IF 
  i% = 0
  IF codepr% > 0 THEN WHILE NOT EOF ("prconadr") AND codepr.prconadr = codepr%
  IF codepr% < 1 THEN WHILE NOT EOF ("prconadr")
    codeku% = codeku.prconadr
    SELECT KEY codeku% FILE "ADRESSEN" INDEX codeku.adressen
    FILE "Adrtemp"
    BLANK 
    i% = i% + 1
    Kundennummer.adrtemp = Kundennummer.adressen
    name1.adrtemp = nachname.adressen
    name2.adrtemp = vorname.adressen
    name2.adrtemp = Geburtsname.adressen
    ort.adrtemp = ort.adressen
    strasse.adrtemp = stra·e.adressen
    plz.adrtemp = plz.adressen
    codepr.adrtemp = codepr.prconadr
    QuickPRKU.adrtemp = STR$ (codepr.prconadr,"000000") + LEFT$ (Nachname.adressen,50)
    IF EXISTS (codeku%,codeku.telefon) THEN 
      SELECT FIRST FILE "telefon" INDEX codeku.telefon
      SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
      WHILE NOT EOF ("telefon") AND codeku.telefon = codeku%
        telnotiz.adrtemp = telnotiz.adrtemp + LTRIM$ (art.telefon) + "          " + LTRIM$ (nummer.telefon) + CHR$ (13)
        SELECT NEXT FILE "telefon
      WEND 
    END IF 
    SET STATUS STR$ (i%,"999999") + " Adressen fÅr Ausdruck vorbereitet!"
    STORE FILE "adrtemp"
  FILE "prconadr"
  SELECT NEXT FILE "prconadr"
  WEND 
  SET STATUS ""
  MOUSE ON 
 END SUB 


SUB PRADRAkt1()
   CALL PRADRAkt(0)
 END SUB 

 ' Aktualisierung der Projektadressen
SUB PRADRAkt(prj%)
  MOUSE ON 
  CALL DFile(2,"OFFICE\adressen" + _fpw$)
  CALL DFile(2,"OFFICE\telefon" + _fpw$)
  CALL DFile(2,"OFFICE\akquise" + _fpw$)
  CALL DFile(2,"OFFICE\dokument" + _fpw$)
  CALL DFile(3,"MASTER" + _fpw$)
  CALL DFile(3,"RAUSGANG" + _fpw$)
  CALL DFile(3,"REINGANG" + _fpw$)
  CALL DFile(3,"ABZUGANG" + _fpw$)
  REM CALL Fehler("Datenanpassung","Es werden die Projekt-Daten in Adressen, Dokumente, Termine, Master, Rechnungseingang und -ausgang angepasst!")
  FILE "prconadr"
  INDEX codepr.prconadr
     z% = RECCOUNT ("PRCONADR")
     IF RECCOUNT ("PRCONADR") > 0 THEN 
       SELECT FIRST LOCK 
       IF prj% > 0 THEN 
         SELECT KEY prj% LOCK FILE "prconadr" INDEX codepr.prconadr
       END IF 
     ELSE 
       SELECT LAST 
     END IF 
     i% = 0
     IF prj% = 0 THEN WHILE NOT EOF ("prconadr")
     IF prj% > 0 THEN WHILE NOT EOF ("prconadr") AND codepr.prconadr = prj%
       codepr% = codepr.prconadr
       SELECT FIRST FILE "project" INDEX codepr.project
       SELECT KEY codepr% FILE "project" INDEX codepr.project
       name1$ = Name1.project
       name2$ = Name2.project
       STRA$ = Strasse.project
       ort$ = ort.project
       plz$ = plz.project
       i% = i% + 1
       codeku% = codeku.prconadr
       SET STATUS LTRIM$ ( STR$ (i%,",99999999")) + "  DatensÑtze in PRCONADR angepa·t von  " + LTRIM$ ( STR$ (z%,",99999999"))
       IF EXISTS (codeku%,codeku.adressen) THEN 
         SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
         Nachname.prconadr = nachname.adressen
         Vorname.prconadr = Vorname.adressen
         ort.prconadr = Ort.adressen
         strasse.prconadr = stra·e.adressen
         plz.prconadr = plz.adressen
         name1.prconadr = name1$
         name2.prconadr = name2$
         ortprj.prconadr = ort$
         strasseprj.prconadr = stra$
       END IF 
       
       CALL QuickStore("prconadr")
       MOUSE OFF 
     SELECT NEXT LOCK FILE "prconadr"
     WEND 
     SET STATUS ""
   MOUSE OFF 
 END SUB 


SUB ProjektAkt()
  CALL DFile(2,"OFFICE\adressen" + _fpw$)
  CALL DFile(2,"OFFICE\akquise" + _fpw$)
  CALL DFile(2,"OFFICE\dokument" + _fpw$)
  CALL DFile(3,"MASTER" + _fpw$)
  CALL DFile(3,"RAUSGANG" + _fpw$)
  CALL DFile(3,"REINGANG" + _fpw$)
  CALL DFile(3,"ABZUGANG" + _fpw$)
  CALL Fehler("Datenanpassung","Es werden die Projekt-Daten in Adressen, Dokumente, Termine, Master, Rechnungseingang und -ausgang angepasst!")
  CALL PRADRAkt(0)
  FILE "project"
  INDEX codepr.project
  SELECT FIRST 
  j% = 0
  k% = RECCOUNT ("project")
  WHILE NOT EOF ("project")
    MOUSE OFF 
    codepr% = codepr.project
    j% = j% + 1
    datei$ = GAkquiDat$
    IF EXISTS (codepr%,codepr.datei$) THEN CALL ProjektAkt1(codepr%,datei$,J%,k%)


    datei$ = "dokument"
    IF EXISTS (codepr%,codepr.datei$) THEN CALL ProjektAkt1(codepr%,datei$,J%,k%)

    datei$ = "master"
    IF EXISTS (codepr%,codepr.datei$) THEN CALL ProjektAkt1(codepr%,datei$,J%,k%)

    REM datei$ = "abzugang"
    REM CALL ProjektAkt1(codepr%,datei$)

    datei$ = "rausgang"
    IF EXISTS (codepr%,codepr.datei$) THEN CALL ProjektAkt1(codepr%,datei$,J%,k%)

    datei$ = "reingang"
    IF EXISTS (codepr%,codepr.datei$) THEN CALL ProjektAkt1(codepr%,datei$,J%,k%)

    FILE "project"
    SELECT NEXT FILE "project" INDEX codepr.project
  WEND 
  MOUSE ON 
  SET STATUS "Firmenstammdaten"
 END SUB 

SUB ProjektAkt1(codepr%,datei$,J%,k%)
    IF EXISTS (codepr%,codepr.datei$) THEN 
      FILE datei$
      INDEX codepr.datei$
      SELECT FIRST LOCK 
      SELECT KEY codepr% LOCK FILE datei$ INDEX codepr.datei$
      i% = 0
      WHILE NOT EOF (datei$) AND codepr.datei$ = codepr%
        i% = i% + 1
        IF codepr.datei$ = codepr% THEN 
          pr$ = LEFT$ (pr$,120)
          projekt.datei$ = LTRIM$ (Projektnummer.project) + "/" + LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
          STORE FILE datei$
        END IF 
        SET STATUS STR$ (j%,",999999") + " von " + STR$ (k%,",999999") + " in project " + STR$ (i%,",999999") + " " + datei$
        SELECT NEXT LOCK FILE datei$ INDEX codepr.datei$
      WEND 
    END IF 
 END SUB 


 ' WÑhrung zuordnen in Masterdatei
 ' =======================================================================
 ' 17.09.98
SUB MASTWaehrung()
 
   _cuwaehr% = CodeW.master
   cums% = Codems.master
   DIM Waehrung$( RECCOUNT ("waehrung"))
   IF NEW ("master") OR MOD ("master") THEN CALL FStore("master")
     FILE "waehrung"
     DIM Auswahl1$(1)
     INDEX Codew.waehrung
     SELECT FIRST 
     a% = 0
     WHILE NOT EOF ("waehrung")
       Waehrung$(a%) = waehrung.waehrung + " (1Euro = " + STR$ (umrechnung.waehrung,",999999.000000") + " " + waehrung.waehrung + ")" + + SPACE$ (120) + STR$ (CodeW.waehrung,"000000")
       a% = a% + 1
       SELECT NEXT 
     WEND 
     prompt$ = Waehrung$(0)
     FILE "master"
     CREATE DIALOG "PREISLIS",0,0,190,164,title$,"MS Sans Serif",8
      ADD DIALOG "PREISLIS",4,0,0,189,137,0," Auswahl WÑhrung"
      ADD DIALOG "PREISLIS",7,5,14,139,125,2,2,Waehrung$,Auswahl1$,prompt$
      ADD DIALOG "PREISLIS",1,37,145,55,16,1,"&OK",1,1
      ADD DIALOG "PREISLIS",1,107,145,55,16,0,"&Abbrechen",0,0
      DIALOG "PREISLIS",req%
      REMOVE DIALOG "PREISLIS"
      IF req% = 1 THEN 
        _cuwaehr% = VAL ( RIGHT$ (Auswahl1$(0),6))
        SELECT KEY _cuwaehr% FILE "waehrung" INDEX codew.waehrung
        _cuwaehr% = CodeW.waehrung
        IF _cuwaehr% > 0 THEN cuwaehr% = _cuwaehr%
        
        SELECT KEY cums% LOCK FILE "master" INDEX Codems.master
        CodeW.master = _cuwaehr%
        NUMBASE "z99999999.000000"
        euro% = umrechnung.waehrung
        Waehrung.master = waehrung.waehrung
        umrechnung.master = euro%
        CALL FStore("master")
        SELECT FORM KEY cums% FILE "master" INDEX CodeMS.master
      
      SELECT KEY cums% LOCK FILE "master" INDEX codems.master
      IF UCASE$ ( FORM ) = "MASTER" OR UCASE$ ( FORM ) = "MASTPRJ" THEN 
        mastwaehr$ = "WÑhrung: " + waehrung.waehrung
        REM CALL ArtDMEuro()
      ELSE 
        mastwaehr$ = "Erfass.wÑhrung war: " + waehrung.waehrung
        REM CALL ArtEuroDM()
      END IF 
      REM CALL QuickStore("Artikel")
    END IF 
 
 MOUSE ON 
 FORM 
 END SUB 
 
 
 ' WÑhrung zuordnen in RE/RA-Datei
 ' =======================================================================
 ' 17.09.98
SUB RERAWaehrung(dat$)
 
   _cuwaehr% = CodeW .dat$
   codere% = Codere.dat$
   DIM Waehrung$( RECCOUNT ("waehrung"))
   IF NEW (dat$) OR MOD (dat$) THEN CALL FStore(dat$)
     FILE "waehrung"
     DIM Auswahl1$(1)
     INDEX Codew.waehrung
     SELECT FIRST 
     a% = 0
     WHILE NOT EOF ("waehrung")
       IF eurosupport$ = "TRUE" THEN Waehrung$(a%) = waehrung.waehrung + " (1Euro = " + STR$ (umrechnung.waehrung,",999999.000000") + " " + waehrung.waehrung + ")" + SPACE$ (120) + STR$ (CodeW.waehrung,"000000")
       IF eurosupport$ <> "TRUE" THEN Waehrung$(a%) = waehrung.waehrung + SPACE$ (120) + STR$ (CodeW.waehrung,"000000")
       a% = a% + 1
       SELECT NEXT 
     WEND 
     FILE dat$
     CREATE DIALOG "PREISLIS",0,0,190,164,title$,"MS Sans Serif",8
      ADD DIALOG "PREISLIS",4,0,0,189,137,0," Auswahl WÑhrung"
      ADD DIALOG "PREISLIS",7,5,14,139,125,2,2,Waehrung$,Auswahl1$,Waehrung$(0)
      ADD DIALOG "PREISLIS",1,37,145,55,16,1,"&OK",1,1
      ADD DIALOG "PREISLIS",1,107,145,55,16,0,"&Abbrechen",0,0
      DIALOG "PREISLIS",req%
      REMOVE DIALOG "PREISLIS"
      IF req% = 1 THEN 
        _cuwaehr% = VAL ( RIGHT$ (Auswahl1$(0),6))
        SELECT KEY _cuwaehr% FILE "waehrung" INDEX codew.waehrung
        _cuwaehr% = CodeW.waehrung
        IF _cuwaehr% > 0 THEN cuwaehr% = _cuwaehr%
        
        SELECT KEY codere% LOCK FILE dat$ INDEX Codere.dat$
        CodeW.dat$ = _cuwaehr%
        NUMBASE "z99999999.000000"
        euro% = umrechnung.waehrung
        Waehrung.dat$ = waehrung.waehrung
        umrechnung.dat$ = euro%
        CALL FStore(dat$)
        SELECT FORM KEY codere% FILE dat$ INDEX Codere.dat$
      
      SELECT KEY codere% LOCK FILE dat$ INDEX codere.dat$
      IF UCASE$ ( FORM ) = "RAINGANG" OR UCASE$ ( FORM ) = "REINGANG" THEN 
        waehr$ = "WÑhrung: " + waehrung.waehrung
        CALL REDMEuro(dat$)
      ELSE 
        waehr$ = "Erfass.wÑhrung war: " + waehrung.waehrung
        CALL REEuroDM(dat$)
      END IF 
      CALL QuickStore(dat$)
    END IF 
 
 MOUSE ON 
 FORM 
 END SUB 
 
 
 ' Produktgruppe zuordnen
 ' =======================================================================
 
SUB Produkt()
 
   
   knr% = CodeKU.Adressen
   IF NEW ("Adressen") OR MOD ("Adressen") THEN CALL FStore("Adressen")
     FILE "Produkt"
     DIM Auswahl1$(1)
     INDEX freigabeam.produkt
     SELECT FIRST 
     DIM ProdGruppen1a$( RECCOUNT ("Produkt"))
     a% = 0
     WHILE NOT EOF ("produkt")
       ProdGruppen1a$(a%) = LTRIM$ (Produktname.produkt) + "/" + LTRIM$ (Version) + "/" + DATE$ (vom,"0d.mm.yyyy") + "/" + freigegeben + "/" + DATE$ (FreigabeAm,"0d.mm.yyyy") + SPACE$ (120) + STR$ (codeprod,"000000")
       a% = a% + 1
       SELECT NEXT 
     WEND 
     Auswahl$ = ProdGruppen1a$(0)
     Auswahl1$(0) = Auswahl$
     FILE "KProdukt"
     CREATE DIALOG "PREISLIS",0,0,250,264,title$,"MS Sans Serif",8
      ADD DIALOG "PREISLIS",4,0,0,249,243,0," Auswahl Software"
      ADD DIALOG "PREISLIS",7,5,14,239,225,1,2,Prodgruppen1a$,Auswahl1$," "
      ADD DIALOG "PREISLIS",1,60,245,55,16,1,"&OK",1,1
      ADD DIALOG "PREISLIS",1,117,245,55,16,0,"&Abbrechen",0,0
      DIALOG "PREISLIS",req%
      REMOVE DIALOG "PREISLIS"
      IF req% = 1 THEN 
        codeprod% = VAL ( RIGHT$ (Auswahl1$(0),6))
        SELECT KEY codeprod% FILE "Produkt" INDEX codeprod.produkt
       
        BLANK FILE "Kprodukt"
        codekprod.kprodukt = SER ("Kprodukt",1)
        codeprod.kprodukt = codeprod%
        codeku.kprodukt = knr%
        Produktname.kprodukt = Produktname.produkt
        Version.kprodukt = Version.produkt
        vom.kprodukt = vom.produkt

        CALL FStore("KProdukt")
        SELECT FORM KEY knr% FILE "adressen" INDEX Codeku.adressen
      END IF 
 
 MOUSE ON 
 FORM 
 END SUB 
 
SUB LoeKprod()
  IF disabled%("SUPERVIS") THEN END SUB 
  REQUEST "Produkteintrag wirklich lîschen?","",130,req%
  IF req% = 1 THEN 
    cfile$ = FILE 
    knr% = codeku.adressen
    codekprod% = codekprod.kprodukt
    FILE "Kprodukt"
    SELECT KEY codekprod% LOCK FILE "KProdukt" INDEX codekprod.kprodukt
    SELECT REMOVE 
    FILE cfile$
    SELECT FORM KEY knr% FILE "adressen" INDEX Codeku.adressen
    FORM 
  END IF 
 END SUB 

SUB NeuProdukt()
   knr% = codeku.adressen
   cfile$ = FILE 
   FILE "Produkt"
   BLANK FILE "Produkt"
   codeprod.produkt = SER ("produkt",1)
   Produktname.produkt = "Neu"
   zero.produkt = 0
   CALL QuickStore("Produkt")
   FILE cfile$
   SELECT FORM KEY knr% FILE "adressen" INDEX Codeku.adressen
   FORM 
   END SUB 

 REM ********************************************************************************
 REM *                Routinen zum Artikelverleih                                   *
 REM ********************************************************************************

SUB ArtVerleih()
 codeku% = codeku.adressen
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"Serienr" + _fpw$)
 CALL DFile(3,"GRUPPEN" + _fpw$)
 CALL ARTSuchen()
 IF artsucheok% = 1 THEN 

         LAuswahl$ = AdrFound$(0)
         LAuswahl1$(0) = LAuswahl$
         CREATE DIALOG "ADRLISTE",0,0,440,297,"Artikel wÑhlen","MS Sans Serif",8
         REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
         ADD DIALOG "ADRLISTE",7,5,8,428,261,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRLISTE",1,174,274,56,16,1,"&OK",1,1
         ADD DIALOG "ADRLISTE",1,234,274,56,16,0,"&Abbrechen",0,0
         DIALOG "ADRLISTE",req5%
         MOUSE ON 
         REMOVE DIALOG "ADRLISTE"
         LAuswahl$ = LAuswahl1$(0)
         cuart% = VAL ( RIGHT$ (LAuswahl$,6))
         IF cuart% > 0 THEN erg$ = "1"
   MOUSE ON 
 
   FILE "Verleih"
   _cuart% = cuart%
   REM CALL Server("LISTBOXSHOW","")
   MOUSE ON 
   REM erg$ = ServerReply$()
   IF erg$ <> "" THEN 
     REM scode% = QuickCodePOS.SCHEIN
     REM _cuart% = VAL ( MID$ (erg$, LEN (erg$) - 6,6))
     SELECT KEY _cuart% FILE "ARTIKEL" INDEX CodeAR.ARTIKEL
     CALL PrepVerleih(codeku%,_cuart%)
   ELSE 
     CALL Fehler("Es wurde kein Artikel gefunden!","")
   END IF 
 END IF 
 END SUB 

SUB PrepVerleih(codeku%,codear%)
 SELECT KEY codear% FILE "Artikel" INDEX codear.artikel
 bezeichn$ = Bezeichnung.artikel
 IF EXISTS (codear%,codear.serienr) THEN 
   DIM Telefonliste$(1200)
   FILE "Serienr"
   INDEX Codear
   SELECT FIRST 
   SELECT KEY codear%
   a% = 0
   codeser% = 0
   prompt$ = "ZZZZZZ"
   WHILE Codear.serienr = codear% AND NOT EOF ("serienr")
     Telefonliste$(a%) = serienr.serienr + "  verliehen: " + verleih.serienr + SPACE$ (80) + STR$ (CodeSER.serienr,"000000")
     IF Telefonliste$(a%) < prompt$ THEN prompt$ = Telefonliste$(a%)
     a% = a% + 1
     SELECT NEXT 
   WEND 
   TelefonListe$(a%) = ""
   Kunde$ = Bezeichnung.artikel
   CREATE DIALOG "TELEFON",0,0,243,179,"Seriennr.liste","MS Sans Serif",8
   ADD DIALOG "TELEFON",5,5,6,56,10,0,"Liste von:"
   ADD DIALOG "TELEFON",5,62,6,174,9,128,Kunde$
   ADD DIALOG "TELEFON",5,5,22,65,10,0,"Seriennummer:"
   ADD DIALOG "TELEFON",7,5,32,168,137,2,2,Telefonliste$,Auswahl$,prompt$
   ADD DIALOG "TELEFON",1,180,32,55,15,1,"&OK",1,1
   ADD DIALOG "TELEFON",1,180,50,55,15,0,"&Abbrechen",0,0
   MOUSE ON 
   DIALOG "TELEFON",req%
   REMOVE DIALOG "TELEFON"
   IF req% = 1 THEN 
     codeser% = VAL ( RIGHT$ (Auswahl$(0),6))
     SELECT KEY codeser% FILE "serienr" INDEX Codeser.serienr
     serienr$ = serienr.serienr
     Stdzaehler% = Stdzaehler.serienr
     IF verleih.serienr = "j" THEN 
       codevl% = codevl.serienr
       SELECT KEY codevl% FILE "Verleih" INDEX codevl.verleih
       codeku1% = codeku.verleih
       SELECT KEY codeku1% FILE "Adressen" INDEX codeku.adressen
       CALL Fehler("Der Artikel ist noch verliehen an " + Kundennummer.adressen + " " + nachname.adressen,"deshalb kann er nicht verliehen werden!")
       SELECT FORM KEY codeku% FILE "Adressen" INDEX codeku.adressen
       FORM 
       GOTO EndPrepVerl1 
     END IF 
   ELSE 
     CALL Fehler("Es wurde keine Seriennummer ausgewÑhlt!","Artikel kann nicht verliehen werden!")
     GOTO EndPrepVerl1
   END IF 
 ELSE 
   CALL Fehler("Es wurde noch keine Seriennummer fÅr diesen Artikel angelegt! Bitte legen Sie in der Artikelmaske erst eine Seriennummer ein!","Artikel kann nicht verliehen werden!")
   GOTO EndPrepVerl1
 END IF 
 FILE "Verleih"
 BLANK FILE "Verleih"
 codevl% = SER ("Verleih",1)
 codevl.verleih = codevl%
 Inventarnr.verleih = serienr$
 Stdzaehler.verleih = Stdzaehler%
 codear.verleih = Codear%
 codeku.verleih = codeku%
 codeser.verleih = codeser%
 
 Bezeichnung.verleih = Bezeichnung.artikel
 Bezeichnung$ = Bezeichnung.artikel
 Beschreibung.verleih = Beschreibung.artikel
 Artikelnummer.verleih = Artikelnummer.artikel
 Artikelnummer$ = Artikelnummer.artikel
 GebÅhr.verleih = VerleihGebuehr.artikel
 AnzahlTage.verleih = 1
 AnzahlTage% = 1
 Datum.verleih = TODAY 
 Termin.verleih = TODAY + 1
 Datum1$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 Bisdat$ = DATE$ ( TODAY + 1,"0d.mm.yyyy")
 GebÅhr% = VerleihGebuehr.artikel
 Adresse.verleih = Nachname.adressen + CHR$ (13) + CHR$ (10) + vorname.adressen + CHR$ (13) + CHR$ (10) + stra·e.adressen + CHR$ (13) + CHR$ (10) + plz.adressen + " " + ort.adressen
 CALL QuickStore("Verleih")
 SELECT KEY codeser% LOCK FILE "serienr" INDEX Codeser.serienr
 codevl.serienr = codevl%
 Verleih.serienr = "j"
   Workstation.Serienr = Workstation%
   QWoNo.Serienr = STR$ (Workstation%,"000000") + STR$ (Codeser.Serienr,"000000")
   RecStatus.Serienr = "c"
 STORE FILE "Serienr"
 UNLOCK CURRENT FILE "serienr"
FFFFFFFF3: 
     CREATE DIALOG "VERLEIH",0,0,242,199,"Verleih","MS Sans Serif",8
     ADD DIALOG "VERLEIH",5,4,9,56,10,0,"Artikelnummer"
     ADD DIALOG "VERLEIH",5,62,9,174,8,128,Artikelnummer$
     ADD DIALOG "VERLEIH",5,4,22,65,10,0,"Bezeichnung:"
     ADD DIALOG "VERLEIH",5,62,22,174,8,128,Bezeichnung$
     ADD DIALOG "VERLEIH",5,4,35,65,10,0,"StundenzÑhler:"
     ADD DIALOG "VERLEIH",5,62,35,174,8,128,Stdzaehler%
     ADD DIALOG "VERLEIH",6,63,48,120,11,0,0,serienr$,50
     ADD DIALOG "VERLEIH",5,4,48,48,10,0,"Serien-Nr.:"
     ADD DIALOG "VERLEIH",6,62,61,72,11,0,0,Datum1$,10
     ADD DIALOG "VERLEIH",5,4,61,48,9,0,"Verleihdatum:"
     ADD DIALOG "VERLEIH",5,4,74,59,10,0,"Verleih bis:"
     ADD DIALOG "VERLEIH",6,62,74,79,11,0,0,Bisdat$,10
     ADD DIALOG "VERLEIH",5,4,87,59,10,0,"Anz.Tage:"
     ADD DIALOG "VERLEIH",6,62,87,79,11,0,0,AnzahlTage%,3
     ADD DIALOG "VERLEIH",5,4,100,59,10,0,"GebÅhr/Tag:"
     ADD DIALOG "VERLEIH",6,62,100,40,11,0,0,GebÅhr%,10
     ADD DIALOG "VERLEIH",5,4,113,59,10,0,"Baustelle:"
     ADD DIALOG "VERLEIH",6,62,113,150,11,0,0,Baustelle$,50
     ADD DIALOG "VERLEIH",1,100,180,54,14,1,"&OK",1,1
     DIALOG "VERLEIH",req%
     REMOVE DIALOG "VERLEIH"
 
  SELECT KEY codevl% LOCK FILE "Verleih" INDEX codeVL.verleih
  ON ERROR GOTO FFFFFFFF1
  bis% = DAYS (bisdat$)
  von% = DAYS (Datum1$)
  AnzahlTage% = bis% - von%
  ON ERROR GOTO ErrorHandler
  GOTO FFFFFFFF2
FFFFFFFF1: 
  CALL Fehler("Sie haben ein falsches Datum eingegeben!","")
  GOTO FFFFFFFF3
FFFFFFFF2: 
  Datum.verleih = von%
  Termin.verleih = bis%
  AnzahlTage.verleih = AnzahlTage%
  GebÅhr.verleih = GebÅhr%
  Baustelle.verleih = Baustelle$
  CALL QuickStore("Verleih")
EndPrepVerl1: 
 FILE "Adressen"
 SELECT FORM KEY codeku% FILE "Verleih" INDEX codeku.verleih
 FORM 
 END SUB 


SUB ArtRueck()
 codeku% = codeku.verleih
 CALL DFile(3,"Serienr" + _fpw$)
 CALL DFile(3,"Journal" + _fpw$)
   DIM Telefonliste$(1200)
   FILE "Verleih"
   INDEX Codeku
   SELECT FIRST 
   SELECT KEY codeku%
   a% = 0
   codeser% = 0
   prompt$ = "ZZZZZZ"

   WHILE Codeku.verleih = codeku% AND NOT EOF ("verleih")
     Telefonliste$(a%) = Artikelnummer.verleih + " / " + Bezeichnung.verleih + " / " + Inventarnr.verleih + SPACE$ (80) + STR$ (CodeVL.verleih,"000000")
     IF Telefonliste$(a%) < prompt$ THEN prompt$ = Telefonliste$(a%)
     a% = a% + 1
     SELECT NEXT 
   WEND 
   TelefonListe$(a%) = ""
   CREATE DIALOG "TELEFON",0,0,370,179,"Liste verlieherner Artikel","MS Sans Serif",8
   ADD DIALOG "TELEFON",5,5,6,56,10,0,"Liste verlieherner Artikel:"
   REM ADD DIALOG "TELEFON",5,62,6,174,9,128,Kunde$
   ADD DIALOG "TELEFON",5,5,22,65,10,0,"Artikelnummer/Bezeichnung/Seriennummer:"
   ADD DIALOG "TELEFON",7,5,32,300,130,2,2,Telefonliste$,Auswahl$,prompt$
   ADD DIALOG "TELEFON",1,310,32,55,15,1,"&OK",1,1
   ADD DIALOG "TELEFON",1,310,50,55,15,0,"&Abbrechen",0,0
   MOUSE ON 
   DIALOG "TELEFON",req%
   REMOVE DIALOG "TELEFON"
   IF req% = 1 THEN 
     codevl% = VAL ( RIGHT$ (Auswahl$(0),6))
     SELECT KEY codevl% FILE "verleih" INDEX Codevl.verleih
   ELSE 
     GOTO RRRRR2
   END IF 
 codeser% = codeser.verleih
 SELECT KEY codevl% LOCK FILE "Verleih" INDEX codevl.verleih
 SELECT KEY codeser% LOCK FILE "Serienr" INDEX codeser.serienr

 Stdzaehler% = Stdzaehler.verleih
 StdzaehlerNeu% = Stdzaehler.verleih
 codeser% = codeser.verleih
 Bezeichnung$ = Bezeichnung.verleih
 Artikelnummer$ = Artikelnummer.verleih
 serienr$ = Inventarnr.verleih
 
 AnzahlTage% = AnzahlTage.verleih
 Datum1$ = DATE$ (Datum.verleih,"0d.mm.yyyy")
 Bisdat$ = DATE$ (Termin.verleih,"0d.mm.yyyy")
 GebÅhr% = GebÅhr.verleih
 Abgabe$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 mwst% = _mwst%
 GOTO RRRRR1
RRRRR3: 
  CALL Fehler ("Sie haben einen Fehler bei der Datumseingabe oder bei der GebÅhr gemacht!","")
RRRRR1: 
 CREATE DIALOG "VERLEIH",0,0,242,199,"RÅckgabe","MS Sans Serif",8
 ADD DIALOG "VERLEIH",5,4,9,56,10,0,"Artikelnummer"
 ADD DIALOG "VERLEIH",5,62,9,174,8,128,Artikelnummer$
 ADD DIALOG "VERLEIH",5,4,22,65,10,0,"Bezeichnung:"
 ADD DIALOG "VERLEIH",5,62,22,174,8,128,Bezeichnung$
 ADD DIALOG "VERLEIH",5,4,35,65,10,0,"StundenzÑhler:"
 ADD DIALOG "VERLEIH",6,62,35,120,11,0,0,StdzaehlerNeu%,12
 ADD DIALOG "VERLEIH",5,62,48,174,8,128,serienr$
 ADD DIALOG "VERLEIH",5,4,48,48,10,0,"Serien-Nr.:"
 ADD DIALOG "VERLEIH",5,62,61,174,8,128,Datum1$
 ADD DIALOG "VERLEIH",5,4,61,48,9,0,"Verleihdatum:"
 ADD DIALOG "VERLEIH",5,4,74,59,10,0,"Verleih bis:"
 ADD DIALOG "VERLEIH",5,62,74,174,8,128,Bisdat$
 ADD DIALOG "VERLEIH",5,4,87,59,10,0,"Abgegeben am:"
 ADD DIALOG "VERLEIH",6,62,87,72,11,0,0,Abgabe$,10
 REM ADD DIALOG "VERLEIH",5,4,100,59,10,0,"Anz.Tage:"
 REM ADD DIALOG "VERLEIH",6,62,100,79,11,0,0,AnzahlTage%,3
 ADD DIALOG "VERLEIH",5,4,100,59,10,0,"GebÅhr/Tag:"
 ADD DIALOG "VERLEIH",6,62,100,79,11,0,0,GebÅhr%,10
 ADD DIALOG "VERLEIH",5,4,113,59,10,0,"MwSt in %:"
 ADD DIALOG "VERLEIH",6,62,113,79,11,0,0,mwst%,10
 ADD DIALOG "VERLEIH",1,140,180,54,14,1,"&Abbruch",0,0
 ADD DIALOG "VERLEIH",1,70,180,54,14,1,"&OK",1,1
 DIALOG "VERLEIH",req%
 REMOVE DIALOG "VERLEIH"
 IF req% = 1 THEN 
   ON ERROR GOTO RRRRR3
   bis% = DAYS (bisdat$)
   von% = DAYS (Datum1$)
   abgabe% = DAYS (Abgabe$)
   AnzahlTage% = abgabe% - von%
   IF AnzahlTage% = 0 THEN AnzahlTage% = 1
   PNetto% = (AnzahlTage%) * GebÅhr%
   
   PBrutto% = PNetto% * (100 + mwst%) / 100
   mwstdm% = PBrutto% - PNetto%
   gebÅhr$ = STR$ (gebÅhr%,",999999999.00")
   mwstdm$ = STR$ (mwstdm%,",999999999.00")
   mwst$ = STR$ (mwst%,",999999999.00")
   PNetto$ = STR$ (PNetto%,",9999999999.00")
   PBrutto$ = STR$ (PBrutto%,",9999999999.00")
   ON ERROR GOTO ErrorHandler
   CREATE DIALOG "VERLEIH",0,0,242,199,"Bitte alle Angaben prÅfen","MS Sans Serif",8
   ADD DIALOG "VERLEIH",5,4,9,56,10,0,"Artikelnummer"
   ADD DIALOG "VERLEIH",5,62,9,174,8,128,Artikelnummer$
   ADD DIALOG "VERLEIH",5,4,22,65,10,0,"Bezeichnung:"
   ADD DIALOG "VERLEIH",5,62,22,174,8,128,Bezeichnung$
   ADD DIALOG "VERLEIH",5,4,35,65,10,0,"StundenzÑhler:"
   ADD DIALOG "VERLEIH",5,62,35,174,8,128,StdzaehlerNeu%
   ADD DIALOG "VERLEIH",5,62,48,174,8,128,serienr$
   ADD DIALOG "VERLEIH",5,4,48,48,10,0,"Serien-Nr.:"
   ADD DIALOG "VERLEIH",5,62,61,174,8,128,Datum1$
   ADD DIALOG "VERLEIH",5,4,61,48,9,0,"Verleihdatum:"
   ADD DIALOG "VERLEIH",5,4,74,59,10,0,"Verleih bis:"
   ADD DIALOG "VERLEIH",5,62,74,174,8,128,Bisdat$
   ADD DIALOG "VERLEIH",5,4,87,59,10,0,"Abgegeben am:"
   ADD DIALOG "VERLEIH",5,62,87,174,8,128,Abgabe$
   ADD DIALOG "VERLEIH",5,4,100,59,10,0,"Anz.Tage:"
   ADD DIALOG "VERLEIH",5,62,100,174,8,128,AnzahlTage%
   ADD DIALOG "VERLEIH",5,4,113,59,10,0,"GebÅhr/Tag:"
   ADD DIALOG "VERLEIH",5,62,113,174,8,128,GebÅhr$
   ADD DIALOG "VERLEIH",5,4,126,59,10,0,"MwSt in %:"
   ADD DIALOG "VERLEIH",5,62,126,174,8,128,mwst$
   ADD DIALOG "VERLEIH",5,4,139,59,10,0,"MwSt in DM:"
   ADD DIALOG "VERLEIH",5,62,139,174,8,128,mwstdm$
   ADD DIALOG "VERLEIH",5,4,152,59,10,0,"Preis Netto:"
   ADD DIALOG "VERLEIH",5,62,152,174,8,128,PNetto$
   ADD DIALOG "VERLEIH",5,4,165,59,10,0,"Preis Brutto:"
   ADD DIALOG "VERLEIH",5,62,165,174,8,128,PBrutto$

   ADD DIALOG "VERLEIH",1,140,180,54,14,1,"&Abbruch",0,0
   ADD DIALOG "VERLEIH",1,70,180,54,14,1,"&Alles richtig!",1,1
   DIALOG "VERLEIH",req%
   REMOVE DIALOG "VERLEIH"
   IF req% <> 1 THEN GOTO RRRRR1




   BLANK FILE "Journal"
   codejo% = SER ("Journal",1)
   codejo.journal = codejo%
   CodeMA.journal = vcodema%
   codeku.journal = codeku.verleih
   codear.journal = codear.verleih
   codeser.journal = codeser%
   Inventarnr.journal = Inventarnr.verleih
   Artikelnummer.journal = Artikelnummer.verleih
   GebÅhr.journal = GebÅhr%
   Bezeichnung.journal = Bezeichnung.verleih
   Beschreibung.journal = Beschreibung.verleih
   Adresse.journal = Adresse.verleih
   Stdzaehler.journal = StdzaehlerNeu%
   StdzaehlerAlt.journal = Stdzaehler%
   datum.journal = von%
   Termin.journal = bis%
   Abgabe.journal = abgabe%
   AnzahlTage.journal = abgabe% - von%
   Baustelle.journal = Baustelle.verleih
   mwstproz.journal = mwst%
   mwstdm.journal = mwstdm%
   PreisNetto.Journal = PNetto%
   PreisBrutto.journal = PBrutto%
   Workstation.Journal = Workstation%
   QWoNo.Journal = STR$ (Workstation%,"000000") + STR$ (Codejo.Journal,"000000")
   RecStatus.Journal = "c"
   STORE FILE "Journal"
   UNLOCK CURRENT FILE "journal"
   SELECT KEY codeser% LOCK FILE "serienr" INDEX codeser.serienr
   verleih.serienr = "n"
   codevl.serienr = 0
   StdZaehler.serienr = StdzaehlerNeu%
   Workstation.serienr = Workstation%
   QWoNo.serienr = STR$ (Workstation%,"000000") + STR$ (Codeser.serienr,"000000")
   RecStatus.serienr = "c"
   STORE FILE "Serienr"
   REMOVE FROM FILE "Verleih" WHERE codevl.verleih = codevl%
   CALL ArtJDruck()
   REQUEST "Wollen Sie den Beleg auf den Drucker ausgeben?","",130,req%
   IF req% = 1 THEN 
     CALL ArtJDruck()
   END IF 
 ELSE 
   
   GOTO RRRRR2
 END IF 



RRRRR2: 
 SELECT FORM KEY codeku% FILE "Verleih" INDEX codeku.verleih
 FORM 
 END SUB 

SUB ArtVStorno()
 REQUEST "Wollen Sie den Verleih stornieren?","",130,req%
 IF req% = 1 THEN 
   CALL DFile(3,"Serienr" + _fpw$)
   codeku% = Codeku.adressen
   codevl% = codevl.verleih
   codeser% = codeser.verleih
   SELECT KEY codeser% LOCK FILE "serienr" INDEX codeser.serienr
   verleih.serienr = "n"
   codevl.serienr = 0
   Workstation.serienr = Workstation%
   QWoNo.serienr = STR$ (Workstation%,"000000") + STR$ (Codeser.serienr,"000000")
   RecStatus.serienr = "c"
   STORE FILE "Serienr"
   UNLOCK CURRENT FILE "serienr"
   REMOVE FROM FILE "Verleih" WHERE codevl.verleih = codevl%
   SELECT FORM KEY codeku% FILE "Verleih" INDEX codeku.verleih
 END IF 
 
 FORM 
 END SUB 

SUB ArtVDruck()
 codevl% = Codevl.verleih
 CALL PRep("DRVERL")
 Ueberschr$ = "Verleihschein"
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY ON 
 SET QUERY LOCK ON 
 
 SELECT ;
     WHERE codevl.verleih = codevl%
     ORDER Datum.VERLEIH
     TO ASK 
     END SELECT 
 END SUB 

SUB ArtJDruck()
   codejo% = codejo.journal
   CALL PRep("DRJOUR")
     Ueberschr$ = "RÅckgabeschein und Rechnung"
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY ON 
 SET QUERY LOCK ON 
 SELECT ;
     WHERE codejo.journal = codejo%
     ORDER Abgabe.JOURNAL
     TO ASK 
     END SELECT 
 END SUB 

SUB JournalDru()
   codear% = codear.artikel
 REQUEST "Wollen Sie nur die RÅckgabescheine zum aktuellen Artikel drucken?","",130,req%
   CALL PRep("DRJOUR")
   IF req% = 1 THEN 
     Ueberschr$ = "alle RÅckgabescheine zum Artikel: " + Artikelnummer.artikel
   ELSE 
     Ueberschr$ = "alle RÅckgabescheine"
   END IF 
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY ON 
 SET QUERY LOCK ON 
 IF req% <> 1 THEN 
   SELECT ;
   ORDER Abgabe.JOURNAL
     TO ASK 
 ELSE 
   SELECT ;
   WHERE codear.journal = codear%
   ORDER Abgabe.JOURNAL
     TO ASK 
   END SELECT 
 END IF 
 FILE "Artikel"
 SELECT FORM KEY codear% FILE "Artikel" INDEX codear.artikel
 FORM 
 END SUB 


SUB VerleihDru()
 codear% = codear.artikel
 REQUEST "Wollen Sie nur die Verleihscheine zum aktuellen Artikel drucken?","",130,req%
  CALL PRep("DRVERL")
  IF req% = 1 THEN 
    Ueberschr$ = "alle Verleihscheine zum Artikel: " + Artikelnummer.artikel
  ELSE 
    Ueberschr$ = "alle Verleihscheine"
  END IF 
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY ON 
 SET QUERY LOCK ON 
 IF req% <> 1 THEN 
   SELECT ;
     ORDER Datum.VERLEIH
     TO ASK 
   END SELECT 
 ELSE 
     SELECT ;
     WHERE codear.VERLEIH = codear%
     ORDER Datum.VERLEIH
     TO ASK 
     END SELECT 
 END IF 
 FILE "Artikel"
 SELECT FORM KEY codear% FILE "Artikel" INDEX codear.artikel
 FORM 
 END SUB 


SUB REPRJZuord()
 codere% = codere.reingang
 SELECT KEY codere% LOCK FILE "reingang" INDEX codere.reingang
 nachfolger% = PRJSuche%(0)
 IF nachfolger% <> 0 THEN 
   SELECT KEY nachfolger% FILE "project" INDEX codepr.project
   codepr.reingang = nachfolger%
   Projekt.reingang = LTRIM$ (Projektnummer.project) + "/" + LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
   CALL QuickStore("reingang")
 ELSE 
   codepr.reingang = 0
   Projekt.reingang = "<ohne Zuordnung>"
   CALL QuickStore("reingang")
 END IF 
 CALL REUpdate("reingang")
 END SUB 


SUB REPRJZuord1()
 codere% = codere.rausgang
 SELECT KEY codere% LOCK FILE "rausgang" INDEX codere.rausgang
 nachfolger% = PRJSuche%(0)
 IF nachfolger% <> 0 THEN 
   SELECT KEY nachfolger% FILE "project" INDEX codepr.project
   codepr.rausgang = nachfolger%
   Projekt.rausgang = LTRIM$ (Projektnummer.project) + "/" + LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
   CALL QuickStore("rausgang")
 ELSE 
   codepr.rausgang = 0
   Projekt.rausgang = "<ohne Zuordnung>"
   CALL QuickStore("rausgang")
 END IF 
 CALL REUpdate("rausgang")
 END SUB 

SUB DelProjRei()
 codere% = codere.reingang
 SELECT KEY codere% LOCK FILE "Reingang" INDEX codere.reingang
 codepr.reingang = 0
 Projekt.reingang = ""
   Workstation.reingang = Workstation%
   QWoNo.reingang = STR$ (Workstation%,"000000") + STR$ (Codere.reingang,"000000")
   RecStatus.reingang = "c"
 STORE FILE "reingang"
 UNLOCK CURRENT FILE "reingang"
 END SUB 

SUB DelProjMa()
 codems% = codems.master
 CALL DFile(3,"RAUSGANG" + _fpw$)
 
 SELECT KEY codems% LOCK FILE "master" INDEX codems.master
 codepr.master = 0
 Projekt.master = ""
 CALL QuickStore("master")
 IF EXISTS (codems%,codems.rausgang) THEN 
   SELECT KEY codems% LOCK FILE "rausgang" INDEX codems.rausgang
   codepr.rausgang = 0
   projekt.rausgang = ""
   Workstation.rausgang = Workstation%
   QWoNo.rausgang = STR$ (Workstation%,"000000") + STR$ (Codere.rausgang,"000000")
   RecStatus.rausgang = "c"
   STORE FILE "rausgang"
   UNLOCK CURRENT FILE "rausgang"
 END IF 
 IF codeaq.master > 0 THEN 
   codeaq% = codeaq.master
   IF EXISTS (codeaq%,codeaq.GAkquiDat$) THEN 
     SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
     codepr.GAkquiDat$ = 0
     projekt.GAkquiDat$ = ""
     CALL QuickStore(GAkquiDat$)
   END IF 
 END IF 
 IF codems% > 1 AND EXISTS (codems%,codems.GAkquiDat$) THEN 
   ddd$ = FILE 
   FILE GAkquiDat$
   INDEX codems.GAkquiDat$
   SELECT FIRST 
   SELECT KEY codems% LOCK FILE GAkquiDat$ INDEX codems.GAkquiDat$
   REM CALL Fehler("Test","")
   WHILE codems.GAkquiDat$ = codems%
     c1% = codems.GAkquiDat$
     codems.GAkquiDat$ = codems.master
     Projekt.GAkquiDat$ = Projekt.master
     codepr.GAkquiDat$ = codepr.master
     CALL QuickStore(GAkquiDat$)
     SELECT NEXT LOCK FILE GAkquiDat$ INDEX codems.GAkquiDat$
     IF EOF (GAkquiDat$) THEN codems% = - 1
   WEND 
   FILE ddd$
 END IF 
 
 END SUB 
 
 ' Tagesjournal drucken
 ' ======================================================================
 
SUB Journal()
 REM dialog umsatz von bis und Mitarbeiterauswahl
 DIM Auswahl1$(1)
 rec% = RECCOUNT ("supervis")
 DIM ProdGruppen1$(rec%)
 FOR i% = 0 TO rec%
    ProdGruppen1$(i%) = ""
 NEXT i%
 FILE "supervis"
 INDEX Name.supervis
 SELECT FIRST 
 WHILE NOT EOF ("supervis")
    ProdGruppen1$(a%) = nachname.supervis + ", " + vorname.supervis + SPACE$ (120) + STR$ (codema.supervis,"000000")
    a% = a% + 1
   SELECT NEXT 
 WEND 
 von$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 bis$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 GOTO mresu2010981
mresu2010982: 
 CALL Fehler ("Die getÑtigten Datumsangaben stimmen nicht!","Bitte prÅfen!")
mresu2010981: 
 CREATE DIALOG "Tarife",0,0,158,230,"Tarife","MS Sans Serif",8
 ADD DIALOG "Tarife",4,0,0,158,200,0,""
 ADD DIALOG "Tarife",9,5,9,20,21,2
 ADD DIALOG "Tarife",5,33,9,116,11,0,"Bitte geben Sie den Zeitraum von/bis"
 ADD DIALOG "Tarife",5,33,17,115,11,0,"ein fÅr den Sie den öberblick"
 ADD DIALOG "Tarife",5,33,25,115,11,0,"wÅnschen!"
 ADD DIALOG "Tarife",5,33,33,130,11,0,"Wenn Sie einen Mitarbeiter wÑhlen,"
 ADD DIALOG "Tarife",5,33,41,130,11,0,"wird nur er in der Liste berÅcksichtigt"
 ADD DIALOG "Tarife",5,28,55,12,11,2,"von"
 ADD DIALOG "Tarife",5,28,70,12,11,2,"bis"
 ADD DIALOG "Tarife",6,42,55,71,13,0,0,von$,10
 ADD DIALOG "Tarife",6,42,70,71,13,0,0,bis$,10
 ADD DIALOG "Tarife",7,5,98,144,100,2,2,Prodgruppen1$,Auswahl1$," "
 ADD DIALOG "Tarife",1,24,210,54,14,0,"&OK",1,1
 ADD DIALOG "Tarife",1,82,210,54,14,0,"&Abbrechen",0,0
 DIALOG "Tarife",req%
 REMOVE DIALOG "Tarife"
 
   MOUSE ON 
 IF req% = 0 THEN END SUB 
 ON ERROR GOTO mresu2010982
 MOUSE OFF 
 lie$ = ""
 IF Auswahl1$(0) <> "" THEN 
   lie$ = Auswahl1$(0)
   codema% = VAL ( RIGHT$ (lie$,6))
 ELSE 
   codema% = 0
 END IF 
 ueb$ = "Journal fÅr den Zeitraum:"
 IF von$ <> "" THEN 
   IF von$ <> "" THEN 
     IF DateOK%(von$) THEN 
     ELSE 
       CALL Fehler("Datum VON ist falsch!","Bitte prÅfen!")
       GOTO mresu2010981
     END IF 
   END IF 
   ueb$ = ueb$ + von$
 END IF 
 IF bis$ <> "" THEN 
   IF DateOK%(bis$) THEN 
   ELSE 
     CALL Fehler("Datum BIS ist falsch!","Bitte prÅfen!")
     GOTO mresu2010981
   END IF 
   ueb$ = ueb$ + " bis: " + bis$
 END IF 
 IF bis$ = "" THEN 
   bis$ = DATE$ ( TODAY + 50000,"0d.mm.yyyy")
 END IF 
 IF von$ <> "" THEN 
   IF DateOK%(von$) THEN 
   ELSE 
     CALL Fehler("Datum VON ist falsch!","Bitte prÅfen!")
     GOTO mresu2010981
   END IF 
 END IF 
 IF bis$ <> "" THEN 
   IF DateOK%(bis$) THEN 
   ELSE 
     CALL Fehler("Datum BIS ist falsch!","Bitte prÅfen!")
     GOTO mresu2010981
   END IF 
 END IF 
 IF lie$ <> "" THEN 
   ueb$ = ueb$ + " fÅr den Mitarbiter/in " + LTRIM$ ( LEFT$ (lie$,110))
 END IF 
 ON ERROR GOTO ErrorHandler
 
 CALL PRep("JOURNAL")
 DATUM1$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 ueber$ = ueb$
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 GROUP Datum.JOURNAL,PreisBrutto.JOURNAL AS "Gesamt%"
 AFTER GROUP Datum.JOURNAL
     SET REPORT PAGE "F_Datum.JOUR002"
     OUTPUT REPORT PAGE 
 END GROUP 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 ON ERROR GOTO ErrJournal
 IF codema% = 0 THEN 
   SELECT ;
   WHERE CodeMA.JOURNAL = CodeMA.SUPERVIS AND Datum.JOURNAL >= DAYS (von$) AND Datum.JOURNAL <= DAYS (bis$)
   ORDER REPORT Nachname.SUPERVIS
   TO ASK 
   END SELECT 
 ELSE 
   SELECT ;
   WHERE CodeMA.JOURNAL = CodeMA.SUPERVIS AND CodeMA.JOURNAL = codema% AND Datum.JOURNAL >= DAYS (von$) AND Datum.JOURNAL <= DAYS (bis$)
   ORDER REPORT Nachname.SUPERVIS
   TO ASK 
   END SELECT 
 END IF 
ErrJournal: 
 IF GTest% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
 END SUB 
 
 
 ' Fehlliste drucken
 ' ======================================================================
  
SUB Fehlliste()
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 REQUEST "Sollen nur die ÅberfÑlligen Artikel angezeigt werden?->JA","Sollen alle verliehenen Artikel angezeigt werden?->NEIN",130,req1%
 CALL PRep("FEHLLIST")
 HEADING 
   SET REPORT PAGE "H_PAGE"
   OUTPUT REPORT PAGE 
 END HEADING 
 AFTER SELECT 
   SET REPORT PAGE "F_SELECT"
   OUTPUT REPORT PAGE 
 END SELECT 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 ON ERROR GOTO ErrFEHLLIST
 IF req1% = 1 THEN 
 ueberschr$ = "Artikelfehlliste der ÅberfÑlligen Medien vom : " + DATE$ ( TODAY ,"dd.mm.yy")
 SELECT ;
   WHERE CodeKU.VERLEIH = CodeKU.ADRESSEN AND termin.verleih < TODAY 
   ORDER REPORT Termin.VERLEIH
   TO ASK 
   END SELECT 
 ELSE 
   ueberschr$ = "Artikelfehlliste aller verliehenen Medien vom : " + DATE$ ( TODAY ,"dd.mm.yy")
 SELECT ;
   WHERE CodeKU.VERLEIH = CodeKU.ADRESSEN
   ORDER REPORT Termin.VERLEIH
   TO ASK 
   END SELECT 
 END IF 
ErrFEHLLIST: 
 IF GTest% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
 END SUB 
 
 
 
SUB MAHNPRJZuord()
 codems% = codems.mahnung
 SELECT KEY codems% LOCK FILE "mahnung" INDEX codems.mahnung
 nachfolger% = PRJSuche%(0)
 REM CALL Fehler("","")
 IF nachfolger% <> 0 THEN 
   SELECT KEY nachfolger% FILE "project" INDEX codepr.project
   codepr.mahnung = nachfolger%
   Projekt.mahnung = LTRIM$ (Projektnummer.project) + "/" + LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
   CALL QuickStore("mahnung")
 END IF 
 projre$ = projekt.mahnung
 END SUB 



 

SUB SichTeil(teil$,euromas%)
 dat$ = teil$
   codems% = codems.teil$
   codere% = codere.teil$
   codeteil% = codeteil.teil$
   IF euromaske% = 0 THEN 
     IF gesbrutto.teil$ <> 0 THEN gesbruttoeu.teil$ = gesbrutto.teil$ / umrechnung.teil$ ELSE gesbruttoeu.teil$ = 0
   ELSE 
     IF gesbruttoeu.teil$ <> 0 THEN gesbrutto.teil$ = gesbruttoeu.teil$ * umrechnung.teil$ ELSE gesbrutto.teil$ = 0
   END IF 
   CALL QuickStore(teil$)
   IF erledigt.teil$ = "J" THEN 
     IF rerlauto% <> 1 THEN 
       REQUEST "Mîchten Sie das Zahldatum als Datum der ersten Zahlung und die ","Kontoauszugsnummer in das Rechnungsbuch Åbernehmen?",130,reqabc%
     ELSE 
       reqabc% = 1
     END IF 
     bez% = gezahltam.teil$
     kto$ = Ktoauszugsnr.teil$
   END IF 
   IF teil$ LIKE "teilrein" THEN 
     quell$ = "reingang"
   ELSE 
     quell$ = "rausgang"
   END IF 
   FILE quell$
   INDEX codere.quell$
   SELECT FIRST 
   SELECT KEY codere% FILE quell$ INDEX codere.quell$
   umr% = umrechnung.quell$
ST080220001: 
   FILE dat$
   INDEX codere.dat$
   SELECT FIRST 
   SELECT KEY codere% FILE dat$ INDEX codere.dat$
   sumz% = 0
   sumzeu% = 0
   mahn% = 0
   mahneu% = 0
   i% = 0
   gezmitskonto$ = "N"
   WHILE NOT EOF (dat$) AND codere% = codere.dat$
     IF codere% = codere.dat$ THEN 
       i% = i% + 1
       IF gezmitskonto.dat$ LIKE "J" THEN gezmitskonto$ = "J"
       IF euromaske% = 0 THEN 
         IF erledigt.dat$ = "J" THEN 
           sumz% = sumz% + gesbrutto.dat$
           IF mahnjn.dat$ LIKE "j" THEN 
             mahn% = mahn% + gesbrutto.dat$
           END IF 
         END IF 
       ELSE 
         IF erledigt.dat$ = "J" THEN 
           sumzeu% = sumzeu% + gesbruttoeu.dat$
           IF mahnjn.dat$ LIKE "j" THEN mahneu% = mahneu% + gesbruttoeu.dat$
         END IF 
       END IF 
     END IF 
     SELECT NEXT 
   WEND 
   IF euromaske% = 0 THEN 
     IF sumz% <> 0 THEN sumzeu% = sumz% / umr% ELSE sumzEu% = 0
     IF mahn% <> 0 THEN mahneu% = mahn% / umr% ELSE mahnEu% = 0
   ELSE 
     IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr% ELSE sumz% = 0
     IF mahneu% <> 0 THEN mahn% = mahneu% * umr% ELSE mahn% = 0
   END IF 
   FILE quell$
   INDEX codere.quell$
   SELECT FIRST 
   SELECT KEY codere% LOCK FILE quell$ INDEX codere.quell$
   SummeTeil.quell$ = sumz%
   SummeTeileu.quell$ = sumzeu%
   SummeMahn.quell$ = mahn%
   SummeMahnEu.quell$ = mahneu%
   sumz$ = TRIM$ ( LEFT$ ( STR$ (sumz%,",999999999.00")))
   sumzeu$ = TRIM$ ( LEFT$ ( STR$ (sumzeu%,",999999999.00")))
   sumz% = VAL (sumz$)
   sumzeu% = VAL (sumzeu$)
   mahn$ = TRIM$ ( LEFT$ ( STR$ (mahn%,",999999999.00")))
   mahneu$ = TRIM$ ( LEFT$ ( STR$ (mahneu%,",999999999.00")))
   mahn% = VAL (mahn$)
   mahneu% = VAL (mahneu$)
   gesBR$ = TRIM$ ( LEFT$ ( STR$ (GesBrutto.quell$ + mahn%,",999999999.00")))
   gesBREu$ = TRIM$ ( LEFT$ ( STR$ (GesBruttoEu.quell$ + mahneu%,",999999999.00")))
   IF UCASE$ (gezmitskonto$) LIKE "J" THEN 
     gesBR$ = TRIM$ ( LEFT$ ( STR$ (GesBrutto.quell$ + gesMahn.quell$ - skonto.quell$,",999999999.00")))
     gesBREu$ = TRIM$ ( LEFT$ ( STR$ (GesBruttoEu.quell$ + gesMahnEU.quell$ - skontoeu.quell$,",999999999.00")))
   END IF 
   gesBR% = VAL (gesBR$)
   GesBREu% = VAL (gesBREU$)
   REM CALL Fehler("","")
   IF sumz% >= gesBR% OR sumzeu% >= GesBrEU% THEN 
     IF sumz% > GesBr% OR sumzEu% > GesBrEU% THEN 
       CALL Fehler ("ACHTUNG die Summe der ZahlungseingÑnge ist grî·er als der geforderte Rechnungsbetrag!","BITTE PRöFEN!")
     END IF 
     IF rerlauto% <> 1 THEN 
       REQUEST "Die Summe der ZahlungseingÑnge deckt die Rechnungssumme!","Soll der Gesamtvorgang als erledigt gekennzeichnet werden?",130,req%
     ELSE 
       req% = 1
     END IF 
     IF req% = 1 THEN 
       erledigt.quell$ = "J"
       REM 16062002
     ELSE 
       erledigt.quell$ = "N"
     END IF 
   END IF 
   IF i% = 1 OR (gezahltam.quell$ < 1 AND ktoauszugsnr.quell$ = "") THEN 
     SELECT KEY codeteil% FILE dat$ INDEX codeteil.dat$
     IF gezahltam.dat$ > 0 AND erledigt.dat$ = "J" THEN 
       IF gezahltam.dat$ > 0 AND erledigt.dat$ = "J" AND ktoauszugsnr.dat$ <> "" THEN 
         REM 16062002
         REM CALL Fehler("","")
         gezahltam.quell$ = gezahltam.dat$
         ktoauszugsnr.quell$ = ktoauszugsnr.dat$
         KasseJN.quell$ = KasseJN.dat$
         gezmitskonto.quell$ = gezmitskonto.dat$
       ELSE 
         IF KasseJN.dat$ <> "J" THEN 
           IF ktoauszugsnr.dat$ = "" THEN 
             IF rerlauto% <> 1 THEN 
               REQUEST "Teilvorgang wurde als erledigt gekennzeichnet aber keine ","Kontoauszugsnummer vergeben! Ist das richtig?",130,req%
             ELSE 
               req% = 1
             END IF 
             IF req% = 1 THEN 
               gezahltam.quell$ = gezahltam.dat$
               ktoauszugsnr.quell$ = "<keine Angaben>"
               gezmitskonto.quell$ = gezmitskonto.dat$
             END IF 
           ELSE 
             gezahltam.quell$ = gezahltam.dat$
             ktoauszugsnr.quell$ = ktoauszugsnr.dat$
             gezmitskonto.quell$ = gezmitskonto.dat$
           END IF 
         ELSE 
           gezahltam.quell$ = gezahltam.dat$
           KasseJN.quell$ = "J"
           gezmitskonto.quell$ = gezmitskonto.dat$
           IF ktoauszugsnr.dat$ <> "" THEN ktoauszugsnr.quell$ = ktoauszugsnr.dat$
           IF ktoauszugsnr.dat$ = "" THEN ktoauszugsnr.quell$ = "Kasseneingang"
         END IF 
       END IF 
     ELSE 
       erledigt.quell$ = "N"
     END IF 
   END IF 
   IF reqabc% = 1 THEN 
     gezahltam.quell$ = bez%
     Ktoauszugsnr.quell$ = kto$
   END IF 
   CALL QuickStore(quell$)
   IF EXISTS (codems%,codems.master) AND quell$ LIKE "rausgang" THEN 
     SELECT KEY codems% LOCK FILE "master" INDEX codems.master
     SummeTeil.master = sumz%
     SummeTeileu.master = sumzeu%
     SummeMahn.master = mahn%
     SummeMahneu.master = mahneu%
     erledigt.master = erledigt.rausgang
     erledigtDatum.master = gezahltam.rausgang
     CALL QuickStore("Master")
     
   END IF 
   IF EXISTS (codere%,codere.master) AND quell$ LIKE "rausgang" THEN 
     SELECT KEY codere% FILE "master" INDEX codere.master
     IF codeaq.master > 0 THEN 
       SELECT KEY codeaq.master LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       IF erledigt.quell$ = "J" THEN 
         erledigt_Termin.GAkquiDat$ = "j"
       ELSE 
         erledigt_Termin.GAkquiDat$ = "n"
       END IF 
       CALL QuickStore(GAkquiDat$)
     END IF 
   END IF 
   REM 18032010
   IF EXISTS (codere%,codere.mahnung) AND quell$ LIKE "rausgang" THEN 
     SELECT KEY codere% LOCK FILE "mahnung" INDEX codere.mahnung
     IF erledigt.quell$ = "J" THEN 
       statusmahn.mahnung = "J"
       DatMahnErledigt.mahnung = TODAY 
       STORE FILE "mahnung"
     END IF 
     IF codeaq.mahnung > 0 THEN 
       SELECT KEY codeaq.mahnung LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       IF erledigt.quell$ = "J" THEN 
         erledigt_Termin.GAkquiDat$ = "j"
       ELSE 
         erledigt_Termin.GAkquiDat$ = "n"
       END IF 
       CALL QuickStore(GAkquiDat$)
     END IF 
   END IF 
   FILE dat$
   SELECT FORM KEY codeteil% FILE dat$ INDEX codeteil.dat$
   FORM 
 END SUB 


SUB SichTeilMS(teil$,euromas1%)
 dat$ = teil$
   codems% = codems.teil$
   codere% = codere.teil$
   codeteil% = codeteil.teil$
   IF euromaske% = 0 THEN 
     IF gesbrutto.teil$ <> 0 THEN gesbruttoeu.teil$ = gesbrutto.teil$ / umrechnung.teil$ ELSE gesbruttoeu.teil$ = 0
   ELSE 
     IF gesbruttoeu.teil$ <> 0 THEN gesbrutto.teil$ = gesbruttoeu.teil$ * umrechnung.teil$ ELSE gesbrutto.teil$ = 0
   END IF 
   CALL QuickStore(teil$)
   IF codere% > 0 AND EXISTS (codere%,codere.rausgang) AND erledigt.teil$ = "J" THEN 
     REQUEST "Mîchten Sie das Zahldatum und die Kontoauszugsnummer","in das Rechnungsbuch Åbernehmen?",130,reqabc%
     bez% = gezahltam.teil$
     kto$ = Ktoauszugsnr.teil$
   END IF 
   IF teil$ LIKE "teilrein" THEN 
     quell$ = "reingang"
   ELSE 
     quell$ = "master"
   END IF 
   FILE quell$
   INDEX codere.quell$
   SELECT FIRST 
   SELECT KEY codems% FILE quell$ INDEX codems.quell$
   codere% = codere.quell$
   umr% = umrechnung.quell$
   FILE dat$
   INDEX codems.dat$
   SELECT FIRST 
   SELECT KEY codems% FILE dat$ INDEX codems.dat$
   sumz% = 0
   sumzeu% = 0
   mahn% = 0
   mahneu% = 0
   i% = 0
   WHILE NOT EOF (dat$) AND codems% = codems.dat$
     i% = i% + 1
     IF codems% = codems.dat$ THEN 
       IF euromaske% = 0 THEN 
         IF erledigt.dat$ = "J" THEN 
           sumz% = sumz% + gesbrutto.dat$
           IF mahnjn.teilraus LIKE "j" THEN mahn% = mahn% + gesbrutto.teilraus
         END IF 
       ELSE 
         IF erledigt.dat$ = "J" THEN 
           sumzeu% = sumzeu% + gesbruttoeu.dat$
           IF mahnjn.teilraus LIKE "j" THEN mahneu% = mahneu% + gesbruttoeu.teilraus
         END IF 
       END IF 
     END IF 
     SELECT NEXT 
   WEND 
   IF euromaske% = 0 THEN 
     IF sumz% <> 0 THEN sumzeu% = sumz% / umr% ELSE sumzEu% = 0
     IF mahn% <> 0 THEN mahneu% = mahn% / umr% ELSE mahnEu% = 0
   ELSE 
     IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr% ELSE sumz% = 0
     IF mahneu% <> 0 THEN mahn% = mahneu% * umr% ELSE mahn% = 0
   END IF 
   FILE quell$
   INDEX codems.quell$
   SELECT FIRST 
   SELECT KEY codems% LOCK FILE quell$ INDEX codems.quell$
   sumz$ = TRIM$ ( LEFT$ ( STR$ (sumz%,",999999999.00")))
   sumzeu$ = TRIM$ ( LEFT$ ( STR$ (sumzeu%,",999999999.00")))
   sumz% = VAL (sumz$)
   sumzeu% = VAL (sumzeu$)
   gesBR$ = TRIM$ ( LEFT$ ( STR$ (GesBrutto.quell$ + mahn%,",999999999.00")))
   gesBREu$ = TRIM$ ( LEFT$ ( STR$ (GesBruttoEu.quell$ + mahneu%,",999999999.00")))
   IF UCASE$ (gezmitskonto$) = "J" THEN 
     gesBR$ = TRIM$ ( LEFT$ ( STR$ (GesBrutto.quell$ + gesMahn.quell$ - skonto.quell$,",999999999.00")))
     gesBREu$ = TRIM$ ( LEFT$ ( STR$ (GesBruttoEu.quell$ + gesMahnEU.quell$ - skontoeu.quell$,",999999999.00")))
   END IF 
   gesBR% = VAL (gesBR$)
   GesBREu% = VAL (gesBREU$)
   SummeTeil.quell$ = sumz%
   SummeTeileu.quell$ = sumzeu%
   SummeMahn.quell$ = mahn%
   SummeMahnEu.quell$ = mahneu%
   CALL QuickStore(quell$)

   IF EXISTS (codems%,codems.quell$) AND codere% > 0 AND quell$ LIKE "rausgang" THEN 
     SELECT KEY codere% LOCK FILE quell$ INDEX codere.quell$
     SummeTeil.rausgang = sumz%
     SummeTeileu.rausgang = sumzeu%
     SummeMahn.rausgang = mahn%
     SummeMahnEu.rausgang = mahneu%
     REM *********************************************************************
     IF sumz% >= gesBR% OR sumzeu% >= GesBrEU% THEN 
       IF sumz% > GesBr% OR sumzEu% > GesBrEU% THEN 
         CALL Fehler ("ACHTUNG die Summe der ZahlungseingÑnge ist grî·er als der geforderte Rechnungsbetrag!","BITTE PRöFEN!")
       END IF 
       REQUEST "Die Summe der ZahlungseingÑnge deckt die Rechnungssumme!","Soll der Gesamtvorgang als erledigt gekennzeichnet werden?",130,req%
       IF req% = 1 THEN 
         erledigt.rausgang = "J"
       ELSE 
         erledigt.rausgang = "N"
       END IF 
     END IF 
     IF i% = 1 OR (gezahltam.rausgang < 1 AND ktoauszugsnr.rausgang = "") THEN 
       SELECT KEY codeteil% FILE "teilraus" INDEX codeteil.teilraus
       IF gezahltam.teilraus > 0 AND erledigt.teilraus = "J" THEN 
         IF gezahltam.teilraus > 0 AND erledigt.teilraus = "J" AND ktoauszugsnr.teilraus <> "" THEN 
           gezahltam.rausgang = gezahltam.teilraus
           ktoauszugsnr.rausgang = ktoauszugsnr.teilraus
           KasseJN.rausgang = KasseJN.teilraus
           gezmitskonto.rausgang = gezmitskonto.teilraus
         ELSE 
           IF KasseJN.teilraus <> "J" THEN 
             IF ktoauszugsnr.teilraus = "" THEN 
               REQUEST "Teilvorgang wurde als erledigt gekennzeichnet aber keine ","Kontoauszugsnummer vergeben! Ist das richtig?",130,req%
               IF req% = 1 THEN 
                 gezahltam.rausgang = gezahltam.teilraus
                 ktoauszugsnr.rausgang = "<keine Angaben>"
                 gezmitskonto.rausgang = gezmitskonto.teilraus
               END IF 
             ELSE 
               gezahltam.quell$ = gezahltam.teilraus
               ktoauszugsnr.rausgang = ktoauszugsnr.teilraus
               gezmitskonto.rausgang = gezmitskonto.teilraus
             END IF 
           ELSE 
             gezahltam.rausgang = gezahltam.teilraus
             KasseJN.rausgang = "J"
             gezmitskonto.rausgang = gezmitskonto.teilraus
             IF ktoauszugsnr.teilraus <> "" THEN ktoauszugsnr.rausgang = ktoauszugsnr.teilraus
             IF ktoauszugsnr.teilraus = "" THEN ktoauszugsnr.rausgang = "Kasseneingang"
           END IF 
         END IF 
       ELSE 
         erledigt.rausgang = "N"
       END IF 
     END IF 
     IF reqabc% = 1 THEN 
       gezahltam.rausgang = bez%
       Ktoauszugsnr.rausgang = kto$
     END IF 

     REM *********************************************************************
     CALL QuickStore("rausgang")
   END IF 
   IF codere% > 0 AND EXISTS (codere%,codere.master) AND quell$ LIKE "rausgang" THEN 
     SELECT KEY codere% FILE "master" INDEX codere.master
     IF codeaq.master > 0 THEN 
       SELECT KEY codeaq.master LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       IF erledigt.rausgang = "J" THEN 
         erledigt_Termin.GAkquiDat$ = "j"
       ELSE 
         erledigt_Termin.GAkquiDat$ = "n"
       END IF 
       CALL QuickStore(GAkquiDat$)
     END IF 
   END IF 
   IF codere% > 0 AND EXISTS (codere%,codere.mahnung) AND quell$ LIKE "rausgang" THEN 
     REM 16062002
     IF erledigt.rausgang LIKE "J" THEN 
       SELECT KEY codere% LOCK FILE "mahnung" INDEX codere.mahnung
       StatusMahn.mahnung = "J"
       DatMahnErledigt.mahnung = TODAY 
       CALL QuickStore("Mahnung")
     END IF 
     SELECT KEY codere% FILE "mahnung" INDEX codere.mahnung
     IF codeaq.mahnung > 0 THEN 
       SELECT KEY codeaq.mahnung LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       IF erledigt.rausgang = "J" THEN 
         erledigt_Termin.GAkquiDat$ = "j"
       ELSE 
         erledigt_Termin.GAkquiDat$ = "n"
       END IF 
       CALL QuickStore(GAkquiDat$)
     END IF 
   END IF 
   FILE dat$
   SELECT FORM KEY codeteil% FILE dat$ INDEX codeteil.dat$
   FORM 
 END SUB 
 
 
SUB SumTeil(codems%,codere%,dat$,dat1$)
  ok% = 1
  FILE dat1$
  SELECT FIRST 
  SELECT KEY codere% FILE dat1$ INDEX codere.dat1$
  umr% = umrechnung.dat1$
  FILE dat$
  INDEX codems.dat$
  SELECT FIRST 
  IF codems% > 0 THEN 
    IF EXISTS (codems%,codems.dat$) THEN 
      SELECT KEY codems% LOCK FILE dat$ INDEX codems.dat$
    ELSE 
      SELECT KEY codems% FILE dat$ INDEX codems.dat$
    END IF 
    sumz% = 0
    sumzeu% = 0
    mahn% = 0
    mahneu% = 0
    WHILE NOT EOF (dat$) AND codems.dat$ = codems%
      IF euromaske% = 0 THEN 
        IF erledigt.dat$ = "J" THEN 
          sumz% = sumz% + GesBrutto.dat$
          IF UCASE$ (mahnjn.dat$) = "J" THEN 
            mahn% = mahn% + gesbrutto.dat$
          END IF 
        END IF 
      ELSE 
        IF erledigt.dat$ = "J" THEN 
          sumzeu% = sumzeu% + GesBruttoeu.dat$
          IF UCASE$ (mahnjn.dat$) = "J" THEN 
            mahneu% = mahneu% + gesbruttoeu.dat$
          END IF 
        END IF 
      END IF 
      IF codere% > 0 THEN codere.dat$ = codere%
      IF codems% > 0 THEN codems.dat$ = codems%
      Workstation.dat$ = Workstation%
      QWoNo.dat$ = STR$ (Workstation%,"000000") + STR$ (Codere.dat$,"000000")
      RecStatus.dat$ = "c"
      STORE FILE dat$
      UNLOCK CURRENT FILE dat$
      SELECT NEXT LOCK 
    WEND 
  ELSE 
    FILE dat1$
    SELECT FIRST 
    SELECT KEY codere% FILE dat1$ INDEX codere.dat1$
    umr% = umrechnung.dat1$
    FILE dat$
    INDEX codere.dat$
    SELECT FIRST 
    IF EXISTS (codere%,codere.dat$) THEN 
      SELECT KEY codere% LOCK FILE dat$ INDEX codere.dat$
    ELSE 
      SELECT KEY codere% FILE dat$ INDEX codere.dat$
    END IF 
    sumz% = 0
    sumzeu% = 0
    mahn% = 0
    mahneu% = 0
    WHILE NOT EOF (dat$) AND codere.dat$ = codere%
      IF euromaske% = 0 THEN 
        IF erledigt.dat$ = "J" THEN 
          sumz% = sumz% + GesBrutto.dat$
          IF UCASE$ (mahnjn.dat$) = "J" THEN 
            mahn% = mahn% + gesbrutto.dat$
            IF mahn% = sumz% THEN 
              mahn% = 0
              mahneu% = 0
            END IF 
          END IF 
        END IF 
      ELSE 
        IF erledigt.dat$ = "J" THEN 
          sumzeu% = sumzeu% + GesBruttoeu.dat$
          IF UCASE$ (mahnjn.dat$) = "J" THEN 
            mahneu% = mahneu% + gesbruttoeu.dat$
            IF mahneu% = sumzeu% THEN 
              mahneu% = 0
              mahn% = 0
            END IF 
          END IF 
        END IF 
      END IF 
      IF codere% > 0 THEN codere.dat$ = codere%
      IF codems% > 0 THEN codems.dat$ = codems%
      Workstation.dat$ = Workstation%
      QWoNo.dat$ = STR$ (Workstation%,"000000") + STR$ (Codere.dat$,"000000")
      RecStatus.dat$ = "c"
      STORE FILE dat$
      UNLOCK CURRENT FILE dat$
      SELECT NEXT LOCK 
    WEND 

  END IF 
  IF euromaske% = 0 THEN 
    IF sumz% <> 0 THEN sumzeu% = sumz% / umr% ELSE sumzeu% = 0
    IF mahn% <> 0 THEN mahneu% = mahn% / umr% ELSE mahnEu% = 0
  ELSE 
    IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr% ELSE sumz% = 0
    IF mahneu% <> 0 THEN mahn% = mahneu% * umr% ELSE mahn% = 0
  END IF 
  FILE dat$
  SELECT FIRST 
  SELECT KEY codere% LOCK FILE dat1$ INDEX codere.dat1$
  codere.dat1$ = codere%
  SummeTeil.dat1$ = sumz%
  SummeTeilEu.dat1$ = sumzeu%
  SummeMahn.dat1$ = mahn%
  SummeMahnEu.dat1$ = mahneu%
  
  Workstation.dat1$ = Workstation%
  QWoNo.dat1$ = STR$ (Workstation%,"000000") + STR$ (Codere.dat1$,"000000")
  RecStatus.dat1$ = "c"
  STORE FILE dat1$
  UNLOCK CURRENT FILE dat1$
  UNLOCK FILE dat1$
  UNLOCK CURRENT FILE dat$
  UNLOCK FILE dat$
 END SUB 
 
SUB SumTeilR(codems%,codere%,dat$,dat1$)
  ok% = 1
  FILE dat1$
  SELECT FIRST 
  SELECT KEY codere% FILE dat1$ INDEX codere.dat1$
  umr% = umrechnung.dat1$
  FILE dat$
  INDEX codere.dat$
  SELECT FIRST 
  IF EXISTS (codere%,codere.dat$) THEN 
    SELECT KEY codere% LOCK FILE dat$ INDEX codere.dat$
  ELSE 
    SELECT KEY codere% FILE dat$ INDEX codere.dat$
  END IF 
  sumz% = 0
  sumzeu% = 0
  mahn% = 0
  mahneu% = 0
  WHILE NOT EOF (dat$) AND codere.dat$ = codere%
    IF euromaske% = 0 THEN 
      IF erledigt.dat$ = "J" THEN 
        sumz% = sumz% + GesBrutto.dat$
        IF UCASE$ (mahnjn.dat$) = "J" THEN 
          mahn% = mahn% + gesbrutto.dat$
        END IF 
      END IF 
    ELSE 
      IF erledigt.dat$ = "J" THEN 
        sumzeu% = sumzeu% + GesBruttoeu.dat$
        IF UCASE$ (mahnjn.dat$) = "J" THEN 
          mahneu% = mahneu% + gesbruttoeu.dat$
        END IF 
       END IF 
    END IF 
    IF codere% > 0 THEN codere.dat$ = codere%
    IF codems% > 0 THEN 
      codems.dat$ = codems%
    END IF 
    Workstation.dat$ = Workstation%
    QWoNo.dat$ = STR$ (Workstation%,"000000") + STR$ (Codere.dat$,"000000")
    RecStatus.dat$ = "c"
    STORE FILE dat$
    UNLOCK CURRENT FILE dat$
    SELECT NEXT LOCK 
  WEND 
  IF euromaske% = 0 THEN 
    IF sumz% <> 0 THEN sumzeu% = sumz% / umr% ELSE sumzeu% = 0
    IF mahn% <> 0 THEN mahneu% = mahn% / umr% ELSE mahnEu% = 0
  ELSE 
    IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr% ELSE sumz% = 0
    IF mahneu% <> 0 THEN mahn% = mahneu% * umr% ELSE mahn% = 0
  END IF 
  FILE dat1$
  SELECT FIRST 
  SELECT KEY codere% LOCK FILE dat1$ INDEX codere.dat1$
  SummeTeil.dat1$ = sumz%
  SummeTeilEu.dat1$ = sumzeu%
  SummeMahn.dat1$ = mahn%
  SummeMahnEu.dat1$ = mahneu%
    Workstation.dat1$ = Workstation%
    QWoNo.dat1$ = STR$ (Workstation%,"000000") + STR$ (Codere.dat1$,"000000")
    RecStatus.dat1$ = "c"
  STORE FILE dat1$
  UNLOCK CURRENT FILE dat1$
  UNLOCK FILE dat1$
  UNLOCK CURRENT FILE dat$
  UNLOCK FILE dat$
 END SUB 
 


 '***********************************************************************************
 'KProdukt des aktuellen Kunden anzeigen
 '***********************************************************************************
 
SUB KProdukt()
 MOUSE OFF 
 
 FILE "KPRODUKT"
 INDEX codeku.KPRODUKT
 SELECT FIRST 
 knr% = codeku.adressen
 IF ( MOD ("adressen") OR NEW ("adressen")) THEN CALL QuickStore("adressen")
 _formend% = 0
 MOUSE ON 
 WHILE _formend% = 0
   IF UCASE$ ( FORM ) <> "KPRODUKT" THEN 
     SET HEADING title$ + " - Kundenprodukt"
     OPEN FORM GOFFForm$ + "KPRODUKT"
     SET f = Superbase.Form
     CALL KProduktIntro()
     CALL MNKProdukt()
     SET STATUS "Kundenprodukt"
   END IF 
   MENU ON 
   MOUSE ON 
   KUVorgsub% = 0
   REM IF RECCOUNT ("zeingan1") > 0 THEN CALL ZEINUpdate1()
   CALL ClearKBDBuffer()
   FORM 
   IF FORMsub% <> 99 THEN WAIT KEY OR MENU OR MOUSE 
   REM ** Tastaturabfrage
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL PSelectPrev()
   CASE CrsRight%,PgDn%
     CALL PSelectNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE FORMsub%
   CASE 1
     _codeprod% = 0
     CALL APRODPSuchen()
     IF _codeprod% > 0 THEN 
        SELECT KEY _codeprod% FILE "Produkt" INDEX codeprod.produkt
       
        BLANK FILE "Kprodukt"
        codekprod.kprodukt = SER ("Kprodukt",1)
        codeprod.kprodukt = codeprod%
        codeku.kprodukt = knr%
        Produktname.kprodukt = Produktname.produkt
        Version.kprodukt = Version.produkt
        vom.kprodukt = vom.produkt
        CALL FStore("KProdukt")
        SELECT FORM KEY knr% FILE "adressen" INDEX Codeku.adressen
        FORM 
     END IF 
     FORMsub% = 0
   CASE 2
     REM Produktkatalog bearbeiten
     CALL ProduktN()
     FORMsub% = 0
   CASE 3
   CASE 99
   MENU OFF 
   END SELECT 
   MENU ON 
 WEND 
 IF ( MOD ("KPRODUKT") OR NEW ("KPRODUKT")) THEN CALL FStore("KPRODUKT")
 REM 110397 CALL ZEINbuchung1(0)
 _formend% = 0
 END SUB 
  
 
SUB KProduktIntro()
 MOUSE OFF 
 FILE "KProdukt"
 INDEX CodeKU.KProdukt
    SELECT FORM KEY knr% FILE "Adressen" INDEX CodeKU.Adressen
   SELECT FORM KEY knr% FILE "KProdukt" INDEX CodeKU.KProdukt
 FORM 
 END SUB 
 
SUB MNKProdukt()
 MENU CLEAR 
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
 
 '***********************************************************************************
 'alle Produkte anzeigen
 '***********************************************************************************
 
SUB AlleProdukte()
 MOUSE OFF 
 knr% = codeku.adressen
 FILE "PRODUKT"
 INDEX codeprod.PRODUKT
 SELECT FIRST 
 IF ( MOD ("adressen") OR NEW ("adressen")) THEN CALL QuickStore("adressen")
 _formend% = 0
 MOUSE ON 
 WHILE _formend% = 0
   IF UCASE$ ( FORM ) <> "PRODUKT" THEN 
     SET HEADING title$ + " - Produkte"
     OPEN FORM GOFFForm$ + "PRODUKT"
     SET f = Superbase.Form
     CALL AllProdIntro()
     CALL MNKAllProd()
     SET STATUS "Produkte"
   END IF 
   MENU ON 
   MOUSE ON 
   KUVorgsub% = 0
   REM IF RECCOUNT ("zeingan1") > 0 THEN CALL ZEINUpdate1()
   CALL ClearKBDBuffer()
   FORM 
   IF FORMsub% <> 99 THEN WAIT KEY OR MENU OR MOUSE 
   REM ** Tastaturabfrage
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL PSelectPrev()
   CASE CrsRight%,PgDn%
     CALL PSelectNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE FORMsub%
   CASE 1
   CASE 2
   CASE 3
   CASE 99
   MENU OFF 
   END SELECT 
   MENU ON 
 WEND 
 IF ( MOD ("PRODUKT") OR NEW ("PRODUKT")) THEN CALL FStore("PRODUKT")
 REM 110397 CALL ZEINbuchung1(0)
 _formend% = 0
 END SUB 
  
 
SUB AllProdIntro()
 MOUSE OFF 
 FILE "Produkt"
 INDEX CodeProd.Produkt
 SELECT FIRST 
 FORM 
 END SUB 
 
SUB MNKAllProd()
 MENU CLEAR 
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
 
 
 '***********************************************************************************
 'alle verliehenen Produkte anzeigen
 '***********************************************************************************
 
SUB Verleih1()
 MOUSE OFF 
 
 knr% = codeku.adressen
 FILE "VERLEIH"
 INDEX codeku.VERLEIH
 SELECT FIRST 
 IF ( MOD ("adressen") OR NEW ("adressen")) THEN CALL QuickStore("adressen")
 _formend% = 0
 MOUSE ON 
 WHILE _formend% = 0
   IF UCASE$ ( FORM ) <> "VERLEIH1" THEN 
     SET HEADING title$ + " - VERLEIH"
     OPEN FORM GPrjForm$ + "VERLEIH1"
     SET f = Superbase.Form
     CALL VERLEIHIntro()
     CALL MNVERLEIH()
     SET STATUS "VERLEIH"
   END IF 
   MENU ON 
   MOUSE ON 
   FORMsub% = 0
   REM IF RECCOUNT ("zeingan1") > 0 THEN CALL ZEINUpdate1()
   CALL ClearKBDBuffer()
   FORM 
   IF FORMsub% <> 99 THEN WAIT KEY OR MENU OR MOUSE 
   REM ** Tastaturabfrage
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL PSelectPrev()
   CASE CrsRight%,PgDn%
     CALL PSelectNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE FORMsub%
   CASE 1
   CASE 2
   CASE 3
   CASE 99
   MENU OFF 
   END SELECT 
   MENU ON 
 WEND 
 IF ( MOD ("VERLEIH") OR NEW ("VERLEIH")) THEN CALL FStore("VERLEIH")
 REM 110397 CALL ZEINbuchung1(0)
 _formend% = 0
 END SUB 
  
 
SUB VERLEIHIntro()
 MOUSE OFF 
 FILE "VERLEIH"
 INDEX CodeKU.VERLEIH
    SELECT FORM KEY knr% FILE "Adressen" INDEX CodeKU.Adressen
   SELECT FORM KEY knr% FILE "VERLEIH" INDEX CodeKU.VERLEIH
 SELECT FIRST 
 FORM 
 END SUB 
 
SUB MNVERLEIH()
 MENU CLEAR 
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
 
 
 
 '***********************************************************************************
 ' Teilraus - Teilzahlungen von Master aus
 '***********************************************************************************
 
SUB FTeilraus()
 MOUSE OFF 
 fromForm$ = UCASE$ ( FORM )
 IF fromForm$ LIKE "MAHNUNG*" THEN 
   cums% = codems.mahnung
 ELSE 
   cums% = codems.master
 END IF 
 FILE "TEILRAUS"
 INDEX codems.TEILRAUS
 SELECT FIRST 
 IF fromForm$ LIKE "MAHNUNG*" THEN 
   IF ( MOD ("MAHNUNG") OR NEW ("MAHNUNG")) THEN CALL QuickStore("MAHNUNG")
 ELSE 
   IF ( MOD ("MASTER") OR NEW ("MASTER")) THEN CALL QuickStore("MASTER")
 END IF 
 _formend% = 0
 maske$ = "TEILRAUS"
 IF UCASE$ (mastform$) = "EUR" OR fromform$ LIKE "MAHNUNGE" OR fromform$ LIKE "MASTPRJE" OR fromform$ LIKE "MASTERE" THEN 
   maske$ = "TEILRAUE"
   euromaske% = 1
 ELSE 
   maske$ = "TEILRAUS"
   euromaske% = 0
 END IF 
 IF ProjectJN$ = "TRUE" THEN 
   IF UCASE$ (mastform$) = "EUR" OR fromform$ LIKE "MAHNUNGE" OR fromform$ LIKE "MASTPRJE" OR fromform$ LIKE "MASTERE" THEN 
     maske$ = "TEILRAUE"
     euromaske% = 1
   ELSE 
     maske$ = "TEILRAUS"
     euromaske% = 0
   END IF 
 END IF 
 MOUSE ON 
 ss% = 1
 WHILE _formend% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     SET HEADING title$ + " - Teilzahlungen"
     OPEN FORM GPrjForm$ + maske$ PAGE ss%
     SELECT FORM KEY cums% FILE "master" INDEX codems.master
     SET f = Superbase.Form
     CALL FTeilrausIntro()
     CALL MNFTeilraus()
     SET STATUS "Teilzahlungen"
   END IF 
   MENU ON 
   MOUSE ON 
   FORMsub% = 0
   REM IF RECCOUNT ("zeingan1") > 0 THEN CALL ZEINUpdate1()
   CALL ClearKBDBuffer()
   FORM ss%
   IF FORMsub% <> 99 THEN WAIT KEY OR MENU OR MOUSE 
   REM ** Tastaturabfrage
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL PSelectPrev()
   CASE CrsRight%,PgDn%
     CALL PSelectNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE FORMsub%
   CASE 13
     ss% = PAGE 
     IF UCASE$ (maske$) = "TEILRAUS" THEN 
       maske$ = "TEILRAUE"
       euromaske% = 1
     ELSE 
       maske$ = "TEILRAUS"
       euromaske% = 0
     END IF 
   CASE 17
     REM einzelne Teilzahlung
       codeteil% = codeteil.teilraus
       FORM 2
       SELECT FORM KEY codeteil% FILE "Teilraus" INDEX codeteil.teilraus
       waehr$ = waehrung.teilraus
       FORM 
       ss% = 2
   CASE 18
     REM neue Teilzahlung
     codere% = codere.master
     codems% = codems.master
     okrau% = 0
     IF codere% > 0 THEN 
       IF EXISTS (codere%,codere.rausgang) THEN 
         FILE "rausgang"
         INDEX codere.rausgang
         SELECT FIRST 
         okrau% = 1
       END IF 
     END IF 
     BLANK FILE "Teilraus"
     codeteil% = SER ("Teilraus",1)
     codeteil.teilraus = codeteil%
     codere.teilraus = codere.master
     codems.teilraus = codems.master
     codeku.teilraus = codeku.master
     nachname.teilraus = nachname.master
     vorname.teilraus = vorname.master
     ort.teilraus = ort.master
     plz.teilraus = plz.master
     stra·e.teilraus = stra·e.master
     gezahltam.teilraus = TODAY 
     GesNetto.teilraus = 0
     GesBrutto.teilraus = 0
     PreisNetto.teilraus = 0
     PreisBrutto.teilraus = 0
     PreisNettoEu.teilraus = 0
     PreisBruttoEu.teilraus = 0
     GesNettoTeil.teilraus = 0
     GesBruttoTeil.teilraus = 0
     GesNettoTeilEu.teilraus = 0
     GesBruttoTeilEu.teilraus = 0
     GesNettoEu.teilraus = 0
     GesBruttoEu.teilraus = 0
     mwst.teilraus = 0
     mwstdm.teilraus = 0
     GutschriftJN.teilraus = "n"
     Ktoauszugsnr.teilraus = ""
     KasseJN.teilraus = "n"
     gezmitskonto.teilraus = "n"
     Notiz.teilraus = ""
     erledigt.teilraus = "n"
     zero.teilraus = 0
     lrenummer.teilraus = nummer.master
     datum.teilraus = datum.master
     codew.teilraus = codew.master
     waehrung.teilraus = waehrung.master
     umrechnung.teilraus = umrechnung.master
     waehr$ = waehrung.teilraus
     CALL QuickStore("teilraus")
     SELECT FORM KEY codeteil% FILE "teilraus" INDEX codeteil.teilraus
     FORM 2
   CASE 19
     REM Teilz. bearb
     f.bearbt2.enabled = 0
     f.sicht2.enabled = - 1
     f.abbrucht2.enabled = - 1
     f.abbrucht2.visible = - 1
     f.loet2.enabled = 0
     f.eurot2.enabled = 0
     f.zurt2.enabled = 0
     IF euromaske% = 0 THEN 
       ENTER Gesbrutto.teilraus,0
     ELSE 
       ENTER GesbruttoEu.teilraus,0
     END IF 
     f.bearbt2.enabled = - 1
     f.sicht2.enabled = 0
     f.abbrucht2.enabled = 0
     f.abbrucht2.visible = 0
     f.loet2.enabled = - 1
     f.eurot2.enabled = - 1
     f.zurt2.enabled = - 1
   CASE 20
     REM Abbruch Teilz
     ENTER END 
     f.bearbt2.enabled = - 1
     f.sicht2.enabled = 0
     f.abbrucht2.enabled = 0
     f.abbrucht2.visible = 0
     f.loet2.enabled = - 1
     f.eurot2.enabled = - 1
     f.zurt2.enabled = - 1
   CASE 21
     REM Lîschen Teilzahl
     qu$ = "teilraus"
     quell$ = "rausgang"
     codere% = codere.qu$
     codeteil% = codeteil.qu$
     codems% = codems.qu$
     SELECT KEY codeteil% LOCK FILE qu$ INDEX codeteil.qu$
     REQUEST "Datensatz wirklich lîschen?","",130,req%
     IF req% = 1 THEN 
       FILE "teilraus"
       codere% = codere.qu$
       SELECT REMOVE 
     END IF 
 
     FILE "master"
     INDEX codems.master
     SELECT FIRST 
     SELECT KEY codems% FILE "master" INDEX codems.master
     umr% = umrechnung.master
 
     FILE qu$
     INDEX codems.qu$
     SELECT FIRST 
     SELECT KEY codems% FILE qu$ INDEX codems.qu$
     sumz% = 0
     sumzeu% = 0
     mahn% = 0
     mahneu% = 0
     ok% = 0
     WHILE NOT EOF (qu$) AND codems% = codems.qu$
       IF codems% = codems.qu$ THEN 
         ok% = 1
         IF euromaske% = 0 THEN 
           IF erledigt.qu$ = "J" THEN 
             sumz% = sumz% + gesbrutto.qu$
             IF UCASE$ (mahnjn.teilraus) = "J" THEN mahn% = mahn% + gesbrutto.teilraus
           END IF 
         ELSE 
           IF erledigt.qu$ = "J" THEN 
             sumzeu% = sumzeu% + gesbruttoeu.qu$
             IF UCASE$ (mahnjn.teilraus) = "J" THEN mahneu% = mahneu% + gesbruttoeu.teilraus
           END IF 
         END IF 
       END IF 
       SELECT NEXT 
     WEND 
     IF euromaske% = 0 THEN 
       IF sumz% <> 0 THEN sumzeu% = sumz% / umr% ELSE sumzEu% = 0
       IF mahn% <> 0 THEN mahneu% = mahn% / umr% ELSE mahnEu% = 0
     ELSE 
       IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr% ELSE sumz% = 0
       IF mahneu% <> 0 THEN mahn% = mahneu% * umr% ELSE mahn% = 0
     END IF 
 
     FILE "master"
     INDEX codems.master
     SELECT FIRST 
     SELECT KEY codems% LOCK FILE "master" INDEX codems.master
     SELECT KEY codems% FILE "rausgang" INDEX codems.rausgang
     SummeTeil.master = sumz%
     SummeTeileu.master = sumzeu%
     SummeMahn.master = mahn%
     SummeMahneu.master = mahneu%
     CALL QuickStore("master")
 
     IF EXISTS (codems.master,codems.teilraus) THEN 
       rest$ = STR$ (GesBrutto.quell$ + gesMahn.quell$ - SummeTeil.quell$,",9999999.00")
       restEu$ = STR$ (GesBruttoEu.quell$ + gesMahnEu.quell$ - SummeTeilEU.quell$,",9999999.00")
     ELSE 
       rest$ = STR$ (GesBrutto.quell$ + gesMahn.quell$ - SummeTeil.quell$,",9999999.00")
       restEu$ = STR$ (GesBruttoEu.quell$ + gesMahnEu.quell$ - SummeTeilEU.quell$,",9999999.00")
     END IF 
     dat$ = "RAUSGANG"
     IF UCASE$ (gezmitskonto.dat$) = "J" THEN 
       rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$ - skonto.dat$,",9999999.00")
       restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEU.dat$ - SummeTeilEU.dat$ - skontoeu.dat$,",9999999.00")
     END IF 
     IF EXISTS (codere%,codere.rausgang) AND codere% > 0 THEN 
       SELECT KEY codere% LOCK FILE "rausgang" INDEX codere.rausgang
       SummeTeil.rausgang = sumz%
       SummeTeileu.rausgang = sumzeu%
       SummeMahn.rausgang = mahn%
       SummeMahneu.rausgang = mahnzeu%
       CALL QuickStore("rausgang")
     END IF 
 
     FILE "Teilraus"
     SELECT FIRST 
     SELECT FORM KEY codems% FILE "teilraus" INDEX codems.teilraus
     FORM 1
   CASE 22
     codems% = codems.teilraus
     SELECT FORM KEY codems% FILE "teilraus" INDEX codems.teilraus
     FORM 1
     ss% = 1
   CASE 23
      REM drucken Zahlungsplan
      opt% = 1
      leerz% = VAL (ReadConfig$("FACTURA","ZPLEERVORADR"))
      leerzn% = VAL (ReadConfig$("FACTURA","ZPNACHADR"))
      inhkopf$ = ""
      lÑngekopf% = 4000
      inhfuss$ = ""
      lÑngefuss% = 4000
      CREATE DIALOG "MS",0,0,197,326,"Scheinerstellung","MS Sans Serif",8
      ADD DIALOG "MS",4,0,5,195,98,0,"Bitte wÑhlen Sie, wie gedruckt werden soll"
      ADD DIALOG "MS",3,53,30,76,10,0,"alle WÑhrungen",0,opt%
      ADD DIALOG "MS",3,53,41,84,10,0,"EUR",1,opt%
      ADD DIALOG "MS",5,28,55,113,10,0,"Anzahl Leerzeilen vor der Adresse:"
      ADD DIALOG "MS",6,73,65,18,10,0,0,leerz%,2
      ADD DIALOG "MS",5,28,77,120,10,0,"Anzahl Leerzeilen nach der Adresse:"
      ADD DIALOG "MS",6,73,87,18,10,0,0,leerzn%,2

      ADD DIALOG "MS",5,5,107,173,10,0,"Kopftext: Strg+Enter fÅr Zeilenumbruch"
      ADD DIALOG "MS",6,5,117,190,80,4,3,inhkopf$,lÑngekopf%
      ADD DIALOG "MS",5,5,207,173,10,0,"Fu·text:  Strg+Enter fÅr Zeilenumbruch"
      ADD DIALOG "MS",6,5,217,190,80,4,3,inhfuss$,lÑngefuss%

      ADD DIALOG "MS",1,35,306,55,16,1,"&OK",1,1
      ADD DIALOG "MS",1,93,306,54,16,0,"&Abbrechen",0,0
      DIALOG "MS",reqzu%
      REMOVE DIALOG "MS"
      CALL WriteConfig("FACTURA","ZPLEERVORADR", LTRIM$ ( STR$ (leerz%,"99")))
      CALL WriteConfig("FACTURA","ZPNACHADR", LTRIM$ ( STR$ (leerzn%,"99")))
      IF reqzu% = 1 THEN CALL ZP1(codems.master,opt%,leerz%,leerzn%,inhkopf$,inhfuss$)
   MENU OFF 
   END SELECT 
   MENU ON 
 WEND 
 IF ( MOD ("TEILRAUS") OR NEW ("TEILRAUS")) THEN CALL FStore("TEILRAUS")
 REM 110397 CALL ZEINbuchung1(0)
 _formend% = 0
 END SUB 
  
 
SUB FTeilrausIntro()
 MOUSE OFF 
 FILE "Teilraus"
 INDEX Codems.TEILRAUS
 
   SELECT FORM KEY cums% FILE "MASTER" INDEX CodeMS.MASTER
   SELECT FORM KEY cums% FILE "TEILRAUS" INDEX CodeMS.TEILRAUS
   art% = art.master
     SELECT KEY CodeW.master FILE "waehrung" INDEX CodeW.waehrung
     IF CodeW.waehrung = CodeW.master THEN 
       IF UCASE$ ( FORM ) = "TEILRAUS" THEN 
         mastwaehr$ = "WÑhrung: " + waehrungbezeich.waehrung
       ELSE 
         mastwaehr$ = "Erfass.wÑhrung war: " + waehrungbezeich.waehrung
       END IF 
       zweitwaehr$ = LEFT$ (waehrung.waehrung,4)
       euro% = umrechnung.master
       IF codew.master <> 0 THEN 
         waehrmarti% = codew.master
         waehrmarti$ = waehrung.master
       END IF 
     ELSE 
       mastwaehr$ = "<ohne Zuordnung>"
     END IF 
     REM TeilzahlungsÅbersicht
     f.bearbt2.enabled = - 1
     f.sicht2.enabled = 0
     f.abbrucht2.enabled = 0
     f.abbrucht2.visible = 0
     f.loet2.enabled = - 1
     f.eurot2.enabled = - 1
     f.zurt2.enabled = - 1
     dat$ = "master"
     codere% = codere.dat$
     codems% = codems.dat$
     umr% = umrechnung.dat$
         IF EXISTS (codems%,codems.teilraus) THEN 
           FILE "teilraus"
           INDEX codems.teilraus
           SELECT FIRST 
           SELECT KEY codems% LOCK FILE "teilraus" INDEX codems.teilraus
           sumz% = 0
           sumzEu% = 0
           mahn% = 0
           mahnEU% = 0
           WHILE NOT EOF ("teilraus") AND codems.teilraus = codems%
             IF RIGHT$ (maske$,1) <> "E" THEN 
               IF erledigt.teilraus = "J" THEN 
                 sumz% = sumz% + GesBrutto.teilraus
                 IF UCASE$ (mahnjn.teilraus) = "J" THEN mahn% = mahn% + gesbrutto.teilraus
               END IF 
             END IF 
             IF RIGHT$ (maske$,1) = "E" THEN 
               IF erledigt.teilraus = "J" THEN 
                 sumzeu% = sumzeu% + GesBruttoeu.teilraus
                 IF UCASE$ (mahnjn.teilraus) = "J" THEN mahneu% = mahneu% + gesbruttoeu.teilraus
               END IF 
             END IF 
             codems.teilraus = codems%
             codere.teilraus = codere%
             Workstation.teilraus = Workstation%
             QWoNo.teilraus = STR$ (Workstation%,"000000") + STR$ (Codeteil.teilraus,"000000")
             RecStatus.teilraus = "c"
             STORE FILE "teilraus"
             UNLOCK CURRENT FILE "teilraus"
             SELECT NEXT LOCK 
           WEND 
           IF RIGHT$ (maske$,1) <> "E" THEN 
             IF sumz% <> 0 THEN sumzeu% = sumz% / umr% ELSE sumzeu% = 0
             IF mahn% <> 0 THEN mahneu% = mahn% / umr% ELSE mahneu% = 0
           END IF 
           IF RIGHT$ (maske$,1) = "E" THEN 
             IF sumzeu% <> 0 THEN sumz% = sumzeu% * umr% ELSE sumz% = 0
             IF mahneu% <> 0 THEN mahn% = mahneu% * umr% ELSE mahn% = 0
           END IF 
           FILE dat$
           SELECT FIRST 
           SELECT KEY codems% LOCK FILE dat$ INDEX codems.dat$
           SummeTeil.dat$ = sumz%
           SummeTeilEu.dat$ = sumzeu%
           SummeMahn.dat$ = sumz%
           SummeMahnEu.dat$ = sumzeu%
           CALL QuickStore(dat$)
           IF codere% > 0 THEN 
             IF EXISTS (codere%,codere.rausgang) THEN 
               FILE "rausgang"
               INDEX codere.rausgang
               SELECT FIRST 
               SELECT KEY codere% LOCK FILE "rausgang" INDEX codere.rausgang
               SummeTeil.rausgang = sumz%
               SummeTeilEu.rausgang = sumzeu%
               SummeMahn.rausgang = sumz%
               SummeMahnEu.rausgang = sumzeu%
               CALL QuickStore("rausgang")
             END IF 
           END IF 
           FILE "Teilraus"
           INDEX codems.teilraus
           SELECT FIRST 
           REM FORM 1
           SELECT FORM KEY codems% FILE "teilraus" INDEX codems.teilraus
         ELSE 
           REM noch kein Datensatz vorhanden
           REQUEST "Es wurde noch keine Teilzahlung erfa·t!","Wollen Sie eine Teilzahlung erfassen?",130,req%
           IF req% = 1 THEN 
             REM neue Teilzahlung
             codere% = codere.master
             codems% = codems.master
             okrau% = 0
             IF codere% > 0 THEN 
               IF EXISTS (codere%,codere.rausgang) THEN 
                 FILE "rausgang"
                 INDEX codere.rausgang
                 SELECT FIRST 
                 okrau% = 1
                END IF 
              END IF 
              BLANK FILE "Teilraus"
              codeteil% = SER ("Teilraus",1)
              codeteil.teilraus = codeteil%
              codere.teilraus = codere.master
              codems.teilraus = codems.master
              codeku.teilraus = codeku.master
              nachname.teilraus = nachname.master
              vorname.teilraus = vorname.master
              ort.teilraus = ort.master
              plz.teilraus = plz.master
              stra·e.teilraus = stra·e.master
              gezahltam.teilraus = TODAY 
              GesNetto.teilraus = 0
              GesBrutto.teilraus = 0
              PreisNetto.teilraus = 0
              PreisBrutto.teilraus = 0
              PreisNettoEu.teilraus = 0
              PreisBruttoEu.teilraus = 0
              GesNettoTeil.teilraus = 0
              GesBruttoTeil.teilraus = 0
              GesNettoTeilEu.teilraus = 0
              GesBruttoTeilEu.teilraus = 0
              GesNettoEu.teilraus = 0
              GesBruttoEu.teilraus = 0
              mwst.teilraus = 0
              mwstdm.teilraus = 0
              GutschriftJN.teilraus = "n"
              IF art.master = 7 THEN 
                GutschriftJN.teilraus = "j"
              END IF 
              Ktoauszugsnr.teilraus = ""
              KasseJN.teilraus = "n"
              gezmitskonto.teilraus = "n"
              Notiz.teilraus = ""
              erledigt.teilraus = "n"
              zero.teilraus = 0
              lrenummer.teilraus = nummer.master
              datum.teilraus = datum.master
              codew.teilraus = codew.master
              waehrung.teilraus = waehrung.master
              umrechnung.teilraus = umrechnung.master
              waehr$ = waehrung.teilraus
              CALL QuickStore("teilraus")
              SELECT FORM KEY codeteil% FILE "teilraus" INDEX codeteil.teilraus
              FORM 2
 
            END IF 
         END IF 
       REM END IF  
       FORM 
 
 FORM 
 END SUB 
 
SUB MNFTeilraus()
 MENU CLEAR 
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
 
  
 
 '***********************************************************************************
 ' Teilraus - Teilzahlungen von Rechnung aus
 '***********************************************************************************
 
SUB RTeilraus()
 MOUSE OFF 
 DIM Keyword$(4)
 cums% = codems.rausgang
 codere% = codere.rausgang
 fromform$ = UCASE$ ( FORM )
 FILE "TEILRAUS"
 INDEX codere.TEILRAUS
 REM SELECT FIRST 
 IF fromform$ LIKE "MAHNUNG*" THEN 
   IF ( MOD ("MAHNUNG") OR NEW ("MAHNUNG")) THEN CALL QuickStore("MAHNUNG")
 ELSE 
   IF ( MOD ("rausgang") OR NEW ("rausgang")) THEN CALL QuickStore("rausgang")
 END IF 
 _formend% = 0
 dat$ = "RAUSGANG"
 MOUSE ON 
 maske$ = "TEILRR"
 IF UCASE$ (mastform$) = "EUR" OR fromform$ LIKE "MAHNUNGE" OR fromform$ LIKE "PRJRAUSE" OR fromform$ LIKE "RAINGANE" THEN 
   maske$ = "TEILRRE"
   euromaske% = 1
 ELSE 
   maske$ = "TEILRR"
   euromaske% = 0
 END IF 
 IF ProjectJN$ = "TRUE" THEN 
   IF UCASE$ (mastform$) = "EUR" OR fromform$ LIKE "MAHNUNGE" OR fromform$ LIKE "PRJRAUSE" OR fromform$ LIKE "RAINGANE" THEN 
     maske$ = "TEILRRE"
     euromaske% = 1
   ELSE 
     maske$ = "TEILRR"
     euromaske% = 0
   END IF 
 END IF 
 MOUSE ON 
 ss% = 1
 IF rerlauto% = 1 THEN 
   ss% = 2
 END IF 
 WHILE _formend% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     SET HEADING title$ + " - Teilzahlungen"
     OPEN FORM GPrjForm$ + maske$ PAGE ss%
     SELECT FIRST FILE "rausgang" INDEX codere.rausgang
     SELECT FORM KEY codere% FILE "rausgang" INDEX codere.rausgang
     IF maske$ LIKE "TEILRRE" THEN 
       SELECT FIRST FILE "teilraus" INDEX codere.teilraus
       SELECT KEY codere% FILE "teilraus" INDEX codere.teilraus
       FORM 
     END IF 
     SET f = Superbase.Form
     CALL RTeilrausIntro()
     CALL MNFTeilraus()
     SET STATUS "Teilzahlungen"
   END IF 
   MENU ON 
   MOUSE ON 
   FORMsub% = 0
   IF rerlauto% = 1 THEN 
     FORMsub% = 118
     rerlauto% = 2
   END IF 
   REM IF RECCOUNT ("zeingan1") > 0 THEN CALL ZEINUpdate1()
   CALL ClearKBDBuffer()
   FORM ss%
   IF FORMsub% <> 118 THEN WAIT KEY OR MENU OR MOUSE 
   REM ** Tastaturabfrage
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL PSelectPrev()
   CASE CrsRight%,PgDn%
     CALL PSelectNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE FORMsub%
   CASE 110
     ss% = 1
     CALL RTeilrausIntro()
   CASE 111
     ss% = PAGE 
     IF UCASE$ (maske$) = "TEILRR" THEN 
       maske$ = "TEILRRE"
       euromaske% = 1
     ELSE 
       maske$ = "TEILRR"
       euromaske% = 0
     END IF 
   CASE 115
     REM neue Teilzahlung
     f.bearbt2.enabled = - 1
     f.sicht2.enabled = 0
     f.abbrucht2.enabled = 0
     f.abbrucht2.visible = 0
     f.loet2.enabled = - 1
     f.eurot2.enabled = - 1
     f.zurt2.enabled = - 1
     IF dat$ LIKE "reingang" THEN 
       CALL RENeuTeil("Teilrein","reingang")
     ELSE 
       CALL RENeuTeil("Teilraus","rausgang")
     END IF 
     REM CALL REUpdate(dat$)
   CASE 116
     ss% = 2
     REM einzelne Teilzahlung
     f.bearbt2.enabled = - 1
     f.sicht2.enabled = 0
     f.abbrucht2.enabled = 0
     f.abbrucht2.visible = 0
     f.loet2.enabled = - 1
     f.eurot2.enabled = - 1
     f.zurt2.enabled = - 1
     codere% = codere.dat$
     IF dat$ LIKE "reingang" THEN 
       codeteil% = codeteil.teilrein
       SELECT FORM KEY codeteil% FILE "Teilrein" INDEX codeteil.teilrein
     ELSE 
       codeteil% = codeteil.teilraus
       SELECT FORM KEY codeteil% FILE "Teilraus" INDEX codeteil.teilraus
     END IF 
     SELECT KEY codere% FILE dat$ INDEX codere.dat$
     FORM ss%
     REM CALL REUpdate(dat$)
   CASE 117
     ss% = 1
     IF dat$ LIKE "reingang" THEN 
       codere% = codere.teilrein
       SELECT FORM KEY codere% FILE "teilrein" INDEX codere.teilrein
     ELSE 
       codere% = codere.teilraus
       SELECT FORM KEY codere% FILE "teilraus" INDEX codere.teilraus
     END IF 
     SELECT KEY codere% FILE dat$ INDEX codere.dat$
     FORM ss%
     REM CALL REUpdate(dat$)
   CASE 118
     f.bearbt2.enabled = 0
     f.auswa.enabled = 0
     f.sicht2.enabled = - 1
     f.abbrucht2.enabled = - 1
     f.abbrucht2.visible = - 1
     f.loet2.enabled = 0
     f.eurot2.enabled = 0
     f.zurt2.enabled = 0
     IF rerlauto% = 2 THEN 
       ENTER Ktoauszugsnr.teilraus,0
     ELSE 
       IF euromaske% = 0 THEN 
         IF dat$ LIKE "reingang" THEN 
           ENTER Gesbrutto.teilrein,0
         ELSE 
           ENTER Gesbrutto.teilraus,0
         END IF 
       ELSE 
         IF dat$ LIKE "reingang" THEN 
           ENTER GesbruttoEu.teilrein,0
         ELSE 
           ENTER GesbruttoEu.teilraus,0
         END IF 
       END IF 
     END IF 
     f.bearbt2.enabled = - 1
     f.sicht2.enabled = 0
     f.abbrucht2.enabled = 0
     f.abbrucht2.visible = 0
     f.loet2.enabled = - 1
     f.eurot2.enabled = - 1
     f.zurt2.enabled = - 1
     f.auswa.enabled = - 1
     REM CALL REUpdate(dat$)
   CASE 119
     IF dat$ LIKE "reingang" THEN 
       CALL SichTeil("teilrein",euromas%)
     ELSE 
       CALL SichTeil("teilraus",euromas%)
     END IF 
     f.bearbt2.enabled = - 1
     f.sicht2.enabled = 0
     f.abbrucht2.enabled = 0
     f.abbrucht2.visible = 0
     f.loet2.enabled = - 1
     f.eurot2.enabled = - 1
     f.zurt2.enabled = - 1
     CALL REUpdate(dat$)
   CASE 120
     ENTER END 
     f.bearbt2.enabled = - 1
     f.sicht2.enabled = 0
     f.abbrucht2.enabled = 0
     f.abbrucht2.visible = 0
     f.loet2.enabled = - 1
     f.eurot2.enabled = - 1
     f.zurt2.enabled = - 1
   CASE 121
     REM Lîschen teil
     IF dat$ LIKE "reingang" THEN 
       qu$ = "teilrein"
       quell$ = "reingang"
     ELSE 
       qu$ = "teilraus"
       quell$ = "rausgang"
     END IF 
     codere% = codere.qu$
     codeteil% = codeteil.qu$
     codems% = codems.qu$
     SELECT KEY codeteil% LOCK FILE qu$ INDEX codeteil.qu$
     REQUEST "Datensatz wirklich lîschen?","",130,req%
     IF req% = 1 THEN 
       codere% = codere.qu$
       REMOVE FROM FILE "teilraus" WHERE codeteil.teilraus = codeteil%
     END IF 
 
     FILE quell$
     INDEX codere.quell$
     SELECT FIRST 
     SELECT KEY codere% FILE quell$ INDEX codere.quell$
     umr% = umrechnung.quell$
     FILE qu$
     INDEX codere.qu$
     SELECT FIRST 
     SELECT KEY codere% FILE qu$ INDEX codere.qu$
     CALL SumTeilR(codems%,codere%,qu$,quell$)
 
     FILE quell$
     INDEX codere.quell$
     SELECT FIRST 
     SELECT KEY codere% FILE quell$ INDEX codere.quell$
     rest$ = STR$ (GesBrutto.quell$ + gesMahn.quell$ - SummeTeil.quell$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.quell$ + gesMahnEU.quell$ - SummeTeilEU.quell$,",9999999.00")
     IF UCASE$ (gezmitskonto.quell$) = "J" THEN 
       rest$ = STR$ (GesBrutto.quell$ + gesMahn.quell$ - SummeTeil.quell$ - skonto.quell$,",9999999.00")
       restEu$ = STR$ (GesBruttoEu.quell$ + gesMahnEU.quell$ - SummeTeilEU.quell$ - skontoeu.quell$,",9999999.00")
     END IF 
     IF codems% > 0 AND EXISTS (codems%,codems.master) THEN 
       SELECT KEY codems% LOCK FILE "master" INDEX codems.master
       SummeTeil.master = SummeTeil.quell$
       SummeTeileu.master = SummeTeilEU.quell$
       CALL QuickStore("Master")
     END IF 
 
     
     SELECT FIRST FILE "Teilraus"
     SELECT FORM KEY codere% FILE qu$ INDEX codere.qu$
     FORM 1
     IF NOT EXISTS (codere%,codere.qu$) THEN _formend% = 1
   CASE 122
     seitenr% = 1
     CALL REUpdate(dat$)
     rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$,",9999999.00")
     IF UCASE$ (gezmitskonto.dat$) = "J" THEN 
       rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$ - skonto.dat$,",9999999.00")
       restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEU.dat$ - SummeTeilEU.dat$ - skontoeu.dat$,",9999999.00")
     END IF 
     FORM 1
   CASE 123
      REM drucken Zahlungsplan
      codere% = codere.rausgang
      codeku% = codeku.rausgang
      SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
      opt% = 1
      leerz% = VAL (ReadConfig$("FACTURA","ZPLEERVORADR"))
      leerzn% = VAL (ReadConfig$("FACTURA","ZPNACHADR"))

      GOTO w120320081
      CREATE DIALOG "MS",0,0,197,126,"Scheinerstellung","MS Sans Serif",8
      ADD DIALOG "MS",4,0,5,195,98,0,"Bitte wÑhlen Sie, wie gedruckt werden soll"
      ADD DIALOG "MS",3,53,30,76,10,0,"alle WÑhrungen",0,opt%
      ADD DIALOG "MS",3,53,41,84,10,0,"EUR",1,opt%
      ADD DIALOG "MS",5,28,55,113,10,0,"Anzahl Leerzeilen vor der Adresse:"
      ADD DIALOG "MS",6,73,65,18,10,0,0,leerz%,2
      ADD DIALOG "MS",5,28,77,120,10,0,"Anzahl Leerzeilen nach der Adresse:"
      ADD DIALOG "MS",6,73,87,18,10,0,0,leerzn%,2
      ADD DIALOG "MS",1,35,105,55,16,1,"&OK",1,1
      ADD DIALOG "MS",1,93,105,54,16,0,"&Abbrechen",0,0
      DIALOG "MS",reqzu%
      REMOVE DIALOG "MS"

w120320081: 

      inhkopf$ = ""
      lÑngekopf% = 4000
      inhfuss$ = ""
      lÑngefuss% = 4000
      CREATE DIALOG "MS",0,0,197,326,"Scheinerstellung","MS Sans Serif",8
      ADD DIALOG "MS",4,0,5,195,98,0,"Bitte wÑhlen Sie, wie gedruckt werden soll"
      ADD DIALOG "MS",3,53,30,76,10,0,"alle WÑhrungen",0,opt%
      ADD DIALOG "MS",3,53,41,84,10,0,"EUR",1,opt%
      ADD DIALOG "MS",5,28,55,113,10,0,"Anzahl Leerzeilen vor der Adresse:"
      ADD DIALOG "MS",6,73,65,18,10,0,0,leerz%,2
      ADD DIALOG "MS",5,28,77,120,10,0,"Anzahl Leerzeilen nach der Adresse:"
      ADD DIALOG "MS",6,73,87,18,10,0,0,leerzn%,2
 
      ADD DIALOG "MS",5,5,107,173,10,0,"Kopftext: Strg+Enter fÅr Zeilenumbruch"
      ADD DIALOG "MS",6,5,117,190,80,4,3,inhkopf$,lÑngekopf%
      ADD DIALOG "MS",5,5,207,173,10,0,"Fu·text:  Strg+Enter fÅr Zeilenumbruch"
      ADD DIALOG "MS",6,5,217,190,80,4,3,inhfuss$,lÑngefuss%
 
      ADD DIALOG "MS",1,35,306,55,16,1,"&OK",1,1
      ADD DIALOG "MS",1,93,306,54,16,0,"&Abbrechen",0,0
      DIALOG "MS",reqzu%
      REMOVE DIALOG "MS"


      CALL WriteConfig("FACTURA","ZPLEERVORADR", LTRIM$ ( STR$ (leerz%,"99")))
      CALL WriteConfig("FACTURA","ZPNACHADR", LTRIM$ ( STR$ (leerzn%,"99")))
      IF reqzu% = 1 THEN CALL ZP2(dat$,codere.rausgang,opt%,leerz%,leerzn%,inhkopf$,inhfuss$)
      SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
      SELECT KEY codere% FILE dat$ INDEX codere.dat$
      SELECT FORM KEY codere% FILE "teilraus" INDEX codere.teilraus
      FORM 
   MENU OFF 
   CASE 125
     REM Aufruf und öbernahme Bank auf Konto (Kontonr. des EmpfÑngers)
     REM 27122005 
     IF dat$ LIKE "reing*" THEN 
       teild$ = "teilrein"
     ELSE 
       teild$ = "teilraus"
     END IF 
     codeteil% = codeteil.teild$
     codeku% = codeku.dat$
     cfile$ = FILE 
     FILE "adressen"
     INDEX Kundennummer.adressen
     SELECT FIRST FILE "Adressen" INDEX Kundennummer.adressen
     SELECT KEY "1" FILE "Adressen" INDEX Kundennummer.adressen
     REDIM Keyword$(1,1)
     REDIM Keyword$(4)
     i% = 0
     IF blz.stamm <> "" THEN 
       Keyword$(i%) = "Bank00: BLZ: " + blz.stamm + "   Bank: " + bank.stamm + "   Konto: " + Konto.stamm + "  Art: " + k0art.stamm + "   Inhaber " + K0inh.stamm
       i% = i% + 1
     END IF 
     IF k1blz.stamm <> "" THEN 
       Keyword$(i%) = "Bank01: BLZ: " + k1blz.stamm + "   Bank: " + k1bank.stamm + "   Konto: " + k1Konto.stamm + "  Art: " + k1art.stamm + "   Inhaber " + K1inh.stamm
       i% = i% + 1
     END IF 
     IF k2blz.stamm <> "" THEN 
       Keyword$(i%) = "Bank02: BLZ: " + k2blz.stamm + "   Bank: " + k2bank.stamm + "   Konto: " + k2Konto.stamm + "  Art: " + k2art.stamm + "   Inhaber " + K2inh.stamm
       i% = i% + 1
     END IF 
     IF k3blz.stamm <> "" THEN 
       Keyword$(i%) = "Bank03: BLZ: " + k3blz.stamm + "   Bank: " + k3bank.stamm + "   Konto: " + k3Konto.stamm + "  Art: " + k3art.stamm + "   Inhaber " + K3inh.stamm
       i% = i% + 1
     END IF 
     IF i% > 0 THEN 
       CREATE DIALOG "KEYWORD",0,0,433,100,"Wahl Zielkonto","MS Sans Serif",8
       ADD DIALOG "KEYWORD",4,0,1,433,76,0,""
       ADD DIALOG "KEYWORD",9,4,5,21,24,2
       ADD DIALOG "KEYWORD",5,31,14,189,19,0,"Bitte wÑhlen Sie die Bankverbindung aus:"
       ADD DIALOG "KEYWORD",7,4,25,425,52,2,2,Keyword$,Auswahl$,prompt$
       ADD DIALOG "KEYWORD",1,170,82,55,15,1,"&OK",1,1
       ADD DIALOG "KEYWORD",1,226,82,55,15,0,"&Abbrechen",0,0
       DIALOG "KEYWORD",req%
       REMOVE DIALOG "KEYWORD"
       IF req% = 1 THEN 
         a$ = LEFT$ (Auswahl$(0),6)
         SELECT KEY codeteil% LOCK FILE teild$ INDEX codeteil.teild$
         SELECT CASE UCASE$ (a$)
         CASE "BANK00"
           k2BLZ.teild$ = blz.stamm
           k2Bank.teild$ = bank.stamm
           k2konto.teild$ = konto.stamm
           k2Art.teild$ = k0art.stamm
           k2Inh.teild$ = k0Inh.stamm
           k2IBAN.teild$ = k0IBAN.stamm
           k2swift.teild$ = k0swift.stamm
         CASE "BANK01"
           k2BLZ.teild$ = k1blz.stamm
           k2Bank.teild$ = k1bank.stamm
           k2konto.teild$ = k1konto.stamm
           k2Art.teild$ = k1art.stamm
           k2Inh.teild$ = k1Inh.stamm
           k2IBAN.teild$ = k1IBAN.stamm
           k2swift.teild$ = k1swift.stamm
         CASE "BANK02"
           k2BLZ.teild$ = k2blz.stamm
           k2Bank.teild$ = k2bank.stamm
           k2konto.teild$ = k2konto.stamm
           k2Art.teild$ = k2art.stamm
           k2Inh.teild$ = k2Inh.stamm
           k2IBAN.teild$ = k2IBAN.stamm
           k2swift.teild$ = k2swift.stamm
         CASE "BANK03"
           k2BLZ.teild$ = k3blz.stamm
           k2Bank.teild$ = k3bank.stamm
           k2konto.teild$ = k3konto.stamm
           k2Art.teild$ = k3art.stamm
           k2Inh.teild$ = k3Inh.stamm
           k2IBAN.teild$ = k3IBAN.stamm
           k2swift.teild$ = k3swift.stamm
         END SELECT 
         STORE FILE teild$
         FORM 
       END IF 
     ELSE 
       CALL Fehler("Keine Bankverbindung gefunden!","Bitte prÅfen Sie, da· in Ihren Firmenstammdaten die Bankverbindungen Ihrer Firma eingetragen sind!")
     END IF 
     FILE cfile$
   END SELECT 
   MENU ON 
 WEND 
 IF ( MOD ("TEILRAUS") OR NEW ("TEILRAUS")) THEN CALL FStore("TEILRAUS")
 REM 110397 CALL ZEINbuchung1(0)
 _formend% = 0
 END SUB 
  
 
SUB RTeilrausIntro()
 MOUSE OFF 
 dat$ = "RAUSGANG"
 codere% = codere.dat$
 codems% = codems.dat$
 FILE "Teilraus"
 INDEX Codere.TEILRAUS
 IF UCASE$ ( FORM ) = "TEILRR" THEN 
   waehr$ = "WÑhrung: " + waehrung.dat$
 ELSE 
   waehr$ = "Erfass.wÑhrung war: " + waehrung.dat$
 END IF 
 
     f.bearbt2.enabled = - 1
     f.sicht2.enabled = 0
     f.abbrucht2.enabled = 0
     f.abbrucht2.visible = 0
     f.loet2.enabled = - 1
     f.eurot2.enabled = - 1
     f.zurt2.enabled = - 1
  SELECT FORM KEY codere% FILE dat$ INDEX Codere.dat$
  SELECT FORM KEY codere% FILE "TEILRAUS" INDEX Codere.TEILRAUS
     umr% = umrechnung.dat$
     IF dat$ LIKE "reingang" THEN 
       REM IF NOT EXISTS (codere%,codere.teilrein) THEN 
         IF codems% > 0 AND EXISTS (codems%,codems.teilrein) THEN 
           CALL SumTeil(codems%,codere%,"teilrein",dat$)
         END IF 
       REM END IF 
       FILE "Teilrein"
       INDEX codere.teilrein
       SELECT FIRST 
       FORM 1
       SELECT FORM KEY codere% FILE "teilrein" INDEX codere.teilrein
       FORM 
     ELSE 
       REM IF NOT EXISTS (codere%,codere.teilrein) THEN 
         ok% = 0
         IF codems% > 0 AND EXISTS (codems%,codems.teilraus) THEN 
           ok% = 1
           CALL SumTeil(codems%,codere%,"teilraus",dat$)
         ELSE 
           IF EXISTS (codere%,codere.teilraus) THEN 
             ok% = 1
             CALL SumTeilR(codems%,codere%,"teilraus",dat$)
           ELSE 
             REQUEST "Es wurde noch kein Zahlungseingang erfa·t!","Mîchten Sie jetzt einen Zahlungseingang erfassen",130,req%
             IF req% = 1 THEN 
                ok% = 1
                CALL RENeuTeil("Teilraus","rausgang")
             END IF 
           END IF 
         END IF 
       REM END IF  
       SELECT KEY codere% FILE dat$ INDEX codere.dat$
       FILE "Teilraus"
       INDEX codere.teilraus
       SELECT FIRST 
       IF ok% = 1 THEN 
         SELECT FORM KEY codere% FILE "teilraus" INDEX codere.teilraus
         
         ok% = 0
       END IF 
     END IF 
     REM CALL REUpdate(dat$) 
 
 FORM 
 END SUB 
 


 REM Bild laden
SUB Bild1Neu()
 IF disabled%("ADRBILDEDIT") THEN END SUB 
 path2$ = DIRECTORY 
 codeku% = codeku.adressen
 REM bildname$ = STR$ (codeob%,"00000") + STR$ (bildcount%,"000") + ".bmp"
 ON ERROR GOTO BildFehl1
 icondatei$ = "*.bmp"
 SELECT KEY codeku% LOCK FILE "ADRESSEN" INDEX codeku.adressen
 ON ERROR GOTO bw14012003
 MAKE DIRECTORY _netpath$ + "OFFICE\Bilder"
bw14012003: 
  ON ERROR GOTO ErrorHandler
  path1$ = _netpath$ + "OFFICE\Bilder\"
  REQUEST "Bild laden"," ",26,req%,icondatei$
  IF icondatei$ <> "" AND icondatei$ <> "*.bmp" THEN 
   REM Bildcount.objekte = bildcount%
   bildname$ = STR$ (codeku%,"000000") + STR$ (bildnr%,"00") + ".bmp"
   COPY icondatei$ TO path1$ + bildname$
   SELECT CASE bildnr%
     CASE 1
       Bild1.adressen = path1$ + bildname$
       nBild1.adressen = path1$ + bildname$
     CASE 2
       Bild2.adressen = path1$ + bildname$
       nBild2.adressen = path1$ + bildname$
     CASE 3
       Bild3.adressen = path1$ + bildname$
       nBild3.adressen = path1$ + bildname$
     CASE 4
       Bild4.adressen = path1$ + bildname$
       nBild4.adressen = path1$ + bildname$
     CASE 5
       Bild5.adressen = path1$ + bildname$
       nBild5.adressen = path1$ + bildname$
     CASE 6
       Bild6.adressen = path1$ + bildname$
       nBild6.adressen = path1$ + bildname$
     CASE 7
       Bild7.adressen = path1$ + bildname$
       nBild7.adressen = path1$ + bildname$
     CASE 8
       Bild8.adressen = path1$ + bildname$
       nBild8.adressen = path1$ + bildname$
     CASE 9
       Bild9.adressen = path1$ + bildname$
     CASE 10
       Bild10.adressen = path1$ + bildname$
     CASE 11
       Bild11.adressen = path1$ + bildname$
     CASE 12
       Bild12.adressen = path1$ + bildname$
     CASE 13
       Bild13.adressen = path1$ + bildname$
     CASE 14
       Bild14.adressen = path1$ + bildname$
     CASE 15
       Bild15.adressen = path1$ + bildname$
     CASE 16
       Bild16.adressen = path1$ + bildname$
     CASE 17
       Bild17.adressen = path1$ + bildname$
     CASE 18
       Bild18.adressen = path1$ + bildname$
     CASE 19
       Bild19.adressen = path1$ + bildname$
     CASE 20
       Bild20.adressen = path1$ + bildname$
     END SELECT 
   
   CALL QuickStore("adressen")
 END IF 
 DIRECTORY path2$
 ON ERROR GOTO BildFehl1
 FORM 1
 FORM 3
 FORM SHOW 
BildFehl1: 
 ON ERROR GOTO ErrorHandler
 DIRECTORY path2$
 END SUB 
 
 
 
SUB Bild1Edit()
 codeku% = codeku.adressen
 IF MOD ("adressen") OR NEW ("adressen") THEN CALL FStore("adressen")
 REM SELECT FIRST 
 ON ERROR GOTO BildFehl2
 
 REM SELECT KEY codeku% LOCK FILE "adressen" INDEX codeob.adressen
 
   SELECT CASE bildnr%
     CASE 1
       bildname$ = Bild1.adressen
     CASE 2
       bildname$ = Bild2.adressen
     CASE 3
       bildname$ = Bild3.adressen
     CASE 4
       bildname$ = Bild4.adressen
     CASE 5
       bildname$ = Bild5.adressen
     CASE 6
       bildname$ = Bild6.adressen
     CASE 7
       bildname$ = Bild7.adressen
     CASE 8
       bildname$ = Bild8.adressen
     CASE 9
       bildname$ = Bild9.adressen
     CASE 10
       bildname$ = Bild10.adressen
     CASE 11
       bildname$ = Bild11.adressen
     CASE 12
       bildname$ = Bild12.adressen
     CASE 13
       bildname$ = Bild13.adressen
     CASE 14
       bildname$ = Bild14.adressen
     CASE 15
       bildname$ = Bild15.adressen
     CASE 16
       bildname$ = Bild16.adressen
     CASE 17
       bildname$ = Bild17.adressen
     CASE 18
       bildname$ = Bild18.adressen
     CASE 19
       bildname$ = Bild19.adressen
     CASE 20
       bildname$ = Bild20.adressen
     END SELECT 
 IF bildname$ <> "" THEN 
   a% = CALL ("ShellExecute",0,"open",bildname$,"","",1)
  
 END IF 
 
 FORM SHOW 
BildFehl2: 
 ON ERROR GOTO ErrorHandler
 END SUB 
 
 END SUB 
 


 REM ***********************************************************************************************************************************************
 REM                        Bilder fÅr Artikel
 REM ***********************************************************************************************************************************************
 REM Bild laden
SUB ABild1Neu()
 IF disabled%("ARTIKELBILD") THEN END SUB 
 path2$ = DIRECTORY 
 codear% = codear.Artikel
 REM bildname$ = STR$ (codeob%,"00000") + STR$ (bildcount%,"000") + ".bmp"
 ON ERROR GOTO aBildFehl1
 icondatei$ = "*.bmp"
 SELECT KEY codear% LOCK FILE "Artikel" INDEX codear.Artikel
 ON ERROR GOTO abw14012003
 MAKE DIRECTORY _netpath$ + "Factura\Bilder"
abw14012003: 
  ON ERROR GOTO ErrorHandler
  path1$ = _netpath$ + "Factura\Bilder\"
  REQUEST "Bild laden"," ",26,req%,icondatei$
  IF icondatei$ <> "" AND icondatei$ <> "*.bmp" THEN 
   REM Bildcount.objekte = bildcount%
   bildname$ = STR$ (codear%,"000000") + STR$ (bildnr%,"00") + ".bmp"
   COPY icondatei$ TO path1$ + bildname$
   SELECT CASE bildnr%
     CASE 1
       Bild1.Artikel = path1$ + bildname$
       nBild1.Artikel = path1$ + bildname$
     CASE 2
       Bild2.Artikel = path1$ + bildname$
       nBild2.Artikel = path1$ + bildname$
     CASE 3
       Bild3.Artikel = path1$ + bildname$
       nBild3.Artikel = path1$ + bildname$
     CASE 4
       Bild4.Artikel = path1$ + bildname$
       nBild4.Artikel = path1$ + bildname$
     CASE 5
       Bild5.Artikel = path1$ + bildname$
       nBild5.Artikel = path1$ + bildname$
     CASE 6
       Bild6.Artikel = path1$ + bildname$
       nBild6.Artikel = path1$ + bildname$
     CASE 7
       Bild7.Artikel = path1$ + bildname$
       nBild7.Artikel = path1$ + bildname$
     CASE 8
       Bild8.Artikel = path1$ + bildname$
       nBild8.Artikel = path1$ + bildname$
     CASE 9
       Bild9.Artikel = path1$ + bildname$
     CASE 10
       Bild10.Artikel = path1$ + bildname$
     CASE 11
       Bild11.Artikel = path1$ + bildname$
     CASE 12
       Bild12.Artikel = path1$ + bildname$
     CASE 13
       Bild13.Artikel = path1$ + bildname$
     CASE 14
       Bild14.Artikel = path1$ + bildname$
     CASE 15
       Bild15.Artikel = path1$ + bildname$
     CASE 16
       Bild16.Artikel = path1$ + bildname$
     CASE 17
       Bild17.Artikel = path1$ + bildname$
     CASE 18
       Bild18.Artikel = path1$ + bildname$
     CASE 19
       Bild19.Artikel = path1$ + bildname$
     CASE 20
       Bild20.Artikel = path1$ + bildname$
     END SELECT 
   
   CALL QuickStore("Artikel")
 END IF 
 DIRECTORY path2$
 ON ERROR GOTO aBildFehl1
 FORM 1
 FORM 4
 FORM SHOW 
aBildFehl1: 
 ON ERROR GOTO ErrorHandler
 DIRECTORY path2$
 END SUB 
 
 
 
SUB ABild1Edit()
 codear% = codear.Artikel
 IF MOD ("Artikel") OR NEW ("Artikel") THEN CALL FStore("Artikel")
 REM SELECT FIRST 
 ON ERROR GOTO aBildFehl2
 
 REM SELECT KEY codear% LOCK FILE "Artikel" INDEX codeob.Artikel
 
   SELECT CASE bildnr%
     CASE 1
       bildname$ = Bild1.Artikel
     CASE 2
       bildname$ = Bild2.Artikel
     CASE 3
       bildname$ = Bild3.Artikel
     CASE 4
       bildname$ = Bild4.Artikel
     CASE 5
       bildname$ = Bild5.Artikel
     CASE 6
       bildname$ = Bild6.Artikel
     CASE 7
       bildname$ = Bild7.Artikel
     CASE 8
       bildname$ = Bild8.Artikel
     CASE 9
       bildname$ = Bild9.Artikel
     CASE 10
       bildname$ = Bild10.Artikel
     CASE 11
       bildname$ = Bild11.Artikel
     CASE 12
       bildname$ = Bild12.Artikel
     CASE 13
       bildname$ = Bild13.Artikel
     CASE 14
       bildname$ = Bild14.Artikel
     CASE 15
       bildname$ = Bild15.Artikel
     CASE 16
       bildname$ = Bild16.Artikel
     CASE 17
       bildname$ = Bild17.Artikel
     CASE 18
       bildname$ = Bild18.Artikel
     CASE 19
       bildname$ = Bild19.Artikel
     CASE 20
       bildname$ = Bild20.Artikel

     END SELECT 
 IF bildname$ <> "" THEN 
   a% = CALL ("ShellExecute",0,"open",bildname$,"","",1)
  
 END IF 
 
 FORM SHOW 
aBildFehl2: 
 ON ERROR GOTO ErrorHandler
 END SUB 
 
 END SUB 
 
 

 REM ********************************************************************************************************************************************************
 REM *                                  Bilder fÅr Projekte                                                                                                 *
 REM ********************************************************************************************************************************************************


SUB PBild1Neu()
 IF disabled%("PRJBILDEDIT") THEN END SUB 
 path2$ = DIRECTORY 
 codepr% = codepr.project
 REM bildname$ = STR$ (codeob%,"00000") + STR$ (bildcount%,"000") + ".bmp"
 ON ERROR GOTO PBildFehl1
 icondatei$ = "*.bmp"
 SELECT KEY codepr% LOCK FILE "project" INDEX codepr.project
 ON ERROR GOTO pbw14012003
 MAKE DIRECTORY _netpath$ + "PROJECT"
pbw14012003: 
 ON ERROR GOTO pbw140120031
 MAKE DIRECTORY _netpath$ + "PROJECT\Bilder"
pbw140120031:  
  ON ERROR GOTO ErrorHandler
  path1$ = _netpath$ + "PROJECT\Bilder\"
  REQUEST "Bild laden"," ",26,req%,icondatei$
  IF icondatei$ <> "" AND icondatei$ <> "*.bmp" THEN 
   REM Bildcount.objekte = bildcount%
   bildname$ = STR$ (codepr%,"000000") + STR$ (bildnr%,"00") + ".bmp"
   COPY icondatei$ TO path1$ + bildname$
   SELECT CASE bildnr%
     CASE 1
       Bild1.project = path1$ + bildname$
       nBild1.project = path1$ + bildname$
     CASE 2
       Bild2.project = path1$ + bildname$
       nBild2.project = path1$ + bildname$
     CASE 3
       Bild3.project = path1$ + bildname$
       nBild3.project = path1$ + bildname$
     CASE 4
       Bild4.project = path1$ + bildname$
       nBild4.project = path1$ + bildname$
     CASE 5
       Bild5.project = path1$ + bildname$
       nBild5.project = path1$ + bildname$
     CASE 6
       Bild6.project = path1$ + bildname$
       nBild6.project = path1$ + bildname$
     CASE 7
       Bild7.project = path1$ + bildname$
       nBild7.project = path1$ + bildname$
     CASE 8
       Bild8.project = path1$ + bildname$
       nBild8.project = path1$ + bildname$
     CASE 9
       Bild9.project = path1$ + bildname$
     CASE 10
       Bild10.project = path1$ + bildname$
     CASE 11
       Bild11.project = path1$ + bildname$
     CASE 12
       Bild12.project = path1$ + bildname$
     CASE 13
       Bild13.project = path1$ + bildname$
     CASE 14
       Bild14.project = path1$ + bildname$
     CASE 15
       Bild15.project = path1$ + bildname$
     CASE 16
       Bild16.project = path1$ + bildname$
     CASE 17
       Bild17.project = path1$ + bildname$
     CASE 18
       Bild18.project = path1$ + bildname$
     CASE 19
       Bild19.project = path1$ + bildname$
     CASE 20
       Bild20.project = path1$ + bildname$
     END SELECT 
   
   CALL QuickStore("project")
 END IF 
 DIRECTORY path2$
 ON ERROR GOTO PBildFehl1
 FORM 1
 FORM 2
 FORM SHOW 
PBildFehl1: 
 ON ERROR GOTO ErrorHandler
 DIRECTORY path2$
 END SUB 
 
 
 
SUB PBild1Edit()
 codepr% = codepr.project
 IF MOD ("project") OR NEW ("project") THEN CALL FStore("project")
 REM SELECT FIRST 
 ON ERROR GOTO PBildFehl2
 
 REM SELECT KEY codepr% LOCK FILE "project" INDEX codeob.project
 
   SELECT CASE bildnr%
     CASE 1
       bildname$ = Bild1.project
     CASE 2
       bildname$ = Bild2.project
     CASE 3
       bildname$ = Bild3.project
     CASE 4
       bildname$ = Bild4.project
     CASE 5
       bildname$ = Bild5.project
     CASE 6
       bildname$ = Bild6.project
     CASE 7
       bildname$ = Bild7.project
     CASE 8
       bildname$ = Bild8.project
     CASE 9
       bildname$ = Bild9.project
     CASE 10
       bildname$ = Bild10.project
     CASE 11
       bildname$ = Bild11.project
     CASE 12
       bildname$ = Bild12.project
     CASE 13
       bildname$ = Bild13.project
     CASE 14
       bildname$ = Bild14.project
     CASE 15
       bildname$ = Bild15.project
     CASE 16
       bildname$ = Bild16.project
     CASE 17
       bildname$ = Bild17.project
     CASE 18
       bildname$ = Bild18.project
     CASE 19
       bildname$ = Bild19.project
     CASE 20
       bildname$ = Bild20.project
     END SELECT 
 IF bildname$ <> "" THEN 
   a% = CALL ("ShellExecute",0,"open",bildname$,"","",1)
  
 END IF 
 
 FORM SHOW 
PBildFehl2: 
 ON ERROR GOTO ErrorHandler
 END SUB 
 
 END SUB 
 
 







 '***********************************************************************************
 ' Teilraus - Teilzahlungen von Rechnung aus
 '***********************************************************************************
 
SUB RTeilrein()
 MOUSE OFF 
 DIM Keyword$(4)
 cums% = codems.reingang
 codere% = codere.reingang
 fromform$ = UCASE$ ( FORM )
 FILE "TEILREIN"
 INDEX codere.TEILREIN
 REM SELECT FIRST 
 IF ( MOD ("reingang") OR NEW ("reingang")) THEN CALL QuickStore("reingang")
 _formend% = 0
 dat$ = "reingang"
 maske$ = "TEILREI"
 euromaske% = 1
 MOUSE ON 
 WHILE _formend% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     SET HEADING title$ + " - Teilzahlungen"
     OPEN FORM GPrjForm$ + maske$ PAGE ss%
     SELECT FIRST FILE "reingang" INDEX codere.reingang
     SELECT FORM KEY codere% FILE "reingang" INDEX codere.reingang
     IF maske$ LIKE "TEILREI" THEN 
       SELECT FIRST FILE "TEILREIN" INDEX codere.TEILREIN
       SELECT KEY codere% FILE "TEILREIN" INDEX codere.TEILREIN
       FORM 
     END IF 
     SET f = Superbase.Form
     CALL RTeilreinIntro()
     CALL MNFTeilrein()
     SET STATUS "Teilzahlungen"
   END IF 
   MENU ON 
   MOUSE ON 
   FORMsub% = 0
   IF rerlauto% = 1 THEN 
     FORMsub% = 118
     rerlauto% = 2
     FORM 2
   END IF 
   CALL ClearKBDBuffer()
   IF FORMsub% <> 118 THEN WAIT KEY OR MENU OR MOUSE 
   REM ** Tastaturabfrage
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL PSelectPrev()
   CASE CrsRight%,PgDn%
     CALL PSelectNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE FORMsub%
   CASE 110
     ss% = 1
     CALL RTeilreinIntro()
   CASE 111
     ss% = PAGE 
     IF UCASE$ (maske$) = "TEILRR" THEN 
       maske$ = "TEILRRE"
       euromaske% = 1
     ELSE 
       maske$ = "TEILRR"
       euromaske% = 0
     END IF 
   CASE 115
     REM neue Teilzahlung
     f.bearbt2.enabled = - 1
     f.sicht2.enabled = 0
     f.abbrucht2.enabled = 0
     f.abbrucht2.visible = 0
     f.loet2.enabled = - 1
     f.eurot2.enabled = - 1
     f.zurt2.enabled = - 1
     IF dat$ LIKE "reingang" THEN 
       CALL RENeuTeil("Teilrein","reingang")
     END IF 
     REM CALL REUpdate(dat$)
   CASE 116
     ss% = 2
     REM einzelne Teilzahlung
     f.bearbt2.enabled = - 1
     f.sicht2.enabled = 0
     f.abbrucht2.enabled = 0
     f.abbrucht2.visible = 0
     f.loet2.enabled = - 1
     f.eurot2.enabled = - 1
     f.zurt2.enabled = - 1
     codere% = codere.dat$
     IF dat$ LIKE "reingang" THEN 
       codeteil% = codeteil.teilrein
       SELECT FORM KEY codeteil% FILE "Teilrein" INDEX codeteil.teilrein
     ELSE 
       codeteil% = codeteil.TEILREIN
       SELECT FORM KEY codeteil% FILE "TEILREIN" INDEX codeteil.TEILREIN
     END IF 
     SELECT KEY codere% FILE dat$ INDEX codere.dat$
     FORM ss%
     REM CALL REUpdate(dat$)
   CASE 117
     ss% = 1
     IF dat$ LIKE "reingang" THEN 
       codere% = codere.teilrein
       SELECT FORM KEY codere% FILE "teilrein" INDEX codere.teilrein
     ELSE 
       codere% = codere.TEILREIN
       SELECT FORM KEY codere% FILE "TEILREIN" INDEX codere.TEILREIN
     END IF 
     SELECT KEY codere% FILE dat$ INDEX codere.dat$
     FORM ss%
     REM CALL REUpdate(dat$)
   CASE 118
     
     f.auswa.enabled = 0
     f.auswv.enabled = 0
     f.bearbt2.enabled = 0
     f.sicht2.enabled = - 1
     f.abbrucht2.enabled = - 1
     f.abbrucht2.visible = - 1
     f.loet2.enabled = 0
     f.eurot2.enabled = 0
     f.zurt2.enabled = 0
     IF rerlauto% = 2 THEN 
       ENTER Ktoauszugsnr.TEILREIN,0
     ELSE 
       IF dat$ LIKE "reingang" THEN 
         ENTER GesbruttoEu.teilrein,0
       ELSE 
         ENTER GesbruttoEu.TEILREIN,0
       END IF 
     END IF 
     f.bearbt2.enabled = - 1
     f.sicht2.enabled = 0
     f.abbrucht2.enabled = 0
     f.abbrucht2.visible = 0
     f.loet2.enabled = - 1
     f.eurot2.enabled = - 1
     f.zurt2.enabled = - 1
     f.auswa.enabled = - 1
     f.auswv.enabled = - 1
     REM CALL REUpdate(dat$)
   CASE 119
     IF dat$ LIKE "reingang" THEN 
       CALL SichTeil("teilrein",euromas%)
     ELSE 
       CALL SichTeil("TEILREIN",euromas%)
     END IF 
     f.bearbt2.enabled = - 1
     f.sicht2.enabled = 0
     f.abbrucht2.enabled = 0
     f.abbrucht2.visible = 0
     f.loet2.enabled = - 1
     f.eurot2.enabled = - 1
     f.zurt2.enabled = - 1
     CALL REUpdate(dat$)
   CASE 120
     ENTER END 
     f.bearbt2.enabled = - 1
     f.sicht2.enabled = 0
     f.abbrucht2.enabled = 0
     f.abbrucht2.visible = 0
     f.loet2.enabled = - 1
     f.eurot2.enabled = - 1
     f.zurt2.enabled = - 1
   CASE 121
     REM Lîschen teil
     IF dat$ LIKE "reingang" THEN 
       qu$ = "teilrein"
       quell$ = "reingang"
     END IF 
     codere% = codere.qu$
     codeteil% = codeteil.qu$
     codems% = codems.qu$
     SELECT KEY codeteil% LOCK FILE qu$ INDEX codeteil.qu$
     REQUEST "Datensatz wirklich lîschen?","",130,req%
     IF req% = 1 THEN 
       codere% = codere.qu$
       REMOVE FROM FILE "TEILREIN" WHERE codeteil.TEILREIN = codeteil%
     END IF 
 
     FILE quell$
     INDEX codere.quell$
     SELECT FIRST 
     SELECT KEY codere% FILE quell$ INDEX codere.quell$
     umr% = umrechnung.quell$
     FILE qu$
     INDEX codere.qu$
     SELECT FIRST 
     SELECT KEY codere% FILE qu$ INDEX codere.qu$
     CALL SumTeilR(codems%,codere%,qu$,quell$)
 
     FILE quell$
     INDEX codere.quell$
     SELECT FIRST 
     SELECT KEY codere% FILE quell$ INDEX codere.quell$
     rest$ = STR$ (GesBrutto.quell$ + gesMahn.quell$ - SummeTeil.quell$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.quell$ + gesMahnEU.quell$ - SummeTeilEU.quell$,",9999999.00")
     IF UCASE$ (gezmitskonto.quell$) = "J" THEN 
       rest$ = STR$ (GesBrutto.quell$ + gesMahn.quell$ - SummeTeil.quell$ - skonto.quell$,",9999999.00")
       restEu$ = STR$ (GesBruttoEu.quell$ + gesMahnEU.quell$ - SummeTeilEU.quell$ - skontoeu.quell$,",9999999.00")
     END IF 
     IF codems% > 0 AND EXISTS (codems%,codems.master) THEN 
       SELECT KEY codems% LOCK FILE "master" INDEX codems.master
       SummeTeil.master = SummeTeil.quell$
       SummeTeileu.master = SummeTeilEU.quell$
       CALL QuickStore("Master")
     END IF 
 
     
     SELECT FIRST FILE "TEILREIN"
     SELECT FORM KEY codere% FILE qu$ INDEX codere.qu$
     FORM 1
     IF NOT EXISTS (codere%,codere.qu$) THEN _formend% = 1
   CASE 122
     seitenr% = 1
     CALL REUpdate(dat$)
     rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$,",9999999.00")
     restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEu.dat$ - SummeTeilEU.dat$,",9999999.00")
     IF UCASE$ (gezmitskonto.dat$) = "J" THEN 
       rest$ = STR$ (GesBrutto.dat$ + gesMahn.dat$ - SummeTeil.dat$ - skonto.dat$,",9999999.00")
       restEu$ = STR$ (GesBruttoEu.dat$ + gesMahnEU.dat$ - SummeTeilEU.dat$ - skontoeu.dat$,",9999999.00")
     END IF 
     FORM 1
   CASE 123
      REM drucken Zahlungsplan
      codere% = codere.reingang
      codeku% = codeku.reingang
      SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
      opt% = 1
      leerz% = VAL (ReadConfig$("FACTURA","ZPLEERVORADR"))
      leerzn% = VAL (ReadConfig$("FACTURA","ZPNACHADR"))
      inhkopf$ = ""
      lÑngekopf% = 4000
      inhfuss$ = ""
      lÑngefuss% = 4000
      CREATE DIALOG "MS",0,0,197,326,"Scheinerstellung","MS Sans Serif",8
      ADD DIALOG "MS",4,0,5,195,98,0,"Bitte wÑhlen Sie, wie gedruckt werden soll"
      ADD DIALOG "MS",3,53,30,76,10,0,"alle WÑhrungen",0,opt%
      ADD DIALOG "MS",3,53,41,84,10,0,"EUR",1,opt%
      ADD DIALOG "MS",5,28,55,113,10,0,"Anzahl Leerzeilen vor der Adresse:"
      ADD DIALOG "MS",6,73,65,18,10,0,0,leerz%,2
      ADD DIALOG "MS",5,28,77,120,10,0,"Anzahl Leerzeilen nach der Adresse:"
      ADD DIALOG "MS",6,73,87,18,10,0,0,leerzn%,2
 
      ADD DIALOG "MS",5,5,107,173,10,0,"Kopftext: Strg+Enter fÅr Zeilenumbruch"
      ADD DIALOG "MS",6,5,117,190,80,4,3,inhkopf$,lÑngekopf%
      ADD DIALOG "MS",5,5,207,173,10,0,"Fu·text:  Strg+Enter fÅr Zeilenumbruch"
      ADD DIALOG "MS",6,5,217,190,80,4,3,inhfuss$,lÑngefuss%
 
      ADD DIALOG "MS",1,35,306,55,16,1,"&OK",1,1
      ADD DIALOG "MS",1,93,306,54,16,0,"&Abbrechen",0,0
      DIALOG "MS",reqzu%
      REMOVE DIALOG "MS"
      CALL WriteConfig("FACTURA","ZPLEERVORADR", LTRIM$ ( STR$ (leerz%,"99")))
      CALL WriteConfig("FACTURA","ZPNACHADR", LTRIM$ ( STR$ (leerzn%,"99")))
      IF reqzu% = 1 THEN CALL ZP2(dat$,codere.dat$,opt%,leerz%,leerzn%,inhkopf$,inhfuss$)
      SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
      SELECT KEY codere% FILE dat$ INDEX codere.dat$
      SELECT FORM KEY codere% FILE "TEILREIN" INDEX codere.TEILREIN
      FORM 
     MENU OFF 
   CASE 124
     REM Aufruf und öbernahme Bank von Konto (Kundennummer 1)
     REM 27122005
     IF dat$ LIKE "reing*" THEN 
       teild$ = "teilrein"
     ELSE 
       teild$ = "teilraus"
     END IF 
     codeteil% = codeteil.teild$
     cfile$ = FILE 
     FILE "Adressen"
     INDEX Kundennummer.adressen
     SELECT FIRST FILE "adressen" INDEX kundennummer.adressen
     SELECT KEY "1" FILE "adressen" INDEX kundennummer.adressen
     REDIM Keyword$(1,1)
     REDIM Keyword$(4)
     i% = 0
     IF blz.stamm <> "" THEN 
       Keyword$(i%) = "Bank00: BLZ: " + blz.stamm + "   Bank: " + bank.stamm + "   Konto: " + Konto.stamm + "  Art: " + k0art.stamm + "   Inhaber " + K0inh.stamm
       i% = i% + 1
     END IF 
     IF k1blz.stamm <> "" THEN 
       Keyword$(i%) = "Bank01: BLZ: " + k1blz.stamm + "   Bank: " + k1bank.stamm + "   Konto: " + k1Konto.stamm + "  Art: " + k1art.stamm + "   Inhaber " + K1inh.stamm
       i% = i% + 1
     END IF 
     IF k2blz.stamm <> "" THEN 
       Keyword$(i%) = "Bank02: BLZ: " + k2blz.stamm + "   Bank: " + k2bank.stamm + "   Konto: " + k2Konto.stamm + "  Art: " + k2art.stamm + "   Inhaber " + K2inh.stamm
       i% = i% + 1
     END IF 
     IF k3blz.stamm <> "" THEN 
       Keyword$(i%) = "Bank03: BLZ: " + k3blz.stamm + "   Bank: " + k3bank.stamm + "   Konto: " + k3Konto.stamm + "  Art: " + k3art.stamm + "   Inhaber " + K3inh.stamm
       i% = i% + 1
     END IF 
     IF i% > 0 THEN 
       CREATE DIALOG "KEYWORD",0,0,433,100,"Wahl Zielkonto","MS Sans Serif",8
       ADD DIALOG "KEYWORD",4,0,1,433,76,0,""
       ADD DIALOG "KEYWORD",9,4,5,21,24,2
       ADD DIALOG "KEYWORD",5,31,14,189,19,0,"Bitte wÑhlen Sie die Bankverbindung aus:"
       ADD DIALOG "KEYWORD",7,4,25,425,52,2,2,Keyword$,Auswahl$,prompt$
       ADD DIALOG "KEYWORD",1,170,82,55,15,1,"&OK",1,1
       ADD DIALOG "KEYWORD",1,226,82,55,15,0,"&Abbrechen",0,0
       DIALOG "KEYWORD",req%
       REMOVE DIALOG "KEYWORD"
       IF req% = 1 THEN 
         a$ = LEFT$ (Auswahl$(0),6)
         SELECT KEY codeteil% LOCK FILE teild$ INDEX codeteil.teild$
         SELECT CASE UCASE$ (a$)
         CASE "BANK00"
           k1BLZ.teild$ = blz.stamm
           k1Bank.teild$ = bank.stamm
           k1konto.teild$ = konto.stamm
           k1Art.teild$ = k0art.stamm
           k1Inh.teild$ = k0Inh.stamm
           k1IBAN.teild$ = k0IBAN.stamm
           k1swift.teild$ = k0swift.stamm
         CASE "BANK01"
           k1BLZ.teild$ = k1blz.stamm
           k1Bank.teild$ = k1bank.stamm
           k1konto.teild$ = k1konto.stamm
           k1Art.teild$ = k1art.stamm
           k1Inh.teild$ = k1Inh.stamm
           k1IBAN.teild$ = k1IBAN.stamm
           k1swift.teild$ = k1swift.stamm
         CASE "BANK02"
           k1BLZ.teild$ = k2blz.stamm
           k1Bank.teild$ = k2bank.stamm
           k1konto.teild$ = k2konto.stamm
           k1Art.teild$ = k2art.stamm
           k1Inh.teild$ = k2Inh.stamm
           k1IBAN.teild$ = k2IBAN.stamm
           k1swift.teild$ = k2swift.stamm
         CASE "BANK03"
           k1BLZ.teild$ = k3blz.stamm
           k1Bank.teild$ = k3bank.stamm
           k1konto.teild$ = k3konto.stamm
           k1Art.teild$ = k3art.stamm
           k1Inh.teild$ = k3Inh.stamm
           k1IBAN.teild$ = k3IBAN.stamm
           k1swift.teild$ = k3swift.stamm
         END SELECT 
         STORE FILE teild$
         FORM 
       END IF 
     ELSE 
       CALL Fehler("Keine Bankverbindung gefunden!","Bitte prÅfen Sie, da· in Ihren Firmenstammdaten die Bankverbindungen Ihrer Firma eingetragen sind!")
     END IF 
     FILE cfile$
   CASE 125
     REM Aufruf und öbernahme Bank auf Konto (Kontonr. des EmpfÑngers)
     REM 27122005 
     IF dat$ LIKE "reing*" THEN 
       teild$ = "teilrein"
     ELSE 
       teild$ = "teilraus"
     END IF 
     codeteil% = codeteil.teild$
     codeku% = codeku.dat$
     cfile$ = FILE 
     FILE "adressen"
     INDEX codeku.adressen
     SELECT FIRST FILE "Adressen" INDEX codeku.adressen
     SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
     REDIM Keyword$(1,1)
     REDIM Keyword$(4)
     i% = 0
     IF k1blz.adressen <> "" THEN 
       Keyword$(i%) = "Bank01: BLZ: " + k1blz.adressen + "   Bank: " + k1bank.adressen + "   Konto: " + k1Konto.adressen + "  Art: " + k1art.adressen + "   Inhaber " + K1inh.adressen
       i% = i% + 1
     END IF 
     IF k2blz.adressen <> "" THEN 
       Keyword$(i%) = "Bank02: BLZ: " + k2blz.adressen + "   Bank: " + k2bank.adressen + "   Konto: " + k2Konto.adressen + "  Art: " + k2art.adressen + "   Inhaber " + K2inh.adressen
       i% = i% + 1
     END IF 
     IF k3blz.adressen <> "" THEN 
       Keyword$(i%) = "Bank03: BLZ: " + k3blz.adressen + "   Bank: " + k3bank.adressen + "   Konto: " + k3Konto.adressen + "  Art: " + k3art.adressen + "   Inhaber " + K3inh.adressen
       i% = i% + 1
     END IF 
     IF i% > 0 THEN 
       CREATE DIALOG "KEYWORD",0,0,433,100,"Wahl Zielkonto","MS Sans Serif",8
       ADD DIALOG "KEYWORD",4,0,1,433,76,0,""
       ADD DIALOG "KEYWORD",9,4,5,21,24,2
       ADD DIALOG "KEYWORD",5,31,14,189,19,0,"Bitte wÑhlen Sie die Bankverbindung aus:"
       ADD DIALOG "KEYWORD",7,4,25,425,52,2,2,Keyword$,Auswahl$,prompt$
       ADD DIALOG "KEYWORD",1,170,82,55,15,1,"&OK",1,1
       ADD DIALOG "KEYWORD",1,226,82,55,15,0,"&Abbrechen",0,0
       DIALOG "KEYWORD",req%
       REMOVE DIALOG "KEYWORD"
       IF req% = 1 THEN 
         a$ = LEFT$ (Auswahl$(0),6)
         SELECT KEY codeteil% LOCK FILE teild$ INDEX codeteil.teild$
         SELECT CASE UCASE$ (a$)
         CASE "BANK01"
           k2BLZ.teild$ = k1blz.adressen
           k2Bank.teild$ = k1bank.adressen
           k2konto.teild$ = k1konto.adressen
           k2Art.teild$ = k1art.adressen
           k2Inh.teild$ = k1Inh.adressen
           k2IBAN.teild$ = k1IBAN.adressen
           k2swift.teild$ = k1swift.adressen
         CASE "BANK02"
           k2BLZ.teild$ = k2blz.adressen
           k2Bank.teild$ = k2bank.adressen
           k2konto.teild$ = k2konto.adressen
           k2Art.teild$ = k2art.adressen
           k2Inh.teild$ = k2Inh.adressen
           k2IBAN.teild$ = k2IBAN.adressen
           k2swift.teild$ = k2swift.adressen
         CASE "BANK03"
           k2BLZ.teild$ = k3blz.adressen
           k2Bank.teild$ = k3bank.adressen
           k2konto.teild$ = k3konto.adressen
           k2Art.teild$ = k3art.adressen
           k2Inh.teild$ = k3Inh.adressen
           k2IBAN.teild$ = k3IBAN.adressen
           k2swift.teild$ = k3swift.adressen
         END SELECT 
         STORE FILE teild$
       END IF 
       FORM 
     ELSE 
       CALL Fehler("Keine Bankverbindung gefunden!","")
     END IF 
     FILE cfile$
   END SELECT 

   MENU ON 
 WEND 
 IF ( MOD ("TEILREIN") OR NEW ("TEILREIN")) THEN CALL FStore("TEILREIN")
 REM 110397 CALL ZEINbuchung1(0)
 _formend% = 0
 END SUB 
  
 
SUB RTeilreinIntro()
 MOUSE OFF 
 dat$ = "reingang"
 codere% = codere.dat$
 codems% = codems.dat$
 FILE "TEILREIN"
 INDEX Codere.TEILREIN
 IF UCASE$ ( FORM ) = "TEILRR" THEN 
   waehr$ = "WÑhrung: " + waehrung.dat$
 ELSE 
   waehr$ = "Erfass.wÑhrung war: " + waehrung.dat$
 END IF 
 
     f.bearbt2.enabled = - 1
     f.sicht2.enabled = 0
     f.abbrucht2.enabled = 0
     f.abbrucht2.visible = 0
     f.loet2.enabled = - 1
     f.eurot2.enabled = - 1
     f.zurt2.enabled = - 1
  SELECT FORM KEY codere% FILE dat$ INDEX Codere.dat$
  SELECT FORM KEY codere% FILE "TEILREIN" INDEX Codere.TEILREIN
     umr% = umrechnung.dat$
     IF dat$ LIKE "reingang" THEN 
       REM IF NOT EXISTS (codere%,codere.teilrein) THEN 
         IF codems% > 0 AND EXISTS (codems%,codems.teilrein) THEN 
           CALL SumTeil(codems%,codere%,"teilrein",dat$)
         END IF 
       REM END IF 
       FILE "Teilrein"
       INDEX codere.teilrein
       SELECT FIRST 
       FORM 1
       SELECT FORM KEY codere% FILE "teilrein" INDEX codere.teilrein
       FORM 
     ELSE 
       REM IF NOT EXISTS (codere%,codere.teilrein) THEN 
         ok% = 0
         IF codems% > 0 AND EXISTS (codems%,codems.TEILREIN) THEN 
           ok% = 1
           CALL SumTeil(codems%,codere%,"TEILREIN",dat$)
         ELSE 
           IF EXISTS (codere%,codere.TEILREIN) THEN 
             ok% = 1
             CALL SumTeilR(codems%,codere%,"TEILREIN",dat$)
           ELSE 
             REQUEST "Es wurde noch kein Zahlungseingang erfa·t!","Mîchten Sie jetzt einen Zahlungseingang erfassen",130,req%
             IF req% = 1 THEN 
                ok% = 1
                CALL RENeuTeil("TEILREIN","reingang")
             END IF 
           END IF 
         END IF 
       REM END IF  
       SELECT KEY codere% FILE dat$ INDEX codere.dat$
       FILE "TEILREIN"
       INDEX codere.TEILREIN
       SELECT FIRST 
       IF ok% = 1 THEN 
         SELECT FORM KEY codere% FILE "TEILREIN" INDEX codere.TEILREIN
         
         ok% = 0
       END IF 
     END IF 
     REM CALL REUpdate(dat$) 
 
 FORM 
 END SUB 
 
 
 
SUB MNFTeilrein()
 MENU CLEAR 
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
 



 REM neue Akquise Maske 08.01.2007
SUB ADRAkquiNew()
 knr% = Codeku.adressen
 IF disabled%(GAkquiDat$) THEN END SUB 
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 REM cudo% = CodeDOK.DOKUMENT
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "AKQUIGES"
 IF GCODieADR$ LIKE "TRUE" THEN 
   maske$ = "AKQUIGC0"
 END IF 
 FILE GAkquiDat$
 SELECT WHERE FILE GAkquiDat$
 INDEX codeku.GAkquiDat$
 SELECT FIRST 
 WHILE _formend% = 0
   DOKsub% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     FILE GAkquiDat$
     SET HEADING title$ + " - Terminverwaltung"
     befe$ = "SELECT WHERE codeku.GAkquiDat$ = knr%"
     EXECUTE befe$
     OPEN FORM GOFFForm$ + maske$
     SET STATUS "Terminverwaltung"
     CALL MNAKQUI1()
     CALL ADRAkquiInt()
     FORM 
     SET DISPLAY ON 
     GAppName$ = _netpath$ + "DOCP\termine.pdf"
   END IF 
   MENU ON 
 adrname$ = Kundennummer.adressen + " - " + Nachname.adressen + ", " + Vorname.adressen
   FORM 
   MOUSE ON 
   dokgrup$ = Gruppe.Dokument
   IF EXISTS (knr%,codeku.akquiseb) THEN 
     neubug$ = "BugeintrÑge Æ"
   ELSE 
     neubug$ = "BugeintrÑge"
   END IF 
   FORM 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE DOKsub%
   CASE 1
     REM in Termin springen
     REM CALL QuickStore("adressen")
     GCodeaq% = codeaq.GAkquiDat$
     CALL AKQUISE(2)
     IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
     GCodeaq% = 0
   CASE 3
     REM nach Datum sortiert
     maske$ = "AKQUIGE1"
     IF GCODieADR$ LIKE "TRUE" THEN 
       maske$ = "AKQUIGC1"
     END IF 
   CASE 4
     REM nach Mitarbeiter sortiert
     maske$ = "AKQUIGE2"
     IF GCODieADR$ LIKE "TRUE" THEN 
       maske$ = "AKQUIGC2"
     END IF 
   CASE 5
     REM nach erledigt sortiert
     maske$ = "AKQUIGE3"
     IF GCODieADR$ LIKE "TRUE" THEN 
       maske$ = "AKQUIGC3"
     END IF 
   CASE 6
     REM nach Termin sortiert
     maske$ = "AKQUIGES"
     IF GCODieADR$ LIKE "TRUE" THEN 
       maske$ = "AKQUIGC0"
     END IF 
   CASE 7
     REM nach Notiz sortiert
     maske$ = "AKQUIGE4"
     IF GCODieADR$ LIKE "TRUE" THEN 
       maske$ = "AKQUIGC4"
     END IF 
   CASE 8
     REM nach Projekt sortiert
     maske$ = "AKQUIGE5"
     IF GCODieADR$ LIKE "TRUE" THEN 
       maske$ = "AKQUIGC5"
     END IF 
   CASE 9
     REM nach Aktion sortiert
     maske$ = "AKQUIGE6"
     IF GCODieADR$ LIKE "TRUE" THEN 
       maske$ = "AKQUIGC6"
     END IF 
   CASE 10
     REM nach Aktion sortiert
     REM maske$ = "AKQUIGE6"
     IF GCODieADR$ LIKE "TRUE" THEN 
       maske$ = "AKQUIGC7"
     END IF 
   END SELECT 
 WEND 
 _formend% = 0
 IF GCODieRuf% <> 0 OR GCODieRuf1% <> 0 OR GCODieRuf2% <> 0 THEN 
   ret% = CALL ("_SearchClose")
 END IF 
 GCODieRuf% = 0
 GCODieRuf1% = 0
 GCODieRuf2% = 0
 SELECT WHERE FILE GAkquiDat$
 END SUB 
 
 
SUB MNAKQUI1()
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
SUB ADRAkquiInt()
 SELECT FORM KEY knr% FILE "Adressen" INDEX codeku.adressen
 SELECT FORM KEY knr% FILE GAkquiDat$ INDEX codeku.GAkquiDat$
 END SUB 
 

 REM *****************************AkquiseBug Neu***** 21.02.2010 ************************************************************************************
 REM neue Akquise Bug Maske 
SUB ADRAkquiNewB()
 GAkquiDat$ = "AKQUISEB"
 GCodeDok% = 0
 knr% = Codeku.adressen
 IF disabled%(GAkquiDat$) THEN END SUB 
 IF NOT OPEN (GAkquiDat$) THEN CALL DFile(2,"OFFICE\akquiseb" + _fpw$)
 REM cudo% = CodeDOK.DOKUMENT
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "AKQUIGES"
 IF GCODieADR$ LIKE "TRUE" THEN 
   maske$ = "AKQUIGD7"
 END IF 
 FILE GAkquiDat$
 SELECT WHERE FILE GAkquiDat$
 INDEX codeku.GAkquiDat$
 SELECT FIRST 
 WHILE _formend% = 0
   DOKsub% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     FILE GAkquiDat$
     SET HEADING title$ + " - Terminverwaltung BUG"
     befe$ = "SELECT WHERE codeku.GAkquiDat$ = knr%"
     EXECUTE befe$
     OPEN FORM GOFFForm$ + maske$
     SET STATUS "Terminverwaltung BUGs"
     CALL MNAKQUIB()
     CALL ADRAkquiIntB()
     FORM 
     SET DISPLAY ON 
     GAppName$ = _netpath$ + "DOCP\termine.pdf"
   END IF 
   MENU ON 
 adrname$ = Kundennummer.adressen + " - " + Nachname.adressen + ", " + Vorname.adressen
   FORM 
   MOUSE ON 
   dokgrup$ = Gruppe.Dokument
   FORM 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE DOKsub%
   CASE 1
     REM in Termin springen
     REM CALL QuickStore("adressen")
     GCodeaq% = codeaq.GAkquiDat$
     CALL AKQUISE(2)
     IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
     GCodeaq% = 0
   CASE 3
     REM nach Datum sortiert
     maske$ = "AKQUIGE1"
     IF GCODieADR$ LIKE "TRUE" THEN 
       maske$ = "AKQUIGD1"
     END IF 
   CASE 4
     REM nach Mitarbeiter sortiert
     maske$ = "AKQUIGE2"
     IF GCODieADR$ LIKE "TRUE" THEN 
       maske$ = "AKQUIGD2"
     END IF 
   CASE 5
     REM nach erledigt sortiert
     maske$ = "AKQUIGE3"
     IF GCODieADR$ LIKE "TRUE" THEN 
       maske$ = "AKQUIGD3"
     END IF 
   CASE 6
     REM nach Termin sortiert
     maske$ = "AKQUIGES"
     IF GCODieADR$ LIKE "TRUE" THEN 
       maske$ = "AKQUIGD0"
     END IF 
   CASE 7
     REM nach Notiz sortiert
     maske$ = "AKQUIGE4"
     IF GCODieADR$ LIKE "TRUE" THEN 
       maske$ = "AKQUIGD4"
     END IF 
   CASE 8
     REM nach Projekt sortiert
     maske$ = "AKQUIGE5"
     IF GCODieADR$ LIKE "TRUE" THEN 
       maske$ = "AKQUIGD5"
     END IF 
   CASE 9
     REM nach Aktion sortiert
     maske$ = "AKQUIGE6"
     IF GCODieADR$ LIKE "TRUE" THEN 
       maske$ = "AKQUIGD6"
     END IF 
   CASE 10
     REM nach BugNo sortiert
     REM maske$ = "AKQUIGE6"
     IF GCODieADR$ LIKE "TRUE" THEN 
       maske$ = "AKQUIGD7"
     END IF 
   END SELECT 
 WEND 
 _formend% = 0
 IF GCODieRuf% <> 0 OR GCODieRuf1% <> 0 OR GCODieRuf2% <> 0 THEN 
   ret% = CALL ("_SearchClose")
 END IF 
 GCODieRuf% = 0
 GCODieRuf1% = 0
 GCODieRuf2% = 0
 SELECT WHERE FILE GAkquiDat$
 GAkquiDat$ = "AKQUISE"
 END SUB 
 
 
SUB MNAKQUIB()
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
SUB ADRAkquiIntB()
 SELECT FORM KEY knr% FILE "Adressen" INDEX codeku.adressen
 SELECT FORM KEY knr% FILE GAkquiDat$ INDEX codeku.GAkquiDat$
 END SUB 
 
 
 REM ********************************** Ende 21.02.2010 *******************************************************************************

 REM neue Akquise Maske 08.01.2007
SUB BUGAkquiNew()
 GAkquiDat$ = "AKQUISEB"
 REM knr% = Codeku.adressen
 IF disabled%(GAkquiDat$) THEN END SUB 
 IF NOT OPEN ("adressen") THEN CALL DFile(2,"OFFICE\adressen" + _fpw$)
 IF NOT OPEN ("adrhis") THEN CALL DFile(2,"OFFICE\adrhis" + _fpw$)
 REM IF NOT OPEN ("akquise") THEN CALL DFile(2,"OFFICE\akquise" + _fpw$)
 IF NOT OPEN ("akquiseb") THEN CALL DFile(2,"OFFICE\akquiseb" + _fpw$)
 IF NOT OPEN ("adrstat") THEN CALL DFile(2,"OFFICE\adrstat" + _fpw$)
 IF NOT OPEN ("adrgrup") THEN CALL DFile(2,"OFFICE\adrgrup" + _fpw$)
 IF OPEN ("adrtemp") THEN CLOSE FILE "ADRTEMP"
 IF NOT OPEN ("adrtemp") THEN CALL DFile(2,"OFFICE\adrtemp" + _fpw$)
 IF NOT OPEN ("color") THEN CALL DFile(2,"color" + _fpw$)
 IF NOT OPEN ("dokument") THEN CALL DFile(2,"OFFICE\dokument" + _fpw$)
 IF NOT OPEN (GAkquiDat$) THEN CALL DFile(2,"OFFICE\akquiseb" + _fpw$)
 IF NOT OPEN ("telefon") THEN CALL DFile(2,"OFFICE\telefon" + _fpw$)
 IF NOT OPEN ("connect") THEN CALL DFile(2,"OFFICE\connect" + _fpw$)
 IF NOT OPEN ("banken") THEN CALL DFile(2,"OFFICE\banken" + _fpw$)
 REM CALL Fehler("","")
         IF NOT OPEN ("teilrein") THEN CALL DFile(3,"TEILREIN" + _fpw$)
         IF NOT OPEN ("reingang") THEN CALL DFile(3,"REINGANG" + _fpw$)
         IF NOT OPEN ("teilraus") THEN CALL DFile(3,"TEILRAUS" + _fpw$)
         IF NOT OPEN ("rausgang") THEN CALL DFile(3,"RAUSGANG" + _fpw$)
   IF NOT OPEN ("master") THEN CALL DFile(3,"MASTER" + _fpw$)
   IF NOT OPEN ("mahnung") THEN CALL DFile(3,"MAHNUNG" + _fpw$)
   IF NOT OPEN ("umsatz") THEN CALL DFile(3,"UMSATZ" + _fpw$)
   IF NOT OPEN ("vertrete") THEN CALL DFile(3,"VERTRETE" + _fpw$)
   IF NOT OPEN ("provisio") THEN CALL DFile(3,"PROVISIO" + _fpw$)
   IF NOT OPEN ("verleih") THEN CALL DFile(3,"VERLEIH" + _fpw$)
   IF NOT OPEN ("journal") THEN CALL DFile(3,"JOURNAL" + _fpw$)
   IF NOT OPEN ("produkt") THEN CALL DFile(2,"OFFICE\produkt" + _fpw$)
   IF NOT OPEN ("pgruppe") THEN CALL DFile(2,"OFFICE\prgruppe" + _fpw$)
   IF NOT OPEN ("kprodukt") THEN CALL DFile(2,"OFFICE\kprodukt" + _fpw$)
 REM cudo% = CodeDOK.DOKUMENT
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "AKQUIGES"
 IF GCODieADR$ LIKE "TRUE" THEN 
   maske$ = "AKQUIGB0"
 END IF 
 FILE GAkquiDat$
 SELECT WHERE FILE GAkquiDat$
 INDEX lastbug.GAkquiDat$
 SELECT FIRST 
 WHILE _formend% = 0
   DOKsub% = 0
   MOUSE OFF 
   IF UCASE$ ( FORM ) <> maske$ THEN 
     FILE GAkquiDat$
     SET HEADING title$ + " - Bugverwaltung"
     IF bef$ = "" THEN 
       befe$ = "SELECT WHERE lastbug.GAkquiDat$ > 0"
     ELSE 
       befe$ = bef$
     END IF 
     REM EXECUTE befe$
     REM WAIT FOR 1
     OPEN FORM GOFFForm$ + maske$
     IF bef$ = "" THEN 
       bugno% = - 1
       bugdate$ = ""
       bugterm$ = ""
       bugkunde$ = ""
       fmit1$ = "B-Mitarbeiter"
       fproj1$ = "B-Project"
       fcategory1$ = "B-Category"
       fdstatu1$ = "B-Status"
       fdloes1$ = "B-Lîsung"
       fdkomp1$ = "B-Komponente"
       bugerl$ = ""
       bugnotiz$ = ""
       bugprio% = - 1
       filtma$ = ""
       filtprio$ = ""
       filterl$ = ""
       filtnote$ = ""
       filtproj$ = ""
       filtCategory$ = ""
       filtstatus$ = ""
       filtloes$ = ""
       filtkomp$ = ""
     ELSE 
       bugno% = abugno%
       bugdate$ = abugdate$
       bugterm$ = abugterm$
       bugkunde$ = abugkunde$
       fmit1$ = afmit1$
       fproj1$ = afproj1$
       fcategory1$ = afcategory1$
       fdstatu1$ = afdstatu1$
       fdloes1$ = afdloes1$
       fdkomp1$ = afdkomp1$
       bugerl$ = abugerl$
       bugnotiz$ = abugnotiz$
       bugprio% = abugprio%
     END IF 
     SET STATUS "BUG-Verwaltung"
     CALL MNAKQUIB1()
     CALL BUGAkquiInt()
     SELECT FORM FIRST 
     FORM 
     SET DISPLAY ON 
     GAppName$ = _netpath$ + "DOCP\termine.pdf"
   END IF 
   MENU ON 
 REM adrname$ = Kundennummer.adressen + " - " + Nachname.adressen + ", " + Vorname.adressen
   FORM 
   MOUSE ON 
   REM dokgrup$ = Gruppe.Dokument
   FORM 
   CALL ClearKBDBuffer()
   REM fproj1$ = LEFT$ (fproj$,9)
   FORM 
   MOUSE ON 
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE DOKsub%
   CASE 1
     REM in Termin springen
     REM CALL QuickStore("adressen")
     GCodeaq% = codeaq.GAkquiDat$
      _cuaq% = GCodeAQ%
       lastTermin% = _cuaq%
       SELECT KEY _cuaq% FILE "TVORLAGE" INDEX codeaq.TVORLAGE
       CALL DFile(2,"OFFICE\adressen" + _fpw$)
       CALL DFile(2,"OFFICE\Telefon" + _fpw$)
       FILE "adressen"
       INDEX codeku.adressen
       FILE GAkquiDat$
       INDEX codeaq.GAkquiDat$
       SELECT KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       knr% = codeku.GAkquiDat$
       SELECT KEY knr% FILE "adressen" INDEX codeku.adressen
       REM knr% = codeku.TVORLAGE
       REM _vcodema% = codema.TVORLAGE 
       REM CALL Fehler("Ausgabe des Termindialoges","")
       CALL TerLiSpez(_cuaq%)
     GCodeaq% = 0
   CASE 2
     REM Filter bearbeiten
     ENTER END 
     ENTER 2,0
   CASE 3
     REM nach Bugno sortiert
     maske$ = "AKQUIGB0"
   CASE 4
     REM nach Datum sortiert
     maske$ = "AKQUIGB1"
   CASE 5
     REM nach Termin sortiert
     maske$ = "AKQUIGB2"
   CASE 6
     REM nach Kunde sortiert
     maske$ = "AKQUIGB3"
   CASE 7
     REM nach MA sortiert
     maske$ = "AKQUIGB4"
   CASE 8
     REM nach Projekt sortiert
     maske$ = "AKQUIGB5"
   CASE 9
     REM nach Category sortiert
     maske$ = "AKQUIGB6"
   CASE 10
     REM nach Status sortiert
     maske$ = "AKQUIGB7"
   CASE 11
     REM nach Lîsung sortiert
     maske$ = "AKQUIGB8"
   CASE 12
     REM nach Komponente sortiert
     maske$ = "AKQUIGB9"
   CASE 13
     REM nach erledigt sortiert
     maske$ = "AKQUIG1B"
   CASE 14
     REM nach Notizt sortiert
     maske$ = "AKQUIG2B"
   CASE 15
     REM nach Wertung sortiert
     maske$ = "AKQUIG3B"
   CASE 20
     REM Excelexport
     MOUSE OFF 
     IF EXISTS (GMACodeDir$ + "BUG1.XLS") THEN 
       DELETE GMACodeDir$ + "BUG1.XLS"
     END IF 
     FILE GAkquiDat$
     INDEX lastbug.GAkquiDat$
     REM befe$ = "SELECT WHERE lastbug.GAkquiDat$ > 0"
     REM EXECUTE befe$
     CLOSE FIELDS 
     OPEN FIELDS LastBug,Datum,Termin,erledigt_Termin,Bearbeiter,Nachname,Notiz,Ergebnis,Dauer,DME,SProject,SCategory,SStatus,Stest,SLoesung,SKompon,SVersion
     Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
     Superbase.Converters.SBF.SourceFile = GAkquiDat$
     Superbase.Converters.SBF.Descending = 0
     Superbase.Converters.SBF.Merge = 0
     Superbase.Converters.SBF.LogErrors = 0
     Superbase.Converters.SBF.MultiResponse = 0
     Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
     Superbase.Converters.XLS.DestFile = GMACodeDir$ + "BUG1.XLS"
     Superbase.Converters.XLS.StartRow = 2
     Superbase.Converters.XLS.StartCol = 1
     Superbase.Converters.XLS.EndRow = - 1
     Superbase.Converters.XLS.EndCol = - 1
     Superbase.Converters.XLS.UseLabels = - 1
     Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
     WAIT FOR 1
     EXECUTE bef$
     SELECT FORM FIRST 
     FORM 
     CALL TextAnz(GMACodeDir$ + "BUG1.XLS")
     MOUSE ON 
   CASE 22
     REM Filter aufheben 
     ENTER END 
     SELECT WHERE FILE GAkquiDat$
     befe$ = "SELECT WHERE lastbug.GAkquiDat$ > 0"
     REM EXECUTE befe$
     SELECT FORM FIRST 
     bugno% = - 1
     bugdate$ = ""
     bugterm$ = ""
     bugkunde$ = ""
     fmit1$ = "B-Mitarbeiter"
     fproj1$ = "B-Project"
     fcategory1$ = "B-Category"
     fdstatu1$ = "B-Status"
     fdloes1$ = "B-Lîsung"
     fdkomp1$ = "B-Komponente"
     bugerl$ = ""
     bugnotiz$ = ""
     bugprio% = - 1
     filtma$ = ""
     filtprio$ = ""
     filterl$ = ""
     filtnote$ = ""
     filtproj$ = ""
     filtCategory$ = ""
     filtstatus$ = ""
     filtloes$ = ""
     filtkomp$ = ""
       abugno% = - 1
       abugdate$ = ""
       abugterm$ = ""
       abugkunde$ = ""
       afmit1$ = "B-Mitarbeiter"
       afproj1$ = "B-Project"
       afcategory1$ = "B-Category"
       afdstatu1$ = "B-Status"
       afdloes1$ = "B-Lîsung"
       afdkomp1$ = "B-Komponente"
       abugerl$ = ""
       abugnotiz$ = ""
       abugprio% = - 1
 
  CASE 28
     REM Filter setzen
     MOUSE OFF 
     ENTER END 
     FILE GAkquiDat$
     bef$ = ""
     IF bugno% > - 1 THEN 
       bef$ = "Select where lastbug = bugno% "
       EXECUTE bef$
     ELSE 
       bef$ = "Select where lastbug > 0 "
       IF filtma$ <> "" THEN bef$ = bef$ + filtma$

       IF LTRIM$ (bugdate$) <> "" THEN 
         bugdate% = 0
         IF DateOK%(bugdate$) THEN 
           bugdate% = DAYS (bugdate$)
           filtbugdat$ = " AND Datum = bugdate% "
           bef$ = bef$ + filtbugdat$
         END IF 
       END IF 

       IF LTRIM$ (bugterm$) <> "" THEN 
         bugterm% = 0
         IF DateOK%(bugterm$) THEN 
           bugterm% = DAYS (bugterm$)
           filtbugter$ = " AND Termin = bugterm% "
           bef$ = bef$ + filtbugter$
         END IF 
       END IF 
       
       IF LTRIM$ (bugkunde$) <> "" THEN 
         bugkunde1$ = bugkunde$ + "*"
         bugkunde2$ = "*" + bugkunde$ + "*"
         filtkunde$ = " AND (Nachname like bugkunde1$ OR Nachname like bugkunde2$) "
         bef$ = bef$ + filtkunde$
       END IF 

       filtprio$ = ""
       IF bugprio% > - 1 THEN 
         filtprio$ = " AND Wertung = bugprio% "
         bef$ = bef$ + filtprio$
       END IF 

       filterl$ = ""
       IF bugerl$ LIKE "j" OR bugerl$ LIKE "n" THEN 
         bugerl$ = LCASE$ (bugerl$)
         filterl$ = " AND erledigt_Termin = bugerl$ "
         bef$ = bef$ + filterl$
       END IF 

       filtnote$ = ""
       fnote1$ = bugnotiz$
       IF LTRIM$ (fnote1$) <> "" THEN 
         fnote1$ = fnote1$ + "*"
         fnote2$ = "*" + fnote1$
         filtnote$ = " AND (Notiz like fnote1$ or Notiz like fnote2$) "
         bef$ = bef$ + filtnote$
       END IF 
       IF filtproj$ <> "" THEN bef$ = bef$ + filtproj$
       IF filtCategory$ <> "" THEN bef$ = bef$ + filtCategory$
       IF filtstatus$ <> "" THEN bef$ = bef$ + filtstatus$
       IF filtloes$ <> "" THEN bef$ = bef$ + filtloes$
       IF filtkomp$ <> "" THEN bef$ = bef$ + filtkomp$
       
       EXECUTE bef$
       abugno% = bugno%
       abugdate$ = bugdate$
       abugterm$ = bugterm$
       abugkunde$ = bugkunde$
       afmit1$ = fmit1$
       afproj1$ = fproj1$
       afcategory1$ = fcategory1$
       afdstatu1$ = fdstatu1$
       afdloes1$ = fdloes1$
       afdkomp1$ = fdkomp1$
       abugerl$ = bugerl$
       abugnotiz$ = bugnotiz$
       abugprio% = bugprio%
     END IF 
     SELECT FORM FIRST 
     MOUSE ON 
   CASE 29
     REM Bugneuges
     CALL ADRSuchen()
     CALL AQBugNeu()
   CASE 30
     REM Mitarbeiter - fmit1$ 
     filtma$ = ""
     ma% = 0
     ma% = MitSuchen%()
     IF ma% > 0 THEN 
       SELECT KEY ma% FILE "supervis" INDEX codema.supervis
       fmit$ = Name.supervis
       fmit1$ = LEFT$ (fmit$,9)
       filtma$ = " AND CodemA = ma% "
     END IF 
     FILE GAkquiDat$
    CASE 31
     REM Sproject - fproj1$
     fproj$ = BUGSuche$("SProject","project")
     fproj1$ = LEFT$ (fproj$,9)
     filtproj$ = " AND SProject = fproj$ "
     REM CALL Fehler(fproj1$,"")
    CASE 32
     REM SCategory - fcategory1$
     fcategory$ = BUGSuche$("SCategor","category")
     fcategory1$ = LEFT$ (fcategory$,9)
     filtCategory$ = " AND SCategory = fcategory$ "
     REM CALL Fehler(fcategory1$,"")
   CASE 33
     REM SStatus - fdstatu1$
     fdstatu$ = BUGSuche$("SStatus","sstatus")
     fdstatu1$ = LEFT$ (fdstatu$,9)
     filtstatus$ = " AND sstatus = fdstatu$ "
     REM CALL Fehler(fdstatu1$,"")
   CASE 34
     REM SLîsung - fdloes1$
     fdloes$ = BUGSuche$("SLoesung","sloesung")
     fdloes1$ = LEFT$ (fdloes$,9)
     filtloes$ = " AND SLoesung = fdloes$ "
     REM CALL Fehler(fdloes1$,"")
   CASE 35
     REM SKomponente - fdkomp1$
     fdkomp$ = BUGSuche$("SKompon","skompon")
     fdkomp1$ = LEFT$ (fdkomp$,9)
     filtkomp$ = " AND SKompon = fdkomp$ "
     REM CALL Fehler(fdkomp1$,"")

   END SELECT 
 WEND 
 _formend% = 0
 IF GCODieRuf% <> 0 OR GCODieRuf1% <> 0 OR GCODieRuf2% <> 0 THEN 
   ret% = CALL ("_SearchClose")
 END IF 
 GCODieRuf% = 0
 GCODieRuf1% = 0
 GCODieRuf2% = 0
 SELECT WHERE FILE GAkquiDat$
 GAkquiDat$ = "AKQUISE"
 END SUB 
 
 
SUB MNAKQUIB1()
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
SUB BUGAkquiInt()
 REM SELECT FORM KEY knr% FILE "Adressen" INDEX codeku.adressen
 REM SELECT FORM KEY knr% FILE GAkquiDat$ INDEX codeku.GAkquiDat$
 END SUB 
 
 
FUNCTION BUGSuche$(datei$,feld$)
   cdatei$ = FILE 
   alle$ = "n"
   BUGSuche$ = ""
   DIM Auswahl1$(1)
 
anf020820093: 
     FILE datei$
     INDEX feld$$
     SELECT FIRST 
     a% = 0
     REDIM ProdGruppen1$(1,1)
     REDIM ProdGruppen1$( RECCOUNT (datei$) + 10)
     WHILE NOT EOF (datei$)
       ok% = - 1
       IF alle$ = "n" THEN 
         REM IF novi1.PRGRUPPE = 1 THEN ok% = 0
       END IF 
       IF ok% = - 1 THEN 
         ProdGruppen1$(a%) = feld$$
         REM IF novi1.PRGRUPPE = 1 THEN ProdGruppen1$(a%) = ProdGruppen1$(a%) + " ###"
         REM ProdGruppen1$(a%) = ProdGruppen1$(a%) + SPACE$ (300) + STR$ (codekey,"000000")
         a% = a% + 1
       END IF 
       SELECT NEXT 
     WEND 
     Auswahl$ = ProdGruppen1$(0)
     Auswahl1$(0) = Auswahl$
     FILE datei$
      CREATE DIALOG "PREISLIS",0,0,300,364,"Suche in " + datei$,"MS Sans Serif",8
      ADD DIALOG "PREISLIS",4,0,0,299,340,0," Auswahl Begriff"
      ADD DIALOG "PREISLIS",7,5,14,289,325,2,2,ProdGruppen1$,Auswahl1$," "
      ADD DIALOG "PREISLIS",1,17,345,55,16,1,"&OK",1,1
      ADD DIALOG "PREISLIS",1,77,345,55,16,0,"&Abbrechen",0,0
      REM ADD DIALOG "PREISLIS",1,137,345,55,16,0,"Alle",2,2
      DIALOG "PREISLIS",req%
      REMOVE DIALOG "PREISLIS"
      IF req% = 2 THEN 
        alle$ = "j"
        SELECT WHERE FILE datei$
        REM SELECT WHERE FILE "PRODUKT"
        GOTO anf020820093
      END IF 
      IF req% = 1 THEN 
        BUGSuche$ = Auswahl1$(0)
      END IF 
      FILE cdatei$
 END FUNCTION 
 






 REM offene Angebote                art%=1
 REM offene Preisanfragen           art%=8
 REM offene AnuftragsbestÑtigungen  art%=4
 REM offene Bestellungen=5
SUB AllAngNEW(art%)
 MOUSE OFF 
 DIM dlg AS Dialog
 DIM control AS DialogControl
 IF NOT OPEN ("rausgang") THEN CALL DFile(3,"rausGANG" + _fpw$)
 IF NOT OPEN ("mahnung") THEN CALL DFile(3,"mahnung" + _fpw$)
 IF NOT OPEN ("abzugang") THEN CALL DFile(3,"ABZUGANG" + _fpw$)
 IF NOT OPEN ("schein") THEN CALL DFile(3,"SCHEIN" + _fpw$)
 IF NOT OPEN ("master") THEN CALL DFile(3,"MASTER" + _fpw$)
 IF NOT OPEN ("teilraus") THEN CALL DFile(3,"TEILRAUS" + _fpw$)
 IF NOT OPEN ("teilrein") THEN CALL DFile(3,"TEILREIN" + _fpw$)
 IF NOT OPEN ("dokument") THEN CALL DFile(2,"OFFICE\DOKUMENT" + _fpw$)
 IF NOT OPEN ("telefon") THEN CALL DFile(2,"OFFICE\TELEFON" + _fpw$)
 IF NOT OPEN ("aktionen") THEN CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 IF NOT OPEN ("adressen") THEN CALL DFile(2,"OFFICE\adressen" + _fpw$)
 IF NOT OPEN (GAkquiDat$) THEN CALL DFile(2,"OFFICE\akquise" + _fpw$)
 REM cudo% = CodeDOK.DOKUMENT
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "ABZUGES"
 SELECT CASE art%
   CASE 1
     art$ = "Angebote"
     art1$ = "Angebot"
   CASE 4
     art$ = "AuftrÑge"
     art1$ = "Auftrag"
   CASE 5
     art$ = "Bestellungen"
     art1$ = "Bestellung"
   CASE 8
     art$ = "Preisanfragen"
     art1$ = "Preisanfrage"
 END SELECT 
 FILE "ABZUGANG"
 SELECT WHERE FILE "ABZUGANG"
 INDEX art.ABZUGANG
 SELECT FIRST 
 WHILE _formend% = 0
   DOKsub% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     MOUSE OFF 
     FILE "ABZUGANG"
     SELECT WHERE FILE "abzugang"
     OPEN FORM GPrjFORM$ + maske$
     IF fo% = 2 THEN 
       FORM 2
     END IF 
     MOUSE OFF 
     SELECT WHERE FILE "abzugang"
     SET HEADING title$ + " - offene " + art$
     befe$ = "SELECT WHERE Art.ABZUGANG = art% AND Kontrolle.ABZUGANG LIKE ~j~"
     EXECUTE befe$
     
     OLabel$ = "offene " + art$
     buttonallA$ = "Zeige alle " + art$
     loeoa1$ = "Stornieren alter " + art$
     SET STATUS "offene " + art$
     SELECT FORM FIRST 
     CALL MNoffAng()
     CALL AllAngINT()
     FORM 
     IF fo% = 2 THEN 
       SELECT FIRST FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
       SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT FORM KEY codems.abzugang FILE "master" INDEX codems.master
       FORM 2
       fo% = 0
     END IF 
     SET DISPLAY ON 
     GAppName$ = _netpath$ + "DOCP\master.pdf"
   END IF 
   MENU ON 
   FORM 
   MOUSE ON 
   FORM 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE DOKsub%
   CASE 18
      REM Sprung zum Beleg
       _cuaz% = codeaz.abzugang
       prompt$ = Auswahl$(0)
       SELECT FIRST FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
       SELECT KEY _cuaz% FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
       codems% = CodeMS.ABZUGANG
       knr% = Codeku.ABZUGANG
       CALL WriteINI(_projekt$,"LastAdress", STR$ (Codeku.ABZUGANG,"000000"))
       SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
       SELECT KEY Codeku.ABZUGANG FILE "ADRESSEN" INDEX codeku.adressen
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT KEY codems% FILE "master" INDEX codems.master
       art% = art.master
 
       IF art% = 1 THEN 
         IF NOT disabled%("ANGEBOT") THEN CALL ADRAngebot()
       END IF 
       IF art% = 4 THEN 
         IF NOT disabled%("AUFTRAG") THEN CALL ADRAuftrag()
       END IF 
       IF art% = 5 THEN 
         IF NOT disabled%("BESTELLUNG") THEN CALL ADRBestell()
       END IF 
       IF art% = 8 THEN 
         IF NOT disabled%("ANFRAGE") THEN CALL ADRAnfrage()
       END IF 
 
       SELECT FIRST FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
       SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT FORM KEY codems.abzugang FILE "master" INDEX codems.master
       fo% = 2
   CASE 17
     REM Termin-Anzeige
     codems% = codems.abzugang
     codeaq% = 0
     ok% = - 1
     IF EXISTS (codems%,codems.master) THEN 
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT KEY codems% FILE "master" INDEX codems.master
       IF codeaq.master > 0 THEN 
         codeaq% = codeaq.master
         IF EXISTS (codeaq.master,codeaq.GAkquiDat$) THEN 
         ELSE 
           ok% = 0
         END IF 
       ELSE 
         ok% = 0
       END IF 
     ELSE 
       ok% = 0
     END IF 
     IF ok% = - 1 THEN 
       CALL ABZAQRegister(codeaq%)
     ELSE 
       CALL Fehler("Es wurde kein Termineintrag gefunden!","")
     END IF 
   CASE 16
     REM Umschaltung zwischen offenen oder allen Angeboten
     loeoa1$ = "Stornieren alter " + art$
     IF buttonallA$ LIKE "Zeige alle " + art$ THEN 
       buttonallA$ = "Zeige nur offene " + art$
       OLabel$ = "alle " + art$
       MOUSE OFF 
       SELECT WHERE FILE "ABZUGANG"
       befe$ = "SELECT WHERE Art.ABZUGANG = art%"
       EXECUTE befe$
       SELECT FORM FIRST 
       FORM 
     ELSE 
       OLabel$ = "offene " + art$
       buttonallA$ = "Zeige alle " + art$
       MOUSE OFF 
       SELECT WHERE FILE "ABZUGANG"
       befe$ = "SELECT WHERE Art.ABZUGANG = art% AND Kontrolle.ABZUGANG LIKE ~j~"
       EXECUTE befe$
       SELECT FORM FIRST 
       FORM 
     END IF 
   CASE 1
     REM in EinzelAngebot
     MOUSE OFF 
     GCodeang% = codeaz.abzugang
     codems% = codems.abzugang
     SELECT FIRST FILE "abzugang" INDEX codeaz.abzugang
     SELECT KEY GCodeang% FILE "abzugang" INDEX codeaz.abzugang
     SELECT FIRST FILE "master" INDEX codems.master
     SELECT FORM KEY codems% FILE "master" INDEX codems.master
     OLabel$ = "offene " + art$
     buttonallA$ = "Zeige alle " + art$
     loeoa1$ = "Stornieren alter " + art$
     FORM 2
     OLabel$ = "offene " + art$
     buttonallA$ = "Zeige alle " + art$
     loeoa1$ = "Stornieren alter " + art$
     FORM 
     MOUSE ON 
     GCodeaq% = 0
   CASE 3
     REM nach Datum sortiert
     maske$ = "ABZUGE1"
   CASE 4
     REM nach Nummer sortiert
     maske$ = "ABZUGE2"
   CASE 5
     REM nach Netto sortiert
     maske$ = "ABZUGE3"
   CASE 6
     REM nach Brutto sortiert
     maske$ = "ABZUGE4"
   CASE 7
     REM nach Buchungstext sortiert
     maske$ = "ABZUGE5"
   CASE 8
     REM nach Termin sortiert
     maske$ = "ABZUGES"
   CASE 9
     REM gegenbuchen
       _cuaz% = codeaz.abzugang
       REQUEST "Wollen Sie den Vorgang wirklich als erfolgreich erledigt kennzeichnen?","",130,req1%
       IF req1% = 1 THEN 
             SET STATUS "Bitte warten: Gegenbuchung..."
             codems% = CodeMS.ABZUGANG
             SELECT FIRST FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
             SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
             codems% = CodeMS.ABZUGANG
             AnzGebucht.ABZUGANG = Anzahl.ABZUGANG
             DatumGebucht.ABZUGANG = TODAY 
             Kontrolle.ABZUGANG = "n"
             IF art% = 1 OR art% = 8 OR art% = 4 OR art% = 5 THEN 
               erledigt.abzugang = "J"
               erledigtDatum.abzugang = TODAY 
               gebustor.abzugang = "angenommen"
             END IF 
             CALL QuickStore("ABZUGANG")
             codems% = CodeMS.ABZUGANG
             REM SELECT FIRST FILE "MASTER" INDEX CodeMS.MASTER
             REM SELECT KEY CodeMS.ABZUGANG LOCK FILE "MASTER" INDEX CodeMS.MASTER
             art% = art.abzugang
             IF art% = 1 OR art% = 8 OR art% = 4 OR art% = 5 THEN 
               codedok% = codedok.master
               IF EXISTS (codems%,codems.master) THEN 
                 SELECT FIRST FILE "master" INDEX codems.master
                 SELECT KEY codems% LOCK FILE "master" INDEX codems.master
                 erledigt.master = "J"
                 erledigtDatum.master = TODAY 
                 gebustor.master = "angenommen"
                 STORE FILE "master"
               END IF 
               IF EXISTS (codems%,codems.GAkquiDat$) THEN 
                 SELECT FIRST FILE GAkquiDat$ INDEX codedok.GAkquiDat$
                 SELECT KEY codems% LOCK FILE GAkquiDat$ INDEX codems.GAkquiDat$
                 WHILE NOT EOF (GAkquiDat$) AND codems.GAkquiDat$ = codems%
                   erledigt_termin.GAkquiDat$ = "j"
                   notiz.GAkquiDat$ = notiz.GAkquiDat$ + "    " + DATE$ ( TODAY ,"0d.mm.yyyy") + art1$ + " wurde durch Buchung automatisch erledigt!(" + nachname.supervis + ")"
                   CALL QuickStore(GAkquiDat$)
                   SELECT NEXT LOCK FILE GAkquiDat$ INDEX codems.GAkquiDat$
                 WEND 
               END IF 
             END IF 
         SELECT WHERE FILE "abzugang"
         FILE "abzugang"
         INDEX art.abzugang
         befe$ = "SELECT WHERE Art.ABZUGANG = art% AND Kontrolle.ABZUGANG LIKE ~j~"
         EXECUTE befe$
         FORM 1
         SELECT FORM FIRST 
         FORM 
       END IF 
   CASE 10
     REM stornieren
       _cuaz% = codeaz.abzugang
       REQUEST "Wollen Sie den Vorgang wirklich stornieren?","",130,req1%
       IF req1% = 1 THEN 
         SET STATUS "Bitte warten: Stornierung..."
             FILE "abzugang"
             SELECT FIRST FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
             SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
             AnzGebucht.ABZUGANG = 0
             DatumGebucht.ABZUGANG = TODAY 
             Kontrolle.ABZUGANG = "n"
             REM Termin.ABZUGANG = 0
             Buchungstext.ABZUGANG = Buchungstext.ABZUGANG + " [STORNO]"
             CALL QuickStore("ABZUGANG")
             codems% = CodeMS.ABZUGANG
             SELECT KEY CodeMS.ABZUGANG LOCK FILE "MASTER" INDEX CodeMS.MASTER
             IF FOUND ("MASTER") THEN 
               FILE "master"
               StatusM.MASTER = "s"
               erledigt.master = "J"
               erledigtdatum.master = TODAY 
               IF art.master = 1 THEN 
                 gebustor.master = "abgelehnt"
               END IF 
               CALL QuickStore("MASTER")
               art% = Art.master
               codeaq% = codeaq.master
               codedok% = codedok.master
               IF EXISTS (codeaq%,codeaq.GAkquiDat$) THEN 
                 SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
                 erledigt_termin.GAkquiDat$ = "j"
                 notiz.GAkquiDat$ = notiz.GAkquiDat$ + "    " + DATE$ ( TODAY ,"0d.mm.yyyy") + "-" + TIME$ ( NOW ,"hh:mm") + art1$ + " wurde durch Stornierung automatisch erledigt!(" + nachname.supervis + ")"
                 CALL QuickStore(GAkquiDat$)
               END IF 
               IF EXISTS (codedok%,codedok.GAkquiDat$) THEN 
                 SELECT KEY codedok% LOCK FILE GAkquiDat$ INDEX codedok.GAkquiDat$
                 erledigt_termin.GAkquiDat$ = "j"
                 notiz.GAkquiDat$ = notiz.GAkquiDat$ + "    " + DATE$ ( TODAY ,"0d.mm.yyyy") + art1$ + " wurde durch Stornierung automatisch erledigt!(" + nachname.supervis + ")"
                 CALL QuickStore(GAkquiDat$)
               END IF 
             END IF 
         SELECT WHERE FILE "abzugang"
         FILE "abzugang"
         INDEX art.abzugang
         befe$ = "SELECT WHERE Art.ABZUGANG = art% AND Kontrolle.ABZUGANG LIKE ~j~"
         EXECUTE befe$
         FORM 1
         SELECT FORM FIRST 
         FORM 
       END IF 
   CASE 11
       REM öbersicht??
       _cuaz% = codeaz.abzugang
       CALL druoffang(art%)
       SELECT FIRST FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
       SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT FORM KEY codems.abzugang FILE "master" INDEX codems.master
       FORM 
   CASE 12
     REM Ausgabe
           _cuaz% = codeaz.abzugang
           SELECT FIRST FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
           SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
           codems% = CodeMS.abzugang
           SELECT FIRST FILE "MASTER" INDEX CodeMS.MASTER
           SELECT KEY CodeMS.ABZUGANG LOCK FILE "MASTER" INDEX CodeMS.MASTER
           IF FOUND ("MASTER") THEN 
              FILE "master"
              MSArt$ = "Angebote"
              SFORM$ = "UNI"
              SELECT KEY codems% LOCK FILE "master" INDEX codems.master
              CALL MSCHRabattProz()
              CALL MSCHRabatt()
              noedit$ = "j"
              REM CALL MSDR(CodeMS.master,1)
              CALL MSDrucken(codems.master)
              FILE "abzugang"
           END IF 
           SELECT FIRST FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
           SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
           SELECT FIRST FILE "master" INDEX codems.master
           SELECT FORM KEY codems.abzugang FILE "master" INDEX codems.master
           FORM 
   CASE 13
     REM Sprung zur Adresse
       _cuaz% = codeaz.abzugang
       prompt$ = Auswahl$(0)
       SELECT FIRST FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
       SELECT KEY _cuaz% FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
       codems% = CodeMS.ABZUGANG
       knr% = Codeku.ABZUGANG
       CALL WriteINI(_projekt$,"LastAdress", STR$ (Codeku.ABZUGANG,"000000"))
       SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
       SELECT KEY Codeku.ABZUGANG FILE "ADRESSEN" INDEX codeku.adressen
       CALL ADRESSEN()
       SELECT FIRST FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
       SELECT KEY _cuaz% LOCK FILE "ABZUGANG" INDEX CodeAZ.ABZUGANG
       SELECT FIRST FILE "master" INDEX codems.master
       SELECT FORM KEY codems.abzugang FILE "master" INDEX codems.master
       fo% = 2
   CASE 14
     REM Export nach excel
     OPEN FIELDS Datum,Termin,Nummer,VKNettoEu,VKBruttoEu,Buchungstext
       IF EXISTS (GMACodeDir$ + "OpenAng.xls") THEN 
         DELETE GMACodeDir$ + "OpenAng.xls"
       END IF 
       DIRECTORY GMACodeDir$:REM     
       ON ERROR GOTO eopenoffer2101071
       Superbase.Converters.SBF.SourceFormat = "Superbase"
       Superbase.Converters.SBF.SourceFile = "ABZUGANG"
       Superbase.Converters.SBF.Descending = 0
       Superbase.Converters.SBF.Merge = 0
       Superbase.Converters.SBF.LogErrors = 0
       Superbase.Converters.SBF.MultiResponse = 0
       Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
       Superbase.Converters.XLS.DestFile = GMACodeDir$ + "OpenAng.XLS"
       Superbase.Converters.XLS.StartRow = 2
       Superbase.Converters.XLS.StartCol = 1
       Superbase.Converters.XLS.EndRow = - 1
       Superbase.Converters.XLS.EndCol = - 1
       Superbase.Converters.XLS.UseLabels = - 1
       Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
       WAIT FOR 3
       CALL Fehler("Excel-Datei fÅr offene Angebote wurde erstellt!",GMACodeDir$ + "OpenAng.XLS")
       IF EXISTS (GMACodeDir$ + "OpenAng.xls") THEN 
         a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "OpenAng.XLS","","",1)
       END IF 
       GOTO eopenoffer2101072
eopenoffer2101071: 
       CALL Fehler("Fehler beim Erzeugen der Datei: " + GMACodeDir$ + "OpenAng.XLS","PrÅfen Sie, ob diese Datei in MS Excel geîffnet ist, wenn ja, dann schlie·en!")
eopenoffer2101072: 
       ON ERROR GOTO ErrorHandler
     CASE 15
       REM stornieren alter Angebote bis zu einem bestimmten Datum
     REM stornieren
       _cuaz% = codeaz.abzugang



anf050120103: 
       Superbase.Dialogs.Add("Datumse")
       SET dlg = Superbase.Dialogs.Datumse
       dlg.Move(0,0,134,73)
       dlg.Caption = "Datumseingabe"
       dlg.FontName = "MS Sans Serif"
       dlg.FontSize = 8
 
       SET control = dlg.Add("DialogLabel1","DialogLabel")
       control.Move(2,4,122,20)
       control.Caption = "Geben Sie das Datum ein, bis zu dem die EintrÑge storniert werden sollen:"
 
       SET control = dlg.Add("DialogTextBox1","DialogTextBox")
       control.Move(34,28,44,12)
       control.MaxLength = 10
       control.TextBinding = "DatLoe$"
 

       SET control = dlg.Add("DialogLabel2","DialogLabel")
       control.Move(1,30,25,13)
       control.Caption = "Datum"
 
       SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
       control.Move(21,56,40,14)
       control.Default = 1
       control.Caption = "OK"
       control.ReturnValue = 1
 
 
       SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
       control.Move(64,56,50,14)
       control.Caption = "&Abbruch"
       control.ReturnValue = 0
       control.Cancel = 1
 
       DIALOG "Datumse",reqzu%
       REMOVE DIALOG ALL 

       IF reqzu% = 1 AND LTRIM$ (DatLoe$) <> "" THEN 
         ON ERROR GOTO anf050120101
         datsto% = DAYS (DatLoe$)
         GOTO anf050120102
anf050120101: 
         CALL Fehler("Falsche Datumseingabe!","Bitte geben Sie das Datum in der Form 0d.mm.yyyy ein!")
         GOTO anf050120103
anf050120102: 
       ELSE 
         CALL Fehler("Das Stornieren wurde abgebrochen (eventuell weil kein Datum eingegeben wurde)","")
         GOTO anf050120104
       END IF 

       ON ERROR GOTO ErrorHandler
       vara$ = "Wollen Sie alle " + art$ + " Ñlter " + DatLoe$ + " stornieren?"
       REQUEST vara$,"",130,req1%
       IF req1% = 0 THEN 
         CALL Fehler("Das Stornieren wurde abgebrochen!","")
       END IF 
       IF req1% = 1 THEN 
         REM datsto% = DAYS ("1.1.2005")
         SELECT FIRST LOCK FILE "abzugang" INDEX codeaz.abzugang
         i% = 0
         j% = RECCOUNT ("abzugang")
         l% = 0
         WHILE NOT EOF ("abzugang")
             i% = i% + 1
             MOUSE OFF 
             _cuaz% = codeaz.abzugang
             SET STATUS STR$ (i%,",999999") + "/gesamt: " + STR$ (j%,",999999") + "/ storniert: " + STR$ (l%,",999999") + "  Bitte warten: Stornierung..."
             IF art.master <> art% OR Datum.abzugang > datsto% THEN GOTO wei181220071
             l% = l% + 1
             AnzGebucht.ABZUGANG = 0
             DatumGebucht.ABZUGANG = TODAY 
             Kontrolle.ABZUGANG = "n"
             REM Termin.ABZUGANG = 0
             Buchungstext.ABZUGANG = Buchungstext.ABZUGANG + " [STORNO]"
             CALL QuickStore("ABZUGANG")
             MOUSE OFF 
             codems% = CodeMS.ABZUGANG
             SELECT KEY CodeMS.ABZUGANG LOCK FILE "MASTER" INDEX CodeMS.MASTER
             IF FOUND ("MASTER") THEN 
               FILE "master"
               StatusM.MASTER = "s"
               erledigt.master = "J"
               erledigtdatum.master = TODAY 
               IF art.master = 1 THEN 
                 gebustor.master = "abgelehnt"
               END IF 
               CALL QuickStore("MASTER")
               MOUSE OFF 
               art% = Art.master
               codeaq% = codeaq.master
               codedok% = codedok.master
               IF EXISTS (codeaq%,codeaq.GAkquiDat$) THEN 
                 SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
                 erledigt_termin.GAkquiDat$ = "j"
                 notiz.GAkquiDat$ = notiz.GAkquiDat$ + "    " + DATE$ ( TODAY ,"0d.mm.yyyy") + "-" + TIME$ ( NOW ,"hh:mm") + art1$ + " wurde durch Stornierung automatisch erledigt!(" + nachname.supervis + ")"
                 CALL QuickStore(GAkquiDat$)
                 MOUSE OFF 
               END IF 
               IF EXISTS (codedok%,codedok.GAkquiDat$) THEN 
                 SELECT KEY codedok% LOCK FILE GAkquiDat$ INDEX codedok.GAkquiDat$
                 erledigt_termin.GAkquiDat$ = "j"
                 notiz.GAkquiDat$ = notiz.GAkquiDat$ + "    " + DATE$ ( TODAY ,"0d.mm.yyyy") + art1$ + " wurde durch Stornierung automatisch erledigt!(" + nachname.supervis + ")"
                 CALL QuickStore(GAkquiDat$)
                 MOUSE OFF 
               END IF 
             END IF 
wei181220071: 
             SELECT NEXT LOCK FILE "abzugang" INDEX codeaz.abzugang
           WEND 
         CALL Fehler("Es wurden die entsprechenden " + art$,"storniert, also aus der öberwachungsliste gelîscht!")
         SELECT WHERE FILE "abzugang"
         FILE "abzugang"
         INDEX art.abzugang
         befe$ = "SELECT WHERE Art.ABZUGANG = art% AND Kontrolle.ABZUGANG LIKE ~j~"
         EXECUTE befe$
         FORM 1
         SELECT FORM FIRST 
         FORM 
       END IF 
   END SELECT 
 WEND 
anf050120104: 
 _formend% = 0
 IF GCODieRuf% <> 0 OR GCODieRuf1% <> 0 OR GCODieRuf2% <> 0 THEN 
   ret% = CALL ("_SearchClose")
 END IF 
 GCODieRuf% = 0
 GCODieRuf1% = 0
 GCODieRuf2% = 0
 SELECT WHERE FILE "abzugang"
 END SUB 
 
 
SUB MNoffAng()
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
SUB AllAngINT()
 REM SELECT FORM KEY knr% FILE "Adressen" INDEX codeku.adressen
 REM SELECT FORM KEY knr% FILE GAkquiDat$ INDEX codeku.GAkquiDat$
 END SUB 
 
 
SUB druoffang(art%)
       REM art% = 10 
   SELECT CASE art%
     CASE 1
     art$ = "Angebote"
     art1$ = "Angebot"
     CASE 4
     art$ = "AuftrÑge"
     art1$ = "Auftrag"
     CASE 8
     art$ = "Preisanfragen"
     art1$ = "Preisanfrage"
   END SELECT 
       CALL DFile(2,"OFFICE\adressen" + _fpw$)
       CALL PRep("OFFEN")
       Ueberschrift$ = "öbersicht Åber offene " + art$
       HEADING 
         SET REPORT PAGE "H_PAGE"
         OUTPUT REPORT PAGE 
       END HEADING 
       FOOTING 1
         SET REPORT PAGE "F_PAGE"
         OUTPUT REPORT PAGE 
       END FOOTING 
       AFTER SELECT 
         SET REPORT PAGE "F_SELECT"
         OUTPUT REPORT PAGE 
       END SELECT 
       SET QUERY OFF 
       SET QUERY LOCK OFF 
       MOUSE OFF 
       ON ERROR GOTO ErrOFF100120071
       SELECT ;
         WHERE CodeKU.ABZUGANG = CodeKU.ADRESSEN AND Art.ABZUGANG = art% AND Kontrolle.ABZUGANG LIKE "j"
         ORDER REPORT Termin.ABZUGANG
         TO ASK 
         END SELECT 
ErrOFF100120071: 
       ON ERROR GOTO ErrorHandler 
 END SUB 




SUB MastNoteBig(fnam$,dd$)
 REM IF disabled%("STAMMBLATT") THEN GOTO stend120620051
   notizn$ = fnam$ + "." + dd$
   LÑnge$ = FIELDINFO$ (notizn$,4)
   lÑnge% = VAL (LÑnge$)
   inh$ = notizn$$
   SET EDIT SELECT OFF 
   SET EDIT SELECT ON 
   nr$ = Nummer.dd$
   CREATE DIALOG GTelDat$,0,0,443,253,fname$,"MS Sans Serif",8
   ADD DIALOG GTelDat$,5,5,6,56,10,0,"Nummer:"
   ADD DIALOG GTelDat$,5,62,6,380,9,128,nr$
   ADD DIALOG GTelDat$,5,5,22,165,10,0,""
   REM ADD DIALOG GTelDat$,6,5,32,430,200,4,0,inh$
   ADD DIALOG GTelDat$,6,5,32,430,200,4,3,inh$,lÑnge%
   ADD DIALOG GTelDat$,1,170,235,55,15,1,"&OK",1,1
   ADD DIALOG GTelDat$,1,237,235,55,15,0,"&Drucken",2,2
   SET EDIT SELECT OFF 
   DIALOG GTelDat$,req%
   SET EDIT SELECT OFF 
   REMOVE DIALOG ALL 
   IF inh$ <> notizn$$ THEN 
   END IF 
   IF req% = 2 THEN 
     PRINT ;
     ? inh$
     DISPLAY ;
   END IF 
stend120620051: 
   SET EDIT SELECT ON 
 END SUB 
 
 
SUB KuPreisXLS()
 codeku% = codeku.adressen
 CALL DFile(3,"AKUPREIS" + _fpw$)
 CALL DFile(3,"ARTIKEL" + _fpw$)
 CALL DFile(3,"AKUPXLS" + _fpw$)
 IF RECCOUNT ("AKUPXLS") > 0 THEN 
   REMOVE FROM FILE "AKUPXLS"
 END IF 
 FILE "artikel"
 INDEX codear.artikel
 FILE "akupreis"
 INDEX codeku.akupreis
 SELECT FIRST FILE "akupreis" INDEX codeku.akupreis
 SELECT KEY codeku% FILE "akupreis" INDEX codeku.akupreis
 MOUSE OFF 
 WHILE NOT EOF ("akupreis") AND codeku.akupreis = codeku%
   codear% = codear.akupreis
   SELECT FIRST FILE "artikel" INDEX codear.artikel
   SELECT KEY codear% FILE "artikel" INDEX codear.artikel
   BLANK FILE "akupxls"
   Netto.akupxls = netto.akupreis
   brutto.akupxls = Brutto.akupreis
   Kunde.akupxls = Name.akupreis
   datum.akupxls = Datum.akupreis
   Artikel.akupxls = Bezeichnung.artikel
   Artikelnummer.akupxls = Artikelnummer.artikel
   Beschreibung.akupxls = Beschreibung.artikel
   STORE FILE "akupxls"

   SELECT NEXT FILE "akupreis" INDEX codeku.akupreis
 WEND 
 IF EXISTS (_ppath$ + "akupxls.XLS") THEN DELETE _ppath$ + "akupxls.XLS"
 FILE "akupxls"
 INDEX artikel.akupxls
 SELECT FIRST 
 OPEN FIELDS Kunde,Artikel,Artikelnummer,Beschreibung,Netto,Brutto:VIEW 
 SET INDEX "Artikel":REM                                       ExportFile
 INDEX Artikel
 WAIT FOR 1
 Superbase.Converters.SBF.SourceFormat = "Superbase"
 Superbase.Converters.SBF.SourceFile = "AKUPXLS"
 Superbase.Converters.SBF.Descending = 0
 Superbase.Converters.SBF.Merge = 0
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
 Superbase.Converters.XLS.DestFile = _ppath$ + "akupxls.XLS"
 Superbase.Converters.XLS.StartRow = 2
 Superbase.Converters.XLS.StartCol = 1
 Superbase.Converters.XLS.EndRow = - 1
 Superbase.Converters.XLS.EndCol = - 1
 Superbase.Converters.XLS.UseLabels = - 1
 Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
 CALL Fehler("Die Kundenpreisliste finden Sie unter: " + _ppath$ + "akupxls.XLS","")
 IF EXISTS (_ppath$ + "akupxls.XLS") THEN 
   a% = CALL ("ShellExecute",0,"open",_ppath$ + "akupxls.XLS","","",1)
 END IF 


 END SUB 


SUB ABZStore()
 IF MOD ("abzugang") THEN 
   STORE FILE "abzugang"
         SELECT FIRST FILE "Supervis" INDEX codema.supervis
         SELECT KEY GMACodeMA% FILE "Supervis" INDEX codema.supervis
         codeaz% = codeaz.abzugang
         codems% = codems.abzugang
         SELECT FIRST FILE "abzugang" INDEX codeaz.abzugang
         SELECT KEY codeaz% LOCK FILE "abzugang" INDEX codeaz.abzugang
         SELECT FIRST FILE "master" INDEX codems.master
         SELECT KEY codems% FILE "master" INDEX codems.master
         codeaq% = codeaq.master
         IF codeaq% > 0 AND EXISTS (codeaq%,codeaq.GAkquiDat$) THEN 
           REQUEST "Kommentar im zugehîrigen Termin eintragen?","",130,req%
           IF req% <> 1 THEN END SUB 
           SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           ON ERROR GOTO w080820071b
           IF kuerzel.supervis <> "" THEN 
             na$ = " - " + kuerzel.supervis
           ELSE 
w080820071b: 
             na$ = " - " + name.supervis
           END IF 
           ON ERROR GOTO ErrorHandler
           temptxt$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh.mm") + " " + kommentar.abzugang + na$
           ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + temptxt$
           STORE FILE GAkquiDat$
           CALL ABZAQRegister(codeaq%)
         END IF 
 END IF 

 END SUB 

