 CALL main()
 REM *****************************************************************************************************************
 REM                 EMAIL Form
 REM *****************************************************************************************************************
 
SUB EMAILform()
 REM knr% = Codeku.adressen
 REM IF disabled%("DOKUMENT") THEN END SUB 
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 CALL DFile(2,"OFFICE\email" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 REM cudo% = CodeDOK.DOKUMENT
 REM knr% = Codeku.adressen
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "EMAIL"
 IF ProjectJN$ = "TRUE" THEN maske$ = "EMAIL"
 
 FILE "EMAIL"
 SELECT WHERE FILE "EMAIL"
 INDEX codeku.EMAIL
 SELECT FIRST 
 WHILE _formend% = 0
   AQsub% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     FILE "email"
     OPEN FORM GOFFForm$ + maske$
     SET STATUS "Emailenverwaltung"
     CALL MNEMAIL()
     CALL EMAILINT()
     FORM 
     SET DISPLAY ON 
     GAppName$ = _netpath$ + "DOCP\dokument.pdf"
   END IF 
   MENU ON 
   FORM 
   MOUSE ON 
   FORM 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE AQsub%
   CASE 1
     REM Neu
     BLANK FILE "email"
     codekey.email = SER ("email",1)
     EMAILBETREFF.email = "NEU " + DATE$ ( TODAY ,"0d.mm.yyyy")
     STORE FILE "email"
     CALL EMAILINT()
     FORM 
   CASE 2
     REM gehe zu einzelne email
     codekey% = codekey.email
     SELECT FIRST FILE "email" INDEX codekey.email
     SELECT KEY codekey% LOCK FILE "email" INDEX codekey.email
     FORM 2
   CASE 3
     codekey% = codekey.email
     IF MOD ("email") OR NEW ("email") THEN STORE FILE "email"
     SELECT FIRST FILE "email" INDEX codekey.email
     SELECT KEY codekey% LOCK FILE "email" INDEX codekey.email
     CALL EMAILSerSend(CodeKey%)
   CASE 99
     ENTER emailbetreff.email,0
   END SELECT 
 WEND 
 _formend% = 0
 REM IF FileChanged%("email") = 1 THEN CALL FStore("email")
 SELECT WHERE FILE "email"
 END SUB 
 
 
SUB MNEMAIL()
 CALL MNProgramm()
 MENU 2,0,1,"&Option","",""
 MENU 2,1,1,"aus Suchliste auswÑhlen,F7","DokKurzSuche",""
 CALL MNHilfe(3)
 END SUB 
 
SUB EMAILINT()
 REM SELECT FORM KEY knr% FILE "Adressen" INDEX codeku.adressen
 REM SELECT FORM KEY knr% FILE "email" INDEX codeku.email
 SELECT FORM FIRST FILE "email"
 END SUB 
 
 
 
SUB EMAILATTE(nr%)
 codekey% = codekey.email
 IF MOD ("email") OR NEW ("email") THEN STORE FILE "email"
 SELECT FIRST FILE "email" INDEX codekey.email
 SELECT KEY codekey% LOCK FILE "email" INDEX codekey.email
 REQUEST "Datei auswÑhlen","",26,req%,textvorlage$
 IF req% = 1 THEN 
   a% = CALL ("_SBFileExists",textvorlage$)
   IF a% = - 1 THEN 
     REM IF EXISTS (textvorlage$) THEN 
     SELECT KEY codekey% LOCK FILE "EMAIL" INDEX codekey.EMAIL
     feld$ = "EMAILATT" + LTRIM$ ( STR$ (nr%,"99")) + ".EMAIL"
     feld$$ = textvorlage$
     CALL QuickStore("EMAIL")
   END IF 
 END IF 
 FORM 
 END SUB 
 
 
 
SUB EMAILSerSend(CodeKey%)
 IF MOD ("email") OR NEW ("email") THEN STORE FILE "email"
 IF GCODie% <> - 1 THEN 
   CALL Fehler("EMAIL - Versandt wurde nicht konfiguriert!","")
   GOTO ae120520031
 END IF 
 GAkquiDat$ = GAkquiDat$
 GTELDAT$ = "Telefon"
  CALL DFile(2,"OFFICE\adressen" + _fpw$)
  CALL DFile(2,"OFFICE\akquise" + _fpw$)
  CALL DFile(2,"OFFICE\dokument" + _fpw$)
  CALL DFile(2,"OFFICE\Telefon" + _fpw$)
  
  ON ERROR GOTO c10032005
  zieldir$ = _netpath$ + "EMAIL\"
  userfileneu$ = zieldir$ + STR$ (codekey%,"000000") + ".sbf"
  uneu$ = zieldir$ + STR$ (codekey%,"000000")
  IF Dateiname.email = "" AND NOT EXISTS (userfileneu$) THEN 
    CALL Fehler("Es lÑ·t sich nicht mehr feststellen, mit welcher Adressauswahl diese Serienemail ursprÅnglich versandt wurde!","Falls Sie soeben eine neue Adressauswahl getroffen haben, kann diese benutzt werden!")
    REQUEST "Neue Auswahl benutzen?","",135,req%
      IF req% = 1 THEN 
        IF EXISTS (userfileneu$) THEN 
          DELETE (uneu$ + ".*")
        END IF 
      END IF 
  ELSE 
    IF Dateiname.email = "" AND EXISTS (userfileneu$) THEN 
      CALL Fehler("Diese Serienemail wurde ursprÅnglich versandt mit: " + userfileneu$,"Falls Sie soeben eine neue Adressauswahl getroffen haben, kann diese benutzt werden!")
      REQUEST "Neue Auswahl benutzen?","",135,req%
      IF req% = 1 THEN 
        IF EXISTS (userfileneu$) THEN 
          DELETE (uneu$ + ".*")
        END IF 
      END IF 
    ELSE 
      CALL Fehler("Diese Serienemail wurde ursprÅnglich versandt mit: " + Dateiname.email,"Falls Sie soeben eine neue Adressauswahl getroffen haben, kann diese benutzt werden!")
      REQUEST "Neue Auswahl benutzen?","",135,req%
      IF req% = 1 THEN 
        IF EXISTS (userfileneu$) THEN 
          DELETE (uneu$ + ".*")
        END IF 
      END IF 
    END IF 
  END IF 
  

  
  un$ = STR$ (codekey%,"000000")
  MAKE DIRECTORY _netpath$ + "EMAIL"
c10032005: 
  ON ERROR GOTO ErrorHandler
  REM CALL Fehler("alte userdatei " + userfile$,"neue Datei " + uneu$)
  IF NOT EXISTS (userfileneu$) THEN 
    ddd$ = FILE 
    FILE userfile$
    REORGANIZE FILE userfile$ TO userfileneu$
    CLOSE FILE userfile$
    FILE ddd$
  END IF 
  CALL DFile(2,"EMAIL\" + un$)
  FILE un$
  INDEX codeku
  SELECT FIRST 
  FILE "email"
  REM FILE un$
  userfile$ = un$
 codemaold% = codema.supervis
 codema% = GMAcodema%
 IF cudo% < 1 THEN 
   IF codedok.email < 1 THEN 
     cudo% = SER ("DOKUMENT",1)
   ELSE 
     cudo% = codedok.email
   END IF 
 END IF 
 SELECT FIRST FILE "Supervis" INDEX codema.supervis
 SELECT KEY codema% FILE "Supervis" INDEX codema.supervis
 REM SELECT KEY codeku.GAkquiDat$ FILE GADRDat$ INDEX codeku.GADRDat$
 SELECT FIRST FILE "EMAIL" INDEX codekey.EMAIL
 SELECT KEY codekey% LOCK FILE "EMAIL" INDEX codekey.EMAIL
 codedok.email = cudo%
 Dateiname.email = userfileneu$
 
 datei$ = GMACodeDir$ + "codietes.ini"
 IF EXISTS (datei$) THEN 
   ON ERROR GOTO amas070520031
   DELETE datei$
   GOTO amas070520032
amas070520031: 
   IF schalter% <> 0 THEN CALL fehler("Es konnte die temporÑre Datei " + datei$ + " nicht gelîscht werden, bitte prÅfen Sie, ob die Datei geîffnet ist und schlie·en Sie diese!,"")
amas070520032: 
   ON ERROR GOTO ErrorHandler
 END IF 
 datei1$ = GMACodeDir$ + "codietes.txt"
 IF EXISTS (datei1$) THEN 
   ON ERROR GOTO amas070520035
   DELETE datei1$
   GOTO amas070520036
amas070520035: 
   IF schalter% <> 0 THEN CALL fehler("Es konnte die temporÑre Datei " + datei1$ + " nicht gelîscht werden, bitte prÅfen Sie, ob die Datei geîffnet ist und schlie·en Sie diese!,"")
amas070520036: 
   ON ERROR GOTO ErrorHandler
 END IF 
 OPEN datei$ FOR OUTPUT 
 CLOSE OUTPUT 
 IF EmailShost.supervis <> "" THEN 
   UserID$ = EMAILSUserID.supervis
   AFirma$ = FN ansi(EMAILSAFirma.supervis)
   AName$ = FN ansi(EMAILSAName.supervis)
   ANUmmer$ = EMAILNummer.supervis
   REM BCC$ = EMAILSKopie.supervis
   Sen$ = EMAILSKopie.supervis
   Hpop3$ = ""
   HPPort$ = ""
   PUID$ = ""
   PJN$ = EMAILPOP3JN.supervis
   IF EMAILPOP3JN.supervis = "TRUE" THEN 
     Hpop3$ = EMAILPHost.supervis
     HPPort$ = LTRIM$ ( STR$ (EMAILPPort.supervis,"999999"))
     IF HPPort$ = "" THEN HPPort$ = "110"
     PUID$ = EmailPUserID.supervis
     Ppassw$ = EMAILPPasww.supervis
   END IF 
   port$ = LTRIM$ ( STR$ (EMAILSPort.supervis,"999999"))
   IF port$ = "" THEN port$ = "25"
   IF EMAILSNummer.supervis <> "" THEN 
     Bersend$ = EMAILSNummer.supervis
   ELSE 
     Bersend$ = EMAILNummer.supervis
   END IF 
   Bersend1$ = EMAILSNummer1.supervis
     Text1$ = FN ansi(EMAILText1.supervis)
     Text2$ = FN ansi(EMAILText2.supervis)
   END IF 
   BAnrede$ = ""
   alltxt$ = GMACodeDir$ + "codietes.ini"
   TOM$ = EMAILTO.GAkquiDat$
   Betreff$ = FN ansi(EMAILBETREFF.email)
   senber$ = UCASE$ (EMAILSErg.supervis)
   Host$ = EMAILShost.supervis
   CALL WriteINIDes("EMAILSERVER","HOST",EMAILShost.supervis,datei$)
   CALL WriteINIDes("EMAILSERVER","PORT",port$,datei$)
   CALL WriteINIDes("EMAILSERVER","USERID",UserID$,datei$)
   CALL WriteINIDes("EMAILSERVER","ABSFirma",AFirma$,datei$)
   CALL WriteINIDes("EMAILSERVER","ABSName",AName$,datei$)
   CALL WriteINIDes("EMAILSERVER","ABSEMAIL",ANummer$,datei$)
   CALL WriteINIDes("EMAILSERVER","KOPIEANABSENDER",Sen$,datei$)
   CALL WriteINIDes("EMAILSERVER","BerSendenummer",BerSend$,datei$)
   CALL WriteINIDes("EMAILSERVER","BerSendenummer1",BerSend1$,datei$)
   
   CALL WriteINIDes("EMAILSERVER","SENDEBERICHT",senber$,datei$)
   CALL WriteINIDes("EMAILSERVER","Betreff",Betreff$,datei$)
 
     Gbodytxt$ = _netpath$ + STR$ (GMACodema%,"000000") + ".txt"
     sendtxt$ = _netpath$ + STR$ (GMACodema%,"000000") + "-1.txt"
     IF EXISTS (Gbodytxt$) THEN DELETE Gbodytxt$
     IF EXISTS (sendtxt$) THEN DELETE sendtxt$
     REM CALL Fehler("EMAIL1","")
     REM X%% = MK_Init%%()
     X%% = MK_SendServer%%(Host$,port$,UserID$,Ppassw$,SendServer$)
     REM Absender
     X%% = MK_SendFrom%%(ANUmmer$,SendFrom$)
     REM antworten an
     X%% = MK_SendReply%%(ANUmmer$,SendReply$)
     REM 0=klein,1=gro·
     X%% = MK_Priority%%(1,Priority$)
     TOMold$ = ""
     IF TOM$ <> "" THEN 
       X%% = MK_SendTo%%(TOM$,SendTo$)
     END IF 
     TOMold$ = TOM$
     X%% = MK_XHeader%%("xxPower mailer",SendHeader$)
     REM GMailBetreff$ = FN ANSI(Betreff$)
     REM X%% = MK_Subject%%(GMailBetreff$,SendSubject$)
     REM emailtext$ = emailtext.email + emailtext1.email

 
   REM CALL WriteINIDes("EMAILSERVER","TO",TOM$,datei$)
   IF InternetupdJN.email <> "j" THEN 
     GMailBetreff$ = FN ANSI(Betreff$)
     X%% = MK_Subject%%(GMailBetreff$,SendSubject$)
     CALL MK_WriteBodyN(emailtext.email)
     CALL MK_WriteBodyN(emailtext1.email)
     OPEN datei1$ FOR OUTPUT 
     ? FN ansi(emailtext.email)
     ? FN ansi(emailtext1.email)
     CLOSE OUTPUT 
   ELSE 
     GMailBetreff$ = "CODie-SmartPROVIS Update"
     t1t$ = "Sehr geehrte Damen und Herren," + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
     t1t$ = t1t$ + "anbei Åbersenden wir Ihnen die Zugangsdaten fÅr Ihr Update des Programmes SmartPROVIS" + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
     t1t$ = t1t$ + "Internetadresse: http://www.codie.com" + CHR$ (13) + CHR$ (10)
     t1t$ = t1t$ + "Benutzername: " + Internetname.adressen + CHR$ (13) + CHR$ (10)
     t1t$ = t1t$ + "Passwort: " + Internetpasswo.adressen + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
     t1t$ = t1t$ + "Bitte denken an eine komplette Datensicherung des gesamten CODie-Ordners !!!!!!!!!" + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
     t1t$ = t1t$ + EMAILText.email
     t1t$ = t1t$ + EMAILText1.email
     t1t$ = t1t$ + EMAILText1.supervis + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
     t1t$ = t1t$ + EMAILText2.supervis
     emailtext$ = t1t$
     IF EXISTS (GBodytxt$) THEN 
       DELETE GBodytxt$
     END IF 
     X%% = MK_Subject%%(GMailBetreff$,SendSubject$)
     CALL MK_WriteBodyN(emailtext$)

     OPEN datei1$ FOR OUTPUT 
     ? FN ansi(emailtext$)
     CLOSE OUTPUT 
     REM OPEN datei1$ FOR OUTPUT 
     REM ? FN ansi( LEFT$ (emailtext.email,2000))
     REM ? FN ansi( MID$ (emailtext.email,2000))
      REM ? FN ansi( LEFT$ (emailtext1.email,2000))
     REM ? FN ansi( MID$ (emailtext1.email,2000))
     REM CLOSE OUTPUT 
     GOTO w270420071
   END IF 

 
   schalter$ = STR$ (schalter%,"0")


     sen$ = "TRUE"
     bccx$ = ""
     IF Sen$ LIKE "TRUE" THEN 
       bccx$ = ANUmmer$ + ","
     END IF 
     ccx$ = ""
   IF emailcc.GAkquiDat$ <> "" THEN 
     ccx$ = emailcc.GAkquiDat$
     X%% = MK_SendCC%%(emailcc.GAkquiDat$,SendCC$)
     pos% = INSTR (emailcc.GAkquiDat$,":")
     IF pos% > 0 THEN 
       laeng% = LEN (emailcc.GAkquiDat$)
       j% = 0
       FOR i% = 1 TO laeng%
         posold% = pos%
         cc$ = MID$ (emailcc.GAkquiDat$,i%,pos% - i%)
         pos% = INSTR (posold% + 1,emailcc.GAkquiDat$,":")
 
         IF pos% > 0 THEN 
           i% = posold%
         ELSE 
           i% = laeng% + 1
         END IF 
         REM CALL WriteINIDes("CC","Z" + LTRIM$ ( STR$ (j%,"999")), FN ansi(CC$),datei$)
         
         j% = j% + 1
       NEXT i%
     ELSE 
       CALL WriteINIDes("CC","Z0", FN ansi(emailcc.GAkquiDat$),datei$)
     END IF 
   END IF 
   IF emailbcc.GAkquiDat$ <> "" OR bccx$ <> "" THEN 
     bccx$ = bccx$ + emailbcc.GAkquiDat$
     X%% = MK_SendBCC%%(bccx$,SendBCC$)
     pos% = INSTR (emailbcc.GAkquiDat$,":")
     IF pos% > 0 THEN 
       laeng% = LEN (emailbcc.GAkquiDat$)
       j% = 0
        FOR i% = 1 TO laeng%
         posold% = pos%
         cc$ = MID$ (emailbcc.GAkquiDat$,i%,pos% - i%)
         pos% = INSTR (posold% + 1,emailbcc.GAkquiDat$,":")
 
         IF pos% > 0 THEN 
           i% = posold%
         ELSE 
           i% = laeng% + 1
         END IF 
         CALL WriteINIDes("BCC","Z" + LTRIM$ ( STR$ (j%,"999")), FN ansi(CC$),datei$)
         j% = j% + 1
       NEXT i%
     ELSE 
       CALL WriteINIDes("BCC","Z0", FN ansi(emailbcc.GAkquiDat$),datei$)
     END IF 
   END IF 
   ok% = - 1
   attachges$ = ""
   IF emailatt1.GAkquiDat$ <> "" OR eatt1.GAkquiDat$ <> "" THEN 
     IF Gcodie% = - 1 THEN 
       iniPath$ = emailatt1.GAkquiDat$
       IF eatt1.GAkquiDat$ <> "" THEN iniPath$ = eatt1.GAkquiDat$
       a% = CALL ("_SBFileExists",iniPath$)
       IF a% = - 1 THEN 
         CALL WriteINIDes("AT","Z0", FN ansi(iniPath$),datei$)
         X%% = MK_Attach%%(iniPath$,AttachString$)
         at1$ = iniPath$
         attachges$ = attachges$ + at1$ + " ,"
       ELSE 
         at1$ = ""
         ok% = 0
         fehl$ = "Dateianhang 1 nicht gefunden "
       END IF 
     ELSE 
       IF EXISTS (emailatt1.GAkquiDat$) THEN 
         CALL WriteINIDes("AT","Z0", FN ansi(emailatt1.GAkquiDat$),datei$)
         X%% = MK_Attach%%(emailatt1.GAkquiDat$,AttachString$)
         at1$ = emailatt1.GAkquiDat$
         attachges$ = attachges$ + at1$ + " ,"
       ELSE 
         at1$ = ""
         ok% = 0
         fehl$ = "Dateianhang 1 nicht gefunden "
       END IF 
     END IF 
   END IF 
 
 
   IF emailatt2.GAkquiDat$ <> "" OR eatt2.GAkquiDat$ <> "" THEN 
     IF Gcodie% = - 1 THEN 
       iniPath$ = emailatt2.GAkquiDat$
       IF eatt2.GAkquiDat$ <> "" THEN iniPath$ = eatt2.GAkquiDat$
       a% = CALL ("_SBFileExists",iniPath$)
       IF a% = - 1 THEN 
         CALL WriteINIDes("AT","Z1", FN ansi(iniPath$),datei$)
         X%% = MK_Attach%%(iniPath$,AttachString$)
         at1$ = iniPath$
         attachges$ = attachges$ + at1$ + " ,"
       ELSE 
         at1$ = ""
         ok% = 0
         fehl$ = "Dateianhang 2 nicht gefunden "
       END IF 
     ELSE 
       IF EXISTS (emailatt2.GAkquiDat$) THEN 
         CALL WriteINIDes("AT","Z1", FN ansi(emailatt2.GAkquiDat$),datei$)
         X%% = MK_Attach%%(emailatt2.GAkquiDat$,AttachString$)
         at1$ = emailatt2.GAkquiDat$
         attachges$ = attachges$ + at1$ + " ,"
       ELSE 
         at1$ = ""
         ok% = 0
         fehl$ = "Dateianhang 2 nicht gefunden "
       END IF 
     END IF 
   END IF 
 
 
   IF emailatt3.GAkquiDat$ <> "" OR eatt3.GAkquiDat$ <> "" THEN 
     IF Gcodie% = - 1 THEN 
       iniPath$ = emailatt3.GAkquiDat$
       IF eatt3.GAkquiDat$ <> "" THEN iniPath$ = eatt3.GAkquiDat$
       a% = CALL ("_SBFileExists",iniPath$)
       IF a% = - 1 THEN 
         CALL WriteINIDes("AT","Z2", FN ansi(iniPath$),datei$)
         X%% = MK_Attach%%(iniPath$,AttachString$)
         at1$ = iniPath$
         attachges$ = attachges$ + at1$ + " ,"
       ELSE 
         at1$ = ""
         ok% = 0
         fehl$ = "Dateianhang 3 nicht gefunden "
       END IF 
     ELSE 
       IF EXISTS (emailatt3.GAkquiDat$) THEN 
         CALL WriteINIDes("AT","Z2", FN ansi(emailatt3.GAkquiDat$),datei$)
         X%% = MK_Attach%%(emailatt3.GAkquiDat$,AttachString$)
         at1$ = emailatt3.GAkquiDat$
         attachges$ = attachges$ + at1$ + " ,"
       ELSE 
         at1$ = ""
         ok% = 0
         fehl$ = "Dateianhang 3 nicht gefunden "
       END IF 
     END IF 
   END IF 
 
 
   IF emailatt4.GAkquiDat$ <> "" OR eatt4.GAkquiDat$ <> "" THEN 
     IF Gcodie% = - 1 THEN 
       iniPath$ = emailatt4.GAkquiDat$
       IF eatt4.GAkquiDat$ <> "" THEN iniPath$ = eatt4.GAkquiDat$
       a% = CALL ("_SBFileExists",iniPath$)
       IF a% = - 1 THEN 
         CALL WriteINIDes("AT","Z3", FN ansi(iniPath$),datei$)
         X%% = MK_Attach%%(iniPath$,AttachString$)
         at1$ = iniPath$
         attachges$ = attachges$ + at1$ + " ,"
       ELSE 
         at1$ = ""
         ok% = 0
         fehl$ = "Dateianhang 4 nicht gefunden "
       END IF 
     ELSE 
       IF EXISTS (emailatt4.GAkquiDat$) THEN 
         CALL WriteINIDes("AT","Z3", FN ansi(emailatt4.GAkquiDat$),datei$)
         X%% = MK_Attach%%(emailatt4.GAkquiDat$,AttachString$)
         at1$ = emailatt4.GAkquiDat$
         attachges$ = attachges$ + at1$ + " ,"
       ELSE 
         at1$ = ""
         ok% = 0
         fehl$ = "Dateianhang 4 nicht gefunden "
       END IF 
     END IF 
   END IF 
 
 
   IF emailatt5.GAkquiDat$ <> "" OR eatt5.GAkquiDat$ <> "" THEN 
     IF Gcodie% = - 1 THEN 
       iniPath$ = emailatt5.GAkquiDat$
       IF eatt5.GAkquiDat$ <> "" THEN iniPath$ = eatt5.GAkquiDat$
       a% = CALL ("_SBFileExists",iniPath$)
       IF a% = - 1 THEN 
         CALL WriteINIDes("AT","Z4", FN ansi(iniPath$),datei$)
         X%% = MK_Attach%%(iniPath$,AttachString$)
         at1$ = iniPath$
         attachges$ = attachges$ + at1$ + " ,"
       ELSE 
         at1$ = ""
         ok% = 0
         fehl$ = "Dateianhang 5 nicht gefunden "
       END IF 
     ELSE 
       IF EXISTS (emailatt5.GAkquiDat$) THEN 
         CALL WriteINIDes("AT","Z4", FN ansi(emailatt5.GAkquiDat$),datei$)
         X%% = MK_Attach%%(emailatt5.GAkquiDat$,AttachString$)
         at1$ = emailatt5.GAkquiDat$
         attachges$ = attachges$ + at1$ + " ,"
       ELSE 
         at1$ = ""
         ok% = 0
         fehl$ = "Dateianhang 5 nicht gefunden "
       END IF 
     END IF 
   END IF 


w270420071: 

   REM CALL Fehler(datei$ + " " + datei1$ + " " + schalter$ + " " + adresse$ + " " + Hpop3$ + " " + PUID$ + " " + HPPort$ + " " + Ppassw$ + " " + PJN$,"")
   DIM ADR$(30000,1)
   DIM ADR1$(30000)
   i% = 0
   FILE GTelDat$
   INDEX codeku.GTelDat$
   FILE userfile$
   INDEX codeku.userfile$
   IF ok% THEN 
     REM anz% = RECCOUNT (userfile$)
     SELECT FIRST FILE userfile$ INDEX codeku.userfile$
     WHILE NOT EOF (userfile$)
       codeku% = VAL (codeku.userfile$)
       SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
       SELECT KEY codeku% FILE "ADRESSEN" INDEX codeku.adressen
       SELECT FIRST FILE GTelDat$ INDEX codeku.GTelDat$
       SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
       IF InternetupdJN.email <> "j" THEN 
         WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku%
           ook% = 0
           REM CALL Fehler( FN ansi(nummer.GTelDat$), FN ansi(name1.userfile$ + "," + name2.userfile$ + "," + name3.userfile$))
           IF nummer.GTelDat$ LIKE "*@*" THEN 
             IF GEMAILRAUS$ LIKE "<kein Filter>" OR GEMAILRAUS$ = "" THEN 
               ook% = - 1
               k% = k% + 1
             ELSE 
               IF KART2.GTELDAT$ = GEMAILRAUS$ THEN 
                 ook% = - 1
                 k% = k% + 1
               END IF 
             END IF 
           END IF 
           IF ook% = - 1 THEN 
             i$ = STR$ (i%,"999999") + " an " + FN ansi(nummer.GTelDat$)
             REM CALL Fehler(i$, FN ansi(name1.userfile$ + "," + name2.userfile$ + "," + name3.userfile$))
             SET STATUS STR$ (i%,"999999") + " an " + FN ansi(nummer.GTelDat$) + " " + FN ansi(name1.userfile$ + "," + name2.userfile$ + "," + name3.userfile$)
             adr$(i%,0) = codeku.userfile$
             adr$(i%,1) = FN ansi(nummer.GTelDat$)
             adr1$(i%) = FN ansi(name1.userfile$ + "," + name2.userfile$ + "," + name3.userfile$)
             i% = i% + 1
             REM CALL WriteINIDes("BCC","Z" + LTRIM$ ( STR$ (k% - 1,"99999")), FN ansi(nummer.GTelDat$),datei$)
             TOM$ = FN ansi(nummer.GTelDat$)
             adresse$ = FN ansi(name1.userfile$ + "," + name2.userfile$ + "," + name3.userfile$)
             CALL WriteINIDes("EMAILSERVER","TO",TOM$,datei$)
             MOUSE OFF 
             REM ret% = CALL ("_SendEMAILAuto",datei$,datei1$,schalter$,adresse$,Hpop3$,PUID$,HPPort$,Ppassw$,PJN$)
             IF TOMold$ = "" THEN 
               X%% = MK_SendTo%%(TOM$,SendTo$)
             END IF 
             X%% = MK_LogFile%%(GMACodeDir$ + "emailsen.log",LogDateiName$)
             X%% = MK_Html%%(0,Html$)
             SET STATUS "sende email"
             MOUSE OFF 
             X%% = MK_Init%%()
             X%% = MK_SendGo%%(RetVal%%,RetVal$,SendHeader$,SendTo$,SendFrom$,SendReply$,Priority$,SendCC$,SendBCC$,SendSubject$,LogDateiName$,SendServer$,AttachString$,Html$)
             X%% = MK_InitReset%%()
             Fehler$ = ""
             IF RetVal%% = 0 THEN 
               ret% = - 1
               REM REQUEST RetVal$,"",2
             ELSE 
               ret% = 1
               Fehler$ = RetVal$
               REM CALL Fehler(RetVal$,"")
             END IF 
             MOUSE ON 
           END IF 
           SELECT NEXT FILE GTelDat$ INDEX codeku.GTelDat$
         WEND 
       ELSE 
         IF InternetEMAIL.adressen <> "" THEN 
           i$ = STR$ (i%,"999999") + " an " + FN ansi(InternetEMAIL.adressen)
           SET STATUS STR$ (i%,"999999") + " an " + FN ansi(InternetEMAIL.adressen) + " " + FN ansi(name1.userfile$ + "," + name2.userfile$ + "," + name3.userfile$)
           CALL Fehler("Internetupdate: " + + FN ansi(InternetEMAIL.adressen) + " " + FN ansi(Internetname.adressen + "," + Internetpasswo.adressen + "," + name3.userfile$),"")
           adr$(i%,0) = codeku.userfile$
           adr$(i%,1) = FN ansi(InternetEMAIL.adressen)
           adr1$(i%) = FN ansi(name1.userfile$ + "," + name2.userfile$ + "," + name3.userfile$)
           i% = i% + 1
           REM CALL WriteINIDes("BCC","Z" + LTRIM$ ( STR$ (k% - 1,"99999")), FN ansi(nummer.GTelDat$),datei$)
           TOM$ = FN ansi(InternetEMAIL.adressen)
           adresse$ = FN ansi(name1.userfile$ + "," + name2.userfile$ + "," + name3.userfile$)
           CALL WriteINIDes("EMAILSERVER","TO",TOM$,datei$)
           MOUSE OFF 
           GMailBetreff$ = "CODie-SmartPROVIS Update"
           t1t$ = "Sehr geehrte Damen und Herren," + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
           t1t$ = t1t$ + "anbei Åbersenden wir Ihnen die Zugangsdaten fÅr Ihr Update des Programmes SmartPROVIS" + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
           t1t$ = t1t$ + "Internetadresse: http://www.codie.com" + CHR$ (13) + CHR$ (10)
           t1t$ = t1t$ + "Benutzername: " + Internetname.adressen + CHR$ (13) + CHR$ (10)
           t1t$ = t1t$ + "Passwort: " + Internetpasswo.adressen + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
           t1t$ = t1t$ + "Bitte denken an eine komplette Datensicherung des gesamten CODie-Ordners !!!!!!!!!" + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
           t1t$ = t1t$ + EMAILText.email
           t1t$ = t1t$ + EMAILText1.email
           t1t$ = t1t$ + EMAILText1.supervis + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
           t1t$ = t1t$ + EMAILText2.supervis
           emailtext$ = t1t$
           X%% = MK_Subject%%(GMailBetreff$,SendSubject$)
           IF EXISTS (GBodytxt$) THEN 
             DELETE GBodytxt$
           END IF 
           CALL MK_WriteBodyN(emailtext$)
           REM ret% = CALL ("_SendEMAILAuto",datei$,datei1$,schalter$,adresse$,Hpop3$,PUID$,HPPort$,Ppassw$,PJN$)
             IF TOMold$ = "" THEN 
               X%% = MK_SendTo%%(TOM$,SendTo$)
             END IF 
 
             X%% = MK_LogFile%%(GMACodeDir$ + "emailsen.log",LogDateiName$)
             X%% = MK_Html%%(0,Html$)
             SET STATUS "sende email"
             MOUSE OFF 
             X%% = MK_Init%%()
             X%% = MK_SendGo%%(RetVal%%,RetVal$,SendHeader$,SendTo$,SendFrom$,SendReply$,Priority$,SendCC$,SendBCC$,SendSubject$,LogDateiName$,SendServer$,AttachString$,Html$)
             X%% = MK_InitReset%%()
 
         END IF 
         MOUSE ON 
       END IF 
       SELECT NEXT FILE userfile$ INDEX codeku.userfile$
     WEND 
   ELSE 
     ret% = 4
   END IF 
   CALL Fehler("Emails sind raus","")
   IF ret% = - 1 THEN 
     emailraus.email = "j"
     EMAILSendDat.email = TODAY 
     EMAILSendZeit.email = NOW 
     SELECT KEY GMACodema% FILE "supervis" INDEX codema.supervis
     text1$ = DATE$ (EMAILSendDat.email,"0d.mm.yyyy") + " " + TIME$ (EMAILSendZeit.email,"hh:mm") + " EMAIL wurde per Hand von " + name.supervis + " gesendet "
     text2$ = ""
     ergebnis.email = LEFT$ (ergebnis.email + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
     STORE FILE "email"
 
     REM CALL Fehler(ergebnis.email,"jetzt noch den Kram in Dokumente eintragen")
     REM jetzt fÅr alle angeschriebenen Adressen einen Eintrag in der Dokumentendatei erzeugen mit der Dokumentennumer
     REM cudo%
     cudo% = codedok.email
     REM docpath$ = LEFT$ (_netpath$,2) + ReadConfig$("DOKUMENTE","allgemeine Schreiben")
     docpath$ = GetDocPath$("allgemeine Schreiben")
     IF RIGHT$ (docpath$,1) <> "\" THEN docpath$ = docpath$ + "\"
     z$ = _netpath$ + "email\" + STR$ (codedok.email,"000000") + ".txt"
     COPY gbodytxt$ TO z$
     OPEN z$ FOR APPEND 
      ? ""
      ? "**********************************************************************************************************"
      ? FN ansi("*                                     EMPFéNGER                                                          *")
      ? "**********************************************************************************************************"
      ? AFirma$ + "  " + AName$ + "  " + ANummer$
     CLOSE OUTPUT 
     OPEN z$ FOR APPEND 
      ? "  "
      ? "BETREFF: " + FN ansi(Betreff$)
      ? "  "
      ? FN ansi("DateianhÑnge:")
      ? FN ansi(attachges$)
      ? "  "
      ? "  "
      REM ? "Inhalt:
      REM ? FN ansi(emailtext$)
      ? "   "
      ? "  "
      REM ? text1$
      ? "  "
      ? "  "
      REM ? FN ansi("EmpfÑnger:")
     CLOSE OUTPUT 
     REM SELECT FIRST FILE userfile$ INDEX codeku.userfile$
     REM WHILE NOT EOF (userfile$)
     IF cudo% > 0 THEN 
      FOR a% = 0 TO i% - 1
       OPEN z$ FOR APPEND 
       ? adr$(a%,1) + "   "adr1$(a%)
       CLOSE OUTPUT 
       codeku% = VAL (adr$(a%,0))
       BLANK FILE "dokument"
       CodeDOK.dokument = codedok.email
       REM codeErs.dokument = GMACodema%
       Creator.dokument = GMAName$
       cudok% = CodeDOK.dokument
       dokument.dokument = LEFT$ (emailbetreff.email,160)
       erstellt_am.dokument = TODAY 
       letzte_Bearbeit.dokument = TODAY 
       CodeMA.dokument = Gcodema%
       SELECT KEY codema.dokument FILE "supervis" INDEX codema.supervis
       Bearbeiter.dokument = nachname.supervis
       textdatei$ = z$
       docpath$ = GetDocPath$(Gruppe$)
       textdatei$ = docpath$ + "email\" + STR$ (codedok.email,"000000") + ".txt"
       Dateiname.dokument = textdatei$
       Gruppe.dokument = "allgemeine Schreiben"
       codeku.dokument = codeku%
       link.DOKUMENT = CodeKU.DOKUMENT
       CALL QuickStore("DOKUMENT")
       REM SELECT NEXT FILE userfile$
      REM WEND 
      NEXT a%
     END IF 
   END IF 
   IF ret% = 1 THEN 
     text1$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm") + " EMAIL sollte per Hand von <" + name.supervis + "> versandt, "
     text2$ = "werden, konnte aber nicht durchgefÅhrt werden, da die temorÑre Dateien " + datei$ + " oder/und " + datei1$ + " nicht gefunden wurde/n"
     ergebnis.email = LEFT$ (ergebnis.email + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
     STORE FILE "email"
     CALL Fehler(text1$,text2$)
   END IF 
   IF ret% = 2 THEN 
     text1$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm") + " EMAIL sollte per Hand von Miarbeiter <" + name.supervis + "> versandt, "
     text2$ = "werden, konnte aber nicht durchgefÅhrt werden, da ein Fehler in den Absendetaten durch den Server gemeldet wurde!"
     ergebnis.email = LEFT$ (ergebnis.email + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
     STORE FILE "email"
     CALL Fehler(text1$,text2$)
   END IF 
   IF ret% = 3 THEN 
     text1$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm") + " EMAIL sollte per Hand von <" + name.supervis + "> versandt, "
     text2$ = "werden, konnte aber nicht durchgefÅhrt werden, da ein Fehler in den Absendetaten durch den Server gemeldet wurde!"
     ergebnis.email = LEFT$ (ergebnis.email + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
     STORE FILE "email"
     CALL Fehler(text1$,text2$)
   END IF 
   IF ret% = 4 THEN 
     text1$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm") + " EMAIL sollte per Hand von <" + name.supervis + "> versandt, "
     text2$ = "werden, konnte aber nicht durchgefÅhrt werden, da ein oder mehrere DateinanhÑnge nicht gefunden wurden!"
     ergebnis.email = LEFT$ (ergebnis.email + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
     STORE FILE "email"
     CALL Fehler(text1$,text2$)
 
   END IF 
 ELSE 
   CALL Fehler("EMAIL kann nicht versandt werden, da fÅr den User " + Name.supervis + " das Feld <Host> nicht ausgefÅllt wurde!","")
 END IF 
ae120520031: 
 CALL Fehler("Serienemail beendet!","")
 END SUB 
 
SUB EMAILSerSend_o(CodeKey%)
 IF MOD ("email") OR NEW ("email") THEN STORE FILE "email"
 IF GCODie% <> - 1 THEN 
   CALL Fehler("EMAIL - Versandt wurde nicht konfiguriert!","")
   GOTO ae120520031
 END IF 
 GAkquiDat$ = GAkquiDat$
 GTELDAT$ = "Telefon"
  CALL DFile(2,"OFFICE\adressen" + _fpw$)
  CALL DFile(2,"OFFICE\akquise" + _fpw$)
  CALL DFile(2,"OFFICE\dokument" + _fpw$)
  CALL DFile(2,"OFFICE\Telefon" + _fpw$)
  
  ON ERROR GOTO c10032005
  zieldir$ = _netpath$ + "EMAIL\"
 
  userfileneu$ = zieldir$ + STR$ (codekey%,"000000") + ".sbf"
  uneu$ = zieldir$ + STR$ (codekey%,"000000")
  un$ = STR$ (codekey%,"000000")
  MAKE DIRECTORY _netpath$ + "EMAIL"
c10032005: 
  ON ERROR GOTO ErrorHandler
  REM CALL Fehler("alte userdatei " + userfile$,"neue Datei " + uneu$)
  IF NOT EXISTS (userfileneu$) THEN 
    ddd$ = FILE 
    FILE userfile$
    REORGANIZE FILE userfile$ TO userfileneu$
    CLOSE FILE userfile$
    FILE ddd$
  END IF 
  CALL DFile(2,"EMAIL\" + un$)
  FILE un$
  INDEX codeku
  SELECT FIRST 
  FILE "email"
  REM FILE un$
  userfile$ = un$
 codemaold% = codema.supervis
 codema% = GMAcodema%
 IF cudo% < 1 THEN 
   IF codedok.email < 1 THEN 
     cudo% = SER ("DOKUMENT",1)
   ELSE 
     cudo% = codedok.email
   END IF 
 END IF 
 SELECT FIRST FILE "Supervis" INDEX codema.supervis
 SELECT KEY codema% FILE "Supervis" INDEX codema.supervis
 REM SELECT KEY codeku.GAkquiDat$ FILE GADRDat$ INDEX codeku.GADRDat$
 SELECT FIRST FILE "EMAIL" INDEX codekey.EMAIL
 SELECT KEY codekey% LOCK FILE "EMAIL" INDEX codekey.EMAIL
 codedok.email = cudo%
 
 
 datei$ = GMACodeDir$ + "codietes.ini"
 IF EXISTS (datei$) THEN 
   ON ERROR GOTO amas070520031
   DELETE datei$
   GOTO amas070520032
amas070520031: 
   IF schalter% <> 0 THEN CALL fehler("Es konnte die temporÑre Datei " + datei$ + " nicht gelîscht werden, bitte prÅfen Sie, ob die Datei geîffnet ist und schlie·en Sie diese!,"")
amas070520032: 
   ON ERROR GOTO ErrorHandler
 END IF 
 datei1$ = GMACodeDir$ + "codietes.txt"
 IF EXISTS (datei1$) THEN 
   ON ERROR GOTO amas070520035
   DELETE datei1$
   GOTO amas070520036
amas070520035: 
   IF schalter% <> 0 THEN CALL fehler("Es konnte die temporÑre Datei " + datei1$ + " nicht gelîscht werden, bitte prÅfen Sie, ob die Datei geîffnet ist und schlie·en Sie diese!,"")
amas070520036: 
   ON ERROR GOTO ErrorHandler
 END IF 
 OPEN datei$ FOR OUTPUT 
 CLOSE OUTPUT 
 IF EmailShost.supervis <> "" THEN 
   UserID$ = EMAILSUserID.supervis
   AFirma$ = FN ansi(EMAILSAFirma.supervis)
   AName$ = FN ansi(EMAILSAName.supervis)
   ANUmmer$ = EMAILNummer.supervis
   REM BCC$ = EMAILSKopie.supervis
   Sen$ = EMAILSKopie.supervis
   Hpop3$ = ""
   HPPort$ = ""
   PUID$ = ""
   PJN$ = EMAILPOP3JN.supervis
   IF EMAILPOP3JN.supervis = "TRUE" THEN 
     Hpop3$ = EMAILPHost.supervis
     HPPort$ = LTRIM$ ( STR$ (EMAILPPort.supervis,"999999"))
     IF HPPort$ = "" THEN HPPort$ = "110"
     PUID$ = EmailPUserID.supervis
     Ppassw$ = EMAILPPasww.supervis
   END IF 
   port$ = LTRIM$ ( STR$ (EMAILSPort.supervis,"999999"))
   IF port$ = "" THEN port$ = "25"
   IF EMAILSNummer.supervis <> "" THEN 
     Bersend$ = EMAILSNummer.supervis
   ELSE 
     Bersend$ = EMAILNummer.supervis
   END IF 
   Bersend1$ = EMAILSNummer1.supervis
     Text1$ = FN ansi(EMAILText1.supervis)
     Text2$ = FN ansi(EMAILText2.supervis)
   END IF 
   BAnrede$ = ""
   alltxt$ = GMACodeDir$ + "codietes.ini"
   TOM$ = EMAILTO.GAkquiDat$
   Betreff$ = FN ansi(EMAILBETREFF.email)
   senber$ = UCASE$ (EMAILSErg.supervis)
   CALL WriteINIDes("EMAILSERVER","HOST",EMAILShost.supervis,datei$)
   CALL WriteINIDes("EMAILSERVER","PORT",port$,datei$)
   CALL WriteINIDes("EMAILSERVER","USERID",UserID$,datei$)
   CALL WriteINIDes("EMAILSERVER","ABSFirma",AFirma$,datei$)
   CALL WriteINIDes("EMAILSERVER","ABSName",AName$,datei$)
   CALL WriteINIDes("EMAILSERVER","ABSEMAIL",ANummer$,datei$)
   CALL WriteINIDes("EMAILSERVER","KOPIEANABSENDER",Sen$,datei$)
   CALL WriteINIDes("EMAILSERVER","BerSendenummer",BerSend$,datei$)
   CALL WriteINIDes("EMAILSERVER","BerSendenummer1",BerSend1$,datei$)
   
   CALL WriteINIDes("EMAILSERVER","SENDEBERICHT",senber$,datei$)
   CALL WriteINIDes("EMAILSERVER","Betreff",Betreff$,datei$)
 
 
   REM CALL WriteINIDes("EMAILSERVER","TO",TOM$,datei$)
   IF InternetupdJN.email <> "j" THEN 
     OPEN datei1$ FOR OUTPUT 
     ? FN ansi( LEFT$ (emailtext.email,2000))
     ? FN ansi( MID$ (emailtext.email,2000))
      ? FN ansi( LEFT$ (emailtext1.email,2000))
     ? FN ansi( MID$ (emailtext1.email,2000))
     CLOSE OUTPUT 
   END IF 
   qfile$ = datei1$
   REM CALL Fehler("","")
   ok% = - 1
   atta1$ = "":atta2$ = "":atta3$ = "":atta4$ = "":atta5$ = "":
   IF emailatt1.email <> "" THEN 
     IF EXISTS (emailatt1.email) THEN 
       CALL WriteINIDes("AT","Z0", FN ansi(emailatt1.email),datei$)
       atta1$ = FN ansi(emailatt1.email)
     ELSE 
       ok% = 0
       fehl$ = "Dateianhang 1 nicht gefunden "
     END IF 
   END IF 
   IF emailatt2.email <> "" THEN 
     IF EXISTS (emailatt2.email) THEN 
       CALL WriteINIDes("AT","Z1", FN ansi(emailatt2.email),datei$)
       atta2$ = FN ansi(emailatt2.email)
     ELSE 
       ok% = 0
       fehl$ = "Dateianhang 2 nicht gefunden "
     END IF 
   END IF 
   IF emailatt3.email <> "" THEN 
     IF EXISTS (emailatt3.email) THEN 
       CALL WriteINIDes("AT","Z2", FN ansi(emailatt3.email),datei$)
       atta3$ = FN ansi(emailatt3.email)
     ELSE 
       ok% = 0
       fehl$ = "Dateianhang 3 nicht gefunden "
     END IF 
   END IF 
   IF emailatt4.email <> "" THEN 
     IF EXISTS (emailatt4.email) THEN 
       CALL WriteINIDes("AT","Z3", FN ansi(emailatt4.email),datei$)
       atta4$ = FN ansi(emailatt4.email)
     ELSE 
       ok% = 0
       fehl$ = "Dateianhang 4 nicht gefunden "
     END IF 
   END IF 
   IF emailatt5.email <> "" THEN 
     IF EXISTS (emailatt5.email) THEN 
       CALL WriteINIDes("AT","Z4", FN ansi(emailatt5.email),datei$)
       atta5$ = FN ansi(emailatt5.email)
     ELSE 
       ok% = 0
       fehl$ = "Dateianhang 5 nicht gefunden "
     END IF 
   END IF 
 
 
   schalter$ = STR$ (schalter%,"0")
   REM CALL Fehler(datei$ + " " + datei1$ + " " + schalter$ + " " + adresse$ + " " + Hpop3$ + " " + PUID$ + " " + HPPort$ + " " + Ppassw$ + " " + PJN$,"")
   DIM ADR$(30000,1)
   DIM ADR1$(30000)
   i% = 0
   IF ok% THEN 
     REM anz% = RECCOUNT (userfile$)
     SELECT FIRST FILE userfile$ INDEX codeku.userfile$
     WHILE NOT EOF (userfile$)
       codeku% = VAL (codeku.userfile$)
       SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
       SELECT KEY codeku% FILE "ADRESSEN" INDEX codeku.adressen
       SELECT FIRST FILE GTelDat$ INDEX codeku.GTelDat$
       SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
       IF InternetupdJN.email <> "j" OR InternetEMAIL.adressen = "" THEN 
         WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku%
           ook% = 0
           REM CALL Fehler( FN ansi(nummer.GTelDat$), FN ansi(name1.userfile$ + "," + name2.userfile$ + "," + name3.userfile$))
           IF nummer.GTelDat$ LIKE "*@*" THEN 
             IF GEMAILRAUS$ LIKE "<kein Filter>" OR GEMAILRAUS$ = "" THEN 
               ook% = - 1
               k% = k% + 1
             ELSE 
               IF KART2.GTELDAT$ = GEMAILRAUS$ THEN 
                 ook% = - 1
                 k% = k% + 1
               END IF 
             END IF 
           END IF 
           IF ook% = - 1 THEN 
             i$ = STR$ (i%,"999999") + " an " + FN ansi(nummer.GTelDat$)
             REM CALL Fehler(i$, FN ansi(name1.userfile$ + "," + name2.userfile$ + "," + name3.userfile$))
             SET STATUS STR$ (i%,"999999") + " an " + FN ansi(nummer.GTelDat$) + " " + FN ansi(name1.userfile$ + "," + name2.userfile$ + "," + name3.userfile$)
             adr$(i%,0) = codeku.userfile$
             adr$(i%,1) = FN ansi(nummer.GTelDat$)
             adr1$(i%) = FN ansi(name1.userfile$ + "," + name2.userfile$ + "," + name3.userfile$)
             i% = i% + 1
             REM CALL WriteINIDes("BCC","Z" + LTRIM$ ( STR$ (k% - 1,"99999")), FN ansi(nummer.GTelDat$),datei$)
             TOM$ = FN ansi(nummer.GTelDat$)
             adresse$ = FN ansi(name1.userfile$ + "," + name2.userfile$ + "," + name3.userfile$)
             CALL WriteINIDes("EMAILSERVER","TO",TOM$,datei$)
             MOUSE OFF 
             ret% = CALL ("_SendEMAILAuto",datei$,datei1$,schalter$,adresse$,Hpop3$,PUID$,HPPort$,Ppassw$,PJN$)
             MOUSE ON 
           END IF 
           SELECT NEXT FILE GTelDat$ INDEX codeku.GTelDat$
         WEND 
       ELSE 
         i$ = STR$ (i%,"999999") + " an " + FN ansi(InternetEMAIL.adressen)
         SET STATUS STR$ (i%,"999999") + " an " + FN ansi(InternetEMAIL.adressen) + " " + FN ansi(name1.userfile$ + "," + name2.userfile$ + "," + name3.userfile$)
         adr$(i%,0) = codeku.userfile$
         adr$(i%,1) = FN ansi(InternetEMAIL.adressen)
         adr1$(i%) = FN ansi(name1.userfile$ + "," + name2.userfile$ + "," + name3.userfile$)
         i% = i% + 1
         REM CALL WriteINIDes("BCC","Z" + LTRIM$ ( STR$ (k% - 1,"99999")), FN ansi(nummer.GTelDat$),datei$)
         TOM$ = FN ansi(InternetEMAIL.adressen)
         adresse$ = FN ansi(name1.userfile$ + "," + name2.userfile$ + "," + name3.userfile$)
         CALL WriteINIDes("EMAILSERVER","TO",TOM$,datei$)
         MOUSE OFF 
         vortext$ = "Sehr geehrte Damen und Herren," + CHR$ (13) + CHR$ (10)
         vortext$ = vortext$ + CHR$ (13) + CHR$ (10) + "anbei Åbersenden wir Ihnen Ihre Zugangsdaten fÅr das Update, das Sie auf unserer Internetseite http://www.codie.com finden"
         vortext$ = vortext$ + CHR$ (13) + CHR$ (10) + "Name:      " + InternetName.adressen + CHR$ (13) + CHR$ (10) + "Passwort:  " + InternetPasswo.adressen + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
         OPEN datei1$ FOR OUTPUT 
         ? FN ansi(vortext$ + emailtext.email)
         CLOSE OUTPUT 
         ret% = CALL ("_SendEMAILAuto",datei$,datei1$,schalter$,adresse$,Hpop3$,PUID$,HPPort$,Ppassw$,PJN$)
         MOUSE ON 
       END IF 
       SELECT NEXT FILE userfile$ INDEX codeku.userfile$
     WEND 
 
   ELSE 
     ret% = 4
   END IF 
   IF ret% = - 1 THEN 
     emailraus.email = "j"
     EMAILSendDat.email = TODAY 
     EMAILSendZeit.email = NOW 
     SELECT KEY GMACodema% FILE "supervis" INDEX codema.supervis
     text1$ = DATE$ (EMAILSendDat.email,"0d.mm.yyyy") + " " + TIME$ (EMAILSendZeit.email,"hh:mm") + " EMAIL wurde per Hand von " + name.supervis + " gesendet "
     text2$ = ""
     ergebnis.email = LEFT$ (ergebnis.email + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
     STORE FILE "email"
 
     REM CALL Fehler(ergebnis.email,"jetzt noch den Kram in Dokumente eintragen")
     REM jetzt fÅr alle angeschriebenen Adressen einen Eintrag in der Dokumentendatei erzeugen mit der Dokumentennumer
     REM cudo%
     cudo% = codedok.email
     REM docpath$ = LEFT$ (_netpath$,2) + ReadConfig$("DOKUMENTE","allgemeine Schreiben")
     docpath$ = GetDocPath$("allgemeine Schreiben")
     IF RIGHT$ (docpath$,1) <> "\" THEN docpath$ = docpath$ + "\"
     z$ = _netpath$ + "email\" + STR$ (codedok.email,"000000") + ".txt"
     COPY qfile$ TO z$
     OPEN z$ FOR OUTPUT 
      ? AFirma$ + "  " + AName$ + "  " + ANummer$
     CLOSE OUTPUT 
     OPEN z$ FOR APPEND 
      ? "  "
      ? "BETREFF: " + FN ansi(Betreff$)
      ? "  "
      ? FN ansi("DateianhÑnge:")
      IF atta1$ <> "" THEN ? atta1$
      IF atta2$ <> "" THEN ? atta2$
      IF atta3$ <> "" THEN ? atta3$
      IF atta4$ <> "" THEN ? atta4$
      IF atta5$ <> "" THEN ? atta5$
      ? "  "
      ? "  "
      ? "Inhalt:
      IF InternetupdJN.email <> "j" THEN 
        ? FN ansi(emailtext.email)
      ELSE 
        vortext$ = "Sehr geehrte Damen und Herren," + CHR$ (13) + CHR$ (10)
        vortext$ = vortext$ + CHR$ (13) + CHR$ (10) + "anbei Åbersenden wir Ihnen Ihre Zugangsdaten fÅr das Update, das Sie auf unserer Internetseite http://www.codie.com finden"
        vortext$ = vortext$ + CHR$ (13) + CHR$ (10) + "Name:      " + InternetName.adressen + CHR$ (13) + CHR$ (10) + "Passwort:  " + InternetPasswo.adressen + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
        ? FN ansi(vortext$ + emailtext.email)
      END IF 
      ? "   "
      ? "  "
      ? text1$
      ? "  "
      ? "  "
      ? FN ansi("EmpfÑnger:")
     CLOSE OUTPUT 
     REM SELECT FIRST FILE userfile$ INDEX codeku.userfile$
     REM WHILE NOT EOF (userfile$)
     IF cudo% > 0 THEN 
      FOR a% = 0 TO i% - 1
       OPEN z$ FOR APPEND 
       ? adr$(a%,1) + "   "adr1$(a%)
       CLOSE OUTPUT 
       codeku% = VAL (adr$(a%,0))
       BLANK FILE "dokument"
       CodeDOK.dokument = codedok.email
       REM codeErs.dokument = GMACodema%
       Creator.dokument = GMAName$
       cudok% = CodeDOK.dokument
       dokument.dokument = LEFT$ (emailbetreff.email,160)
       erstellt_am.dokument = TODAY 
       letzte_Bearbeit.dokument = TODAY 
       CodeMA.dokument = Gcodema%
       SELECT KEY codema.dokument FILE "supervis" INDEX codema.supervis
       Bearbeiter.dokument = nachname.supervis
       textdatei$ = z$
       docpath$ = GetDocPath$(Gruppe$)
       textdatei$ = docpath$ + "email\" + STR$ (codedok.email,"000000") + ".txt"
       Dateiname.dokument = textdatei$
       Gruppe.dokument = "allgemeine Schreiben"
       codeku.dokument = codeku%
       link.DOKUMENT = CodeKU.DOKUMENT
       CALL QuickStore("DOKUMENT")
       REM SELECT NEXT FILE userfile$
      REM WEND 
      NEXT a%
     END IF 
   END IF 
   IF ret% = 1 THEN 
     text1$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm") + " EMAIL sollte per Hand von <" + name.supervis + "> versandt, "
     text2$ = "werden, konnte aber nicht durchgefÅhrt werden, da die temorÑre Dateien " + datei$ + " oder/und " + datei1$ + " nicht gefunden wurde/n"
     ergebnis.email = LEFT$ (ergebnis.email + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
     STORE FILE "email"
     CALL Fehler(text1$,text2$)
   END IF 
   IF ret% = 2 THEN 
     text1$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm") + " EMAIL sollte per Hand von Miarbeiter <" + name.supervis + "> versandt, "
     text2$ = "werden, konnte aber nicht durchgefÅhrt werden, da ein Fehler in den Absendetaten durch den Server gemeldet wurde!"
     ergebnis.email = LEFT$ (ergebnis.email + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
     STORE FILE "email"
     CALL Fehler(text1$,text2$)
   END IF 
   IF ret% = 3 THEN 
     text1$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm") + " EMAIL sollte per Hand von <" + name.supervis + "> versandt, "
     text2$ = "werden, konnte aber nicht durchgefÅhrt werden, da ein Fehler in den Absendetaten durch den Server gemeldet wurde!"
     ergebnis.email = LEFT$ (ergebnis.email + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
     STORE FILE "email"
     CALL Fehler(text1$,text2$)
   END IF 
   IF ret% = 4 THEN 
     text1$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm") + " EMAIL sollte per Hand von <" + name.supervis + "> versandt, "
     text2$ = "werden, konnte aber nicht durchgefÅhrt werden, da ein oder mehrere DateinanhÑnge nicht gefunden wurden!"
     ergebnis.email = LEFT$ (ergebnis.email + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
     STORE FILE "email"
     CALL Fehler(text1$,text2$)
 
   END IF 
 ELSE 
   CALL Fehler("EMAIL kann nicht versandt werden, da fÅr den User " + Name.supervis + " das Feld <Host> nicht ausgefÅllt wurde!","")
 END IF 
ae120520031: 
 CALL Fehler("Serienemail beendet!","")
 END SUB 
  
 
 
 
 
 
 
 
 
 '      *****************************************
 '      ** Formular "MAIL-Netzwerknachrichten" **
 '      *****************************************
 '
  
SUB MAIL1a()
 IF disabled%("NETMAIL") THEN END SUB 
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\mail" + _fpw$)
 MOUSE OFF 
 _formend% = 0
 SET STATUS "Bereit"
 AKsub% = 0
 filtma% = GCodeMA%
 FILE "mail"
 INDEX codema.mail
 SELECT WHERE FILE "mail"
 IF MNdisabled%("ALLEMAIL") THEN 
   filtma% = GMACodema%
 END IF 
 WHILE _formend% = 0
   AKsub% = 0
   IF FORM <> "NETMAIL" THEN 
     SET HEADING title$ + " - NETMAIL"
     OPEN FORM GOFFForm$ + "NETMAIL"
     SET f = Superbase.Form
     SET STATUS "NETMAIL"
     CALL MNNETMAIL()
     CALL NETMAILIntro()
     SET DISPLAY ON 
   END IF 
   MENU ON 
   MOUSE ON 
   FILE "mail"
   SET STATUS "Bereit"
   GAppName$ = _netpath$ + "DOCP\project.pdf"
   CALL NETMAILUPDATE()
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE AKsub%
   CASE 1
     REM -- Filter auf anderen Mitarbeiter
     FILE "Supervis"
     REQUEST "Mitarbeiter auswÑhlen","",25,req%,filtma%,72,codema.Supervis,nachname.Supervis,vorname.Supervis INDEX nachname.supervis
     FILE "mail"
     IF filtma% > 0 AND req% = 1 THEN 
       CALL NETMAILIntro()
       FORM 
     END IF 
   CASE 2
     REM -- Seite 2
     _codemail% = codemail.mail
 
     FORM 2
   CASE 3
     REM -- beantworten
     cfile$ = FILE 
     codemail% = codemail.mail
     SELECT KEY vcodema% FILE "Supervis" INDEX codema.supervis
     nn$ = Name.supervis
     SELECT KEY codemail% LOCK FILE "mail" INDEX CodeMAIL.mail
     DIM dlg AS Dialog
     DIM control AS DialogControl
 
     Superbase.Dialogs.Add("DIALOG")
     SET dlg = Superbase.Dialogs.DIALOG
     dlg.Move(0,0,400,214)
     dlg.Caption = "Nachricht empfangen"
     dlg.FontName = "MS Sans Serif"
     dlg.FontSize = 8
 
     SET control = dlg.Add("DialogLabel1","DialogLabel")
     control.Move(4,4,120,10)
     control.Caption = "Nachricht gesendet von:"
 
     SET control = dlg.Add("DialogTextBox3","DialogTextBox")
     control.Move(4,16,118,12)
     control.ReadOnly = 1
     control.MaxLength = 20
     control.TextBinding = "absender.mail"
 
     SET control = dlg.Add("DialogLabel2","DialogLabel")
     control.Move(4,30,120,8)
     control.Caption = "Nachricht:"
 
     SET control = dlg.Add("DialogTextBox1","DialogTextBox")
     control.Move(4,40,392,64)
     control.MultiLine = 1
     control.ReadOnly = 1
     control.ScrollEnable = 3
     control.ScrollBars = 3
     control.MaxLength = 4000
     control.TextBinding = "nachricht.mail"
 
     SET control = dlg.Add("DialogLabel3","DialogLabel")
     control.Move(4,105,120,8)
     control.Caption = "Antwort:"
 
     SET control = dlg.Add("DialogTextBox2","DialogTextBox")
     control.Move(4,116,392,72)
     control.MultiLine = 1
     control.ScrollEnable = 3
     control.ScrollBars = 3
     control.MaxLength = 4000
     control.TextBinding = "antwort.mail"
 
     REM SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
     REM control.Move(229,193,36,16)
     REM control.Default = 1
     REM control.Caption = "&OK"
     REM control.ReturnValue = 1
 
     REM SET control = dlg.Add("DialogCommandButton4","DialogCommandButton")
     REM control.Move(268,193,36,16)
     REM control.Caption = "&Lîschen"
     REM control.ReturnValue = 2
 
     SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
     control.Move(306,193,52,16)
     control.Caption = "&Beantworten"
     control.ReturnValue = 3
 
     SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
     control.Move(360,193,36,16)
     control.Caption = "&Abbruch"
     control.ReturnValue = 0
     DIALOG "DIALOG",req%
     REMOVE DIALOG "DIALOG"
 
 
     IF req% = 3 THEN 
       DatumAntwort.mail = TODAY 
       ZeitAntwort.mail = NOW 
       gelesen.mail = 1
       DatumGelesen.mail = TODAY 
       ZeitGelesen.mail = NOW 
       von% = codemavon.mail
       notiz$ = nachricht.mail
       antwort$ = antwort.mail
       STORE FILE "mail"
       UNLOCK CURRENT FILE "mail"
       BLANK FILE "mail"
       codemail.mail = SER ("mail",1)
       codema.mail = von%
       codemavon.mail = vcodema%
       gelesen.mail = 0
       nachricht.mail = notiz$ + CHR$ (10) + CHR$ (13) + CHR$ (10) + CHR$ (13) + "ANTWORT: " + CHR$ (10) + CHR$ (13) + antwort$
       Datum.mail = TODAY 
       Zeit.mail = NOW 
       Absender.mail = nn$
       STORE FILE "mail"
       UNLOCK CURRENT FILE "mail"
     END IF 
   CASE 4
     REM -- allgemeine Auswertung
   CASE 5
     REM -- alle Dokumente auflisten
   CASE 6
   CASE 99
       MENU OFF 
       MOUSE ON 
       ENTER Nachricht.mail,0
       MENU ON 
   END SELECT 
 WEND 
 SELECT WHERE FILE "mail"
 cuak% = 0
 IF FileChanged%("mail") = 1 THEN CALL FStore("mail")
 _formend% = 0
 filtma% = 0
 END SUB 
  
 
 ' Nachrichten-Intro
 ' ======================================================================
 
SUB NETMAILIntro()
 MOUSE OFF 
 FILE "mail"
 IF filtma% > 0 THEN 
   SELECT FIRST FILE "supervis" INDEX codema.supervis
   SELECT KEY filtma% FILE "supervis" INDEX codema.supervis
   filt$ = vorname.supervis + " " + nachname.supervis
   SELECT WHERE FILE "mail"
   filt1$ = "Select where Codema.mail = filtma% or Codemavon.mail = filtma%"
   EXECUTE filt1$
   SELECT FORM FIRST 
 END IF 
 IF _codemail% <> 0 THEN 
   SELECT KEY _codemail% FILE "mail" INDEX codemail.mail
 ELSE 
   SELECT FIRST 
 END IF 
 FORM 
 MOUSE ON 
 END SUB 
 
 
 ' NachrichtEN Formular updaten
 ' ======================================================================
 
SUB NETMAILUPDATE()
 _codemail% = Codemail.mail
 SELECT KEY _codemail% FILE "mail" INDEX Codemail.mail
 FORM 
 END SUB 
 
 
 
SUB MNNETMAIL()
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
   
 
 



SUB ExpOutlGener(codeku%)
       REQUEST "Sollen nur die Adressen und Termine eines","einzelnen Vermittlers exportiert werden?",130,req%
       IF req% = 1 THEN 
         datei1$ = "VERTRETE"
         CALL DFile(3,datei1$ + _fpw$)
         z% = RECCOUNT (datei1$)
         IF z% < RECCOUNT (datei1$) THEN 
           z% = RECCOUNT (datei1$)
         END IF 
         IF z% > 20000 THEN z% = 20000
         REDIM AdrFound$(z%)
         
         
         FILE datei1$
         INDEX nachname.datei1$
         SELECT FIRST 
         a% = 0
         SELECT WHERE nachname.datei1$ <> ""
         SELECT FIRST 
         WHILE NOT EOF (datei1$)
           AdrFound$(a%) = LTRIM$ (nachname.datei1$) + "," + LTRIM$ (vorname.datei1$) + SPACE$ (120) + STR$ (codema.datei1$,"000000")
           a% = a% + 1
           SELECT NEXT 
         WEND 
         AdrFound$(a%) = ""
         LAuswahl$ = AdrFound$(0)
         LAuswahl1$(0) = LAuswahl$
         CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"MS Sans Serif",8
         REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
         ADD DIALOG "ADRLISTE",7,5,8,328,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRLISTE",1,74,174,56,16,1,"&OK",1,1
         ADD DIALOG "ADRLISTE",1,134,174,56,16,0,"&Abbrechen",0,0
         DIALOG "ADRLISTE",req5%
         MOUSE ON 
         REMOVE DIALOG "ADRLISTE"
         IF req5% = 1 THEN 
           LAuswahl$ = LAuswahl1$(0)
           codema% = VAL ( RIGHT$ (LAuswahl$,6))
         ELSE 
           codema% = 0
         END IF 
         MOUSE OFF 
       ELSE 
         codema% = 0
       END IF 
       IF RECCOUNT (GAdrDat$) < 30000 THEN 
         REDIM ADRFound$( RECCOUNT (GAdrDat$))
       ELSE 
         REDIM ADRFound$(30000)
       END IF 
       FILE GAdrDat$
       INDEX fiimmak.GAdrDat$
       SELECT FIRST 
       SELECT KEY "j" FILE GAdrDat$ INDEX fiimmak.GAdrDat$
       a% = 0
       WHILE NOT EOF (GAdrDat$) AND fiimmak.GAdrDat$ = "j"
         IF codema% > 0 THEN 
           IF codema.GAdrDat$ = codema% THEN 
             SET STATUS "Exportiere " + nachname.GAdrDat$
             ADRFound$(a%) = STR$ (codeku.GAdrDat$,"000000")
             a% = a% + 1
           END IF 
         ELSE 
           SET STATUS "Exportiere " + nachname.GAdrDat$
           ADRFound$(a%) = STR$ (codeku.GAdrDat$,"000000")
           a% = a% + 1
         END IF 
         SET STATUS STR$ (a%) + " Adressen gefunden"
         SELECT NEXT FILE GAdrDat$ INDEX fiimmak.GAdrDat$
       WEND 
       ADRFound$(a%) = ""
       REM CALL Fehler("","")
       CALL ExpOutlook()
     MOUSE ON 
     SET STATUS ""
 END SUB 



SUB ExpOutlook()
 dir$ = DIRECTORY 
 Adressen$ = "ADRESSEN"
 adrtemp$ = "OUTLADR1"
 CALL DFile(2,"OFFICE\OUTLADR1" + _fpw$)
 CALL DFile(2,"OFFICE\OUTKAL" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 REMOVE FROM FILE "OUTLADR1"
 REMOVE FROM FILE "OUTKAL"
 REM adressen$ = GAdrDat$
 ansionoff$ = UCASE$ (ReadINI$("SYSTEM","WinWordAnsi"))
 
 
         a% = 0
         WHILE AdrFound$(a%) <> ""
           FILE Adressen$
           SELECT FIRST 
          
           IF adressen$ = GAdrDat$ THEN 
             codeku% = VAL ( RIGHT$ (AdrFound$(a%),6))
             SELECT KEY codeku% FILE Adressen$ INDEX codeku.Adressen$
           END IF 
           
           abz% = abz% + 1
           SET STATUS "Anzahl der verarbeiteten Adressen: " + STR$ (abz%,"99999999")
           REM codeku% = codeku.GAdrDat$
           REM 200999
         IF ASerJN = "j" AND req% = 1 THEN 
         ELSE 
           BLANK FILE adrtemp$
           Anrede.adrtemp$ = VSNRPack3$(Anrede.Adressen$)
           REM CALL Fehler("SER","")
           IF anrede.Adressen$ LIKE "Herr*" OR anrede.Adressen$ LIKE "Fr*" OR anrede.Adressen$ LIKE "Fam*" OR anrede.Adressen$ LIKE "Ehe*" OR anrede.Adressen$ LIKE "Kind*" THEN 
             Nachname.adrtemp$ = VSNRPack3$(Nachname.Adressen$)
             Vorname.adrtemp$ = VSNRPack3$(Vorname.Adressen$)
             adr$ = "Adresse: " + VSNRPack3$(Vorname.Adressen$) + ", " + VSNRPack3$(Nachname.Adressen$) + CHR$ (10) + CHR$ (13)
           ELSE 
             Nachname.adrtemp$ = VSNRPack3$(Nachname.Adressen$)
             Vorname.adrtemp$ = VSNRPack3$(Vorname.Adressen$)
             WeitereVornamen.adrtemp$ = VSNRPack3$(Geburtsname.Adressen$)
             adr$ = "Adresse: " + VSNRPack3$(Vorname.Adressen$) + ", " + VSNRPack3$(Nachname.Adressen$) + ", " + VSNRPack3$(Geburtsname.adressen$) + CHR$ (10) + CHR$ (13)
 
           END IF 
           Strassegesch.adrtemp$ = VSNRPack3$(Stra·e.Adressen$)
           Postleitzahlges.adrtemp$ = VSNRPack3$(PLZ.Adressen$)
           Ortgesch.adrtemp$ = VSNRPack3$(Ort.Adressen$)
           adr$ = adr$ + VSNRPack3$(Stra·e.Adressen$) + ", " + VSNRPack3$(PLZ.Adressen$) + " " + VSNRPack3$(Ort.Adressen$)
           Landgesch.adrtemp$ = VSNRPack3$(Land.Adressen$)
           Geburtstag.adrtemp$ = DATE$ (Geburtstag.Adressen$,"0d.mm.yyyy")
           Konto.adrtemp$ = VSNRPack3$(K1Konto.Adressen$)
           Notizen.adrtemp$ = VSNRPack3$(Notiz.Adressen$)
           Stichworter.adrtemp$ = VSNRPack3$(Stichwort.Adressen$)
           codema% = Codema.Adressen$
           REM 061196
           IF EXISTS (codeku%,codeku.GTelDat$) THEN 
             FILE GTelDat$
             INDEX codeku.GTelDat$
             SELECT FIRST 
             SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
             abi% = 0
             note$ = ""
             WHILE codeku.GTelDat$ = codeku% AND abi% < 20 AND NOT EOF (GTelDat$)
               abi% = abi% + 1
                   
               IF fonoderfax.GTelDat$ <> "j" THEN 
                 IF Mobiltelefon.adrtemp$ = "" AND (art.GTelDat$ LIKE "mobi*" OR art.GTelDat$ LIKE "Funk*") THEN 
                   Mobiltelefon.adrtemp$ = VSNRPack3$(nummer.GTelDat$)
                 END IF 
                 IF Webseite.adrtemp$ = "" AND (art.GTelDat$ LIKE "www*" OR nummer.GTelDat$ LIKE "www*" OR art.GTelDat$ LIKE "*www*" OR nummer.GTelDat$ LIKE "*www*") THEN 
                   Webseite.adrtemp$ = VSNRPack3$(nummer.GTelDat$)
                 END IF 
                 IF emailadresse.adrtemp$ = "" AND (art.GTelDat$ LIKE "*@*" OR nummer.GTelDat$ LIKE "*@*") THEN 
                   emailadresse.adrtemp$ = VSNRPack3$(nummer.GTelDat$)
                   emailangezeigte.adrtemp$ = VSNRPack3$(nummer.GTelDat$)
                 END IF 
                 IF Telefongesch.adrtemp$ = "" THEN 
                   Telefongesch.adrtemp$ = VSNRPack3$(nummer.GTelDat$)
                 END IF 
               ELSE 
                 IF faxgesch.adrtemp$ = "" THEN 
                   faxgesch.adrtemp$ = VSNRPack3$(nummer.GTelDat$)
                 END IF 
 
               END IF 
 
               note$ = note$ + VSNRPack3$(art.GTelDat$ + "  " + nummer.GTelDat$) + CHR$ (10) + CHR$ (13)
             SELECT NEXT FILE GTelDat$ INDEX codeku.GTelDat$
             WEND 
             notizen.adrtemp$ = note$ + CHR$ (10) + CHR$ (13) + notizen.adrtemp$
             adr$ = adr$ + CHR$ (10) + CHR$ (13) + note$ + CHR$ (10) + CHR$ (13)
           END IF 
           FILE adrtemp$
           STORE FILE adrtemp$
         END IF 
         FILE adressen$
         REM SELECT NEXT FILE GAdrDat$
         REM IF nachname.adressen LIKE "klam*" THEN CALL Fehler("","")
         IF EXISTS (codeku%,codeku.GAkquiDat$) THEN 
           cfile$ = FILE 
           FILE GAkquiDat$
           INDEX codeku.GAkquiDat$
           SELECT FIRST 
           SELECT KEY codeku% FILE GAkquiDat$ INDEX codeku.GAkquiDat$
           WHILE NOT EOF (GAkquiDat$) AND codeku.GAkquiDat$ = codeku%
             IF erledigt_Termin.GAkquiDat$ <> "j" THEN 
               SELECT KEY codeak.GAkquiDat$ FILE "Aktionen" INDEX codeak.aktionen
               BLANK FILE "outkal"
               Betreff.outkal = VSNRPack3$(notiz.GAkquiDat$)
               Beschreibung.outkal = VSNRPack3$(ergebnis.GAkquiDat$) + CHR$ (10) + CHR$ (13) + adr$
               Beginntam.outkal = DATE$ (termin.GAkquiDat$,"0d.mm.yyyy")
               IF uhrzeit.GAkquiDat$ < 1 THEN 
                 Beginntum.outkal = "09:00"
               ELSE 
                 Beginntum.outkal = TIME$ (uhrzeit.GAkquiDat$,"hh:mm")
               END IF 
               IF erdatum.GAkquiDat$ > 0 THEN 
                 Erinnerungam.outkal = DATE$ (erdatum.GAkquiDat$,"0d.mm.yyyy")
                 Erinnerungum.outkal = TIME$ (erzeit.GAkquiDat$,"hh:mm")
               ELSE 
                 Erinnerungam.outkal = Beginntam.outkal
                 Erinnerungum.outkal = Beginntum.outkal
               END IF 
               Kategorien.outkal = VSNRPack3$(Bezeichnung.aktionen)
               STORE FILE "outkal"
             END IF 
             SELECT NEXT FILE GAkquiDat$ INDEX codeku.GAkquiDat$
           WEND 
           FILE cfile$
         END IF 
         a% = a% + 1
         WEND 
 
 DIRECTORY "C:\"
 tf$ = FILE 
 FILE "OUTLADR1"
 Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
 Superbase.Converters.SBF.SourceFile = "OUTLADR1"
 Superbase.Converters.SBF.Descending = 0
 Superbase.Converters.SBF.Merge = 0
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.CSV.DestFormat = "Comma-separated values"
 Superbase.Converters.CSV.DestFile = "outadr.CSV"
 Superbase.Converters.CSV.UseLabels = - 1
 Superbase.Converters.CSV.ANSIConvert = - 1
 Superbase.Converters.CSV.Convert(Superbase.Converters.SBF)
 
 
 FILE "OUTKAL"
 Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
 Superbase.Converters.SBF.SourceFile = "OUTKAL"
 Superbase.Converters.SBF.Descending = 0
 Superbase.Converters.SBF.Merge = 0
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.CSV.DestFormat = "Comma-separated values"
 Superbase.Converters.CSV.DestFile = "outkal.CSV"
 Superbase.Converters.CSV.UseLabels = - 1
 Superbase.Converters.CSV.ANSIConvert = - 1
 Superbase.Converters.CSV.Convert(Superbase.Converters.SBF)
 
 FILE tf$
 DIRECTORY dir$
 REQUEST "Export nach Outlook beendet!","",0
 t1$ = "Es wurden 2 Exportdateien erstellt. Die erstellten Dateien hei·en C:\outadr.csv (Adressen) und c:\outkal.csv (Termine).   Sie kînnen die Dateien in Outlook importieren, in dem Sie in Outlook im MenÅ "
 t2$ = "Datei/Importieren-Exportieren/Import aus anderen Programmen/Kommagetrennte Werte (Window) / Kontakte (fÅr die Adressen) oder Kalender (fÅr die Termine) wÑhlen und dort dann per Feldzuortnung die Felder verbinden!"
 CALL Fehler(t1$,t2$)
 END SUB 














 
 
FUNCTION T1KL$(VSNR$)
 T1KL$ = ""
 FOR a% = 1 TO LEN (VSNR$)
   tC$ = MID$ (VSNR$,a%,1)
         x$ = LEFT$ (tC$,1)
         SELECT CASE x$
           CASE "<"
             tC$ = "{"
           CASE ">"
             tC$ = "}"
           CASE "&"
             tc$ = "u."
           REM CASE "~"
             REM tC$ = "-"
         END SELECT 
   tVSNR$ = tVSNR$ + tC$
 NEXT a%
 T1KL$ = tVSNR$
 END FUNCTION 
 
 
 REM Export der aktuellen Adresse und zugehîriger lebender und FremdvertrÑge in eine XML-Ausgabedatei
 REM z.B. zur öbergabe an Rendite 2000
SUB ADRExpOutl(codeku%)
  GADRDat$ = "ADRESSEN"
  GTelDat$ = "TELEFON"
  GAkquiDat$ = GAkquiDat$
  kunr% = codeku%
  knr% = codeku%
  codeku1% = kunr%

  DIM Telart$( RECCOUNT (GTelDat$))
  DIM TelNum$( RECCOUNT (GTelDat$))

  REM IF codeku% = 0 THEN 
   IF codeku% > 0 THEN 
     REM CALL Fehler("TrÑgt aktuelle Adresse und zugehîrige Telefonnummern in Outlook ein!","")
   END IF 
  REM REQUEST "Soll der Export durchgefÅhrt werden?","",130,req%
  req% = 1
  IF req% = 1 THEN 
    expodir$ = GMACodeDir$ + "OUTLOOK"
    ON ERROR GOTO e270720051
    MAKE DIRECTORY expodir$
    GOTO e270720052
e270720051: 
    f% = - 1
e270720052: 
    expodir$ = GMACodeDir$ + "OUTLOOK\"
    ON ERROR GOTO ErrorHandler 
 
 
       IF EXISTS (expodir$ + "outlook.xml") THEN 
         DELETE expodir$ + "*.xml"
       END IF 
       datexe$ = GMACodeDir$ + "OUTLOOK\KontaktMaker.exe"
       a% = CALL ("_SBFileExists",datexe$)
       IF a% <> - 1 THEN 
         von$ = _netpath$ + "outlook\KontaktMaker.exe"
         nach$ = GMACodeDir$ + "OUTLOOK\KontaktMaker.exe"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "outlook\Interop.Microsoft.Office.Core.dll"
         nach$ = GMACodeDir$ + "OUTLOOK\Interop.Microsoft.Office.Core.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "outlook\Interop.Outlook.dll"
         nach$ = GMACodeDir$ + "OUTLOOK\Interop.Outlook.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
       END IF 
       SELECT FIRST FILE "supervis" INDEX codema.supervis
       SELECT KEY GMACodema% FILE "supervis" INDEX codema.supervis
       benutz$ = Outlookname.supervis
       benupw$ = Outlookpw.supervis
 
       OPEN expodir$ + "outlook.xml" FOR OUTPUT 
       ? "<?xml version=" + CHR$ (34) + "1.0" + CHR$ (34) + " encoding=" + CHR$ (34) + "ISO-8859-1" + CHR$ (34) + "?> "
       
       ? "<export>"
       ? "<MODUS>EXPORT</MODUS>"
       ? "<benutzer>"
         ? "  <name>" + benutz$ + "</name>"
         ? "  <pw>" + benupw$ + "</pw>"
       ? "</benutzer>"
       ok% = - 1
     j% = RECCOUNT (GADRDat$)
     s% = 0
     g% = 0
     locktest% = MNdisabled%("DATALOCK")
     IF codeku% > 0 THEN WHILE ok% = - 1
     IF codeku% = 0 THEN WHILE NOT EOF (GADRDat$)
       sok% = - 1
       codeku1% = codeku.GADRDat$
       IF codeku% > 0 THEN fiimak$ = "j"
       IF codeku% = 0 THEN 
         fiimak$ = fiimmak.GADRDat$
         s% = s% + 1
         SET STATUS STR$ (s%,",999999") + " von " + STR$ (j%,",999999") + " gefunden " + STR$ (g%,",999999")
       END IF 
      IF fiimak$ <> "j" THEN 
        sok% = 0
      END IF 
      IF locktest% THEN 
        IF Sperre.ADRESSEN <> 0 AND Sperre.ADRESSEN <> vcodema% THEN sok% = 0
      END IF 
      IF sok% = - 1 THEN 
        g% = g% + 1
       ? "  <adresse>"
         ? "    <customerid>" + STR$ (codeku.GADRDat$,"000000") + "</customerid>"
         IF anrede.adressen LIKE "He*" OR anrede.adressen LIKE "Fr*" OR anrede.adressen LIKE "Fam*" THEN 
           ? "    <anrede>" + FN ansi(T1KL$(anrede.GADRDat$)) + "</anrede>"
           ? "    <firma>" + "</firma>"
           ? "    <vorname>" + FN ansi(T1KL$(vorname.GADRDat$)) + "</vorname>"
           ? "    <nachname>" + FN ansi(T1KL$(nachname.GADRDat$)) + "</nachname>"
         ELSE 
           ? "    <anrede>" + FN ansi(T1KL$(anrede.GADRDat$)) + "</anrede>"
           ? "    <firma>" + FN ansi(T1KL$(nachname.GADRDat$)) + " " + FN ansi(T1KL$(Geburtsname.GADRDat$)) + "</firma>"
           ? "    <vorname>" + "</vorname>"
           ? "    <nachname>" + FN ansi(T1KL$(vorname.GADRDat$)) + "</nachname>"
         END IF 
         ? "    <Strasse>" + FN ansi(T1KL$(Stra·e.GADRDat$)) + "</Strasse>"
         ? "    <plz>" + T1KL$(plz.GADRDat$) + "</plz>"
         ? "    <ort>" + FN ansi(T1KL$(ort.GADRDat$)) + "</ort>"
         ? "    <land>" + FN ansi(T1KL$(land.GADRDat$)) + "</land>"
         IF geburtstag.GADRDat$ < 1 THEN 
           ? "    <geburtstag>" + "</geburtstag>"
         ELSE 
           ? "    <geburtstag>" + DATE$ (geburtstag.GADRDat$,"0d.mm.yyyy") + "</geburtstag>"
         END IF 
         ? "    <beruf></beruf>"
         ? "    <hobby></hobby>"
         ? "    <notiz>" + FN ansi(T1KL$(notiz.GADRDat$)) + "</notiz>"
 
         IF EXISTS (codeku1%,codeku.telefon) THEN 
           FILE "telefon"
           INDEX codeku.telefon
           SELECT FIRST FILE "telefon" INDEX codeku.telefon
           SELECT KEY codeku1% FILE "telefon" INDEX codeku.telefon
           fon% = 0
           fax% = 0
           mobil% = 0
           mail% = 0
           www% = 0
           REDIM Telart$( RECCOUNT (GTelDat$),1)
           REDIM TelNum$( RECCOUNT (GTelDat$),1)
           REDIM Telart$( RECCOUNT (GTelDat$))
           REDIM TelNum$( RECCOUNT (GTelDat$))
           a% = 0
           WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku1%
             Telart$(a%) = T1KL$(Art.GTelDat$)
             TelNum$(a%) = T1KL$(Nummer.GTelDat$)
             a% = a% + 1
             SELECT NEXT FILE GTelDat$
           WEND 
           FOR i% = a% - 1 TO 0 STEP - 1
             IF (Telart$(i%) LIKE "fon*" OR Telart$(i%) LIKE "*fon*") AND fon% = 0 THEN 
               ? "    <telefon>" + TelNum$(i%) + "</telefon>"
               fon% = 1
             END IF 
             IF (Telart$(i%) LIKE "fax*" OR Telart$(i%) LIKE "*fax*") AND fax% = 0 THEN 
               ? "    <fax>" + TelNum$(i%) + "</fax>"
               fax% = 1
             END IF 
             IF (Telart$(i%) LIKE "funk*" OR Telart$(i%) LIKE "*funk*" OR Telart$(i%) LIKE "hand*" OR Telart$(i%) LIKE "*hand*" OR Telart$(i%) LIKE "mobi*" OR Telart$(i%) LIKE "*mobi*") AND mobil% = 0 THEN 
               ? "    <mobil>" + TelNum$(i%) + "</mobil>"
                mobil% = 1
             END IF 
             IF (Telart$(i%) LIKE "mail*" OR Telart$(i%) LIKE "*mail*") AND mail% = 0 THEN 
               ? "    <email>" + TelNum$(i%) + "</email>"
               mail% = 1
             END IF 
             IF (Telart$(i%) LIKE "www*" OR Telart$(i%) LIKE "*www*") AND www% = 0 THEN 
               ? "    <www>" + TelNum$(i%) + "</www>"
               www% = 1
             END IF 
           NEXT i%
           IF fon% = 0 THEN ? "  <telefon>" + "</telefon>"
           IF fax% = 0 THEN ? "  <fax>" + "</fax>"
           IF mobil% = 0 THEN ? "  <mobil>" + "</mobil>"
           IF mail% = 0 THEN ? "  <email>" + "</email>"
           IF www% = 0 THEN ? " <www>" + "</www>"
 
           ? "<TelefonfuerNotiz>"
 
           FILE "telefon"
           INDEX codeku.telefon
           SELECT FIRST FILE "telefon" INDEX codeku.telefon
           SELECT KEY codeku1% FILE "telefon" INDEX codeku.telefon
           REDIM Telart$( RECCOUNT (GTelDat$),1)
           REDIM Telart$( RECCOUNT (GTelDat$))
           REDIM TelNum$( RECCOUNT (GTelDat$),1)
           REDIM TelNum$( RECCOUNT (GTelDat$))
           a% = 0
           WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku1%
             Telart$(a%) = T1KL$(Art.GTelDat$)
             TelNum$(a%) = T1KL$(Nummer.GTelDat$ + "  (" + kart1.GTeldat$ + "/" + Kart2.Gteldat$ + ")")
             a% = a% + 1
             SELECT NEXT FILE GTelDat$
           WEND 
           FOR i% = a% - 1 TO 0 STEP - 1
           ? FN ansi(Telart$(i%) + " / " + TelNum$(i%))
           NEXT i%
           ? "Adressstatus: " + UCASE$ ( FN ansi(T1KL$(ADRStatus.GADRDat$)))
           ? "Adressgruppe: " + UCASE$ ( FN ansi(T1KL$(ADRGruppe.GADRDat$)))
           ? "Stichworte: " + UCASE$ ( FN ansi(T1KL$(Stichwort.GADRDat$)))
 
           ? "</TelefonfuerNotiz>"
 
         ELSE 
           ? "    <telefon>" + "</telefon>"
           ? "    <fax>" + "</fax>"
           ? "    <mobil>" + "</mobil>"
           ? "    <email>" + "</email>"
           ? "    <www>" + "</www>"
           ? "<TelefonfuerNotiz>"
           ? "</TelefonfuerNotiz>"
         END IF 
 
       ? "  </adresse>"
      END IF 
     IF codeku% > 0 THEN ok% = 0
endaex290720051: 
     SELECT NEXT FILE GADRDat$
     WEND 
       ? "</export>"
       CLOSE OUTPUT 
 
       inidat$ = GMACodeDir$ + "OUTLOOK\ergebnis.ini"
       expodir$ = GMACodeDir$ + "OUTLOOK"
       DIRECTORY expodir$
       a% = CALL ("ShellExecute",0,"open",datexe$,"","",1)
       
       i% = 0
       ok% = 0
       WHILE NOT EXISTS (inidat$) AND ok% = 0
         WAIT FOR 1
         IF EXISTS (inidat$) THEN ok% = 1
         i% = i% + 1
         IF i% = 10 THEN 
           REQUEST "Der Transfer wurde noch nicht abgeschlossen!","Weitere 10 Sekunden warten?",130,req%
           IF req% = 1 THEN 
             i% = 0
           ELSE 
             ok% = - 1
           END IF 
         END IF 
       WEND 
       IF EXISTS (inidat$) THEN 
         fehler$ = ReadDesti$("IMPORT","FEHLER",inidat$)
         anz$ = ReadDesti$("IMPORT","Anzahl",inidat$)
         IF Fehler$ = "" OR fehler$ LIKE "leer" THEN 
           IF codeku1% > 0 THEN REQUEST "Export nach Outlook beendet!","",2
           IF codeku% > 0 THEN 
             REM REQUEST "Sollen auch die zur Adresse gehîrenden Termine exportiert werden?","",135,req%
             optemail% = 1
             DIM dlg1 AS Dialog
             DIM control AS DialogControl 
 
             Superbase.Dialogs.Add("Dialogname")
             SET dlg1 = Superbase.Dialogs.Dialogname
             dlg1.Move(0,0,150,73)
             dlg1.Caption = "Termine exportieren?"
             dlg1.FontName = "MS Sans Serif"
             dlg1.FontSize = 8
 
             SET control = dlg1.Add("DialogFrame1","DialogFrame")
             control.Move(2,8,149,44)
             control.Caption = " WÑhlen Sie eine Option "
 
             SET control = dlg1.Add("DialogOptionButton1","DialogOptionButton")
             control.Move(6,20,114,10)
             control.Caption = "nur NICHT-erledigte Termine"
             control.Bind("optemail%")
             control.ValueOn = 1
 
             SET control = dlg1.Add("DialogOptionButton2","DialogOptionButton")
             control.Move(6,32,114,9)
             control.Caption = "alle Termine"
             control.Bind("optemail%")
             control.ValueOn = 0
 
 
 
             SET control = dlg1.Add("DialogCommandButton1","DialogCommandButton")
             control.Move(39,54,43,16)
             control.Default = 1
             control.Caption = "OK"
             control.ReturnValue = 1
 
             SET control = dlg1.Add("DialogCommandButton2","DialogCommandButton")
             control.Move(85,54,42,16)
             control.Caption = "Abbruch"
             control.ReturnValue = 0
 
             DIALOG "Dialogname",req%
             REMOVE DIALOG "Dialogname"
             IF req% = 1 THEN 
               CALL TerAExpOutl(codeku%,optemail%)
             END IF 
           END IF 
         ELSE 
           CALL Fehler ("Beim Export nach Outlook ist ein Fehler aufgetreten!","Fehlerkennung: " + fehler$)
         END IF 
       END IF 
  ELSE 
    CALL Fehler ("Export wurde abgebrochen","")
  END IF 
  DIRECTORY _netpath$
 END SUB 
 
 REM Export des aktuellen Termins
 REM z.B. zur öbergabe an Outlook
 REM par% = 0 - alle Termine
 REM par% = 1 - nur nichterledigte Termine

SUB TerExpOutl(codeaq%,par%)
  GADRDat$ = "ADRESSEN"
  GTelDat$ = "TELEFON"
  GAkquiDat$ = GAkquiDat$
  codeku% = codeku.GAkquiDat$
  codeku1% = codeku%
  kunr% = codeku%
  knr% = codeku%
  codeku1% = kunr%
  CALL Fehler("TrÑgt den aktuellen Termin in Outlook ein!","")
  REM REQUEST "Soll der Export durchgefÅhrt werden?","",130,req%
  req% = 1
  IF req% = 1 THEN 
    expodir$ = GMACodeDir$ + "OUTLOOK"
    ON ERROR GOTO t270720051
    MAKE DIRECTORY expodir$
    GOTO t270720052
t270720051: 
    f% = - 1
t270720052: 
    expodir$ = GMACodeDir$ + "OUTLOOK\"
    ON ERROR GOTO ErrorHandler 
 
 
       IF EXISTS (expodir$ + "Termine.xml") THEN 
         DELETE expodir$ + "*.xml"
       END IF 
       datexe$ = GMACodeDir$ + "OUTLOOK\TerminMaker.exe"
       a% = CALL ("_SBFileExists",datexe$)
 
       nach$ = GMACodeDir$ + "OUTLOOK\KontaktMaker.exe"
       b% = CALL ("_SBFileExists",nach$)
 
       nach$ = GMACodeDir$ + "OUTLOOK\Interop.Microsoft.Office.Core.dll"
       c% = CALL ("_SBFileExists",nach$)
 
       nach$ = GMACodeDir$ + "OUTLOOK\Interop.Outlook.dll"
       d% = CALL ("_SBFileExists",nach$)
      
       IF a% <> - 1 OR b% <> - 1 OR c% <> - 1 OR d% <> - 1 THEN 
         ON ERROR GOTO w010820052
         DELETE GMACodeDir$ + "OUTLOOK\*.*"
w010820052: 
         ON ERROR GOTO ErrorHandler
 
         von$ = _netpath$ + "outlook\KontaktMaker.exe"
         nach$ = GMACodeDir$ + "OUTLOOK\KontaktMaker.exe"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "outlook\TerminMaker.exe"
         nach$ = GMACodeDir$ + "OUTLOOK\TerminMaker.exe"
         a% = CALL ("_SBFileCopy",von$,nach$)
  
 
         von$ = _netpath$ + "outlook\Interop.Microsoft.Office.Core.dll"
         nach$ = GMACodeDir$ + "OUTLOOK\Interop.Microsoft.Office.Core.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "outlook\Interop.Outlook.dll"
         nach$ = GMACodeDir$ + "OUTLOOK\Interop.Outlook.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
       END IF 


       SELECT FIRST FILE "supervis" INDEX codema.supervis
       SELECT KEY GMACodema% FILE "supervis" INDEX codema.supervis
       benutz$ = Outlookname.supervis
       benupw$ = Outlookpw.supervis
       DIM Telart$( RECCOUNT (GTelDat$))
       DIM TelNum$( RECCOUNT (GTelDat$))
       DIM Aktion$( RECCOUNT ("Aktionen") + 1)
       DIM Aktiongew$( RECCOUNT ("Aktionen") + 1)
       DIM Mitarb$( RECCOUNT ("Supervis") + 1)
       DIM Mitarbgew$( RECCOUNT ("Supervis") + 1)
       MOUSE OFF 
       cfile$ = FILE 
       FILE "aktionen"
       SELECT FIRST 
       a% = 1
       Aktion$(0) = "<alle Aktionen>"
       WHILE NOT EOF ("Aktionen")
         IF Bezeichnung.aktionen <> "" THEN 
           Aktion$(a%) = Bezeichnung.aktionen + SPACE$ (100) + STR$ (codeak.aktionen,"000000")
           a% = a% + 1
         END IF 
         SELECT NEXT FILE "Aktionen"
       WEND 
       FILE "supervis"
       SELECT FIRST 
       mitarb$(0) = "<alle Mitarbeiter>"
       a% = 1
       WHILE NOT EOF ("supervis")
         mitarb$(a%) = Name.supervis + SPACE$ (100) + STR$ (codema.supervis,"000000")
         a% = a% + 1
         SELECT NEXT FILE "supervis"
       WEND 
       FILE cfile$
       OPEN expodir$ + "Termine.xml" FOR OUTPUT 
       ? "<?xml version=" + CHR$ (34) + "1.0" + CHR$ (34) + " encoding=" + CHR$ (34) + "ISO-8859-1" + CHR$ (34) + "?> "
       
       ? "<export>"
       ? "<MODUS>EXPORT</MODUS>"
       ? "<benutzer>"
         ? "  <name>" + benutz$ + "</name>"
         ? "  <pw>" + benupw$ + "</pw>"
       ? "</benutzer>"
       locktest% = MNdisabled%("DATALOCK")
    FILE GAKquiDat$
    IF codeaq% = 0 THEN 
      INDEX codeaq.GAKquiDat$
      SELECT FIRST FILE GAKquiDat$
    END IF 
    i% = 0
    j% = RECCOUNT (GAKquiDat$)
    g% = 0
    IF codeaq% = 0 THEN 
             optemail% = 1
 

      DIM dlg AS Dialog
      DIM control AS DialogControl
 
      Superbase.Dialogs.Add("Dialogname")
      SET dlg = Superbase.Dialogs.Dialogname
      dlg.Move(0,0,406,222)
      dlg.Caption = "Termine exportieren"
      dlg.FontName = "MS Sans Serif"
      dlg.FontSize = 8
 
      SET control = dlg.Add("DialogLabel1","DialogLabel")
      control.Move(130,4,199,12)
      control.Caption = "Aktionen"
 
      SET control = dlg.Add("DialogFrame1","DialogFrame")
      control.Move(0,6,123,72)
      control.Caption = "WÑhlen Sie eine Option"
 
      SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
      control.Move(5,24,108,11)
      control.Caption = "nur NICHT-erledigte Termine"
      control.Bind("optemail%")
      control.ValueOn = 1
 
      SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
      control.Move(5,44,67,13)
      control.Caption = "alle Termine"
      control.Bind("optemail%")
      control.ValueOn = 0
 
      SET control = dlg.Add("DialogListBox1","DialogListBox")
      control.Move(129,16,269,81)
      control.MultiSelect = 1
      control.Sorted = 1
      control.ScrollBars = 2
      control.Bind("Aktion$","Aktiongew$")
 
      SET control = dlg.Add("DialogLabel3","DialogLabel")
      control.Move(8,84,43,10)
      control.Caption = "ab Datum:"
 
      SET control = dlg.Add("DialogTextBox1","DialogTextBox")
      control.Move(7,97,61,11)
      control.MaxLength = 10
      control.TextBinding = "von$"
 
      SET control = dlg.Add("DialogLabel2","DialogLabel")
      control.Move(130,102,199,11)
      control.Caption = "Mitarbeiter"
 
      SET control = dlg.Add("DialogListBox2","DialogListBox")
      control.Move(129,113,269,74)
      control.MultiSelect = 1
      control.Sorted = 1
      control.ScrollBars = 2
      control.Bind("Mitarb$","Mitarbgew$")
 
      SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
      control.Move(122,201,55,15)
      control.Default = 1
      control.Caption = "&OK"
      control.ReturnValue = 1
 
      SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
      control.Move(178,201,56,15)
      control.Caption = "&Abbruch"
      control.ReturnValue = 0

      DIALOG "Dialogname",req%
      REMOVE DIALOG "Dialogname"

    END IF 
    IF codeaq% > 0 THEN ok% = - 1
    IF codeaq% > 0 THEN WHILE ok% = - 1
    IF codeaq% = 0 THEN WHILE NOT EOF (GAKquiDat$)
       sok% = - 1
       codeku% = codeku.GAkquiDat$
       SELECT FIRST FILE GADRDat$ INDEX codeku.GADRDat$
       SELECT KEY codeku% FILE GADRDat$ INDEX codeku.GADRDat$
       codeku1% = codeku%
       IF locktest% THEN 
         IF Sperre.ADRESSEN <> 0 AND Sperre.ADRESSEN <> vcodema% THEN sok% = 0
       END IF 
       IF codeaq% > 0 THEN fiimak$ = "j"
       IF codeaq% = 0 THEN 
         fiimak$ = fiimmak.GADRDat$
         i% = i% + 1
         SET STATUS STR$ (i%,",999999") + " von " + STR$ (j%,",999999") + " gefunden " + STR$ (g%,",999999")
       END IF 
      IF fiimak$ <> "j" THEN 
        sok% = 0
      END IF 
      IF par% = 1 THEN 
        IF erledigt_Termin.GAkquiDat$ LIKE "j" THEN sok% = 0
      END IF 
      IF sok% = - 1 THEN 
       g% = g% + 1
       ? "<termine>"
       ? "<customerid>" STR$ (codeaq.GAkquiDat$,"000000") + "</customerid>"
       IF datum.GAkquiDat$ > 0 THEN 
         ? "<datum>" + DATE$ (datum.GAkquiDat$,"0d.mm.yyyy") + "</datum>"
       ELSE 
         ? "<datum></datum>"
       END IF 
 
       IF termin.GAkquiDat$ > 0 THEN 
         IF ErDatum.GAkquiDat$ > 0 AND ErDatum.GAkquiDat$ > termin.GAkquiDat$ THEN 
           ? "<termin>" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy") + "</termin>"
         ELSE 
           ? "<termin>" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy") + "</termin>"
         END IF 
       ELSE 
         IF ErDatum.GAkquiDat$ > 0 THEN 
           ? "<termin>" + DATE$ (ErDatum.GAkquiDat$,"0d.mm.yyyy") + "</termin>"
         ELSE 
           ? "<termin></termin>"
         END IF 
       END IF 
  
       IF uhrzeit.GAkquiDat$ > 0 THEN 
         ? "<uhrzeit>" + TIME$ (uhrzeit.GAkquiDat$,"hh:mm") + "</uhrzeit>"
       ELSE 
         ? "<uhrzeit>00:00</uhrzeit>"
       END IF 
 
       IF ErDatum.GAkquiDat$ > 0 THEN 
         IF ErDatum.GAkquiDat$ > termin.GAkquiDat$ THEN 
           ? "<awvdatum>" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy") + "</awvdatum>"
         ELSE 
           ? "<awvdatum>" + DATE$ (ErDatum.GAkquiDat$,"0d.mm.yyyy") + "</awvdatum>"
         END IF 
       ELSE 
         ? "<awvdatum></awvdatum>"
       END IF 



       IF Erzeit.GAkquiDat$ > 0 THEN 
         ? "<awvzeit>" + TIME$ (Erzeit.GAkquiDat$,"hh:mm") + "</awvzeit>"
       ELSE 
         ? "<awvzeit>09:00</awvzeit>"
       END IF 
 
       IF Dauer.GAkquiDat$ > 0 THEN 
         ? "<dauer>" + TIME$ (dauer.GAkquiDat$,"hh:mm") + "</dauer>"
       ELSE 
         ? "<dauer>00:00</dauer>"
       END IF 
       ? "<erledigt>" + erledigt_Termin.GAkquiDat$ + "</erledigt>"
       ? "<notiz>" + FN ansi(T1KL$(Notiz.GAkquiDat$)) + "</notiz>"
       ? "<ergebnis>" + FN ansi(T1KL$(ergebnis.GAkquiDat$)) + "</ergebnis>"
 
 
        ? "  <adresse>"
 
         ? FN ansi(T1KL$(anrede.GADRDat$))
         ? FN ansi(T1KL$(Geburtsname.GADRDat$))
         ? FN ansi(T1KL$(vorname.GADRDat$))
         ? FN ansi(T1KL$(nachname.GADRDat$))
         ? FN ansi(T1KL$(Stra·e.GADRDat$))
         ? T1KL$(plz.GADRDat$)
         ? FN ansi(T1KL$(ort.GADRDat$))
         ? FN ansi(T1KL$(land.GADRDat$))
         IF geburtstag.GADRDat$ < 1 THEN 
         ELSE 
           ? "Geburtstag:" + DATE$ (geburtstag.GADRDat$,"0d.mm.yyyy")
         END IF 
         IF EXISTS (codeku1%,codeku.telefon) THEN 
 
           FILE "telefon"
           INDEX codeku.telefon
           SELECT FIRST FILE "telefon" INDEX codeku.telefon
           SELECT KEY codeku1% FILE "telefon" INDEX codeku.telefon
           REDIM Telart$( RECCOUNT (GTelDat$),1)
           REDIM Telart$( RECCOUNT (GTelDat$))
           REDIM TelNum$( RECCOUNT (GTelDat$),1)
           REDIM TelNum$( RECCOUNT (GTelDat$))
           a% = 0
           WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku1%
             Telart$(a%) = T1KL$(Art.GTelDat$)
             TelNum$(a%) = T1KL$(Nummer.GTelDat$ + "  (" + kart1.GTeldat$ + "/" + Kart2.Gteldat$ + ")")
             a% = a% + 1
             SELECT NEXT FILE GTelDat$
           WEND 
           FOR i% = a% - 1 TO 0 STEP - 1
           ? FN ansi(Telart$(i%) + " / " + TelNum$(i%))
           NEXT i%
         END IF 
        ? "  </adresse>"
       ? "</termine>"
       ? ""
      END IF 
       IF codeaq% > 0 THEN ok% = 0
       FILE GAKquiDat$
       SELECT NEXT FILE GAKquiDat$
      WEND 
      ? "</export>"
       CLOSE OUTPUT 
       REM CALL Fehler("Fertisch","Terminexport")
       MOUSE OFF 
       inidat$ = GMACodeDir$ + "OUTLOOK\ergebnis.ini"
       expodir$ = GMACodeDir$ + "OUTLOOK"
       DIRECTORY expodir$
       a% = CALL ("ShellExecute",0,"open",datexe$,"","",1)
       SET STATUS "Bitte warten, der/die Termine werden in Outlook eingetragen"
       i% = 0
       ok% = 0
       WHILE NOT EXISTS (inidat$) AND ok% = 0
         WAIT FOR 1
         IF EXISTS (inidat$) THEN ok% = 1
         i% = i% + 1
         IF i% = 10 THEN 
           REQUEST "Der Transfer wurde noch nicht abgeschlossen!","Weitere 10 Sekunden warten?",130,req%
           IF req% = 1 THEN 
             i% = 0
           ELSE 
             ok% = - 1
           END IF 
         END IF 
       WEND 
       IF EXISTS (inidat$) THEN 
         fehler$ = ReadDesti$("IMPORT","FEHLER",inidat$)
         anz$ = ReadDesti$("IMPORT","Anzahl",inidat$)
         IF Fehler$ = "" OR fehler$ LIKE "leer" THEN 
           REQUEST "Export nach Outlook beendet!","",2
         ELSE 
           CALL Fehler ("Beim Export nach Outlook ist ein Fehler aufgetreten!","Fehlerkennung: " + fehler$)
         END IF 
       END IF 
  ELSE 
    CALL Fehler ("Export wurde abgebrochen","")
  END IF 
  DIRECTORY _netpath$
  MOUSE ON 
 END SUB 
 
 REM die zu einer Adresse gehîrenden Termine exportieren
 REM par% = 0 - alle Termine
 REM par% = 1 - nur nichterledigte Termine 
SUB TerAExpOutl(codeku%,par%)
  GADRDat$ = "ADRESSEN"
  GTelDat$ = "TELEFON"
  GAkquiDat$ = GAkquiDat$
  codeku1% = codeku%
  kunr% = codeku%
  knr% = codeku%
  codeku1% = kunr%
  SELECT FIRST FILE GADRDat$ INDEX codeku.GADRDat$
  SELECT KEY codeku% FILE GADRDat$ INDEX codeku.GADRDat$
  REM CALL Fehler("TrÑgt den aktuellen Termin in Outlook ein!","")
  REM REQUEST "Soll der Export durchgefÅhrt werden?","",130,req%
  req% = 1
  IF req% = 1 THEN 
    expodir$ = GMACodeDir$ + "OUTLOOK"
    ON ERROR GOTO ta270720051
    MAKE DIRECTORY expodir$
    GOTO ta270720052
ta270720051: 
    f% = - 1
ta270720052: 
    expodir$ = GMACodeDir$ + "OUTLOOK\"
    ON ERROR GOTO ErrorHandler 
 
 
       IF EXISTS (expodir$ + "Termine.xml") THEN 
         DELETE expodir$ + "*.xml"
       END IF 
       datexe$ = GMACodeDir$ + "OUTLOOK\TerminMaker.exe"
       a% = CALL ("_SBFileExists",datexe$)
 
       nach$ = GMACodeDir$ + "OUTLOOK\KontaktMaker.exe"
       b% = CALL ("_SBFileExists",nach$)
 
       nach$ = GMACodeDir$ + "OUTLOOK\Interop.Microsoft.Office.Core.dll"
       c% = CALL ("_SBFileExists",nach$)
 
       nach$ = GMACodeDir$ + "OUTLOOK\Interop.Outlook.dll"
       d% = CALL ("_SBFileExists",nach$)
      
       IF a% <> - 1 OR b% <> - 1 OR c% <> - 1 OR d% <> - 1 THEN 
         ON ERROR GOTO w010820053
         DELETE GMACodeDir$ + "OUTLOOK\*.*"
w010820053: 
         ON ERROR GOTO ErrorHandler
 
         von$ = _netpath$ + "outlook\KontaktMaker.exe"
         nach$ = GMACodeDir$ + "OUTLOOK\KontaktMaker.exe"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "outlook\TerminMaker.exe"
         nach$ = GMACodeDir$ + "OUTLOOK\TerminMaker.exe"
         a% = CALL ("_SBFileCopy",von$,nach$)
  
 
         von$ = _netpath$ + "outlook\Interop.Microsoft.Office.Core.dll"
         nach$ = GMACodeDir$ + "OUTLOOK\Interop.Microsoft.Office.Core.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "outlook\Interop.Outlook.dll"
         nach$ = GMACodeDir$ + "OUTLOOK\Interop.Outlook.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
       END IF 
 
 
       SELECT FIRST FILE "supervis" INDEX codema.supervis
       SELECT KEY GMACodema% FILE "supervis" INDEX codema.supervis
       benutz$ = Outlookname.supervis
       benupw$ = Outlookpw.supervis
       DIM Telart$( RECCOUNT (GTelDat$))
       DIM TelNum$( RECCOUNT (GTelDat$))
       MOUSE OFF 
       OPEN expodir$ + "Termine.xml" FOR OUTPUT 
       ? "<?xml version=" + CHR$ (34) + "1.0" + CHR$ (34) + " encoding=" + CHR$ (34) + "ISO-8859-1" + CHR$ (34) + "?> "
       
       ? "<export>"
       ? "<MODUS>EXPORT</MODUS>"
       ? "<benutzer>"
         ? "  <name>" + benutz$ + "</name>"
         ? "  <pw>" + benupw$ + "</pw>"
       ? "</benutzer>"
    FILE GAKquiDat$
    INDEX codeku.GAKquiDat$
    SELECT FIRST FILE GAKquiDat$ INDEX codeku.GAKquiDat$
    SELECT KEY codeku1% FILE GAKquiDat$ INDEX codeku.GAKquiDat$
    WHILE codeku.GAKquiDat$ = codeku1%
      fiimak$ = "j"
      sok% = - 1
      IF fiimak$ <> "j" THEN 
        sok% = 0
      END IF 
      IF par% = 1 THEN 
        IF erledigt_Termin.GAkquiDat$ LIKE "j" THEN sok% = 0
      END IF 
      IF sok% = - 1 THEN 
       ? "<termine>"
       ? "<customerid>" STR$ (codeaq.GAkquiDat$,"000000") + "</customerid>"
       IF datum.GAkquiDat$ > 0 THEN 
         ? "<datum>" + DATE$ (datum.GAkquiDat$,"0d.mm.yyyy") + "</datum>"
       ELSE 
         ? "<datum></datum>"
       END IF 
 
       IF termin.GAkquiDat$ > 0 THEN 
         IF ErDatum.GAkquiDat$ > 0 AND ErDatum.GAkquiDat$ > termin.GAkquiDat$ THEN 
           ? "<termin>" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy") + "</termin>"
         ELSE 
           ? "<termin>" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy") + "</termin>"
         END IF 
       ELSE 
         IF ErDatum.GAkquiDat$ > 0 THEN 
           ? "<termin>" + DATE$ (ErDatum.GAkquiDat$,"0d.mm.yyyy") + "</termin>"
         ELSE 
           ? "<termin></termin>"
         END IF 
       END IF 
 
       IF uhrzeit.GAkquiDat$ > 0 THEN 
         ? "<uhrzeit>" + TIME$ (uhrzeit.GAkquiDat$,"hh:mm") + "</uhrzeit>"
       ELSE 
         ? "<uhrzeit>00:00</uhrzeit>"
       END IF 
 
       IF ErDatum.GAkquiDat$ > 0 THEN 
         IF ErDatum.GAkquiDat$ > termin.GAkquiDat$ THEN 
           ? "<awvdatum>" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy") + "</awvdatum>"
         ELSE 
           ? "<awvdatum>" + DATE$ (ErDatum.GAkquiDat$,"0d.mm.yyyy") + "</awvdatum>"
         END IF 
       ELSE 
         ? "<awvdatum></awvdatum>"
       END IF 

       IF Erzeit.GAkquiDat$ > 0 THEN 
         ? "<awvzeit>" + TIME$ (Erzeit.GAkquiDat$,"hh:mm") + "</awvzeit>"
       ELSE 
         ? "<awvzeit>00:00</awvzeit>"
       END IF 
 
       IF Dauer.GAkquiDat$ > 0 THEN 
         ? "<dauer>" + TIME$ (dauer.GAkquiDat$,"hh:mm") + "</dauer>"
       ELSE 
         ? "<dauer>00:00</dauer>"
       END IF 
       ? "<erledigt>" + erledigt_Termin.GAkquiDat$ + "</erledigt>"
       ? "<notiz>" + FN ansi(T1KL$(Notiz.GAkquiDat$)) + "</notiz>"
       ? "<ergebnis>" + FN ansi(T1KL$(ergebnis.GAkquiDat$)) + "</ergebnis>"
 
 
        ? "  <adresse>"
 
         ? FN ansi(T1KL$(anrede.GADRDat$))
         ? FN ansi(T1KL$(Geburtsname.GADRDat$))
         ? FN ansi(T1KL$(vorname.GADRDat$))
         ? FN ansi(T1KL$(nachname.GADRDat$))
         ? FN ansi(T1KL$(Stra·e.GADRDat$))
         ? T1KL$(plz.GADRDat$)
         ? FN ansi(T1KL$(ort.GADRDat$))
         ? FN ansi(T1KL$(land.GADRDat$))
         IF geburtstag.GADRDat$ < 1 THEN 
         ELSE 
           ? "Geburtstag:" + DATE$ (geburtstag.GADRDat$,"0d.mm.yyyy")
         END IF 
         IF EXISTS (codeku1%,codeku.telefon) THEN 
 
           FILE "telefon"
           INDEX codeku.telefon
           SELECT FIRST FILE "telefon" INDEX codeku.telefon
           SELECT KEY codeku1% FILE "telefon" INDEX codeku.telefon
           REDIM Telart$( RECCOUNT (GTelDat$),1)
           REDIM Telart$( RECCOUNT (GTelDat$))
           REDIM TelNum$( RECCOUNT (GTelDat$),1)
           REDIM TelNum$( RECCOUNT (GTelDat$))
           a% = 0
           WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku1%
             Telart$(a%) = T1KL$(Art.GTelDat$)
             TelNum$(a%) = T1KL$(Nummer.GTelDat$ + "  (" + kart1.GTeldat$ + "/" + Kart2.Gteldat$ + ")")
             a% = a% + 1
             SELECT NEXT FILE GTelDat$
           WEND 
           FOR i% = a% - 1 TO 0 STEP - 1
           ? FN ansi(Telart$(i%) + " / " + TelNum$(i%))
           NEXT i%
         END IF 
        ? "  </adresse>"
       ? "</termine>"
       ? ""
      END IF 
       IF codeaq% > 0 THEN ok% = 0
       FILE GAKquiDat$
       SELECT NEXT FILE GAKquiDat$
      WEND 
      ? "</export>"
       CLOSE OUTPUT 
       REM CALL Fehler("Fertisch","Terminexport")
       MOUSE OFF 
       inidat$ = GMACodeDir$ + "OUTLOOK\ergebnis.ini"
       expodir$ = GMACodeDir$ + "OUTLOOK"
       DIRECTORY expodir$
       a% = CALL ("ShellExecute",0,"open",datexe$,"","",1)
       SET STATUS "Bitte warten, der/die Termine werden in Outlook eingetragen"
       i% = 0
       ok% = 0
       WHILE NOT EXISTS (inidat$) AND ok% = 0
         WAIT FOR 1
         IF EXISTS (inidat$) THEN ok% = 1
         i% = i% + 1
         IF i% = 10 THEN 
           REQUEST "Der Transfer wurde noch nicht abgeschlossen!","Weitere 10 Sekunden warten?",130,req%
           IF req% = 1 THEN 
             i% = 0
           ELSE 
             ok% = - 1
           END IF 
         END IF 
       WEND 
       IF EXISTS (inidat$) THEN 
         fehler$ = ReadDesti$("IMPORT","FEHLER",inidat$)
         anz$ = ReadDesti$("IMPORT","Anzahl",inidat$)
         IF Fehler$ = "" OR fehler$ LIKE "leer" THEN 
           REQUEST "Export nach Outlook beendet!","",2
         ELSE 
           CALL Fehler ("Beim Export nach Outlook ist ein Fehler aufgetreten!","Fehlerkennung: " + fehler$)
         END IF 
       END IF 
  ELSE 
    CALL Fehler ("Export wurde abgebrochen","")
  END IF 
  DIRECTORY _netpath$
  MOUSE ON 
 END SUB 
 

 REM Benachrichtigungsemail fÅr Zugangsdaten 05.10.2005 noch nicht fertig
 REM Felder InternetName, InternetPasswo und InternetEmail.adressen auslesen und Åbergeben
 REM in ADRsub% = 200
SUB SendEMAIL1_old(Nummer$,codeku%)
   SELECT FIRST FILE "supervis"
   SELECT KEY GMACodeMA% FILE "Supervis" INDEX codema.supervis
   SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
   adresse$ = Nachname.adressen + "-" + Vorname.adressen
   ret% = 0
   TO1$ = Nummer$
   Host$ = EMAILSHost.supervis
   IF LTRIM$ (Host$) = "" THEN 
     CALL Fehler("EMAIL kann nicht versandt werden, da fÅr den User " + Name.supervis + " das Feld <Host> nicht ausgefÅllt wurde!","")
     GOTO end070520031
   END IF 
   UserID$ = EMAILSUserID.supervis
   AFirma$ = FN ansi(EMAILSAFirma.supervis)
   AName$ = FN ansi(EMAILSAName.supervis)
   ANUmmer$ = EMAILNummer.supervis
   BCC$ = EMAILSKopie.supervis
   Sen$ = EMAILSErg.supervis
   port$ = LTRIM$ ( STR$ (EMAILSPort.supervis,"999999"))
   IF port$ = "" THEN port$ = "25"
   IF EMAILSNummer.supervis <> "" THEN 
     Bersend$ = EMAILSNummer.supervis
   ELSE 
     Bersend$ = EMAILNummer.supervis
   END IF 
   Bersend1$ = EMAILSNummer1.supervis
   Text1$ = FN ansi(EMAILText1.supervis)
   Text2$ = FN ansi(EMAILText2.supervis)
  
   t1t$ = "anbei uebersenden wir Ihnen die Zugangsdaten fuer Ihr Update des Programmes SmartPROVIS" + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
   t1t$ = t1t$ + "Internetadresse: http://www.codie.com" + CHR$ (13) + CHR$ (10)
   t1t$ = t1t$ + "Benutzername: " + Internetname.adressen + CHR$ (13) + CHR$ (10)
   t1t$ = t1t$ + "Passwort: " + Internetpasswo.adressen + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
   t1t$ = t1t$ + "Bitte denken Sie daran eine komplette Datensicherung des gesamten CODie-Ordners zu erstellen!!!!!!!!!"
   
   Betreff$ = "CODie-SmartPROVIS Update"

   BAnrede$ = FN ansi(Briefanrede.adressen) + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + t1t$
   Hpop3$ = ""
   HPPort$ = ""
   PUID$ = ""
   PJN$ = EMAILPOP3JN.supervis
   IF EMAILPOP3JN.supervis = "TRUE" THEN 
     Hpop3$ = EMAILPHost.supervis
     HPPort$ = LTRIM$ ( STR$ (EMAILPPort.supervis,"999999"))
     IF HPPort$ = "0" THEN HPPort$ = "110"
     PUID$ = EmailPUserID.supervis
     Ppassw$ = EMAILPPasww.supervis
   END IF 
 
   alltxt$ = GMACodeDir$ + "codietes.txt"
   ret% = CALL ("_SendEMAILForm",TO1$,Host$,port$,UserID$,AFirma$,AName$,ANummer$,BCC$,Sen$,adresse$,Bersend$,alltxt$,Betreff$,Text1$,Text2$,BAnrede$,Bersend1$,Hpop3$,PUID$,HPPort$,Ppassw$,PJN$,att1$)
   REM a% = CALL ("ShellExecute",0,"open",alltxt$,"","",1)
   REM CALL Fehler(Bersend$,"")
   IF Bersend$ <> "" AND ret% = - 1 THEN 
     GMailBetreff$ = Bersend$
     GMailIn% = - 1
     knr% = CodeKU%
     textdatei% = DOKNeu%(0,"allgemeine Schreiben",0)
     IF EXISTS (textdatei%,CodeDOK.dokument) AND textdatei% > 0 THEN 
       SELECT KEY textdatei% FILE "dokument" INDEX CodeDOK.dokument
       datei1$ = _netpath$ + Dateiname.dokument
       COPY alltxt$ TO datei1$
     END IF 
   END IF 
   GOTO end070520031
   REM a% = VAL (ReadDesti$("COUNT","count",alltxt$))
   IF a% > 0 THEN 
     GMailBetreff$ = ReadDesti$("Betreff","Betreff",alltxt$)
     GMailIn% = - 1
     knr% = CodeKU%
     textdatei% = DOKNeu%(0,"allgemeine Schreiben",link%)
 
     IF EXISTS (textdatei%,CodeDOK.GDokDat$) AND textdatei% > 0 THEN 
       MOUSE OFF 
       SELECT KEY textdatei% FILE GDokDat$ INDEX CodeDOK.GDokDat$
       datei1$ = _netpath$ + Dateiname.GDokDat$
       OPEN datei1$ FOR OUTPUT 
       FOR i% = 0 TO a% - 1
         z$ = "z" + LTRIM$ ( STR$ (i%,"999999"))
         zw$ = ReadDesti$("Memo",z$,alltxt$)
         ? zw$
       NEXT i%
       CLOSE OUTPUT 
       REM b% = CALL ("ShellExecute",0,"open","datei.txt","","",1)
       REM CALL ADRDokRegister(textdatei%)
     END IF 
     MOUSE ON 
   END IF 
end070520031: 
   GMailBetreff$ = ""
   GMailIn% = 0
 END SUB 
 

 REM Werbeemail fÅr Zugangsdaten 05.10.2005 noch nicht fertig
 REM Felder InternetName, InternetPasswo und InternetEmail.adressen auslesen und Åbergeben
 REM in ADRsub% = 200
SUB SendEMAIL2_old(Nummer$,codeku%)
   SELECT FIRST FILE "supervis"
   SELECT KEY GMACodeMA% FILE "Supervis" INDEX codema.supervis
   SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
   adresse$ = Nachname.adressen + "-" + Vorname.adressen
   ret% = 0
   TO1$ = Nummer$
   Host$ = EMAILSHost.supervis
   IF LTRIM$ (Host$) = "" THEN 
     CALL Fehler("EMAIL kann nicht versandt werden, da fÅr den User " + Name.supervis + " das Feld <Host> nicht ausgefÅllt wurde!","")
     GOTO end070520031
   END IF 
   UserID$ = EMAILSUserID.supervis
   AFirma$ = FN ansi(EMAILSAFirma.supervis)
   AName$ = FN ansi(EMAILSAName.supervis)
   ANUmmer$ = EMAILNummer.supervis
   BCC$ = EMAILSKopie.supervis
   Sen$ = EMAILSErg.supervis
   port$ = LTRIM$ ( STR$ (EMAILSPort.supervis,"999999"))
   IF port$ = "" THEN port$ = "25"
   IF EMAILSNummer.supervis <> "" THEN 
     Bersend$ = EMAILSNummer.supervis
   ELSE 
     Bersend$ = EMAILNummer.supervis
   END IF 
   Bersend1$ = EMAILSNummer1.supervis
   Text1$ = FN ansi(EMAILText1.supervis)
   Text2$ = FN ansi(EMAILText2.supervis)
  
   t1t$ = FN ansi(Werbeemail.supervis) + CHR$ (13) + CHR$ (10)
   
   Betreff$ = FN ansi(Werbebetreff.supervis)
   Att1$ = FN ansi(emailatt1.supervis)
   BAnrede$ = FN ansi(Briefanrede.adressen) + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + t1t$
   Hpop3$ = ""
   HPPort$ = ""
   PUID$ = ""
   PJN$ = EMAILPOP3JN.supervis
   IF EMAILPOP3JN.supervis = "TRUE" THEN 
     Hpop3$ = EMAILPHost.supervis
     HPPort$ = LTRIM$ ( STR$ (EMAILPPort.supervis,"999999"))
     IF HPPort$ = "0" THEN HPPort$ = "110"
     PUID$ = EmailPUserID.supervis
     Ppassw$ = EMAILPPasww.supervis
   END IF 
 
   alltxt$ = GMACodeDir$ + "codietes.txt"
   ret% = CALL ("_SendEMAILForm",TO1$,Host$,port$,UserID$,AFirma$,AName$,ANummer$,BCC$,Sen$,adresse$,Bersend$,alltxt$,Betreff$,Text1$,Text2$,BAnrede$,Bersend1$,Hpop3$,PUID$,HPPort$,Ppassw$,PJN$,Att1$)
   REM a% = CALL ("ShellExecute",0,"open",alltxt$,"","",1)
   REM CALL Fehler(Bersend$,"")
   IF Bersend$ <> "" AND ret% = - 1 THEN 
     GMailBetreff$ = Bersend$
     GMailIn% = - 1
     knr% = CodeKU%
     textdatei% = DOKNeu%(0,"allgemeine Schreiben",0)
     IF EXISTS (textdatei%,CodeDOK.dokument) AND textdatei% > 0 THEN 
       SELECT KEY textdatei% FILE "dokument" INDEX CodeDOK.dokument
       datei1$ = _netpath$ + Dateiname.dokument
       COPY alltxt$ TO datei1$
     END IF 
   END IF 
   GOTO end070520031
   REM a% = VAL (ReadDesti$("COUNT","count",alltxt$))
   IF a% > 0 THEN 
     GMailBetreff$ = ReadDesti$("Betreff","Betreff",alltxt$)
     GMailIn% = - 1
     knr% = CodeKU%
     textdatei% = DOKNeu%(0,"allgemeine Schreiben",link%)
 
     IF EXISTS (textdatei%,CodeDOK.GDokDat$) AND textdatei% > 0 THEN 
       MOUSE OFF 
       SELECT KEY textdatei% FILE GDokDat$ INDEX CodeDOK.GDokDat$
       datei1$ = _netpath$ + Dateiname.GDokDat$
       OPEN datei1$ FOR OUTPUT 
       FOR i% = 0 TO a% - 1
         z$ = "z" + LTRIM$ ( STR$ (i%,"999999"))
         zw$ = ReadDesti$("Memo",z$,alltxt$)
         ? zw$
       NEXT i%
       CLOSE OUTPUT 
       REM b% = CALL ("ShellExecute",0,"open","datei.txt","","",1)
       REM CALL ADRDokRegister(textdatei%)
     END IF 
     MOUSE ON 
   END IF 
end070520031: 
   GMailBetreff$ = ""
   GMailIn% = 0
 END SUB 
 
 REM liste der ungÅltigen email-no 
 REM stichwort MAILDELIV2006Mai
 REM den Eintrag in Telefondatei auch markieren MDL
SUB UngMail()
 ON ERROR GOTO ErrorHandler
 CALL Fehler("Verarbeitung der Maildelivery-EintrÑge in Datei ungmail","Kennzeichnung der Nummer mit MDL und Eintrag Stichwort MAILDELIV2006Mai")
 FILE "adressen"
 INDEX codeku.adressen
 FILE "Telefon"
 INDEX nummer.telefon
 CALL DFile(2,"OFFICE\ungmail" + _fpw$)
 FILE "ungMail"
 SELECT FIRST LOCK FILE "ungMail"
 i% = 0
 j% = RECCOUNT ("ungMail")
 f% = 0
 g% = 0
 WHILE NOT EOF ("ungMail")
   MOUSE OFF 
   i% = i% + 1
   IF verarb.ungmail < 1 THEN 
     nummer$ = Nummer.ungmail
     IF EXISTS (nummer$,nummer.telefon) THEN 
       verarb.ungmail = 1
       STORE FILE "ungmail"
       FILE "Telefon"
       SELECT FIRST FILE "telefon" INDEX nummer.telefon
       SELECT KEY nummer$ LOCK FILE "telefon" INDEX nummer.telefon
       art.telefon = "MDL200605 - " + art.telefon
       Qart.telefon = VSNRPack$(Qart.telefon)
       STORE FILE "telefon"
       g% = g% + 1
       codeku% = codeku.telefon
       IF EXISTS (codeku%,codeku.adressen) THEN 
         SELECT FIRST FILE "adressen" INDEX codeku.adressen
         SELECT KEY codeku% LOCK FILE "adressen" INDEX codeku.adressen
         stichwort.adressen = stichwort.adressen + ",MAILDELIV2006MAI"
         STORE FILE "ADRESSEN"
       END IF 
     ELSE 
       verarb.ungmail = 2
       STORE FILE "ungmail"
       f% = f% + 1
     END IF 
   END IF 
   SET STATUS STR$ (i%,",9999999") + "/" + STR$ (j%,",9999999") + "/ Fehler: " + STR$ (F%,",9999999") + "/ gut: " + STR$ (g%,",9999999")
   FILE "ungmail"
   SELECT NEXT LOCK FILE "ungmail"
 WEND 
 CALL Fehler("verarbeitung beendet", STR$ (i%,",9999999") + "/" + STR$ (j%,",9999999") + "/ Fehler: " + STR$ (F%,",9999999") + "/ gut: " + STR$ (g%,",9999999"))
 CLOSE FILE "ungmail"
 
 END SUB 
 


 '  Mitarbeiter mit Zugriffsrechten von anderem Mitarbeiter Åbernehmen
 ' ======================================================================  
SUB MAZugriff(codema%)
 wks% = Workstation%
 REM vonCodema% = GetCodeMASU%(prompt%,wks%)
 REQUEST "WÑhlen Sie einen Bearbeiter aus:","",25,req%,vonCodema%,72,codeMA.Supervis,nachname.supervis,vorname.supervis INDEX nachname.supervis
 MOUSE OFF 
 IF vonCodema% = codema% OR vonCodema% = 0 THEN GOTO endMAzug110420021
 DIM Acodeac$( RECCOUNT ("ACCESS"))
 ff$ = FILE 
 REMOVE FROM FILE "ACCESS" WHERE codema.access = codema%
 FILE "ACCESS"
 ind$ = INDEX 
 INDEX codema.access
 SELECT FIRST 
 i% = 0
 SELECT KEY voncodema% FILE "ACCESS" INDEX codema.access
 WHILE NOT EOF ("ACCESS") AND codema.access = vonCodema%
   IF codema.access = vonCodema% AND ACCODE.ACCess <> "" THEN 
     Acodeac$(i%) = QuickCode.access
     i% = i% + 1
   END IF 
   SELECT NEXT FILE "ACCESS"
 WEND 
 IF i% > 0 THEN 
   FOR a% = 0 TO i% - 1
     SELECT FIRST FILE "ACCESS" INDEX QuickCode.access
     SELECT KEY Acodeac$(a%) FILE "ACCESS" INDEX QuickCode.access
     BLANK DUPLICATE 
     codeac.access = SER ("ACCESS",1)
     codema.access = codema%
     QuickCode.ACCESS = STR$ (CodePR.ACCess,"000000") + STR$ (codema%,"000000") + ACCODE.ACCess
     STORE FILE "ACCESS"
     UNLOCK CURRENT FILE "ACCESS"
     UNLOCK FILE "access"
   NEXT a%
   INDEX ind$
   FILE ff$
   REQUEST "Zugriffsrechte wurden Åbernommen!",""
 END IF 
 
endMAzug110420021: 
 MOUSE ON 
 END SUB 
 
 
 
 
 
  
 
 
 
 
 
 
FUNCTION GetSupervis%(codemaorg%)
 FILE "Supervis"
 INDEX nachname.supervis
 SELECT FIRST FILE "Supervis" INDEX nachname.supervis
 DIM Agenturen$( RECCOUNT ("SUPERVIS") + 1)
   WHILE NOT EOF ("Supervis")
     aaaa$ = Nachname.supervis + "," + Vorname.supervis
     IF LEN (aaaa$) > 1 THEN 
       IF NoAnzeigeJN.supervis <> "j" THEN 
         Agenturen$(a%) = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
         a% = a% + 1
       END IF 
     END IF 
     SELECT NEXT FILE "supervis"
   WEND 
 SELECT FIRST FILE "supervis" INDEX codema.supervis
 SELECT KEY codemaorg% FILE "Supervis" INDEX codema.supervis
 prompt$ = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
 REM 19062005
 REM CREATE DIALOG "MASUCH",0,0,220,308,"MitarbeiterÅbersicht","MS Sans Serif",8
 REM ADD DIALOG "MASUCH",4,0,0,220,285,0,""
 REM ADD DIALOG "MASUCH",9,9,11,21,21,2
 REM ADD DIALOG "MASUCH",5,37,11,151,10,0,"Bitte wÑhlen Sie einen Mitarbeiter aus:"
 REM ADD DIALOG "MASUCH",7,7,27,205,259,2,2,Agenturen$,Auswahl$,prompt$
 REM ADD DIALOG "MASUCH",1,46,288,55,15,1,"&OK",1,1
 REM ADD DIALOG "MASUCH",1,103,288,55,15,0,"&Abbrechen",0,0
 GetSupervis% = 0
    Superbase.Dialogs.Add("MASUCH")
    SET dlg = Superbase.Dialogs.MASUCH
    dlg.Move(0,0,220,308)
    dlg.Caption = "MitarbeiterÅbersicht"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(0,0,220,284)
    control.Caption = ""
 
    SET control = dlg.Add("DialogIcon1","DialogIcon")
    control.Move(9,11,21,21)
    control.Icon = 2
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(37,11,151,9)
    control.Caption = "Bitte wÑhlen Sie einen Mitarbeiter aus:"
 
    SET control = dlg.Add("mitarbeiter","DialogListBox")
    control.Move(4,30,206,242)
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Agenturen$","Auswahl$","prompt$")
    REM control.OnDblClick = "MASUCHAusw"
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(46,288,55,14)
    control.Default = 1
    control.Caption = "&OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(102,288,56,14)
    control.Caption = "&Abbrechen"
    control.ReturnValue = 0
    control.Cancel = 1
 
 DIALOG "MASUCH",req%
 REMOVE DIALOG "MASUCH"
 MOUSE ON 
 
 IF req% = 1 THEN 
   GetSupervis% = VAL ( RIGHT$ (Auswahl$(0),6))
 END IF 
 
 END FUNCTION 
 
 
 
FUNCTION MitSuchen%()
 FILE "supervis"
 INDEX nachname.supervis
 MitSuchen% = 0
 SELECT FIRST FILE "Supervis" INDEX nachname.supervis
 a% = 0
 prompt$ = ""
 MOUSE OFF 
 DIM Agenturen$( RECCOUNT ("SUPERVIS") + 1)
 DIM Auswahl$(1)
 WHILE NOT EOF ("Supervis")
   IF name.supervis <> "" THEN 
     Agenturen$(a%) = nachname.supervis + ", " + vorname.supervis + SPACE$ (120) + STR$ (CodeMA.supervis,"000000")
     a% = a% + 1
   END IF 
   SELECT NEXT FILE "Supervis" INDEX nachname.supervis
 WEND 
 CREATE DIALOG "MASUCH",0,0,380,284,"MitarbeiterÅbersicht","Courier New",10
 ADD DIALOG "MASUCH",4,0,0,380,263,0,""
 ADD DIALOG "MASUCH",9,5,5,21,21,2
 ADD DIALOG "MASUCH",5,37,15,260,10,0,"Name/Nachname,Vorname"
 ADD DIALOG "MASUCH",5,37,5,151,10,0,"Bitte wÑhlen Sie einen Mitarbeiter aus:"
 ADD DIALOG "MASUCH",7,7,27,368,229,2,2,Agenturen$,Auswahl$,prompt$
 ADD DIALOG "MASUCH",1,116,268,55,15,1,"&OK",1,1
 ADD DIALOG "MASUCH",1,182,268,55,15,0,"&Abbrechen",0,0
 MOUSE ON 
 DIALOG "MASUCH",req%
 REMOVE DIALOG "MASUCH"
 
 IF req% <> 0 THEN 
   MitSuchen% = VAL ( RIGHT$ (Auswahl$(0),6))
   cucuma% = MitSuchen%
 ELSE 
   MitSuchen% = 0
 END IF 
 FORM 
 END FUNCTION 
 
 
SUB MASUCHAusw()
 lidx% = dlg.mitarbeiter.ListIndex
 IF lidx% <> 0 THEN 
   item$ = dlg.mitarbeiter.List(lidx%)
   codema% = VAL ( RIGHT$ (item$,6))
 END IF 
 REM REQUEST "Mitarbeiter", STR$ (codema%)
 END SUB 
 
 
 
FUNCTION GetTelno$(codeku%)
 MOUSE OFF 
 Kundennummer% = codeku%
 cfile$ = FILE 
 DIM Auswahl1$(1)
 Voicedial$ = ReadINI$("MODEM","VoiceDial")
 FaxDial$ = ReadINI$("System","FAXavailable")
 VoiceISDNdial$ = ReadINI$("SYSTEM","VoiceISDNdial")
 DIM Telefonliste$(120)
 ok% = - 1
 WHILE ok%
   MOUSE OFF 
   SELECT KEY Kundennummer% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
   FILE GTelDat$
   INDEX CodeKU
   SELECT FIRST 
   SELECT KEY Kundennummer%
   a% = 0
   prompt$ = "ZZZZZZ"
   WHILE CodeKU.GTelDat$ = Kundennummer% AND NOT EOF (GTelDat$)
     IF kart1.GTELDAT$ LIKE "FAX" THEN 
       Telefonliste$(a%) = Art.GTelDat$ + ", " + Nummer.GTelDat$ + "," + KART1.GTelDat$ + "," + Kart2.GTelDat$ + SPACE$ (80) + STR$ (CodeTEL.GTelDat$,"000000")
       IF Telefonliste$(a%) < prompt$ THEN prompt$ = Telefonliste$(a%)
       a% = a% + 1
     END IF 
     SELECT NEXT 
   WEND 
   TelefonListe$(a%) = ""
   Kunde$ = Nachname.GAdrDat$ + ", " + Vorname.GAdrDat$
   CREATE DIALOG GTelDat$,0,0,350,179,"Faxnummern - Liste","MS Sans Serif",8
   ADD DIALOG GTelDat$,5,5,6,56,10,0,"von:"
   ADD DIALOG GTelDat$,5,62,6,174,9,128,Kunde$
   ADD DIALOG GTelDat$,5,5,22,65,10,0,"Art/&Telefonnummer:"
   ADD DIALOG GTelDat$,7,5,32,275,137,2,2,Telefonliste$,Auswahl$,prompt$
   ADD DIALOG GTelDat$,1,287,32,55,15,1,"&OK",1,1
   ADD DIALOG GTelDat$,1,287,50,55,15,0,"&Abbrechen",0,0
   MOUSE ON 
   DIALOG GTelDat$,req%
   REMOVE DIALOG GTelDat$
   IF req% = 1 THEN 
     telnr% = VAL ( RIGHT$ (Auswahl$(0),6))
     SELECT KEY telnr% FILE GTelDat$ INDEX CodeTEL.GTelDat$
     GetTelno$ = Nummer.GTelDat$
   ELSE 
     GetTelno$ = ""
   END IF 
 END FUNCTION 
 
 
FUNCTION GetDocPath$(Gruppe$)
     REM CALL Fehler(gruppe$,"")
     GetDocPath$ = ""
     docpath$ = UCASE$ (ReadConfig$("DOKUMENTE", FN ansi(Gruppe$)))
 
     pfad$ = MID$ ( UCASE$ (_netpath$),3)
     IF LEFT$ (docpath$,1) <> "#" THEN 
       l1% = 0
       l1% = LEN (pfad$)
       pos% = 0
       pos% = INSTR (docpath$,pfad$)
       IF pos% > 0 THEN 
         dateiname1$ = MID$ (docpath$,pos% + l1%)
         docpath$ = dateiname1$
         IF RIGHT$ (docpath$,1) <> "\" THEN docpath$ = docpath$ + "\"
         IF LEFT$ (docpath$,1) = "\" THEN docpath$ = MID$ (docpath$,2)
         CALL WriteConfig("DOKUMENTE", FN ansi(Gruppe$),"#" + docpath$)
       ELSE 
         t1% = INSTR (4,docpath$,"\")
         zw1$ = MID$ (docpath$,t1%)
         docpath$ = zw1$
         IF RIGHT$ (docpath$,1) <> "\" THEN docpath$ = docpath$ + "\"
         IF LEFT$ (docpath$,1) = "\" THEN docpath$ = MID$ (docpath$,2)
         CALL WriteConfig("DOKUMENTE", FN ansi(Gruppe$),"#" + docpath$)
       END IF 
 
     ELSE 
       docpath$ = MID$ (docpath$,2)
     END IF 
     IF RIGHT$ (docpath$,1) <> "\" THEN docpath$ = docpath$ + "\"
     IF LEFT$ (docpath$,1) = "\" THEN docpath$ = MID$ (docpath$,2)
 
     dirtest$ = _netpath$ + docpath$
     l% = LEN (dirtest$)
     dirtest$ = LEFT$ (dirtest$,l% - 1)
     ON ERROR GOTO test051020041
     MAKE DIRECTORY dirtest$
test051020041: 
     ON ERROR GOTO ErrorHandler
     GetDocPath$ = docpath$
 END FUNCTION 
 
 
 
  
 '***********************************************************************************
 'alle Termine eines Kunden in öbersichtsmaske anzeigen
 '***********************************************************************************
 
SUB KunTer1()
 MOUSE OFF 
 IF ( MOD (GAkquiDat$) OR NEW (GAkquiDat$)) THEN CALL QuickStore(GAkquiDat$)
 knr% = codeku.GAkquiDat$
 SELECT FIRST FILE "Adressen" INDEX codeku.adressen
 SELECT KEY knr% FILE "Adressen" INDEX codeku.adressen
 FILE GAkquiDat$
 INDEX codeku.GAkquiDat$
 
 
 _formend% = 0
 MOUSE ON 
 WHILE _formend% = 0
   IF UCASE$ ( FORM ) <> "AKQ1PRJ" THEN 
     SET HEADING title$ + " - Termine"
     OPEN FORM GOFFFORM$ + "AKQ1PRJ"
     SET f = Superbase.Form
     CALL KunTer1Intro()
     CALL MNKunTer1()
     SET STATUS "TERMINE"
   END IF 
   MENU ON 
   MOUSE ON 
   FORMsub% = 0
   REM IF RECCOUNT ("zeingan1") > 0 THEN CALL ZEINUpdate1()
   CALL ClearKBDBuffer()
   FORM 
   IF FORMsub% <> 99 THEN WAIT KEY OR MENU OR MOUSE 
   REM ** Tastaturabfrage
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     REM CALL PSelectPrev()
   CASE CrsRight%,PgDn%
     REM CALL PSelectNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE FORMsub%
   CASE 1
     codeaq% = Codeaq.GAkquiDat$
     SELECT KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
     FORM 2
   CASE 2
   CASE 3
   CASE 99
     ENTER Datum.GAkquiDat$,0
     REM ENTER END 
   REM MENU OFF 
   END SELECT 
   MENU ON 
 WEND 
 IF ( MOD (GAkquiDat$) OR NEW (GAkquiDat$)) THEN CALL FStore(GAkquiDat$)
 REM 110397 CALL ZEINbuchung1(0)
 _formend% = 0
 END SUB 
  
 
SUB KunTer1Intro()
 MOUSE OFF 
 FILE GAkquiDat$
 INDEX CodeKU.GAkquiDat$
   SELECT FORM KEY knr% FILE "Adressen" INDEX CodeKU.Adressen
   SELECT FORM KEY knr% FILE GAkquiDat$ INDEX CodeKU.GAkquiDat$
 SELECT FIRST 
 FORM 
 END SUB 
 
SUB MNKunTer1()
 MENU CLEAR 
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
 REM 08092003 Adress-Such-Historie lîschen
SUB LoeAdressHist()
 CALL DFile(2,"OFFICE\" + "ADRHIS" + _fpw$)
 opt% = 2
 von% = 30
anfloe090920031: 
 CREATE DIALOG "Konto1",0,0,221,165,"Lîschen der eigenen Adress-Such-Historie","MS Sans Serif",8
 ADD DIALOG "Konto1",9,6,7,24,22,2
 ADD DIALOG "Konto1",5,34,8,170,9,0,"Lîschen:"
 ADD DIALOG "Konto1",4,34,14,176,5,0,""
 ADD DIALOG "Konto1",5,34,22,175,16,0,"Sie haben jetzt die Mîglichkeit die gesamte Adress-Such-Historie zu lîschen oder"
 ADD DIALOG "Konto1",5,34,40,175,32,0,"zu sagen, dass sie NUR die Historie der letzten xy Tage aufheben mîchten!"
 ADD DIALOG "Konto1",3,34,64,153,10,0,"komplette Historie lîschen",1,opt%
 ADD DIALOG "Konto1",3,34,80,153,10,0,"xy Tage aufheben",2,opt%
 ADD DIALOG "Konto1",5,34,100,60,10,0,"xy Tage aufheben"
 ADD DIALOG "Konto1",6,100,99,15,11,0,0,von%,2
 ADD DIALOG "Konto1",1,50,144,55,15,1,"&Weiter",1,1
 ADD DIALOG "Konto1",1,110,144,55,15,0,"&Abbruch",0,0
 DIALOG "Konto1",req%
 REMOVE DIALOG "Konto1"
 IF req% = 1 THEN 
   IF opt% = 2 AND von% < 1 THEN 
     CALL Fehler ("Sie mÅssen bei xy einen Wert grî·er Null eintragen!","")
     GOTO anfloe090920031
   END IF 
   IF opt% = 1 THEN 
     REM alle lîschen
     REQUEST "Komplette Adress-Such-Historie lîschen?","",130,reqloe%
     IF reqloe% = 1 THEN 
       MOUSE OFF 
       REMOVE FROM FILE "ADRHIS" WHERE codema.adrhis = GMACodeMA%
       MOUSE ON 
       REQUEST "Adress-Such-Historie wurde gelîscht!",""
     END IF 
   END IF 
   IF opt% = 2 THEN 
     REM bis zu einem bestimmten Datum lîschen
     REQUEST "Adress-Such-Historie lîschen au·er den letzten " + LTRIM$ ( STR$ (von%,"99")),"Tagen",130,reqloe%
     IF reqloe% = 1 THEN 
       MOUSE OFF 
       test% = ( DAYS ( TODAY ) - von%)
       tag$ = LEFT$ ( DATE$ (test%,"0d.mm.yyyy"),2)
       monat$ = LEFT$ ( DATE$ (test%,"mm.0d.yyyy"),2)
       jahr$ = MID$ ( DATE$ (test%,"yyyy.mm.0d"),3,2)
       dat1$ = jahr$ + monat$ + tag$ + "0000"
       NUMBASE "0000000000."
       dat1$ = DATE$ (test%,"yymmdd") + "9999"
       test1% = VAL (dat1$)
       REMOVE FROM FILE "ADRHIS" WHERE codema.adrhis = GMACodeMA% AND timestamp.adrhis < test1%
       MOUSE ON 
       REQUEST "Adress-Such-Historie wurde bis auf die letzten " + LTRIM$ ( STR$ (von%,"99")),"Tage gelîscht!"
     END IF 
   END IF 
 END IF 
 END SUB 
 
SUB Herba(codeku%)
 CALL DFile(2,"OFFICE\herkopf" + _fpw$)
 CALL DFile(2,"OFFICE\herdata" + _fpw$)
 REM CALL Fehler("HERBA","")
 MOUSE OFF 
 
 FILE "HERKOPF"
 INDEX codeku.HERKOPF
 SELECT FIRST 
 IF NOT EXISTS (codeku%,codeku.herkopf) THEN 
   BLANK FILE "herkopf"
   codekopf% = SER ("herkopf",1)
   codekopf.herkopf = codekopf%
   codeku.herkopf = codeku%
   zero.herkopf = 0
   STORE FILE "Herkopf"
   BLANK FILE "herdata"
   codekey.herdata = SER ("herdata",1)
   codekopf.herdata = codekopf%
   codeku.herdata = codeku%
   zero.herdata = 0
   datum.herdata = TODAY 
   woche.herdata = 1
   STORE FILE "Herdata"
 END IF 
 knr% = codeku.adressen
 IF ( MOD ("adressen") OR NEW ("adressen")) THEN CALL QuickStore("adressen")
 _formend% = 0
 MOUSE ON 
 WHILE _formend% = 0
   IF UCASE$ ( FORM ) <> "HERKOPF" THEN 
     SET HEADING title$ + " - Herbalife"
     OPEN FORM GOFFForm$ + "HERKOPF"
     SET f = Superbase.Form
     CALL HERKOPFIntro()
     CALL MNProgramm()
     SET STATUS "Herbalife"
   END IF 
   MENU ON 
   MOUSE ON 
   KUVorgsub% = 0
   REM IF RECCOUNT ("zeingan1") > 0 THEN CALL ZEINUpdate1()
   CALL ClearKBDBuffer()
   FORM 
   IF FORMsub% <> 99 THEN WAIT KEY OR MENU OR MOUSE 
   REM ** Tastaturabfrage
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL PSelectPrev()
   CASE CrsRight%,PgDn%
     CALL PSelectNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE FORMsub%
   CASE 1
     REM Details
     codekey% = codekey.herdata
     SELECT FIRST FILE "herdata" INDEX codekey.herdata
     SELECT KEY codekey% LOCK FILE "herdata" INDEX codekey.herdata
     FORM 2
     FORM 
     FORMsub% = 0
   CASE 2
     REM neu HERDATA
     BLANK FILE "herdata"
     codekey% = SER ("HERDATA",1)
     codekey.herdata = codekey%
     codekopf.herdata = codekopf.herkopf
     codeku.herdata = codeku%
     datum.herdata = TODAY 
     STORE FILE "herdata"
     SELECT KEY codekey% LOCK FILE "herdata" INDEX codekey.herdata
     ENTER Woche.herdata,0
     FORMsub% = 0
   CASE 3
     FORM 1
     CALL HERKOPFIntro()
     FORMsub% = 0
   CASE 99
   MENU OFF 
   END SELECT 
   MENU ON 
 WEND 
 IF ( MOD ("HERKOPF") OR NEW ("HERKOPF")) THEN CALL FStore("HERKOPF")
 REM 110397 CALL ZEINbuchung1(0)
 _formend% = 0
 END SUB 
 
 
 
SUB HERKOPFIntro()
 MOUSE OFF 
 FILE "HERKOPF"
 INDEX CodeKU.HERKOPF
    SELECT FORM KEY knr% FILE "Adressen" INDEX CodeKU.Adressen
   SELECT FORM KEY knr% FILE "HERKOPF" INDEX CodeKU.HERKOPF
   SELECT FORM KEY Codekopf.HERKOPF FILE "HERDATA" INDEX Codekopf.HERDATA
 FORM 
 END SUB 
 
 
 
  
SUB SendEMAIL - old(Nummer$,codeku%)
   SELECT FIRST FILE "supervis"
   SELECT KEY GMACodeMA% FILE "Supervis" INDEX codema.supervis
   SELECT KEY codeku% FILE "adressen" INDEX codeku.adressen
   adresse$ = Nachname.adressen + "-" + Vorname.adressen
   ret% = 0
   TO1$ = Nummer$
   Host$ = EMAILSHost.supervis
   IF LTRIM$ (Host$) = "" THEN 
     CALL Fehler("EMAIL kann nicht versandt werden, da fÅr den User " + Name.supervis + " das Feld <Host> nicht ausgefÅllt wurde!","")
     GOTO end070520031
   END IF 
   UserID$ = EMAILSUserID.supervis
   AFirma$ = FN ansi(EMAILSAFirma.supervis)
   AName$ = FN ansi(EMAILSAName.supervis)
   ANUmmer$ = EMAILNummer.supervis
   BCC$ = EMAILSKopie.supervis
   Sen$ = EMAILSErg.supervis
   port$ = LTRIM$ ( STR$ (EMAILSPort.supervis,"999999"))
   IF port$ = "" THEN port$ = "25"
   IF EMAILSNummer.supervis <> "" THEN 
     Bersend$ = EMAILSNummer.supervis
   ELSE 
     Bersend$ = EMAILNummer.supervis
   END IF 
   Bersend1$ = EMAILSNummer1.supervis
   Text1$ = FN ansi(EMAILText1.supervis)
   Text2$ = FN ansi(EMAILText2.supervis)
   BAnrede$ = FN ansi(Briefanrede.adressen)
   Hpop3$ = ""
   HPPort$ = ""
   PUID$ = ""
   PJN$ = EMAILPOP3JN.supervis
   IF EMAILPOP3JN.supervis = "TRUE" THEN 
     Hpop3$ = EMAILPHost.supervis
     HPPort$ = LTRIM$ ( STR$ (EMAILPPort.supervis,"999999"))
     IF HPPort$ = "0" THEN HPPort$ = "110"
     PUID$ = EmailPUserID.supervis
     Ppassw$ = EMAILPPasww.supervis
   END IF 
   Betreff$ = ""
   alltxt$ = GMACodeDir$ + "codietes.txt"
   att1$ = ""
   ret% = CALL ("_SendEMAILForm",TO1$,Host$,port$,UserID$,AFirma$,AName$,ANummer$,BCC$,Sen$,adresse$,Bersend$,alltxt$,Betreff$,Text1$,Text2$,BAnrede$,Bersend1$,Hpop3$,PUID$,HPPort$,Ppassw$,PJN$,att1$)
   REM a% = CALL ("ShellExecute",0,"open",alltxt$,"","",1)
   REM CALL Fehler(Bersend$,"")
   IF Bersend$ <> "" AND ret% = - 1 THEN 
     GMailBetreff$ = Bersend$
     GMailIn% = - 1
     knr% = CodeKU%
     textdatei% = DOKNeu%(0,"allgemeine Schreiben",0)
     IF EXISTS (textdatei%,CodeDOK.dokument) AND textdatei% > 0 THEN 
       SELECT KEY textdatei% FILE "dokument" INDEX CodeDOK.dokument
       datei1$ = _netpath$ + Dateiname.dokument
       COPY alltxt$ TO datei1$
     END IF 
   END IF 
   GOTO end070520031
   REM a% = VAL (ReadDesti$("COUNT","count",alltxt$))
   IF a% > 0 THEN 
     GMailBetreff$ = ReadDesti$("Betreff","Betreff",alltxt$)
     GMailIn% = - 1
     knr% = CodeKU%
     textdatei% = DOKNeu%(0,"allgemeine Schreiben",link%)
 
     IF EXISTS (textdatei%,CodeDOK.GDokDat$) AND textdatei% > 0 THEN 
       MOUSE OFF 
       SELECT KEY textdatei% FILE GDokDat$ INDEX CodeDOK.GDokDat$
       datei1$ = _netpath$ + Dateiname.GDokDat$
       OPEN datei1$ FOR OUTPUT 
       FOR i% = 0 TO a% - 1
         z$ = "z" + LTRIM$ ( STR$ (i%,"999999"))
         zw$ = ReadDesti$("Memo",z$,alltxt$)
         ? zw$
       NEXT i%
       CLOSE OUTPUT 
       REM b% = CALL ("ShellExecute",0,"open","datei.txt","","",1)
       REM CALL ADRDokRegister(textdatei%)
     END IF 
     MOUSE ON 
   END IF 
end070520031: 
   GMailBetreff$ = ""
   GMailIn% = 0
 END SUB 
   
SUB EMAILATT_old(nr%)
 codeaq% = codeaq.GAkquiDat$
 REQUEST "Datei auswÑhlen","",26,req%,textvorlage$
 IF req% = 1 THEN 
   a% = CALL ("_SBFileExists",textvorlage$)
   IF a% = - 1 THEN 
     REM IF EXISTS (textvorlage$) THEN 
     SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
     feld$ = "EMAILATT" + STR$ (nr%,"0") + ".GAkquiDat$"
     feld$$ = textvorlage$
     CALL QuickStore(GAkquiDat$)
   END IF 
 END IF 
 FORM 
 END SUB 
 
 
 
 
 REM EMAIL manuell versenden aus "Akquise heraus"
SUB EMAILManSend_old(codeaq%,schalter%)
 IF GCODie% <> - 1 THEN 
   CALL Fehler("EMAIL - Versandt wurde nicht konfiguriert!","")
   GOTO e120520031
 END IF 
 GAkquiDat$ = GAkquiDat$
  CALL DFile(2,"OFFICE\adressen" + _fpw$)
  CALL DFile(2,"OFFICE\akquise" + _fpw$)
 codemaold% = codema.supervis
 codema% = codema.GAkquiDat$
 SELECT KEY codema% FILE "Supervis" INDEX codema.supervis
 SELECT KEY codeku.GAkquiDat$ FILE GADRDat$ INDEX codeku.GADRDat$
 SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 adresse$ = Nachname.adressen + "-" + Vorname.adressen
 datei$ = GMACodeDir$ + "codietes.ini"
 IF EXISTS (datei$) THEN 
   ON ERROR GOTO mas070520031
   DELETE datei$
   GOTO mas070520032
mas070520031: 
   IF schalter% <> 0 THEN CALL fehler("Es konnte die temporÑre Datei " + datei$ + " nicht gelîscht werden, bitte prÅfen Sie, ob die Datei geîffnet ist und schlie·en Sie diese!,"")
mas070520032: 
   ON ERROR GOTO ErrorHandler
 END IF 
 datei1$ = GMACodeDir$ + "codietes.txt"
 IF EXISTS (datei1$) THEN 
   ON ERROR GOTO mas070520035
   DELETE datei1$
   GOTO mas070520036
mas070520035: 
   IF schalter% <> 0 THEN CALL fehler("Es konnte die temporÑre Datei " + datei1$ + " nicht gelîscht werden, bitte prÅfen Sie, ob die Datei geîffnet ist und schlie·en Sie diese!,"")
mas070520036: 
   ON ERROR GOTO ErrorHandler
 END IF 
 OPEN datei$ FOR OUTPUT 
 CLOSE OUTPUT 
 IF EmailShost.supervis <> "" THEN 
   UserID$ = EMAILSUserID.supervis
   AFirma$ = FN ansi(EMAILSAFirma.supervis)
   AName$ = FN ansi(EMAILSAName.supervis)
   ANUmmer$ = EMAILNummer.supervis
   REM BCC$ = EMAILSKopie.supervis
   Sen$ = EMAILSKopie.supervis
   Hpop3$ = ""
   HPPort$ = ""
   PUID$ = ""
   PJN$ = EMAILPOP3JN.supervis
   IF EMAILPOP3JN.supervis = "TRUE" THEN 
     Hpop3$ = EMAILPHost.supervis
     HPPort$ = LTRIM$ ( STR$ (EMAILPPort.supervis,"999999"))
     IF HPPort$ = "" THEN HPPort$ = "110"
     PUID$ = EmailPUserID.supervis
     Ppassw$ = EMAILPPasww.supervis
   END IF 
   port$ = LTRIM$ ( STR$ (EMAILSPort.supervis,"999999"))
   IF port$ = "" THEN port$ = "25"
   IF EMAILSNummer.supervis <> "" THEN 
     Bersend$ = EMAILSNummer.supervis
   ELSE 
     Bersend$ = EMAILNummer.supervis
   END IF 
   Bersend1$ = EMAILSNummer1.supervis
   Text1$ = FN ansi(EMAILText1.supervis)
   Text2$ = FN ansi(EMAILText2.supervis)
   BAnrede$ = FN ansi(Briefanrede.GADRDat$)
   alltxt$ = GMACodeDir$ + "codietes.ini"
   TOM$ = EMAILTO.GAkquiDat$
   Betreff$ = FN ansi(EMAILBETREFF.GAkquiDat$)
   senber$ = UCASE$ (EMAILSErg.supervis)
   CALL WriteINIDes("EMAILSERVER","HOST",EMAILShost.supervis,datei$)
   CALL WriteINIDes("EMAILSERVER","PORT",port$,datei$)
   CALL WriteINIDes("EMAILSERVER","USERID",UserID$,datei$)
   CALL WriteINIDes("EMAILSERVER","ABSFirma",AFirma$,datei$)
   CALL WriteINIDes("EMAILSERVER","ABSName",AName$,datei$)
   CALL WriteINIDes("EMAILSERVER","ABSEMAIL",ANummer$,datei$)
   CALL WriteINIDes("EMAILSERVER","KOPIEANABSENDER",Sen$,datei$)
   CALL WriteINIDes("EMAILSERVER","BerSendenummer",BerSend$,datei$)
   CALL WriteINIDes("EMAILSERVER","BerSendenummer1",BerSend1$,datei$)
   CALL WriteINIDes("EMAILSERVER","TO",TOM$,datei$)
   CALL WriteINIDes("EMAILSERVER","SENDEBERICHT",senber$,datei$)
   CALL WriteINIDes("EMAILSERVER","Betreff",Betreff$,datei$)
   OPEN datei1$ FOR OUTPUT 
   ? FN ansi(emailtext.GAkquiDat$)
   CLOSE OUTPUT 
   REM CALL Fehler("","")
   IF emailcc.GAkquiDat$ <> "" THEN 
     pos% = INSTR (emailcc.GAkquiDat$,":")
     IF pos% > 0 THEN 
       laeng% = LEN (emailcc.GAkquiDat$)
       j% = 0
       FOR i% = 1 TO laeng%
         posold% = pos%
         cc$ = MID$ (emailcc.GAkquiDat$,i%,pos% - i%)
         pos% = INSTR (posold% + 1,emailcc.GAkquiDat$,":")
 
         IF pos% > 0 THEN 
           i% = posold%
         ELSE 
           i% = laeng% + 1
         END IF 
         CALL WriteINIDes("CC","Z" + LTRIM$ ( STR$ (j%,"999")), FN ansi(CC$),datei$)
         j% = j% + 1
       NEXT i%
     ELSE 
       CALL WriteINIDes("CC","Z0", FN ansi(emailcc.GAkquiDat$),datei$)
     END IF 
   END IF 
   IF emailbcc.GAkquiDat$ <> "" THEN 
     pos% = INSTR (emailbcc.GAkquiDat$,":")
     IF pos% > 0 THEN 
       laeng% = LEN (emailbcc.GAkquiDat$)
       j% = 0
        FOR i% = 1 TO laeng%
         posold% = pos%
         cc$ = MID$ (emailbcc.GAkquiDat$,i%,pos% - i%)
         pos% = INSTR (posold% + 1,emailbcc.GAkquiDat$,":")
 
         IF pos% > 0 THEN 
           i% = posold%
         ELSE 
           i% = laeng% + 1
         END IF 
         CALL WriteINIDes("BCC","Z" + LTRIM$ ( STR$ (j%,"999")), FN ansi(CC$),datei$)
         j% = j% + 1
       NEXT i%
     ELSE 
       CALL WriteINIDes("BCC","Z0", FN ansi(emailbcc.GAkquiDat$),datei$)
     END IF 
   END IF 
   ok% = - 1
   IF emailatt1.GAkquiDat$ <> "" THEN 
     IF EXISTS (emailatt1.GAkquiDat$) THEN 
       CALL WriteINIDes("AT","Z0", FN ansi(emailatt1.GAkquiDat$),datei$)
     ELSE 
       ok% = 0
       fehl$ = "Dateianhang 1 nicht gefunden "
     END IF 
   END IF 
   IF emailatt2.GAkquiDat$ <> "" THEN 
     IF EXISTS (emailatt2.GAkquiDat$) THEN 
       CALL WriteINIDes("AT","Z1", FN ansi(emailatt2.GAkquiDat$),datei$)
     ELSE 
       ok% = 0
       fehl$ = "Dateianhang 2 nicht gefunden "
     END IF 
   END IF 
   IF emailatt3.GAkquiDat$ <> "" THEN 
     IF EXISTS (emailatt3.GAkquiDat$) THEN 
       CALL WriteINIDes("AT","Z2", FN ansi(emailatt3.GAkquiDat$),datei$)
     ELSE 
       ok% = 0
       fehl$ = "Dateianhang 3 nicht gefunden "
     END IF 
   END IF 
   IF emailatt4.GAkquiDat$ <> "" THEN 
     IF EXISTS (emailatt4.GAkquiDat$) THEN 
       CALL WriteINIDes("AT","Z3", FN ansi(emailatt4.GAkquiDat$),datei$)
     ELSE 
       ok% = 0
       fehl$ = "Dateianhang 4 nicht gefunden "
     END IF 
   END IF 
   IF emailatt5.GAkquiDat$ <> "" THEN 
     IF EXISTS (emailatt5.GAkquiDat$) THEN 
       CALL WriteINIDes("AT","Z4", FN ansi(emailatt5.GAkquiDat$),datei$)
     ELSE 
       ok% = 0
       fehl$ = "Dateianhang 5 nicht gefunden "
     END IF 
   END IF 
 
   schalter$ = STR$ (schalter%,"0")
   REM CALL Fehler(datei$ + " " + datei1$ + " " + schalter$ + " " + adresse$ + " " + Hpop3$ + " " + PUID$ + " " + HPPort$ + " " + Ppassw$ + " " + PJN$,"")
   IF ok% THEN 
     MOUSE OFF 
     ret% = CALL ("_SendEMAILAuto",datei$,datei1$,schalter$,adresse$,Hpop3$,PUID$,HPPort$,Ppassw$,PJN$)
     MOUSE ON 
   ELSE 
     ret% = 4
   END IF 
   IF ret% = - 1 THEN 
     emailraus.GAkquiDat$ = "j"
     EMAILSendDat.GAkquiDat$ = TODAY 
     EMAILSendZeit.GAkquiDat$ = NOW 
     SELECT KEY GMACodema% FILE "supervis" INDEX codema.supervis
     IF EMAILAutomat.GAkquiDat$ = "j" THEN 
       text1$ = DATE$ (EMAILSendDat.GAkquiDat$,"0d.mm.yyyy") + " " + TIME$ (EMAILSendZeit.GAkquiDat$,"hh:mm") + " EMAIL wurde per Automatik von " + name.supervis + " gesendet "
     ELSE 
       text1$ = DATE$ (EMAILSendDat.GAkquiDat$,"0d.mm.yyyy") + " " + TIME$ (EMAILSendZeit.GAkquiDat$,"hh:mm") + " EMAIL wurde per Hand von " + name.supervis + " gesendet "
     END IF 
     text2$ = ""
     ergebnis.GAkquiDat$ = LEFT$ (ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
     STORE FILE GAkquiDat$
     IF EXISTS (codeaq%,codeaq.tvorlage) THEN 
       SELECT KEY codeaq% LOCK FILE "TVORLAGE" INDEX codeaq.tvorlage
       emailraus.tvorlage = "j"
       STORE FILE "tvorlage"
     END IF 
     REM CALL Fehler(ergebnis.GAkquiDat$,"")
   END IF 
   IF ret% = 1 THEN 
     text1$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm") + " EMAIL sollte per Hand von <" + name.supervis + "> versandt, "
     text2$ = "werden, konnte aber nicht durchgefÅhrt werden, da die temorÑre Dateien " + datei$ + " oder/und " + datei1$ + " nicht gefunden wurde/n"
     ergebnis.GAkquiDat$ = LEFT$ (ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
     STORE FILE GAkquiDat$
     CALL Fehler(text1$,text2$)
   END IF 
   IF ret% = 2 THEN 
     text1$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm") + " EMAIL sollte per Hand von Miarbeiter <" + name.supervis + "> versandt, "
     text2$ = "werden, konnte aber nicht durchgefÅhrt werden, da ein Fehler in den Absendetaten durch den Server gemeldet wurde!"
     ergebnis.GAkquiDat$ = LEFT$ (ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
     STORE FILE GAkquiDat$
     CALL Fehler(text1$,text2$)
   END IF 
   IF ret% = 3 THEN 
     text1$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm") + " EMAIL sollte per Hand von <" + name.supervis + "> versandt, "
     text2$ = "werden, konnte aber nicht durchgefÅhrt werden, da ein Fehler in den Absendetaten durch den Server gemeldet wurde!"
     ergebnis.GAkquiDat$ = LEFT$ (ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
     STORE FILE GAkquiDat$
     CALL Fehler(text1$,text2$)
   END IF 
   IF ret% = 4 THEN 
     text1$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm") + " EMAIL sollte per Hand von <" + name.supervis + "> versandt, "
     text2$ = "werden, konnte aber nicht durchgefÅhrt werden, da ein oder mehrere DateinanhÑnge nicht gefunden wurden!"
     ergebnis.GAkquiDat$ = LEFT$ (ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
     STORE FILE GAkquiDat$
     CALL Fehler(text1$,text2$)
 
   END IF 
 ELSE 
   CALL Fehler("EMAIL kann nicht versandt werden, da fÅr den User " + Name.supervis + " das Feld <Host> nicht ausgefÅllt wurde!","")
 END IF 
e120520031: 
 END SUB 
 
SUB AQRegMail(codemail%)
 cfile$ = FILE 
 GADRDat$ = "ADRESSEN"
 GAkquiDat$ = GAkquiDat$
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 SELECT KEY codemail% FILE "MAIL" INDEX codemail.mail
 DIM Aktionen$(300)
 FILE "AKTIONEN"
 INDEX CodeAK
 SELECT FIRST 
 a% = - 1
 WHILE NOT EOF ("AKTIONEN")
   a% = a% + 1
   Aktionen$(a%) = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
   SELECT NEXT 
 WEND 
 SELECT KEY 1
 Aktion$ = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
 DIM Mitarbeiter$(300)
 FILE "SUPERVIS"
 INDEX CodeMA
 SELECT FIRST 
 a% = - 1
 WHILE NOT EOF ("SUPERVIS")
   a% = a% + 1
   Mitarbeiter$(a%) = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
   SELECT NEXT 
 WEND 
 SELECT KEY vcodema%
 MANachname$ = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
 datum$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 Termin$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 Nachname$ = Nachname.GAdrDat$
 Vorname$ = Vorname.GAdrDat$
 Stra·e$ = Stra·e.GAdrDat$
 Ort$ = PLZ.GAdrDat$ + " " + Ort.GAdrDat$
 tmpku% = CodeKU.GAdrDat$
 RNotiz$ = "EMAIL an Mitarbeiter: " + Betreff.mail
    DIM dlg AS Dialog
    DIM control AS DialogControl
 ON ERROR GOTO dokt190520031 
   GOTO dokt190520032
dokt190520031: 
   REM CALL Fehler("Die Werte fÅr Datum oder Uhrzeit scheinen falsch zu sein!","Bitte prÅfen")
dokt190520032: 
    Superbase.Dialogs.Add("AQREGISTER")
    SET dlg = Superbase.Dialogs.AQREGISTER
    dlg.Move(0,0,354,235)
    dlg.Caption = title$
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(5,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Datum$"
 
    SET control = dlg.Add("DialogTextBox2","DialogTextBox")
    control.Move(49,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Termin$"
 
    SET control = dlg.Add("DialogTextBox3","DialogTextBox")
    control.Move(93,8,25,12)
    control.MaxLength = 5
    control.TextBinding = "Zeit$"
 
    SET control = dlg.Add("DialogTextBox4","DialogTextBox")
    control.Move(130,8,24,12)
    control.MaxLength = 5
    control.TextBinding = "Dauer$"
    IF GADRDat$ LIKE "ADRESSEN" THEN 
      SET control = dlg.Add("DialogTextBox6","DialogTextBox")
      control.Move(185,8,40,12)
      control.MaxLength = 10
      control.TextBinding = "VTermin$"
 
      SET control = dlg.Add("DialogTextBox7","DialogTextBox")
      control.Move(235,8,25,12)
      control.MaxLength = 5
      control.TextBinding = "VZeit$"
    END IF 
    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(130,22,28,11)
    control.Caption = "Dauer"
    IF GADRDat$ LIKE "ADRESSEN" THEN 
      SET control = dlg.Add("DialogLabel19","DialogLabel")
      control.Move(185,22,45,13)
      control.Caption = "Vorlagetermin"
 
      SET control = dlg.Add("DialogLabel20","DialogLabel")
      control.Move(235,22,54,13)
      control.Caption = "Vorlagezeit"
    END IF 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(5,22,32,13)
    control.Caption = "Datum"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(49,22,28,13)
    control.Caption = "Termin"
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(93,22,28,13)
    control.Caption = "Uhrzeit"
 
    SET control = dlg.Add("DialogLabel5","DialogLabel")
    control.Move(5,36,123,12)
    control.Caption = "Zuordnung zur Aktion"
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(186,44,160,81)
    control.Caption = "Adresse"
 
    SET control = dlg.Add("DialogLabel8","DialogLabel")
    control.Move(190,59,39,12)
    control.Caption = "Nachname"
 
    SET control = dlg.Add("DialogLabel14","DialogLabel")
    control.Move(230,59,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Nachname$"
 
    SET control = dlg.Add("DialogLabel9","DialogLabel")
    control.Move(190,69,32,12)
    control.Caption = "Vorname"
 
    SET control = dlg.Add("DialogLabel15","DialogLabel")
    control.Move(230,69,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Vorname$"
 
    SET control = dlg.Add("DialogLabel10","DialogLabel")
    control.Move(190,79,24,12)
    control.Caption = "Stra·e"
 
    SET control = dlg.Add("DialogLabel16","DialogLabel")
    control.Move(230,79,116,12)
    control.CaptionBinding = "Stra·e$"
 
    SET control = dlg.Add("DialogLabel11","DialogLabel")
    control.Move(190,89,19,12)
    control.Caption = "Ort"
 
    SET control = dlg.Add("DialogLabel17","DialogLabel")
    control.Move(230,89,116,12)
    control.CaptionBinding = "Ort$"
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(190,104,152,14)
    control.Caption = "Auswahl"
    control.ReturnValue = 2
 
    SET control = dlg.Add("DialogComboBox1","DialogComboBox")
    control.Move(5,46,169,83)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Aktionen$","Aktion$")
 
    SET control = dlg.Add("DialogLabel6","DialogLabel")
    control.Move(5,65,139,8)
    control.Caption = "Eintragen in den Kalender des Mitarbeiters"
 
    SET control = dlg.Add("DialogComboBox2","DialogComboBox")
    control.Move(5,76,169,90)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Mitarbeiter$","MANachname$")
 
    SET control = dlg.Add("DialogLabel7","DialogLabel")
    control.Move(5,96,139,8)
    control.Caption = "Notiz"
 
    SET control = dlg.Add("DialogTextBox5","DialogTextBox")
    control.Move(5,105,169,128)
    control.MultiLine = 1
    control.ScrollBars = 2
    control.MaxLength = 4000
    control.TextBinding = "RNotiz$"
 
    SET control = dlg.Add("DialogLabel12","DialogLabel")
    control.Move(186,133,162,29)
    control.Caption = "Wenn Sie diesen Termin nur zu Informationszwecken aufnehmen mîchten, markieren Sie bitte die Option 'Termin erledigt'."
 
    SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
    control.Move(186,165,76,12)
    control.Caption = "Termin erledigt"
    control.Bind("Terminerl$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel13","DialogLabel")
    control.Move(186,178,159,37)
    control.Caption = "Nach BetÑtigung der SchaltflÑche 'OK' wird der Eintrag in der Termindatei erzeugt."
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(186,217,78,15)
    control.Default = 1
    control.Caption = "&OK"
    control.ReturnValue = 1
 
 
 _ok% = 0
 WHILE _ok% = 0
   DIALOG "AQREGISTER",req%
   IF req% = 2 THEN 
     kunr% = ADRSuche%(0)
     IF kunr% <> 0 THEN 
       SELECT KEY kunr% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
       Nachname$ = Nachname.GAdrDat$
       Vorname$ = Vorname.GAdrDat$
       Stra·e$ = Stra·e.GAdrDat$
       Ort$ = PLZ.GAdrDat$ + " " + Ort.GAdrDat$
       tmpku% = CodeKU.GAdrDat$
     END IF 
   END IF 
   IF req% = 0 THEN _ok% = 2
   IF req% = 1 THEN _ok% = 1
 WEND 
 REMOVE DIALOG "AQREGISTER"
 IF _ok% = 1 THEN 
   FILE GAkquiDat$
   BLANK FILE GAkquiDat$
   cuaq% = SER (GAkquiDat$,1)
   codeaq.GAkquiDat$ = cuaq%
   codeKU.GAkquiDat$ = tmpku%
   CodeAK.GAkquiDat$ = VAL ( MID$ (Aktion$, LEN (Aktion$) - 6,6))
   CodeMA.GAkquiDat$ = VAL ( MID$ (MANachname$, LEN (MANachname$) - 6,6))
   SELECT KEY tmpku% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
   nachname.GAkquiDat$ = nachname.GAdrDat$
   Wertung.GAkquiDat$ = 0
   Datum.GAkquiDat$ = Datum$
   Uhrzeit.GAkquiDat$ = zeit$
   Dauer.GAkquiDat$ = VAL (dauer$)
   CodeDOK.GAkquiDat$ = 0
   ErDatum.GAkquiDat$ = VTermin$
   ErZeit.GAkquiDat$ = VZeit$
   SELECT KEY codema.GAkquiDat$ LOCK FILE "supervis" INDEX codema.supervis
   Bearbeiter.GAkquiDat$ = nachname.supervis
   REM AnzTermine.supervis = AnzTermine.supervis + 1
   IF Terminerl$ LIKE "j" THEN 
     REM AnzTermineErl.supervis = AnzTermineErl.supervis + 1
   ELSE 
     REM AnzTermineUnErl.supervis = AnzTermineUnErl.supervis + 1
   END IF 
   STORE FILE "supervis"
   UNLOCK CURRENT FILE "Supervis"
   IF PROJECTJN$ = "TRUE" THEN 
     codepr.GAkquiDat$ = codeprdok%
     projekt.GAkquiDat$ = projektdok$
     codeprdok% = 0
     projektdok$ = ""
   END IF 
   notiz.GAkquiDat$ = rnotiz$
   termin.GAkquiDat$ = Termin$
   erledigt_Termin.GAkquiDat$ = Terminerl$
   REM TerminNr.GAkquiDat$ = AnzTermine.supervis
   REM 01032001
   GErledTermin$ = Terminerl$
   emailto.GAkquiDat$ = mailto.mail
   emailbetreff.GAkquiDat$ = Betreff.mail
   emailtext.GAkquiDat$ = nachricht.mail
   emailcc.GAkquiDat$ = emailcc.mail
   emailbcc.GAkquiDat$ = emailbcc.mail
   CALL FStore(GAkquiDat$)
 END IF 
 FILE cfile$
 ON ERROR GOTO ErrorHandler
 MOUSE ON 
 END SUB 
 
 
 
 
SUB NetMail()
 IF disabled%("NETMAIL") THEN END SUB 
 CALL DFile(2,"OFFICE\mail" + _fpw$)
 CALL DFile(2,"OFFICE\" + "ADRESSEN" + _fpw$)
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + "AKTIONEN" + _fpw$)
 CALL DFile(2,"OFFICE\" + "TELEFON" + _fpw$)
 CALL DFile(2,"OFFICE\" + "DOKUMENT" + _fpw$)
 cfile$ = FILE 
 DIM Auswahl$(20000)
 DIM masucc%( RECCOUNT ("supervis"))
 DIM masubcc%( RECCOUNT ("supervis"))
 w% = 280:h% = 100
 d$ = "NETMAIL"
 FILE "mail"
 BLANK FILE "MAIL"
 SET STATUS "Datensatz neu angelegt..."
 MADEST$ = MALIST2$(0)
 
    DIM dlg AS Dialog
    DIM control AS DialogControl
anf120520032: 
 ok% = - 1
 WHILE ok%
    Superbase.Dialogs.Add("DIALOG")
    SET dlg = Superbase.Dialogs.DIALOG
    dlg.Move(0,0,452,281)
    dlg.Caption = "Nachricht senden"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(4,4,120,10)
    control.Caption = "Nachricht versenden an:"
 
    SET control = dlg.Add("DialogComboBox2","DialogComboBox")
    control.Move(4,14,400,248)
    control.Style = 0
    control.Bind("MALIST2$","MADEST$")
 
    SET control = dlg.Add("DialogLabel5","DialogLabel")
    control.Move(2,41,28,10)
    control.Caption = "CC:"
 
    SET control = dlg.Add("DialogCommandButton5","DialogCommandButton")
    control.Move(424,51,24,30)
    control.Caption = "..."
    control.ReturnValue = 4
    control.Cancel = 0
 
    SET control = dlg.Add("DialogTextBox4","DialogTextBox")
    control.Move(4,52,417,34)
    control.MultiLine = 1
    control.ScrollEnable = 3
    control.ScrollBars = 3
    control.MaxLength = 4000
    control.TextBinding = "CC.mail"
 
    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(4,88,26,9)
    control.Caption = "BCC:"
 
    SET control = dlg.Add("DialogTextBox2","DialogTextBox")
    control.Move(4,100,417,34)
    control.MultiLine = 1
    control.ScrollEnable = 3
    control.ScrollBars = 3
    control.MaxLength = 4000
    control.TextBinding = "BCC.mail"
 
    SET control = dlg.Add("DialogCommandButton4","DialogCommandButton")
    control.Move(424,100,24,31)
    control.Caption = "..."
    control.ReturnValue = 3
    control.Cancel = 0
 
    SET control = dlg.Add("DialogTextBox3","DialogTextBox")
    control.Move(110,137,268,12)
    control.MaxLength = 50
    control.TextBinding = "Betreff.mail"
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(5,138,100,10)
    control.Caption = "Betreff fÅr EMAIL - Versand:"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(5,151,400,8)
    control.Caption = "Nachricht: (ACHTUNG - um einen Zeilenumbruch zu erzeugen bitte Tastenkombination STRG+ENTER betÑtigen)"
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(4,161,448,96)
    control.MultiLine = 1
    control.ScrollEnable = 3
    control.ScrollBars = 3
    control.MaxLength = 4000
    control.TextBinding = "nachricht.mail"
 
    SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
    control.Move(101,264,83,14)
    control.Default = 1
    control.Caption = "Als &EMAIL Versenden"
    control.ReturnValue = 2
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(186,264,82,14)
    control.Default = 1
    control.Caption = "Im Netzwerk &Versenden"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(270,264,36,14)
    control.Caption = "&Abbruch"
    control.ReturnValue = 0
    control.Cancel = 1
    DIALOG "DIALOG",a%
    REMOVE DIALOG ALL 
    SELECT CASE a%
      CASE 0
        ok% = 0
      CASE 1
        ok% = 0
      CASE 2
        IF Betreff.mail <> "" THEN 
          ok% = 0
        ELSE 
          CALL Fehler("Sie mÅssen die Betreff-Zeile ausfÅllen, um eine EMAIL zu versenden!","")
        END IF 
      CASE 3
        REM BCC
        CREATE DIALOG "ACCESS",0,0,395,212,"BCC-Auswahl","MS Sans Serif",8
        ADD DIALOG "ACCESS",9,6,8,20,20,2
        ADD DIALOG "ACCESS",5,36,9,152,8,0,"Bitte markieren Sie die Mitarbeiter, "
        ADD DIALOG "ACCESS",5,36,17,152,10,0,"denen Sie eine Nachricht senden wollen:"
        ADD DIALOG "ACCESS",7,36,28,296,185,10,2,MALIST2$,Auswahl$
        ADD DIALOG "ACCESS",1,336,173,55,15,1,"&OK",1,1
        ADD DIALOG "ACCESS",1,336,191,55,15,0,"&Abbrechen",0,0
        DIALOG "ACCESS",req%
        REMOVE DIALOG "ACCESS"
        IF req% = 1 THEN 
          MOUSE OFF 
           ab% = 0
           WHILE Auswahl$(ab%) <> ""
             SELECT KEY Auswahl$(ab%) FILE "supervis" INDEX Name.SUPERVIS
             IF FOUND ("Supervis") THEN 
                 IF bcc.mail = "" THEN 
                   bcc.mail = name.supervis
                 ELSE 
                   bcc.mail = bcc.mail + ":" + name.supervis
                 END IF 
               REM CALL QuickStore("ACCESS")
             END IF 
             ab% = ab% + 1
           WEND 
      CASE 4
        REM CC 
        CREATE DIALOG "ACCESS",0,0,395,212,"CC-Auswahl","MS Sans Serif",8
        ADD DIALOG "ACCESS",9,6,8,20,20,2
        ADD DIALOG "ACCESS",5,36,9,152,8,0,"Bitte wÑhlen Sie den "
        ADD DIALOG "ACCESS",5,36,17,152,10,0,"den aktuellen Mitarbeiter sperren wollen:"
        ADD DIALOG "ACCESS",7,36,28,296,185,10,2,MALIST2$,Auswahl$
        ADD DIALOG "ACCESS",1,336,173,55,15,1,"&OK",1,1
        ADD DIALOG "ACCESS",1,336,191,55,15,0,"&Abbrechen",0,0
        DIALOG "ACCESS",req%
        REMOVE DIALOG "ACCESS"
        IF req% = 1 THEN 
          MOUSE OFF 
           ab% = 0
           WHILE Auswahl$(ab%) <> ""
             SELECT KEY Auswahl$(ab%) FILE "supervis" INDEX Name.SUPERVIS
             IF FOUND ("Supervis") THEN 
                 IF cc.mail = "" THEN 
                   cc.mail = name.supervis
                 ELSE 
                   cc.mail = cc.mail + ":" + name.supervis
                 END IF 
               REM CALL QuickStore("ACCESS")
             END IF 
             ab% = ab% + 1
           WEND 
        END IF 
    END SELECT 
  WEND 
 
 IF a% = 1 THEN 
   REM als Netzwerknachricht versenden
   MOUSE OFF 
   SELECT KEY GMAcodema% FILE "supervis" INDEX codema.supervis
   absender.mail = name.supervis
   IF emailnummer.supervis <> "" THEN 
     MailTO.mail = emailnummer.supervis
   ELSE 
     MailTO.mail = ""
   END IF 
   SELECT KEY MADEST$ FILE "supervis" INDEX Name.SUPERVIS
   codema.mail = codema.supervis
   codemavon.mail = GMAcodema%
   Datum.mail = TODAY 
   Zeit.mail = NOW 
   codemail% = SER ("mail",1)
   codeMAIL.mail = codemail%
   IF LTRIM$ (cc.mail) <> "" THEN 
     IF RIGHT$ (cc.mail,1) <> ":" THEN 
       cc.mail = cc.mail + ":"
     END IF 
   END IF 
   IF LTRIM$ (bcc.mail) <> "" THEN 
     IF RIGHT$ (bcc.mail,1) <> ":" THEN 
       bcc.mail = bcc.mail + ":"
     END IF 
   END IF 

   CALL QuickStore("MAIL")
   SELECT KEY codemail% FILE "MAIL" INDEX codemail.mail
   REDIM masucc%( RECCOUNT ("supervis"))
   REDIM masubcc%( RECCOUNT ("supervis"))
   IF cc.mail <> "" THEN 
     pos% = INSTR (cc.mail,":")
     IF pos% > 0 THEN 
       laeng% = LEN (cc.mail)
       j% = 0
        FOR i% = 1 TO laeng%
         posold% = pos%
         cc$ = MID$ (cc.mail,i%,pos% - i%)
         pos% = INSTR (posold% + 1,cc.mail,":")
 
         IF pos% > 0 THEN 
           i% = posold%
         ELSE 
           i% = laeng% + 1
         END IF 
         REM CALL WriteINIDes("BCC","Z" + LTRIM$ ( STR$ (j%,"999")), FN ansi(CC$),datei$)
         SELECT KEY cc$ FILE "supervis" INDEX Name.SUPERVIS
         masucc%(j%) = codema.supervis
         j% = j% + 1
 
       NEXT i%
     ELSE 
       cc$ = cc.mail
       SELECT KEY cc$ FILE "supervis" INDEX Name.SUPERVIS
       masucc%(0) = codema.supervis
     END IF 
     SELECT KEY codemail% FILE "MAIL" INDEX codemail.mail
     FOR i% = 0 TO j% - 1
       BLANK DUPLICATE FILE "mail"
       codemail.mail = SER ("MAIL",1)
       codema.mail = masucc%(i%)
       bcc.mail = ""
       STORE FILE "MAIL"
       SELECT KEY codemail% FILE "MAIL" INDEX codemail.mail
     NEXT i%
   END IF 
   SELECT KEY codemail% FILE "MAIL" INDEX codemail.mail
   IF bcc.mail <> "" THEN 
     pos% = INSTR (bcc.mail,":")
     IF pos% > 0 THEN 
       laeng% = LEN (bcc.mail)
       j% = 0
        FOR i% = 1 TO laeng%
         posold% = pos%
         cc$ = MID$ (bcc.mail,i%,pos% - i%)
         pos% = INSTR (posold% + 1,bcc.mail,":")
 
         IF pos% > 0 THEN 
           i% = posold%
         ELSE 
           i% = laeng% + 1
         END IF 
         REM CALL WriteINIDes("BCC","Z" + LTRIM$ ( STR$ (j%,"999")), FN ansi(CC$),datei$)
         SELECT KEY cc$ FILE "supervis" INDEX Name.SUPERVIS
         masubcc%(j%) = codema.supervis
         j% = j% + 1
 
       NEXT i%
     ELSE 
       cc$ = bcc.mail
       SELECT KEY cc$ FILE "supervis" INDEX Name.SUPERVIS
       masubcc%(0) = codema.supervis
     END IF 
     SELECT KEY codemail% FILE "MAIL" INDEX codemail.mail
     FOR i% = 0 TO j% - 1
       BLANK DUPLICATE FILE "mail"
       codemail.mail = SER ("MAIL",1)
       codema.mail = masubcc%(i%)
       bcc.mail = ""
       STORE FILE "MAIL"
       SELECT KEY codemail% FILE "MAIL" INDEX codemail.mail
     NEXT i%
   END IF 
   MOUSE ON 
   REQUEST "Nachricht wurde gesendet","",2
 END IF 
 
 IF a% = 2 THEN 
   
   REM als EMAIL-Nachricht versenden
   MOUSE OFF 
   FILE "supervis"
   INDEX codema.supervis
   REM SELECT FIRST FILE "supervis" INDEX codema.supervis
   SELECT KEY GMAcodema% FILE "supervis" INDEX codema.supervis
   fehl$ = ""
   IF GCODIE% <> - 1 THEN 
     fehl$ = "Es wurde kein EMAIL-Versand eingerichtet! (lokale Rechnereinstellungen)" + CHR$ (13) + CHR$ (10)
   END IF 
   IF EMAILSHost.supervis = "" THEN 
     fehl$ = fehl$ + "Es wurde fÅr den User " + name.supervis + " der EMAIL-Versand nicht korrekt eingerichtet-HOST! (Mitarbeiterverwaltung)" + CHR$ (13) + CHR$ (10)
   END IF 
   IF EMAILNummer.supervis = "" THEN 
     fehl$ = fehl$ + "Es wurde fÅr den User " + name.supervis + " der EMAIL-Versand nicht korrekt eingerichtet-keine EMAIL-Adresse! (Mitarbeiterverwaltung)" + CHR$ (13) + CHR$ (10)
   END IF 
   absender.mail = name.supervis
 
   SELECT KEY MADEST$ FILE "supervis" INDEX Name.SUPERVIS
   IF EMAILSHost.supervis = "" THEN 
     fehl$ = fehl$ + "Es wurde fÅr den User " + name.supervis + " der EMAIL-Versand nicht korrekt eingerichtet-HOST! (Mitarbeiterverwaltung)" + CHR$ (13) + CHR$ (10)
   END IF 
   codema.mail = codema.supervis
   codemavon.mail = GMAcodema%
   Datum.mail = TODAY 
   Zeit.mail = NOW 
   codemail% = SER ("mail",1)
   codeMAIL.mail = codemail%
   IF LTRIM$ (cc.mail) <> "" THEN 
     IF RIGHT$ (cc.mail,1) <> ":" THEN 
       cc.mail = cc.mail + ":"
     END IF 
   END IF 
   IF LTRIM$ (bcc.mail) <> "" THEN 
     IF RIGHT$ (bcc.mail,1) <> ":" THEN 
       bcc.mail = bcc.mail + ":"
     END IF 
   END IF 
   IF emailMAnummer.supervis <> "" THEN 
     MailTO.mail = emailMAnummer.supervis
   ELSE 
     MailTO.mail = emailnummer.supervis
   END IF 
   IF LTRIM$ (MailTO.mail) = "" THEN 
     fehl$ = fehl$ + "FÅr den Mitarbeiter " + name.supervis + " wurde keine EmpfÑnger-EMAIL-Adresse definiert!"
   END IF 
   CALL QuickStore("MAIL")
   IF fehl$ <> "" THEN 
     SELECT KEY codemail% LOCK FILE "MAIL" INDEX codemail.mail
     CALL Fehler(fehl$,"")
     GOTO anf120520032
   END IF 
 
 
   SELECT KEY codemail% LOCK FILE "MAIL" INDEX codemail.mail
   REDIM masucc%( RECCOUNT ("supervis"),1)
   REDIM masubcc%( RECCOUNT ("supervis"),1)
   REDIM masucc%( RECCOUNT ("supervis"))
   REDIM masubcc%( RECCOUNT ("supervis"))
   EMAILCC.mail = ""
   IF cc.mail <> "" THEN 
     pos% = INSTR (cc.mail,":")
     IF pos% > 0 THEN 
       laeng% = LEN (cc.mail)
       j% = 0
        FOR i% = 1 TO laeng%
         posold% = pos%
         cc$ = MID$ (cc.mail,i%,pos% - i%)
         pos% = INSTR (posold% + 1,cc.mail,":")
 
         IF pos% > 0 THEN 
           i% = posold%
         ELSE 
           i% = laeng% + 1
         END IF 
         REM CALL WriteINIDes("BCC","Z" + LTRIM$ ( STR$ (j%,"999")), FN ansi(CC$),datei$)
         SELECT KEY cc$ FILE "supervis" INDEX Name.SUPERVIS
         IF EMAILMANUMMER.supervis <> "" THEN 
           EMAILCC.mail = EMAILCC.mail + EMAILMANUMMER.supervis + ":"
         ELSE 
           EMAILCC.mail = EMAILCC.mail + EMAILNUMMER.supervis + ":"
         END IF 
         IF EMAILSHost.supervis = "" THEN 
           fehl$ = fehl$ + "Es wurde fÅr den CC-User " + name.supervis + " der EMAIL-Versand nicht korrekt eingerichtet-HOST! (Mitarbeiterverwaltung)" + CHR$ (13) + CHR$ (10)
         END IF 
         IF EMAILNummer.supervis = "" AND EMAILMANummer.supervis = "" THEN 
           fehl$ = fehl$ + "Es wurde fÅr den CC-User " + name.supervis + " der EMAIL-Versand nicht korrekt eingerichtet-keine EMAIL-Adresse! (Mitarbeiterverwaltung)" + CHR$ (13) + CHR$ (10)
         END IF 
         masucc%(j%) = codema.supervis
         j% = j% + 1
 
       NEXT i%
     ELSE 
       cc$ = cc.mail
       SELECT KEY cc$ FILE "supervis" INDEX Name.SUPERVIS
       IF EMAILMANUMMER.supervis <> "" THEN 
         EMAILCC.mail = EMAILCC.mail + EMAILMANUMMER.supervis + ":"
       ELSE 
         EMAILCC.mail = EMAILCC.mail + EMAILNUMMER.supervis + ":"
       END IF 
       IF EMAILSHost.supervis = "" THEN 
         fehl$ = fehl$ + "Es wurde fÅr den CC-User " + name.supervis + " der EMAIL-Versand nicht korrekt eingerichtet-HOST! (Mitarbeiterverwaltung)" + CHR$ (13) + CHR$ (10)
       END IF 
       IF EMAILNummer.supervis = "" AND EMAILMANummer.supervis = "" THEN 
         fehl$ = fehl$ + "Es wurde fÅr den CC-User " + name.supervis + " der EMAIL-Versand nicht korrekt eingerichtet-keine EMAIL-Adresse! (Mitarbeiterverwaltung)" + CHR$ (13) + CHR$ (10)
       END IF 
       masucc%(0) = codema.supervis
     END IF 
     IF fehl$ <> "" THEN 
       SELECT KEY codemail% LOCK FILE "MAIL" INDEX codemail.mail
       CALL Fehler(fehl$,"")
       GOTO anf120520032
     ELSE 
       CALL QuickStore("MAIL")
     END IF 
     SELECT KEY codemail% LOCK FILE "MAIL" INDEX codemail.mail
   END IF 
   SELECT KEY codemail% LOCK FILE "MAIL" INDEX codemail.mail
   EMAILBCC.mail = ""
   IF bcc.mail <> "" THEN 
     pos% = INSTR (bcc.mail,":")
     IF pos% > 0 THEN 
       laeng% = LEN (bcc.mail)
       j% = 0
        FOR i% = 1 TO laeng%
         posold% = pos%
         cc$ = MID$ (bcc.mail,i%,pos% - i%)
         pos% = INSTR (posold% + 1,bcc.mail,":")
 
         IF pos% > 0 THEN 
           i% = posold%
         ELSE 
           i% = laeng% + 1
         END IF 
         REM CALL WriteINIDes("BCC","Z" + LTRIM$ ( STR$ (j%,"999")), FN ansi(CC$),datei$)
         SELECT KEY cc$ FILE "supervis" INDEX Name.SUPERVIS
         IF EMAILMANUMMER.supervis <> "" THEN 
           EMAILBCC.mail = EMAILBCC.mail + EMAILMANUMMER.supervis + ":"
         ELSE 
           EMAILBCC.mail = EMAILBCC.mail + EMAILNUMMER.supervis + ":"
         END IF 
         IF EMAILSHost.supervis = "" THEN 
           fehl$ = fehl$ + "Es wurde fÅr den BCC-User " + name.supervis + " der EMAIL-Versand nicht korrekt eingerichtet-HOST! (Mitarbeiterverwaltung)" + CHR$ (13) + CHR$ (10)
         END IF 
         IF EMAILNummer.supervis = "" AND EMAILMANummer.supervis = "" THEN 
           fehl$ = fehl$ + "Es wurde fÅr den BCC-User " + name.supervis + " der EMAIL-Versand nicht korrekt eingerichtet-keine EMAIL-Adresse! (Mitarbeiterverwaltung)" + CHR$ (13) + CHR$ (10)
         END IF 
         masubcc%(j%) = codema.supervis
         j% = j% + 1
 
       NEXT i%
     ELSE 
       cc$ = bcc.mail
       SELECT KEY cc$ FILE "supervis" INDEX Name.SUPERVIS
       IF EMAILMANUMMER.supervis <> "" THEN 
         EMAILBCC.mail = EMAILBCC.mail + EMAILMANUMMER.supervis + ":"
       ELSE 
         EMAILBCC.mail = EMAILBCC.mail + EMAILNUMMER.supervis + ":"
       END IF 
       IF EMAILSHost.supervis = "" THEN 
         fehl$ = fehl$ + "Es wurde fÅr den BCC-User " + name.supervis + " der EMAIL-Versand nicht korrekt eingerichtet-HOST! (Mitarbeiterverwaltung)" + CHR$ (13) + CHR$ (10)
       END IF 
       IF EMAILNummer.supervis = "" THEN 
         fehl$ = fehl$ + "Es wurde fÅr den BCC-User " + name.supervis + " der EMAIL-Versand nicht korrekt eingerichtet-keine EMAIL-Adresse! (Mitarbeiterverwaltung)" + CHR$ (13) + CHR$ (10)
       END IF 
       masubcc%(0) = codema.supervis
     END IF 
     IF fehl$ <> "" THEN 
       SELECT KEY codemail% LOCK FILE "MAIL" INDEX codemail.mail
       CALL Fehler(fehl$,"")
       GOTO anf120520032
     ELSE 
       CALL QuickStore("MAIL")
     END IF 
   END IF 
   IF fehl$ <> "" THEN 
   END IF 
   SELECT KEY codemail% FILE "MAIL" INDEX codemail.mail
   CALL Fehler("Die EMAIL mu· einer Adresse zugeordnet werden, um einen Termin zuhinterlegen!","Bitte wÑhlen Sie eine Adresse aus!")
   adr% = ADRSuche%(0)
   IF adr% <> 0 THEN 
     SELECT KEY adr% FILE "ADRESSEN" INDEX codeku.adressen
     knr% = adr%
     kunr% = adr%
     CALL AQRegMail(codemail%)
     SELECT KEY cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
     CALL EMAILManSend(codeaq.GAkquiDat$,1)
   ELSE 
     SELECT KEY codemail% LOCK FILE "MAIL" INDEX codemail.mail
     CALL Fehler("Sie mÅssen eine Adresse zuordnen, um die EMAIL versenden zu kînnen!","")
     GOTO anf120520032
   END IF 
 
 
   MOUSE ON 
   REQUEST "Nachricht wurde gesendet","",2
 END IF 
 FILE cfile$
 END SUB 
 
 
SUB EMAILUsTest_old(codema%)
   REM SendEMAILTest(char *absenderemail,char *HostSMTP, char *UserIDSMTP, char *PortSMTP,
   REM  char * HostPOP3,char * UserIDPOP3,char * PortPOP3,char * PasswortPOP3,char * POPCon)
   SELECT KEY codema% FILE "Supervis" INDEX codema.supervis
   IF GCOdie% = - 1 THEN 
     IF GEMAIL% = - 1 THEN 
       REGISTER _netpath$ + "CODieEMAILSend.dll","_SendEMAILTest","IFFFFFFFFF"
     ELSE 
       CALL Fehler("EMAIL-UnterstÅtzung fÅr die Anwendung oder diesen User nicht aktiviert!","")
       GOTO emtest260520031
     END IF 
   ELSE 
     CALL Fehler("Die neuen Funktionen zur Suche und zur EMAIL-UnterstÅtzung wurden nicht aktiviert!","Stammdaten->lokale Einstellungen, aber nur unter WinNT,Win2000,WinXP")
     GOTO emtest260520031
   END IF 
   REM SMTP
   Host$ = EMAILSHost.supervis
   UserID$ = EMAILSUserID.supervis
   ANUmmer$ = EMAILNummer.supervis
   port$ = LTRIM$ ( STR$ (EMAILSPort.supervis,"999999"))
   IF port$ = "" THEN port$ = "25"
   REM POP3
   Hpop3$ = ""
   HPPort$ = ""
   PUID$ = ""
   PJN$ = EMAILPOP3JN.supervis
   IF EMAILPOP3JN.supervis = "TRUE" THEN 
     Hpop3$ = EMAILPHost.supervis
     HPPort$ = LTRIM$ ( STR$ (EMAILPPort.supervis,"999999"))
     IF HPPort$ = "" THEN HPPort$ = "110"
     PUID$ = EmailPUserID.supervis
     Ppassw$ = EMAILPPasww.supervis
   END IF 
   ok% = - 1
   fehl$ = ""
   IF EMAILPOP3JN.supervis = "TRUE" THEN 
     IF LTRIM$ (HPOP3$) = "" THEN 
       ok% = 0
       fehl$ = fehl$ + "POP3 Host muss ausgefÅllt werden" + CHR$ (13) + CHR$ (10)
     END IF 
     IF LTRIM$ (PUID$) = "" THEN 
       ok% = 0
       fehl$ = fehl$ + "POP3 UserID muss ausgefÅllt werden" + CHR$ (13) + CHR$ (10)
     END IF 
     IF LTRIM$ (ANummer$) = "" THEN 
       ok% = 0
       fehl$ = fehl$ + "eigene EMAIL-Adresse muss fÅr POP3 ausgefÅllt werden" + CHR$ (13) + CHR$ (10)
     END IF 
   END IF 
   IF LTRIM$ (Host$) = "" THEN 
     ok% = 0
     fehl$ = fehl$ + "SMTP Host muss ausgefÅllt werden" + CHR$ (13) + CHR$ (10)
   END IF 
   IF LTRIM$ (UserID$) = "" THEN 
     ok% = 0
     fehl$ = fehl$ + "SMTP UserID muss ausgefÅllt werden" + CHR$ (13) + CHR$ (10)
   END IF 
   IF LTRIM$ (Host$) = "" THEN 
     ok% = 0
     fehl$ = fehl$ + "SMTP Host muss ausgefÅllt werden" + CHR$ (13) + CHR$ (10)
   END IF 
   IF ok% THEN 
     MOUSE OFF 
     ret% = CALL ("_SendEMAILTest",ANummer$,Host$,UserID$,port$,Hpop3$,PUID$,HPPort$,Ppassw$,PJN$)
     MOUSE ON 
   ELSE 
     CALL Fehler(fehl$,"")
   END IF 
   REGISTER CLEAR "_SendEMAILTest"
emtest260520031: 
 END SUB 
 
 
 
SUB SerienEMAIL()
   GTelDat$ = "TELEFON"
   GDokDat$ = "Dokument"
   GADRDat$ = "ADRESSEN"
   SELECT FIRST FILE "supervis"
   SELECT KEY GMACodeMA% FILE "Supervis" INDEX codema.supervis
 datei$ = GMACodeDir$ + "codietes.ini"
 IF EXISTS (datei$) THEN 
   ON ERROR GOTO mas240520031
   DELETE datei$
   GOTO mas240520032
mas240520031: 
   IF schalter% <> 0 THEN CALL fehler("Es konnte die temporÑre Datei " + datei$ + " nicht gelîscht werden, bitte prÅfen Sie, ob die Datei geîffnet ist und schlie·en Sie diese!,"")
mas240520032: 
   ON ERROR GOTO ErrorHandler
 END IF 
 datei1$ = GMACodeDir$ + "codietes.txt"
 IF EXISTS (datei1$) THEN 
   ON ERROR GOTO mas240520035
   DELETE datei1$
   GOTO mas240520036
mas240520035: 
   IF schalter% <> 0 THEN CALL fehler("Es konnte die temporÑre Datei " + datei1$ + " nicht gelîscht werden, bitte prÅfen Sie, ob die Datei geîffnet ist und schlie·en Sie diese!,"")
mas240520036: 
   ON ERROR GOTO ErrorHandler
 END IF 
 OPEN datei$ FOR OUTPUT 
 CLOSE OUTPUT 
 IF EmailShost.supervis <> "" THEN 
   UserID$ = EMAILSUserID.supervis
   AFirma$ = FN ansi(EMAILSAFirma.supervis)
   AName$ = FN ansi(EMAILSAName.supervis)
   ANUmmer$ = EMAILNummer.supervis
   
   REM BCC$ = EMAILSKopie.supervis
   Sen$ = EMAILSKopie.supervis
   REM char *HostPOP3, char *UserIDPOP3, char *PortPOP3, char*PasswortPOP3, char *POPCon
   REM ,Hpop3$,HPPort$,PUID$,Ppassw$,PJN$
   Hpop3$ = ""
   HPPort$ = ""
   PUID$ = ""
   PJN$ = EMAILPOP3JN.supervis
   IF EMAILPOP3JN.supervis = "TRUE" THEN 
     Hpop3$ = EMAILPHost.supervis
     HPPort$ = LTRIM$ ( STR$ (EMAILPPort.supervis,"999999"))
     IF HPPort$ = "" THEN HPPort$ = "110"
     PUID$ = EmailPUserID.supervis
     Ppassw$ = EMAILPPasww.supervis
   END IF 
   port$ = LTRIM$ ( STR$ (EMAILSPort.supervis,"999999"))
   IF port$ = "" THEN port$ = "25"
   IF EMAILSNummer.supervis <> "" THEN 
     Bersend$ = EMAILSNummer.supervis
   ELSE 
     Bersend$ = EMAILNummer.supervis
   END IF 
   Bersend1$ = EMAILSNummer1.supervis
   Text1$ = FN ansi(EMAILText1.supervis)
   Text2$ = FN ansi(EMAILText2.supervis)
   BAnrede$ = FN ansi(Briefanrede.GADRDat$)
   alltxt$ = GMACodeDir$ + "codietes.ini"
   TOM$ = EMAILNummer.supervis
   ok% = - 1
   IF ANUmmer$ = "" OR AName$ = "" THEN 
     ok% = 0
     CALL Fehler("Sie kînnen eine email nur versenden, wenn Sie einen Absendernamen und eine Absender - email-Nummer besitzen!","Siehe Stammdaten-Mitarbeiterverwaltung")
     GOTO end240520031
   END IF 
   Betreff$ = ""
   senber$ = UCASE$ (EMAILSErg.supervis)
   CALL WriteINIDes("EMAILSERVER","HOST",EMAILShost.supervis,datei$)
   CALL WriteINIDes("EMAILSERVER","PORT",port$,datei$)
   CALL WriteINIDes("EMAILSERVER","USERID",UserID$,datei$)
   CALL WriteINIDes("EMAILSERVER","ABSFirma",AFirma$,datei$)
   CALL WriteINIDes("EMAILSERVER","ABSName",AName$,datei$)
   CALL WriteINIDes("EMAILSERVER","ABSEMAIL",ANummer$,datei$)
   CALL WriteINIDes("EMAILSERVER","KOPIEANABSENDER",Sen$,datei$)
   CALL WriteINIDes("EMAILSERVER","BerSendenummer",BerSend$,datei$)
   CALL WriteINIDes("EMAILSERVER","BerSendenummer1",BerSend1$,datei$)
   CALL WriteINIDes("EMAILSERVER","TO",TOM$,datei$)
   CALL WriteINIDes("EMAILSERVER","SENDEBERICHT",senber$,datei$)
   CALL WriteINIDes("EMAILSERVER","Betreff",Betreff$,datei$)
   OPEN datei1$ FOR OUTPUT 
   ? FN ansi(emailtext.GAkquiDat$)
   CLOSE OUTPUT 
   j% = 0
   k% = 0
   SELECT FIRST FILE userfile$ INDEX codeku.userfile$
   WHILE NOT EOF (userfile$)
     codeku% = VAL (codeku.userfile$)
     SELECT FIRST FILE GTelDat$ INDEX codeku.GTelDat$
     SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
     WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku%
       ook% = 0
       IF nummer.GTelDat$ LIKE "*@*" THEN 
         IF GEMAILRAUS$ LIKE "<kein Filter>" THEN 
           ook% = - 1
           k% = k% + 1
         ELSE 
           IF KART2.GTELDAT$ = GEMAILRAUS$ THEN 
             ook% = - 1
             k% = k% + 1
           END IF 
         END IF 
       END IF 
       IF ook% = - 1 THEN 
         CALL WriteINIDes("BCC","Z" + LTRIM$ ( STR$ (k% - 1,"99999")), FN ansi(nummer.GTelDat$),datei$)
       END IF 
       SELECT NEXT FILE GTelDat$ INDEX codeku.GTelDat$
     WEND 
     SELECT NEXT FILE userfile$ INDEX codeku.userfile$
   WEND 
   REM hier jetzt das EMAIL-Programm aufrufen
   CALL Fehler("jetzt das EMAIL-Programm aufrufen","")
   IF ok% THEN 
     MOUSE OFF 
     Bersend$ = ""
     REGISTER _netpath$ + "CODieEMAILSend.dll","_SendEMAILSerie","IFFFFFFFFFFFF"
     ret% = CALL ("_SendEMAILSerie",datei$,datei1$,schalter$,adresse$,Hpop3$,PUID$,HPPort$,Ppassw$,PJN$,Bersend$,Text1$,Text2$)
     REGISTER CLEAR "_SendEMAILSerie"
     qdatei$ = datei1$
     MOUSE ON 
   ELSE 
     ret% = 4
   END IF 
   IF Bersend$ <> "" AND ret% = - 1 THEN 
     adrser% = 0
     GMailBetreff$ = Bersend$
     GMailIn% = - 1
     SELECT FIRST FILE userfile$ INDEX codeku.userfile$
     knr% = CodeKU%
     textdatei% = DOKNeu%(0,"allgemeine Schreiben",0)
     IF EXISTS (textdatei%,CodeDOK.GDokDat$) AND textdatei% > 0 THEN 
       SELECT FIRST FILE GDokDat$ INDEX CodeDOK.GDokDat$
       SELECT KEY textdatei% FILE GDokDat$ INDEX CodeDOK.GDokDat$
       datei1$ = _netpath$ + Dateiname.GDokDat$
       COPY qdatei$ TO datei1$
       SELECT FIRST FILE userfile$ INDEX codeku.userfile$
       WHILE NOT EOF (userfile$)
         codeku% = VAL (codeku.userfile$)
         IF codeku% <> knr% THEN 
           SELECT FIRST FILE GDokDat$ INDEX CodeDOK.GDokDat$
           SELECT KEY textdatei% FILE GDokDat$ INDEX CodeDOK.GDokDat$
           FILE GDokDat$
           BLANK DUPLICATE FILE GDokDat$
           codeku.GDokdat$ = codeku%
           codedok.GDokDat$ = SER (GDokDat$,1)
           CALL QuickStore(GDokDat$)
         END IF 
         FILE userfile$
         SELECT NEXT FILE userfile$ INDEX codeku.userfile$
       WEND 
     END IF 
   END IF 
end240520031: 
 CALL Fehler("Serien-EMAIL wurde beendet!","")
 GEMAILRAUS$ = ""
 GEMAILSer% = 0
 END SUB 
 
 
SUB EMAILAbfrage(kw$)
 REM ***************************EMAIL-Abfrage*********************************
   optemail% = 1
   IF GEMAIL% = - 1 THEN 
     DIM dlg1 AS Dialog
     DIM control AS DialogControl 
 
     Superbase.Dialogs.Add("Dialogname")
     SET dlg1 = Superbase.Dialogs.Dialogname
     dlg1.Move(0,0,150,73)
     dlg1.Caption = "Art des Serienbriefes"
     dlg1.FontName = "MS Sans Serif"
     dlg1.FontSize = 8
 
     SET control = dlg1.Add("DialogFrame1","DialogFrame")
     control.Move(2,8,150,44)
     control.Caption = " WÑhlen Sie eine Option "
 
     SET control = dlg1.Add("DialogOptionButton1","DialogOptionButton")
     control.Move(6,20,114,10)
     control.Caption = "Serien-BRIEF"
     control.Bind("optemail%")
     control.ValueOn = 1
 
     SET control = dlg1.Add("DialogOptionButton2","DialogOptionButton")
     control.Move(6,32,114,9)
     control.Caption = "Serien-EMAIL"
     control.Bind("optemail%")
     control.ValueOn = 2
 
 
 
     SET control = dlg1.Add("DialogCommandButton1","DialogCommandButton")
     control.Move(39,54,43,16)
     control.Default = 1
     control.Caption = "OK"
     control.ReturnValue = 1
 
     SET control = dlg1.Add("DialogCommandButton2","DialogCommandButton")
     control.Move(85,54,42,16)
     control.Caption = "Abbruch"
     control.ReturnValue = 0
 
     DIALOG "Dialogname",reqemail%
     REMOVE DIALOG "Dialogname"
   END IF 
   REM CALL Fehler("Es werden alle Adressen ignoriert, deren Nachname mit    zz~    anfangen!","")
   GEMAILSer% = 0
   IF reqemail% = 0 THEN END SUB 
   IF optemail% = 2 THEN 
     GEMAILSer% = - 1
   ELSE 
     GEMAILSer% = 0
   END IF 
   IF GEMAILSer% = - 1 THEN 
     REDIM GBCC$(1,1)
     DIM AutoKArt2$(20)
     i% = 0
     j% = 1
     AutoKArt2$(0) = "<kein Filter>"
     WHILE GAutoKArt2$(i%) <> ""
       AutoKArt2$(j%) = GAutoKArt2$(i%)
       i% = i% + 1
       j% = j% + 1
     WEND 
     kw$ = ""
     prompt$ = AutoKArt2$(0)
     CREATE DIALOG "KEYWORD",0,0,100,130,"EMAIL-Filter","MS Sans Serif",8
     ADD DIALOG "KEYWORD",4,0,1,100,110,0,""
     ADD DIALOG "KEYWORD",5,1,14,100,19,0,"Bitte wÑhlen Sie ein Merkmal als EMAIL-Filter aus:"
     ADD DIALOG "KEYWORD",7,5,38,80,70,0,2,AutoKArt2$,Auswahl$,prompt$
     ADD DIALOG "KEYWORD",1,20,113,55,15,1,"&OK",1,1
     DIALOG "KEYWORD",req%
     REMOVE DIALOG "KEYWORD"
     IF req% <> 0 THEN 
       IF kw$ = "" THEN 
         GEMAILRAUS$ = UCASE$ (Auswahl$(0))
       END IF 
     END IF 
   END IF 
 REM **************************************************************************** 
 END SUB 
 
SUB AutoKart1(datei$)
 IF AutoKArt1$ LIKE "TRUE" AND nummer.telefon <> "" THEN CALL AutoKart1S(datei$)
 END SUB 
 
SUB AutoKart2(datei$)
 IF AutoKArt2$ LIKE "TRUE" AND nummer.telefon <> "" THEN CALL AutoKart2S(datei$)
 END SUB 
 
SUB AutoKart1S(datei$)
   codetel% = codetel.GTelDat$
   SELECT KEY codetel% LOCK FILE GTElDat$ INDEX Codetel.GTeldat$
   REM GAutoKArt1
   IF suchopt$ = "" THEN suchopt$ = "Nachname"
   DIM Auswahl$(1)
 
   Auswahl$ = KArt1.datei$
   prompt$ = KArt1.datei$
 IF prompt$ = "" THEN prompt$ = "FON"
 CREATE DIALOG "KEYWORD",0,0,70,140,"Merkmal 1","MS Sans Serif",8
 ADD DIALOG "KEYWORD",4,0,0,70,120,0,""
 REM ADD DIALOG "KEYWORD",9,4,12,21,24,2
 ADD DIALOG "KEYWORD",5,1,5,70,19,0,"Bitte wÑhlen Sie das Telefonmerkmal 1 aus:"
 ADD DIALOG "KEYWORD",7,5,32,60,80,0,2,GAutoKArt1$,Auswahl$,prompt$
 REM ADD DIALOG "KEYWORD",6,11,158,100,12,0,0,KW$,10
   ADD DIALOG "KEYWORD",1,5,123,55,15,1,"&OK",1,1
   REM ADD DIALOG "KEYWORD",1,113,98,55,15,0,"&Abbrechen",0,0
 DIALOG "KEYWORD",req%
 REMOVE DIALOG "KEYWORD"
 
 IF req% <> 0 THEN 
     IF kw$ = "" THEN 
       kw1$ = UCASE$ (Auswahl$(0))
       kw$ = kw1$
     ELSE 
       kw$ = UCASE$ (VSNRPack$(kw$))
       ok% = 0
       j% = 0
       FOR i% = 0 TO 49
         IF GAutoKArt1$(i%) = kw$ THEN 
           ok% = - 1
           i% = 50
         END IF 
         IF GAutoKArt1$(i%) = "" THEN 
           i% = 50
         END IF 
       NEXT i%
       IF ok% = 0 THEN 
         FOR i% = 0 TO 49
           IF GAutoKArt1$(i%) = "" THEN 
             j% = i%
             i% = 50
           END IF 
         NEXT i%
         GAutoKArt1$(j%) = kw$
         CALL WriteConfig("Telefonart1","Art" + LTRIM$ ( STR$ (j%,"99")),kw$)
       END IF 
     END IF 
     KArt1.datei$ = kw$
     STORE FILE GTELDat$
  END IF 
 
 END SUB 
 
SUB AutoKart2S(datei$)
   REM GAutoKArt1
   codetel% = codetel.GTelDat$
   SELECT KEY codetel% LOCK FILE GTElDat$ INDEX Codetel.GTeldat$
   IF suchopt$ = "" THEN suchopt$ = "Nachname"
   DIM Auswahl$(1)
 
   Auswahl$ = KArt2.datei$
   prompt$ = KArt2.datei$
 
  IF prompt$ = "" THEN prompt$ = "FIRMA"
  CREATE DIALOG "KEYWORD",0,0,70,130,"Merkmal 2","MS Sans Serif",8
  ADD DIALOG "KEYWORD",4,0,1,70,110,0,""
  REM ADD DIALOG "KEYWORD",9,4,12,21,24,2
  ADD DIALOG "KEYWORD",5,1,14,70,19,0,"Bitte wÑhlen Sie das Telefonmerkmal 2 aus:"
  ADD DIALOG "KEYWORD",7,5,38,50,70,0,2,GAutoKArt2$,Auswahl$,prompt$
  REM ADD DIALOG "KEYWORD",6,11,158,100,12,0,0,KW$,10
   ADD DIALOG "KEYWORD",1,5,113,55,15,1,"&OK",1,1
   REM ADD DIALOG "KEYWORD",1,113,98,55,15,0,"&Abbrechen",0,0
  DIALOG "KEYWORD",req%
  REMOVE DIALOG "KEYWORD"
 IF req% <> 0 THEN 
     IF kw$ = "" THEN 
       kw$ = UCASE$ (Auswahl$(0))
     ELSE 
       kw1$ = UCASE$ (VSNRPack$(kw$))
       kw$ = kw1$
       ok% = 0
       j% = 0
       FOR i% = 0 TO 49
         IF GAutoKArt2$(i%) = kw$ THEN 
           ok% = - 1
           i% = 50
         END IF 
         IF GAutoKArt2$(i%) = "" THEN 
           i% = 50
         END IF 
       NEXT i%
       IF ok% = 0 THEN 
         FOR i% = 0 TO 49
           IF GAutoKArt2$(i%) = "" THEN 
             j% = i%
             i% = 50
           END IF 
         NEXT i%
         GAutoKArt2$(j%) = kw$
         CALL WriteConfig("Telefonart2","Art" + LTRIM$ ( STR$ (j%,"99")), FN ibm(kw$))
       END IF 
     END IF 
     KArt2.datei$ = kw$
     STORE FILE GTELDat$
  END IF 
 
 END SUB 
 
 
SUB TerArtSpez()
     optemail% = 1
     DIM dlg1 AS Dialog
     DIM control AS DialogControl 
 
     Superbase.Dialogs.Add("Dialogname")
     SET dlg1 = Superbase.Dialogs.Dialogname
     dlg1.Move(0,0,150,73)
     dlg1.Caption = "Art der TerminÅbersicht"
     dlg1.FontName = "MS Sans Serif"
     dlg1.FontSize = 8
 
     SET control = dlg1.Add("DialogFrame1","DialogFrame")
     control.Move(2,8,147,44)
     control.Caption = " WÑhlen Sie eine Option "
 
     SET control = dlg1.Add("DialogOptionButton1","DialogOptionButton")
     control.Move(6,20,114,10)
     control.Caption = "nichterledigte"
     control.Bind("optemail%")
     control.ValueOn = 1
 
     SET control = dlg1.Add("DialogOptionButton2","DialogOptionButton")
     control.Move(6,32,114,9)
     control.Caption = "ALLE"
     control.Bind("optemail%")
     control.ValueOn = 2
 
 
 
     SET control = dlg1.Add("DialogCommandButton1","DialogCommandButton")
     control.Move(39,54,43,16)
     control.Default = 1
     control.Caption = "OK"
     control.ReturnValue = 1
 
     SET control = dlg1.Add("DialogCommandButton2","DialogCommandButton")
     control.Move(85,54,42,16)
     control.Caption = "Abbruch"
     control.ReturnValue = 0
 
     DIALOG "Dialogname",reqemail%
     REMOVE DIALOG "Dialogname"
   REM END IF 
   GEMAILSer% = 0
   GTERArtSpez% = 33
   IF reqemail% = 0 THEN GTERArtSpez% = 0
   IF optemail% = 2 THEN 
     GTERArtSpez% = 0
   ELSE 
     GTERArtSpez% = - 1
   END IF 
 END SUB 
 
 
SUB AdrHist()
   REM CALL Fehler("ADRHIS","")
 _formend% = 0
 SET STATUS "Bereit"
 ON ERROR GOTO ErrorHandler
 WHILE _formend% = 0
   SUPERVISsub% = 0
   IF FORM <> "ADRHIS" THEN 
     SET HEADING title$ + " - Adress-Such-Historie"
     OPEN FORM GOFFFORM$ + "\ADRHIS"
     SET f = Superbase.Form
     SET STATUS "Adress-Such-Historie"
     FILE "SUPERVIS"
     INDEX codema.supervis
     SELECT FIRST FILE "supervis" INDEX codema.supervis
     SELECT FORM KEY GMACodeMA% FILE "supervis" INDEX codema.supervis
     FILE "ADRHIS"
     INDEX QCodeMAkey.adrhis
     SELECT FIRST FILE "ADRHIS" INDEX QCodeMAkey.adrhis
     QCodeMAkey$ = STR$ (GMACodeMA%,"000000") + "000000"
     SELECT FORM KEY QCodeMAkey$ INDEX QCodeMAkey.adrhis
     GAppName$ = _netpath$ + "DOCP\project.pdf"
     
     CALL MNADRHIS()
     FORM 
   END IF 
   MENU ON 
   MOUSE ON 
   waehr$ = "FirmenwÑhrung: " + waehrung.stamm
   FORM 
   CALL ClearKBDBuffer()
   MENU ON 
   WAIT MOUSE OR KEY OR MENU 
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL SVPrev()
   CASE CrsRight%,PgDn%
     CALL SVNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   CALL ClearKBDBuffer()
   SELECT CASE SUPERVISsub%
   CASE 1
     REM Auswahl einer Adresse
     knr% = codeku.adrhis
     _formend% = 1
   CASE 2
     REM Abbruch
     MOUSE ON 
     _formend% = 1
 END SELECT 
 WEND 
 
 _formend% = 0
 END SUB 
 
SUB MNADRHIS()
 MENU CLEAR 
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
 
 REM ****************************************************************************************************************
 REM          Adress-öbersicht
 REM ****************************************************************************************************************

SUB AdrUEB()
   REM CALL Fehler("ADRHIS","")
 _formend% = 0
 SET STATUS "Bereit"
 ON ERROR GOTO ErrorHandler
 FILE "Adressen"
 WHILE _formend% = 0
   SUPERVISsub% = 0
   IF FORM <> "ADRUEB" THEN 
     SET HEADING title$ + " - Adress-öbersicht"
     OPEN FORM GOFFFORM$ + "\ADRUEB"
     SET f = Superbase.Form
     SET STATUS "Adress-öbersicht"
     FILE "SUPERVIS"
     INDEX codema.supervis
     SELECT FIRST FILE "supervis" INDEX codema.supervis
     SELECT FORM KEY GMACodeMA% FILE "supervis" INDEX codema.supervis
     FILE "ADRESSEN"
     INDEX codeku.adressen
     SELECT FIRST FILE "ADRessen" INDEX codeku.adressen
     SELECT FORM FIRST INDEX codeku.adressen
     GAppName$ = _netpath$ + "DOCP\project.pdf"
     
     CALL MNADRUEB()
     FORM 
   END IF 
   MENU ON 
   MOUSE ON 
   waehr$ = "FirmenwÑhrung: " + waehrung.stamm
   FORM 
   CALL ClearKBDBuffer()
   MENU ON 
   WAIT MOUSE OR KEY OR MENU 
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL SVPrev()
   CASE CrsRight%,PgDn%
     CALL SVNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   CALL ClearKBDBuffer()
   SELECT CASE SUPERVISsub%
   CASE 1
     REM Auswahl einer Adresse
     knr% = codeku.adressen
     _formend% = 1
   CASE 2
     REM Abbruch
     MOUSE ON 
     _formend% = 1
 END SELECT 
 WEND 
 
 _formend% = 0
 END SUB 
 
SUB MNADRUEB()
 MENU CLEAR 
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
 
 
 
 
 
  
  
 REM *****************************************************************************************************************
 REM                 WMAIL Form
 REM *****************************************************************************************************************
 
SUB WEMAILform()
 REM knr% = Codeku.adressen
 REM IF disabled%("DOKUMENT") THEN END SUB 
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 CALL DFile(2,"OFFICE\wemail" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 REM cudo% = CodeDOK.DOKUMENT
 REM knr% = Codeku.adressen
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "WMAIL"
 
 FILE "wemail"
 SELECT WHERE FILE "wemail"
 INDEX codekey.wemail
 SELECT FIRST 
 WHILE _formend% = 0
   AQsub% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     FILE "wemail"
     OPEN FORM GOFFForm$ + maske$
     SET STATUS "Werbe-Emailenverwaltung"
     CALL MNwemail()
     CALL wemailINT()
     FORM 
     SET DISPLAY ON 
     GAppName$ = _netpath$ + "DOCP\dokument.pdf"
   END IF 
   MENU ON 
   FORM 
   MOUSE ON 
   FORM 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE AQsub%
   CASE 1
     REM Neu
     SELECT FIRST FILE "supervis" INDEX codema.supervis
     SELECT KEY GMACodema% FILE "supervis" INDEX codema.supervis
     BLANK FILE "wemail"
     codekey.wemail = SER ("wemail",1)
     Beschreibung.wemail = "NEU " + DATE$ ( TODAY ,"0d.mm.yyyy")
     REM EMAILText1.wemail = EMAILText1.supervis + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + EMAILText1.supervis
     Name.wemail = Name.supervis
     Datum.wemail = TODAY 
     STORE FILE "wemail"
     REM CALL wemailINT()
     codekey% = codekey.wemail
     SELECT FIRST FILE "wemail" INDEX codekey.wemail
     SELECT KEY codekey% LOCK FILE "wemail" INDEX codekey.wemail
     FORM 2
     ENTER Beschreibung.wemail,0
   CASE 101
     REM gehe zu einzelne email
     codekey% = codekey.wemail
     SELECT FIRST FILE "wemail" INDEX codekey.wemail
     SELECT KEY codekey% LOCK FILE "wemail" INDEX codekey.wemail
     FORM 2
   CASE 3
     codekey% = codekey.wemail
     IF MOD ("wemail") OR NEW ("wemail") THEN STORE FILE "wemail"
     SELECT FIRST FILE "wemail" INDEX codekey.wemail
     SELECT KEY codekey% LOCK FILE "wemail" INDEX codekey.wemail
     REM CALL EMAILSerSend(CodeKey%)
   CASE 4
     REM Lîschen
     FILE "wemail"
     codekey% = codekey.wemail
     SELECT FIRST FILE "wemail" INDEX codekey.wemail
     SELECT KEY codekey% LOCK FILE "wemail" INDEX codekey.wemail
     REQUEST "Wirklich lîschen?","",130,req%
     IF req% = 1 THEN 
       SELECT REMOVE FILE "wemail"
       CALL Fehler("Datensatz wurde gelîscht!","")
       FORM 1
       FORM 
     END IF 
   CASE 5
     REM refresh
     codekey% = codekey.wemail
     CALL QuickStore("wemail")
     SELECT FIRST FILE "wemail" INDEX codekey.wemail
     SELECT KEY codekey% LOCK FILE "wemail" INDEX codekey.wemail
     FORM 1
     FORM 
   CASE 6
     REM Sortierung nach Beschreibung
     maske$ = "WMAIL"
   CASE 7
     REM Sortierung nach Bearbeiter
     maske$ = "WMAIL1"
   CASE 8
     REM Sortierung nach TimeStamp
     maske$ = "WMAIL2"
   CASE 9
     REM Sortierung nach Erstellung
     maske$ = "WMAIL3"

   CASE 99
     ENTER Beschreibung.wemail,0
   END SELECT 
 WEND 
 _formend% = 0
 REM IF FileChanged%("wemail") = 1 THEN CALL FStore("wemail")
 SELECT WHERE FILE "wemail"
 END SUB 
 
 
SUB MNwemail()
 CALL MNProgramm()
 MENU 2,0,1,"&Option","",""
 MENU 2,1,1,"aus Suchliste auswÑhlen,F7","DokKurzSuche",""
 CALL MNHilfe(3)
 END SUB 
 
SUB wemailINT()
 REM SELECT FORM KEY knr% FILE "Adressen" INDEX codeku.adressen
 REM SELECT FORM KEY knr% FILE "wemail" INDEX codeku.wemail
 SELECT FORM FIRST FILE "wemail"
 END SUB 
 
 

  
 


 
SUB wemailATTE(nr%)
 codekey% = codekey.wemail
 IF MOD ("wemail") OR NEW ("wemail") THEN STORE FILE "wemail"
 SELECT FIRST FILE "wemail" INDEX codekey.wemail
 SELECT KEY codekey% LOCK FILE "wemail" INDEX codekey.wemail
 REQUEST "Datei auswÑhlen","",26,req%,textvorlage$
 IF req% = 1 THEN 
   a% = CALL ("_SBFileExists",textvorlage$)
   IF a% = - 1 THEN 
     REM IF EXISTS (textvorlage$) THEN 
     SELECT KEY codekey% LOCK FILE "wemail" INDEX codekey.wemail
     feld$ = "EMAILATT" + LTRIM$ ( STR$ (nr%,"99")) + ".wemail"
     feld$$ = textvorlage$
     CALL QuickStore("wemail")
   END IF 
 END IF 
 FORM 
 END SUB 
 




SUB wEMAILATT(nr%)
 codekey% = codekey.wemail
 IF MOD ("wemail") THEN STORE FILE "wemail"
 iniPath$ = ""
 iniPath$ = DokuGetNam$(codeku%)
 IF iniPath$ <> "" THEN a% = - 1
 IF MOD (GAkquiDat$) THEN STORE FILE GAkquiDat$
 req% = 0
     DIRECTORY cdir$
     IF a% = - 1 THEN 
       REQUEST "Erstelle Arbeitskopie der zu versendenden Datei","",2
       SET STATUS "Erstelle Arbeitskopie der zu versendenden Datei"
       MOUSE OFF 
       endung$ = GetDateiendung$(inipath$)
       REM endung$ = RIGHT$ (iniPath$,3)
       REM zz$ = GMACodeDir$ + STR$ (codeaq%,"000000") + "-" + STR$ (nr%,"0") + "." + endung$
       zz$ = _netpath$ + "EMAILATT\" + STR$ (codeaq%,"000000") + "-" + STR$ (nr%,"0") + "." + endung$
       IF EXISTS (zz$) THEN DELETE zz$
       a% = CALL ("_SBFileCopy",iniPath$,zz$)
       textvorlage$ = FN ansi(iniPath$)
       IF a% <> - 1 THEN 
         textvorlage$ = ""
         zz$ = ""
       END IF 
       req% = 1
       MOUSE ON 
       SET STATUS ""
     END IF 
 
 IF req% = 1 THEN 
   REM IF EXISTS (textvorlage$) THEN 
     SELECT KEY codekey% LOCK FILE "wemail" INDEX codekey.wemail
     feld$ = "EMAILATT" + STR$ (nr%,"0") + ".wemail"
     feld$$ = textvorlage$
     feld1$ = "EATT" + STR$ (nr%,"0") + ".wemail"
     feld1$$ = zz$
     CALL QuickStore("wemail")
   REM END IF 
 END IF 
wEN070820061: 
 FORM 
 END SUB 
 





SUB wEMAILATT_old(nr%)
 codekey% = codekey.wemail
   IF MOD ("wemail") THEN STORE FILE "wemail"
   IF Gcodie% = - 1 THEN 
     textvorlage$ = "*.*"
     iniPath$ = GScanDir$
     IF inipath$ = "" THEN inipath$ = _ppath$
     REM IF inipath$ LIKE "" THEN iniPath$ = "C:\"
     REM REGISTER _netpath$ + "CODieLIB.dll","_SelectFile","IFFF"
     REM a% = CALL ("_SelectFile",texttitel$,iniPath$,textvorlage$)
     REM REGISTER CLEAR "_SelectFile"
     REM a% = CALL ("_SBFileExists",iniPath$)
 
     REM ********************************************************************
     inifile$ = GMACodeDir$ + "codiesf0.ini"
     exefile$ = GMACodeDir$ + "codiesf0.exe"
     a% = CALL ("_SBFileExists",inifile$)
     IF a% = - 1 THEN 
       a% = CALL ("_SBFileDelete1",inifile$)
     END IF 
 
     a% = 1
     CALL WriteINIDes("DATA","ScanDir",GScanDir$,inifile$)
     CALL WriteINIDes("DATA","Titel","Auswahl der zu importierenden Datei",inifile$)
     CALL WriteINIDes("DATA","Filter","*.*",inifile$)
     IF EXISTS (GMACodeDir$ + "sready.ini") THEN 
       DELETE GMACodeDir$ + "sready.ini"
     END IF 
     i% = CALL ("ShellExecute",0,"open",exefile$,"","",1)
     zz% = 0
     WHILE NOT EXISTS (GMACodeDir$ + "sready.ini")
       zz% = zz% + 1
       MOUSE OFF 
       WAIT FOR 1
       IF zz% = 60 THEN 
         CALL Fehler("Irgendwas ist beim ôffnendialog schiefgegangen!","")
         GOTO w230120055
       END IF 
     WEND 
     inipath$ = ReadINIDes$("DATA","Importfile",inifile$)
     a% = - 1
     IF inipath$ = "" OR inipath$ LIKE "leer" THEN 
       CALL Fehler("Es wurde keine zu importierende Datei ausgewÑhlt!","Der Import abgebrochen!")
       GOTO EN210220071
     END IF 
     REM ********************************************************************
 
     DIRECTORY cdir$
     IF a% = - 1 THEN 
       REQUEST "Erstelle Arbeitskopie der zu versendenden Datei","",2
       SET STATUS "Erstelle Arbeitskopie der zu versendenden Datei"
       MOUSE OFF 
       endung$ = GetDateiendung$(inipath$)
       REM endung$ = RIGHT$ (iniPath$,3)
       REM zz$ = GMACodeDir$ + STR$ (codeaq%,"000000") + "-" + STR$ (nr%,"0") + "." + endung$
       zz$ = _netpath$ + "EMAILATT\" + STR$ (codekey%,"0000000") + STR$ (nr%,"0") + "." + endung$
       IF EXISTS (zz$) THEN DELETE zz$
       a% = CALL ("_SBFileCopy",iniPath$,zz$)
       textvorlage$ = FN ansi(iniPath$)
       req% = 1
       MOUSE ON 
       SET STATUS ""
     END IF 
   ELSE 
     REQUEST "Datei auswÑhlen","",26,req%,textvorlage$
   END IF 
 IF req% = 1 THEN 
   REM IF EXISTS (textvorlage$) THEN 
     SELECT KEY codekey% LOCK FILE "wemail" INDEX codekey.wemail
     feld$ = "EMAILATT" + STR$ (nr%,"0") + ".wemail"
     feld$$ = textvorlage$
     feld1$ = "EATT" + STR$ (nr%,"0") + ".wemail"
     feld1$$ = zz$
     CALL QuickStore("wemail")
   REM END IF 
 END IF 
xEN210220071: 
 FORM 
 END SUB 
 
SUB wShowAtt(feld$)
 feld$ = feld$ + ".wemail"
 IF feld$ <> "" THEN 
   REM feld$ = feld$ + "." + GAkquiDat$
   REM inifile$ = feld$$
   a% = CALL ("_SBFileExists",feld$)
   IF a% = - 1 THEN 
     REM i% = CALL ("ShellExecute",0,"open",feld$,"","",1)
     CALL TextAnz(feld$)
   ELSE 
     CALL Fehler ("Datei: " + inifile$ + " nicht gefunden!","")
   END IF 
 END IF 
 END SUB 
 
 REM ****************************************************************************************************
 REM                     Vorbereitung Suche Floskeltext
 REM ****************************************************************************************************
SUB SearchInitFLO()
 IF FORM LIKE "Floskel" THEN MENU 2,6,1,"aus Suchliste &wÑhlen,F7","FloKurzSuche","Auflistung Floskeln"
 MOUSE OFF 
 CALL CopySearch()
 GCODieRuf% = - 1
 GCODieRuf2% = - 1
           f1$ = "Sortiernummer"
           f2$ = FN ansi("Kurztext")
           f3$ = FN ansi("gÅltig von")
           f4$ = FN ansi("gÅltig bis")
           f5$ = "Floskelart"
           f6$ = "Sprache"
           f7$ = "Standard"
           f8$ = FN ansi("zugehîrig zu")
           f9$ = "sichtbar"
           f10$ = "Floskel"
           f11$ = ""
           f12$ = ""
           f13$ = ""
           f14$ = ""
           f15$ = ""
           f16$ = ""
           f17$ = ""
           f18$ = ""
           f19$ = ""
           f20$ = ""
 spath$ = GMACodeDir$
 ret% = CALL ("_SearchInit",SPath$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
 END SUB 
 
SUB SearchVorbFLO(datsu$)
 datsu$ = "Floskel"
               GGGcodeku$ = STR$ (codefl.datsu$,"000000")
               f1$ = FN ansi(Sortnummer.datsu$)
               f2$ = FN ansi(Kurztext.datsu$)
               IF gueltigvon.datsu$ > 0 THEN 
                 f3$ = DATE$ (gueltigvon.datsu$,"0d.mm.yyyy")
               ELSE 
                 f3$ = ""
               END IF 
               IF gueltigbis.datsu$ > 0 THEN 
                 f4$ = DATE$ (gueltigbis.datsu$,"0d.mm.yyyy")
               ELSE 
                 f4$ = ""
               END IF 
               IF art.datsu$ = 0 THEN f5$ = "allgemein"
               IF art.datsu$ = 1 THEN f5$ = "Kopftext"
               IF art.datsu$ = 2 THEN f5$ = FN ansi("Fu·text")
               IF sprache.datsu$ = 0 THEN f6$ = FN ansi("deutsch")
               IF sprache.datsu$ = 1 THEN f6$ = FN ansi("englisch")


       SELECT CASE spezial.floskel
       CASE 0
         REM nichts
         tex$ = "ALLGEMEIN"
       CASE 1
         REM Angebot
         tex$ = "ANGEBOT"
       CASE 2
         REM Rechnung
         tex$ = "RECHNUNG"
       CASE 3
         REM Lieferschein
         tex$ = "LIEFERSCH"
       CASE 4
         REM Auftrag
         tex$ = "AUFTRAG"
       CASE 5
         REM Bestellung
         tex$ = "BESTELLUNG"
       CASE 7
         REM Gutschrift
         tex$ = "GUTSCHR"
       CASE 8
         REM NachliRef. Lieferschein
         tex$ = "NLIEFERSCH"
       CASE 9
         REM Nachlief. Rechnung
         tex$ = "NRECHNUNG"
       CASE 11
         REM 1. Mahnung
         tex$ = "1.MAHNUNG"
       CASE 12
         REM 2. Mahnung
         tex$ = "2.MAHNUNG"
       CASE 13
         REM 3. Mahnung
         tex$ = "3.MAHNUNG"
       CASE 14
         REM 4. Mahnung
         tex$ = "4.MAHNUNG"
       CASE 15
         REM 5. Mahnung
         tex$ = "5.MAHNUNG"
       END SELECT 

               f7$ = FN ansi(tex$)

       SELECT CASE zugart.floskel
       CASE 0
         REM nichts
         tex$ = "ALLGEMEIN"
       CASE 1
         REM Angebot
         tex$ = "ANGEBOT"
       CASE 2
         REM Rechnung
         tex$ = "RECHNUNG"
       CASE 3
         REM Lieferschein
         tex$ = "LIEFERSCH"
       CASE 4
         REM Auftrag
         tex$ = "AUFTRAG"
       CASE 5
         REM Bestellung
         tex$ = "BESTELLUNG"
       CASE 7
         REM Gutschrift
         tex$ = "GUTSCHR"
       CASE 8
         REM NachliRef. Lieferschein
         tex$ = "NLIEFERSCH"
       CASE 9
         REM Nachlief. Rechnung
         tex$ = "NRECHNUNG"
       CASE 11
         REM 1. Mahnung
         tex$ = "1.MAHNUNG"
       CASE 12
         REM 2. Mahnung
         tex$ = "2.MAHNUNG"
       CASE 13
         REM 3. Mahnung
         tex$ = "3.MAHNUNG"
       CASE 14
         REM 4. Mahnung
         tex$ = "4.MAHNUNG"
       CASE 15
         REM 5. Mahnung
         tex$ = "5.MAHNUNG"
       END SELECT 

               f8$ = FN ansi(tex$)
       IF novi1.datsu$ = 1 THEN f9$ = "Nein"
       IF novi1.datsu$ < 1 THEN f9$ = "Ja"

               f10$ = FN ansi(floskel.datsu$)
               f11$ = ""
               f12$ = ""
               f13$ = ""
               f14$ = ""
               f15$ = ""
               f16$ = ""
               f17$ = ""
               f18$ = ""
               f19$ = ""
               f20$ = ""
  ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
  END SUB 
 
SUB FloKurzSuche()
        c$ = "aa"
         req3% = CALL ("_SearchReShow",c$)
         REM REQUEST c$,"",2
         REM ret% = CALL ("_SearchClose")
         IF VAL (c$) <> 0 THEN 
           cufl% = VAL (c$)
           ok% = 0
           SET STATUS "Projekt gefunden..."
         END IF 
         IF req3% = 2 THEN 
           CALL Fehler("Diese Funktion wird nur innerhalb der Adressmaske unterstÅtzt!","")
         END IF 
  IF cufl% > 0 THEN 
    SELECT FIRST FILE "Floskel" INDEX codefl.floskel
    SELECT KEY cufl% LOCK FILE "Floskel" INDEX codefl.floskel
  END IF 
  IF FORM LIKE "Floskel" THEN FORM 2
 END SUB 

FUNCTION FloSortNr$(opt%,osp%,spezial%,zugart%)
  FloSortNr$ = ""
  SELECT FIRST LOCK FILE "stamm"
  IF spezial% <> 0 THEN 
       SELECT CASE spezial%
       CASE 0
         REM nichts
         nrnichts% = nrnichts.stamm
         nrnichts% = nrnichts% + 1
         nr% = nrnichts%
         tex$ = "ALLGEMEIN-"
         nrnichts.stamm = nrnichts%
       CASE 1
         REM Angebot
         nrAng% = nrAng.stamm
         nrAng% = nrAng% + 1
         nr% = nrAng%
         nrAng.stamm = nrAng%
         tex$ = "ANGEBOT-"
       CASE 2
         REM Rechnung
         nrRech% = nrRech.stamm
         nrRech% = nrRech% + 1
         nr% = nrRech%
         nrRech.stamm = nrRech%
         tex$ = "RECHNUNG-"
       CASE 3
         REM Lieferschein
         nrLief% = nrLief.stamm
         nrLief% = nrLief% + 1
         nr% = nrLief%
         nrLief.stamm = nrLief%
         tex$ = "LIEFERSCH-"
       CASE 4
         REM Auftrag
         nrAuf% = nrAuf.stamm
         nrAuf% = nrAuf% + 1
         nr% = nrAuf%
         nrAuf.stamm = nrAuf%
         tex$ = "AUFTRAG-"
       CASE 5
         REM Bestellung
         nrBest% = nrBest.stamm
         nrBest% = nrBest% + 1
         nr% = nrBest%
         nrBest.stamm = nrBest%
         tex$ = "BESTELLUNG-"
       CASE 7
         REM Gutschrift
         nrGut% = nrGut.stamm
         nrGut% = nrGut% + 1
         nr% = nrGut%
         nrGut.stamm = nrGut%
         tex$ = "GUTSCHR-"
       CASE 8
         REM NachliRef. Lieferschein
         nrNLief% = nrNLief.stamm
         nrNLief% = nrNLief% + 1
         nr% = nrNLief%
         nrNLief.stamm = nrNLief%
         tex$ = "NLIEFERSCH-"
       CASE 9
         REM Nachlief. Rechnung
         nrNRech% = nrNRech.stamm
         nrNRech% = nrNRech% + 1
         nr% = nrNRech%
         nrNRech.stamm = nrNRech%
         tex$ = "NRECHNUNG-"
       CASE 11
         REM 1. Mahnung
         nr1Mahn% = nr1Mahn.stamm
         nr1Mahn% = nr1Mahn% + 1
         nr% = nr1Mahn%
         nr1Mahn.stamm = nr1Mahn%
         tex$ = "1.MAHNUNG-"
       CASE 12
         REM 2. Mahnung
         nr2Mahn% = nr2Mahn.stamm
         nr2Mahn% = nr2Mahn% + 1
         nr% = nr2Mahn%
         nr2Mahn.stamm = nr2Mahn%
         tex$ = "2.MAHNUNG-"
       CASE 13
         REM 3. Mahnung
         nr3Mahn% = nr3Mahn.stamm
         nr3Mahn% = nr3Mahn% + 1
         nr% = nr3Mahn%
         nr3Mahn.stamm = nr3Mahn%
         tex$ = "3.MAHNUNG-"
       CASE 14
         REM 4. Mahnung
         nr4Mahn% = nr4Mahn.stamm
         nr4Mahn% = nr4Mahn% + 1
         nr% = nr4Mahn%
         nr4Mahn.stamm = nr4Mahn%
         tex$ = "4.MAHNUNG-"
       CASE 15
         REM 5. Mahnung
         nr5Mahn% = nr5Mahn.stamm
         nr5Mahn% = nr5Mahn% + 1
         nr% = nr5Mahn%
         nr5Mahn.stamm = nr5Mahn%
         tex$ = "5.MAHNUNG-"
       END SELECT 
       STORE FILE "stamm"
       SELECT CASE opt%
         CASE 0
           tex$ = tex$ + "Allg-"
         CASE 1
           tex$ = tex$ + "Kopf-"
         CASE 2
           tex$ = tex$ + "Fu·-"
       END SELECT 
       SELECT CASE osp%
         CASE 0
           tex$ = tex$ + "GER-"
         CASE 1
           tex$ = tex$ + "ENG-"
       END SELECT 
       FloSortNr$ = tex$ + STR$ (nr%,"000")
     ELSE 
       SELECT CASE zugart%
       CASE 0
         REM nichts
         nrnichts% = nrnichts.stamm
         nrnichts% = nrnichts% + 1
         nr% = nrnichts%
         tex$ = "ALLGEMEIN-"
         nrnichts.stamm = nrnichts%
       CASE 1
         REM Angebot
         nrAng% = nrAng.stamm
         nrAng% = nrAng% + 1
         nr% = nrAng%
         nrAng.stamm = nrAng%
         tex$ = "ANGEBOT-"
       CASE 2
         REM Rechnung
         nrRech% = nrRech.stamm
         nrRech% = nrRech% + 1
         nr% = nrRech%
         nrRech.stamm = nrRech%
         tex$ = "RECHNUNG-"
       CASE 3
         REM Lieferschein
         nrLief% = nrLief.stamm
         nrLief% = nrLief% + 1
         nr% = nrLief%
         nrLief.stamm = nrLief%
         tex$ = "LIEFERSCH-"
       CASE 4
         REM Auftrag
         nrAuf% = nrAuf.stamm
         nrAuf% = nrAuf% + 1
         nr% = nrAuf%
         nrAuf.stamm = nrAuf%
         tex$ = "AUFTRAG-"
       CASE 5
         REM Bestellung
         nrBest% = nrBest.stamm
         nrBest% = nrBest% + 1
         nr% = nrBest%
         nrBest.stamm = nrBest%
         tex$ = "BESTELLUNG-"
       CASE 7
         REM Gutschrift
         nrGut% = nrGut.stamm
         nrGut% = nrGut% + 1
         nr% = nrGut%
         nrGut.stamm = nrGut%
         tex$ = "GUTSCHR-"
       CASE 8
         REM NachliRef. Lieferschein
         nrNLief% = nrNLief.stamm
         nrNLief% = nrNLief% + 1
         nr% = nrNLief%
         nrNLief.stamm = nrNLief%
         tex$ = "NLIEFERSCH-"
       CASE 9
         REM Nachlief. Rechnung
         nrNRech% = nrNRech.stamm
         nrNRech% = nrNRech% + 1
         nr% = nrNRech%
         nrNRech.stamm = nrNRech%
         tex$ = "NRECHNUNG-"
       CASE 11
         REM 1. Mahnung
         nr1Mahn% = nr1Mahn.stamm
         nr1Mahn% = nr1Mahn% + 1
         nr% = nr1Mahn%
         nr1Mahn.stamm = nr1Mahn%
         tex$ = "1.MAHNUNG-"
       CASE 12
         REM 2. Mahnung
         nr2Mahn% = nr2Mahn.stamm
         nr2Mahn% = nr2Mahn% + 1
         nr% = nr2Mahn%
         nr2Mahn.stamm = nr2Mahn%
         tex$ = "2.MAHNUNG-"
       CASE 13
         REM 3. Mahnung
         nr3Mahn% = nr3Mahn.stamm
         nr3Mahn% = nr3Mahn% + 1
         nr% = nr3Mahn%
         nr3Mahn.stamm = nr3Mahn%
         tex$ = "3.MAHNUNG-"
       CASE 14
         REM 4. Mahnung
         nr4Mahn% = nr4Mahn.stamm
         nr4Mahn% = nr4Mahn% + 1
         nr% = nr4Mahn%
         nr4Mahn.stamm = nr4Mahn%
         tex$ = "4.MAHNUNG-"
       CASE 15
         REM 5. Mahnung
         nr5Mahn% = nr5Mahn.stamm
         nr5Mahn% = nr5Mahn% + 1
         nr% = nr5Mahn%
         nr5Mahn.stamm = nr5Mahn%
         tex$ = "5.MAHNUNG-"
       END SELECT 
       STORE FILE "stamm"
       SELECT CASE opt%
         CASE 0
           tex$ = tex$ + "Allg-"
         CASE 1
           tex$ = tex$ + "Kopf-"
         CASE 2
           tex$ = tex$ + "Fu·-"
       END SELECT 
       SELECT CASE osp%
         CASE 0
           tex$ = tex$ + "GER-"
         CASE 1
           tex$ = tex$ + "ENG-"
       END SELECT 
       FloSortNr$ = tex$ + STR$ (nr%,"000")
     END IF 
 END FUNCTION 


SUB FLDupli(codeflorig%)
 IF Floskel.floskel <> "" THEN CALL FStore("floskel")
 opt% = 0
 osp% = 0
 zugArt% = 0
 spezial% = 0
 CREATE DIALOG "FLSUCHEN",0,0,233,338,"Merkmale fÅr neue Floskel festlegen","MS Sans Serif",8
 ADD DIALOG "FLSUCHEN",4,0,0,233,89,0,""
 ADD DIALOG "FLSUCHEN",5,34,11,92,9,0,"WÑhlen Sie die gewÅnschte"
 ADD DIALOG "FLSUCHEN",9,5,12,19,21,2
 ADD DIALOG "FLSUCHEN",5,74,22,66,10,0,"Floskelgrupppe aus:"
 REM ADD DIALOG "FLSUCHEN",3,74,36,52,12,0,"alle Floskeln",1,opt%
 ADD DIALOG "FLSUCHEN",3,74,48,76,12,0,"allgemeine Floskeln",0,opt%
 ADD DIALOG "FLSUCHEN",3,74,60,44,12,0,"Kopftexte",1,opt%
 ADD DIALOG "FLSUCHEN",3,74,72,40,12,0,"Fu·texte",2,opt%
 
 ADD DIALOG "FLSUCHEN",4,0,89,233,45,0,"Sprache"
 ADD DIALOG "FLSUCHEN",3,74,99,52,12,0,"deutsch",0,osp%
 ADD DIALOG "FLSUCHEN",3,74,109,76,12,0,"englisch",1,osp%
 REM ADD DIALOG "FLSUCHEN",3,74,119,76,12,0,"beide Sprachen",2,osp%
 
 
 ADD DIALOG "FLSUCHEN",4,4,139,105,165,0,"Standard fÅr"
 ADD DIALOG "FLSUCHEN",3,14,149,52,12,0,"allgemein",0,spezial%
 ADD DIALOG "FLSUCHEN",3,14,159,76,12,0,"Angebot",1,spezial%
 ADD DIALOG "FLSUCHEN",3,14,169,76,12,0,"Rechnung",2,spezial%
 ADD DIALOG "FLSUCHEN",3,14,179,52,12,0,"Lieferschein",3,spezial%
 ADD DIALOG "FLSUCHEN",3,14,189,76,12,0,"Auftrag",4,spezial%
 ADD DIALOG "FLSUCHEN",3,14,199,76,12,0,"Bestellung",5,spezial%
 ADD DIALOG "FLSUCHEN",3,14,209,76,12,0,"Gutschrift",7,spezial%
 ADD DIALOG "FLSUCHEN",3,14,219,76,12,0,"Nachl.Lief.",8,spezial%
 ADD DIALOG "FLSUCHEN",3,14,229,76,12,0,"Nachl.Rech.",9,spezial%
 ADD DIALOG "FLSUCHEN",3,14,239,76,12,0,"1.Mahnung",11,spezial%
 ADD DIALOG "FLSUCHEN",3,14,249,76,12,0,"2.Mahnung",12,spezial%
 ADD DIALOG "FLSUCHEN",3,14,259,76,12,0,"3.Mahnung",13,spezial%
 ADD DIALOG "FLSUCHEN",3,14,269,76,12,0,"4.Mahnung",14,spezial%
 ADD DIALOG "FLSUCHEN",3,14,279,76,12,0,"5.Mahnung",15,spezial%
 
 ADD DIALOG "FLSUCHEN",4,124,139,105,165,0,"zugehîrig zu"
 ADD DIALOG "FLSUCHEN",3,144,149,52,12,0,"allgemein",0,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,159,76,12,0,"Angebot",1,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,169,76,12,0,"Rechnung",2,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,179,52,12,0,"Lieferschein",3,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,189,76,12,0,"Auftrag",4,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,199,76,12,0,"Bestellung",5,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,209,76,12,0,"Gutschrift",7,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,219,76,12,0,"Nachl.Lief.",8,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,229,76,12,0,"Nachl.Rech.",9,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,239,76,12,0,"1.Mahnung",11,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,249,76,12,0,"2.Mahnung",12,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,259,76,12,0,"3.Mahnung",13,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,269,76,12,0,"4.Mahnung",14,zugArt%
 ADD DIALOG "FLSUCHEN",3,144,279,76,12,0,"5.Mahnung",15,zugArt%
 
 
 
 REM ADD DIALOG "FLSUCHEN",2,9,305,88,11,0,"alle Floskeln anzeigen","j","n",alle$
 ADD DIALOG "FLSUCHEN",1,59,322,55,14,1,"&OK",1,1
 ADD DIALOG "FLSUCHEN",1,118,322,55,14,0,"&Abbrechen",0,0
 DIALOG "FLSUCHEN",req%
 REMOVE DIALOG "FLSUCHEN"
 IF req% = 1 THEN 
   IF spezial% <> 0 THEN zugart% = spezial%
   BLANK DUPLICATE FILE "floskel"
   CodeFL.floskel = SER ("floskel",1)
   cufl% = codefl.floskel
   sortnummer.floskel = ""
   spezial.floskel = spezial%
   zugart.floskel = zugart%
   art.floskel = opt%
   sprache.floskel = osp%
   novi1.floskel = 0
   gueltigvon.floskel = TODAY 
   TextNr.floskel = 0
   sortnummer$ = FloSortNr$(opt%,osp%,spezial%,zugart%)
   CALL Fehler(sortnummer$,"")
   sortnummer.floskel = sortnummer$
   REM Nummer erzeugen
   STORE FILE "floskel"
   SELECT FIRST FILE "floskel" INDEX codefl.floskel
   SELECT KEY cufl% LOCK FILE "floskel" INDEX codefl.floskel
   FORM 2
   SET EDIT SELECT ON 
   ENTER SortNummer.floskel,0
   SET EDIT SELECT OFF 
 END IF 
 END SUB 
 
 REM drucken Floskel
SUB FLOSKDRU()
 CALL PRep("FLOSKDRU")
 REM REPORT USING "FLOSKDRU"
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 Ueberschr$ = "Floskelliste"
 SET QUERY ON 
 SET QUERY LOCK ON 
 SELECT DISTINCT ;
     ORDER SortNummer.FLOSKEL
     TO ASK 
 END SELECT 
 END SUB 





SUB SearchInitM1()
 MOUSE OFF 
 CALL CopySearch()
 GCODieRuf% = - 1
 GCODieRuf2% = - 1
           f1$ = "Nummer"
           f2$ = "Datum"
           f3$ = "Belegnummer"
           f4$ = "Netto in Eur"
           f5$ = "Brutto in Eur"
           IF gsuart% > 0 THEN 
             f6$ = "Zahlungsziel"
             f7$ = "Name"
             f8$ = "Projekt"
             f9$ = "Buchungsgruppe/-konto"
             IF gsuart% = 1 THEN f9$ = "Buchungstext"
             f10$ = "Rabatt"
             f11$ = "RabattProzent"
             f12$ = "Skonto"
             f13$ = "SkontoProzent"
             f14$ = "SkontoZiel"
             f15$ = "Teilzahlung J/N"
             f16$ = "bereits bezahlt"
             f17$ = "Restbetrag"
             f18$ = "Vorgang erledigt J/N"
             f19$ = "Vorgang erledigt am"
             f20$ = ""
             IF gsuart% = 2 OR gsuart% = 3 OR gsuart% = 4 THEN 
               f20$ = "Auftragsnummer AG"
             END IF 
           ELSE 
             f6$ = "Name"
             f7$ = "Projekt"
             f8$ = "Vorgang erledigt J/N"
             f9$ = "Vorgang erledigt am"
             f10$ = ""
             IF art.master = 1 THEN 
               f10$ = "angenommen/abgelehnt"
             END IF 
             f11$ = ""
             IF art.master = 2 OR art.master = 3 OR art.master = 4 THEN 
               f11$ = "Auftragsnummer AG"
             END IF 
             f12$ = ""
             f13$ = ""
             f14$ = ""
             f15$ = ""
             f16$ = ""
             f17$ = ""
             f18$ = ""
             f19$ = ""
             f20$ = ""
           END IF 
           
           
 SPath$ = GMACodeDir$
 ret% = CALL ("_SearchInit",SPath$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
 END SUB 
 
 
 
      
SUB SearchVorbM1(datsu$)
               GGGcodeku$ = STR$ (codems.datsu$,"000000")
               f18$ = "N"
               IF EXISTS (codems.master,codems.rausgang) AND (gsuart% = 2 OR gsuart% = 7) THEN 
                 SELECT FIRST FILE "rausgang" INDEX codems.rausgang
                 SELECT KEY codems.master FILE "rausgang" INDEX codems.rausgang
                 wgruppe$ = wgruppe.rausgang
                 warenart$ = warenart.rausgang
                 IF codewgru.rausgang < 1 THEN wgruppe$ = "<ohne Zuordnung>"
                 IF codewa.rausgang < 1 THEN warenart$ = "<ohne Zuordnung>"
                 ABuchKto$ = wgruppe$ + "/" + warenart$
                 REM f18$ = FN ansi (erledigt.rausgang)
               END IF 
               f1$ = FN ansi(nummer.datsu$)
               f2$ = DATE$ (datum.datsu$,"yyyy-mm-0d")
               f3$ = FN ansi(belegnr.datsu$)
 
               f4$ = STR$ (GesNettoEU.datsu$,",999999999.00")
               f5$ = STR$ (GesBruttoEU.datsu$,",999999999.00")
               IF gsuart% > 0 THEN 
                 IF erledigt.master LIKE "j" THEN 
                   f18$ = "J"
                 ELSE 
                   f18$ = "N"
                 END IF 
                 IF erledigtdatum.master > 0 THEN 
                   f19$ = DATE$ (erledigtdatum.master,"yyyy-mm-0d")
                 ELSE 
                   f19$ = ""
                 END IF 
                 f6$ = DATE$ (Zahldatum.datsu$,"yyyy-mm-0d")
                 f7$ = FN ansi(nachname.datsu$)
                 f8$ = FN ansi(projekt.datsu$)
                 f9$ = ""
                 IF gsuart% = 1 THEN 
                   IF EXISTS (codems.master,codems.abzugang) THEN 
                     SELECT FIRST FILE "abzugang" INDEX codems.abzugang
                     SELECT KEY codems.master FILE "abzugang" INDEX codems.abzugang
                     f9$ = FN ansi(Buchungstext.abzugang)
                   END IF 
                 ELSE 
                   f9$ = FN ansi(ABuchKto$)
                 END IF 
                 f10$ = STR$ (Rabatt.datsu$,",999999999.00")
                 f11$ = STR$ (RabattProz.datsu$,",9999.00")
 
                 f12$ = STR$ (Skonto.datsu$,",999999999.00")
                 f13$ = STR$ (SkontoProz.datsu$,",9999.00")
                 f14$ = DATE$ (SkontoZiel.datsu$,"yyyy-mm-0d")
                 IF TeilErlaubt.master = 1 THEN 
                   f15$ = "J"
                 ELSE 
                   f15$ = "N"
                 END IF 
                 f16$ = STR$ (SummeTeilEu.datsu$,",999999999.00")
                 f17$ = STR$ (GesBruttoEU.datsu$ - SummeTeilEu.datsu$,",999999999.00")
                 f20$ = ""
                 IF art.master = 2 OR art.master = 3 OR art.master = 4 THEN 
                   IF auftragsnr.datsu$ <> "" THEN 
                     f20$ = FN ansi(auftragsnr.datsu$)
                     IF auftragsdat.datsu$ > 0 THEN 
                       f20$ = f20$ + "/" + DATE$ (auftragsdat.datsu$,"0d.mm.yyyy")
                     END IF 
                   ELSE 
                     IF auftragsdat.datsu$ > 0 THEN 
                       f20$ = DATE$ (auftragsdat.datsu$,"0d.mm.yyyy")
                     END IF 
                   END IF 
                 END IF 
               ELSE 
                 f6$ = FN ansi(nachname.datsu$)
                 f7$ = FN ansi(projekt.datsu$)
                 IF erledigt.master LIKE "j" THEN 
                   f8$ = "J"
                 ELSE 
                   f8$ = "N"
                 END IF 
                 IF erledigtdatum.master > 0 THEN 
                   f9$ = DATE$ (erledigtdatum.master,"yyyy-mm-0d")
                 ELSE 
                   f9$ = ""
                 END IF 
                 f10$ = ""
                 IF art.master = 1 THEN 
                   f10$ = gebustor.master
                 END IF 
                 f11$ = ""
                 IF art.master = 2 OR art.master = 3 OR art.master = 4 THEN 
                   IF auftragsnr.datsu$ <> "" THEN 
                     f11$ = FN ansi(auftragsnr.datsu$)
                     IF auftragsdat.datsu$ > 0 THEN 
                       f11$ = f11$ + "/" + DATE$ (auftragsdat.datsu$,"0d.mm.yyyy")
                     END IF 
                   ELSE 
                     IF auftragsdat.datsu$ > 0 THEN 
                       f11$ = DATE$ (auftragsdat.datsu$,"0d.mm.yyyy")
                     END IF 
                   END IF 
                 END IF 
                 f12$ = ""
                 f13$ = ""
                 f14$ = ""
                 f15$ = ""
                 f16$ = ""
                 f17$ = ""
                 f18$ = ""
                 f19$ = ""
                 f20$ = ""
               END IF 
 
 
               
  ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
  END SUB 
 
SUB GePWCBFC(codeku%)
 SELECT FIRST FILE "adressen" INDEX codeku.adressen
 SELECT KEY codeku% LOCK FILE "adressen" INDEX codeku.adressen
     IF cbfcbenutzer.adressen LIKE "" THEN 
       datk$ = LEFT$ ( DATE$ ( TODAY ,"yymmdd"),4)
       IF vorname.adressen <> "" THEN 
         IF LEFT$ (vorname.adressen,4) LIKE "Herr" OR LEFT$ (vorname.adressen,4) LIKE "Frau" THEN 
           IF LEFT$ (vorname.adressen,5) LIKE "Herrn" THEN 
             ben$ = LTRIM$ ( MID$ (vorname.adressen,7,3)) + LTRIM$ ( LEFT$ (nachname.adressen,3))
           ELSE 
             ben$ = LTRIM$ ( MID$ (vorname.adressen,6,3)) + LTRIM$ ( LEFT$ (nachname.adressen,3))
           END IF 
         ELSE 
           ben$ = LTRIM$ ( LEFT$ (vorname.adressen,3)) + LTRIM$ ( LEFT$ (nachname.adressen,3))
         END IF 
       ELSE 
         ben$ = LTRIM$ ( LEFT$ (nachname.adressen,6))
       END IF 
       zeit$ = TIME$ ( NOW ,"hh:mm")
       cbfcbenutzer.adressen = DATE$ ( TODAY ,"yymmdd") + LEFT$ (zeit$,2) + RIGHT$ (zeit$,2)
       cbfcpasswort.adressen = LCASE$ (ben$ + datk$)
     END IF 
  STORE FILE "Adressen"
 END SUB 


SUB GenerierName(codeku%)
 SELECT FIRST FILE "adressen" INDEX codeku.adressen
 SELECT KEY codeku% LOCK FILE "adressen" INDEX codeku.adressen
 IF anrede.adressen LIKE "Firma" OR anrede.adressen = "" THEN 
   IF LEFT$ (vorname.adressen,4) LIKE "Herr" OR LEFT$ (vorname.adressen,4) LIKE "Frau" THEN 
     LizenzFirma.adressen = Nachname.adressen
     IF LEFT$ (vorname.adressen,5) LIKE "Herrn" THEN 
       Lizenzname.adressen = MID$ (vorname.adressen,7)
     ELSE 
       Lizenzname.adressen = MID$ (vorname.adressen,6)
     END IF 
   ELSE 
     LizenzFirma.adressen = Nachname.adressen
     Lizenzname.adressen = vorname.adressen
   END IF 
 ELSE 
   LizenzFirma.adressen = Nachname.adressen
   Lizenzname.adressen = vorname.adressen
 END IF 
 REM IF LizDatBis.adressen < 1 THEN LizDatBis.adressen = "31.12.2199"
 STORE FILE "adressen"
 FORM 
 END SUB 




FUNCTION DokSuch2%(codeku%)

 DokSuch2% = 0
 
 DOKGruppen$(0) = "<ALLE DOKUMENTENGRUPPEN>"
 DOKGruppen$(1) = "allgemeine Schreiben"
 CALL FillDokGruppe(1)
 a% = 0
 
 
 CREATE DIALOG "DOK",0,0,300,338,title$,"MS Sans Serif",8
 ADD DIALOG "DOK",9,2,4,22,23,2
 ADD DIALOG "DOK",5,26,11,236,9,0,"WÑhlen Sie eine Dokumentengruppe aus:"
 ADD DIALOG "DOK",7,25,25,263,250,2,2,DOKGruppen$,Auswahl$,Gruppe.dokument
 ADD DIALOG "DOK",6,25,300,98,11,128,0,Gsuna1$,50
 ADD DIALOG "DOK",2,130,300,28,10,0,"UND","J","N",Gund$
 ADD DIALOG "DOK",6,160,300,108,11,128,0,Gsuna2$,50
 ADD DIALOG "DOK",5,25,270,250,30,0,"Geben Sie hier bis zu 2 Bestandteile des Dokumentennamens ein, den Sie suchen: Die Begriffe kînne mit UND verknÅpft werden. Die Eingabe von Suchbegriffen ist optional!"
 
 ADD DIALOG "DOK",1,106,317,48,16,1,"&Weiter",1,1
 ADD DIALOG "DOK",1,158,317,48,16,0,"&Abbruch",0,0
 ADD DIALOG "DOK",1,210,317,48,16,0,"Alle",2,2
 DIALOG "DOK",req%
 REMOVE DIALOG "DOK"
 IF req% > 0 THEN 
   req% = DOKAusw1a%(Auswahl$(0),codeku%,req%)
   IF req% <> - 1 THEN 
     DokSuch2% = req%
   END IF 
 END IF 
 SELECT KEY DokSuch2% FILE "DOKUMENT" INDEX codeDok.DOKUMENT
 MOUSE OFF 
 DOKGruppen$(0) = "allgemeine Schreiben"
 CALL FillDokGruppe(0)
 a% = 0
 MOUSE ON 
 END FUNCTION 
 
 
 
 
 REM ******************************************************************************************
 REM FUNCTION DokSuchen%(codeku%,befehl$)SELECT WHERE codeku.dokument = knr% AND novi1.dokument = 0
 REM FUNCTION DokSuch2%(codeku%)
 
FUNCTION DokuGetNam$(codeku%)
    DokuGetNam$ = ""
    optemail% = 1
    FILE "dokument"
    SELECT WHERE FILE "dokument"
    befehl$ = "SELECT WHERE codeku.dokument = codeku% AND novi1.dokument = 0"

    DIM dlg1 AS Dialog
     DIM control AS DialogControl 
 
     Superbase.Dialogs.Add("Dialogname")
     SET dlg1 = Superbase.Dialogs.Dialogname
     dlg1.Move(0,0,230,123)
     dlg1.Caption = "Auswahloptionen"
     dlg1.FontName = "MS Sans Serif"
     dlg1.FontSize = 8
 
     SET control = dlg1.Add("DialogFrame1","DialogFrame")
     control.Move(2,8,228,84)
     control.Caption = " WÑhlen Sie eine Option "
 
     SET control = dlg1.Add("DialogOptionButton1","DialogOptionButton")
     control.Move(6,20,214,10)
     control.Caption = "Suche1 in eigener Dokumentendatei - aktueller Kunde"
     control.Bind("optemail%")
     control.ValueOn = 1
 
     SET control = dlg1.Add("DialogOptionButton2","DialogOptionButton")
     control.Move(6,32,214,10)
     control.Caption = "Suche1 in eigener Dokumentendatei"
     control.Bind("optemail%")
     control.ValueOn = 2
 
     SET control = dlg1.Add("DialogOptionButton3","DialogOptionButton")
     control.Move(6,44,214,10)
     control.Caption = "Suche2 in eigener Dokumentendatei - aktueller Kunde"
     control.Bind("optemail%")
     control.ValueOn = 3
 
     SET control = dlg1.Add("DialogOptionButton4","DialogOptionButton")
     control.Move(6,56,214,10)
     control.Caption = "Suche2 in eigener Dokumentendatei"
     control.Bind("optemail%")
     control.ValueOn = 4

     SET control = dlg1.Add("DialogOptionButton5","DialogOptionButton")
     control.Move(6,68,214,10)
     control.Caption = "externes Dokument"
     control.Bind("optemail%")
     control.ValueOn = 5

     SET control = dlg1.Add("DialogCommandButton1","DialogCommandButton")
     control.Move(59,98,43,16)
     control.Default = 1
     control.Caption = "OK"
     control.ReturnValue = 1
 
     SET control = dlg1.Add("DialogCommandButton2","DialogCommandButton")
     control.Move(105,98,42,16)
     control.Caption = "Abbruch"
     control.ReturnValue = 0
 
     DIALOG "Dialogname",reqemail%
     REMOVE DIALOG "Dialogname"
     FILE "dokument"
     IF reqemail% = 1 THEN 
       MOUSE OFF 
       SELECT CASE optemail%
         CASE 1
           REM Suche 1 im aktuellen Kunden
           codedok% = DokSuchen%(codeku%,befehl$)
           SELECT WHERE FILE "dokument"
           IF codedok% > 0 THEN 
             SELECT FIRST FILE "Dokument" INDEX codedok.dokument
             SELECT KEY codedok% FILE "Dokument" INDEX codedok.dokument
             DokuGetNam$ = _netpath$ + Dateiname.dokument
           END IF 
         CASE 2
           REM Suche 1
           codedok% = DokSuchen%(0,"")
           SELECT WHERE FILE "dokument"
           IF codedok% > 0 THEN 
             SELECT FIRST FILE "Dokument" INDEX codedok.dokument
             SELECT KEY codedok% FILE "Dokument" INDEX codedok.dokument
             DokuGetNam$ = _netpath$ + Dateiname.dokument
           END IF 
         CASE 3
           REM Suche 2 im aktuellen Kunden
           FILE "dokument"
           EXECUTE befehl$
           SELECT FIRST FILE "dokument"
           codedok% = DokSuch2%(codeku%)
           SELECT WHERE FILE "dokument"
           IF codedok% > 0 THEN 
             SELECT FIRST FILE "Dokument" INDEX codedok.dokument
             SELECT KEY codedok% FILE "Dokument" INDEX codedok.dokument
             DokuGetNam$ = _netpath$ + Dateiname.dokument
           END IF 
         CASE 4
           REM Suche 2
           codedok% = DokSuch2%(0)
           SELECT WHERE FILE "dokument"
           IF codedok% > 0 THEN 
             SELECT FIRST FILE "Dokument" INDEX codedok.dokument
             SELECT KEY codedok% FILE "Dokument" INDEX codedok.dokument
             DokuGetNam$ = _netpath$ + Dateiname.dokument
           END IF 
         CASE 5
           REM externes Dokument
           DokuGetNam$ = GetExtDoc$()
         END SELECT 
     END IF 
 REM ******************************************************************************************
 END FUNCTION 



FUNCTION GetExtDoc$()
 GetExtDoc$ = ""
   IF Gcodie% = - 1 THEN 
     textvorlage$ = "*.*"
     iniPath$ = GScanDir$
     IF inipath$ = "" THEN inipath$ = _ppath$
     inifile$ = GMACodeDir$ + "codiesf0.ini"
     exefile$ = GMACodeDir$ + "codiesf0.exe"
     a% = CALL ("_SBFileExists",inifile$)
     IF a% = - 1 THEN 
       a% = CALL ("_SBFileDelete1",inifile$)
     END IF 
 
     a% = 1
     CALL WriteINIDes("DATA","ScanDir",GScanDir$,inifile$)
     CALL WriteINIDes("DATA","Titel","Auswahl der zu importierenden Datei",inifile$)
     CALL WriteINIDes("DATA","Filter","*.*",inifile$)
     IF EXISTS (GMACodeDir$ + "sready.ini") THEN 
       DELETE GMACodeDir$ + "sready.ini"
     END IF 
     i% = CALL ("ShellExecute",0,"open",exefile$,"","",1)
     zz% = 0
     WHILE NOT EXISTS (GMACodeDir$ + "sready.ini")
       zz% = zz% + 1
       MOUSE OFF 
       WAIT FOR 1
       IF zz% = 60 THEN 
         CALL Fehler("Irgendwas ist beim ôffnendialog schiefgegangen!","")
         GOTO w230120055
       END IF 
     WEND 
w230120055: 
     inipath$ = ReadINIDes$("DATA","Importfile",inifile$)
     a% = - 1
     IF inipath$ = "" OR inipath$ LIKE "leer" THEN 
       CALL Fehler("Es wurde keine zu importierende Datei ausgewÑhlt!","Der Import abgebrochen!")
       GOTO EN140320081
     END IF 
     GetExtDoc$ = inipath$
   ELSE 
     textvorlage$ = ""
     REQUEST "Datei auswÑhlen","",26,req%,textvorlage$
     IF textvorlage$ <> "" THEN GetExtDoc$ = textvorlage$
   END IF 
EN140320081: 
 END FUNCTION 



FUNCTION DOKAusw1a%(filter$,linkfield%,alle%)
  IF alle% = 1 THEN alle$ = "n"
  IF alle% = 2 THEN alle$ = "j"
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 SET STATUS "Dokumenten-/Vorlagenauswahl"
 cfile$ = FILE 
 _cuko% = CodeKU.Adressen
 DOKAusw1a% = 0
 DIM DokList$(25000)
 REM 261198-1
a240120051: 
 FILE "Dokument"
 INDEX Gruppe.DOKUMENT
 SELECT FIRST 
 IF filter$ LIKE "<ALLE DOKUMENTENGRUPPEN>" THEN 
   filter$ = ""
   FILE "Dokument"
   INDEX codedok.DOKUMENT
 
 ELSE 
   SELECT FIRST FILE "DOKUMENT" INDEX Gruppe.DOKUMENT
   SELECT KEY filter$ FILE "DOKUMENT" INDEX Gruppe.DOKUMENT
   IF linkfield% > 0 THEN 
     FILE "Dokument"
     INDEX QuickCodekuGru.dokument
     filt$ = STR$ (linkfield%,"000000") + UCASE$ (filter$)
     SELECT FIRST FILE "DOKUMENT" INDEX QuickCodekuGru.dokument
     SELECT KEY filt$ FILE "DOKUMENT" INDEX QuickCodekuGru.dokument
   END IF 
 END IF 
 a% = 0
 
      IF GCODIE% = - 1 THEN 
        CALL SearchInitDo1("dokument")
      END IF 
 
   MOUSE OFF 
   IF filter$ <> "" AND linkfield% > 0 THEN WHILE NOT EOF ("DOKUMENT") AND QuickCodekuGru.dokument LIKE filt$
   IF filter$ <> "" AND linkfield% = 0 THEN WHILE NOT EOF ("DOKUMENT") AND Gruppe.DOKUMENT LIKE filter$
   IF filter$ = "" THEN WHILE NOT EOF ("DOKUMENT")
     ok% = - 1
     IF alle$ = "n" THEN 
       IF novi1.dokument = 1 THEN ok% = 0
     END IF 
     IF Gsuna1$ <> "" OR Gsuna2$ <> "" THEN 
       IF Gsuna1$ <> "" AND Gsuna2$ <> "" THEN 
         IF Gund$ = "J" THEN 
           REM beide suchbegriffe ausgefÅllt und mit UND verknÅpft
           IF dokument.dokument LIKE "*" + Gsuna1$ + "*" AND dokument.dokument LIKE "*" + Gsuna2$ + "*" THEN 
           ELSE 
             ok% = 0
           END IF 
         ELSE 
           IF dokument.dokument LIKE "*" + Gsuna1$ + "*" OR dokument.dokument LIKE "*" + Gsuna2$ + "*" THEN 
           ELSE 
             ok% = 0
           END IF 
         END IF 
       ELSE 
         IF Gsuna1$ <> "" THEN 
           IF dokument.dokument LIKE "*" + Gsuna1$ + "*" THEN 
           ELSE 
             ok% = 0
           END IF 
         END IF 
         IF Gsuna2$ <> "" THEN 
           IF dokument.dokument LIKE "*" + Gsuna2$ + "*" THEN 
           ELSE 
             ok% = 0
           END IF 
         END IF 
       END IF 
     END IF 
     IF ok% = - 1 THEN 
       IF filter$ <> "" THEN 
         IF Gruppe.DOKUMENT LIKE filter$ AND (linkfield% = 0 OR link.DOKUMENT = linkfield%) OR codeku.dokument = linkfield% THEN 
           IF CodeKU.DOKUMENT <> 0 THEN 
             SELECT KEY CodeKU.DOKUMENT FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
             Name$ = Nachname.ADRESSEN + ", " + Vorname.ADRESSEN
           ELSE 
             Name$ = "(ohne Zuordnung)"
           END IF 
           IF GCODIE% = - 1 THEN CALL SearchVorbDO1("dokument")
           DokList$(a%) = Dokument.DOKUMENT + ", " + LTRIM$ ( DATE$ (erstellt_am.DOKUMENT,"0d.mm.yyyy")) + "/" + LTRIM$ ( DATE$ (letzte_Bearbeit.DOKUMENT,"0d.mm.yyyy")) + ", " + Name$ + SPACE$ (100) + STR$ (CodeDOK.DOKUMENT,"000000")
           a% = a% + 1
         END IF 
       ELSE 
         IF (linkfield% = 0 OR link.DOKUMENT = linkfield%) OR codeku.dokument = linkfield% THEN 
           IF CodeKU.DOKUMENT <> 0 THEN 
             SELECT KEY CodeKU.DOKUMENT FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
             Name$ = Nachname.ADRESSEN + ", " + Vorname.ADRESSEN
           ELSE 
             Name$ = "(ohne Zuordnung)"
           END IF 
           IF GCODIE% = - 1 THEN CALL SearchVorbDO1("dokument")
           DokList$(a%) = Dokument.DOKUMENT + ", " + LTRIM$ ( DATE$ (erstellt_am.DOKUMENT,"0d.mm.yyyy")) + "/" + LTRIM$ ( DATE$ (letzte_Bearbeit.DOKUMENT,"0d.mm.yyyy")) + ", " + Name$ + SPACE$ (100) + STR$ (CodeDOK.DOKUMENT,"000000")
           a% = a% + 1
         END IF 
       END IF 
     END IF 
     SET STATUS STR$ (a%,",9999999") + " gefunden " + Dokument.DOKUMENT
     SELECT NEXT FILE "dokument"
   WEND 
 MOUSE ON 
 DOKAusw1a% = - 1
 IF a% <> 0 THEN 
   IF GCODIE% = - 1 THEN 
     c$ = "aa"
     req3% = 0
     DOKAuswahl% = 0
     REM CALL Fehler("","")
     req3% = CALL ("_SearchShow",c$)
     IF VAL (c$) <> 0 THEN 
       DOKAusw1a% = VAL (c$)
       ok% = 0
       SET STATUS "Dokument gefunden..."
     END IF 
     IF VAL (c$) = 0 AND req3% = 33 THEN 
       ret% = CALL ("_SearchClose")
       GCODieRuf% = 0
       GCODieRuf1% = 0
       GCODieRuf2% = 0
       alle$ = "j"
       req3% = 0
       GOTO a240120051
     END IF 
   ELSE 
     CREATE DIALOG "DOK",0,0,426,304,title$,"MS Sans Serif",8
     ADD DIALOG "DOK",4,0,0,426,280,0,""
     ADD DIALOG "DOK",5,40,12,160,10,0,"Bitte wÑhlen Sie das gewÅnschte Dokument aus:"
     ADD DIALOG "DOK",9,6,14,22,22,2
     ADD DIALOG "DOK",5,40,24,160,10,0,"Bezeichnung, erstellt/bearbeitet, Adressat"
     ADD DIALOG "DOK",7,19,35,400,239,2,1,DokList$,Auswahl$
     ADD DIALOG "DOK",1,210,287,55,15,0,"&Abbrechen",0,0
     ADD DIALOG "DOK",1,154,287,55,15,1,"&OK",1,1
     DIALOG "DOK",req%
     REMOVE DIALOG "DOK"
     IF req% = 1 THEN 
       DOKAusw1a% = VAL ( RIGHT$ (Auswahl$(0),6))
     END IF 
   END IF 
 ELSE 
   CALL Fehler("Keine Dokumente in dieser Gruppe gefunden!","")
 END IF 
 SELECT KEY _cuko% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
 FILE cfile$
 END FUNCTION 
 
SUB TextAnz(textdatei$)
     REM CALL Fehler("","")
     endung$ = GetDateiendung$(textvorlage$)
     IF endung$ LIKE "DOC*" OR endung$ LIKE "XLS*" OR UCASE$ (Vista$) <> "TRUE" OR GASP% = - 1 THEN 
       i% = CALL ("ShellExecute",0,"open",textdatei$,"","",1)
       REM a% = CALL ("_SBFileCall",textdatei$)
     ELSE 
       REM i% = CALL ("ShellExecute",0,"open","notepad","",textdatei$,1)
       IF NOT EXISTS (GMACodeDir$ + "openurl.exe") THEN COPY _netpath$ + "\local\openurl.exe" TO GMACodeDir$ + "openurl.exe"
       prg$ = GMACodeDir$ + "openurl.exe"
       IF EXISTS (GMACodeDir$ + "opurl.bat") THEN DELETE GMACodeDir$ + "opurl.bat"
       OPEN GMACodeDir$ + "opurl.bat" FOR APPEND 
       ? "echo OFF"
       ? textdatei$
       ? 
       CLOSE OUTPUT 
       CALL (GMACodeDir$ + "opurl.bat"),0
       REM CALL (GMACodeDir$ + "openurl.exe"),0
     END IF 
 END SUB 


SUB dokkor()
 CALL DFile(2,"OFFICE\dok1" + _fpw$)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 FILE "dokument"
 INDEX codedok.dokument
 FILE "dok1"
 INDEX codedok.dok1
 SELECT FIRST FILE "dok1"
 i% = 0
 j% = RECCOUNT ("dok1")
 g% = 0
 WHILE NOT EOF ("dok1")
   codedok% = codedok.dok1
   i% = i% + 1
   IF EXISTS (codedok%,codedok.dokument) THEN 
     g% = g% + 1
     SELECT FIRST FILE "dokument" INDEX codedok.dokument
     SELECT KEY codedok% LOCK FILE "dokument" INDEX codedok.dokument
     novi1.dokument = novi1.dok1
     CALL QuickStore("dokument")
   END IF 
   SET STATUS STR$ (i%,"99999") + "/" + STR$ (j%,"99999") + "/" + STR$ (g%,"99999")
   SELECT NEXT FILE "dok1"
 WEND 

 END SUB 





 '      ******************************************************
 '      ** Routinen fÅr Formular "Produktgruppe" 
 '      ******************************************************
 
SUB PRGRUPPEN()
  MOUSE OFF 
  _codeprgr% = 0
 CALL DFile(2,"OFFICE\PRGRUPPE" + _fpw$)
 CALL DFile(2,"OFFICE\PRODUKT" + _fpw$)
 _formend% = 0
 prodform$ = "PRGRUPPE"
 WHILE _formend% = 0
   GRUPPENsub% = 0
   prodform$ = "PRGRUPPE"
   IF NOT OPEN ("PRGRUPPE") THEN CALL DFile(2,"OFFICE\PRGRUPPE" + _fpw$)
   IF NOT OPEN ("PRODUKT") THEN CALL DFile(2,"OFFICE\PRODUKT" + _fpw$)
   IF UCASE$ ( FORM ) LIKE prodform$ OR UCASE$ ( FORM ) LIKE prodform1$ THEN 
     REM Leeranweisung
   ELSE 
     CALL MNPRGRUPPE()
     MENU ON 
     IF _projekt$ <> "WAWI" THEN 
       OPEN FORM GOFFForm$ + prodform$
     ELSE 
       OPEN FORM GOFFForm$ + prodform1$
     END IF 
     SET f = superbase.form
     SET STATUS "Produktgruppen"
     SET HEADING title$ + " - Produktgruppen"
     GAppName$ = _netpath$ + "DOCP\produkt.pdf"
     MOUSE OFF 
     CALL PRGRPIntro()
   END IF 
   MOUSE ON 
   f.abbruch.enabled = 0
   f.abbruch.visible = 0
   f.suchen.enabled = - 1
   CALL ClearKBDBuffer()
   SET STATUS "Produktgruppen - Anzahl Produktgruppen" + STR$ ( RECCOUNT ("PRGRUPPE"),",9999999")
   WAIT MOUSE OR KEY OR MENU OR FOR 600
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL PRGRPrev()
   CASE CrsRight%,PgDn%
     CALL PRGR NEXT ()
   END SELECT 
   IF k$ = CHR$ (27) THEN 
     IF PAGE > 1 THEN 
       FORM 1
     ELSE 
       _formend% = 1
     END IF 
   END IF 
   SELECT CASE GRUPPENsub%
   CASE 1
     REM Umsatz
     codeprgr% = codeprgr.PRGRUPPE
     _codeprgr% = codeprgr.PRGRUPPE
     REM CALL UMSGRUPPE()
   CASE 2
     CALL PRGRPSuchen()
   CASE 3
     codeprgr% = codeprgr.PRGRUPPE
     _codeprgr% = codeprgr.PRGRUPPE
     CALL PRGRPPRODUKT()
   CASE 4
     REM PSelextNext
     CALL PRGRNext()
   CASE 5
     REM PSelectPrevious
     CALL PRGRPrev()
   CASE 99
     f.umsatz.enabled = 0
     CALL ButDesabled()
     ON ERROR GOTO ErrorHandler
     SET EDIT SELECT ON 
     ENTER PGruppe.PRGRUPPE,0
     SET EDIT SELECT OFF 
     CALL ButEnabled()
     f.umsatz.enabled = - 1
     IF abbruch% = - 1 THEN 
       SELECT KEY codeprgr.PRGRUPPE FILE "PRGRUPPE" INDEX codeprgr.PRGRUPPE
       FORM 
       abbruch% = 0
     END IF 
   END SELECT 
   REM CALL BMCheckMail()
 WEND 
 _formend% = 0
 REM CLOSE FILE "PRGRUPPE"
 REM cugrp% = 0
 _codeprgr% = 0
 END SUB 
 
 
 ' GRUPPEN Intro 
 ' =======================================================================
 
SUB PRGRPIntro()
 FILE "PRGRUPPE"
 INDEX codeprgr.PRGRUPPE
 SELECT FIRST 
 IF RECCOUNT ("PRGRUPPE") > 1 THEN 
   FILE "PRODUKT"
   SELECT WHERE novi1.PRODUKT = 0
   SELECT FIRST 
   FILE "PRGRUPPE"
   SELECT WHERE novi1.PRGRUPPE = 0
   SELECT FIRST 
 END IF 
 a% = 0
 INDEX codeprgr.PRGRUPPE
 IF _codeprgr% <> 0 THEN 
   SELECT FORM KEY _codeprgr%
 ELSE 
   INDEX PGruppe.PRGRUPPE
   SELECT FORM FIRST 
   IF EOF ("") THEN 
     BLANK 
     codeprgr.PRGRUPPE = SER ("PRGRUPPE",1)
   END IF 
 END IF 
 FORM 
 SET INDEX PGruppe.PRGRUPPE
 INDEX PGruppe.PRGRUPPE
 END SUB 
 
 
 ' Buchungsgruppe Neu
 ' =======================================================================
 
SUB PRGRPNeu()
 IF PGruppe.PRGRUPPE <> "" THEN CALL FStore("PRGRUPPE")
 PRGRUPPEsub% = 99
 BLANK FORM 
 codeprgr.PRGRUPPE = SER ("PRGRUPPE",1)
 PGruppe.PRGRUPPE = "NEU"
 FORM 
 ENTER PGruppe.PRGRUPPE,0
 END SUB 
 
 
 
 
 
 
 ' Produktgruppe Suchen
 ' =======================================================================
 
SUB PRGRPSuchen()
 IF NEW ("PRGRUPPE") OR MOD ("PRGRUPPE") THEN CALL FStore("PRGRUPPE")
   alle$ = "n"
   _codeprgr% = codeprgr.PRGRUPPE
   DIM Auswahl1$(1)
 
anf170420083: 
     FILE "PRGRUPPE"
     INDEX codeprgr.PRGRUPPE
     SELECT FIRST 
     a% = 0
     REDIM ProdGruppen1$(1,1)
     REDIM ProdGruppen1$( RECCOUNT ("PRGRUPPE") + 10)
     WHILE NOT EOF ("PRGRUPPE")
       ok% = - 1
       IF alle$ = "n" THEN 
         IF novi1.PRGRUPPE = 1 THEN ok% = 0
       END IF 
       IF ok% = - 1 THEN 
         ProdGruppen1$(a%) = PGruppe.PRGRUPPE
         IF novi1.PRGRUPPE = 1 THEN ProdGruppen1$(a%) = ProdGruppen1$(a%) + " ###"
         ProdGruppen1$(a%) = ProdGruppen1$(a%) + SPACE$ (300) + STR$ (codeprgr.PRGRUPPE,"000000")
         a% = a% + 1
       END IF 
       SELECT NEXT 
     WEND 
     Auswahl$ = ProdGruppen1$(0)
     Auswahl1$(0) = Auswahl$
     FILE "PRODUKT"
      CREATE DIALOG "PREISLIS",0,0,300,364,"Produktgruppensuche","MS Sans Serif",8
      ADD DIALOG "PREISLIS",4,0,0,299,340,0," Auswahl Produktgruppe"
      ADD DIALOG "PREISLIS",7,5,14,289,325,2,2,ProdGruppen1$,Auswahl1$," "
      ADD DIALOG "PREISLIS",1,17,345,55,16,1,"&OK",1,1
      ADD DIALOG "PREISLIS",1,77,345,55,16,0,"&Abbrechen",0,0
      ADD DIALOG "PREISLIS",1,137,345,55,16,0,"Alle",2,2
      DIALOG "PREISLIS",req%
      REMOVE DIALOG "PREISLIS"
      IF req% = 2 THEN 
        alle$ = "j"
        SELECT WHERE FILE "PRGRUPPE"
        SELECT WHERE FILE "PRODUKT"
        GOTO anf170420083
      END IF 
      IF req% = 1 THEN 
        codeprgr% = VAL ( RIGHT$ (Auswahl1$(0),6))
          SELECT KEY codeprgr% FILE "PRGRUPPE" INDEX codeprgr.PRGRUPPE
          _codeprgr% = codeprgr.PRGRUPPE
      END IF 
   FILE "PRGRUPPE"
   SELECT FORM KEY _codeprgr% FILE "PRGRUPPE" INDEX codeprgr.PRGRUPPE
   SET INDEX PGruppe.PRGRUPPE
   INDEX PGruppe.PRGRUPPE
 FORM 
 END SUB 
 
   
 
 
SUB PRGRPrev()
 FILE "PRGRUPPE"
 SET INDEX PGruppe.PRGRUPPE
 INDEX PGruppe.PRGRUPPE
 CALL PSelectPrev()
 FORM 
 END SUB 
 
SUB PRGRNext()
 FILE "PRGRUPPE"
 SET INDEX PGruppe.PRGRUPPE
 INDEX PGruppe.PRGRUPPE
 CALL PSelectNext()
 FORM 
 END SUB 
 
 
SUB PRGRPPRODUKT()
 _codeprgr% = codeprgr.PRGRUPPE
 _CodeProd% = CodeProd.PRODUKT
 IF _CodeProd% > 0 THEN CALL ProduktN()
 END SUB 
 
 
 
 
 
SUB MNPRGRUPPE()
 MENU CLEAR 
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
 
 
 







 '      ******************************************************
 '      ** Routinen fÅr Formular "Produkt" - Produkt **
 '      ******************************************************
 
SUB ProduktN()
  MOUSE OFF 
 CALL DFile(2,"OFFICE\PRGRUPPE" + _fpw$)
 CALL DFile(2,"OFFICE\PRODUKT" + _fpw$)
 _formend% = 0
 prodform$ = "ProduktN"
 WHILE _formend% = 0
   GRUPPENsub% = 0
   IF UCASE$ ( FORM ) LIKE prodform$ THEN 
     REM Leeranweisung
   ELSE 
     CALL MNProdukt()
     MENU ON 
     IF _projekt$ <> "WAWI" THEN 
       OPEN FORM GOFFForm$ + prodform$
     ELSE 
       OPEN FORM GOFFForm$ + prodform1$
     END IF 
     SET f = superbase.form
     SET STATUS "Produkt"
     SET HEADING title$ + " - Produkt"
     GAppName$ = _netpath$ + "DOCP\produkt.pdf"
     MOUSE OFF 
     CALL APRODPIntro()
   END IF 
   MOUSE ON 
   f.abbruch.enabled = 0
   f.abbruch.visible = 0
   f.suchen.enabled = - 1
   CALL ClearKBDBuffer()
   SET STATUS "Produkt - Anzahl Buchungskonten" + STR$ ( RECCOUNT ("Produkt"),",9999999")
   WAIT MOUSE OR KEY OR MENU OR FOR 600
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL APRODPrev()
   CASE CrsRight%,PgDn%
     CALL APROD NEXT ()
   END SELECT 
   IF k$ = CHR$ (27) THEN 
     IF PAGE > 1 THEN 
       FORM 1
     ELSE 
       _formend% = 1
     END IF 
   END IF 
   SELECT CASE GRUPPENsub%
   CASE 1
     REM Umsatz
     codeprod% = codeprod.Produkt
     _codeprod% = codeprod.Produkt
     REM CALL UMSGRUPPE()
   CASE 2
     CALL APRODPSuchen()
   CASE 3
     REM prgruppe zuweisen
     CALL PRODuZuweis()
     CALL APRODPIntro()
   CASE 99
     f.umsatz.enabled = 0
     CALL ButDesabled()
     ON ERROR GOTO ErrorHandler
     SET EDIT SELECT ON 
     ENTER Produktname.Produkt,0
     SET EDIT SELECT OFF 
     CALL ButEnabled()
     f.umsatz.enabled = - 1
     IF abbruch% = - 1 THEN 
       SELECT KEY codeprod.Produkt FILE "Produkt" INDEX codeprod.Produkt
       FORM 
       abbruch% = 0
     END IF 
   END SELECT 
   REM CALL BMCheckMail()
 WEND 
 _formend% = 0
 REM CLOSE FILE "prgruppe"
 REM CLOSE FILE "Produkt"
 REM cugrp% = 0
 END SUB 
 
 
SUB PRODuZuweis()
  _codeprod% = codeprod.Produkt
  CALL PRGRPSuchen()
  IF _CodePrGr% > - 1 THEN 
    PGruppe$ = PGruppe.prgruppe
    REQUEST PGruppe$,"zuweisen?",130,req%
    IF req% = 1 THEN 
      SELECT FIRST FILE "Produkt" INDEX codeprod.Produkt
      SELECT KEY _codeprod% LOCK FILE "Produkt" INDEX codeprod.Produkt
      CodePrGr.Produkt = _CodePrGr%
      STORE FILE "Produkt"
      prgruppe$ = "Produktgruppe:" + PGruppe$
      MOUSE ON 
    END IF 
  END IF 
 END SUB 
 
 
 
 ' GRUPPEN Intro 
 ' =======================================================================
 
SUB APRODPIntro()
 FILE "Produkt"
 INDEX codeprod.Produkt
 SELECT FIRST 
 IF RECCOUNT ("Produkt") > 1 THEN 
   FILE "Produkt"
   SELECT WHERE novi1.Produkt = 0
   SELECT FIRST 
 END IF 
 a% = 0
 INDEX codeprod.Produkt
 IF _codeprod% <> 0 THEN 
   SELECT FORM KEY _codeprod%
 ELSE 
   INDEX Produktname.Produkt
   SELECT FORM FIRST 
   IF EOF ("Produkt") THEN 
     BLANK 
     codeprod.Produkt = SER ("Produkt",1)
   END IF 
 END IF 
 _CodePrGr% = CodePrGr.Produkt
 SELECT FIRST FILE "prgruppe" INDEX CodePrGr.prgruppe
 SELECT KEY _CodePrGr% FILE "prgruppe" INDEX CodePrGr.prgruppe
 prgruppe$ = "Produktgruppe:" + PGruppe.prgruppe
 FORM 
 SET INDEX Produktname.Produkt
 INDEX Produktname.Produkt
 END SUB 
 
 
 ' Produktgruppe Neu
 ' =======================================================================
 
SUB APRODPNeu()
 IF Produktname.Produkt <> "" THEN CALL FStore("Produkt")
 REM ProduktSUB% = 99
 GRUPPENsub% = 99
 BLANK FORM 
 codeprod.Produkt = SER ("Produkt",1)
 Produktname.Produkt = "NEU"
 prgruppe$ = "Produktgruppe: <ohne Zuordnung>"
 FORM 
 END SUB 
 
 
 
 
 
 
 ' Produktgruppe Suchen
 ' =======================================================================
 
SUB APRODPSuchen()
 IF NEW ("Produkt") OR MOD ("Produkt") THEN CALL FStore("Produkt")
   alle$ = "n"
   _codeprod% = codeprod.Produkt
   DIM Auswahl1$(1)
 
anf170420081: 
     a% = 0
     FILE "prgruppe"
     INDEX PGruppe.prgruppe
     SELECT FIRST FILE "prgruppe"
     FILE "Produkt"
     INDEX Produktname.Produkt
     SELECT FIRST 
     rec1a% = RECCOUNT ("prgruppe") + RECCOUNT ("Produkt")
     REDIM ProdGruppen1$(1,1)
     REDIM ProdGruppen1$(rec1a%)
     WHILE NOT EOF ("prgruppe")
       FILE "prgruppe"
       sok% = - 1
       IF alle$ = "n" THEN 
         IF novi1.prgruppe = 1 THEN sok% = 0
       END IF 
       IF sok% THEN 
         CodePrGr% = CodePrGr.prgruppe
         IF novi1.prgruppe = 1 THEN 
           ProdGruppen1$(a%) = PGruppe.prgruppe + " ### " + SPACE$ (300) + STR$ (CodePrGr.prgruppe,"000000")
         ELSE 
           ProdGruppen1$(a%) = PGruppe.prgruppe + SPACE$ (300) + STR$ (CodePrGr.prgruppe,"000000")
         END IF 
         a% = a% + 1
         FILE "Produkt"
         INDEX Produktname.Produkt
         SELECT FIRST FILE "Produkt"
         WHILE NOT EOF ("Produkt")
           ook% = - 1
           IF alle$ = "n" THEN 
             IF novi1.Produkt = 1 THEN ook% = 0
           END IF 
           IF CodePrGr.Produkt <> CodePrGr% THEN ook% = 0
           IF ook% THEN 
             IF novi1.prgruppe = 1 THEN 
               ProdGruppen1$(a%) = "  |-- " + Produktname.Produkt + " ### " + SPACE$ (300) + STR$ (codeprod.Produkt,"000000")
             ELSE 
               ProdGruppen1$(a%) = "  |-- " + Produktname.Produkt + SPACE$ (300) + STR$ (codeprod.Produkt,"000000")
             END IF 
             a% = a% + 1
           END IF 
           SELECT NEXT FILE "Produkt"
         WEND 
         REM war1old$ = war1$
       END IF 
       FILE "prgruppe"
       SELECT NEXT FILE "prgruppe"
     WEND 
 
 
     Auswahl$ = ProdGruppen1$(0)
     Auswahl1$(0) = Auswahl$
 MOUSE ON 
nochmal170420082: 
 CREATE DIALOG "KEYWORD",0,0,433,410,"Produktsuche","MS Sans Serif",8
 ADD DIALOG "KEYWORD",4,0,1,433,380,0,"Auswahl Produkt"
 REM ADD DIALOG "KEYWORD",9,4,12,21,24,2
 ADD DIALOG "KEYWORD",7,5,18,422,362,0,2,ProdGruppen1$,Auswahl$,prompt$
 REM ADD DIALOG "KEYWORD",6,31,178,188,12,8,0,KW$,20
 ADD DIALOG "KEYWORD",1,37,392,55,15,1,"&OK",1,1
 ADD DIALOG "KEYWORD",1,93,392,55,15,0,"&Abbrechen",0,0
 ADD DIALOG "KEYWORD",1,149,392,55,15,0,"Alle",2,2
 DIALOG "KEYWORD",req%
 REMOVE DIALOG "KEYWORD"
 IF req% = 2 THEN 
   alle$ = "j"
   SELECT WHERE FILE "Produkt"
   GOTO anf170420081 
 END IF 
 IF req% < 2 AND req% > 0 THEN 
   REM IF kw$ = "" THEN kw$ = Auswahl$(0)
   REM 17012005
   IF Auswahl$(0) LIKE "*|--*" THEN 
     codeprod% = VAL ( RIGHT$ (Auswahl$(0),6))
     SELECT KEY codeprod% FILE "Produkt" INDEX codeprod.Produkt
     _codeprod% = codeprod.Produkt
   ELSE 
     CALL Fehler("Sie dÅrfen keine Produktgruppe auswÑhlen, sondern mÅssen ein Produkt auswÑhlen!","Die Buchungskonten sind mit |-- gekennzeichnet!")
     GOTO nochmal170420082
   END IF 
 END IF 
 
 
   FILE "Produkt"
   SELECT FORM KEY _codeprod% FILE "Produkt" INDEX codeprod.Produkt
   SET INDEX Produktname.Produkt
   INDEX Produktname.Produkt
   _CodePrGr% = CodePrGr.Produkt
   SELECT FIRST FILE "prgruppe" INDEX CodePrGr.prgruppe
   SELECT KEY _CodePrGr% FILE "prgruppe" INDEX CodePrGr.prgruppe
   prgruppe$ = "Produktgruppe:" + PGruppe.prgruppe
 FORM 
 END SUB 
 
   
 
 
SUB APRODPrev()
 FILE "Produkt"
 SET INDEX Produktname.Produkt
 INDEX Produktname.Produkt
 CALL PSelectPrev()
 _CodePrGr% = CodePrGr.Produkt
 SELECT FIRST FILE "prgruppe" INDEX CodePrGr.prgruppe
 SELECT KEY _CodePrGr% FILE "prgruppe" INDEX CodePrGr.prgruppe
 prgruppe$ = "Produktgruppe:" + PGruppe.prgruppe
 FORM 
 END SUB 
 
SUB APRODNext()
 FILE "Produkt"
 SET INDEX Produktname.Produkt
 INDEX Produktname.Produkt
 CALL PSelectNext()
 _CodePrGr% = CodePrGr.Produkt
 SELECT FIRST FILE "prgruppe" INDEX CodePrGr.prgruppe
 SELECT KEY _CodePrGr% FILE "prgruppe" INDEX CodePrGr.prgruppe
 prgruppe$ = "Produktgruppe:" + PGruppe.prgruppe
 FORM 
 END SUB 
 
 
SUB MNProdukt()
 MENU CLEAR 
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
 



SUB CBFCLizGenerat(CodeKU%)
 REM CALL Fehler("CBFCLizGenerat","")
 MOUSE OFF 

 ziel$ = "C:\codie.tmp\DevExpress.Data.v9.3.dll"
 quelle$ = _netpathlw1$ + "DevExpress.Data.v9.3.dll"
 a% = CALL ("_SBFileExists",ziel$)
 IF a% <> - 1 THEN 
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 ELSE 
   a% = CALL ("_SBFileDelete1",ziel$)
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 END IF 
 MOUSE OFF 
 ziel$ = "C:\codie.tmp\DevExpress.Utils.v9.3.dll"
 quelle$ = _netpathlw1$ + "DevExpress.Utils.v9.3.dll"
 a% = CALL ("_SBFileExists",ziel$)
 IF a% <> - 1 THEN 
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 ELSE 
   a% = CALL ("_SBFileDelete1",ziel$)
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 END IF 
 MOUSE OFF 

 ziel$ = "C:\codie.tmp\DevExpress.XtraEditors.v9.3.dll"
 quelle$ = _netpathlw1$ + "DevExpress.XtraEditors.v9.3.dll"
 a% = CALL ("_SBFileExists",ziel$)
 IF a% <> - 1 THEN 
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 ELSE 
   a% = CALL ("_SBFileDelete1",ziel$)
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 END IF 
 MOUSE OFF 

 ziel$ = "C:\codie.tmp\DevExpress.XtraGrid.v9.3.dll"
 quelle$ = _netpathlw1$ + "DevExpress.XtraGrid.v9.3.dll"
 a% = CALL ("_SBFileExists",ziel$)
 IF a% <> - 1 THEN 
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 ELSE 
   a% = CALL ("_SBFileDelete1",ziel$)
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 END IF 
 MOUSE OFF 

 ziel$ = "C:\codie.tmp\CODie.Lib.CompanyLicence.dll"
 quelle$ = _netpathlw1$ + "CODie.Lib.CompanyLicence.dll"
 a% = CALL ("_SBFileExists",ziel$)
 IF a% <> - 1 THEN 
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 ELSE 
   a% = CALL ("_SBFileDelete1",ziel$)
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 END IF 
 MOUSE OFF 
 REM IF NOT EXISTS ("C:\codie.tmp\CODie.Lib.Crypto.dll") THEN 
 ziel$ = "C:\codie.tmp\CODie.Lib.Crypto.dll"
 quelle$ = _netpathlw1$ + "CODie.Lib.Crypto.dll"
 a% = CALL ("_SBFileExists",ziel$)
 IF a% <> - 1 THEN 
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 ELSE 
   a% = CALL ("_SBFileDelete1",ziel$)
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 END IF 
 MOUSE OFF 
 REM IF NOT EXISTS ("C:\codie.tmp\CODie.Lib.Licence.dll") THEN 
 ziel$ = "C:\codie.tmp\CODie.Lib.Licence.dll"
 quelle$ = _netpathlw1$ + "CODie.Lib.Licence.dll"
 a% = CALL ("_SBFileExists",ziel$)
 IF a% <> - 1 THEN 
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 ELSE 
   a% = CALL ("_SBFileDelete1",ziel$)
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 END IF 
 MOUSE OFF 
 REM IF NOT EXISTS ("C:\codie.tmp\Licence.exe") THEN 
 ziel$ = "C:\codie.tmp\Imno.exe"
 quelle$ = _netpathlw1$ + "Imno.dll"
 a% = CALL ("_SBFileExists",ziel$)
 IF a% <> - 1 THEN 
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 ELSE 
   a% = CALL ("_SBFileDelete1",ziel$)
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 END IF 

 MOUSE OFF 
 IF LTRIM$ (CBFCLizenzN.adressen) <> "" THEN 
   aufruf$ = "C:\codie.tmp\Imno.exe -clipboard -pwd L0ndoN -prog cbfc"
   COPY FROM CBFCLizenzN.ADRESSEN
 ELSE 
   REM SELECT FIRST FILE "stamm"
   REM COPY FROM CBFCLizenzN.stamm
   aufruf$ = "C:\codie.tmp\Imno.exe -pwd L0ndoN -prog cbfc"
   REM aufruf$ = "C:\codie.tmp\Imno.exe -pwd L0ndoN -prog isman"
 END IF 
       IF NOT EXISTS (GMACodeDir$ + "openurl.exe") THEN COPY _netpath$ + "\local\openurl.exe" TO GMACodeDir$ + "openurl.exe"
       prg$ = GMACodeDir$ + "openurl.exe"
       IF EXISTS (GMACodeDir$ + "opurl.bat") THEN DELETE GMACodeDir$ + "opurl.bat"
       OPEN GMACodeDir$ + "opurl.bat" FOR APPEND 
       ? "echo OFF"
       ? aufruf$
       ? 
       CLOSE OUTPUT 
       CALL (GMACodeDir$ + "opurl.bat"),0
 MOUSE ON 
 END SUB 

SUB CBFCLizGenS()
 REM CALL Fehler("CBFCLizGenerat","")
 MOUSE OFF 

 ziel$ = "C:\codie.tmp\DevExpress.Data.v9.1.dll"
 quelle$ = _netpathlw1$ + "DevExpress.Data.v9.1.dll"
 a% = CALL ("_SBFileExists",ziel$)
 IF a% <> - 1 THEN 
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 END IF 
 
 ziel$ = "C:\codie.tmp\DevExpress.Utils.v9.1.dll"
 quelle$ = _netpathlw1$ + "DevExpress.Utils.v9.1.dll"
 a% = CALL ("_SBFileExists",ziel$)
 IF a% <> - 1 THEN 
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 END IF 
 
 
 ziel$ = "C:\codie.tmp\DevExpress.XtraEditors.v9.1.dll"
 quelle$ = _netpathlw1$ + "DevExpress.XtraEditors.v9.1.dll"
 a% = CALL ("_SBFileExists",ziel$)
 IF a% <> - 1 THEN 
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 END IF 
 
 
 ziel$ = "C:\codie.tmp\DevExpress.XtraGrid.v9.1.dll"
 quelle$ = _netpathlw1$ + "DevExpress.XtraGrid.v9.1.dll"
 a% = CALL ("_SBFileExists",ziel$)
 IF a% <> - 1 THEN 
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 END IF 
 

 ziel$ = "C:\codie.tmp\CODie.Lib.CompanyLicence.dll"
 quelle$ = _netpathlw1$ + "CODie.Lib.CompanyLicence.dll"
 a% = CALL ("_SBFileExists",ziel$)
 IF a% <> - 1 THEN 
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 END IF 
 REM IF NOT EXISTS ("C:\codie.tmp\CODie.Lib.Crypto.dll") THEN 
 ziel$ = "C:\codie.tmp\CODie.Lib.Crypto.dll"
 quelle$ = _netpathlw1$ + "CODie.Lib.Crypto.dll"
 a% = CALL ("_SBFileExists",ziel$)
 IF a% <> - 1 THEN 
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 END IF 
 REM IF NOT EXISTS ("C:\codie.tmp\CODie.Lib.Licence.dll") THEN 
 ziel$ = "C:\codie.tmp\CODie.Lib.Licence.dll"
 quelle$ = _netpathlw1$ + "CODie.Lib.Licence.dll"
 a% = CALL ("_SBFileExists",ziel$)
 IF a% <> - 1 THEN 
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 END IF 
 
 REM IF NOT EXISTS ("C:\codie.tmp\Licence.exe") THEN 
 ziel$ = "C:\codie.tmp\Imno.exe"
 quelle$ = _netpathlw1$ + "Imno.dll"
 a% = CALL ("_SBFileExists",ziel$)
 IF a% <> - 1 THEN 
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
 END IF 
  
 aufruf$ = "C:\codie.tmp\Imno.exe -pwd L0ndoN -prog cbfc"
 IF LTRIM$ (CBFCLizenzN.stamm) <> "" THEN 
   REM aufruf$ = aufruf$ + "-clipboard"
   REM COPY FROM CBFCLizenzN.stamm
 END IF 
       IF NOT EXISTS (GMACodeDir$ + "openurl.exe") THEN COPY _netpath$ + "\local\openurl.exe" TO GMACodeDir$ + "openurl.exe"
       prg$ = GMACodeDir$ + "openurl.exe"
       IF EXISTS (GMACodeDir$ + "opurl.bat") THEN DELETE GMACodeDir$ + "opurl.bat"
       OPEN GMACodeDir$ + "opurl.bat" FOR APPEND 
       ? "echo OFF"
       ? aufruf$
       ? 
       CLOSE OUTPUT 
       CALL (GMACodeDir$ + "opurl.bat"),0
 MOUSE ON 
 END SUB 




SUB ExpNachrXLS()
 FILE "MAIL"
 OPEN FIELDS CodeMAIL,Nachricht,Datum,Absender,EmpfÑnger
 Superbase.Converters.SBF.SourceFormat = "Superbase":REM        ExportFile
 Superbase.Converters.SBF.SourceFile = "MAIL"
 Superbase.Converters.SBF.Descending = 0
 Superbase.Converters.SBF.Merge = 0
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
 Superbase.Converters.XLS.DestFile = GMACodeDir$ + "freisch1.XLS"
 Superbase.Converters.XLS.StartRow = 2
 Superbase.Converters.XLS.StartCol = 1
 Superbase.Converters.XLS.EndRow = - 1
 Superbase.Converters.XLS.EndCol = - 1
 Superbase.Converters.XLS.UseLabels = - 1
 Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
 WAIT FOR 2
 CALL TextAnz(GMACodeDir$ + "freisch1.XLS")
 END SUB 





SUB ABZAQRegister(codeaq%)
 SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 kunr% = codeku.GAkquiDat$
 SELECT FIRST FILE "Adressen" INDEX codeku.adressen
 SELECT KEY kunr% FILE "Adressen" INDEX codeku.adressen
 cfile$ = FILE 
 DIM Aktionen$(300)
 FILE "AKTIONEN"
 INDEX CodeAK.Aktionen
 SELECT FIRST FILE "AKTIONEN" INDEX CodeAK.Aktionen
 a% = - 1
 WHILE NOT EOF ("AKTIONEN")
   IF noAnzeige.Aktionen LIKE "J" THEN 
   ELSE 
     a% = a% + 1
     Aktionen$(a%) = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
   END IF 
   SELECT NEXT FILE "AKTIONEN" INDEX CodeAK.Aktionen
 WEND 
 SELECT FIRST FILE "AKTIONEN" INDEX CodeAK.Aktionen
 SELECT KEY codeak.GAkquiDat$ FILE "AKTIONEN" INDEX CodeAK.Aktionen
 Aktion$ = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
 DIM Mitarbeiter$(300)
 FILE "SUPERVIS"
 INDEX CodeMA.supervis
 SELECT FIRST FILE "SUPERVIS" INDEX CodeMA.supervis
 
 a% = - 1
 WHILE NOT EOF ("SUPERVIS")
   IF NoAnzeigeJN.supervis LIKE "j" THEN 
   ELSE 
     a% = a% + 1
     Mitarbeiter$(a%) = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
   END IF 
   SELECT NEXT FILE "SUPERVIS" INDEX CodeMA.supervis
 WEND 
 SELECT FIRST FILE "SUPERVIS" INDEX CodeMA.supervis
 SELECT KEY codema.GAkquiDat$ FILE "SUPERVIS" INDEX CodeMA.supervis
 MANachname$ = Nachname.supervis + ", " + Vorname.supervis + " (" + STR$ (CodeMA.GAkquiDat$,"000000") + ")"
 datum$ = DATE$ (datum.GAkquiDat$,"0d.mm.yyyy")
 IF termin.GAkquiDat$ > 0 THEN Termin$ = DATE$ (termin.GAkquiDat$,"0d.mm.yyyy")
 IF uhrzeit.GAkquiDat$ > 0 THEN Zeit$ = TIME$ (uhrzeit.GAkquiDat$,"hh:mm")
 IF dauer.GAkquiDat$ > 0 THEN Dauer$ = LTRIM$ ( STR$ (dauer.GAkquiDat$,"99.99"))
 vtermin$ = DATE$ (ErDatum.GAkquiDat$,"0d.mm.yyyy")
 vzeit$ = TIME$ (erzeit.GAkquiDat$,"hh:mm")
 Nachname$ = Nachname.adressen
 Vorname$ = Vorname.ADRESSEN
 Stra·e$ = Stra·e.ADRESSEN
 Ort$ = PLZ.ADRESSEN + " " + Ort.ADRESSEN
 tmpku% = kunr%
 rnotiz$ = notiz.GAkquiDat$
 Terminerl$ = erledigt_Termin.GAkquiDat$
 RErgebnis$ = ergebnis.GAkquiDat$




 REM RNotiz$ = ""
    DIM dlg AS Dialog
    DIM control AS DialogControl
    prj11$ = "Projekt"
    IF codepr.GAkquiDat$ > 0 THEN 
      SELECT FIRST FILE "project" INDEX codepr.project
      SELECT KEY codepr.GAkquiDat$ FILE "project" INDEX codepr.project
      codeprdok% = codepr.GAkquiDat$
      Projektdok$ = LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
      prj11$ = LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
    END IF 
 ON ERROR GOTO dokt140420001 
   GOTO dokt140420002
dokt140420001: 
   CALL Fehler("Die Werte fÅr Datum oder Uhrzeit scheinen falsch zu sein!","Bitte prÅfen")
dokt140420002: 
    Superbase.Dialogs.Add("AQREGISTER")
    SET dlg = Superbase.Dialogs.AQREGISTER
    dlg.Move(0,0,354,355)
    dlg.Caption = title$
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(5,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Datum$"
 
    SET control = dlg.Add("DialogTextBox2","DialogTextBox")
    control.Move(49,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Termin$"
 
    SET control = dlg.Add("DialogTextBox3","DialogTextBox")
    control.Move(93,8,25,12)
    control.MaxLength = 5
    control.TextBinding = "Zeit$"
 
    SET control = dlg.Add("DialogTextBox4","DialogTextBox")
    control.Move(130,8,24,12)
    control.MaxLength = 5
    control.TextBinding = "Dauer$"
 
    SET control = dlg.Add("DialogTextBox6","DialogTextBox")
    control.Move(185,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "VTermin$"
 
    SET control = dlg.Add("DialogTextBox7","DialogTextBox")
    control.Move(235,8,25,12)
    control.MaxLength = 5
    control.TextBinding = "VZeit$"
 
    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(130,22,28,11)
    control.Caption = "Dauer"
 
    SET control = dlg.Add("DialogLabel19","DialogLabel")
    control.Move(185,22,45,13)
    control.Caption = "Vorlagetermin"
 
    SET control = dlg.Add("DialogLabel20","DialogLabel")
    control.Move(235,22,54,13)
    control.Caption = "Vorlagezeit"
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(5,22,32,13)
    control.Caption = "Datum"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(49,22,28,13)
    control.Caption = "Termin"
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(93,22,28,13)
    control.Caption = "Uhrzeit"
 
    SET control = dlg.Add("DialogLabel5","DialogLabel")
    control.Move(5,36,123,12)
    control.Caption = "Zuordnung zur Aktion"
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(186,44,160,81)
    control.Caption = "Adresse"
 
    SET control = dlg.Add("DialogLabel8","DialogLabel")
    control.Move(190,59,39,12)
    control.Caption = "Nachname"
 
    SET control = dlg.Add("DialogLabel14","DialogLabel")
    control.Move(230,59,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Nachname$"
 
    SET control = dlg.Add("DialogLabel9","DialogLabel")
    control.Move(190,69,32,12)
    control.Caption = "Vorname"
 
    SET control = dlg.Add("DialogLabel15","DialogLabel")
    control.Move(230,69,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Vorname$"
 
    SET control = dlg.Add("DialogLabel10","DialogLabel")
    control.Move(190,79,24,12)
    control.Caption = "Stra·e"
 
    SET control = dlg.Add("DialogLabel16","DialogLabel")
    control.Move(230,79,116,12)
    control.CaptionBinding = "Stra·e$"
 
    SET control = dlg.Add("DialogLabel11","DialogLabel")
    control.Move(190,89,19,12)
    control.Caption = "Ort"
 
    SET control = dlg.Add("DialogLabel17","DialogLabel")
    control.Move(230,89,116,12)
    control.CaptionBinding = "Ort$"
 
    REM SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    REM control.Move(190,104,152,14)
    REM control.Caption = "Auswahl"
    REM control.ReturnValue = 2
 
    SET control = dlg.Add("DialogComboBox1","DialogComboBox")
    control.Move(5,46,169,183)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Aktionen$","Aktion$")
 
    SET control = dlg.Add("DialogLabel6","DialogLabel")
    control.Move(5,65,139,8)
    control.Caption = "Eintragen in den Kalender des Mitarbeiters"
 
    SET control = dlg.Add("DialogComboBox2","DialogComboBox")
    control.Move(5,76,169,190)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Mitarbeiter$","MANachname$")
 
    SET control = dlg.Add("DialogLabel7","DialogLabel")
    control.Move(5,96,139,8)
    control.Caption = "Notiz"
 
    SET control = dlg.Add("DialogTextBox5","DialogTextBox")
    control.Move(5,105,169,128)
    control.MultiLine = 1
    control.ScrollBars = 2
    control.MaxLength = 4000
    control.TextBinding = "RNotiz$"
 


    SET control = dlg.Add("DialogLabel71","DialogLabel")
    control.Move(5,237,139,8)
    control.Caption = "Ergebnis"
 
    SET control = dlg.Add("DialogTextBox51","DialogTextBox")
    control.Move(5,250,169,100)
    control.MultiLine = 1
    control.ScrollBars = 2
    control.MaxLength = 4000
    control.TextBinding = "RErgebnis$"
 


    SET control = dlg.Add("DialogLabel12","DialogLabel")
    control.Move(186,133,162,29)
    control.Caption = "Wenn Sie diesen Termin nur zu Informationszwecken aufnehmen mîchten, markieren Sie bitte die Option 'Termin erledigt'."
 
    SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
    control.Move(186,165,76,12)
    control.Caption = "Termin erledigt"
    control.Bind("Terminerl$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
 
    SET control = dlg.Add("DialogLabel13","DialogLabel")
    control.Move(186,298,159,37)
    control.Caption = "Nach BetÑtigung der SchaltflÑche 'OK' wird der Eintrag in der Termindatei erzeugt."
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(186,337,78,15)
    control.Caption = "&OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
    control.Move(268,337,78,15)
    control.Caption = "&Abbrechen"
    control.ReturnValue = 0
    control.Cancel = 1
 
    SET control = dlg.Add("DialogCommandButton4","DialogCommandButton")
    control.Move(190,320,152,14)
    control.Caption = prj11$
    control.ReturnValue = 3
 
 
 
 
 _ok% = 0
 WHILE _ok% = 0
   DIALOG "AQREGISTER",req%
   IF req% = 2 THEN 
     kunr% = ADRSuche%(0)
     IF kunr% <> 0 THEN 
       SELECT KEY kunr% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
       Nachname$ = Nachname.ADRESSEN
       Vorname$ = Vorname.ADRESSEN
       Stra·e$ = Stra·e.ADRESSEN
       Ort$ = PLZ.ADRESSEN + " " + Ort.ADRESSEN
       tmpku% = CodeKU.ADRESSEN
     END IF 
   END IF 
   IF req% = 3 THEN 
     nachfolger% = PRJSuche%(0)
     IF nachfolger% <> 0 THEN 
       SELECT KEY nachfolger% FILE "project" INDEX codepr.project
       codeprdok% = nachfolger%
       Projektdok$ = LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
       prj11$ = LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
     END IF 
     REMOVE DIALOG "AQREGISTER"
     GOTO dokt140420002
   END IF 
   IF req% = 0 THEN _ok% = 2
   IF req% = 1 THEN _ok% = 1
 WEND 
 REMOVE DIALOG "AQREGISTER"
 IF _ok% = 1 THEN 
   REM FILE GAkquiDat$
   REM BLANK 
   REM cuaq% = SER (GAkquiDat$,1)
   REM codeaq.GAkquiDat$ = cuaq%
   REM codeKU.GAkquiDat$ = tmpku%
   codeak% = VAL ( MID$ (Aktion$, LEN (Aktion$) - 6,6))
   codema% = VAL ( MID$ (MANachname$, LEN (MANachname$) - 6,6))
   CodeAK.GAkquiDat$ = VAL ( MID$ (Aktion$, LEN (Aktion$) - 6,6))
   CodeMA.GAkquiDat$ = VAL ( MID$ (MANachname$, LEN (MANachname$) - 6,6))
   REM SELECT KEY tmpku% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
   nachname.GAkquiDat$ = nachname.adressen
   REM Wertung.GAkquiDat$ = 0
   IF VAL (Datum$) > 0 THEN Datum.GAkquiDat$ = Datum$
   IF VAL (dauer$) > 0 THEN dauer.GAkquiDat$ = VAL (dauer$)
   IF VAL (zeit$) > 0 THEN Uhrzeit.GAkquiDat$ = zeit$
   REM CodeDOK.GAkquiDat$ = 0
   IF VAL (VTermin$) > 0 THEN ErDatum.GAkquiDat$ = VTermin$
   IF VAL (VZeit$) > 0 THEN ErZeit.GAkquiDat$ = VZeit$
   SELECT KEY codema.GAkquiDat$ FILE "supervis" INDEX codema.supervis
   Bearbeiter.GAkquiDat$ = nachname.supervis
     codepr.GAkquiDat$ = codeprdok%
     projekt.GAkquiDat$ = projektdok$
     codeprdok% = 0
     projektdok$ = ""
   notiz.GAkquiDat$ = rnotiz$
   Ergebnis.GAkquiDat$ = RErgebnis$
   IF VAL (Termin$) > 0 THEN termin.GAkquiDat$ = Termin$
   erledigt_Termin.GAkquiDat$ = Terminerl$
   CALL FStore(GAkquiDat$)
 END IF 
 FILE cfile$
 ON ERROR GOTO ErrorHandler
 MOUSE ON 
 END SUB 
 

     
     
SUB ScanDok(codeku%)
 IF codeku% = 0 THEN knr% = 0
 REM CALL Fehler("Dokument einscannen","")
 MOUSE OFF 
    expodir$ = GMACodeDir$ + "SCAN"
    ON ERROR GOTO e070720081
    MAKE DIRECTORY expodir$
    GOTO e070720082
e070720081: 
    f% = - 1
e070720082: 
    expodir$ = GMACodeDir$ + "SCAN\"
    ON ERROR GOTO e070720083
       REM IF EXISTS (expodir$ + "outlook.xml") THEN 
         DELETE expodir$ + "\scan.pdf"
         REM DELETE expodir$ + "\scan.bat"
       REM END IF 
e070720083: 
       ON ERROR GOTO e070720084
       DELETE expodir$ + "\fertig"
e070720084: 
       ON ERROR GOTO ErrorHandler 
       datexe$ = GMACodeDir$ + "SCAN\CODieScan.exe"
       a% = CALL ("_SBFileExists",datexe$)
       IF a% <> - 1 THEN 
         von$ = _netpath$ + "LOCAL\CODieScan.exe"
         nach$ = GMACodeDir$ + "SCAN\CODieScan.exe"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\EZCurl.dll"
         nach$ = GMACodeDir$ + "SCAN\EZCurl.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\EZDcx.dll"
         nach$ = GMACodeDir$ + "SCAN\EZDcx.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\EZGif.dll"
         nach$ = GMACodeDir$ + "SCAN\EZGif.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\EZJpeg.dll"
         nach$ = GMACodeDir$ + "SCAN\EZJpeg.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\EZOcr.dll"
         nach$ = GMACodeDir$ + "SCAN\EZOcr.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\EZPdf.dll"
         nach$ = GMACodeDir$ + "SCAN\EZPdf.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\EZPng.dll"
         nach$ = GMACodeDir$ + "SCAN\EZPng.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\EZSymbol.dll"
         nach$ = GMACodeDir$ + "SCAN\EZSymbol.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\EZTiff.dll"
         nach$ = GMACodeDir$ + "SCAN\EZTiff.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\Eztwain3.dll"
         nach$ = GMACodeDir$ + "SCAN\Eztwain3.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\CODie.ClassBase.dll"
         nach$ = GMACodeDir$ + "SCAN\CODie.ClassBase.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\CODie.Lib.CompanyLicence.dll"
         nach$ = GMACodeDir$ + "SCAN\CODie.Lib.CompanyLicence.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\CODie.Lib.Crypto.dll"
         nach$ = GMACodeDir$ + "SCAN\CODie.Lib.Crypto.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\CODie.Lib.Licence.dll"
         nach$ = GMACodeDir$ + "SCAN\CODie.Lib.Licence.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\CODieFunc.dll"
         nach$ = GMACodeDir$ + "SCAN\CODieFunc.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
       END IF 
       IF EXISTS (GMACodeDir$ + "SCAN\scan.bat") THEN DELETE GMACodeDir$ + "SCAN\scan.bat"
       OPEN GMACodeDir$ + "SCAN\scan.bat" FOR APPEND 
       ? "echo OFF"
       ? GMACodeDir$ + "SCAN\CODieScan.exe " + expodir$ + "scan"
       ? 
       CLOSE OUTPUT 
       CALL (GMACodeDir$ + "SCAN\scan.bat"),0
w090720081: 
     zz% = 0
     WHILE NOT EXISTS (expodir$ + "fertig")
       zz% = zz% + 1
       MOUSE OFF 
       WAIT FOR 1
       IF zz% = 60 THEN 
         CALL Fehler("Der Scannvorgang scheint noch nicht beendet zu sein!","")
         REQUEST "Mîchten Sie weitere 60 Sekunden warten?","",130,req%
         IF req% = 1 THEN 
           GOTO w090720081
         ELSE 
           GOTO w090720082
         END IF 
       END IF 
     WEND 
     IF EXISTS (expodir$ + "fertig") THEN 
     REM *******************************************************************************
dokprj20080616:   
     IF prj11$ = "" THEN prj11$ = "Projekt"
     Auswahl$ = "allgemeine Schreiben"
 
     CREATE DIALOG "DOKNEU",0,0,253,177,title$,"MS Sans Serif",8
     ADD DIALOG "DOKNEU",4,0,0,253,153,0,""
     ADD DIALOG "DOKNEU",9,6,14,20,21,2
     ADD DIALOG "DOKNEU",5,30,10,205,10,0,"Bitte geben Sie fÅr das neue Dokument eine Bezeichnung ein."
     ADD DIALOG "DOKNEU",5,30,20,134,10,0,"(diese kann bis zu 60 Zeichen enthalten)"
     ADD DIALOG "DOKNEU",5,30,35,214,10,0,"Bei Bedarf kînnen Sie auch die Zuordnung zu einer Dokumenten-"
     ADD DIALOG "DOKNEU",5,30,45,53,10,0,"gruppe Ñndern."
     ADD DIALOG "DOKNEU",5,30,94,79,10,0,"&Bezeichnung"
     ADD DIALOG "DOKNEU",6,30,104,208,12,0,0,dokname$,60
     ADD DIALOG "DOKNEU",5,30,64,65,8,0,"&Gruppe"
     ADD DIALOG "DOKNEU",8,30,73,140,218,259,2,Auswahl$,DOKGruppen$
     ADD DIALOG "DOKNEU",1,30,127,208,15,1,prj11$,2,1
     ADD DIALOG "DOKNEU",1,75,157,50,15,1,"&OK",1,1
     ADD DIALOG "DOKNEU",1,130,157,50,15,0,"&Abbrechen",0,0
     DIALOG "DOKNEU",req%
     REMOVE DIALOG "DOKNEU"
     IF req% > 0 THEN Gruppe$ = Auswahl$
     IF req% = 2 THEN 
      nachfolger% = PRJSuche%(0)
      IF nachfolger% <> 0 THEN 
        SELECT KEY nachfolger% FILE "project" INDEX codepr.project
        codeprdok% = nachfolger%
        Projektdok$ = LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
        prj11$ = LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
      END IF 
       GOTO dokprj20080616
     END IF 
     IF req% = 1 THEN 
       REM docpath$ = LEFT$ (_netpath$,2) + ReadConfig$("DOKUMENTE",Gruppe$)
       docpath$ = GetDocPath$(Gruppe$)
       IF RIGHT$ (docpath$,1) <> "\" THEN docpath$ = docpath$ + "\"
       MOUSE OFF 
       SET STATUS "Dokument wird importiert..."
       afo$ = FORM 
       BLANK FILE "dokument"
       CodeDOK.dokument = SER ("dokument",1)
       cudok% = CodeDOK.dokument
       GCodeDok% = cudok%
       REM codeErs.dokument = GMACodema%
       Creator.dokument = GMAName$
       IF dokname$ <> "" THEN 
         dokument.dokument = dokname$
       ELSE 
         dokument.dokument = textvorlage$
       END IF 
       IF codeprdok% > 0 THEN 
         codepr.dokument = codeprdok%
         Projekt.dokument = Projektdok$
       END IF 
       erstellt_am.dokument = TODAY 
       letzte_Bearbeit.dokument = TODAY 
       CodeMA.dokument = vcodema%
       SELECT KEY codema.dokument FILE "supervis" INDEX codema.supervis
       Bearbeiter.dokument = nachname.supervis
       docpath$ = GetDocPath$(Auswahl$)
       textdatei$ = docpath$ + LTRIM$ ( STR$ (CodeDOK.dokument,"99999999")) + ".pdf"
       Dateiname.dokument = textdatei$
       Gruppe.dokument = Auswahl$
       link.dokument = 0
       IF UCASE$ ( FORM ) <> "DOKEPRJ" THEN 
         codeku.dokument = knr%
         link.DOKUMENT = CodeKU.DOKUMENT
       END IF 
       CALL QuickStore("DOKUMENT")
       IF Gcodie% = - 1 THEN 
         von$ = GMACodeDir$ + "SCAN\scan.pdf"
         nach$ = _netpath$ + textdatei$
         a% = CALL ("_SBFileCopy",von$,nach$)
       ELSE 
         COPY textvorlage$,_netpath$ + textdatei$
       END IF 
       REM**************************************************************************     
       textdatei$ = _netpath$ + Dateiname.dokument
       a% = CALL ("_SBFileExists",textdatei$)
       IF a% = - 1 THEN 
         REM IF EXISTS (textdatei$) THEN 
         REM CALL QuickStore("dokument")
         REM CALL Fehler("test","")
         REM i% = CALL ("ShellExecute",0,"open",textdatei$,"","",1)
         CALL TextAnz(textdatei$)
         REM CALL (textdatei$)
       END IF 
       IF knr% = 0 THEN GOTO w130820081
       IF UCASE$ ( FORM ) <> "DOKEPRJ" THEN 
         IF GTerminfrage% <> - 1 THEN 
           REQUEST "Eintrag in Termindatei vornehmen?","",130,raa%
         ELSE 
           raa% = 1
         END IF 
         IF raa% = 1 THEN CALL ADRDokRegister(CodeDOK.dokument)
       END IF 
w130820081:       
       IF Gdokloevor$ LIKE "TRUE" THEN a% = CALL ("_SBFileDelete2",iniPath$)
     END IF 
     REM *******************************************************************************
     END IF 
w090720082: 
 ON ERROR GOTO ErrorHandler
 END SUB 




 REM ********************************************************************************************************************
SUB LizProbe(codeku%)
  CALL Fehler("LizProbe","")
 SELECT FIRST FILE "adressen" INDEX codeku.adressen
 SELECT KEY codeku% LOCK FILE "adressen" INDEX codeku.adressen
 IF LizenzNotiz.adressen = "" THEN 
   CALL Fehler("Lizenzprobe kann nur gemacht werden, wenn das Feld verschlÅsselter Lizenzcode nicht leer ist!","")
   GOTO elp230120083
 END IF 
 
elp230120083: 
 END SUB 
 
 
 
SUB LizenzGenDemo()
 CALL Fehler("DEMO-LizenzGenerate","")
 REM CALL FldAdd("Lizenzfirma","TXT;100",0)
 REM CALL FldAdd("LizenzName","TXT;100",0)
 REM CALL FldAdd("LizDatBis","DAT;0d.mm.yyyy",0)
 REM CALL FldAdd("LizenzNotiz","TXT;400 R",0)
 pw$ = "london8474"
 decfirma$ = "DEMO Firma"
 decname$ = "Demo User"
 decdatum% = TODAY + 30
 decdatum$ = DATE$ (decdatum%,"0d.mm.yyyy")
 
 GLizFirma$ = decfirma$
 GLizName$ = decname$
 Gpdemende$ = decdatum$
 
 ap$ = LTRIM$ ( STR$ ( FN sys(5),"999"))
 aa% = CALL ("_EncryptString",decfirma$,encfirma1$,pw$)
 a1% = CALL ("_GetStringHash",encfirma1$,pw$,hash1$)
 aa% = CALL ("_EncryptString",decname$,encname1$,pw$)
 a1% = CALL ("_GetStringHash",encname1$,pw$,hash2$)
 aa% = CALL ("_EncryptString",decdatum$,encdatum1$,pw$)
 a1% = CALL ("_GetStringHash",encdatum1$,pw$,hash3$)
 aa% = CALL ("_EncryptString",ap$,encap1$,pw$)
 a1% = CALL ("_GetStringHash",encap1$,pw$,hash4$)
 REM GOTO al230120082
 DIRECTORY _netpath$
 IF EXISTS (_netpath$ + "sbcode30.DLL") THEN DELETE _netpaht$ + "sbcode30.DLL"
 OPEN _netpath$ + "sbcode30.DLL" FOR OUTPUT 
 ? encfirma1$
 ? hash1$
 ? encname1$
 ? hash2$
 ? encdatum1$
 ? hash3$
 ? encap1$
 ? hash4$
 CLOSE OUTPUT 
al230120082: 
 SELECT FIRST LOCK FILE "config"
 QWoNo.config = encdatum1$
 MAName.config = encfirma1$
 MATimeStamp1.config = encap1$
 STORE FILE "config"
eliz230120081: 
 FORM 
 END SUB 
 
 
 
SUB LizenzNeu()
 REM EncryptString(const char* decText, char* encText, char* pwd);
 REM DecryptString(const char * encText,char * decText,char * pwd); 
 REM aa% = CALL ("_EncryptToFile",dokorig$,dokZiel$,passw$,0)
 REM decfirma$ = "CODie software products e.K."
 pw$ = "london8474"
 DIRECTORY _netpath$
 datei1$ = _netpath$ + "sbcode30.dll"
 OPEN datei1$ FOR INPUT 
 i% = 0
 WHILE i% < 8
   SELECT CASE i%
   CASE 0
     INPUT LINE firma1$
   CASE 1
     INPUT LINE firmahash$
   CASE 2
     INPUT LINE name1$
   CASE 3
     INPUT LINE namehash$
   CASE 4
     INPUT LINE datum1$
   CASE 5
     INPUT LINE datumhash$
   CASE 6
     INPUT LINE ap$
   CASE 7
     INPUT LINE aphash$
   END SELECT 
   i% = i% + 1
 WEND 
 CLOSE INPUT 
 a1% = CALL ("_GetStringHash",firma1$,pw$,hash1$)
 IF firmahash$ <> hash1$ AND firmahash$ <> "" THEN 
   CALL Fehler("Fehler beim Firmen-Hash Wert","")
 END IF 
 a1% = CALL ("_GetStringHash",name1$,pw$,hash1$)
 IF namehash$ <> hash1$ AND namehash$ <> "" THEN 
   CALL Fehler("Fehler beim Namen-Hash Wert","")
 END IF 
 a1% = CALL ("_GetStringHash",datum1$,pw$,hash1$)
 IF datumhash$ <> hash1$ AND datumhash$ <> "" THEN 
   CALL Fehler("Fehler beim Datum-Hash Wert","")
 END IF 
 a1% = CALL ("_GetStringHash",ap$,pw$,aphash$)
 IF aphash$ <> aphash$ AND aphash$ <> "" THEN 
   CALL Fehler("Fehler beim AP-Hash Wert","")
 END IF 
 REM Anzahl der AP aus Superbase.dll
 ap% = FN sys(5)
 anzap$ = LTRIM$ ( STR$ ( FN sys(5),"999"))
 aa% = CALL ("_DecryptString",firma1$,decfirma2$,pw$)
 aa% = CALL ("_DecryptString",name1$,decname2$,pw$)
 aa% = CALL ("_DecryptString",datum1$,decdatum2$,pw$)
 aa% = CALL ("_DecryptString",ap$,decap2$,pw$)
 GLizFirma$ = decfirma2$
 GLizName$ = decname2$
 Gpdemende$ = decdatum2$
 
 decap2% = VAL (decap2$)
 REM CALL Fehler(decfirma2$ + " --- " + decname2$ + " --- " + decdatum2$,"Anzahl AP:" + decap2$ + " aus DLL " + anzap$)
 decdatum2% = DAYS (decdatum2$)
 heute% = DAYS ( TODAY )
 
 SELECT FIRST FILE "config"
 REM QWoNo.config = encdatum1$
 REM MAName.config = encfirma1$
 REM MATimeStamp1.config = encap1$
 
 REM CALL Fehler("endliz070220081","")
 IF GCODieADR$ LIKE "TRUE" THEN GOTO endliz070220081
 
 fehl% = 0
 IF decdatum2% = 0 THEN 
   REM es wurde noch gar nichts eingetragen, jetzt alles setzen auf 30 Tage config.sbf beachten
   SELECT FIRST FILE "config"
   IF qwono.config = "" AND MAName.config = "" THEN 
     REM jungfreulich, also jetzt auf 30 Tage eintragen und die Anzahl der AP's aus der dll -> ap% = FN sys(5)
     CALL LizenzGenDemo()
     GOTO endliz070220081
   ELSE 
     REM Lizenzdatei wurde per Hand leer gemacht, also Versuch....
     CALL Fehler("Die Lizensierungsdatei ist offensichtlich beschÑdigt!","Bitte melden Sie sich bei der Firma CODie software products e.K.,www.codie.com,info@codie.com,um die Programmlizenz zu verlÑngern!")
     CALL LizMussNeu()
     GOTO endliz070220081
   END IF 
 ELSE 
   REM Datum prÅfen
   IF QWoNo.config <> datum1$ THEN 
     CALL Fehler("Liezensierungskonflikt beim Lizenzendedatum!","Bitte melden Sie sich bei der Firma CODie software products e.K.,www.codie.com,info@codie.com,um die Programmlizenz zu verlÑngern!")
     fehl% = - 1
   END IF 
   REM Firmennamen prÅfen, um zu verhinder das die Lizenzdatei ausgetauscht wurde
   IF MAName.config <> firma1$ THEN 
     CALL Fehler("Liezensierungskonflikt beim Firmennamen!","Bitte melden Sie sich bei der Firma CODie software products e.K.,www.codie.com,info@codie.com,um die Programmlizenz zu verlÑngern!")
     fehl% = - 1
   END IF 
   REM Anzahl der AP prÅfen
   IF ap% <> decap2% THEN 
     REM Anzahl der physischen AP<>der registrierten APs
     CALL Fehler("Liezensierungskonflikt A bei der Anzahl der ArbeitsplÑtze!","Bitte melden Sie sich bei der Firma CODie software products e.K.,www.codie.com,info@codie.com,um die Programmlizenz zu verlÑngern!")
     fehl% = - 1
   END IF 
   IF fehl% = - 1 THEN 
     CALL LizMussNeu()
   END IF 
 END IF 
 IF decdatum2% < heute% THEN 
   REM Software ist abgelaufen
   CALL Fehler("Die Probezeit des Programmes ist abgelaufen!","Bitte melden Sie sich bei der Firma CODie software products e.K.,www.codie.com,info@codie.com,um die Programmlizenz zu verlÑngern!")
   CALL LizMussNeu()
 END IF 
endliz070220081: 
 IF GLizFirma$ <> "" THEN 
   liz$ = "Registrierung fÅr Firma " + GLizFirma$ + "/" + GlizName$
 ELSE 
   liz$ = "DEMO Version "
 END IF 
 IF Gpdemende$ <> "" AND Gpdemende$ <> "31.12.2199" THEN liz$ = liz$ + "   -> das Programm lÑuft noch bis zum " + Gpdemende$
 Lizens$ = liz$
 FORM 
 END SUB 
 
 
SUB LizMussNeu()
   REM Software ist abgelaufen
   REMOVE DIALOG ALL 
   datei1$ = _netpath$ + "sbcode30.dll"
   inh$ = ""
   inhold$ = ""
   GTElDat$ = "TELEFON"
   nr$ = "Bitte geben Sie nachfolgend den Ihnen gesandten Registrierungscode ein:"
   CREATE DIALOG GTelDat$,0,0,443,253,"Registrierung","MS Sans Serif",8
   ADD DIALOG GTelDat$,5,5,6,56,10,0,"ACHTUNG:"
   ADD DIALOG GTelDat$,5,62,6,380,9,128,nr$
   ADD DIALOG GTelDat$,6,5,32,430,200,4,3,inh$,400
   ADD DIALOG GTelDat$,1,130,235,55,15,1,"&Speichern",1,1
   ADD DIALOG GTelDat$,1,190,235,55,15,0,"&Abbruch",0,0
   SET EDIT SELECT OFF 
   DIALOG GTelDat$,req%
   REM SET EDIT SELECT OFF 
   REMOVE DIALOG ALL 
   IF inh$ <> inhold$ THEN 
     REQUEST "Soll der Registrierungscode jetzt gespeichert werden?","",130,req%
     IF req% = 1 THEN 
       OPEN datei1$ FOR OUTPUT 
       ? inh$
       CLOSE OUTPUT 
       REQUEST "Die Registrierungsdaten wurden gespeichert!","",2
     END IF 
     OPEN datei1$ FOR INPUT 
     i% = 0
     WHILE i% < 8
       SELECT CASE i%
       CASE 0
         INPUT LINE firma1$
       CASE 1
         INPUT LINE firmahash$
       CASE 2
         INPUT LINE name1$
       CASE 3
         INPUT LINE namehash$
       CASE 4
         INPUT LINE datum1$
       CASE 5
         INPUT LINE datumhash$
       CASE 6
         INPUT LINE ap$
       CASE 7
         INPUT LINE aphash$
       END SELECT 
       i% = i% + 1
     WEND 
     CLOSE INPUT 
     SELECT FIRST LOCK FILE "config"
     QWoNo.config = datum1$
     MAName.config = firma1$
     MATimeStamp1.config = ap$
     STORE FILE "config"
   END IF 
   CALL EXIT()
 END SUB 
 
 
 '      *********************************************************
 '      ** Routinen fÅr Formular "lokale Rechnereinstellungen" **
 '      *********************************************************
 
SUB LokalSetup()
 
 cuvc% = Codema.supervis
 CALL DFile(2,"access" + _fpw$)
 CALL DFile(2,"accode" + _fpw$)
 _formend% = 0
 SET STATUS "Bereit"
 ON ERROR GOTO ErrorHandler 
 maske$ = "LOKSETUP"
 IF GASP% THEN 
   maske$ = "LOKSETUP"
 END IF 
 IF GCodieADR$ LIKE "TRUE" THEN 
   maske$ = "LOKSETU0"
 END IF 
 WHILE _formend% = 0
   SUPERVISsub% = 0
   REM IF FORM <> maske$ THEN 
     SET HEADING title$ + " - lokale Rechnereinstellungen"
     OPEN FORM GOFFForm$ + maske$
     SET f = Superbase.Form
     SET STATUS "lokale Rechnereinstellungen"
     matagester$ = UCASE$ (ReadINI$("SYSTEM","MitarbeiterTagestermine"))
     AutoKeywo$ = UCASE$ (ReadINI$("SYSTEM","AutoKeyword"))
     vScanDir$ = UCASE$ (ReadINI$("SYSTEM","ScanUndImportVerzeichnis"))
     AutoAnred$ = UCASE$ (ReadINI$("SYSTEM","AutoAnrede"))
     AutoTite$ = UCASE$ (ReadINI$("SYSTEM","AutoTitel"))
     AutoBeru$ = UCASE$ (ReadINI$("SYSTEM","AutoBeruf"))
     AutoHobby$ = UCASE$ (ReadINI$("SYSTEM","AutoHobbys"))
     AutoOrt1$ = UCASE$ (ReadINI$("SYSTEM","AutoOrt"))
     AutoPLZ1$ = UCASE$ (ReadINI$("SYSTEM","AutoPLZ"))
     AutoLand1$ = UCASE$ (ReadINI$("SYSTEM","AutoLand"))
     AutoFifo$ = UCASE$ (ReadINI$("SYSTEM","AutoFirmenformForm"))
     AutoFamst$ = UCASE$ (ReadINI$("SYSTEM","AutoFamilienStand"))
     AutoAnst$ = UCASE$ (ReadINI$("SYSTEM","AutoAnstellungsverh"))
     VistaF$ = UCASE$ (ReadINI$("SYSTEM","MSVista"))
     AutoNation1$ = UCASE$ (ReadINI$("SYSTEM","AutoNational"))
     AutoStaat1$ = UCASE$ (ReadINI$("SYSTEM","AutoStaat"))
     AutoErgA$ = ReadINI$("SYSTEM","ERGDATUMAUTOMAT")
     Wordend$ = ReadINI$("SYSTEM","WPSuffix")
     Textverarb$ = ReadINI$("SYSTEM","WordProc")
     NewSear$ = UCASE$ (ReadINI$("SYSTEM","NewSearch"))
     WiwoAnsi$ = UCASE$ (ReadINI$("SYSTEM","WinWordAnsi"))
     Aufloesung$ = UCASE$ (ReadINI$("SYSTEM","Bildschirmaufloesung"))
     AutoKArt1F$ = UCASE$ (ReadINI$("SYSTEM","AutoTelefonart1"))
     AutoKArt2F$ = UCASE$ (ReadINI$("SYSTEM","AutoTelefonart2"))
     AutoDokTer$ = UCASE$ (ReadINI$("SYSTEM","AutoDokTer"))
     dokloevor$ = UCASE$ (ReadINI$("SYSTEM","dokloevor"))
     Gpostanschrae$ = UCASE$ (ReadINI$("SYSTEM","PostAnschrAend"))
     postanschraen$ = Gpostanschrae$
     CALL MNProgramm()
     FORM 
   REM END IF 
   MENU ON 
   MOUSE ON 
   FILE "supervis"
   INDEX codema.supervis
   SELECT FIRST FILE "supervis" INDEX codema.supervis
   SELECT KEY GMACodeMA% LOCK FILE "supervis" INDEX codema.supervis
   FORM 
   ON ERROR GOTO ErrorHandler
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL SVPrev()
   CASE CrsRight%,PgDn%
     CALL SVNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   CALL ClearKBDBuffer()
   SELECT CASE SUPERVISsub%
   CASE 1
     REQUEST "Datei auswÑhlen","",26,req%,textvorlage$
     IF textvorlage$ <> "" AND req% = 1 THEN 
       emailatt1.supervis = textvorlage$
       STORE FILE "supervis"
       SELECT FIRST FILE "supervis" INDEX codema.supervis
       SELECT KEY GMACodeMA% LOCK FILE "supervis" INDEX codema.supervis
     END IF 
     FORM 
   CASE 2
   CASE 99
   END SELECT 
 WEND 
 _formend% = 0
 END SUB 
 
SUB SaveLocSet()
 IF MOD ("supervis") THEN STORE FILE "supervis"
 MATagest$ = matagester$
 AutoKeyword$ = AutoKeywo$
 AutoAnrede$ = AutoAnred$
 AutoTitel$ = AutoTite$
 AutoBeruf$ = AutoBeru$
 AutoHobbys$ = AutoHobby$
 AutoOrt$ = AutoOrt1$
 AutoPLZ$ = AutoPLZ1$
 AutoLand$ = AutoLand1$
 AutoFiForm$ = AutoFifo$
 AutoFStand$ = AutoFamst$
 AutoAnstell$ = AutoAnst$
 AutoNational$ = AutoNation1$
 AutoStaat$ = AutoStaat1$
 ergdatuma$ = AutoErgA$
 _WPSuffix$ = Wordend$
 AutoKArt1$ = AutoKArt1F$
 AutoKArt2$ = AutoKArt2F$
 Vista$ = VistaF$
 GCODie$ = NewSear$
 GScanDir$ = vScanDir$
 Gpostanschrae$ = postanschraen$
 IF AutoDokTer$ LIKE "TRUE" THEN 
   GTerminfrage% = - 1
   CALL WriteINI("SYSTEM","AutoDokTer",AutoDokTer$)
 ELSE 
   GTerminfrage% = 0
   CALL WriteINI("SYSTEM","AutoDokTer",AutoDokTer$)
 END IF 
 Gdokloevor$ = dokloevor$
 CALL WriteINI("SYSTEM","PostAnschrAend",postanschraen$)
 CALL WriteINI("SYSTEM","dokloevor",dokloevor$)
 CALL WriteINI("SYSTEM","ScanUndImportVerzeichnis",vScanDir$)
 CALL WriteINI("SYSTEM","MitarbeiterTagestermine",matagester$)
 CALL WriteINI("SYSTEM","AutoKeyword",AutoKeywo$)
 CALL WriteINI("SYSTEM","AutoAnrede",AutoAnred$)
 CALL WriteINI("SYSTEM","AutoTitel",AutoTitel$)
 CALL WriteINI("SYSTEM","AutoBeruf",AutoBeru$)
 CALL WriteINI("SYSTEM","AutoHobbys",AutoHobby$)
 CALL WriteINI("SYSTEM","AutoOrt",AutoOrt1$)
 CALL WriteINI("SYSTEM","AutoPLZ",AutoPLZ1$)
 CALL WriteINI("SYSTEM","AutoLand",AutoLand1$)
 CALL WriteINI("SYSTEM","AutoFirmenformForm",AutoFifo$)
 CALL WriteINI("SYSTEM","AutoFamilienStand",AutoFamst$)
 CALL WriteINI("SYSTEM","AutoAnstellungsverh",AutoAnst$)
 CALL WriteINI("SYSTEM","MSVista",Vista$)
 CALL WriteINI("SYSTEM","AutoNational",AutoNation1$)
 CALL WriteINI("SYSTEM","AutoStaat",AutoStaat1$)
 CALL WriteINI("SYSTEM","ERGDATUMAUTOMAT",AutoErgA$)
 CALL WriteINI("SYSTEM","WPSuffix",Wordend$)
 CALL WriteINI("SYSTEM","WordProc",Textverarb$)
 CALL WriteINI("SYSTEM","NewSearch",NewSear$)
 CALL WriteINI("SYSTEM","WinWordAnsi",WiwoAnsi$)
 CALL WriteINI("SYSTEM","Bildschirmaufloesung",Aufloesung$)
 CALL WriteINI("SYSTEM","AutoTelefonart1",AutoKArt1$)
 CALL WriteINI("SYSTEM","AutoTelefonart2",AutoKArt2$)
 CALL Fehler("Zur Aktivierung der neuen Einstellungen mÅssen Sie das Programm neu starten!","")
 REQUEST "Mîchten Sie das Programm jetzt beenden?","",130,req%
 IF req% = 1 THEN 
   CALL EXIT()
 END IF 
 END SUB 
 
 
 
 
 
FUNCTION CopyRecord%(source$,dest$)
    cfile$ = FILE 
    'Kopiert alle gemeinsamen Felder von Datei _source$ nach Datei _dest$    
    oldErrorLabel$ = Superbase.ErrorTrapLabel
    ON ERROR GOTO CopyRecordError
    CopyRecord% = 0
  
    'Feldnamen der Quelldatei ermitteln  
    FILE source$
    fieldno% = FILEINFO (source$,1)
    DIM sourceNames$(fieldno%)
    FILLARRAY sourceNames$,1
    FOR i%% = 0 TO fieldno% - 1
      sourceNames$(i%%) = UCASE$ (sourceNames$(i%%))
    NEXT i%%
    DIM sourceSet AS Set 
    REDIM sourceNames$(fieldno% - 1)
    sourceSet.AddArray("sourceNames$")
    
    
    'Feldnamen der Zieldatei ermitteln  
    FILE dest$
    fieldno% = FILEINFO (dest$,1)
    DIM destNames$(fieldno%)
    FILLARRAY destNames$,1
    FOR i%% = 0 TO fieldno% - 1
      destNames$(i%%) = UCASE$ (destNames$(i%%))
    NEXT i%%
 
    DIM destSet AS Set
    REDIM destNames$(fieldno% - 1)
    destSet.AddArray("destNames$")
    
    destSet.Intersect(sourceSet)
 
    fieldno% = destSet.Elements.Count'Grî·e der Schnittmenge der Felder
    DIM copyNames$(fieldno% - 1)
    FOR i%% = 1 TO fieldno%
        copyNames$(i%% - 1) = destSet.Elements(i%%)
    NEXT i%%
     
    'das Zeug reinklatschen ...    
    FOR j% = 0 TO fieldno% - 1
        ON ERROR GOTO CopyRecordErr1 
        destfield$ = copyNames$(j%) + "." + dest$
        sourcefield$ = copyNames$(j%) + "." + source$
        destfield$$ = sourcefield$$
 
        'alles io
        GOTO CopyRecordNext
        
CopyRecordErr1: 
        IF jaDebug% = - 1 THEN CALL Fehler("Fehler in CopyRecord()","Ziel = " + destfield$ + "  Quelle = " + sourcefield$)
        GOTO CopyRecordNext
 
CopyRecordNext: 
        ON ERROR GOTO CopyRecordError
    NEXT j%
    
    'alles io
    CopyRecord% = - 1
    GOTO CopyRecordEnde
     
CopyRecordError: 
 'irgend etwas ist grundsÑtzlich schief gelaufen
  CALL Fehler("Fehler in CopyRecord: " + datei$, STR$ ( ERRNO ,"z") + ": " + ERR$ ( ERRNO ))
  GOTO CopyRecordEnde
 
CopyRecordEnde: 
    Superbase.ErrorTrapLabel = oldErrorLabel$
    FILE cfile$
 END FUNCTION 
 '***********************************************************************************************
 
 
 
 '***********************************************************************************************
 
 
 
FUNCTION VSNRPack$(VSNR$)
 tVSNR$ = ""
 FOR a% = 1 TO LEN (VSNR$)
   tC$ = UCASE$ ( MID$ (VSNR$,a%,1))
   IF tC$ = "·" THEN tC$ = "SS"
         x% = ASC ( LEFT$ ( UCASE$ (tC$),1))
         SELECT CASE x%
           CASE 142
             tC$ = "AE"
           CASE 153
             tC$ = "OE"
           CASE 154
             tC$ = "UE"
         END SELECT 
   SELECT CASE tC$
   CASE "A" TO "Z","0" TO "9"
     tVSNR$ = tVSNR$ + tC$
   END SELECT 
 NEXT a%
 VSNRPack$ = tVSNR$
 END FUNCTION 


FUNCTION VSNRPackGK$(Betreff$)
 tVSNR$ = ""
 vsnr$ = Betreff$
 FOR a% = 1 TO LEN (VSNR$)
   tC$ = MID$ (VSNR$,a%,1)
   REM IF tC$ = "·" THEN tC$ = "ss"
         x% = ASC ( LEFT$ (tC$,1))
         SELECT CASE x%
           CASE 225
             tC$ = "ss"
           CASE 129
             tC$ = "ue"
           CASE 132
             tC$ = "ae"
           CASE 148
             tC$ = "oe"
           CASE 142
             tC$ = "AE"
           CASE 153
             tC$ = "OE"
           CASE 154
             tC$ = "UE"
         END SELECT 
     tVSNR$ = tVSNR$ + tC$
 NEXT a%
 VSNRPackGK$ = tVSNR$
 END FUNCTION 
 
 
  
  
SUB INITStamm()
 REM CALL Fehler("","")
 CALL CopySearch()
 verleihadr$ = verleih.stamm
 Nummernkreise$ = Nummernkreise.stamm
 Debitorkto$ = debitorkonto.stamm
 Bestandskto$ = Bestandskonto.stamm
 Warenausgkto$ = Warenausgkto.stamm
 BestfÅhr$ = BestandsfÅhrung.stamm
 Bestrechnung$ = Bestandsrechnun.stamm
 Provrechnung$ = Provrechnung.stamm
 _mwst% = mwst.stamm
 TerminVorlage% = TerminVorlage.stamm
 GlerKopfSeite% = LeerKopfSeite.stamm
 _kalkart$ = KalkSchemaNet.stamm
 END SUB 
 
SUB FillStamm()
 SELECT FIRST LOCK FILE "Stamm"
 VerleihAdr$ = UCASE$ (ReadConfig$("FACTURA","Verleih"))
 IF VerleihAdr$ LIKE "TRUE" THEN 
   IF verleih.stamm = "" THEN verleih.stamm = "j"
 ELSE 
   IF verleih.stamm = "" THEN verleih.stamm = "n"
 END IF 
 BestellmitVK$ = UCASE$ (ReadConfig$("FACTURA","BESTELLUNGMITVK"))
 IF BestellmitVK$ LIKE "TRUE" THEN 
   IF BestMitVK.stamm = "" THEN BestMitVK.stamm = "j"
 ELSE 
   IF BestMitVK.stamm = "" THEN BestMitVK.stamm = "n"
 END IF 
 _kalkart$ = UCASE$ (ReadConfig$("FACTURA","Kalkulationsschema"))
 IF KalkSchemaNet.stamm = "" THEN KalkSchemaNet.stamm = UCASE$ (_kalkart$)
 Nummernkreise$ = UCASE$ (ReadConfig$("FACTURA","Nummernkreise"))
 IF Nummernkreise$ LIKE "TRUE" THEN 
   IF Nummernkreise.stamm = "" THEN Nummernkreise.stamm = "j"
 ELSE 
   IF Nummernkreise.stamm = "" THEN Nummernkreise.stamm = "n"
 END IF 
 
 Debitorkto$ = ReadConfig$("FACTURA","StandardDebitorKonto")
 IF debitorkonto.stamm = "" THEN debitorkonto.stamm = Debitorkto$
 Bestandskto$ = ReadConfig$("FACTURA","StandardBestandsKonto")
 IF Bestandskonto.stamm = "" THEN Bestandskonto.stamm = Bestandskto$
 Warenausgkto$ = ReadConfig$("FACTURA","StandardWarenausgKto")
 IF Warenausgkto.stamm = "" THEN Warenausgkto.stamm = Warenausgkto$
 BestfÅhr$ = UCASE$ (ReadConfig$("FACTURA","Bestandsfuehrung"))
 IF BestandsfÅhrung.stamm = "" THEN 
   IF BestfÅhr$ LIKE "TRUE" THEN 
     BestandsfÅhrung.stamm = "j"
   ELSE 
     BestandsfÅhrung.stamm = "n"
   END IF 
 END IF 
 Bestrechnung$ = UCASE$ (ReadConfig$("FACTURA","Bestandsrechnung"))
 IF Bestandsrechnun.stamm = "" THEN 
   Bestandsrechnun.stamm = Bestrechnung$
 END IF 
 Provrechnung$ = UCASE$ (ReadConfig$("FACTURA","Provisionsrechnung"))
 IF Provrechnung.stamm = "" THEN 
   Provrechnung.stamm = Provrechnung$
 END IF 
 _mwst% = mwst.stamm
 IF mwst.stamm < 0.1 THEN 
   mwst.stamm = _mwst%
 END IF 
 ArtiAutoNum$ = UCASE$ (ReadConfig$("FACTURA","ArtikelAutoNum"))
 IF ArtiAutoNum.stamm = "" THEN 
  IF ArtiAutoNum$ LIKE "TRUE" THEN 
    ArtiAutoNum.stamm = "j"
  ELSE 
    ArtiAutoNum.stamm = "n"
  END IF 
 END IF 
 NUMBASE "999999999999."
 nnum% = VAL (ReadConfig$("NUMMERN","LASTKundennummer"))
 IF LastKunr.stamm < nnum% THEN LastKunr.stamm = nnum%
 nnum% = VAL (ReadConfig$("NUMMERN","LASTProjektnummer"))
 IF LASTProjekt.stamm < 1 THEN 
   LASTProjekt.stamm = nnum%
   IF LASTProjekt.stamm < 1 THEN LASTProjekt.stamm = 1
 END IF 
 nnum% = VAL (ReadConfig$("FACTURA","LASTArtikelnummer"))
 IF LASTArtikeln.stamm < 1 THEN 
   LASTArtikeln.stamm = nnum%
   IF LASTArtikeln.stamm < 1 THEN 
     LASTArtikeln.stamm = 1
   END IF 
 END IF 
 GlervorAdr% = VAL (ReadConfig$("FACTURA","LeerzeilenVorAdresse"))
 IF LeerVorADR.stamm < 1 THEN LeerVorADR.stamm = GlervorAdr%
 GlernachAdr% = VAL (ReadConfig$("FACTURA","LeerzeilenNachAdresse"))
 IF LeernachADR.stamm < 1 THEN LeernachADR.stamm = GlernachAdr%
 TerminVorlage% = VAL (ReadConfig$("FACTURA","TerminVorlage"))
 IF TerminVorlage.stamm < 1 THEN 
   TerminVorlage.stamm = TerminVorlage%
   IF TerminVorlage.stamm < 1 THEN TerminVorlage.stamm = 14
 END IF 
 GlerKopfSeite% = VAL (ReadConfig$("FACTURA","LeerzeilenSeitenKopf"))
 IF LeerKopfSeite.stamm < 1 THEN 
   LeerKopfSeite.stamm = GlerKopfSeite%
 END IF 
 nnum% = VAL (ReadConfig$("FACTURA","RABelegnr"))
 IF RABelegnr.stamm < 1 THEN 
   RABelegnr.stamm = nnum%
 END IF 
 nnum% = VAL (ReadConfig$("FACTURA","REBelegnr"))
 IF REBelegnr.stamm < 1 THEN 
   REBelegnr.stamm = nnum%
 END IF 
 nnum% = VAL ( LTRIM$ (ReadConfig$("FACTURA","LASTAngebot")))
 IF LASTANGEBOT.stamm < 1 THEN 
   LASTANGEBOT.stamm = nnum%
 END IF 
 nnum% = VAL (ReadConfig$("FACTURA","LASTRechnung"))
 IF LASTRechnung.stamm < 1 THEN 
   LASTRechnung.stamm = nnum%
 END IF 
 nnum% = VAL (ReadConfig$("FACTURA","LASTLieferschein"))
 IF LASTLieferschei.stamm < 1 THEN 
   LASTLieferschei.stamm = nnum%
 END IF 
 nnum% = VAL (ReadConfig$("FACTURA","LASTAuftrag"))
 IF LASTAuftrag.stamm < 1 THEN 
   LASTAuftrag.stamm = nnum%
 END IF 
 nnum% = VAL (ReadConfig$("FACTURA","LASTBestellung"))
 IF LASTBestellung.stamm < 1 THEN 
   LASTBestellung.stamm = nnum%
 END IF 
 nnum% = VAL (ReadConfig$("FACTURA","LASTGutschrift"))
 IF LASTGutschrift.stamm < 1 THEN 
   LASTGutschrift.stamm = nnum%
 END IF 
 NUMBASE "z99999999.999999"
 
 wleernachPro% = VAL (ReadConfig$("FACTURA","WLeerzeilennachProlog"))
 IF WLeerNachProlog.stamm < 1 THEN WLeerNachProlog.stamm = wleernachPro%
 IF WLeerNachProlog.stamm < 1 THEN WLeerNachProlog
 wleernachKu% = VAL (ReadConfig$("FACTURA","WLeerzeilennachKundennr"))
 IF WLeerNachKnr.stamm < 1 THEN WLeerNachKnr.stamm = wleernachKu%
 wleernachAdr% = VAL (ReadConfig$("FACTURA","WLeerzeilennachAdresse"))
 IF WLeernachAdr.stamm < 1 THEN WLeernachAdr.stamm = wleernachAdr%
 wleerVorAdr% = VAL (ReadConfig$("FACTURA","WLeerzeilenVorAdresse"))
 IF WLeerVorAdr.stamm < 1 THEN WLeerVorAdr.stamm = wleerVorAdr%
 wstitel% = VAL (ReadConfig$("FACTURA","WSchriftgradTitel"))
 IF WSTitel.stamm < 1 THEN WSTitel.stamm = wstitel%
 wskund% = VAL (ReadConfig$("FACTURA","WSchriftgradKundennr"))
 IF WSKundennr.stamm < 1 THEN WSKundennr.stamm = wskund%
 
 wsrest% = VAL (ReadConfig$("FACTURA","WSchriftgradRest"))
 IF WSRest.stamm < 1 THEN WSRest.stamm = wsrest%
 wspro% = VAL (ReadConfig$("FACTURA","WSchriftgradProlog"))
 IF WSProlog.stamm < 1 THEN WSProlog.stamm = wspro%
 wsepilog% = VAL (ReadConfig$("FACTURA","WSchriftgradEpilog"))
 IF WSEpilog.stamm < 1 THEN WSEpilog.stamm = wsepilog%
 wssum% = VAL (ReadConfig$("FACTURA","WSchriftgradSumme"))
 IF WSSumme.stamm < 1 THEN WSSumme.stamm = wssum%
 wstabko% = VAL (ReadConfig$("FACTURA","WSchriftgradTabellenKopf"))
 IF WSTabellenKopf.stamm < 1 THEN WSTabellenKopf.stamm = wstabko%
 wsadr% = VAL (ReadConfig$("FACTURA","WSchriftgradAdresse"))
 IF WSAdresse.stamm < 1 THEN WSAdresse.stamm = wsadr%
 wleernachPro% = VAL (ReadConfig$("FACTURA","WLeerzeilennachProlog"))
 IF WLeerNachProlog.stamm < 1 THEN WLeerNachProlog.stamm = wleernachPro%
 STORE FILE "stamm"
 UNLOCK CURRENT FILE "stamm"
 END SUB 
  
SUB CopySearch()
 MOUSE OFF 
 REM CALL Fehler("CopySearch","")
 IF GCodieRuf% <> 0 OR GCodieRuf1% <> 0 OR GCodieRuf2% <> 0 THEN 
   ret% = CALL ("_SearchClose")
   GCodieRuf% = 0
   GCodieRuf1% = 0
   GCodieRuf2% = 0
 END IF 
 ok% = 0
 ON ERROR GOTO CSend27062002
       IF EXISTS (GMACodeDir$ + "search.dat") OR EXISTS (GMACodeDir$ + "search.idx") THEN 
         IF GASP% AND GMACodeDir$ <> "C:\" THEN 
           ON ERROR GOTO csdel270620021
           DELETE GMACodeDir$ + "*.*"
           ok% = - 1
csdel270620021: 
           ON ERROR GOTO CSend27062002
           IF ok% = 0 THEN 
             ret% = CALL ("_SearchClose")
             GCodieRuf% = 0
             GCodieRuf1% = 0
             GCodieRuf2% = 0
             DELETE GMACodeDir$ + "search.*"
           END IF 
         ELSE 
           ON ERROR GOTO csdel270620022
           DELETE GMACodeDir$ + "search.*"
           ok% = - 1
csdel270620022: 
           ON ERROR GOTO CSend27062002
           IF ok% = 0 THEN 
             ret% = CALL ("_SearchClose")
             DELETE GMACodeDir$ + "search.*"
           END IF 
         END IF 
         IF EXISTS (_netpath$ + "\local\search.dat") AND EXISTS (_netpath$ + "\local\search.idx") THEN 
           COPY _netpath$ + "\local\search.dat",GMACodeDir$ + "search.dat"
           COPY _netpath$ + "\local\search.idx",GMACodeDir$ + "search.idx"
         ELSE 
           GCodie% = 0
         END IF 
       ELSE 
         IF EXISTS (_netpath$ + "\local\search.dat") AND EXISTS (_netpath$ + "\local\search.idx") THEN 
           COPY _netpath$ + "\local\search.dat",GMACodeDir$ + "search.dat"
           COPY _netpath$ + "\local\search.idx",GMACodeDir$ + "search.idx"
         ELSE 
           GCodie% = 0
         END IF 
       END IF 
CSend27062002: 
 ON ERROR GOTO ErrorHandler
 END SUB 
  
 
 
 
 
SUB SearchInitADR()
 REM CALL Fehler("SearchInitADR","")
 MOUSE OFF 
 CALL CopySearch()
 MENU 1,9,0,"aus Termin-Suchliste &wÑhlen,F10","TERKurzSuche","Auflistung Termine"
 GCODieRuf% = - 1
 GCODieRuf2% = 0
           f1$ = "Kundennr."
           f2$ = FN ansi("Firma/Name")
           f3$ = "Zusatz/Vorname"
           f4$ = "Geburtsname/z.H"
           f5$ = "Matchcode"
           IF GCODieADR$ LIKE "true" THEN 
             f6$ = "PLZ"
             f7$ = "Ort"
             f8$ = FN ansi("Stra·e")
             f9$ = "ADRStatus"
             f10$ = "ADRGruppe"
             f11$ = "Ortsteil"
           ELSE 
             f6$ = "ADRStatus"
             f7$ = "ADRGruppe"
             f8$ = "PLZ"
             f9$ = "Ort"
             f10$ = "Ortsteil"
             f11$ = FN ansi("Stra·e")
           END IF 
           
           f12$ = "Geburtstag"
           f13$ = "Kunde seit"
           f14$ = "eigene Kundennr"
           f15$ = "T1"
           f16$ = "T2"
           f17$ = "T3"
           f18$ = "T4"
           f19$ = "T5"
           f20$ = "Postanschrift"
 spath$ = GMACodeDir$
 ret% = CALL ("_SearchInit",SPath$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
 END SUB 
  
 
SUB SearchInitPRO()
 MENU 1,9,0,"aus Termin-Suchliste &wÑhlen,F10","TERKurzSuche","Auflistung Termine"
 MOUSE OFF 
 CALL CopySearch()
 GCODieRuf% = - 1
 GCODieRuf2% = - 1
           f1$ = "Projektnr."
           f2$ = FN ansi("Name1")
           f3$ = "Name2"
           f4$ = "Name3"
           f5$ = "PLZ"
           f6$ = "Ort"
           f7$ = FN ansi("Stra·e")
           f8$ = "Land"
           f9$ = "Stadtteil"
           f10$ = "Projekt seit"
           f11$ = "R1"
           f12$ = "M1"
           f13$ = "R2"
           f14$ = "M2"
           f15$ = "Bauwerk"
           f16$ = "Keller"
           f17$ = FN ansi("GrÅndung")
           f18$ = "Baugrube"
           f19$ = "Nachbarbau"
           f20$ = "Boden"
 spath$ = GMACodeDir$
 ret% = CALL ("_SearchInit",SPath$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
 END SUB 
 
SUB SearchVorbPRO(datsu$)
               GGGcodeku$ = STR$ (codepr.datsu$,"000000")
               f1$ = FN ansi(Projektnummer.datsu$)
               f2$ = FN ansi(name1.datsu$)
               IF novi1.project = 1 THEN 
                 f2$ = FN ansi("### " + name1.datsu$)
               END IF 
               f3$ = FN ansi(name2.datsu$)
               f4$ = FN ansi(name3.datsu$)
               f5$ = FN ansi(plz.datsu$)
               f6$ = FN ansi(ort.datsu$)
               f7$ = FN ansi(strasse.datsu$)
               f8$ = FN ansi(land.datsu$)
               f9$ = FN ansi(Stadtteil.datsu$)
               IF Project_seit.datsu$ > 0 THEN 
                 f10$ = FN ansi( DATE$ (Project_seit.datsu$,"yyyy/mm/0d"))
               ELSE 
                 f10$ = ""
               END IF 
               f11$ = FN ansi(R1.datsu$)
               f12$ = FN ansi(M1.datsu$)
               f13$ = FN ansi(R2.datsu$)
               f14$ = FN ansi(M2.datsu$)
               f15$ = FN ansi(Bauwerk.datsu$)
               f16$ = FN ansi(Keller.datsu$)
               f17$ = FN ansi(GrÅndung.datsu$)
               f18$ = FN ansi(Baugrube.datsu$)
               f19$ = FN ansi(Nachbarbauwerk.datsu$)
               f20$ = FN ansi(Boden.datsu$)
  ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
  END SUB 
 
 
 
 REM **************fÅr Rechnungssuche
 
SUB SearchInitRE()
 MOUSE OFF 
 CALL CopySearch()
 GCODieRuf% = - 1
 GCODieRuf2% = - 1
           f1$ = "RE Datum"
           f2$ = "Rechnungsnummer"
           f3$ = "Belegnummer"
           f4$ = "Gutschrift?"
           f5$ = "Netto"
           f6$ = "Brutto"
           f7$ = "Teilzahlung Summe"
           f8$ = "erledigt?"
           f9$ = "gezahlt am"
           f10$ = "Kontoauszug"
           f11$ = "Kundennummer"
           f12$ = "Name"
           f13$ = FN ansi("angemahnt?")
           f14$ = "Buchungsgruppe"
           f15$ = "Buchungskonto"
           f16$ = "Projekt"
           f17$ = FN ansi("WÑhrung")
           f18$ = "Mahnsperre"
           f19$ = "Mahnsperre bis"
           f20$ = "Mahnstufe"
 IF GASP% THEN 
   SPath$ = _netpath$ + "\" + STR$ (GMACodeMA%,"00000000") + "\\"
 ELSE 
   SPath$ = "C:\"
 END IF 
 spath$ = GMACodeDir$
 ret% = CALL ("_SearchInit",SPath$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
 END SUB 
 
SUB SearchVorbRE(datsu$)
               GGGcodeku$ = STR$ (codere.datsu$,"000000")
               f1$ = "":f2$ = "":f3$ = "":f4$ = "":f5$ = "":f6$ = "":f7$ = "":f8$ = "":f9$ = "":f10$ = ""
               f11$ = "":f12$ = "":f13$ = "":f14$ = "":f15$ = "":f16$ = "":f17$ = "":f18$ = "":f19$ = "":f20$ = ""
               f1$ = DATE$ (datum,"yyyy-mm-0d")
               f2$ = FN ansi(LREnummer.datsu$)
               f3$ = FN ansi(belegnr.datsu$)
 
               IF GutschriftJN.datsu$ LIKE "J" THEN 
                 f4$ = "Ja"
               ELSE 
                 f4$ = "Nein"
               END IF 
 
               f5$ = STR$ (gesnetto.datsu$,",99999999.00")
               f5$ = PAD$ (f5$,14)
               IF gesnetto.datsu$ > 0 THEN 
                 f5$ = "+" + f5$
               ELSE 
                 f5$ = "-" + f5$
               END IF 
               f6$ = STR$ (gesbruttoeu.datsu$,",99999999.00")
               f6$ = PAD$ (f6$,14)
               IF gesbruttoeu.datsu$ > 0 THEN 
                 f6$ = "+" + f6$
               ELSE 
                 f6$ = "-" + f6$
               END IF 
               f7$ = STR$ (SummeTeilEu.datsu$,",99999999.00")
               f7$ = PAD$ (f7$,14)
 
               IF SummeTeilEu.datsu$ > 0 THEN 
                 f7$ = "+" + f7$
               ELSE 
                 f7$ = "-" + f7$
               END IF 
 
 
               IF erledigt.datsu$ LIKE "j" THEN 
                 f8$ = "Ja"
               ELSE 
                 f8$ = "Nein"
               END IF 
               f9$ = DATE$ (gezahltam,"yyyy-mm-0d")
               f10$ = FN ansi(ktoauszugsnr.datsu$)
               f11$ = FN ansi(Kundennummer.datsu$)
               f12$ = FN ansi(nachname.datsu$)
               IF mahnjn.datsu$ LIKE "j" THEN 
                 f13$ = "Ja"
               ELSE 
                 f13$ = "Nein"
               END IF 
               f14$ = FN ansi(wgruppe.datsu$)
               f15$ = FN ansi(warenart.datsu$)
               f16$ = FN ansi(Projekt.datsu$)
               f17$ = FN ansi(waehrung.datsu$)
               IF mahnsperre.datsu$ LIKE "j" THEN 
                 f18$ = "J"
                 f19$ = ""
                 IF Mahnsperbisdat.datsu$ > 0 THEN 
                   f19$ = DATE$ (Mahnsperbisdat.datsu$,"yyyy-mm-0d")
                 END IF 
               ELSE 
                 f18$ = "N"
                 f19$ = ""
               END IF 
               f20$ = STR$ (Mahnstufe.datsu$,"9")
  ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
  END SUB 
 
 
 REM **************fÅr Rechnungssuche
 
SUB SearchInitDo1(datsu$)
 IF _projekt$ = "WAWI" OR _projekt$ = "HORTUS" THEN datsu$ = "DOKUMENT"
 MOUSE OFF 
 CALL CopySearch()
 REM CALL Fehler("DoInit","")
 GCODieRuf% = - 1
 GCODieRuf2% = - 1
 MENU 1,9,0,"aus Termin-Suchliste &wÑhlen,F10","TERKurzSuche","Auflistung Termine"
           f1$ = "Dokument"
           f2$ = "Dok.gruppe"
           f3$ = FN ansi("Projekt")
           f4$ = "Bearbeiter"
           f5$ = "letzte Bearbeitung"
           f6$ = "Ersteller"
           f7$ = "Dateiname"
           f8$ = "erstellt am"
           f9$ = ""
           f10$ = ""
           f11$ = ""
           f12$ = ""
           f13$ = ""
           f14$ = ""
           f15$ = ""
           f16$ = ""
           f17$ = ""
           f18$ = ""
           f19$ = ""
           f20$ = ""
 IF GASP% THEN 
   SPath$ = _netpath$ + "\" + STR$ (GMACodeMA%,"00000000") + "\\"
 ELSE 
   SPath$ = "C:\"
 END IF 
 spath$ = GMACodeDir$
 ret% = CALL ("_SearchInit",SPath$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
 END SUB 
  
SUB SearchVorbDO1(datsu$)
 IF _projekt$ = "WAWI" OR _projekt$ = "HORTUS" THEN datsu$ = "DOKUMENT"
               GGGcodeku$ = STR$ (codedok.datsu$,"000000")
               f1$ = FN ansi(Dokument.datsu$)
               f2$ = FN ansi(gruppe.datsu$)
               f3$ = FN ansi(Projekt.datsu$)
               f4$ = FN ansi(Bearbeiter.datsu$)
               f5$ = FN ansi( DATE$ (letzte_Bearbeit.datsu$,"yyyy/mm/0d"))
               f6$ = FN ansi(Creator.datsu$)
               f7$ = FN ansi(Dateiname.datsu$)
               f8$ = FN ansi( DATE$ (erstellt_am.datsu$,"yyyy/mm/0d"))
               f9$ = ""
               f10$ = ""
               f11$ = ""
               f12$ = ""
               f13$ = ""
               f14$ = ""
               f15$ = ""
               f16$ = ""
               f17$ = "":f18$ = "":f19$ = "":f20$ = ""
               REM CALL Fehler("DoFill1","")
  ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
  END SUB 
 
SUB SearchInitAq1(datsu$)
   IF _projekt$ = "WAWI" OR _projekt$ = "HORTUS" THEN datsu$ = GAkquiDat$
 REM CALL Fehler("DoInit","")
 MOUSE OFF 
 CALL CopySearch()
 GCODieRuf% = - 1
 GCODieRuf2% = 0
 MENU 1,9,1,"aus Termin-Suchliste &wÑhlen,F10","TERKurzSuche","Auflistung Termine"
 IF GCODIEADR$ LIKE "TRUE" THEN 
           REM  f1$ = "EMAIL"
           f1$ = "Aktion"
           f2$ = "Erf.Datum"
           f3$ = "Termin"
           f4$ = "Uhrzeit"
           f5$ = "Dauer"
           f6$ = "erledigt"
           f7$ = "Bearbeiter"
           f8$ = "Kunde"
           f9$ = "Notiz"
           f10$ = FN ansi("PrioritÑt")
           f11$ = "Projekt"
           f12$ = ""
           f13$ = ""
           f14$ = ""
           f15$ = ""
           f16$ = ""
           f17$ = ""
           f18$ = ""
           f19$ = ""
           f20$ = ""
 ELSE 
           f1$ = "Aktion"
           f2$ = "Projekt"
           f3$ = "Bearbeiter"
           f4$ = "Erf.Datum"
           f5$ = "Termin"
           f6$ = "Uhrzeit"
           f7$ = "Dauer"
           f8$ = "erledigt"
           f9$ = "Kunde"
           f10$ = "Notiz"
           f11$ = "Terminart"
           f12$ = FN ansi("PrioritÑt")
           f13$ = ""
           f14$ = ""
           f15$ = ""
           f16$ = ""
           f17$ = ""
           f18$ = ""
           f19$ = ""
           f20$ = ""
 END IF 
 IF GASP% THEN 
   SPath$ = _netpath$ + "\" + STR$ (GMACodeMA%,"00000000")
 ELSE 
   SPath$ = "C:\"
 END IF 
 spath$ = GMACodeDir$
 ret% = CALL ("_SearchInit",SPath$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
 END SUB 
  
SUB SearchVorbAq1(datsu$)
   IF NOT OPEN ("AKTIONEN") THEN CALL DFile(2,"OFFICE\aktionen" + _fpw$)
   IF _projekt$ = "WAWI" OR _projekt$ = "HORTUS" THEN datsu$ = GAkquiDat$
               GGGcodeku$ = STR$ (codeaq.datsu$,"000000")
               text1$ = ""
               IF emailbetreff.GAkquiDat$ <> "" AND emailto.GAkquiDat$ <> "" THEN 
                 text1$ = "EMAIL"
                 IF EMAILRaus.GAkquiDat$ = "j" THEN 
                   text1$ = text1$ + " erledigt"
                 ELSE 
                   text1$ = text1$ + " offen"
                 END IF 
                 IF EMAILAutomat.GAkquiDat$ = "j" THEN 
                   text1$ = text1$ + " autom."
                 ELSE 
                   text1$ = text1$ + " manu."
                 END IF 
               END IF 
 
                code% = codeaq.datsu$
               SELECT KEY code% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
               codeak% = codeak.GAkquiDat$
               SELECT KEY codeak% FILE "AKTIONEN" INDEX codeak.aktionen
               bezak$ = bezeichnung.aktionen
 
               REM f1$ = text1$
            IF GCODIEADR$ LIKE "TRUE" THEN 
               f1$ = bezak$
               f2$ = FN ansi( DATE$ (Datum.datsu$,"yyyy/mm/0d"))
               f3$ = FN ansi( DATE$ (Termin.datsu$,"yyyy/mm/0d"))
               f4$ = FN ansi( TIME$ (Uhrzeit.datsu$,"hh:mm"))
               f5$ = FN ansi( LTRIM$ ( STR$ (dauer.datsu$,"999")))
               f6$ = FN ansi(erledigt_Termin.datsu$)
               f7$ = FN ansi(Bearbeiter.datsu$)
               f8$ = FN ansi(nachname.datsu$)
               f9$ = FN ansi( LEFT$ (notiz.datsu$,255))
               f10$ = STR$ (Wertung.datsu$,"0")
               f11$ = FN ansi(Projekt.datsu$)
               f12$ = ""
               f13$ = ""
               f14$ = ""
               f15$ = ""
               f16$ = ""
               f17$ = "":f18$ = "":f19$ = "":f20$ = ""
             ELSE 
               f1$ = FN ansi(bezak$)
               f2$ = FN ansi(Projekt.datsu$)
               f3$ = FN ansi(Bearbeiter.datsu$)
               f4$ = FN ansi( DATE$ (Datum.datsu$,"yyyy/mm/0d"))
               f5$ = FN ansi( DATE$ (Termin.datsu$,"yyyy/mm/0d"))
               f6$ = FN ansi( TIME$ (Uhrzeit.datsu$,"hh:mm"))
               f7$ = FN ansi( LTRIM$ ( STR$ (dauer.datsu$,"999")))
               f8$ = FN ansi(erledigt_Termin.datsu$)
               
               f9$ = FN ansi(nachname.datsu$)
               f10$ = FN ansi( LEFT$ (notiz.datsu$,255))
               SELECT CASE AQUIMASK.datsu$
                 CASE "AKQUIPRJ"
                   f11$ = FN ansi("Allgemein")
                 CASE "AKQUIV1"
                   f11$ = FN ansi("Verdichtung")
                 CASE "AKQUIV2"
                   f11$ = FN ansi("BÅro")
                 CASE "AKQUIV3"
                   f11$ = FN ansi("Feldarbeiten")
                 CASE "AKQUIV4"
                   f11$ = FN ansi("Labor")
                 CASE "AKQUIV5"
                   f11$ = FN ansi("Probennahme")
               END SELECT 
               
               f12$ = STR$ (Wertung.datsu$,"0")
               f13$ = ""
               f14$ = ""
               f15$ = ""
               f16$ = ""
               f17$ = "":f18$ = "":f19$ = "":f20$ = ""
             END IF 
               REM CALL Fehler("DoFill1","")
  ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
  END SUB 
 
 
  REM tt$ = DATE$ (termin.tvorlage,"yyyy/mm/0d") + " " + TIME$ (uhrzeit.tvorlage,"hh:mm") + "  "
  REM TV$(tfound1%) = DATE$ (datum.tvorlage,"yyyy/mm/0d") + " " + TIME$ (zeit.tvorlage,"hh:mm") + "  " + tt$ + nn$ + " / " + LEFT$ (Notiz.tvorlage,100) + CHR$ (100) + STR$ (codeaq.tvorlage,"000000")
SUB SearchInitAq2(datsu$)
 IF _projekt$ = "WAWI" OR _projekt$ = "HORTUS" THEN datsu$ = "TVORLAGE"
 MOUSE OFF 
 CALL CopySearch()
 REM CALL Fehler("DoInit","")
 MENU 1,9,1,"aus Termin-Suchliste &wÑhlen,F10","TERKurzSuche","Auflistung Termine"
 GCODieRuf1% = - 1
 GCODieRuf2% = 0
   IF GCODIEADR$ LIKE "TRUE" THEN 
           REM f1$ = "EMAIL"
           f1$ = "Aktion"
           f2$ = "VTermin"
           f3$ = "VUhrzeit"
           f4$ = "Termin"
           f5$ = "Uhrzeit"
           f6$ = "Kunde"
           f7$ = "Notiz"
           f8$ = FN ansi("PrioritÑt")
           f9$ = "Projekt"
           f10$ = ""
           f11$ = ""
           f12$ = ""
           f13$ = ""
           f14$ = ""
           f15$ = ""
           f16$ = ""
           f17$ = ""
           f18$ = ""
           f19$ = ""
           f20$ = ""
   ELSE 
           f1$ = "Aktion"
           f2$ = "VTermin"
           f3$ = "VUhrzeit"
           f4$ = "Termin"
           f5$ = "Uhrzeit"
           f6$ = "Kunde"
           f7$ = "Notiz"
           f8$ = "Terminart"
           f9$ = FN ansi("PrioritÑt")
           f10$ = "Projekt"
           f11$ = ""
           f12$ = ""
           f13$ = ""
           f14$ = ""
           f15$ = ""
           f16$ = ""
           f17$ = ""
           f18$ = ""
           f19$ = ""
           f20$ = ""
   END IF 
 IF GASP% THEN 
   SPath$ = _netpath$ + "\" + STR$ (GMACodeMA%,"00000000")
 ELSE 
   SPath$ = "C:\"
 END IF 
 spath$ = GMACodeDir$
 ret% = CALL ("_SearchInit",SPath$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
 END SUB 
  
SUB SearchVorbAq2(datsu$)
  IF NOT OPEN ("AKTIONEN") THEN CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 IF _projekt$ = "WAWI" OR _projekt$ = "HORTUS" THEN datsu$ = "TVORLAGE"
               GGGcodeku$ = STR$ (codeaq.datsu$,"000000")
               text1$ = ""
               IF emailbetreff.GAkquiDat$ <> "" AND emailto.GAkquiDat$ <> "" THEN 
                 text1$ = "EMAIL"
                 IF EMAILRaus.GAkquiDat$ = "j" THEN 
                   text1$ = text1$ + " erledigt"
                 ELSE 
                   text1$ = text1$ + " offen"
                 END IF 
                 IF EMAILAutomat.GAkquiDat$ = "j" THEN 
                   text1$ = text1$ + " autom."
                 ELSE 
                   text1$ = text1$ + " manu."
                 END IF 
               END IF 
               code% = codeaq.datsu$
               SELECT KEY code% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
               codeak% = codeak.GAkquiDat$
               SELECT KEY codeak% FILE "AKTIONEN" INDEX codeak.aktionen
               bezak$ = bezeichnung.aktionen
 
               REM f1$ = text1$
               f1$ = bezak$
               f2$ = FN ansi( DATE$ (datum.datsu$,"yyyy/mm/0d"))
               f3$ = FN ansi( TIME$ (zeit.datsu$,"hh:mm"))
               f4$ = FN ansi( DATE$ (termin.datsu$,"yyyy/mm/0d"))
               f5$ = FN ansi( TIME$ (uhrzeit.datsu$,"hh:mm"))
               
               f6$ = FN ansi(nachname.datsu$)
               
               f7$ = FN ansi( LEFT$ (notiz.datsu$,255))
               IF GCODIEADR$ LIKE "TRUE" THEN 
                 f8$ = STR$ (Wertung.GAkquiDat$,"0")
                 f9$ = FN ansi(Projekt.GAkquiDat$)
                 f10$ = ""
               ELSE 
                 SELECT CASE AQUIMASK.GAkquiDat$
                   CASE "AKQUIPRJ"
                     f8$ = FN ansi("Allgemein")
                   CASE "AKQUIV1"
                     f8$ = FN ansi("Verdichtung")
                   CASE "AKQUIV2"
                     f8$ = FN ansi("BÅro")
                   CASE "AKQUIV3"
                     f8$ = FN ansi("Feldarbeiten")
                   CASE "AKQUIV4"
                     f8$ = FN ansi("Labor")
                   CASE "AKQUIV5"
                     f8$ = FN ansi("Probennahme")
                 END SELECT 
                 f9$ = STR$ (Wertung.GAkquiDat$,"0")
                 f10$ = FN ansi(projekt.GAkquiDat$)
               END IF 
               
               
               f11$ = ""
               f12$ = ""
               f13$ = ""
               f14$ = ""
               f15$ = ""
               f16$ = ""
               f17$ = "":f18$ = "":f19$ = "":f20$ = ""
               REM CALL Fehler("DoFill1","")
  ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
  END SUB 
 
 
 
 
 
SUB SearchVorbAdr(datsu$)
 GCODieRuf2% = - 1
 IF _projekt$ = "WAWI" OR _projekt$ = "HORTUS" THEN datsu$ = "ADRESSEN"
               GGGcodeku$ = STR$ (codeku.datsu$,"000000")
               f1$ = FN ansi(Kundennummer.datsu$)
               f2$ = FN ansi(nachname.datsu$)
               f3$ = FN ansi(vorname.datsu$)
               f4$ = FN ansi(geburtsname.datsu$)
 
               f5$ = FN ansi(matchcode.datsu$)
               IF GCodieadr$ LIKE "TRUE" THEN 
                 f6$ = FN ansi(plz.datsu$)
                 f8$ = FN ansi(stra·e.datsu$)
                 f7$ = FN ansi(ort.datsu$)
                 f9$ = FN ansi(ADRStatus.datsu$)
                 f10$ = FN ansi(ADRGruppe.datsu$)
                 f11$ = FN ansi(ortsteil.datsu$)
                 
               ELSE 
                 f6$ = FN ansi(ADRStatus.datsu$)
                 f7$ = FN ansi(ADRGruppe.datsu$)
                 f8$ = FN ansi(plz.datsu$)
                 f9$ = FN ansi(ort.datsu$)
                 f10$ = FN ansi(ortsteil.datsu$)
                 f11$ = FN ansi(stra·e.datsu$)
               END IF 
               IF Geburtstag.datsu$ > 0 THEN 
                 f12$ = FN ansi( DATE$ (Geburtstag.datsu$,"yyyy/mm/0d"))
               ELSE 
                 f12$ = ""
               END IF 
               IF Kunde_seit.datsu$ > 0 THEN 
                 f13$ = FN ansi( DATE$ (Kunde_seit.datsu$,"yyyy/mm/0d"))
               ELSE 
                 f13$ = ""
               END IF 
               
               f14$ = FN ansi(eigKunr.datsu$)
               IF f11$ = "" THEN f11$ = "leer"
               IF f12$ = "" THEN f12$ = "leer"
               IF f14$ = "" THEN f13$ = "leer"
               IF f14$ = "" THEN f14$ = "leer"
               f15$ = ""
               f16$ = ""
               f17$ = ""
               f18$ = ""
               f19$ = ""
               f20$ = TRIM$ ( LTRIM$ ( LEFT$ (Postanschrift.datsu$,250)))
  END SUB 
 
SUB SearchVorbTel(datsu$)
   IF _projekt$ <> "WAWI" THEN 
                   IF f11$ = "" THEN 
                     f11$ = LTRIM$ (art.GTelDat$ + " " + nummer.GTelDat$)
                   ELSE 
                     IF f12$ = "" THEN 
                       f12$ = LTRIM$ (art.GTelDat$ + " " + nummer.GTelDat$)
                     ELSE 
                       IF f13$ = "" THEN 
                         f13$ = LTRIM$ (art.GTelDat$ + " " + nummer.GTelDat$)
                       ELSE 
                         IF f14$ = "" THEN 
                           f14$ = LTRIM$ (art.GTelDat$ + " " + nummer.GTelDat$)
                         ELSE 
                           IF f15$ = "" THEN 
                             f15$ = LTRIM$ (art.GTelDat$ + " " + nummer.GTelDat$)
                           ELSE 
                             IF f16$ = "" THEN 
                               f16$ = LTRIM$ (art.GTelDat$ + " " + nummer.GTelDat$)
                             END IF 
                           END IF 
                         END IF 
                       END IF 
                     END IF 
                   END IF 
 
   ELSE 
     f11$ = "":f12$ = "":f13$ = "":f14$ = "":f15$ = "":f16$ = ""
   END IF 
 END SUB 
 
 
  
 
 
  
SUB ADRTermine1()
 REQUEST "Sollen die Termine in die Datei ADRTERM kopiert werden?","",130,req%
 IF req% <> 1 THEN END SUB 
 MOUSE OFF 
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\adrterm" + _fpw$)
 CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 FILE "telefon"
 INDEX codeku.telefon
 SELECT FIRST 
 FILE GAkquiDat$
 INDEX QuickKuter.GAkquiDat$
 SELECT LAST 
 codekuold% = codeku.GAkquiDat$
 codeku% = codeku.GAkquiDat$
 i% = 0
 REMOVE FROM FILE "adrterm"
     BLANK FILE "adrterm"
     codekey.adrterm = SER ("adrterm",1)
     codeku.adrterm = codeku.GAkquiDat$
     STORE FILE "adrterm"
     UNLOCK CURRENT FILE "adrterm"
 z% = RECCOUNT (GAkquiDat$)
 WHILE NOT EOF (GAkquiDat$)
   SET STATUS LTRIM$ ( STR$ (i%,",99999999")) + " DatensÑtz aus AKQUISE bearbeitet  von " + LTRIM$ ( STR$ (z%,",99999999"))
   IF codekuold% = codeku.GAkquiDat$ THEN 
     SELECT KEY codekuold% LOCK FILE "Adrterm" INDEX codeku.adrterm
   ELSE 
     BLANK FILE "adrterm"
     codekey.adrterm = SER ("adrterm",1)
     codeku.adrterm = codeku.GAkquiDat$
     codekuold% = codeku.GAkquiDat$
       IF EXISTS (codeku.GAkquiDat$,codeku.telefon) THEN 
         SELECT KEY codeku.GAkquiDat$ FILE "telefon" INDEX codeku.telefon
         WHILE NOT EOF ("telefon") AND codeku.telefon = codeku.GAkquiDat$
           telefon.adrterm = telefon.adrterm + LEFT$ (art.telefon) + "   " + LEFT$ (nummer.telefon) + CHR$ (10) + CHR$ (13)
           SELECT NEXT FILE "telefon"
         WEND 
         SELECT FIRST FILE "telefon"
       END IF 
   END IF 
 
     IF notiz.GAkquiDat$ <> "" OR ergebnis.GAkquiDat$ <> "" THEN 
       codeak% = codeak.GAkquiDat$
       SELECT KEY codeak% FILE "aktionen" INDEX codeak.aktionen
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ("fÅr Mitarbeiter: " + bearbeiter.GAkquiDat$ + "  Aktion: " + Bezeichnung.aktionen + CHR$ (10) + CHR$ (13))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + "fÅr Mitarbeiter: " + bearbeiter.GAkquiDat$ + "  Aktion: " + Bezeichnung.aktionen + CHR$ (10) + CHR$ (13)
       END IF 
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ("Datum:" + DATE$ (datum.GAkquiDat$,"0d.mm.yyyy"))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + "Datum:" + DATE$ (datum.GAkquiDat$,"0d.mm.yyyy")
       END IF 
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ("  Termin:" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy"))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + "  Termin:" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy")
       END IF 
       IF uhrzeit.GAkquiDat$ > 0 THEN 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("  Uhrzeit:" + TIME$ (uhrzeit.GAkquiDat$,"hh:mm"))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "  Uhrzeit:" + TIME$ (uhrzeit.GAkquiDat$,"hh:mm")
         END IF 
       END IF 
       IF erdatum.GAkquiDat$ > 0 THEN 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("  VorlageTermin:" + DATE$ (erdatum.GAkquiDat$,"0d.mm.yyyy"))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "  VorlageTermin:" + DATE$ (erdatum.GAkquiDat$,"0d.mm.yyyy")
         END IF 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("  Vorlagezeit:" + TIME$ (erzeit.GAkquiDat$,"hh:mm"))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "  Vorlagezeit:" + TIME$ (erzeit.GAkquiDat$,"hh:mm")
         END IF 
       END IF 
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ("  erledigt: " + erledigt_Termin.GAkquiDat$ + CHR$ (10) + CHR$ (13))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + "  erledigt: " + UCASE$ (erledigt_Termin.GAkquiDat$) + CHR$ (10) + CHR$ (13)
       END IF 
       IF TRIM$ ( LTRIM$ (notiz.GAkquiDat$)) <> "" THEN 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("Notiz:" + CHR$ (10) + CHR$ (13))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "Notiz:" + CHR$ (10) + CHR$ (13)
         END IF 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ( LTRIM$ (notiz.GAkquiDat$) + CHR$ (10) + CHR$ (13))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + TRIM$ ( LTRIM$ (notiz.GAkquiDat$)) + CHR$ (10) + CHR$ (13)
         END IF 
       END IF 
       IF TRIM$ ( LTRIM$ (ergebnis.GAkquiDat$)) <> "" THEN 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("Ergebnis:" + CHR$ (10) + CHR$ (13))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "Ergebnis:" + CHR$ (10) + CHR$ (13)
         END IF 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ( TRIM$ ( LTRIM$ (ergebnis.GAkquiDat$)) + CHR$ (10) + CHR$ (13))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + LTRIM$ (ergebnis.GAkquiDat$) + CHR$ (10) + CHR$ (13)
         END IF 
       END IF 
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ( CHR$ (10) + CHR$ (13))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + CHR$ (10) + CHR$ (13)
       END IF 
       IF EXISTS (codeaq.GAkquiDat$,codeaq.tvorlage) THEN 
         SELECT KEY codeaq.GAkquiDat$ FILE "tvorlage" INDEX codeaq.tvorlage
         codetv.adrterm = codetv.tvorlage
       END IF 
       SELECT KEY codeku.GAkquiDat$ FILE "adressen" INDEX codeku.adressen
       Vorname.adrterm = vorname.adressen
       nachname.adrterm = nachname.adressen
       ort.adrterm = ort.adressen
       stra·e.adrterm = stra·e.adressen
       plz.adrterm = plz.adressen
       kundennummer.adrterm = kundennummer.adressen
       STORE FILE "adrterm"
       UNLOCK CURRENT FILE "adrterm"
     END IF 
     i% = i% + 1
   SELECT PREVIOUS FILE GAkquiDat$
 WEND 
 MOUSE ON 
 END SUB 
 
SUB ADRTermine2()
 MOUSE OFF 
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\adrterm" + _fpw$)
 CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 FILE "telefon"
 INDEX codeku.telefon
 SELECT FIRST 
 FILE GAkquiDat$
 INDEX QuickKuter.GAkquiDat$
 SELECT FIRST 
 FILE "tvorlage"
 INDEX codetv.tvorlage
 SELECT FIRST 
 codeaqold% = codeaq.tvorlage
 codeaq% = codeaq.tvorlage
 i% = 0
 WHILE NOT EOF ("tvorlage")
  IF codema.tvorlage = vcodema% THEN 
   SET STATUS STR$ (i%,"999999") + " DatensÑtz bearbeitet"
   SELECT KEY codeaq.tvorlage FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
   IF EXISTS (codetv.tvorlage,codetv.adrterm) THEN 
     SELECT KEY codetv.tvorlage LOCK FILE "adrterm" INDEX codetv.adrterm
   ELSE 
     BLANK FILE "adrterm"
     codekey.adrterm = SER ("adrterm",1)
     codeku.adrterm = codeku.GAkquiDat$
     codetv.adrterm = codetv.tvorlage
     STORE FILE "adrterm"
     UNLOCK CURRENT FILE "adrterm"
   END IF 
   codeku% = codeku.GAkquiDat$
   QuickKuter$ = STR$ (codeku%,"000000") + "29999999"
   SELECT KEY QuickKuter$ FILE GAkquiDat$ INDEX QuickKuter.GAkquiDat$
   cu% = codeku.GAkquiDat$
   IF codeku.GAkquiDat$ <> codeku% THEN 
     SELECT PREVIOUS FILE GAkquiDat$ INDEX QuickKuter.GAkquiDat$
   END IF 
   cu% = codeku.GAkquiDat$
       IF EXISTS (codeku%,codeku.telefon) THEN 
         SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
         telefon$ = ""
         WHILE NOT EOF ("telefon") AND codeku.telefon = codeku.GAkquiDat$
           telefon$ = telefon$ + LEFT$ (art.telefon) + "   " + LEFT$ (nummer.telefon) + CHR$ (10) + CHR$ (13)
           SELECT NEXT FILE "telefon"
         WEND 
         SELECT FIRST FILE "telefon"
       END IF 
    SELECT KEY codetv.tvorlage LOCK FILE "adrterm" INDEX codetv.adrterm
    notiz.adrterm = ""
    STORE FILE "adrterm"
    UNLOCK CURRENT FILE "adrterm"
    WHILE NOT EOF (GAkquiDat$) AND codeku.GAkquiDat$ = codeku%
     SELECT KEY codetv.tvorlage LOCK FILE "adrterm" INDEX codetv.adrterm
     IF notiz.GAkquiDat$ <> "" OR ergebnis.GAkquiDat$ <> "" THEN 
       codeak% = codeak.GAkquiDat$
       SELECT KEY codeak% FILE "aktionen" INDEX codeak.aktionen
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ("fÅr Mitarbeiter: " + bearbeiter.GAkquiDat$ + "  Aktion: " + Bezeichnung.aktionen + CHR$ (10) + CHR$ (13))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + "fÅr Mitarbeiter: " + bearbeiter.GAkquiDat$ + "  Aktion: " + Bezeichnung.aktionen + CHR$ (10) + CHR$ (13)
       END IF 
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ("Datum:" + DATE$ (datum.GAkquiDat$,"0d.mm.yyyy"))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + "Datum:" + DATE$ (datum.GAkquiDat$,"0d.mm.yyyy")
       END IF 
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ("  Termin:" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy"))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + "  Termin:" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy")
       END IF 
       IF uhrzeit.GAkquiDat$ > 0 THEN 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("  Uhrzeit:" + TIME$ (uhrzeit.GAkquiDat$,"hh:mm"))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "  Uhrzeit:" + TIME$ (uhrzeit.GAkquiDat$,"hh:mm")
         END IF 
       END IF 
       IF erdatum.GAkquiDat$ > 0 THEN 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("  VorlageTermin:" + DATE$ (erdatum.GAkquiDat$,"0d.mm.yyyy"))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "  VorlageTermin:" + DATE$ (erdatum.GAkquiDat$,"0d.mm.yyyy")
         END IF 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("  Vorlagezeit:" + TIME$ (erzeit.GAkquiDat$,"hh:mm"))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "  Vorlagezeit:" + TIME$ (erzeit.GAkquiDat$,"hh:mm")
         END IF 
       END IF 
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ("  erledigt: " + erledigt_Termin.GAkquiDat$ + CHR$ (10) + CHR$ (13))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + "  erledigt: " + UCASE$ (erledigt_Termin.GAkquiDat$) + CHR$ (10) + CHR$ (13)
       END IF 
       IF TRIM$ ( LTRIM$ (notiz.GAkquiDat$)) <> "" THEN 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("Notiz:" + CHR$ (10) + CHR$ (13))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "Notiz:" + CHR$ (10) + CHR$ (13)
         END IF 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ( LTRIM$ (notiz.GAkquiDat$) + CHR$ (10) + CHR$ (13))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + TRIM$ ( LTRIM$ (notiz.GAkquiDat$)) + CHR$ (10) + CHR$ (13)
         END IF 
       END IF 
       IF TRIM$ ( LTRIM$ (ergebnis.GAkquiDat$)) <> "" THEN 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ("Ergebnis:" + CHR$ (10) + CHR$ (13))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + "Ergebnis:" + CHR$ (10) + CHR$ (13)
         END IF 
         leng% = LEN (notiz.adrterm)
         leng1% = LEN ( TRIM$ ( LTRIM$ (ergebnis.GAkquiDat$)) + CHR$ (10) + CHR$ (13))
         lengges% = leng% + leng1%
         IF lengges% < 3999 THEN 
           notiz.adrterm = notiz.adrterm + LTRIM$ (ergebnis.GAkquiDat$) + CHR$ (10) + CHR$ (13)
         END IF 
       END IF 
       leng% = LEN (notiz.adrterm)
       leng1% = LEN ( CHR$ (10) + CHR$ (13))
       lengges% = leng% + leng1%
       IF lengges% < 3999 THEN 
         notiz.adrterm = notiz.adrterm + CHR$ (10) + CHR$ (13)
       END IF 
       SELECT KEY codeku.GAkquiDat$ FILE "adressen" INDEX codeku.adressen
       Vorname.adrterm = vorname.adressen
       nachname.adrterm = nachname.adressen
       ort.adrterm = ort.adressen
       stra·e.adrterm = stra·e.adressen
       plz.adrterm = plz.adressen
       kundennummer.adrterm = kundennummer.adressen
       telefon.adrterm = telefon$
       STORE FILE "adrterm"
       UNLOCK CURRENT FILE "adrterm"
     END IF 
     
   SELECT PREVIOUS FILE GAkquiDat$ INDEX QuickKuter.GAkquiDat$
   WEND 
  END IF 
   SELECT FIRST FILE GAkquiDat$ INDEX QuickKuter.GAkquiDat$
   FILE "tvorlage"
   SELECT NEXT FILE "tvorlage" INDEX codetv.tvorlage
   i% = i% + 1
 WEND 
 MOUSE ON 
 END SUB 
 
 
SUB ADRTERMR()
 REQUEST "Sollen der Spezial-CODie-Termindruck gestartet werden?","",130,req%
 IF req% <> 1 THEN END SUB 
 REQUEST "Sollen die Spezialtermine neu erzeugt werden?","",130,req%
 IF req% = 1 THEN 
   CALL ADRTermine2()
 END IF 
 MOUSE OFF 
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\adrterm" + _fpw$)
 CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 prep$ = "ADRTERMR"
 CALL ORep(prep$)
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY ON 
 SET QUERY LOCK ON 
 ON ERROR GOTO EndADRTERM
 SELECT DISTINCT ;
     WHERE CodeTV.TVORLAGE = codetv.ADRTERM AND codeku.ADRTERM = CodeKU.ADRESSEN AND codema.tvorlage = vcodema%
     ORDER Datum.TVORLAGE
     TO ASK 
 END SELECT 
EndADRTERM: 
 ON ERROR GOTO ErrorHandler
 END SUB 
 
 
SUB ADRKontakt()
 codeku% = codeku.adressen
 REM IF disabled%("EINGANG") THEN END SUB 
 CALL DFile(2,"OFFICE\connect" + _fpw$)
 CALL DFile(2,"OFFICE\kontgr" + _fpw$)
 MOUSE OFF 
 REM 260698 REMOVE FROM FILE "Zeingan1" WHERE codevt.zeingan1 < 1
 MOUSE ON 
 FILE "connect"
 INDEX codeku.connect
 SELECT FIRST 
 SELECT WHERE FILE "connect"
 knr% = codeku.adressen
 IF ( MOD ("adressen") OR NEW ("adressen")) THEN CALL FStore("adressen")
 _formend% = 0
 maske$ = "KONTAKT"
 WHILE _formend% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     SET HEADING title$ + " - Kundenkontakte"
     REM OPEN FORM "KONTAKT"
     OPEN FORM GOFFForm$ + maske$
     SET f = Superbase.Form
     CALL ADRKontIntro()
     CALL MNADRKont()
     SET STATUS "Kundenkontakt"
   END IF 
   MENU ON 
   MOUSE ON 
   KUVorgsub% = 0
   REM IF RECCOUNT ("zeingan1") > 0 THEN CALL ZEINUpdate1()
   CALL ClearKBDBuffer()
   FORM 
   IF KUVorgsub% <> 99 THEN WAIT KEY OR MENU OR MOUSE 
   REM ** Tastaturabfrage
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL PSelectPrev()
   CASE CrsRight%,PgDn%
     CALL PSelectNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE KUVorgsub%
   CASE 10
     REM Button Kundennummer wird gedrÅckt
     maske$ = "KONTAKT1"
   CASE 11
     REM Button Nachname wird gedrÅckt
     maske$ = "KONTAKT"
   CASE 12
     REM Button Kontaktgruppe wird gedrÅckt
     maske$ = "KONTAKT2"
   CASE 1
     'zur Adresse wechseln
     IF UCASE$ (typ.connect) = "V" THEN 
       knr% = VAL ( RIGHT$ (codeconku.connect,6))
     ELSE 
       knr% = VAL ( RIGHT$ (codekucon.connect,6))
     END IF 
     _formend% = 1
   CASE 2
     ' in die Daten des Kontaktes wechseln
     IF NOT disabled%("KONTAKTDETAIL") THEN 
       codekey% = codekey.connect
       IF UCASE$ (typ.connect) = "V" THEN 
         nr% = VAL ( RIGHT$ (codeconku.connect,6))
       ELSE 
         nr% = VAL ( RIGHT$ (codekucon.connect,6))
       END IF 
       SELECT KEY nr% FILE "Adressen" INDEX codeku.adressen
       adrtext$ = Kundennummer.adressen + CHR$ (10) + CHR$ (13) + nachname.adressen + CHR$ (10) + CHR$ (13) + vorname.adressen + CHR$ (10) + CHR$ (13)
       adrtext$ = adrtext$ + stra·e.adressen + CHR$ (10) + CHR$ (13) + plz.adressen + " " + ort.adressen
       SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
       SELECT KEY codekey% FILE "connect" INDEX codekey.connect
       kontaktfi$ = "Kontakt-Gruppe: " + Kontaktgruppe.connect
       FORM 2
     END IF 
   CASE 3
     ' neuer Kontakt
     IF NOT disabled%("KONTAKTNEW") THEN 
       nachfolger% = ADRSuche%(0)
       IF nachfolger% <> 0 THEN 
         SELECT KEY nachfolger% LOCK FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
         BLANK FILE "connect"
         codekey.connect = SER ("CONNECT",1)
         Kundennummer.connect = Kundennummer.adressen
         codekey% = codekey.connect
         codeku.connect = knr%
         codecon.connect = nachfolger%
         CodeKUCon.connect = STR$ (knr%,"000000") + STR$ (nachfolger%,"000000")
         Nachname.connect = Nachname.adressen
         vorname.connect = Vorname.adressen
         Ort.connect = Ort.adressen
         Strasse.connect = Stra·e.adressen
         Typ.connect = "N"
         CodeKGR.connect = 0
         Kontaktgruppe.connect = "<ohne Zuordnung>"
         CALL QuickStore("connect")
         adrtext$ = Kundennummer.adressen + CHR$ (10) + CHR$ (13) + nachname.adressen + CHR$ (10) + CHR$ (13) + vorname.adressen + CHR$ (10) + CHR$ (13)
         adrtext$ = adrtext$ + stra·e.adressen + CHR$ (10) + CHR$ (13) + plz.adressen + " " + ort.adressen
         SELECT KEY knr% LOCK FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
         BLANK FILE "connect"
         codekey.connect = SER ("CONNECT",1)
         Kundennummer.connect = Kundennummer.adressen
         codeku.connect = nachfolger%
         codecon.connect = knr%
         CodeConKU.connect = STR$ (nachfolger%,"000000") + STR$ (knr%,"000000")
         Nachname.connect = Nachname.adressen
         vorname.connect = Vorname.adressen
         Ort.connect = Ort.adressen
         Strasse.connect = Stra·e.adressen
         Typ.connect = "V"
         CodeKGR.connect = 0
         Kontaktgruppe = "<ohne Zuordnung>"
         CALL QuickStore("connect")
         SELECT FORM KEY knr% FILE "connect" INDEX CodeKU.connect
         SELECT KEY codekey% FILE "connect" INDEX codekey.connect
         FORM 2
         
       END IF 
     END IF 
   CASE 4
     ' zurÅck Knopf Seite 2
     FORM 1
   CASE 5
     CALL KontaktFilt()
   CASE 6
     IF NOT disabled%("KONTAKTGROUP") THEN 
       CALL KontGrNeu()
     END IF 
   CASE 7
     REM Kontakt Lîschen
     IF NOT disabled%("KONTAKTDEL") THEN 
       REQUEST "Wollen Sie den Kontakt wirklich lîschen?","",130,req%
       IF req% = 1 THEN 
         IF Typ.connect LIKE "V" THEN 
           codekuvonADR% = codecon.connect
           codekuzuadr% = codeku.connect
         ELSE 
           codekuvonADR% = codeku.connect
           codekuzuadr% = codecon.connect
         END IF 
         CodeKUCon$ = STR$ (codekuvonADR%,"000000") + STR$ (codekuzuadr%,"000000")
         SELECT KEY CodeKUCon$ LOCK FILE "connect" INDEX CodeKUCon.connect
         SELECT REMOVE 
         codekoncu$ = STR$ (codekuzuadr%,"000000") + STR$ (codekuvonADR%,"000000")
         IF EXISTS (codekoncu$,CodeConKU.connect) THEN 
           SELECT KEY codekoncu$ LOCK FILE "connect" INDEX CodeConKU.connect
           SELECT REMOVE 
         END IF 
         FORM 1
         CALL ADRKontIntro()
       END IF 
     END IF 
   CASE 8
     'Kontakte drucken
     IF NOT disabled%("KONTAKTPRINT") THEN 
       codeku% = codeku.adressen
       knr% = codeku%
       CALL KONTADRU()
       SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
       CALL ADRKontIntro()
     END IF 
   CASE 99
     MOUSE ON 
     'Kontakt bearbeiten
     IF NOT disabled%("KONTAKTEDIT") THEN 
       MOUSE ON 
       ENTER Nachname.connect,0
     END IF 
     FORM 2
   MENU OFF 
   END SELECT 
   MENU ON 
   MOUSE ON 
 WEND 
 
 REM 110397 CALL ZEINbuchung1(0)
 SELECT WHERE FILE "connect"
 _formend% = 0
 END SUB 
 
SUB KONTADRU()
 kunr$ = STR$ (codeku.adressen,"000000") + "*"
 ueb1$ = nachname.adressen + ", " + vorname.adressen + "  " + DATE$ ( TODAY ,"0d.mm.yyyy")
 CALL ORep("KONTADRU")
 REM REPORT USING "KONTADRU"
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
 END FOOTING 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 ueb$ = ueb1$
 ON ERROR GOTO EndKontADru
 
 SELECT ;
     WHERE CodeCON.CONNECT = CodeKU.ADRESSEN AND CodeKUCon.connect LIKE kunr$
     ORDER REPORT Nachname.ADRESSEN
     TO ASK 
 END SELECT 
EndKontADru: 
 ON ERROR GOTO ErrorHandler
 END SUB 
  
 
 
SUB ADRKontIntro()
 MOUSE OFF 
 FILE "connect"
 INDEX CodeKU.connect
   SELECT FORM KEY knr% FILE "Adressen" INDEX CodeKU.Adressen
   SELECT FORM KEY knr% FILE "connect" INDEX CodeKU.connect
   kontaktfi$ = "Kontaktgruppe: "
   IF FORM = "KONTAKT" THEN 
     bnachn$ = "Nachname/Firma Æ"
     bkunr$ = "Kundennummer"
     kontgr$ = "Kontaktgruppe"
   END IF 
   IF FORM = "KONTAKT1" THEN 
     bnachn$ = "Nachname/Firma"
     bkunr$ = "Kundennummer Æ"
     kontgr$ = "Kontaktgruppe"
   END IF 
   IF FORM = "KONTAKT2" THEN 
     bnachn$ = "Nachname/Firma"
     bkunr$ = "Kundennummer"
     kontgr$ = "Kontaktgruppe Æ"
   END IF 
 FORM 
 END SUB 
 
SUB MNADRKont()
 MENU CLEAR 
 CALL MNProgramm()
 MENU 2,0,1,"&Optionen","",""
 MENU 2,1,1,"&Adresstexte in Kontakte aktualisieren","KontAktual","Adresstexte in Kontakte aktualisieren"
 CALL MNHilfe(3)
 END SUB 
 
SUB KontAktual()
 GConDat$ = "CONNECT"
 GADRDat$ = "ADRESSEN"
 FILE GConDat$
 INDEX codecon.GConDat$
 IF RECCOUNT (GConDat$) > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 i% = 0
 MOUSE OFF 
 WHILE NOT EOF (GConDat$)
   i% = i% + 1
   IF EXISTS (codecon.GConDat$,codeku.GADRDat$) THEN 
     SELECT KEY codecon.GConDat$ FILE GADRDat$ INDEX codeku.GADRDat$
     Nachname.GConDat$ = Nachname.GADRDat$
     Vorname.GConDat$ = Vorname.GADRDat$
     Strasse.GConDat$ = Stra·e.GADRDat$
     Ort.GConDat$ = Ort.GADRDat$
     Kundennummer.GConDat$ = Kundennummer.adressen
     STORE FILE GConDat$
     UNLOCK CURRENT FILE GConDat$
   END IF 
   SET STATUS STR$ (i%,"999999") + " DatensÑtze angepa·t"
   SELECT NEXT LOCK FILE GConDat$
 WEND 
 SET STATUS ""
 MOUSE ON 
 CALL ADRKontIntro()
 REQUEST "Anpassung beendet!"
 END SUB 
  
SUB KontaktFilt()
   a% = RECCOUNT ("kontgr")
   IF a% < 1 THEN END SUB 
   DIM Waehrung$(a%)
   DIM Waehrung%(a%)
   FOR i% = 1 TO a%
     Waehrung$(i%) = ""
     Waehrung%(i%) = 0
   NEXT i%
   FILE "kontgr"
   INDEX KontaktGruppe.kontgr
   SELECT WHERE 
   SELECT FIRST 
   a% = 0
   Waehrung%(a%) = 999999
   Waehrung$(a%) = " kein Filter"
   WHILE NOT EOF ("kontgr")
     a% = a% + 1
     Waehrung%(a%) = codekgr%
     Waehrung$(a%) = KontaktGruppe.kontgr + SPACE$ (90) + STR$ (codekgr.kontgr,"000000")
     SELECT NEXT FILE "kontgr" INDEX KontaktGruppe.kontgr
   WEND 
   
   DIM Auswahl1$(1)
     FILE "kontgr"
     prompt$ = Waehrung$(0)
     CREATE DIALOG "PREISLIS",0,0,190,184,"Kontaktgruppe","MS Sans Serif",8
      ADD DIALOG "PREISLIS",4,0,0,189,157,0," Auswahl Gesellschaft"
      ADD DIALOG "PREISLIS",7,5,14,169,145,2,2,Waehrung$,Auswahl1$,prompt$
      ADD DIALOG "PREISLIS",1,37,165,55,16,1,"&OK",1,1
      ADD DIALOG "PREISLIS",1,107,165,55,16,0,"&Abbrechen",0,0
      DIALOG "PREISLIS",req%
      REMOVE DIALOG "PREISLIS"
      IF req% = 1 THEN 
        SELECT WHERE FILE "kontgr"
        SELECT WHERE FILE "connect"
        CodeKGr% = VAL ( RIGHT$ (Auswahl1$(0),6))
        IF CodeKGR% = 999999 THEN CodeKGr% = 0
        IF (CodeKGR% > 0) THEN 
          laenge1% = LEN (Auswahl1$(0))
          ausw$ = LEFT$ (Auswahl1$(0),50)
          ausw1$ = TRIM$ (ausw$)
          
          geskontfi$ = "Filter fÅr Kontakt-Gruppe: " + ausw1$
        ELSE 
          geskontfi$ = "Filter fÅr Kontakt-Gruppe: <kein Filter>"
        END IF 
      END IF 
      bef$ = "Select where Codeku.connect = knr%"
      IF CodeKGR% > 0 THEN 
        bef$ = bef$ + " AND CodeKGR.connect = CodeKGR%"
      END IF 
      FILE "connect"
      EXECUTE bef$
 MOUSE ON 
 REM SELECT FORM KEY kunr% FILE "Kvertrag" INDEX codeku.kvertrag
 SELECT FORM FIRST 
 FORM 
 
 END SUB 
 
SUB KontGrNeu()
 codekey% = codekey.connect
 IF NEW ("connect") OR MOD ("connect") THEN CALL QuickStore("connect")
   a% = RECCOUNT ("kontgr")
   DIM Keyword$(a%)
   DIM Auswahl1$(1)
   FOR i% = 0 TO a%
     Keyword$(i%) = ""
   NEXT i%
   FILE "kontgr"
   INDEX KontaktGruppe.kontgr
   SELECT WHERE 
   SELECT FIRST 
   a% = 0
   WHILE NOT EOF ("kontgr")
     Keyword$(a%) = KontaktGruppe.kontgr + SPACE$ (100) + STR$ (codekgr.kontgr,"000000")
     a% = a% + 1
     SELECT NEXT FILE "kontgr" INDEX KontaktGruppe.kontgr
   WEND 
   Keyword$(a%) = ""
 MOUSE ON 
 laenge% = 50
 CREATE DIALOG "KEYWORD",0,0,233,200,title$,"MS Sans Serif",8
 ADD DIALOG "KEYWORD",4,0,1,233,176,0,""
 ADD DIALOG "KEYWORD",9,4,12,21,24,2
 ADD DIALOG "KEYWORD",5,31,14,189,19,0,"Bitte wÑhlen Sie den Eintrag aus, der in den aktuellen Kontakt aufgenommen werden soll:"
 ADD DIALOG "KEYWORD",7,31,38,188,122,2,2,Keyword$,Auswahl1$,prompt$
 IF NOT disabled%("KONTAKTGROUPNEW") THEN 
   ADD DIALOG "KEYWORD",6,31,158,188,12,0,0,KW$,laenge%
 END IF 
 IF disabled%("KONTAKTGROUPDEL") THEN 
   ADD DIALOG "KEYWORD",1,57,182,55,15,1,"&OK",1,1
   ADD DIALOG "KEYWORD",1,113,182,55,15,0,"&Abbrechen",0,0
 ELSE 
   ADD DIALOG "KEYWORD",1,12,182,45,15,1,"&OK",1,1
   ADD DIALOG "KEYWORD",1,68,182,45,15,0,"&Abbrechen",0,0
   ADD DIALOG "KEYWORD",1,124,182,45,15,0,"&Lîschen",2,1
 END IF 
 DIALOG "KEYWORD",req%
 REMOVE DIALOG "KEYWORD"
 IF req% <> 0 THEN 
   IF req% = 1 THEN 
     IF kw$ = "" THEN 
       CodeKGr% = VAL ( RIGHT$ (Auswahl1$(0),6))
       SELECT KEY codekgr% FILE "kontgr" INDEX codekgr.kontgr
       kw$ = KontaktGruppe.kontgr
     ELSE 
       kw$ = UCASE$ (kw$)
       kw$ = TRIM$ ( LTRIM$ (kw$))
       IF NOT EXISTS (kw$,KontaktGruppe.kontgr) THEN 
         BLANK FILE "kontgr"
         codekgr.kontgr = SER ("kontgr",1)
         codekgr% = codekgr.kontgr
         KontaktGruppe.kontgr = kw$
         CALL QuickStore("Kontgr")
       ELSE 
         SELECT KEY kw$ FILE "kontgr" INDEX KontaktGruppe.kontgr
         codekgr% = codekgr.kontgr
       END IF 
     END IF 
     SELECT KEY codekey% LOCK FILE "connect" INDEX codekey.connect
     codeKGR.connect = codekgr%
     KontaktGruppe.connect = kw$
     CALL QuickStore("connect")
   END IF 
   IF req% = 2 THEN 
     CodeKGr% = VAL ( RIGHT$ (Auswahl1$(0),6))
     SELECT KEY codekgr% LOCK FILE "kontgr" INDEX codekgr.kontgr
     SELECT REMOVE 
     SELECT FIRST FILE "connect" INDEX codekey.connect
     SELECT KEY codekey% LOCK FILE "connect" INDEX codekey.connect
     codeKGR.connect = 0
     KontaktGruppe.connect = ""
     CALL QuickStore("connect")
   END IF 
 END IF 
 SELECT FORM KEY codekey% LOCK FILE "connect" INDEX codekey.connect
 kontaktfi$ = "Kontakt-Gruppe: " + Kontaktgruppe.connect
 FORM 
 END SUB 
 
SUB ADRSich()
 codeku1% = codeku.adressen
     geand% = 0
     REM Postanschrift Ñndern,wenn diese Option gestzt ist
     IF Gpostanschrae$ LIKE "TRUE" THEN GOTO w120220081
 
 
     IF GVorname$ = "" AND Vorname.adressen <> "" THEN geand% = - 1
     IF GName$ = "" AND Nachname.adressen <> "" THEN geand% = - 1
     IF GGebname$ = "" AND Geburtsname.adressen <> "" THEN geand% = - 1
     IF GOrt$ = "" AND Ort.adressen <> "" THEN geand% = - 1
     IF GPLZ$ = "" AND plz.adressen <> "" THEN geand% = - 1
     IF GStrasse$ = "" AND Stra·e.adressen <> "" THEN geand% = - 1
 
     IF GVorname$ <> "" AND GVorname$ <> Vorname.adressen THEN geand% = - 2
     IF GName$ <> "" AND GName$ <> "NEU" AND GName$ <> Nachname.adressen THEN geand% = - 2
     IF GGebname$ <> "" AND GGebname$ <> Geburtsname.adressen THEN geand% = - 2
     IF GOrt$ <> "" AND GOrt$ <> Ort.adressen THEN geand% = - 2
     IF GPLZ$ <> "" AND plz.adressen <> GPLZ$ THEN geand% = - 2
     IF GStrasse$ <> "" AND Stra·e.adressen <> GStrasse$ THEN geand% = - 2
     IF geand% = - 2 OR geand% = - 1 THEN 
       REQUEST "Ein oder mehrere Felder, die zur Anschrift gehîren, wurden geÑndert?","Wollen Sie das Postanschriftsfeld neu erzeugen lassen?",130,req%
       IF req% = 1 THEN 
         geand% = - 1
       ELSE 
         geand% = 0
       END IF 
     END IF 
     IF Postanschrift.adressen = "" OR geand% = - 1 THEN 
       p$ = ""
       IF anrede.adressen LIKE "Herr*" OR anrede.adressen LIKE "Fr*" OR anrede.adressen LIKE "Fam*" THEN 
         p$ = Anrede.adressen + " "
         IF LTRIM$ (Titel.adressen) <> "" THEN 
           p$ = p$ + " " + LTRIM$ (Titel.adressen) + CHR$ (13) + CHR$ (10)
         ELSE 
           IF p$ <> "" THEN 
            p$ = p$ + CHR$ (13) + CHR$ (10)
           END IF 
         END IF 
         IF vorname.adressen <> "" THEN 
           p$ = p$ + LTRIM$ (Vorname.adressen) + " " + LTRIM$ (Nachname.adressen) + CHR$ (13) + CHR$ (10)
         ELSE 
           p$ = p$ + LTRIM$ (Nachname.adressen) + CHR$ (13) + CHR$ (10)
         END IF 
         p$ = p$ + Stra·e.adressen + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + plz.adressen + " " + Ort.adressen
         IF land.adressen <> "" THEN p$ = p$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + Land.adressen
         REM p$ = p$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + briefanrede.adressen
       ELSE 
         p$ = LTRIM$ (Anrede.adressen) + " " + LTRIM$ (titel.adressen) + CHR$ (13) + CHR$ (10)
         IF geburtsname.adressen <> "" THEN 
           p$ = p$ + LTRIM$ (nachname.adressen) + CHR$ (10) + CHR$ (13) + LTRIM$ (geburtsname.adressen) + CHR$ (13) + CHR$ (10) + LTRIM$ (Vorname.adressen) + CHR$ (13) + CHR$ (10)
         ELSE 
           p$ = p$ + LTRIM$ (Nachname.adressen) + CHR$ (13) + CHR$ (10) + LTRIM$ (Vorname.adressen) + CHR$ (13) + CHR$ (10)
         END IF 
         p$ = p$ + Stra·e.adressen + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + plz.adressen + " " + Ort.adressen
         IF land.adressen <> "" THEN p$ = p$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + Land.adressen
         REM p$ = p$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + briefanrede.adressen
       END IF 
       Adrtemp$ = p$
       CREATE DIALOG "MakeAdr",0,0,273,156,"Postanschriftsfeld","MS Sans Serif",8
       ADD DIALOG "MakeAdr",4,0,0,272,131,0,""
       ADD DIALOG "MakeAdr",9,3,10,21,22,2
       ADD DIALOG "MakeAdr",5,29,11,233,19,0,"Bitte geben Sie an, wie die Adresse im Postanschriftsfeld gespeichert werden soll:"
       ADD DIALOG "MakeAdr",6,30,33,236,86,68,2,Adrtemp$,1800
       ADD DIALOG "MakeAdr",1,73,135,55,15,1,"&Weiter",1,1
       ADD DIALOG "MakeAdr",1,129,135,55,15,0,"&Abbrechen",0,0
       DIALOG "MakeAdr",req%
       REMOVE DIALOG "MakeAdr"
       IF req% = 1 THEN 
         Postanschrift.adressen = Adrtemp$
       END IF 
     END IF 
w120220081: 
     CALL QuickStore("ADRESSEN")
     IF GMahn$ <> Mahnsperre.Adressen OR GMahnDat% <> MahnsperBisdat.Adressen THEN 
       MOUSE OFF 
       GMahn$ = Mahnsperre.Adressen
       GMahnDat% = MahnsperBisdat.Adressen
       IF NOT OPEN ("rausgang") THEN CALL DFile(3,"rausgang" + _fpw$)
       IF NOT OPEN ("master") THEN CALL DFile(3,"master" + _fpw$)
       IF NOT OPEN ("mahnung") THEN CALL DFile(3,"mahnung" + _fpw$)
       codeku% = codeku.adressen
       CALL Fehler("Einen Moment bitte, die Mahnsperre wird auf das Rechnungsausgangsbuch und der Masterdatei angewandt.","")
       UPDATE Mahnsperre.master = GMahn$:MahnsperBisdat.master = GMahnDat% WHERE codeku.master = codeku%
       END UPDATE 
       UPDATE Mahnsperre.rausgang = GMahn$:MahnsperBisdat.rausgang = GMahnDat% WHERE codeku.rausgang = codeku%
       END UPDATE 
       UPDATE Mahnsperre.mahnung = GMahn$:MahnsperBisdat.mahnung = GMahnDat% WHERE codeku.mahnung = codeku%
       END UPDATE 
       CLOSE FILE "mahnung"
       CLOSE FILE "rausgang"
       CLOSE FILE "master"
       IF NOT OPEN ("rausgang") THEN CALL DFile(3,"rausgang" + _fpw$)
       IF NOT OPEN ("master") THEN CALL DFile(3,"master" + _fpw$)
       IF NOT OPEN ("mahnung") THEN CALL DFile(3,"mahnung" + _fpw$)
     END IF 
     GVorname$ = Vorname.adressen
     GName$ = Nachname.adressen
     GGebname$ = Geburtsname.adressen
     GOrt$ = Ort.adressen
     GPLZ$ = plz.adressen
     GStrasse$ = Stra·e.adressen
     IF GCodieADR$ LIKE "TRUE" THEN 
     ELSE 
       GRech$ = Rechsperre.Adressen
       GRechDat% = RechBisdat.Adressen
     END IF 
     SELECT KEY codeku1% LOCK FILE "ADRESSEN" INDEX codeku.adressen
 END SUB 
 
 
 
 
 
FUNCTION VSNRPack3$(VSNR$)
 tVSNR$ = ""
 FOR a% = 1 TO LEN (VSNR$)
   tC$ = MID$ (VSNR$,a%,1)
   tC1$ = UCASE$ ( MID$ (VSNR$,a%,1))
         x% = ASC ( LEFT$ ( UCASE$ (tC$),1))
         SELECT CASE x%
           CASE 142
             tC$ = "ae"
           CASE 153
             tC$ = "oe"
           CASE 154
             tC$ = "ue"
         END SELECT 
         IF tc$ LIKE "·" THEN tc$ = "ss"
   tVSNR$ = tVSNR$ + tC$
 NEXT a%
 VSNRPack3$ = tVSNR$
 END FUNCTION 
 

 REM adrselect.adressen=   1,2,6,7 
 REM ADRStatus like "Koop*","CB#FC*","PROVIS","CBORDFC*","*CLASSIC*","DKM*"
 REM ADRGruppe like "DKM*","BVF*","ASP*","GSH","MAKLER*","*SASCHA*","VEMA","PROVIS*"
SUB ExpImpCOdie(source$)
 ziel$ = LEFT$ (source$,3) + GnachExp$
 REM CALL Fehler("ExpImpCOdie " + source$,ziel$)
 IF nachExport.stamm LIKE "sz" THEN aoffset% = szoffset.stamm
 IF nachExport.stamm LIKE "codie" THEN aoffset% = codieoffset.stamm
 SELECT CASE UCASE$ (source$)
   CASE "ADRESSEN"
     ok% = 0
     IF adrselect.adressen = "1" OR adrselect.adressen = "2" OR adrselect.adressen = "6" OR adrselect.adressen = "7" THEN ok% = 1
     IF ADRStatus.adressen LIKE "Koop*" OR ADRStatus.adressen LIKE "CB#FC*" OR ADRStatus.adressen LIKE "PROVIS*" OR ADRStatus.adressen LIKE "CBORDFC*" OR ADRStatus.adressen LIKE "*CLASSIC*" OR ADRStatus.adressen LIKE "DKM*" THEN ok% = 1
     IF ADRGruppe.adressen LIKE "DKM*" OR ADRGruppe.adressen LIKE "BVF*" OR ADRGruppe.adressen LIKE "ASP*" OR ADRGruppe.adressen LIKE "GSH*" OR ADRGruppe.adressen LIKE "MAKLER*" OR ADRGruppe.adressen LIKE "*SASCHA*" THEN ok% = 1
     IF ADRGruppe.adressen LIKE "VEMA*" OR ADRGruppe.adressen LIKE "PROVIS*" THEN ok% = 1
     IF ADRGruppe.adressen LIKE "REEDEREI*" THEN ok% = 0
     IF ADRStatus.adressen LIKE "ISMAN*" THEN ok% = 0
     IF Stichwort.adressen LIKE "ISMAN*" OR Stichwort.adressen LIKE "*ISMAN*" OR Stichwort.adressen LIKE "REEDEREI*" OR Stichwort.adressen LIKE "*REEDEREI*" OR Stichwort.adressen LIKE "SMM0*" OR Stichwort.adressen LIKE "*SMM0*" THEN ok% = 0
     IF Stichwort.adressen LIKE "CLAIM*" OR Stichwort.adressen LIKE "*CLAIM*" THEN ok% = 0
 
     IF aoffset% >= 500000 THEN ok% = 1
     IF ok% = 1 THEN 
       REM Aufruf des Datensatzkopierens nach ADRCODie
       CALL CopyExpImp(source$,ziel$)
     END IF 
   CASE GAkquiDat$
     CALL PruefADRExpImp(source$,ziel$)
   CASE "AKTIONEN"
     CALL CopyExpImp(source$,ziel$)
   CASE "TELEFON"
     CALL PruefADRExpImp(source$,ziel$)
   CASE "DOKUMENT"
     SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
     SELECT KEY codeku.dokument FILE "adressen" INDEX codeku.adressen
     ok% = 0
     IF adrselect.adressen = "1" OR adrselect.adressen = "2" OR adrselect.adressen = "6" OR adrselect.adressen = "7" THEN ok% = 1
     IF ADRStatus.adressen LIKE "Koop*" OR ADRStatus.adressen LIKE "CB#FC*" OR ADRStatus.adressen LIKE "PROVIS*" OR ADRStatus.adressen LIKE "CBORDFC*" OR ADRStatus.adressen LIKE "*CLASSIC*" OR ADRStatus.adressen LIKE "DKM*" THEN ok% = 1
     IF ADRGruppe.adressen LIKE "DKM*" OR ADRGruppe.adressen LIKE "BVF*" OR ADRGruppe.adressen LIKE "ASP*" OR ADRGruppe.adressen LIKE "GSH*" OR ADRGruppe.adressen LIKE "MAKLER*" OR ADRGruppe.adressen LIKE "*SASCHA*" THEN ok% = 1
     IF ADRGruppe.adressen LIKE "VEMA*" OR ADRGruppe.adressen LIKE "PROVIS*" THEN ok% = 1
     REM prÅfen, ob das Dokument rausgegeben werden darf???
     IF gruppe.dokument LIKE "Rechnung*" OR gruppe.dokument LIKE "intern*" OR gruppe.dokument LIKE "ISMAN*" OR gruppe.dokument LIKE "Preis*" OR gruppe.dokument LIKE "Vorlage*" OR gruppe.dokument LIKE "WERB*" OR gruppe.dokument LIKE "Formu*" THEN ok% = 0
     IF gruppe.dokument LIKE "Vertra*" OR gruppe.dokument LIKE "QM*" OR gruppe.dokument LIKE "Bestell*" OR gruppe.dokument LIKE "Gutsch*" OR gruppe.dokument LIKE "MAHN*" OR gruppe.dokument LIKE "allge*" OR gruppe.dokument LIKE "*ISMAN*" THEN ok% = 0
     IF ADRGruppe.adressen LIKE "REEDEREI*" THEN ok% = 0
     IF ADRStatus.adressen LIKE "ISMAN*" THEN ok% = 0
     IF Stichwort.adressen LIKE "ISMAN*" OR Stichwort.adressen LIKE "*ISMAN*" OR Stichwort.adressen LIKE "REEDEREI*" OR Stichwort.adressen LIKE "*REEDEREI*" OR Stichwort.adressen LIKE "SMM0*" OR Stichwort.adressen LIKE "*SMM0*" THEN ok% = 0
     IF Stichwort.adressen LIKE "CLAIM*" OR Stichwort.adressen LIKE "*CLAIM*" THEN ok% = 0
     IF aoffset% >= 500000 THEN ok% = 1
     IF ok% = 1 THEN 
       REM Aufruf des Datensatzkopierens nach ADRCODie
       CALL CopyExpImp(source$,ziel$)
     END IF 
   CASE "TVORLAGE"
     IF EXISTS (codeaq.tvorlage,codeaq.GAkquiDat$) THEN 
       SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       SELECT KEY codeaq.tvorlage FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       
       SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
       SELECT KEY codeku.GAkquiDat$ FILE "adressen" INDEX codeku.adressen
       ok% = 0
       IF adrselect.adressen = "1" OR adrselect.adressen = "2" OR adrselect.adressen = "6" OR adrselect.adressen = "7" THEN ok% = 1
       IF ADRStatus.adressen LIKE "Koop*" OR ADRStatus.adressen LIKE "CB#FC*" OR ADRStatus.adressen LIKE "PROVIS*" OR ADRStatus.adressen LIKE "CBORDFC*" OR ADRStatus.adressen LIKE "*CLASSIC*" OR ADRStatus.adressen LIKE "DKM*" THEN ok% = 1
       IF ADRGruppe.adressen LIKE "DKM*" OR ADRGruppe.adressen LIKE "BVF*" OR ADRGruppe.adressen LIKE "ASP*" OR ADRGruppe.adressen LIKE "GSH*" OR ADRGruppe.adressen LIKE "MAKLER*" OR ADRGruppe.adressen LIKE "*SASCHA*" THEN ok% = 1
       IF ADRGruppe.adressen LIKE "VEMA*" OR ADRGruppe.adressen LIKE "PROVIS*" THEN ok% = 1
       IF ADRGruppe.adressen LIKE "REEDEREI*" THEN ok% = 0
       IF ADRStatus.adressen LIKE "ISMAN*" THEN ok% = 0
       IF Stichwort.adressen LIKE "ISMAN*" OR Stichwort.adressen LIKE "*ISMAN*" OR Stichwort.adressen LIKE "REEDEREI*" OR Stichwort.adressen LIKE "*REEDEREI*" OR Stichwort.adressen LIKE "SMM0*" OR Stichwort.adressen LIKE "*SMM0*" THEN ok% = 0
       IF Stichwort.adressen LIKE "CLAIM*" OR Stichwort.adressen LIKE "*CLAIM*" THEN ok% = 0
       IF erledigt_Termin LIKE "j" THEN ok% = 0
       IF aoffset% >= 500000 THEN ok% = 1
       IF ok% = 1 THEN 
         REM Aufruf des Datensatzkopierens nach ADRCODie
         CALL CopyExpImp(source$,ziel$)
       END IF 
     END IF 
   CASE "PROJECT"
     CALL CopyExpImp(source$,ziel$)
 END SELECT 
 
 END SUB 

SUB PruefADRExpImp(source$,ziel$)
     SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
     SELECT KEY codeku.source$ FILE "adressen" INDEX codeku.adressen
     ok% = 0
     IF adrselect.adressen = "1" OR adrselect.adressen = "2" OR adrselect.adressen = "6" OR adrselect.adressen = "7" THEN ok% = 1
     IF ADRStatus.adressen LIKE "Koop*" OR ADRStatus.adressen LIKE "CB#FC*" OR ADRStatus.adressen LIKE "PROVIS*" OR ADRStatus.adressen LIKE "CBORDFC*" OR ADRStatus.adressen LIKE "*CLASSIC*" OR ADRStatus.adressen LIKE "DKM*" THEN ok% = 1
     IF ADRGruppe.adressen LIKE "DKM*" OR ADRGruppe.adressen LIKE "BVF*" OR ADRGruppe.adressen LIKE "ASP*" OR ADRGruppe.adressen LIKE "GSH*" OR ADRGruppe.adressen LIKE "MAKLER*" OR ADRGruppe.adressen LIKE "*SASCHA*" THEN ok% = 1
     IF ADRGruppe.adressen LIKE "VEMA*" OR ADRGruppe.adressen LIKE "PROVIS*" THEN ok% = 1
     IF ADRGruppe.adressen LIKE "REEDEREI*" THEN ok% = 0
     IF Stichwort.adressen LIKE "ISMAN*" OR Stichwort.adressen LIKE "*ISMAN*" OR Stichwort.adressen LIKE "REEDEREI*" OR Stichwort.adressen LIKE "*REEDEREI*" OR Stichwort.adressen LIKE "SMM0*" OR Stichwort.adressen LIKE "*SMM0*" THEN ok% = 0
     IF Stichwort.adressen LIKE "CLAIM*" OR Stichwort.adressen LIKE "*CLAIM*" THEN ok% = 0
     IF nachExport.stamm LIKE "sz" THEN aoffset% = szoffset.stamm
     IF nachExport.stamm LIKE "codie" THEN aoffset% = codieoffset.stamm
     IF aoffset% >= 500000 THEN ok% = 1
     IF ok% = 1 THEN 
       REM Aufruf des Datensatzkopierens nach ADRCODie
       CALL CopyExpImp(source$,ziel$)
     END IF 
 END SUB 
 
 
SUB CopyExpImp(source$,ziel$)
  REM CALL Fehler("CopyExpImp " + source$,ziel$)
  SELECT CASE UCASE$ (source$)
   CASE "ADRESSEN"
     code% = codeku.adressen
     feld$ = "codeku." + ziel$
     knr% = code%
   CASE GAkquiDat$
     code% = Codeaq.GAkquiDat$
     feld$ = "Codeaq." + ziel$
   CASE "AKTIONEN"
     code% = codeak.aktionen
     feld$ = "codeak." + ziel$
   CASE "TELEFON"
     code% = codetel.telefon
     feld$ = "codetel." + ziel$
   CASE "DOKUMENT"
     code% = codedok.dokument
     feld$ = "codedok." + ziel$
   CASE "TVORLAGE"
     code% = codetv.tvorlage
     feld$ = "codetv." + ziel$
   CASE "PROJECT"
     code% = codepr.project
     feld$ = "codepr." + ziel$
  END SELECT 
  IF EXISTS (code%,feld$$) THEN 
    SELECT FIRST FILE ziel$ INDEX feld$$
    SELECT KEY code% LOCK FILE ziel$ INDEX feld$$
    SELECT REMOVE FILE ziel$
  END IF 
  BLANK FILE ziel$
  a% = CopyRecord%(source$,ziel$)
  codeda.ziel$ = SER (ziel$,1)
  STORE FILE ziel$
 END SUB 
 

SUB CopyExpImp1(source$,ziel$)
  REM CALL Fehler("CopyExpImp1 " + source$,ziel$)
  SELECT CASE UCASE$ (ziel$)
   CASE "ADRESSEN"
     code% = codeku.source$
     feld$ = "codeku." + ziel$
   CASE GAkquiDat$
     code% = Codeaq.source$
     feld$ = "Codeaq." + ziel$
   CASE "AKTIONEN"
     code% = codeak.source$
     feld$ = "codeak." + ziel$
   CASE "TELEFON"
     code% = codetel.source$
     feld$ = "codetel." + ziel$
   CASE "DOKUMENT"
     code% = codedok.source$
     feld$ = "codedok." + ziel$
   CASE "TVORLAGE"
     code% = codetv.source$
     feld$ = "codetv." + ziel$
  END SELECT 
  IF EXISTS (code%,feld$$) THEN 
    SELECT FIRST FILE ziel$ INDEX feld$$
    SELECT KEY code% LOCK FILE ziel$ INDEX feld$$
    SELECT REMOVE FILE ziel$
  END IF 
  BLANK FILE ziel$
  a% = CopyRecord%(source$,ziel$)
  REM codeda.ziel$ = SER (ziel$,1)
  IF ziel$ LIKE "ADRESSEN" THEN 
    IF vonImport.stamm LIKE "sz" THEN kunr$ = "SZ"
    IF vonImport.stamm LIKE "codie" THEN kunr$ = "CODIE"
    Kundennummer.ziel$ = kunr$ + "-" + Kundennummer.ziel$
  END IF 
  STORE FILE ziel$

  REM jetzt die Dokumente kopieren
  IF ziel$ LIKE "DOKUMENT" THEN 
    REM CALL Fehler("Dokument kopieren","")
    zieldatei$ = _netpath$ + dateiname.ziel$
    quelldat$ = _netpath$ + "EXPIMP\" + dateiname.ziel$
    tpfad$ = _netpath$ + "EXPIMP"
    pos% = INSTR (Dateiname.ziel$,"\")
    apfad$ = tpfad$ + "\" + MID$ (Dateiname.ziel$,1,pos%)
    ON ERROR GOTO w10092008c7d
    MAKE DIRECTORY apfad$
w10092008c7d: 
    ON ERROR GOTO ErrorHandler 
 
    ok% = 1
    WHILE ok% = 1
      pos1% = INSTR (pos% + 1,Dateiname.ziel$,"\")
      IF pos1% > 0 THEN 
        pos% = pos1%
        apfad$ = tpfad$ + "\" + MID$ (Dateiname.ziel$,1,pos%)
        ON ERROR GOTO w10092008c8d
        MAKE DIRECTORY apfad$
w10092008c8d: 
        ON ERROR GOTO ErrorHandler 
      ELSE 
        ok% = 0
      END IF 
    WEND 
    apfad$ = tpfad$ + "\" + MID$ (Dateiname.ziel$,1,pos%)
    a% = CALL ("_SBCreateDir",apfad$)
    IF a% = - 1 THEN 
      REM Verzeichnis angelegt
    END IF 
    IF EXISTS (quelldat$) THEN 
      a% = CALL ("_SBFileCopy",quelldat$,zieldatei$)
      IF a% = - 1 THEN 
        REM Kopie existiert
        DELETE quelldat$
      END IF 
    END IF 

  END IF 
 END SUB 
 



SUB ImpoExpImp()
 CALL Fehler("Um den Import zu starten, darf sich kein anderer User im Programm befinden!","")
 REQUEST "Haben alle anderen User das Programm beendet?","",130,req%
 IF req% <> 1 THEN GOTO END1009200811
 IF vonImport.stamm LIKE "sz" THEN aoffset% = szoffset.stamm
 IF vonImport.stamm LIKE "codie" THEN aoffset% = codieoffset.stamm
 MOUSE OFF 
 CALL DatsichImpExp()
 IF NOT OPEN ("ADRessen") THEN CALL DFile(2,"OFFICE\ADRessen" + _fpw$)
 IF NOT OPEN ("Aktionen") THEN CALL DFile(2,"OFFICE\Aktionen" + _fpw$)
 IF NOT OPEN (GAkquiDat$) THEN CALL DFile(2,"OFFICE\Akquise" + _fpw$)
 IF NOT OPEN ("dokument") THEN CALL DFile(2,"OFFICE\dokument" + _fpw$)
 IF NOT OPEN ("telefon") THEN CALL DFile(2,"OFFICE\telefon" + _fpw$)
 IF NOT OPEN ("tvorlage") THEN CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 IF NOT OPEN ("project") THEN CALL DFile(2,"FACTURA\project" + _fpw$)
 vonImport$ = vonImport.stamm
 REM CALL Fehler("Import","")
 datei$ = "EXPIMP\ADR" + vonImport$
 IF NOT OPEN (datei$) THEN CALL DFile(2,datei$ + _fpw$)
 datei$ = "EXPIMP\AKQ" + vonImport$
 IF NOT OPEN (datei$) THEN CALL DFile(2,datei$ + _fpw$)
 datei$ = "EXPIMP\AKT" + vonImport$
 IF NOT OPEN (datei$) THEN CALL DFile(2,datei$ + _fpw$)
 datei$ = "EXPIMP\DOK" + vonImport$
 IF NOT OPEN (datei$) THEN CALL DFile(2,datei$ + _fpw$)
 datei$ = "EXPIMP\TEL" + vonImport$
 IF NOT OPEN (datei$) THEN CALL DFile(2,datei$ + _fpw$)
 datei$ = "EXPIMP\TVO" + vonImport$
 IF NOT OPEN (datei$) THEN CALL DFile(2,datei$ + _fpw$)

 dat1$ = "ADR" + vonImport$
 CALL ImpoExpImp1("ADRESSEN",dat1$,aoffset%)
 REMOVE FROM FILE dat1$
 CLOSE FILE dat1$

 dat1$ = "AKQ" + vonImport$
 CALL ImpoExpImp1(GAkquiDat$,dat1$,aoffset%)
 REMOVE FROM FILE dat1$
 CLOSE FILE dat1$

 dat1$ = "AKT" + vonImport$
 CALL ImpoExpImp1("AKTIONEN",dat1$,aoffset%)
 REMOVE FROM FILE dat1$
 CLOSE FILE dat1$

 dat1$ = "DOK" + vonImport$
 CALL ImpoExpImp1("DOKUMENT",dat1$,aoffset%)
 REMOVE FROM FILE dat1$
 CLOSE FILE dat1$

 dat1$ = "TEL" + vonImport$
 CALL ImpoExpImp1("TELEFON",dat1$,aoffset%)
 REMOVE FROM FILE dat1$
 CLOSE FILE dat1$

 dat1$ = "TVO" + vonImport$
 CALL ImpoExpImp1("TVORLAGE",dat1$,aoffset%)
 REMOVE FROM FILE dat1$
 CLOSE FILE dat1$
 CALL Fehler("Import beendet!","")

END1009200811: 
 END SUB 



SUB ImpoExpImp1(ziel$,dat1$,aoffset%)
 FILE dat1$
 INDEX codeda
 SELECT FIRST 
 SELECT KEY aoffsett% FILE dat1$ INDEX codeda
 i% = 0
 j% = RECCOUNT (dat1$)
 WHILE NOT EOF (dat1$)
   i% = i% + 1
   CALL CopyExpImp1(dat1$,ziel$)
   SET STATUS "Importiere :" + STR$ (i%,"999999") + " von " + STR$ (j%,",999999") + " -- " + dat1$ + "/" + ziel$
   SELECT NEXT FILE dat1$ INDEX codeda
 WEND 
 END SUB 


 
SUB DatsichImpExp()
 apfad$ = _netpath$ + "EXPIMP\SICHERUN"
 ON ERROR GOTO w10092008c2a
 MAKE DIRECTORY apfad$
w10092008c2a: 
 ON ERROR GOTO ErrorHandler 


 dpfad$ = _netpath$ + "EXPIMP\SICHERUN\" + DATE$ ( TODAY ,"yymm0d")
 datnr$ = DATE$ ( TODAY ,"yymm0d")
 i% = 0
 ok% = 0
 WHILE ok% = 0
   i% = i% + 1
   IF i% > 99 THEN 
     ON ERROR GOTO rb100920082
     REMOVE DIRECTORY dpfad$ + "01"
rb100920082: 
     i% = 1
   END IF 
   ON ERROR GOTO rb100920081
   tpfad$ = dpfad$ + STR$ (i%,"00")
   MAKE DIRECTORY dpfad$ + STR$ (i%,"00")
   ok% = - 1
rb100920081: 
   ON ERROR GOTO ErrorHandler
 WEND 
 textdo1$ = "Sicherungskopie befindet sich im Pfad: " + tpfad$
 
 MOUSE OFF 
 SET STATUS "Datei ADRESSEN wird nach: " + tpfad$ + " gesichert"
 IF OPEN ("adressen") THEN CLOSE FILE "ADressen"
 IF OPEN (GAkquiDat$) THEN CLOSE FILE GAkquiDat$
 IF OPEN ("aktionen") THEN CLOSE FILE "Aktionen"
 IF OPEN ("dokument") THEN CLOSE FILE "dokument"
 IF OPEN ("telefon") THEN CLOSE FILE "telefon"
 IF OPEN ("project") THEN CLOSE FILE "project"
 IF OPEN ("tvorlage") THEN CLOSE FILE "tvorlage"

 COPY _netpath$ + "\office\adressen.*" TO tpfad$
 SET STATUS "Datei AKQUISE wird nach: " + tpfad$ + " gesichert"
 COPY _netpath$ + "\office\AKQUISE.*" TO tpfad$
 SET STATUS "Datei AKTIONEN wird nach: " + tpfad$ + " gesichert"
 COPY _netpath$ + "\office\AKTIONEN.*" TO tpfad$
 SET STATUS "Datei DOKUMENT wird nach: " + tpfad$ + " gesichert"
 COPY _netpath$ + "\office\DOKUMENT.*" TO tpfad$
 SET STATUS "Datei TELEFON wird nach: " + tpfad$ + " gesichert"
 COPY _netpath$ + "\office\TELEFON.*" TO tpfad$
 SET STATUS "Datei TVORLAGE wird nach: " + tpfad$ + " gesichert"
 COPY _netpath$ + "\office\TVORLAGE.*" TO tpfad$
 SET STATUS "Datei PROJECT wird nach: " + tpfad$ + " gesichert"
 COPY _netpath$ + "\factura\PROJECT.*" TO tpfad$
 WAIT FOR 2
 DELETE tpfad$ + "\*.sb!"
 IF NOT OPEN ("ADRessen") THEN CALL DFile(2,"OFFICE\ADRessen" + _fpw$)
 IF NOT OPEN ("Aktionen") THEN CALL DFile(2,"OFFICE\Aktionen" + _fpw$)
 IF NOT OPEN (GAkquiDat$) THEN CALL DFile(2,"OFFICE\Akquise" + _fpw$)
 IF NOT OPEN ("dokument") THEN CALL DFile(2,"OFFICE\dokument" + _fpw$)
 IF NOT OPEN ("telefon") THEN CALL DFile(2,"OFFICE\telefon" + _fpw$)
 IF NOT OPEN ("tvorlage") THEN CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 IF NOT OPEN ("project") THEN CALL DFile(2,"FACTURA\project" + _fpw$)

 MOUSE ON 
 SET STATUS ""
 REQUEST "Datensicherung beendet","",2
 END SUB 
  
  
SUB ExpFileCreate()
 MOUSE OFF 
 nachExport$ = nachExport.stamm
 apfad$ = _netpath$ + "EXPIMP\Export\"
 ON ERROR GOTO w10092008c1
 MAKE DIRECTORY apfad$
w10092008c1: 
 ON ERROR GOTO ErrorHandler

 datei$ = "ADR" + nachExport$
 IF OPEN (datei$) THEN CLOSE FILE datei$
 datei$ = "AKQ" + nachExport$
 IF OPEN (datei$) THEN CLOSE FILE datei$
  datei$ = "AKT" + nachExport$
 IF OPEN (datei$) THEN CLOSE FILE datei$
  datei$ = "DOK" + nachExport$
 IF OPEN (datei$) THEN CLOSE FILE datei$
  datei$ = "TEL" + nachExport$
 IF OPEN (datei$) THEN CLOSE FILE datei$
  datei$ = "TVO" + nachExport$
 IF OPEN (datei$) THEN CLOSE FILE datei$
   datei$ = "CON" + nachExport$
 IF OPEN (datei$) THEN CLOSE FILE datei$
  datei$ = "PRO" + nachExport$
 IF OPEN (datei$) THEN CLOSE FILE datei$

 dpfad$ = _netpath$ + "EXPIMP\Export\" + DATE$ ( TODAY ,"yymm0d")
 datnr$ = DATE$ ( TODAY ,"yymm0d")
 i% = 0
 ok% = 0
 WHILE ok% = 0
   i% = i% + 1
   IF i% > 99 THEN 
     ON ERROR GOTO rb10092008a2
     REMOVE DIRECTORY dpfad$ + "01"
rb10092008a2: 
     i% = 1
   END IF 
   ON ERROR GOTO rb10092008a1
   tpfad$ = dpfad$ + STR$ (i%,"00")
   MAKE DIRECTORY dpfad$ + STR$ (i%,"00")
   ok% = - 1
rb10092008a1: 
   ON ERROR GOTO ErrorHandler
 WEND 

 apfad$ = tpfad$ + "\BMANAG"
 ON ERROR GOTO w10092008c2
 MAKE DIRECTORY apfad$
w10092008c2: 
 ON ERROR GOTO ErrorHandler 


 apfad$ = tpfad$ + "\BMANAG\TEXT"
 ON ERROR GOTO w10092008c2a
 MAKE DIRECTORY apfad$
w10092008c2a: 
 ON ERROR GOTO ErrorHandler 

 apfad$ = tpfad$ + "\OFFICE"
 ON ERROR GOTO w10092008c3
 MAKE DIRECTORY apfad$
w10092008c3: 
 ON ERROR GOTO ErrorHandler 

 apfad$ = tpfad$ + "\OFFICE\TEXT"
 ON ERROR GOTO w10092008c4
 MAKE DIRECTORY apfad$
w10092008c4: 
 ON ERROR GOTO ErrorHandler 


 apfad$ = tpfad$ + "\FACTURA"
 ON ERROR GOTO w10092008c5
 MAKE DIRECTORY apfad$
w10092008c5: 
 ON ERROR GOTO ErrorHandler 

 apfad$ = tpfad$ + "\FACTURA\TEXT"
 ON ERROR GOTO w10092008c6
 MAKE DIRECTORY apfad$
w10092008c6: 
 ON ERROR GOTO ErrorHandler 


 SET STATUS "sichern der Dateien nach " + tpfad$
 textdo1$ = "Sicherungskopie befindet sich im Pfad: " + tpfad$
 tdat$ = _netpath$ + "\EXPIMP\???" + nachExport$ + ".*"
 COPY tdat$ TO tpfad$
 WAIT FOR 2
 COPY _netpath$ + "EXPIMP\support\*.*" TO tpfad$ + "\"
 ON ERROR GOTO w10092008b1
 DELETE tpfad$ + "\*.sb!"
w10092008b1: 
 ON ERROR GOTO ErrorHandler
 
 REM Dokumentendatei aufmachen und die einzelnen Dokumente kopieren
 datei$ = "DOK" + GnachExp$
 IF NOT OPEN (datei$) THEN CALL DFile(2,"EXPIMP\" + datei$ + _fpw$)
 FILE datei$
 INDEX codedok
 SELECT FIRST 
 i% = 0
 j% = RECCOUNT (datei$)

 REM CALL Fehler("Dokumente kopieren","")

 WHILE NOT EOF (datei$)
   quelle$ = _netpath$ + Dateiname.datei$
   ziel$ = tpfad$ + "\" + Dateiname.datei$
   pos% = 0
   pos% = INSTR (Dateiname.datei$,"\")

   apfad$ = tpfad$ + "\" + MID$ (Dateiname.datei$,1,pos% - 1)
   ON ERROR GOTO w10092008c7
   MAKE DIRECTORY apfad$
w10092008c7: 
   ON ERROR GOTO ErrorHandler 

   ok% = 1
   WHILE ok% = 1
     pos1% = INSTR (pos% + 1,Dateiname.datei$,"\")
     IF pos1% > 0 THEN 
       pos% = pos1%
       apfad$ = tpfad$ + "\" + MID$ (Dateiname.datei$,1,pos% - 1)
       ON ERROR GOTO w10092008c8
       MAKE DIRECTORY apfad$
w10092008c8: 
       ON ERROR GOTO ErrorHandler 
     ELSE 
       ok% = 0
     END IF 
   WEND 
   apfad$ = tpfad$ + "\" + MID$ (Dateiname.datei$,1,pos%)
   a% = CALL ("_SBCreateDir",apfad$)
   IF a% = - 1 THEN 
     REM Verzeichnis angelegt
   END IF 
   a% = CALL ("_SBFileCopy",quelle$,ziel$)
   SET STATUS "Kopiere " + ziel$
   IF a% = - 1 THEN 
     REM Kopie existiert
   END IF 
   SELECT NEXT FILE datei$
 WEND 

 CLOSE FILE datei$

 sichex$ = tpfad$ + "\autoback.exe"
 SET STATUS "Erstellen der Sicherungsdatei in: "
 CALL TextAnz(sichex$)
 WAIT FOR 2
 DELETE tpfad$ + "\???" + nachExport$ + ".*"
 WAIT FOR 2
 ON ERROR GOTO aa10092009ac1
 DELETE tpfad$ + "\autoback.exe"
aa10092009ac1: 
 ON ERROR GOTO ErrorHandler
 WAIT FOR 2
 SET STATUS "Lîschen der exportierten Daten"


    datei$ = "ADR" + GnachExp$
    IF NOT OPEN (datei$) THEN CALL DFile(2,"EXPIMP\" + datei$ + _fpw$)
    FILE datei$
    REMOVE FROM FILE datei$
    datei$ = "AKQ" + GnachExp$
    IF NOT OPEN (datei$) THEN CALL DFile(2,"EXPIMP\" + datei$ + _fpw$)
    FILE datei$
    REMOVE FROM FILE datei$
    datei$ = "AKT" + GnachExp$
    IF NOT OPEN (datei$) THEN CALL DFile(2,"EXPIMP\" + datei$ + _fpw$)
    FILE datei$
    REMOVE FROM FILE datei$
    datei$ = "CON" + GnachExp$
    IF NOT OPEN (datei$) THEN CALL DFile(2,"EXPIMP\" + datei$ + _fpw$)
    FILE datei$
    REMOVE FROM FILE datei$
    datei$ = "DOK" + GnachExp$
    IF NOT OPEN (datei$) THEN CALL DFile(2,"EXPIMP\" + datei$ + _fpw$)
    FILE datei$
    REMOVE FROM FILE datei$
    datei$ = "PRO" + GnachExp$
    IF NOT OPEN (datei$) THEN CALL DFile(2,"EXPIMP\" + datei$ + _fpw$)
    FILE datei$
    REMOVE FROM FILE datei$
    datei$ = "TEL" + GnachExp$
    IF NOT OPEN (datei$) THEN CALL DFile(2,"EXPIMP\" + datei$ + _fpw$)
    FILE datei$
    REMOVE FROM FILE datei$
    datei$ = "TVO" + GnachExp$
    IF NOT OPEN (datei$) THEN CALL DFile(2,"EXPIMP\" + datei$ + _fpw$)
    FILE datei$
    REMOVE FROM FILE datei$
    SET STATUS ""
    CALL Fehler("Export beendet!","Die zu sendende Datei befindet sich in: " + tpfad$)

 END SUB 



 REM ******************  Suche fÅr Telefon 12.04.2009  *************************************************************************
SUB SearchInitTelA(datsu$)
 REM CALL Fehler("SearchInitAq1","")
   IF GCODieRuf% = - 1 THEN 
     ret% = CALL ("_SearchClose")
     GCODieRuf% = 0
   END IF 
 GCODieRuf1% = - 1
 GCODieRuf2% = 0
 GCodieRuf3% = 0
 MENU 2,5,1,"aus Suchliste &wÑhlen,F7","SuKurzTel","Auflistung Telefon"
           f1$ = "Art Kommunikation"
           f2$ = "Nummer"
           f3$ = "Merkmal1"
           f4$ = "Merkmal2"
           f5$ = ""
           f6$ = ""
           f7$ = ""
           f8$ = ""
           f9$ = ""
           f10$ = ""
           f11$ = ""
           f12$ = ""
           f13$ = ""
           f14$ = ""
           f15$ = ""
           f16$ = ""
           f17$ = ""
           f18$ = ""
           f19$ = ""
           f20$ = ""
 IF GASP% THEN 
   SPath$ = _netpath$ + "\" + STR$ (GMACodeMA%,"00000000")
 ELSE 
   SPath$ = GMACodeDir$
 END IF 
 ret% = CALL ("_SearchInit",SPath$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
 END SUB 
  
SUB SearchVorbTelA(datsu$)
 GCODieRuf1% = GCODieRuf1% - 1
               GGGcodeku$ = STR$ (codetel.datsu$,"000000")
               text1$ = ""
               f1$ = FN ansi(Art.datsu$)
               f2$ = FN ansi(Nummer.datsu$)
               f3$ = FN ansi(Kart1.datsu$)
               f4$ = FN ansi(Kart2.datsu$)
               f5$ = ""
               f6$ = ""
               f7$ = ""
               f8$ = ""
               f9$ = ""
               f10$ = ""
               f11$ = ""
               f12$ = ""
               f13$ = ""
               f14$ = ""
               f15$ = ""
               f16$ = ""
               f17$ = "":f18$ = "":f19$ = "":f20$ = ""
               REM CALL Fehler("DoFill1","")
  ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
  END SUB 
 
 REM ******************  Suche fÅr Vermittler 05.04.2009  Ende *************************************************************************
  
 
 
 
 ' Aktualisierung Terminkalender
 ' ===========================================================================
 ' ehemals TERMINAkquiAkt:
 ' noch keine angepa·te ParameterÅbergabe
 
SUB MAILAQAkt1(userfile$)
 opt% = 1
 SET STATUS "Mailing - Schritt 4..."
 CREATE DIALOG "MAIL5",0,0,257,136,title$,"MS Sans Serif",8
 ADD DIALOG "MAIL5",9,6,9,22,24,2
 ADD DIALOG "MAIL5",5,36,9,211,10,0,"Mailing - Schritt 4"
 ADD DIALOG "MAIL5",4,36,19,212,5,0,""
 ADD DIALOG "MAIL5",5,36,28,212,21,0,"Zur Betreuung des Mailings kînnen Sie automatisch EintrÑge in der Termindatei erzeugen lassen."
 ADD DIALOG "MAIL5",5,36,51,212,25,0,"Soll das Programm diese EintrÑge fÅr Sie vornehmen?"
 ADD DIALOG "MAIL5",3,47,76,124,11,0,"&Ja",0,opt%
 ADD DIALOG "MAIL5",3,47,87,136,12,0,"&Nein",1,opt%
 ADD DIALOG "MAIL5",4,36,107,212,5,0,""
 ADD DIALOG "MAIL5",1,136,116,55,15,1,"&Weiter >>",1,1
 ADD DIALOG "MAIL5",1,192,116,55,15,0,"&Abbrechen",0,0
 DIALOG "MAIL5",req%
 REMOVE DIALOG "MAIL5"
 IF opt% = 0 AND req% = 1 THEN 
   cfile$ = FILE 
   FILE "AKTIONEN"
   DIM AKListe$( RECCOUNT ("AKTIONEN"))
   INDEX MemberOf
   SELECT FIRST 
   a% = 0
   _MemberOf$ = "*"
   butofs% = 64
   WHILE NOT EOF ("AKTIONEN")
     IF MemberOf.AKTIONEN LIKE _MemberOf$ + "*" THEN 
       IF LEN (_MemberOf$) < 6 THEN 
         space% = LEN (MemberOf) - 6
       ELSE 
         space% = LEN (MemberOf) - LEN (_memberOf$)
       END IF 
       AKListe$(a%) = SPACE$ (space%) + Bezeichnung + SPACE$ (150) + STR$ (CodeAK,"000000")
       a% = a% + 1
     END IF 
     SELECT NEXT 
   WEND 
   SET STATUS "Mailing - Schritt 5..."
   CREATE DIALOG "MAIL6",0,0,257,136,title$,"MS Sans Serif",8
   ADD DIALOG "MAIL6",9,6,9,22,24,2
   ADD DIALOG "MAIL6",5,36,9,211,10,0,"Mailing - Schritt 5"
   ADD DIALOG "MAIL6",4,36,19,212,5,0,""
   ADD DIALOG "MAIL6",5,36,28,212,16,0,"Bitte wÑhlen Sie eine der vorhandenen Aktionen aus, der das Mailing zugeordnet werden soll."
   ADD DIALOG "MAIL6",7,36,50,211,57,0,2,AKListe$,Auswahl$,AKListe$(0)
   ADD DIALOG "MAIL6",4,36,107,212,5,0,""
   ADD DIALOG "MAIL6",1,136,116,55,15,1,"&Weiter >>",1,1
   ADD DIALOG "MAIL6",1,192,116,55,15,0,"&Abbrechen",0,0
   DIALOG "MAIL6",req%
   REMOVE DIALOG "MAIL6"
   IF req% = 0 THEN 
     CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
     END SUB 'Procedure verlassen
   END IF 
   _vak% = VAL ( RIGHT$ (Auswahl$(0),6))
 
   FILE "SUPERVIS"
   DIM MAListe$( RECCOUNT ("SUPERVIS"))
   INDEX Nachname
   SELECT FIRST 
   a% = 0
   WHILE NOT EOF ("SUPERVIS")
     MAListe$(a%) = Nachname + ", " + Vorname + SPACE$ (150) + STR$ (CodeMA,"000000")
     a% = a% + 1
     SELECT NEXT 
   WEND 
   SET STATUS "Mailing - Schritt 6..."
   CREATE DIALOG "MAIL7",0,0,257,136,title$,"MS Sans Serif",8
   ADD DIALOG "MAIL7",9,6,9,22,24,2
   ADD DIALOG "MAIL7",5,36,9,211,10,0,"Mailing - Schritt 6"
   ADD DIALOG "MAIL7",4,36,19,212,5,0,""
   ADD DIALOG "MAIL7",5,36,28,212,16,0,"Bitte wÑhlen Sie einen Mitarbeiter aus, dem das Mailing zugeordnet werden soll."
   ADD DIALOG "MAIL7",7,36,50,211,57,0,2,MAListe$,Auswahl$,MAListe$(0)
   ADD DIALOG "MAIL7",4,36,107,212,5,0,""
   ADD DIALOG "MAIL7",1,136,116,55,15,1,"&Weiter >>",1,1
   ADD DIALOG "MAIL7",1,192,116,55,15,0,"&Abbrechen",0,0
   DIALOG "MAIL7",req%
   REMOVE DIALOG "MAIL7"
   IF req% = 0 THEN 
     CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
     END SUB 'Procedure verlassen
   END IF 
   _vma% = VAL ( RIGHT$ (Auswahl$(0),6))
 
   SET STATUS "Mailing - Schritt 7..."
   CREATE DIALOG "MAIL8",0,0,257,146,title$,"MS Sans Serif",8
   ADD DIALOG "MAIL8",9,6,9,22,24,2
   ADD DIALOG "MAIL8",5,36,9,211,10,0,"Mailing - Schritt 7"
   ADD DIALOG "MAIL8",4,36,19,212,5,0,""
   ADD DIALOG "MAIL8",5,36,28,212,16,0,"Bitte geben Sie einen Termin und einen Text fÅr die Kennzeichnung in der Termindatei ein."
   ADD DIALOG "MAIL8",5,36,48,26,12,0,"Datum:"
   ADD DIALOG "MAIL8",6,64,46,47,12,0,0,datum$,10
   ADD DIALOG "MAIL8",5,36,62,22,12,0,"Notiz:"
   ADD DIALOG "MAIL8",6,64,60,184,47,4,0,notiztext$,500
   ADD DIALOG "Mail8",2,64,114,121,13,0,"Termin erledigt",1,0,opt1%
   ADD DIALOG "MAIL8",4,36,107,212,5,0,""
   ADD DIALOG "MAIL8",1,136,126,55,15,1,"&Weiter >>",1,1
   ADD DIALOG "MAIL8",1,192,126,55,15,0,"&Abbrechen",0,0
   DIALOG "MAIL8",req%
   REMOVE DIALOG "MAIL8"
   IF req% = 0 THEN 
     CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
     END SUB 'Procedure verlassen
   END IF 
   REM 16062002 Einbau Projektabfrage
   codepr% = 0
   Projekt$ = ""
seprj160620021: 
   REQUEST "Mîchten Sie die Termine einem Projekt zuordnen?","",130,req1%
   IF req1% = 1 THEN 
     nachfolger% = PRJSuche%(0)
     IF nachfolger% <> 0 THEN 
       SELECT KEY nachfolger% FILE "project" INDEX codepr.project
       codepr% = nachfolger%
       Projekt$ = LTRIM$ (Projektnummer.project) + "/" + LEFT$ (name1.project) + "/" + LEFT$ (ort.project) + "/" + LEFT$ (strasse.project)
       REQUEST "Sie haben Projekt " + LEFT$ (name1.project),"Ist alles korrekt?",130,req2%
       IF req2% <> 1 THEN GOTO seprj160620021
     END IF 
   END IF 
   FILE userfile$
   INDEX codeku.userfile$
   SELECT FIRST 
   MOUSE OFF 
   SET STATUS "Termindatei wird aktualisiert..."
   tmpdok% = SER ("DOKUMENT",1) + 1
   cudo% = tmpdok%
   WHILE NOT EOF (userfile$)
     FILE GAkquiDat$
     BLANK 
     codepr.GAkquiDat$ = codepr%
     IF projekt$ <> "" THEN projekt.GAkquiDat$ = projekt$
     codeaq.GAkquiDat$ = SER (GAkquiDat$,1)
     codeKU.GAkquiDat$ = VAL (CodeKU.userfile$)
     CodeAK.GAkquiDat$ = _vak%
     CodeMA.GAkquiDat$ = _vma%
     SELECT KEY VAL (codeku.userfile$) FILE "Adressen" INDEX codeku.adressen
     SET STATUS "Termindatei wird aktualisiert (" + nachname.adressen + ")..."
     
     nachname.GAkquiDat$ = nachname.adressen
     Wertung.GAkquiDat$ = 0
     Datum.GAkquiDat$ = TODAY 
     CodeDOK.GAkquiDat$ = tmpdok%
     cuaq% = codeaq.GAkquiDat$
     SELECT KEY codema.GAkquiDat$ FILE "supervis" INDEX codema.supervis
     Bearbeiter.GAkquiDat$ = nachname.supervis
     notiz.GAkquiDat$ = notiztext$
     termin.GAkquiDat$ = datum$
     IF opt1% = 0 THEN 
       erledigt_Termin.GAkquiDat$ = "n"
     ELSE 
       erledigt_Termin.GAkquiDat$ = "j"
     END IF 
     CALL QuickStore(GAkquiDat$)
     SELECT NEXT FILE userfile$
   WEND 
 END IF 
 MOUSE ON 
 REM 16042009
 REM*******************************************************************************************
 REQUEST "Mîchten Sie ein Stichwort zuweisen?","",130,req11%
 IF req11% = 1 THEN 
   CALL DFile(2,"OFFICE\keyword" + _fpw$)
   fdat$ = "Keyword"
   feld$ = "keyword"
   laenge% = 30
   DIM Keyword$( RECCOUNT (fdat$))
   DIM Keyword%( RECCOUNT (fdat$))
   DIM Auswahl$(1)
   DIM Farbe$(1)
   MOUSE OFF 
   FILE fdat$
   SELECT FIRST 
   a% = 0
   feld2$ = feld$ + "." + fdat$
   feld3$ = feld$ + ".adressen"
   feld$ = feld2$
   IF feld3$ LIKE "keyword*" THEN 
     prompt$ = ""
   ELSE 
     prompt$ = feld3$$
   END IF 
   IF prompt$ = "" THEN prompt$ = "ZZZZZZZ"
   WHILE NOT EOF (fdat$)
     IF fdat$ LIKE "ADRStat" THEN 
       Keyword$(a%) = feld$$
       Keyword%(a%) = farbewert.adrstat
     ELSE 
       Keyword$(a%) = feld$$
     END IF 
     IF prompt$ = "ZZZZZZZ" THEN prompt$ = Keyword$(a%)
     a% = a% + 1
     SELECT NEXT 
   WEND 
   MOUSE ON 
 
   CREATE DIALOG "KEYWORD",0,0,233,400,title$,"MS Sans Serif",8
   ADD DIALOG "KEYWORD",4,0,1,233,376,0,""
   ADD DIALOG "KEYWORD",9,4,12,21,24,2
   ADD DIALOG "KEYWORD",5,31,14,189,19,0,"Bitte wÑhlen Sie den Eintrag aus, der in die aktuelle Adresse aufgenommen werden soll:"
   ADD DIALOG "KEYWORD",7,31,38,188,322,2,2,Keyword$,Auswahl$,prompt$
   ADD DIALOG "KEYWORD",6,31,358,188,12,0,0,KW$,laenge%
 
   ADD DIALOG "KEYWORD",1,57,382,55,15,1,"&OK",1,1
   ADD DIALOG "KEYWORD",1,113,382,55,15,0,"&Abbrechen",0,0
   DIALOG "KEYWORD",req%
   REMOVE DIALOG "KEYWORD"
   IF req% = 3 THEN 
     kw$ = Auswahl$(0)
     req% = 1
   END IF 
   IF req% <> 0 THEN 
     IF kw$ = "" THEN 
       kw$ = Auswahl$(0)
       IF fdat$ LIKE "ADRStat" THEN 
         FOR i% = 0 TO a% - 1
           IF Keyword$(i%) = kw$ THEN 
             farbe% = Keyword%(i%)
             i% = a% + 1
           END IF 
         NEXT i%
       END IF 
     END IF 
     REM 030697
     IF feld3$ LIKE "keyword*" THEN 
       kw$ = UCASE$ (kw$)
     END IF 
     IF req% = 1 THEN 
       REM ** ANREDE neu aufnehmen
       IF NOT EXISTS (kw$,feld$$) THEN 
         BLANK FILE "keyword"
         codeKey = SER (fdat$,1)
         neuneu% = 1
         Workstation.fdat$ = Workstation%
         QWoNo.fdat$ = STR$ (Workstation%,"000000")
         RecStatus.fdat$ = "c"
         IF feld3$ LIKE "keyword*" THEN 
           feld$$ = UCASE$ (kw$)
         ELSE 
           feld$$ = kw$
         END IF 
         CALL FStore(fdat$)
       END IF 
     END IF 
     REM Stichwort wurde ausgewÑhlt
     FILE "adressen"
     INDEX codeku.adressen
     SELECT FIRST 
     FILE userfile$
     INDEX codeku.userfile$
     SELECT FIRST 
     MOUSE OFF 
     SET STATUS "Adressdatei wird aktualisiert..."
     WHILE NOT EOF (userfile$)
       codeku% = VAL (codeku.userfile$)
       FILE "adressen"
       SELECT KEY codeku% LOCK FILE "Adressen" INDEX codeku.adressen
       ON ERROR GOTO w160420091
       IF codeku.adressen = codeku% THEN 
         su$ = "*" + kw$ + "*"
         IF stichwort.adressen LIKE su$ THEN 
         ELSE 
           stichwort.adressen = stichwort.adressen + ", " + kw$
           CALL QuickStore("adressen")
         END IF 
       END IF 
w160420091: 
       ON ERROR GOTO ErrorHandler
       SELECT NEXT FILE userfile$
       SET STATUS nachname.adressen + " mit " + kw$ + " ergÑnzt "
     WEND 
     MOUSE ON 
   REM Stichwort wurde ausgewÑhlt
   END IF 
 END IF 
 REM******************************************************************************************* 
 SET STATUS "Mailing - letzter Schritt..."
 CREATE DIALOG "MAIL9",0,0,257,136,title$,"MS Sans Serif",8
 ADD DIALOG "MAIL9",9,6,9,22,24,2
 ADD DIALOG "MAIL9",5,36,9,211,10,0,"Mailing - letzter Schritt"
 ADD DIALOG "MAIL9",4,36,19,212,5,0,""
 ADD DIALOG "MAIL9",5,36,27,212,10,0,"Die Vorbereitung des Mailings ist abgeschlossen."
 ADD DIALOG "MAIL9",5,36,38,210,38,0,"Nachfolgend wird die Textverarbeitung aufgerufen, mit deren Serienbrieffunktion das Mailing fertigstellen kînnen."
 ADD DIALOG "MAIL9",4,36,107,212,5,0,""
 ADD DIALOG "MAIL9",1,136,116,55,15,1,"&Weiter >>",1,1
 ADD DIALOG "MAIL9",1,192,116,55,15,0,"&Abbrechen",0,0
 DIALOG "MAIL9",req%
 REMOVE DIALOG "MAIL9"
 IF req% = 0 THEN 
   CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
   adrser% = 0
   maser% = 0
   gesser% = 0
   reser% = 0
   mahnser% = 0
   END SUB 'Procedure verlassen
 END IF 
 SET STATUS "Aufruf der Textverarbeitung..."
 REM ****************************************
 REM ****************************************
 IF GEMAIL% = - 1 AND GEMAILSer% = - 1 THEN 
   REM CALL SerienEMAIL()
   CALL EMAILform()
 ELSE 
   CALL DOKUMENT("allgemeine Schreiben",0)
 END IF 
 SET STATUS "Bereit"
 END SUB 
 
 
 
SUB Zinglerexp()
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\adrhis" + _fpw$)
 CALL DFile(2,"OFFICE\adrstat" + _fpw$)
 CALL DFile(2,"OFFICE\adrgrup" + _fpw$)
 IF OPEN ("adrtemp") THEN CLOSE FILE "ADRTEMP"
 CALL DFile(2,"OFFICE\adrtemp" + _fpw$)
 CALL DFile(2,"color" + _fpw$)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(2,"OFFICE\connect" + _fpw$)
 CALL DFile(2,"OFFICE\banken" + _fpw$)
 REM CALL Fehler("","")
   CALL DFile(3,"TEILREIN" + _fpw$)
   CALL DFile(3,"REINGANG" + _fpw$)
   CALL DFile(3,"TEILRAUS" + _fpw$)
   CALL DFile(3,"RAUSGANG" + _fpw$)
   CALL DFile(3,"MASTER" + _fpw$)
   CALL DFile(3,"SCHEIN" + _fpw$)
   CALL DFile(3,"ABZUGANG" + _fpw$)
   CALL DFile(3,"MAHNUNG" + _fpw$)
   CALL DFile(3,"UMSATZ" + _fpw$)
   CALL DFile(3,"VERTRETE" + _fpw$)
   CALL DFile(3,"PROVISIO" + _fpw$)
   CALL DFile(3,"VERLEIH" + _fpw$)
   CALL DFile(3,"JOURNAL" + _fpw$)
   CALL DFile(3,"einzprov" + _fpw$)
   CALL DFile(3,"floskel" + _fpw$)
   CALL DFile(3,"lbelege" + _fpw$)
   CALL DFile(3,"liefruck" + _fpw$)
   IF DEFA$ = "MEGA" THEN 
     CALL DFile(3,"KSATZ" + _fpw$)
     CALL DFile(3,"SSATZ" + _fpw$)
   END IF 
   CALL DFile(2,"OFFICE\produkt" + _fpw$)
   CALL DFile(2,"OFFICE\prgruppe" + _fpw$)
   CALL DFile(2,"OFFICE\kprodukt" + _fpw$)
 MOUSE OFF 

 
 GOTO w240820091


 datei$ = "adressen"
 FILE datei$
 INDEX nachname
 SELECT FIRST LOCK 
 i% = 0
 j% = RECCOUNT (datei$)
 f% = 0
 WHILE NOT EOF (datei$)
   i% = i% + 1
   IF adrstatus LIKE "ISMAN*" THEN codeku = 0
   IF adrgruppe LIKE "Reederei*" THEN codeku = 0
   IF adrgruppe LIKE "ISMAN*" THEN codeku = 0
   IF FIprivat LIKE "j" THEN codeku = 0
   IF nachname LIKE "SpÑter*" THEN codeku = 0
   IF nachname LIKE "ADAC*" THEN codeku = 0
   IF nachname LIKE "Bargfried*" THEN codeku = 0
   IF nachname LIKE "AVECS*" THEN codeku = 0
   IF nachname LIKE "Ahrens*" THEN codeku = 0
   IF nachname LIKE "Ulrich*" THEN codeku = 0
   IF nachname LIKE "Gebert*" THEN codeku = 0
   IF stichwort LIKE "*HÑndler*" THEN codeku = 0
   IF stichwort LIKE "*AUTOMATIK IMMAK*" THEN codeku = 0
   IF stichwort LIKE "*ISMAN*" THEN codeku = 0
   IF stichwort LIKE "*HARDWARE*" THEN codeku = 0
   IF stichwort LIKE "*INVENTAR*" THEN codeku = 0
   IF stichwort LIKE "*ARZT*" THEN codeku = 0
   IF stichwort LIKE "*AUSLAND*" THEN codeku = 0
   IF stichwort LIKE "*SOFTWAREVERT*" THEN codeku = 0
   IF stichwort LIKE "*LIEFERANT*" THEN codeku = 0
   IF stichwort LIKE "*OEMANW*" THEN codeku = 0
   IF stichwort LIKE "*ôL*" THEN codeku = 0
   IF stichwort LIKE "*IMAKLER*" THEN codeku = 0
   IF stichwort LIKE "*ASSISTANTPU*" THEN codeku = 0
   IF stichwort LIKE "*SOFTWAREENTW*" THEN codeku = 0
   IF stichwort LIKE "*PRAKTIKANT*" THEN codeku = 0
   IF stichwort = "AUTO" THEN codeku = 0
   IF stichwort LIKE "*KLEMPNER*" THEN codeku = 0
   IF stichwort LIKE "*STUDENT*" THEN codeku = 0
   IF stichwort LIKE "*REEDEREI*" THEN codeku = 0
   IF stichwort LIKE "*ISMAN*" THEN codeku = 0
   IF stichwort LIKE "*HANDWERK*" THEN codeku = 0
   IF stichwort LIKE "*LEASING*" THEN codeku = 0
   IF stichwort LIKE "*BöCHER*" THEN codeku = 0
   IF stichwort LIKE "*BöROMANA*" THEN codeku = 0
   IF stichwort LIKE "*HORTUS*" THEN codeku = 0
   IF stichwort LIKE "*Schulungszentr*" THEN codeku = 0
   IF stichwort LIKE "*HANDELSVERTRETER*" THEN codeku = 0
   IF stichwort LIKE "*WERKSTATT*" THEN codeku = 0
   IF stichwort LIKE "*IMMOBILIEN*" THEN codeku = 0
   IF stichwort LIKE "*TELE*" THEN codeku = 0
   IF stichwort LIKE "*IMAKL*" THEN codeku = 0
   IF stichwort LIKE "*BEWERBER*" THEN codeku = 0
   IF stichwort LIKE "*EDV*" THEN codeku = 0
   IF stichwort LIKE "*PROJEKTIERUNG*" THEN codeku = 0
   IF stichwort LIKE "*LIEFERANT*" THEN codeku = 0
   IF stichwort LIKE "*éMTER*" THEN codeku = 0
   IF stichwort LIKE "*HR-IMMO*" THEN codeku = 0
   IF stichwort LIKE "*DEMOANFBUSIN*" THEN codeku = 0
   IF stichwort LIKE "*éMTER*" THEN codeku = 0
   IF stichwort LIKE "*PRIVAT*" THEN codeku = 0
   IF stichwort LIKE "*KRANKENK*" THEN codeku = 0
   IF stichwort LIKE "*WIRTSCHAFTSB*" THEN codeku = 0
   IF stichwort LIKE "*PROJDENOERH*" THEN codeku = 0
   IF stichwort LIKE "*RECHTSANW*" THEN codeku = 0
   IF stichwort LIKE "*DRUCKER*" THEN codeku = 0
   IF stichwort LIKE "*CD-ROM*" THEN codeku = 0
   IF stichwort LIKE "*HOTEL*" THEN codeku = 0
   IF stichwort LIKE "*RESTAURANT*" THEN codeku = 0
   IF stichwort LIKE "*DIENSTLEIS*" THEN codeku = 0
   IF stichwort LIKE "*INTERNET*" THEN codeku = 0
   IF stichwort LIKE "*VERLAG*" THEN codeku = 0
   IF stichwort LIKE "*UMZUG*" THEN codeku = 0
   IF stichwort LIKE "*LIEFERINF*" THEN codeku = 0
   IF stichwort LIKE "*INSTITUT*" THEN codeku = 0
   IF stichwort = "CODIE" THEN codeku = 0
   IF stichwort LIKE "*PFERD*" THEN codeku = 0
   IF stichwort LIKE "*Handicraft*" THEN codeku = 0
   IF stichwort LIKE "*ZEITUNG*" THEN codeku = 0
   IF stichwort LIKE "MESSE*" THEN codeku = 0
   IF stichwort LIKE "*VERMESSUNG*" THEN codeku = 0
   IF stichwort LIKE "INFOPREISE*" THEN codeku = 0
   IF stichwort = "KINO" THEN codeku = 0
   IF stichwort LIKE "*MULTIMEDIA*" THEN codeku = 0
   IF stichwort LIKE "*LANDESDATEN*" THEN codeku = 0
   IF stichwort LIKE "*IMMAK*" THEN codeku = 0
   IF stichwort LIKE "*ANGESTELLT*" THEN codeku = 0
   IF stichwort LIKE "*WVN*" THEN codeku = 0
   IF stichwort LIKE "*DACHD*" THEN codeku = 0
   IF stichwort LIKE "*ELEKTR*" THEN codeku = 0
   IF stichwort LIKE "*WIRTSCHAFTSAUS*" THEN codeku = 0
   IF stichwort LIKE "*computer*" THEN codeku = 0
   IF stichwort LIKE "*reiseb*" THEN codeku = 0
   IF stichwort LIKE "*MALER*" THEN codeku = 0
   IF stichwort LIKE "BMANAGL*" THEN codeku = 0
   IF stichwort LIKE "*WERBUNG*" THEN codeku = 0
   IF stichwort LIKE "*schule*" THEN codeku = 0
   IF stichwort LIKE "*bÅro*" THEN codeku = 0
   IF stichwort LIKE "*uni*" THEN codeku = 0
   IF stichwort LIKE "*metall*" THEN codeku = 0
   IF stichwort LIKE "*minist*" THEN codeku = 0
   IF stichwort LIKE "*bau/arch*" THEN codeku = 0
   IF stichwort LIKE "*lîschen*" THEN codeku = 0
   IF stichwort LIKE "*tischler*" THEN codeku = 0
   IF stichwort LIKE "*bilddaten*" THEN codeku = 0
   IF stichwort LIKE "*netzwerke*" THEN codeku = 0
   IF stichwort LIKE "*gaststÑt*" THEN codeku = 0
   IF stichwort LIKE "*tresor*" THEN codeku = 0
   IF stichwort LIKE "*angler*" THEN codeku = 0
   IF stichwort LIKE "*behîrd*" THEN codeku = 0
   IF stichwort = "FIFA" THEN codeku = 0
   IF stichwort LIKE "*HANDY*" THEN codeku = 0
   IF stichwort LIKE "*LANDESA*" THEN codeku = 0
   IF stichwort LIKE "*DOLMETSCH*" THEN codeku = 0
   IF stichwort LIKE "*VIDEO*" THEN codeku = 0
   IF stichwort LIKE "*DOLMETSCH*" THEN codeku = 0
   IF stichwort LIKE "*DETEKT*" THEN codeku = 0
   IF stichwort LIKE "*MIETBöR*" THEN codeku = 0
   IF stichwort LIKE "*UMWELT*" THEN codeku = 0
   IF stichwort LIKE "*UNIX*" THEN codeku = 0
   IF stichwort LIKE "*MEDIA*" THEN codeku = 0
   IF stichwort LIKE "*BELEUCHT*" THEN codeku = 0
   IF stichwort LIKE "*avecs*" THEN codeku = 0
   IF stichwort LIKE "*verband*" THEN codeku = 0
   IF stichwort LIKE "*genossen*" THEN codeku = 0
   IF stichwort LIKE "*energie*" THEN codeku = 0
   IF stichwort LIKE "*programmierer*" THEN codeku = 0
   IF stichwort LIKE "*unternehmensber*" THEN codeku = 0
   IF stichwort LIKE "*musik*" THEN codeku = 0
   IF stichwort LIKE "" THEN codeku = 0
   IF stichwort LIKE "*BELIEBIG*" THEN codeku = 0
   IF stichwort LIKE "*KASSE*" THEN codeku = 0
   IF stichwort LIKE "*ARCHIV*" THEN codeku = 0
   IF stichwort LIKE "*SUZUKI*" THEN codeku = 0
   IF stichwort LIKE "*VEREIN*" THEN codeku = 0
   IF stichwort LIKE "*MICROF*" THEN codeku = 0
   IF stichwort LIKE "*DVI-*" THEN codeku = 0
   IF stichwort LIKE "*RADIO*" THEN codeku = 0
   IF stichwort LIKE "*FERNSEH*" THEN codeku = 0
   IF stichwort LIKE "*GERICHT*" THEN codeku = 0
   IF stichwort LIKE "*BMANAG*" THEN codeku = 0
   IF stichwort LIKE "*BANK*" THEN codeku = 0
   IF stichwort LIKE "*WOHNUNG*" THEN codeku = 0
   IF stichwort LIKE "*PRICEIT*" THEN codeku = 0
   IF stichwort LIKE "*BEZIKSAMT*" THEN codeku = 0
   IF stichwort LIKE "*MESSTECHN*" THEN codeku = 0
   IF stichwort LIKE "*HANDELSREG*" THEN codeku = 0
   IF stichwort LIKE "HANDI" THEN codeku = 0
   IF stichwort LIKE "*SPORT*" THEN codeku = 0
   IF stichwort LIKE "*REGOFFICE*" THEN codeku = 0
   IF stichwort LIKE "*REGWORK*" THEN codeku = 0
   IF stichwort LIKE "*C++*" THEN codeku = 0
   IF stichwort LIKE "*KNAPP*" THEN codeku = 0
   IF stichwort LIKE "*ROCKROHR*" THEN codeku = 0
   IF stichwort LIKE "*INKASSO*" THEN codeku = 0
   IF stichwort LIKE "*WORKS*" THEN codeku = 0
   IF stichwort LIKE "*CHINA*" THEN codeku = 0
   IF stichwort LIKE "*softwarefi*" THEN codeku = 0
   IF stichwort LIKE "*werft*" THEN codeku = 0
   IF stichwort LIKE "business*" THEN codeku = 0
   IF stichwort LIKE "PROJDEM*" THEN codeku = 0
   IF stichwort LIKE "ANLAGENBAU*" THEN codeku = 0
   IF stichwort LIKE "SDS*" THEN codeku = 0
   IF stichwort LIKE "WERFT*" THEN codeku = 0
   IF stichwort LIKE "software*" THEN codeku = 0
   IF stichwort LIKE "BEWOGE*" THEN codeku = 0
   IF stichwort LIKE "bezirk*" THEN codeku = 0
   IF stichwort LIKE "fîrder*" THEN codeku = 0
   IF stichwort LIKE "projdem*" THEN codeku = 0
   IF stichwort LIKE "toner*" THEN codeku = 0
   IF stichwort LIKE "canon*" THEN codeku = 0
   IF stichwort LIKE "cdwerk*" THEN codeku = 0
   IF stichwort LIKE "cherry*" THEN codeku = 0
   IF stichwort LIKE "textil*" THEN codeku = 0
   IF stichwort LIKE "claims*" THEN codeku = 0
   IF stichwort LIKE "intern*" THEN codeku = 0
   IF stichwort LIKE "beratung*" THEN codeku = 0
   IF stichwort LIKE "laminier*" THEN codeku = 0
   IF stichwort LIKE "etoken*" THEN codeku = 0
   IF stichwort LIKE "proconn*" THEN codeku = 0
   IF stichwort LIKE "vertrag*" THEN codeku = 0
   IF stichwort LIKE "paket*" THEN codeku = 0
   IF stichwort LIKE "cd-lab*" THEN codeku = 0
   IF stichwort LIKE "rente*" THEN codeku = 0
   IF stichwort LIKE "heilprak*" THEN codeku = 0
   IF stichwort LIKE "auskunft*" THEN codeku = 0
   IF stichwort LIKE "software*" THEN codeku = 0
   IF stichwort LIKE "cdmg*" THEN codeku = 0
   IF stichwort LIKE "businessd*" THEN codeku = 0
   IF stichwort LIKE "finanzamt*" THEN codeku = 0
   IF stichwort LIKE "proconn*" THEN codeku = 0
   IF stichwort LIKE "DEMOERHPROJECT*" THEN codeku = 0
   IF stichwort LIKE "ISDN*" THEN codeku = 0
   IF stichwort LIKE "CDROM*" THEN codeku = 0
   IF stichwort = "KUNDE" THEN codeku = 0
   IF stichwort LIKE "ZEITSCHRIFT*" THEN codeku = 0
   IF stichwort LIKE "BERATUNG*" THEN codeku = 0
   IF stichwort LIKE "BUSINESS*" THEN codeku = 0
   IF stichwort LIKE "*BUSINESS*" THEN codeku = 0
   IF stichwort LIKE "ANWALT*" THEN codeku = 0
   IF stichwort LIKE "REGBUSINESS*" THEN codeku = 0
   IF stichwort LIKE "*P/I/W-DEMOERH*" THEN codeku = 0
   IF stichwort LIKE "PRODUKTINFO*" THEN codeku = 0
   IF stichwort LIKE "TEST*" THEN codeku = 0
   IF stichwort LIKE "AUSBILDUNG*" THEN codeku = 0
   IF stichwort LIKE "SOUND*" THEN codeku = 0
   IF stichwort LIKE "SRB-*" THEN codeku = 0
   IF stichwort LIKE "GROSSHAND*" THEN codeku = 0
   IF stichwort LIKE "OLIVE*" THEN codeku = 0
   IF stichwort LIKE "HéDLER*" THEN codeku = 0
   IF stichwort LIKE "*ANBIETER*" THEN codeku = 0
   IF stichwort LIKE "MICROSOFT*" THEN codeku = 0
   IF stichwort LIKE "TRANS-O*" THEN codeku = 0
   IF stichwort LIKE "WBM*" THEN codeku = 0
   IF stichwort LIKE "TELDAFAX*" THEN codeku = 0
   IF stichwort LIKE "Siemens*" THEN codeku = 0
   IF stichwort LIKE "NOVELL*" THEN codeku = 0
   IF stichwort LIKE "US-VISA*" THEN codeku = 0
   IF stichwort LIKE "TAXI*" THEN codeku = 0
   IF stichwort = "KU" THEN codeku = 0
   IF stichwort LIKE "S-BAHN*" THEN codeku = 0
   IF stichwort LIKE "ZERTIFIZ*" THEN codeku = 0
   IF stichwort LIKE "3M*" THEN codeku = 0
   IF stichwort LIKE "HAUSVERW*" THEN codeku = 0
   IF stichwort LIKE "CHIEF*" THEN codeku = 0
   IF stichwort LIKE "REISEN*" THEN codeku = 0
   IF stichwort LIKE "#FAX*" THEN codeku = 0
   IF stichwort LIKE "HANDEL*" THEN codeku = 0
   IF stichwort LIKE "HR-VERS*" THEN codeku = 0
   IF stichwort LIKE "HAUSVER*" THEN codeku = 0
   IF stichwort LIKE "LEHRLING*" THEN codeku = 0
   IF stichwort LIKE "MIETE*" THEN codeku = 0
   IF stichwort LIKE "öBERSET*" THEN codeku = 0
   IF stichwort LIKE "ZERTIFI*" THEN codeku = 0
   IF stichwort LIKE "ZOO*" THEN codeku = 0
   IF stichwort LIKE "IBM*" THEN codeku = 0
   IF stichwort LIKE "INFOERHPROVIS*" THEN codeku = 0
   IF stichwort LIKE "INSTALLATIONSFIRMA*" THEN codeku = 0
   IF stichwort LIKE "INTERKAMA99*" THEN codeku = 0
   IF stichwort LIKE "JACOBY*" THEN codeku = 0
   IF stichwort LIKE "KABEL*" THEN codeku = 0
   IF stichwort LIKE "KOPIERER*" THEN codeku = 0
   IF stichwort LIKE "*REGPROJECT*" THEN codeku = 0
   IF stichwort LIKE "*TONER-RECY*" THEN codeku = 0
   IF stichwort LIKE "MôBEL*" THEN codeku = 0
   IF stichwort LIKE "MONITOR*" THEN codeku = 0
   IF stichwort LIKE "NOTEBOOK*" THEN codeku = 0
   IF stichwort LIKE "NTTERMINAL*" THEN codeku = 0
   IF stichwort LIKE "OFFICEDEMO*" THEN codeku = 0
   IF stichwort LIKE "PAPIER*" THEN codeku = 0
   IF stichwort LIKE "PEACOCK*" THEN codeku = 0
   IF stichwort LIKE "PIZZA*" THEN codeku = 0
   IF stichwort LIKE "POLIZEI*" THEN codeku = 0
 
 
 
 
 
   REM IF FIATEC LIKE "j" THEN codeku = 0
   IF codeku = 0 THEN 
     f% = f% + 1
   END IF 
     codema = 127
     Bearbeiter = "Zingler"
   STORE FILE datei$
   SET STATUS "Datei: " + datei$ + " " + STR$ (i%,",999999") + "/" + STR$ (j%,",999999") + "/gelîscht: " + STR$ (f%,",999999")
   SELECT NEXT LOCK FILE datei$
 WEND 
 INDEX codeku
 SELECT FIRST 
 MOUSE OFF 
 REMOVE FROM FILE datei$ WHERE codeku = 0
 REM REQUEST "Adresse fertig"
 WHILE SER (datei$,1) < 500000
 WEND 
 datei$ = GAkquiDat$
 FILE datei$
 INDEX codeaq
 SELECT FIRST LOCK 
 i% = 0
 j% = RECCOUNT (datei$)
 g% = 0
 WHILE NOT EOF (datei$)
   i% = i% + 1
   codeku% = codeku
   SET STATUS datei$ + "   " + STR$ (i%,",999999") + " von " + STR$ (j%,",999999") + " gelîscht " + STR$ (g%,"999999")
   ok% = 0
   IF NOT EXISTS (codeku%,codeku.adressen) OR notiz LIKE "*Dokument (interne Schreiben)*" OR notiz LIKE "*Dokument (Mahnungen)*" OR notiz LIKE "*RECHNUNG*" OR notiz LIKE "*Dokument (Vertraege)*" OR notiz LIKE "*LIEFERSCHEIN*" THEN 
     ok% = - 1
   END IF 
   IF notiz LIKE "*Dokument (Vertraege) * " OR notiz LIKE "*Dokument (Bestellungen)*" OR notiz LIKE "*Dokument (Vertraege)*" OR notiz LIKE "*AVECS*" OR notiz LIKE "*AVECS*" THEN 
     ok% = - 1
   END IF 
   IF ok% = - 1 THEN 
     codema = 0
     STORE FILE datei$
     g% = g% + 1
   ELSE 
     codema = 127
     Bearbeiter = "Zingler"
     STORE FILE datei$
   END IF 
   SELECT NEXT LOCK 
 WEND 
 MOUSE OFF 
 REMOVE FROM FILE datei$ WHERE codema = 0
 WHILE SER (datei$,1) < 500000
 WEND 
 
 
 datei$ = "tvorlage"
 FILE datei$
 INDEX codeaq
 SELECT FIRST LOCK 
 i% = 0
 j% = RECCOUNT (datei$)
 g% = 0
 WHILE NOT EOF (datei$)
   i% = i% + 1
   codeaq% = codeaq
   SET STATUS datei$ + "   " + STR$ (i%,",999999") + " von " + STR$ (j%,",999999") + " gelîscht " + STR$ (g%,"999999")
   ok% = 0
   IF NOT EXISTS (codeaq%,codeaq.GAkquiDat$) THEN 
     ok% = - 1
   END IF 
   IF ok% = - 1 THEN 
     codema = 0
     STORE FILE datei$
     g% = g% + 1
   ELSE 
     codema = 127
     Bearbeiter = "Zingler"
     STORE FILE datei$
   END IF 
   SELECT NEXT LOCK 
 WEND 
 MOUSE OFF 
 REMOVE FROM FILE datei$ WHERE codema = 0
 WHILE SER (datei$,1) < 500000
 WEND 
 
w240820091: 
 datei$ = "Aktionen"
 FILE datei$
 WHILE SER (datei$,1) < 500000
 WEND 
 
 datei$ = "PROJECT"
 FILE datei$
 WHILE SER (datei$,1) < 500000
 WEND 
 datei$ = "telefon"
 FILE datei$
 INDEX codetel
 SELECT FIRST LOCK 
 i% = 0
 j% = RECCOUNT (datei$)
 g% = 0
 WHILE NOT EOF (datei$)
   i% = i% + 1
   codeku% = codeku
   SET STATUS datei$ + "   " + STR$ (i%,",999999") + " von " + STR$ (j%,",999999") + " gelîscht " + STR$ (g%,"999999")
   IF NOT EXISTS (codeku%,codeku.adressen) THEN 
     codeku = 0
     STORE FILE datei$
     g% = g% + 1
   END IF 
   SELECT NEXT LOCK 
 WEND 
 MOUSE OFF 
 REMOVE FROM FILE datei$ WHERE codeku = 0
 WHILE SER (datei$,1) < 500000
 WEND 
 datei$ = "dokument"
 FILE datei$
 INDEX codedok
 SELECT FIRST LOCK 
 i% = 0
 j% = RECCOUNT (datei$)
 g% = 0
 WHILE NOT EOF (datei$)
   i% = i% + 1
   codeku% = codeku
   loesch% = 0
   SET STATUS datei$ + "   " + STR$ (i%,",999999") + " von " + STR$ (j%,",999999") + " gelîscht " + STR$ (g%,"999999")
   IF NOT EXISTS (codeku%,codeku.adressen) OR dateiname LIKE "*rechnu*" OR dateiname LIKE "*liefer*" OR dateiname LIKE "*bestell*" OR dateiname LIKE "*intern*" OR dateiname LIKE "*.sam*" OR dateiname LIKE "*.wks*" OR dateiname LIKE "*.cdr*" THEN 
     REM REMOVE FROM FILE datei$ WHERE codeku = codeku%
     loesch% = 1
   END IF 
   IF dateiname LIKE "*guts*" OR gruppe LIKE "Mahnungen" OR gruppe LIKE "Vertraege" OR gruppe LIKE "Auftragsbestaetigungen" OR gruppe LIKE "Dokumentationen" OR gruppe LIKE "interne*" OR gruppe LIKE "Formul*" OR gruppe LIKE "Liefer*" THEN 
     loesch% = 1
   END IF 
   IF dokument LIKE "*vertrag*" OR dokument LIKE "*isman*" OR dokument LIKE "*immak*" OR dokument LIKE "*vertrag*" THEN 
     loesch% = 1
     
   END IF 
   IF loesch% = 1 THEN 
     codema = 0
     STORE FILE datei$
     g% = g% + 1
   END IF 
   SELECT NEXT LOCK 
 WEND 
 
 
 datei$ = "dokument"
 FILE datei$
 INDEX codedok
 SELECT FIRST LOCK 
 i% = 0
 j% = RECCOUNT (datei$)
 g% = 0
 WHILE NOT EOF (datei$)
   i% = i% + 1
   codeku% = codeku
   SET STATUS datei$ + "   " + STR$ (i%,",999999") + " von " + STR$ (j%,",999999") + " gelîscht " + STR$ (g%,"999999")
   IF codema = 0 THEN 
     REM REMOVE FROM FILE datei$ WHERE codeku = codeku%
     dateiname$ = _netpath$ + Dateiname.dokument
     ON ERROR GOTO w2307200081
     IF EXISTS (dateiname$) THEN 
       DELETE dateiname$
       g% = g% + 1
     END IF 
w2307200081: 
   ON ERROR GOTO ErrorHandler
   END IF 
   SELECT NEXT LOCK 
 WEND 
 
 datei$ = "dokument"
 FILE datei$
 INDEX codema
 SELECT FIRST LOCK 
 MOUSE OFF 
 REMOVE FROM FILE datei$ WHERE codema = 0
 WHILE SER (datei$,1) < 500000
 WEND 
 
 datei$ = "connect"
 FILE datei$
 INDEX codekucon
 SELECT FIRST LOCK 
 i% = 0
 j% = RECCOUNT (datei$)
 g% = 0
 WHILE NOT EOF (datei$)
   i% = i% + 1
   codeku% = codeku
   codecon% = codecon
   SET STATUS datei$ + "   " + STR$ (i%,",999999") + " von " + STR$ (j%,",999999") + " gelîscht " + STR$ (g%,"999999")
   IF NOT EXISTS (codeku%,codeku.adressen) OR NOT EXISTS (codecon%,codeku.adressen) THEN 
     codeku = 0
     codecon = 0
     STORE FILE datei$
     g% = g% + 1
   END IF 
   SELECT NEXT LOCK 
 WEND 
 MOUSE OFF 
 REMOVE FROM FILE datei$ WHERE codeku = 0 AND codecon = 0
  WHILE SER (datei$,1) < 500000
 WEND 


   CALL DFile(3,"TEILREIN" + _fpw$)
   datei$ = "TEILREIN"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
   CALL DFile(3,"REINGANG" + _fpw$)
   datei$ = "reingang"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
   CALL DFile(3,"TEILRAUS" + _fpw$)
   datei$ = "teilraus"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
   CALL DFile(3,"RAUSGANG" + _fpw$)
   datei$ = "rausgang"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
   CALL DFile(3,"MASTER" + _fpw$)
   datei$ = "master"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
   CALL DFile(3,"SCHEIN" + _fpw$)
   datei$ = "schein"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
   CALL DFile(3,"ABZUGANG" + _fpw$)
   datei$ = "abzugang"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
   CALL DFile(3,"MAHNUNG" + _fpw$)
   datei$ = "mahnung"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
   CALL DFile(3,"UMSATZ" + _fpw$)
   datei$ = "umsatz"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
   CALL DFile(3,"VERTRETE" + _fpw$)
   datei$ = "vertrete"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
   CALL DFile(3,"PROVISIO" + _fpw$)
   datei$ = "provisio"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
   CALL DFile(3,"Artikel" + _fpw$)
   datei$ = "artikel"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
   CALL DFile(3,"gruppen" + _fpw$)
   datei$ = "gruppen"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
   CALL DFile(3,"kombi" + _fpw$)
   datei$ = "kombi"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
   CALL DFile(3,"einzprov" + _fpw$)
   datei$ = "einzprov"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
   CALL DFile(3,"floskel" + _fpw$)
   datei$ = "floskel"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
   CALL DFile(3,"lbelege" + _fpw$)
   datei$ = "lbelege"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
   CALL DFile(3,"liefruck" + _fpw$)
   datei$ = "liefruck"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 


   CALL DFile(3,"wagruppe" + _fpw$)
   datei$ = "wagruppe"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 

   CALL DFile(3,"warenart" + _fpw$)
   datei$ = "warenart"
   FILE datei$
   REMOVE FROM FILE datei$
   WHILE SER (datei$,1) < 500000
   WEND 
 SET STATUS "Ende des Basisexport Zingler"

 END SUB 
 
SUB ZinProjAnp()
   CALL DFile(3,"project" + _fpw$)
   CALL DFile(3,"prconadr" + _fpw$)
   CALL DFile(2,"OFFICE\adressen" + _fpw$)
   FILE "Adressen"
   INDEX codeku.adressen
   SELECT FIRST LOCK FILE "adressen"
   i% = 0
   g% = 0
   j% = RECCOUNT ("Adressen")
   WHILE NOT EOF ("Adressen")
     i% = i% + 1
     IF adrstatus.adressen LIKE "CB#FC-KUNDE" OR adrstatus.adressen LIKE "CBORDFC-Inter*" OR adrstatus.adressen LIKE "PROVIS*" THEN 
       g% = g% + 1
       knr% = codeku.adressen
       codema.adressen = 69
       STORE FILE "Adressen"
       IF adrstatus.adressen LIKE "CB#FC-KUNDE" THEN 
         nachfolger% = 255
         SELECT FIRST FILE "project" INDEX Codepr.project
         SELECT KEY nachfolger% LOCK FILE "project" INDEX Codepr.project
       END IF 
       IF adrstatus.adressen LIKE "CBORDFC-Inter*" THEN 
         nachfolger% = 259
         SELECT FIRST FILE "project" INDEX Codepr.project
         SELECT KEY nachfolger% LOCK FILE "project" INDEX Codepr.project
       END IF 
       IF adrstatus.adressen LIKE "PROVIS*" THEN 
         nachfolger% = 257
         SELECT FIRST FILE "project" INDEX Codepr.project
         SELECT KEY nachfolger% LOCK FILE "project" INDEX Codepr.project
       END IF 
       REM IF nachfolger% <> 0 THEN 
       SELECT KEY nachfolger% LOCK FILE "project" INDEX Codepr.project
       BLANK FILE "prconadr"
       codekey.prconadr = SER ("prconadr",1)
       codeku.prconadr = knr%
       codePR.prconadr = nachfolger%
       CodePRKU.prconadr = STR$ (nachfolger%,"000000") + STR$ (nachfolger%,"000000")
       Nachname.prconadr = Nachname.adressen
       vorname.prconadr = vorname.adressen
       Ort.prconadr = Ort.adressen
       Strasse.prconadr = Stra·e.adressen
       plz.prconadr = plz.adressen
       Name1.prconadr = Name1.project
       Name2.prconadr = Name2.project
       Name3.prconadr = Name3.project
       Ortprj.prconadr = Ort.project
       Strasseprj.prconadr = Strasse.project
       Projektnummer.prconadr = Projektnummer.project
       Typ.prconadr = "N"
       CALL QuickStore("prconadr")
    END IF 
    SET STATUS STR$ (i%,",999999") + "/" + STR$ (j%,",999999") + "/g:  " + STR$ (g%,",999999")
    SELECT NEXT LOCK FILE "adressen
  WEND 
 END SUB 



 
 '      ******************************************************
 '      ** Routinen fÅr Formular "FreeVorlage **
 '      ******************************************************
 
SUB FREEVorl()
  MOUSE OFF 
 CALL DFile(2,"OFFICE\Dokument" + _fpw$)
 _formend% = 0
 prodform$ = "FREEVORL"
 WHILE _formend% = 0
   GRUPPENsub% = 0
   IF UCASE$ ( FORM ) LIKE prodform$ THEN 
     REM Leeranweisung
   ELSE 
     CALL MNFREEVorl()
     MENU ON 
     IF _projekt$ <> "WAWI" THEN 
       OPEN FORM GOFFForm$ + prodform$
     ELSE 
       OPEN FORM GOFFForm$ + prodform1$
     END IF 
     SET f = superbase.form
     SET STATUS "Freie Vorlage"
     SET HEADING title$ + " - Freie Vorlage"
     GAppName$ = _netpath$ + "DOCP\dokument.pdf"
     MOUSE OFF 
     CALL FREEVorlIntro()
   END IF 
   MOUSE ON 
   f.abbruch.enabled = 0
   f.abbruch.visible = 0
   f.suchen.enabled = - 1
   CALL ClearKBDBuffer()
   SET STATUS "Anzahl Freie Vorlagen" + STR$ ( RECCOUNT ("FREEVorl"),",9999999")
   WAIT MOUSE OR KEY OR MENU OR FOR 600
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL FREEVorlrev()
   CASE CrsRight%,PgDn%
     CALL AWAGRNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN 
     IF PAGE > 1 THEN 
       FORM 1
     ELSE 
       _formend% = 1
     END IF 
   END IF 
   SELECT CASE GRUPPENsub%
   CASE 1
     REM von Seite1 auf Seite2
     codefreev% = codefreev.FREEVorl
     _codefreev% = codefreev.FREEVorl
     SELECT FIRST FILE "FREEVorl" INDEX codefreev.FREEVorl
     SELECT KEY codefreev% LOCK FILE "FREEVorl" INDEX codefreev.FREEVorl
     FORM 2
     FORM 
   CASE 2
     CALL FREEVorlSuchen()
   CASE 3
     REM FREEVorl zuweisen
     CALL FREEVorlZuweis()
     freievorlage$ = "Zuordnung zum Dokument: " + Dokument.Dokument
     physvorl$ = _netpath$ + dateiname.dokument
     CALL FREEVorlIntro()
   CASE 4
     FILE "freevorl"
     IF allezeig$ = "ALLE anzeigen" THEN 
       SELECT WHERE FILE "freevorl"
       SELECT FORM FIRST 
       allezeig$ = "Nur die SICHTBAREN zeigen"
       FORM 
     ELSE 
       SELECT WHERE novi1.freevorl = 0
       SELECT FORM FIRST 
       allezeig$ = "ALLE anzeigen"
       FORM 
     END IF 
   CASE 5
     FILE "freevorl"
     FORM 1
     SELECT FORM FIRST 
     FORM 
   CASE 6
     codefreev% = codefreev.FREEVorl
     REQUEST "Frei Vorlage wirklich lîschen?","",130,req%
     IF req% = 1 THEN 
       REMOVE FROM FILE "freevorl" WHERE codefreev.FREEVorl = codefreev%
       FORM 1
       SELECT FORM FIRST 
     END IF 
     FORM 
   CASE 7
     CALL DOKBearbeiten(codedok.freevorl,0)
   CASE 99
     codefreev% = codefreev.FREEVorl
     CALL ButDesabled()
     f.loe.enabled = 0
     ON ERROR GOTO ErrorHandler
     SET EDIT SELECT ON 
     ENTER FREEVorl.FREEVorl,0
     SET EDIT SELECT OFF 
     CALL ButEnabled()
     f.loe.enabled = - 1
     IF abbruch% = - 1 THEN 
       SELECT KEY codefreev% LOCK FILE "FREEVorl" INDEX codefreev.FREEVorl
       FORM 
       abbruch% = 0
     END IF 
   END SELECT 
   REM CALL BMCheckMail()
 WEND 
 _formend% = 0
 cugrp% = 0
 END SUB 
 
 
SUB FREEVorlZuweis()
  SELECT FIRST FILE "supervis" INDEX codema.supervis
  SELECT KEY GCodema% FILE "supervis" INDEX codema.supervis
  FILE "freevorl"
  codefreev% = codefreev.FREEVorl
  cudo% = 0
  CALL DOKVSuchen()
  FILE "freevorl"
  IF cudo% <> 0 THEN 
    SELECT FIRST FILE "dokument" INDEX codedok.dokument
    SELECT KEY cudo% FILE "dokument" INDEX codedok.dokument
    endung$ = GetDateiendung$(Dateiname.dokument)
    IF RIGHT$ endung$ LIKE "doc*" THEN 
    ELSE 
      REQUEST "Das gewÑhlte Dokument ist kein MS Word Dokument?","Trotzdem fortfahren?",135,req%
      IF req% = 0 THEN GOTO w290820091
    END IF 
    SELECT FIRST FILE "FREEVorl" INDEX codefreev.FREEVorl
    SELECT KEY codefreev% LOCK FILE "FREEVorl" INDEX codefreev.FREEVorl
    codedok.freevorl = cudo%
    IF kuerzel.supervis <> "" THEN 
      na$ = " - " + kuerzel.supervis + " -  "
    ELSE 
      na$ = " - " + name.supervis + " -  "
    END IF 
    Kommentar.freevorl = Kommentar.freevorl + DATE$ ( TODAY ) + " " + TIME$ ( NOW ,"hh.mm") + na$ + " - Zuordnung zum Dokument: " + Dokument.Dokument + "/Gruppe: " + Gruppe.dokument + CHR$ (13) + CHR$ (10)
    gÅltigvon.freevorl = TODAY 
    CALL QuickStore("freevorl")
    SELECT FIRST FILE "FREEVorl" INDEX codefreev.FREEVorl
    SELECT KEY codefreev% LOCK FILE "FREEVorl" INDEX codefreev.FREEVorl
    
  END IF 
w290820091: 
  FILE "freevorl"
 END SUB 
 
 
 
 ' GRUPPEN Intro 
 ' =======================================================================
 
SUB FREEVorlIntro()
 FILE "FREEVorl"
 INDEX codefreev.FREEVorl
 SELECT FIRST 
 IF RECCOUNT ("FREEVorl") > 1 THEN 
   FILE "FREEVorl"
   SELECT WHERE novi1.FREEVorl = 0
   SELECT FIRST 
 END IF 
 a% = 0
 INDEX codefreev.FREEVorl
 IF _codefreev% <> 0 THEN 
   SELECT FORM KEY _codefreev%
 ELSE 
   INDEX FREEVorl.FREEVorl
   SELECT FORM FIRST 
   IF EOF ("FREEVorl") THEN 
     BLANK 
     codefreev.FREEVorl = SER ("FREEVorl",1)
   END IF 
 END IF 
 _codedok% = codedok.FREEVorl
 IF _codedok% <> 0 AND EXISTS (_codedok%,codedok.dokument) THEN 
   SELECT FIRST FILE "dokument" INDEX codedok.dokument
   SELECT KEY _codedok% FILE "dokument" INDEX codedok.dokument
   freievorlage$ = "Zuordnung zum Dokument:" + dokument.dokument
   physvorl$ = _netpath$ + dateiname.dokument
 ELSE 
   freievorlage$ = "Zuordnung zum Dokument: <ohne Zuordnung>"
   physvorl$ = ""
 END IF 
 FORM 
 SET INDEX FREEVorl.FREEVorl
 INDEX FREEVorl.FREEVorl
 END SUB 
 
 
 
SUB FREEVorlNext()
 FILE "FREEVorl"
 SET INDEX FREEVorl.FREEVorl
 INDEX FREEVorl.FREEVorl
 CALL PSelectNext()
 _codedok% = codedok.FREEVorl
 SELECT FIRST FILE "dokument" INDEX codedok.dokument
 SELECT KEY _codedok% FILE "dokument" INDEX codedok.dokument
 freievorlage$ = "Zuordnung zum Dokument:" + dokument.dokument
 physvorl$ = _netpath$ + dateiname.dokument
 FORM 
 END SUB 
 

SUB FREEVorlPrev()
 FILE "FREEVorl"
 SET INDEX FREEVorl.FREEVorl
 INDEX FREEVorl.FREEVorl
 CALL PSelectPrev()
  _codedok% = codedok.FREEVorl
 SELECT FIRST FILE "dokument" INDEX codedok.dokument
 SELECT KEY _codedok% FILE "dokument" INDEX codedok.dokument
 freievorlage$ = "Zuordnung zum Dokument:" + dokument.dokument
 physvorl$ = _netpath$ + dateiname.dokument
 FORM 
 END SUB 
 
 
SUB MNFREEVorl()
 MENU CLEAR 
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
 
 ' Buchungsgruppe Neu
 ' =======================================================================
 
SUB FREEVorlNeu()
 IF FREEVorl.FREEVorl <> "" THEN CALL FStore("FREEVorl")
 REM FREEVorlSUB% = 99
 GRUPPENsub% = 99
 BLANK FORM 
 codefreev% = SER ("FREEVorl",1)
 codefreev.FREEVorl = codefreev%
 REM gÅltigvon.freevorl = TODAY 
 FREEVorl.FREEVorl = "NEU"
 STORE FILE "FREEVorl"
     SELECT FIRST FILE "FREEVorl" INDEX codefreev.FREEVorl
     SELECT KEY codefreev% LOCK FILE "FREEVorl" INDEX codefreev.FREEVorl
     FORM 2
 freievorlage$ = "Zuordnung zum Dokument: <ohne Zuordnung>"
 physvorl$ = ""
 FORM 
 END SUB 
 
 
SUB IMPEML1()
 CALL DFile(2,"OFFICE\IMPEM" + _fpw$)
 FILE "ADRESSEN"
 INDEX codeku.adressen
 FILE "impem"
 INDEX codenu.impem
 SELECT FIRST 
 i% = 0
 j% = RECCOUNT ("impem")
 g% = 0
 keyword$ = GETKeyword$()
 
 WHILE NOT EOF ("impem") AND keyword$ <> ""
   MOUSE OFF 
   suna$ = emailadr.impem
   i% = i% + 1
   REM*********************************************************************************
       suna1$ = VSNRPack$(suna$)
       suna3$ = suna1$
       IF suna1$ = "" THEN suna1$ = suna$
       suna2$ = "*" + suna1$ + "*"
       IF RIGHT$ (suna1$,1) <> "*" THEN suna1$ = suna1$ + "*"
       lae% = LEN (suna3$)
       IF lae% > 4 THEN lae% = 4
       ls$ = LEFT$ (suna3$,lae%)
       FILE "Telefon"
       INDEX Qnummer.telefon
       SELECT FIRST 
       SELECT KEY ls$ FILE "telefon" INDEX qnummer.telefon
       SET STATUS "Adre·suche lÑuft..."
       wi% = 0
       MOUSE OFF 
       lq$ = LEFT$ (qnummer.telefon,lae%)
       WHILE NOT EOF ("telefon") AND LEFT$ (qnummer.telefon,lae%) = LEFT$ (suna1$,lae%)
         IF Qnummer.telefon LIKE suna1$ OR qnummer.telefon LIKE suna2$ OR qart.telefon LIKE suna1$ OR qart.telefon LIKE suna2$ THEN 
           codeku% = Codeku.telefon
           SELECT FIRST FILE "Adressen" INDEX codeku.Adressen
           SELECT KEY codeku% LOCK FILE "Adressen" INDEX codeku.Adressen
           keyw1$ = keyword$ + "*"
           keyw2$ = "*" + keyword$ + "*"
           IF stichwort.adressen LIKE keyw1$ OR stichwort.adressen LIKE keyw2$ THEN 
           ELSE 
             IF stichwort.adressen = "" THEN 
               stichwort.adressen = keyword$
             ELSE 
               stichwort.adressen = stichwort.adressen + "," + keyword$
             END IF 
             STORE FILE "ADRESSEN"
           END IF 
           g% = g% + 1
           SELECT LAST FILE "telefon"
         END IF 
         MOUSE OFF 
         SELECT NEXT FILE "telefon"
         SET STATUS STR$ (i%) + "/" + STR$ (j%) + "/" + STR$ (g%)
       WEND 
   REM ********************************************************************************
w040920091: 
   SELECT NEXT FILE "IMPEM"
 WEND 
 END SUB 



FUNCTION GETKeyword$()
 CALL DFile(2,"OFFICE\Keywords" + _fpw$)
 DIM Sparten$( RECCOUNT ("Keywords") + 1)
 DIM Auswahl$(1)
 cfile$ = FILE 
 FILE "Keywords"
 REM  INDEX Keyword.Keyword
 SELECT FIRST 
 REM Sparten$(0) = "<keine Zuordnung>" + SPACE$ (100) + "000000"
 a% = 0
 prompt$ = ""
 MOUSE OFF 
 WHILE NOT EOF ("Keywords")
   Sparten$(a%) = Keyword.Keywords
   SELECT NEXT FILE "Keywords"
   a% = a% + 1
 WEND 
   CREATE DIALOG "MASUCH",0,0,390,364,"StichwortÅbersicht","MS Sans Serif",8
   ADD DIALOG "MASUCH",4,0,0,390,337,0,""
   ADD DIALOG "MASUCH",9,9,11,21,21,2
   ADD DIALOG "MASUCH",5,37,11,151,9,0,"Bitte wÑhlen Sie aus der folgenden Liste aus:"
   ADD DIALOG "MASUCH",7,27,27,345,301,2,2,Sparten$,Auswahl$,prompt$
   ADD DIALOG "MASUCH",1,240,345,55,15,1,"&OK",1,1
   ADD DIALOG "MASUCH",1,297,345,55,15,0,"&Abbrechen",0,0
   MOUSE ON 
   DIALOG "MASUCH",req%
   REMOVE DIALOG "MASUCH"
   IF req% = 1 THEN 
     GETKeyword$ = Auswahl$(0)
   ELSE 
     GETKeyword$ = ""
   END IF 
 FILE cfile$
 END FUNCTION 
 

FUNCTION GetFreeVorl%()
 GetFreeVorl% = 0
             SELECT FIRST FILE "Freevorl"
             DIM freevorl$( RECCOUNT ("Freevorl") + 1,1)
             REDIM freevorl$( RECCOUNT ("Freevorl") + 1)
             a% = 0
             WHILE NOT EOF ("Freevorl")
               IF novi1.freevorl < 1 THEN 
                 freevorl$(a%) = freevorl.freevorl + SPACE$ (200) + STR$ (codefreev.freevorl,"000000")
                 a% = a% + 1
               END IF 
               SELECT NEXT FILE "Freevorl"
             WEND 
             CREATE DIALOG "MASUCH",0,0,390,364,"Freie Vorlagen","MS Sans Serif",8
             ADD DIALOG "MASUCH",4,0,0,390,337,0,""
             ADD DIALOG "MASUCH",9,9,11,21,21,2
             ADD DIALOG "MASUCH",5,37,11,151,9,0,"Bitte wÑhlen Sie aus der folgenden Liste aus:"
             ADD DIALOG "MASUCH",7,27,27,345,301,2,2,freevorl$,Auswahl$,prompt$
             ADD DIALOG "MASUCH",1,240,345,55,15,1,"&OK",1,1
             ADD DIALOG "MASUCH",1,297,345,55,15,0,"&Abbrechen",0,0
             MOUSE ON 
             DIALOG "MASUCH",req%
             REMOVE DIALOG "MASUCH"
             IF req% = 1 THEN 
               cudoc% = codedok.dokument
               codefreev% = VAL ( RIGHT$ (Auswahl$(0),6))
               SELECT FIRST FILE "Freevorl" INDEX codefreev.freevorl
               SELECT KEY codefreev% FILE "Freevorl" INDEX codefreev.freevorl
               codedok% = codedok.freevorl
               SELECT FIRST FILE "dokument" INDEX codedok.dokument
               SELECT KEY codedok% FILE "dokument" INDEX codedok.dokument
               freevorlage$ = _netpath$ + dateiname.dokument
               SELECT FIRST FILE "dokument" INDEX codedok.dokument
               SELECT KEY cudoc% LOCK FILE "dokument" INDEX codedok.dokument
               IF EXISTS (freevorlage$) THEN GetFreeVorl% = codedok%
 END FUNCTION 




SUB BktoSumDru(dat$)
   IF disabled%("öBERSICHTEN") THEN END SUB 
   CALL Fehler("Bitte den Drucker auf Querformat einstellen!","")
   SET PRINTER 
   cfile$ = FILE 
   CALL DFile(3,"warenart" + _fpw$)
   CALL DFile(3,"wagruppe" + _fpw$)
   CALL DFile(3,"reingang" + _fpw$)
   CALL DFile(3,"rausgang" + _fpw$)
 
    datei$ = UCASE$ (dat$)
    DIM dlg AS Dialog
    DIM control AS DialogControl
st230920091:  
    Superbase.Dialogs.Add("BUCHUNG")
    SET dlg = Superbase.Dialogs.BUCHUNG
    dlg.Move(0,0,181,166)
    dlg.Caption = title$
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogIcon1","DialogIcon")
    control.Move(5,4,20,23)
    control.Icon = 2
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(30,6,139,43)
    control.Caption = " Rechnungszeitraum"
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(57,28,40,12)
    control.MaxLength = 10
    control.TextBinding = "von$"
 
    SET control = dlg.Add("DialogTextBox2","DialogTextBox")
    control.Move(120,28,40,13)
    control.MaxLength = 10
    control.TextBinding = "bis$"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(39,30,18,10)
    control.Caption = "von:"
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(101,30,19,9)
    control.Caption = "bis:"
 
    SET control = dlg.Add("DialogFrame2","DialogFrame")
    control.Move(31,51,138,43)
    control.Caption = " Rechnung erledigt? "
 
    SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
    control.Move(34,67,34,16)
    control.Caption = "Ja"
    control.Bind("erledigt%")
    control.ValueOn = 0
 
    SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
    control.Move(72,67,32,16)
    control.Caption = "Nein"
    control.Bind("erledigt%")
    control.ValueOn = 1
 
    SET control = dlg.Add("DialogOptionButton3","DialogOptionButton")
    control.Move(108,67,32,16)
    control.Caption = "egal"
    control.Bind("erledigt%")
    control.ValueOn = 2
 
    SET control = dlg.Add("DialogFrame3","DialogFrame")
    control.Move(30,99,139,43)
    control.Caption = " Rechnung - Eingangs-/Ausgansbuch"
 
    SET control = dlg.Add("DialogOptionButton4","DialogOptionButton")
    control.Move(33,116,56,15)
    control.Caption = "RE-Buch"
    control.Bind("datei$")
    control.ValueOn = "REINGANG"
 
    SET control = dlg.Add("DialogOptionButton5","DialogOptionButton")
    control.Move(98,116,56,15)
    control.Caption = "RA-Buch"
    control.Bind("datei$")
    control.ValueOn = "RAUSGANG"
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(3,148,54,15)
    control.Caption = "&OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(61,148,55,15)
    control.Caption = "&Abbrechen"
    control.ReturnValue = 0
    control.Cancel = 1


    SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
    control.Move(119,148,60,15)
    control.Caption = "letzter Ausdruck"
    control.ReturnValue = 2
 


    DIALOG "BUCHUNG",req%
    REMOVE DIALOG "BUCHUNG"

 IF req% = 1 THEN 
   IF von$ = "" THEN von$ = "01.01.1900"
   IF NOT DateOK%(von$) THEN 
     CALL Fehler("Das Datum VON ist nicht korrekt!","Bitte geben Sie es in der Form dd.mm.yyyy ein")
     GOTO st230920091
   END IF 
   IF bis$ = "" THEN bis$ = "31.12.2999"
   IF NOT DateOK%(bis$) THEN 
     CALL Fehler("Das Datum BIS ist nicht korrekt!","Bitte geben Sie es in der Form dd.mm.yyyy ein")
     GOTO st230920091 
   END IF 
   FILE datei$
   INDEX datum
   SELECT CASE erledigt%
   CASE 0
     REM Ja
     bef$ = "Select where datum >= von$ and datum <= bis$" + " and ucase$(erledigt) like ~J~"
   CASE 1
     REM Nein
     bef$ = "Select where datum >= von$ and datum <= bis$" + " and ucase$(erledigt) <> ~J~"
   CASE 2
     REM egal
     bef$ = "Select where datum >= von$ and datum <= bis$"
   END SELECT 
   EXECUTE bef$
   SELECT FIRST 

   SELECT FIRST LOCK FILE "Warenart"
   WHILE NOT EOF ("Warenart")
         aNetto.warenart = 0
         abrutto.warenart = 0
         aMwst.warenart = 0
         amahn.warenart = 0
         ateilmahn.warenart = 0
         ateil.warenart = 0
         ateilrest.warenart = 0
         eNetto.warenart = 0
         ebrutto.warenart = 0
         eMwst.warenart = 0
         emahn.warenart = 0
         eteilmahn.warenart = 0
         eteil.warenart = 0
         eteilrest.warenart = 0
      STORE FILE "warenart"
      SELECT NEXT LOCK FILE "Warenart"
   WEND 

   SELECT FIRST LOCK FILE "wagruppe"
   WHILE NOT EOF ("wagruppe")
         aNetto.wagruppe = 0
         abrutto.wagruppe = 0
         aMwst.wagruppe = 0
         amahn.wagruppe = 0
         ateilmahn.wagruppe = 0
         ateil.wagruppe = 0
         ateilrest.wagruppe = 0
         eNetto.wagruppe = 0
         ebrutto.wagruppe = 0
         eMwst.wagruppe = 0
         emahn.wagruppe = 0
         eteilmahn.wagruppe = 0
         eteil.wagruppe = 0
         eteilrest.wagruppe = 0
      STORE FILE "wagruppe"
      SELECT NEXT LOCK FILE "wagruppe"
   WEND 

   i% = 0
   j% = RECCOUNT (datei$)
   WHILE NOT EOF (datei$)
     i% = i% + 1
     codewa% = codewa.datei$
     IF EXISTS (codewa%,codewa.warenart) AND codewa% > 0 THEN 
       SELECT FIRST FILE "warenart" INDEX codewa.warenart
       SELECT KEY codewa% LOCK FILE "warenart" INDEX codewa.warenart
       codewgru% = codewgru.warenart
       IF datei$ LIKE "rausgang" THEN 
         aNetto.warenart = aNetto.warenart + GesNettoEu.datei$
         abrutto.warenart = abrutto.warenart + GesBruttoEu.datei$
         aMwst.warenart = aMwst.warenart + MWSTEU.datei$
         amahn.warenart = amahn.warenart + GesMahnEu.datei$
         ateilmahn.warenart = ateilmahn.warenart + SummeMahnEu.datei$
         ateil.warenart = ateil.warenart + SummeTeilEu.datei$
         IF gezmitskonto.datei$ LIKE "J" THEN 
           ateilrest.warenart = ateilrest.warenart + GesBruttoEu.datei$ + GesMahnEu.datei$ - SummeMahnEu.datei$ - SummeTeilEu.datei$ - SkontoEU.datei$
         ELSE 
           ateilrest.warenart = ateilrest.warenart + GesBruttoEu.datei$ + GesMahnEu.datei$ - SummeMahnEu.datei$ - SummeTeilEu.datei$
         END IF 
       ELSE 
         eNetto.warenart = eNetto.warenart + GesNettoEu.datei$
         ebrutto.warenart = ebrutto.warenart + GesBruttoEu.datei$
         eMwst.warenart = eMwst.warenart + MWSTEU.datei$
         emahn.warenart = emahn.warenart + GesMahnEu.datei$
         eteilmahn.warenart = eteilmahn.warenart + SummeMahnEu.datei$
         eteil.warenart = + SummeTeilEu.datei$
         IF gezmitskonto.datei$ LIKE "J" THEN 
           eteilrest.warenart = eteilrest.warenart + GesBruttoEu.datei$ + GesMahnEu.datei$ - SummeMahnEu.datei$ - SummeTeilEu.datei$ - SkontoEU.datei$
         ELSE 
           eteilrest.warenart = eteilrest.warenart + GesBruttoEu.datei$ + GesMahnEu.datei$ - SummeMahnEu.datei$ - SummeTeilEu.datei$
         END IF 
       END IF 
       STORE FILE "warenart"
       IF EXISTS (codewgru%,codewgru.wagruppe) THEN 
         SELECT FIRST FILE "wagruppe" INDEX codewgru.wagruppe
         SELECT KEY codewgru% LOCK FILE "wagruppe" INDEX codewgru.wagruppe
         IF datei$ LIKE "rausgang" THEN 
           aNetto.wagruppe = aNetto.wagruppe + GesNettoEu.datei$
           abrutto.wagruppe = abrutto.wagruppe + GesBruttoEu.datei$
           aMwst.wagruppe = aMwst.wagruppe + MWSTEU.datei$
           amahn.wagruppe = amahn.wagruppe + GesMahnEu.datei$
           ateilmahn.wagruppe = ateilmahn.wagruppe + SummeMahnEu.datei$
           ateil.wagruppe = ateil.wagruppe + SummeTeilEu.datei$
           IF gezmitskonto.datei$ LIKE "J" THEN 
             ateilrest.wagruppe = ateilrest.wagruppe + GesBruttoEu.datei$ + GesMahnEu.datei$ - SummeMahnEu.datei$ - SummeTeilEu.datei$ - SkontoEU.datei$
           ELSE 
             ateilrest.wagruppe = ateilrest.wagruppe + GesBruttoEu.datei$ + GesMahnEu.datei$ - SummeMahnEu.datei$ - SummeTeilEu.datei$
           END IF 
         ELSE 
           eNetto.wagruppe = eNetto.wagruppe + GesNettoEu.datei$
           ebrutto.wagruppe = ebrutto.wagruppe + GesBruttoEu.datei$
           eMwst.wagruppe = eMwst.wagruppe + MWSTEU.datei$
           emahn.wagruppe = emahn.wagruppe + GesMahnEu.datei$
           eteilmahn.wagruppe = eteilmahn.wagruppe + SummeMahnEu.datei$
           eteil.wagruppe = + SummeTeilEu.datei$
           IF gezmitskonto.datei$ LIKE "J" THEN 
             eteilrest.wagruppe = eteilrest.warenart + GesBruttoEu.datei$ + GesMahnEu.datei$ - SummeMahnEu.datei$ - SummeTeilEu.datei$ - SkontoEU.datei$
           ELSE 
             eteilrest.wagruppe = eteilrest.warenart + GesBruttoEu.datei$ + GesMahnEu.datei$ - SummeMahnEu.datei$ - SummeTeilEu.datei$
           END IF 
         END IF 
         STORE FILE "wagruppe"
       END IF 
     END IF 
     SET STATUS STR$ (i%,",99999999") + " verarbeitet von: " + STR$ (j%,",99999999")
     SELECT NEXT 
   WEND 
 END IF 
 REM Report*****************************************
 IF req% = 1 OR req% = 2 THEN 

   SELECT CASE erledigt%
   CASE 0
     REM Ja
     t1$ = "Zeitraum von " + vorn$ + " bis " + bis$ + " - nur erledigte Rechnungen"
   CASE 1
     REM Nein
     t1$ = "Zeitraum von " + vorn$ + " bis " + bis$ + " - nur UNerledigte Rechnungen"
   CASE 2
     REM egal
     t1$ = "Zeitraum von " + vorn$ + " bis " + bis$ + " - erledigte und unerledigte Rechnungen"
   END SELECT 
   REM CALL Fehler("Test","")
   IF datei$ LIKE "RAUSGANG" THEN 
     CALL PRep("SUMLI1")
     REPORT ON ANetto.WARENART AS "sum1%",AMwst.WARENART AS "sum2%",ABrutto.WARENART AS "sum3%",ATeil.WARENART AS "sum4%",AteilRest.WARENART AS "sum5%"
     AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
     END REPORT 
 
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
 
     GROUP WGruppe.WAGRUPPE
     BEFORE GROUP WGruppe.WAGRUPPE
     SET REPORT PAGE "H_WGruppe.WA002"
     OUTPUT REPORT PAGE 
     END GROUP 
 
      AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     ueberschrift$ = t1$
     SET QUERY ON 
     SET QUERY LOCK ON 
     SELECT DISTINCT ;
     WHERE CodeWGru.WAGRUPPE = CodeWGru.WARENART AND (rea.warenart = 1 OR rea.warenart = 0)
     ORDER REPORT WGruppe.WAGRUPPE,Warenart.WARENART
     TO ASK 
     END SELECT 
   ELSE 
     CALL PRep("SUMLI2")
     REPORT ON ENetto.WARENART AS "sum1%",EMwst.WARENART AS "sum2%",EBrutto.WARENART AS "sum3%",ETeil.WARENART AS "sum4%",ETeilRest.WARENART AS "sum5%"
     AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
     END REPORT 
  
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
 
     GROUP WGruppe.WAGRUPPE
     BEFORE GROUP WGruppe.WAGRUPPE
     SET REPORT PAGE "H_WGruppe.WA002"
     OUTPUT REPORT PAGE 
     END GROUP 
 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     ueberschrift$ = t1$
     SET QUERY ON 
     SET QUERY LOCK ON 
     SELECT DISTINCT ;
     WHERE CodeWGru.WAGRUPPE = CodeWGru.WARENART AND (rea.warenart = 2 OR rea.warenart = 0)
     ORDER REPORT WGruppe.WAGRUPPE,Warenart.WARENART
     TO ASK 
     END SELECT 
   END IF 
 END IF 
 

 REM Report ****************************************

 FILE cfile$
 SELECT WHERE FILE datei$
 END SUB 





 
 
FUNCTION VSNRPack3$(VSNR$)
 tVSNR$ = ""
 FOR a% = 1 TO LEN (VSNR$)
   tC$ = MID$ (VSNR$,a%,1)
   tC1$ = UCASE$ ( MID$ (VSNR$,a%,1))
         x% = ASC ( LEFT$ ( UCASE$ (tC$),1))
         SELECT CASE x%
           CASE 142
             tC$ = "ae"
           CASE 153
             tC$ = "oe"
           CASE 154
             tC$ = "ue"
         END SELECT 
         IF tc$ LIKE "·" THEN tc$ = "ss"
   tVSNR$ = tVSNR$ + tC$
 NEXT a%
 VSNRPack3$ = tVSNR$
 END FUNCTION 
 
 
 
 
 
 
 
 
 
SUB CopySearch()
 MOUSE OFF 
 REM CALL Fehler("CopySearch","")
 IF GCodieRuf% <> 0 OR GCodieRuf1% <> 0 OR GCodieRuf2% <> 0 THEN 
   ret% = CALL ("_SearchClose")
   GCodieRuf% = 0
   GCodieRuf1% = 0
   GCodieRuf2% = 0
 END IF 
 ok% = 0
 ON ERROR GOTO CSend27062002
       IF EXISTS (GMACodeDir$ + "search.dat") OR EXISTS (GMACodeDir$ + "search.idx") THEN 
         IF GASP% AND GMACodeDir$ <> "C:\" THEN 
           ON ERROR GOTO csdel270620021
           DELETE GMACodeDir$ + "*.*"
           ok% = - 1
csdel270620021: 
           ON ERROR GOTO CSend27062002
           IF ok% = 0 THEN 
             ret% = CALL ("_SearchClose")
             GCodieRuf% = 0
             GCodieRuf1% = 0
             GCodieRuf2% = 0
             DELETE GMACodeDir$ + "search.*"
           END IF 
         ELSE 
           ON ERROR GOTO csdel270620022
           DELETE GMACodeDir$ + "search.*"
           ok% = - 1
csdel270620022: 
           ON ERROR GOTO CSend27062002
           IF ok% = 0 THEN 
             ret% = CALL ("_SearchClose")
             DELETE GMACodeDir$ + "search.*"
           END IF 
         END IF 
         IF EXISTS (_netpath$ + "\local\search.dat") AND EXISTS (_netpath$ + "\local\search.idx") THEN 
           COPY _netpath$ + "\local\search.dat",GMACodeDir$ + "search.dat"
           COPY _netpath$ + "\local\search.idx",GMACodeDir$ + "search.idx"
         ELSE 
           GCodie% = 0
         END IF 
       ELSE 
         IF EXISTS (_netpath$ + "\local\search.dat") AND EXISTS (_netpath$ + "\local\search.idx") THEN 
           COPY _netpath$ + "\local\search.dat",GMACodeDir$ + "search.dat"
           COPY _netpath$ + "\local\search.idx",GMACodeDir$ + "search.idx"
         ELSE 
           GCodie% = 0
         END IF 
       END IF 
CSend27062002: 
 ON ERROR GOTO ErrorHandler
 END SUB 
  
 
 
 
 
SUB SearchInitADR()
 REM CALL Fehler("SearchInitADR","")
 MOUSE OFF 
 CALL CopySearch()
 MENU 1,9,0,"aus Termin-Suchliste &wÑhlen,F10","TERKurzSuche","Auflistung Termine"
 GCODieRuf% = - 1
 GCODieRuf2% = 0
           f1$ = "Kundennr."
           f2$ = FN ansi("Firma/Name")
           f3$ = "Zusatz/Vorname"
           f4$ = "Geburtsname/z.H"
           f5$ = "Matchcode"
           IF GCODieADR$ LIKE "true" THEN 
             f6$ = "PLZ"
             f7$ = "Ort"
             f8$ = FN ansi("Stra·e")
             f9$ = "ADRStatus"
             f10$ = "ADRGruppe"
             f11$ = "Ortsteil"
           ELSE 
             f6$ = "ADRStatus"
             f7$ = "ADRGruppe"
             f8$ = "PLZ"
             f9$ = "Ort"
             f10$ = "Ortsteil"
             f11$ = FN ansi("Stra·e")
           END IF 
           
           f12$ = "Geburtstag"
           f13$ = "Kunde seit"
           f14$ = "eigene Kundennr"
           f15$ = "T1"
           f16$ = "T2"
           f17$ = "T3"
           f18$ = "T4"
           f19$ = "T5"
           f20$ = "Postanschrift"
 spath$ = GMACodeDir$
 ret% = CALL ("_SearchInit",SPath$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
 END SUB 
  
 
SUB SearchInitPRO()
 MENU 1,9,0,"aus Termin-Suchliste &wÑhlen,F10","TERKurzSuche","Auflistung Termine"
 MOUSE OFF 
 CALL CopySearch()
 GCODieRuf% = - 1
 GCODieRuf2% = - 1
           f1$ = "Projektnr."
           f2$ = FN ansi("Name1")
           f3$ = "Name2"
           f4$ = "Name3"
           f5$ = "PLZ"
           f6$ = "Ort"
           f7$ = FN ansi("Stra·e")
           f8$ = "Land"
           f9$ = "Stadtteil"
           f10$ = "Projekt seit"
           f11$ = "R1"
           f12$ = "M1"
           f13$ = "R2"
           f14$ = "M2"
           f15$ = "Bauwerk"
           f16$ = "Keller"
           f17$ = FN ansi("GrÅndung")
           f18$ = "Baugrube"
           f19$ = "Nachbarbau"
           f20$ = "Boden"
 spath$ = GMACodeDir$
 ret% = CALL ("_SearchInit",SPath$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
 END SUB 
 
SUB SearchVorbPRO(datsu$)
               GGGcodeku$ = STR$ (codepr.datsu$,"000000")
               f1$ = FN ansi(Projektnummer.datsu$)
               f2$ = FN ansi(name1.datsu$)
               IF novi1.project = 1 THEN 
                 f2$ = FN ansi("### " + name1.datsu$)
               END IF 
               f3$ = FN ansi(name2.datsu$)
               f4$ = FN ansi(name3.datsu$)
               f5$ = FN ansi(plz.datsu$)
               f6$ = FN ansi(ort.datsu$)
               f7$ = FN ansi(strasse.datsu$)
               f8$ = FN ansi(land.datsu$)
               f9$ = FN ansi(Stadtteil.datsu$)
               IF Project_seit.datsu$ > 0 THEN 
                 f10$ = FN ansi( DATE$ (Project_seit.datsu$,"yyyy/mm/0d"))
               ELSE 
                 f10$ = ""
               END IF 
               f11$ = FN ansi(R1.datsu$)
               f12$ = FN ansi(M1.datsu$)
               f13$ = FN ansi(R2.datsu$)
               f14$ = FN ansi(M2.datsu$)
               f15$ = FN ansi(Bauwerk.datsu$)
               f16$ = FN ansi(Keller.datsu$)
               f17$ = FN ansi(GrÅndung.datsu$)
               f18$ = FN ansi(Baugrube.datsu$)
               f19$ = FN ansi(Nachbarbauwerk.datsu$)
               f20$ = FN ansi(Boden.datsu$)
  ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
  END SUB 
 
 
 
 REM **************fÅr Rechnungssuche
 
SUB SearchInitRE()
 MOUSE OFF 
 CALL CopySearch()
 GCODieRuf% = - 1
 GCODieRuf2% = - 1
           f1$ = "RE Datum"
           f2$ = "Rechnungsnummer"
           f3$ = "Belegnummer"
           f4$ = "Gutschrift?"
           f5$ = "Netto"
           f6$ = "Brutto"
           f7$ = "Teilzahlung Summe"
           f8$ = "erledigt?"
           f9$ = "gezahlt am"
           f10$ = "Kontoauszug"
           f11$ = "Kundennummer"
           f12$ = "Name"
           f13$ = FN ansi("angemahnt?")
           f14$ = "Buchungsgruppe"
           f15$ = "Buchungskonto"
           f16$ = "Projekt"
           f17$ = FN ansi("WÑhrung")
           f18$ = "Mahnsperre"
           f19$ = "Mahnsperre bis"
           f20$ = "Mahnstufe"
 IF GASP% THEN 
   SPath$ = _netpath$ + "\" + STR$ (GMACodeMA%,"00000000") + "\\"
 ELSE 
   SPath$ = "C:\"
 END IF 
 spath$ = GMACodeDir$
 IF NOT EXISTS (GMACodeDir$ + "search.dat") THEN 
   GCodieRuf% = 0
   GCodieRuf1% = 0
   GCodieRuf2% = 0
   CALL CopySearch()
 END IF 
 GCODieRuf% = - 1
 GCODieRuf2% = - 1
 
 ret% = CALL ("_SearchInit",SPath$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
 END SUB 
 
SUB SearchVorbRE(datsu$)
               GGGcodeku$ = STR$ (codere.datsu$,"000000")
               f1$ = "":f2$ = "":f3$ = "":f4$ = "":f5$ = "":f6$ = "":f7$ = "":f8$ = "":f9$ = "":f10$ = ""
               f11$ = "":f12$ = "":f13$ = "":f14$ = "":f15$ = "":f16$ = "":f17$ = "":f18$ = "":f19$ = "":f20$ = ""
               f1$ = DATE$ (datum,"yyyy-mm-0d")
               f2$ = FN ansi(LREnummer.datsu$)
               f3$ = FN ansi(belegnr.datsu$)
 
               IF GutschriftJN.datsu$ LIKE "J" THEN 
                 f4$ = "Ja"
               ELSE 
                 f4$ = "Nein"
               END IF 
 
               f5$ = STR$ (gesnetto.datsu$,",99999999.00")
               f5$ = PAD$ (f5$,14)
               IF gesnetto.datsu$ > 0 THEN 
                 f5$ = "+" + f5$
               ELSE 
                 f5$ = "-" + f5$
               END IF 
               f6$ = STR$ (gesbruttoeu.datsu$,",99999999.00")
               f6$ = PAD$ (f6$,14)
               IF gesbruttoeu.datsu$ > 0 THEN 
                 f6$ = "+" + f6$
               ELSE 
                 f6$ = "-" + f6$
               END IF 
               f7$ = STR$ (SummeTeilEu.datsu$,",99999999.00")
               f7$ = PAD$ (f7$,14)
 
               IF SummeTeilEu.datsu$ > 0 THEN 
                 f7$ = "+" + f7$
               ELSE 
                 f7$ = "-" + f7$
               END IF 
 
 
               IF erledigt.datsu$ LIKE "j" THEN 
                 f8$ = "Ja"
               ELSE 
                 f8$ = "Nein"
               END IF 
               f9$ = DATE$ (gezahltam,"yyyy-mm-0d")
               f10$ = FN ansi(ktoauszugsnr.datsu$)
               f11$ = FN ansi(Kundennummer.datsu$)
               f12$ = FN ansi(nachname.datsu$)
               IF mahnjn.datsu$ LIKE "j" THEN 
                 f13$ = "Ja"
               ELSE 
                 f13$ = "Nein"
               END IF 
               f14$ = FN ansi(wgruppe.datsu$)
               f15$ = FN ansi(warenart.datsu$)
               f16$ = FN ansi(Projekt.datsu$)
               f17$ = FN ansi(waehrung.datsu$)
               IF mahnsperre.datsu$ LIKE "j" THEN 
                 f18$ = "J"
                 f19$ = ""
                 IF Mahnsperbisdat.datsu$ > 0 THEN 
                   f19$ = DATE$ (Mahnsperbisdat.datsu$,"yyyy-mm-0d")
                 END IF 
               ELSE 
                 f18$ = "N"
                 f19$ = ""
               END IF 
               f20$ = STR$ (Mahnstufe.datsu$,"9")
  ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
  END SUB 
 
 
 REM **************fÅr Rechnungssuche
 
SUB SearchInitDo1(datsu$)
 IF _projekt$ = "WAWI" OR _projekt$ = "HORTUS" THEN datsu$ = "DOKUMENT"
 MOUSE OFF 
 CALL CopySearch()
 REM CALL Fehler("DoInit","")
 GCODieRuf% = - 1
 GCODieRuf2% = - 1
 MENU 1,9,0,"aus Termin-Suchliste &wÑhlen,F10","TERKurzSuche","Auflistung Termine"
           f1$ = "Dokument"
           f2$ = "Dok.gruppe"
           f3$ = FN ansi("Projekt")
           f4$ = "Bearbeiter"
           f5$ = "letzte Bearbeitung"
           f6$ = "Ersteller"
           f7$ = "Dateiname"
           f8$ = "erstellt am"
           f9$ = ""
           f10$ = ""
           f11$ = ""
           f12$ = ""
           f13$ = ""
           f14$ = ""
           f15$ = ""
           f16$ = ""
           f17$ = ""
           f18$ = ""
           f19$ = ""
           f20$ = ""
 IF GASP% THEN 
   SPath$ = _netpath$ + "\" + STR$ (GMACodeMA%,"00000000") + "\\"
 ELSE 
   SPath$ = "C:\"
 END IF 
 spath$ = GMACodeDir$
 ret% = CALL ("_SearchInit",SPath$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
 END SUB 
  
SUB SearchVorbDO1(datsu$)
 IF _projekt$ = "WAWI" OR _projekt$ = "HORTUS" THEN datsu$ = "DOKUMENT"
               GGGcodeku$ = STR$ (codedok.datsu$,"000000")
               f1$ = FN ansi(Dokument.datsu$)
               f2$ = FN ansi(gruppe.datsu$)
               f3$ = FN ansi(Projekt.datsu$)
               f4$ = FN ansi(Bearbeiter.datsu$)
               f5$ = FN ansi( DATE$ (letzte_Bearbeit.datsu$,"yyyy/mm/0d"))
               f6$ = FN ansi(Creator.datsu$)
               f7$ = FN ansi(Dateiname.datsu$)
               f8$ = FN ansi( DATE$ (erstellt_am.datsu$,"yyyy/mm/0d"))
               f9$ = ""
               f10$ = ""
               f11$ = ""
               f12$ = ""
               f13$ = ""
               f14$ = ""
               f15$ = ""
               f16$ = ""
               f17$ = "":f18$ = "":f19$ = "":f20$ = ""
               REM CALL Fehler("DoFill1","")
  ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
  END SUB 
 
SUB SearchInitAq1(datsu$)
   IF _projekt$ = "WAWI" OR _projekt$ = "HORTUS" THEN datsu$ = GAkquiDat$
 REM CALL Fehler("DoInit","")
 MOUSE OFF 
 CALL CopySearch()
 GCODieRuf% = - 1
 GCODieRuf2% = 0
 MENU 1,9,1,"aus Termin-Suchliste &wÑhlen,F10","TERKurzSuche","Auflistung Termine"
 IF GCODIEADR$ LIKE "TRUE" THEN 
           REM  f1$ = "EMAIL"
           f1$ = "Aktion"
           f2$ = "Erf.Datum"
           f3$ = "Termin"
           f4$ = "Uhrzeit"
           f5$ = "Dauer"
           f6$ = "erledigt"
           f7$ = "Bearbeiter"
           f8$ = "Kunde"
           f9$ = "Notiz"
           f10$ = FN ansi("PrioritÑt")
           f11$ = "Projekt"
           f12$ = ""
           f13$ = ""
           f14$ = ""
           f15$ = ""
           f16$ = ""
           f17$ = ""
           f18$ = ""
           f19$ = ""
           f20$ = ""
 ELSE 
           f1$ = "Aktion"
           f2$ = "Projekt"
           f3$ = "Bearbeiter"
           f4$ = "Erf.Datum"
           f5$ = "Termin"
           f6$ = "Uhrzeit"
           f7$ = "Dauer"
           f8$ = "erledigt"
           f9$ = "Kunde"
           f10$ = "Notiz"
           f11$ = "Terminart"
           f12$ = FN ansi("PrioritÑt")
           f13$ = ""
           f14$ = ""
           f15$ = ""
           f16$ = ""
           f17$ = ""
           f18$ = ""
           f19$ = ""
           f20$ = ""
 END IF 
 IF GASP% THEN 
   SPath$ = _netpath$ + "\" + STR$ (GMACodeMA%,"00000000")
 ELSE 
   SPath$ = "C:\"
 END IF 
 spath$ = GMACodeDir$
 ret% = CALL ("_SearchInit",SPath$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
 END SUB 
  
SUB SearchVorbAq1(datsu$)
   IF NOT OPEN ("AKTIONEN") THEN CALL DFile(2,"OFFICE\aktionen" + _fpw$)
   IF _projekt$ = "WAWI" OR _projekt$ = "HORTUS" THEN datsu$ = GAkquiDat$
               GGGcodeku$ = STR$ (codeaq.datsu$,"000000")
               text1$ = ""
               IF emailbetreff.GAkquiDat$ <> "" AND emailto.GAkquiDat$ <> "" THEN 
                 text1$ = "EMAIL"
                 IF EMAILRaus.GAkquiDat$ = "j" THEN 
                   text1$ = text1$ + " erledigt"
                 ELSE 
                   text1$ = text1$ + " offen"
                 END IF 
                 IF EMAILAutomat.GAkquiDat$ = "j" THEN 
                   text1$ = text1$ + " autom."
                 ELSE 
                   text1$ = text1$ + " manu."
                 END IF 
               END IF 
 
                code% = codeaq.datsu$
               SELECT KEY code% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
               codeak% = codeak.GAkquiDat$
               SELECT KEY codeak% FILE "AKTIONEN" INDEX codeak.aktionen
               bezak$ = bezeichnung.aktionen
 
               REM f1$ = text1$
            IF GCODIEADR$ LIKE "TRUE" THEN 
               f1$ = bezak$
               f2$ = FN ansi( DATE$ (Datum.datsu$,"yyyy/mm/0d"))
               f3$ = FN ansi( DATE$ (Termin.datsu$,"yyyy/mm/0d"))
               f4$ = FN ansi( TIME$ (Uhrzeit.datsu$,"hh:mm"))
               f5$ = FN ansi( LTRIM$ ( STR$ (dauer.datsu$,"999")))
               f6$ = FN ansi(erledigt_Termin.datsu$)
               f7$ = FN ansi(Bearbeiter.datsu$)
               f8$ = FN ansi(nachname.datsu$)
               f9$ = FN ansi( LEFT$ (notiz.datsu$,255))
               f10$ = STR$ (Wertung.datsu$,"0")
               f11$ = FN ansi(Projekt.datsu$)
               f12$ = ""
               f13$ = ""
               f14$ = ""
               f15$ = ""
               f16$ = ""
               f17$ = "":f18$ = "":f19$ = "":f20$ = ""
             ELSE 
               f1$ = FN ansi(bezak$)
               f2$ = FN ansi(Projekt.datsu$)
               f3$ = FN ansi(Bearbeiter.datsu$)
               f4$ = FN ansi( DATE$ (Datum.datsu$,"yyyy/mm/0d"))
               f5$ = FN ansi( DATE$ (Termin.datsu$,"yyyy/mm/0d"))
               f6$ = FN ansi( TIME$ (Uhrzeit.datsu$,"hh:mm"))
               f7$ = FN ansi( LTRIM$ ( STR$ (dauer.datsu$,"999")))
               f8$ = FN ansi(erledigt_Termin.datsu$)
               
               f9$ = FN ansi(nachname.datsu$)
               f10$ = FN ansi( LEFT$ (notiz.datsu$,255))
               SELECT CASE AQUIMASK.datsu$
                 CASE "AKQUIPRJ"
                   f11$ = FN ansi("Allgemein")
                 CASE "AKQUIV1"
                   f11$ = FN ansi("Verdichtung")
                 CASE "AKQUIV2"
                   f11$ = FN ansi("BÅro")
                 CASE "AKQUIV3"
                   f11$ = FN ansi("Feldarbeiten")
                 CASE "AKQUIV4"
                   f11$ = FN ansi("Labor")
                 CASE "AKQUIV5"
                   f11$ = FN ansi("Probennahme")
               END SELECT 
               
               f12$ = STR$ (Wertung.datsu$,"0")
               f13$ = ""
               f14$ = ""
               f15$ = ""
               f16$ = ""
               f17$ = "":f18$ = "":f19$ = "":f20$ = ""
             END IF 
               REM CALL Fehler("DoFill1","")
  ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
  END SUB 
 
 
  REM tt$ = DATE$ (termin.tvorlage,"yyyy/mm/0d") + " " + TIME$ (uhrzeit.tvorlage,"hh:mm") + "  "
  REM TV$(tfound1%) = DATE$ (datum.tvorlage,"yyyy/mm/0d") + " " + TIME$ (zeit.tvorlage,"hh:mm") + "  " + tt$ + nn$ + " / " + LEFT$ (Notiz.tvorlage,100) + CHR$ (100) + STR$ (codeaq.tvorlage,"000000")
SUB SearchInitAq2(datsu$)
 IF _projekt$ = "WAWI" OR _projekt$ = "HORTUS" THEN datsu$ = "TVORLAGE"
 MOUSE OFF 
 CALL CopySearch()
 REM CALL Fehler("DoInit","")
 MENU 1,9,1,"aus Termin-Suchliste &wÑhlen,F10","TERKurzSuche","Auflistung Termine"
 GCODieRuf1% = - 1
 GCODieRuf2% = 0
   IF GCODIEADR$ LIKE "TRUE" THEN 
           REM f1$ = "EMAIL"
           f1$ = "Aktion"
           f2$ = "VTermin"
           f3$ = "VUhrzeit"
           f4$ = "Termin"
           f5$ = "Uhrzeit"
           f6$ = "Kunde"
           f7$ = "Notiz"
           f8$ = FN ansi("PrioritÑt")
           f9$ = "Projekt"
           f10$ = ""
           f11$ = ""
           f12$ = ""
           f13$ = ""
           f14$ = ""
           f15$ = ""
           f16$ = ""
           f17$ = ""
           f18$ = ""
           f19$ = ""
           f20$ = ""
   ELSE 
           f1$ = "Aktion"
           f2$ = "VTermin"
           f3$ = "VUhrzeit"
           f4$ = "Termin"
           f5$ = "Uhrzeit"
           f6$ = "Kunde"
           f7$ = "Notiz"
           f8$ = "Terminart"
           f9$ = FN ansi("PrioritÑt")
           f10$ = "Projekt"
           f11$ = ""
           f12$ = ""
           f13$ = ""
           f14$ = ""
           f15$ = ""
           f16$ = ""
           f17$ = ""
           f18$ = ""
           f19$ = ""
           f20$ = ""
   END IF 
 IF GASP% THEN 
   SPath$ = _netpath$ + "\" + STR$ (GMACodeMA%,"00000000")
 ELSE 
   SPath$ = "C:\"
 END IF 
 spath$ = GMACodeDir$
 ret% = CALL ("_SearchInit",SPath$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
 END SUB 
  
SUB SearchVorbAq2(datsu$)
  IF NOT OPEN ("AKTIONEN") THEN CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 IF _projekt$ = "WAWI" OR _projekt$ = "HORTUS" THEN datsu$ = "TVORLAGE"
               GGGcodeku$ = STR$ (codeaq.datsu$,"000000")
               text1$ = ""
               IF emailbetreff.GAkquiDat$ <> "" AND emailto.GAkquiDat$ <> "" THEN 
                 text1$ = "EMAIL"
                 IF EMAILRaus.GAkquiDat$ = "j" THEN 
                   text1$ = text1$ + " erledigt"
                 ELSE 
                   text1$ = text1$ + " offen"
                 END IF 
                 IF EMAILAutomat.GAkquiDat$ = "j" THEN 
                   text1$ = text1$ + " autom."
                 ELSE 
                   text1$ = text1$ + " manu."
                 END IF 
               END IF 
               code% = codeaq.datsu$
               SELECT KEY code% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
               codeak% = codeak.GAkquiDat$
               SELECT KEY codeak% FILE "AKTIONEN" INDEX codeak.aktionen
               bezak$ = bezeichnung.aktionen
 
               REM f1$ = text1$
               f1$ = bezak$
               f2$ = FN ansi( DATE$ (datum.datsu$,"yyyy/mm/0d"))
               f3$ = FN ansi( TIME$ (zeit.datsu$,"hh:mm"))
               f4$ = FN ansi( DATE$ (termin.datsu$,"yyyy/mm/0d"))
               f5$ = FN ansi( TIME$ (uhrzeit.datsu$,"hh:mm"))
               
               f6$ = FN ansi(nachname.datsu$)
               
               f7$ = FN ansi( LEFT$ (notiz.datsu$,255))
               IF GCODIEADR$ LIKE "TRUE" THEN 
                 f8$ = STR$ (Wertung.GAkquiDat$,"0")
                 f9$ = FN ansi(Projekt.GAkquiDat$)
                 f10$ = ""
               ELSE 
                 SELECT CASE AQUIMASK.GAkquiDat$
                   CASE "AKQUIPRJ"
                     f8$ = FN ansi("Allgemein")
                   CASE "AKQUIV1"
                     f8$ = FN ansi("Verdichtung")
                   CASE "AKQUIV2"
                     f8$ = FN ansi("BÅro")
                   CASE "AKQUIV3"
                     f8$ = FN ansi("Feldarbeiten")
                   CASE "AKQUIV4"
                     f8$ = FN ansi("Labor")
                   CASE "AKQUIV5"
                     f8$ = FN ansi("Probennahme")
                 END SELECT 
                 f9$ = STR$ (Wertung.GAkquiDat$,"0")
                 f10$ = FN ansi(projekt.GAkquiDat$)
               END IF 
               
               
               f11$ = ""
               f12$ = ""
               f13$ = ""
               f14$ = ""
               f15$ = ""
               f16$ = ""
               f17$ = "":f18$ = "":f19$ = "":f20$ = ""
               REM CALL Fehler("DoFill1","")
  ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
  END SUB 
 
 
 
 
 
SUB SearchVorbAdr(datsu$)
 GCODieRuf2% = - 1
 IF _projekt$ = "WAWI" OR _projekt$ = "HORTUS" THEN datsu$ = "ADRESSEN"
               GGGcodeku$ = STR$ (codeku.datsu$,"000000")
               f1$ = FN ansi(Kundennummer.datsu$)
               f2$ = FN ansi(nachname.datsu$)
               f3$ = FN ansi(vorname.datsu$)
               f4$ = FN ansi(geburtsname.datsu$)
 
               f5$ = FN ansi(matchcode.datsu$)
               IF GCodieadr$ LIKE "TRUE" THEN 
                 f6$ = FN ansi(plz.datsu$)
                 f7$ = FN ansi(ort.datsu$)
                 f8$ = FN ansi(stra·e.datsu$)
                 f9$ = FN ansi(ADRStatus.datsu$)
                 f10$ = FN ansi(ADRGruppe.datsu$)
                 f11$ = FN ansi(ortsteil.datsu$)
                 
               ELSE 
                 f6$ = FN ansi(ADRStatus.datsu$)
                 f7$ = FN ansi(ADRGruppe.datsu$)
                 f8$ = FN ansi(plz.datsu$)
                 f9$ = FN ansi(ort.datsu$)
                 f10$ = FN ansi(ortsteil.datsu$)
                 f11$ = FN ansi(stra·e.datsu$)
               END IF 
               IF Geburtstag.datsu$ > 0 THEN 
                 f12$ = FN ansi( DATE$ (Geburtstag.datsu$,"yyyy/mm/0d"))
               ELSE 
                 f12$ = ""
               END IF 
               IF Kunde_seit.datsu$ > 0 THEN 
                 f13$ = FN ansi( DATE$ (Kunde_seit.datsu$,"yyyy/mm/0d"))
               ELSE 
                 f13$ = ""
               END IF 
               f14$ = FN ansi(eigKunr.datsu$)
               f15$ = ""
               f16$ = ""
               f17$ = ""
               f18$ = ""
               f19$ = ""
               f20$ = FN ansi( TRIM$ ( LTRIM$ ( LEFT$ (Postanschrift.datsu$,300))))
  END SUB 
 
SUB SearchVorbTel(datsu$)
   IF _projekt$ <> "WAWI" THEN 
                   IF f11$ = "" THEN 
                     f11$ = LTRIM$ (art.GTelDat$ + " " + nummer.GTelDat$)
                   ELSE 
                     IF f12$ = "" THEN 
                       f12$ = LTRIM$ (art.GTelDat$ + " " + nummer.GTelDat$)
                     ELSE 
                       IF f13$ = "" THEN 
                         f13$ = LTRIM$ (art.GTelDat$ + " " + nummer.GTelDat$)
                       ELSE 
                         IF f14$ = "" THEN 
                           f14$ = LTRIM$ (art.GTelDat$ + " " + nummer.GTelDat$)
                         ELSE 
                           IF f15$ = "" THEN 
                             f15$ = LTRIM$ (art.GTelDat$ + " " + nummer.GTelDat$)
                           ELSE 
                             IF f16$ = "" THEN 
                               f16$ = LTRIM$ (art.GTelDat$ + " " + nummer.GTelDat$)
                             END IF 
                           END IF 
                         END IF 
                       END IF 
                     END IF 
                   END IF 
 
   ELSE 
     f11$ = "":f12$ = "":f13$ = "":f14$ = "":f15$ = "":f16$ = ""
   END IF 
 END SUB 
 
 
 

