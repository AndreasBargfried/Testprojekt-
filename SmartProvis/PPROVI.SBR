 CALL main()
 

 
 '      **************************
 '      ** Provisionsberechnung **
 '      **************************
 
 '******************************************************************************************************************
 ' Provisionsberechnung STANDARD
 ' =======================================================================
 ' 27.04.93  - Anpassung an Netzwerk
 ' 07.07.93  - temporÑre VerÑnderungen fÅr TRANSER eingearbeitet
 ' 19.09.94  - Abbruch der Berechnung bei ProviAb>cdate%
 ' 23.06.99  - codevtab% =0 alle VertrÑge berechnen, >0 =lfdnr.kvertrag, fÅr den berechnet werden soll
 
SUB PROVBUCHUNG(codevtab%)
 REM letzteProvisionsrechnung
 REM  CALL Fehler(CalcDate$,"")
 IF disabled%("BUCHUNG6") THEN END SUB 
 REM lastProvi$ = ReadConfig$("PROVIS","letzteProvisionsrechnung")
 REM IF DateOK%(lastProvi$) THEN 
   REM _day% = DAY (lastProvi$)
   REM _month% = MONTH (lastProvi$)
   REM _year% = YEAR (lastProvi$)
   REM _month% = _month% + 1
   REM IF _month% > 12 THEN 
     REM _year% = _year% + 1
     REM _month% = _month% - 12
   REM END IF 
   REM CalcDate$ = STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"0000")
 REM ELSE 
   REM CalcDate$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 REM END IF 
 CALL DFile(3,"buchung" + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$)
 CALL DFile(3,"gekond" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"kvertrag" + _fpw$)
 CALL DFile(3,"vkond" + _fpw$)
 CALL DFile(3,"vprodukt" + _fpw$)
 CALL DFile(3,"spezkond" + _fpw$)
 CALL DFile(3,"AUmskto" + _fpw$)
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 IF anschluss% = 0 AND PRVCHECKLISTE$ <> "TRUE" THEN 
   CalcDate$ = DATE$ ( TODAY ,"0d.mm.yyyy")
   CREATE DIALOG "STICHTAG",0,0,222,114,"Buchungsdatum","MS Sans Serif",8
   ADD DIALOG "STICHTAG",4,0,0,222,91,0,""
   ADD DIALOG "STICHTAG",9,6,9,23,24,2
   ADD DIALOG "STICHTAG",5,31,15,183,10,0,"Bitte geben Sie an, zu welchem Buchungsdatum"
   ADD DIALOG "STICHTAG",5,31,25,183,10,0,"die Provisionsberechnung durchgefÅhrt werden soll:"
   ADD DIALOG "STICHTAG",5,32,40,182,10,0,"(ohne énderung des Datums oder Weglassen"
   ADD DIALOG "STICHTAG",5,31,50,182,20,0,"der Datumsangabe, wird das angezeigte Datum verwendet)"
   ADD DIALOG "STICHTAG",6,94,72,42,12,0,0,CalcDate$,10
   ADD DIALOG "STICHTAG",5,30,74,58,10,0,"Buchungsdatum:"
   ADD DIALOG "STICHTAG",1,52,94,54,14,1,"&OK",1,1
   ADD DIALOG "STICHTAG",1,109,94,54,14,0,"&Abbrechen",0,0
   DIALOG "STICHTAG",req%
   REMOVE DIALOG "STICHTAG"
   IF req% = 1 THEN 
     IF DateOK%(CalcDate$) THEN 
       ok% = 1
       IF codevtab% = 0 THEN CALL WriteConfig("PROVIS","letzteProvisionsrechnung",CalcDate$)
     ELSE 
       ok% = 0
       CALL Fehler("Falsche Datumsangabe!","Bitte geben Sie das Datum in der Form 'tt.mm.jjjj' ein.")
     END IF 
   END IF 
 ELSE 
   ok% = 1
 END IF 
 IF ok% = 1 THEN 
   cdate% = DAYS (CalcDate$)
   minimize$ = ReadINI$("PROVIS","minimize")
   IF anschluss% = 0 THEN 
     IF minimize$ LIKE "TRUE" THEN 
       REQUEST "PROVIS wird in den Hintergrund geschaltet!","Sie kînnen wÑhrend der Berechung andere Programme starten.",0
       SET DISPLAY MIN 
     END IF 
     CALL CreateLog()
   END IF 
 
   CALL WriteLog("")
   CALL WriteLog("=================================")
   CALL WriteLog("Provisionsabrechnung vom " + DATE$ (cdate%,"0d.mm.yyyy"))
   CALL WriteLog("=================================")
   CALL WriteLog("")
   MOUSE OFF 
   FILE "kvertrag"
   INDEX ProviAb.kvertrag
   SELECT FIRST 
   IF codevtab% > 0 THEN 
     INDEX lfdnr.kvertrag
     SELECT KEY codevtab% LOCK FILE "Kvertrag" INDEX lfdnr.kvertrag
   ELSE 
     SELECT KEY "01.01.0001" LOCK FILE "Kvertrag" INDEX proviab.kvertrag
   END IF 
   _p1% = RECCOUNT ("kvertrag")
   _pd$ = "0"
   _pd% = - 1
   _p2% = 0
   IF codevtab% = 0 THEN WHILE NOT EOF ("kvertrag") AND (ProviAb.KVERTRAG <= cdate% OR BewertEinmDat.kvertrag <= cdate%)
   IF codevtab% > 0 THEN WHILE NOT EOF ("kvertrag") AND (ProviAb.KVERTRAG <= cdate% OR BewertEinmDat.kvertrag <= cdate%) AND lfdnr.kvertrag = codevtab%

 
     REM PrÅfen auf Vorhandensein von Spezialprovisionen und ob dort welche existieren, die zunÑchst von der
     REM Bewertung der Firma abgezogen werden, um den Restbetrag als 100% darzustellen
     GVonFirma$ = "n"
     NUMBASE ",999999999.0000"
     IF EXISTS (lfdnr.kvertrag,codevt.spezkond) AND SpezProvAktiv.kvertrag = "j" AND ok% = 1 AND t$ = "ANDREAS" THEN 
       anzagvF% = 0
       anzagvA% = 0
       
       WHILE GAGvonFirma$(anzagvF%) <> ""
         GAGvonFirma$(anzagvF%) = ""
         anzagvF% = anzagvF% + 1
       WEND 
       WHILE GAGvonAgentur$(anzagvA%) <> ""
         GAGvonAgentur$(anzagvA%) = ""
         anzagvA% = anzagvA% + 1
       WEND 
       anzagvF% = 0
       anzagvA% = 0
       GSpezko$ = "j"
       GVonFirma$ = "n"
       SELECT FIRST FILE "spezkond" INDEX codevt.spezkond
       SELECT KEY lfdnr.kvertrag LOCK FILE "spezkond" INDEX codevt.spezkond
       WHILE NOT EOF ("spezkond") AND codevt.spezkond = lfdnr.kvertrag
         IF vonFirmaAgentur.spezkond <> "j" THEN 
           GVonFirma$ = "j"
           IF einmalig.spezkond <> "j" THEN 
             GAGvonFirma$(anzagvF%) = QCodeVTMA.spezkond
             anzagvF% = anzagvF% + 1
           ELSE 
             IF einmaligerfolgt.spezkond <> "j" THEN 
               GAGvonFirma$(anzagvF%) = QCodeVTMA.spezkond
               anzagvF% = anzagvF% + 1
             END IF 
           END IF 
         ELSE 
           GVonFirma$ = "n"
           IF einmalig.spezkond <> "j" THEN 
             GAGvonAgentur$(anzagvA%) = QCodeVTMA.spezkond
             anzagvA% = anzagvA% + 1
           ELSE 
             IF einmaligerfolgt.spezkond <> "j" THEN 
               GAGvonAgentur$(anzagvA%) = QCodeVTMA.spezkond
               anzagvA% = anzagvA% + 1
             END IF 
           END IF 
         END IF 
         SELECT NEXT FILE "spezkond" INDEX codevt.spezkond
       WEND 
     ELSE 
       GSpezko$ = "n"
     END IF 
     REM GAGvonFirma$(anzagvF%) = ""
     REM GAGvonAgentur$(anzagvA%) = ""
     REM CALL Fehler("","")
 

     REM -----------------------------------------
     REM -- Prozentbalken und Header aktualisieren
     REM -----------------------------------------
 
     SET STATUS "Bearbeite Vertrag " + LTRIM$ ( STR$ (_p2%,"999999")) + " von " + LTRIM$ ( STR$ (_p1%,"999999")) + "  " + vs_NR.kvertrag
     _pc% = FIX (100 / _p1% * _p2%,0)
     IF _pd% <> _pc% THEN 
       _pd% = _pc%
       IF FN sys(11) = 36 AND FN sys(12) = 36 THEN 
         IF anschluss% = 0 THEN 
           SET HEADING STR$ (_pd%,"999") + "%"
         ELSE 
           SET HEADING STR$ (_pd%,"999") + "% " + LTRIM$ ( STR$ ( MONTH (cdate%),"00")) + "/" + RIGHT$ ( STR$ ( YEAR (cdate%),"9999"),4)
         END IF 
       ELSE 
         IF anschluss% = 0 THEN 
           SET HEADING title$ + " - Provisionsberechung: " + STR$ (_pd%,"999") + "% erledigt"
         ELSE 
           SET HEADING title$ + " - Provisionsberechung: " + STR$ (_pd%,"999") + "% " + LTRIM$ ( STR$ ( MONTH (cdate%),"00")) + "/" + RIGHT$ ( STR$ ( YEAR (cdate%),"9999"),4)
         END IF 
       END IF 
     END IF 
 
     REM --------------------------------------
     REM -- CheckUp fÅr Vertragsprovisionierung
     REM --------------------------------------
     IF vs_nr.kvertrag LIKE "70/217746" THEN 
       REM CALL Fehler(vs_nr.kvertrag,"1")
     END IF 
     ok% = 1
     REM 030697
     IF codeko.kvertrag < 1 THEN 
       ok% = 0
     ELSE 
       REM CALL Fehler(Test",date$(cdate%,"0d.mm.yyyy")
       REM 190298
       IF DAYS (KÅndigung.KVERTRAG) > 1 AND DAYS (KÅndigung.KVERTRAG) < cdate% THEN 
         ok% = 0
         REM 210597
         IF TatsKuenDat.kvertrag > KÅndigung.KVERTRAG THEN ok% = 1
         IF TatsKuenDat.kvertrag < cdate% THEN ok% = 0
         IF _debug% = 1 THEN CALL WriteLog("## KÅndigung: " + STR$ (lfdnr.KVERTRAG,"000000") + ", " + DATE$ (KÅndigung.KVERTRAG,"0d.mm.yyyy"))
       END IF 
       IF Storno.KVERTRAG <> 0 AND DAYS (KÅndigung.KVERTRAG) < cdate% THEN 
         ok% = 0
         REM 190398
         IF TatsKuenDat.kvertrag > KÅndigung.KVERTRAG THEN ok% = 1
         IF TatsKuenDat.kvertrag < cdate% THEN ok% = 0
       END IF 
       
       IF DAYS (ProviAb.KVERTRAG) < 1 THEN 
         ok% = 0
       END IF 
       IF DAYS (VS_Beginn.KVERTRAG) < 1 THEN 
         ok% = 0
       END IF 
       IF DAYS (ProviAb.KVERTRAG) > cdate% THEN 
         IF BewertEinmDat.kvertrag < 1 THEN 
           ok% = 0
         ELSE 
           IF BewertEinmDat.kvertrag > cdate% THEN 
             ok% = 0
           ELSE 
             IF BewertCalcDat.kvertrag > 0 THEN 
               ok% = 0
             END IF 
           END IF 
         END IF 
       END IF 
       IF cdate% - DAYS (letzteProvi.KVERTRAG) < 27 THEN 
         ok% = 0
         IF _debug% > 1 THEN CALL WriteLog("## Zeitsperre: " + DATE$ (letzteProvi.KVERTRAG,"0d.mm.yyyy"))
       END IF 
       IF CodeMA.KVERTRAG < 1 THEN 
         CALL WriteLog("!dem Vertrag wurde keine Agentur zugeordnet")
         CALL AddLogInfo()
         ok% = 0
       END IF 
       IF CodeGE.KVERTRAG < 1 THEN 
         CALL WriteLog("!dem Vertrag wurde keine Gesellschaft zugeordnet")
         CALL AddLogInfo()
         ok% = 0
       END IF 
       IF CodeVA.KVERTRAG < 1 THEN 
         CALL WriteLog("!dem Vertrag wurde keine Sparte zugeordnet")
         CALL AddLogInfo()
         ok% = 0
       END IF 
       IF CodeKO.KVERTRAG = 0 AND DAYS (ProviAb.KVERTRAG) >= cdate% THEN 
         CALL WriteLog("!der erwartete Eintrag in VKOND konnte nicht gefunden werden")
         CALL AddLogInfo()
         ok% = 0
       END IF 
       IF ProvSperreJN.kvertrag LIKE "j" THEN 
         ok% = 0
         CALL WriteLog("  Vertrag hat Provisionssperre: " + VS_NR.Kvertrag + "/" + Gesellschaft.kvertrag + "/" + sparte.kvertrag + "/" + Agentur.kvertrag + "/" + VNehmer.kvertrag)
       END IF 
     END IF 
     REM ------------------------
     REM -- Aufruf der Berechnung
     REM ------------------------
 
     IF ok% = 1 THEN 
       REM CALL Fehler("Provision soll berechnet werden", DATE$ (cdate%,"0d.mm.yyyy"))
       REM CALL Fehler("Berechnung bis", DATE$ (cdate%,"0d.mm.yyyy"))
       REM IF vs_nr.kvertrag LIKE "036-800888*" THEN 
         REM CALL Fehler(vs_nr.kvertrag,"2")
       REM END IF 
       gezPflege% = 0
       gezPauschale% = 0
       gezAbschlu·% = 0
       gezStornoRes% = 0
       GBewEinm% = 0
       CALL PROVISION2()
     END IF 
     IF codevtab% = 0 THEN SELECT NEXT FILE "KVERTRAG" INDEX ProviAb.kvertrag
     IF codevtab% > 0 THEN SELECT NEXT FILE "KVERTRAG" INDEX lfdnr.kvertrag
     _p2% = _p2% + 1
   WEND 
   IF ReadConfig$("PROVIS","SkipStorno") LIKE "TRUE" THEN 
     REM 
   ELSE 
     CALL SRZahlung(codevtab%)
   END IF 
   IF anschluss% = 0 THEN 
     MOUSE ON 
     SET DISPLAY RESTORE 
     SET HEADING title$ + " - Buchung"
     SET STATUS "Provisionsabrechnung beendet"
     IF PRVCHECKLISTE$ <> "TRUE" THEN CALL CloseLog()
   END IF 
 END IF 
 END SUB 
 
 
 ' Provisionsberechnung
 ' einzelnen Vertrag berechnen
 ' =======================================================================
 ' 29.04.93  - PrÅfung auf einmalige Abschlu·provi und Pauschale
 ' 27.10.93  - énderung der Differenzrechnung
 ' 24.06.94  - Protokollierung von Fehlern in Log-Datei
 ' 28.06.94 - Laufzeit%-Berechnung geÑndert
 ' 08.07.94 - wahlweiser Bezug BW-Zeitraum auf VSBeginn oder ProvBeginn
 ' 14.07.94 - LaufzeitPro% enthÑlt Laufzeit seit Provisionsbeginn
 ' 22.09.94 - Umstellung auf Verwendung von VKOND
 '             - erweitertes CheckUp
 ' 13.10.94 - Streichung der SR-Berechnung bei Pflegeprovision
 ' 08.08.97 - Provision an Hand von ZahlungseingÑngen
 
SUB PROVISION2()
 cfile$ = FILE 
 ok% = 1
 REM **DEBUG ProviAb-Check
 cuvt% = lfdnr.KVERTRAG
 codema% = CodeMA.kvertrag
 codege% = CodeGE.kvertrag
 codeva% = CodeVA.kvertrag
 koab% = CodeKO.KVERTRAG
 bewertung% = Bewertungssumme.KVERTRAG
 beitrag% = Beitrag.kvertrag
 SELECT FIRST FILE "maadr" INDEX codema.maadr
 SELECT KEY codema.kvertrag FILE "maadr" INDEX codema.maadr
 Gvtagentur$ = Nachname.maadr + "," + vorname.maadr
 Gvtcodema% = codema.maadr

 GStorWarnJN$ = StorWarnJN.kvertrag
 IF StorWarnDatGes.kvertrag > 0 THEN 
   GStorWarnDGes$ = DATE$ (StorWarnDatGes.kvertrag,"0d.mm.yyyy")
 ELSE 
   GStorWarnDGes$ = ""
 END IF 
 IF StorWarnDatMA.kvertrag THEN 
   GStorWarnDMA$ = DATE$ (StorWarnDatMA.kvertrag,"0d.mm.yyyy")
 ELSE 
   GStorWarnDMA$ = ""
 END IF 
 GStorWarnGrund$ = StorWarnGrund.kvertrag
 GStorWarnMasn$ = StorWarnMasn.kvertrag
 GStorWarnErg$ = StorWarnErg.kvertrag


 IF ProviAb.KVERTRAG > cdate% THEN 
   CALL WriteLog("## Aufruf PROVISION2 mit ProviAb > cdate%")
   REM REQUEST "ProviAb > cdate%"
 END IF 
 bwbezug$ = ReadConfig$("PROVIS","Bewertungszeitraum")
 IF bwbezug$ LIKE "leer" OR bwbezug$ LIKE "Provisionierungsbeginn" THEN 
   BWStart% = DAYS (ProviAb.KVERTRAG)
 ELSE 
   BWStart% = DAYS (VS_Beginn.KVERTRAG)
 END IF 
 Laufzeit% = FIX ((cdate% - BWStart%) / 30,0)
 LaufzeitPro% = FIX ((cdate% - DAYS (ProviAb.KVERTRAG)) / 30,0)
 
 REM **DEBUG Laufzeit in LOG schreiben
 IF _debug% = 1 THEN CALL WriteLog("## Laufzeit: " + STR$ (lfdnr.KVERTRAG,"000000") + " - " + STR$ (Laufzeit%,"9999") + " Monate")




 
 REM *** 201100 Einbeziehung der ProzenteVerteilung von VPRODUKT ***
 codevp% = CodeVP.Kvertrag
 SELECT FIRST FILE "Vprodukt" INDEX codevp.vprodukt
 SELECT KEY codevp% FILE "Vprodukt" INDEX codevp.vprodukt
 IF codevp% = CodeVP.Kvertrag AND ProzVerteilung.vprodukt > 0 AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
   haftvertrag% = SRHaftung.kvertrag
   weitermachen% = 1
   SELECT FIRST FILE "VKOND" INDEX CodeVK.VKOND
   SELECT KEY koab% FILE "VKOND" INDEX CodeVK.VKOND
   WHILE NOT EOF ("vkond") AND weitermachen% = 1
     IF nÑchsteKond.VKOND = 0 THEN 
       weitermachen% = 0
     ELSE 
       SELECT KEY nÑchsteKond.VKOND FILE "VKOND" INDEX CodeVK.VKOND
     END IF 
   WEND 
   SELECT KEY CodeKO.VKOND FILE "GEKOND" INDEX lfdnr.GEKOND
   REM jetzt wurde die Kondition der Firma(1.Agentur) gefunden 
   Vbewertung% = ((Bewertungssumme.KVERTRAG / 100) * ProzVerteilung.vprodukt)
   Vbeitrag% = ((Beitrag.kvertrag / 100) * ProzVerteilung.vprodukt)
   Vrest% = Bewertungssumme.KVERTRAG - Vbewertung%
 
   butext$ = Buchungstext.zeingan1 + " Prov. aus NV"
   VProvisNZ% = provnz%
   provnz% = 0
   REM CALL SpezProvisF(butext$,codema.gekond,provnz%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1)
 ELSE 
   Vbewertung% = Bewertungssumme.KVERTRAG
   VBeitrag% = Beitrag.kvertrag
 END IF 
 REM ******************************************************************* 
 
 SELECT FIRST FILE "VKOND" INDEX CodeVK.VKOND
 SELECT KEY koab% LOCK FILE "VKOND" INDEX CodeVK.VKOND
 
 IF NOT EXISTS (koab%,codevk.VKOND) THEN 
   CALL WriteLog("  Vertrag wurde noch nicht an die Provisionsabrechnung Åbergeben")
   CALL AddLogInfo()
   ok% = 0
 ELSE 
   REM positionieren auf die Kondition der vertragsabschlie·enden Agentur,bei der ist dann der VorgÑnger als
   REM nÑchsteKond.VKOND eingetragen
   SELECT FIRST FILE "VKOND" INDEX CodeVK.VKOND
   SELECT KEY koab% LOCK FILE "VKOND" INDEX CodeVK.VKOND
 END IF 
 
 REM es ist Spezialprovision von der Firma zu zahlen und nachdem diese von der Bewertung abgezogen wurde
 REM darf der Restbetrag als 100% angesehen werden, von dem dann die restliche Provision berechnet wird
 GBewertung% = Vbewertung%
 GBeitrag% = VBeitrag%
 IF GSpezko$ = "j" AND GVonFirma$ = "j" THEN 
   REM CALL Fehler("Test auf Spezialkonditionen","")
   REM positionieren auf die Kondition der Firma
   weitermachen% = 1
   SELECT FIRST FILE "VKOND" INDEX CodeVK.VKOND
   SELECT KEY koab% FILE "VKOND" INDEX CodeVK.VKOND
   WHILE NOT EOF ("vkond") AND weitermachen% = 1
     IF nÑchsteKond.VKOND = 0 THEN 
       weitermachen% = 0
     ELSE 
       SELECT KEY nÑchsteKond.VKOND FILE "VKOND" INDEX CodeVK.VKOND
     END IF 
   WEND 
   SELECT KEY CodeKO.VKOND FILE "GEKOND" INDEX lfdnr.GEKOND
   REM jetzt wurde die Kondition der Firma(1.Agentur) gefunden, jetzt mÅsenn die Prozente/Pauschalen vonFirma addiert
   REM werden, um diese BetrÑge von der Bewertung abzuziehen, danach Erzeugung der BuchungssÑtze
   anzagvF% = 0
   SpezProzent% = 0
   SpezPausch% = 0
   WHILE GAGvonFirma$(anzagvF%) <> ""
     SELECT FIRST FILE "Spezkond" INDEX QCodeVTMA.spezkond
     IF GAGvonFirma$(anzagvF%) <> "" THEN 
       QCodeVTMA$ = RIGHT$ (GAGvonFirma$(anzagvF%),12)
       SELECT KEY QCodeVTMA$ FILE "Spezkond" INDEX QCodeVTMA.spezkond
       IF Prozente.spezkond <> 0 THEN 
         IF APjn.gekond = "j" AND vonCourtage.spezkond <> "j" AND vonPflege.spezkond <> "j" AND einmaligerfolgt.spezkond <> "j" THEN 
           IF gez_Abschlu·.kvertrag <> "j" THEN 
             SpezProzent% = SpezProzent% + Prozente.spezkond
           END IF 
         END IF 
         IF CourtageJN.gekond = "j" AND vonAP.spezkond <> "j" AND vonPflege.spezkond <> "j" AND einmaligerfolgt.spezkond <> "j" THEN 
           SpezProzent% = SpezProzent% + Prozente.spezkond
         END IF 
         IF PflegeJN.gekond = "j" AND vonCourtage.spezkond <> "j" AND vonAp.spezkond <> "j" AND einmaligerfolgt.spezkond <> "j" THEN 
           SpezProzent% = SpezProzent% + Prozente.spezkond
         END IF 
       ELSE 
         IF pauschale.spezkond <> 0 THEN 
           IF APjn.gekond = "j" AND vonCourtage.spezkond <> "j" AND vonPflege.spezkond <> "j" AND einmaligerfolgt.spezkond <> "j" THEN 
             IF gez_Abschlu·.kvertrag <> "j" THEN 
               SpezPausch% = SpezPausch% + Pauschale.spezkond
             END IF 
           END IF 
           IF CourtageJN.gekond = "j" AND vonAP.spezkond <> "j" AND vonPflege.spezkond <> "j" AND einmaligerfolgt.spezkond <> "j" THEN 
             SpezPausch% = SpezPausch% + Pauschale.spezkond
           END IF 
           IF PflegeJN.gekond = "j" AND vonCourtage.spezkond <> "j" AND vonAp.spezkond <> "j" AND einmaligerfolgt.spezkond <> "j" THEN 
             SpezPausch% = SpezPausch% + Pauschale.spezkond
           END IF 
         END IF 
       END IF 
       anzagvF% = anzagvF% + 1
     END IF 
   WEND 
   REM bei Abschlu·provision
   IF APjn.gekond = "j" THEN 
     IF gez_Abschlu·.kvertrag <> "j" THEN 
       GBewertung% = ((Vbewertung% / 100) * AP.gekond) - ((Vbewertung% / 100) * SpezProzent%) - SpezPausch%
     END IF 
   END IF 
   REM bei Courtage
   IF CourtageJN.gekond = "j" THEN 
     GBewertung% = ((Vbewertung% / 100) * Courtage.gekond) - ((Vbewertung% / 100) * SpezProzent%) - SpezPausch%
   END IF 
   REM bei Pflege
   IF PflegeJN.gekond = "j" THEN 
     GBewertung% = (((Vbewertung%) / 100) * PflegeProvi.gekond) - ((Vbewertung% / 100) * SpezProzent%) - SpezPausch%
   END IF 
 
   REM jetzt mÅssen die BuchungssÑtze fÅr die Mitarbeiter angelegt werden
   anzagvF% = 0
   SELECT FIRST FILE "Spezkond" INDEX QCodeVTMA.spezkond
   sr% = 0
   Haftung% = 0
   provsp% = 0
   provsp1% = 0
   REM CALL Fehler("Spezi","")
   WHILE GAGvonFirma$(anzagvF%) <> ""
     QCodeVTMA$ = RIGHT$ (GAGvonFirma$(anzagvF%),12)
     SELECT FIRST FILE "Spezkond" INDEX QCodeVTMA.spezkond
     SELECT KEY QCodeVTMA$ LOCK FILE "Spezkond" INDEX QCodeVTMA.spezkond
     IF Prozente.spezkond <> 0 THEN 
       IF APjn.gekond = "j" AND vonCourtage.spezkond <> "j" AND vonPflege.spezkond <> "j" AND einmaligerfolgt.spezkond <> "j" THEN 
         IF gez_Abschlu·.kvertrag <> "j" THEN 
           butext$ = VS_nr.kvertrag + " AP Spez.Prov."
           provsp1% = ((Vbewertung% / 100) * AP.gekond)
           provsp% = ((provsp1% / 100) * Prozente.spezkond)
         END IF 
       END IF 
       REM bei Courtage
       IF CourtageJN.gekond = "j" AND vonAP.spezkond <> "j" AND vonPflege.spezkond <> "j" AND einmaligerfolgt.spezkond <> "j" THEN 
         butext$ = VS_nr.kvertrag + " Court.Spez.Prov."
         provsp1% = ((Vbewertung% / 100) * Courtage.gekond)
         provsp% = ((provsp1% / 100) * Prozente.spezkond)
       END IF 
       REM bei Pflege
       IF PflegeJN.gekond = "j" AND vonCourtage.spezkond <> "j" AND vonAp.spezkond <> "j" AND einmaligerfolgt.spezkond <> "j" THEN 
         CALL SpezPflege(Laufzeit%,GBeitrag%,provsp%)
         butext$ = VS_nr.kvertrag + " Pflege Spez.Prov."
         REM provsp1% = (((Vbewertung%) / 100) * PflegeProvi.gekond)
         REM provsp% = ((provsp1% / 100) * Prozente.spezkond)
       END IF 
     ELSE 
       IF APjn.gekond = "j" AND vonCourtage.spezkond <> "j" AND vonPflege.spezkond <> "j" AND einmaligerfolgt.spezkond <> "j" THEN 
         IF gez_Abschlu·.kvertrag <> "j" THEN 
           butext$ = VS_nr.kvertrag + " AP Spez.Prov."
           provsp1% = ((Vbewertung% / 100) * AP.gekond)
           provsp% = Pauschale.spezkond
         END IF 
       END IF 
       REM bei Courtage
       IF CourtageJN.gekond = "j" AND vonAP.spezkond <> "j" AND vonPflege.spezkond <> "j" AND einmaligerfolgt.spezkond <> "j" THEN 
         butext$ = VS_nr.kvertrag + " Court.Spez.Prov."
         provsp1% = ((Vbewertung% / 100) * Courtage.gekond)
         provsp% = Pauschale.spezkond
       END IF 
       REM bei Pflege
       IF PflegeJN.gekond = "j" AND vonCourtage.spezkond <> "j" AND vonAp.spezkond <> "j" AND einmaligerfolgt.spezkond <> "j" THEN 
         CALL SpezPflege(Laufzeit%,GBeitrag%,provsp%)
         butext$ = VS_nr.kvertrag + " Pflege Spez.Prov."
         REM provsp1% = (((Vbewertung%) / 100) * PflegeProvi.gekond)
         REM provsp% = Pauschale.spezkond
       END IF 
     END IF 
     IF einmalig.spezkond = "j" THEN 
       einmaligerfolgt.spezkond = "j"
       EinmDatum.spezkond = cdate%
       STORE FILE "Spezkond"
       UNLOCK CURRENT FILE "spezkond"
       UNLOCK FILE "spezkond"
     END IF 
     REM butext$ = Buchungstext.zeingan1 + " Spez.Prov."
     CALL SpezProvisN(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,cdate%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag)
     anzagvF% = anzagvF% + 1
   WEND 
   REM positionieren auf die ursprÅngliche Kondition
   SELECT FIRST FILE "VKOND" INDEX CodeVK.VKOND
   SELECT KEY koab% LOCK FILE "VKOND" INDEX CodeVK.VKOND
 END IF 
 
 
 
 
 
 
 

 cuvt% = lfdnr.KVERTRAG
 codema% = CodeMA.kvertrag
 codege% = CodeGE.kvertrag
 codeva% = CodeVA.kvertrag
 koab% = CodeKO.KVERTRAG
 
 IF NOT EXISTS (koab%,codevk.VKOND) THEN 
   CALL WriteLog("  kein Eintrag in Datei VKOND-gefunden!")
   CALL AddLogInfo()
   ok% = 0
 ELSE 
   SELECT KEY koab% LOCK FILE "VKOND" INDEX CodeVK.VKOND
 END IF 
 vertrprov% = 0
 vsumAP% = 0
 vsumC% = 0
 vsumPP% = 0
 vsumPausch% = 0
 vertrsr% = 0
 WHILE ok% = 1
   SELECT KEY CodeKO.VKOND FILE "GEKOND" INDEX lfdnr.GEKOND
   IF NOT FOUND ("GEKOND") THEN 
     CALL WriteLog("  die angegebene Kondition ist nicht enthalten!")
     CALL WriteLog("  SUPPORT: die in VKOND angegebene Kondition fehlt in GEKOND!")
     CALL AddLogInfo()
     ok% = 0
   END IF 
   IF ok% = 1 THEN 
     vtagentur$ = Gvtagentur$
     vtcodema% = GVTCodema%
     codema% = CodeMA.GEKOND
     haftvertrag% = SRHaftung.kvertrag
     REM 150697
     dmeinh% = dmeinheit.gekond
     REM --------------------
     REM -- Abschlu·provision
     REM --------------------
     
     IF APjn.gekond = "j" THEN 
       REM CALL Fehler("APjn=j","")
       IF gez_Abschlu·.kvertrag <> "j" THEN 
         IF Geinh% = 0 THEN 
           prov% = ((Bewertungssumme.KVERTRAG / 100) * AP.gekond)
         ELSE 
           prov% = Einheiten.KVERTRAG * EuroproEinh.gekond
         END IF 
         IF haftvertrag% > 0 THEN 
           IF SRjn.gekond = "j" AND Laufzeit% < haftvertrag% THEN 
             sr% = sr.gekond
             IF sr% <> 0 THEN 
               Haftung% = DAYS (VS_Beginn.kvertrag) + (haftvertrag% * 30)
             ELSE 
               Haftung% = 0
             END IF 
           ELSE 
             REM unbegrenzte Haftung ohne Auszahlung
             IF Haftung.gekond = - 1 THEN 
               sr% = sr.gekond
               Haftung% = 0
             ELSE 
               sr% = 0
               Haftung% = 0
             END IF 
           END IF 
         ELSE 
           IF SRjn.gekond = "j" AND Laufzeit% < Haftung.gekond THEN 
             sr% = sr.gekond
             IF sr% <> 0 THEN 
               Haftung% = DAYS (VS_Beginn.kvertrag) + (Haftung.gekond * 30)
             ELSE 
               Haftung% = 0
             END IF 
           ELSE 
             REM unbegrenzte Haftung ohne Auszahlung
             IF Haftung.gekond = - 1 THEN 
               sr% = sr.gekond
               Haftung% = - 1
             ELSE 
               sr% = 0
               Haftung% = 0
             END IF 
           END IF 
         END IF 
         IF Haftung.gekond = - 1 THEN Haftung% = - 1
         IF prov% <> 0 OR sr% <> 0 THEN CALL RegProvis("AP: " + VS_Nr.KVERTRAG,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag)
       END IF 
     END IF 



     REM --------------------
     REM -- Abschlu·provision KV und Pfl
     REM --------------------
     
     IF (APKVMonatJN.gekond = "j" OR APPfMonatJN.gekond = "j") AND (KVMonatFakt.gekond > 0 OR PflMonatFakt.gekond > 0) THEN 
       REM CALL Fehler("KV-Pfl","")
       IF gez_Abschlu·.kvertrag <> "j" THEN 
         IF Geinh% = 0 THEN 
           prov% = (NettoBeitrag.KVERTRAG * KVMonatFakt.gekond) + (Pflegepflicht.kvertrag * PflMonatFakt.gekond)
         ELSE 
           prov% = Einheiten.KVERTRAG * EuroproEinh.gekond
         END IF 
         IF haftvertrag% > 0 THEN 
           IF SRjn.gekond = "j" AND Laufzeit% < haftvertrag% THEN 
             sr% = sr.gekond
             IF sr% <> 0 THEN 
               Haftung% = DAYS (VS_Beginn.kvertrag) + (haftvertrag% * 30)
             ELSE 
               Haftung% = 0
             END IF 
           ELSE 
             REM unbegrenzte Haftung ohne Auszahlung
             IF Haftung.gekond = - 1 THEN 
               sr% = sr.gekond
               Haftung% = 0
             ELSE 
               sr% = 0
               Haftung% = 0
             END IF 
           END IF 
         ELSE 
           IF SRjn.gekond = "j" AND Laufzeit% < Haftung.gekond THEN 
             sr% = sr.gekond
             IF sr% <> 0 THEN 
               Haftung% = DAYS (VS_Beginn.kvertrag) + (Haftung.gekond * 30)
             ELSE 
               Haftung% = 0
             END IF 
           ELSE 
             REM unbegrenzte Haftung ohne Auszahlung
             IF Haftung.gekond = - 1 THEN 
               sr% = sr.gekond
               Haftung% = - 1
             ELSE 
               sr% = 0
               Haftung% = 0
             END IF 
           END IF 
         END IF 
         IF Haftung.gekond = - 1 THEN Haftung% = - 1
         IF prov% <> 0 OR sr% <> 0 THEN CALL RegProvis("AP-KV-Pfl: " + VS_Nr.KVERTRAG,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag)
       END IF 
     END IF 




     REM CALL Fehler("AP", STR$ (prov%,",999999.00"))

     REM ------------------
     REM -- Pflegeprovision
     REM ------------------
     REM 13.10.94  - keine Berechung der Stornoreserve
     pflege% = 0
     IF PflegeJN.gekond = "j" THEN 
       IF Laufzeit% >= Pflegezeit.gekond THEN 
         _day% = DAY (letztePflege.KVERTRAG)
         _month% = MONTH (letztePflege.KVERTRAG)
         _year% = YEAR (letztePflege.KVERTRAG)
         IF _year% < 1980 THEN 
           _year% = 1980
           _day% = 1
           _month% = 1
         END IF 
 
           REM 060597 Neu Pflegeprovis nach Zahlweisen
           PflegeGez$ = "n"
           IF PflegeNachZahlw.gekond = "n" THEN 
             REM -- abhÑngig von Zahlungsweise im Vertrag --
             SELECT CASE ZW.KVERTRAG
             CASE 1
               _year% = _year% + 1
             CASE 2
               _month% = _month% + 6
               IF _month% > 12 THEN 
                 _year% = _year% + 1
                 _month% = _month% - 12
               END IF 
             CASE 4
               _month% = _month% + 3
               IF _month% > 12 THEN 
                 _year% = _year% + 1
                 _month% = _month% - 12
               END IF 
             CASE 6
               _month% = _month% + 2
               IF _month% > 12 THEN 
                 _year% = _year% + 1
                 _month% = _month% - 12
               END IF 
             CASE 12
               _month% = _month% + 1
               IF _month% > 12 THEN 
                 _year% = _year% + 1
                 _month% = _month% - 12
               END IF 
             CASE 0
               _year% = 2100
             END SELECT 
             lfdnr11% = lfdnr.kvertrag
             IF _day% > 29 THEN _day% = 29
             IF _day% > 27 AND _month% = 2 THEN _day% = 027
             nextpfl% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
             REM 060597 klÑren wozu ?
             IF ZW.KVERTRAG = 0 AND letzteProvi.KVERTRAG < 1 THEN 
               REM 150597
               REM prov% = (((Beitrag.KVERTRAG * ZW.KVERTRAG) / 100) * PflegeProvi.gekond)
               IF PflegevomNetto.stamm <> "j" THEN 
                 prov% = (((Beitrag.KVERTRAG) / 100) * PflegeProvi.gekond)
               ELSE 
                 prov% = (((NettoBeitrag.KVERTRAG) / 100) * PflegeProvi.gekond)
               END IF 
               REM prov% = (((Beitrag.KVERTRAG) / 100) * PflegeProvi.gekond)
               PflegeGez$ = "j"
               pflege% = 1
               sr% = 0
               Haftung% = 0
             ELSE 
               IF nextpfl% <= cdate% THEN 
                 REM 150597
                 REM prov% = (((Beitrag.KVERTRAG * ZW.KVERTRAG) / 100) * PflegeProvi.gekond)
                 REM prov% = (((Beitrag.KVERTRAG) / 100) * PflegeProvi.gekond)
                 IF PflegevomNetto.stamm <> "j" THEN 
                   prov% = (((Beitrag.KVERTRAG) / 100) * PflegeProvi.gekond)
                 ELSE 
                   prov% = (((NettoBeitrag.KVERTRAG) / 100) * PflegeProvi.gekond)
                 END IF 
                 PflegeGez$ = "j"
                 pflege% = 1
                 sr% = 0
                 Haftung% = 0
               END IF 
             END IF 
           ELSE 
             REM -- AbhÑngig von Zahlweise in GEKOND --
             _month% = _month% + PflegeZW.GEKOND
             IF _month% > 12 THEN 
               _year% = _year% + 1
               _month% = _month% - 12
             END IF 
             IF _day% > 29 THEN _day% = 29
             IF _day% > 27 AND _month% = 2 THEN _day% = 027
             nextpfl% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
             IF nextpfl% <= cdate% THEN 
               REM prov% = (((Beitrag.KVERTRAG * ZW.KVERTRAG) / 100) * PflegeProvi.gekond)
               IF PflegevomNetto.stamm <> "j" THEN 
                 prov% = (((Beitrag.KVERTRAG * ZW.KVERTRAG) / 100) * PflegeProvi.gekond)
               ELSE 
                 prov% = (((NettoBeitrag.KVERTRAG * ZW.KVERTRAG) / 100) * PflegeProvi.gekond)
               END IF 
               PflegeGez$ = "j"
               pflege% = 1
               sr% = 0
               Haftung% = 0
             END IF 
           END IF 
           REM 030697 IF PflegeGez$ = "j" THEN CALL RegProvis("Pflege: " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%)
           IF PflegeGez$ = "j" AND prov% <> 0 THEN CALL RegProvis("Pflege: " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag)
         END IF 
       END IF 
     END IF 
     REM CALL Fehler("Pflege", STR$ (prov%,",999999.00"))


     REM 140497 Courtage nicht rechnen, wenn CourtageEinstell angekreuzt wurde und eine Pflegeprov. gezahlt wurde 
     REM 270497 IF pflege% = 1 AND CourtEinstellen.gekond = "j" THEN GOTO Pflege1404971 
     REM 200597
 
     IF pflege% = 1 OR letztePflege.kvertrag > 0 THEN GOTO Pflege1404971 
 
     REM -----------
     REM -- Courtage
     REM -----------
 
     IF CourtageJN.gekond = "j" THEN 
       REM vsnrtest$ = vs_nr.kvertrag
       IF vs_nr.kvertrag LIKE "K7704412900002 DYN DYN" THEN 
         REM CALL Fehler(vs_nr.kvertrag,"3")
       END IF 
       REM CALL Fehler(vs_nr.kvertrag,"3")
       IF BewertEinmDat.kvertrag > 0 AND BewertCalcDat.kvertrag < 1 THEN 
         GBewEinm% = - 1
         GOTO BewEinmDat201299
       END IF 
       _day% = DAY (letzteProvi.KVERTRAG)
       _month% = MONTH (letzteProvi.KVERTRAG)
       _year% = YEAR (letzteProvi.KVERTRAG)
       IF _year% < 1980 THEN 
         _year% = 1980
         _day% = 1
         _month% = 1
       END IF 
       CourtGez$ = "n"
       IF CourtageZWjn.gekond = "n" THEN 
         REM -- abhÑngig von Zahlungsweise im Vertrag --
         SELECT CASE ZW.KVERTRAG
         CASE 1
           _year% = _year% + 1
         CASE 2
           _month% = _month% + 6
           IF _month% > 12 THEN 
             _year% = _year% + 1
             _month% = _month% - 12
           END IF 
         CASE 4
           _month% = _month% + 3
           IF _month% > 12 THEN 
             _year% = _year% + 1
             _month% = _month% - 12
           END IF 
         CASE 6
           _month% = _month% + 2
           IF _month% > 12 THEN 
             _year% = _year% + 1
             _month% = _month% - 12
           END IF 
         CASE 12
           _month% = _month% + 1
           IF _month% > 12 THEN 
             _year% = _year% + 1
             _month% = _month% - 12
           END IF 
         CASE 0
           _year% = 2100
         END SELECT 
         IF _day% > 29 THEN _day% = 29
         IF _day% > 27 AND _month% = 2 THEN _day% = 027
         nextprovi% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
         nextp$ = DATE$ (nextprovi%,"0d.mm.yyyy")
         IF ZW.KVERTRAG = 0 AND letzteProvi.KVERTRAG < 1 THEN 
           IF Geinh% = 0 THEN 
             IF CourtNachBeitr$ = "TRUE" THEN 
               prov% = ((Beitrag.KVERTRAG / 100) * Courtage.gekond)
             ELSE 
               prov% = ((Bewertungssumme.KVERTRAG / 100) * Courtage.gekond)
             END IF 
           ELSE 
             prov% = Einheiten.KVERTRAG * Europroeinh.gekond
           END IF 
           CourtGez$ = "j"
         ELSE 
           IF nextprovi% <= cdate% THEN 
             IF Geinh% = 0 THEN 
               IF CourtNachBeitr$ = "TRUE" THEN 
                 prov% = ((Beitrag.KVERTRAG / 100) * Courtage.gekond)
               ELSE 
                 prov% = ((Bewertungssumme.KVERTRAG / 100) * Courtage.gekond)
               END IF 
             ELSE 
               prov% = Einheiten.KVERTRAG * Europroeinh.gekond
             END IF 
             CourtGez$ = "j"
           END IF 
         END IF 
       ELSE 
         REM -- AbhÑngig von Zahlweise in GEKOND --
         _month% = _month% + CourtageZW.GEKOND
         IF _month% > 12 THEN 
           _year% = _year% + 1
           _month% = _month% - 12
         END IF 
         lfdnr11% = lfdnr.kvertrag
         IF _day% > 29 THEN _day% = 29
         IF _day% > 27 AND _month% = 2 THEN _day% = 027
         nextprovi% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
         IF nextprovi% <= cdate% THEN 
           IF Geinh% = 0 THEN 
             IF CourtNachBeitr$ = "TRUE" THEN 
               prov% = ((Beitrag.KVERTRAG / 100) * Courtage.gekond)
             ELSE 
               prov% = ((Bewertungssumme.KVERTRAG / 100) * Courtage.gekond)
             END IF 
           ELSE 
             prov% = Einheiten.KVERTRAG * Europroeinh.gekond
           END IF 
           CourtGez$ = "j"
         END IF 
       END IF 
       REM 060497
       REM 200597
       IF haftvertrag% > 0 THEN 
         IF SRjn.gekond = "j" AND Laufzeit% < Haftvertrag% AND StornoResGezJN.vkond <> "j" THEN 
           StornoResGezJN$ = ""
           sr% = sr.gekond
           IF sr% <> 0 THEN 
             codevk% = codevk.vkond
             Haftung% = DAYS (ProviAb.kvertrag) + (Haftvertrag% * 30)
             StornoResGezJN$ = "x"
             IF Haftung.gekond = - 1 THEN Haftung% = - 1
           END IF 
         ELSE 
           IF Haftung.gekond = - 1 THEN 
             sr% = sr.gekond
             Haftung% = - 1
           ELSE 
             sr% = 0
             Haftung% = 0
           END IF 
         END IF 
       ELSE 
         IF SRjn.gekond = "j" AND Laufzeit% < Haftung.gekond AND StornoResGezJN.vkond <> "j" THEN 
           StornoResGezJN$ = ""
           sr% = sr.gekond
           IF sr% <> 0 THEN 
             codevk% = codevk.vkond
             Haftung% = DAYS (ProviAb.kvertrag) + (Haftung.gekond * 30)
             StornoResGezJN$ = "x"
             IF Haftung.gekond = - 1 THEN Haftung% = - 1
           END IF 
         ELSE 
           IF Haftung.gekond = - 1 THEN 
             sr% = sr.gekond
             Haftung% = - 1
           ELSE 
             sr% = 0
             Haftung% = 0
           END IF 
         END IF 
       END IF 
       IF StornoResGezJN$ = "x" THEN 
         StornoResGezJN.vkond = "j"
         codevk% = codevk.vkond
         Workstation.vkond = Workstation%
         QWoNo.vkond = STR$ (Workstation%,"000000") + STR$ (codevk.vkond,"000000")
         RecStatus.vkond = "c"
         STORE FILE "Vkond"
         UNLOCK CURRENT FILE "vkond"
         UNLOCK FILE "vkond"
         SELECT KEY codevk% FILE "VKOND" INDEX CodeVK.VKOND
         StornoResGezJN$ = ""
       END IF 
       REM 220697
       IF CourtGez$ = "j" THEN 
         IF sr% <> 0 OR prov% <> 0 THEN 
           CALL RegProvis("Courtage: " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag)
         END IF 
       END IF 
       GOTO Court201299end
BewEinmDat201299: 
       IF Geinh% = 0 THEN 
         prov% = ((BewertEinm.KVERTRAG / 100) * Courtage.gekond)
       ELSE 
         prov% = Einheiten.KVERTRAG * Europroeinh.gekond
       END IF 
       CourtGez$ = "j"
       IF haftvertrag% > 0 THEN 
         IF SRjn.gekond = "j" AND Laufzeit% < haftvertrag% AND StornoResGezJN.vkond <> "j" THEN 
           StornoResGezJN$ = ""
           sr% = sr.gekond
           IF sr% <> 0 THEN 
             codevk% = codevk.vkond
             Haftung% = DAYS (ProviAb.kvertrag) + (haftvertrag% * 30)
             StornoResGezJN$ = "x"
             IF Haftung.gekond = - 1 THEN Haftung% = - 1
           END IF 
         ELSE 
           IF Haftung.gekond = - 1 THEN 
             sr% = sr.gekond
             Haftung% = 0
           ELSE 
             sr% = 0
             Haftung% = 0
           END IF 
         END IF 
       ELSE 
         IF SRjn.gekond = "j" AND Laufzeit% < Haftung.gekond AND StornoResGezJN.vkond <> "j" THEN 
           StornoResGezJN$ = ""
           sr% = sr.gekond
           IF sr% <> 0 THEN 
             codevk% = codevk.vkond
             Haftung% = DAYS (ProviAb.kvertrag) + (Haftung.gekond * 30)
             StornoResGezJN$ = "x"
             IF Haftung.gekond = - 1 THEN Haftung% = - 1
           END IF 
         ELSE 
           IF Haftung.gekond = - 1 THEN 
             sr% = sr.gekond
             Haftung% = 0
           ELSE 
             sr% = 0
             Haftung% = 0
           END IF 
         END IF 
       END IF 
       IF StornoResGezJN$ = "x" THEN 
         StornoResGezJN.vkond = "j"
         codevk% = codevk.vkond
         Workstation.vkond = Workstation%
         QWoNo.vkond = STR$ (Workstation%,"000000") + STR$ (codevk.vkond,"000000")
         RecStatus.vkond = "c"
         STORE FILE "Vkond"
         UNLOCK CURRENT FILE "vkond"
         UNLOCK FILE "vkond"
         SELECT KEY codevk% FILE "VKOND" INDEX CodeVK.VKOND
         StornoResGezJN$ = ""
       END IF 
       REM 220697
       IF CourtGez$ = "j" THEN 
         IF sr% <> 0 OR prov% <> 0 THEN 
           CALL RegProvis("Courtage: " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag)
         END IF 
       END IF 
Court201299end: 
     END IF 
 
 
Pflege1404971: 
 
  
 
 
  
     REM ----------------
     REM -- Vertragsdauer
     REM ----------------
 
     IF VDjn.gekond = "j" THEN 
       IF gez_Abschlu·.kvertrag <> "j" THEN 
         SELECT CASE VS_Dauer.KVERTRAG
         CASE VD1Dauer.gekond
           prov% = ((Bewertungssumme.KVERTRAG / 100) * VD1AP.gekond)
           sr% = VD1SR.gekond
           Haftung% = VD1HZ.GEKOND
         CASE VD2Dauer.gekond
           prov% = ((Bewertungssumme.KVERTRAG / 100) * VD2AP.gekond)
           sr% = VD2SR.gekond
           Haftung% = VD2HZ.GEKOND
         CASE VD3Dauer.gekond
           prov% = ((Bewertungssumme.KVERTRAG / 100) * VD3AP.gekond)
           sr% = VD3SR.gekond
           Haftung% = VD3HZ.GEKOND
         CASE VD4Dauer.gekond
           prov% = ((Bewertungssumme.KVERTRAG / 100) * VD4AP.gekond)
           sr% = VD4SR.gekond
           Haftung% = VD4HZ.GEKOND
         CASE VD5Dauer.gekond
           prov% = ((Bewertungssumme.KVERTRAG / 100) * VD5AP.gekond)
           sr% = VD5SR.gekond
           Haftung% = VD5HZ.GEKOND
         END SELECT 
         IF sr% <> 0 THEN 
           IF haftvertrag% > 0 THEN 
             Haftung% = (haftvertrag% * 30) + DAYS (VS_beginn.kvertrag)
           ELSE 
             Haftung% = (Haftung% * 30) + DAYS (VS_beginn.kvertrag)
           END IF 
         ELSE 
           Haftung% = 0
         END IF 
         CALL RegProvis("VD: " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag)
       END IF 
     END IF 
   
     REM -----------------------------------
     REM -- Teilzahlung/Ratenzahlung
     REM -- z.Z. auf Ratenzahlung umgestellt
     REM -----------------------------------
 
     IF TZjn.gekond = "j" THEN 
       IF TZRate.KVERTRAG + 1 = 1 THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ0.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD1.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ1.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD2.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ2.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD3.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ3.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD4.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ4.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD5.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ5.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD6.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ6.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD7.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ7.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD8.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ8.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD9.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ9.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD10.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ10.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD11.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ11.gekond)
       END IF 
       IF prov% <> 0 THEN 
         REM 060497
         IF haftvertrag% > 0 THEN 
           IF SRjn.gekond = "j" AND Laufzeit% < haftvertrag% THEN 
             sr% = sr.gekond
             IF sr% <> 0 THEN 
               Haftung% = DAYS (VS_Beginn.kvertrag + (haftvertrag% * 30))
             END IF 
           ELSE 
             IF Haftung.gekond = - 1 THEN 
               sr% = sr.gekond
               Haftung% = - 1
             ELSE 
               sr% = 0
               Haftung% = 0
             END IF 
           END IF 
         ELSE 
           IF SRjn.gekond = "j" AND Laufzeit% < Haftung.gekond THEN 
             sr% = sr.gekond
             IF sr% <> 0 THEN 
               Haftung% = DAYS (VS_Beginn.kvertrag + (Haftung.gekond * 30))
             END IF 
           ELSE 
             IF Haftung.gekond = - 1 THEN 
               sr% = sr.gekond
               Haftung% = - 1
             ELSE 
               sr% = 0
               Haftung% = 0
             END IF 
           END IF 
         END IF 
         REM IF sr% <> 0 THEN 
           REM Haftung% = DAYS (VS_Beginn.kvertrag + (Haftung.gekond * 30))
         REM ELSE 
           REM Haftung% = 0
         REM END IF 
         CALL RegProvis("TZ (" + LTRIM$ ( STR$ (TZRate.KVERTRAG + 1,"999")) + ". Zahlung): " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag)
       ELSE 
         CALL WriteLog("!Konditionen fÅr Ratenzahlung/Teilzahlung unvollstÑndig")
         CALL WriteLog("    >> Rate: " + LTRIM$ ( STR$ (TZRate.KVERTRAG + 1,"999")))
         CALL WriteLog("    >> bei Abschlu·:" + LTRIM$ ( STR$ (TZ0.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD1.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ1.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD2.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ2.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD3.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ3.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD4.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ4.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD5.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ5.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD6.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ6.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD7.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ7.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD8.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ8.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD9.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ9.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD10.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ10.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD11.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ11.gekond,",999999.00")))
         CALL AddLogInfo()
       END IF 
 
     END IF 
 
     REM ------------
     REM -- Pauschale
     REM ------------
 
     IF PauschaleJN.gekond = "j" THEN 
       IF gez_Pauschale.kvertrag <> "j" THEN 
         prov% = Pauschale.gekond
         REM 060497
         IF SRjn.gekond = "j" AND Laufzeit% < Haftung.gekond THEN 
           sr% = sr.gekond
           IF sr% <> 0 THEN 
             IF haftvertrag% > 0 THEN 
               Haftung% = DAYS (VS_Beginn.kvertrag) + (Haftvertrag% * 30)
             ELSE 
               Haftung% = DAYS (VS_Beginn.kvertrag) + (Haftung.gekond * 30)
             END IF 
           END IF 
         ELSE 
           IF Haftung.gekond = - 1 THEN 
             sr% = sr.gekond
             Haftung% = - 1
           ELSE 
             sr% = 0
             Haftung% = 0
           END IF 
         END IF 
         REM IF sr% <> 0 THEN 
           REM Haftung% = DAYS (VS_Beginn.kvertrag) + (Haftung.gekond * 30)
         REM ELSE 
           REM Haftung% = 0
         REM END IF 
         CALL RegProvis("Pauschale: " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag)
       END IF 
     END IF 
 
   END IF 
 
   IF nÑchsteKond.VKOND = 0 THEN 
     ok% = 0
   ELSE 
     SELECT KEY nÑchsteKond.VKOND LOCK FILE "VKOND" INDEX CodeVK.VKOND
   END IF 
 
 WEND 
 END SUB 
 

 ' RegProvis
 ' =======================================================================
 ' Zweck:   trÑgt Buchungstext der Provisionsberechnung in die Buchungs-
 '          datei ein
 ' Nutzung: CALL RegProvis(remark$,codema%,provi%,sr%,srbis%)
 '          remark$     = Buchungstext
 '          ma%         = Agenturnummer
 '          provi%      = Provisionssumme
 '          sr%         = Stornoreserve in %
 '          Haftung%    = Datum der Stornoreserveauszahlung
 ' =======================================================================
 ' 29.04.93      - PrÅfung auf einmalige Abschlu·provi und Pauschale
 '                 - Provisionsausweisung abzÅglich Stornoreserve
 ' 26.06.95      - Korrektur der Registrierung gezahlter Pauschalen
 ' 29.04.96      - getrennte Differenzbildung fÅr alle verschiedenen
 '                   Provisionssysteme
 '                   (alte Variante als old_RegProvis im Anschlu·)
 
 
SUB RegProvis(remark$,ma%,provi%,sr%,Haftung%,euro1%,codew%,waehr1$)
 REM CALL Fehler("Pool1","")
 cfile$ = FILE 
 FILE "kvertrag"
 _lfdnr% = lfdnr.KVERTRAG
 SELECT KEY _lfdnr% LOCK FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
 SELECT KEY ma% FILE "maadr" INDEX CodeMA.MAADR
 SELECT KEY codeva.kvertrag FILE "sparten" INDEX codeva.sparten
 codevp% = codevp.kvertrag
 SELECT FIRST FILE "VPRODUKT" INDEX codevp.vprodukt
 SELECT KEY codevp% FILE "VPRODUKT" INDEX codevp.vprodukt
 REM -- bereits gezahlte Provisionen verallgemeinern
 REM IF remark$ LIKE "Abschlu*" THEN 
   REM vertrprov% = vsumAP%
 REM ELSE IF remark$ LIKE "Courta*" THEN 
   REM vertrprov% = vsumC%
 REM ELSE IF remark$ LIKE "Pflege*" THEN 
   REM vertrprov% = vsumPP%
 REM ELSE IF remark$ LIKE "Pauschal*" THEN 
   REM vertrprov% = vsumPausch%
 REM ELSE IF remark$ LIKE "VD*" THEN 
   REM vertrprov% = vsumAP%
 REM END IF 
 bewerteimz% = 0
 IF BewertEinmDat.kvertrag > 0 AND BewertCalcDat.kvertrag < 1 THEN 
   bewerteimz% = 1
 END IF 
 REM -- Bearbeitung bei letzter Agentur in der Struktur
 nurprov% = 0
 IF (CodeMA.maadr = vorgÑnger.maadr) OR (VorgÑnger.MAADR < 1) THEN 
   
   IF bewerteimz% = 1 THEN 
     REM BewertCalcDat.kvertrag = cdate%
     BewertCalcDat.kvertrag = BewertEinmDat.kvertrag
   ELSE 
     letzteProvi.kvertrag = cdate%
   END IF 
   IF remark$ LIKE "TZ (*" THEN 
     TZRate.KVERTRAG = TZRate.KVERTRAG + 1
   END IF 
 ELSE 
   IF Geinh% = - 1 AND nurProv.stamm = "j" THEN 
     IF ma% = vtcodema% THEN 
     ELSE 
       IF dochProv.maadr <> "j" THEN 
         nurprov% = - 1
         provi% = 0
         sr% = 0
         haftung% = 0
       END IF 
     END IF 
   END IF 
 END IF 


 REM -- Einmalzahlungen/Berechnungen Stornoreserve registrieren --
 IF remark$ LIKE "Abschlu*" OR remark$ LIKE "VD*" OR remark2$ LIKE "AP*" OR remark$ LIKE "AP*" THEN gezAbschlu·% = 1
 IF remark$ LIKE "Pflege*" THEN gezPflege% = 1
 IF remark$ LIKE "Pauschal*" THEN gezPauschale% = 1
 IF CodeMA.MAADR = VorgÑnger.MAADR OR VorgÑnger.MAADR < 1 THEN 
   IF gezAbschlu·% = 1 THEN gez_Abschlu·.kvertrag = "j"
   IF gezPflege% = 1 THEN letztePflege.kvertrag = cdate%
   IF gezPauschale% = 1 THEN gez_Pauschale.kvertrag = "j"
 END IF 
   
 REM CALL QuickStore("KVERTRAG")
 STORE FILE "KVERTRAG"
 UNLOCK CURRENT FILE "KVERTRAG"
 UNLOCK FILE "kvertrag"
 MOUSE OFF 
 FILE "buchung"
 BLANK 
 CodeBU.buchung = SER ("buchung",1)
 CodeBU% = CodeBU.buchung
 IF bewerteimz% = 1 THEN 
   Datum.buchung = BewertEinmDat.kvertrag
 ELSE 
   Datum.buchung = cdate%
 END IF 
 REM CALL Fehler ( DATE$ (cdate%,"0d.mm.yyyy"),"")
 FÑlligkeit.buchung = cdate%
 REM 19062002
 IF bewerteimz% = 1 THEN 
   FÑlligkeit.buchung = BewertEinmDat.kvertrag
 END IF 
 CodeVT.buchung = lfdnr.kvertrag
 IF KÅndigung.MAADR < cdate% AND Nachfolger.MAADR <> 0 THEN 
   IF remark$ LIKE "Abschlu*" OR remark$ LIKE "AP*" OR remark$ LIKE "VD*" OR remark$ LIKE "Pauschal*" THEN kondart% = 0
   IF remark$ LIKE "Pflege*" THEN kondart% = 2
   IF remark$ LIKE "Court*" OR remark$ LIKE "*Court*" THEN kondart% = 1
   REM CodeMA.buchung = Nachfolger.MAADR
   REM ma1% = Nachfolger.MAADR
   REM Buchungstext.buchung = remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)"
         REM *********************************************************************************************************************
           SELECT CASE kondart%
           CASE 0,3,4
             REM AP
             IF Kuenap.maadr LIKE "j" THEN 
               REM AP wir weitergezahlt
               IF PausUVzahl.maadr < 1 THEN 
                 CodeMA.buchung = ma%
                 ma1% = ma%
                 Buchungstext.buchung = LEFT$ (remark$,70)
               ELSE 
                 IF ma% = vtcodema% THEN 
                   CodeMA.buchung = ma%
                   ma1% = ma%
                   Buchungstext.buchung = LEFT$ (remark$,70)
                 ELSE 
                   CodeMA.buchung = Nachfolger.MAADR
                   ma1% = Nachfolger.MAADR
                   Buchungstext.buchung = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                 END IF 
               END IF 
             ELSE 
               CodeMA.buchung = Nachfolger.MAADR
               ma1% = Nachfolger.MAADR
               Buchungstext.buchung = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
             END IF 
           CASE 1
             REM Courtage
             IF KuenCourt1.maadr LIKE "j" THEN 
               REM die erste courtage soll noch gezahlt werden
               IF KuenCourt1.kvertrag <> "j" THEN 
                 SELECT CURRENT LOCK FILE "kvertrag"
                 KuenCourt1.kvertrag = "j"
                 STORE FILE "kvertrag"
                 IF PausUVzahl.maadr < 1 THEN 
                   CodeMA.buchung = ma%
                   ma1% = ma%
                   Buchungstext.buchung = LEFT$ (remark$,70)
                 ELSE 
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       Buchungstext.buchung = LEFT$ (remark$,70)
                         
                     ELSE 
                       CodeMA.buchung = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       Buchungstext.buchung = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                     END IF 
                 END IF 
               ELSE 
                 CodeMA.buchung = Nachfolger.MAADR
                 ma1% = Nachfolger.MAADR
                 Buchungstext.buchung = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
               END IF 
             ELSE 
               IF KuenCourtAlle.maadr LIKE "j" THEN 
                 SELECT CURRENT LOCK FILE "kvertrag"
                 KuenCourt1.kvertrag = "j"
                 STORE FILE "kvertrag"
                 IF PausUVzahl.maadr < 1 THEN 
                   CodeMA.buchung = ma%
                   ma1% = ma%
                   Buchungstext.buchung = LEFT$ (remark$,70)
                 ELSE 
                   IF ma% = vtcodema% THEN 
                     CodeMA.buchung = ma%
                     ma1% = ma%
                     Buchungstext.buchung = LEFT$ (remark$,70)
                   ELSE 
                     CodeMA.buchung = Nachfolger.MAADR
                     ma1% = Nachfolger.MAADR
                     Buchungstext.buchung = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                   END IF 
                 END IF 
               ELSE 
                 CodeMA.buchung = Nachfolger.MAADR
                 ma1% = Nachfolger.MAADR
                 Buchungstext.buchung = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
               END IF 
             END IF 
          CASE 2,5
            REM Pflege
            IF KuenPflege.maadr LIKE "j" THEN 
               IF PausUVzahl.maadr < 1 THEN 
                 CodeMA.buchung = ma%
                 ma1% = ma%
                 Buchungstext.buchung = LEFT$ (remark$,70)
               ELSE 
                 IF ma% = vtcodema% THEN 
                   CodeMA.buchung = ma%
                   ma1% = ma%
                   Buchungstext.buchung = LEFT$ (remark$,70)
                 ELSE 
                   CodeMA.buchung = Nachfolger.MAADR
                   ma1% = Nachfolger.MAADR
                   Buchungstext.buchung = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                 END IF 
               END IF 
            ELSE 
               CodeMA.buchung = Nachfolger.MAADR
               ma1% = Nachfolger.MAADR
               Buchungstext.buchung = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
            END IF 
          END SELECT 
         REM ********************************************************************************************************************* 
 ELSE 
   CodeMA.buchung = ma%
   ma1% = ma%
   IF bewerteimz% = 1 THEN 
     Buchungstext.buchung = remark$ + "- Erst.Zahl."
   ELSE 
     Buchungstext.buchung = remark$
   END IF 
 END IF 
 IF dmeinh% > 0 THEN einheit% = provi% / dmeinh%
 SELECT KEY ma1% LOCK FILE "maadr" INDEX codema.maadr

 IF remark$ LIKE "Pauschal*" THEN 
   IF haftung% <> 0 AND sr% <> 0 AND srjn.gekond = "j" THEN 
     SRBetrag% = ((provi%) / 100) * sr%
   ELSE 
     SRBetrag% = 0
   END IF 
   betr% = provi% - SRBetrag%
 ELSE 
   IF haftung% <> 0 AND sr% <> 0 AND srjn.gekond = "j" THEN 
     SRBetrag% = ((provi% - vertrprov%) / 100) * sr%
   ELSE 
     SRBetrag% = 0
   END IF 
   IF Geinh% = 0 THEN 
     betr% = provi% - vertrprov% - SRBetrag%
   ELSE 
     IF nurprov.stamm = "j" AND nurprov% = - 1 THEN 
       betr% = 0
       SRBetrag% = 0
     ELSE 
       betr% = provi% - vertrprov% - SRBetrag%
     END IF 
   END IF 
 END IF 

 Stornoreserve.maadr = Stornoreserve.maadr + SRBetrag%
 StornoreserveEU.maadr = VAL ( STR$ (Stornoreserve.maadr / euro1%,"999999999.00"))
 abst% = Stornoreserve.maadr
 absteu% = StornoreserveEU.maadr
 IF codema.maadr = 1 THEN 
   NUMBASE "99999999.000"
   REM CALL Fehler("","")
 END IF 
 einheitkv% = 0
 REM CALL Fehler(sparte.sparten,"")
 IF EinheitSach.stamm = "j" THEN 
   IF SparteIstSach.sparten <> 1 THEN 
     IF ma1% = vtcodema% THEN 
       IF EinheitAusGeko.stamm < 1 THEN 
         Einheiten.maadr = Einheiten.maadr + einheit%
         einheitkv% = einheit%
       END IF 
       IF betr% >= 0 THEN 
         IF EinheitAusGeko.stamm > 0 THEN 
           Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag
           einheitkv% = einheiten.kvertrag
         END IF 
       ELSE 
         IF EinheitAusGeko.stamm > 0 THEN 
           Einheiten.maadr = Einheiten.maadr + (einheiten.kvertrag * - 1)
           einheitkv% = einheiten.kvertrag * - 1
         END IF 
       END IF 
     END IF 
   ELSE 
     IF EinheitAusGeko.stamm < 1 THEN 
       Einheiten.maadr = Einheiten.maadr + einheit%
       einheitkv% = einheit%
     END IF 
     IF betr% >= 0 THEN 
       IF EinheitAusGeko.stamm > 0 THEN 
         Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag
         einheitkv% = einheiten.kvertrag
       END IF 
     ELSE 
       IF EinheitAusGeko.stamm > 0 THEN 
         Einheiten.maadr = Einheiten.maadr + (einheiten.kvertrag * - 1)
         einheitkv% = einheiten.kvertrag * - 1
       END IF 
     END IF 
   END IF 
 ELSE 
   IF EinheitAusGeko.stamm < 1 THEN 
     Einheiten.maadr = Einheiten.maadr + einheit%
     einheitkv% = einheit%
   END IF 
   IF betr% >= 0 THEN 
     IF EinheitAusGeko.stamm > 0 THEN 
       Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag
       einheitkv% = einheiten.kvertrag
     END IF 
   ELSE 
     IF EinheitAusGeko.stamm > 0 THEN 
       Einheiten.maadr = Einheiten.maadr + (einheiten.kvertrag * - 1)
       einheitkv% = einheiten.kvertrag * - 1
     END IF 
   END IF 
 END IF 
 IF ma1% = vtcodema% THEN 
   IF EinheitAusGeko.stamm < 1 THEN 
     EigEinheiten.maadr = EigEinheiten.maadr + einheit%
     EinheitGes.maadr = EinheitGes.maadr + einheit%
     einheitkv% = einheit%
   END IF 
   IF betr% >= 0 THEN 
     IF EinheitAusGeko.stamm > 0 THEN 
       EigEinheiten.maadr = EigEinheiten.maadr + einheiten.kvertrag
       EinheitGes.maadr = EinheitGes.maadr + einheiten.kvertrag
       einheitkv% = einheiten.kvertrag
     END IF 
   ELSE 
     IF EinheitAusGeko.stamm > 0 THEN 
       EigEinheiten.maadr = EigEinheiten.maadr + (einheiten.kvertrag * - 1)
       EinheitGes.maadr = EinheitGes.maadr + (einheiten.kvertrag * - 1)
       einheitkv% = (einheiten.kvertrag * - 1)
     END IF 
   END IF 
   StorWarnJN.buchung = GStorWarnJN$
   StorWarnDatGes.buchung = GStorWarnDGes$
   StorWarnDatMA.buchung = GStorWarnDMA$
   StorWarnGrund.buchung = GStorWarnGrund$
   StorWarnMasn.buchung = GStorWarnMasn$
   StorWarnErg.buchung = GStorWarnErg$
 ELSE 
   sEinheitGes.maadr = sEinheitGes.maadr + einheitkv%
 END IF 
 
 REM IF CodeMA.MAADR = VorgÑnger.MAADR OR VorgÑnger.MAADR < 1 THEN CALL Fehler( STR$ (betr%,"99999999.00"),"Volumen?")
 REM ****************************AUSZAHLUNGSSPERRE**********************************
 eigen% = 0
 PSpAll$ = PROVSperreAll.maadr
 PSpAllSeit% = PSperreAllSeit.maadr
 PROVSpEig$ = PROVSperreEig.maadr
 PSpESeit% = PSperreESeit.maadr
 REM CALL Fehler("","")
 IF ma1% = vtcodema% THEN 
   eigen% = 1
 END IF 
 IF PspAll$ = "j" THEN 
   IF PSpAllSeit% <= cdate% THEN 
     REM IF ma1% = 529 THEN CALL Fehler("TRIEBSCH","")
     AuszahlSperKo.maadr = AuszahlSperKo.maadr + betr%
     AuszahlSperKoEU.maadr = VAL ( STR$ (AuszahlSperKo.maadr / euro1%,"999999999.00"))
   END IF 
 ELSE 
   IF eigen% = 1 AND PROVSpEig$ = "j" THEN 
     IF PSpESeit% <= cdate% THEN 
       AuszahlSperKo.maadr = AuszahlSperKo.maadr + betr%
       AuszahlSperKoEU.maadr = VAL ( STR$ (AuszahlSperKo.maadr / euro1%,"999999999.00"))
     END IF 
   END IF 
 END IF 
 REM ****************************AUSZAHLUNGSSPERRE Ende**********************************  
 IF betr% >= 0 THEN 
   GesVolumen.maadr = GesVolumen.maadr + Volumen.KVERTRAG
   IF ma1% = vtcodema% THEN 
     EigVolumen.maadr = EigVolumen.maadr + Volumen.KVERTRAG
   END IF 
 ELSE 
   GesVolumen.maadr = GesVolumen.maadr + (Volumen.KVERTRAG * - 1)
   IF ma1% = vtcodema% THEN 
     EigVolumen.maadr = EigVolumen.maadr + (Volumen.KVERTRAG * - 1)
   END IF 
 END IF 
 AuszahlAB.maadr = AuszahlAB.maadr + betr%
 AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / euro1%,"999999999.00"))

 AuszProvABGes.maadr = AuszProvABGes.maadr + betr%
 AuszProvABGesEU.maadr = VAL ( STR$ (AuszProvABGes.maadr / euro1%,"999999999.00"))

 REM Workstation.maadr = Workstation%
 REM QWoNo.maadr = STR$ (Workstation%,"000000") + STR$ (codema.maadr,"000000")
 RecStatus.maadr = "c"
 STORE FILE "maadr"
 UNLOCK CURRENT FILE "maadr"
 REM *****************************************************************************************************
 REM Zentralberechnung des Kontostandes
 zusatz% = 0
 CALL ZentrKTO(ma%,cdate%,betr%,SRBetrag%,codew%,euro1%,waehr1$,PSpAll$,PSpAllSeit%,PROVSpEig$,PSpESeit%,eigen%,zusatz%,einheitkv%)
 REM ***************************************************************************************************** 
 REM CALL ZentrAGZaehl(ma%,"EINHEIT",Bewertungssumme.kvertrag,Volumen.kvertrag,einheit%,Antragsdatum.kvertrag,0)
 IF mwstprovjn.vprodukt LIKE "j" AND mwstprov.vprodukt <> 0 THEN 
   mwstprov% = mwstprov.vprodukt
   REM CALL Fehler( STR$ (mwstprov%,"999.00"), STR$ (betr%,"999.00"))
   IF Mwstpflicht.maadr LIKE "j" THEN 
     IF mwstprovbn.gekond LIKE "n" THEN 
       REM Netto
       nettoeu% = betr%
       NettoEu.buchung = betr%
       mwstbetrag% = (betr% * mwstprov%) / 100
       mwstbetrag$ = STR$ (mwstbetrag%,"9999999.00")
       mwstbetrag% = VAL (mwstbetrag$)
       Betrag.buchung = nettoeu% + mwstbetrag%
       betrag% = Betrag.buchung
       BetragEu.buchung = betrag%
       
     ELSE 
       REM brutto
       Betrag.buchung = betr%
       BetragEu.buchung = betr%
       nettobetrag% = (betr% * 100) / (mwstprov% + 100)
       nettobetrag$ = STR$ (nettobetrag%,"9999999.00")
       nettobetrag% = VAL (nettobetrag$)
       mwstbetrag% = betr% - nettobetrag%
       NettoEu.buchung = nettobetrag%
     END IF 
     MWSTProz.buchung = mwstprov%
     MWSTBetragEu.buchung = mwstbetrag%
   ELSE 
     BetragEu.buchung = betr%
     Betrag.buchung = betr%
     NettoEu.buchung = betr%
     MWSTProz.buchung = 0
     MWSTBetragEu.buchung = 0
   END IF 
 ELSE 
   BetragEu.buchung = betr%
   Betrag.buchung = betr%
   NettoEu.buchung = betr%
   MWSTProz.buchung = 0
   MWSTBetragEu.buchung = 0
 END IF 
 Gesamtbetrag.BUCHUNG = provi%
 codemagr.buchung = Codemagr.maadr
 CodeAGDir.buchung = Codeagdir.maadr
 Kostenstelle.buchung = Kostenstelle.maadr
 DebitorKto.buchung = Debitorkto.maadr
 KreditorKto.buchung = Kreditorkto.maadr
 IF bewerteimz% = 1 THEN 
   Bewertungssumme.BUCHUNG = BewertEinm.kvertrag
 ELSE 
   Bewertungssumme.BUCHUNG = Bewertungssumme.KVERTRAG
 END IF 
 ProvBasiswert.buchung = Bewertungssumme.buchung
 umrechnung.buchung = euro1%
 vsumme.buchung = vsumme.kvertrag
 vsummeEU.buchung = VAL ( STR$ (vsumme.kvertrag / umrechnung.buchung,"999999999.00"))
 BeitragBrut.buchung = Beitrag.kvertrag
 BeitragNet.buchung = NettoBeitrag.kvertrag
 BeitragBrutEu.buchung = VAL ( STR$ (Beitrag.kvertrag / umrechnung.buchung,"999999999.00"))
 BeitragNetEu.buchung = VAL ( STR$ (NettoBeitrag.kvertrag / umrechnung.buchung,"999999999.00"))
 zw.buchung = zw.kvertrag
 mwst.buchung = mwst.kvertrag
 VS_Beginn.buchung = VS_Beginn.kvertrag
 IF zw.buchung > 0 THEN 
   JahresBBrut.buchung = BeitragBrut.buchung * zw.buchung
   JahresBNet.buchung = BeitragNet.buchung * zw.buchung
   JahresBBrutEu.buchung = VAL ( STR$ (JahresBBrut.buchung / umrechnung.buchung,"999999999.00"))
   JahresBNetEu.buchung = VAL ( STR$ (JahresBNet.buchung / umrechnung.buchung,"999999999.00"))
 ELSE 
   JahresBBrut.buchung = BeitragBrut.buchung
   JahresBNet.buchung = BeitragNet.buchung
   JahresBBrutEu.buchung = VAL ( STR$ (JahresBBrut.buchung / umrechnung.buchung,"999999999.00"))
   JahresBNetEu.buchung = VAL ( STR$ (JahresBNet.buchung / umrechnung.buchung,"999999999.00"))
 END IF 
 Volumen.BUCHUNG = Volumen.KVERTRAG
 Bewertung2.buchung = Bewertungssumme.kvertrag
 APJN.buchung = APjn.gekond
 CourtJN.buchung = CourtageJN.gekond
 SRjn.buchung = SRJN.gekond
 PflegeJN.buchung = PflegeJN.gekond
 APProzente.buchung = AP.gekond
 CourtProzente.buchung = Courtage.gekond
 PflegProzente.buchung = PflegeProvi.gekond
 SRProzente.buchung = sr.gekond
 KÅndigung.BUCHUNG = KÅndigung.KVERTRAG
 CodeKU.BUCHUNG = CodeKU.KVERTRAG
 vtagentur.buchung = Gvtagentur$
 vtcodema.buchung = Gvtcodema%
 IF EinheitSach.stamm = "j" THEN 
   IF SparteIstSach.sparten <> 1 THEN 
     IF ma1% = vtcodema% THEN 
       IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung = einheit%
       IF betr% >= 0 THEN 
         IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung = einheiten.kvertrag
       ELSE 
         IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung = einheiten.kvertrag * - 1
       END IF 
     END IF 
   ELSE 
     IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung = einheit%
     IF betr% >= 0 THEN 
       IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung = einheiten.kvertrag
     ELSE 
       IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung = einheiten.kvertrag * - 1
     END IF 
   END IF 
 ELSE 
   IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung = einheit%
   IF betr% >= 0 THEN 
     IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung = einheiten.kvertrag
   ELSE 
     IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung = einheiten.kvertrag * - 1
   END IF 
 END IF 
 
 agentur.buchung = LEFT$ ( LTRIM$ (nachname.maadr) + ", " + LTRIM$ (vorname.maadr) + ", " + LTRIM$ (Agenturnr.maadr) + " , Stufe:" + STR$ (stufe.maadr,"000"),100)
 SELECT KEY CodeVA.kvertrag FILE "SPARTEN" INDEX CodeVA.SPARTEN
 Sparte.BUCHUNG = Sparte.SPARTEN
 SELECT KEY CodeKU.KVERTRAG FILE GAdrDat$ INDEX CodeKU.GAdrDat$
 Nachname.BUCHUNG = Nachname.GAdrDat$
 Vorname.BUCHUNG = Vorname.GAdrDat$
 Bewertung2Eu.buchung = VAL ( STR$ (Bewertung2.buchung / euro1%,"999999999.00"))
 codew.buchung = codew%
 waehrung.buchung = waehr1$
 SELECT KEY CodeGE.KVERTRAG FILE "GEADR" INDEX CodeGE.GEADR
 Gesellschaft.BUCHUNG = Gesellschaft.GEADR
 Provision.buchung = "j"
 IF PRVCHECKLISTE$ = "TRUE" THEN 
   codebumon.buchung = codebumon.buchmon
 END IF 
 IF sr% = 0 THEN 
   SRgezahlt.buchung = "j"
   SR.buchung = 0
 ELSE 
   REM 060497
   IF Haftung% = - 1 THEN 
     SRAuszahlung.buchung = 0
     SR.buchung = SRBetrag%
   ELSE 
     SRAuszahlung.buchung = Haftung%
     SR.buchung = SRBetrag%
   END IF 
 END IF 
 REM CALL QuickStore("buchung")
     timestamp$ = DATE$ ( TODAY ,"yymmdd") + STR$ ( HRS ( NOW ) * 100 + MINS ( NOW ),"0000")
     timestamp% = VAL (timestamp$)
     Timestamp.buchung = timestamp%
     QuickCode.BUCHUNG = STR$ (CodeMA.BUCHUNG,"000000") + DATE$ (Datum.BUCHUNG,"yyyymm0d")
     QCodeMAPROD.buchung = STR$ (CodeMA.buchung,"000000") + VSNRPack$(Gesellschaft.buchung) + VSNRPack$(Sparte.buchung)
     QCodeMAVT.buchung = STR$ (codema.buchung,"000000") + STR$ (codevt.buchung,"000000")
     IF Workstation% > 0 THEN Workstation.Buchung = Workstation%
     IF Workstation% > 0 THEN QWoNo.Buchung = STR$ (Workstation%,"000000") + STR$ (CodeBu.Buchung,"000000")
     RecStatus.Buchung = "c"
     IF umrechnung.buchung = 0 THEN umrechnung.buchung = 1
     IF gebuchtjn.buchung <> 1 THEN gebuchtjn.buchung = 0
     gebuchtJNDat.buchung = STR$ (gebuchtjn.buchung,"0") + DATE$ (datum.buchung,"yyyymm0d")
     gebuchtJNMADat.buchung = STR$ (gebuchtjn.buchung,"0") + STR$ (Codema.buchung,"000000") + DATE$ (datum.buchung,"yyyymm0d")
     CALL BUDMEuro(umrechnung.buchung)
     CodeEingGE.BUCHUNG = CodeEingGE.kvertrag
     EingereichtBei.BUCHUNG = EingereichtBei.kvertrag
     STORE FILE "buchung"
 REM -- Zahlungseingang prÅfen --
 REM 070897
 IF check.KVERTRAG = "j" THEN 
   REM CALL Fehler("Check auf Pool","")
   _lfdnr% = lfdnr.KVERTRAG
   SELECT KEY _lfdnr% LOCK FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
       REM pool% = (Pool.KVERTRAG - Betrag.BUCHUNG) * 100
   IF Geinh% = - 1 THEN 
     REM pool% = (Pool.KVERTRAG - betr%) * 100
     sr$ = STR$ (sr.buchung,",999999.00")
     betr$ = STR$ (betr%,",9999999.00")
     pool$ = STR$ (Pool.KVERTRAG,",9999999.00")
     bsumme% = betr% + sr.buchung
     REM CALL Fehler("Betrag: " + betr$ + " SR: " + sr$ + " Pool: " + pool$,"")
     pool% = (Pool.KVERTRAG - bsumme%) * 100
     pool1$ = STR$ (pool%,"999999999999")
     poolges% = ( VAL (pool1$)) / 100
     pool.kvertrag = poolges%
     REM CALL Fehler("Betrag: " + betr$ + " SR: " + sr$ + " ErgebnisPool: " + STR$ (pool.kvertrag,",999999.00"),"")
   ELSE 
     zwprov% = provi% - vertrprov%
     pool1% = Pool.KVERTRAG
     pool% = (Pool.KVERTRAG - zwprov%) * 100
     pool1$ = STR$ (pool%,"999999999999")
     poolges% = ( VAL (pool1$)) / 100
     pool.kvertrag = poolges%
   END IF 
 
   IF Pool.KVERTRAG < 0 THEN 
     Mahnung.KVERTRAG = "j"
     CALL WriteLog("  fehlender Zahlungseingang von Gesellschaft")
     CALL AddLogInfo()
   END IF 
   CALL QuickStore("KVERTRAG")
   IF Pool.KVERTRAG < 0 THEN 
     SELECT KEY codebu% LOCK FILE "Buchung" INDEX codebu.buchung
     Mahnung.BUCHUNG = "j"
     CALL QuickStore("buchung")
   END IF 
 
   
 END IF 
 
 
 REM -- Aufsummierung der einzelnen Provisionsarten
 REM    fÅr Differenzberechnung
 IF remark$ LIKE "Abschl*" OR remark$ LIKE "AP*" OR remark2$ LIKE "AP*" THEN 
   vsumAP% = provi%
 ELSE IF remark$ LIKE "Courta*" THEN 
   vsumC% = provi%
 ELSE IF remark$ LIKE "Pflege*" THEN 
   vsumPP% = provi%
 ELSE IF remark$ LIKE "Pauschal*" THEN 
   vsumPausch% = provi%
 ELSE IF remark$ LIKE "VD*" THEN 
   vsumAP% = provi%
 ELSE 
   vertrprov% = provi%
 END IF 
 vertrprov% = provi%
 
 END SUB 
 
 

 ' Korrekturbuchung
 ' =======================================================================
 ' 27.10.93  - wahlweise Eingabe des Rechnungsbeginns
  
SUB BUKORREKTUR()
 IF disabled%("BUCHUNG6") THEN END SUB 
 Anschluss% = 1
 REQUEST "Die Korrekturbuchung lîscht alle Buchungen und setzt","die Vertragsdatei zurÅck! Fortfahren?",135,req%
 IF req% = 1 THEN 
   
   CalcDate$ = ReadConfig$("PROVIS","KorrekturAb")
   IF CalcDate$ = "leer" THEN CalcDate$ = ""
   CREATE DIALOG "ANSCHLUSS",0,0,191,92,"Buchungskorrektur","MS Sans Serif",8
   ADD DIALOG "ANSCHLUSS",4,0,0,191,68,0,""
   ADD DIALOG "ANSCHLUSS",9,9,12,21,23,2
   ADD DIALOG "ANSCHLUSS",5,38,12,144,20,0,"Bitte geben Sie ein, ab welchem Stichtag die Provisionen berechnet werden sollen:"
   ADD DIALOG "ANSCHLUSS",5,38,42,33,10,0,"Stich&tag:"
   ADD DIALOG "ANSCHLUSS",6,73,41,51,11,0,0,CalcDate$,20
   ADD DIALOG "ANSCHLUSS",1,34,72,55,14,1,"&OK",1,1
   ADD DIALOG "ANSCHLUSS",1,92,72,55,14,0,"&Abbrechen",0,0
   DIALOG "ANSCHLUSS",req%
   REMOVE DIALOG "ANSCHLUSS"
   IF req% = 1 THEN 
     IF DateOK%(CalcDate$) THEN 
       CALL CreateLog()
       MOUSE OFF 
       CALL Server("LOADMESSAGE","")
       CALL Server("MESSAGE","Bitte warten... Alle Provisionsbuchungen werden aus der Buchungsdatei gelîscht. (Dieser Vorgang kann bei grî·eren DatenbestÑnden einige Zeit in Anspruch nehmen.)")
       CALL DFile(3,"buchung" + _fpw$)
       CALL DFile(3,"ZEINGANG" + _fpw$)
       CALL DFile(3,"gekond" + _fpw$)
       CALL DFile(3,"maadr" + _fpw$)
       CALL DFile(3,"maadrgru" + _fpw$)
       CALL DFile(3,"kvertrag" + _fpw$)
       CALL DFile(3,"vkond" + _fpw$)
       
       CALL WriteConfig("PROVIS","KorrekturAb",CalcDate$)
       SET STATUS "Buchungsdatei wird gelîscht..."
       FILE "KVERTRAG"
       REM SELECT FIRST FILE "KVERTRAG" INDEX ProviAB.KVERTRAG
       startprovi% = ProviAB.KVERTRAG
       REM 220897 REMOVE FROM FILE "BUCHUNG" WHERE Provision.BUCHUNG LIKE "j"
       IF EXISTS (_ppath$ + "but1.sbf") THEN DELETE (_ppath$ + "but1.*")
       SET QUERY HEADING "",0,0
       SELECT CodeBU.buchung,CodeMA.buchung,Datum.buchung,KÅrzel.buchung,Betrag.buchung,SR.buchung,SRAuszahlung.buchung,
       Buchungstext.buchung,Provision.buchung,CodeVT.buchung,SRgezahlt.buchung,TimeStamp.buchung,Nachname.buchung,
       Vorname.buchung,VS_Beginn.buchung,Sparte.buchung,KÅndigung.buchung,Gesellschaft.buchung,Bewertungssumme.buchung,
       CodeKU.buchung,Volumen.buchung,Gesamtbetrag.buchung,Sperre.buchung,gezahlt.buchung,gezahlt_am.buchung,QuickCode.buchung,
       Mahnung.buchung,Einheiten.buchung,VTAgentur.buchung,umrechnung.buchung,codew.buchung,waehrung.buchung,waehrungBezeich.buchung,
       GesamtbetragEU.buchung,BetragEU.buchung,SREU.buchung,BewertungssumEU.buchung,gezahltEU.buchung,vtcodema.buchung
       WHERE Provision.buchung <> "j"
       ORDER REPORT 
       TO FILE _ppath$ + "BUT1"
       END SELECT 
       REMOVE FROM FILE "buchung"
       FILE "but1"
       INDEX codebu
       SELECT FIRST 
       WHILE NOT EOF ("but1")
         FILE "Buchung"
         BLANK FILE "Buchung"
 
         codebu.buchung = SER ("Buchung",1)
         codema.buchung = codema.but1
         datum.buchung = datum.but1
         kÅrzel.buchung = kÅrzel.but1
         betrag.buchung = betrag.but1
         sr.buchung = sr.but1
         srauszahlung.buchung = srauszahlung.but1
         buchungstext.buchung = buchungstext.but1
         provision.buchung = provision.but1
         codevt.buchung = codevt.but1
         SRgezahlt.buchung = srgezahlt.but1
         Nachname.buchung = nachname.but1
         vorname.buchung = vorname.but1
         VS_Beginn.buchung = VS_Beginn.but1
         Sparte.buchung = sparte.but1
         KÅndigung.buchung = KÅndigung.but1
         Gesellschaft.buchung = Gesellschaft.but1
         Bewertungssumme.buchung = Bewertungssumme.but1
         Codeku.buchung = codeku.but1
         Volumen.buchung = Volumen.but1
         Gesamtbetrag.buchung = Gesamtbetrag.but1
         Sperre.buchung = sperre.but1
         gezahlt.buchung = gezahlt.but1
         gezahlt_am.buchung = gezahlt_am.but1
         Mahnung.buchung = mahnung.but1
         Einheiten.buchung = einheiten.but1
         vtagentur.buchung = vtagentur.but1
         vtcodema.buchung = vtcodema.but1
         umrechnung.buchung = umrechnung.but1
         codew.buchung = codew.but1
         waehrung.buchung = waehrung.but1
         waehrungBezeich.buchung = waehrungBezeich.but1
         GesamtbetragEU.buchung = GesamtbetragEU.but1
         BetragEU.buchung = BetragEU.but1
         SREU.buchung = SREU.but1
         BewertungssumEU.buchung = BewertungssumEU.but1
         gezahltEU.buchung = gezahltEU.but1
         CALL QuickStore("Buchung")
         FILE "but1"
         SELECT NEXT FILE "but1"
       WEND 
       REM CALL Fehler("D1","")
       CLOSE FILE "but1"
       REM ** CALL Server("MESSAGE","Bitte warten..." + CHR$ (10) + CHR$ (13) + "Zahlungseingang wird gelîscht.")
       REM ** REMOVE FROM FILE "ZEINGANG"
       CALL Server("MESSAGE","Bitte warten..." + CHR$ (13) + CHR$ (10) + "Die Vertragsdatei wird zurÅckgesetzt.")
       SET STATUS "Vertragsdatei wird zurÅckgesetzt..."
       FILE "KVERTRAG"
       UPDATE BewertcalcDat = 0:letzteProvi = 0:gez_Abschlu·.KVERTRAG = "":gez_Pauschale.KVERTRAG = ""
       TZRate.KVERTRAG = 0:letztePflege.KVERTRAG = 0:Pool.KVERTRAG = 0:Mahnung.KVERTRAG = "n"
       END UPDATE 
       CLOSE FILE "kvertrag"
       CALL DFile(3,"kvertrag" + _fpw$)
       FILE "VKOND"
       UPDATE STORNOResGezJN.vkond = ""
       END UPDATE 
       CLOSE FILE "vkond"
       CALL DFile(3,"vkond" + _fpw$)
       REM 060497
       FILE "Aumskto"
       INDEX codema
       UPDATE konto01 = 0:konto02 = 0:konto03 = 0:konto04 = 0:konto05 = 0:konto06 = 0:konto07 = 0:konto08 = 0:konto09 = 0:konto10 = 0:konto11 = 0:konto12 = 0:kontoGes = 0
       konto01EU = 0:konto02eu = 0:konto03eu = 0:konto04eu = 0:konto05eu = 0:konto06eu = 0:konto07eu = 0:konto08eu = 0:konto09eu = 0:konto10eu = 0:konto11eu = 0:konto12eu = 0:kontoGeseu = 0
       storno01 = 0:storno02 = 0:storno03 = 0:storno04 = 0:storno05 = 0:storno06 = 0:storno07 = 0:storno08 = 0:storno09 = 0:storno10 = 0:storno11 = 0:storno12 = 0:stornoGes = 0
       storno01eu = 0:storno02eu = 0:storno03eu = 0:storno04eu = 0:storno05eu = 0:storno06eu = 0:storno07eu = 0:storno08eu = 0:storno09eu = 0:storno10eu = 0:storno11eu = 0:storno12eu = 0:stornoGeseu = 0
       skonto01 = 0:skonto02 = 0:skonto03 = 0:skonto04 = 0:skonto05 = 0:skonto06 = 0:skonto07 = 0:skonto08 = 0:skonto09 = 0:skonto10 = 0:skonto11 = 0:skonto12 = 0:skontoGes = 0
       skonto01EU = 0:skonto02eu = 0:skonto03eu = 0:skonto04eu = 0:skonto05eu = 0:skonto06eu = 0:skonto07eu = 0:skonto08eu = 0:skonto09eu = 0:skonto10eu = 0:skonto11eu = 0:skonto12eu = 0:skontoGeseu = 0
       ekonto01 = 0:ekonto02 = 0:ekonto03 = 0:ekonto04 = 0:ekonto05 = 0:ekonto06 = 0:ekonto07 = 0:ekonto08 = 0:ekonto09 = 0:ekonto10 = 0:ekonto11 = 0:ekonto12 = 0:ekontoGes = 0
       ekonto01EU = 0:ekonto02eu = 0:ekonto03eu = 0:ekonto04eu = 0:ekonto05eu = 0:ekonto06eu = 0:ekonto07eu = 0:ekonto08eu = 0:ekonto09eu = 0:ekonto10eu = 0:ekonto11eu = 0:ekonto12eu = 0:ekontoGeseu = 0
       dkonto01 = 0:dkonto02 = 0:dkonto03 = 0:dkonto04 = 0:dkonto05 = 0:dkonto06 = 0:dkonto07 = 0:dkonto08 = 0:dkonto09 = 0:dkonto10 = 0:dkonto11 = 0:dkonto12 = 0:dkontoGes = 0
       dkonto01EU = 0:dkonto02eu = 0:dkonto03eu = 0:dkonto04eu = 0:dkonto05eu = 0:dkonto06eu = 0:dkonto07eu = 0:dkonto08eu = 0:dkonto09eu = 0:dkonto10eu = 0:dkonto11eu = 0:dkonto12eu = 0:dkontoGeseu = 0
       END UPDATE 
       CLOSE FILE "aumskto"
       CALL DFile(3,"aumskto" + _fpw$)
       FILE "Aumskto"
       INDEX codema 
       FILE "MAADR"
       INDEX codema.maadr
       UPDATE AuszahlAB.maadr = (erfAuszahlAB.maadr * - 1) + zusAuszahl.maadr:AuszahlEUAB.maadr = (erfAuszahlEUAB.maadr * - 1) + zusAuszahlEU.maadr
       END UPDATE 
       CLOSE FILE "maadr"
       CALL DFile(3,"maadr" + _fpw$)
       FILE "MAADR"
       INDEX codema.maadr
       UPDATE Stornoreserve.maadr = 0:Einheiten.maadr = 0:EigEinheiten.maadr = 0:GesVolumen.maadr = 0:EigVolumen.maadr = 0:AuszahlSperKo.maadr = 0:AuszahlSperKoEU.maadr = 0:StornoreserveEU.maadr = 0
       END UPDATE 
       CLOSE FILE "maadr"
       CALL DFile(3,"maadr" + _fpw$)
       FILE "MAADR"
       INDEX codema.maadr
       REM 220697
       FILE "Buchung"
       INDEX codema.buchung
       SELECT FIRST 
       WHILE NOT EOF ("BUCHUNG")
         IF Buchungstext.buchung LIKE "StornorÅck*" AND Betrag < 0 THEN 
           SELECT KEY codema.buchung LOCK FILE "maadr" INDEX codema.maadr
           Stornoreserve.maadr = Stornoreserve.maadr + sr.buchung
           StornoreserveEU.maadr = VAL ( STR$ (Stornoreserve.maadr / umrechnung.buchung,"999999999.00"))
           Einheiten.maadr = Einheiten.maadr + Einheiten.buchung
           REM Workstation.maadr = Workstation%
           REM QWoNo.maadr = STR$ (Workstation%,"000000") + STR$ (codema.maadr,"000000")
           RecStatus.maadr = "c"
           STORE FILE "maadr"
           UNLOCK CURRENT FILE "maadr"
           UNLOCK FILE "maadr"
         END IF 
         FILE "Buchung"
         SELECT NEXT 
       WEND 
       FILE "Kvertrag"
       REM CALL Fehler("POOL aufbauen","")
       CALL BUKOPrep1()
       CALL Server("UNLOADMESSAGE","")
       CALL WriteLog(">>Korrekturbuchung ab Stichtag " + CalcDate$)
       REM SET TODAY StartDatum$
       cmonat% = MONTH (CalcDate$)
       cjahr% = YEAR (CalcDate$)
       ctag% = DAY (CalcDate$)
       REM VertrÑge bis zum heutigen Tag hochrechnen
       REM 150697 ctag% = DAY ( TODAY )
       REM 030697 WHILE DAYS (CalcDate$) < TODAY 
       WHILE DAYS (CalcDate$) < TODAY + 1
         CALL PROVBUCHUNG(0)
         cmonat% = cmonat% + 1
         IF cmonat% = 13 THEN 
           cmonat% = 1
           cjahr% = cjahr% + 1
         END IF 
         CalcDate$ = STR$ (ctag%,"00") + "." + STR$ (cmonat%,"00") + "." + STR$ (cjahr%,"0000")
       WEND 
       MOUSE ON 
       SET DISPLAY RESTORE 
       SET STATUS "Bereit"
       CALL CloseLog()
     ELSE 
       CALL Fehler("Falsches Datumsformat!","Das Datum mu· in der Form 'tt.mm.jj' eingegeben werden.")
     END IF 
   END IF 
 END IF 
 Anschluss% = 0
 END SUB 
 
 ' Vorbereitung der Buchungskorrektur
 ' Aufbau der Vertragspools fÅr Zahlungseingangskontrolle
 ' =======================================================================
  
SUB BUKOPrep1()
 IF RECCOUNT ("ZEINGANG") < 1 THEN END SUB 
 MOUSE OFF 
 SET STATUS "Aufbau der Eingangskonten..."
 CALL Server("MESSAGE","Bitte warten..." + CHR$ (13) + CHR$ (10) + "Die Eingangskonten werden neu aufgebaut.")
 FILE "ZEINGANG"
 INDEX CodeVT.ZEINGANG
 SELECT FIRST 
 SELECT KEY CodeVT.ZEINGANG LOCK FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
 lv% = 0
 WHILE NOT EOF ("ZEINGANG")
   IF CodeVT.ZEINGANG <> lv% THEN 
     SET STATUS "Aufbau der Eingangskonten...(Vertrag " + VS_NR.KVERTRAG + ")"
     IF lv% <> 0 THEN CALL QuickStore("KVERTRAG")
     SELECT KEY CodeVT.ZEINGANG LOCK FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
     lv% = CodeVT.ZEINGANG
   END IF 
 
   Pool% = (Pool.KVERTRAG + Betrag.ZEINGANG) * 100
   pool1$ = STR$ (pool%,"999999999999")
   poolges% = ( VAL (pool1$)) / 100
   pool.kvertrag = poolges%
   SELECT NEXT FILE "ZEINGANG" INDEX CodeVT.ZEINGANG
 WEND 
 CALL QuickStore("KVERTRAG")
 MOUSE ON 
 REM CALL Fehler("Poolaufbau zu ende","")
 END SUB 
 
 
 ' Zahlung von Stornoreserven
 ' =======================================================================
 
SUB SRZahlung(codevtab%)
 MOUSE OFF 
 IF cdate% = 0 THEN cdate% = TODAY 
 FILE "BUCHUNG"
 IF codevtab% < 1 THEN 
   INDEX CodeBU.BUCHUNG
   SELECT FIRST FILE "Buchung" INDEX CodeBU.BUCHUNG
 ELSE 
   INDEX codevt.BUCHUNG
   SELECT FIRST FILE "Buchung" INDEX codevt.BUCHUNG
   SELECT KEY codevtab% LOCK FILE "Buchung" INDEX codevt.BUCHUNG
 END IF 
 fmax% = RECCOUNT ("BUCHUNG")
 lp% = 0
 cp% = 0
 fcount% = 0
 
 IF codevtab% < 1 THEN WHILE NOT EOF ("BUCHUNG")
 IF codevtab% > 0 THEN WHILE NOT EOF ("BUCHUNG") AND codevt.buchung = codevtab%
   fcount% = fcount% + 1
   cp% = INT (100 / fmax% * fcount%)
   IF lp% <> cp% THEN 
     lp% = cp%
     SET STATUS "Auszahlung Stornoreserve: " + LTRIM$ ( STR$ (lp%,"999")) + "%"
   END IF 
   REM 060497
   IF SRgezahlt.BUCHUNG <> "j" AND SRAuszahlung.BUCHUNG < cdate% AND SRAuszahlung.BUCHUNG <> 0 AND mahnung.buchung <> "j" THEN 
     _cubu% = CodeBU.BUCHUNG
     _CodeMA% = CodeMA.BUCHUNG
     _CodeVT% = CodeVT.BUCHUNG
     _SR% = SR.BUCHUNG
     Agentur$ = Agentur.buchung
     betr% = SR.BUCHUNG * - 1
     euro1% = umrechnung.buchung
     waehr1$ = waehrung.buchung
     codew% = codew.buchung
     SELECT KEY _cubu% LOCK FILE "BUCHUNG" INDEX CodeBU.BUCHUNG
     SRGezahlt.BUCHUNG = "j"
     CALL QuickStore("BUCHUNG")
     SELECT KEY _Codema% LOCK FILE "maadr" INDEX codema.maadr
     REM 060497
     Stornoreserve.maadr = Stornoreserve.maadr - _SR%
     StornoreserveEU.maadr = VAL ( STR$ (Stornoreserve.maadr / umrechnung.buchung,"999999999.00"))
     REM Workstation.maadr = Workstation%
     REM QWoNo.maadr = STR$ (Workstation%,"000000") + STR$ (codema.maadr,"000000")
     RecStatus.maadr = "c"


     abst% = Stornoreserve.maadr
     absteu% = StornoreserveEU.maadr
 
     REM ****************************AUSZAHLUNGSSPERRE**********************************
     eigen% = 0
     PSpAll$ = PROVSperreAll.maadr
     PSpAllSeit% = PSperreAllSeit.maadr
     PROVSpEig$ = PROVSperreEig.maadr
     PSpESeit% = PSperreESeit.maadr
     REM CALL Fehler("","")
     eigen% = 1
     IF PspAll$ = "j" THEN 
       IF PSpAllSeit% <= cdate% THEN 
         REM IF ma1% = 529 THEN CALL Fehler("TRIEBSCH","")
         AuszahlSperKo.maadr = AuszahlSperKo.maadr + _SR%
         AuszahlSperKoEU.maadr = VAL ( STR$ (AuszahlSperKo.maadr / euro1%,"999999999.00"))
       END IF 
     ELSE 
       IF eigen% = 1 AND PROVSpEig$ = "j" THEN 
         IF PSpESeit% <= cdate% THEN 
           AuszahlSperKo.maadr = AuszahlSperKo.maadr + _SR%
           AuszahlSperKoEU.maadr = VAL ( STR$ (AuszahlSperKo.maadr / euro1%,"999999999.00"))
         END IF 
       END IF 
     END IF 
     REM ****************************AUSZAHLUNGSSPERRE Ende**********************************  
     AuszahlAB.maadr = AuszahlAB.maadr + _SR%
     AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / euro1%,"999999999.00"))
     AuszProvABGes.maadr = AuszProvABGes.maadr + _SR%
     AuszProvABGesEU.maadr = VAL ( STR$ (AuszProvABGes.maadr / euro1%,"999999999.00"))
     REM Workstation.maadr = Workstation%
     REM QWoNo.maadr = STR$ (Workstation%,"000000") + STR$ (codema.maadr,"000000")
     RecStatus.maadr = "c"
     STORE FILE "maadr"
     UNLOCK CURRENT FILE "maadr"
     REM *****************************************************************************************************
     REM Zentralberechnung des Kontostandes
     zusatz% = 0
     CALL ZentrKTO(_CodeMA%,cdate%,_SR%,betr%,codew%,euro1%,waehr1$,PSpAll$,PSpAllSeit%,PROVSpEig$,PSpESeit%,eigen%,zusatz%,0)
     REM *****************************************************************************************************  


     SELECT KEY _CodeVT% FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
     BLANK FILE "BUCHUNG"
     CodeBU.BUCHUNG = SER ("BUCHUNG",1)
     Datum.BUCHUNG = cdate%
     CodeVT.BUCHUNG = _CodeVT%
     CodeMA.BUCHUNG = _CodeMA%
     SR.BUCHUNG = 0 - _SR%
     Betrag.BUCHUNG = _SR%
     Agentur.buchung = Agentur$
     Buchungstext.BUCHUNG = "SR-Auszahlung " + VS_Nr.KVERTRAG
     Bewertungssumme.BUCHUNG = Bewertungssumme.KVERTRAG
     KÅndigung.BUCHUNG = KÅndigung.KVERTRAG
     VS_Beginn.BUCHUNG = VS_Beginn.KVERTRAG
     umrechnung.buchung = euro1%
     codew.buchung = codew%
     waehrung.buchung = waehr1$
     CodeKU.BUCHUNG = CodeKU.KVERTRAG
     SReu.BUCHUNG = VAL ( STR$ (sr.buchung / euro1%,"999999999.00"))
     Betrageu.BUCHUNG = VAL ( STR$ (betrag.buchung / euro1%,"999999999.00"))

     vsumme.buchung = vsumme.kvertrag
     vsummeEU.buchung = VAL ( STR$ (vsumme.kvertrag / euro1%,"999999999.00"))
     BeitragBrut.buchung = Beitrag.kvertrag
     BeitragNet.buchung = NettoBeitrag.kvertrag
     BeitragBrutEu.buchung = VAL ( STR$ (Beitrag.kvertrag / umrechnung.buchung,"999999999.00"))
     BeitragNetEu.buchung = VAL ( STR$ (NettoBeitrag.kvertrag / umrechnung.buchung,"999999999.00"))
     zw.buchung = zw.kvertrag
     mwst.buchung = mwst.kvertrag
     IF zw.buchung > 0 THEN 
       JahresBBrut.buchung = BeitragBrut.buchung * zw.buchung
       JahresBNet.buchung = BeitragNet.buchung * zw.buchung
       JahresBBrutEu.buchung = VAL ( STR$ (JahresBBrut.buchung / umrechnung.buchung,"999999999.00"))
       JahresBNetEu.buchung = VAL ( STR$ (JahresBNet.buchung / umrechnung.buchung,"999999999.00"))
     ELSE 
       JahresBBrut.buchung = BeitragBrut.buchung
       JahresBNet.buchung = BeitragNet.buchung
       JahresBBrutEu.buchung = VAL ( STR$ (JahresBBrut.buchung / umrechnung.buchung,"999999999.00"))
       JahresBNetEu.buchung = VAL ( STR$ (JahresBNet.buchung / umrechnung.buchung,"999999999.00"))
     END IF 


     SELECT KEY CodeVA.kvertrag FILE "SPARTEN" INDEX CodeVA.SPARTEN
     Sparte.BUCHUNG = Sparte.SPARTEN
     SELECT KEY CodeKU.KVERTRAG FILE GAdrDat$ INDEX CodeKU.GAdrDat$
     Nachname.BUCHUNG = Nachname.GAdrDat$
     Vorname.BUCHUNG = Vorname.GAdrDat$
     SELECT KEY CodeGE.KVERTRAG FILE "GEADR" INDEX CodeGE.GEADR
     Gesellschaft.BUCHUNG = Gesellschaft.GEADR
     SRgezahlt.buchung = "j"
     Provision.BUCHUNG = "j"
     SR.buchung = 0 - _SR%
     CALL QuickStore("BUCHUNG")
     SELECT KEY _cubu% FILE "BUCHUNG" INDEX CodeBU.BUCHUNG
   END IF 
   IF codevtab% < 1 THEN SELECT NEXT FILE "BUCHUNG" INDEX CodeBU.BUCHUNG
   IF codevtab% > 0 THEN SELECT NEXT FILE "BUCHUNG" INDEX CodeVT.BUCHUNG
 WEND 
 MOUSE ON 
 END SUB 
 



 
  
 
 
 '********************************************************************************************************************
 '*         PROVISIONSABRECHNUNG - RealCASH                                                                          *
 '********************************************************************************************************************

SUB PROVBUZEIN()
 IF disabled%("BUCHUNG6") THEN END SUB 
 IF GVertrID% = 0 THEN 
   REM supervis im exclusiv-modus îffnen, um herauszufinden, ob noch jemand im Programm eingeloggt ist
   IF OPEN ("supervis") THEN CLOSE FILE "supervis"
   CALL DFile(4,"supervis" + _fpw$)
 END IF 
 IF NOT OPEN ("buchung1") THEN CALL DFile(3,"buchung1" + _fpw$)
 IF NOT OPEN ("zeingan1") THEN CALL DFile(3,"zeingan1" + _fpw$)
 IF NOT OPEN ("sparten") THEN CALL DFile(3,"sparten" + _fpw$)
 IF NOT OPEN ("geadr") THEN CALL DFile(3,"geadr" + _fpw$)
 IF NOT OPEN ("gekond") THEN CALL DFile(3,"gekond" + _fpw$)
 IF NOT OPEN ("maadr") THEN CALL DFile(3,"maadr" + _fpw$)
 IF NOT OPEN ("maadrgru") THEN CALL DFile(3,"maadrgru" + _fpw$)
 IF NOT OPEN ("kvertrag") THEN CALL DFile(3,"kvertrag" + _fpw$)
 IF NOT OPEN ("kvfael") THEN CALL DFile(3,"kvfael" + _fpw$)
 IF NOT OPEN ("vkond") THEN CALL DFile(3,"vkond" + _fpw$)
 IF NOT OPEN ("spezkond") THEN CALL DFile(3,"spezkond" + _fpw$)
 IF NOT OPEN ("foerkond") THEN CALL DFile(3,"foerkond" + _fpw$)
 IF NOT OPEN (GADRDat$) THEN CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 IF RECCOUNT ("maadr") < 20000 THEN 
   REDIM GAGvonFirma$( RECCOUNT ("maadr"))
   REDIM GAGvonAgentur$( RECCOUNT ("maadr"))
   REDIM GAGFrAgentur$( RECCOUNT ("maadr"),2)
 ELSE 
   REDIM GAGvonFirma$(20000)
   REDIM GAGvonAgentur$(20000)
   REDIM GAGFrAgentur$(20000,2)
 END IF 
 PROVBU$ = "TRUE"
 IF anschluss% = 0 THEN 
   
   CalcDate$ = DATE$ ( TODAY ,"0d.mm.yyyy")
   IF GVertrID% > 0 THEN 
     SELECT FIRST FILE "STAMM"
     GRealStorno% = RealStorno.stamm
     IF DateOK%(CalcDate$) THEN 
       ok% = 1
       CalcDate% = DAYS (CalcDate$)
       IF codevtab% = 0 THEN CALL WriteConfig("PROVIS","letzteProvisionsrechnung",CalcDate$)
     ELSE 
       ok% = 0
       CALL Fehler("Falsche Datumsangabe!","Bitte geben Sie das Datum in der Form 'tt.mm.jjjj' ein.")
     END IF 
     IF ProvSperreJN.kvertrag LIKE "j" THEN 
       ok% = 0
     END IF 
   ELSE 
     CREATE DIALOG "STICHTAG",0,0,222,114,"Buchungsdatum","MS Sans Serif",8
     ADD DIALOG "STICHTAG",4,0,0,222,91,0,""
     ADD DIALOG "STICHTAG",9,6,9,23,24,2
     ADD DIALOG "STICHTAG",5,31,15,183,10,0,"Bitte geben Sie an, bis zu welchem ZE-Datum"
     ADD DIALOG "STICHTAG",5,31,25,183,10,0,"die ZahlungseingÑnge verarbeitet werden sollen:"
     ADD DIALOG "STICHTAG",6,94,72,42,12,0,0,CalcDate$,10
     ADD DIALOG "STICHTAG",5,30,74,58,10,0,"Buchungsdatum:"
     ADD DIALOG "STICHTAG",1,52,94,54,14,1,"&OK",1,1
     ADD DIALOG "STICHTAG",1,109,94,54,14,0,"&Abbrechen",0,0
     DIALOG "STICHTAG",req%
     REMOVE DIALOG "STICHTAG"
     IF req% = 1 THEN 
       SELECT FIRST FILE "STAMM"
       GRealStorno% = RealStorno.stamm
       IF DateOK%(CalcDate$) THEN 
         ok% = 1
         CalcDate% = DAYS (CalcDate$)
         IF codevtab% = 0 THEN CALL WriteConfig("PROVIS","letzteProvisionsrechnung",CalcDate$)
       ELSE 
         ok% = 0
         CALL Fehler("Falsche Datumsangabe!","Bitte geben Sie das Datum in der Form 'tt.mm.jjjj' ein.")
       END IF 
     ELSE 
       Greqstati% = 0
     END IF 
   END IF 
 ELSE 
   ok% = 1
 END IF 
 IF ok% = 1 THEN 
   REM 260698
   MOUSE OFF 
   SET STATUS "Bitte warten, es wird zunÑchst die Zahlungseingangsdatei geprÅft"
   REMOVE FROM FILE "Zeingan1" WHERE codevt.zeingan1 < 1
   SET STATUS ""
   cdate% = DAYS (CalcDate$)
   minimize$ = ReadINI$("PROVIS","minimize")
   IF anschluss% = 0 THEN 
     IF minimize$ LIKE "TRUE" THEN 
       REQUEST "PROVIS wird in den Hintergrund geschaltet!","Sie kînnen wÑhrend der Berechung andere Programme starten.",0
       SET DISPLAY MIN 
     END IF 
     CALL CreateLog()
   END IF 
   CALL WriteLog("")
   CALL WriteLog("=================================")
   CALL WriteLog("Provisionsabrechnung vom " + DATE$ (cdate%,"0d.mm.yyyy"))
   CALL WriteLog("=================================")
   CALL WriteLog("")
   MOUSE OFF 
   FILE "zeingan1"
   REM INDEX gebuchtJN.zeingan1
   INDEX codeaz.zeingan1
   IF RECCOUNT ("zeingan1") > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   IF GVertrID% > 0 THEN 
     IF EXISTS (GVertrID%,codevt.zeingan1) THEN 
       FILE "zeingan1"
       INDEX codevt.zeingan1
       SELECT FIRST FILE "zeingan1" INDEX codevt.zeingan1
       SELECT KEY GVertrID% LOCK FILE "zeingan1" INDEX codevt.zeingan1
       IF GZEID% > 0 THEN 
         SELECT KEY GZEID% LOCK FILE "zeingan1" INDEX codeaz.zeingan1
         IF codeaz.zeingan1 <> GZEID% THEN 
           SELECT FIRST FILE "zeingan1" INDEX codeaz.zeingan1
           SELECT KEY GZEID% LOCK FILE "zeingan1" INDEX codeaz.zeingan1
         END IF 
       END IF 
     ELSE 
       CALL Fehler("Zu diesem Vertrag existieren noch keine ZahlungseingÑnge!","Verarbeitung kann nicht fortgesetzt werden!")
       END SUB 
     END IF 
   END IF 
   REM IF UCASE$ (gebuchtJN.zeingan1) <> "N" THEN 
     REM ON ERROR GOTO zaa2208971
     REM SELECT KEY "N" LOCK FILE "zeingan1" INDEX gebuchtJN.zeingan1
     REM GOTO zaa2208972
zaa2208971: 
     REM SELECT LAST 
   REM END IF 
   ON ERROR GOTO ErrorHandler
zaa2208972: 
   _p1% = RECCOUNT ("zeingan1")
   _pd$ = "0"
   _pd% = - 1
   _p2% = 0
   gebuchtJN$ = "N"
   f% = 0
   ff% = 0
   REM WHILE NOT EOF ("zeingan1") AND gebuchtJN.zeingan1 = gebuchtJN$
  IF GVertrID% > 0 THEN WHILE NOT EOF ("zeingan1") AND codevt.zeingan1 = GVertrID%
  IF GVertrID% = 0 THEN WHILE NOT EOF ("zeingan1")
   REM testaz% = codeaz.zeingan1
   IF codeaz.zeingan1 = 80 THEN 
     REM CALL Fehler("codaz=80","")
   END IF 
   geb$ = gebuchtJNT.zeingan1
   IF geb$ = "J" AND gebuchtJN.zeingan1 <> "J" THEN 
     ca% = codeaz.zeingan1
     IF NOT EXISTS (codeaz.zeingan1,codeaz.buchung1) THEN 
       REM Satz wurde schon auf "J" gesetzt, aber keine Buchungen da, wahrscheinlich Rechner abgestÅrzt
       CALL WriteLog("  ZE war schon auf zwischenverarbeitet gesetzt, ab keine Buchung da: VS_NR: " + VS_NR.KVERTRAG)
       gebuchtJNT.zeingan1 = ""
       STORE FILE "zeingan1"
       SELECT FIRST FILE "zeingan1" INDEX codeaz.zeingan1
       SELECT KEY ca% LOCK FILE "zeingan1" INDEX codeaz.zeingan1
     END IF 
   END IF 
   IF gebuchtJNT.zeingan1 <> "J" THEN 
     zzzein1% = codeaz.zeingan1

     REM 220897 WHILE NOT EOF ("kvertrag") AND ProviAb.KVERTRAG <= cdate%
     FILE "zeingan1"
     IF NOT EXISTS (codevt.zeingan1,lfdnr.kvertrag) THEN 
       REM CALL Fehler( STR$ (lfdnr.kvertrag),"VS_NR existiert in Vertragsdatei nicht " + vs_NR.zeingan1)
     ELSE 
     END IF 
     SELECT KEY codevt.zeingan1 FILE "Kvertrag" INDEX lfdnr.kvertrag
     IF vs_nr.kvertrag LIKE "6134239P" THEN 
       REM CALL Fehler("Bertest","6134239P")
     END IF 

     koab% = CodeKO.KVERTRAG
     IF NOT EXISTS (koab%,codevk.VKOND) THEN 
       ok% = 0
       CALL WriteLog("  Vertrag wurde noch nicht an die Provisionsabrechnung Åbergeben")
       CALL AddLogInfo()
     ELSE 
       ok% = 1
     END IF 

     REM nur noch ZahlungseingÑnge bis zu einem bestimmten Datum hochrechnen lassen
     CalcDate% = DAYS (CalcDate$)
     IF BuchungsDatum.zeingan1 > CalcDate% THEN 
       ok% = 0
       CALL WriteLog("Zahlungseingang liegt au·erhalb des Berechnugsdatums: " + DATE$ (BuchungsDatum.zeingan1,"0d.mm.yyyy") + " " + Buchungstext.zeingan1 + "  " + STR$ (Bewertung.zeingan1))
     END IF 
     
     REM PrÅfen auf Vorhandensein von Spezialprovisionen und ob dort welche existieren, die zunÑchst von der
     REM Bewertung der Firma abgezogen werden, um den Restbetrag als 100% darzustellen
     GVonFirma$ = "n"
     NUMBASE ",999999999.0000"
     IF ProvSperreJN.kvertrag LIKE "j" THEN 
       ok% = 0
       CALL WriteLog("  Vertrag hat Provisionssperre: " + VS_NR.Kvertrag + "/" + Gesellschaft.kvertrag + "/" + sparte.kvertrag + "/" + Agentur.kvertrag + "/" + VNehmer.kvertrag)
       CALL WriteLog("  ")
     END IF 
 
     IF EXISTS (lfdnr.kvertrag,codevt.spezkond) AND SpezProvAktiv.kvertrag = "j" AND ok% = 1 THEN 
       anzagvF% = 0
       anzagvA% = 0
       anzagvFre% = 0
        
       WHILE GAGvonFirma$(anzagvF%) <> ""
         GAGvonFirma$(anzagvF%) = ""
         anzagvF% = anzagvF% + 1
       WEND 
       WHILE GAGvonAgentur$(anzagvA%) <> ""
         GAGvonAgentur$(anzagvA%) = ""
         anzagvA% = anzagvA% + 1
       WEND 
       WHILE GAGFrAgentur$(anzagvFre%,0) <> ""
         GAGFrAgentur$(anzagvFre%,0) = ""
         GAGFrAgentur$(anzagvFre%,1) = ""
         anzagvFre% = anzagvFre% + 1
       WEND 
       anzagvF% = 0
       anzagvA% = 0
       anzagvFre% = 0

       GSpezko$ = "j"
       GVonFirma$ = "n"
       REM CALL Fehler("Andi-Kondtest","")
       REM SELECT FIRST FILE "spezkond" INDEX codevt.spezkond
       REM SELECT KEY lfdnr.kvertrag FILE "spezkond" INDEX codevt.spezkond
       file1$ = FILE 
       IF FirmaEinhTab.stamm LIKE "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" AND SpezProvNormal.stamm <> "j" THEN 
         FILE "spezkond"
         INDEX QCodeVTsort.spezkond
         QCodeVTsort$ = STR$ (lfdnr.kvertrag,"000000") + "000000"
         SELECT FIRST FILE "spezkond" INDEX QCodeVTsort.spezkond
         SELECT KEY QCodeVTsort$ FILE "spezkond" INDEX QCodeVTsort.spezkond
       ELSE 
         FILE "spezkond"
         INDEX QCodeVTMA.spezkond
         QCodeVTMA$ = STR$ (lfdnr.kvertrag,"000000") + "000000"
         SELECT FIRST FILE "spezkond" INDEX QCodeVTMA.spezkond
         SELECT KEY QCodeVTMA$ FILE "spezkond" INDEX QCodeVTMA.spezkond
       END IF 
       WHILE NOT EOF ("spezkond") AND codevt.spezkond = lfdnr.kvertrag
         ja% = - 1
         IF vonFirmaAgentur.spezkond = "n" THEN 
           GVonFirma$ = "j"
           IF einmalig.spezkond <> "j" THEN 
             IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 OR kondart.zeingan1 = 4 THEN 
               IF vonCourtage.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                 IF vonAP.spezkond <> "j" THEN ja% = 0
               END IF 
             END IF 
             IF kondart.zeingan1 = 1 THEN 
               IF vonAP.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                 IF vonCourtage.spezkond <> "j" THEN ja% = 0
               END IF 
             END IF 
             IF kondart.zeingan1 = 2 OR kondart.zeingan1 = 5 THEN 
               IF vonCourtage.spezkond = "j" OR vonAP.spezkond = "j" THEN 
                 IF vonPflege.spezkond <> "j" THEN ja% = 0
               END IF 
             END IF 
             IF ja% = - 1 THEN 
               GAGvonFirma$(anzagvF%) = QCodeVTMA.spezkond
               GVonFirma$ = "j"
               anzagvF% = anzagvF% + 1
             END IF 
           ELSE 
             IF einmaligerfolgt.spezkond <> "j" THEN 
               IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 OR kondart.zeingan1 = 4 THEN 
                 IF vonCourtage.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                   IF vonAP.spezkond <> "j" THEN ja% = 0
                 END IF 
               END IF 
               IF kondart.zeingan1 = 1 THEN 
                 IF vonAP.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                   IF vonCourtage.spezkond <> "j" THEN ja% = 0
                 END IF 
               END IF 
               IF kondart.zeingan1 = 2 OR kondart.zeingan1 = 5 THEN 
                 IF vonCourtage.spezkond = "j" OR vonAP.spezkond = "j" THEN 
                   IF vonPflege.spezkond <> "j" THEN ja% = 0
                 END IF 
               END IF 
               IF ja% = - 1 THEN 
                 GAGvonFirma$(anzagvF%) = QCodeVTMA.spezkond
                 GVonFirma$ = "j"
                 anzagvF% = anzagvF% + 1
               END IF 
             ELSE 
               IF sr.spezkond <> 0 AND Bewertung.zeingan1 < 0 THEN 
                 IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 OR kondart.zeingan1 = 4 THEN 
                   IF vonCourtage.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                     IF vonAP.spezkond <> "j" THEN ja% = 0
                   END IF 
                 END IF 
                 IF kondart.zeingan1 = 1 THEN 
                   IF vonAP.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                     IF vonCourtage.spezkond <> "j" THEN ja% = 0
                   END IF 
                 END IF 
                 IF kondart.zeingan1 = 2 OR kondart.zeingan1 = 5 THEN 
                   IF vonCourtage.spezkond = "j" OR vonAP.spezkond = "j" THEN 
                     IF vonPflege.spezkond <> "j" THEN ja% = 0
                   END IF 
                 END IF 
                 IF ja% = - 1 THEN 
                   GAGvonFirma$(anzagvF%) = QCodeVTMA.spezkond
                   GVonFirma$ = "j"
                   anzagvF% = anzagvF% + 1
                 END IF 
               END IF 
             END IF 
           END IF 
         ELSE 
           IF vonFirmaAgentur.spezkond = "j" THEN 
             GVonFirma$ = "n"
             REM CALL Fehler("Andi Spezkondi test","")
             akondart% = kondart.zeingan1
             IF einmalig.spezkond <> "j" THEN 
               IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 OR kondart.zeingan1 = 4 THEN 
                 IF vonCourtage.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                   IF vonAP.spezkond <> "j" THEN ja% = 0
                 END IF 
               END IF 
               IF kondart.zeingan1 = 1 THEN 
                 IF vonAP.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                   IF vonCourtage.spezkond <> "j" THEN ja% = 0
                 END IF 
               END IF 
               IF kondart.zeingan1 = 2 OR kondart.zeingan1 = 5 THEN 
                 IF vonCourtage.spezkond = "j" OR vonAP.spezkond = "j" THEN 
                   IF vonPflege.spezkond <> "j" THEN ja% = 0
                 END IF 
               END IF 
               IF ja% = - 1 THEN 
                 IF FirmaEinhTab.stamm LIKE "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" AND SpezProvNormal.stamm <> "j" THEN 
                   GAGvonAgentur$(anzagvA%) = QCodeVTsort.spezkond
                 ELSE 
                   GAGvonAgentur$(anzagvA%) = QCodeVTMA.spezkond
                 END IF 
                 anzagvA% = anzagvA% + 1
               END IF 
             ELSE 
               IF einmaligerfolgt.spezkond <> "j" THEN 
                 IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 OR kondart.zeingan1 = 4 THEN 
                   IF vonCourtage.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                     IF vonAP.spezkond <> "j" THEN ja% = 0
                   END IF 
                 END IF 
                 IF kondart.zeingan1 = 1 THEN 
                   IF vonAP.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                     IF vonCourtage.spezkond <> "j" THEN ja% = 0
                   END IF 
                 END IF 
                 IF kondart.zeingan1 = 2 OR kondart.zeingan1 = 5 THEN 
                   IF vonCourtage.spezkond = "j" OR vonAP.spezkond = "j" THEN 
                     IF vonPflege.spezkond <> "j" THEN ja% = 0
                   END IF 
                 END IF 
                 IF ja% = - 1 THEN 
                   REM GAGvonAgentur$(anzagvA%) = QCodeVTMA.spezkond
 
                   IF FirmaEinhTab.stamm LIKE "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" AND SpezProvNormal.stamm <> "j" THEN 
                     GAGvonAgentur$(anzagvA%) = QCodeVTsort.spezkond
                   ELSE 
                     GAGvonAgentur$(anzagvA%) = QCodeVTMA.spezkond
                   END IF 
                   anzagvA% = anzagvA% + 1
                 END IF 
               ELSE 
                 IF sr.spezkond <> 0 AND Bewertung.zeingan1 < 0 THEN 
                   IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 OR kondart.zeingan1 = 4 THEN 
                     IF vonCourtage.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                       IF vonAP.spezkond <> "j" THEN ja% = 0
                     END IF 
                   END IF 
                   IF kondart.zeingan1 = 1 THEN 
                     IF vonAP.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                       IF vonCourtage.spezkond <> "j" THEN ja% = 0
                     END IF 
                   END IF 
                   IF kondart.zeingan1 = 2 OR kondart.zeingan1 = 5 THEN 
                     IF vonCourtage.spezkond = "j" OR vonAP.spezkond = "j" THEN 
                       IF vonPflege.spezkond <> "j" THEN ja% = 0
                     END IF 
                   END IF 
                   IF ja% = - 1 THEN 
                     REM GAGvonAgentur$(anzagvA%) = QCodeVTMA.spezkond
 
                     IF FirmaEinhTab.stamm LIKE "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" AND SpezProvNormal.stamm <> "j" THEN 
                       GAGvonAgentur$(anzagvA%) = QCodeVTsort.spezkond
                     ELSE 
                       GAGvonAgentur$(anzagvA%) = QCodeVTMA.spezkond
                     END IF 
                     anzagvA% = anzagvA% + 1
                   END IF 
                 END IF 
               END IF 
             END IF 
           ELSE 
             IF vonFirmaAgentur.spezkond = "c" THEN 
               GVonFirma$ = "c"
               IF einmalig.spezkond <> "j" THEN 
                 IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 OR kondart.zeingan1 = 4 THEN 
                   IF vonCourtage.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                     IF vonAP.spezkond <> "j" THEN ja% = 0
                   END IF 
                 END IF 
                 IF kondart.zeingan1 = 1 THEN 
                   IF vonAP.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                     IF vonCourtage.spezkond <> "j" THEN ja% = 0
                   END IF 
                 END IF 
                 IF kondart.zeingan1 = 2 OR kondart.zeingan1 = 5 THEN 
                   IF vonCourtage.spezkond = "j" OR vonAP.spezkond = "j" THEN 
                     IF vonPflege.spezkond <> "j" THEN ja% = 0
                   END IF 
                 END IF 
                 IF ja% = - 1 THEN 
                   GAGFrAgentur$(anzagvFre%,0) = QCodeVTMA.spezkond
                   GAGFrAgentur$(anzagvFre%,1) = STR$ (vonCodeMA.spezkond,"000000")
                   anzagvFre% = anzagvFre% + 1
                 END IF 
               ELSE 
                 IF einmaligerfolgt.spezkond <> "j" THEN 
                   IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 OR kondart.zeingan1 = 4 THEN 
                     IF vonCourtage.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                       IF vonAP.spezkond <> "j" THEN ja% = 0
                     END IF 
                   END IF 
                   IF kondart.zeingan1 = 1 THEN 
                     IF vonAP.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                       IF vonCourtage.spezkond <> "j" THEN ja% = 0
                     END IF 
                   END IF 
                   IF kondart.zeingan1 = 2 OR kondart.zeingan1 = 5 THEN 
                     IF vonCourtage.spezkond = "j" OR vonAP.spezkond = "j" THEN 
                       IF vonPflege.spezkond <> "j" THEN ja% = 0
                     END IF 
                   END IF 
                   IF ja% = - 1 THEN 
                     GAGFrAgentur$(anzagvFre%,0) = QCodeVTMA.spezkond
                     GAGFrAgentur$(anzagvFre%,1) = STR$ (vonCodeMA.spezkond,"000000")
                     anzagvFre% = anzagvFre% + 1
                   END IF 
                 ELSE 
                   IF sr.spezkond <> 0 AND Bewertung.zeingan1 < 0 THEN 
                     IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 OR kondart.zeingan1 = 4 THEN 
                       IF vonCourtage.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                         IF vonAP.spezkond <> "j" THEN ja% = 0
                       END IF 
                     END IF 
                     IF kondart.zeingan1 = 1 THEN 
                       IF vonAP.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                         IF vonCourtage.spezkond <> "j" THEN ja% = 0
                       END IF 
                     END IF 
                     IF kondart.zeingan1 = 2 OR kondart.zeingan1 = 5 THEN 
                       IF vonCourtage.spezkond = "j" OR vonAP.spezkond = "j" THEN 
                         IF vonPflege.spezkond <> "j" THEN ja% = 0
                       END IF 
                     END IF 
                     IF ja% = - 1 THEN 
                       GAGFrAgentur$(anzagvFre%,0) = QCodeVTMA.spezkond
                       GAGFrAgentur$(anzagvFre%,1) = STR$ (vonCodeMA.spezkond,"000000")
                       anzagvFre% = anzagvFre% + 1
                     END IF 
                   END IF 
                 END IF 
               END IF 
             END IF 
           END IF 
         END IF 
         REM SELECT NEXT FILE "spezkond" INDEX codevt.spezkond
         IF FirmaEinhTab.stamm LIKE "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" AND SpezProvNormal.stamm <> "j" THEN 
           SELECT NEXT FILE "spezkond" INDEX QCodeVTsort.spezkond
         ELSE 
           SELECT NEXT FILE "spezkond" INDEX QCodeVTMA.spezkond
         END IF 
       WEND 
       FILE file1$
     ELSE 
       GSpezko$ = "n"
     END IF 
     GAGvonFirma$(anzagvF%) = ""
     GAGvonAgentur$(anzagvA%) = ""
     GAGFrAgentur$(anzagvFre%,0) = ""
     GAGFrAgentur$(anzagvFre%,1) = ""
     REM -----------------------------------------
     REM -- Prozentbalken und Header aktualisieren
     REM -----------------------------------------
 
     SET STATUS "prÅfe ZE: " + LTRIM$ ( STR$ (_p2%,"999999")) + " von " + LTRIM$ ( STR$ (_p1%,"999999")) + " tats. fÅr Verarb. vorgeschl.: " + LTRIM$ ( STR$ (ff%,"999999")) + " bereits vorher verarbeitet: " + LTRIM$ ( STR$ (f%,"999999"))
     _pc% = FIX (100 / _p1% * _p2%,0)
     IF _pd% <> _pc% THEN 
       _pd% = _pc%
       IF FN sys(11) = 36 AND FN sys(12) = 36 THEN 
         IF anschluss% = 0 THEN 
           SET HEADING STR$ (_pd%,"999") + "%"
         ELSE 
           SET HEADING STR$ (_pd%,"999") + "% " + LTRIM$ ( STR$ ( MONTH (cdate%),"00")) + "/" + RIGHT$ ( STR$ ( YEAR (cdate%),"9999"),4)
         END IF 
       ELSE 
         IF anschluss% = 0 THEN 
           SET HEADING title$ + " - Provisionsberechung: " + STR$ (_pd%,"999") + "% erledigt"
         ELSE 
           SET HEADING title$ + " - Provisionsberechung: " + STR$ (_pd%,"999") + "% " + LTRIM$ ( STR$ ( MONTH (cdate%),"99")) + "/" + RIGHT$ ( STR$ ( YEAR (cdate%),"9999"),2)
         END IF 
       END IF 
     END IF 
 
     REM --------------------------------------
     REM -- CheckUp fÅr Vertragsprovisionierung
     REM --------------------------------------
     REM ok% = 1
     
     REM ------------------------
     REM -- Aufruf der Berechnung
     REM ------------------------
      IF ok% = 1 THEN 
       gezPflege% = 0
       gezPauschale% = 0
       gezAbschlu·% = 0
       gezStornoRes% = 0
       GStornoDiff% = 0
       REM CALL Fehler("ab hier testen wegen Einzelberechnung!","")
       CALL PROVISZEIN2()
       ff% = ff% + 1
     END IF 
      FILE "zeingan1"
      IF GVertrID% = 0 THEN 
        INDEX codeaz.zeingan1
        SELECT FIRST FILE "zeingan1" INDEX codeaz.zeingan1
        SELECT KEY zzzein1% FILE "zeingan1" INDEX codeaz.zeingan1
      ELSE 
        INDEX codeaz.zeingan1
        SELECT FIRST FILE "zeingan1" INDEX codeaz.zeingan1
        SELECT KEY zzzein1% FILE "zeingan1" INDEX codeaz.zeingan1
      END IF 
   ELSE 
     f% = f% + 1
     SET STATUS "Suche nach nicht verarbeiteten ZahlungseingÑngen, schon verarbeitet: " + STR$ (f%,",9999999")
   END IF 
      REM SELECT NEXT LOCK FILE "zeingan1" INDEX gebuchtJN.zeingan1
      IF GVertrID% = 0 THEN 
        SELECT NEXT LOCK FILE "zeingan1" INDEX codeaz.zeingan1
      ELSE 
        FILE "zeingan1"
        INDEX codevt.zeingan1
        SELECT NEXT LOCK FILE "zeingan1" INDEX codevt.zeingan1
      END IF 
      IF codeaz.zeingan1 = zzzein1% AND NOT EOF ("zeingan1") AND GVertrID% = 0 THEN 
        REM CALL Fehler("Fehlerkorrektur interne CODEAZ: " + STR$ (codeaz.zeingan1,"000000"),"Der Fehler wird automatisch korrigiert und die Verarbeitung nochmal begonnen!")
        _p2% = SER ("zeingan1",1)
        _p2% = SER ("zeingan1",1)
        codeaz.zeingan1 = SER ("zeingan1",1)
        STORE FILE "zeingan1"
        UNLOCK CURRENT FILE "zeingan1"
        SELECT FIRST LOCK FILE "zeingan1" INDEX codeaz.zeingan1
        _p2% = 0
        f% = 0
        ff% = 0
        SET STATUS "Fehlerkorrektur"
      END IF 
      REM gebuchtJN$ = gebuchtJN.zeingan1
     _p2% = _p2% + 1
   WEND 
   IF GVertrID% = 0 THEN 
     FILE "zeingan1"
     INDEX codeaz.zeingan1
     SELECT FIRST LOCK 
     j% = RECCOUNT ("Zeingan1")
     i% = 0
     f% = 0
     ze% = 0
     WHILE NOT EOF ("Zeingan1")
       i% = i% + 1
       IF gebuchtJNT.zeingan1 = "J" AND gebuchtJN.zeingan1 <> "J" THEN 
         gebuchtjn.zeingan1 = "J"
         STORE FILE "zeingan1"
         UNLOCK CURRENT FILE "zeingan1"
       ELSE 
         IF gebuchtJNT.zeingan1 <> "J" THEN 
           f% = f% + 1
           IF Bewertung.zeingan1 = 0 THEN 
             ze% = ze% + 1
           END IF 
         END IF 
       END IF 
       SET STATUS STR$ (i%,",99999999") + " von " + STR$ (j%,",99999999") + " bearbeitet, nicht verarbeitete ZahlungseingÑnge " + STR$ (f%,",99999999") + " / davon mit Wert 0,00 " + STR$ (ze%,",99999999")
       SELECT NEXT LOCK FILE "zeingan1" INDEX codeaz.zeingan1
     WEND 
   ELSE 
     FILE "zeingan1"
     INDEX codevt.zeingan1
     SELECT FIRST 
     SELECT KEY GVertrID% LOCK FILE "zeingan1" INDEX codevt.zeingan1
     j% = RECCOUNT ("Zeingan1")
     i% = 0
     f% = 0
     WHILE NOT EOF ("Zeingan1") AND codevt.zeingan1 = GVertrID%
       i% = i% + 1
       IF gebuchtJNT.zeingan1 = "J" AND gebuchtJN.zeingan1 <> "J" THEN 
         gebuchtjn.zeingan1 = "J"
         STORE FILE "zeingan1"
         UNLOCK CURRENT FILE "zeingan1"
       ELSE 
         IF gebuchtJNT.zeingan1 <> "J" THEN 
           f% = f% + 1
           IF Bewertung.zeingan1 = 0 THEN 
             ze% = ze% + 1
           END IF 
         END IF 
       END IF 
       SET STATUS STR$ (i%,",99999999") + " von " + STR$ (j%,",99999999") + " bearbeitet, nicht verarbeitete ZahlungseingÑnge " + STR$ (f%,",99999999") + " / davon mit Wert 0,00 " + STR$ (ze%,",99999999")
       SELECT NEXT LOCK FILE "zeingan1" INDEX codevt.zeingan1
     WEND 
   END IF 
   GnoverZein% = f%
   IF Greqstati% <> 1 THEN 
     IF GAFSK$ LIKE "TRUE" THEN 
       REQUEST "nicht verarbeitete ZahlungseingÑnge " + STR$ (GnoverZein%,"99999999"),"Siehe dazu Protokolldatei!",2
     ELSE 
       CALL Fehler("nicht verarbeitete ZahlungseingÑnge " + STR$ (GnoverZein%,"99999999") + " / davon mit Wert 0,00 " + STR$ (ze%,",99999999"),"Siehe dazu Protokolldatei!")
     END IF 
   END IF 
   REM UPDATE gebuchtjn.zeingan1 = gebuchtjnT.zeingan1 WHERE UCASE$ (gebuchtJNT.zeingan1) = "J"
   REM END UPDATE 
e230897: 
   ON ERROR GOTO ErrorHandler
   FILE "maadr"
   SELECT FIRST 
   FILE "Buchung1"
   SELECT FIRST 
   REM 26022003
   REM CALL Fehler(ReadConfig$("PROVIS","SkipStorno"),"")
   IF ReadConfig$("PROVIS","SkipStorno") LIKE "TRUE" THEN 
     REM 
   ELSE 
     CALL SRZahlungZein()
   END IF 
   IF anschluss% = 0 THEN 
     MOUSE ON 
     SET DISPLAY RESTORE 
     SET HEADING title$ + " - Buchung"
     SET STATUS "Provisionsabrechnung beendet"
     IF GAFSK$ LIKE "TRUE" THEN 
     ELSE 
       CALL CloseLog()
     END IF 
   END IF 
   IF GAFSK$ = "TRUE" THEN 
     REM todo
     REQUEST "Nachkontrolle der VertragssÑtze auf fehlende ZE","",2
     REM Nachkontrolle der VertragssÑtze auf fehlende ZE
     b% = DAYS (calcdate$)
     b$ = DATE$ (b%,"mm.yyyy.0d")
     bumon% = VAL ( LEFT$ (b$,2))
     REM CALL Fehler( STR$ (bumon%,"00")," Buchungsmonat")
     FILE "KVFAEL"
     INDEX codevt.kvfael
     SELECT FIRST LOCK FILE "KVFAEL" INDEX codevt.kvfael
     REM SELECT KEY "n" LOCK FILE "KVFAEL" INDEX erledigt.kvfael
     REM WHILE NOT EOF ("KVFAEL") AND erledigt.kvfael <> "j"
     z2606021% = 0
     WHILE NOT EOF ("KVFAEL")
       erstz% = 0
       IF fÑlligam.kvfael > 0 AND abserledigt.kvfael <> "j" THEN 
         REM CALL Fehler("fÑÑlig am","")
         erwProvAnz% = erwProvAnz.kvfael
         IF erwProvAnz.kvfael = 0 THEN erwProvAnz% = 4
         SELECT FIRST FILE "KVERTRAG" INDEX lfdnr.kvertrag
         SELECT KEY codevt.kvfael FILE "KVERTRAG" INDEX lfdnr.kvertrag
         GVTcodema% = codema.kvertrag
         SELECT FIRST FILE "maadr" INDEX codema.maadr
         SELECT KEY GVTcodema% FILE "maadr" INDEX codema.maadr
         GVTAgentur$ = Nachname.maadr + "," + vorname.maadr
         REM 07082003  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
         codevp% = codevp.kvertrag
         SELECT FIRST FILE "VPRODUKT" INDEX codevp.vprodukt
         SELECT KEY codevp% FILE "VPRODUKT" INDEX codevp.vprodukt
         SELECT FIRST FILE "VPGekond" INDEX codevp.VPGekond
         SELECT KEY codevp% FILE "VPGekond" INDEX codevp.VPGekond
         erwProvAnzVP% = erwProvAnzVP.vpgekond
         IF erwProvAnzVP% = 0 THEN erwProvAnzVP% = 6
         REM * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
         REM 16012003
         IF vs_nr.kvertrag LIKE "321654987*" THEN 
           REM CALL Fehler("321654987","Test auf Storno")
         END IF 
         REM erwProv% = Beitrag.kvertrag * erwProvAnz%
         erwProv% = VMProv.kvfael
         Beitrag% = Beitrag.kvertrag
         REM 07082003 test1% = VAL ( LEFT$ ( DATE$ (fÑlligam.kvfael,"mm.yyyy.0d"),2)) + erwProvAnz%
         tafael$ = DATE$ (fÑlligam.kvfael,"0d.mm.yyyy")
         test1% = VAL ( LEFT$ ( DATE$ (fÑlligam.kvfael,"mm.yyyy.0d"),2)) + erwProvAnzVP%
         jahrtest% = VAL ( LEFT$ ( DATE$ (fÑlligam.kvfael,"yyyy.mm.0d"),4))
         jahrtoday% = jahrtest%
         aktjahr% = VAL ( LEFT$ ( DATE$ ( TODAY ,"yyyy.mm.0d"),4))
         IF test1% > 12 THEN 
           t1% = test1% - 12
           test1% = t1%
           jahrtest% = jahrtest% + 1
         END IF 
         IF TatsKuenDat.kvertrag > 0 THEN 
           test1% = bumon%
         END IF 
         IF vs_nr.kvertrag LIKE "321654987*" THEN 
           REM CALL Fehler("FÑlligkeit: " + DATE$ (fÑlligam.kvfael,"0d.mm.yyyy") + " jetzt " + STR$ (bumon%,"00") + " " + STR$ (aktjahr%,"0000")," KÅndigung: " + STR$ (test1%,"00") + " " + STR$ (jahrtest%,"0000"))
         END IF 
         IF test1% <= bumon% AND jahrtest% = aktjahr% THEN 
           REM 4.-> auf 6.(geÑndert erwProvAnzVP% aus erwProvAnzVP.vpgekond) Zahlung  nicht erolgt, Provosion mu· zurÅckgerechnet werden
           REM CALL Fehler( STR$ (bumon%,"00"), STR$ (test%,"00"))
           REM SELECT FIRST FILE "KVERTRAG" INDEX lfdnr.kvertrag
           REM SELECT KEY codevt.kvfael FILE "KVERTRAG" INDEX lfdnr.kvertrag
 
           REM erwProv% = Beitrag.kvertrag * 4
           gezprov% = gezProv.kvfael + 2.0
           gezprov$ = LTRIM$ ( STR$ (gezprov%,"99999999.00"))
           erwProv$ = LTRIM$ ( STR$ (erwProv%,"99999999.00"))
           erwProv% = VAL (erwProv$)
           gezprov% = VAL (gezProv$)
           IF gezProv% < erwProv% THEN 
             IF gez_Abschlu·.kvfael = "j" THEN 
               REM es wurde Provision gezahlt
               REM CALL Fehler("zu wenig gezahlter Beitrag","")

  CALL WriteLog("Stornierung: " + vs_nr.kvertrag + " -FÑlligkeit war: " + DATE$ (fÑlligam.kvfael,"0d.mm.yyyy") + " KÅnd.Monat: " + STR$ (test1%,"00") + "/" + STR$ (jahrtest%,"0000"))

               SELECT FIRST FILE "buchung1" INDEX codevt.buchung1
               SELECT KEY codevt.kvfael FILE "buchung1" INDEX codevt.buchung1
               REM 12112001
               REM also beim rÅckbuchen mÅ·te zuerst die VMProv mit negativem Wert der Fa. 
               REM gutgeschrieben werden und es mÅ·te der erste Minusbetrag auf pos Betrag 
               REM gesetzt werden
               REM dann die Buchungen der MA einsammeln und mit negativem Vorzeichen dazu 
               REM Buchungssatz erstellen und in kvfael -> TgezProvAnz=0
               REM 
               SELECT FIRST FILE "buchung1" INDEX codebu.buchung1
               SELECT KEY codebu.kvfael FILE "buchung1" INDEX codebu.buchung1
               REM ma%=Firma
               ma% = codema.buchung1
               ON ERROR GOTO dimerr260620021
               DIM gez%(10000,2)
dimerr260620021: 
               ON ERROR GOTO ErrorHandler
               REDIM gez%(10000,2)
               SELECT FIRST FILE "buchung1" INDEX codevt.buchung1
               SELECT KEY codevt.kvfael FILE "buchung1" INDEX codevt.buchung1
               REM SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
               REM SELECT KEY codevt.kvfael FILE "kvertrag" INDEX lfdnr.kvertrag
               remark$ = "Courtage " + VS_nr.kvertrag + " Storno wg.Fehlbeitrag"
               i1211% = 0
               WHILE NOT EOF ("buchung1") AND codevt.buchung1 = codevt.kvfael
                 IF codema.buchung1 <> ma% THEN 
                   gez%(i1211%,0) = codema.buchung1
                   gez%(i1211%,1) = betrag.buchung1
                   i1211% = i1211% + 1
                 END IF 
                 SELECT NEXT FILE "buchung1" INDEX codevt.buchung1
               WEND 
               SELECT FIRST FILE "buchung1" INDEX codevt.buchung1
               SELECT KEY codevt.kvfael FILE "buchung1" INDEX codevt.buchung1
               REM CALL Fehler("Analyse auf zu stornierende Zahlungen wegen fehlendem Zahlungseingang!","")
               sumprov% = 0
               WHILE NOT EOF ("buchung1") AND codevt.buchung1 = codevt.kvfael
                 
                 IF codema.buchung1 = ma% AND erstz% = 0 THEN 
                   IF buchungstext.buchung1 LIKE "Erstz*" OR buchungstext.buchung1 LIKE "*Erstz*" THEN 
                     provi% = vmprov.kvfael
                     sumprov% = sumprov% + provi%
                     sr% = 0
                     Haftung% = 0
                     datumz% = TODAY 
                     fÑlligkeit% = 0
                     euro1% = umrechnung.kvertrag
                     waehr1$ = waehrung.kvertrag
                     zein% = 0
                     remark2$ = ""
                     gez_Abschlu·.kvfael = "n"
                     codebu.buchung1 = 0
                     erledigt.kvfael = "n"
                     TgezProvAnz.kvfael = 0
                     autokuend.kvfael = "j"
                     StornoBetrag.kvfael = sumprov%
                     STORE FILE "KVFAEL"
                     UNLOCK CURRENT FILE "KVFAEL"
                     remark$ = "Courtage " + VS_nr.kvertrag + " Stor.1.Zahl.wg.Fehlbeitrag"
                     vertrprov% = 0
                     vsumC% = 0
                     vsumA% = 0
                     vsumPP% = 0
                     CALL StoRegProv(remark$,ma%,provi%,sr%,Haftung%,datumz%,fÑlligkeit%,euro1%,codew%,waehr1$,zein%,remark2$)
                     erstz% = erstz% + 1
                   ELSE 
                   END IF 
                 END IF 
                 
                 SELECT NEXT FILE "buchung1" INDEX codevt.buchung1
               WEND 
               IF i1211% > 0 THEN 
                 remark$ = "Courtage " + VS_nr.kvertrag + " Storno wg.Fehlbeitrag"
                 FOR i% = 0 TO i1211% - 1
                   provi% = gez%(i%,1) * - 1
                   sumprov% = sumprov% + provi%
                   REM SELECT KEY codevt% LOCK FILE "KVFAEL" INDEX codevt.kvfael
                   REM StornoBetrag.kvfael = sumprov%
                   REM STORE FILE "KVFAEL"
                   REM UNLOCK CURRENT FILE "KVFAEL"
                   ma% = gez%(i%,0)
                   sr% = 0
                   Haftung% = 0
                   datumz% = TODAY 
                   fÑlligkeit% = 0
                   euro1% = umrechnung.kvertrag
                   waehr1$ = waehrung.kvertrag
                   zein% = 0
                   remark2$ = ""
                   vertrprov% = 0
                   vsumC% = 0
                   vsumA% = 0
                   vsumPP% = 0
                   CALL StoRegProv(remark$,ma%,provi%,sr%,Haftung%,datumz%,fÑlligkeit%,euro1%,codew%,waehr1$,zein%,remark2$)
                 NEXT i%
               END IF 
             END IF 
           ELSE 
             abserledigt.kvfael = "j"
             STORE FILE "KVFAEL"
             UNLOCK FILE "KVFAEL"
             REM 12.08.2002
           END IF 
         END IF 
       END IF 
       z2606021% = z2606021% + 1
       SET STATUS STR$ (z2606021%,",99999999") + " verarbeitet von " + STR$ ( RECCOUNT ("KVFAEL"),",9999999999")
       SELECT NEXT LOCK FILE "KVFAEL" INDEX codevt.kvfael
       MOUSE OFF 
     WEND 
     IF GAFSK$ LIKE "TRUE" THEN CALL CloseLog()
   END IF 
 END IF 
 MOUSE ON 
 PROVBU$ = "False"
 REM supervis war exclusiv-modus îffnen, um herauszufinden, ob noch jemand im Programm eingeloggt ist
 REM jetzt die exclusiv-geîffnete schlie·en, um allen das Programm verfÅgbar zu machen
 IF OPEN ("supervis") THEN CLOSE FILE "supervis"
 CALL DFile(2,"supervis" + _fpw$)
 END SUB 
 
 




SUB StoRegProv(remark$,ma%,provi%,sr%,Haftung%,datumz%,fÑlligkeit%,euro1%,codew%,waehr1$,zein%,remark2$)
 REM IF vs_nr.kvertrag LIKE "1111*" THEN CALL Fehler("Buchung","")
 cfile$ = FILE 
 FILE "kvertrag"
 _lfdnr% = lfdnr.KVERTRAG
 SELECT KEY _lfdnr% LOCK FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
 SELECT KEY ma% FILE "maadr" INDEX CodeMA.MAADR
 SELECT KEY codeva.kvertrag FILE "sparten" INDEX codeva.sparten
 REM -- bereits gezahlte Provisionen verallgemeinern
 IF remark2$ LIKE "Abschl*" OR remark$ LIKE "AP*" OR remark2$ LIKE "AP*" OR remark$ LIKE "Ersatz*" THEN 
   vertrprov% = vsumAP%
 ELSE IF remark2$ LIKE "Courta*" THEN 
   vertrprov% = vsumC%
 ELSE IF remark2$ LIKE "Storno wg.KÅndigung*" THEN 
   vertrprov% = vsumC%
 ELSE IF remark2$ LIKE "Pflege*" THEN 
   vertrprov% = vsumPP%
 ELSE IF remark2$ LIKE "Pauschal*" THEN 
   vertrprov% = vsumPausch%
 ELSE IF remark2$ LIKE "VD*" THEN 
   vertrprov% = vsumAP%
 END IF 
 
 REM IF vs_nr.kvertrag LIKE "020260197022" THEN 
   REM CALL Fehler(nachname.maadr,"")
 REM END IF 
 
 REM -- Bearbeitung bei letzter Agentur in der Struktur
 IF (CodeMA.maadr = vorgÑnger.maadr) OR (VorgÑnger.MAADR < 1) THEN 
   letzteProvi.kvertrag = datumz%
   IF remark$ LIKE "TZ (*" THEN 
     TZRate.KVERTRAG = TZRate.KVERTRAG + 1
   END IF 
 END IF 
 
 REM -- Einmalzahlungen/Berechnungen Stornoreserve registrieren --
 IF remark2$ LIKE "Abschl*" OR remark2$ LIKE "AP*" OR remark$ LIKE "AP*" OR remark2$ LIKE "Abschl*" OR remark2$ LIKE "VD*" OR remark$ LIKE "Ersatz*" THEN gezAbschlu·% = 1
 IF remark2$ LIKE "Pflege*" THEN gezPflege% = 1
 IF remark2$ LIKE "Pauschal*" THEN gezPauschale% = 1
 IF CodeMA.MAADR = VorgÑnger.MAADR OR VorgÑnger.MAADR < 1 THEN 
   IF gezAbschlu·% = 1 THEN gez_Abschlu·.kvertrag = "j"
   IF gezPflege% = 1 THEN letztePflege.kvertrag = datumz%
   IF gezPauschale% = 1 THEN gez_Pauschale.kvertrag = "j"
 END IF 
   
 REM CALL QuickStore("KVERTRAG")
 STORE FILE "kvertrag"
 UNLOCK CURRENT FILE "kvertrag"
 REM CALL Fehler(nachname.maadr,"")
 REM *********************************** Fîrderkonditionen ************************************************
 IF EXISTS (ma%,voncodema.foerkond) THEN 
   ffile$ = FILE 
   FILE "foerkond"
   INDEX voncodema.foerkond
   SELECT FIRST INDEX voncodema.foerkond
   SELECT KEY ma% FILE "foerkond" INDEX voncodema.foerkond
   proz% = 0
   pausch% = 0
   GFdate$ = DATE$ (fdate.stamm,"0d.mm.yyyy")
   IF DateOK%(GFDate$) THEN 
   ELSE 
     GFdate$ = ""
   END IF 
   IF GFdate$ <> "" THEN 
     gfdate% = DAYS (GFDate$)
     IF Antragsdatum.KVERTRAG < gfdate% THEN 
       ProviAb1% = VS_Beginn.KVERTRAG
     ELSE 
       ProviAb1% = Antragsdatum.KVERTRAG
     END IF 
   ELSE 
     IF Gvueb$ = "TRUE" THEN 
       ProviAb1% = Antragsdatum.KVERTRAG
     ELSE 
       ProviAb1% = VS_Beginn.KVERTRAG
     END IF 
   END IF 
   WHILE NOT EOF ("foerkond") AND voncodema.foerkond = ma%
     REM jetzt Buchung erzeugen
     ok% = 0
     IF BWvon.foerkond > 0 THEN 
       IF BWBis.foerkond > 0 THEN 
         REM DatumseinschrÑnkung fÅr BWVon und BWBis
         IF ProviAb1% >= BWvon.foerkond AND ProviAb1% <= BWBis.foerkond THEN ok% = - 1
       ELSE 
         REM DatumseinschrÑnkung fÅr BWvon
         IF ProviAb1% >= BWvon.foerkond THEN ok% = - 1
       END IF 
     ELSE 
       IF BWBis.foerkond > 0 THEN 
         REM DatumseinschrÑnkung fÅr BWBis
         IF ProviAb1% <= BWBis.foerkond THEN ok% = - 1
       ELSE 
         REM keine DatumseinschrÑnkung
         ok% = - 1
       END IF 
     END IF 
     IF VvonCodema.foerkond > 0 THEN 
       IF VvonCodema.foerkond <> Codema.kvertrag THEN ok% = 0
     END IF 
     IF ok% = - 1 THEN 
       REM Aufruf der Weiterverarbeitung
       IF prozente.foerkond <> 0 THEN 
         proz% = proz% + prozente.foerkond
       ELSE 
         pausch% = pausch% + pauschale.foerkond
       END IF 
       mma% = codema.foerkond
       prozent% = prozente.foerkond
       pauschal% = pauschale.foerkond
       REM Aufruf fÅr den der FîP bekommt
       ppp% = provi% - vertrprov%
       srnull% = sr%
       CALL RegProvFoerd(remark$,ma%,mma%,ppp%,srnull%,Haftung%,datumz%,fÑlligkeit%,euro1%,codew%,waehr1$,zein%,remark2$,prozent%,pauschal%)
       REM jetzt negativen Buchungssatz erzeugen fÅr den, dem die FîP abgezogen wird
       ppp% = (provi% - vertrprov%) * - 1
       srnull% = sr%
       pauschal% = pauschal% * - 1
       CALL RegProvFoerd(remark$,mma%,ma%,ppp%,srnull%,Haftung%,datumz%,fÑlligkeit%,euro1%,codew%,waehr1$,zein%,remark2$,prozent%,pauschal%)
     END IF 
     SELECT NEXT FILE "foerkond" INDEX voncodema.foerkond
   WEND 
   REM VS_Beginn.KVERTRAG
   FILE ffile$
 END IF 
 REM ******************************************  Ende Fîrderkonditionen *************************************************
 
 FILE "buchung1"
 BLANK FILE "buchung1"
 CodeBU.buchung1 = SER ("buchung1",1)
 REM codeaz.buchung1 = codeaz.zeingan1
 Datum.buchung1 = datumz%
 fÑlligkeit.buchung1 = fÑlligkeit%
 REM Ausgabeauf.buchung1 = ausgabeauf.zeingan1
 CodeVT.buchung1 = lfdnr.kvertrag
 testtext$ = "*" + vs_nr.kvertrag + "*"
 umrechnung.buchung1 = euro1%
 IF KÅndigung.MAADR <= datumz% AND Nachfolger.MAADR <> 0 THEN 
   CodeMA.buchung1 = Nachfolger.MAADR
   ma1% = Nachfolger.MAADR
   IF remark$ LIKE testtext$ THEN 
     Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
   ELSE 
     Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
   END IF 
 ELSE 
   CodeMA.buchung1 = ma%
   ma1% = ma%
   IF remark$ LIKE testtext$ THEN 
     Buchungstext.buchung1 = LEFT$ (remark$,70)
   ELSE 
     Buchungstext.buchung1 = LEFT$ (remark$ + " " + vs_nr.kvertrag,70)
   END IF 
 END IF 
 IF dmeinh% > 0 THEN einheit% = provi% / dmeinh%
 
 REM IF haftung% = - 1 AND sr% <> 0 THEN 
   REM SRBetrag% = ((provi% - vertrprov%) / 100) * sr%
 REM END IF 
 
 REM IF haftung% <> 0 AND sr% <> 0 THEN 
   REM SRBetrag% = ((provi% - vertrprov%) / 100) * sr%
 REM ELSE 
   REM SRBetrag% = 0
 REM END IF 
 
 REM 31072001 prÅfen auf sr%
 
 REM CALL Fehler("SR","")
 IF remark2$ LIKE "Pauschal*" THEN 
   IF haftung% <> 0 AND sr% <> 0 THEN 
     IF provi% >= 0 THEN 
       SRBetrag% = ((provi%) / 100) * sr%
       IF SRBetrag% < 0 THEN SRBetrag% = 0
     ELSE 
       IF SRRÅck.stamm LIKE "j" THEN 
         IF StornoVerrech.maadr <> "j" THEN 
           SRBetrag% = ((provi% - vertrprov%) / 100) * sr%
           IF SRBetrag% < 0 THEN SRBetrag% = 0
         ELSE 
           SRBetrag% = 0
         END IF 
       ELSE 
         SRBetrag% = 0
       END IF 
     END IF 
   ELSE 
     SRBetrag% = 0
   END IF 
   betr% = provi% - SRBetrag%
 ELSE 
   IF haftung% <> 0 AND sr% <> 0 THEN 
     IF provi% > 0 THEN 
       SRBetrag% = ((provi% - vertrprov%) / 100) * sr%
       IF SRBetrag% < 0 THEN SRBetrag% = 0
     ELSE 
       IF SRRÅck.stamm LIKE "j" THEN 
         IF StornoVerrech.maadr <> "j" THEN 
           SRBetrag% = ((provi% - vertrprov%) / 100) * sr%
           REM IF SRBetrag% < 0 THEN SRBetrag% = 0
         ELSE 
           SRBetrag% = 0
         END IF 
       ELSE 
         SRBetrag% = 0
       END IF 
     END IF 
   ELSE 
     SRBetrag% = 0
   END IF 
   betr% = provi% - vertrprov% - SRBetrag%
 END IF 
 SELECT KEY ma1% LOCK FILE "maadr" INDEX codema.maadr
 Stornoreserve.maadr = Stornoreserve.maadr + SRBetrag%
 StornoreserveEU.maadr = VAL ( STR$ (Stornoreserve.maadr / euro1%,"999999999.00"))
 einheitkv% = 0
 IF EinheitSach.stamm = "j" THEN 
   IF SparteIstSach.sparten <> 1 THEN 
     IF ma1% = vtcodema% THEN 
       IF EinheitAusGeko.stamm < 1 THEN 
         Einheiten.maadr = Einheiten.maadr + einheit%
         einheitkv% = einheit%
       END IF 
       IF betr% >= 0 THEN 
         IF EinheitAusGeko.stamm > 0 THEN 
           Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag
           einheitkv% = einheiten.kvertrag
         END IF 
       ELSE 
         IF EinheitAusGeko.stamm > 0 THEN 
           Einheiten.maadr = Einheiten.maadr + (einheiten.kvertrag * - 1)
           einheitkv% = einheiten.kvertrag * - 1
         END IF 
       END IF 
     END IF 
   ELSE 
     IF EinheitAusGeko.stamm < 1 THEN 
       Einheiten.maadr = Einheiten.maadr + einheit%
       einheitkv% = einheit%
     END IF 
     IF betr% >= 0 THEN 
       IF EinheitAusGeko.stamm > 0 THEN 
         Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag
         einheitkv% = einheiten.kvertrag
       END IF 
     ELSE 
       IF EinheitAusGeko.stamm > 0 THEN 
         Einheiten.maadr = Einheiten.maadr + (einheiten.kvertrag * - 1)
         einheitkv% = einheiten.kvertrag * - 1
       END IF 
     END IF 
   END IF 
 ELSE 
   IF EinheitAusGeko.stamm < 1 THEN 
     Einheiten.maadr = Einheiten.maadr + einheit%
     einheitkv% = einheit%
   END IF 
   IF betr% >= 0 THEN 
     IF EinheitAusGeko.stamm > 0 THEN 
       Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag
       einheitkv% = einheiten.kvertrag
     END IF 
   ELSE 
     IF EinheitAusGeko.stamm > 0 THEN 
       Einheiten.maadr = Einheiten.maadr + (einheiten.kvertrag * - 1)
       einheitkv% = einheiten.kvertrag * - 1
     END IF 
   END IF 
 END IF 
 IF ma1% = vtcodema% THEN 
   IF EinheitAusGeko.stamm < 1 THEN 
     EigEinheiten.maadr = EigEinheiten.maadr + einheit%
     einheitkv% = einheit%
   END IF 
   IF betr% >= 0 THEN 
     IF EinheitAusGeko.stamm > 0 THEN 
       EigEinheiten.maadr = EigEinheiten.maadr + einheiten.kvertrag
       einheitkv% = einheiten.kvertrag
     END IF 
   ELSE 
     IF EinheitAusGeko.stamm > 0 THEN 
       EigEinheiten.maadr = EigEinheiten.maadr + (einheiten.kvertrag * - 1)
       einheitkv% = einheiten.kvertrag * - 1
     END IF 
   END IF 
   EinheitGes.maadr = EinheitGes.maadr + einheitkv%
 ELSE 
   sEinheitGes.maadr = sEinheitGes.maadr + einheitkv%
 END IF 
 REM gesvol% = GesVolumen.maadr
 REM eigvol% = EigVolumen.maadr
 REM betr% = provi% - vertrprov% - SRBetrag%
 REM CALL Fehler("ges:" + STR$ (gesvol%,"99999"),"Eig:" + STR$ (eigvol%,"99999"))
 
 REM ****************************AUSZAHLUNGSSPERRE**********************************
 eigen% = 0
 PSpAll$ = PROVSperreAll.maadr
 PSpAllSeit% = PSperreAllSeit.maadr
 PROVSpEig$ = PROVSperreEig.maadr
 PSpESeit% = PSperreESeit.maadr
 
 IF ma1% = vtcodema% THEN 
   eigen% = 1
 END IF 
 IF PspAll$ = "j" THEN 
   IF PSpAllSeit% <= datumz% THEN 
     REM IF ma1% = 529 THEN CALL Fehler("TRIEBSCH","")
     AuszahlSperKo.maadr = AuszahlSperKo.maadr + betr%
     AuszahlSperKoEU.maadr = VAL ( STR$ (AuszahlSperKo.maadr / euro1%,"999999999.00"))
   END IF 
 ELSE 
   IF eigen% = 1 AND PROVSpEig$ = "j" THEN 
     IF PSpESeit% <= datumz% THEN 
       AuszahlSperKo.maadr = AuszahlSperKo.maadr + betr%
       AuszahlSperKoEU.maadr = VAL ( STR$ (AuszahlSperKo.maadr / euro1%,"999999999.00"))
     END IF 
   END IF 
 END IF 
 REM ****************************AUSZAHLUNGSSPERRE Ende********************************** 
 IF betr% >= 0 THEN 
   GesVolumen.maadr = GesVolumen.maadr + Volumen.KVERTRAG
   IF ma1% = vtcodema% THEN 
     EigVolumen.maadr = EigVolumen.maadr + Volumen.KVERTRAG
   END IF 
 ELSE 
   GesVolumen.maadr = GesVolumen.maadr + (Volumen.KVERTRAG * - 1)
   IF ma1% = vtcodema% THEN 
     EigVolumen.maadr = EigVolumen.maadr + (Volumen.KVERTRAG * - 1)
   END IF 
 END IF 
 REM gesvol% = GesVolumen.maadr
 REM eigvol% = EigVolumen.maadr
 AuszahlAB.maadr = AuszahlAB.maadr + betr%
 AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / euro1%,"999999999.00"))
 AuszProvABGes.maadr = AuszProvABGes.maadr + betr%
 AuszProvABGesEU.maadr = VAL ( STR$ (AuszProvABGes.maadr / euro1%,"999999999.00"))
 REM Workstation.maadr = Workstation%
 REM QWoNo.maadr = STR$ (Workstation%,"000000") + STR$ (codema.maadr,"000000")
 RecStatus.maadr = "c"
 STORE FILE "maadr"
 UNLOCK CURRENT FILE "maadr"
 Betrag.buchung1 = betr%
 REM *****************************************************************************************************
 REM Zentralberechnung des Kontostandes
 zusatz% = 0
 CALL ZentrKTO(ma%,datumz%,betr%,SRBetrag%,codew%,euro1%,waehr1$,PSpAll$,PSpAllSeit%,PROVSpEig$,PSpESeit%,eigen%,zusatz%,einheitkv%)
 REM *****************************************************************************************************
 Gesamtbetrag.buchung1 = provi%

 Bewertungssumme.buchung1 = Bewertung.zeingan1
 IF GAFSK$ LIKE "TRUE" AND (Buchungstext.buchung1 LIKE "*Storno wg.Fehl*" OR Buchungstext.buchung1 LIKE "Storno wg.Fehl*") THEN 
   Bewertungssumme.buchung1 = Bewertungssumme.kvertrag
 END IF 
 ProvBasiswert.buchung1 = Bewertung.zeingan1
 KundEinzahlung.buchung1 = Bewertungssumme.kvertrag
 KundEinzahluEu.buchung1 = VAL ( STR$ (Bewertungssumme.kvertrag / umrechnung.buchung1,"999999999.00"))
 IF betrag.buchung1 > 0 THEN 
   Volumen.buchung1 = Volumen.KVERTRAG
 ELSE 
   Volumen.buchung1 = Volumen.KVERTRAG * - 1
 END IF 
 
 KÅndigung.buchung1 = KÅndigung.KVERTRAG
 VS_Beginn.buchung1 = VS_Beginn.KVERTRAG
 Bewertung2.buchung1 = BewertKV.zeingan1
 IF GAFSK$ LIKE "TRUE" AND (Buchungstext.buchung1 LIKE "*Storno wg.Fehl*" OR Buchungstext.buchung1 LIKE "Storno wg.Fehl*") THEN 
   Bewertung2.buchung1 = Bewertungssumme.kvertrag
 END IF 
 CodeKU.buchung1 = CodeKU.KVERTRAG

 vtagentur.buchung1 = GVTAgentur$
 vtcodema.buchung1 = GVTcodema%
 
 
 vsumme.buchung1 = vsumme.kvertrag
 vsummeEU.buchung1 = VAL ( STR$ (vsumme.kvertrag / umrechnung.buchung1,"999999999.00"))
 BeitragBrut.buchung1 = Beitrag.kvertrag
 BeitragNet.buchung1 = NettoBeitrag.kvertrag
 BeitragBrutEu.buchung1 = VAL ( STR$ (Beitrag.kvertrag / umrechnung.buchung1,"999999999.00"))
 BeitragNetEu.buchung1 = VAL ( STR$ (NettoBeitrag.kvertrag / umrechnung.buchung1,"999999999.00"))
 zw.buchung1 = zw.kvertrag
 mwst.buchung1 = mwst.kvertrag
 IF zw.buchung1 > 0 THEN 
   JahresBBrut.buchung1 = BeitragBrut.buchung1 * zw.buchung1
   JahresBNet.buchung1 = BeitragNet.buchung1 * zw.buchung1
   JahresBBrutEu.buchung1 = VAL ( STR$ (JahresBBrut.buchung1 / umrechnung.buchung1,"999999999.00"))
   JahresBNetEu.buchung1 = VAL ( STR$ (JahresBNet.buchung1 / umrechnung.buchung1,"999999999.00"))
 ELSE 
   JahresBBrut.buchung1 = BeitragBrut.buchung1
   JahresBNet.buchung1 = BeitragNet.buchung1
   JahresBBrutEu.buchung1 = VAL ( STR$ (JahresBBrut.buchung1 / umrechnung.buchung1,"999999999.00"))
   JahresBNetEu.buchung1 = VAL ( STR$ (JahresBNet.buchung1 / umrechnung.buchung1,"999999999.00"))
 END IF 
 
 APJN.buchung1 = APjn.gekond
 CourtJN.buchung1 = CourtageJN.gekond
 SRjn.buchung1 = SRJN.gekond
 PflegeJN.buchung1 = PflegeJN.gekond
 APProzente.buchung1 = AP.gekond
 CourtProzente.buchung1 = Courtage.gekond
 PflegProzente.buchung1 = PflegeProvi.gekond
 SRProzente.buchung1 = sr.gekond
 codew.buchung1 = codew%
 waehrung.buchung1 = waehr1$

 IF EinheitSach.stamm = "j" THEN 
   IF SparteIstSach.sparten <> 1 THEN 
     IF ma1% = vtcodema% THEN 
       IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung1 = einheit%
       IF betr% >= 0 THEN 
         IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag
       ELSE 
         IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag * - 1
       END IF 
     END IF 
   ELSE 
     IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung1 = einheit%
     IF betr% >= 0 THEN 
       IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag
     ELSE 
       IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag * - 1
     END IF 
   END IF 
 ELSE 
   IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung1 = einheit%
   IF betr% >= 0 THEN 
     IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag
   ELSE 
     IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag * - 1
   END IF 
 END IF 

 SELECT KEY CodeVA.kvertrag FILE "SPARTEN" INDEX CodeVA.SPARTEN
 Sparte.buchung1 = Sparte.SPARTEN
 SELECT KEY CodeKU.KVERTRAG FILE GAdrDat$ INDEX CodeKU.GAdrDat$
 Nachname.buchung1 = Nachname.GAdrDat$
 Vorname.buchung1 = Vorname.GAdrDat$
 SELECT KEY CodeGE.KVERTRAG FILE "GEADR" INDEX CodeGE.GEADR
 Gesellschaft.buchung1 = Gesellschaft.GEADR
 Provision.buchung1 = "j"
 IF sr% = 0 THEN 
   SRgezahlt.buchung1 = "j"
   SR.buchung1 = 0
 ELSE 
   REM 060497
   IF Haftung% = - 1 THEN 
     SRAuszahlung.buchung1 = 0
     SR.buchung1 = SRBetrag%
   ELSE 
     SRAuszahlung.buchung1 = Haftung%
     SR.buchung1 = SRBetrag%
   END IF 
 END IF 
 REM CALL QuickStore("Buchung1")
 agentur.buchung1 = LEFT$ ( LTRIM$ (nachname.maadr) + ", " + LTRIM$ (vorname.maadr) + ", " + LTRIM$ (Agenturnr.maadr) + " , Stufe:" + STR$ (stufe.maadr,"000"),100)
 QuickCode.BUCHUNG1 = STR$ (CodeMA.BUCHUNG1,"000000") + DATE$ (Datum.BUCHUNG1,"yyyymm0d")
 QCodeMAPROD.buchung1 = STR$ (CodeMA.buchung1,"000000") + VSNRPack$(Gesellschaft.buchung1) + VSNRPack$(Sparte.buchung1)
 Workstation.Buchung1 = Workstation%
 QWoNo.Buchung1 = STR$ (Workstation%,"000000") + STR$ (CodeBu.Buchung1,"000000")
 RecStatus.Buchung1 = "c"
 CALL BU1DMEuro(umrechnung.buchung1)
 buday.buchung1 = DAY (Datum.buchung1)
 QCodeMAVT.buchung1 = STR$ (codema.buchung1,"000000") + STR$ (codevt.buchung1,"000000")
 timestamp$ = DATE$ ( TODAY ,"yymmdd") + STR$ ( HRS ( NOW ) * 100 + MINS ( NOW ),"0000")
 timestamp% = VAL (timestamp$)
 timestamp.buchung1 = timestamp%
         IF gebuchtjn.buchung1 <> 1 THEN gebuchtjn.buchung1 = 0
         gebuchtJNDat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + DATE$ (datum.buchung1,"yyyymm0d")
         gebuchtJNMADat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + STR$ (Codema.buchung1,"000000") + DATE$ (datum.buchung1,"yyyymm0d")
 STORE FILE "Buchung1"
 UNLOCK CURRENT FILE "Buchung1"
 MOUSE OFF 
 REM -- Aufsummierung der einzelnen Provisionsarten
 REM    fÅr Differenzberechnung
 IF remark2$ LIKE "Abschl*" OR remark2$ LIKE "AP*" OR remark$ LIKE "AP*" OR remark$ LIKE "Abschl*" OR remark$ LIKE "Ersatz*" THEN 
   vsumAP% = provi%
 ELSE IF remark2$ LIKE "Courta*" THEN 
   vsumC% = provi%
 ELSE IF remark2$ LIKE "Pflege*" THEN 
   vsumPP% = provi%
 ELSE IF remark2$ LIKE "Pauschal*" THEN 
   vsumPausch% = provi%
 ELSE IF remark2$ LIKE "VD*" THEN 
   vsumAP% = provi%
 ELSE 
   vertrprov% = provi%
 END IF 
 END SUB 














 ' Provisionsberechnung
 ' einzelnen Vertrag berechnen
 ' =======================================================================
  
SUB PROVISZEIN2()
 cfile$ = FILE 
 ok% = 1
  
 
zp22089702: 
 cuvt% = lfdnr.KVERTRAG
 codema% = CodeMA.kvertrag
 codege% = CodeGE.kvertrag
 codeva% = CodeVA.kvertrag
 koab% = CodeKO.KVERTRAG
 bewertung% = Bewertung.zeingan1
 GbewertungOld% = Bewertung.zeingan1
 SELECT FIRST FILE "maadr" INDEX codema.maadr
 SELECT KEY codema% FILE "maadr" INDEX codema.maadr
 Gvtagentur$ = nachname.maadr + "," + vorname.maadr
 Gvtcodema% = codema.maadr
 REM GAGFrAgentur$(anzagvFre%,1)
 GStorWarnJN$ = StorWarnJN.kvertrag
 IF StorWarnDatGes.kvertrag > 0 THEN 
   GStorWarnDGes$ = DATE$ (StorWarnDatGes.kvertrag,"0d.mm.yyyy")
 ELSE 
   GStorWarnDGes$ = ""
 END IF 
 IF StorWarnDatMA.kvertrag THEN 
   GStorWarnDMA$ = DATE$ (StorWarnDatMA.kvertrag,"0d.mm.yyyy")
 ELSE 
   GStorWarnDMA$ = ""
 END IF 
 GStorWarnGrund$ = StorWarnGrund.kvertrag
 GStorWarnMasn$ = StorWarnMasn.kvertrag
 GStorWarnErg$ = StorWarnErg.kvertrag
 
 REM *** 201100 Einbeziehung der ProzenteVerteilung von VPRODUKT ***
 codevp% = CodeVP.Kvertrag
 SELECT FIRST FILE "Vprodukt" INDEX codevp.vprodukt
 SELECT KEY codevp% FILE "Vprodukt" INDEX codevp.vprodukt
 IF codevp% = CodeVP.Kvertrag AND ProzVerteilung.vprodukt > 0 THEN 
   haftvertrag% = SRHaftung.kvertrag
   weitermachen% = 1
   SELECT FIRST FILE "VKOND" INDEX CodeVK.VKOND
   SELECT KEY koab% FILE "VKOND" INDEX CodeVK.VKOND
   WHILE NOT EOF ("vkond") AND weitermachen% = 1
     IF nÑchsteKond.VKOND = 0 THEN 
       weitermachen% = 0
     ELSE 
       SELECT KEY nÑchsteKond.VKOND FILE "VKOND" INDEX CodeVK.VKOND
     END IF 
   WEND 
   SELECT KEY CodeKO.VKOND FILE "GEKOND" INDEX lfdnr.GEKOND
   REM jetzt wurde die Kondition der Firma(1.Agentur) gefunden 
   Vbewertung% = ((Bewertung.zeingan1 / 100) * ProzVerteilung.vprodukt)
   Vrest% = Bewertung.zeingan1 - Vbewertung%
   IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 THEN 
     IF APjn.gekond = "j" THEN 
       provnz% = vrest% / 100 * AP.gekond
     END IF 
   END IF 
   IF kondart.zeingan1 = 2 THEN 
     IF PflegeJN.gekond = "j" THEN 
       provnz% = vrest% / 100 * PflegeProvi.gekond
     END IF 
   END IF 
   IF kondart.zeingan1 = 1 THEN 
     IF CourtageJN.gekond = "j" THEN 
       provnz% = vrest% / 100 * Courtage.gekond
     END IF 
   END IF 
 
   IF kondart.zeingan1 = 4 THEN 
     IF DynamikPjn.gekond = "j" THEN 
       provnz% = vrest% / 100 * DynamikProz.gekond
     END IF 
   END IF 

   IF kondart.zeingan1 = 4 THEN 
     IF Betreujn.gekond = "j" THEN 
       provnz% = vrest% / 100 * BetreuProz.gekond
     END IF 
   END IF 

   IF SRjn.gekond = "j" THEN 
     sr% = sr.gekond
     IF sr% <> 0 THEN 
       IF Haftvertrag% > 0 THEN 
         IF FÑlligkeit.zeingan1 > 0 THEN 
           Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftvertrag% * 30)
         ELSE 
           Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftvertrag% * 30)
         END IF 
       ELSE 
         IF FÑlligkeit.zeingan1 > 0 THEN 
           Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftung.gekond * 30)
         ELSE 
           Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftung.gekond * 30)
         END IF 
       END IF 
     ELSE 
       Haftung% = 0
       sr% = 0
     END IF 
     REM unbegrenzte Haftung ohne Auszahlung
     IF Haftung.gekond = - 1 THEN 
       Haftung% = - 1
     END IF 
   END IF 
   butext$ = Buchungstext.zeingan1 + " Prov. aus NV"
   VProvisNZ% = provnz%
   provnz% = 0
   REM CALL SpezProvisF(butext$,codema.gekond,provnz%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1)
 ELSE 
   Vbewertung% = Bewertung.zeingan1
 END IF 
 REM ******************************************************************* 

 REM ******************************************************************* 
 
 SELECT FIRST FILE "VKOND" INDEX CodeVK.VKOND
 SELECT KEY koab% FILE "VKOND" INDEX CodeVK.VKOND
 
 IF NOT EXISTS (koab%,codevk.VKOND) THEN 
   CALL WriteLog("  Vertrag wurde noch nicht an die Provisionsabrechnung Åbergeben")
   CALL AddLogInfo()
   ok% = 0
 ELSE 
   REM positionieren auf die Kondition der vertragsabschlie·enden Agentur,bei der ist dann der VorgÑnger als
   REM nÑchsteKond.VKOND eingetragen
   SELECT FIRST FILE "VKOND" INDEX CodeVK.VKOND
   SELECT KEY koab% FILE "VKOND" INDEX CodeVK.VKOND
 END IF 
 
 REM es ist Spezialprovision von der Firma zu zahlen und nachdem diese von der Bewertung abgezogen wurde
 REM darf der Restbetrag als 100% angesehen werden, von dem dann die restliche Provision berechnet wird
 IF vs_nr.kvertrag LIKE "25139*" THEN 
   REM CALL Fehler("Spezprov von Agentur","2")
 END IF 
 GBewertung% = Vbewertung%
 okspez% = - 1
 IF GFPB% = - 1 THEN 
   IF Bewertung.zeingan1 = 0 AND sr.zeingan1 <> 0 THEN 
     okspez% = 0
   ELSE 
     bwspez$ = LTRIM$ ( STR$ (Bewertung.zeingan1,"999999999.00"))
     srspez$ = LTRIM$ ( STR$ (sr.zeingan1 * - 1,"999999999.00"))
     IF bwspez$ = srspez$ THEN okspez% = 0
     REM CALL Fehler(bwspez$,srspez$)
   END IF 

 END IF 
 IF GSpezko$ = "j" AND GVonFirma$ = "j" AND okspez% = - 1 THEN 
   REM CALL Fehler("Test auf Spezialkonditionen","")
   REM positionieren auf die Kondition der Firma
   weitermachen% = 1
   SELECT FIRST FILE "VKOND" INDEX CodeVK.VKOND
   SELECT KEY koab% FILE "VKOND" INDEX CodeVK.VKOND
   WHILE NOT EOF ("vkond") AND weitermachen% = 1
     IF nÑchsteKond.VKOND = 0 THEN 
       weitermachen% = 0
     ELSE 
       SELECT KEY nÑchsteKond.VKOND FILE "VKOND" INDEX CodeVK.VKOND
     END IF 
   WEND 
   SELECT KEY CodeKO.VKOND FILE "GEKOND" INDEX lfdnr.GEKOND
   REM jetzt wurde die Kondition der Firma(1.Agentur) gefunden, jetzt mÅsenn die Prozente/Pauschalen vonFirma addiert
   REM werden, um diese BetrÑge von der Bewertung abzuziehen, danach Erzeugung der BuchungssÑtze
   anzagvF% = 0
   SpezProzent% = 0
   SpezPausch% = 0
   QCodeVTMAold$ = ""
   WHILE GAGvonFirma$(anzagvF%) <> ""
     SELECT FIRST FILE "Spezkond" INDEX QCodeVTMA.spezkond
     QCodeVTMA$ = RIGHT$ (GAGvonFirma$(anzagvF%),12)
     IF GAGvonFirma$(anzagvF%) <> "" THEN 
      IF QCodeVTMA$ <> QCodeVTMAold$ THEN 
       REM QCodeVTMA$ = RIGHT$ (GAGvonFirma$(anzagvF%),12)
       QCodeVTMAold$ = QCodeVTMA$
       SELECT KEY QCodeVTMA$ FILE "Spezkond" INDEX QCodeVTMA.spezkond
       okspezko% = 0
       WHILE NOT EOF ("Spezkond") AND QCodeVTMA.spezkond = QCodeVTMA$
         IF Prozente.spezkond <> 0 THEN 
           kondart1% = kondart.zeingan1
           vonCourtage$ = vonCourtage.spezkond
           vonPflege$ = vonPflege.spezkond
           vonAP$ = vonAP.spezkond
           REM AP
           abproz% = Prozente.spezkond
 
           REM IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 AND vonCourtage.spezkond <> "j" AND vonPflege.spezkond <> "j" THEN 
           IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 OR kondart.zeingan1 = 4 THEN 
             ok% = - 1
             IF vonCourtage.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
               IF vonAP.spezkond <> "j" THEN ok% = 0
             END IF 
             IF einmaligerfolgt.spezkond <> "j" THEN 
               IF ok% = - 1 THEN 
                 SpezProzent% = SpezProzent% + Prozente.spezkond
               END IF 
             ELSE 
               IF bewertung.zeingan1 < 0 AND sr.spezkond > 0 THEN 
                 IF ok% = - 1 THEN 
                   SpezProzent% = SpezProzent% + Prozente.spezkond
                 END IF 
               END IF 
             END IF 
           END IF 
           REM Courtage
           REM IF kondart.zeingan1 = 1 AND vonAP.spezkond <> "j" AND vonPflege.spezkond <> "j" THEN 
           IF kondart.zeingan1 = 1 THEN 
             ok% = - 1
             IF vonAP.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
               IF vonCourtage.spezkond <> "j" THEN ok% = 0
             END IF 
             REM SpezProzent% = SpezProzent% + Prozente.spezkond
             IF einmaligerfolgt.spezkond <> "j" THEN 
               IF ok% = - 1 THEN 
                 SpezProzent% = SpezProzent% + Prozente.spezkond
               END IF 
             ELSE 
               IF bewertung.zeingan1 < 0 AND sr.spezkond > 0 THEN 
                 IF ok% = - 1 THEN 
                   SpezProzent% = SpezProzent% + Prozente.spezkond
                 END IF 
               END IF 
             END IF 
           END IF 
 
           REM Pflege
           REM IF kondart.zeingan1 = 2 AND vonCourtage.spezkond <> "j" AND vonAp.spezkond <> "j" AND einmaligerfolgt.spezkond <> "j" THEN 
           IF kondart.zeingan1 = 2 OR kondart.zeingan1 = 5 THEN 
             ok% = - 1
             IF einmaligerfolgt.spezkond = "j" THEN 
               ok% = 0
             ELSE 
               IF vonCourtage.spezkond = "j" OR vonAp.spezkond = "j" THEN 
                 IF vonPflege.spezkond <> "j" THEN ok% = 0
               END IF 
             END IF 
             IF ok% = - 1 THEN 
               SpezProzent% = SpezProzent% + Prozente.spezkond
             END IF 
           END IF 
         ELSE 
           IF pauschale.spezkond <> 0 THEN 
             REM IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 AND vonCourtage.spezkond <> "j" AND vonPflege.spezkond <> "j" THEN 
             IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 OR kondart.zeingan1 = 4 THEN 
               ok% = - 1
               IF vonCourtage.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                 IF vonAP.spezkond <> "j" THEN ok% = 0
               END IF 
               REM SpezPausch% = SpezPausch% + Pauschale.spezkond
               IF einmaligerfolgt.spezkond <> "j" THEN 
                 IF ok% = - 1 THEN 
                   SpezPausch% = SpezPausch% + Pauschale.spezkond
                 END IF 
               ELSE 
                 IF ok% = - 1 THEN 
                   IF bewertung.zeingan1 < 0 AND sr.spezkond > 0 THEN 
                     SpezPausch% = SpezPausch% + Pauschale.spezkond * - 1
                   END IF 
                 END IF 
               END IF 
             END IF 
             REM IF kondart.zeingan1 = 1 AND vonAP.spezkond <> "j" AND vonPflege.spezkond <> "j" THEN 
             IF kondart.zeingan1 = 1 THEN 
               ok% = - 1
               IF vonAP.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
                 IF vonCourtage.spezkond <> "j" THEN ok% = 0
               END IF 
               REM SpezPausch% = SpezPausch% + Pauschale.spezkond
               IF einmaligerfolgt.spezkond <> "j" THEN 
                 IF ok% = - 1 THEN 
                   SpezPausch% = SpezPausch% + Pauschale.spezkond
                 END IF 
               ELSE 
                 IF ok% = - 1 THEN 
                   IF bewertung.zeingan1 < 0 AND sr.spezkond > 0 THEN 
                     SpezPausch% = SpezPausch% + Pauschale.spezkond * - 1
                   END IF 
                 END IF 
               END IF 
             END IF 
             REM IF kondart.zeingan1 = 2 AND vonCourtage.spezkond <> "j" AND vonAp.spezkond <> "j" AND einmaligerfolgt.spezkond <> "j" THEN 
             IF kondart.zeingan1 = 2 OR kondart.zeingan1 = 5 THEN 
               ok% = - 1
               IF einmaligerfolgt.spezkond = "j" THEN 
                 ok% = 0
               ELSE 
                 IF vonCourtage.spezkond = "j" OR vonAp.spezkond = "j" THEN 
                   IF vonPflege.spezkond <> "j" THEN ok% = 0
                 END IF 
               END IF 
               IF ok% = - 1 THEN 
                 SpezPausch% = SpezPausch% + Pauschale.spezkond
               END IF 
             END IF 
           END IF 
         END IF 
         SELECT NEXT FILE "Spezkond" INDEX QCodeVTMA.spezkond
       WEND 
      END IF 
      anzagvF% = anzagvF% + 1
     END IF 
   WEND 
 
   kondart% = kondart.zeingan1
   REM bei Abschlu·provision
   REM CALL Fehler("%Pausch","")

   IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 THEN 
     IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
       GBewertung% = Vbewertung% - SpezPausch%
     ELSE 
       GBewertung% = ((Vbewertung% / 100) * AP.gekond) - ((Vbewertung% / 100) * SpezProzent%) - SpezPausch%
     END IF 
   END IF 
   IF kondart.zeingan1 = 4 THEN 
     IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
       GBewertung% = Vbewertung% - SpezPausch%
     ELSE 
       GBewertung% = ((Vbewertung% / 100) * DynamikProz.gekond) - ((Vbewertung% / 100) * SpezProzent%) - SpezPausch%
     END IF 
   END IF 
   REM bei Courtage
   IF kondart.zeingan1 = 1 THEN 
     IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
       GBewertung% = Vbewertung% - SpezPausch%
     ELSE 
       GBewertung% = ((Vbewertung% / 100) * Courtage.gekond) - ((Vbewertung% / 100) * SpezProzent%) - SpezPausch%
     END IF 
   END IF 
   REM bei Pflege
   IF kondart.zeingan1 = 2 THEN 
     IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
       GBewertung% = Vbewertung% - SpezPausch%
     ELSE 
       GBewertung% = (((Vbewertung%) / 100) * PflegeProvi.gekond) - ((Vbewertung% / 100) * SpezProzent%) - SpezPausch%
     END IF 
   END IF 
   IF kondart.zeingan1 = 5 THEN 
     IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
       GBewertung% = Vbewertung% - SpezPausch%
     ELSE 
       GBewertung% = (((Vbewertung%) / 100) * BetreuProz.gekond) - ((Vbewertung% / 100) * SpezProzent%) - SpezPausch%
     END IF 
   END IF 
 
   REM jetzt mÅssen die BuchungssÑtze fÅr die Mitarbeiter angelegt werden
   anzagvF% = 0
   SELECT FIRST FILE "Spezkond" INDEX QCodeVTMA.spezkond
   sr% = 0
   Haftung% = 0
   provsp% = 0
   provsp1% = 0
   REM CALL Fehler("Spezi","")

   Haftung% = 0
   provsp% = 0
   provsp1% = 0
   REM CALL Fehler("Spezi","")
   QCodeVTMAold$ = ""
   WHILE GAGvonFirma$(anzagvF%) <> ""
     QCodeVTMA$ = RIGHT$ (GAGvonFirma$(anzagvF%),12)
     SELECT FIRST FILE "Spezkond" INDEX QCodeVTMA.spezkond
     SELECT KEY QCodeVTMA$ LOCK FILE "Spezkond" INDEX QCodeVTMA.spezkond
     IF QCodeVTMA$ <> QCodeVTMAold$ THEN 
      QCodeVTMAold$ = QCodeVTMA$
      WHILE NOT EOF ("Spezkond") AND QCodeVTMA.spezkond = QCodeVTMA$
       IF Prozente.spezkond <> 0 THEN 
         abproz% = Prozente.spezkond
         REM IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 AND vonCourtage.spezkond <> "j" AND vonPflege.spezkond <> "j" THEN 
         IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 OR kondart.zeingan1 = 4 THEN 
           ok% = - 1
           IF vonCourtage.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
             IF vonAP.spezkond <> "j" THEN ok% = 0
           END IF 
           IF ok% = - 1 THEN 
             IF einmaligerfolgt.spezkond <> "j" THEN 
               provsp1% = ((Vbewertung% / 100) * AP.gekond)
               IF kondart.zeingan1 = 4 THEN 
                 provsp1% = ((Vbewertung% / 100) * DynamikProz.gekond)
               END IF 
               provsp% = ((provsp1% / 100) * Prozente.spezkond)
               IF sr.spezkond <> 0 THEN 
                 sr% = sr.spezkond
                 IF sr% <> 0 THEN 
                   Haftv% = srlz.spezkond
                   IF Haftv% > 0 THEN 
                     IF FÑlligkeit.zeingan1 > 0 THEN 
                       Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftv% * 30)
                     ELSE 
                       Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftv% * 30)
                     END IF 
                   ELSE 
                     Haftung% = 0
                   END IF 
                 ELSE 
                   Haftung% = 0
                   sr% = 0
                 END IF 
                 REM unbegrenzte Haftung ohne Auszahlung
                 IF Haftv% = - 1 THEN 
                   Haftung% = - 1
                 END IF 
               ELSE 
                 Haftung% = 0
                 sr% = 0
               END IF 
             ELSE 
               IF bewertung.zeingan1 < 0 AND sr.spezkond > 0 THEN 
                 provsp1% = ((Vbewertung% / 100) * AP.gekond)
                 IF kondart.zeingan1 = 4 THEN 
                   provsp1% = ((Vbewertung% / 100) * DynamikProz.gekond)
                 END IF 
                 provsp% = ((provsp1% / 100) * Prozente.spezkond)
               END IF 
             END IF 
           END IF 
         END IF 
         REM bei Courtage
         REM IF kondart.zeingan1 = 1 AND vonAP.spezkond <> "j" AND vonPflege.spezkond <> "j" THEN 
         IF kondart.zeingan1 = 1 THEN 
           ok% = - 1
           IF vonAP.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
             IF vonCourtage.spezkond <> "j" THEN ok% = 0
           END IF 
           IF ok% = - 1 THEN 
             IF einmaligerfolgt.spezkond <> "j" THEN 
               provsp1% = ((Vbewertung% / 100) * Courtage.gekond)
               provsp% = ((provsp1% / 100) * Prozente.spezkond)
               IF sr.spezkond <> 0 THEN 
                 sr% = sr.spezkond
                 IF sr% <> 0 THEN 
                   Haftv% = srlz.spezkond
                   IF Haftv% > 0 THEN 
                     IF FÑlligkeit.zeingan1 > 0 THEN 
                       Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftv% * 30)
                     ELSE 
                       Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftv% * 30)
                     END IF 
                   ELSE 
                     Haftung% = 0
                   END IF 
                 ELSE 
                   Haftung% = 0
                   sr% = 0
                 END IF 
                 REM unbegrenzte Haftung ohne Auszahlung
                 IF Haftv% = - 1 THEN 
                   Haftung% = - 1
                 END IF 
               ELSE 
                 Haftung% = 0
                 sr% = 0
               END IF 
             ELSE 
               IF bewertung.zeingan1 < 0 AND sr.spezkond > 0 THEN 
                 provsp1% = ((Vbewertung% / 100) * Courtage.gekond)
                 provsp% = ((provsp1% / 100) * Prozente.spezkond)
               END IF 
             END IF 
           END IF 
        
         END IF 
         REM bei Pflege
         REM IF kondart.zeingan1 = 2 AND vonCourtage.spezkond <> "j" AND vonAp.spezkond <> "j" AND einmaligerfolgt.spezkond <> "j" THEN 
         IF kondart.zeingan1 = 2 OR kondart.zeingan1 = 5 THEN 
           ok% = - 1
           IF einmaligerfolgt.spezkond = "j" THEN 
             ok% = 0
           ELSE 
             IF vonCourtage.spezkond = "j" OR vonAp.spezkond = "j" THEN 
               IF vonPflege.spezkond <> "j" THEN ok% = 0
             END IF 
           END IF 
           IF ok% = - 1 THEN 
             provsp1% = (((Vbewertung%) / 100) * PflegeProvi.gekond)
             IF kondart.zeingan1 = 5 THEN 
               provsp1% = (((Vbewertung%) / 100) * BetreuProz.gekond)
             END IF 
             provsp% = ((provsp1% / 100) * Prozente.spezkond)
           END IF 
         END IF 
       ELSE 
         REM IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 AND vonCourtage.spezkond <> "j" AND vonPflege.spezkond <> "j" THEN 
         IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 OR kondart.zeingan1 = 4 THEN 
           ok% = - 1
           IF vonCourtage.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
             IF vonAP.spezkond <> "j" THEN ok% = 0
           END IF 
           IF ok% = - 1 THEN 
             IF einmaligerfolgt.spezkond <> "j" THEN 
               provsp1% = ((Vbewertung% / 100) * AP.gekond)
               IF kondart.zeingan1 = 4 THEN 
                 provsp1% = ((Vbewertung% / 100) * DynamikProz.gekond)
               END IF 
               REM 30092005
               REM CALL Fehler("Spezkond","Pauschale")
               IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
                 provsp% = Pauschale.spezkond
                 GEinhEinmSpez% = Einheiten.kvertrag * provsp% / bewertung%
               END IF 
               IF sr.spezkond <> 0 THEN 
                 sr% = sr.spezkond
                 IF sr% <> 0 THEN 
                   Haftv% = srlz.spezkond
                   IF Haftv% > 0 THEN 
                     IF FÑlligkeit.zeingan1 > 0 THEN 
                       Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftv% * 30)
                     ELSE 
                       Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftv% * 30)
                     END IF 
                   ELSE 
                     Haftung% = 0
                   END IF 
                 ELSE 
                   Haftung% = 0
                   sr% = 0
                 END IF 
                 REM unbegrenzte Haftung ohne Auszahlung
                 IF Haftv% = - 1 THEN 
                   Haftung% = - 1
                 END IF 
               ELSE 
                 Haftung% = 0
                 sr% = 0
               END IF 
             ELSE 
               IF bewertung.zeingan1 < 0 AND sr.spezkond > 0 THEN 
                 provsp1% = ((Vbewertung% / 100) * AP.gekond)
                 IF kondart.zeingan1 = 4 THEN 
                   provsp1% = ((Vbewertung% / 100) * DynamikProz.gekond)
                 END IF 
                 provsp% = Pauschale.spezkond * - 1
               END IF 
             END IF 
           END IF 
         END IF 
         REM bei Courtage
         REM IF kondart.zeingan1 = 1 AND vonAP.spezkond <> "j" AND vonPflege.spezkond <> "j" THEN 
         IF kondart.zeingan1 = 1 THEN 
           ok% = - 1
           IF vonAP.spezkond = "j" OR vonPflege.spezkond = "j" THEN 
             IF vonCourtage.spezkond <> "j" THEN ok% = 0
           END IF 
           IF ok% = - 1 THEN 
             IF einmaligerfolgt.spezkond <> "j" THEN 
               provsp1% = ((Vbewertung% / 100) * Courtage.gekond)
               provsp% = Pauschale.spezkond
               IF sr.spezkond <> 0 THEN 
                 sr% = sr.spezkond
                 IF sr% <> 0 THEN 
                   Haftv% = srlz.spezkond
                   IF Haftv% > 0 THEN 
                     IF FÑlligkeit.zeingan1 > 0 THEN 
                       Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftv% * 30)
                     ELSE 
                       Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftv% * 30)
                     END IF 
                   ELSE 
                     Haftung% = 0
                   END IF 
                 ELSE 
                   Haftung% = 0
                   sr% = 0
                 END IF 
                 REM unbegrenzte Haftung ohne Auszahlung
                 IF Haftv% = - 1 THEN 
                   Haftung% = - 1
                 END IF 
               ELSE 
                 Haftung% = 0
                 sr% = 0
               END IF 
             ELSE 
               IF bewertung.zeingan1 < 0 AND sr.spezkond > 0 THEN 
                 provsp1% = ((Vbewertung% / 100) * Courtage.gekond)
                 provsp% = Pauschale.spezkond * - 1
               END IF 
             END IF 
           END IF 
         END IF 
         REM bei Pflege
         REM IF kondart.zeingan1 = 2 AND vonCourtage.spezkond <> "j" AND vonAp.spezkond <> "j" AND einmaligerfolgt.spezkond <> "j" THEN 
         IF kondart.zeingan1 = 2 OR kondart.zeingan1 = 5 THEN 
           ok% = - 1
           IF einmaligerfolgt.spezkond = "j" THEN 
             ok% = 0
           ELSE 
             IF vonCourtage.spezkond = "j" OR vonAp.spezkond = "j" THEN 
               IF vonPflege.spezkond <> "j" THEN ok% = 0
             END IF 
           END IF 
           IF ok% = - 1 THEN 
             provsp1% = (((Vbewertung%) / 100) * PflegeProvi.gekond)
             IF kondart.zeingan1 = 5 THEN 
               provsp1% = (((Vbewertung%) / 100) * BetreuProz.gekond)
             END IF 
             provsp% = Pauschale.spezkond
           END IF 
         END IF 
       END IF 
       IF einmalig.spezkond = "j" THEN 
         einmaligerfolgt.spezkond = "j"
         EinmDatum.spezkond = BuchungsDatum.zeingan1
         STORE FILE "Spezkond"
         UNLOCK CURRENT FILE "spezkond"
         UNLOCK FILE "spezkond"
       END IF 
       butext$ = Buchungstext.zeingan1 + " Spez.Prov."
       IF provsp% <> 0 THEN CALL SpezProvisF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1)
       provsp% = 0
       SELECT NEXT LOCK FILE "spezkond" INDEX QCodeVTMA.spezkond
      WEND 
     END IF 
     anzagvF% = anzagvF% + 1
   WEND 
 


   REM positionieren auf die ursprÅngliche Kondition
   SELECT FIRST FILE "VKOND" INDEX CodeVK.VKOND
   SELECT KEY koab% LOCK FILE "VKOND" INDEX CodeVK.VKOND
 END IF 
 
 GStornoDiff% = 0
 vertrprov% = 0
 ok% = 1
 vsumAP% = 0
 vsumC% = 0
 vsumPP% = 0
 vsumPausch% = 0
 vertrsr% = 0
 provsp% = 0
 provsp1% = 0
 GBewertungOrig% = GBewertung%
 i222% = 0
 WHILE ok% = 1
   MOUSE OFF 
   SELECT FIRST FILE "GEKOND" INDEX lfdnr.GEKOND
   SELECT KEY CodeKO.VKOND FILE "GEKOND" INDEX lfdnr.GEKOND
   IF NOT FOUND ("GEKOND") THEN 
     CALL WriteLog("  die angegebene Kondition ist nicht enthalten!")
     CALL WriteLog("  SUPPORT: die in VKOND angegebene Kondition fehlt in GEKOND, bitte Vertrag deaktivieren und erneut an die Provisionsabrechnung Åbergeben!")
     CALL AddLogInfo()
     ok% = 0
   END IF 
   IF ok% = 1 THEN 
     vtagentur$ = Gvtagentur$
     vtcodema% = GVTCodema%
     haftvertrag% = SRHaftung.kvertrag
     dmeinh% = dmeinheit.gekond
     codema% = CodeMA.GEKOND
     vsnrab$ = vs_nr.kvertrag
     lfab% = lfdnr.kvertrag
     codema1ab% = codema.kvertrag
     


     REM 15092004
     
     REM --------------------
     REM -- Abschlu·provision
     REM --------------------
     
 
     IF kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 THEN 
       REM CALL Fehler("AP Anfang",vs_nr.kvertrag)
       IF APjn.gekond = "j" THEN 
         remark2$ = "AP"
         REM BerÅcksichtigung der Spezialprovision
         REM prov% = ((GBewertung% / 100) * AP.gekond)
         IF GSpezko$ = "j" THEN 
           REM CALL Fehler("Test auf Spezialkonditionen","")
           IF codema.gekond = codema.kvertrag THEN 
             prov% = ((GBewertung% / 100) * AP.gekond)
             SELECT FIRST FILE "stamm"
             fieinh$ = FirmaEinhTab.stamm
             IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
               IF APEurEinh.gekond > 0 THEN 
                 prov% = GBewertung% * APEurEinh.gekond / FirmaEurEinh.stamm
               ELSE 
                 eurpeinh% = europroeinh.GEKOND
                 fireur% = FirmaEurEinh.stamm
                 prov% = GBewertung% * europroeinh.GEKOND / FirmaEurEinh.stamm
               END IF 
             END IF 
             SpezProzent% = 0
             SpezPausch% = 0
             anzagvA% = 0
             provtotal% = 0
             GSpezProzEinh% = 0
             GSpezBWEinh% = 0

             REM ***** Einheitensystem Provisionsteilung mit Agentur**************************************
             IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" AND SpezProvNormal.stamm <> "j" THEN 
               WHILE GAGvonAgentur$(anzagvA%) <> ""
                 QCodeVTsort$ = RIGHT$ (GAGvonAgentur$(anzagvA%),18)
                 SELECT FIRST FILE "Spezkond" INDEX QCodeVTsort.spezkond
                 SELECT KEY QCodeVTsort$ LOCK FILE "Spezkond" INDEX QCodeVTsort.spezkond
                 butext$ = Buchungstext.zeingan1 + " Spez.Prov."
                 IF Prozente.spezkond <> 0 THEN 
                   IF (vonCourtage.spezkond <> "j" AND vonPflege.spezkond <> "j") OR vonAP.spezkond = "j" THEN 
                     IF einmaligerfolgt.spezkond <> "j" THEN 
                       IF GSpezProzEinh% = 0 THEN 
                         GSpezProzEinh% = Prozente.spezkond
                         GSpezBWEinh% = GBewertung% * GSpezProzEinh% / 100
                         GBewertung% = GBewertung% - GSpezBWEinh%
                         GEinhEinmSpez% = Einheiten.kvertrag * GSpezProzEinh% / 100
                       END IF 
                       IF APEurEinh.spezkond > 0 THEN 
                         APEurEinh% = APEurEinh.spezkond

                         REM GSpezProzEinh% = Prozente.spezkond
                         REM GSpezBWEinh% = prov% * GSpezProzEinh% / 100
                         REM GBewertung% = GBewertung% - GSpezBWEinh%
                         REM GEinhEinmSpez% = Einheiten.kvertrag * GSpezProzEinh% / 100

                         provsp% = GSpezBWEinh% * APEurEinh.spezkond / FirmaEurEinh.stamm
                       ELSE 
                         europroeinh% = europroeinh.spezKOND
                         REM 05102006

                         REM GSpezProzEinh% = Prozente.spezkond
                         REM GSpezBWEinh% = prov% * GSpezProzEinh% / 100
                         REM GBewertung% = GBewertung% - GSpezBWEinh%
                         REM GEinhEinmSpez% = Einheiten.kvertrag * GSpezProzEinh% / 100

                         IF europroeinh.spezKOND > 0 THEN 
                           provsp% = GSpezBWEinh% * europroeinh.spezKOND / FirmaEurEinh.stamm
                         ELSE 
                           provsp% = GSpezBWEinh%
                         END IF 
                       END IF 
                       provold% = provsp%
                       provdiff% = provsp% - provges%
                       provges% = provges% + provdiff%
                       provsp% = provdiff%
                       REM CALL Fehler("Spezprov hier","Provgesamt: " + STR$ (provges%,"999999.00") + "  Provdiff: " + STR$ (provdiff%,"999999.00"))
                       REM **************************************************************************
                     ELSE 
                       IF bewertung.zeingan1 < 0 AND sr.spezkond > 0 THEN 
                       END IF 
                     END IF 
                     CALL SpezProvisF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1)
                   END IF 
                 END IF 
                 IF einmalig.spezkond = "j" THEN 
                   einmaligerfolgt.spezkond = "j"
                   EinmDatum.spezkond = BuchungsDatum.zeingan1
                   STORE FILE "Spezkond"
                   UNLOCK CURRENT FILE "spezkond"
                   UNLOCK FILE "spezkond"
                 END IF 
                 anzagvA% = anzagvA% + 1
               WEND 
               provtotal% = 0
               REM ***** Einheitensystem Ende ***********************************
             ELSE 
               WHILE GAGvonAgentur$(anzagvA%) <> ""
                 QCodeVTMA$ = RIGHT$ (GAGvonAgentur$(anzagvA%),12)
                 SELECT FIRST FILE "Spezkond" INDEX QCodeVTMA.spezkond
                 SELECT KEY QCodeVTMA$ LOCK FILE "Spezkond" INDEX QCodeVTMA.spezkond
                 butext$ = Buchungstext.zeingan1 + " Spez.Prov."
                 IF Prozente.spezkond <> 0 THEN 
                   IF (vonCourtage.spezkond <> "j" AND vonPflege.spezkond <> "j") OR vonAP.spezkond = "j" THEN 
                     IF einmaligerfolgt.spezkond <> "j" THEN 
                       IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
                         SpezProzent% = SpezProzent% + Prozente.spezkond
                         IF APEurEinh.gekond > 0 THEN 
                           provsp1% = GBewertung% * APEurEinh.gekond / FirmaEurEinh.stamm
                         ELSE 
                           eurpeinh% = europroeinh.GEKOND
                           fireur% = FirmaEurEinh.stamm
                           provsp1% = GBewertung% * europroeinh.GEKOND / FirmaEurEinh.stamm
                         END IF 
                       ELSE 
                         SpezProzent% = SpezProzent% + Prozente.spezkond
                         provsp1% = ((GBewertung% / 100) * AP.gekond)
                       END IF 
                     
                       REM CALL Fehler("Spezprov hier","04.09.2005")
                       provsp% = ((provsp1% / 100) * Prozente.spezkond)
                       provges% = provges% - provsp%
                       provtotal% = provtotal% + provsp%
                       REM *************** SR von Spezialprovision zufÅgen **************************
                       IF sr.spezkond <> 0 THEN 
                         sr% = sr.spezkond
                         IF sr% <> 0 THEN 
                           Haftv% = srlz.spezkond
                           IF Haftv% > 0 THEN 
                             IF FÑlligkeit.zeingan1 > 0 THEN 
                               Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftv% * 30)
                             ELSE 
                               Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftv% * 30)
                             END IF 
                           ELSE 
                             Haftung% = 0
                           END IF 
                         ELSE 
                           Haftung% = 0
                           sr% = 0
                         END IF 
                         REM unbegrenzte Haftung ohne Auszahlung
                         IF Haftv% = - 1 THEN 
                           Haftung% = - 1
                         END IF 
                       ELSE 
                         Haftung% = 0
                         sr% = 0
                       END IF 
                       REM **************************************************************************
                     ELSE 
                       IF bewertung.zeingan1 < 0 AND sr.spezkond > 0 THEN 
                       END IF 
                     END IF 
                     CALL SpezProvisF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1)
                   END IF 
                 ELSE 
                   IF pauschale.spezkond <> 0 THEN 
                     IF (vonCourtage.spezkond <> "j" AND vonPflege.spezkond <> "j") OR vonAP.spezkond = "j" THEN 
                       IF einmaligerfolgt.spezkond <> "j" THEN 
                         IF GBewertung% >= 0 THEN 
                           SpezPausch% = SpezPPausch% + Pauschale.spezkond
                           provsp% = Pauschale.spezkond
                         END IF 
                         IF GBewertung% < 0 THEN 
                           SpezPausch% = SpezPPausch% + (Pauschale.spezkond * - 1)
                           provsp% = Pauschale.spezkond * - 1
                         END IF 
                       
                         provges% = provges% - provsp%
                         provtotal% = provtotal% + provsp%
                         REM *************** SR von Spezialprovision zufÅgen **************************
                         IF sr.spezkond <> 0 THEN 
                           sr% = sr.spezkond
                           IF sr% <> 0 THEN 
                             Haftv% = srlz.spezkond
                             IF Haftv% > 0 THEN 
                               IF FÑlligkeit.zeingan1 > 0 THEN 
                                 Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftv% * 30)
                               ELSE 
                                 Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftv% * 30)
                               END IF 
                             ELSE 
                               Haftung% = 0
                             END IF 
                           ELSE 
                             Haftung% = 0
                             sr% = 0
                           END IF 
                           REM unbegrenzte Haftung ohne Auszahlung
                           IF Haftv% = - 1 THEN 
                             Haftung% = - 1
                           END IF 
                         ELSE 
                           Haftung% = 0
                           sr% = 0
                         END IF 
                         REM ************************************************************************** 
                       ELSE 
                       END IF 
                       CALL SpezProvisF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1)
                     END IF 
                   END IF 
                 END IF 
                 IF einmalig.spezkond = "j" THEN 
                   einmaligerfolgt.spezkond = "j"
                   EinmDatum.spezkond = BuchungsDatum.zeingan1
                   STORE FILE "Spezkond"
                   UNLOCK CURRENT FILE "spezkond"
                   UNLOCK FILE "spezkond"
                 END IF 
                 anzagvA% = anzagvA% + 1
               WEND 
             END IF 
           

             REM *****15082001************neue Spezialprovision, die einem anderen Vermittler abgezogen wird*********
             anzagvFre% = 0
             REM GAGFrAgentur$(anzagvFre%,0)
             WHILE GAGFrAgentur$(anzagvFre%,0) <> ""
               QCodeVTMA$ = GAGFrAgentur$(anzagvFre%,0)
               vonCodeMA% = VAL (GAGFrAgentur$(anzagvFre%,1))
               SELECT FIRST FILE "Spezkond" INDEX QCodeVTMA.spezkond
               SELECT KEY QCodeVTMA$ LOCK FILE "Spezkond" INDEX QCodeVTMA.spezkond
               butext$ = Buchungstext.zeingan1 + " Spez.Prov."
               IF Prozente.spezkond <> 0 THEN 
                 IF (vonCourtage.spezkond <> "j" AND vonPflege.spezkond <> "j") OR vonAP.spezkond = "j" THEN 
                   IF einmaligerfolgt.spezkond <> "j" THEN 
                     SpezProzent% = SpezProzent% + Prozente.spezkond
                     provsp1% = ((GBewertung% / 100) * AP.gekond)
                     provsp% = ((provsp1% / 100) * Prozente.spezkond)
                     provges% = provges% - provsp%
                     provtotal% = provtotal% + provsp%
                     REM *************** SR von Spezialprovision zufÅgen **************************
                     IF sr.spezkond <> 0 THEN 
                       sr% = sr.spezkond
                       IF sr% <> 0 THEN 
                         Haftv% = srlz.spezkond
                         IF Haftv% > 0 THEN 
                           IF FÑlligkeit.zeingan1 > 0 THEN 
                             Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftv% * 30)
                           ELSE 
                             Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftv% * 30)
                           END IF 
                         ELSE 
                           Haftung% = 0
                         END IF 
                       ELSE 
                         Haftung% = 0
                         sr% = 0
                       END IF 
                       REM unbegrenzte Haftung ohne Auszahlung
                       IF Haftv% = - 1 THEN 
                         Haftung% = - 1
                       END IF 
                     ELSE 
                       Haftung% = 0
                       sr% = 0
                     END IF 
                     REM **************************************************************************
                   ELSE 
                     IF bewertung.zeingan1 < 0 AND sr.spezkond > 0 THEN 
                     END IF 
                   END IF 
                   CALL SpezProvisFF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,vonCodeMA%)
                 END IF 
               ELSE 
                 IF pauschale.spezkond <> 0 THEN 
                   IF (vonCourtage.spezkond <> "j" AND vonPflege.spezkond <> "j") OR vonAP.spezkond = "j" THEN 
                     IF einmaligerfolgt.spezkond <> "j" THEN 
                       IF GBewertung% >= 0 THEN 
                         SpezPausch% = SpezPPausch% + Pauschale.spezkond
                         provsp% = Pauschale.spezkond
                       END IF 
                       IF GBewertung% < 0 THEN 
                         SpezPausch% = SpezPPausch% + (Pauschale.spezkond * - 1)
                         provsp% = Pauschale.spezkond * - 1
                       END IF 
                       provges% = provges% - provsp%
                       provtotal% = provtotal% + provsp%
                       REM *************** SR von Spezialprovision zufÅgen **************************
                       IF sr.spezkond <> 0 THEN 
                         sr% = sr.spezkond
                         IF sr% <> 0 THEN 
                           Haftv% = srlz.spezkond
                           IF Haftv% > 0 THEN 
                             IF FÑlligkeit.zeingan1 > 0 THEN 
                               Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftv% * 30)
                             ELSE 
                               Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftv% * 30)
                             END IF 
                           ELSE 
                             Haftung% = 0
                           END IF 
                         ELSE 
                           Haftung% = 0
                           sr% = 0
                         END IF 
                         REM unbegrenzte Haftung ohne Auszahlung
                         IF Haftv% = - 1 THEN 
                           Haftung% = - 1
                         END IF 
                       ELSE 
                         Haftung% = 0
                         sr% = 0
                       END IF 
                       REM ************************************************************************** 
                     ELSE 
                     END IF 
                     CALL SpezProvisFF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,vonCodeMA%)
                   END IF 
                 END IF 
               END IF 
               IF einmalig.spezkond = "j" THEN 
                 einmaligerfolgt.spezkond = "j"
                 EinmDatum.spezkond = BuchungsDatum.zeingan1
                 STORE FILE "Spezkond"
                 UNLOCK CURRENT FILE "spezkond"
                 UNLOCK FILE "spezkond"
               END IF 
               anzagvFre% = anzagvFre% + 1
             WEND 
             REM *****************ENDE Spezialisteprovision ************************************************************************************** 
 



p1508200101: 


             REM prov% = ((GBewertung% / 100) * AP.gekond) - ((GBewertung% / 100) * SpezProzent%) - SpezPausch%
             REM prov% = provges%
             andisrtest% = sr.zeingan1
             andisrjn$ = SRjn.gekond
             prov% = ((GBewertung% / 100) * AP.gekond)
             IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
               IF APEurEinh.gekond > 0 THEN 
                 prov% = GBewertung% * APEurEinh.gekond / FirmaEurEinh.stamm
               ELSE 
                 prov% = GBewertung% * europroeinh.GEKOND / FirmaEurEinh.stamm
               END IF 
             END IF 
             vsumAP% = provtotal%
           ELSE 
             andisrtest% = sr.zeingan1
             andisrjn$ = SRjn.gekond
             prov% = ((GBewertung% / 100) * AP.gekond)
             IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
               IF APEurEinh.gekond > 0 THEN 
                 prov% = GBewertung% * APEurEinh.gekond / FirmaEurEinh.stamm
               ELSE 
                 prov% = GBewertung% * europroeinh.GEKOND / FirmaEurEinh.stamm
               END IF 
             END IF 
           END IF 
           REM**************** ELSE von GSpezko$="j"
         ELSE 
           prov% = ((GBewertung% / 100) * AP.gekond)
           IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
             IF APEurEinh.gekond > 0 THEN 
               prov% = GBewertung% * APEurEinh.gekond / FirmaEurEinh.stamm
             ELSE 
               euproeinh123% = europroeinh.GEKOND
               fieureinh% = FirmaEurEinh.stamm
               prov% = GBewertung% * europroeinh.GEKOND / FirmaEurEinh.stamm
             END IF 
           END IF 
         END IF 
         REM IF gez_Abschlu·.kvertrag <> "j" THEN 
         REM prov% = ((Bewertungssumme.KVERTRAG / 100) * AP.gekond)
         andisrtest% = sr.zeingan1
         andisrjn$ = SRjn.gekond
         ssok% = 0
         IF FirmaEinhTab.stamm LIKE "j" THEN 
           IF SRjn.gekond = "j" AND prov% <> 0 AND sr.zeingan1 = 0 THEN 
             ssok% = - 1
           END IF 
         ELSE 
           IF SRjn.gekond = "j" THEN 
             ssok% = - 1
           END IF 
         END IF 
         IF ssok% = - 1 THEN 
           sr% = sr.gekond
           IF sr% <> 0 THEN 
 
             IF Haftvertrag% > 0 THEN 
               IF FÑlligkeit.zeingan1 > 0 THEN 
                 Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftvertrag% * 30)
               ELSE 
                 Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftvertrag% * 30)
               END IF 
             ELSE 
               IF FÑlligkeit.zeingan1 > 0 THEN 
                 Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftung.gekond * 30)
               ELSE 
                 Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftung.gekond * 30)
               END IF 
             END IF 
           ELSE 
             Haftung% = 0
             sr% = 0
           END IF 
           REM unbegrenzte Haftung ohne Auszahlung
           IF Haftung.gekond = - 1 THEN 
             Haftung% = - 1
           END IF 
         ELSE 
           Haftung% = 0
           sr% = 0
           REM unbegrenzte Haftung ohne Auszahlung
           REM 161197 IF Haftung = - 1 THEN 
             REM 161197sr% = sr.gekond
             REM 161197Haftung% = 0
           REM 161197ELSE 
             REM 161197sr% = 0
             REM 161197Haftung% = 0
           REM 161197END IF 
         END IF 
         IF nÑchsteKond.VKOND = 0 THEN 
           prov% = prov% + VProvisNZ%
           VProvisNZ% = 0
         END IF 

         IF GBewertung% = 0 AND sr.zeingan1 <> 0 THEN 
           CALL RegProvisZ(Buchungstext.zeingan1,codema%,prov%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,remark2$)
         ELSE 
           IF kondart.zeingan1 = 0 THEN 
             IF prov% <> 0 OR sr% <> 0 THEN 
               CALL RegProvisZ(Buchungstext.zeingan1,codema%,prov%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,remark2$)
             END IF 
           ELSE 
             IF prov% <> 0 OR sr% <> 0 THEN 
               CALL RegProvisZ(Buchungstext.zeingan1,codema%,prov%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,remark2$)
             END IF 
           END IF 
         END IF 
       ELSE 
         SELECT KEY codema% FILE "maadr" INDEX codema.maadr
         CALL WriteLog("keine AP fÅr Vertrag: " + VS_Nr.KVERTRAG + " Agentur: " + nachname.maadr + ", " + vorname.maadr + ", " + Agenturnr.maadr + " definiert!")
       END IF 
     END IF 











     REM --------------------
     REM -- Dynamik AP
     REM --------------------
     REM CALL Fehler("","")
 
     IF kondart.zeingan1 = 4 THEN 
       IF DynamikPjn.gekond = "j" THEN 
         remark2$ = "Dynamik AP"
         IF FirmaEinhTab.stamm = "j" THEN 
           remark2$ = "Dynamik"
         END IF 
 
         REM BerÅcksichtigung der Spezialprovision
         REM prov% = ((GBewertung% / 100) * AP.gekond)
         IF GSpezko$ = "j" THEN 
           REM CALL Fehler("Test auf Spezialkonditionen","")
           IF codema.gekond = codema.kvertrag THEN 
             prov% = ((GBewertung% / 100) * DynamikProz.gekond)
             SpezProzent% = 0
             SpezPausch% = 0
             anzagvA% = 0
             provtotal% = 0
             WHILE GAGvonAgentur$(anzagvA%) <> ""
               QCodeVTMA$ = RIGHT$ (GAGvonAgentur$(anzagvA%),12)
               SELECT FIRST FILE "Spezkond" INDEX QCodeVTMA.spezkond
               SELECT KEY QCodeVTMA$ LOCK FILE "Spezkond" INDEX QCodeVTMA.spezkond
               butext$ = Buchungstext.zeingan1 + " Spez.Prov."
               IF Prozente.spezkond <> 0 THEN 
                 IF (vonCourtage.spezkond <> "j" AND vonPflege.spezkond <> "j") OR vonAP.spezkond = "j" THEN 
                   IF einmaligerfolgt.spezkond <> "j" THEN 
                     SpezProzent% = SpezProzent% + Prozente.spezkond
                     provsp1% = ((GBewertung% / 100) * DynamikProz.gekond)
                     provsp% = ((provsp1% / 100) * Prozente.spezkond)
                     provges% = provges% - provsp%
                     provtotal% = provtotal% + provsp%
                     REM *************** SR von Spezialprovision zufÅgen **************************
                     IF sr.spezkond <> 0 THEN 
                       sr% = sr.spezkond
                       IF sr% <> 0 THEN 
                         Haftv% = srlz.spezkond
                         IF Haftv% > 0 THEN 
                           IF FÑlligkeit.zeingan1 > 0 THEN 
                             Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftv% * 30)
                           ELSE 
                             Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftv% * 30)
                           END IF 
                         ELSE 
                           Haftung% = 0
                         END IF 
                       ELSE 
                         Haftung% = 0
                         sr% = 0
                       END IF 
                       REM unbegrenzte Haftung ohne Auszahlung
                       IF Haftv% = - 1 THEN 
                         Haftung% = - 1
                       END IF 
                     ELSE 
                       Haftung% = 0
                       sr% = 0
                     END IF 
                     REM **************************************************************************
                   ELSE 
                     IF bewertung.zeingan1 < 0 AND sr.spezkond > 0 THEN 
                     END IF 
                   END IF 
                   CALL SpezProvisF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1)
                 END IF 
               ELSE 
                 IF pauschale.spezkond <> 0 THEN 
                   IF (vonCourtage.spezkond <> "j" AND vonPflege.spezkond <> "j") OR vonAP.spezkond = "j" THEN 
                     IF einmaligerfolgt.spezkond <> "j" THEN 
                       IF GBewertung% >= 0 THEN 
                         SpezPausch% = SpezPPausch% + Pauschale.spezkond
                         provsp% = Pauschale.spezkond
                       END IF 
                       IF GBewertung% < 0 THEN 
                         SpezPausch% = SpezPPausch% + (Pauschale.spezkond * - 1)
                         provsp% = Pauschale.spezkond * - 1
                       END IF 
                       
                       provges% = provges% - provsp%
                       provtotal% = provtotal% + provsp%
                       REM *************** SR von Spezialprovision zufÅgen **************************
                       IF sr.spezkond <> 0 THEN 
                         sr% = sr.spezkond
                         IF sr% <> 0 THEN 
                           Haftv% = srlz.spezkond
                           IF Haftv% > 0 THEN 
                             IF FÑlligkeit.zeingan1 > 0 THEN 
                               Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftv% * 30)
                             ELSE 
                               Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftv% * 30)
                             END IF 
                           ELSE 
                             Haftung% = 0
                           END IF 
                         ELSE 
                           Haftung% = 0
                           sr% = 0
                         END IF 
                         REM unbegrenzte Haftung ohne Auszahlung
                         IF Haftv% = - 1 THEN 
                           Haftung% = - 1
                         END IF 
                       ELSE 
                         Haftung% = 0
                         sr% = 0
                       END IF 
                       REM ************************************************************************** 
                     ELSE 
                     END IF 
                     CALL SpezProvisF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1)
                   END IF 
                 END IF 
               END IF 
               IF einmalig.spezkond = "j" THEN 
                 einmaligerfolgt.spezkond = "j"
                 EinmDatum.spezkond = BuchungsDatum.zeingan1
                 STORE FILE "Spezkond"
                 UNLOCK CURRENT FILE "spezkond"
                 UNLOCK FILE "spezkond"
               END IF 
               anzagvA% = anzagvA% + 1
             WEND 
 
             REM GOTO p1508200101
 
 
             REM *****15082001************neue Spezialprovision, die einem anderen Vermittler abgezogen wird*********
             anzagvFre% = 0
             REM GAGFrAgentur$(anzagvFre%,0)
             WHILE GAGFrAgentur$(anzagvFre%,0) <> ""
               QCodeVTMA$ = GAGFrAgentur$(anzagvFre%,0)
               vonCodeMA% = VAL (GAGFrAgentur$(anzagvFre%,1))
               SELECT FIRST FILE "Spezkond" INDEX QCodeVTMA.spezkond
               SELECT KEY QCodeVTMA$ LOCK FILE "Spezkond" INDEX QCodeVTMA.spezkond
               butext$ = Buchungstext.zeingan1 + " Spez.Prov."
               IF Prozente.spezkond <> 0 THEN 
                 IF (vonCourtage.spezkond <> "j" AND vonPflege.spezkond <> "j") OR vonAP.spezkond = "j" THEN 
                   IF einmaligerfolgt.spezkond <> "j" THEN 
                     SpezProzent% = SpezProzent% + Prozente.spezkond
                     provsp1% = ((GBewertung% / 100) * DynamikProz.gekond)
                     provsp% = ((provsp1% / 100) * Prozente.spezkond)
                     provges% = provges% - provsp%
                     provtotal% = provtotal% + provsp%
                     REM *************** SR von Spezialprovision zufÅgen **************************
                     IF sr.spezkond <> 0 THEN 
                       sr% = sr.spezkond
                       IF sr% <> 0 THEN 
                         Haftv% = srlz.spezkond
                         IF Haftv% > 0 THEN 
                           IF FÑlligkeit.zeingan1 > 0 THEN 
                             Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftv% * 30)
                           ELSE 
                             Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftv% * 30)
                           END IF 
                         ELSE 
                           Haftung% = 0
                         END IF 
                       ELSE 
                         Haftung% = 0
                         sr% = 0
                       END IF 
                       REM unbegrenzte Haftung ohne Auszahlung
                       IF Haftv% = - 1 THEN 
                         Haftung% = - 1
                       END IF 
                     ELSE 
                       Haftung% = 0
                       sr% = 0
                     END IF 
                     REM **************************************************************************
                   ELSE 
                     IF bewertung.zeingan1 < 0 AND sr.spezkond > 0 THEN 
                     END IF 
                   END IF 
                   CALL SpezProvisFF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,vonCodeMA%)
                 END IF 
               ELSE 
                 IF pauschale.spezkond <> 0 THEN 
                   IF (vonCourtage.spezkond <> "j" AND vonPflege.spezkond <> "j") OR vonAP.spezkond = "j" THEN 
                     IF einmaligerfolgt.spezkond <> "j" THEN 
                       IF GBewertung% >= 0 THEN 
                         SpezPausch% = SpezPPausch% + Pauschale.spezkond
                         provsp% = Pauschale.spezkond
                       END IF 
                       IF GBewertung% < 0 THEN 
                         SpezPausch% = SpezPPausch% + (Pauschale.spezkond * - 1)
                         provsp% = Pauschale.spezkond * - 1
                       END IF 
                       provges% = provges% - provsp%
                       provtotal% = provtotal% + provsp%
                       REM *************** SR von Spezialprovision zufÅgen **************************
                       IF sr.spezkond <> 0 THEN 
                         sr% = sr.spezkond
                         IF sr% <> 0 THEN 
                           Haftv% = srlz.spezkond
                           IF Haftv% > 0 THEN 
                             IF FÑlligkeit.zeingan1 > 0 THEN 
                               Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftv% * 30)
                             ELSE 
                               Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftv% * 30)
                             END IF 
                           ELSE 
                             Haftung% = 0
                           END IF 
                         ELSE 
                           Haftung% = 0
                           sr% = 0
                         END IF 
                         REM unbegrenzte Haftung ohne Auszahlung
                         IF Haftv% = - 1 THEN 
                           Haftung% = - 1
                         END IF 
                       ELSE 
                         Haftung% = 0
                         sr% = 0
                       END IF 
                       REM ************************************************************************** 
                     ELSE 
                     END IF 
                     CALL SpezProvisFF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,vonCodeMA%)
                   END IF 
                 END IF 
               END IF 
               IF einmalig.spezkond = "j" THEN 
                 einmaligerfolgt.spezkond = "j"
                 EinmDatum.spezkond = BuchungsDatum.zeingan1
                 STORE FILE "Spezkond"
                 UNLOCK CURRENT FILE "spezkond"
                 UNLOCK FILE "spezkond"
               END IF 
               anzagvFre% = anzagvFre% + 1
             WEND 
             REM ******************************************************************************************************* 
 
 
 
 
p1508200101: 
 
 
             REM prov% = ((GBewertung% / 100) * AP.gekond) - ((GBewertung% / 100) * SpezProzent%) - SpezPausch%
             REM prov% = provges%
             prov% = ((GBewertung% / 100) * DynamikProz.gekond)
             vsumAP% = provtotal%
           ELSE 
             prov% = ((GBewertung% / 100) * DynamikProz.gekond)
           END IF 
         ELSE 
           prov% = ((GBewertung% / 100) * DynamikProz.gekond)
           IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
             IF DynEurEinh.gekond > 0 THEN 
               prov% = GBewertung% * DynEurEinh.gekond / FirmaEurEinh.stamm
             ELSE 
               prov% = GBewertung% * europroeinh.GEKOND / FirmaEurEinh.stamm
             END IF 
           END IF 
         END IF 
         REM IF gez_Abschlu·.kvertrag <> "j" THEN 
         REM prov% = ((Bewertungssumme.KVERTRAG / 100) * AP.gekond)
         
         REM IF SRjn.gekond = "j" THEN 
         REM IF SRjn.gekond = "j" AND prov% <> 0 AND sr.zeingan1 = 0 THEN 
         ssok% = 0
         IF FirmaEinhTab.stamm LIKE "j" THEN 
           IF SRjn.gekond = "j" AND prov% <> 0 AND sr.zeingan1 = 0 THEN ssok% = - 1
         ELSE 
           IF SRjn.gekond = "j" THEN ssok% = - 1
         END IF 
         IF ssok% = - 1 THEN 
           sr% = sr.gekond
           IF sr% <> 0 THEN 
 
             IF Haftvertrag% > 0 THEN 
               IF FÑlligkeit.zeingan1 > 0 THEN 
                 Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftvertrag% * 30)
               ELSE 
                 Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftvertrag% * 30)
               END IF 
             ELSE 
               IF FÑlligkeit.zeingan1 > 0 THEN 
                 Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftung.gekond * 30)
               ELSE 
                 Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftung.gekond * 30)
               END IF 
             END IF 
           ELSE 
             Haftung% = 0
             sr% = 0
           END IF 
           REM unbegrenzte Haftung ohne Auszahlung
           IF Haftung.gekond = - 1 THEN 
             Haftung% = - 1
           END IF 
         ELSE 
           Haftung% = 0
           sr% = 0
           REM unbegrenzte Haftung ohne Auszahlung
           REM 161197 IF Haftung = - 1 THEN 
             REM 161197sr% = sr.gekond
             REM 161197Haftung% = 0
           REM 161197ELSE 
             REM 161197sr% = 0
             REM 161197Haftung% = 0
           REM 161197END IF 
         END IF 
         IF nÑchsteKond.VKOND = 0 THEN 
           prov% = prov% + VProvisNZ%
           VProvisNZ% = 0
         END IF 
         IF GBewertung% = 0 AND sr.zeingan1 <> 0 THEN 
           IF kondart.zeingan1 = 4 THEN 
             CALL RegProvisZ(Buchungstext.zeingan1,codema%,prov%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,remark2$)
           END IF 
         ELSE 
           IF kondart.zeingan1 = 4 THEN 
             IF prov% <> 0 OR sr% <> 0 THEN CALL RegProvisZ(Buchungstext.zeingan1,codema%,prov%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,remark2$)
           END IF 
         END IF 
       ELSE 
         SELECT KEY codema% FILE "maadr" INDEX codema.maadr
         CALL WriteLog("keine Dynamik AP fÅr Vertrag: " + VS_Nr.KVERTRAG + " Agentur: " + nachname.maadr + ", " + vorname.maadr + ", " + Agenturnr.maadr + " definiert!")
       END IF 
     END IF 
 
 












 
       REM ----------------
       REM -- Vertragsdauer
       REM ----------------
 
       IF VDjn.gekond = "j" THEN 
         remark2$ = "VD"
         REM IF gez_Abschlu·.kvertrag <> "j" THEN 
           SELECT CASE VS_Dauer.KVERTRAG
           CASE VD1Dauer.gekond
             prov% = ((GBewertung% / 100) * VD1AP.gekond)
             sr% = VD1SR.gekond
             Haftung1% = VD1HZ.GEKOND
             IF Haftung1% = - 1 THEN Haftung% = 0
           CASE VD2Dauer.gekond
             prov% = ((GBewertung% / 100) * VD2AP.gekond)
             sr% = VD2SR.gekond
             Haftung1% = VD2HZ.GEKOND
             IF Haftung1% = - 1 THEN Haftung% = 0
           CASE VD3Dauer.gekond
             prov% = ((GBewertung% / 100) * VD3AP.gekond)
             sr% = VD3SR.gekond
             Haftung1% = VD3HZ.GEKOND
             IF Haftung1% = - 1 THEN Haftung% = 0
           CASE VD4Dauer.gekond
             prov% = ((GBewertung% / 100) * VD4AP.gekond)
             sr% = VD4SR.gekond
             Haftung1% = VD4HZ.GEKOND
             IF Haftung1% = - 1 THEN Haftung% = 0
           CASE VD5Dauer.gekond
             prov% = ((GBewertung% / 100) * VD5AP.gekond)
             sr% = VD5SR.gekond
             Haftung1% = VD5HZ.GEKOND
             IF Haftung1% = - 1 THEN Haftung% = 0
           END SELECT 
           IF sr% <> 0 AND Haftung% <> 0 THEN 
             REM Haftung% = (Haftung% * 30) + DAYS (VS_beginn.kvertrag)
             IF Haftvertrag% > 0 THEN 
               IF FÑlligkeit.zeingan1 > 0 THEN 
                 Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftvertrag% * 30)
               ELSE 
                 Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftvertrag% * 30)
               END IF 
             ELSE 
               IF FÑlligkeit.zeingan1 > 0 THEN 
                 Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftung1% * 30)
               ELSE 
                 Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftung1% * 30)
               END IF 
             END IF 
           ELSE 
             Haftung% = 0
           END IF 
           IF Haftung% = - 1 THEN 
             REM Haftung% = 0
           END IF 
           REM unbegrenzte Haftung ohne Auszahlung
           REM CALL RegProvis("VD: " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%)
           IF prov% <> 0 OR sr% <> 0 THEN CALL RegProvisZ(Buchungstext.zeingan1,codema%,prov%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,remark2$)
         REM END IF 
       END IF 
 
 
 
 
       REM IF APjn.gekond <> "j" AND VDjn.gekond <> "j" THEN 
         REM keine AP Kondit definiert
         REM SELECT KEY codema% FILE "maadr" INDEX codema.maadr
         REM CALL WriteLog("keine AP fÅr Vertrag: " + VS_Nr.KVERTRAG + " Agentur: " + nachname.maadr + ", " + vorname.maadr + ", " + Agenturnr.maadr + " definiert!")
       REM END IF 
     REM END IF 
 
     REM ------------------
     REM -- Pflegeprovision
     REM ------------------
     REM 13.10.94  - keine Berechung der Stornoreserve
     pflege% = 0
     PflegeGez$ = "n"
     
     IF kondart.zeingan1 = 2 THEN 
       REM CALL Fehler("Pflege",vs_nr.kvertrag)
       IF PflegeJN.gekond = "j" THEN 
         remark2$ = "Pflege"
         IF GSpezko$ = "j" THEN 
           REM CALL Fehler("Test auf Spezialkonditionen","")
           IF codema.gekond = codema.kvertrag THEN 
             prov% = ((GBewertung% / 100) * PflegeProvi.gekond)
             IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
               IF PflEurEinh.gekond > 0 THEN 
                 prov% = (GBewertung%) * (PflEurEinh.gekond / FirmaEurEinh.stamm)
               ELSE 
                 prov% = (GBewertung%) * (europroeinh.GEKOND / FirmaEurEinh.stamm)
               END IF 
             END IF 
             SpezProzent% = 0
             SpezPausch% = 0
             anzagvA% = 0
             provtotal% = 0
             GSpezProzEinh% = 0
             GSpezBWEinh% = 0
 
               WHILE GAGvonAgentur$(anzagvA%) <> ""
                 QCodeVTMA$ = RIGHT$ (GAGvonAgentur$(anzagvA%),12)
                 SELECT FIRST FILE "Spezkond" INDEX QCodeVTMA.spezkond
                 SELECT KEY QCodeVTMA$ LOCK FILE "Spezkond" INDEX QCodeVTMA.spezkond
                 butext$ = Buchungstext.zeingan1 + " Spez.Prov."
                 IF Prozente.spezkond <> 0 THEN 
                   IF (vonCourtage.spezkond <> "j" AND vonAP.spezkond <> "j") OR vonPflege.spezkond = "j" THEN 
                     IF einmaligerfolgt.spezkond <> "j" THEN 
                       SpezProzent% = SpezProzent% + Prozente.spezkond
                       IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
                         IF PflEurEinh.gekond > 0 THEN 
                           provsp1% = (GBewertung%) * (PflEurEinh.gekond / FirmaEurEinh.stamm)
                         ELSE 
                           provsp1% = (GBewertung%) * (europroeinh.GEKOND / FirmaEurEinh.stamm)
                         END IF 
                       ELSE 
                         provsp1% = ((GBewertung% / 100) * PflegeProvi.gekond)
                       END IF 
                       provsp% = ((provsp1% / 100) * Prozente.spezkond)
                       provges% = provges% - provsp%
                       provtotal% = provtotal% + provsp%
                       CALL SpezProvisF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1)
                     END IF 
                   END IF 
                 ELSE 
                   IF pauschale.spezkond <> 0 THEN 
                     IF (vonCourtage.spezkond <> "j" AND vonAP.spezkond <> "j") OR vonPflege.spezkond = "j" THEN 
                       IF einmaligerfolgt.spezkond <> "j" THEN 
                         IF GBewertung% >= 0 THEN 
                           SpezPausch% = SpezPPausch% + Pauschale.spezkond
                           provsp% = Pauschale.spezkond
                         END IF 
                         IF GBewertung% < 0 THEN 
                           SpezPausch% = SpezPPausch% + (Pauschale.spezkond * - 1)
                           provsp% = Pauschale.spezkond * - 1
                         END IF 
                         provges% = provges% - provsp%
                         provtotal% = provtotal% + provsp%
                         CALL SpezProvisF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1)
                       END IF 
                     END IF 
                   END IF 
                 END IF 
                 IF einmalig.spezkond = "j" THEN 
                   einmaligerfolgt.spezkond = "j"
                   EinmDatum.spezkond = BuchungsDatum.zeingan1
                   STORE FILE "Spezkond"
                   UNLOCK CURRENT FILE "spezkond"
                   UNLOCK FILE "spezkond"
                 END IF 
                 anzagvA% = anzagvA% + 1
               WEND 

             REM ************* neue Spezialprovision  Pflege *************************************************************
             anzagvFre% = 0
             REM GAGFrAgentur$(anzagvFre%,0)
             WHILE GAGFrAgentur$(anzagvFre%,0) <> ""
               QCodeVTMA$ = GAGFrAgentur$(anzagvFre%,0)
               vonCodeMA% = VAL (GAGFrAgentur$(anzagvFre%,1))
               SELECT FIRST FILE "Spezkond" INDEX QCodeVTMA.spezkond
               SELECT KEY QCodeVTMA$ LOCK FILE "Spezkond" INDEX QCodeVTMA.spezkond
               butext$ = Buchungstext.zeingan1 + " Spez.Prov."
               IF Prozente.spezkond <> 0 THEN 
                 IF (vonCourtage.spezkond <> "j" AND vonAP.spezkond <> "j") OR vonPflege.spezkond = "j" THEN 
                   IF einmaligerfolgt.spezkond <> "j" THEN 
                     SpezProzent% = SpezProzent% + Prozente.spezkond
                     provsp1% = ((GBewertung% / 100) * PflegeProvi.gekond)
                     provsp% = ((provsp1% / 100) * Prozente.spezkond)
                     provges% = provges% - provsp%
                     provtotal% = provtotal% + provsp%
                     CALL SpezProvisFF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,vonCodeMA%)
                   END IF 
                 END IF 
               ELSE 
                 IF pauschale.spezkond <> 0 THEN 
                   IF (vonCourtage.spezkond <> "j" AND vonAP.spezkond <> "j") OR vonPflege.spezkond = "j" THEN 
                     IF einmaligerfolgt.spezkond <> "j" THEN 
                       IF GBewertung% >= 0 THEN 
                         SpezPausch% = SpezPPausch% + Pauschale.spezkond
                         provsp% = Pauschale.spezkond
                       END IF 
                       IF GBewertung% < 0 THEN 
                         SpezPausch% = SpezPPausch% + (Pauschale.spezkond * - 1)
                         provsp% = Pauschale.spezkond * - 1
                       END IF 
                       provges% = provges% - provsp%
                       provtotal% = provtotal% + provsp%
                       CALL SpezProvisFF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,vonCodeMA%)
                     END IF 
                   END IF 
                 END IF 
               END IF 
               IF einmalig.spezkond = "j" THEN 
                 einmaligerfolgt.spezkond = "j"
                 EinmDatum.spezkond = BuchungsDatum.zeingan1
                 STORE FILE "Spezkond"
                 UNLOCK CURRENT FILE "spezkond"
                 UNLOCK FILE "spezkond"
               END IF 
               anzagvFre% = anzagvFre% + 1
             WEND 
             REM **********************Ende neue Spezialprov Pflege ******************************************************



             REM prov% = ((GBewertung% / 100) * PflegeProvi.gekond) - ((GBewertung% / 100) * SpezProzent%) - SpezPausch%
             REM prov% = provges%
             prov% = (((GBewertung%) / 100) * PflegeProvi.gekond)
             IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
               IF PflEurEinh.gekond > 0 THEN 
                 prov% = GBewertung% * PflEurEinh.gekond / FirmaEurEinh.stamm
               ELSE 
                 prov% = GBewertung% * europroeinh.GEKOND / FirmaEurEinh.stamm
               END IF 
             END IF 
             REM vsumAP% = provtotal%
             vsumPP% = provtotal%
           ELSE 
             prov% = (((GBewertung%) / 100) * PflegeProvi.gekond)
             IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
               aeuroproei% = europroeinh.gekond
               aFirmaEui% = FirmaEurEinh.stamm
               IF PflEurEinh.gekond > 0 THEN 
                 prov% = GBewertung% * PflEurEinh.gekond / FirmaEurEinh.stamm
               ELSE 
                 prov% = GBewertung% * europroeinh.GEKOND / FirmaEurEinh.stamm
               END IF 
             END IF 
           END IF 
         ELSE 
           prov% = (((GBewertung%) / 100) * PflegeProvi.gekond)
           IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
             aeuroproei% = europroeinh.gekond
             aFirmaEui% = FirmaEurEinh.stamm
             IF PflEurEinh.gekond > 0 THEN 
               prov% = GBewertung% * PflEurEinh.gekond / FirmaEurEinh.stamm
             ELSE 
               prov% = GBewertung% * europroeinh.GEKOND / FirmaEurEinh.stamm
             END IF 
           END IF 
         END IF 
         REM prov% = (((GBewertung%) / 100) * PflegeProvi.gekond)
         pflegeGez$ = "j"
         pflege% = 1
         sr% = 0
         Haftung% = 0
         IF nÑchsteKond.VKOND = 0 THEN 
           prov% = prov% + VProvisNZ%
           VProvisNZ% = 0
         END IF 
         IF PflegeGez$ = "j" AND prov% <> 0 THEN CALL RegProvisZ(Buchungstext.zeingan1,codema%,prov%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,remark2$)
       ELSE 
         REM keine Pflege Kondit definiert
         SELECT KEY codema% FILE "maadr" INDEX codema.maadr
         IF GAFSK$ LIKE "TRUE" THEN 
           IF pfleganzfehl.gekond = "" THEN 
             CALL WriteLog("keine Pflege fÅr Vertrag: " + VS_Nr.KVERTRAG + " Agentur: " + nachname.maadr + ", " + vorname.maadr + ", " + Agenturnr.maadr + " definiert!")
           END IF 
         ELSE 
           CALL WriteLog("keine Pflege fÅr Vertrag: " + VS_Nr.KVERTRAG + " Agentur: " + nachname.maadr + ", " + vorname.maadr + ", " + Agenturnr.maadr + " definiert!")
         END IF 
       END IF 
     END IF 
  
   


     REM ------------------
     REM -- Betreuung
     REM ------------------
     REM 13.10.94  - keine Berechung der Stornoreserve
     pflege% = 0
     PflegeGez$ = "n"
     
     IF kondart.zeingan1 = 5 THEN 
       REM CALL Fehler("Betreuung","")
       IF BetreuJN.gekond = "j" THEN 
         remark2$ = "Betreuung"
         IF FirmaEinhTab.stamm = "j" THEN 
           remark2$ = "Folge"
         END IF 
         IF GSpezko$ = "j" THEN 
           REM CALL Fehler("Test auf Spezialkonditionen","")
           IF codema.gekond = codema.kvertrag THEN 
             prov% = ((GBewertung% / 100) * BetreuProz.gekond)
             SpezProzent% = 0
             SpezPausch% = 0
             anzagvA% = 0
             provtotal% = 0
             WHILE GAGvonAgentur$(anzagvA%) <> ""
               QCodeVTMA$ = RIGHT$ (GAGvonAgentur$(anzagvA%),12)
               SELECT FIRST FILE "Spezkond" INDEX QCodeVTMA.spezkond
               SELECT KEY QCodeVTMA$ LOCK FILE "Spezkond" INDEX QCodeVTMA.spezkond
               butext$ = Buchungstext.zeingan1 + " Spez.Prov."
               IF Prozente.spezkond <> 0 THEN 
                 IF (vonCourtage.spezkond <> "j" AND vonAP.spezkond <> "j") OR vonPflege.spezkond = "j" THEN 
                   IF einmaligerfolgt.spezkond <> "j" THEN 
                     SpezProzent% = SpezProzent% + Prozente.spezkond
                     provsp1% = ((GBewertung% / 100) * PflegeProvi.gekond)
                     provsp% = ((provsp1% / 100) * Prozente.spezkond)
                     provges% = provges% - provsp%
                     provtotal% = provtotal% + provsp%
                     CALL SpezProvisF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1)
                   END IF 
                 END IF 
               ELSE 
                 IF pauschale.spezkond <> 0 THEN 
                   IF (vonCourtage.spezkond <> "j" AND vonAP.spezkond <> "j") OR vonPflege.spezkond = "j" THEN 
                     IF einmaligerfolgt.spezkond <> "j" THEN 
                       IF GBewertung% >= 0 THEN 
                         SpezPausch% = SpezPPausch% + Pauschale.spezkond
                         provsp% = Pauschale.spezkond
                       END IF 
                       IF GBewertung% < 0 THEN 
                         SpezPausch% = SpezPPausch% + (Pauschale.spezkond * - 1)
                         provsp% = Pauschale.spezkond * - 1
                       END IF 
                       provges% = provges% - provsp%
                       provtotal% = provtotal% + provsp%
                       CALL SpezProvisF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1)
                     END IF 
                   END IF 
                 END IF 
               END IF 
               IF einmalig.spezkond = "j" THEN 
                 einmaligerfolgt.spezkond = "j"
                 EinmDatum.spezkond = BuchungsDatum.zeingan1
                 STORE FILE "Spezkond"
                 UNLOCK CURRENT FILE "spezkond"
                 UNLOCK FILE "spezkond"
               END IF 
               anzagvA% = anzagvA% + 1
             WEND 
 
 
             REM ************* neue Spezialprovision  Pflege *************************************************************
             anzagvFre% = 0
             REM GAGFrAgentur$(anzagvFre%,0)
             WHILE GAGFrAgentur$(anzagvFre%,0) <> ""
               QCodeVTMA$ = GAGFrAgentur$(anzagvFre%,0)
               vonCodeMA% = VAL (GAGFrAgentur$(anzagvFre%,1))
               SELECT FIRST FILE "Spezkond" INDEX QCodeVTMA.spezkond
               SELECT KEY QCodeVTMA$ LOCK FILE "Spezkond" INDEX QCodeVTMA.spezkond
               butext$ = Buchungstext.zeingan1 + " Spez.Prov."
               IF Prozente.spezkond <> 0 THEN 
                 IF (vonCourtage.spezkond <> "j" AND vonAP.spezkond <> "j") OR vonPflege.spezkond = "j" THEN 
                   IF einmaligerfolgt.spezkond <> "j" THEN 
                     SpezProzent% = SpezProzent% + Prozente.spezkond
                     provsp1% = ((GBewertung% / 100) * BetreuProz.gekond)
                     provsp% = ((provsp1% / 100) * Prozente.spezkond)
                     provges% = provges% - provsp%
                     provtotal% = provtotal% + provsp%
                     CALL SpezProvisFF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,vonCodeMA%)
                   END IF 
                 END IF 
               ELSE 
                 IF pauschale.spezkond <> 0 THEN 
                   IF (vonCourtage.spezkond <> "j" AND vonAP.spezkond <> "j") OR vonPflege.spezkond = "j" THEN 
                     IF einmaligerfolgt.spezkond <> "j" THEN 
                       IF GBewertung% >= 0 THEN 
                         SpezPausch% = SpezPPausch% + Pauschale.spezkond
                         provsp% = Pauschale.spezkond
                       END IF 
                       IF GBewertung% < 0 THEN 
                         SpezPausch% = SpezPPausch% + (Pauschale.spezkond * - 1)
                         provsp% = Pauschale.spezkond * - 1
                       END IF 
                       provges% = provges% - provsp%
                       provtotal% = provtotal% + provsp%
                       CALL SpezProvisFF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,vonCodeMA%)
                     END IF 
                   END IF 
                 END IF 
               END IF 
               IF einmalig.spezkond = "j" THEN 
                 einmaligerfolgt.spezkond = "j"
                 EinmDatum.spezkond = BuchungsDatum.zeingan1
                 STORE FILE "Spezkond"
                 UNLOCK CURRENT FILE "spezkond"
                 UNLOCK FILE "spezkond"
               END IF 
               anzagvFre% = anzagvFre% + 1
             WEND 
             REM **********************Ende neue Spezialprov Pflege ******************************************************
 
 
 
             REM prov% = ((GBewertung% / 100) * PflegeProvi.gekond) - ((GBewertung% / 100) * SpezProzent%) - SpezPausch%
             REM prov% = provges%
             prov% = (((GBewertung%) / 100) * BetreuProz.gekond)
             vsumPP% = provtotal%
           ELSE 
             prov% = (((GBewertung%) / 100) * BetreuProz.gekond)
           END IF 
         ELSE 
           prov% = (((GBewertung%) / 100) * BetreuProz.gekond)
           IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
             IF FolgEurEinh.gekond > 0 THEN 
               prov% = GBewertung% * FolgEurEinh.gekond / FirmaEurEinh.stamm
             ELSE 
               prov% = GBewertung% * europroeinh.GEKOND / FirmaEurEinh.stamm
             END IF 
           END IF 
         END IF 
         REM prov% = (((GBewertung%) / 100) * PflegeProvi.gekond)
         pflegeGez$ = "j"
         pflege% = 1
         sr% = 0
         Haftung% = 0
         IF nÑchsteKond.VKOND = 0 THEN 
           prov% = prov% + VProvisNZ%
           VProvisNZ% = 0
         END IF 
         IF PflegeGez$ = "j" AND prov% <> 0 THEN CALL RegProvisZ(Buchungstext.zeingan1,codema%,prov%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,remark2$)
       ELSE 
         REM keine AP Kondit definiert
         SELECT KEY codema% FILE "maadr" INDEX codema.maadr
         CALL WriteLog("keine Betreuung-Pflege fÅr Vertrag: " + VS_Nr.KVERTRAG + " Agentur: " + nachname.maadr + ", " + vorname.maadr + ", " + Agenturnr.maadr + " definiert!")
       END IF 
     END IF 
 




  
 
     REM -----------
     REM -- Courtage
     REM -----------
     REM CALL Fehler("Courtage","Andiiiiii")
     IF vs_nr.kvertrag LIKE "A2180488401" THEN 
       i222% = i222% + 1
       REM CALL Fehler(vs_nr.zeingan1, STR$ (i222%) + "   " + STR$ (TgezProvAnz.kvfael))
     END IF 
     GAFSKLALA% = 0
     CourtGez$ = "n"
     IF kondart.zeingan1 = 1 THEN 
       REM CALL Fehler("Courtage","Andiiiiii")
       IF CourtageJN.gekond = "j" THEN 
         remark2$ = "Courtage"
         lala% = 0
         IF EXISTS (codevp.kvertrag,codevp.vpgekond) THEN 
           SELECT KEY codevp.kvertrag FILE "VPGEKOND" INDEX codevp.vpgekond
           IF afsk.vpgekond LIKE "j" THEN lala% = - 1
         END IF 
         IF GAFSK$ = "TRUE" AND lala% = - 1 THEN 
           REM CALL Fehler("Courtage","Andiiiiii-AFSK")
           GAFSKLALA% = - 1
           remark2$ = ""
           SELECT FIRST FILE "KVFAEL" INDEX codevt.kvfael
           SELECT KEY lfdnr.kvertrag LOCK FILE "KVFAEL" INDEX codevt.kvfael
           REM 03092002
           IF abserledigt.kvfael LIKE "j" THEN 
             IF nÑchsteKond.VKOND = 0 THEN 
               IF TgezProvAnz.kvfael > 1 THEN 
                 GBewertung% = GBewertungOrig%
                 gezProv.kvfael = gezProv.kvfael + Bewertung.zeingan1
                 IF Bewertung.zeingan1 > 0 THEN 
                   gezProvAnz.kvfael = gezProvAnz.kvfael + 1
                 ELSE 
                   gezProvAnz.kvfael = gezProvAnz.kvfael - 1
                 END IF 
                 STORE FILE "KVFAEL"
                 UNLOCK CURRENT FILE "KVFAEL"
                 prov% = ((GBewertung% / 100) * Courtage.gekond)
                 GOTO cberafs03092002
               END IF 
             ELSE 
               GOTO cp190620021
             END IF 
           END IF 
           IF erwProvAnz.kvfael = 0 THEN erwProvAnz.kvfael = 4
           erwProv% = Beitrag.kvertrag * erwProvAnz.kvfael
           IF fÑlligam.kvfael < 1 THEN fÑlligam.kvfael = ProviAB.kvertrag
           IF VMProv.kvfael = 0 THEN 
             VMProv.kvfael = erwProv%
             VMProvEu.kvfael = VAL ( STR$ (VMProv.kvfael / umrechnung.kvertrag,"999999999.00"))
           END IF 
           IF erledigt.kvfael = "j" AND fÑlligam.kvfael > 0 THEN 
             IF TgezProvAnz.kvfael > 1 THEN 
               gez% = gezProv.kvfael + Bewertung.zeingan1
             ELSE 
               gez% = gezProv.kvfael
             END IF 
             
             IF gez% < erwProv% OR autokuend.kvfael = "j" THEN erledigt.kvfael = "n"
           END IF 
           weitab% = - 1
           IF autokuend.kvfael = "j" THEN 
             REM es wurde autom.gekÅndigt, da fehlender Beitrag
             b% = DAYS (calcdate$)
             b$ = DATE$ (b%,"mm.yyyy.0d")
             bumon% = VAL ( LEFT$ (b$,2))
             erwProvAnz% = erwProvAnz.kvfael
             IF erwProvAnz.kvfael = 0 THEN erwProvAnz% = 4
             erwProv% = Beitrag.kvertrag * erwProvAnz%
             test1% = VAL ( LEFT$ ( DATE$ (fÑlligam.kvfael,"mm.yyyy.0d"),2)) + erwProvAnz%
             IF test1% < bumon% THEN 
               gezProv% = gezProv.kvfael + Bewertung.zeingan1 + 2.0
               IF gezProv% < erwProv% THEN 
                 REM die ZE gleichen nicht die geforderten MonatsbeitrÑge aus
                 weitab% = 0
               ELSE 
                 StornoBetrag.kvfael = 0
               END IF 
             END IF 
           END IF 
           IF erledigt.kvfael <> "j" AND fÑlligam.kvfael > 0 THEN 
             IF codema.kvertrag = codema.gekond AND weitab% = - 1 THEN 
               REM 19062002
               REM CALL Fehler("","")
               anz% = Bewertung.zeingan1 / Beitrag.kvertrag
               gezProv.kvfael = gezProv.kvfael + Bewertung.zeingan1
               gezProvEu.kvfael = VAL ( STR$ (gezProv.kvfael / umrechnung.zeingan1,"999999999.00"))
               IF Bewertung.zeingan1 < 0 THEN 
                 gezProvAnz.kvfael = gezProvAnz.kvfael + anz%
                 TgezProvAnz.kvfael = TgezProvAnz.kvfael + 1
                 REM jetzt mu· dem Vermittler die VMProv storniert werden
                 REM GBewertung% = VMProv.kvfael * - 1
                 GBewertung% = 0
                 StornoBetrag.kvfael = StornoBetrag.kvfael + GBewertung%
                 StornoBetrEU.kvfael = VAL ( STR$ (StornoBetrag.kvfael / umrechnung.zeingan1,"999999999.00"))
                 StornoDat.kvfael = Buchungsdatum.zeingan1
                 REM gez_Abschlu·.kvfael = "n"
                 REM gezahltam.kvfael = 0
               ELSE 
                 REM Bewertung >0 
                 gezProvAnz.kvfael = gezProvAnz.kvfael + anz%
                 TgezProvAnz.kvfael = TgezProvAnz.kvfael + 1
                 gezahltam.kvfael = Buchungsdatum.Zeingan1
                 IF StornoBetrag.kvfael < 0 THEN 
                   StornoBetrag.kvfael = StornoBetrag.kvfael + VMProv.kvfael
                   StornoBetrEU.kvfael = VAL ( STR$ (StornoBetrag.kvfael / umrechnung.zeingan1,"999999999.00"))
                   StornoDat.kvfael = Buchungsdatum.zeingan1
                 END IF 
                 IF StornoBetrag.kvfael >= 0 THEN 
                   StornoDat.kvfael = 0
                 END IF 
                 IF gez_Abschlu·.kvfael = "j" THEN 
                   GBewertung% = 0
                 END IF 
                 IF gez_Abschlu·.kvfael <> "j" AND StornoDat.kvfael < 1 AND gezProvAnz.kvfael > 0 THEN 
                   GBewertung% = VMProv.kvfael
                   gez_Abschlu·.kvfael = "j"
                   erwProv% = Beitrag.kvertrag * erwProvAnz.kvfael
                   IF erwProv% >= gezProv.kvfael THEN erledigt.kvfael = "j"
                 END IF 
               END IF 

               STORE FILE "KVFAEL"
               UNLOCK CURRENT FILE "KVFAEL"
             ELSE 
               REM wenn nicht codema.kvertrag = codema.gekond
               IF nÑchsteKond.VKOND = 0 THEN 
                 IF weitab% = - 1 THEN 
                   IF TgezProvAnz.kvfael > 1 THEN 
                     GBewertung% = GBewertungOrig%
                   ELSE 
                     vertrprov% = 0
                     vsumC% = 0
                     vsumA% = 0
                     vsumPP% = 0
                     vf% = (VMProv.kvfael * - 1)
                     remark2$ = "Erstzahl."
                     GBewertung% = GBewertungOrig% + (VMProv.kvfael * - 1)
                   END IF 
                 ELSE 
                   anz% = Bewertung.zeingan1 / Beitrag.kvertrag
                   gezProvAnz.kvfael = gezProvAnz.kvfael + anz%
                   gezProv.kvfael = gezProv.kvfael + Bewertung.zeingan1
                   gezProvEu.kvfael = VAL ( STR$ (gezProv.kvfael / umrechnung.zeingan1,"999999999.00"))
                   STORE FILE "KVFAEL"
                   UNLOCK CURRENT FILE "KVFAEL"
                   GBewertung% = Bewertung.zeingan1
                 END IF 
               ELSE 
                 IF weitab% = - 1 THEN 
                   IF TgezProvAnz.kvfael < 2 THEN 
                     GBewertung% = VMProv.kvfael
                   ELSE 
                     GBewertung% = 0
                   END IF 
                 ELSE 
                   GBewertung% = 0
                 END IF 
               END IF 
             END IF 
           ELSE 
             GOTO end0911971
           END IF 
         END IF 
         IF GSpezko$ = "j" THEN 
           IF codema.gekond = codema.kvertrag THEN 
             REM CALL Fehler("Test auf Spezialkonditionen","")
             provges% = ((GBewertung% / 100) * Courtage.gekond)
             IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" AND SpezProvNormal.stamm = "j" THEN 
               IF APEurEinh.gekond > 0 THEN 
                 provges% = GBewertung% * APEurEinh.gekond / FirmaEurEinh.stamm
               ELSE 
                 eurpeinh% = europroeinh.GEKOND
                 fireur% = FirmaEurEinh.stamm
                 provges% = GBewertung% * europroeinh.GEKOND / FirmaEurEinh.stamm
               END IF 
             END IF 
             SpezProzent% = 0
             SpezPausch% = 0
             anzagvA% = 0
             provtotal% = 0
             WHILE GAGvonAgentur$(anzagvA%) <> ""
               QCodeVTMA$ = RIGHT$ (GAGvonAgentur$(anzagvA%),12)
               SELECT FIRST FILE "Spezkond" INDEX QCodeVTMA.spezkond
               SELECT KEY QCodeVTMA$ LOCK FILE "Spezkond" INDEX QCodeVTMA.spezkond
               butext$ = Buchungstext.zeingan1 + " Spez.Prov."
               IF Prozente.spezkond <> 0 THEN 
                 IF (vonAP.spezkond <> "j" AND vonPflege.spezkond <> "j") OR vonCourtage.spezkond = "j" THEN 
                   IF einmaligerfolgt.spezkond <> "j" THEN 
                     SpezProzent% = SpezProzent% + Prozente.spezkond
                     provsp1% = ((GBewertung% / 100) * Courtage.gekond)
                     IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" AND SpezProvNormal.stamm = "j" THEN 
                       IF APEurEinh.gekond > 0 THEN 
                         provsp1% = GBewertung% * APEurEinh.gekond / FirmaEurEinh.stamm
                       ELSE 
                         eurpeinh% = europroeinh.GEKOND
                         fireur% = FirmaEurEinh.stamm
                         provsp1% = GBewertung% * europroeinh.GEKOND / FirmaEurEinh.stamm
                       END IF 
                     END IF 
                     provsp% = ((provsp1% / 100) * Prozente.spezkond)
                     provges% = provges% - provsp%
                     provtotal% = provtotal% + provsp%
                     REM *************** SR von Spezialprovision zufÅgen **************************
                     IF sr.spezkond <> 0 THEN 
                       sr% = sr.spezkond
                       IF sr% <> 0 THEN 
                         Haftv% = srlz.spezkond
                         IF Haftv% > 0 THEN 
                           IF FÑlligkeit.zeingan1 > 0 THEN 
                             Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftv% * 30)
                           ELSE 
                             Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftv% * 30)
                           END IF 
                         ELSE 
                           Haftung% = 0
                         END IF 
                       ELSE 
                         Haftung% = 0
                         sr% = 0
                       END IF 
                       REM unbegrenzte Haftung ohne Auszahlung
                       IF Haftv% = - 1 THEN 
                         Haftung% = - 1
                       END IF 
                     ELSE 
                       Haftung% = 0
                       sr% = 0
                     END IF 
                     REM ************************************************************************** 
                   ELSE 
                   END IF 
                   CALL SpezProvisF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1)
                 END IF 
               ELSE 
                 IF pauschale.spezkond <> 0 THEN 
                   IF (vonAP.spezkond <> "j" AND vonPflege.spezkond <> "j") OR vonCourtage.spezkond = "j" THEN 
                     IF einmaligerfolgt.spezkond <> "j" THEN 
                       IF GBewertung% >= 0 THEN 
                         SpezPausch% = SpezPPausch% + Pauschale.spezkond
                         provsp% = Pauschale.spezkond
                       END IF 
                       IF GBewertung% < 0 THEN 
                         SpezPausch% = SpezPPausch% + (Pauschale.spezkond * - 1)
                         provsp% = Pauschale.spezkond * - 1
                       END IF 
                       provges% = provges% - provsp%
                       provtotal% = provtotal% + provsp%
                       REM *************** SR von Spezialprovision zufÅgen **************************
                       IF sr.spezkond <> 0 THEN 
                         sr% = sr.spezkond
                         IF sr% <> 0 THEN 
                           Haftv% = srlz.spezkond
                           IF Haftv% > 0 THEN 
                             IF FÑlligkeit.zeingan1 > 0 THEN 
                               Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftv% * 30)
                             ELSE 
                               Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftv% * 30)
                             END IF 
                           ELSE 
                             Haftung% = 0
                           END IF 
                         ELSE 
                           Haftung% = 0
                           sr% = 0
                         END IF 
                         REM unbegrenzte Haftung ohne Auszahlung
                         IF Haftv% = - 1 THEN 
                           Haftung% = - 1
                         END IF 
                       ELSE 
                         Haftung% = 0
                         sr% = 0
                       END IF 
                       REM ************************************************************************** 
                     ELSE 
                     END IF 
                     CALL SpezProvisF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1)
                   END IF 
                 END IF 
               END IF 
               IF einmalig.spezkond = "j" THEN 
                 einmaligerfolgt.spezkond = "j"
                 EinmDatum.spezkond = BuchungsDatum.zeingan1
                 STORE FILE "Spezkond"
                 UNLOCK CURRENT FILE "spezkond"
                 UNLOCK FILE "spezkond"
               END IF 
               anzagvA% = anzagvA% + 1
             WEND 

             REM ******************* neue Spezialprovision Courtage ************************************************
             anzagvFre% = 0
             REM GAGFrAgentur$(anzagvFre%,0)
             WHILE GAGFrAgentur$(anzagvFre%,0) <> ""
               QCodeVTMA$ = GAGFrAgentur$(anzagvFre%,0)
               vonCodeMA% = VAL (GAGFrAgentur$(anzagvFre%,1))
               SELECT FIRST FILE "Spezkond" INDEX QCodeVTMA.spezkond
               SELECT KEY QCodeVTMA$ LOCK FILE "Spezkond" INDEX QCodeVTMA.spezkond
               butext$ = Buchungstext.zeingan1 + " Spez.Prov."
               IF Prozente.spezkond <> 0 THEN 
                 IF (vonAP.spezkond <> "j" AND vonPflege.spezkond <> "j") OR vonCourtage.spezkond = "j" THEN 
                   IF einmaligerfolgt.spezkond <> "j" THEN 
                     SpezProzent% = SpezProzent% + Prozente.spezkond
                     provsp1% = ((GBewertung% / 100) * Courtage.gekond)
                     provsp% = ((provsp1% / 100) * Prozente.spezkond)
                     provges% = provges% - provsp%
                     provtotal% = provtotal% + provsp%
                     REM *************** SR von Spezialprovision zufÅgen **************************
                     IF sr.spezkond <> 0 THEN 
                       sr% = sr.spezkond
                       IF sr% <> 0 THEN 
                         Haftv% = srlz.spezkond
                         IF Haftv% > 0 THEN 
                           IF FÑlligkeit.zeingan1 > 0 THEN 
                             Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftv% * 30)
                           ELSE 
                             Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftv% * 30)
                           END IF 
                         ELSE 
                           Haftung% = 0
                         END IF 
                       ELSE 
                         Haftung% = 0
                         sr% = 0
                       END IF 
                       REM unbegrenzte Haftung ohne Auszahlung
                       IF Haftv% = - 1 THEN 
                         Haftung% = - 1
                       END IF 
                     ELSE 
                       Haftung% = 0
                       sr% = 0
                     END IF 
                     REM ************************************************************************** 
                   ELSE 
                   END IF 
                   CALL SpezProvisFF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,vonCodeMA%)
                 END IF 
               ELSE 
                 IF pauschale.spezkond <> 0 THEN 
                   IF (vonAP.spezkond <> "j" AND vonPflege.spezkond <> "j") OR vonCourtage.spezkond = "j" THEN 
                     IF einmaligerfolgt.spezkond <> "j" THEN 
                       IF GBewertung% >= 0 THEN 
                         SpezPausch% = SpezPPausch% + Pauschale.spezkond
                         provsp% = Pauschale.spezkond
                       END IF 
                       IF GBewertung% < 0 THEN 
                         SpezPausch% = SpezPPausch% + (Pauschale.spezkond * - 1)
                         provsp% = Pauschale.spezkond * - 1
                       END IF 
                       provges% = provges% - provsp%
                       provtotal% = provtotal% + provsp%
                       REM *************** SR von Spezialprovision zufÅgen **************************
                       IF sr.spezkond <> 0 THEN 
                         sr% = sr.spezkond
                         IF sr% <> 0 THEN 
                           Haftv% = srlz.spezkond
                           IF Haftv% > 0 THEN 
                             IF FÑlligkeit.zeingan1 > 0 THEN 
                               Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftv% * 30)
                             ELSE 
                               Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftv% * 30)
                             END IF 
                           ELSE 
                             Haftung% = 0
                           END IF 
                         ELSE 
                           Haftung% = 0
                           sr% = 0
                         END IF 
                         REM unbegrenzte Haftung ohne Auszahlung
                         IF Haftv% = - 1 THEN 
                           Haftung% = - 1
                         END IF 
                       ELSE 
                         Haftung% = 0
                         sr% = 0
                       END IF 
                       REM ************************************************************************** 
                     ELSE 
                     END IF 
                     CALL SpezProvisFF(butext$,codema.spezkond,codema%,provsp%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,vonCodeMA%)
                   END IF 
                 END IF 
               END IF 
               IF einmalig.spezkond = "j" THEN 
                 einmaligerfolgt.spezkond = "j"
                 EinmDatum.spezkond = BuchungsDatum.zeingan1
                 STORE FILE "Spezkond"
                 UNLOCK CURRENT FILE "spezkond"
                 UNLOCK FILE "spezkond"
               END IF 
               anzagvFre% = anzagvFre% + 1
             WEND 
             REM ******************* Ende Spezialprovision Courtage ************************************************
             REM prov% = ((GBewertung% / 100) * Courtage.gekond) - ((GBewertung% / 100) * SpezProzent%) - SpezPausch%
             REM prov% = provges%
             vsumC% = provtotal%
             prov% = ((GBewertung% / 100) * Courtage.gekond)
             IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" AND SpezProvNormal.stamm = "j" THEN 
               IF APEurEinh.gekond > 0 THEN 
                 prov% = GBewertung% * APEurEinh.gekond / FirmaEurEinh.stamm
               ELSE 
                 eurpeinh% = europroeinh.GEKOND
                 fireur% = FirmaEurEinh.stamm
                 prov% = GBewertung% * europroeinh.GEKOND / FirmaEurEinh.stamm
               END IF 
             END IF 
           ELSE 
             prov% = ((GBewertung% / 100) * Courtage.gekond)
             IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" AND SpezProvNormal.stamm = "j" THEN 
               IF APEurEinh.gekond > 0 THEN 
                 prov% = GBewertung% * APEurEinh.gekond / FirmaEurEinh.stamm
               ELSE 
                 eurpeinh% = europroeinh.GEKOND
                 fireur% = FirmaEurEinh.stamm
                 prov% = GBewertung% * europroeinh.GEKOND / FirmaEurEinh.stamm
               END IF 
             END IF 
           END IF 
         ELSE 
           prov% = ((GBewertung% / 100) * Courtage.gekond)
           IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
             IF CourtEurEinh.gekond > 0 THEN 
               prov% = GBewertung% * CourtEurEinh.gekond / FirmaEurEinh.stamm
             ELSE 
               prov% = GBewertung% * europroeinh.GEKOND / FirmaEurEinh.stamm
             END IF 
           END IF 
         END IF 
cberafs03092002: 
         REM prov% = ((GBewertung% / 100) * Courtage.gekond)
         CourtGez$ = "j"
         ssok% = 0
         IF FirmaEinhTab.stamm LIKE "j" THEN 
           IF SRjn.gekond = "j" AND prov% <> 0 AND sr.zeingan1 = 0 THEN ssok% = - 1
         ELSE 
           IF SRjn.gekond = "j" THEN ssok% = - 1
         END IF 
         IF ssok% = - 1 THEN 
         REM IF SRjn.gekond = "j" AND prov% <> 0 AND sr.zeingan1 = 0 THEN 
           sr% = sr.gekond
           IF sr% <> 0 THEN 
             REM Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftung.gekond * 30)
             IF Haftvertrag% > 0 THEN 
               IF FÑlligkeit.zeingan1 > 0 THEN 
                 Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftvertrag% * 30)
               ELSE 
                 Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftvertrag% * 30)
               END IF 
             ELSE 
               IF FÑlligkeit.zeingan1 > 0 THEN 
                 Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftung.gekond * 30)
               ELSE 
                 Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftung.gekond * 30)
               END IF 
             END IF 
           ELSE 
             Haftung% = 0
           END IF 
           IF Haftung.gekond = - 1 THEN 
             Haftung% = - 1
           END IF 
         ELSE 
           Haftung% = 0
           sr% = 0
           REM unbegrenzte Haftung ohne Auszahlung
           REM 161197 IF Haftung = - 1 THEN 
             REM 161197 sr% = sr.gekond
             REM 161197 Haftung% = 0
           REM 161197 ELSE 
             REM 161197 sr% = 0
             REM 161197 Haftung% = 0
           REM 161197 END IF 
         END IF 
         IF nÑchsteKond.VKOND = 0 THEN 
           prov% = prov% + VProvisNZ%
           VProvisNZ% = 0
         END IF 
cp190620021:  
         IF GBewertung% = 0 AND sr.zeingan1 <> 0 THEN 
           CALL RegProvisZ(Buchungstext.zeingan1,codema%,prov%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,remark2$)
         ELSE 
           IF GAFSK$ LIKE "TRUE" THEN 
             IF prov% <> 0 THEN CALL RegProvisZ(Buchungstext.zeingan1,codema%,prov%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,remark2$)
           ELSE 
             IF prov% <> 0 OR sr% <> 0 THEN CALL RegProvisZ(Buchungstext.zeingan1,codema%,prov%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,remark2$)
           END IF 
         END IF 
       ELSE 
         REM keine CP Kondit definiert
         SELECT KEY codema% FILE "maadr" INDEX codema.maadr
         CALL WriteLog("keine Courtage fÅr Vertrag: " + VS_Nr.KVERTRAG + " Agentur: " + nachname.maadr + ", " + vorname.maadr + ", " + Agenturnr.maadr + " definiert!")
       END IF 
 
     END IF 
  
   



  











 GOTO end0911971 








     REM ------------
     REM -- Pauschale
     REM ------------
 
     IF PauschaleJN.gekond = "j" THEN 
       IF gez_Pauschale.kvertrag <> "j" THEN 
         remark2$ = "Pauschale"
         prov% = Pauschale.gekond
         REM 060497
         IF SRjn.gekond = "j" AND Laufzeit% < Haftung.gekond THEN 
           sr% = sr.gekond
           IF sr% <> 0 THEN 
             REM Haftung% = DAYS (VS_Beginn.kvertrag) + (Haftung.gekond * 30)
             IF Haftvertrag% > 0 THEN 
               IF FÑlligkeit.zeingan1 > 0 THEN 
                 Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftvertrag% * 30)
               ELSE 
                 Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftvertrag% * 30)
               END IF 
             ELSE 
               IF FÑlligkeit.zeingan1 > 0 THEN 
                 Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftung.gekond * 30)
               ELSE 
                 Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftung.gekond * 30)
               END IF 
             END IF 
           END IF 
         ELSE 
           IF Haftung.gekond = - 1 THEN 
             sr% = sr.gekond
             Haftung% = - 1
           ELSE 
             sr% = 0
             Haftung% = 0
           END IF 
         END IF 
         REM IF sr% <> 0 THEN 
           REM Haftung% = DAYS (VS_Beginn.kvertrag) + (Haftung.gekond * 30)
         REM ELSE 
           REM Haftung% = 0
         REM END IF 
         REM CALL RegProvis("Pauschale: " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag,remark2$)
         remark2$ = "Pauschale"
         CALL RegProvisZ("Pauschale: " + VS_Nr.zeingan1,codema%,prov%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,remark2$)
       END IF 
     END IF 
 
 










 REM 091197 **** Anfang ****
 REM -----------------------------------
     REM -- Teilzahlung/Ratenzahlung
     REM -- z.Z. auf Ratenzahlung umgestellt
     REM -----------------------------------
 
     IF TZjn.gekond = "j" THEN 
       IF TZRate.KVERTRAG + 1 = 1 THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ0.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD1.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ1.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD2.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ2.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD3.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ3.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD4.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ4.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD5.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ5.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD6.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ6.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD7.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ7.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD8.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ8.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD9.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ9.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD10.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ10.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD11.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ11.gekond)
       END IF 
       IF prov% <> 0 THEN 
         REM 060497
         IF SRjn.gekond = "j" AND Laufzeit% < Haftung THEN 
           sr% = sr.gekond
           IF sr% <> 0 THEN Haftung% = DAYS (VS_Beginn.kvertrag + (Haftung.gekond * 30))
         ELSE 
           IF Haftung.gekond = - 1 THEN 
             sr% = sr.gekond
             Haftung% = 0
           ELSE 
             sr% = 0
             Haftung% = 0
           END IF 
         END IF 
         REM IF sr% <> 0 THEN 
           REM Haftung% = DAYS (VS_Beginn.kvertrag + (Haftung.gekond * 30))
         REM ELSE 
           REM Haftung% = 0
         REM END IF 
         CALL RegProvis("TZ (" + LTRIM$ ( STR$ (TZRate.KVERTRAG + 1,"999")) + ". Zahlung): " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.zeingan1,waehrung.zeingan1)
       ELSE 
         CALL WriteLog("!Konditionen fÅr Ratenzahlung/Teilzahlung unvollstÑndig")
         CALL WriteLog("    >> Rate: " + LTRIM$ ( STR$ (TZRate.KVERTRAG + 1,"999")))
         CALL WriteLog("    >> bei Abschlu·:" + LTRIM$ ( STR$ (TZ0.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD1.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ1.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD2.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ2.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD3.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ3.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD4.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ4.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD5.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ5.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD6.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ6.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD7.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ7.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD8.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ8.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD9.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ9.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD10.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ10.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD11.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ11.gekond,",999999.00")))
         CALL AddLogInfo()
       END IF 
 
     END IF 
 
     REM ------------
     REM -- Pauschale
     REM ------------
 
     IF PauschaleJN.gekond = "j" THEN 
       IF gez_Pauschale.kvertrag <> "j" THEN 
         remark2$ = "Pauschale"
         prov% = Pauschale.gekond
         REM 060497
         IF SRjn.gekond = "j" AND Laufzeit% < Haftung.gekond THEN 
           sr% = sr.gekond
           IF sr% <> 0 THEN 
             REM Haftung% = DAYS (VS_Beginn.kvertrag) + (Haftung.gekond * 30)
             IF Haftvertrag% > 0 THEN 
               IF FÑlligkeit.zeingan1 > 0 THEN 
                 Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftvertrag% * 30)
               ELSE 
                 Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftvertrag% * 30)
               END IF 
             ELSE 
               IF FÑlligkeit.zeingan1 > 0 THEN 
                 Haftung% = DAYS (FÑlligkeit.zeingan1) + (Haftung.gekond * 30)
               ELSE 
                 Haftung% = DAYS (BuchungsDatum.zeingan1) + (Haftung.gekond * 30)
               END IF 
             END IF 
           END IF 
         ELSE 
           IF Haftung.gekond = - 1 THEN 
             sr% = sr.gekond
             Haftung% = - 1
           ELSE 
             sr% = 0
             Haftung% = 0
           END IF 
         END IF 
         REM IF sr% <> 0 THEN 
           REM Haftung% = DAYS (VS_Beginn.kvertrag) + (Haftung.gekond * 30)
         REM ELSE 
           REM Haftung% = 0
         REM END IF 
         REM CALL RegProvis("Pauschale: " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag,remark2$)
         remark2$ = "Pauschale"
         CALL RegProvisZ(Buchungstext.zeingan1,codema%,prov%,sr%,Haftung%,Buchungsdatum.zeingan1,fÑlligkeit.zeingan1,umrechnung.zeingan1,codew.zeingan1,waehrung.zeingan1,codeaz.zeingan1,remark2$)
       END IF 
     END IF 
 
   END IF 
 
 REM 091197 **** Ende ****
end0911971:  
 
   IF nÑchsteKond.VKOND = 0 THEN 
     ok% = 0
   ELSE 
     SELECT KEY nÑchsteKond.VKOND LOCK FILE "VKOND" INDEX CodeVK.VKOND
   END IF 
   MOUSE OFF 
 WEND 
 END SUB 
 

 ' RegProvis fÅr RealCASH
 ' =======================================================================
 ' Zweck:   trÑgt Buchungstext der Provisionsberechnung in die Buchungs-
 '          datei ein
 ' Nutzung: CALL RegProvisZ(remark$,codema%,provi%,sr%,srbis%)
 '          remark$     = Buchungstext
 '          ma%         = Agenturnummer
 '          provi%      = Provisionssumme
 '          sr%         = Stornoreserve in %
 '          Haftung%    = Datum der Stornoreserveauszahlung
 ' =======================================================================
 ' 29.04.93      - PrÅfung auf einmalige Abschlu·provi und Pauschale
 '                 - Provisionsausweisung abzÅglich Stornoreserve
 ' 26.06.95      - Korrektur der Registrierung gezahlter Pauschalen
 ' 29.04.96      - getrennte Differenzbildung fÅr alle verschiedenen
 '                   Provisionssysteme
 '                   (alte Variante als old_RegProvis im Anschlu·)
 
SUB RegProvisZ(remark$,ma%,provi%,sr%,Haftung%,datumz%,fÑlligkeit%,euro1%,codew%,waehr1$,zein%,remark2$)
 IF remark2$ = "" AND remark$ <> "" THEN remark2$ = remark$
 IF remark$ = "" AND remark2$ <> "" THEN remark$ = remark2$
 REM CALL Fehler("RegProvisZ -remark2:" + remark2$ + "   Remark: " + remark$,"Provi:" + STR$ (provi%,",999999.00"))
 
 cfile$ = FILE 
 FILE "kvertrag"
 _lfdnr% = lfdnr.KVERTRAG
 SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
 SELECT KEY _lfdnr% LOCK FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
 SELECT KEY ma% FILE "maadr" INDEX CodeMA.MAADR
 SELECT KEY codeva.kvertrag FILE "sparten" INDEX codeva.sparten
 REM IF vs_nr.kvertrag LIKE "4545*" THEN CALL Fehler("Buchung",Nachname.maadr)
 codevp% = codevp.kvertrag
 SELECT FIRST FILE "VPRODUKT" INDEX codevp.vprodukt
 SELECT KEY codevp% FILE "VPRODUKT" INDEX codevp.vprodukt

 REM CALL Fehler(nachname.maadr,remark$)

 REM -- bereits gezahlte Provisionen verallgemeinern
 kondartab% = kondart.zeingan1
 IF remark2$ LIKE "Abschl*" OR remark$ LIKE "Ersatz*" OR remark$ LIKE "AP*" OR remark2$ LIKE "AP*" OR remark$ LIKE "Abschl*" OR remark$ LIKE "Dyn*" OR kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 OR kondart.zeingan1 = 4 THEN 
   vertrprov% = vsumAP%
 END IF 
 IF remark2$ LIKE "Courta*" OR kondart.zeingan1 = 1 THEN 
   vertrprov% = vsumC%
 END IF 
 IF remark2$ LIKE "Pflege*" OR remark2$ LIKE "Betreu*" OR kondart.zeingan1 = 2 OR kondart.zeingan1 = 5 THEN 
   vertrprov% = vsumPP%
 END IF 
 IF remark2$ LIKE "Pauschal*" THEN 
   vertrprov% = vsumPausch%
 END IF 
 IF remark2$ LIKE "VD*" THEN 
   vertrprov% = vsumAP%
 END IF 

 IF vs_nr.kvertrag LIKE "123" THEN 
   REM CALL Fehler(nachname.maadr,"")
 END IF 

 REM -- Bearbeitung bei letzter Agentur in der Struktur
 IF (CodeMA.maadr = vorgÑnger.maadr) OR (VorgÑnger.MAADR < 1) THEN 
   letzteProvi.kvertrag = datumz%
   IF remark$ LIKE "TZ (*" THEN 
     TZRate.KVERTRAG = TZRate.KVERTRAG + 1
   END IF 
 END IF 
 
 REM -- Einmalzahlungen/Berechnungen Stornoreserve registrieren --
 IF (remark2$ LIKE "Abschlu*" OR remark2$ LIKE "VD*" OR remark$ LIKE "Ersatz*" OR remark$ LIKE "Abschl*" OR remark$ LIKE "AP*" OR remark2$ LIKE "AP*" OR remark$ LIKE "Dyn*") AND (kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 OR kondart.zeingan1 = 4) THEN 
   gezAbschlu·% = 1
 END IF 
 IF (remark2$ LIKE "Pflege*" OR remark$ LIKE "Betreu*") AND (kondart.zeingan1 = 2 OR kondart.zeingan1 = 5) THEN gezPflege% = 1
 IF remark2$ LIKE "Pauschal*" THEN gezPauschale% = 1
 IF CodeMA.MAADR = VorgÑnger.MAADR OR VorgÑnger.MAADR < 1 THEN 
   IF gezAbschlu·% = 1 THEN gez_Abschlu·.kvertrag = "j"
   IF gezPflege% = 1 THEN letztePflege.kvertrag = datumz%
   IF gezPauschale% = 1 THEN gez_Pauschale.kvertrag = "j"
 END IF 
   
 REM CALL QuickStore("KVERTRAG")
 STORE FILE "kvertrag"
 UNLOCK CURRENT FILE "KVERTRAG"
 UNLOCK FILE "KVERTRAG"
 IF gebuchtJNT.zeingan1 <> "J" THEN 
   SELECT KEY zein% LOCK FILE "zeingan1" INDEX codeaz.zeingan1
   gebuchtJNT.zeingan1 = "J"
   STORE FILE "zeingan1"
   UNLOCK CURRENT FILE "Zeingan1"
   UNLOCK FILE "zeingan1"
 END IF 
 REM CALL Fehler(nachname.maadr,"Code komplettieren!!!!")
 REM *********************************** Fîrderkonditionen ************************************************
 IF EXISTS (ma%,voncodema.foerkond) AND GFoerdVerr% <> - 1 THEN 
   REM CALL Fehler(nachname.maadr,"Fîrderkond!!!!")
   ffile$ = FILE 
   FILE "foerkond"
   INDEX voncodema.foerkond
   SELECT FIRST FILE "foerkond" INDEX voncodema.foerkond
   SELECT KEY ma% FILE "foerkond" INDEX voncodema.foerkond
   proz% = 0
   pausch% = 0
   REM CALL Fehler("GFdate$: " + GFdate$,"")
   IF GFdate$ <> "" THEN 
     gfdate% = DAYS (GFDate$)
     IF Antragsdatum.KVERTRAG < gfdate% THEN 
       ProviAb1% = VS_Beginn.KVERTRAG
     ELSE 
       ProviAb1% = Antragsdatum.KVERTRAG
     END IF 
   ELSE 
     IF Gvueb$ = "TRUE" THEN 
       ProviAb1% = Antragsdatum.KVERTRAG
     ELSE 
       ProviAb1% = VS_Beginn.KVERTRAG
     END IF 
   END IF 
   WHILE NOT EOF ("foerkond") AND voncodema.foerkond = ma%
     REM jetzt Buchung erzeugen
     ok% = 0
     IF BWvon.foerkond > 0 THEN 
       IF BWBis.foerkond > 0 THEN 
         REM DatumseinschrÑnkung fÅr BWVon und BWBis
         IF ProviAb1% >= BWvon.foerkond AND ProviAb1% <= BWBis.foerkond THEN ok% = - 1
       ELSE 
         REM DatumseinschrÑnkung fÅr BWvon
         IF ProviAb1% >= BWvon.foerkond THEN ok% = - 1
       END IF 
     ELSE 
       IF BWBis.foerkond > 0 THEN 
         REM DatumseinschrÑnkung fÅr BWBis
         IF ProviAb1% <= BWBis.foerkond THEN ok% = - 1
       ELSE 
         REM keine DatumseinschrÑnkung
         ok% = - 1
       END IF 
     END IF 
     IF VvonCodema.foerkond > 0 THEN 
       IF VvonCodema.foerkond <> Codema.kvertrag THEN ok% = 0
     END IF 
     IF ok% = - 1 THEN 
       REM Aufruf der Weiterverarbeitung
       IF prozente.foerkond <> 0 THEN 
         proz% = proz% + prozente.foerkond
       ELSE 
         pausch% = pausch% + pauschale.foerkond
       END IF 
       mma% = codema.foerkond
       prozent% = prozente.foerkond
       pauschal% = pauschale.foerkond
       REM Aufruf fÅr den der FîP bekommt
       ppp% = provi% - vertrprov%
       srnull% = sr%
       REM CALL Fehler("Test","FôP auf Normal " + STR$ (ppp%,",9999999.00"))
       IF ppp% <> 0 THEN CALL RegProvFoerd(remark$,ma%,mma%,ppp%,srnull%,Haftung%,datumz%,fÑlligkeit%,euro1%,codew%,waehr1$,zein%,remark2$,prozent%,pauschal%)
       REM jetzt negativen Buchungssatz erzeugen fÅr den, dem die FîP abgezogen wird
       ppp% = (provi% - vertrprov%) * - 1
       srnull% = sr%
       pauschal% = pauschal% * - 1
       IF ppp% <> 0 THEN CALL RegProvFoerd(remark$,mma%,ma%,ppp%,srnull%,Haftung%,datumz%,fÑlligkeit%,euro1%,codew%,waehr1$,zein%,remark2$,prozent%,pauschal%)
     END IF 
     SELECT NEXT FILE "foerkond" INDEX voncodema.foerkond
   WEND 
   REM VS_Beginn.KVERTRAG
   FILE ffile$
 END IF 
 REM ******************************************  Ende Fîrderkonditionen *************************************************

 FILE "buchung1"
 BLANK FILE "buchung1"
 CodeBU% = SER ("buchung1",1)
 CodeBU.buchung1 = CodeBU%
 codeaz.buchung1 = codeaz.zeingan1
 Datum.buchung1 = datumz%
 fÑlligkeit.buchung1 = fÑlligkeit%
 Ausgabeauf.buchung1 = ausgabeauf.zeingan1
 CodeVT.buchung1 = lfdnr.kvertrag
 testtext$ = "*" + vs_nr.kvertrag + "*"
           IF LTRIM$ (fs24Satz_ID2.kvertrag) <> "" THEN 
             FS24Satz_ID.buchung1 = FS24Satz_ID2.kvertrag
           ELSE 
             FS24Satz_ID.buchung1 = FS24Satz_ID.kvertrag
           END IF 
 umrechnung.buchung1 = euro1%
 REM CALL Fehler("TEST " + STR$ (ma%,"000000"), STR$ (provi%,"9999.00"))
 REM 08102002
 REM CALL Fehler(nachname.maadr, STR$ (provi%,"9999.00"))
 IF GRealStorno% = - 1 THEN 
   REM CALL Fehler(Buchungstext.buchung1, STR$ (provi%,"9999.00"))
   REM CALL Fehler(nachname.maadr, STR$ (provi%,"9999.00"))
   IF provi% > 0 THEN 
     REM 27.07.2008
     IF KÅndigung.MAADR > 0 AND KÅndigung.MAADR < datumz% AND Nachfolger.MAADR <> 0 THEN 
       IF fÑlligkeit.zeingan1 > 0 THEN 
         afael1$ = DATE$ (fÑlligkeit.zeingan1,"0d.mm.yyyy")
         afkuen1$ = DATE$ (KÅndigung.MAADR,"0d.mm.yyyy")

         IF fÑlligkeit.zeingan1 < KÅndigung.MAADR THEN 
           CodeMA.buchung1 = ma%
           ma1% = ma%
           IF remark$ LIKE testtext$ THEN 
             Buchungstext.buchung1 = LEFT$ (remark$,70)
           ELSE 
             Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
           END IF 
         ELSE 
           REM ***************************************************************************************
           REM Kondart abfragen
           kondart% = kondart.zeingan1
           
             SELECT CASE kondart%
             CASE 0,3,4
               REM AP
               IF Kuenap.maadr LIKE "j" THEN 
                 REM AP wird weitergezahlt
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle AP weiterzahlen -> es sollen auch die AP der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
               ELSE 
                 CodeMA.buchung1 = Nachfolger.MAADR
                 ma1% = Nachfolger.MAADR
                 IF remark$ LIKE testtext$ THEN 
                   Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                 ELSE 
                   Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                 END IF 
               END IF 
             CASE 1
               REM Courtage
               IF KuenCourt1.maadr LIKE "j" THEN 
                 REM die erste courtage soll noch gezahlt werden
                 IF KuenCourt1.kvertrag <> "j" THEN 
                   REM SELECT CURRENT LOCK FILE "kvertrag"
                   SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
                   SELECT KEY _lfdnr% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
                   KuenCourt1.kvertrag = "j"
                   STORE FILE "kvertrag"
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle Courtagen weiterzahlen -> es sollen auch die Court.der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
                 ELSE 
                   CodeMA.buchung1 = Nachfolger.MAADR
                   ma1% = Nachfolger.MAADR
                   IF remark$ LIKE testtext$ THEN 
                     Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                   ELSE 
                     Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                   END IF 
                 END IF 
              ELSE 
                IF KuenCourtAlle.maadr LIKE "j" THEN 
                  REM SELECT CURRENT LOCK FILE "kvertrag"
                  SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
                  SELECT KEY _lfdnr% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
                  KuenCourt1.kvertrag = "j"
                  STORE FILE "kvertrag"
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle Courtagen weiterzahlen -> es sollen auch die Court.der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
                ELSE 
                  CodeMA.buchung1 = Nachfolger.MAADR
                  ma1% = Nachfolger.MAADR
                  IF remark$ LIKE testtext$ THEN 
                    Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                  ELSE 
                    Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                  END IF 
                END IF 
              END IF 
            CASE 2,5
              REM Pflege
              IF KuenPflege.maadr LIKE "j" THEN 
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle Pflege weiterzahlen -> es sollen auch die Pflege der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
              ELSE 
                CodeMA.buchung1 = Nachfolger.MAADR
                ma1% = Nachfolger.MAADR
                IF remark$ LIKE testtext$ THEN 
                  Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                ELSE 
                  Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                END IF 
              END IF 
            END SELECT 
           REM *************************************************************************************** 
         END IF 
       ELSE 
           REM ***************************************************************************************
           REM Kondart abfragen
           kondart% = kondart.zeingan1
           
             SELECT CASE kondart%
             CASE 0,3,4
               REM AP
               IF Kuenap.maadr LIKE "j" THEN 
                 REM AP wir weitergezahlt
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle AP weiterzahlen -> es sollen auch die AP der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
               ELSE 
                 CodeMA.buchung1 = Nachfolger.MAADR
                 ma1% = Nachfolger.MAADR
                 IF remark$ LIKE testtext$ THEN 
                   Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                 ELSE 
                   Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                 END IF 
               END IF 
             CASE 1
               REM Courtage
               IF KuenCourt1.maadr LIKE "j" THEN 
                 REM die erste courtage soll noch gezahlt werden
                 IF KuenCourt1.kvertrag <> "j" THEN 
                   REM SELECT CURRENT LOCK FILE "kvertrag"
                   SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
                   SELECT KEY _lfdnr% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
                   KuenCourt1.kvertrag = "j"
                   STORE FILE "kvertrag"
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle Courtagen weiterzahlen -> es sollen auch die Court.der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
                 ELSE 
                   CodeMA.buchung1 = Nachfolger.MAADR
                   ma1% = Nachfolger.MAADR
                   IF remark$ LIKE testtext$ THEN 
                     Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                   ELSE 
                     Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                   END IF 
                 END IF 
              ELSE 
                IF KuenCourtAlle.maadr LIKE "j" THEN 
                   REM SELECT CURRENT LOCK FILE "kvertrag"
                   SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
                   SELECT KEY _lfdnr% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
                   KuenCourt1.kvertrag = "j"
                   STORE FILE "kvertrag"
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle Courtagen weiterzahlen -> es sollen auch die Court.der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
                ELSE 
                  CodeMA.buchung1 = Nachfolger.MAADR
                  ma1% = Nachfolger.MAADR
                  IF remark$ LIKE testtext$ THEN 
                    Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                  ELSE 
                    Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                  END IF 
                END IF 
              END IF 
            CASE 2,5
              REM Pflege
              IF KuenPflege.maadr LIKE "j" THEN 
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle Pflege weiterzahlen -> es sollen auch die Pflege der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
              ELSE 
                CodeMA.buchung1 = Nachfolger.MAADR
                ma1% = Nachfolger.MAADR
                IF remark$ LIKE testtext$ THEN 
                  Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                ELSE 
                  Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                END IF 
              END IF 
            END SELECT 
           REM *************************************************************************************** 
       END IF 
     ELSE 
       REM vertragsabschlie·ender Vermittler wird belastet
       CodeMA.buchung1 = ma%
       ma1% = ma%
       IF remark$ LIKE testtext$ THEN 
         Buchungstext.buchung1 = LEFT$ (remark$,70)
       ELSE 
         Buchungstext.buchung1 = LEFT$ (remark$ + " " + vs_nr.kvertrag,70)
         IF GAFSK$ = "TRUE" THEN 
           IF autokuend.kvfael = "j" THEN 
             Buchungstext.buchung1 = remark$
             remark2$ = " wiederh.Prov."
           ELSE 
             Buchungstext.buchung1 = remark$
           END IF 
         END IF 
       END IF 
     END IF 
   END IF 
   IF provi% <= 0 THEN 
     REM Wenn einem Mitarbeiter gekÅndigt wurde und man gesagt hat, da· dessen Provisionen an Mitarbeiter X umgewiesen
     REM werden, dann soll aber im Stornofall, der gekÅndigte Mitarbeiter belastet werden, deshalb also nur Umweisen,
     REM wenn provi%>0 
     IF fÑlligkeit.zeingan1 > 0 THEN 
       IF KÅndigung.MAADR < datumz% AND Nachfolger.MAADR <> 0 THEN 
         afael1$ = DATE$ (fÑlligkeit.zeingan1,"0d.mm.yyyy")
         afkuen1$ = DATE$ (KÅndigung.MAADR,"0d.mm.yyyy")
         IF fÑlligkeit.zeingan1 > KÅndigung.MAADR THEN 
           REM die Agentur an die umgewiesen wurde mu· belastet werden
           REM ***************************************************************************************
           REM Kondart abfragen
           kondart% = kondart.zeingan1
           
             SELECT CASE kondart%
             CASE 0,3,4
               REM AP
               IF Kuenap.maadr LIKE "j" THEN 
                 REM AP wir weitergezahlt
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle AP weiterzahlen -> es sollen auch die AP der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
               ELSE 
                 CodeMA.buchung1 = Nachfolger.MAADR
                 ma1% = Nachfolger.MAADR
                 IF remark$ LIKE testtext$ THEN 
                   Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                 ELSE 
                   Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                 END IF 
               END IF 
             CASE 1
               REM Courtage
               IF KuenCourt1.maadr LIKE "j" THEN 
                 REM die erste courtage soll noch gezahlt werden
                 IF KuenCourt1.kvertrag <> "j" THEN 
                   REM SELECT CURRENT LOCK FILE "kvertrag"
                   SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
                   SELECT KEY _lfdnr% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
                   KuenCourt1.kvertrag = "j"
                   STORE FILE "kvertrag"
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle Courtagen weiterzahlen -> es sollen auch die Court.der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
                 ELSE 
                   CodeMA.buchung1 = Nachfolger.MAADR
                   ma1% = Nachfolger.MAADR
                   IF remark$ LIKE testtext$ THEN 
                     Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                   ELSE 
                     Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                   END IF 
                 END IF 
              ELSE 
                IF KuenCourtAlle.maadr LIKE "j" THEN 
                   REM SELECT CURRENT LOCK FILE "kvertrag"
                   SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
                   SELECT KEY _lfdnr% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
                   KuenCourt1.kvertrag = "j"
                   STORE FILE "kvertrag"
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle Courtagen weiterzahlen -> es sollen auch die Court.der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
                ELSE 
                  CodeMA.buchung1 = Nachfolger.MAADR
                  ma1% = Nachfolger.MAADR
                  IF remark$ LIKE testtext$ THEN 
                    Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                  ELSE 
                    Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                  END IF 
                END IF 
              END IF 
            CASE 2,5
              REM Pflege
              IF KuenPflege.maadr LIKE "j" THEN 
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle Pflegen weiterzahlen -> es sollen auch die Pflege der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
              ELSE 
                CodeMA.buchung1 = Nachfolger.MAADR
                ma1% = Nachfolger.MAADR
                IF remark$ LIKE testtext$ THEN 
                  Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                ELSE 
                  Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                END IF 
              END IF 
            END SELECT 
           REM *************************************************************************************** 
         ELSE 
           REM vertragsabschlie·ender Vermittler wird belastet
           CodeMA.buchung1 = ma%
           ma1% = ma%
           IF remark$ LIKE testtext$ THEN 
             Buchungstext.buchung1 = LEFT$ (remark$,70)
           ELSE 
             Buchungstext.buchung1 = LEFT$ (remark$ + " " + vs_nr.kvertrag,70)
             IF GAFSK$ = "TRUE" THEN 
               IF autokuend.kvfael = "j" THEN 
                 Buchungstext.buchung1 = remark$
                 remark2$ = " wiederh.Prov."
               ELSE 
                 Buchungstext.buchung1 = remark$
               END IF 
             END IF 
           END IF 
         END IF 
       ELSE 
         REM vertragsabschlie·ender Vermittler wird belastet
         CodeMA.buchung1 = ma%
         ma1% = ma%
         IF remark$ LIKE testtext$ THEN 
           Buchungstext.buchung1 = LEFT$ (remark$,70)
         ELSE 
           Buchungstext.buchung1 = LEFT$ (remark$ + " " + vs_nr.kvertrag,70)
           IF GAFSK$ = "TRUE" THEN 
             IF autokuend.kvfael = "j" THEN 
               Buchungstext.buchung1 = remark$
               remark2$ = " wiederh.Prov."
             ELSE 
               Buchungstext.buchung1 = remark$
             END IF 
           END IF 
         END IF 
       END IF 
     END IF 
     IF fÑlligkeit.zeingan1 = 0 THEN 
       REM FÑlligkeit=0, die vertragsabschlie·ende Agentur mu· belastet werden
       CodeMA.buchung1 = ma%
       ma1% = ma%
       IF remark$ LIKE testtext$ THEN 
         Buchungstext.buchung1 = LEFT$ (remark$,70)
       ELSE 
         Buchungstext.buchung1 = LEFT$ (remark$ + " " + vs_nr.kvertrag,70)
         IF GAFSK$ = "TRUE" THEN 
           IF autokuend.kvfael = "j" THEN 
             Buchungstext.buchung1 = remark$
             remark2$ = " wiederh.Prov."
           ELSE 
             Buchungstext.buchung1 = remark$
           END IF 
         END IF 
       END IF 
     END IF 
   END IF 
 END IF 
 IF GRealStorno% <> - 1 THEN 
   REM CALL Fehler("KÅndigung: " + DATE$ (KÅndigung.MAADR,"0d.mm.yyyy"),"datumz: " +  DATE$ (datumz%,"0d.mm.yyyy"))
   IF KÅndigung.MAADR < datumz% AND Nachfolger.MAADR <> 0 THEN 
     IF fÑlligkeit.zeingan1 > 0 THEN 
       afael1$ = DATE$ (fÑlligkeit.zeingan1,"0d.mm.yyyy")
       afkuen1$ = DATE$ (KÅndigung.MAADR,"0d.mm.yyyy")
       IF fÑlligkeit.zeingan1 < KÅndigung.MAADR THEN 
         REM CodeMA.buchung1 = ma%
         REM ma1% = ma%
         REM IF remark$ LIKE testtext$ THEN 
         REM   Buchungstext.buchung1 = LEFT$ (remark$,70)
         REM ELSE 
           REM Buchungstext.buchung1 = LEFT$ (remark$ + " " + vs_nr.kvertrag,70)
         REM END IF 
           kondart% = kondart.zeingan1
           
             SELECT CASE kondart%
             CASE 0,3,4
               REM AP
               IF Kuenap.maadr LIKE "j" THEN 
                 REM AP wir weitergezahlt
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle AP weiterzahlen -> es sollen auch die AP der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
               ELSE 
                 CodeMA.buchung1 = Nachfolger.MAADR
                 ma1% = Nachfolger.MAADR
                 IF remark$ LIKE testtext$ THEN 
                   Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                 ELSE 
                   Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                 END IF 
               END IF 
             CASE 1
               REM Courtage
               IF KuenCourt1.maadr LIKE "j" THEN 
                 REM die erste courtage soll noch gezahlt werden
                 IF KuenCourt1.kvertrag <> "j" THEN 
                   REM SELECT CURRENT LOCK FILE "kvertrag"
                   SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
                   SELECT KEY _lfdnr% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
                   KuenCourt1.kvertrag = "j"
                   STORE FILE "kvertrag"
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle Courtagen weiterzahlen -> es sollen auch die Court.der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
                 ELSE 
                   CodeMA.buchung1 = Nachfolger.MAADR
                   ma1% = Nachfolger.MAADR
                   IF remark$ LIKE testtext$ THEN 
                     Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                   ELSE 
                     Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                   END IF 
                 END IF 
              ELSE 
                IF KuenCourtAlle.maadr LIKE "j" THEN 
                   REM SELECT CURRENT LOCK FILE "kvertrag"
                   SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
                   SELECT KEY _lfdnr% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
                   KuenCourt1.kvertrag = "j"
                   STORE FILE "kvertrag"
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle Courtagen weiterzahlen -> es sollen auch die Court.der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
                ELSE 
                  CodeMA.buchung1 = Nachfolger.MAADR
                  ma1% = Nachfolger.MAADR
                  IF remark$ LIKE testtext$ THEN 
                    Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                  ELSE 
                    Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                  END IF 
                END IF 
              END IF 
            CASE 2,5
              REM Pflege
              IF KuenPflege.maadr LIKE "j" THEN 
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle Pflege weiterzahlen -> es sollen auch die Pflege der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
              ELSE 
                CodeMA.buchung1 = Nachfolger.MAADR
                ma1% = Nachfolger.MAADR
                IF remark$ LIKE testtext$ THEN 
                  Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                ELSE 
                  Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                END IF 
              END IF 
            END SELECT 
       ELSE 
           REM ***************************************************************************************
           REM Kondart abfragen
           kondart% = kondart.zeingan1
           
             SELECT CASE kondart%
             CASE 0,3,4
               REM AP
               IF Kuenap.maadr LIKE "j" THEN 
                 REM AP wir weitergezahlt
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle AP weiterzahlen -> es sollen auch die AP der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
               ELSE 
                 CodeMA.buchung1 = Nachfolger.MAADR
                 ma1% = Nachfolger.MAADR
                 IF remark$ LIKE testtext$ THEN 
                   Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                 ELSE 
                   Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                 END IF 
               END IF 
             CASE 1
               REM Courtage
               IF KuenCourt1.maadr LIKE "j" THEN 
                 REM die erste courtage soll noch gezahlt werden
                 IF KuenCourt1.kvertrag <> "j" THEN 
                   REM SELECT CURRENT LOCK FILE "kvertrag"
                   SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
                   SELECT KEY _lfdnr% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
                   KuenCourt1.kvertrag = "j"
                   STORE FILE "kvertrag"
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle Courtagen weiterzahlen -> es sollen auch die Court.der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
                 ELSE 
                   CodeMA.buchung1 = Nachfolger.MAADR
                   ma1% = Nachfolger.MAADR
                   IF remark$ LIKE testtext$ THEN 
                     Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                   ELSE 
                     Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                   END IF 
                 END IF 
              ELSE 
                IF KuenCourtAlle.maadr LIKE "j" THEN 
                   REM SELECT CURRENT LOCK FILE "kvertrag"
                   SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
                   SELECT KEY _lfdnr% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
                   KuenCourt1.kvertrag = "j"
                   STORE FILE "kvertrag"
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle Courtagen weiterzahlen -> es sollen auch die Court.der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
                ELSE 
                  CodeMA.buchung1 = Nachfolger.MAADR
                  ma1% = Nachfolger.MAADR
                  IF remark$ LIKE testtext$ THEN 
                    Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                  ELSE 
                    Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                  END IF 
                END IF 
              END IF 
            CASE 2,5
              REM Pflege
              IF KuenPflege.maadr LIKE "j" THEN 
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle Pflege weiterzahlen -> es sollen auch die Pflege der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
              ELSE 
                CodeMA.buchung1 = Nachfolger.MAADR
                ma1% = Nachfolger.MAADR
                IF remark$ LIKE testtext$ THEN 
                  Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                ELSE 
                  Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                END IF 
              END IF 
            END SELECT 
           REM *************************************************************************************** 
       END IF 
     END IF 
     IF fÑlligkeit.zeingan1 = 0 THEN 
       REM CodeMA.buchung1 = Nachfolger.MAADR
       REM ma1% = Nachfolger.MAADR
       REM IF remark$ LIKE testtext$ THEN 
         REM Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
       REM ELSE 
         REM Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
       REM END IF 
           REM ***************************************************************************************
           REM Kondart abfragen
           kondart% = kondart.zeingan1
           
             SELECT CASE kondart%
             CASE 0,3,4
               REM AP
               IF Kuenap.maadr LIKE "j" THEN 
                 REM AP wir weitergezahlt
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle AP weiterzahlen -> es sollen auch die AP der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
               ELSE 
                 CodeMA.buchung1 = Nachfolger.MAADR
                 ma1% = Nachfolger.MAADR
                 IF remark$ LIKE testtext$ THEN 
                   Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                 ELSE 
                   Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                 END IF 
               END IF 
             CASE 1
               REM Courtage
               IF KuenCourt1.maadr LIKE "j" THEN 
                 REM die erste courtage soll noch gezahlt werden
                 IF KuenCourt1.kvertrag <> "j" THEN 
                   REM SELECT CURRENT LOCK FILE "kvertrag"
                   SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
                   SELECT KEY _lfdnr% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
                   KuenCourt1.kvertrag = "j"
                   STORE FILE "kvertrag"
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und 1. Courtage weiterzahlen -> es sollen auch die Court.der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
                 ELSE 
                   CodeMA.buchung1 = Nachfolger.MAADR
                   ma1% = Nachfolger.MAADR
                   IF remark$ LIKE testtext$ THEN 
                     Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                   ELSE 
                     Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                   END IF 
                 END IF 
              ELSE 
                IF KuenCourtAlle.maadr LIKE "j" THEN 
                   REM SELECT CURRENT LOCK FILE "kvertrag"
                   SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
                   SELECT KEY _lfdnr% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
                   KuenCourt1.kvertrag = "j"
                   STORE FILE "kvertrag"
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle Courtagen weiterzahlen -> es sollen auch die Court.der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
                ELSE 
                  CodeMA.buchung1 = Nachfolger.MAADR
                  ma1% = Nachfolger.MAADR
                  IF remark$ LIKE testtext$ THEN 
                    Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                  ELSE 
                    Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                  END IF 
                END IF 
              END IF 
            CASE 2,5
              REM Pflege
              IF KuenPflege.maadr LIKE "j" THEN 
                   IF PausUVzahl.maadr < 1 THEN 
                     REM bei KÅndigung und alle Pflege weiterzahlen -> es sollen auch die Pflege der Struktur gezahlt werden
                     CodeMA.buchung1 = ma%
                     ma1% = ma%
                     IF remark$ LIKE testtext$ THEN 
                       Buchungstext.buchung1 = LEFT$ (remark$,70)
                     ELSE 
                       Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                     END IF 
                   ELSE 
                     REM Provisionen aus Struktur an Nachfolger zahlen
                     IF ma% = vtcodema% THEN 
                       CodeMA.buchung1 = ma%
                       ma1% = ma%
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$,70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag,70)
                       END IF 
                     ELSE 
                       CodeMA.buchung1 = Nachfolger.MAADR
                       ma1% = Nachfolger.MAADR
                       IF remark$ LIKE testtext$ THEN 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       ELSE 
                         Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                       END IF 
                     END IF 
                   END IF 
              ELSE 
                CodeMA.buchung1 = Nachfolger.MAADR
                ma1% = Nachfolger.MAADR
                IF remark$ LIKE testtext$ THEN 
                  Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                ELSE 
                  Buchungstext.buchung1 = LEFT$ (remark$ + " " + VS_NR.kvertrag + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
                END IF 
              END IF 
            END SELECT 
           REM *************************************************************************************** 
     END IF 
   ELSE 
     CodeMA.buchung1 = ma%
     ma1% = ma%
     IF remark$ LIKE testtext$ THEN 
       Buchungstext.buchung1 = LEFT$ (remark$,70)
     ELSE 
       test123$ = "*" + vs_nr.kvertrag + "*"
       REM CALL Fehler(test123$,remark$)
       IF remark$ LIKE test123$ THEN 
         Buchungstext.buchung1 = LEFT$ (remark$,70)
       ELSE 
         Buchungstext.buchung1 = LEFT$ (remark$ + " " + vs_nr.kvertrag,70)
       END IF 
       IF GAFSK$ = "TRUE" THEN 
         IF autokuend.kvfael = "j" THEN 
           Buchungstext.buchung1 = remark$
           remark2$ = " wiederh.Prov."
         ELSE 
           Buchungstext.buchung1 = remark$
         END IF 
       END IF 
     END IF 
   END IF 
 END IF 
 REM CALL Fehler("dmeinheit " + Buchungstext.buchung1, STR$ (provi%,"9999.00"))
 IF dmeinh% > 0 THEN einheit% = provi% / dmeinh%
 IF EinheitAusGeko.stamm < 1 THEN 
 ELSE 
   einheit% = Einheiten.kvertrag
   IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" AND einheit% = 0 THEN 
     einheit% = GBewertung% / FirmaEurEinh.stamm
   END IF 

 END IF 
 IF GAFSK$ = "TRUE" AND GAFSKLALA% = - 1 THEN 
   testgfask$ = Buchungstext.buchung1 + " " + LTRIM$ (remark2$)
   Buchungstext.buchung1 = LEFT$ (testgfask$,70)
 END IF 
 REM CALL Fehler(buchungstext.buchung1,"")
 REM IF haftung% = - 1 AND sr% <> 0 THEN 
   REM SRBetrag% = ((provi% - vertrprov%) / 100) * sr%
 REM END IF 
 
 REM IF haftung% <> 0 AND sr% <> 0 THEN 
   REM SRBetrag% = ((provi% - vertrprov%) / 100) * sr%
 REM ELSE 
   REM SRBetrag% = 0
 REM END IF 

 REM 31072001 prÅfen auf sr%

 REM CALL Fehler("SR","")
 IF remark2$ LIKE "Pauschal*" THEN 
   IF haftung% <> 0 AND sr% <> 0 THEN 
     IF provi% >= 0 THEN 
       SRBetrag% = ((provi%) / 100) * sr%
       IF SRBetrag% < 0 THEN SRBetrag% = 0
     ELSE 
       IF SRRÅck.stamm LIKE "j" THEN 
         IF StornoVerrech.maadr <> "j" THEN 
           SRBetrag% = ((provi% - vertrprov%) / 100) * sr%
           IF SRBetrag% < 0 THEN SRBetrag% = 0
         ELSE 
           SRBetrag% = 0
         END IF 
       ELSE 
         SRBetrag% = 0
       END IF 
     END IF 
   ELSE 
     SRBetrag% = 0
   END IF 
   betr% = provi% - SRBetrag%
   REM CALL Fehler("betr%","")
 ELSE 
   IF haftung% <> 0 AND sr% <> 0 THEN 
     IF provi% > 0 THEN 
       SRBetrag% = VAL ( STR$ (((provi% - vertrprov%) / 100) * sr%,"999999999.00"))
       IF SRBetrag% < 0 THEN SRBetrag% = 0
     ELSE 
       IF SRRÅck.stamm LIKE "j" THEN 
         IF StornoVerrech.maadr <> "j" THEN 
           SRBetrag% = VAL ( STR$ (((provi% - vertrprov%) / 100) * sr%,"999999999.00"))
           REM IF SRBetrag% < 0 THEN SRBetrag% = 0
         ELSE 
           SRBetrag% = 0
         END IF 
       ELSE 
         SRBetrag% = 0
       END IF 
     END IF 
   ELSE 
     SRBetrag% = 0
   END IF 
   REM CALL Fehler("betr%","")
   betr% = provi% - vertrprov% - SRBetrag%
 END IF 
 IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
   IF sr.zeingan1 <> 0 THEN 
     SRBetrag% = (sr.zeingan1 * europroeinh.GEKOND / FirmaEurEinh.stamm) - GStornoDiff%
     GStornoDiff% = GStornoDiff% + SRBetrag%
   END IF 
 END IF 
 SELECT KEY ma1% LOCK FILE "maadr" INDEX codema.maadr
 REM CALL Fehler(nachname.maadr,"")
 Stornoreserve.maadr = Stornoreserve.maadr + SRBetrag%
 StornoreserveEU.maadr = VAL ( STR$ (Stornoreserve.maadr / euro1%,"999999999.00"))

 IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
   srtest% = sr.zeingan1 * - 1
   bwtest% = bewertung.zeingan1
   IF srtest% = bwtest% THEN 
     REM CALL Fehler("Einh nicht hochzÑhlen","")
     REM diese ZE ist eine SRZahlung, deshalb keine Einheiten hochzÑhlen
     IF EinhNichtBuchJN.zeingan1 <> "j" THEN EinhNichtBuchJN.zeingan1 = "j"
   END IF 
   IF FTabnurEinh.stamm = "j" AND ma1% <> vtcodema% THEN EinhNichtBuchJN.zeingan1 = "j"
   IF EigVertrag.kvertrag = "j" AND noBerechEinhEig.stamm = "j" THEN EinhNichtBuchJN.zeingan1 = "j"
   IF GFPB% = - 1 AND EigVertrag.kvertrag <> "j" AND GBewertung% <> GBewertungOld% THEN 
     einheit% = GBewertung% * Einheiten.kvertrag / GBewertungOld%
   END IF 
 END IF 
 
 einheitkv% = 0
 IF EinheitSach.stamm = "j" THEN 
   IF SparteIstSach.sparten <> 1 THEN 
     IF ma1% = vtcodema% THEN 
       IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
         IF EinheitAusGeko.stamm < 1 THEN 
           Einheiten.maadr = Einheiten.maadr + einheit%
           einheitkv% = einheit%
         END IF 
         IF betr% >= 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN 
             Einheiten.maadr = Einheiten.maadr + einheit%
             einheitkv% = einheit%
           END IF 
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN 
             Einheiten.maadr = Einheiten.maadr + einheit% * - 1
             einheitkv% = einheit% * - 1
           END IF 
         END IF 
       END IF 
     ELSE 
       
     END IF 
   ELSE 
     IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
       IF EinheitAusGeko.stamm < 1 THEN 
         Einheiten.maadr = Einheiten.maadr + einheit%
         einheitkv% = einheit%
       END IF 
       IF betr% >= 0 THEN 
         IF EinheitAusGeko.stamm > 0 THEN 
           Einheiten.maadr = Einheiten.maadr + einheit%
           einheitkv% = einheit%
         END IF 
       ELSE 
         IF EinheitAusGeko.stamm > 0 THEN 
           Einheiten.maadr = Einheiten.maadr + einheit% * - 1
           einheitkv% = einheit% * - 1
         END IF 
       END IF 
     END IF 
   END IF 
 ELSE 
   IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
     IF EinheitAusGeko.stamm < 1 THEN 
       Einheiten.maadr = Einheiten.maadr + einheit%
       einheitkv% = einheit%
     END IF 
     IF betr% >= 0 THEN 
       IF EinheitAusGeko.stamm > 0 THEN 
         Einheiten.maadr = Einheiten.maadr + einheit%
         einheitkv% = einheit%
       END IF 
     ELSE 
       IF EinheitAusGeko.stamm > 0 THEN 
         Einheiten.maadr = Einheiten.maadr + einheit% * - 1
         einheitkv% = einheit% * - 1
       END IF 
     END IF 
   END IF 
 END IF 
 IF ma1% = vtcodema% THEN 
   IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
     IF EinheitAusGeko.stamm < 1 THEN 
       EigEinheiten.maadr = EigEinheiten.maadr + einheit%
       einheitkv% = einheit%
       EinheitGes.maadr = EinheitGes.maadr + einheitkv%
     END IF 
     IF betr% >= 0 THEN 
       IF EinheitAusGeko.stamm > 0 THEN 
         EigEinheiten.maadr = EigEinheiten.maadr + einheit%
         einheitkv% = einheit%
         EinheitGes.maadr = EinheitGes.maadr + einheitkv%
       END IF 
     ELSE 
       IF EinheitAusGeko.stamm > 0 THEN 
         EigEinheiten.maadr = EigEinheiten.maadr + einheit% * - 1
         einheitkv% = einheit% * - 1
         EinheitGes.maadr = EinheitGes.maadr + einheitkv%
       END IF 
     END IF 
   END IF 
   StorWarnJN.buchung1 = GStorWarnJN$
   StorWarnDatGes.buchung1 = GStorWarnDGes$
   StorWarnDatMA.buchung1 = GStorWarnDMA$
   StorWarnGrund.buchung1 = GStorWarnGrund$
   StorWarnMasn.buchung1 = GStorWarnMasn$
   StorWarnErg.buchung1 = GStorWarnErg$
 ELSE 
   sEinheitGes.maadr = sEinheitGes.maadr + einheitkv%
 END IF 

 REM gesvol% = GesVolumen.maadr
 REM eigvol% = EigVolumen.maadr
 REM betr% = provi% - vertrprov% - SRBetrag%
 REM CALL Fehler("ges:" + STR$ (gesvol%,"99999"),"Eig:" + STR$ (eigvol%,"99999"))

 REM ****************************AUSZAHLUNGSSPERRE**********************************
 eigen% = 0
 PSpAll$ = PROVSperreAll.maadr
 PSpAllSeit% = PSperreAllSeit.maadr
 PROVSpEig$ = PROVSperreEig.maadr
 PSpESeit% = PSperreESeit.maadr
 
 IF ma1% = vtcodema% THEN 
   eigen% = 1
 END IF 
 IF PspAll$ = "j" THEN 
   IF PSpAllSeit% <= datumz% THEN 
     REM IF ma1% = 529 THEN CALL Fehler("TRIEBSCH","")
     AuszahlSperKo.maadr = AuszahlSperKo.maadr + betr%
     AuszahlSperKoEU.maadr = VAL ( STR$ (AuszahlSperKo.maadr / euro1%,"999999999.00"))
   END IF 
 ELSE 
   IF eigen% = 1 AND PROVSpEig$ = "j" THEN 
     IF PSpESeit% <= datumz% THEN 
       AuszahlSperKo.maadr = AuszahlSperKo.maadr + betr%
       AuszahlSperKoEU.maadr = VAL ( STR$ (AuszahlSperKo.maadr / euro1%,"999999999.00"))
     END IF 
   END IF 
 END IF 
 REM ****************************AUSZAHLUNGSSPERRE Ende********************************** 
 IF betr% >= 0 THEN 
   GesVolumen.maadr = GesVolumen.maadr + Volumen.KVERTRAG
   IF ma1% = vtcodema% THEN 
     EigVolumen.maadr = EigVolumen.maadr + Volumen.KVERTRAG
   END IF 
 ELSE 
   GesVolumen.maadr = GesVolumen.maadr + (Volumen.KVERTRAG * - 1)
   IF ma1% = vtcodema% THEN 
     EigVolumen.maadr = EigVolumen.maadr + (Volumen.KVERTRAG * - 1)
   END IF 
 END IF 
 REM gesvol% = GesVolumen.maadr
 REM eigvol% = EigVolumen.maadr
 AuszahlAB.maadr = AuszahlAB.maadr + betr%
 AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / euro1%,"999999999.00"))
 AuszProvABGes.maadr = AuszProvABGes.maadr + betr%
 AuszProvABGesEU.maadr = VAL ( STR$ (AuszProvABGes.maadr / euro1%,"999999999.00"))
 REM Workstation.maadr = Workstation%
 REM QWoNo.maadr = STR$ (Workstation%,"000000") + STR$ (codema.maadr,"000000")
 RecStatus.maadr = "c"
 betr$ = LTRIM$ ( STR$ (betr%,"99999999.00"))
 betr% = VAL (betr$)
 STORE FILE "maadr"
 UNLOCK CURRENT FILE "maadr"
 REM CALL Fehler("Buch " + STR$ (codema%,"000000"),"vsv betrag " + STR$ (betr%,",999999.00"))
 REM CALL Fehler("vsv","")
 IF codema% > 1 AND gfsc% = - 1 THEN 
   vsvs% = 2
   vsvjn$ = "j"
 END IF 
 IF gfsc% <> - 1 THEN 
   vsvjn$ = vsvjn.gekond
   vsvs% = vsv.gekond
 END IF 
 IF vsvjn$ = "j" AND vsvs% > 0 AND gezPflege% <> 1 AND provi% > 0 THEN 
   IF betr% = 0 THEN 
     vsv.buchung1 = 0
   ELSE 
     IF betr% > 0 THEN 
       vsv% = (betr% * vsvs%) / 100
       betr% = betr% - vsv%
       Betrag.buchung1 = betr%
       vsv.buchung1 = vsv%
     ELSE 
       vsv% = (betr% * vsvs%) / 100
       betr% = betr% - vsv%
       Betrag.buchung1 = betr%
       vsv.buchung1 = 0
     END IF 
   END IF 
 ELSE 
   Betrag.buchung1 = betr%
 END IF 

 IF mwstprovjn.vprodukt LIKE "j" AND mwstprov.vprodukt <> 0 THEN 
   mwstprov% = mwstprov.vprodukt
   REM CALL Fehler( STR$ (mwstprov%,"999.00"), STR$ (betr%,"999.00"))
   IF Mwstpflicht.maadr LIKE "j" THEN 
     IF mwstprovbn.gekond LIKE "n" THEN 
       REM Netto
       nettoeu% = betr%
       NettoEu.buchung1 = betr%
       mwstbetrag% = (betr% * mwstprov%) / 100
       mwstbetrag$ = STR$ (mwstbetrag%,"9999999.00")
       mwstbetrag% = VAL (mwstbetrag$)
       Betrag.buchung1 = nettoeu% + mwstbetrag%
       betrag% = Betrag.buchung1
       BetragEu.buchung1 = betrag%
     ELSE 
       REM brutto
       Betrag.buchung1 = betr%
       BetragEu.buchung1 = betr%
       nettobetrag% = (betr% * 100) / (mwstprov% + 100)
       nettobetrag$ = STR$ (nettobetrag%,"9999999.00")
       nettobetrag% = VAL (nettobetrag$)
       mwstbetrag% = betr% - nettobetrag%
       NettoEu.buchung1 = nettobetrag%
       REM mwstbetrag% = Betrag.buchung - NettoEu.buchung
     END IF 
     MWSTProz.buchung1 = mwstprov%
     MWSTBetragEu.buchung1 = mwstbetrag%
   ELSE 
     Betrag.buchung1 = betr%
     BetragEu.buchung1 = betr%
     NettoEu.buchung1 = betr%
     MWSTProz.buchung1 = 0
     MWSTBetragEu.buchung1 = 0
   END IF 
 ELSE 
   Betrag.buchung1 = betr%
   BetragEu.buchung1 = betr%
   NettoEu.buchung1 = betr%
   MWSTProz.buchung1 = 0
   MWSTBetragEu.buchung1 = 0
 END IF 
 codemagr.buchung1 = Codemagr.maadr
 CodeAGDir.buchung1 = Codeagdir.maadr
 Kostenstelle.buchung1 = Kostenstelle.maadr
 DebitorKto.buchung1 = Debitorkto.maadr
 KreditorKto.buchung1 = Kreditorkto.maadr




 REM *************************************************************************************************************************************
 REM Zentralberechnung des Kontostandes
 zusatz% = 0
 REM 23062004 CALL ZentrKTO(ma%,datumz%,betr%,SRBetrag%,codew%,euro1%,waehr1$,PSpAll$,PSpAllSeit%,PROVSpEig$,PSpESeit%,eigen%,zusatz%)
 CALL ZentrKTO(ma1%,datumz%,betr%,SRBetrag%,codew%,euro1%,waehr1$,PSpAll$,PSpAllSeit%,PROVSpEig$,PSpESeit%,eigen%,zusatz%,einheitkv%)
 REM *************************************************************************************************************************************
 Gesamtbetrag.buchung1 = provi%
 Bewertungssumme.buchung1 = Bewertung.zeingan1
 ProvBasiswert.buchung1 = Bewertung.zeingan1
 IF KundEinzahlung.zeingan1 <> 0 THEN 
   KundEinzahlung.buchung1 = KundEinzahlung.zeingan1
   KundEinzahluEu.buchung1 = VAL ( STR$ (KundEinzahlung.zeingan1 / umrechnung.buchung1,"999999999.00"))
 ELSE 
   KundEinzahlung.buchung1 = Bewertungssumme.kvertrag
   KundEinzahluEu.buchung1 = VAL ( STR$ (Bewertungssumme.kvertrag / umrechnung.buchung1,"999999999.00"))
 END IF 
 IF betrag.buchung1 > 0 THEN 
   Volumen.buchung1 = Volumen.KVERTRAG
 ELSE 
   Volumen.buchung1 = Volumen.KVERTRAG * - 1
 END IF 
 
 KÅndigung.buchung1 = KÅndigung.KVERTRAG
 IF GAFSK$ LIKE "TRUE" THEN 
   VS_Beginn.buchung1 = VS_Beginn.KVERTRAG
 ELSE 
   IF AnlageDatum.zeingan1 < 1 THEN 
     VS_Beginn.buchung1 = VS_Beginn.KVERTRAG
   ELSE 
     VS_Beginn.buchung1 = AnlageDatum.zeingan1
   END IF 
 END IF 
 Bewertung2.buchung1 = BewertKV.zeingan1
 IF GAFSK$ LIKE "TRUE" THEN 
   IF kundeinzahlung.zeingan1 <> 0 THEN 
     Bewertung2.buchung1 = kundeinzahlung.zeingan1
     Bewertung2EU.buchung1 = VAL ( STR$ (kundeinzahlung.zeingan1 / umrechnung.zeingan1,"999999999.00"))
   END IF 
 END IF 
 CodeKU.buchung1 = CodeKU.KVERTRAG
 vtagentur.buchung1 = Gvtagentur$
 vtcodema.buchung1 = Gvtcodema%
 Antragsnr.buchung1 = Antragsnr.KVERTRAG
 vs_nr.buchung1 = vs_nr.KVERTRAG
 UnterVermNr.buchung1 = UnterVermNr.KVERTRAG
 vsumme.buchung1 = vsumme.kvertrag
 vsummeEU.buchung1 = VAL ( STR$ (vsumme.kvertrag / umrechnung.buchung1,"999999999.00"))
 BeitragBrut.buchung1 = Beitrag.kvertrag
 BeitragNet.buchung1 = NettoBeitrag.kvertrag
 BeitragBrutEu.buchung1 = VAL ( STR$ (Beitrag.kvertrag / umrechnung.buchung1,"999999999.00"))
 BeitragNetEu.buchung1 = VAL ( STR$ (NettoBeitrag.kvertrag / umrechnung.buchung1,"999999999.00"))
 zw.buchung1 = zw.kvertrag
 mwst.buchung1 = mwst.kvertrag
 IF zw.buchung1 > 0 THEN 
   JahresBBrut.buchung1 = BeitragBrut.buchung1 * zw.buchung1
   JahresBNet.buchung1 = BeitragNet.buchung1 * zw.buchung1
   JahresBBrutEu.buchung1 = VAL ( STR$ (JahresBBrut.buchung1 / umrechnung.buchung1,"999999999.00"))
   JahresBNetEu.buchung1 = VAL ( STR$ (JahresBNet.buchung1 / umrechnung.buchung1,"999999999.00"))
 ELSE 
   JahresBBrut.buchung1 = BeitragBrut.buchung1
   JahresBNet.buchung1 = BeitragNet.buchung1
   JahresBBrutEu.buchung1 = VAL ( STR$ (JahresBBrut.buchung1 / umrechnung.buchung1,"999999999.00"))
   JahresBNetEu.buchung1 = VAL ( STR$ (JahresBNet.buchung1 / umrechnung.buchung1,"999999999.00"))
 END IF 

 APJN.buchung1 = APjn.gekond
 CourtJN.buchung1 = CourtageJN.gekond
 SRjn.buchung1 = SRJN.gekond
 PflegeJN.buchung1 = PflegeJN.gekond
 APProzente.buchung1 = AP.gekond
 CourtProzente.buchung1 = Courtage.gekond
 PflegProzente.buchung1 = PflegeProvi.gekond
 SRProzente.buchung1 = sr.gekond

   VSVjn.buchung1 = vsvjn$
   VSVProz.buchung1 = vsvs%
   DynamikPjn.buchung1 = DynamikPjn.gekond
   DynamikProz.buchung1 = DynamikProz.gekond
   Betreujn.buchung1 = Betreujn.gekond
   BetreuProz.buchung1 = BetreuProz.gekond


 codew.buchung1 = codew%
 waehrung.buchung1 = waehr1$
 REM GOTO w030420061
 REM ***************************************************************************************************************
 REM wurde weiter oben schon gemacht
 IF EinheitSach.stamm = "j" THEN 
   IF SparteIstSach.sparten <> 1 THEN 
     IF ma1% = vtcodema% THEN 
       IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
         IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung1 = einheit%
         IF betr% >= 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheit%
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheit% * - 1
         END IF 
       END IF 
     END IF 
   ELSE 
     IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
       IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung1 = einheit%
       IF betr% >= 0 THEN 
         IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheit%
       ELSE 
         IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheit% * - 1
       END IF 
     END IF 
   END IF 
 ELSE 
   IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
     IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung1 = einheit%
     IF betr% >= 0 THEN 
       IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheit%
     ELSE 
       IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheit% * - 1
     END IF 
   END IF 
 END IF 
 REM ***************************************************************************************************************

w030420061: 
 SELECT KEY CodeVA.kvertrag FILE "SPARTEN" INDEX CodeVA.SPARTEN
 Sparte.buchung1 = Sparte.SPARTEN
 SELECT KEY CodeKU.KVERTRAG FILE GAdrDat$ INDEX CodeKU.GAdrDat$
 Nachname.buchung1 = Nachname.GAdrDat$
 Vorname.buchung1 = Vorname.GAdrDat$
 SELECT KEY CodeGE.KVERTRAG FILE "GEADR" INDEX CodeGE.GEADR
 Gesellschaft.buchung1 = LEFT$ (Gesellschaft.GEADR,30)
 Provision.buchung1 = "j"
 IF sr% = 0 THEN 
   SRgezahlt.buchung1 = "j"
   SR.buchung1 = 0
 ELSE 
   REM 060497
   IF Haftung% = - 1 THEN 
     SRAuszahlung.buchung1 = 0
     SR.buchung1 = SRBetrag%
   ELSE 
     SRAuszahlung.buchung1 = Haftung%
     SR.buchung1 = SRBetrag%
   END IF 
 END IF 
 IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
   IF SRBetrag% <> 0 THEN 
     IF GFPB% = - 1 THEN 
       SRAuszahlung.buchung1 = 0
     END IF 
   END IF 
 END IF 
 REM CALL QuickStore("Buchung1")
 agentur.buchung1 = LEFT$ ( LTRIM$ (nachname.maadr) + ", " + LTRIM$ (vorname.maadr) + ", " + LTRIM$ (Agenturnr.maadr) + " , Stufe:" + STR$ (stufe.maadr,"000"),100)
 QuickCode.BUCHUNG1 = STR$ (CodeMA.BUCHUNG1,"000000") + DATE$ (Datum.BUCHUNG1,"yyyymm0d")
 QCodeMAPROD.buchung1 = STR$ (CodeMA.buchung1,"000000") + VSNRPack$(Gesellschaft.buchung1) + VSNRPack$(Sparte.buchung1)
 Workstation.Buchung1 = Workstation%
 QWoNo.Buchung1 = STR$ (Workstation%,"000000") + STR$ (CodeBu.Buchung1,"000000")
 RecStatus.Buchung1 = "c"
 CALL BU1DMEuro(umrechnung.buchung1)
 buday.buchung1 = DAY (Datum.buchung1)
 QCodeMAVT.buchung1 = STR$ (codema.buchung1,"000000") + STR$ (codevt.buchung1,"000000")
 timestamp$ = DATE$ ( TODAY ,"yymmdd") + STR$ ( HRS ( NOW ) * 100 + MINS ( NOW ),"0000")
 timestamp% = VAL (timestamp$)
 timestamp.buchung1 = timestamp%
         IF gebuchtjn.buchung1 <> 1 THEN gebuchtjn.buchung1 = 0
         gebuchtJNDat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + DATE$ (datum.buchung1,"yyyymm0d")
         gebuchtJNMADat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + STR$ (Codema.buchung1,"000000") + DATE$ (datum.buchung1,"yyyymm0d")
 STORE FILE "Buchung1"
 UNLOCK CURRENT FILE "Buchung1"
 IF GAFSK$ = "TRUE" THEN 
   IF remark2$ LIKE "erst*" OR remark$ LIKE "erst*" THEN 
     SELECT FIRST FILE "KVFAEL" INDEX codevt.kvfael
     SELECT KEY lfdnr.kvertrag LOCK FILE "KVFAEL" INDEX codevt.kvfael
     codebu.kvfael = codebu%
     STORE FILE "kvfael"
     UNLOCK CURRENT FILE "kvfael"
   END IF 
 END IF 
 MOUSE OFF 
 REM -- Aufsummierung der einzelnen Provisionsarten
 REM    fÅr Differenzberechnung
 gesetz11% = 0
 IF (remark2$ LIKE "Abschlu*" OR remark$ LIKE "Ersatz*" OR remark2$ LIKE "Dyn*" OR remark2$ LIKE "AP*" OR remark$ LIKE "AP*") AND (kondart.zeingan1 = 0 OR kondart.zeingan1 = 3 OR kondart.zeingan1 = 4) THEN 
   vsumAP% = provi%
   gesetz11% = - 1
 END IF 
 IF (remark2$ LIKE "Courta*" OR remark$ LIKE "Courta*") AND kondart.zeingan1 = 1 THEN 
   vsumC% = provi%
   gesetz11% = - 1
 END IF 
 IF (remark2$ LIKE "Pflege*" OR remark2$ LIKE "Betreu*") AND (kondart.zeingan1 = 2 OR kondart.zeingan1 = 5) THEN 
   vsumPP% = provi%
   gesetz11% = - 1
 END IF 
 IF remark2$ LIKE "Pauschal*" OR remark$ LIKE "Pauschal*" THEN 
   vsumPausch% = provi%
   gesetz11% = - 1
 END IF 
 IF remark2$ LIKE "VD*" OR remark$ LIKE "VD*" THEN 
   vsumAP% = provi%
   gesetz11% = - 1
 ELSE 
   IF gesetz11% = 0 THEN 
     vertrprov% = provi%
   END IF 
 END IF 
 REM 09102002
 SELECT FIRST FILE "maadr" INDEX codema.maadr
 SELECT KEY ma% FILE "maadr" INDEX codema.maadr
 REM Vorschussbehandlung
 IF ma% = codema.kvertrag THEN 
   REM fÅr den Mitarbeiter wurde eine Vertragsprovision errechnet, deshalb RÅckbelastung des Vorschusses, falls einer gezahlt wurde
   IF kzv.kvertrag = "j" AND FS24DatVors.kvertrag > 0 AND FS24Vors.kvertrag > 0 AND FS24VorsRu.kvertrag <> "j" THEN 
     abf$ = FILE 
     REM Vorschu· mu· zurÅckgerechnet werden
     REM wie Zusatzbuchung machen
     BLANK FILE "buchung1"
     CodeBU.buchung1 = SER ("buchung1",1)
           IF LTRIM$ (FS24Satz_ID2.kvertrag) <> "" THEN 
             FS24Satz_ID.buchung1 = FS24Satz_ID2.kvertrag
           ELSE 
             FS24Satz_ID.buchung1 = FS24Satz_ID.kvertrag
           END IF 
     FÑlligkeit.buchung1 = TODAY 
     Sparte.buchung1 = Sparte.SPARTEN
     vs_Beginn.buchung1 = vs_beginn.kvertrag
     Nachname.buchung1 = Nachname.GAdrDat$
     Vorname.buchung1 = Vorname.GAdrDat$
     Gesellschaft.buchung1 = Gesellschaft.GEADR
     Provision.buchung1 = ""
     codeku.buchung1 = codeku.kvertrag
     CodeMA.buchung1 = ma1%
     SELECT FIRST FILE "maadr" INDEX codema.maadr
     SELECT KEY ma% FILE "maadr" INDEX codema.maadr
     codevt.buchung1 = lfdnr.kvertrag
     Buchungstext.buchung1 = "RÅckzahlung Vorschuss: " + VS_NR.kvertrag
     VTAgentur.buchung1 = LEFT$ (Nachname.maadr + "," + vorname.maadr,100)
     Datum.buchung1 = TODAY 
     sbetr% = FS24Vors.kvertrag * - 1
     Betrag.buchung1 = FS24Vors.kvertrag * - 1
     VTCodema.buchung1 = ma1%
     Codew.buchung1 = 3
     umrechnung.buchung1 = 1
     waehrung.buchung1 = "EUR"
     BetragEU.buchung1 = VAL ( STR$ (Betrag.buchung1 / umrechnung.buchung1,"99999999.00"))
     vtagentur.buchung1 = LEFT$ ( LTRIM$ (nachname.maadr) + ", " + LTRIM$ (vorname.maadr) + ", " + LTRIM$ (Agenturnr.maadr) + " , Stufe:" + STR$ (stufe.maadr,"000"),100)
     agentur.buchung1 = LEFT$ ( LTRIM$ (nachname.maadr) + ", " + LTRIM$ (vorname.maadr) + ", " + LTRIM$ (Agenturnr.maadr) + " , Stufe:" + STR$ (stufe.maadr,"000"),100)
     QuickCode.BUCHUNG1 = STR$ (CodeMA.BUCHUNG1,"000000") + DATE$ (Datum.BUCHUNG1,"yyyymm0d")
     QCodeMAPROD.buchung1 = STR$ (CodeMA.buchung1,"000000") + VSNRPack$(Gesellschaft.buchung1) + VSNRPack$(Sparte.buchung1)
     Workstation.Buchung1 = Workstation%
     QWoNo.Buchung1 = STR$ (Workstation%,"000000") + STR$ (CodeBu.Buchung1,"000000")
     RecStatus.Buchung1 = "c"
     CALL BU1DMEuro(umrechnung.buchung1)
     buday.buchung1 = DAY (Datum.buchung1)
     vorschujn.buchung1 = 1
     QCodeMAVT.buchung1 = STR$ (codema.buchung1,"000000") + STR$ (codevt.buchung1,"000000")
     timestamp$ = DATE$ ( TODAY ,"yymmdd") + STR$ ( HRS ( NOW ) * 100 + MINS ( NOW ),"0000")
     timestamp% = VAL (timestamp$)
     Timestamp.buchung1 = timestamp%
         IF gebuchtjn.buchung1 <> 1 THEN gebuchtjn.buchung1 = 0
         gebuchtJNDat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + DATE$ (datum.buchung1,"yyyymm0d")
         gebuchtJNMADat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + STR$ (Codema.buchung1,"000000") + DATE$ (datum.buchung1,"yyyymm0d")

     CodeEingGE.BUCHUNG1 = CodeEingGE.kvertrag
     EingereichtBei.BUCHUNG1 = EingereichtBei.kvertrag


     STORE FILE "Buchung1"
     FILE "kvertrag"
     SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
     SELECT KEY codevt.buchung1 LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
     FS24DatVorsR.kvertrag = TODAY 
     FS24VorsRu.kvertrag = "j"
     STORE FILE "kvertrag"
     CALL ZentrKTO(ma1%,datumz%,sbetr%,0,3,1,"EUR",PSpAll$,PSpAllSeit%,PROVSpEig$,PSpESeit%,1,zusatz%,0)
    
     SELECT KEY ma1% LOCK FILE "maadr" INDEX codema.maadr
     AuszahlAB.maadr = AuszahlAB.maadr + sbetr%
     AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / euro1%,"999999999.00"))
     zusAuszahl.maadr = zusAuszahl.maadr + sbetr%
     zusAuszahlEU.maadr = VAL ( STR$ (zusAuszahl.maadr / euro1%,"999999999.00"))
     aktZusB.maadr = aktZusB.maadr + sbetr%
     aktZusBEU.maadr = VAL ( STR$ (aktZusB.maadr / euro1%,"999999999.00"))
     STORE FILE "maadr"
     UNLOCK CURRENT FILE "maadr"
     FILE abf$
   END IF 
 END IF 
 IF remark2$ LIKE "Cour*" OR remark2$ LIKE "*Cour*" OR remark$ LIKE "Cour*" OR remark$ LIKE "*Cour*" OR kondart.zeingan1 = 1 THEN 
   SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
   SELECT KEY _lfdnr% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
   KuenCourt1.kvertrag = "j"
   STORE FILE "kvertrag"
 END IF 
 END SUB 
 
 
SUB RegProvFoerd(remark$,vonma%,fuerma%,provi%,sr%,Haftung%,datumz%,fÑlligkeit%,euro1%,codew%,waehr1$,zein%,remark2$,prozent%,pauschal%)
 IF remark2$ = "" AND remark$ <> "" THEN remark2$ = remark$
 IF remark$ = "" AND remark2$ <> "" THEN remark$ = remark2$
 REM sr% = 0
 cfile$ = FILE 
 FILE "kvertrag"
 _lfdnr% = lfdnr.KVERTRAG
 ma% = fuerma%
 SELECT KEY _lfdnr% LOCK FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
 SELECT FIRST FILE "maadr" INDEX CodeMA.MAADR
 SELECT KEY ma% FILE "maadr" INDEX CodeMA.MAADR
 
 codevp% = codevp.kvertrag
 SELECT FIRST FILE "VPRODUKT" INDEX codevp.vprodukt
 SELECT KEY codevp% FILE "VPRODUKT" INDEX codevp.vprodukt

 IF prozent% <> 0 THEN 
   betr1% = (provi% * prozent%) / 100
   SRBetrag% = ((betr1%) / 100) * sr%
   betr% = betr1% - SRBetrag%
 ELSE 
   REM Pauschale
   betr1% = pauschal%
   SRBetrag% = ((betr1%) / 100) * sr%
   betr% = betr1% - SRBetrag%
 END IF 

 IF (betr% <> 0 OR sr% <> 0) AND ma% > 0 THEN 
 ELSE 
   GOTO end2006011501
 END IF 

 FILE "buchung1"
 BLANK 
 CodeBU.buchung1 = SER ("buchung1",1)
 codeaz.buchung1 = codeaz.zeingan1
 Datum.buchung1 = datumz%
 fÑlligkeit.buchung1 = fÑlligkeit%
 Ausgabeauf.buchung1 = ausgabeauf.zeingan1
 CodeVT.buchung1 = lfdnr.kvertrag
 IF KÅndigung.MAADR <= datumz% AND Nachfolger.MAADR <> 0 THEN 
   CodeMA.buchung1 = Nachfolger.MAADR
   ma1% = Nachfolger.MAADR
   Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
 ELSE 
   CodeMA.buchung1 = ma%
   ma1% = ma%
   Buchungstext.buchung1 = LEFT$ (remark$,70)
 END IF 
 
 Buchungstext.buchung1 = LEFT$ (Buchungstext.buchung1 + " FîP",70)
 SELECT KEY ma1% LOCK FILE "maadr" INDEX codema.maadr
 REM vertrprov% = 0
 REM SRBetrag% = 0
 IF prozent% <> 0 THEN 
   betr1% = (provi% * prozent%) / 100
   SRBetrag% = ((betr1%) / 100) * sr%
   betr% = betr1% - SRBetrag%
 ELSE 
   REM Pauschale
   betr1% = pauschal%
   SRBetrag% = ((betr1%) / 100) * sr%
   betr% = betr1% - SRBetrag%
 END IF 
 Stornoreserve.maadr = Stornoreserve.maadr + SRBetrag%
 StornoreserveEU.maadr = VAL ( STR$ (Stornoreserve.maadr / euro1%,"999999999.00"))
 AuszahlAB.maadr = AuszahlAB.maadr + betr%
 AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / euro1%,"999999999.00"))
 AuszProvABGes.maadr = AuszProvABGes.maadr + betr%
 AuszProvABGesEU.maadr = VAL ( STR$ (AuszProvABGes.maadr / euro1%,"999999999.00"))
 REM Workstation.maadr = Workstation%
 REM QWoNo.maadr = STR$ (Workstation%,"000000") + STR$ (codema.maadr,"000000")
 RecStatus.maadr = "c"
 STORE FILE "maadr"
 UNLOCK CURRENT FILE "MAADR"

 REM *****************************************************************************************************
 REM Zentralberechnung des Kontostandes
 zusatz% = 0
 CALL ZentrKTO(ma%,datumz%,betr%,SRBetrag%,codew%,euro1%,waehr1$,PSpAll$,PSpAllSeit%,PROVSpEig$,PSpESeit%,eigen%,zusatz%,0)
 REM ***************************************************************************************************** 
 Betrag.buchung1 = betr%
 

 IF mwstprovjn.vprodukt LIKE "j" AND mwstprov.vprodukt <> 0 THEN 
   mwstprov% = mwstprov.vprodukt
   REM CALL Fehler( STR$ (mwstprov%,"999.00"), STR$ (betr%,"999.00"))
   IF Mwstpflicht.maadr LIKE "j" THEN 
     IF mwstprovbn.gekond LIKE "n" THEN 
       REM Netto
       nettoeu% = betr%
       NettoEu.buchung1 = betr%
       mwstbetrag% = (betr% * mwstprov%) / 100
       mwstbetrag$ = STR$ (mwstbetrag%,"9999999.00")
       mwstbetrag% = VAL (mwstbetrag$)
       Betrag.buchung1 = nettoeu% + mwstbetrag%
       betrag% = Betrag.buchung1
       BetragEu.buchung1 = betrag%
       
     ELSE 
       REM brutto
       Betrag.buchung1 = betr%
       BetragEu.buchung1 = betr%
       nettobetrag% = (betr% * 100) / (mwstprov% + 100)
       nettobetrag$ = STR$ (nettobetrag%,"9999999.00")
       nettobetrag% = VAL (nettobetrag$)
       mwstbetrag% = betr% - nettobetrag%
       NettoEu.buchung1 = nettobetrag%
       REM mwstbetrag% = Betrag.buchung - NettoEu.buchung
     END IF 
     MWSTProz.buchung1 = mwstprov%
     MWSTBetragEu.buchung1 = mwstbetrag%
   ELSE 
     Betrag.buchung1 = betr%
     BetragEu.buchung1 = betr%
     NettoEu.buchung1 = betr%
     MWSTProz.buchung1 = 0
     MWSTBetragEu.buchung1 = 0
   END IF 
 ELSE 
   Betrag.buchung1 = betr%
   BetragEu.buchung1 = betr%
   NettoEu.buchung1 = betr%
   MWSTProz.buchung1 = 0
   MWSTBetragEu.buchung1 = 0
 END IF 
 codemagr.buchung1 = Codemagr.maadr
 CodeAGDir.buchung1 = Codeagdir.maadr
 Kostenstelle.buchung1 = Kostenstelle.maadr
 DebitorKto.buchung1 = Debitorkto.maadr
 KreditorKto.buchung1 = Kreditorkto.maadr
 

 Gesamtbetrag.buchung1 = betr%
 Bewertungssumme.buchung1 = Bewertung.zeingan1
 ProvBasiswert.buchung1 = Bewertung.zeingan1
 IF betrag.buchung1 > 0 THEN 
   Volumen.buchung1 = Volumen.KVERTRAG
 ELSE 
   Volumen.buchung1 = Volumen.KVERTRAG * - 1
 END IF 
 
 KÅndigung.buchung1 = KÅndigung.KVERTRAG
 VS_Beginn.buchung1 = VS_Beginn.KVERTRAG
 Bewertung2.buchung1 = BewertKV.zeingan1
 CodeKU.buchung1 = CodeKU.KVERTRAG
 vtagentur.buchung1 = Gvtagentur$
 vtcodema.buchung1 = Gvtcodema%
 umrechnung.buchung1 = euro1%
 
 vsumme.buchung1 = vsumme.kvertrag
 vsummeEU.buchung1 = VAL ( STR$ (vsumme.kvertrag / umrechnung.buchung1,"999999999.00"))
 BeitragBrut.buchung1 = Beitrag.kvertrag
 BeitragNet.buchung1 = NettoBeitrag.kvertrag
 BeitragBrutEu.buchung1 = VAL ( STR$ (Beitrag.kvertrag / umrechnung.buchung1,"999999999.00"))
 BeitragNetEu.buchung1 = VAL ( STR$ (NettoBeitrag.kvertrag / umrechnung.buchung1,"999999999.00"))
 zw.buchung1 = zw.kvertrag
 mwst.buchung1 = mwst.kvertrag
 VS_Beginn.buchung1 = VS_Beginn.kvertrag
 IF zw.buchung1 > 0 THEN 
   JahresBBrut.buchung1 = BeitragBrut.buchung1 * zw.buchung1
   JahresBNet.buchung1 = BeitragNet.buchung1 * zw.buchung1
   JahresBBrutEu.buchung1 = VAL ( STR$ (JahresBBrut.buchung1 / umrechnung.buchung1,"999999999.00"))
   JahresBNetEu.buchung1 = VAL ( STR$ (JahresBNet.buchung1 / umrechnung.buchung1,"999999999.00"))
 ELSE 
   JahresBBrut.buchung1 = BeitragBrut.buchung1
   JahresBNet.buchung1 = BeitragNet.buchung1
   JahresBBrutEu.buchung1 = VAL ( STR$ (JahresBBrut.buchung1 / umrechnung.buchung1,"999999999.00"))
   JahresBNetEu.buchung1 = VAL ( STR$ (JahresBNet.buchung1 / umrechnung.buchung1,"999999999.00"))
 END IF 
 
 APJN.buchung1 = APjn.gekond
 CourtJN.buchung1 = CourtageJN.gekond
 SRjn.buchung1 = SRJN.gekond
 PflegeJN.buchung1 = PflegeJN.gekond
 APProzente.buchung1 = AP.gekond
 CourtProzente.buchung1 = Courtage.gekond
 PflegProzente.buchung1 = PflegeProvi.gekond
 SRProzente.buchung1 = sr.gekond
   VSVjn.buchung1 = VSVjn$
   VSVProz.buchung1 = vsvs%
   DynamikPjn.buchung1 = DynamikPjn.gekond
   DynamikProz.buchung1 = DynamikProz.gekond
   Betreujn.buchung1 = Betreujn.gekond
   BetreuProz.buchung1 = BetreuProz.gekond




 codew.buchung1 = codew%
 waehrung.buchung1 = waehr1$
 SELECT KEY CodeVA.kvertrag FILE "SPARTEN" INDEX CodeVA.SPARTEN
 Sparte.buchung1 = Sparte.SPARTEN
 SELECT KEY CodeKU.KVERTRAG FILE GAdrDat$ INDEX CodeKU.GAdrDat$
 Nachname.buchung1 = Nachname.GAdrDat$
 Vorname.buchung1 = Vorname.GAdrDat$
 SELECT KEY CodeGE.KVERTRAG FILE "GEADR" INDEX CodeGE.GEADR
 Gesellschaft.buchung1 = Gesellschaft.GEADR
 Provision.buchung1 = "j"
 IF sr% = 0 THEN 
   SRgezahlt.buchung1 = "j"
   SR.buchung1 = 0
 ELSE 
   REM 060497
   IF Haftung% = - 1 THEN 
     SRAuszahlung.buchung1 = 0
     SR.buchung1 = SRBetrag%
   ELSE 
     SRAuszahlung.buchung1 = Haftung%
     SR.buchung1 = SRBetrag%
   END IF 
 END IF 
 REM CALL QuickStore("Buchung1")
 agentur.buchung1 = LEFT$ ( LTRIM$ (nachname.maadr) + ", " + LTRIM$ (vorname.maadr) + ", " + LTRIM$ (Agenturnr.maadr) + " , Stufe:" + STR$ (stufe.maadr,"000"),100)
 QuickCode.BUCHUNG1 = STR$ (CodeMA.BUCHUNG1,"000000") + DATE$ (Datum.BUCHUNG1,"yyyymm0d")
 Workstation.Buchung1 = Workstation%
 QWoNo.Buchung1 = STR$ (Workstation%,"000000") + STR$ (CodeBu.Buchung1,"000000")
 RecStatus.Buchung1 = "c"
 CALL BU1DMEuro(umrechnung.buchung1)
 buday.buchung1 = DAY (Datum.buchung1)
 QCodeMAVT.buchung1 = STR$ (codema.buchung1,"000000") + STR$ (codevt.buchung1,"000000")
     timestamp$ = DATE$ ( TODAY ,"yymmdd") + STR$ ( HRS ( NOW ) * 100 + MINS ( NOW ),"0000")
     timestamp% = VAL (timestamp$)
     Timestamp.buchung1 = timestamp%
         IF gebuchtjn.buchung1 <> 1 THEN gebuchtjn.buchung1 = 0
         gebuchtJNDat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + DATE$ (datum.buchung1,"yyyymm0d")
         gebuchtJNMADat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + STR$ (Codema.buchung1,"000000") + DATE$ (datum.buchung1,"yyyymm0d")
         CodeEingGE.BUCHUNG1 = CodeEingGE.kvertrag
         EingereichtBei.BUCHUNG1 = EingereichtBei.kvertrag
 STORE FILE "Buchung1"
end2006011501: 
 UNLOCK CURRENT FILE "Buchung1"
 MOUSE OFF 
 
 END SUB 


 
SUB SpezProvisF(remark$,ma%,VertrVonMa1%,provi%,sr%,Haftung%,datumz%,fÑlligkeit%,euro1%,codew%,waehr1$,zein%)
 REM CALL Fehler("SpezProvisF","")
 cfile$ = FILE 
 FILE "kvertrag"
 _lfdnr% = lfdnr.KVERTRAG
 SELECT KEY _lfdnr% LOCK FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
 SELECT KEY ma% FILE "maadr" INDEX CodeMA.MAADR
 SELECT KEY codeva.kvertrag FILE "sparten" INDEX codeva.sparten

 codevp% = codevp.kvertrag
 SELECT FIRST FILE "VPRODUKT" INDEX codevp.vprodukt
 SELECT KEY codevp% FILE "VPRODUKT" INDEX codevp.vprodukt


 REM *********************************** Fîrderkonditionen ************************************************
 IF EXISTS (ma%,voncodema.foerkond) AND GFoerdVerr% <> - 1 AND FoerdAufSpez.stamm = "j" THEN 
   REM CALL Fehler(nachname.maadr,"Fîrderkond!!!!")
   ffile$ = FILE 
   FILE "foerkond"
   INDEX voncodema.foerkond
   SELECT FIRST FILE "foerkond" INDEX voncodema.foerkond
   SELECT KEY ma% FILE "foerkond" INDEX voncodema.foerkond
   proz% = 0
   pausch% = 0
   REM CALL Fehler("GFdate$: " + GFdate$,"")
   IF GFdate$ <> "" THEN 
     gfdate% = DAYS (GFDate$)
     IF Antragsdatum.KVERTRAG < gfdate% THEN 
       ProviAb1% = VS_Beginn.KVERTRAG
     ELSE 
       ProviAb1% = Antragsdatum.KVERTRAG
     END IF 
   ELSE 
     IF Gvueb$ = "TRUE" THEN 
       ProviAb1% = Antragsdatum.KVERTRAG
     ELSE 
       ProviAb1% = VS_Beginn.KVERTRAG
     END IF 
   END IF 
   WHILE NOT EOF ("foerkond") AND voncodema.foerkond = ma%
     REM jetzt Buchung erzeugen
     ok% = 0
     IF BWvon.foerkond > 0 THEN 
       IF BWBis.foerkond > 0 THEN 
         REM DatumseinschrÑnkung fÅr BWVon und BWBis
         IF ProviAb1% >= BWvon.foerkond AND ProviAb1% <= BWBis.foerkond THEN ok% = - 1
       ELSE 
         REM DatumseinschrÑnkung fÅr BWvon
         IF ProviAb1% >= BWvon.foerkond THEN ok% = - 1
       END IF 
     ELSE 
       IF BWBis.foerkond > 0 THEN 
         REM DatumseinschrÑnkung fÅr BWBis
         IF ProviAb1% <= BWBis.foerkond THEN ok% = - 1
       ELSE 
         REM keine DatumseinschrÑnkung
         ok% = - 1
       END IF 
     END IF 
     IF VvonCodema.foerkond > 0 THEN 
       IF VvonCodema.foerkond <> Codema.kvertrag THEN ok% = 0
     END IF 
     IF ok% = - 1 THEN 
       REM Aufruf der Weiterverarbeitung
       IF prozente.foerkond <> 0 THEN 
         proz% = proz% + prozente.foerkond
       ELSE 
         pausch% = pausch% + pauschale.foerkond
       END IF 
       mma% = codema.foerkond
       prozent% = prozente.foerkond
       pauschal% = pauschale.foerkond
       REM Aufruf fÅr den der FîP bekommt
       ppp% = provi% - vertrprov%
       srnull% = sr%
       REM CALL Fehler("Test","FôP auf Spezi " + STR$ (ppp%,",9999999.00"))
       IF ppp% <> 0 OR sr% <> 0 THEN CALL RegProvFoerd(remark$,ma%,mma%,ppp%,srnull%,Haftung%,datumz%,fÑlligkeit%,euro1%,codew%,waehr1$,zein%,remark2$,prozent%,pauschal%)
       REM jetzt negativen Buchungssatz erzeugen fÅr den, dem die FîP abgezogen wird
       ppp% = (provi% - vertrprov%) * - 1
       srnull% = sr%
       pauschal% = pauschal% * - 1
       IF ppp% <> 0 OR sr% <> 0 THEN CALL RegProvFoerd(remark$,mma%,ma%,ppp%,srnull%,Haftung%,datumz%,fÑlligkeit%,euro1%,codew%,waehr1$,zein%,remark2$,prozent%,pauschal%)
     END IF 
     SELECT NEXT FILE "foerkond" INDEX voncodema.foerkond
   WEND 
   REM VS_Beginn.KVERTRAG
   FILE ffile$
 END IF 
 REM ******************************************  Ende Fîrderkonditionen ************************************************* 


 REM -- bereits gezahlte Provisionen verallgemeinern
 
 FILE "buchung1"
 BLANK 
 CodeBU.buchung1 = SER ("buchung1",1)
 codeaz.buchung1 = codeaz.zeingan1
 Datum.buchung1 = datumz%
 fÑlligkeit.buchung1 = fÑlligkeit%
 Ausgabeauf.buchung1 = ausgabeauf.zeingan1
 CodeVT.buchung1 = lfdnr.kvertrag
 REM Kondart abfragen
 kondart% = kondart.zeingan1
 IF KÅndigung.MAADR <= datumz% AND Nachfolger.MAADR <> 0 THEN 
   SELECT CASE kondart%
   CASE 0,3,4
     REM AP
     IF Kuenap.maadr LIKE "j" THEN 
       REM AP wir weitergezahlt
       CodeMA.buchung1 = ma%
       ma1% = ma%
       Buchungstext.buchung1 = LEFT$ (remark$,70)
     ELSE 
       CodeMA.buchung1 = Nachfolger.MAADR
       ma1% = Nachfolger.MAADR
       Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
     END IF 
   CASE 1
     REM Courtage
     IF KuenCourt1.maadr LIKE "j" THEN 
       REM die erste courtage soll noch gezahlt werden
       IF KuenCourt1.kvertrag <> "j" THEN 
         REM KuenCourt1.kvertrag = "j"
         CodeMA.buchung1 = ma%
         ma1% = ma%
         Buchungstext.buchung1 = LEFT$ (remark$,70)
       ELSE 
         CodeMA.buchung1 = Nachfolger.MAADR
         ma1% = Nachfolger.MAADR
         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
       END IF 
     ELSE 
       IF KuenCourtAlle.maadr LIKE "j" THEN 
         CodeMA.buchung1 = ma%
         ma1% = ma%
         Buchungstext.buchung1 = LEFT$ (remark$,70)
       ELSE 
         CodeMA.buchung1 = Nachfolger.MAADR
         ma1% = Nachfolger.MAADR
         Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
       END IF 
     END IF 
   CASE 2,5
     REM Pflege
     IF KuenPflege.maadr LIKE "j" THEN 
       CodeMA.buchung1 = ma%
       ma1% = ma%
       Buchungstext.buchung1 = LEFT$ (remark$,70)
     ELSE 
       CodeMA.buchung1 = Nachfolger.MAADR
       ma1% = Nachfolger.MAADR
       Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
     END IF 
   END SELECT 
 ELSE 
   CodeMA.buchung1 = ma%
   ma1% = ma%
   Buchungstext.buchung1 = LEFT$ (remark$,70)
 END IF 
 IF dmeinh% > 0 THEN einheit% = provi% / dmeinh%
 IF EinheitAusGeko.stamm < 1 THEN 
 ELSE 
   einheit% = einheiten.kvertrag
 END IF 
 IF GFPB% = - 1 THEN 
   einheit% = GEinhEinmSpez%
   GEinhEinmSpez% = 0
 END IF 

 IF haftung% <> 0 AND sr% <> 0 THEN 
   IF provi% > 0 THEN 
     SRBetrag% = ((provi% - vertrprov%) / 100) * sr%
   ELSE 
     IF SRRÅck.stamm LIKE "j" THEN 
       IF StornoVerrech.maadr <> "j" THEN 
         SRBetrag% = ((provi% - vertrprov%) / 100) * sr%
       ELSE 
         SRBetrag% = 0
       END IF 
     END IF 
   END IF 
 ELSE 
   SRBetrag% = 0
 END IF 
 SELECT KEY ma1% LOCK FILE "maadr" INDEX codema.maadr
 Stornoreserve.maadr = Stornoreserve.maadr + SRBetrag%
 StornoreserveEU.maadr = VAL ( STR$ (Stornoreserve.maadr / euro1%,"999999999.00"))


 betr% = provi% - vertrprov% - SRBetrag%
 einheitkv% = 0
 IF GBVF$ <> "TRUE" THEN 
   IF EinheitSach.stamm = "j" THEN 
     IF SparteIstSach.sparten <> 1 THEN 
       IF ma1% = vtcodema% THEN 
         IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
           IF EinheitAusGeko.stamm < 1 THEN 
             Einheiten.maadr = Einheiten.maadr + einheit%
             einheitkv% = einheit%
           END IF 
           IF betr% >= 0 THEN 
             IF EinheitAusGeko.stamm > 0 THEN 
               Einheiten.maadr = Einheiten.maadr + einheit%
               einheitkv% = einheit%
             END IF 
           ELSE 
             IF EinheitAusGeko.stamm > 0 THEN 
               Einheiten.maadr = Einheiten.maadr + einheit% * - 1
               einheitkv% = einheit% * - 1
             END IF 
           END IF 
         END IF 
       END IF 
     ELSE 
       IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
         IF EinheitAusGeko.stamm < 1 THEN 
           Einheiten.maadr = Einheiten.maadr + einheit%
           einheitkv% = einheit%
         END IF 
         IF betr% >= 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN 
             Einheiten.maadr = Einheiten.maadr + einheit%
             einheitkv% = einheit%
           END IF 
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN 
             Einheiten.maadr = Einheiten.maadr + einheit% * - 1
             einheitkv% = einheit% * - 1
           END IF 
         END IF 
       END IF 
     END IF 
   ELSE 
       IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
         IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
           IF GFPB% = - 1 THEN 
             REM CALL Fehler("Spezialprovi fÅr GFPB% Einheiten nicht berÅcksichtigen","")
           END IF 
         ELSE 
           IF EinheitAusGeko.stamm < 1 THEN 
             Einheiten.maadr = Einheiten.maadr + einheit%
             einheitkv% = einheit%
           END IF 
           IF betr% >= 0 THEN 
             IF EinheitAusGeko.stamm > 0 THEN 
               Einheiten.maadr = Einheiten.maadr + einheit%
               einheitkv% = einheit%
             END IF 
           ELSE 
             IF EinheitAusGeko.stamm > 0 THEN 
               Einheiten.maadr = Einheiten.maadr + einheit% * - 1
               einheitkv% = einheit% * - 1
             END IF 
           END IF 
         END IF 
       END IF 
   END IF 
 END IF 
 IF ma1% = vtcodema% THEN 
   IF GBVF$ <> "TRUE" THEN 
     IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
       IF EinheitAusGeko.stamm < 1 THEN 
         EigEinheiten.maadr = EigEinheiten.maadr + einheit%
         einheitkv% = einheit%
         EinheitGes.maadr = EinheitGes.maadr + einheitkv%
       END IF 
       IF betr% >= 0 THEN 
         IF EinheitAusGeko.stamm > 0 THEN 
           EigEinheiten.maadr = EigEinheiten.maadr + einheit%
           einheitkv% = einheit%
           EinheitGes.maadr = EinheitGes.maadr + einheitkv%
         END IF 
       ELSE 
         IF EinheitAusGeko.stamm > 0 THEN 
           EigEinheiten.maadr = EigEinheiten.maadr + einheit% * - 1
           einheitkv% = einheit%
           EinheitGes.maadr = EinheitGes.maadr + einheitkv%
         END IF 
       END IF 
     END IF 
   END IF 
 ELSE 
   sEinheitGes.maadr = sEinheitGes.maadr + einheitkv%
 END IF 
 REM gesvol% = GesVolumen.maadr
 REM eigvol% = EigVolumen.maadr
 vertrprov% = 0
 REM SRBetrag% = 0
 betr% = provi% - vertrprov% - SRBetrag%
 REM ****************************AUSZAHLUNGSSPERRE**********************************
 eigen% = 0
 PSpAll$ = PROVSperreAll.maadr
 PSpAllSeit% = PSperreAllSeit.maadr
 PROVSpEig$ = PROVSperreEig.maadr
 PSpESeit% = PSperreESeit.maadr
 
 IF ma1% = vtcodema% THEN 
   eigen% = 1
 END IF 
 IF PspAll$ = "j" THEN 
   IF PSpAllSeit% <= datumz% THEN 
     REM IF ma1% = 529 THEN CALL Fehler("TRIEBSCH","")
     AuszahlSperKo.maadr = AuszahlSperKo.maadr + betr%
     AuszahlSperKoEU.maadr = VAL ( STR$ (AuszahlSperKo.maadr / euro1%,"999999999.00"))
   END IF 
 ELSE 
   IF eigen% = 1 AND PROVSpEig$ = "j" THEN 
     IF PSpESeit% <= datumz% THEN 
       AuszahlSperKo.maadr = AuszahlSperKo.maadr + betr%
       AuszahlSperKoEU.maadr = VAL ( STR$ (AuszahlSperKo.maadr / euro1%,"999999999.00"))
     END IF 
   END IF 
 END IF 
 REM ****************************AUSZAHLUNGSSPERRE Ende**********************************    
 REM CALL Fehler("ges:" + STR$ (gesvol%,"99999"),"Eig:" + STR$ (eigvol%,"99999"))
 
 IF betr% >= 0 THEN 
   GesVolumen.maadr = GesVolumen.maadr + Volumen.KVERTRAG
   IF ma1% = vtcodema% THEN 
     EigVolumen.maadr = EigVolumen.maadr + Volumen.KVERTRAG
   END IF 
 ELSE 
   GesVolumen.maadr = GesVolumen.maadr + (Volumen.KVERTRAG * - 1)
   IF ma1% = vtcodema% THEN 
     EigVolumen.maadr = EigVolumen.maadr + (Volumen.KVERTRAG * - 1)
   END IF 
 END IF 
 REM gesvol% = GesVolumen.maadr
 REM eigvol% = EigVolumen.maadr
 AuszahlAB.maadr = AuszahlAB.maadr + betr%
 AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / euro1%,"999999999.00"))
 AuszProvABGes.maadr = AuszProvABGes.maadr + betr%
 AuszProvABGesEU.maadr = VAL ( STR$ (AuszProvABGes.maadr / euro1%,"999999999.00"))
 REM Workstation.maadr = Workstation%
 REM QWoNo.maadr = STR$ (Workstation%,"000000") + STR$ (codema.maadr,"000000")
 RecStatus.maadr = "c"
 STORE FILE "maadr"
 UNLOCK CURRENT FILE "MAADR"
 REM *****************************************************************************************************
 REM Zentralberechnung des Kontostandes
 zusatz% = 0
 CALL ZentrKTO(ma%,datumz%,betr%,SRBetrag%,codew%,euro1%,waehr1$,PSpAll$,PSpAllSeit%,PROVSpEig$,PSpESeit%,eigen%,zusatz%,einheitkv%)
 REM ***************************************************************************************************** 
 REM CALL Fehler("nach ZentrKTO","")
 axxyy% = provi% - vertrprov% - SRBetrag%
 Betrag.buchung1 = provi% - vertrprov% - SRBetrag%
 
 Gesamtbetrag.buchung1 = provi%
 Bewertungssumme.buchung1 = Bewertung.zeingan1
 ProvBasiswert.buchung1 = Bewertung.zeingan1
 IF betrag.buchung1 > 0 THEN 
   Volumen.buchung1 = Volumen.KVERTRAG
 ELSE 
   Volumen.buchung1 = Volumen.KVERTRAG * - 1
 END IF 
 
 KÅndigung.buchung1 = KÅndigung.KVERTRAG
 VS_Beginn.buchung1 = VS_Beginn.KVERTRAG
 Bewertung2.buchung1 = BewertKV.zeingan1
 CodeKU.buchung1 = CodeKU.KVERTRAG
 vtagentur.buchung1 = Gvtagentur$
 vtcodema.buchung1 = Gvtcodema%
 umrechnung.buchung1 = euro1%

 vsumme.buchung1 = vsumme.kvertrag
 vsummeEU.buchung1 = VAL ( STR$ (vsumme.kvertrag / umrechnung.buchung1,"999999999.00"))
 BeitragBrut.buchung1 = Beitrag.kvertrag
 BeitragNet.buchung1 = NettoBeitrag.kvertrag
 BeitragBrutEu.buchung1 = VAL ( STR$ (Beitrag.kvertrag / umrechnung.buchung1,"999999999.00"))
 BeitragNetEu.buchung1 = VAL ( STR$ (NettoBeitrag.kvertrag / umrechnung.buchung1,"999999999.00"))
 zw.buchung1 = zw.kvertrag
 mwst.buchung1 = mwst.kvertrag
 VS_Beginn.buchung1 = VS_Beginn.kvertrag
 IF zw.buchung1 > 0 THEN 
   JahresBBrut.buchung1 = BeitragBrut.buchung1 * zw.buchung1
   JahresBNet.buchung1 = BeitragNet.buchung1 * zw.buchung1
   JahresBBrutEu.buchung1 = VAL ( STR$ (JahresBBrut.buchung1 / umrechnung.buchung1,"999999999.00"))
   JahresBNetEu.buchung1 = VAL ( STR$ (JahresBNet.buchung1 / umrechnung.buchung1,"999999999.00"))
 ELSE 
   JahresBBrut.buchung1 = BeitragBrut.buchung1
   JahresBNet.buchung1 = BeitragNet.buchung1
   JahresBBrutEu.buchung1 = VAL ( STR$ (JahresBBrut.buchung1 / umrechnung.buchung1,"999999999.00"))
   JahresBNetEu.buchung1 = VAL ( STR$ (JahresBNet.buchung1 / umrechnung.buchung1,"999999999.00"))
 END IF 

 APJN.buchung1 = APjn.gekond
 CourtJN.buchung1 = CourtageJN.gekond
 SRjn.buchung1 = SRJN.gekond
 PflegeJN.buchung1 = PflegeJN.gekond
 APProzente.buchung1 = AP.gekond
 CourtProzente.buchung1 = Courtage.gekond
 PflegProzente.buchung1 = PflegeProvi.gekond
 SRProzente.buchung1 = sr.gekond
 codew.buchung1 = codew%
 waehrung.buchung1 = waehr1$

   VSVjn.buchung1 = VSVjn$
   VSVProz.buchung1 = vsvs%
   DynamikPjn.buchung1 = DynamikPjn.gekond
   DynamikProz.buchung1 = DynamikProz.gekond
   Betreujn.buchung1 = Betreujn.gekond
   BetreuProz.buchung1 = BetreuProz.gekond
 

 IF GBVF$ <> "TRUE" THEN 
   IF EinheitSach.stamm = "j" THEN 
     IF SparteIstSach.sparten <> 1 THEN 
       IF ma1% = vtcodema% THEN 
         IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
           IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung1 = einheit%
           IF betr% >= 0 THEN 
             IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheit%
           ELSE 
             IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheit% * - 1
           END IF 
         END IF 
       END IF 
     ELSE 
       IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
         IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung1 = einheit%
         IF betr% >= 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheit%
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheit% * - 1
         END IF 
       END IF 
     END IF 
   ELSE 
       IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
         IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung1 = einheit%
         IF betr% >= 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheit%
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheit% * - 1
         END IF 
      END IF 
   END IF 
 END IF 
 SELECT KEY CodeVA.kvertrag FILE "SPARTEN" INDEX CodeVA.SPARTEN
 Sparte.buchung1 = Sparte.SPARTEN
 SELECT KEY CodeKU.KVERTRAG FILE GAdrDat$ INDEX CodeKU.GAdrDat$
 Nachname.buchung1 = Nachname.GAdrDat$
 Vorname.buchung1 = Vorname.GAdrDat$
 SELECT KEY CodeGE.KVERTRAG FILE "GEADR" INDEX CodeGE.GEADR
 Gesellschaft.buchung1 = LEFT$ (Gesellschaft.GEADR,30)
 Provision.buchung1 = "j"
 IF sr% = 0 THEN 
   SRgezahlt.buchung1 = "j"
   SR.buchung1 = 0
 ELSE 
   REM 060497
   IF Haftung% = - 1 THEN 
     SRAuszahlung.buchung1 = 0
     SR.buchung1 = SRBetrag%
   ELSE 
     SRAuszahlung.buchung1 = Haftung%
     SR.buchung1 = SRBetrag%
   END IF 
 END IF 
 REM CALL QuickStore("Buchung1")
 agentur.buchung1 = LEFT$ ( LTRIM$ (nachname.maadr) + ", " + LTRIM$ (vorname.maadr) + ", " + LTRIM$ (Agenturnr.maadr) + " , Stufe:" + STR$ (stufe.maadr,"000"),100)
 QuickCode.BUCHUNG1 = STR$ (CodeMA.BUCHUNG1,"000000") + DATE$ (Datum.BUCHUNG1,"yyyymm0d")
 Workstation.Buchung1 = Workstation%
 QWoNo.Buchung1 = STR$ (Workstation%,"000000") + STR$ (CodeBu.Buchung1,"000000")
 RecStatus.Buchung1 = "c"
 CALL BU1DMEuro(umrechnung.buchung1)
 buday.buchung1 = DAY (Datum.buchung1)
 QCodeMAVT.buchung1 = STR$ (codema.buchung1,"000000") + STR$ (codevt.buchung1,"000000")
     timestamp$ = DATE$ ( TODAY ,"yymmdd") + STR$ ( HRS ( NOW ) * 100 + MINS ( NOW ),"0000")
     timestamp% = VAL (timestamp$)
     Timestamp.buchung1 = timestamp%
         IF gebuchtjn.buchung1 <> 1 THEN gebuchtjn.buchung1 = 0
         gebuchtJNDat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + DATE$ (datum.buchung1,"yyyymm0d")
         gebuchtJNMADat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + STR$ (Codema.buchung1,"000000") + DATE$ (datum.buchung1,"yyyymm0d")
         CodeEingGE.BUCHUNG1 = CodeEingGE.kvertrag
         EingereichtBei.BUCHUNG1 = EingereichtBei.kvertrag
 STORE FILE "Buchung1"
 UNLOCK CURRENT FILE "Buchung1"
 MOUSE OFF 
 END SUB 
 
 


SUB SpezProvisFF(remark$,ma%,VertrVonMa1%,provi%,sr%,Haftung%,datumz%,fÑlligkeit%,euro1%,codew%,waehr1$,zein%,vonma%)
  REM CALL Fehler("SpezProvisFF","")
 cfile$ = FILE 
 FILE "kvertrag"
 _lfdnr% = lfdnr.KVERTRAG
 SELECT KEY _lfdnr% LOCK FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
 SELECT KEY vonma% FILE "maadr" INDEX CodeMA.MAADR
 SELECT KEY codeva.kvertrag FILE "sparten" INDEX codeva.sparten
 namvon$ = Nachname.maadr + ", " + Vorname.maadr

 SELECT KEY ma% FILE "maadr" INDEX CodeMA.MAADR
 naman$ = Nachname.maadr + ", " + Vorname.maadr


 codevp% = codevp.kvertrag
 SELECT FIRST FILE "VPRODUKT" INDEX codevp.vprodukt
 SELECT KEY codevp% FILE "VPRODUKT" INDEX codevp.vprodukt

 REM -- bereits gezahlte Provisionen verallgemeinern
 


 FILE "buchung1"
 BLANK FILE "buchung1"
 CodeBU.buchung1 = SER ("buchung1",1)
 codeaz.buchung1 = codeaz.zeingan1
 Datum.buchung1 = datumz%
 fÑlligkeit.buchung1 = fÑlligkeit%
 Ausgabeauf.buchung1 = ausgabeauf.zeingan1
 CodeVT.buchung1 = lfdnr.kvertrag
 IF KÅndigung.MAADR <= datumz% AND Nachfolger.MAADR <> 0 THEN 
   CodeMA.buchung1 = Nachfolger.MAADR
   ma1% = Nachfolger.MAADR
   Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
 ELSE 
   CodeMA.buchung1 = ma%
   ma1% = ma%
   Buchungstext.buchung1 = LEFT$ (remark$,100)
 END IF 
 Buchungstext.buchung1 = LEFT$ (Buchungstext.buchung1 + "erh.von:" + namvon$,100)
 IF dmeinh% > 0 THEN einheit% = provi% / dmeinh%
 
 IF haftung% <> 0 AND sr% <> 0 THEN 
   IF provi% > 0 THEN 
     SRBetrag% = ((provi% - vertrprov%) / 100) * sr%
   ELSE 
     IF SRRÅck.stamm LIKE "j" THEN 
       IF StornoVerrech.maadr <> "j" THEN 
         SRBetrag% = ((provi% - vertrprov%) / 100) * sr%
       ELSE 
         SRBetrag% = 0
       END IF 
     END IF 
   END IF 
 ELSE 
   SRBetrag% = 0
 END IF 
 SELECT KEY ma1% LOCK FILE "maadr" INDEX codema.maadr
 Stornoreserve.maadr = Stornoreserve.maadr + SRBetrag%
 StornoreserveEU.maadr = VAL ( STR$ (Stornoreserve.maadr / euro1%,"999999999.00"))




 
 betr% = provi% - vertrprov% - SRBetrag%
 einheitkv% = 0
 IF GBVF$ <> "TRUE" THEN 
   IF EinheitSach.stamm = "j" THEN 
     IF SparteIstSach.sparten <> 1 THEN 
       IF ma1% = vtcodema% THEN 
         IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
           IF EinheitAusGeko.stamm < 1 THEN 
             Einheiten.maadr = Einheiten.maadr + einheit%
             einheitkv% = einheit%
           END IF 
           IF betr% >= 0 THEN 
             IF EinheitAusGeko.stamm > 0 THEN 
               Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag
               einheitkv% = einheiten.kvertrag
             END IF 
           ELSE 
             IF EinheitAusGeko.stamm > 0 THEN 
               Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag * - 1
               einheitkv% = einheiten.kvertrag * - 1
             END IF 
           END IF 
         END IF 
       END IF 
     ELSE 
       IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
         IF EinheitAusGeko.stamm < 1 THEN 
           Einheiten.maadr = Einheiten.maadr + einheit%
           einheitkv% = einheit%
         END IF 
         IF betr% >= 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN 
             Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag
             einheitkv% = einheiten.kvertrag
           END IF 
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN 
             Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag * - 1
             einheitkv% = einheiten.kvertrag * - 1
           END IF 
         END IF 
       END IF 
     END IF 
   ELSE 
       IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
         IF EinheitAusGeko.stamm < 1 THEN 
           Einheiten.maadr = Einheiten.maadr + einheit%
           einheitkv% = einheit%
         END IF 
         IF betr% >= 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN 
             Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag
             einheitkv% = einheiten.kvertrag
           END IF 
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN 
             Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag * - 1
             einheitkv% = einheiten.kvertrag * - 1
           END IF 
         END IF 
       END IF 
   END IF 
 END IF 
 IF ma1% = vtcodema% THEN 
   IF GBVF$ <> "TRUE" THEN 
     IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
       IF EinheitAusGeko.stamm < 1 THEN 
         EigEinheiten.maadr = EigEinheiten.maadr + einheit%
         einheitkv% = einheit%
         EinheitGes.maadr = EinheitGes.maadr + einheitkv%
       END IF 
       IF betr% >= 0 THEN 
         IF EinheitAusGeko.stamm > 0 THEN 
           EigEinheiten.maadr = EigEinheiten.maadr + einheiten.kvertrag
           einheitkv% = einheiten.kvertrag
           EinheitGes.maadr = EinheitGes.maadr + einheitkv%
         END IF 
       ELSE 
         IF EinheitAusGeko.stamm > 0 THEN 
           EigEinheiten.maadr = EigEinheiten.maadr + einheiten.kvertrag * - 1
           einheitkv% = einheiten.kvertrag * - 1
           EinheitGes.maadr = EinheitGes.maadr + einheitkv%
         END IF 
       END IF 
     END IF 
   END IF 
 ELSE 
   sEinheitGes.maadr = sEinheitGes.maadr + einheitkv%
 END IF 
 REM gesvol% = GesVolumen.maadr
 REM eigvol% = EigVolumen.maadr
 vertrprov% = 0
 REM SRBetrag% = 0
 
 betr% = provi% - vertrprov% - SRBetrag%
 REM ****************************AUSZAHLUNGSSPERRE**********************************
 eigen% = 0
 PSpAll$ = PROVSperreAll.maadr
 PSpAllSeit% = PSperreAllSeit.maadr
 PROVSpEig$ = PROVSperreEig.maadr
 PSpESeit% = PSperreESeit.maadr
 
 IF ma1% = vtcodema% THEN 
   eigen% = 1
 END IF 
 IF PspAll$ = "j" THEN 
   IF PSpAllSeit% <= datumz% THEN 
     REM IF ma1% = 529 THEN CALL Fehler("TRIEBSCH","")
     AuszahlSperKo.maadr = AuszahlSperKo.maadr + betr%
     AuszahlSperKoEU.maadr = VAL ( STR$ (AuszahlSperKo.maadr / euro1%,"999999999.00"))
   END IF 
 ELSE 
   IF eigen% = 1 AND PROVSpEig$ = "j" THEN 
     IF PSpESeit% <= datumz% THEN 
       AuszahlSperKo.maadr = AuszahlSperKo.maadr + betr%
       AuszahlSperKoEU.maadr = VAL ( STR$ (AuszahlSperKo.maadr / euro1%,"999999999.00"))
     END IF 
   END IF 
 END IF 
 REM ****************************AUSZAHLUNGSSPERRE Ende**********************************    
 REM CALL Fehler("ges:" + STR$ (gesvol%,"99999"),"Eig:" + STR$ (eigvol%,"99999"))
 
 IF betr% >= 0 THEN 
   GesVolumen.maadr = GesVolumen.maadr + Volumen.KVERTRAG
   IF ma1% = vtcodema% THEN 
     EigVolumen.maadr = EigVolumen.maadr + Volumen.KVERTRAG
   END IF 
 ELSE 
   GesVolumen.maadr = GesVolumen.maadr + (Volumen.KVERTRAG * - 1)
   IF ma1% = vtcodema% THEN 
     EigVolumen.maadr = EigVolumen.maadr + (Volumen.KVERTRAG * - 1)
   END IF 
 END IF 
 REM gesvol% = GesVolumen.maadr
 REM eigvol% = EigVolumen.maadr
 AuszahlAB.maadr = AuszahlAB.maadr + betr%
 AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / euro1%,"999999999.00"))
 AuszProvABGes.maadr = AuszProvABGes.maadr + betr%
 AuszProvABGesEU.maadr = VAL ( STR$ (AuszProvABGes.maadr / euro1%,"999999999.00"))
 REM Workstation.maadr = Workstation%
 REM QWoNo.maadr = STR$ (Workstation%,"000000") + STR$ (codema.maadr,"000000")
 RecStatus.maadr = "c"
 STORE FILE "maadr"
 UNLOCK CURRENT FILE "MAADR"
 REM *****************************************************************************************************
 REM Zentralberechnung des Kontostandes
 zusatz% = 0
 CALL ZentrKTO(ma%,datumz%,betr%,SRBetrag%,codew%,euro1%,waehr1$,PSpAll$,PSpAllSeit%,PROVSpEig$,PSpESeit%,eigen%,zusatz%,einheitkv%)
 REM ***************************************************************************************************** 
 Betrag.buchung1 = provi% - vertrprov% - SRBetrag%
 
 Gesamtbetrag.buchung1 = provi%
 Bewertungssumme.buchung1 = Bewertung.zeingan1
 ProvBasiswert.buchung1 = Bewertung.zeingan1
 IF betrag.buchung1 > 0 THEN 
   Volumen.buchung1 = Volumen.KVERTRAG
 ELSE 
   Volumen.buchung1 = Volumen.KVERTRAG * - 1
 END IF 
 
 KÅndigung.buchung1 = KÅndigung.KVERTRAG
 VS_Beginn.buchung1 = VS_Beginn.KVERTRAG
 Bewertung2.buchung1 = BewertKV.zeingan1
 CodeKU.buchung1 = CodeKU.KVERTRAG
 vtagentur.buchung1 = Gvtagentur$
 vtcodema.buchung1 = Gvtcodema%
 umrechnung.buchung1 = euro1%
 
 vsumme.buchung1 = vsumme.kvertrag
 vsummeEU.buchung1 = VAL ( STR$ (vsumme.kvertrag / umrechnung.buchung1,"999999999.00"))
 BeitragBrut.buchung1 = Beitrag.kvertrag
 BeitragNet.buchung1 = NettoBeitrag.kvertrag
 BeitragBrutEu.buchung1 = VAL ( STR$ (Beitrag.kvertrag / umrechnung.buchung1,"999999999.00"))
 BeitragNetEu.buchung1 = VAL ( STR$ (NettoBeitrag.kvertrag / umrechnung.buchung1,"999999999.00"))
 zw.buchung1 = zw.kvertrag
 mwst.buchung1 = mwst.kvertrag
 VS_Beginn.buchung1 = VS_Beginn.kvertrag
 IF zw.buchung1 > 0 THEN 
   JahresBBrut.buchung1 = BeitragBrut.buchung1 * zw.buchung1
   JahresBNet.buchung1 = BeitragNet.buchung1 * zw.buchung1
   JahresBBrutEu.buchung1 = VAL ( STR$ (JahresBBrut.buchung1 / umrechnung.buchung1,"999999999.00"))
   JahresBNetEu.buchung1 = VAL ( STR$ (JahresBNet.buchung1 / umrechnung.buchung1,"999999999.00"))
 ELSE 
   JahresBBrut.buchung1 = BeitragBrut.buchung1
   JahresBNet.buchung1 = BeitragNet.buchung1
   JahresBBrutEu.buchung1 = VAL ( STR$ (JahresBBrut.buchung1 / umrechnung.buchung1,"999999999.00"))
   JahresBNetEu.buchung1 = VAL ( STR$ (JahresBNet.buchung1 / umrechnung.buchung1,"999999999.00"))
 END IF 
 
 APJN.buchung1 = APjn.gekond
 CourtJN.buchung1 = CourtageJN.gekond
 SRjn.buchung1 = SRJN.gekond
 PflegeJN.buchung1 = PflegeJN.gekond
 APProzente.buchung1 = AP.gekond
 CourtProzente.buchung1 = Courtage.gekond
 PflegProzente.buchung1 = PflegeProvi.gekond
 SRProzente.buchung1 = sr.gekond
 codew.buchung1 = codew%
 waehrung.buchung1 = waehr1$

   VSVjn.buchung1 = VSVjn$
   VSVproz.buchung1 = vsvs%
   DynamikPjn.buchung1 = DynamikPjn.gekond
   DynamikProz.buchung1 = DynamikProz.gekond
   Betreujn.buchung1 = Betreujn.gekond
   BetreuProz.buchung1 = BetreuProz.gekond



 
 IF GBVF$ <> "TRUE" THEN 
   IF EinheitSach.stamm = "j" THEN 
     IF SparteIstSach.sparten <> 1 THEN 
       IF ma1% = vtcodema% THEN 
         IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
           IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung1 = einheit%
           IF betr% >= 0 THEN 
             IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag
           ELSE 
             IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag * - 1
           END IF 
         END IF 
       END IF 
     ELSE 
       IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
         IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung1 = einheit%
         IF betr% >= 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag * - 1
         END IF 
       END IF 
     END IF 
   ELSE 
       IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
         IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung1 = einheit%
         IF betr% >= 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag * - 1
         END IF 
       END IF 
           
   END IF 
 END IF 
 SELECT KEY CodeVA.kvertrag FILE "SPARTEN" INDEX CodeVA.SPARTEN
 Sparte.buchung1 = Sparte.SPARTEN
 SELECT KEY CodeKU.KVERTRAG FILE GAdrDat$ INDEX CodeKU.GAdrDat$
 Nachname.buchung1 = Nachname.GAdrDat$
 Vorname.buchung1 = Vorname.GAdrDat$
 SELECT KEY CodeGE.KVERTRAG FILE "GEADR" INDEX CodeGE.GEADR
 Gesellschaft.buchung1 = Gesellschaft.GEADR
 Provision.buchung1 = "j"
 IF sr% = 0 THEN 
   SRgezahlt.buchung1 = "j"
   SR.buchung1 = 0
 ELSE 
   REM 060497
   IF Haftung% = - 1 THEN 
     SRAuszahlung.buchung1 = 0
     SR.buchung1 = SRBetrag%
   ELSE 
     SRAuszahlung.buchung1 = Haftung%
     SR.buchung1 = SRBetrag%
   END IF 
 END IF 
 REM CALL QuickStore("Buchung1")
 agentur.buchung1 = LEFT$ ( LTRIM$ (nachname.maadr) + ", " + LTRIM$ (vorname.maadr) + ", " + LTRIM$ (Agenturnr.maadr) + " , Stufe:" + STR$ (stufe.maadr,"000"),100)
 QuickCode.BUCHUNG1 = STR$ (CodeMA.BUCHUNG1,"000000") + DATE$ (Datum.BUCHUNG1,"yyyymm0d")
 Workstation.Buchung1 = Workstation%
 QWoNo.Buchung1 = STR$ (Workstation%,"000000") + STR$ (CodeBu.Buchung1,"000000")
 RecStatus.Buchung1 = "c"
 CALL BU1DMEuro(umrechnung.buchung1)
 buday.buchung1 = DAY (Datum.buchung1)
 QCodeMAVT.buchung1 = STR$ (codema.buchung1,"000000") + STR$ (codevt.buchung1,"000000")
 timestamp$ = DATE$ ( TODAY ,"yymmdd") + STR$ ( HRS ( NOW ) * 100 + MINS ( NOW ),"0000")
 timestamp% = VAL (timestamp$)
 timestamp.buchung1 = timestamp%
         IF gebuchtjn.buchung1 <> 1 THEN gebuchtjn.buchung1 = 0
         gebuchtJNDat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + DATE$ (datum.buchung1,"yyyymm0d")
         gebuchtJNMADat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + STR$ (Codema.buchung1,"000000") + DATE$ (datum.buchung1,"yyyymm0d")
         CodeEingGE.BUCHUNG1 = CodeEingGE.kvertrag
         EingereichtBei.BUCHUNG1 = EingereichtBei.kvertrag
 STORE FILE "Buchung1"
 UNLOCK CURRENT FILE "Buchung1"



 REM ***********************  und jetzt das ganze fÅr die Agentur, die das Geld abgezogen bekommt ********************
 SELECT KEY vonma% FILE "maadr" INDEX CodeMA.MAADR
 FILE "buchung1"
 BLANK FILE "buchung1"
 CodeBU.buchung1 = SER ("buchung1",1)
 codeaz.buchung1 = codeaz.zeingan1
 Datum.buchung1 = datumz%
 fÑlligkeit.buchung1 = fÑlligkeit%
 Ausgabeauf.buchung1 = ausgabeauf.zeingan1
 CodeVT.buchung1 = lfdnr.kvertrag
 REM CALL Fehler(remark$,"444")
 IF KÅndigung.MAADR <= datumz% AND Nachfolger.MAADR <> 0 THEN 
   CodeMA.buchung1 = Nachfolger.MAADR
   ma1% = Nachfolger.MAADR
   Buchungstext.buchung1 = LEFT$ (remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)",70)
 ELSE 
   CodeMA.buchung1 = vonma%
   ma1% = vonma%
   Buchungstext.buchung1 = LEFT$ (remark$,100)
 END IF 
 
 Buchungstext.buchung1 = LEFT$ (Buchungstext.buchung1 + "gez.an:" + naman$,100)
 butext$ = Buchungstext.buchung1
 REM CALL Fehler(butext$,"")
 IF dmeinh% > 0 THEN einheit% = provi% / dmeinh%
 IF haftung% <> 0 AND sr% <> 0 THEN 
   IF provi% > 0 AND SRRÅck.stamm LIKE "j" THEN 
     SRBetrag% = ((provi% - vertrprov%) / 100) * sr%
   END IF 
 ELSE 
   SRBetrag% = 0
 END IF 
 SELECT KEY ma1% LOCK FILE "maadr" INDEX codema.maadr
 Stornoreserve.maadr = Stornoreserve.maadr + SRBetrag%
 StornoreserveEU.maadr = VAL ( STR$ (Stornoreserve.maadr / euro1%,"999999999.00"))

 betr% = provi% * - 1
 einheitkv% = 0
 IF GBVF$ <> "TRUE" THEN 
   IF EinheitSach.stamm = "j" THEN 
     IF SparteIstSach.sparten <> 1 THEN 
       IF ma1% = vtcodema% THEN 
         IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
           IF EinheitAusGeko.stamm < 1 THEN 
             Einheiten.maadr = Einheiten.maadr + einheit%
             einheitkv% = einheit%
           END IF 
           IF betr% >= 0 THEN 
             IF EinheitAusGeko.stamm > 0 THEN 
               Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag
               einheitkv% = einheiten.kvertrag
             END IF 
           ELSE 
             IF EinheitAusGeko.stamm > 0 THEN 
               Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag * - 1
               einheitkv% = einheiten.kvertrag * - 1
             END IF 
           END IF 
         END IF 
       END IF 
     ELSE 
       IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
         IF EinheitAusGeko.stamm < 1 THEN 
           Einheiten.maadr = Einheiten.maadr + einheit%
           einheitkv% = einheit%
         END IF 
         IF betr% >= 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN 
             Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag
             einheitkv% = einheiten.kvertrag
           END IF 
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN 
             Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag * - 1
             einheitkv% = einheiten.kvertrag * - 1
           END IF 
         END IF 
       END IF 
     END IF 
   ELSE 
       IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
         IF EinheitAusGeko.stamm < 1 THEN 
           Einheiten.maadr = Einheiten.maadr + einheit%
           einheitkv% = einheit%
         END IF 
         IF betr% >= 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN 
             Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag
             einheitkv% = einheiten.kvertrag
           END IF 
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN 
             Einheiten.maadr = Einheiten.maadr + einheiten.kvertrag * - 1
             einheitkv% = einheiten.kvertrag * - 1
           END IF 
         END IF 
       END IF 
   END IF 
 END IF 
 IF ma1% = vtcodema% THEN 
   IF GBVF$ <> "TRUE" THEN 
     IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
       IF EinheitAusGeko.stamm < 1 THEN 
         EigEinheiten.maadr = EigEinheiten.maadr + einheit%
         einheitkv% = einheit%
         EinheitGes.maadr = EinheitGes.maadr + einheitkv%
       END IF 
       IF betr% >= 0 THEN 
         IF EinheitAusGeko.stamm > 0 THEN 
           EigEinheiten.maadr = EigEinheiten.maadr + einheiten.kvertrag
           einheitkv% = einheiten.kvertrag
           EinheitGes.maadr = EinheitGes.maadr + einheitkv%
         END IF 
       ELSE 
         IF EinheitAusGeko.stamm > 0 THEN 
           EigEinheiten.maadr = EigEinheiten.maadr + einheiten.kvertrag * - 1
           einheitkv% = einheiten.kvertrag * - 1
           EinheitGes.maadr = EinheitGes.maadr + einheitkv%
         END IF 
       END IF 
     END IF 
   END IF 
 ELSE 
   sEinheitGes.maadr = sEinheitGes.maadr + einheitkv%
 END IF 
 REM gesvol% = GesVolumen.maadr
 REM eigvol% = EigVolumen.maadr
 vertrprov% = 0
 REM SRBetrag% = 0
 REM betr% = provi% - vertrprov% - SRBetrag%
 betr% = provi% * - 1
 REM ****************************AUSZAHLUNGSSPERRE**********************************
 eigen% = 0
 PSpAll$ = PROVSperreAll.maadr
 PSpAllSeit% = PSperreAllSeit.maadr
 PROVSpEig$ = PROVSperreEig.maadr
 PSpESeit% = PSperreESeit.maadr
 
 IF ma1% = vtcodema% THEN 
   eigen% = 1
 END IF 
 IF PspAll$ = "j" THEN 
   IF PSpAllSeit% <= datumz% THEN 
     REM IF ma1% = 529 THEN CALL Fehler("TRIEBSCH","")
     AuszahlSperKo.maadr = AuszahlSperKo.maadr + betr%
     AuszahlSperKoEU.maadr = VAL ( STR$ (AuszahlSperKo.maadr / euro1%,"999999999.00"))
   END IF 
 ELSE 
   IF eigen% = 1 AND PROVSpEig$ = "j" THEN 
     IF PSpESeit% <= datumz% THEN 
       AuszahlSperKo.maadr = AuszahlSperKo.maadr + betr%
       AuszahlSperKoEU.maadr = VAL ( STR$ (AuszahlSperKo.maadr / euro1%,"999999999.00"))
     END IF 
   END IF 
 END IF 
 REM ****************************AUSZAHLUNGSSPERRE Ende**********************************    
 REM CALL Fehler("ges:" + STR$ (gesvol%,"99999"),"Eig:" + STR$ (eigvol%,"99999"))
 
 REM IF betr% > 0 THEN 
   REM GesVolumen.maadr = GesVolumen.maadr + Volumen.KVERTRAG
   REM IF ma1% = vtcodema% THEN 
     REM EigVolumen.maadr = EigVolumen.maadr + Volumen.KVERTRAG
   REM END IF 
 REM ELSE 
   REM GesVolumen.maadr = GesVolumen.maadr + (Volumen.KVERTRAG * - 1)
   REM IF ma1% = vtcodema% THEN 
     REM EigVolumen.maadr = EigVolumen.maadr + (Volumen.KVERTRAG * - 1)
   REM END IF 
 REM END IF 
 REM gesvol% = GesVolumen.maadr
 REM eigvol% = EigVolumen.maadr
 AuszahlAB.maadr = AuszahlAB.maadr + betr%
 AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / euro1%,"999999999.00"))
 AuszProvABGes.maadr = AuszProvABGes.maadr + betr%
 AuszProvABGesEU.maadr = VAL ( STR$ (AuszProvABGes.maadr / euro1%,"999999999.00"))
 REM Workstation.maadr = Workstation%
 REM QWoNo.maadr = STR$ (Workstation%,"000000") + STR$ (codema.maadr,"000000")
 RecStatus.maadr = "c"
 STORE FILE "maadr"
 UNLOCK CURRENT FILE "MAADR"
 
 REM *****************************************************************************************************
 REM Zentralberechnung des Kontostandes
 zusatz% = 0
 CALL ZentrKTO(ma%,datumz%,betr%,0,codew%,euro1%,waehr1$,PSpAll$,PSpAllSeit%,PROVSpEig$,PSpESeit%,eigen%,zusatz%,einheitkv%)
 REM ***************************************************************************************************** 
 REM Betrag.buchung1 = provi% - vertrprov% - SRBetrag%
 Betrag.buchung1 = betr%
 Gesamtbetrag.buchung1 = betr%
 Bewertungssumme.buchung1 = Bewertung.zeingan1
 ProvBasiswert.buchung1 = Bewertung.zeingan1
 IF betrag.buchung1 > 0 THEN 
   Volumen.buchung1 = Volumen.KVERTRAG
 ELSE 
   Volumen.buchung1 = Volumen.KVERTRAG * - 1
 END IF 
 
 KÅndigung.buchung1 = KÅndigung.KVERTRAG
 VS_Beginn.buchung1 = VS_Beginn.KVERTRAG
 Bewertung2.buchung1 = BewertKV.zeingan1
 CodeKU.buchung1 = CodeKU.KVERTRAG
 vtagentur.buchung1 = Gvtagentur$
 vtcodema.buchung1 = Gvtcodema%
 umrechnung.buchung1 = euro1%
 
 vsumme.buchung1 = vsumme.kvertrag
 vsummeEU.buchung1 = VAL ( STR$ (vsumme.kvertrag / umrechnung.buchung1,"999999999.00"))
 BeitragBrut.buchung1 = Beitrag.kvertrag
 BeitragNet.buchung1 = NettoBeitrag.kvertrag
 BeitragBrutEu.buchung1 = VAL ( STR$ (Beitrag.kvertrag / umrechnung.buchung1,"999999999.00"))
 BeitragNetEu.buchung1 = VAL ( STR$ (NettoBeitrag.kvertrag / umrechnung.buchung1,"999999999.00"))
 zw.buchung1 = zw.kvertrag
 mwst.buchung1 = mwst.kvertrag
 VS_Beginn.buchung1 = VS_Beginn.kvertrag
 IF zw.buchung1 > 0 THEN 
   JahresBBrut.buchung1 = BeitragBrut.buchung1 * zw.buchung1
   JahresBNet.buchung1 = BeitragNet.buchung1 * zw.buchung1
   JahresBBrutEu.buchung1 = VAL ( STR$ (JahresBBrut.buchung1 / umrechnung.buchung1,"999999999.00"))
   JahresBNetEu.buchung1 = VAL ( STR$ (JahresBNet.buchung1 / umrechnung.buchung1,"999999999.00"))
 ELSE 
   JahresBBrut.buchung1 = BeitragBrut.buchung1
   JahresBNet.buchung1 = BeitragNet.buchung1
   JahresBBrutEu.buchung1 = VAL ( STR$ (JahresBBrut.buchung1 / umrechnung.buchung1,"999999999.00"))
   JahresBNetEu.buchung1 = VAL ( STR$ (JahresBNet.buchung1 / umrechnung.buchung1,"999999999.00"))
 END IF 
 
 APJN.buchung1 = APjn.gekond
 CourtJN.buchung1 = CourtageJN.gekond
 SRjn.buchung1 = SRJN.gekond
 PflegeJN.buchung1 = PflegeJN.gekond
 APProzente.buchung1 = AP.gekond
 CourtProzente.buchung1 = Courtage.gekond
 PflegProzente.buchung1 = PflegeProvi.gekond
 SRProzente.buchung1 = 0
 codew.buchung1 = codew%
 waehrung.buchung1 = waehr1$


   VSVjn.buchung1 = VSVjn$
   VSVProz.buchung1 = vsvs%
   DynamikPjn.buchung1 = DynamikPjn.gekond
   DynamikProz.buchung1 = DynamikProz.gekond
   Betreujn.buchung1 = Betreujn.gekond
   BetreuProz.buchung1 = BetreuProz.gekond

 IF GBVF$ <> "TRUE" THEN 
   IF EinheitSach.stamm = "j" THEN 
     IF SparteIstSach.sparten <> 1 THEN 
       IF ma1% = vtcodema% THEN 
         IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
           IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung1 = einheit%
           IF betr% >= 0 THEN 
             IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag
           ELSE 
             IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag * - 1
           END IF 
         END IF 
       END IF 
     ELSE 
       IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
         IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung1 = einheit%
         IF betr% >= 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag * - 1
         END IF 
       END IF 
     END IF 
   ELSE 
       IF EinhNichtBuchJN.zeingan1 <> "j" THEN 
         IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchung1 = einheit%
         IF betr% >= 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchung1 = einheiten.kvertrag * - 1
         END IF 
       END IF 
   END IF 
 END IF 
 SELECT KEY CodeVA.kvertrag FILE "SPARTEN" INDEX CodeVA.SPARTEN
 Sparte.buchung1 = Sparte.SPARTEN
 SELECT KEY CodeKU.KVERTRAG FILE GAdrDat$ INDEX CodeKU.GAdrDat$
 Nachname.buchung1 = Nachname.GAdrDat$
 Vorname.buchung1 = Vorname.GAdrDat$
 SELECT KEY CodeGE.KVERTRAG FILE "GEADR" INDEX CodeGE.GEADR
 Gesellschaft.buchung1 = Gesellschaft.GEADR
 Provision.buchung1 = "j"
 sr% = 0
 IF sr% = 0 THEN 
   SRgezahlt.buchung1 = "j"
   SR.buchung1 = 0
 ELSE 
   REM 060497
   IF Haftung% = - 1 THEN 
     SRAuszahlung.buchung1 = 0
     SR.buchung1 = SRBetrag%
   ELSE 
     SRAuszahlung.buchung1 = Haftung%
     SR.buchung1 = SRBetrag%
   END IF 
 END IF 
 REM CALL QuickStore("Buchung1")
 agentur.buchung1 = LEFT$ ( LTRIM$ (nachname.maadr) + ", " + LTRIM$ (vorname.maadr) + ", " + LTRIM$ (Agenturnr.maadr) + " , Stufe:" + STR$ (stufe.maadr,"000"),100)
 QuickCode.BUCHUNG1 = STR$ (CodeMA.BUCHUNG1,"000000") + DATE$ (Datum.BUCHUNG1,"yyyymm0d")
 Workstation.Buchung1 = Workstation%
 QWoNo.Buchung1 = STR$ (Workstation%,"000000") + STR$ (CodeBu.Buchung1,"000000")
 RecStatus.Buchung1 = "c"
 CALL BU1DMEuro(umrechnung.buchung1)
 buday.buchung1 = DAY (Datum.buchung1)
 QCodeMAVT.buchung1 = STR$ (codema.buchung1,"000000") + STR$ (codevt.buchung1,"000000")
     timestamp$ = DATE$ ( TODAY ,"yymmdd") + STR$ ( HRS ( NOW ) * 100 + MINS ( NOW ),"0000")
     timestamp% = VAL (timestamp$)
     Timestamp.buchung1 = timestamp%
         IF gebuchtjn.buchung1 <> 1 THEN gebuchtjn.buchung1 = 0
         gebuchtJNDat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + DATE$ (datum.buchung1,"yyyymm0d")
         gebuchtJNMADat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + STR$ (Codema.buchung1,"000000") + DATE$ (datum.buchung1,"yyyymm0d")
         CodeEingGE.BUCHUNG1 = CodeEingGE.kvertrag
         EingereichtBei.BUCHUNG1 = EingereichtBei.kvertrag
 STORE FILE "Buchung1"
 UNLOCK CURRENT FILE "Buchung1"
 
 REM *****************************************************************************************************************


 MOUSE OFF 
 END SUB 
 




 ' Korrekturbuchung-RealCASH
 ' =======================================================================
 ' 27.10.93  - wahlweise Eingabe des Rechnungsbeginns
  
SUB BUKORREKZE()
 IF disabled%("BUCHUNG6") THEN END SUB 
 REM supervis im exclusiv-modus îffnen, um herauszufinden, ob noch jemand im Programm eingeloggt ist
 IF OPEN ("supervis") THEN CLOSE FILE "supervis"
 CALL DFile(4,"supervis" + _fpw$)

 Anschluss% = 1
 REQUEST "Die Korrekturbuchung lîscht alle Buchungen und setzt","die Vertragsdatei zurÅck! Fortfahren?",135,req%
 
 IF req% = 1 THEN 
   CalcDate$ = ReadConfig$("PROVIS","KorrekturAb")
   IF CalcDate$ = "leer" THEN CalcDate$ = ""
   REM CREATE DIALOG "ANSCHLUSS",0,0,191,92,"Buchungskorrektur","MS Sans Serif",8
   REM ADD DIALOG "ANSCHLUSS",4,0,0,191,68,0,""
   REM ADD DIALOG "ANSCHLUSS",9,9,12,21,23,2
   REM ADD DIALOG "ANSCHLUSS",5,38,12,144,20,0,"Bitte geben Sie ein, ab welchem Stichtag die Provisionen berechnet werden sollen:"
   REM ADD DIALOG "ANSCHLUSS",5,38,42,33,10,0,"Stich&tag:"
   REM ADD DIALOG "ANSCHLUSS",6,73,41,51,11,0,0,CalcDate$,20
   REM ADD DIALOG "ANSCHLUSS",1,34,72,55,14,1,"&OK",1,1
   REM ADD DIALOG "ANSCHLUSS",1,92,72,55,14,0,"&Abbrechen",0,0
   REM DIALOG "ANSCHLUSS",req%
   REM REMOVE DIALOG "ANSCHLUSS"
   req% = 1
   CalcDate$ = DATE$ ( TODAY ,"0d.mm.yyyy")
   IF req% = 1 THEN 
     IF DateOK%(CalcDate$) THEN 
       CALL CreateLog()
       MOUSE OFF 
       CALL Server("LOADMESSAGE","")
       CALL Server("MESSAGE","Bitte warten... Alle Provisionsbuchungen werden aus der Buchungsdatei gelîscht. (Dieser Vorgang kann bei grî·eren DatenbestÑnden einige Zeit in Anspruch nehmen.)")
       CALL DFile(3,"buchung1" + _fpw$)
       'CREATE FILE MEMORY "buch" FROM FILE "buchung1"
       'CLOSE FILE "buchung1"
       'CREATE FILE MEMORY "buchung1" FROM FILE "buch"
       'CLOSE FILE "buch"
       CALL DFile(3,"zeingan1" + _fpw$)
       'CREATE FILE MEMORY "zei" FROM FILE "zeingan1"
       'CLOSE FILE "zeingan1"
       'CREATE FILE MEMORY "zeingan1" FROM FILE "zei"
       'CLOSE FILE "zei"
       CALL DFile(3,"gekond" + _fpw$)
       CALL DFile(3,"maadr" + _fpw$)
       'CREATE FILE MEMORY "ma" FROM FILE "maadr"
       'CLOSE FILE "maadr"
       'CREATE FILE MEMORY "maadr" FROM FILE "ma"
       'CLOSE FILE "ma"
       CALL DFile(3,"maadrgru" + _fpw$)
       CALL DFile(3,"kvertrag" + _fpw$)
       'CREATE FILE MEMORY "kv" FROM FILE "kvertrag"
       'CLOSE FILE "kvertrag"
       'CREATE FILE MEMORY "kvertrag" FROM FILE "kv"
       'CLOSE FILE "kv"
       CALL DFile(3,"vkond" + _fpw$)
       CALL DFile(3,"spezkond" + _fpw$)
       CALL DFile(3,"kvfael" + _fpw$)
       FILE "kvfael"
       UPDATE gezProv.kvfael = 0:gezProvEU.kvfael = 0:gezProvAnz.kvfael = 0:StornoBetrag.kvfael = 0:StornoBetrEU.kvfael = 0:
           StornoDat.kvfael = 0:gez_Abschlu·.kvfael = "n":gezahltam.kvfael = 0:erledigt.kvfael = "n":TgezProvAnz.kvfael = 0:autokuend.kvfael = "n"
       END UPDATE 
       CLOSE FILE "kvfael"
       CALL DFile(3,"kvfael" + _fpw$)
       FILE "kvfael"
       'CREATE FILE MEMORY "vk" FROM FILE "vkond"
       'CLOSE FILE "vkond"
       'CREATE FILE MEMORY "vkond" FROM FILE "vk"
       'CLOSE FILE "vk"
       CALL WriteConfig("PROVIS","KorrekturAb",CalcDate$)
       SET STATUS "Buchungsdatei wird gelîscht..."
       FILE "KVERTRAG"
       REM SELECT FIRST FILE "KVERTRAG" INDEX ProviAB.KVERTRAG
       startprovi% = ProviAB.KVERTRAG
       REM 220897 REMOVE FROM FILE "buchung1" WHERE Provision.buchung1 LIKE "j"
       IF EXISTS (_ppath$ + "but1.sbf") THEN DELETE (_ppath$ + "but1.*")
       SET QUERY HEADING "",0,0
       SELECT CodeBU.buchung1,CodeMA.buchung1,Datum.buchung1,KÅrzel.buchung1,Betrag.buchung1,SR.buchung1,SRAuszahlung.buchung1,
       buchungstext.buchung1,Provision.buchung1,CodeVT.buchung1,SRgezahlt.buchung1,TimeStamp.buchung1,Nachname.buchung1,
       Vorname.buchung1,VS_Beginn.buchung1,Sparte.buchung1,KÅndigung.buchung1,Gesellschaft.buchung1,Bewertungssumme.buchung1,
       CodeKU.buchung1,Volumen.buchung1,Gesamtbetrag.buchung1,Sperre.buchung1,gezahlt.buchung1,gezahlt_am.buchung1,QuickCode.buchung1,
       Mahnung.buchung1,Einheiten.buchung1,VTAgentur.buchung1,FÑlligkeit.buchung1,vtcodema.buchung1,
       umrechnung.buchung1,codew.buchung1,waehrung.buchung1,waehrungBezeich.buchung1,
       GesamtbetragEU.buchung1,BetragEU.buchung1,SREU.buchung1,BewertungssumEU.buchung1,gezahltEU.buchung1,Ausgabeauf.buchung1,codeaz.buchung1
       WHERE Provision.buchung1 <> "j"
       ORDER REPORT TO FILE _ppath$ + "BUT1"
       END SELECT 
       REMOVE FROM FILE "buchung1"
       FILE "but1"
       INDEX codebu
       SELECT FIRST 
       WHILE NOT EOF ("but1")
         MOUSE OFF 
         FILE "buchung1"
         BLANK FILE "buchung1"
         codebu.buchung1 = SER ("buchung1",1)
         codema.buchung1 = codema.but1
         datum.buchung1 = datum.but1
         kÅrzel.buchung1 = kÅrzel.but1
         betrag.buchung1 = betrag.but1
         sr.buchung1 = sr.but1
         srauszahlung.buchung1 = srauszahlung.but1
         buchungstext.buchung1 = buchungstext.but1
         provision.buchung1 = provision.but1
         codevt.buchung1 = codevt.but1
         SRgezahlt.buchung1 = srgezahlt.but1
         Nachname.buchung1 = nachname.but1
         vorname.buchung1 = vorname.but1
         VS_Beginn.buchung1 = VS_Beginn.but1
         Sparte.buchung1 = sparte.but1
         KÅndigung.buchung1 = KÅndigung.but1
         Gesellschaft.buchung1 = Gesellschaft.but1
         Bewertungssumme.buchung1 = Bewertungssumme.but1
         Codeku.buchung1 = codeku.but1
         Volumen.buchung1 = Volumen.but1
         Gesamtbetrag.buchung1 = Gesamtbetrag.but1
         Sperre.buchung1 = sperre.but1
         gezahlt.buchung1 = gezahlt.but1
         gezahlt_am.buchung1 = gezahlt_am.but1
         Mahnung.buchung1 = mahnung.but1
         Einheiten.buchung1 = einheiten.but1
         vtagentur.buchung1 = vtagentur.but1
         vtcodema.buchung1 = vtcodema.but1
         FÑlligkeit.buchung1 = FÑlligkeit.but1
         umrechnung.buchung1 = umrechnung.but1
         codew.buchung1 = codew.but1
         waehrung.buchung1 = waehrung.but1
         waehrungBezeich.buchung1 = waehrungBezeich.but1
         GesamtbetragEU.buchung1 = GesamtbetragEU.but1
         BetragEU.buchung1 = BetragEU.but1
         SREU.buchung1 = SREU.but1
         BewertungssumEU.buchung1 = BewertungssumEU.but1
         gezahltEU.buchung1 = gezahltEU.but1
         Ausgabeauf.buchung1 = Ausgabeauf.but1
         Codeaz.buchung1 = Codeaz.but1
         CALL QuickStore("buchung1")
         FILE "but1"
         SELECT NEXT FILE "but1"
       WEND 
       CLOSE FILE "but1"
       CALL Server("MESSAGE","Bitte warten..." + CHR$ (13) + CHR$ (10) + "Die Zahlungseingangsdatei wird zurÅckgesetzt.")
       FILE "zeingan1"
       INDEX codevt.zeingan1
       SELECT FIRST 
       REMOVE FROM FILE "Zeingan1" WHERE codevt.zeingan1 < 1
       INDEX codeaz.zeingan1
       SELECT FIRST 
       UPDATE gebuchtJN.zeingan1 = "N":gebuchtJNT.zeingan1 = "N"
       END UPDATE 
       CLOSE FILE "zeingan1"
       CALL DFile(3,"zeingan1" + _fpw$)
       FILE "zeingan1"
       INDEX codevt.zeingan1
       REM ** CALL Server("MESSAGE","Bitte warten..." + CHR$ (10) + CHR$ (13) + "Zahlungseingang wird gelîscht.")
       REM ** REMOVE FROM FILE "zeingan1"
       CALL Server("MESSAGE","Bitte warten..." + CHR$ (13) + CHR$ (10) + "Die Vertragsdatei wird zurÅckgesetzt.")
       SET STATUS "Vertragsdatei wird zurÅckgesetzt..."
       REM 271097
       FILE "KVERTRAG"
       UPDATE letzteProvi = 0:gez_Abschlu·.KVERTRAG = "":gez_Pauschale.KVERTRAG = ""
       TZRate.KVERTRAG = 0:letztePflege.KVERTRAG = 0:Pool.KVERTRAG = 0:Mahnung.KVERTRAG = "n"
       END UPDATE 
       CLOSE FILE "kvertrag"
       CALL DFile(3,"kvertrag" + _fpw$)
       FILE "spezkond"
       UPDATE einmaligerfolgt.spezkond = "n":EinmDatum.spezkond = 0
       END UPDATE 
       CLOSE FILE "spezkond"
       CALL DFile(3,"spezkond" + _fpw$)
       FILE "VKOND"
       UPDATE STORNOResGezJN.vkond = ""
       END UPDATE 
       CLOSE FILE "vkond"
       CALL DFile(3,"vkond" + _fpw$)
       REM 060497
       FILE "MAADR"
       INDEX codema.maadr
       UPDATE AuszahlAB.maadr = (erfAuszahlAB.maadr * - 1) + zusAuszahl.maadr:AuszahlEUAB.maadr = (erfAuszahlEUAB.maadr * - 1) + zusAuszahlEU.maadr
       END UPDATE 
       UPDATE Stornoreserve.maadr = 0:Einheiten.maadr = 0:EigEinheiten.maadr = 0:GesVolumen.maadr = 0:EigVolumen.maadr = 0:AuszahlSperKo.maadr = 0:AuszahlSperKoEU.maadr = 0:StornoreserveEU.maadr = 0
       END UPDATE 
       CLOSE FILE "maadr"
       CALL DFile(3,"maadr" + _fpw$)
       REM 220697
       FILE "buchung1"
       INDEX codema.buchung1
       SELECT FIRST 
       WHILE NOT EOF ("buchung1")
         IF Buchungstext.buchung1 LIKE "Storno*" AND Betrag < 0 THEN 
           SELECT KEY codema.buchung1 LOCK FILE "maadr" INDEX codema.maadr
           Stornoreserve.maadr = Stornoreserve.maadr + sr.buchung1
           StornoreserveEU.maadr = VAL ( STR$ (Stornoreserve.maadr / umrechnung.buchung1,"999999999.00"))
           Einheiten.maadr = Einheiten.maadr + Einheiten.buchung1
           REM Workstation.maadr = Workstation%
           REM QWoNo.maadr = STR$ (Workstation%,"000000") + STR$ (codema.maadr,"000000")
           RecStatus.maadr = "c"
           STORE FILE "maadr"
           UNLOCK CURRENT FILE "maadr"
           UNLOCK FILE "maadr"
         END IF 
         FILE "buchung1"
         SELECT NEXT 
       WEND 
       FILE "Aumskto"
       INDEX codema
       UPDATE konto01 = 0:konto02 = 0:konto03 = 0:konto04 = 0:konto05 = 0:konto06 = 0:konto07 = 0:konto08 = 0:konto09 = 0:konto10 = 0:konto11 = 0:konto12 = 0:kontoGes = 0
       konto01EU = 0:konto02eu = 0:konto03eu = 0:konto04eu = 0:konto05eu = 0:konto06eu = 0:konto07eu = 0:konto08eu = 0:konto09eu = 0:konto10eu = 0:konto11eu = 0:konto12eu = 0:kontoGeseu = 0
       storno01 = 0:storno02 = 0:storno03 = 0:storno04 = 0:storno05 = 0:storno06 = 0:storno07 = 0:storno08 = 0:storno09 = 0:storno10 = 0:storno11 = 0:storno12 = 0:stornoGes = 0
       storno01eu = 0:storno02eu = 0:storno03eu = 0:storno04eu = 0:storno05eu = 0:storno06eu = 0:storno07eu = 0:storno08eu = 0:storno09eu = 0:storno10eu = 0:storno11eu = 0:storno12eu = 0:stornoGeseu = 0
       skonto01 = 0:skonto02 = 0:skonto03 = 0:skonto04 = 0:skonto05 = 0:skonto06 = 0:skonto07 = 0:skonto08 = 0:skonto09 = 0:skonto10 = 0:skonto11 = 0:skonto12 = 0:skontoGes = 0
       skonto01EU = 0:skonto02eu = 0:skonto03eu = 0:skonto04eu = 0:skonto05eu = 0:skonto06eu = 0:skonto07eu = 0:skonto08eu = 0:skonto09eu = 0:skonto10eu = 0:skonto11eu = 0:skonto12eu = 0:skontoGeseu = 0
       ekonto01 = 0:ekonto02 = 0:ekonto03 = 0:ekonto04 = 0:ekonto05 = 0:ekonto06 = 0:ekonto07 = 0:ekonto08 = 0:ekonto09 = 0:ekonto10 = 0:ekonto11 = 0:ekonto12 = 0:ekontoGes = 0
       ekonto01EU = 0:ekonto02eu = 0:ekonto03eu = 0:ekonto04eu = 0:ekonto05eu = 0:ekonto06eu = 0:ekonto07eu = 0:ekonto08eu = 0:ekonto09eu = 0:ekonto10eu = 0:ekonto11eu = 0:ekonto12eu = 0:ekontoGeseu = 0
       dkonto01 = 0:dkonto02 = 0:dkonto03 = 0:dkonto04 = 0:dkonto05 = 0:dkonto06 = 0:dkonto07 = 0:dkonto08 = 0:dkonto09 = 0:dkonto10 = 0:dkonto11 = 0:dkonto12 = 0:dkontoGes = 0
       dkonto01EU = 0:dkonto02eu = 0:dkonto03eu = 0:dkonto04eu = 0:dkonto05eu = 0:dkonto06eu = 0:dkonto07eu = 0:dkonto08eu = 0:dkonto09eu = 0:dkonto10eu = 0:dkonto11eu = 0:dkonto12eu = 0:dkontoGeseu = 0
       END UPDATE 
       CLOSE FILE "aumskto"
       CALL DFile(3,"aumskto" + _fpw$)
       REM CALL Fehler("","")
       FILE "Kvertrag"
       CALL BUKOZEPrep1()
       CALL Server("UNLOADMESSAGE","")
       CALL WriteLog(">>Korrekturbuchung ab Stichtag " + CalcDate$)
       REM SET TODAY StartDatum$
       cmonat% = MONTH (CalcDate$)
       cjahr% = YEAR (CalcDate$)
       ctag% = DAY (CalcDate$)
       REM VertrÑge bis zum heutigen Tag hochrechnen
       REM 150697 ctag% = DAY ( TODAY )
       REM 030697 WHILE DAYS (CalcDate$) < TODAY 
       REM WHILE DAYS (CalcDate$) < TODAY 
 
         CALL PROVBUZEIN()
 
 
         REM cmonat% = cmonat% + 1
         REM IF cmonat% = 13 THEN 
           REM cmonat% = 1
           REM cjahr% = cjahr% + 1
         REM END IF 
         REM CalcDate$ = STR$ (ctag%,"00") + "." + STR$ (cmonat%,"00") + "." + STR$ (cjahr%,"0000")
       REM WEND 
       MOUSE ON 
       SET DISPLAY RESTORE 
       SET STATUS "Bereit"
       CALL CloseLog()
     ELSE 
       CALL Fehler("Falsches Datumsformat!","Das Datum mu· in der Form 'tt.mm.jj' eingegeben werden.")
     END IF 
   END IF 
 END IF 
 Anschluss% = 0
 REM supervis war exclusiv-modus îffnen, um herauszufinden, ob noch jemand im Programm eingeloggt ist
 REM jetzt wieder fÅr alle îffnen
 IF OPEN ("supervis") THEN CLOSE FILE "supervis"
 CALL DFile(2,"supervis" + _fpw$)
 END SUB 
 
 ' Vorbereitung der Buchungskorrektur
 ' Aufbau der Vertragspools fÅr Zahlungseingangskontrolle
 ' =======================================================================
  
SUB BUKOZEPrep1()
 PROVBU$ = "TRUE"
 IF RECCOUNT ("zeingan1") < 1 THEN END SUB 
 MOUSE OFF 
 SET STATUS "Aufbau der Eingangskonten..."
 CALL Server("MESSAGE","Bitte warten...Die Eingangskonten werden neu aufgebaut.")
 FILE "zeingan1"
 INDEX CodeVT.zeingan1
 SELECT FIRST 
 SELECT KEY CodeVT.zeingan1 LOCK FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
 lv% = 0
 WHILE NOT EOF ("zeingan1")
   IF CodeVT.zeingan1 <> lv% THEN 
     SET STATUS "Aufbau der Eingangskonten...(Vertrag " + VS_NR.KVERTRAG + ")"
     IF lv% <> 0 THEN CALL QuickStore("KVERTRAG")
     SELECT KEY CodeVT.zeingan1 LOCK FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
     lv% = CodeVT.zeingan1
   END IF 
 
   Pool% = (Pool.KVERTRAG + Betrag.zeingan1) * 100
   pool1$ = STR$ (pool%,"999999999999")
   poolges% = ( VAL (pool1$)) / 100
   pool.kvertrag = poolges%
   SELECT NEXT FILE "zeingan1" INDEX CodeVT.zeingan1
 WEND 
 CALL QuickStore("KVERTRAG")
 PROVBU$ = "False"
 MOUSE ON 
 END SUB 
 
 ' Zahlung von Stornoreserven
 ' =======================================================================
 
SUB SRZahlungZein()
 MOUSE OFF 
 IF cdate% = 0 THEN cdate% = TODAY 
 FILE "buchung1"
 INDEX CodeBU.buchung1
 fmax% = RECCOUNT ("buchung1")
 lp% = 0
 cp% = 0
 fcount% = 0
 SELECT FIRST 
 WHILE NOT EOF ("buchung1")
   fcount% = fcount% + 1
   cp% = INT (100 / fmax% * fcount%)
   IF lp% <> cp% THEN 
     lp% = cp%
     SET STATUS "Auszahlung Stornoreserve: " + LTRIM$ ( STR$ (lp%,"999")) + "%"
   END IF 
   REM 060497
   IF SRgezahlt.buchung1 <> "j" AND SRAuszahlung.buchung1 < cdate% AND SRAuszahlung.buchung1 <> 0 THEN 
     _cubu% = CodeBU.buchung1
     _CodeMA% = CodeMA.buchung1
     _CodeVT% = CodeVT.buchung1
     _SR% = SR.buchung1
     umrechnung% = umrechnung.buchung1
     codew% = codew.buchung1
     waehrung$ = waehrung.buchung1

     Agentur$ = Agentur.buchung1
     betr% = SR.BUCHUNG1 * - 1
     euro1% = umrechnung.buchung1
     waehr1$ = waehrung.buchung1

     SELECT KEY _cubu% LOCK FILE "buchung1" INDEX CodeBU.buchung1
     SRGezahlt.buchung1 = "j"
     CALL QuickStore("buchung1")
     SELECT KEY _Codema% LOCK FILE "maadr" INDEX codema.maadr
     REM 060497
     Stornoreserve.maadr = Stornoreserve.maadr - _SR%
     StornoreserveEU.maadr = VAL ( STR$ (Stornoreserve.maadr / umrechnung.buchung1,"999999999.00"))
     REM Workstation.maadr = Workstation%
     REM QWoNo.maadr = STR$ (Workstation%,"000000") + STR$ (codema.maadr,"000000")
     RecStatus.maadr = "c"

     abst% = Stornoreserve.maadr
     absteu% = StornoreserveEU.maadr
 
     REM ****************************AUSZAHLUNGSSPERRE**********************************
     eigen% = 0
     PSpAll$ = PROVSperreAll.maadr
     PSpAllSeit% = PSperreAllSeit.maadr
     PROVSpEig$ = PROVSperreEig.maadr
     PSpESeit% = PSperreESeit.maadr
     REM CALL Fehler("","")
     eigen% = 1
     IF PspAll$ = "j" THEN 
       IF PSpAllSeit% <= cdate% THEN 
         REM IF ma1% = 529 THEN CALL Fehler("TRIEBSCH","")
         AuszahlSperKo.maadr = AuszahlSperKo.maadr + _SR%
         AuszahlSperKoEU.maadr = VAL ( STR$ (AuszahlSperKo.maadr / euro1%,"999999999.00"))
       END IF 
     ELSE 
       IF eigen% = 1 AND PROVSpEig$ = "j" THEN 
         IF PSpESeit% <= cdate% THEN 
           AuszahlSperKo.maadr = AuszahlSperKo.maadr + _SR%
           AuszahlSperKoEU.maadr = VAL ( STR$ (AuszahlSperKo.maadr / euro1%,"999999999.00"))
         END IF 
       END IF 
     END IF 
     REM ****************************AUSZAHLUNGSSPERRE Ende**********************************  
     AuszahlAB.maadr = AuszahlAB.maadr + _SR%
     AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / euro1%,"999999999.00"))
     AuszProvABGes.maadr = AuszProvABGes.maadr + _SR%
     AuszProvABGesEU.maadr = VAL ( STR$ (AuszProvABGes.maadr / euro1%,"999999999.00"))
     REM Workstation.maadr = Workstation%
     REM QWoNo.maadr = STR$ (Workstation%,"000000") + STR$ (codema.maadr,"000000")
     RecStatus.maadr = "c"
     STORE FILE "maadr"
     UNLOCK CURRENT FILE "maadr"
     REM *****************************************************************************************************
     REM Zentralberechnung des Kontostandes
     zusatz% = 0
     CALL ZentrKTO(_CodeMA%,cdate%,_SR%,betr%,codew%,euro1%,waehr1$,PSpAll$,PSpAllSeit%,PROVSpEig$,PSpESeit%,eigen%,zusatz%,0)
     REM *****************************************************************************************************  
 



     REM STORE FILE "maadr"
     SELECT KEY _CodeVT% FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
     BLANK FILE "buchung1"
     CodeBU.buchung1 = SER ("buchung1",1)
     Datum.buchung1 = cdate%
     CodeVT.buchung1 = _CodeVT%
     CodeMA.buchung1 = _CodeMA%
     SR.buchung1 = 0 - _SR%
     Betrag.buchung1 = _SR%
     Buchungstext.buchung1 = "SR-Auszahlung " + VS_Nr.KVERTRAG
     Bewertungssumme.buchung1 = Bewertungssumme.KVERTRAG
     BewertungssumEU.buchung1 = VAL ( STR$ (Bewertungssumme.KVERTRAG / umrechnung%,"999999999.00"))
     KÅndigung.buchung1 = KÅndigung.KVERTRAG
     VS_Beginn.buchung1 = VS_Beginn.KVERTRAG
     Agentur.buchung1 = Agentur$
     umrechnung.buchung1 = umrechnung%
     codew.buchung1 = codew%
     waehrung.buchung1 = waehrung$
     CodeKU.BUCHUNG1 = CodeKU.KVERTRAG
     SReu.BUCHUNG1 = VAL ( STR$ (sr.buchung1 / umrechnung%,"999999999.00"))
     BetragEu.BUCHUNG1 = VAL ( STR$ (betrag.buchung1 / umrechnung%,"999999999.00"))

     vsumme.buchung1 = vsumme.kvertrag
     vsummeEU.buchung1 = VAL ( STR$ (vsumme.kvertrag / umrechnung.buchung1,"999999999.00"))
     BeitragBrut.buchung1 = Beitrag.kvertrag
     BeitragNet.buchung1 = NettoBeitrag.kvertrag
     BeitragBrutEu.buchung1 = VAL ( STR$ (Beitrag.kvertrag / umrechnung.buchung1,"999999999.00"))
     BeitragNetEu.buchung1 = VAL ( STR$ (NettoBeitrag.kvertrag / umrechnung.buchung1,"999999999.00"))
     zw.buchung1 = zw.kvertrag
     mwst.buchung1 = mwst.kvertrag
     IF zw.buchung1 > 0 THEN 
       JahresBBrut.buchung1 = BeitragBrut.buchung1 * zw.buchung1
       JahresBNet.buchung1 = BeitragNet.buchung1 * zw.buchung1
       JahresBBrutEu.buchung1 = VAL ( STR$ (JahresBBrut.buchung1 / umrechnung.buchung1,"999999999.00"))
       JahresBNetEu.buchung1 = VAL ( STR$ (JahresBNet.buchung1 / umrechnung.buchung1,"999999999.00"))
     ELSE 
       JahresBBrut.buchung1 = BeitragBrut.buchung1
       JahresBNet.buchung1 = BeitragNet.buchung1
       JahresBBrutEu.buchung1 = VAL ( STR$ (JahresBBrut.buchung1 / umrechnung.buchung1,"999999999.00"))
       JahresBNetEu.buchung1 = VAL ( STR$ (JahresBNet.buchung1 / umrechnung.buchung1,"999999999.00"))
     END IF 



     REM umrechnung.buchung1=umrechnung.kvertrag
     CodeKU.buchung1 = CodeKU.KVERTRAG
     SELECT KEY CodeVA.kvertrag FILE "SPARTEN" INDEX CodeVA.SPARTEN
     Sparte.buchung1 = Sparte.SPARTEN
     SELECT KEY CodeKU.KVERTRAG FILE GAdrDat$ INDEX CodeKU.GAdrDat$
     Nachname.buchung1 = Nachname.GAdrDat$
     Vorname.buchung1 = Vorname.GAdrDat$
     SELECT KEY CodeGE.KVERTRAG FILE "GEADR" INDEX CodeGE.GEADR
     Gesellschaft.buchung1 = Gesellschaft.GEADR
     SRgezahlt.buchung1 = "j"
     Provision.buchung1 = "j"
     REM SR.buchung1 = 0 - _SR%
     CALL QuickStore("buchung1")
     SELECT KEY _cubu% FILE "buchung1" INDEX CodeBU.buchung1
   END IF 
   SELECT NEXT FILE "buchung1" INDEX CodeBU.buchung1
 WEND 
 MOUSE ON 
 END SUB 
 



 REM ****************************************************************************************
 REM *         Erzeugen einer VertragsprovisionsvorschlagsÅbersicht                         *
 REM ****************************************************************************************
 
SUB ProvCheck()
 codevtab% = 0
 IF disabled%("BUCHUNG6") THEN END SUB 
 CALL DFile(3,"buchung" + _fpw$)
 CALL DFile(3,"buchmon" + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$)
 CALL DFile(3,"gekond" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"kvertrag" + _fpw$)
 CALL DFile(3,"vkond" + _fpw$)
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 IF anschluss% = 0 THEN 
   CalcDate$ = DATE$ ( TODAY ,"0d.mm.yyyy")
   CREATE DIALOG "STICHTAG",0,0,222,114,"Buchungsdatum","MS Sans Serif",8
   ADD DIALOG "STICHTAG",4,0,0,222,91,0,""
   ADD DIALOG "STICHTAG",9,6,9,23,24,2
   ADD DIALOG "STICHTAG",5,31,15,183,10,0,"Bitte geben Sie an, fÅr welches Buchungsdatum"
   ADD DIALOG "STICHTAG",5,31,25,183,10,0,"die Provisionsberechnung durchgefÅhrt werden soll:"
   ADD DIALOG "STICHTAG",5,32,40,182,10,0,"(ohne énderung des Datums oder Weglassen"
   ADD DIALOG "STICHTAG",5,31,50,182,10,0,"der Datumsangabe, wird das heutige Datum verwendet)"
   ADD DIALOG "STICHTAG",6,94,72,42,12,0,0,CalcDate$,10
   ADD DIALOG "STICHTAG",5,30,74,58,10,0,"Buchungsdatum:"
   ADD DIALOG "STICHTAG",1,52,94,54,14,1,"&OK",1,1
   ADD DIALOG "STICHTAG",1,109,94,54,14,0,"&Abbrechen",0,0
   DIALOG "STICHTAG",req%
   REMOVE DIALOG "STICHTAG"
   IF req% = 1 THEN 
     IF DateOK%(CalcDate$) THEN 
       ok% = 1
       IF codevtab% = 0 THEN CALL WriteConfig("PROVIS","letzteProvisionsrechnung",CalcDate$)
     ELSE 
       ok% = 0
       CALL Fehler("Falsche Datumsangabe!","Bitte geben Sie das Datum in der Form 'tt.mm.jjjj' ein.")
     END IF 
   ELSE 
     ok% = 0
     GOTO eab28119901
   END IF 
 ELSE 
   ok% = 1
 END IF 
 IF ok% = 1 THEN 
   cdate% = DAYS (CalcDate$)
   minimize$ = ReadINI$("PROVIS","minimize")
   IF anschluss% = 0 THEN 
     IF minimize$ LIKE "TRUE" THEN 
       REQUEST "PROVIS wird in den Hintergrund geschaltet!","Sie kînnen wÑhrend der Berechung andere Programme starten.",0
       SET DISPLAY MIN 
     END IF 
     CALL CreateLog()
   END IF 
 
   CALL WriteLog("")
   CALL WriteLog("=================================")
   CALL WriteLog("Provisionsabrechnung vom " + DATE$ (cdate%,"0d.mm.yyyy"))
   CALL WriteLog("=================================")
   CALL WriteLog("")
   MOUSE OFF 
   FILE "kvertrag"
   INDEX ProviAb.kvertrag
   SELECT FIRST 
   IF codevtab% > 0 THEN 
     INDEX lfdnr.kvertrag
     SELECT KEY codevtab% LOCK FILE "Kvertrag" INDEX lfdnr.kvertrag
   END IF 
   _p1% = RECCOUNT ("kvertrag")
   _pd$ = "0"
   _pd% = - 1
   _p2% = 0
   IF codevtab% = 0 THEN WHILE NOT EOF ("kvertrag") AND (ProviAb.KVERTRAG <= cdate% OR BewertCalcDat.kvertrag <= cdate%)
   IF codevtab% > 0 THEN WHILE NOT EOF ("kvertrag") AND (ProviAb.KVERTRAG <= cdate% OR BewertCalcDat.kvertrag <= cdate%) AND lfdnr.kvertrag = codevtab%
 
     REM -----------------------------------------
     REM -- Prozentbalken und Header aktualisieren
     REM -----------------------------------------
 
     SET STATUS "Bearbeite Vertrag " + LTRIM$ ( STR$ (_p2%,"999999")) + " von " + LTRIM$ ( STR$ (_p1%,"999999")) + "  " + vs_NR.kvertrag
     _pc% = FIX (100 / _p1% * _p2%,0)
     IF _pd% <> _pc% THEN 
       _pd% = _pc%
       IF FN sys(11) = 36 AND FN sys(12) = 36 THEN 
         IF anschluss% = 0 THEN 
           SET HEADING STR$ (_pd%,"999") + "%"
         ELSE 
           SET HEADING STR$ (_pd%,"999") + "% " + LTRIM$ ( STR$ ( MONTH (cdate%),"00")) + "/" + RIGHT$ ( STR$ ( YEAR (cdate%),"9999"),4)
         END IF 
       ELSE 
         IF anschluss% = 0 THEN 
           SET HEADING title$ + " - Provisionsberechung: " + STR$ (_pd%,"999") + "% erledigt"
         ELSE 
           SET HEADING title$ + " - Provisionsberechung: " + STR$ (_pd%,"999") + "% " + LTRIM$ ( STR$ ( MONTH (cdate%),"00")) + "/" + RIGHT$ ( STR$ ( YEAR (cdate%),"9999"),4)
         END IF 
       END IF 
     END IF 
 
     REM --------------------------------------
     REM -- CheckUp fÅr Vertragsprovisionierung
     REM --------------------------------------
 
     ok% = 1
     REM 030697
     IF codeko.kvertrag < 1 THEN 
       ok% = 0
     ELSE 
       REM CALL Fehler(Test",date$(cdate%,"0d.mm.yyyy")
       REM 190298
       IF DAYS (KÅndigung.KVERTRAG) > 1 AND DAYS (KÅndigung.KVERTRAG) < cdate% THEN 
         ok% = 0
         REM 210597
         IF TatsKuenDat.kvertrag > KÅndigung.KVERTRAG THEN ok% = 1
         IF TatsKuenDat.kvertrag < cdate% THEN ok% = 0
         IF _debug% = 1 THEN CALL WriteLog("## KÅndigung: " + STR$ (lfdnr.KVERTRAG,"000000") + ", " + DATE$ (KÅndigung.KVERTRAG,"0d.mm.yyyy"))
       END IF 
       IF Storno.KVERTRAG <> 0 AND DAYS (KÅndigung.KVERTRAG) < cdate% THEN 
         ok% = 0
         REM 190398
         IF TatsKuenDat.kvertrag > KÅndigung.KVERTRAG THEN ok% = 1
         IF TatsKuenDat.kvertrag < cdate% THEN ok% = 0
       END IF 
       
       IF DAYS (ProviAb.KVERTRAG) < 1 THEN 
         ok% = 0
       END IF 
       IF DAYS (VS_Beginn.KVERTRAG) < 1 THEN 
         ok% = 0
       END IF 
       IF DAYS (ProviAb.KVERTRAG) > cdate% THEN 
         ok% = 0
       END IF 
       IF cdate% - DAYS (letzteProvi.KVERTRAG) < 27 THEN 
         ok% = 0
         IF _debug% > 1 THEN CALL WriteLog("## Zeitsperre: " + DATE$ (letzteProvi.KVERTRAG,"0d.mm.yyyy"))
       END IF 
       IF CodeMA.KVERTRAG < 1 THEN 
         CALL WriteLog("!dem Vertrag wurde keine Agentur zugeordnet")
         CALL AddLogInfo()
         ok% = 0
       END IF 
       IF CodeGE.KVERTRAG < 1 THEN 
         CALL WriteLog("!dem Vertrag wurde keine Gesellschaft zugeordnet")
         CALL AddLogInfo()
         ok% = 0
       END IF 
       IF CodeVA.KVERTRAG < 1 THEN 
         CALL WriteLog("!dem Vertrag wurde keine Sparte zugeordnet")
         CALL AddLogInfo()
         ok% = 0
       END IF 
       IF CodeKO.KVERTRAG = 0 AND DAYS (ProviAb.KVERTRAG) >= cdate% THEN 
         CALL WriteLog("!der erwartete Eintrag in VKOND konnte nicht gefunden werden")
         CALL AddLogInfo()
         ok% = 0
       END IF 
     END IF 
     REM ------------------------
     REM -- Aufruf der Berechnung
     REM ------------------------
 
     IF ok% = 1 THEN 
       REM CALL Fehler("Provision soll berechnet werden","")
       gezPflege% = 0
       gezPauschale% = 0
       gezAbschlu·% = 0
       gezStornoRes% = 0
       CALL PROVCHECK2()
     END IF 
     IF codevtab% = 0 THEN SELECT NEXT FILE "KVERTRAG" INDEX ProviAb.kvertrag
     IF codevtab% > 0 THEN SELECT NEXT FILE "KVERTRAG" INDEX lfdnr.kvertrag
     _p2% = _p2% + 1
   WEND 
 CALL CloseLog()
 END SUB 
 
 
 
 
 REM *********************************************************
 REM Test der gefundenen VertrÑge, ob gezahlt werden mu·
 REM *********************************************************
SUB PROVCHECK2()
 cfile$ = FILE 
 ok% = 1
 REM **DEBUG ProviAb-Check
 
 IF ProviAb.KVERTRAG > cdate% THEN 
   CALL WriteLog("## Aufruf PROVISION2 mit ProviAb > cdate%")
   REM REQUEST "ProviAb > cdate%"
 END IF 
 bwbezug$ = ReadConfig$("PROVIS","Bewertungszeitraum")
 IF bwbezug$ LIKE "leer" OR bwbezug$ LIKE "Provisionierungsbeginn" THEN 
   BWStart% = DAYS (ProviAb.KVERTRAG)
 ELSE 
   BWStart% = DAYS (VS_Beginn.KVERTRAG)
 END IF 
 Laufzeit% = FIX ((cdate% - BWStart%) / 30,0)
 LaufzeitPro% = FIX ((cdate% - DAYS (ProviAb.KVERTRAG)) / 30,0)
 
 REM **DEBUG Laufzeit in LOG schreiben
 IF _debug% = 1 THEN CALL WriteLog("## Laufzeit: " + STR$ (lfdnr.KVERTRAG,"000000") + " - " + STR$ (Laufzeit%,"9999") + " Monate")
 cuvt% = lfdnr.KVERTRAG
 codema% = CodeMA.kvertrag
 codege% = CodeGE.kvertrag
 codeva% = CodeVA.kvertrag
 koab% = CodeKO.KVERTRAG
 SELECT FIRST FILE "maadr" INDEX codema.maadr
 SELECT KEY codema% FILE "maadr" INDEX codema.maadr
 Gvtagentur$ = Nachname.maadr + "," + vorname.maadr
 Gvtcodema% = codema.maadr
 IF NOT EXISTS (koab%,codevk.VKOND) THEN 
   CALL WriteLog("  kein Eintrag in Datei VKOND-gefunden!")
   CALL AddLogInfo()
   ok% = 0
 ELSE 
   SELECT KEY koab% LOCK FILE "VKOND" INDEX CodeVK.VKOND
 END IF 
 vertrprov% = 0
 vsumAP% = 0
 vsumC% = 0
 vsumPP% = 0
 vsumPausch% = 0
 vertrsr% = 0
 WHILE ok% = 1
   SELECT KEY CodeKO.VKOND FILE "GEKOND" INDEX lfdnr.GEKOND
   IF NOT FOUND ("GEKOND") THEN 
     CALL WriteLog("  die angegebene Kondition ist nicht enthalten!")
     CALL WriteLog("  SUPPORT: die in VKOND angegebene Kondition fehlt in GEKOND!")
     CALL AddLogInfo()
     ok% = 0
   END IF 
   IF ok% = 1 THEN 
     vtagentur$ = Gvtagentur$
     vtcodema% = GVTcodema%
     codema% = CodeMA.GEKOND
     REM 150697
     dmeinh% = dmeinheit.gekond
     REM --------------------
     REM -- Abschlu·provision
     REM --------------------
 
     IF APjn.gekond = "j" THEN 
       IF gez_Abschlu·.kvertrag <> "j" THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * AP.gekond)
 
         IF SRjn.gekond = "j" AND Laufzeit% < Haftung.gekond THEN 
           sr% = sr.gekond
           IF sr% <> 0 THEN 
             Haftung% = DAYS (VS_Beginn.kvertrag) + (Haftung.gekond * 30)
           ELSE 
             Haftung% = 0
           END IF 
         ELSE 
           REM unbegrenzte Haftung ohne Auszahlung
           IF Haftung.gekond = - 1 THEN 
             sr% = sr.gekond
             Haftung% = 0
           ELSE 
             sr% = 0
             Haftung% = 0
           END IF 
         END IF 
         a = "A"
         IF a = "A" THEN 
           CALL CheckProvis("AP: " + VS_Nr.KVERTRAG,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag)
           ok% = 0
         END IF 
       END IF 
     END IF 
 
     REM ------------------
     REM -- Pflegeprovision
     REM ------------------
     REM 13.10.94  - keine Berechung der Stornoreserve
     pflege% = 0
     IF PflegeJN.gekond = "j" THEN 
       IF Laufzeit% >= Pflegezeit.gekond THEN 
         _day% = DAY (letztePflege.KVERTRAG)
         _month% = MONTH (letztePflege.KVERTRAG)
         _year% = YEAR (letztePflege.KVERTRAG)
 
         IF _year% < 1980 THEN 
           _year% = 1980
           _day% = 1
           _month% = 1
         END IF 
  
           REM 060597 Neu Pflegeprovis nach Zahlweisen
           PflegeGez$ = "j"
           IF PflegeNachZahlw = "n" THEN 
             REM -- abhÑngig von Zahlungsweise im Vertrag --
             SELECT CASE ZW.KVERTRAG
             CASE 1
               _year% = _year% + 1
             CASE 2
               _month% = _month% + 6
               IF _month% > 12 THEN 
                 _year% = _year% + 1
                 _month% = _month% - 12
               END IF 
             CASE 4
               _month% = _month% + 3
               IF _month% > 12 THEN 
                 _year% = _year% + 1
                 _month% = _month% - 12
               END IF 
             CASE 6
               _month% = _month% + 2
               IF _month% > 12 THEN 
                 _year% = _year% + 1
                 _month% = _month% - 12
               END IF 
             CASE 12
               _month% = _month% + 1
               IF _month% > 12 THEN 
                 _year% = _year% + 1
                 _month% = _month% - 12
               END IF 
             CASE 0
               _year% = 2100
             END SELECT 
             nextpfl% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
             REM 060597 klÑren wozu ?
             IF ZW.KVERTRAG = 0 AND letzteProvi.KVERTRAG < 1 THEN 
               REM 150597
               REM prov% = (((Beitrag.KVERTRAG * ZW.KVERTRAG) / 100) * PflegeProvi.gekond)
               prov% = (((Beitrag.KVERTRAG) / 100) * PflegeProvi.gekond)
               PflegeGez$ = "j"
               pflege% = 1
               sr% = 0
               Haftung% = 0
             ELSE 
               IF nextpfl% <= cdate% THEN 
                 REM 150597
                 REM prov% = (((Beitrag.KVERTRAG * ZW.KVERTRAG) / 100) * PflegeProvi.gekond)
                 prov% = (((Beitrag.KVERTRAG) / 100) * PflegeProvi.gekond)
                 PflegeGez$ = "j"
                 pflege% = 1
                 sr% = 0
                 Haftung% = 0
               END IF 
             END IF 
           ELSE 
             REM -- AbhÑngig von Zahlweise in GEKOND --
             _month% = _month% + PflegeZW.GEKOND
             IF _month% > 12 THEN 
               _year% = _year% + 1
               _month% = _month% - 12
             END IF 
             nextpfl% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
             IF nextpfl% <= cdate% THEN 
               prov% = (((Beitrag.KVERTRAG * ZW.KVERTRAG) / 100) * PflegeProvi.gekond)
               PflegeGez$ = "j"
               pflege% = 1
               sr% = 0
               Haftung% = 0
             END IF 
           END IF 
           REM 030697 IF PflegeGez$ = "j" THEN CALL RegProvis("Pflege: " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%)
           IF PflegeGez$ = "j" THEN 
             CALL CheckProvis("Pflege: " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag)
             ok% = 0
           END IF 
         END IF 
       END IF 
     END IF 
 
     REM 140497 Courtage nicht rechnen, wenn CourtageEinstell angekreuzt wurde und eine Pflegeprov. gezahlt wurde 
     REM 270497 IF pflege% = 1 AND CourtEinstellen.gekond = "j" THEN GOTO Pflege1404971 
     REM 200597
 
     IF pflege% = 1 OR letztePflege.kvertrag > 0 THEN GOTO CheckPrv261199
 
     REM -----------
     REM -- Courtage
     REM -----------
 
     IF CourtageJN.gekond = "j" THEN 
       _day% = DAY (letzteProvi.KVERTRAG)
       _month% = MONTH (letzteProvi.KVERTRAG)
       _year% = YEAR (letzteProvi.KVERTRAG)
       IF _year% < 1980 THEN 
         _year% = 1980
         _day% = 1
         _month% = 1
       END IF 
       CourtGez$ = "n"
       IF CourtageZWjn.gekond = "n" THEN 
         REM -- abhÑngig von Zahlungsweise im Vertrag --
         SELECT CASE ZW.KVERTRAG
         CASE 1
           _year% = _year% + 1
         CASE 2
           _month% = _month% + 6
           IF _month% > 12 THEN 
             _year% = _year% + 1
             _month% = _month% - 12
           END IF 
         CASE 4
           _month% = _month% + 3
           IF _month% > 12 THEN 
             _year% = _year% + 1
             _month% = _month% - 12
           END IF 
         CASE 6
           _month% = _month% + 2
           IF _month% > 12 THEN 
             _year% = _year% + 1
             _month% = _month% - 12
           END IF 
         CASE 12
           _month% = _month% + 1
           IF _month% > 12 THEN 
             _year% = _year% + 1
             _month% = _month% - 12
           END IF 
         CASE 0
           _year% = 2100
         END SELECT 
         nextprovi% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
         IF ZW.KVERTRAG = 0 AND letzteProvi.KVERTRAG < 1 THEN 
           IF CourtNachBeitr$ = "TRUE" THEN 
             prov% = ((Beitrag.KVERTRAG / 100) * Courtage.gekond)
           ELSE 
             prov% = ((Bewertungssumme.KVERTRAG / 100) * Courtage.gekond)
           END IF 
           CourtGez$ = "j"
         ELSE 
           IF nextprovi% <= cdate% THEN 
             IF CourtNachBeitr$ = "TRUE" THEN 
               prov% = ((Beitrag.KVERTRAG / 100) * Courtage.gekond)
             ELSE 
               prov% = ((Bewertungssumme.KVERTRAG / 100) * Courtage.gekond)
             END IF 
             CourtGez$ = "j"
           END IF 
         END IF 
       ELSE 
         REM -- AbhÑngig von Zahlweise in GEKOND --
         _month% = _month% + CourtageZW.GEKOND
         IF _month% > 12 THEN 
           _year% = _year% + 1
           _month% = _month% - 12
         END IF 
         nextprovi% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
         IF nextprovi% <= cdate% THEN 
           IF CourtNachBeitr$ = "TRUE" THEN 
             prov% = ((Beitrag.KVERTRAG / 100) * Courtage.gekond)
           ELSE 
             prov% = ((Bewertungssumme.KVERTRAG / 100) * Courtage.gekond)
           END IF 
           CourtGez$ = "j"
         END IF 
       END IF 
       REM 060497
       REM 200597
       IF SRjn.gekond = "j" AND Laufzeit% < Haftung.gekond AND StornoResGezJN.vkond <> "j" THEN 
         StornoResGezJN$ = ""
         sr% = sr.gekond
         IF sr% <> 0 THEN 
           codevk% = codevk.vkond
           Haftung% = DAYS (ProviAb.kvertrag) + (Haftung.gekond * 30)
           StornoResGezJN$ = "x"
         END IF 
       ELSE 
         IF Haftung.gekond = - 1 THEN 
           sr% = sr.gekond
           Haftung% = 0
         ELSE 
           sr% = 0
           Haftung% = 0
         END IF 
       END IF 
 
       IF StornoResGezJN$ = "x" THEN 
         StornoResGezJN.vkond = "j"
         codevk% = codevk.vkond
         Workstation.vkond = Workstation%
         QWoNo.vkond = STR$ (Workstation%,"000000") + STR$ (codevk.vkond,"000000")
         RecStatus.vkond = "c"
         STORE FILE "Vkond"
         SELECT KEY codevk% FILE "VKOND" INDEX CodeVK.VKOND
         StornoResGezJN$ = ""
       END IF 
       REM 220697
       a = "A"
       IF a = "A" THEN 
         IF a = "A" THEN 
           CALL CheckProvis("Courtage: " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag)
           ok% = 0
         END IF 
       END IF 
     END IF 
 
 
CheckPrv261199: 
 
  
 
 
  
     REM ----------------
     REM -- Vertragsdauer
     REM ----------------
 
     IF VDjn.gekond = "j" THEN 
       IF gez_Abschlu·.kvertrag <> "j" THEN 
         SELECT CASE VS_Dauer.KVERTRAG
         CASE VD1Dauer.gekond
           prov% = ((Bewertungssumme.KVERTRAG / 100) * VD1AP.gekond)
           sr% = VD1SR.gekond
           Haftung% = VD1HZ.GEKOND
         CASE VD2Dauer.gekond
           prov% = ((Bewertungssumme.KVERTRAG / 100) * VD2AP.gekond)
           sr% = VD2SR.gekond
           Haftung% = VD2HZ.GEKOND
         CASE VD3Dauer.gekond
           prov% = ((Bewertungssumme.KVERTRAG / 100) * VD3AP.gekond)
           sr% = VD3SR.gekond
           Haftung% = VD3HZ.GEKOND
         CASE VD4Dauer.gekond
           prov% = ((Bewertungssumme.KVERTRAG / 100) * VD4AP.gekond)
           sr% = VD4SR.gekond
           Haftung% = VD4HZ.GEKOND
         CASE VD5Dauer.gekond
           prov% = ((Bewertungssumme.KVERTRAG / 100) * VD5AP.gekond)
           sr% = VD5SR.gekond
           Haftung% = VD5HZ.GEKOND
         END SELECT 
         IF sr% <> 0 THEN 
           Haftung% = (Haftung% * 30) + DAYS (VS_beginn.kvertrag)
         ELSE 
           Haftung% = 0
         END IF 
         a = "A"
         IF a = "A" THEN 
           CALL CheckProvis("VD: " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag)
           ok% = 0
         END IF 
       END IF 
     END IF 
   
     REM -----------------------------------
     REM -- Teilzahlung/Ratenzahlung
     REM -- z.Z. auf Ratenzahlung umgestellt
     REM -----------------------------------
 
     IF TZjn.gekond = "j" THEN 
       IF TZRate.KVERTRAG + 1 = 1 THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ0.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD1.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ1.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD2.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ2.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD3.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ3.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD4.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ4.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD5.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ5.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD6.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ6.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD7.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ7.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD8.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ8.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD9.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ9.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD10.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ10.gekond)
       END IF 
       IF TZRate.KVERTRAG + 1 = TZD11.gekond THEN 
         prov% = ((Bewertungssumme.KVERTRAG / 100) * TZ11.gekond)
       END IF 
       IF prov% <> 0 THEN 
         REM 060497
         IF SRjn.gekond = "j" AND Laufzeit% < Haftung.gekond THEN 
           sr% = sr.gekond
           IF sr% <> 0 THEN Haftung% = DAYS (VS_Beginn.kvertrag + (Haftung.gekond * 30))
         ELSE 
           IF Haftung.gekond = - 1 THEN 
             sr% = sr.gekond
             Haftung% = 0
           ELSE 
             sr% = 0
             Haftung% = 0
           END IF 
         END IF 
         REM IF sr% <> 0 THEN 
           REM Haftung% = DAYS (VS_Beginn.kvertrag + (Haftung.gekond * 30))
         REM ELSE 
           REM Haftung% = 0
         REM END IF
         a = "A"
         IF a = "A" THEN 
           CALL CheckProvis("TZ (" + LTRIM$ ( STR$ (TZRate.KVERTRAG + 1,"999")) + ". Zahlung): " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag)
           ok% = 0
         END IF 
       ELSE 
         CALL WriteLog("!Konditionen fÅr Ratenzahlung/Teilzahlung unvollstÑndig")
         CALL WriteLog("    >> Rate: " + LTRIM$ ( STR$ (TZRate.KVERTRAG + 1,"999")))
         CALL WriteLog("    >> bei Abschlu·:" + LTRIM$ ( STR$ (TZ0.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD1.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ1.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD2.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ2.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD3.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ3.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD4.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ4.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD5.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ5.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD6.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ6.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD7.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ7.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD8.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ8.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD9.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ9.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD10.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ10.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD11.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ11.gekond,",999999.00")))
         CALL AddLogInfo()
       END IF 
 
     END IF 
 
     REM ------------
     REM -- Pauschale
     REM ------------
 
     IF PauschaleJN.gekond = "j" THEN 
       IF gez_Pauschale.kvertrag <> "j" THEN 
         prov% = Pauschale.gekond
         REM 060497
         IF SRjn.gekond = "j" AND Laufzeit% < Haftung.gekond THEN 
           sr% = sr.gekond
           IF sr% <> 0 THEN Haftung% = DAYS (VS_Beginn.kvertrag) + (Haftung.gekond * 30)
         ELSE 
           IF Haftung.gekond = - 1 THEN 
             sr% = sr.gekond
             Haftung% = 0
           ELSE 
             sr% = 0
             Haftung% = 0
           END IF 
         END IF 
         REM IF sr% <> 0 THEN 
           REM Haftung% = DAYS (VS_Beginn.kvertrag) + (Haftung.gekond * 30)
         REM ELSE 
           REM Haftung% = 0
         REM END IF
         a = "A"
         IF a = "A" THEN 
           CALL CheckProvis("Pauschale: " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag)
           ok% = 0
         END IF 
       END IF 
     END IF 
 
   END IF 
 
   IF nÑchsteKond.VKOND = 0 THEN 
     ok% = 0
   ELSE 
     IF ok% <> 0 THEN 
       SELECT KEY nÑchsteKond.VKOND LOCK FILE "VKOND" INDEX CodeVK.VKOND
     END IF 
   END IF 
 
 WEND 
eab28119901: 
 END SUB 
 
 
 
 
 REM ===================================================================================
 REM =   Aufnahme der zur Berechnung freigegebenen DatensÑtze in eine gesonderte Datei =
 REM ===================================================================================
 
SUB CheckProvis(remark$,ma%,provi%,sr%,Haftung%,euro1%,codew%,waehr1$)
 cfile$ = FILE 
 FILE "kvertrag"
 _lfdnr% = lfdnr.KVERTRAG
 SELECT KEY _lfdnr% LOCK FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
 SELECT KEY ma% FILE "maadr" INDEX CodeMA.MAADR
 SELECT KEY codeva.kvertrag FILE "sparten" INDEX codeva.sparten
 REM -- bereits gezahlte Provisionen verallgemeinern
 IF remark$ LIKE "Abschl*" OR remark$ LIKE "AP*" OR remark$ LIKE "*Abschl*" THEN 
   vertrprov% = vsumAP%
 ELSE IF remark$ LIKE "Courta*" THEN 
   vertrprov% = vsumC%
 ELSE IF remark$ LIKE "Pflege*" THEN 
   vertrprov% = vsumPP%
 ELSE IF remark$ LIKE "Pauschal*" THEN 
   vertrprov% = vsumPausch%
 ELSE IF remark$ LIKE "VD*" THEN 
   vertrprov% = vsumAP%
 END IF 
 
 REM -- Bearbeitung bei letzter Agentur in der Struktur
 IF (CodeMA.maadr = vorgÑnger.maadr) OR (VorgÑnger.MAADR < 1) THEN 
   REM letzteProvi.kvertrag = cdate%
   IF remark$ LIKE "TZ (*" THEN 
     TZRate.KVERTRAG = TZRate.KVERTRAG + 1
   END IF 
 END IF 
 
 REM -- Einmalzahlungen/Berechnungen Stornoreserve registrieren --
 IF remark$ LIKE "Abschlu*" OR remark$ LIKE "VD*" OR remark$ LIKE "*Abschl*" OR remark$ LIKE "AP*" THEN gezAbschlu·% = 1
 IF remark$ LIKE "Pflege*" THEN gezPflege% = 1
 IF remark$ LIKE "Pauschal*" THEN gezPauschale% = 1
  
 
 MOUSE OFF 
 FILE "buchmon"
 BLANK 
 CodeBU.buchmon = SER ("buchmon",1)
 Datum.buchmon = cdate%
 FÑlligkeit.buchmon = cdate%
 CodeVT.buchmon = lfdnr.kvertrag
 IF KÅndigung.MAADR <= cdate% AND Nachfolger.MAADR <> 0 THEN 
   CodeMA.buchmon = Nachfolger.MAADR
   ma1% = Nachfolger.MAADR
   Buchungstext.buchmon = remark$ + " (Umbuchung von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)"
 ELSE 
   CodeMA.buchmon = ma%
   ma1% = ma%
   Buchungstext.buchmon = remark$
 END IF 
 IF dmeinh% > 0 THEN einheit% = provi% / dmeinh%
 SRBetrag% = ((provi% - vertrprov%) / 100) * sr%
 Betrag.buchmon = provi% - vertrprov% - SRBetrag%

 Gesamtbetrag.BUCHmon = provi%
 Bewertungssumme.BUCHmon = Bewertungssumme.KVERTRAG
 Volumen.BUCHmon = Volumen.KVERTRAG
 KÅndigung.BUCHmon = KÅndigung.KVERTRAG
 VS_Beginn.BUCHmon = VS_Beginn.KVERTRAG
 CodeKU.BUCHmon = CodeKU.KVERTRAG
 vtagentur.buchmon = Gvtagentur$
 vtcodema.buchung = Gvtcodema%
   IF EinheitSach.stamm = "j" THEN 
     IF SparteIstSach.sparten <> 1 THEN 
       IF ma1% = vtcodema% THEN 
         IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchmon = einheit%
         IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchmon = einheiten.kvertrag
       END IF 
     ELSE 
         IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchmon = einheit%
         IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchmon = einheiten.kvertrag
     END IF 
   ELSE 
         IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchmon = einheit%
         IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchmon = einheiten.kvertrag
   END IF 
 SELECT KEY CodeVA.kvertrag FILE "SPARTEN" INDEX CodeVA.SPARTEN
 Sparte.BUCHmon = Sparte.SPARTEN
 SELECT KEY CodeKU.KVERTRAG FILE GAdrDat$ INDEX CodeKU.GAdrDat$
 Nachname.BUCHmon = Nachname.GAdrDat$
 Vorname.BUCHmon = Vorname.GAdrDat$
 umrechnung.buchmon = euro1%
 codew.buchmon = codew%
 waehrung.buchmon = waehr1$
 SELECT KEY CodeGE.KVERTRAG FILE "GEADR" INDEX CodeGE.GEADR
 Gesellschaft.BUCHmon = Gesellschaft.GEADR
 Provision.buchmon = "j"
 IF sr% = 0 THEN 
   SRgezahlt.buchmon = "j"
   SR.buchmon = 0
 ELSE 
   REM 060497
   IF Haftung% = - 1 THEN 
     SRAuszahlung.buchmon = 0
     SR.buchmon = SRBetrag%
   ELSE 
     SRAuszahlung.buchmon = Haftung%
     SR.buchmon = SRBetrag%
   END IF 
 END IF 
 
 REM -- Zahlungseingang prÅfen --
 REM 070897
 IF check.KVERTRAG = "j" THEN 
   REM CALL Fehler("Check auf Pool","")
   _lfdnr% = lfdnr.KVERTRAG
   SELECT KEY _lfdnr% LOCK FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
   pool% = (Pool.KVERTRAG - Betrag.BUCHUNG) * 100
   pool1$ = STR$ (pool%,"999999999999")
   poolges% = ( VAL (pool1$)) / 100
   REM pool.kvertrag = poolges%
   IF Pool.KVERTRAG < 0 THEN 
     REM Mahnung.KVERTRAG = "j"
     Mahnung.BUCHmon = "j"
     CALL WriteLog("  fehlender Zahlungseingang von Gesellschaft")
     CALL AddLogInfo()
   END IF 
   REM CALL QuickStore("KVERTRAG")
 END IF 
 ausgewÑhlt.buchmon = "j"
 zero.buchmon = 0
 codebumon.buchmon = DATE$ (datum.buchmon,"0dmmyyyy") + STR$ (codebu.buchmon,"000000")
 letzteProvi.buchmon = letzteProvi.kvertrag
 CALL QuickStore("buchmon")
 
 REM -- Aufsummierung der einzelnen Provisionsarten
 REM    fÅr Differenzberechnung
 IF remark$ LIKE "Abschl*" OR remark$ LIKE "*Abschl*" OR remark$ LIKE "AP*" THEN 
   vsumAP% = provi%
 ELSE IF remark$ LIKE "Courta*" THEN 
   vsumC% = provi%
 ELSE IF remark$ LIKE "Pflege*" THEN 
   vsumPP% = provi%
 ELSE IF remark$ LIKE "Pauschal*" THEN 
   vsumPausch% = provi%
 ELSE IF remark$ LIKE "VD*" THEN 
   vsumAP% = provi%
 ELSE 
   vertrprov% = provi%
 END IF 
  
 END SUB 
 
 
 REM **************************************************************************************
 REM *          Abgleich der Vertragsvorschlagsliste zur Provisionsabrechnung             *
 REM **************************************************************************************
 
SUB CheckAbgl()
 IF disabled%("EINGANG") THEN END SUB 
  IF disabled%("BUCHUNG6") THEN END SUB 
 CALL DFile(3,"buchung" + _fpw$)
 CALL DFile(3,"buchmon" + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$)
 CALL DFile(3,"gekond" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"kvertrag" + _fpw$)
 CALL DFile(3,"vkond" + _fpw$)
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GTelDat$ + _fpw$)
 MOUSE OFF 
 FILE "buchmon"
 INDEX codebu.buchmon
 SELECT WHERE FILE "buchmon"
 SELECT FIRST 
 _formend% = 0
 kumask$ = "BUCHMON"
 WHILE _formend% = 0
   ON ERROR GOTO ErrorHandler
   IF UCASE$ ( FORM ) <> kumASK$ THEN 
     SET HEADING title$ + " - Vorschlagsliste"
     OPEN FORM GPrjForm$ + kumASK$
     SET f = Superbase.Form
     lGesellschaft$ = ""
     lAgentur$ = ""
     lSparte$ = ""
     lKunde$ = ""
     lAussenstand$ = ""
     CALL BUCHKIntro()
     CALL MNBUCHK()
     REM CALL KuKtoSuch()
     SET STATUS "Vorschlagsliste"
   END IF 
   MENU ON 
   MOUSE ON 
   ZEINsub% = 0
   IF RECCOUNT ("BUCHMON") > 0 THEN CALL BUCHKUpdate()
   CALL ClearKBDBuffer()
   FORM 
   f.suchen.visible = - 1
   f.suchen.enabled = - 1
   f.uebersicht.enabled = - 1
   f.abbruch.visible = 0
   f.abbruch.enabled = 0
   
   IF ZEINsub% <> 99 THEN WAIT KEY OR MENU OR MOUSE 
   REM ** Tastaturabfrage
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL PSelectPrev()
   CASE CrsRight%,PgDn%
     CALL PSelectNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE ZEINsub%
 
   CASE 5
       codebu% = codebu.buchmon
       cuvt% = codevt.buchmon
       FORM 2
       SELECT FORM KEY codebu% FILE "buchmon" INDEX codebu.buchmon
       FORM 
   CASE 6
       FORM 1
       SELECT FORM KEY 0 FILE "buchmon" INDEX zero.buchmon
       FORM 
   CASE 7
       SELECT WHERE FILE "buchmon"
       SELECT FORM KEY 0 FILE "buchmon" INDEX zero.buchmon
       such$ = "kein Filter gesetzt"
       FORM 
   CASE 8
         codebu% = codebu.buchmon
         su$ = such$
         vt% = codevt.buchmon
         cuvt% = codevt.buchmon
         filt$ = WHERE 
         SELECT WHERE FILE "buchmon"
         SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
         SELECT KEY vt% FILE "Kvertrag" INDEX lfdnr.kvertrag
         
         
         knr% = Codeku.kvertrag
         SELECT KEY knr% FILE GAdrDat$ INDEX codeku.GAdrDat$
         FILE "kvertrag"
         CALL KVERTRAG()
         _formend% = 0
         FILE "buchmon"
         OPEN FORM GPrjForm$ + kumask$
         SET f = Superbase.Form
         
         FILE "buchmon"
         bef$ = "select where " + filt$
         EXECUTE bef$
         such$ = su$
         
         SET STATUS "Vorschlagsliste"
         FORM 1
         SELECT FORM KEY codebu% FILE "buchmon" INDEX codebu.buchmon
         FORM 
         CALL BUCHKIntro()
         CALL MNBUCHK()
   CASE 9
         su$ = such$
         kumask$ = "BUCHMON"
         OPEN FORM GPrjForm$ + kumASK$
         such$ = su$
         SET f = Superbase.Form
         CALL BUCHKIntro()
         CALL MNBUCHK()
   CASE 10
         kumask$ = "BUCHMON1"
         su$ = such$
         OPEN FORM GPrjForm$ + kumASK$
         SET f = Superbase.Form
         such$ = su$
         CALL BUCHKIntro()
         CALL MNBUCHK()
   CASE 11
         su$ = such$
         kumask$ = "BUCHMON2"
         OPEN FORM GPrjForm$ + kumASK$
         SET f = Superbase.Form
         such$ = su$
         CALL BUCHKIntro()
         CALL MNBUCHK()
   CASE 13
       REM Provisionsabrechnung
       FILE "buchmon"
       INDEX ausgewÑhlt.buchmon
       SELECT WHERE FILE "buchmon"
       SELECT FIRST 
       SELECT WHERE ausgewÑhlt.buchmon = "j"
       SELECT FIRST 
       WHILE NOT EOF ("buchmon")
         CalcDate$ = DATE$ (Datum.buchmon,"0d.mm.yyyy")
         anschluss% = 0
         codevt% = codevt.buchmon
         CALL PROVBUCHUNG(codevt%)
         SELECT NEXT FILE "buchmon"
       WEND 
       SELECT WHERE FILE "buchmon"
       SELECT FIRST 
       REQUEST "Provisionsberechnung ist abgeschlossen!"
       REM CALL CloseLog()
 END SELECT 
   MENU ON 
 WEND 
 SELECT WHERE FILE "BUCHMON"
 _formend% = 0
 
 END SUB 
 


 ' ***********************************************************************
 ' Vorausberechnung alle VertrÑge
 ' =======================================================================
 ' 06.12.2000 
 ' vorart%=0 Berechnung fÅr alle,=1 nur fÅr Firma
 
SUB Vorausber(vorart%)
 IF disabled%("BUCHUNG6") THEN END SUB 
 Anschluss% = 1
 REM REQUEST "Die Korrekturbuchung lîscht alle Buchungen des Vertrages und setzt","den Vertrag zurÅck! Fortfahren?",135,req%
 req% = 1
 IF req% = 1 THEN 
   opt% = 1
   twer% = VAL ( LEFT$ ( DATE$ ( TODAY ,"0d.mm.yyyy"),2))
   IF twer% > 27 THEN twer% = 27
   tmon$ = LEFT$ ( DATE$ ( TODAY ,"mmyyyy0d"),2)
   tjah$ = LEFT$ ( DATE$ ( TODAY ,"yyyymm0d"),4)
   CalcDate$ = STR$ (twer%,"00") + "." + tmon$ + "." + tjah$
   IF CalcDateTo$ = "" THEN CalcDateTo$ = CalcDate$
   CalcDateOld$ = ""
vor3001200101: 
   IF CalcDateOld$ <> "" THEN 
     CalcDate$ = CalcDateOld$
   END IF 
   opt% = 1
   CREATE DIALOG "ANSCHLUSS",0,0,291,132,"Vorausberechnung","MS Sans Serif",8
   ADD DIALOG "ANSCHLUSS",4,0,32,291,68,0,""
   ADD DIALOG "ANSCHLUSS",9,9,12,21,23,2

   ADD DIALOG "ANSCHLUSS",3,38,9,153,10,0,"Listen drucken",1,opt%
   ADD DIALOG "ANSCHLUSS",3,38,19,155,10,0,"Berechnung durchfÅhren",2,opt%

   ADD DIALOG "ANSCHLUSS",5,38,42,244,25,0,"Bitte geben Sie Ihren Provisionsberechnungs/Druck-Stichtag ein und bis wann sie vorausberechnet/gedruckt werden soll:"
   ADD DIALOG "ANSCHLUSS",5,130,75,65,10,0,"Berechnung bis:"
   ADD DIALOG "ANSCHLUSS",6,190,74,51,11,0,0,CalcDateTO$,20
   ADD DIALOG "ANSCHLUSS",5,38,75,33,10,0,"Stich&tag:"
   ADD DIALOG "ANSCHLUSS",6,73,74,51,11,0,0,CalcDate$,20
   ADD DIALOG "ANSCHLUSS",1,74,110,55,14,1,"&OK",1,1
   ADD DIALOG "ANSCHLUSS",1,132,110,55,14,0,"&Abbrechen",0,0
   DIALOG "ANSCHLUSS",req%
   REMOVE DIALOG "ANSCHLUSS"
   IF req% < 1 THEN END SUB 
   CalcDateOld$ = CalcDate$
   IF opt% <> 1 THEN 
     REQUEST "Haben alle anderen User das Programm beendet?","",135,req%
   ELSE 
     req% = 1
   END IF 
   IF req% <> 1 THEN 
     CALL Fehler("Es mÅssen alle User das Programm verlassen haben, um die Vorausberechnung durchfÅhren zu kînnen!","")
     END SUB 
   END IF 
   IF opt% <> 1 THEN 
     REQUEST "Mîchten Sie wirklich die Vorausberechnung durchfÅhren lassen?","",135,req%
   ELSE 
     req% = 1
   END IF 
    IF req% = 1 THEN 
     IF DateOK%(CalcDate$) AND DateOK%(CalcDateTo$) THEN 
      TestDate% = DAYS (CalcDate$)
      twer% = VAL ( LEFT$ ( DATE$ (TestDate%,"0d.mm.yyyy"),2))
      IF twer% > 27 THEN twer% = 27
      tmon$ = LEFT$ ( DATE$ (TestDate%,"mmyyyy0d"),2)
      tjah$ = LEFT$ ( DATE$ (TestDate%,"yyyymm0d"),4)
      CalcDate$ = STR$ (twer%,"00") + "." + tmon$ + "." + tjah$
      TestDate% = DAYS (CalcDateTo$)
      twer% = VAL ( LEFT$ ( DATE$ (TestDate%,"0d.mm.yyyy"),2))
      IF twer% > 27 THEN twer% = 27
      tmon$ = LEFT$ ( DATE$ (TestDate%,"mmyyyy0d"),2)
      tjah$ = LEFT$ ( DATE$ (TestDate%,"yyyymm0d"),4)
      CalcDateTo$ = STR$ (twer%,"00") + "." + tmon$ + "." + tjah$
      IF CalcDateTo$ = CalcDate$ THEN 
        CALL Fehler("Datum fÅr Berechnung von und fÅr Berechnung bis sind gleich!","Bitte korrigieren!")
        GOTO vor3001200101
      END IF 
      IF opt% = 1 THEN GOTO vorendber16010101
       CALL CreateLog()
       MOUSE OFF 
       CALL Server("LOADMESSAGE","")
       CALL Server("MESSAGE","Bitte warten... ")
       CALL DFile(3,"buchung" + _fpw$)
       CALL DFile(3,"kvertrag" + _fpw$)
       CALL DFile(3,"ZEINGANG" + _fpw$)
       CALL DFile(3,"gekond" + _fpw$)
       CALL DFile(3,"maadr" + _fpw$)
       CALL DFile(3,"maadrgru" + _fpw$)
       CALL DFile(3,"kvertrag" + _fpw$)
       CALL DFile(3,"vkond" + _fpw$)
       CALL DFile(3,"statist3" + _fpw$)
       CALL DFile(3,"statist4" + _fpw$)
       FILE "KVERTRAG"
       IF OPEN ("KVTMP") THEN CLOSE FILE "KVTMP"
       IF EXISTS (_ppath$ + "KVTMP.sbf") THEN 
         DELETE _ppath$ + "KVTMP.*"
       END IF 
       MOUSE OFF 
       CALL Server("MESSAGE","Bitte warten..." + CHR$ (13) + CHR$ (10) + "Die Vertragsdatei fÅr Vorausberechnungen wird erzeugt.")
       SET STATUS "Kopiere Datei KVERTRAG zu KVTMP"
       CREATE FILE "KVTMP" FROM FILE "KVERTRAG"
       FILE "KVTMP"
       CALL Server("MESSAGE","Bitte warten..." + CHR$ (13) + CHR$ (10) + "Die Vertragsdatei wird zurÅckgesetzt.")
       SET STATUS "Vertragsdatei wird zurÅckgesetzt..."
       FILE "KVTMP"
       UPDATE BewertcalcDaV = 0:letzteProviV = letzteProvi:gez_AbschluV.KVTMP = gez_Abschlu·:gez_PauschalV.KVTMP = gez_Pauschale
       TZRateV.KVTMP = TZRate:letztePflegV.KVTMP = letztePflege:PoolV.KVTMP = Pool.KVTMP:MahnungV.KVTMP = Mahnung
       END UPDATE 
       CLOSE FILE "kvtmp"
       CALL DFile(3,"kvtmp" + _fpw$)
       IF OPEN ("VKOTMP") THEN CLOSE FILE "VKOTMP"
       IF EXISTS (_ppath$ + "VKOTMP.sbf") THEN 
         DELETE _ppath$ + "VKOTMP.*"
       END IF 
       CALL Server("MESSAGE","Bitte warten..." + CHR$ (13) + CHR$ (10) + "Die Konditionsdatei fÅr Vorausberechnungen wird erzeugt.")
       SET STATUS "Kopiere Datei VKOND zu VKOTMP"
       CREATE FILE "VKOTMP" FROM FILE "VKOND"
       CALL Server("MESSAGE","Bitte warten..." + CHR$ (13) + CHR$ (10) + "Die Konditionsdatei wird zurÅckgesetzt.")
       FILE "VKOTMP"
       SET STATUS "VKOTMP wird zurÅckgesetzt..."
       UPDATE STORNOResGezJV.VKOTMP = ""
       END UPDATE 
       REM 060497
       CALL Server("MESSAGE","Bitte warten..." + CHR$ (13) + CHR$ (10) + "Die Mitarbeiterdatei wird zurÅckgesetzt.")
       FILE "MAADR"
       SET STATUS "Mitarbeiterdatei wird zurÅckgesetzt..."
       INDEX codema.maadr
       UPDATE StornoreservV.maadr = 0:EinheitenV.maadr = 0:EigEinheitenV.maadr = 0:GesVolumenV.maadr = 0:EigVolumenV.maadr = 0
       END UPDATE 
       CLOSE FILE "maadr"
       CALL DFile(3,"maadr" + _fpw$)
       REM CALL BUKOPrepEinz(codevt%)
       REM SET TODAY StartDatum$
       cmonat% = MONTH (CalcDate$)
       cjahr% = YEAR (CalcDate$)
       ctag% = DAY (CalcDate$)
       REM VertrÑge bis zum heutigen Tag hochrechnen
       REM 150697 ctag% = DAY ( TODAY )
       IF OPEN ("BUCHVOR") THEN CLOSE FILE "BUCHVOR"
       IF EXISTS (_ppath$ + "Buchvor.sbf") THEN 
         DELETE _ppath$ + "Buchvor.*"
       END IF 
       CALL Server("MESSAGE","Bitte warten..." + CHR$ (13) + CHR$ (10) + "Die Buchungsdatei fÅr Vorausberechnungen wird erzeugt.")
       SET STATUS "Kopiere Datei BUCHUNG zu BUCHVOR"
       CREATE FILE "BUCHVOR" FROM FILE "BUCHUNG"
       FILE "BUCHVOR"
       PASSWORD "BUCHVOR;paris;paris;paris"
       INDEX Codebu.buchvor
       SELECT LAST 
       WHILE CodeBU.Buchvor > SER ("BUCHvor",1)
       WEND 
       SET STATUS "Lîschen der Inhalte von STATIST3 und STATIST4"
       REMOVE FROM FILE "statist3"
       REORGANIZE FILE "statist3" TO "statist3"
       REMOVE FROM FILE "statist4"
       REORGANIZE FILE "statist4" TO "statist4"
       CALL Server("UNLOADMESSAGE","")
       CALL WriteLog(">>Vorausberechnung ab Stichtag " + CalcDate$)
       CalcDateOrig$ = CalcDate$
       WHILE DAYS (CalcDate$) < DAYS (CalcDateTo$) + 1
         REM CALL Fehler(CalcDate$,CalcDateTo$)
         CALL PROVVoraus(vorart%)
         cmonat% = cmonat% + 1
         IF cmonat% = 13 THEN 
           cmonat% = 1
           cjahr% = cjahr% + 1
         END IF 
         CalcDate$ = STR$ (ctag%,"00") + "." + STR$ (cmonat%,"00") + "." + STR$ (cjahr%,"0000")
       WEND 
       MOUSE ON 
       SET DISPLAY RESTORE 
       SET STATUS "Bereit"
       CALL CloseLog()
       MOUSE OFF 
       IF vorart% = 0 THEN GOTO vor3001200101
       '*******************************************************************************************************
       REM    FÅllen der Statistikdatei "statist3" unter zu Hilfenahme der "statist4"
       '*******************************************************************************************************
       SET STATUS "RÅcksetzen des VAnzahlVor-Feldes in der Gesellschaftsdatei"
       FILE "geadr"
       UPDATE VAnzahlVor.geadr = 0
       END UPDATE 

       SET STATUS "RÅcksetzen des VAnzahlVor-Feldes in der Spartendatei"
       FILE "sparten"
       UPDATE VAnzahlVor.sparten = 0
       END UPDATE 
       SET STATUS "RÅcksetzen des VAnzahlVor-Feldes in der Produktdatei"
       FILE "vprodukt"
       UPDATE VAnzahlVor.vprodukt = 0
       END UPDATE 
       FILE "kvtmp"
       INDEX lfdnr.kvtmp
       FILE "Buchvor"
       INDEX datum.buchvor
       SELECT FIRST 
       SELECT KEY CalcDateOrig$ FILE "buchvor" INDEX datum.buchvor
       aa% = RECCOUNT ("buchvor")
       i% = 0
       WHILE NOT EOF ("buchvor")
         i% = i% + 1
         SET STATUS STR$ (i%,"999999") + " DatensÑtze von " + STR$ (aa%,"999999") + " verarbeitet
         SELECT FIRST FILE "kvtmp" INDEX lfdnr.kvtmp
         SELECT KEY codevt.buchvor FILE "kvtmp" INDEX lfdnr.kvtmp
         gesp$ = STR$ (codege.kvtmp,"000000") + STR$ (codeva.kvtmp,"000000")
         ' Vertrag bei der Gesellschaft hochzÑhlen
         IF NOT EXISTS (codevt.buchvor,codevt.statist4) AND codevt.buchvor > 0 THEN 
           REM wenn noch nicht existiert, dan wurde der Vertrag noch nicht hochgezÑhlt
           BLANK FILE "statist4"
           codevt.statist4 = codevt.buchvor
           STORE FILE "statist4"
           UNLOCK CURRENT FILE "statist4"
           FILE "GEADR"
           INDEX codege.geadr
           SELECT FIRST 
           SELECT KEY codege.kvtmp LOCK FILE "geadr" INDEX codege.geadr
           VAnzahlVor.geadr = VAnzahlVor.geadr + 1
           sbewertung.geadr = sbewertung.geadr + bewertungssumme.kvtmp
           sbewertungEU.geadr = VAL ( STR$ (sbewertung.geadr / umrechnung.kvtmp,"999999999.00"))
           SVSumme.geadr = SVSumme.geadr + VSumme.kvtmp
           SVSummeEU.geadr = VAL ( STR$ (SVSumme.geadr / umrechnung.kvtmp,"999999999.00"))
           SBeitragBRU.geadr = SBeitragBRU.geadr + JahresBBrut.buchvor
           SBeitragBRUEU.geadr = VAL ( STR$ (SBeitragBRU.geadr / umrechnung.kvtmp,"999999999.00"))
           SBeitragNET.geadr = SBeitragNET.geadr + JahresBNet.buchvor
           SBeitragNETEU.geadr = VAL ( STR$ (SBeitragNET.geadr / umrechnung.kvtmp,"999999999.00"))
           STORE FILE "geadr"
           UNLOCK CURRENT FILE "geadr"

           FILE "sparten"
           INDEX codeva.sparten
           SELECT FIRST 
           SELECT KEY codeva.kvtmp LOCK FILE "sparten" INDEX codeva.sparten
           VAnzahlVor.sparten = VAnzahlVor.sparten + 1
           sbewertung.sparten = sbewertung.sparten + bewertungssumme.kvtmp
           sbewertungEU.sparten = VAL ( STR$ (sbewertung.sparten / umrechnung.kvtmp,"999999999.00"))
           SVSumme.sparten = SVSumme.sparten + VSumme.kvtmp
           SVSummeEU.sparten = VAL ( STR$ (SVSumme.sparten / umrechnung.kvtmp,"999999999.00"))
           SBeitragBRU.sparten = SBeitragBRU.sparten + JahresBBrut.buchvor
           SBeitragBRUEU.sparten = VAL ( STR$ (SBeitragBRU.sparten / umrechnung.kvtmp,"999999999.00"))
           SBeitragNET.sparten = SBeitragNET.sparten + JahresBNet.buchvor
           SBeitragNETEU.sparten = VAL ( STR$ (SBeitragNET.sparten / umrechnung.kvtmp,"999999999.00"))
           STORE FILE "sparten"
           UNLOCK CURRENT FILE "sparten"

           FILE "vprodukt"
           INDEX codeva.vprodukt
           SELECT FIRST 
           SELECT KEY gesp$ LOCK FILE "vprodukt" INDEX QcodeGEVA.vprodukt
           VAnzahlVor.vprodukt = VAnzahlVor.vprodukt + 1
           sbewertung.vprodukt = sbewertung.vprodukt + bewertungssumme.kvtmp
           sbewertungEU.vprodukt = VAL ( STR$ (sbewertung.vprodukt / umrechnung.kvtmp,"999999999.00"))
           SVSumme.vprodukt = SVSumme.vprodukt + VSumme.kvtmp
           SVSummeEU.vprodukt = VAL ( STR$ (SVSumme.vprodukt / umrechnung.kvtmp,"999999999.00"))
           SBeitragBRU.vprodukt = SBeitragBRU.vprodukt + JahresBBrut.buchvor
           SBeitragBRUEU.vprodukt = VAL ( STR$ (SBeitragBRU.vprodukt / umrechnung.kvtmp,"999999999.00"))
           SBeitragNET.vprodukt = SBeitragNET.vprodukt + JahresBNet.buchvor
           SBeitragNETEU.vprodukt = VAL ( STR$ (SBeitragNET.vprodukt / umrechnung.kvtmp,"999999999.00"))
           STORE FILE "vprodukt"
           UNLOCK CURRENT FILE "vprodukt"
         END IF 
         FILE "buchvor"
         'jetzt FÅllen der Datei statist3
         dtest$ = LEFT$ ( DATE$ (datum.buchvor,"yyyymm0d"),6)
         dsuch$ = gesp$ + dtest$
         SELECT FIRST FILE "geadr" INDEX codege.geadr
         SELECT KEY codege.kvtmp LOCK FILE "geadr" INDEX codege.geadr
         svolumen.geadr = svolumen.geadr + Volumen.kvtmp
         svolumenEU.geadr = VAL ( STR$ (svolumen.geadr / umrechnung.kvtmp,"999999999.00"))
         sprovision.geadr = sprovision.geadr + betrag.buchvor
         sprovisionEU.geadr = VAL ( STR$ (sprovision.geadr / umrechnung.kvtmp,"999999999.00"))
         STORE FILE "geadr"
         UNLOCK CURRENT FILE "geadr"
         SELECT FIRST FILE "Sparten" INDEX codeva.sparten
         SELECT KEY codeva.kvtmp LOCK FILE "Sparten" INDEX codeva.sparten
         svolumen.Sparten = svolumen.Sparten + Volumen.kvtmp
         svolumenEU.Sparten = VAL ( STR$ (svolumen.Sparten / umrechnung.kvtmp,"999999999.00"))
         sprovision.Sparten = sprovision.Sparten + betrag.buchvor
         sprovisionEU.Sparten = VAL ( STR$ (sprovision.Sparten / umrechnung.kvtmp,"999999999.00"))
         STORE FILE "Sparten"
         UNLOCK CURRENT FILE "Sparten"
         SELECT FIRST FILE "vprodukt" INDEX QcodeGEVA.vprodukt
         SELECT KEY gesp$ LOCK FILE "vprodukt" INDEX QcodeGEVA.vprodukt
         svolumen.vprodukt = svolumen.vprodukt + Volumen.kvtmp
         svolumenEU.vprodukt = VAL ( STR$ (svolumen.vprodukt / umrechnung.kvtmp,"999999999.00"))
         sprovision.vprodukt = sprovision.vprodukt + betrag.buchvor
         sprovisionEU.vprodukt = VAL ( STR$ (sprovision.vprodukt / umrechnung.kvtmp,"999999999.00"))
         STORE FILE "vprodukt"
         UNLOCK CURRENT FILE "vprodukt"
         IF NOT EXISTS (dsuch$,QCodeGEVAJM.statist3) THEN 
           BLANK FILE "statist3"
           codege.statist3 = codege.kvtmp
           codeva.statist3 = codeva.kvtmp
           JahrMonat.statist3 = VAL (dtest$)
           Gesellschaft.statist3 = gesellschaft.geadr
           Sparte.statist3 = Sparte.sparten
           QCodeGes.statist3 = gesellschaft.geadr + Sparte.sparten
           QCodeGEVA.statist3 = STR$ (codege.kvtmp,"000000") + STR$ (codeva.kvtmp,"000000")
           QCodeGEVAJM.statist3 = STR$ (codege.kvtmp,"000000") + STR$ (codeva.kvtmp,"000000") + dtest$
           sbewertung.statist3 = bewertungssumme.kvtmp
           sbewertungEU.statist3 = VAL ( STR$ (bewertungssumme.kvtmp / umrechnung.kvtmp,"999999999.00"))
           SVSumme.statist3 = VSumme.kvtmp
           SVSummeEU.statist3 = VAL ( STR$ (VSumme.kvtmp / umrechnung.kvtmp,"999999999.00"))
           SBeitragBRU.statist3 = JahresBBrut.buchvor
           SBeitragBRUEU.statist3 = VAL ( STR$ (JahresBBrut.buchvor / umrechnung.kvtmp,"999999999.00"))
           SBeitragNET.statist3 = JahresBNet.buchvor
           SBeitragNETEU.statist3 = VAL ( STR$ (JahresBNet.buchvor / umrechnung.kvtmp,"999999999.00"))
           STORE FILE "statist3"
           UNLOCK CURRENT FILE "statist3"
         END IF 
         FILE "statist3"
         INDEX QCodeGEVAJM.statist3
         SELECT FIRST 
         SELECT KEY dsuch$ LOCK FILE "statist3" INDEX QCodeGEVAJM.statist3
         svolumen.statist3 = svolumen.statist3 + Volumen.kvtmp
         svolumenEU.statist3 = VAL ( STR$ (svolumen.statist3 / umrechnung.kvtmp,"999999999.00"))
         sprovision.statist3 = sprovision.statist3 + betrag.buchvor
         sprovisionEU.statist3 = VAL ( STR$ (sprovision.statist3 / umrechnung.kvtmp,"999999999.00"))
         STORE FILE "statist3"
         UNLOCK CURRENT FILE "statist3"
         FILE "buchvor"
         SELECT NEXT FILE "buchvor" INDEX datum.buchvor
       WEND 
       MOUSE ON 
       GOTO vor3001200101
vorendber16010101: 
       
         CALL DFile(3,"statist3" + _fpw$)
         CALL DFile(3,"statist4" + _fpw$)
         IF EXISTS (_netpath$ + "\PROVIS\buchvor.sbf") THEN 
           CALL DFile(3,"buchvor" + _fpw$)
         ELSE 
           CALL Fehler("ACHTUNG Sie haben noch keine Vorausberecnung durchgefÅhrt!","Bitte fÅhren Sie erst eine Vorausberechnung durch!")
           GOTO vor3001200101
         END IF 
         CALL DFile(3,"geadr" + _fpw$)
         CALL DFile(3,"sparten" + _fpw$)
         CALL DFile(3,"vprodukt" + _fpw$)
       IF vorart% > 0 THEN 
         CALL VorausList()
       ELSE 
         REQUEST "Mîchten Sie die Vorausberechnung fÅr einen bestimmten ","Mitarbeiters angezeigt bekommen ?",130,req31%
         IF req31% = 1 THEN 
           'ein bestimmter Mitarbeiter
           ma% = GetCodeMA%(cuma%,Workstation%)
           IF ma% <> 0 THEN 
             SELECT KEY ma% FILE "maadr" INDEX codema.maadr
             CALL VORPROV(ma%,CalcDate$,CalcDateTo$)
           ELSE 
             REQUEST "kein Mitarbeiter ausgewÑhlt!"
             GOTO vorend3001200102
           END IF 
         ELSE 
           'alle Mitarbeiter
           CALL VORPROV(0,CalcDate$,CalcDateTo$)
         END IF 
       END IF 
     ELSE 
       CALL Fehler("Falsches Datumsformat!","Das Datum mu· in der Form 'tt.mm.jjjj' eingegeben werden.")
     END IF 
   END IF 
 END IF 
vorend3001200102: 
 Anschluss% = 0
 END SUB 
 
SUB VORPROV(ma%,von$,bis$)
 SELECT WHERE FILE "MAADR"
 SELECT WHERE FILE "BUCHVOR"

 CALL PRep("VORPROV")
 REPORT ON Betrag.BUCHVOR AS "SSumAgentur%",SR.BUCHVOR AS "SSumStorno%",BetnGezahlt% AS "SSumNBez%",BetnDiff% AS "SGesSum%"
 AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 IF ma% > 0 THEN 
   Header$ = "Vorausberechnung Vermittler " + nachname.maadr + " Agnr.: " + Agenturnr.maadr + " in " + Waehrung.stamm
 ELSE 
   Header$ = "Vorausberechnung alle Vermittler" + " in " + Waehrung.stamm
 END IF 
 IF von$ = "" AND bis$ <> "" THEN Header$ = Header$ + " (bis " + DATE$ ( TODAY ,"0d.mm.yyyy") + ")"
 IF von$ <> "" AND bis$ = "" THEN Header$ = Header$ + " (ab " + von$ + ")"
 IF von$ <> "" AND bis$ <> "" THEN Header$ = Header$ + " (vom " + von$ + " bis " + bis$ + ")"
 IF von$ = "" AND bis$ = "" THEN Header$ = Header$ + " (GesamtÅbersicht)"
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 GROUP CodeMA.MAADR,Betrag.BUCHVOR AS "SumAgentur%",SR.BUCHVOR AS "SumStorno%",BetnGezahlt% AS "SumNBez%",BetnDiff% AS "GesSum%",Einheiten.BUCHVOR AS "SumEinh%"
 BEFORE GROUP CodeMA.MAADR
     SET REPORT PAGE "H_CodeMA.MAA002"
     OUTPUT REPORT PAGE 
 END GROUP 
 
 AFTER GROUP CodeMA.MAADR
     SET REPORT PAGE "F_CodeMA.MAA002"
     OUTPUT REPORT PAGE 
     EJECT REPORT 
 END GROUP 
 
 GROUP Datum.BUCHVOR
 BEFORE GROUP Datum.BUCHVOR
     SET REPORT PAGE "H_Datum.BUCH003"
     OUTPUT REPORT PAGE 
 END GROUP 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 vondat% = DAYS (von$)
 bisdat% = DAYS (bis$)
 MOUSE OFF 
 ON ERROR GOTO endrepvor30012001
 IF ma% > 0 THEN 
   SELECT ;
     WHERE CodeMA.MAADR = CodeMA.BUCHVOR AND CodeMA.MAADR = ma% AND Datum.BUCHVOR >= vondat%) AND Datum.BUCHVOR <= bisdat%
     ORDER REPORT nachname.maadr,Datum.BUCHVOR,kunde$
     TO ASK 
   END SELECT 
 ELSE 
   SELECT ;
     WHERE CodeMA.MAADR = CodeMA.BUCHVOR AND Datum.BUCHVOR >= vondat% AND Datum.BUCHVOR <= bisdat%
     ORDER REPORT nachname.maadr,Datum.BUCHVOR,kunde$
     TO ASK 
   END SELECT 
 END IF 
endrepvor30012001: 
 ON ERROR GOTO ErrorHandler
 END SUB 
  
 
SUB PROVVoraus(vorart%)
 IF disabled%("BUCHUNG6") THEN END SUB 
 CALL DFile(3,"buchung" + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$)
 CALL DFile(3,"gekond" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"KVTMP" + _fpw$)
 CALL DFile(3,"VKOTMP" + _fpw$)
 CALL DFile(3,"vprodukt" + _fpw$)
 CALL DFile(3,"spezkond" + _fpw$)
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 IF anschluss% = 0 AND PRVCHECKLISTE$ <> "TRUE" THEN 
   CalcDate$ = DATE$ ( TODAY ,"0d.mm.yyyy")
   CREATE DIALOG "STICHTAG",0,0,222,114,"Buchungsdatum","MS Sans Serif",8
   ADD DIALOG "STICHTAG",4,0,0,222,91,0,""
   ADD DIALOG "STICHTAG",9,6,9,23,24,2
   ADD DIALOG "STICHTAG",5,31,15,183,10,0,"Bitte geben Sie an, zu welchem Buchungsdatum"
   ADD DIALOG "STICHTAG",5,31,25,183,10,0,"die Provisionsberechnung durchgefÅhrt werden soll:"
   ADD DIALOG "STICHTAG",5,32,40,182,10,0,"(ohne énderung des Datums oder Weglassen"
   ADD DIALOG "STICHTAG",5,31,50,182,10,0,"der Datumsangabe, wird das angezeigte Datum verwendet)"
   ADD DIALOG "STICHTAG",6,94,72,42,12,0,0,CalcDate$,10
   ADD DIALOG "STICHTAG",5,30,74,58,10,0,"Buchungsdatum:"
   ADD DIALOG "STICHTAG",1,52,94,54,14,1,"&OK",1,1
   ADD DIALOG "STICHTAG",1,109,94,54,14,0,"&Abbrechen",0,0
   DIALOG "STICHTAG",req%
   REMOVE DIALOG "STICHTAG"
   IF req% = 1 THEN 
     IF DateOK%(CalcDate$) THEN 
       ok% = 1
       IF codevtab% = 0 THEN CALL WriteConfig("PROVIS","letzteProvisionsrechnung",CalcDate$)
     ELSE 
       ok% = 0
       CALL Fehler("Falsche Datumsangabe!","Bitte geben Sie das Datum in der Form 'tt.mm.jjjj' ein.")
     END IF 
   END IF 
 ELSE 
   ok% = 1
 END IF 
 IF ok% = 1 THEN 
   cdate% = DAYS (CalcDate$)
   minimize$ = ReadINI$("PROVIS","minimize")
   IF anschluss% = 0 THEN 
     IF minimize$ LIKE "TRUE" THEN 
       REQUEST "PROVIS wird in den Hintergrund geschaltet!","Sie kînnen wÑhrend der Berechung andere Programme starten.",0
       SET DISPLAY MIN 
     END IF 
     CALL CreateLog()
   END IF 
 
   CALL WriteLog("")
   CALL WriteLog("=================================")
   CALL WriteLog("Provisionsabrechnung vom " + DATE$ (cdate%,"0d.mm.yyyy"))
   CALL WriteLog("=================================")
   CALL WriteLog("")
   MOUSE OFF 
   FILE "KVTMP"
   INDEX ProviAb.KVTMP
   SELECT FIRST 
   IF codevtab% > 0 THEN 
     INDEX lfdnr.KVTMP
     SELECT KEY codevtab% LOCK FILE "KVTMP" INDEX lfdnr.KVTMP
   ELSE 
     SELECT KEY "01.01.1800" FILE "KVTMP" INDEX ProviAb.KVTMP
   END IF 
   _p1% = RECCOUNT ("KVTMP")
   _pd$ = "0"
   _pd% = - 1
   _p2% = 0
   REM CALL Fehler("Vorausberechnung","")
   WHILE NOT EOF ("KVTMP") AND (ProviAb.KVTMP <= cdate% OR BewertEinmDat.KVTMP <= cdate%)
   
 
     REM -----------------------------------------
     REM -- Prozentbalken und Header aktualisieren
     REM -----------------------------------------
 
     SET STATUS "Bearbeite Vertrag " + LTRIM$ ( STR$ (_p2%,"999999")) + " von " + LTRIM$ ( STR$ (_p1%,"999999")) + "  " + vs_NR.kvtmp
     _pc% = FIX (100 / _p1% * _p2%,0)
     IF _pd% <> _pc% THEN 
       _pd% = _pc%
       IF FN sys(11) = 36 AND FN sys(12) = 36 THEN 
         IF anschluss% = 0 THEN 
           SET HEADING STR$ (_pd%,"999") + "%"
         ELSE 
           SET HEADING STR$ (_pd%,"999") + "% " + LTRIM$ ( STR$ ( MONTH (cdate%),"00")) + "/" + RIGHT$ ( STR$ ( YEAR (cdate%),"9999"),4)
         END IF 
       ELSE 
         IF anschluss% = 0 THEN 
           SET HEADING title$ + " - Provisionsberechung: " + STR$ (_pd%,"999") + "% erledigt"
         ELSE 
           SET HEADING title$ + " - Provisionsberechung: " + STR$ (_pd%,"999") + "% " + LTRIM$ ( STR$ ( MONTH (cdate%),"00")) + "/" + RIGHT$ ( STR$ ( YEAR (cdate%),"9999"),4)
         END IF 
       END IF 
     END IF 
 
     REM --------------------------------------
     REM -- CheckUp fÅr Vertragsprovisionierung
     REM --------------------------------------
     IF vs_nr.KVTMP LIKE "705-1821826-01" THEN 
       REM CALL Fehler(vs_nr.KVTMP,"")
     END IF 
     ok% = 1
     REM 030697
     IF codeko.KVTMP < 1 THEN 
       ok% = 0
     ELSE 
       REM CALL Fehler(Test",date$(cdate%,"0d.mm.yyyy")
       REM 190298
       IF DAYS (KÅndigung.KVTMP) > 1 AND DAYS (KÅndigung.KVTMP) < cdate% THEN 
         ok% = 0
         REM 210597
         IF TatsKuenDat.KVTMP > KÅndigung.KVTMP THEN ok% = 1
         IF TatsKuenDat.KVTMP < cdate% THEN ok% = 0
         IF _debug% = 1 THEN CALL WriteLog("## KÅndigung: " + STR$ (lfdnr.KVTMP,"000000") + ", " + DATE$ (KÅndigung.KVTMP,"0d.mm.yyyy"))
       END IF 
       IF Storno.KVTMP <> 0 AND DAYS (KÅndigung.KVTMP) < cdate% THEN 
         ok% = 0
         REM 190398
         IF TatsKuenDat.KVTMP > KÅndigung.KVTMP THEN ok% = 1
         IF TatsKuenDat.KVTMP < cdate% THEN ok% = 0
       END IF 
       
       IF DAYS (ProviAb.KVTMP) < 1 THEN 
         ok% = 0
       END IF 
       IF DAYS (VS_Beginn.KVTMP) < 1 THEN 
         ok% = 0
       END IF 
       IF DAYS (ProviAb.KVTMP) > cdate% THEN 
         IF BewertEinmDat.KVTMP < 1 THEN 
           ok% = 0
         ELSE 
           IF BewertEinmDat.KVTMP > cdate% THEN 
             ok% = 0
           ELSE 
             IF BewertCalcDat.KVTMP > 0 THEN 
               ok% = 0
             END IF 
           END IF 
         END IF 
       END IF 
       IF cdate% - DAYS (letzteProviV.KVTMP) < 27 THEN 
         ok% = 0
         CALL WriteLog("## Zeitsperre: " + DATE$ (letzteProviV.KVTMP,"0d.mm.yyyy") + " mind. 27 Tage Differenz zwischen letzter und neuer PROV.ABRECHNUNG")
       END IF 
       IF CodeMA.KVTMP < 1 THEN 
         CALL WriteLog("!dem Vertrag wurde keine Agentur zugeordnet")
         CALL AddLogInfo()
         ok% = 0
       END IF 
       IF CodeGE.KVTMP < 1 THEN 
         CALL WriteLog("!dem Vertrag wurde keine Gesellschaft zugeordnet")
         CALL AddLogInfo()
         ok% = 0
       END IF 
       IF CodeVA.KVTMP < 1 THEN 
         CALL WriteLog("!dem Vertrag wurde keine Sparte zugeordnet")
         CALL AddLogInfo()
         ok% = 0
       END IF 
       IF CodeKO.KVTMP = 0 AND DAYS (ProviAb.KVTMP) >= cdate% THEN 
         CALL WriteLog("!der erwartete Eintrag in VKOTMP konnte nicht gefunden werden")
         CALL AddLogInfo()
         ok% = 0
       END IF 
     END IF 
     REM ------------------------
     REM -- Aufruf der Berechnung
     REM ------------------------
 
     IF ok% = 1 THEN 
       REM CALL Fehler("Provision soll berechnet werden", DATE$ (cdate%,"0d.mm.yyyy"))
       REM CALL Fehler("Berechnung bis", DATE$ (cdate%,"0d.mm.yyyy"))
       gezPflege% = 0
       gezPauschale% = 0
       gezAbschlu·% = 0
       gezStornoRes% = 0
       CALL PROVVoraus2(vorart%)
     END IF 
     SELECT NEXT FILE "KVTMP" INDEX ProviAb.KVTMP
     _p2% = _p2% + 1
   WEND 
   IF ReadConfig$("PROVIS","SkipStorno") LIKE "TRUE" THEN 
     REM 
   ELSE 
     CALL SRZahlungVor()
   END IF 
   IF anschluss% = 0 THEN 
     MOUSE ON 
     SET DISPLAY RESTORE 
     SET HEADING title$ + " - Buchung"
     SET STATUS "Provisionsabrechnung beendet"
     IF PRVCHECKLISTE$ <> "TRUE" THEN CALL CloseLog()
   END IF 
 END IF 
 END SUB 
 
 
 
SUB PROVVoraus2(vorart%)
 cfile$ = FILE 
 ok% = 1
 REM **DEBUG ProviAb-Check
 
 IF ProviAb.KVTMP > cdate% THEN 
   CALL WriteLog("## Aufruf PROVISION2 mit ProviAb > cdate%")
   REM REQUEST "ProviAb > cdate%"
 END IF 
 bwbezug$ = ReadConfig$("PROVIS","Bewertungszeitraum")
 IF bwbezug$ LIKE "leer" OR bwbezug$ LIKE "Provisionierungsbeginn" THEN 
   BWStart% = DAYS (ProviAb.KVTMP)
 ELSE 
   BWStart% = DAYS (VS_Beginn.KVTMP)
 END IF 
 Laufzeit% = FIX ((cdate% - BWStart%) / 30,0)
 LaufzeitPro% = FIX ((cdate% - DAYS (ProviAb.KVTMP)) / 30,0)
 
 REM **DEBUG Laufzeit in LOG schreiben
 IF _debug% = 1 THEN CALL WriteLog("## Laufzeit: " + STR$ (lfdnr.KVTMP,"000000") + " - " + STR$ (Laufzeit%,"9999") + " Monate")
 cuvt% = lfdnr.KVTMP
 codema% = CodeMA.KVTMP
 codege% = CodeGE.KVTMP
 codeva% = CodeVA.KVTMP
 koab% = CodeKO.KVTMP
 SELECT FIRST FILE "maadr" INDEX codema.maadr
 SELECT KEY codema% FILE "maadr" INDEX codema.maadr
 vtagentur$ = Nachname.maadr + "," + vorname.maadr
 vtcodem% = codema.KVTMP
 Gvtagentur$ = vtagentur$
 GVTcodema% = vtcodema%
 MOUSE OFF 
 IF NOT EXISTS (koab%,codevk.VKOTMP) THEN 
   CALL WriteLog("  kein Eintrag in Datei VKOTMP-gefunden!")
   CALL AddLogInfo()
   ok% = 0
 ELSE 
   SELECT KEY koab% LOCK FILE "VKOTMP" INDEX CodeVK.VKOTMP
 END IF 
 IF vorart% = 1 THEN 
   weitermachen% = 1
   SELECT FIRST FILE "VKOTMP" INDEX CodeVK.VKOTMP
   SELECT KEY koab% FILE "VKOTMP" INDEX CodeVK.VKOTMP
   WHILE NOT EOF ("VKOTMP") AND weitermachen% = 1
     IF nÑchsteKond.VKOTMP = 0 THEN 
       weitermachen% = 0
     ELSE 
       SELECT KEY nÑchsteKond.VKOTMP FILE "VKOTMP" INDEX CodeVK.VKOTMP
     END IF 
   WEND 
   SELECT KEY CodeKO.VKOTMP FILE "GEKOND" INDEX lfdnr.GEKOND
   SELECT FIRST FILE "GEKOND" INDEX lfdnr.GEKOND
   REM jetzt wurde die Kondition der Firma(1.Agentur) gefunden  
 END IF 
 vertrprov% = 0
 vsumAP% = 0
 vsumC% = 0
 vsumPP% = 0
 vsumPausch% = 0
 vertrsr% = 0
 WHILE ok% = 1
   MOUSE OFF 
   SELECT KEY CodeKO.VKOTMP FILE "GEKOND" INDEX lfdnr.GEKOND
   IF NOT FOUND ("GEKOND") THEN 
     CALL WriteLog("  die angegebene Kondition ist nicht enthalten!")
     CALL WriteLog("  SUPPORT: die in VKOTMP angegebene Kondition fehlt in GEKOND!")
     CALL AddLogInfo()
     ok% = 0
   END IF 
   IF ok% = 1 THEN 
     vtagentur$ = Gvtagentur$
     vtcodem% = Gvtcodema%
     codema% = CodeMA.GEKOND
     haftvertrag% = SRHaftung.KVTMP
     REM 150697
     dmeinh% = dmeinheit.gekond
     REM --------------------
     REM -- Abschlu·provision
     REM --------------------
 
     IF APjn.gekond = "j" THEN 
       IF gez_Abschlu·.KVTMP <> "j" THEN 
         prov% = ((Bewertungssumme.KVTMP / 100) * AP.gekond)
         IF haftvertrag% > 0 THEN 
           IF SRjn.gekond = "j" AND Laufzeit% < haftvertrag% THEN 
             sr% = sr.gekond
             IF sr% <> 0 THEN 
               Haftung% = DAYS (VS_Beginn.KVTMP) + (haftvertrag% * 30)
             ELSE 
               Haftung% = 0
             END IF 
           ELSE 
             REM unbegrenzte Haftung ohne Auszahlung
             IF Haftung.gekond = - 1 THEN 
               sr% = sr.gekond
               Haftung% = 0
             ELSE 
               sr% = 0
               Haftung% = 0
             END IF 
           END IF 
         ELSE 
           IF SRjn.gekond = "j" AND Laufzeit% < Haftung.gekond THEN 
             sr% = sr.gekond
             IF sr% <> 0 THEN 
               Haftung% = DAYS (VS_Beginn.KVTMP) + (Haftung.gekond * 30)
             ELSE 
               Haftung% = 0
             END IF 
           ELSE 
             REM unbegrenzte Haftung ohne Auszahlung
             IF Haftung.gekond = - 1 THEN 
               sr% = sr.gekond
               Haftung% = - 1
             ELSE 
               sr% = 0
               Haftung% = 0
             END IF 
           END IF 
         END IF 
         IF prov% <> 0 OR sr% <> 0 THEN CALL RegProvisVor("AP: " + VS_Nr.KVTMP,codema%,prov%,sr%,Haftung%,umrechnung.KVTMP,codew.KVTMP,waehrung.KVTMP)
       END IF 
     END IF 
 
     REM ------------------
     REM -- Pflegeprovision
     REM ------------------
     REM 13.10.94  - keine Berechung der Stornoreserve
     pflege% = 0
     IF PflegeJN.gekond = "j" THEN 
       IF Laufzeit% >= Pflegezeit.gekond THEN 
         _day% = DAY (letztePflege.KVTMP)
         _month% = MONTH (letztePflege.KVTMP)
         _year% = YEAR (letztePflege.KVTMP)
         IF _year% < 1980 THEN 
           _year% = 1980
           _day% = 1
           _month% = 1
         END IF 
         REM 060597
         REM _month% = _month% + PflegeZW.GEKOND
         REM IF _month% > 12 THEN 
           REM _year% = _year% + 1
           REM _month% = _month% - 12
         REM END IF 
         REM 060597
         REM nextpfl% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
         REM IF nextpfl% <= cdate% THEN 
           REM prov% = (((Beitrag.KVTMP * ZW.KVTMP) / 100) * PflegeProvi.gekond)
           REM pflege% = 1
           REM sr% = 0
           REM Haftung% = 0
 
           REM Ñlter als 060597 IF SRjn = "j" AND Laufzeit% < Haftung THEN 
           REM   sr% = sr.gekond
           REM ELSE 
           REM   sr% = 0
           REM END IF 
           REM IF sr% <> 0 THEN 
           REM   Haftung% = DAYS (VS_Beginn.KVTMP) + (Haftung.gekond * 30)
           REM ELSE 
           REM   Haftung% = 0
           REM END IF 
 
 
 REM CREATE DIALOG "PROT",0,0,244,154,title$,"MS Sans Serif",8
 REM ADD DIALOG "PROT",1,62,134,55,15,1,"&Ja",1,1
 REM DIALOG "PROT",req%
 REM REMOVE DIALOG "PROT"
 
 
 
 
           REM 060597 Neu Pflegeprovis nach Zahlweisen
           PflegeGez$ = "n"
           IF PflegeNachZahlw = "n" THEN 
             REM -- abhÑngig von Zahlungsweise im Vertrag --
             SELECT CASE ZW.KVTMP
             CASE 1
               _year% = _year% + 1
             CASE 2
               _month% = _month% + 6
               IF _month% > 12 THEN 
                 _year% = _year% + 1
                 _month% = _month% - 12
               END IF 
             CASE 4
               _month% = _month% + 3
               IF _month% > 12 THEN 
                 _year% = _year% + 1
                 _month% = _month% - 12
               END IF 
             CASE 12
               _month% = _month% + 1
               IF _month% > 12 THEN 
                 _year% = _year% + 1
                 _month% = _month% - 12
               END IF 
             CASE 0
               _year% = 2100
             END SELECT 
             nextpfl% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
             REM 060597 klÑren wozu ?
             IF ZW.KVTMP = 0 AND letzteProviV.KVTMP < 1 THEN 
               REM 150597
               REM prov% = (((Beitrag.KVTMP * ZW.KVTMP) / 100) * PflegeProvi.gekond)
               prov% = (((Beitrag.KVTMP) / 100) * PflegeProvi.gekond)
               PflegeGez$ = "j"
               pflege% = 1
               sr% = 0
               Haftung% = 0
             ELSE 
               IF nextpfl% <= cdate% THEN 
                 REM 150597
                 REM prov% = (((Beitrag.KVTMP * ZW.KVTMP) / 100) * PflegeProvi.gekond)
                 prov% = (((Beitrag.KVTMP) / 100) * PflegeProvi.gekond)
                 PflegeGez$ = "j"
                 pflege% = 1
                 sr% = 0
                 Haftung% = 0
               END IF 
             END IF 
           ELSE 
             REM -- AbhÑngig von Zahlweise in GEKOND --
             _month% = _month% + PflegeZW.GEKOND
             IF _month% > 12 THEN 
               _year% = _year% + 1
               _month% = _month% - 12
             END IF 
             nextpfl% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
             IF nextpfl% <= cdate% THEN 
               prov% = (((Beitrag.KVTMP * ZW.KVTMP) / 100) * PflegeProvi.gekond)
               PflegeGez$ = "j"
               pflege% = 1
               sr% = 0
               Haftung% = 0
             END IF 
           END IF 
           REM 030697 IF PflegeGez$ = "j" THEN CALL RegProvisVor("Pflege: " + VS_Nr.KVTMP,codema%,prov%,sr%,Haftung%)
           IF PflegeGez$ = "j" AND prov% <> 0 THEN CALL RegProvisVor("Pflege: " + VS_Nr.KVTMP,codema%,prov%,sr%,Haftung%,umrechnung.KVTMP,codew.KVTMP,waehrung.KVTMP)
         END IF 
       END IF 
     END IF 
 
     REM 140497 Courtage nicht rechnen, wenn CourtageEinstell angekreuzt wurde und eine Pflegeprov. gezahlt wurde 
     REM 270497 IF pflege% = 1 AND CourtEinstellen.gekond = "j" THEN GOTO Pflege1404971 
     REM 200597
 
     IF pflege% = 1 OR letztePflege.KVTMP > 0 THEN GOTO Pflege0612001v
 
     REM -----------
     REM -- Courtage
     REM -----------
 
     IF CourtageJN.gekond = "j" THEN 
       
       IF BewertEinmDat.KVTMP > 0 AND BewertCalcDat.KVTMP < 1 THEN GOTO BewEinmDat061200v
       _day% = DAY (letzteProviV.KVTMP)
       _month% = MONTH (letzteProviV.KVTMP)
       _year% = YEAR (letzteProviV.KVTMP)
       IF _year% < 1980 THEN 
         _year% = 1980
         _day% = 1
         _month% = 1
       END IF 
       CourtGez$ = "n"
       IF CourtageZWjn.gekond = "n" THEN 
         REM -- abhÑngig von Zahlungsweise im Vertrag --
         SELECT CASE ZW.KVTMP
         CASE 1
           _year% = _year% + 1
         CASE 2
           _month% = _month% + 6
           IF _month% > 12 THEN 
             _year% = _year% + 1
             _month% = _month% - 12
           END IF 
         CASE 4
           _month% = _month% + 3
           IF _month% > 12 THEN 
             _year% = _year% + 1
             _month% = _month% - 12
           END IF 
         CASE 12
           _month% = _month% + 1
           IF _month% > 12 THEN 
             _year% = _year% + 1
             _month% = _month% - 12
           END IF 
         CASE 0
           _year% = 2100
         END SELECT 
         nextprovi% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
         IF ZW.KVTMP = 0 AND letzteProviV.KVTMP < 1 THEN 
           IF CourtNachBeitr$ = "TRUE" THEN 
             prov% = ((Beitrag.KVTMP / 100) * Courtage.gekond)
           ELSE 
             prov% = ((Bewertungssumme.KVTMP / 100) * Courtage.gekond)
           END IF 
           CourtGez$ = "j"
         ELSE 
           IF nextprovi% <= cdate% THEN 
             REM CALL Fehler("Courtage","")
             IF CourtNachBeitr$ = "TRUE" THEN 
               prov% = ((Beitrag.KVTMP / 100) * Courtage.gekond)
             ELSE 
               testma% = codema.gekond
               testcou% = Courtage.gekond
               testbw% = Bewertungssumme.KVTMP
               prov% = ((Bewertungssumme.KVTMP / 100) * Courtage.gekond)
             END IF 
             CourtGez$ = "j"
           END IF 
         END IF 
       ELSE 
         REM -- AbhÑngig von Zahlweise in GEKOND --
         _month% = _month% + CourtageZW.GEKOND
         IF _month% > 12 THEN 
           _year% = _year% + 1
           _month% = _month% - 12
         END IF 
         nextprovi% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
         IF nextprovi% <= cdate% THEN 
           IF CourtNachBeitr$ = "TRUE" THEN 
             prov% = ((Beitrag.KVTMP / 100) * Courtage.gekond)
           ELSE 
             prov% = ((Bewertungssumme.KVTMP / 100) * Courtage.gekond)
           END IF 
           CourtGez$ = "j"
         END IF 
       END IF 
       REM 060497
       REM 200597
       IF haftvertrag% > 0 THEN 
         IF SRjn.gekond = "j" AND Laufzeit% < Haftvertrag% AND StornoResGezJN.VKOTMP <> "j" AND StornoResGezJV.VKOTMP <> "j" THEN 
           StornoResGezJN$ = ""
           sr% = sr.gekond
           IF sr% <> 0 THEN 
             codevk% = codevk.VKOTMP
             Haftung% = DAYS (ProviAb.KVTMP) + (Haftvertrag% * 30)
             StornoResGezJN$ = "x"
           END IF 
         ELSE 
           IF Haftung.gekond = - 1 THEN 
             sr% = sr.gekond
             Haftung% = - 1
           ELSE 
             sr% = 0
             Haftung% = 0
           END IF 
         END IF 
       ELSE 
         IF SRjn.gekond = "j" AND Laufzeit% < Haftung.gekond AND StornoResGezJN.VKOTMP <> "j" AND StornoResGezJV.VKOTMP <> "j" THEN 
           StornoResGezJN$ = ""
           sr% = sr.gekond
           IF sr% <> 0 THEN 
             codevk% = codevk.VKOTMP
             Haftung% = DAYS (ProviAb.KVTMP) + (Haftung.gekond * 30)
             StornoResGezJN$ = "x"
           END IF 
         ELSE 
           IF Haftung.gekond = - 1 THEN 
             sr% = sr.gekond
             Haftung% = - 1
           ELSE 
             sr% = 0
             Haftung% = 0
           END IF 
         END IF 
       END IF 
       IF StornoResGezJN$ = "x" THEN 
         StornoResGezJV.VKOTMP = "j"
         codevk% = codevk.VKOTMP
         Workstation.VKOTMP = Workstation%
         QWoNo.VKOTMP = STR$ (Workstation%,"000000") + STR$ (codevk.VKOTMP,"000000")
         RecStatus.VKOTMP = "c"
         STORE FILE "VKOTMP"
         SELECT KEY codevk% FILE "VKOTMP" INDEX CodeVK.VKOTMP
         StornoResGezJN$ = ""
       END IF 
       REM 220697
       IF CourtGez$ = "j" THEN 
         IF sr% <> 0 OR prov% <> 0 THEN 
           CALL RegProvisVor("Courtage: " + VS_Nr.KVTMP,codema%,prov%,sr%,Haftung%,umrechnung.KVTMP,codew.KVTMP,waehrung.KVTMP)
         END IF 
       END IF 
       GOTO Court061200vend 
BewEinmDat061200v: 
       prov% = ((BewertEinm.KVTMP / 100) * Courtage.gekond)
       CourtGez$ = "j"
       IF haftvertrag% > 0 THEN 
         IF SRjn.gekond = "j" AND Laufzeit% < haftvertrag% AND StornoResGezJN.VKOTMP <> "j" AND StornoResGezJV.VKOTMP <> "j" THEN 
           StornoResGezJN$ = ""
           sr% = sr.gekond
           IF sr% <> 0 THEN 
             codevk% = codevk.VKOTMP
             Haftung% = DAYS (ProviAb.KVTMP) + (haftvertrag% * 30)
             StornoResGezJN$ = "x"
           END IF 
         ELSE 
           IF Haftung.gekond = - 1 THEN 
             sr% = sr.gekond
             Haftung% = 0
           ELSE 
             sr% = 0
             Haftung% = 0
           END IF 
         END IF 
       ELSE 
         IF SRjn.gekond = "j" AND Laufzeit% < Haftung.gekond AND StornoResGezJN.VKOTMP <> "j" AND StornoResGezJV.VKOTMP <> "j" THEN 
           StornoResGezJN$ = ""
           sr% = sr.gekond
           IF sr% <> 0 THEN 
             codevk% = codevk.VKOTMP
             Haftung% = DAYS (ProviAb.KVTMP) + (Haftung.gekond * 30)
             StornoResGezJN$ = "x"
           END IF 
         ELSE 
           IF Haftung.gekond = - 1 THEN 
             sr% = sr.gekond
             Haftung% = 0
           ELSE 
             sr% = 0
             Haftung% = 0
           END IF 
         END IF 
       END IF 
       IF StornoResGezJN$ = "x" THEN 
         StornoResGezJV.VKOTMP = "j"
         codevk% = codevk.VKOTMP
         Workstation.VKOTMP = Workstation%
         QWoNo.VKOTMP = STR$ (Workstation%,"000000") + STR$ (codevk.VKOTMP,"000000")
         RecStatus.VKOTMP = "c"
         STORE FILE "VKOTMP"
         SELECT KEY codevk% FILE "VKOTMP" INDEX CodeVK.VKOTMP
         StornoResGezJN$ = ""
       END IF 
       REM 220697
       IF CourtGez$ = "j" THEN 
         IF sr% <> 0 OR prov% <> 0 THEN 
           CALL RegProvisVor("Courtage: " + VS_Nr.KVTMP,codema%,prov%,sr%,Haftung%,umrechnung.KVTMP,codew.KVTMP,waehrung.KVTMP)
         END IF 
       END IF 
Court061200vend: 
     END IF 
 
 
Pflege0612001v: 
 
  
 
 
  
     REM ----------------
     REM -- Vertragsdauer
     REM ----------------
 
     IF VDjn.gekond = "j" THEN 
       IF gez_Abschlu·.KVTMP <> "j" THEN 
         SELECT CASE VS_Dauer.KVTMP
         CASE VD1Dauer.gekond
           prov% = ((Bewertungssumme.KVTMP / 100) * VD1AP.gekond)
           sr% = VD1SR.gekond
           Haftung% = VD1HZ.GEKOND
         CASE VD2Dauer.gekond
           prov% = ((Bewertungssumme.KVTMP / 100) * VD2AP.gekond)
           sr% = VD2SR.gekond
           Haftung% = VD2HZ.GEKOND
         CASE VD3Dauer.gekond
           prov% = ((Bewertungssumme.KVTMP / 100) * VD3AP.gekond)
           sr% = VD3SR.gekond
           Haftung% = VD3HZ.GEKOND
         CASE VD4Dauer.gekond
           prov% = ((Bewertungssumme.KVTMP / 100) * VD4AP.gekond)
           sr% = VD4SR.gekond
           Haftung% = VD4HZ.GEKOND
         CASE VD5Dauer.gekond
           prov% = ((Bewertungssumme.KVTMP / 100) * VD5AP.gekond)
           sr% = VD5SR.gekond
           Haftung% = VD5HZ.GEKOND
         END SELECT 
         IF sr% <> 0 THEN 
           IF haftvertrag% > 0 THEN 
             Haftung% = (haftvertrag% * 30) + DAYS (VS_beginn.KVTMP)
           ELSE 
             Haftung% = (Haftung% * 30) + DAYS (VS_beginn.KVTMP)
           END IF 
         ELSE 
           Haftung% = 0
         END IF 
         CALL RegProvisVor("VD: " + VS_Nr.KVTMP,codema%,prov%,sr%,Haftung%,umrechnung.KVTMP,codew.KVTMP,waehrung.KVTMP)
       END IF 
     END IF 
   
     REM -----------------------------------
     REM -- Teilzahlung/Ratenzahlung
     REM -- z.Z. auf Ratenzahlung umgestellt
     REM -----------------------------------
 
     IF TZjn.gekond = "j" THEN 
       IF TZRate.KVTMP + 1 = 1 THEN 
         prov% = ((Bewertungssumme.KVTMP / 100) * TZ0.gekond)
       END IF 
       IF TZRateV.KVTMP + 1 = TZD1.gekond THEN 
         prov% = ((Bewertungssumme.KVTMP / 100) * TZ1.gekond)
       END IF 
       IF TZRateV.KVTMP + 1 = TZD2.gekond THEN 
         prov% = ((Bewertungssumme.KVTMP / 100) * TZ2.gekond)
       END IF 
       IF TZRateV.KVTMP + 1 = TZD3.gekond THEN 
         prov% = ((Bewertungssumme.KVTMP / 100) * TZ3.gekond)
       END IF 
       IF TZRateV.KVTMP + 1 = TZD4.gekond THEN 
         prov% = ((Bewertungssumme.KVTMP / 100) * TZ4.gekond)
       END IF 
       IF TZRateV.KVTMP + 1 = TZD5.gekond THEN 
         prov% = ((Bewertungssumme.KVTMP / 100) * TZ5.gekond)
       END IF 
       IF TZRateV.KVTMP + 1 = TZD6.gekond THEN 
         prov% = ((Bewertungssumme.KVTMP / 100) * TZ6.gekond)
       END IF 
       IF TZRateV.KVTMP + 1 = TZD7.gekond THEN 
         prov% = ((Bewertungssumme.KVTMP / 100) * TZ7.gekond)
       END IF 
       IF TZRateV.KVTMP + 1 = TZD8.gekond THEN 
         prov% = ((Bewertungssumme.KVTMP / 100) * TZ8.gekond)
       END IF 
       IF TZRateV.KVTMP + 1 = TZD9.gekond THEN 
         prov% = ((Bewertungssumme.KVTMP / 100) * TZ9.gekond)
       END IF 
       IF TZRateV.KVTMP + 1 = TZD10.gekond THEN 
         prov% = ((Bewertungssumme.KVTMP / 100) * TZ10.gekond)
       END IF 
       IF TZRateV.KVTMP + 1 = TZD11.gekond THEN 
         prov% = ((Bewertungssumme.KVTMP / 100) * TZ11.gekond)
       END IF 
       IF prov% <> 0 THEN 
         REM 060497
         IF haftvertrag% > 0 THEN 
           IF SRjn.gekond = "j" AND Laufzeit% < haftvertrag% THEN 
             sr% = sr.gekond
             IF sr% <> 0 THEN 
               Haftung% = DAYS (VS_Beginn.KVTMP + (haftvertrag% * 30))
             END IF 
           ELSE 
             IF Haftung.gekond = - 1 THEN 
               sr% = sr.gekond
               Haftung% = - 1
             ELSE 
               sr% = 0
               Haftung% = 0
             END IF 
           END IF 
         ELSE 
           IF SRjn.gekond = "j" AND Laufzeit% < Haftung.gekond THEN 
             sr% = sr.gekond
             IF sr% <> 0 THEN 
               Haftung% = DAYS (VS_Beginn.KVTMP + (Haftung.gekond * 30))
             END IF 
           ELSE 
             IF Haftung.gekond = - 1 THEN 
               sr% = sr.gekond
               Haftung% = - 1
             ELSE 
               sr% = 0
               Haftung% = 0
             END IF 
           END IF 
         END IF 
         REM IF sr% <> 0 THEN 
           REM Haftung% = DAYS (VS_Beginn.KVTMP + (Haftung.gekond * 30))
         REM ELSE 
           REM Haftung% = 0
         REM END IF 
         CALL RegProvisVor("TZ (" + LTRIM$ ( STR$ (TZRate.KVTMP + 1,"999")) + ". Zahlung): " + VS_Nr.KVTMP,codema%,prov%,sr%,Haftung%,umrechnung.KVTMP,codew.KVTMP,waehrung.KVTMP)
       ELSE 
         CALL WriteLog("!Konditionen fÅr Ratenzahlung/Teilzahlung unvollstÑndig")
         CALL WriteLog("    >> Rate: " + LTRIM$ ( STR$ (TZRate.KVTMP + 1,"999")))
         CALL WriteLog("    >> bei Abschlu·:" + LTRIM$ ( STR$ (TZ0.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD1.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ1.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD2.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ2.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD3.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ3.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD4.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ4.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD5.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ5.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD6.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ6.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD7.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ7.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD8.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ8.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD9.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ9.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD10.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ10.gekond,",999999.00")))
         CALL WriteLog("    >> nach dem " + LTRIM$ ( STR$ (TZD11.gekond,"99")) + ". Monat)" + LTRIM$ ( STR$ (TZ11.gekond,",999999.00")))
         CALL AddLogInfo()
       END IF 
 
     END IF 
 
     REM ------------
     REM -- Pauschale
     REM ------------
 
     IF PauschaleJN.gekond = "j" THEN 
       IF gez_Pauschale.KVTMP <> "j" THEN 
         prov% = Pauschale.gekond
         REM 060497
         IF SRjn.gekond = "j" AND Laufzeit% < Haftung.gekond THEN 
           sr% = sr.gekond
           IF sr% <> 0 THEN 
             IF haftvertrag% > 0 THEN 
               Haftung% = DAYS (VS_Beginn.KVTMP) + (Haftvertrag% * 30)
             ELSE 
               Haftung% = DAYS (VS_Beginn.KVTMP) + (Haftung.gekond * 30)
             END IF 
           END IF 
         ELSE 
           IF Haftung.gekond = - 1 THEN 
             sr% = sr.gekond
             Haftung% = - 1
           ELSE 
             sr% = 0
             Haftung% = 0
           END IF 
         END IF 
         REM IF sr% <> 0 THEN 
           REM Haftung% = DAYS (VS_Beginn.KVTMP) + (Haftung.gekond * 30)
         REM ELSE 
           REM Haftung% = 0
         REM END IF 
         CALL RegProvisVor("Pauschale: " + VS_Nr.KVTMP,codema%,prov%,sr%,Haftung%,umrechnung.KVTMP,codew.KVTMP,waehrung.KVTMP)
       END IF 
     END IF 
 
   END IF 
 
   IF nÑchsteKond.VKOTMP = 0 THEN 
     ok% = 0
   ELSE 
     SELECT KEY nÑchsteKond.VKOTMP LOCK FILE "VKOTMP" INDEX CodeVK.VKOTMP
   END IF 
 
 WEND 
 END SUB 
 
 
 
 
SUB RegProvisVor(remark$,ma%,provi%,sr%,Haftung%,euro1%,codew%,waehr1$)
 cfile$ = FILE 
 FILE "KVTMP"
 _lfdnr% = lfdnr.KVTMP
 SELECT KEY _lfdnr% LOCK FILE "KVTMP" INDEX lfdnr.KVTMP
 SELECT KEY ma% FILE "maadr" INDEX CodeMA.MAADR
 SELECT KEY codeva.kvertrag FILE "sparten" INDEX codeva.sparten

 codevp% = codevp.kvertrag
 SELECT FIRST FILE "VPRODUKT" INDEX codevp.vprodukt
 SELECT KEY codevp% FILE "VPRODUKT" INDEX codevp.vprodukt

 REM -- bereits gezahlte Provisionen verallgemeinern
 REM IF remark$ LIKE "Abschlu*" THEN 
   REM vertrprov% = vsumAP%
 REM ELSE IF remark$ LIKE "Courta*" THEN 
   REM vertrprov% = vsumC%
 REM ELSE IF remark$ LIKE "Pflege*" THEN 
   REM vertrprov% = vsumPP%
 REM ELSE IF remark$ LIKE "Pauschal*" THEN 
   REM vertrprov% = vsumPausch%
 REM ELSE IF remark$ LIKE "VD*" THEN 
   REM vertrprov% = vsumAP%
 REM END IF 
 bewerteimz% = 0
 IF BewertEinmDat.KVTMP > 0 AND BewertCalcDaV.KVTMP < 1 THEN 
   bewerteimz% = 1
 END IF 
 REM -- Bearbeitung bei letzter Agentur in der Struktur
 IF (CodeMA.maadr = vorgÑnger.maadr) OR (VorgÑnger.MAADR < 1) THEN 
   
   IF bewerteimz% = 1 THEN 
     BewertCalcDaV.KVTMP = cdate%
   ELSE 
     letzteProviV.KVTMP = cdate%
   END IF 
   IF remark$ LIKE "TZ (*" THEN 
     TZRateV.KVTMP = TZRateV.KVTMP + 1
   END IF 
 END IF 
 
 REM  CALL FldAdd("BewertCalcDaV","DAT;0d.mm.yyyy",0)
 REM  CALL FldAdd("letzteProviV","DAT;0d.mm.yyyy",0)
 REM  CALL FldAdd("TZRateV","NMI;999.",0)
 REM  CALL FldAdd("gez_AbschluV","TXT;1",0)
 REM  CALL FldAdd("gez_PauschalV","TXT;1",0)
 REM  CALL FldAdd("letztePflegV","DAT;0d.mm.yyyy",0)
 
 REM -- Einmalzahlungen/Berechnungen Stornoreserve registrieren --
 IF remark$ LIKE "Abschlu*" OR remark$ LIKE "*Abschl*" OR remark$ LIKE "AP*" OR remark$ LIKE "VD*" THEN gezAbschlu·% = 1
 IF remark$ LIKE "Pflege*" THEN gezPflege% = 1
 IF remark$ LIKE "Pauschal*" THEN gezPauschale% = 1
 IF CodeMA.MAADR = VorgÑnger.MAADR OR VorgÑnger.MAADR < 1 THEN 
   IF gezAbschlu·% = 1 THEN gez_AbschluV.KVTMP = "j"
   IF gezPflege% = 1 THEN letztePflegV.KVTMP = cdate%
   IF gezPauschale% = 1 THEN gez_PauschalV.KVTMP = "j"
 END IF 
   
 REM CALL QuickStore("KVTMP")
 STORE FILE "KVTMP"
 UNLOCK CURRENT 
 MOUSE OFF 
 FILE "buchvor"
 BLANK 
 CodeBU.buchvor = SER ("buchvor",1)
 Datum.buchvor = cdate%
 REM CALL Fehler ( DATE$ (cdate%,"0d.mm.yyyy"),"")
 FÑlligkeit.buchvor = cdate%
 CodeVT.buchvor = lfdnr.KVTMP
 IF KÅndigung.MAADR <= cdate% AND Nachfolger.MAADR <> 0 THEN 
   CodeMA.buchvor = Nachfolger.MAADR
   ma1% = Nachfolger.MAADR
   buchungstext.buchvor = remark$ + " (Umbuchvor von " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".)"
 ELSE 
   CodeMA.buchvor = ma%
   ma1% = ma%
   IF bewerteimz% = 1 THEN 
     buchungstext.buchvor = remark$ + "- Erst.Zahl."
   ELSE 
     buchungstext.buchvor = remark$
   END IF 
 END IF 
 IF dmeinh% > 0 THEN einheit% = provi% / dmeinh%
 SRBetrag% = ((provi% - vertrprov%) / 100) * sr%
 '******************************************************************************************************   
 ' Eintrag der Einheiten und Volumen beim Mitarbeiter
 '******************************************************************************************************   
  
  SELECT KEY ma1% LOCK FILE "maadr" INDEX codema.maadr
  StornoreservV.maadr = StornoreservV.maadr + SRBetrag%

  betr% = provi% - vertrprov% - SRBetrag%
   IF EinheitSach.stamm = "j" THEN 
     IF SparteIstSach.sparten <> 1 THEN 
       IF ma1% = vtcodema% THEN 
         IF EinheitAusGeko.stamm < 1 THEN EinheitenV.maadr = EinheitenV.maadr + einheit%
         IF betr% > 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN EinheitenV.maadr = EinheitenV.maadr + einheiten.kvertrag
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN EinheitenV.maadr = EinheitenV.maadr + einheiten.kvertrag * - 1
         END IF 
       END IF 
     ELSE 
         IF EinheitAusGeko.stamm < 1 THEN EinheitenV.maadr = EinheitenV.maadr + einheit%
         IF betr% > 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN EinheitenV.maadr = EinheitenV.maadr + einheiten.kvertrag
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN EinheitenV.maadr = EinheitenV.maadr + einheiten.kvertrag * - 1
         END IF 
     END IF 
   ELSE 
         IF EinheitAusGeko.stamm < 1 THEN EinheitenV.maadr = EinheitenV.maadr + einheit%
         IF betr% > 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN EinheitenV.maadr = EinheitenV.maadr + einheiten.kvertrag
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN EinheitenV.maadr = EinheitenV.maadr + einheiten.kvertrag * - 1
         END IF 
   END IF 
  IF ma1% = vtcodema% THEN 
    IF EinheitAusGeko.stamm < 1 THEN EigEinheitenV.maadr = EigEinheitenV.maadr + einheit%
    IF betr% > 0 THEN 
      IF EinheitAusGeko.stamm > 0 THEN EigEinheitenV.maadr = EigEinheitenV.maadr + einheiten.kvertrag
    ELSE 
      IF EinheitAusGeko.stamm > 0 THEN EigEinheitenV.maadr = EigEinheitenV.maadr + einheiten.kvertrag * - 1
    END IF 
  END IF 
  betr% = provi% - vertrprov% - SRBetrag%
  IF betr% >= 0 THEN 
    GesVolumenV.maadr = GesVolumenV.maadr + Volumen.KVTMP
    IF ma1% = vtcodema% THEN 
      EigVolumenV.maadr = EigVolumenV.maadr + Volumen.KVTMP
    END IF 
  ELSE 
    GesVolumenV.maadr = GesVolumenV.maadr + (Volumen.KVTMP * - 1)
    IF ma1% = vtcodema% THEN 
      EigVolumenV.maadr = EigVolumenV.maadr + (Volumen.KVTMP * - 1)
    END IF 
  END IF 
  STORE FILE "maadr"
 '******************************************************************************************************   
 betr% = provi% - vertrprov% - SRBetrag%
 Betrag.buchvor = provi% - vertrprov% - SRBetrag%
 Gesamtbetrag.buchvor = provi%
 IF bewerteimz% = 1 THEN 
   Bewertungssumme.buchvor = BewertEinm.KVTMP
 ELSE 
   Bewertungssumme.buchvor = Bewertungssumme.KVTMP
 END IF 
 
 umrechnung.buchvor = euro1%
 BetragEU.buchvor = VAL ( STR$ (betrag.buchvor / euro1%,"999999999.00"))
 vsumme.buchvor = vsumme.KVTMP
 vsummeEU.buchvor = VAL ( STR$ (vsumme.KVTMP / umrechnung.buchvor,"999999999.00"))
 BeitragBrut.buchvor = Beitrag.KVTMP
 BeitragNet.buchvor = NettoBeitrag.KVTMP
 BeitragBrutEu.buchvor = VAL ( STR$ (Beitrag.KVTMP / umrechnung.buchvor,"999999999.00"))
 BeitragNetEu.buchvor = VAL ( STR$ (NettoBeitrag.KVTMP / umrechnung.buchvor,"999999999.00"))
 zw.buchvor = zw.KVTMP
 mwst.buchvor = mwst.KVTMP
 VS_Beginn.buchvor = VS_Beginn.KVTMP
 IF zw.buchvor > 0 THEN 
   JahresBBrut.buchvor = BeitragBrut.buchvor * zw.buchvor
   JahresBNet.buchvor = BeitragNet.buchvor * zw.buchvor
   JahresBBrutEu.buchvor = VAL ( STR$ (JahresBBrut.buchvor / umrechnung.buchvor,"999999999.00"))
   JahresBNetEu.buchvor = VAL ( STR$ (JahresBNet.buchvor / umrechnung.buchvor,"999999999.00"))
 ELSE 
   JahresBBrut.buchvor = BeitragBrut.buchvor
   JahresBNet.buchvor = BeitragNet.buchvor
   JahresBBrutEu.buchvor = VAL ( STR$ (JahresBBrut.buchvor / umrechnung.buchvor,"999999999.00"))
   JahresBNetEu.buchvor = VAL ( STR$ (JahresBNet.buchvor / umrechnung.buchvor,"999999999.00"))
 END IF 
 Volumen.buchvor = Volumen.KVTMP
 Bewertung2.buchvor = Bewertungssumme.KVTMP
 APJN.buchvor = APjn.gekond
 CourtJN.buchvor = CourtageJN.gekond
 SRjn.buchvor = SRJN.gekond
 PflegeJN.buchvor = PflegeJN.gekond
 APProzente.buchvor = AP.gekond
 CourtProzente.buchvor = Courtage.gekond
 PflegProzente.buchvor = PflegeProvi.gekond
 SRProzente.buchvor = sr.gekond
 ProvBasiswert.buchvor = Bewertungssumme.buchvor
 KÅndigung.buchvor = KÅndigung.KVTMP
 VS_Beginn.buchvor = VS_Beginn.KVTMP
 CodeKU.buchvor = CodeKU.KVTMP
 vtagentur.buchvor = Gvtagentur$
 vtcodema.buchvor = Gvtcodema%

   IF EinheitSach.stamm = "j" THEN 
     IF SparteIstSach.sparten <> 1 THEN 
       IF ma1% = vtcodema% THEN 
         IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchvor = einheit%
         IF betr% >= 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchvor = einheiten.kvertrag
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchvor = einheiten.kvertrag * - 1
         END IF 
       END IF 
     ELSE 
         IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchvor = einheit%
         IF betr% >= 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchvor = einheiten.kvertrag
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchvor = einheiten.kvertrag * - 1
         END IF 
     END IF 
   ELSE 
         IF EinheitAusGeko.stamm < 1 THEN Einheiten.buchvor = einheit%
         IF betr% >= 0 THEN 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchvor = einheiten.kvertrag
         ELSE 
           IF EinheitAusGeko.stamm > 0 THEN Einheiten.buchvor = einheiten.kvertrag * - 1
         END IF 
   END IF 

 SELECT KEY CodeVA.KVTMP FILE "SPARTEN" INDEX CodeVA.SPARTEN
 Sparte.buchvor = Sparte.SPARTEN
 SELECT KEY CodeKU.KVTMP FILE GAdrDat$ INDEX CodeKU.GAdrDat$
 Nachname.buchvor = Nachname.GAdrDat$
 Vorname.buchvor = Vorname.GAdrDat$
 
 Bewertung2Eu.buchvor = VAL ( STR$ (Bewertung2.buchvor / euro1%,"999999999.00"))
 codew.buchvor = codew%
 waehrung.buchvor = waehr1$
 SELECT KEY CodeGE.KVTMP FILE "GEADR" INDEX CodeGE.GEADR
 Gesellschaft.buchvor = Gesellschaft.GEADR
 Provision.buchvor = "j"
 IF PRVCHECKLISTE$ = "TRUE" THEN 
   codebumon.buchvor = codebumon.buchmon
 END IF 
 IF sr% = 0 THEN 
   SRgezahlt.buchvor = "j"
   SR.buchvor = 0
 ELSE 
   REM 060497
   IF Haftung% = - 1 THEN 
     SRAuszahlung.buchvor = 0
     SR.buchvor = SRBetrag%
   ELSE 
     SRAuszahlung.buchvor = Haftung%
     SR.buchvor = SRBetrag%
   END IF 
 END IF 
 
 REM -- Zahlungseingang prÅfen --
 REM 070897
 GOTO prvor160101001
 IF check.KVTMP = "j" THEN 
   REM CALL Fehler("Check auf Pool","")
   _lfdnr% = lfdnr.KVTMP
   SELECT KEY _lfdnr% LOCK FILE "KVTMP" INDEX lfdnr.KVTMP
   pool% = (PoolV.KVTMP - Betrag.buchvor) * 100
   pool1$ = STR$ (pool%,"999999999999")
   poolges% = ( VAL (pool1$)) / 100
   poolV.KVTMP = poolges%
   IF PoolV.KVTMP < 0 THEN 
     MahnungV.KVTMP = "j"
     Mahnung.buchvor = "j"
     CALL WriteLog("  fehlender Zahlungseingang von Gesellschaft")
     CALL AddLogInfo()
   END IF 
   CALL QuickStore("KVTMP")
 END IF 
prvor160101001: 
 CALL QuickStore("buchvor")
 
 REM -- Aufsummierung der einzelnen Provisionsarten
 REM    fÅr Differenzberechnung
 IF remark$ LIKE "Abschlu*" OR remark$ LIKE "*Abschl*" OR remark$ LIKE "AP*" THEN 
   vsumAP% = provi%
 ELSE IF remark$ LIKE "Courta*" THEN 
   vsumC% = provi%
 ELSE IF remark$ LIKE "Pflege*" THEN 
   vsumPP% = provi%
 ELSE IF remark$ LIKE "Pauschal*" THEN 
   vsumPausch% = provi%
 ELSE IF remark$ LIKE "VD*" THEN 
   vsumAP% = provi%
 ELSE 
   vertrprov% = provi%
 END IF 
 vertrprov% = provi%
 END SUB 



 ' Zahlung von Stornoreserven - bei Vorausberechnungen
 ' =======================================================================
 
SUB SRZahlungVor()
 MOUSE OFF 
 IF cdate% = 0 THEN cdate% = TODAY 
 FILE "buchvor"
 INDEX CodeBU.buchvor
 fmax% = RECCOUNT ("buchvor")
 lp% = 0
 cp% = 0
 fcount% = 0
 SELECT FIRST 
 WHILE NOT EOF ("buchvor")
   fcount% = fcount% + 1
   cp% = INT (100 / fmax% * fcount%)
   IF lp% <> cp% THEN 
     lp% = cp%
     SET STATUS "Auszahlung Stornoreserve: " + LTRIM$ ( STR$ (lp%,"999")) + "%"
   END IF 
   REM 060497
   IF SRgezahlt.buchvor <> "j" AND SRAuszahlung.buchvor < cdate% AND SRAuszahlung.buchvor <> 0 THEN 
     _cubu% = CodeBU.buchvor
     _CodeMA% = CodeMA.buchvor
     _CodeVT% = CodeVT.buchvor
     _SR% = SR.buchvor
     SELECT KEY _cubu% LOCK FILE "buchvor" INDEX CodeBU.buchvor
     SRGezahlt.buchvor = "j"
     CALL QuickStore("buchvor")
     SELECT KEY _Codema% LOCK FILE "maadr" INDEX codema.maadr
     REM 060497
     Stornoreserve.maadr = Stornoreserve.maadr - _SR%
     StornoreserveEU.maadr = VAL ( STR$ (Stornoreserve.maadr / umrechnung.buchvor,"999999999.00"))
     REM Workstation.maadr = Workstation%
     REM QWoNo.maadr = STR$ (Workstation%,"000000") + STR$ (codema.maadr,"000000")
     RecStatus.maadr = "c"
     STORE FILE "maadr"
     SELECT KEY _CodeVT% FILE "KVTMP" INDEX lfdnr.KVTMP
     BLANK FILE "buchvor"
     CodeBU.buchvor = SER ("buchvor",1)
     Datum.buchvor = cdate%
     CodeVT.buchvor = _CodeVT%
     CodeMA.buchvor = _CodeMA%
     SR.buchvor = 0 - _SR%
     Betrag.buchvor = _SR%
     buchungstext.buchvor = "SR-Auszahlung " + VS_Nr.KVTMP
     Bewertungssumme.buchvor = Bewertungssumme.KVTMP
     KÅndigung.buchvor = KÅndigung.KVTMP
     VS_Beginn.buchvor = VS_Beginn.KVTMP
     umrechnung.buchvor = umrechnung.KVTMP
     codew.buchvor = codew.KVTMP
     waehrung.buchvor = waehrung.KVTMP
     CodeKU.buchvor = CodeKU.KVTMP
     SELECT KEY CodeVA.KVTMP FILE "SPARTEN" INDEX CodeVA.SPARTEN
     Sparte.buchvor = Sparte.SPARTEN
     SELECT KEY CodeKU.KVTMP FILE GAdrDat$ INDEX CodeKU.GAdrDat$
     Nachname.buchvor = Nachname.GAdrDat$
     Vorname.buchvor = Vorname.GAdrDat$
     SELECT KEY CodeGE.KVTMP FILE "GEADR" INDEX CodeGE.GEADR
     Gesellschaft.buchvor = Gesellschaft.GEADR
     SRgezahlt.buchvor = "j"
     Provision.buchvor = "j"
     SR.buchvor = 0 - _SR%
     CALL QuickStore("buchvor")
     SELECT KEY _cubu% FILE "buchvor" INDEX CodeBU.buchvor
   END IF 
   SELECT NEXT FILE "buchvor" INDEX CodeBU.buchvor
 WEND 
 MOUSE ON 
 END SUB 

 
 ' Listen fÅr die Vorausberechnung
SUB VorausList()
 ok% = 1
    DIM dlg AS Dialog
    DIM control AS DialogControl
    opt% = 0
    opt1% = 0
VorausList0310200101: 
    Superbase.Dialogs.Add("Dialogname")
    SET dlg = Superbase.Dialogs.Dialogname
    dlg.Move(0,0,222,143)
    dlg.Caption = "Berichtsausgabe"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(2,8,219,66)
    control.Caption = " WÑhlen Sie eine Berichtsart"
 
    SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
    control.Move(6,20,169,10)
    control.Caption = "erwartete UmsÑtze sortiert nach Gesellschaften"
    control.Bind("opt%")
    control.ValueOn = 0
 
    SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
    control.Move(6,32,214,9)
    control.Caption = "erwartete UmsÑtze sortiert nach Gesellschaften/Sparten"
    control.Bind("opt%")
    control.ValueOn = 1
 
    SET control = dlg.Add("DialogOptionButton3","DialogOptionButton")
    control.Move(6,44,200,10)
    control.Caption = "erwartete UmsÑtze sortiert nach Sparten"
    control.Bind("opt%")
    control.ValueOn = 2
 
 
    SET control = dlg.Add("DialogOptionButton4","DialogOptionButton")
    control.Move(6,56,200,10)
    control.Caption = "erwartete UmsÑtze sortiert nach Produkten"
    control.Bind("opt%")
    control.ValueOn = 3


    SET control = dlg.Add("DialogFrame2","DialogFrame")
    control.Move(2,80,219,40)
    control.Caption = " Ausgabeziel: "

    SET control = dlg.Add("DialogOptionButton5","DialogOptionButton")
    control.Move(6,92,200,10)
    control.Caption = "Ausgabe auf den Bildschirm"
    control.Bind("opt1%")
    control.ValueOn = 0

    SET control = dlg.Add("DialogOptionButton6","DialogOptionButton")
    control.Move(6,104,200,10)
    control.Caption = "Ausgabe auf den Drucker"
    control.Bind("opt1%")
    control.ValueOn = 1

    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(59,125,43,16)
    control.Default = 1
    control.Caption = "OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(105,125,42,16)
    control.Caption = "Abbruch"
    control.ReturnValue = 0
 
    DIALOG "Dialogname",req%
    REMOVE DIALOG "Dialogname"
    IF req% = 0 THEN END SUB 
 DIRECTORY _netpath$ + "\PROVIS"
 REM DIRECTORY "G:\ztest\PROVIS"
 REM  
 
 IF opt% = 0 THEN 
   IF opt1% = 0 THEN 
     SET QUERY HEADING "Umsatzvorausberechnung fÅr Gesellschaften",1,1
     SELECT DISTINCT Gesellschaft.GEADR,&|10VAnzahlVor.GEADR AS "Anzahl" WRAP ;SBewertung.GEADR,SBewertungEU.GEADR,SVolumen.GEADR,SVolumenEU.GEADR,
     SBeitragBRU.GEADR,SBeitragBRUEU.GEADR,SBeitragNET.GEADR,SBeitragNETEU.GEADR,SVSumme.GEADR,SVSummeEU.GEADR,SProvision.GEADR,
     SProvisionEU.GEADR
     REPORT SUM (VAnzahlVor.GEADR), SUM (SBewertung.GEADR), SUM (SBewertungEU.GEADR), SUM (SVolumen.GEADR), SUM (SVolumenEU.GEADR),
     SUM (SBeitragBRU.GEADR), SUM (SBeitragBRUEU.GEADR), SUM (SBeitragNET.GEADR), SUM (SBeitragNETEU.GEADR), SUM (SVSumme.GEADR),
     SUM (SVSummeEU.GEADR), SUM (SProvision.GEADR), SUM (SProvisionEU.GEADR)
     ORDER REPORT Gesellschaft.GEADR
     TO WINDOW 
     END SELECT 
   END IF 
   IF opt1% = 1 THEN 
     SET QUERY HEADING "Umsatzvorausberechnung fÅr Gesellschaften",1,1
     SELECT DISTINCT Gesellschaft.GEADR,&|10VAnzahlVor.GEADR AS "Anzahl" WRAP ;SBewertung.GEADR,SBewertungEU.GEADR,SVolumen.GEADR,SVolumenEU.GEADR,
     SBeitragBRU.GEADR,SBeitragBRUEU.GEADR,SBeitragNET.GEADR,SBeitragNETEU.GEADR,SVSumme.GEADR,SVSummeEU.GEADR,SProvision.GEADR,
     SProvisionEU.GEADR
     REPORT SUM (VAnzahlVor.GEADR), SUM (SBewertung.GEADR), SUM (SBewertungEU.GEADR), SUM (SVolumen.GEADR), SUM (SVolumenEU.GEADR),
     SUM (SBeitragBRU.GEADR), SUM (SBeitragBRUEU.GEADR), SUM (SBeitragNET.GEADR), SUM (SBeitragNETEU.GEADR), SUM (SVSumme.GEADR),
     SUM (SVSummeEU.GEADR), SUM (SProvision.GEADR), SUM (SProvisionEU.GEADR)
     ORDER REPORT Gesellschaft.GEADR
     TO PRINTER 
     END SELECT 
   END IF 
 END IF 
 IF opt% = 1 THEN 
   IF opt1% = 0 THEN 
     SET QUERY HEADING "erwartete UmsÑtze sortiert nach Gesellschaften/Sparten",1,1
     SELECT DISTINCT &20Gesellschaft.STATIST3 WRAP ;&20Sparte.STATIST3 WRAP ;&[10JahrMonat.STATIST3,&|15SBewertung.STATIST3 AS "Summe BW"
     WRAP ;&|15SBewertungEU.STATIST3 AS "Summe BWEU" WRAP ;&|15SVolumen.STATIST3 WRAP ;&|15SVolumenEU.STATIST3 WRAP ;&15SBeitragBRU.STATIST3
     WRAP ;&15SBeitragBRUEU.STATIST3 WRAP ;&15SBeitragNET.STATIST3 WRAP ;&15SBeitragNETEU.STATIST3 WRAP ;&15SVSumme.STATIST3
     WRAP ;&15SVSummeEU.STATIST3 WRAP ;&15SProvision.STATIST3 WRAP ;&15SProvisionEU.STATIST3 WRAP 
     REPORT SUM (SBeitragBRU.STATIST3), SUM (SBeitragBRUEU.STATIST3), SUM (SBeitragNET.STATIST3), SUM (SBeitragNETEU.STATIST3), SUM (SVSumme.STATIST3),
     SUM (SVSummeEU.STATIST3), SUM (SProvision.STATIST3), SUM (SProvisionEU.STATIST3) GROUP Gesellschaft.STATIST3, SUM (SBeitragBRU.STATIST3),
     SUM (SBeitragBRUEU.STATIST3), SUM (SBeitragNET.STATIST3), SUM (SBeitragNETEU.STATIST3), SUM (SVSumme.STATIST3), SUM (SVSummeEU.STATIST3),
     SUM (SProvision.STATIST3), SUM (SProvisionEU.STATIST3)
     ORDER REPORT Gesellschaft.STATIST3,Sparte.STATIST3,JahrMonat.STATIST3
     TO WINDOW 
     END SELECT 
   END IF 
   IF opt1% = 1 THEN 
     SET QUERY HEADING "erwartete UmsÑtze sortiert nach Gesellschaften/Sparten",1,1
     SELECT DISTINCT &20Gesellschaft.STATIST3 WRAP ;&20Sparte.STATIST3 WRAP ;&[10JahrMonat.STATIST3,&|15SBewertung.STATIST3 AS "Summe BW"
     WRAP ;&|15SBewertungEU.STATIST3 AS "Summe BWEU" WRAP ;&|15SVolumen.STATIST3 WRAP ;&|15SVolumenEU.STATIST3 WRAP ;&15SBeitragBRU.STATIST3
     WRAP ;&15SBeitragBRUEU.STATIST3 WRAP ;&15SBeitragNET.STATIST3 WRAP ;&15SBeitragNETEU.STATIST3 WRAP ;&15SVSumme.STATIST3
     WRAP ;&15SVSummeEU.STATIST3 WRAP ;&15SProvision.STATIST3 WRAP ;&15SProvisionEU.STATIST3 WRAP 
     REPORT SUM (SBeitragBRU.STATIST3), SUM (SBeitragBRUEU.STATIST3), SUM (SBeitragNET.STATIST3), SUM (SBeitragNETEU.STATIST3), SUM (SVSumme.STATIST3),
     SUM (SVSummeEU.STATIST3), SUM (SProvision.STATIST3), SUM (SProvisionEU.STATIST3) GROUP Gesellschaft.STATIST3, SUM (SBeitragBRU.STATIST3),
     SUM (SBeitragBRUEU.STATIST3), SUM (SBeitragNET.STATIST3), SUM (SBeitragNETEU.STATIST3), SUM (SVSumme.STATIST3), SUM (SVSummeEU.STATIST3),
     SUM (SProvision.STATIST3), SUM (SProvisionEU.STATIST3)
     ORDER REPORT Gesellschaft.STATIST3,Sparte.STATIST3,JahrMonat.STATIST3
     TO PRINTER 
     END SELECT 
   END IF 
 END IF 
 IF opt% = 2 THEN 
   IF opt1% = 0 THEN 
     SET QUERY HEADING "Umsatzvorausberechnung fÅr Sparten",1,1
     SELECT &20Sparte.SPARTEN WRAP ;&|6VAnzahlVor.SPARTEN AS "Anzahl" WRAP ;SBewertung.SPARTEN,SBewertungEU.SPARTEN,SVolumen.SPARTEN,
     SVolumenEU.SPARTEN,SBeitragBRU.SPARTEN,SBeitragBRUEU.SPARTEN,SBeitragNET.SPARTEN,SBeitragNETEU.SPARTEN,SVSumme.SPARTEN,
     SVSummeEU.SPARTEN,SProvision.SPARTEN,SProvisionEU.SPARTEN
     REPORT SUM (VAnzahlVor.SPARTEN), SUM (SBewertung.SPARTEN), SUM (SBewertungEU.SPARTEN), SUM (SVolumen.SPARTEN), SUM (SVolumenEU.SPARTEN),
     SUM (SBeitragBRU.SPARTEN), SUM (SBeitragBRUEU.SPARTEN), SUM (SBeitragNET.SPARTEN), SUM (SBeitragNETEU.SPARTEN), SUM (SVSumme.SPARTEN),
     SUM (SVSummeEU.SPARTEN), SUM (SProvision.SPARTEN), SUM (SProvisionEU.SPARTEN)
     ORDER REPORT Sparte.SPARTEN
     TO WINDOW 
     END SELECT 
   END IF 
   IF opt1% = 1 THEN 
     SET QUERY HEADING "Umsatzvorausberechnung fÅr Sparten",1,1
     SELECT &20Sparte.SPARTEN WRAP ;&|6VAnzahlVor.SPARTEN AS "Anzahl" WRAP ;SBewertung.SPARTEN,SBewertungEU.SPARTEN,SVolumen.SPARTEN,
     SVolumenEU.SPARTEN,SBeitragBRU.SPARTEN,SBeitragBRUEU.SPARTEN,SBeitragNET.SPARTEN,SBeitragNETEU.SPARTEN,SVSumme.SPARTEN,
     SVSummeEU.SPARTEN,SProvision.SPARTEN,SProvisionEU.SPARTEN
     REPORT SUM (VAnzahlVor.SPARTEN), SUM (SBewertung.SPARTEN), SUM (SBewertungEU.SPARTEN), SUM (SVolumen.SPARTEN), SUM (SVolumenEU.SPARTEN),
     SUM (SBeitragBRU.SPARTEN), SUM (SBeitragBRUEU.SPARTEN), SUM (SBeitragNET.SPARTEN), SUM (SBeitragNETEU.SPARTEN), SUM (SVSumme.SPARTEN),
     SUM (SVSummeEU.SPARTEN), SUM (SProvision.SPARTEN), SUM (SProvisionEU.SPARTEN)
     ORDER REPORT Sparte.SPARTEN
     TO PRINTER 
     END SELECT 
   END IF 
 END IF 
 IF opt% = 3 THEN 
   IF opt1% = 0 THEN 
     SET QUERY HEADING "öbersicht der Vorausberechnungen fÅr Produkte",1,1
     SELECT &40GesSpa.VPRODUKT AS "Gesellschaft/Sparte" WRAP ;&|10VAnzahlVor.VPRODUKT AS "Anzahl" WRAP ;SBewertung.VPRODUKT WRAP ;SBewertungEU.VPRODUKT
     WRAP ;SVolumen.VPRODUKT WRAP ;SVolumenEU.VPRODUKT WRAP ;SBeitragBRU.VPRODUKT WRAP ;SBeitragBRUEU.VPRODUKT WRAP ;SBeitragNET.VPRODUKT
     WRAP ;SBeitragNETEU.VPRODUKT WRAP ;SVSumme.VPRODUKT WRAP ;SVSummeEU.VPRODUKT WRAP ;SProvision.VPRODUKT WRAP ;SProvisionEU.VPRODUKT WRAP 
     REPORT SUM (VAnzahlVor.VPRODUKT), SUM (SBewertung.VPRODUKT), SUM (SBewertungEU.VPRODUKT), SUM (SVolumen.VPRODUKT), SUM (SVolumenEU.VPRODUKT),
     SUM (SBeitragBRU.VPRODUKT), SUM (SBeitragBRUEU.VPRODUKT), SUM (SBeitragNET.VPRODUKT), SUM (SBeitragNETEU.VPRODUKT), SUM (SVSumme.VPRODUKT),
     SUM (SVSummeEU.VPRODUKT), SUM (SProvision.VPRODUKT), SUM (SProvisionEU.VPRODUKT)
     ORDER REPORT GesSpa.VPRODUKT
     TO WINDOW 
     END SELECT 
   END IF 
   IF opt1% = 1 THEN 
     SET QUERY HEADING "öbersicht der Vorausberechnungen fÅr Produkte",1,1
     SELECT &40GesSpa.VPRODUKT AS "Gesellschaft/Sparte" WRAP ;&|10VAnzahlVor.VPRODUKT AS "Anzahl" WRAP ;SBewertung.VPRODUKT WRAP ;SBewertungEU.VPRODUKT
     WRAP ;SVolumen.VPRODUKT WRAP ;SVolumenEU.VPRODUKT WRAP ;SBeitragBRU.VPRODUKT WRAP ;SBeitragBRUEU.VPRODUKT WRAP ;SBeitragNET.VPRODUKT
     WRAP ;SBeitragNETEU.VPRODUKT WRAP ;SVSumme.VPRODUKT WRAP ;SVSummeEU.VPRODUKT WRAP ;SProvision.VPRODUKT WRAP ;SProvisionEU.VPRODUKT WRAP 
     REPORT SUM (VAnzahlVor.VPRODUKT), SUM (SBewertung.VPRODUKT), SUM (SBewertungEU.VPRODUKT), SUM (SVolumen.VPRODUKT), SUM (SVolumenEU.VPRODUKT),
     SUM (SBeitragBRU.VPRODUKT), SUM (SBeitragBRUEU.VPRODUKT), SUM (SBeitragNET.VPRODUKT), SUM (SBeitragNETEU.VPRODUKT), SUM (SVSumme.VPRODUKT),
     SUM (SVSummeEU.VPRODUKT), SUM (SProvision.VPRODUKT), SUM (SProvisionEU.VPRODUKT)
     ORDER REPORT GesSpa.VPRODUKT
     TO PRINTER 
     END SELECT 
   END IF 
 END IF 
 GOTO VorausList0310200101
 END SUB 


 '*******************************************************************************************************************
 '*                        E N D E    V O R A U S B E R E C H N U N G                                               *
 '*******************************************************************************************************************
 


 '*******************************************************************************************************************
 '*                                   SUMMENLISTE PRODUKTION                                                        *
 '*******************************************************************************************************************

SUB SummAlleAgent()
 IF PrvVerfahr$ <> "ZAHLUNGSEINGANG" THEN 
   dat$ = "BUCHUNG"
 ELSE 
   dat$ = "BUCHUNG1"
 END IF 
 CALL DFile(3,dat$ + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$)
 CALL DFile(3,"gekond" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"kvertrag" + _fpw$)
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 IF disabled%("PROVISIONSLISTE") THEN END SUB 
 CALL DFile(3,"summe1" + _fpw$)
      DIM dlg1 AS Dialog
     DIM control AS DialogControl 
 alle$ = "TRUE"
 IF gasp% THEN 
   IF workstation% = 0 THEN 
     REQUEST "Mîchten sie die letzte erzeugte Summenliste erneut ausgeben?","",130,req0%
   ELSE 
     req0% = 0
   END IF 
 ELSE 
   REQUEST "Mîchten sie die letzte erzeugte Summenliste erneut ausgeben?","",130,req0%
 END IF 
 IF req0% = 1 THEN GOTO su260120001
 REM REQUEST "Summenliste fÅr eine einzelne Agentur (Button JA)?","Summenliste fÅr alle Agenturen (Button NEIN)?",130,req%
 opt% = 1
 
     Superbase.Dialogs.Add("Dialogname")
     SET dlg1 = Superbase.Dialogs.Dialogname
     dlg1.Move(0,0,150,73)
     dlg1.Caption = "Art der Summenliste"
     dlg1.FontName = "MS Sans Serif"
     dlg1.FontSize = 8
 
     SET control = dlg1.Add("DialogFrame1","DialogFrame")
     control.Move(2,8,147,44)
     control.Caption = " WÑhlen Sie eine Option "
 
     SET control = dlg1.Add("DialogOptionButton1","DialogOptionButton")
     control.Move(6,20,141,10)
     control.Caption = "Summenliste fÅr eine einzelne Agentur"
     control.Bind("opt%")
     control.ValueOn = 1
         SET control = dlg1.Add("DialogOptionButton2","DialogOptionButton")
         control.Move(6,32,141,9)
         control.Caption = "Summenliste fÅr alle Agenturen"
         control.Bind("opt%")
         control.ValueOn = 2
 
 
 
     SET control = dlg1.Add("DialogCommandButton1","DialogCommandButton")
     control.Move(49,54,43,16)
     control.Default = 1
     control.Caption = "OK"
     control.ReturnValue = 1
 
     DIALOG "Dialogname",req%
     REMOVE DIALOG "Dialogname"
     IF opt% = 1 THEN 
       req% = 1
     ELSE 
       req% = 0
     END IF 
 IF req% = 1 THEN alle$ = ""
 REMOVE FROM FILE "summe1"
 MOUSE OFF 
 SET STATUS "Ausgabe wird vorbereitet..."
 allProv$ = "n"
 CREATE DIALOG "Konto1",0,0,221,165,title$,"MS Sans Serif",8
 ADD DIALOG "Konto1",9,6,7,24,22,2
 ADD DIALOG "Konto1",5,34,8,170,9,0,"Provisionsliste:"
 ADD DIALOG "Konto1",4,34,14,176,5,0,""
 ADD DIALOG "Konto1",5,34,22,175,16,0,"Bitte geben Sie ein, fÅr welchen Buchungszeitraum Sie eine öbersicht wÅnschen."
 ADD DIALOG "Konto1",5,34,40,175,32,0,"Wenn Sie keine Angaben zum Buchungszeitraum eintragen, werden alle Provisionen bzw. die Provisionen des vorgegebenen Zeitraumes aufgelistet."
 ADD DIALOG "Konto1",5,34,80,12,8,0,"von"
 ADD DIALOG "Konto1",6,53,79,45,11,0,0,von$,10
 ADD DIALOG "Konto1",5,102,80,12,8,0,"bis"
 ADD DIALOG "Konto1",6,116,79,45,11,0,0,bis$,10
 REM ADD DIALOG "Konto1",2,34,97,148,11,0,"alle berechneten Provisionen einbeziehen","j","n",allProv$
 REM ADD DIALOG "Konto1",5,44,108,167,25,0,"(es werden auch die Provisionen angezeigt, die wegen fehlender ZahlungsbeitrÑge in der Mahnlist sind)"
 ADD DIALOG "Konto1",1,50,144,55,15,1,"&Weiter",1,1
 ADD DIALOG "Konto1",1,110,144,55,15,0,"&Abbruch",0,0
 DIALOG "Konto1",req%
 REMOVE DIALOG "Konto1"
 MOUSE OFF 
 
 IF req% = 1 THEN 
   MOUSE OFF 
   IF von$ = "" THEN vondat$ = "1.1.1980" ELSE vondat$ = von$
   IF bis$ = "" THEN bisdat$ = DATE$ ( TODAY ,"0d.mm.yyyy") ELSE bisdat$ = bis$
   FILE "maadr"
   INDEX codema.maadr
   DIM VCodeMA%( RECCOUNT ("MAADR"))
   DIM VAgentur$( RECCOUNT ("MAADR"))
   SELECT FIRST 
   IF alle$ = "" THEN 
     codema% = 0
     codema% = GetCodeMA%(0,Workstation%)
     IF codema% <> 0 THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% FILE "maadr" INDEX codema.maadr
       VCodeMA%(0) = codema%
       VAgentur$(0) = Nachname.maadr + ", " + Vorname.maadr + ", " + Agenturnr.maadr
     ELSE 
       CALL Fehler("Es wurde keine Agentur ausgewÑhlt!","")
       END SUB 
     END IF 
   END IF 
   i% = 0
   WHILE NOT EOF ("maadr") AND alle$ = "TRUE"
     IF klotz$ = "TRUE" THEN 
       IF LEFT$ (nachname.maadr,3) <> "***" THEN 
         IF gasp% AND workstation% > 0 THEN 
           IF workstation.maadr = workstation% THEN 
             VCodeMA%(i%) = codema.maadr
             VAgentur$(i%) = Nachname.maadr + ", " + Vorname.maadr + ", " + Agenturnr.maadr
             i% = i% + 1
           END IF 
         ELSE 
           VCodeMA%(i%) = codema.maadr
           VAgentur$(i%) = Nachname.maadr + ", " + Vorname.maadr + ", " + Agenturnr.maadr
           i% = i% + 1
         END IF 
       END IF 
     ELSE 
       IF gasp% AND workstation% > 0 THEN 
         IF workstation.maadr = workstation% THEN 
           VCodeMA%(i%) = codema.maadr
           VAgentur$(i%) = Nachname.maadr + ", " + Vorname.maadr + ", " + Agenturnr.maadr
           i% = i% + 1
         END IF 
       ELSE 
         VCodeMA%(i%) = codema.maadr
         VAgentur$(i%) = Nachname.maadr + ", " + Vorname.maadr + ", " + Agenturnr.maadr
         i% = i% + 1
       END IF 
     END IF 
     SELECT NEXT FILE "maadr" INDEX codema.maadr
   WEND 
   FILE dat$
   REM INDEX VTCodema.dat$
   INDEX Codema.dat$
   SELECT FIRST 
 
   REM EigengeschÑft
   FOR j% = 0 TO i% - 1
     codema% = VCodeMA%(j%)
     REM IF codema% = 189 THEN CALL Fehler("F","")
     SET STATUS "Bearbeite Agentur " + VAgentur$(j%)
     FILE dat$
     SELECT FIRST FILE dat$
     REM SELECT KEY codema% FILE dat$ INDEX vtcodema.dat$
     SELECT KEY codema% FILE dat$ INDEX codema.dat$
     buanz% = 0
     zusatzanz% = 0
     SummeEinh% = 0
     SummeFEinh% = 0
     SummeDM% = 0
     SummeEu% = 0
     SummeSREU% = 0
     SummeSR% = 0
     SummeBewert% = 0
     SummeVolumen% = 0
 
     SummeFDM% = 0
     SummeFEu% = 0
     SummeFSREU% = 0
     SummeFSR% = 0
     SummeFBewert% = 0
     SummeFVolumen% = 0
 
     SummeZusatz% = 0
     REM WHILE NOT EOF (dat$) AND vtcodema.dat$ = codema%
     WHILE NOT EOF (dat$) AND codema.dat$ = codema%
       SET STATUS "Bearbeite Agentur " + VAgentur$(j%) + " Buchungssatz: " + STR$ (buanz%,",99999999.")
       IF codema.dat$ = codema% AND datum.dat$ >= vondat$ AND datum.dat$ <= bisdat$ THEN 
         buanz% = buanz% + 1
         IF codevt.dat$ < 1 THEN 
           zusatzanz% = zusatzanz% + 1
           SummeZusatz% = SummeZusatz% + Betrag.dat$
         END IF 
         
         IF vtcodema.dat$ = codema% THEN 
           SummeDM% = SummeDM% + Betrag.dat$
           SummeEinh% = SummeEinh% + einheiten.dat$
           SummeSR% = SummeSR% + sr.dat$
           SummeBewert% = SummeBewert% + Bewertungssumme.dat$
           SummeVolumen% = SummeVolumen% + Volumen.dat$
           SummeEu% = SummeEu% + BetragEu.dat$
           SummeSREU% = SummeSREu% + SREU.dat$
         ELSE 
           IF codevt.dat$ > 0 THEN 
             SummeFDM% = SummeFDM% + Betrag.dat$
             SummeFEinh% = SummeFEinh% + einheiten.dat$
             SummeFSR% = SummeSR% + sr.dat$
             SummeFBewert% = SummeBewert% + Bewertungssumme.dat$
             SummeFVolumen% = SummeVolumen% + Volumen.dat$
             SummeFEu% = SummeEu% + BetragEu.dat$
             SummeFSREU% = SummeSREu% + SREU.dat$
           END IF 
         END IF 
       END IF 
       SELECT NEXT FILE dat$
     WEND 
     FILE "Summe1"
     BLANK 
     datum.summe1 = TODAY 
     codesu.summe1 = SER ("Summe1",1)
     codema.summe1 = codema%
     vtAgentur.summe1 = VAgentur$(j%)
     SummeDM.summe1 = SummeDM%
     SummeEinh.summe1 = SummeEinh%
     SummeSR.summe1 = SummeSR%
     SummeBewert.summe1 = SummeBewert%
     SummeVolumen.summe1 = SummeVolumen%
     SummeEu.summe1 = SummeEu%
     SummeSREu.summe1 = SummeSREU%
 
     SummeFDM.summe1 = SummeFDM%
     SummeFEinh.summe1 = SummeFEinh%
     SummeFSR.summe1 = SummeFSR%
     SummeFBewert.summe1 = SummeFBewert%
     SummeFVolumen.summe1 = SummeFVolumen%
     SummeFEu.summe1 = SummeFEu%
     SummeFSREu.summe1 = SummeFSREU%
 
     SummeZus.summe1 = SummeZusatz%
     AnzZus.summe1 = zusatzanz%
     AnzBu.summe1 = buanz%
     von.summe1 = vondat$
     bis.summe1 = bisdat$
     STORE FILE "Summe1"
 
   NEXT j%
 
su260120001: 
   REM REQUEST "Summenliste Einheiten drucken(Button JA)?","Summenliste mit allen Angaben drucken (Button NEIN)?",130,req1%
     opt% = 1
     Superbase.Dialogs.Add("Dialogname")
     SET dlg1 = Superbase.Dialogs.Dialogname
     dlg1.Move(0,0,150,73)
     dlg1.Caption = "Art der Summenliste"
     dlg1.FontName = "MS Sans Serif"
     dlg1.FontSize = 8
 
     SET control = dlg1.Add("DialogFrame1","DialogFrame")
     control.Move(2,8,147,44)
     control.Caption = " WÑhlen Sie eine Option "
 
     SET control = dlg1.Add("DialogOptionButton1","DialogOptionButton")
     control.Move(6,20,141,10)
     control.Caption = "Summenliste Einheiten drucken"
     control.Bind("opt%")
     control.ValueOn = 1
 
     SET control = dlg1.Add("DialogOptionButton2","DialogOptionButton")
     control.Move(6,32,141,9)
     control.Caption = "Summenliste mit allen Angaben drucken"
     control.Bind("opt%")
     control.ValueOn = 2
 
 
 
     SET control = dlg1.Add("DialogCommandButton1","DialogCommandButton")
     control.Move(49,54,43,16)
     control.Default = 1
     control.Caption = "OK"
     control.ReturnValue = 1
 
     DIALOG "Dialogname",req%
     REMOVE DIALOG "Dialogname"
     IF opt% = 1 THEN 
       req1% = 1
     ELSE 
       req1% = 0
     END IF 



   IF req1% = 1 THEN 
     CALL PRep("SUMME1")
     BEFORE REPORT 
     SET REPORT PAGE "H_REPORT"
     OUTPUT REPORT PAGE 
     END REPORT 
     vondat1$ = vondat$
     bisdat1$ = bisdat$
     AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
     END REPORT 
 
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     ON ERROR GOTO ErrorHandler
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     SET FIRST PAGE HEADING OFF 
     SELECT ;
     WHERE codema.summe1 > 0
       ORDER REPORT SummeEinh.SUMME1 DESCENDING 
        TO ASK 
   ELSE 
     CALL PRep("SUMME2")
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     vondat1$ = vondat$
     von% = DAYS (vondat1$)
     bisdat1$ = bisdat$
     bis% = DAYS (bisdat$)
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     ON ERROR GOTO endsu1100920031
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     SELECT ;
     WHERE codema.summe1 > 0
     ORDER REPORT VTAgentur.SUMME1
     TO ASK 
   END IF 
 
 END IF 
endsu1100920031: 
 ON ERROR GOTO ErrorHandler
 MOUSE ON 
 END SUB 
  


 '*******************************************************************************************************************
 '*                                   Einheiten-LISTE PRODUKTION                                                    *
 '*******************************************************************************************************************
 
SUB SummEinhAgent()
 IF PrvVerfahr$ <> "ZAHLUNGSEINGANG" THEN 
   dat$ = "KVERTRAG"
 ELSE 
   dat$ = "KVERTRAG"
 END IF 
 CALL DFile(3,dat$ + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$)
 CALL DFile(3,"gekond" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"kvertrag" + _fpw$)
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 IF disabled%("PROVISIONSLISTE") THEN END SUB 
 CALL DFile(3,"summe1" + _fpw$)
      DIM dlg1 AS Dialog
     DIM control AS DialogControl 
 alle$ = "TRUE"
 IF gasp% = 0 THEN 
   IF workstation% = 0 THEN 
     REQUEST "Mîchten sie die letzte erzeugte Liste erneut ausgeben?","",130,req0%
   ELSE 
     req0% = 0
   END IF 
 ELSE 
   IF GASP% = - 1 AND workstation% > 0 THEN 
     req0% = 0
   ELSE 
     REQUEST "Mîchten sie die letzte erzeugte Liste erneut ausgeben?","",130,req0%
   END IF 
 END IF 
 IF req0% = 1 THEN GOTO su190920021
 REM REQUEST "Liste fÅr eine einzelne Agentur (Button JA)?","Liste fÅr alle Agenturen (Button NEIN)?",130,req%
 
     opt% = 1
     Superbase.Dialogs.Add("Dialogname")
     SET dlg1 = Superbase.Dialogs.Dialogname
     dlg1.Move(0,0,150,73)
     dlg1.Caption = "Einheitenliste"
     dlg1.FontName = "MS Sans Serif"
     dlg1.FontSize = 8
 
     SET control = dlg1.Add("DialogFrame1","DialogFrame")
     control.Move(2,8,147,44)
     control.Caption = " WÑhlen Sie eine Option "
 
     SET control = dlg1.Add("DialogOptionButton1","DialogOptionButton")
     control.Move(6,20,141,10)
     control.Caption = "Liste fÅr eine einzelne Agentur"
     control.Bind("opt%")
     control.ValueOn = 1
 
     SET control = dlg1.Add("DialogOptionButton2","DialogOptionButton")
     control.Move(6,32,141,9)
     control.Caption = "Liste fÅr alle Agenturen"
     control.Bind("opt%")
     control.ValueOn = 2
 
 
 
     SET control = dlg1.Add("DialogCommandButton1","DialogCommandButton")
     control.Move(49,54,43,16)
     control.Default = 1
     control.Caption = "OK"
     control.ReturnValue = 1
 
     DIALOG "Dialogname",req%
     REMOVE DIALOG "Dialogname"
     IF opt% = 1 THEN 
       req% = 1
     ELSE 
       req% = 0
     END IF 

 IF req% = 1 THEN alle$ = ""
 REMOVE FROM FILE "summe1"
 MOUSE OFF 
 SET STATUS "Ausgabe wird vorbereitet..."
 allProv$ = "n"
 opt1% = 1
 pab$ = "n"
 CREATE DIALOG "Konto1",0,0,241,185,title$,"MS Sans Serif",8
 ADD DIALOG "Konto1",9,6,7,24,22,2
 ADD DIALOG "Konto1",5,34,8,170,9,0,"Eigen-Einheitenliste:"
 ADD DIALOG "Konto1",4,34,14,176,5,0,""
 ADD DIALOG "Konto1",5,34,22,175,16,0,"Bitte geben Sie ein, fÅr welchen Antrags-Zeitraum Sie eine öbersicht wÅnschen."
 ADD DIALOG "Konto1",5,34,40,175,32,0,"es werden die VertrÑge des xy-Zeitraums berÅcksichtigt, die zum Ende des xy-Zeitraums noch nicht storniert waren"
 ADD DIALOG "Konto1",5,34,80,12,8,0,"von"
 ADD DIALOG "Konto1",6,53,79,45,11,0,0,von$,10
 ADD DIALOG "Konto1",5,102,80,12,8,0,"bis"
 ADD DIALOG "Konto1",6,116,79,45,11,0,0,bis$,10
 REM ADD DIALOG "Konto1",2,34,97,148,11,0,"alle berechneten Provisionen einbeziehen","j","n",allProv$
 REM ADD DIALOG "Konto1",5,44,108,167,25,0,"(es werden auch die Provisionen angezeigt, die wegen fehlender ZahlungsbeitrÑge in der Mahnlist sind)"
 ADD DIALOG "Konto1",4,4,99,210,38,0,"xy-Zeitraum"
 ADD DIALOG "Konto1",3,6,109,150,12,0,"alle bis heute nicht gekÅndigten VertrÑge",1,opt1%
 ADD DIALOG "Konto1",3,6,119,200,12,0,"alle bis Antrags-Zeitraum Ende nicht gekÅndigten VertrÑge",2,opt1%
 REM ADD DIALOG "Konto1",3,6,131,200,12,0,"NUR VertrÑge, die an die Provisionsabrechnung Åbergeben wurden",2,opt%
 ADD DIALOG "Konto1",2,6,141,230,11,0,"NUR VertrÑge, die an die Provisionsabrechnung Åbergeben wurden","j","n",pab$
 
 ADD DIALOG "Konto1",1,50,164,55,15,1,"&Weiter",1,1
 ADD DIALOG "Konto1",1,110,164,55,15,0,"&Abbruch",0,0
 DIALOG "Konto1",req%
 REMOVE DIALOG "Konto1"
 MOUSE OFF 
 
 IF req% = 1 THEN 
   MOUSE OFF 
   IF von$ = "" THEN vondat$ = "1.1.1980" ELSE vondat$ = von$
   IF bis$ = "" THEN bisdat$ = DATE$ ( TODAY ,"0d.mm.yyyy") ELSE bisdat$ = bis$
   FILE "maadr"
   INDEX codema.maadr
   DIM VCodeMA%( RECCOUNT ("MAADR"))
   DIM VAgentur$( RECCOUNT ("MAADR"))
   SELECT FIRST 
   IF alle$ = "" THEN 
     codema% = 0
     codema% = GetCodeMA%(0,Workstation%)
     IF codema% <> 0 THEN 
       SELECT KEY codema% FILE "maadr" INDEX codema.maadr
       VCodeMA%(0) = codema%
       VAgentur$(0) = Nachname.maadr + ", " + Vorname.maadr + ", " + Agenturnr.maadr
     ELSE 
       CALL Fehler("Es wurde keine Agentur ausgewÑhlt!","")
       END SUB 
     END IF 
   END IF 
   i% = 0
   WHILE NOT EOF ("maadr") AND alle$ = "TRUE"
     IF klotz$ = "TRUE" THEN 
       IF LEFT$ (nachname.maadr,3) <> "***" THEN 
         IF gasp% AND workstation% > 0 THEN 
           IF workstation.maadr = workstation% THEN 
             VCodeMA%(i%) = codema.maadr
             VAgentur$(i%) = Nachname.maadr + ", " + Vorname.maadr + ", " + Agenturnr.maadr
             i% = i% + 1
           END IF 
         ELSE 
           VCodeMA%(i%) = codema.maadr
           VAgentur$(i%) = Nachname.maadr + ", " + Vorname.maadr + ", " + Agenturnr.maadr
           i% = i% + 1
         END IF 
       END IF 
     ELSE 
       IF gasp% AND workstation% > 0 THEN 
         IF workstation.maadr = workstation% THEN 
           VCodeMA%(i%) = codema.maadr
           VAgentur$(i%) = Nachname.maadr + ", " + Vorname.maadr + ", " + Agenturnr.maadr
           i% = i% + 1
         END IF 
       ELSE 
         VCodeMA%(i%) = codema.maadr
         VAgentur$(i%) = Nachname.maadr + ", " + Vorname.maadr + ", " + Agenturnr.maadr
         i% = i% + 1
       END IF 
     END IF 
     SELECT NEXT FILE "maadr" INDEX codema.maadr
   WEND 
   FILE dat$
   REM INDEX VTCodema.dat$
   INDEX Codema.dat$
   SELECT FIRST 
 
   REM EigengeschÑft
   FOR j% = 0 TO i% - 1
     codema% = VCodeMA%(j%)
     REM IF codema% = 189 THEN CALL Fehler("F","")
     SET STATUS "Bearbeite Agentur " + VAgentur$(j%)
     FILE dat$
     SELECT FIRST FILE dat$
     REM SELECT KEY codema% FILE dat$ INDEX vtcodema.dat$
     SELECT KEY codema% FILE dat$ INDEX codema.dat$
     buanz% = 0
     zusatzanz% = 0
     SummeEinh% = 0
     SummeFEinh% = 0
     SummeDM% = 0
     SummeEu% = 0
     SummeSREU% = 0
     SummeSR% = 0
     SummeBewert% = 0
     SummeVolumen% = 0
 
     SummeFDM% = 0
     SummeFEu% = 0
     SummeFSREU% = 0
     SummeFSR% = 0
     SummeFBewert% = 0
     SummeFVolumen% = 0
 
     SummeZusatz% = 0
     REM WHILE NOT EOF (dat$) AND vtcodema.dat$ = codema%
     dat$ = "KVERTRAG"
     INDEX Antragsdatum.kvertrag
     SELECT FIRST FILE "KVERTRAG" INDEX Antragsdatum.kvertrag
     SELECT KEY vondat$ FILE "KVERTRAG" INDEX Antragsdatum.kvertrag
     REM WHILE NOT EOF (dat$) AND codema.dat$ = codema% AND Antragsdatum.dat$ >= vondat$ AND Antragsdatum.dat$ <= bisdat$
     WHILE NOT EOF (dat$) AND Antragsdatum.dat$ >= vondat$ AND Antragsdatum.dat$ <= bisdat$
       SET STATUS "Bearbeite Agentur " + VAgentur$(j%) + " Datensatz: " + STR$ (buanz%,",99999999.")
       IF codema.dat$ = codema% THEN 
         REM IF vtcodema.dat$ = codema% THEN 
         IF codema.dat$ = codema% THEN 
          ok% = 0
          IF opt1% = 1 THEN 
            IF KÅndigung.kvertrag = 0 OR KÅndigung.kvertrag > TODAY THEN ok% = - 1
          ELSE 
            IF KÅndigung.kvertrag = 0 OR KÅndigung.kvertrag > bisdat$ THEN ok% = - 1
          END IF 
          IF pab$ = "j" THEN 
            IF Proviab.KVERTRAG > 0 THEN 
              ok% = - 1
            ELSE 
              ok% = 0
            END IF 
          END IF 
          IF Altvertrag.kvertrag LIKE "j" THEN ok% = 0
          IF Fremdvertrag.kvertrag LIKE "j" THEN ok% = 0
          IF CodeVStatus.kvertrag = 15 OR CodeVStatus.kvertrag = 16 OR CodeVStatus.kvertrag >= 20 THEN ok% = 0
          IF ok% = - 1 THEN 
           buanz% = buanz% + 1
           REM SummeDM% = SummeDM% + Beitrag.dat$
           SELECT CASE zw.kvertrag
             CASE 0
               zw$ = "Zahlweise: Einmalig"
               SummeDM% = SummeDM% + Beitrag.kvertrag
             CASE 1
               zw$ = "Zahlweise: JÑhrlich"
               SummeDM% = SummeDM% + Beitrag.kvertrag
             CASE 4
               zw$ = "Zahlweise: VierteljÑhrlich"
               SummeDM% = SummeDM% + 4 * Beitrag.kvertrag
             CASE 2
               zw$ = "Zahlweise: HalbjÑhrlich"
               SummeDM% = SummeDM% + 2 * Beitrag.kvertrag
             CASE 6
               zw$ = "Zahlweise: 2monatlich"
               SummeDM% = SummeDM% + 6 * Beitrag.kvertrag
             CASE 12
               zw$ = "Zahlweise: Monatlich"
               SummeDM% = SummeDM% + 12 * Beitrag.kvertrag
           END SELECT 
           SummeEinh% = SummeEinh% + einheiten.dat$
           REM SummeSR% = SummeSR% + sr.dat$
           SummeBewert% = SummeBewert% + Bewertungssumme.dat$
           SummeVolumen% = SummeVolumen% + Volumen.dat$
           REM SummeEu% = SummeEu% + BetragEu.dat$
           REM SummeSREU% = SummeSREu% + SREU.dat$
          END IF 
         ELSE 
           REM SummeFDM% = SummeFDM% + Beitrag.dat$
           REM SummeFEinh% = SummeFEinh% + einheiten.dat$
           REM SummeFSR% = SummeSR% + sr.dat$
           REM SummeFBewert% = SummeBewert% + Bewertungssumme.dat$
           REM SummeFVolumen% = SummeVolumen% + Volumen.dat$
           REM SummeFEu% = SummeEu% + BetragEu.dat$
           REM SummeFSREU% = SummeSREu% + SREU.dat$
         END IF 
       END IF 
       SELECT NEXT FILE "KVERTRAG" INDEX Antragsdatum.kvertrag
     WEND 
     FILE "Summe1"
     BLANK 
     datum.summe1 = TODAY 
     codesu.summe1 = SER ("Summe1",1)
     codema.summe1 = codema%
     vtAgentur.summe1 = VAgentur$(j%)
     SummeDM.summe1 = SummeDM%
     SummeEinh.summe1 = SummeEinh%
     SummeSR.summe1 = SummeSR%
     SummeBewert.summe1 = SummeBewert%
     SummeVolumen.summe1 = SummeVolumen%
     SummeEu.summe1 = SummeEu%
     SummeSREu.summe1 = SummeSREU%
 
     SummeFDM.summe1 = SummeFDM%
     SummeFEinh.summe1 = SummeFEinh%
     SummeFSR.summe1 = SummeFSR%
     SummeFBewert.summe1 = SummeFBewert%
     SummeFVolumen.summe1 = SummeFVolumen%
     SummeFEu.summe1 = SummeFEu%
     SummeFSREu.summe1 = SummeFSREU%
 
     SummeZus.summe1 = SummeZusatz%
     AnzZus.summe1 = zusatzanz%
     AnzBu.summe1 = buanz%
     von.summe1 = vondat$
     bis.summe1 = bisdat$
     STORE FILE "Summe1"
 
   NEXT j%
 
su190920021: 
   REM REQUEST "Summenliste Eigen-Einheiten drucken(Button JA)?","Summenliste mit allen Angaben drucken (Button NEIN)?",130,req1%
        opt% = 1
     Superbase.Dialogs.Add("Dialogname")
     SET dlg1 = Superbase.Dialogs.Dialogname
     dlg1.Move(0,0,150,73)
     dlg1.Caption = "Eigeneinheitenliste"
     dlg1.FontName = "MS Sans Serif"
     dlg1.FontSize = 8
 
     SET control = dlg1.Add("DialogFrame1","DialogFrame")
     control.Move(2,8,147,44)
     control.Caption = " WÑhlen Sie eine Option "
 
     SET control = dlg1.Add("DialogOptionButton1","DialogOptionButton")
     control.Move(6,20,141,10)
     control.Caption = "Summenliste Eigen-Einheiten drucken"
     control.Bind("opt%")
     control.ValueOn = 1
 
     SET control = dlg1.Add("DialogOptionButton2","DialogOptionButton")
     control.Move(6,32,141,9)
     control.Caption = "Summenliste mit allen Angaben drucken"
     control.Bind("opt%")
     control.ValueOn = 2
 
 
 
     SET control = dlg1.Add("DialogCommandButton1","DialogCommandButton")
     control.Move(49,54,43,16)
     control.Default = 1
     control.Caption = "OK"
     control.ReturnValue = 1
 
     DIALOG "Dialogname",req%
     REMOVE DIALOG "Dialogname"
     IF opt% = 1 THEN 
       req1% = 1
     ELSE 
       req1% = 0
     END IF 

   IF req1% = 1 THEN 
     CALL PRep("SUMME1E")
     REPORT ON SummeEinh.SUMME1 AS "sumeinh%",SummeBewert.SUMME1 AS "sumbew%",SummeDM.SUMME1 AS "sumbeitr%",AnzBu.SUMME1 AS "sumanz%"
     BEFORE REPORT 
     SET REPORT PAGE "H_REPORT"
     OUTPUT REPORT PAGE 
     END REPORT 
     vondat1$ = vondat$
     bisdat1$ = bisdat$
     AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
     END REPORT 
 
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
 
     FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
     END FOOTING 
 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     ON ERROR GOTO ErrorHandler
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     SET FIRST PAGE HEADING OFF 
     SELECT ;
     WHERE codema.summe1 > 0
       ORDER REPORT SummeEinh.SUMME1 DESCENDING 
        TO ASK 
   ELSE 
     CALL PRep("SUMME2E")
     HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
     END HEADING 
     vondat1$ = vondat$
     bisdat1$ = bisdat$
     GROUP VTAgentur.SUMME1
     AFTER GROUP VTAgentur.SUMME1
     SET REPORT PAGE "F_VTAgentur.002"
     OUTPUT REPORT PAGE 
     END GROUP 
 
     AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
     END SELECT 
     ON ERROR GOTO ErrorHandler
     SET QUERY OFF 
     SET QUERY LOCK OFF 
     SELECT ;
     WHERE codema.summe1 > 0
     ORDER REPORT VTAgentur.SUMME1
     TO ASK 
   END IF 
 
 END IF 
 MOUSE ON 
 END SUB 
  
 













SUB SpezPflege(Laufzeit%,GBeitrag%,provsp%)
       IF Laufzeit% >= Pflegezeit.gekond THEN 
         _day% = DAY (letztePflege.KVERTRAG)
         _month% = MONTH (letztePflege.KVERTRAG)
         _year% = YEAR (letztePflege.KVERTRAG)
         IF _year% < 1980 THEN 
           _year% = 1980
           _day% = 1
           _month% = 1
         END IF 
 
           REM 060597 Neu Pflegeprovis nach Zahlweisen
           PflegeGez$ = "n"
           IF PflegeNachZahlw.gekond = "n" THEN 
             REM -- abhÑngig von Zahlungsweise im Vertrag --
             SELECT CASE ZW.KVERTRAG
             CASE 1
               _year% = _year% + 1
             CASE 2
               _month% = _month% + 6
               IF _month% > 12 THEN 
                 _year% = _year% + 1
                 _month% = _month% - 12
               END IF 
             CASE 4
               _month% = _month% + 3
               IF _month% > 12 THEN 
                 _year% = _year% + 1
                 _month% = _month% - 12
               END IF 
             CASE 6
               _month% = _month% + 2
               IF _month% > 12 THEN 
                 _year% = _year% + 1
                 _month% = _month% - 12
               END IF 
             CASE 12
               _month% = _month% + 1
               IF _month% > 12 THEN 
                 _year% = _year% + 1
                 _month% = _month% - 12
               END IF 
             CASE 0
               _year% = 2100
             END SELECT 
             nextpfl% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
             REM 060597 klÑren wozu ?
             IF ZW.KVERTRAG = 0 AND letzteProvi.KVERTRAG < 1 THEN 
               REM 150597
               REM prov% = (((Beitrag.KVERTRAG * ZW.KVERTRAG) / 100) * PflegeProvi.gekond)
               provsp% = (((GBeitrag%) / 100) * Prozente.spezkond)
               PflegeGez$ = "j"
               pflege% = 1
               sr% = 0
               Haftung% = 0
             ELSE 
               IF nextpfl% <= cdate% THEN 
                 REM 150597
                 REM prov% = (((Beitrag.KVERTRAG * ZW.KVERTRAG) / 100) * PflegeProvi.gekond)
                 provsp% = (((GBeitrag%) / 100) * Prozente.spezkond)
                 PflegeGez$ = "j"
                 pflege% = 1
                 sr% = 0
                 Haftung% = 0
               END IF 
             END IF 
           ELSE 
             REM -- AbhÑngig von Zahlweise in GEKOND --
             _month% = _month% + PflegeZW.GEKOND
             IF _month% > 12 THEN 
               _year% = _year% + 1
               _month% = _month% - 12
             END IF 
             nextpfl% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
             IF nextpfl% <= cdate% THEN 
               provsp% = (((GBeitrag% * ZW.KVERTRAG) / 100) * Prozente.spezkond))
               PflegeGez$ = "j"
               pflege% = 1
               sr% = 0
               Haftung% = 0
             END IF 
           END IF 
           REM 030697 IF PflegeGez$ = "j" THEN CALL RegProvis("Pflege: " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%)
           REM IF PflegeGez$ = "j" AND prov% <> 0 THEN CALL RegProvis("Pflege: " + VS_Nr.kvertrag,codema%,prov%,sr%,Haftung%,umrechnung.kvertrag,codew.kvertrag,waehrung.kvertrag)
         END IF 
       END IF 
 END SUB 




 REM ************ AFSK-HandStornierung *********************
SUB AFSKHandStor(codevt%)
   SELECT FIRST FILE "KVFAEL" INDEX codevt.kvfael
 
   SELECT KEY codevt% LOCK FILE "KVFAEL" INDEX codevt.kvfael
   SELECT FIRST FILE "MAADR" INDEX codema.maadr
   SELECT KEY codema.kvertrag FILE "MAADR" INDEX codema.maadr
   GVTAgentur$ = Nachname.maadr + "," + vorname.maadr
   GVTCodema% = codema.maadr
    CREATE DIALOG "LOGIN",0,0,193,79,"Stornotext","MS Sans Serif",8
    ADD DIALOG "LOGIN",4,0,0,193,58,0,""
    ADD DIALOG "LOGIN",9,5,11,20,22,2
    ADD DIALOG "LOGIN",5,33,11,139,9,0,"Bitte geben Sie hier "
    ADD DIALOG "LOGIN",5,33,20,68,10,0,"den Stornotext ein."
    ADD DIALOG "LOGIN",5,33,31,82,12,0,"Text: Storno wegen..."
    ADD DIALOG "LOGIN",6,33,41,149,11,0,0,txt$,15
    ADD DIALOG "LOGIN",1,38,61,50,15,1,"&OK",1,1
    REM ADD DIALOG "LOGIN",1,89,61,50,15,0,"&Abbruch",0,0
    DIALOG "LOGIN",req%
    REMOVE DIALOG ALL 
             IF gez_Abschlu·.kvfael = "j" THEN 
               REM es wurde Provision gezahlt
               REM CALL Fehler("zu wenig gezahlter Beitrag","")
               
               SELECT FIRST FILE "buchung1" INDEX codevt.buchung1
               SELECT KEY codevt.kvfael FILE "buchung1" INDEX codevt.buchung1
               REM 12112001
               REM also beim rÅckbuchen mÅ·te zuerst die VMProv mit negativem Wert der Fa. 
               REM gutgeschrieben werden und es mÅ·te der erste Minusbetrag auf pos Betrag 
               REM gesetzt werden
               REM dann die Buchungen der MA einsammeln und mit negativem Vorzeichen dazu 
               REM Buchungssatz erstellen und in kvfael -> TgezProvAnz=0
               REM 
               SELECT FIRST FILE "buchung1" INDEX codebu.buchung1
               SELECT KEY codebu.kvfael FILE "buchung1" INDEX codebu.buchung1
               REM ma%=Firma
               ma% = codema.buchung1
               DIM gez%(100,2)
               SELECT FIRST FILE "buchung1" INDEX codevt.buchung1
               SELECT KEY codevt.kvfael FILE "buchung1" INDEX codevt.buchung1
               remark$ = "Storno wegen " + txt$
               i1211% = 0
               WHILE NOT EOF ("buchung1") AND codevt.buchung1 = codevt.kvfael
                 IF codema.buchung1 <> ma% THEN 
                   gez%(i1211%,0) = codema.buchung1
                   gez%(i1211%,1) = betrag.buchung1
                   i1211% = i1211% + 1
                 END IF 
                 SELECT NEXT FILE "buchung1" INDEX codevt.buchung1
               WEND 
               SELECT FIRST FILE "buchung1" INDEX codevt.buchung1
               SELECT KEY codevt.kvfael FILE "buchung1" INDEX codevt.buchung1
               REM CALL Fehler("Analyse auf zu stornierende Zahlungen wegen fehlendem Zahlungseingang!","")
               WHILE NOT EOF ("buchung1") AND codevt.buchung1 = codevt.kvfael
                 IF codema.buchung1 = ma% AND erstz% = 0 THEN 
                   IF buchungstext.buchung1 LIKE "Erstz*" OR buchungstext.buchung1 LIKE "*Erstz*" THEN 
                     provi% = vmprov.kvfael
                     sr% = 0
                     Haftung% = 0
                     datumz% = TODAY 
                     fÑlligkeit% = 0
                     euro1% = umrechnung.kvertrag
                     waehr1$ = waehrung.kvertrag
                     zein% = 0
                     remark2$ = ""
                     gez_Abschlu·.kvfael = "n"
                     codebu.buchung1 = 0
                     erledigt.kvfael = "n"
                     abserledigt.kvfael = "n"
                     TgezProvAnz.kvfael = 0
                     autokuend.kvfael = "j"
                     STORE FILE "KVFAEL"
                     UNLOCK CURRENT FILE "KVFAEL"
                     REM remark$ = "Courtage " + VS_nr.kvertrag + " Storno"
                     remark$ = "Storno wegen " + txt$
                     vertrprov% = 0
                     vsumC% = 0
                     vsumA% = 0
                     vsumPP% = 0
                     CALL StoRegProv(remark$,ma%,provi%,sr%,Haftung%,datumz%,fÑlligkeit%,euro1%,codew%,waehr1$,zein%,remark2$)
                     erstz% = erstz% + 1
                   ELSE 
                   END IF 
                 END IF 
                 SELECT NEXT FILE "buchung1" INDEX codevt.buchung1
               WEND 
               IF i1211% > 0 THEN 
                 REM remark$ = "Courtage " + VS_nr.kvertrag + " Storno"
                 remark$ = "Storno wegen " + txt$
                 FOR i% = 0 TO i1211% - 1
                   provi% = gez%(i%,1) * - 1
                   ma% = gez%(i%,0)
                   sr% = 0
                   Haftung% = 0
                   datumz% = TODAY 
                   fÑlligkeit% = 0
                   euro1% = umrechnung.kvertrag
                   waehr1$ = waehrung.kvertrag
                   zein% = 0
                   remark2$ = ""
                   vertrprov% = 0
                   vsumC% = 0
                   vsumA% = 0
                   vsumPP% = 0
                   CALL StoRegProv(remark$,ma%,provi%,sr%,Haftung%,datumz%,fÑlligkeit%,euro1%,codew%,waehr1$,zein%,remark2$)
                 NEXT i%
               END IF 
             END IF 
             CALL Fehler("Storno beendet!","")
 END SUB 


SUB Vorschuss()
     GAdrDat$ = "ADRESSEN"
     GConDat$ = "CONNECT"
     GTelDat$ = "TELEFON"
     GAkquiDat$ = "AKQUISE"
     GDokDat$ = "DOKUMENT"
     GADRStat$ = "ADRSTAT"
 
 
 
 IF PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
   IF NOT OPEN ("buchung1") THEN CALL DFile(3,"Buchung1" + _fpw$)
   SELECT WHERE FILE "Buchung1"
 ELSE 
   IF NOT OPEN ("buchung") THEN CALL DFile(3,"Buchung" + _fpw$)
   SELECT WHERE FILE "Buchung"
 END IF 
 CALL DFile(3,"fs24imp" + _fpw$)
 CALL DFile(2,"OFFICE\adrstat" + _fpw$)
 SELECT WHERE FILE "adrstat"
 CALL DFile(2,"OFFICE\adrgrup" + _fpw$)
 SELECT WHERE FILE "adrgrup"
 CALL DFile(3,"Kgeadr" + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 SELECT WHERE FILE "Sparten"
 CALL DFile(3,"geadr" + _fpw$):CALL DFile(3,"geadr2" + _fpw$)
 SELECT WHERE FILE "geadr"
 CALL DFile(3,"tarif" + _fpw$)
 SELECT WHERE FILE "tarif"
 CALL DFile(3,"maadr" + _fpw$)
 SELECT WHERE FILE "maadr"
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"mavorg" + _fpw$)
 SELECT WHERE FILE "maadrgru"
 CALL DFile(3,"kvertrag" + _fpw$)
 SELECT WHERE FILE "kvertrag"
 CALL DFile(3,"vprodukt" + _fpw$)
 SELECT WHERE FILE "vprodukt"
 CALL DFile(3,"tarif" + _fpw$)
 SELECT WHERE FILE "tarif"
 CALL DFile(3,"vorgang" + _fpw$)
 SELECT WHERE FILE "vorgang"
 CALL DFile(3,"vkond" + _fpw$)
 SELECT WHERE FILE "vkond"
 CALL DFile(3,"formular" + _fpw$)
 SELECT WHERE FILE "formular"
 CALL DFile(3,"spgruppe" + _fpw$)
 SELECT WHERE FILE "spgruppe"
 CALL DFile(3,"agdir" + _fpw$)
 
 CALL DFile(3,"KVEXEXP" + _fpw$)
 CALL DFile(3,"ZEINGAN1" + _fpw$)
 
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 SELECT WHERE FILE GAdrDat$
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 SELECT WHERE FILE GAkquiDat$
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 SELECT WHERE FILE "aktionen"
 CALL DFile(2,"OFFICE\" + GTelDat$ + _fpw$)
 SELECT WHERE FILE GTelDat$
 CALL DFile(2,"OFFICE\" + GDokDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GConDat$ + _fpw$)
 CALL DFile(2,"OFFICE\banken" + _fpw$)
 CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 
anf220620041: 
     CREATE DIALOG "STICHTAG",0,0,222,114,"Buchungsdatum","MS Sans Serif",8
     ADD DIALOG "STICHTAG",4,0,0,222,91,0,""
     ADD DIALOG "STICHTAG",9,6,9,23,24,2
     ADD DIALOG "STICHTAG",5,31,15,183,10,0,"Bitte geben Sie an, bis zu welchem Datum"
     ADD DIALOG "STICHTAG",5,31,25,183,10,0,"die VorschÅsse verarbeitet werden sollen:"
     ADD DIALOG "STICHTAG",6,94,72,42,12,0,0,CalcDate$,10
     ADD DIALOG "STICHTAG",5,30,74,58,10,0,"Vorschussdatum:"
     ADD DIALOG "STICHTAG",1,52,94,54,14,1,"&OK",1,1
     ADD DIALOG "STICHTAG",1,109,94,54,14,0,"&Abbrechen",0,0
     DIALOG "STICHTAG",req%
     REMOVE DIALOG "STICHTAG"
     IF req% <> 1 THEN GOTO end220620041
     IF DateOK%(CalcDate$) THEN 
       calcdate% = DAYS (CalcDate$)
       mm$ = LEFT$ ( DATE$ (caldate%,"mmyyyydd"),2)
     ELSE 
       CALL Fehler("Datum ist ungÅltig!","")
       GOTO anf220620041
     END IF 
 FILE "buchung1"
 INDEX QuickCode.buchung1
 FILE "maadr"
 INDEX vorschujn.maadr
 SELECT FIRST FILE "maadr" INDEX vorschujn.maadr
 SELECT KEY 1 FILE "maadr" INDEX vorschujn.maadr
 WHILE NOT EOF ("maadr") AND vorschujn.maadr = 1
   ma1% = codema.maadr
   IF ma1% = 200782 THEN 
     REM CALL Fehler(nachname.maadr,agenturnr.maadr)
   END IF 
   IF vorschuvon.maadr <> 0 THEN 
     IF vorschuvon.maadr > DAYS (calcdate$) THEN GOTO nextma220620041
   END IF 
   IF vorschubis.maadr <> 0 THEN 
     IF vorschubis.maadr < DAYS (calcdate$) THEN GOTO nextma220620041
   END IF 
   IF PROVSperreEig.maadr = "j" THEN GOTO nextma220620041
   codema% = codema.maadr
   qcode$ = STR$ (codema.maadr,"000000") + LEFT$ ( DATE$ (calcdate%,"yyyymmdd"),6) + "00"
   qcode1$ = STR$ (codema.maadr,"000000") + LEFT$ ( DATE$ (calcdate%,"yyyymmdd"),6)
   SELECT FIRST FILE "buchung1" INDEX QuickCode.buchung1
   SELECT KEY qcode$ FILE "buchung1" INDEX QuickCode.buchung1
   summe% = 0
   kzvsu% = 1
   REM berechnen, ob der MA mit seiner Provision nicht eine Obergrenze Åberschreitet
   WHILE NOT EOF ("Buchung1") AND LEFT$ (QuickCode.buchung1,12) = qcode1$
     IF vorschujn.buchung1 <> 1 AND Provision.buchung1 = "j" THEN 
       REM nur die DatensÑtze berÅcksichtigen, die tatsÑchlich eine Provision enthalten
       summe% = summe% + betrag.buchung1 + vsv.buchung1
     END IF 
     IF summe% > VorschuMax.maadr THEN 
       kzvsu% = 0
       SELECT LAST FILE "buchung1" INDEX QuickCode.buchung1
     END IF 
     SELECT NEXT FILE "buchung1" INDEX QuickCode.buchung1
   WEND 
   IF kzvsu% = 1 THEN 
     REM MA bekommt weniger als xy Grenze an Provision, jetzt testen ob er vorschu·fÑhige 
     REM VertrÑge hat
     moeglvorschu% = VorschuMax.maadr - summe%
     FILE "kvertrag"
     INDEX codema.kvertrag
     SELECT FIRST LOCK FILE "kvertrag"
     SELECT KEY codema% LOCK FILE "kvertrag" INDEX codema.kvertrag
     ok% = - 1
     WHILE NOT EOF ("KVERTRAG") AND codema.kvertrag = codema% AND ok% = - 1
       REM festellen, ob es vorschu·fÑhige VertrÑge gibt, 
       IF kzv.kvertrag = "j" AND fs24vors.kvertrag = 0 THEN 
         REM jetzt kann theoretisch beliehen werden,wenn zu dem Vertrag
         REM noch keine Buchung existiert
         IF NOT EXISTS (lfdnr.kvertrag,codevt.zeingan1) THEN 
           weitermach% = 1
         ELSE 
           weitermach% = 0
         END IF 
         IF NOT EXISTS (lfdnr.kvertrag,codevt.buchung1) AND weitermach% = 1 THEN 
           REM CALL Fehler("Da ist was","")
           pvor% = (fs24maklprov.kvertrag * vorschuproz.maadr) / 100
           IF pvor% >= moeglvorschu% THEN 
             pvor% = moeglvorschu%
             ok% = 0
           ELSE 
              moeglvorschu% = moeglvorschu% - pvor%
           END IF 
           fs24vors.kvertrag = pvor%
           fs24Datvors.kvertrag = TODAY 
           STORE FILE "KVERTRAG"
           SELECT FIRST FILE "sparten" INDEX codeva.sparten
           SELECT KEY codeva.kvertrag FILE "sparten" INDEX codeva.sparten
           SELECT FIRST FILE "Adressen" INDEX codeku.adressen
           SELECT KEY codeku.kvertrag FILE "Adressen" INDEX codeku.adressen
           SELECT FIRST FILE "GEADR" INDEX codege.geadr
           SELECT KEY codege.kvertrag FILE "GEADR" INDEX codege.geadr
           REM Erzeugung Vorschuss-Buchung
           SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
           SELECT KEY codeku.kvertrag FILE "ADRESSEN" INDEX codeku.adressen
           BLANK FILE "Buchung1"
           CodeBU.buchung1 = SER ("buchung1",1)
           Sparte.buchung1 = Sparte.SPARTEN
           IF LTRIM$ (fs24Satz_ID2.kvertrag) <> "" THEN 
             FS24Satz_ID.buchung1 = FS24Satz_ID2.kvertrag
           ELSE 
             FS24Satz_ID.buchung1 = FS24Satz_ID.kvertrag
           END IF 
           FÑlligkeit.buchung1 = TODAY 
           Nachname.buchung1 = Nachname.Adressen
           Vorname.buchung1 = Vorname.Adressen
           Gesellschaft.buchung1 = Gesellschaft.GEADR
           vs_Beginn.buchung1 = vs_beginn.kvertrag
           Provision.buchung1 = ""
           codeku.buchung1 = codeku.kvertrag
           CodeMA.buchung1 = ma1%
           codevt.buchung1 = lfdnr.kvertrag
           Buchungstext.buchung1 = "Vorschuss: " + VS_NR.kvertrag
           VTAgentur.buchung1 = LEFT$ (Nachname.maadr + "," + vorname.maadr,100)
           Datum.buchung1 = TODAY 
           sbetr% = pvor%
           Betrag.buchung1 = pvor%
           VTCodema.buchung1 = ma1%
           Codew.buchung1 = 3
           umrechnung.buchung1 = 1
           waehrung.buchung1 = "EUR"
           BetragEU.buchung1 = VAL ( STR$ (Betrag.buchung1 / umrechnung.buchung1,"99999999.00"))
           vtagentur.buchung1 = LEFT$ ( LTRIM$ (nachname.maadr) + ", " + LTRIM$ (vorname.maadr) + ", " + LTRIM$ (Agenturnr.maadr) + " , Stufe:" + STR$ (stufe.maadr,"000"),100)
           agentur.buchung1 = LEFT$ ( LTRIM$ (nachname.maadr) + ", " + LTRIM$ (vorname.maadr) + ", " + LTRIM$ (Agenturnr.maadr) + " , Stufe:" + STR$ (stufe.maadr,"000"),100)
           QuickCode.BUCHUNG1 = STR$ (CodeMA.BUCHUNG1,"000000") + DATE$ (Datum.BUCHUNG1,"yyyymm0d")
           QCodeMAPROD.buchung1 = STR$ (CodeMA.buchung1,"000000") + VSNRPack$(Gesellschaft.buchung1) + VSNRPack$(Sparte.buchung1)
           Workstation.Buchung1 = Workstation%
           QWoNo.Buchung1 = STR$ (Workstation%,"000000") + STR$ (CodeBu.Buchung1,"000000")
           RecStatus.Buchung1 = "c"
           CALL BU1DMEuro(umrechnung.buchung1)
           buday.buchung1 = DAY (Datum.buchung1)
           vorschujn.buchung1 = 1
           QCodeMAVT.buchung1 = STR$ (codema.buchung1,"000000") + STR$ (codevt.buchung1,"000000")
         IF gebuchtjn.buchung1 <> 1 THEN gebuchtjn.buchung1 = 0
         gebuchtJNDat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + DATE$ (datum.buchung1,"yyyymm0d")
         gebuchtJNMADat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + STR$ (Codema.buchung1,"000000") + DATE$ (datum.buchung1,"yyyymm0d")
           STORE FILE "Buchung1"
           FILE "kvertrag"
           SELECT CURRENT LOCK 
           FS24DatVors.kvertrag = TODAY 
           FS24Vors.kvertrag = pvor%
           STORE FILE "kvertrag"
           SELECT KEY ma1% LOCK FILE "maadr" INDEX codema.maadr
           AuszahlAB.maadr = AuszahlAB.maadr + sbetr%
           AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / euro1%,"999999999.00"))
           zusAuszahl.maadr = zusAuszahl.maadr + sbetr%
           zusAuszahlEU.maadr = VAL ( STR$ (zusAuszahl.maadr / euro1%,"999999999.00"))
           aktZusB.maadr = aktZusB.maadr + sbetr%
           aktZusBEU.maadr = VAL ( STR$ (aktZusB.maadr / euro1%,"999999999.00"))
           STORE FILE "maadr"
           UNLOCK CURRENT FILE "maadr"
           CALL ZentrKTO(ma1%,datumz%,sbetr%,0,3,1,"EUR",PSpAll$,PSpAllSeit%,PROVSpEig$,PSpESeit%,1,zusatz%,0)
 
         END IF 
       END IF 
       SELECT NEXT LOCK FILE "KVERTRAG"
     WEND 
   END IF 
nextma220620041: 
   SELECT NEXT FILE "MAADR" INDEX vorschujn.maadr
 WEND 
end220620041: 
 END SUB 
 
 
 
SUB Vorschuss1()
     GAdrDat$ = "ADRESSEN"
     GConDat$ = "CONNECT"
     GTelDat$ = "TELEFON"
     GAkquiDat$ = "AKQUISE"
     GDokDat$ = "DOKUMENT"
     GADRStat$ = "ADRSTAT"
 
 
 
 IF PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
   IF NOT OPEN ("buchung1") THEN CALL DFile(3,"Buchung1" + _fpw$)
   SELECT WHERE FILE "Buchung1"
 ELSE 
   IF NOT OPEN ("buchung") THEN CALL DFile(3,"Buchung" + _fpw$)
   SELECT WHERE FILE "Buchung"
 END IF 
 CALL DFile(3,"fs24imp" + _fpw$)
 CALL DFile(2,"OFFICE\adrstat" + _fpw$)
 SELECT WHERE FILE "adrstat"
 CALL DFile(2,"OFFICE\adrgrup" + _fpw$)
 SELECT WHERE FILE "adrgrup"
 CALL DFile(3,"Kgeadr" + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 SELECT WHERE FILE "Sparten"
 CALL DFile(3,"geadr" + _fpw$):CALL DFile(3,"geadr2" + _fpw$)
 SELECT WHERE FILE "geadr"
 CALL DFile(3,"tarif" + _fpw$)
 SELECT WHERE FILE "tarif"
 CALL DFile(3,"maadr" + _fpw$)
 SELECT WHERE FILE "maadr"
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"mavorg" + _fpw$)
 SELECT WHERE FILE "maadrgru"
 CALL DFile(3,"kvertrag" + _fpw$)
 SELECT WHERE FILE "kvertrag"
 CALL DFile(3,"vprodukt" + _fpw$)
 SELECT WHERE FILE "vprodukt"
 CALL DFile(3,"tarif" + _fpw$)
 SELECT WHERE FILE "tarif"
 CALL DFile(3,"vorgang" + _fpw$)
 SELECT WHERE FILE "vorgang"
 CALL DFile(3,"vkond" + _fpw$)
 SELECT WHERE FILE "vkond"
 CALL DFile(3,"formular" + _fpw$)
 SELECT WHERE FILE "formular"
 CALL DFile(3,"spgruppe" + _fpw$)
 SELECT WHERE FILE "spgruppe"
 CALL DFile(3,"agdir" + _fpw$)
 
 CALL DFile(3,"KVEXEXP" + _fpw$)
 CALL DFile(3,"ZEINGAN1" + _fpw$)
 
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 SELECT WHERE FILE GAdrDat$
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 SELECT WHERE FILE GAkquiDat$
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 SELECT WHERE FILE "aktionen"
 CALL DFile(2,"OFFICE\" + GTelDat$ + _fpw$)
 SELECT WHERE FILE GTelDat$
 CALL DFile(2,"OFFICE\" + GDokDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GConDat$ + _fpw$)
 CALL DFile(2,"OFFICE\banken" + _fpw$)
 CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 
anf220620041: 
     CREATE DIALOG "STICHTAG",0,0,222,114,"Buchungsdatum","MS Sans Serif",8
     ADD DIALOG "STICHTAG",4,0,0,222,91,0,""
     ADD DIALOG "STICHTAG",9,6,9,23,24,2
     ADD DIALOG "STICHTAG",5,31,15,183,10,0,"Bitte geben Sie an, bis zu welchem Datum"
     ADD DIALOG "STICHTAG",5,31,25,183,10,0,"die VorschÅsse verarbeitet werden sollen:"
     ADD DIALOG "STICHTAG",6,94,72,42,12,0,0,CalcDate$,10
     ADD DIALOG "STICHTAG",5,30,74,58,10,0,"Vorschussdatum:"
     ADD DIALOG "STICHTAG",1,52,94,54,14,1,"&OK",1,1
     ADD DIALOG "STICHTAG",1,109,94,54,14,0,"&Abbrechen",0,0
     DIALOG "STICHTAG",req%
     REMOVE DIALOG "STICHTAG"
     IF req% <> 1 THEN GOTO end220620041
     IF DateOK%(CalcDate$) THEN 
       calcdate% = DAYS (CalcDate$)
       mm$ = LEFT$ ( DATE$ (caldate%,"mmyyyydd"),2)
     ELSE 
       CALL Fehler("Datum ist ungÅltig!","")
       GOTO anf220620041
     END IF 
 FILE "buchung1"
 INDEX QuickCode.buchung1
 FILE "maadr"
 REM INDEX vorschujn.maadr
 INDEX codema.maadr
 REM SELECT FIRST FILE "maadr" INDEX vorschujn.maadr
 REM SELECT KEY 1 FILE "maadr" INDEX vorschujn.maadr
 REM WHILE NOT EOF ("maadr") AND vorschujn.maadr = 1
 SELECT FIRST FILE "maadr" INDEX codema.maadr
 WHILE NOT EOF ("maadr")
   ma1% = codema.maadr
   kzvsu% = 1
   REM CALL Fehler(nachname.maadr,agenturnr.maadr)
   IF agenturnr.maadr LIKE "1371" THEN 
     REM CALL Fehler(nachname.maadr,agenturnr.maadr)
   END IF 
   IF vorschuvon.maadr <> 0 THEN 
     IF vorschuvon.maadr > DAYS (calcdate$) THEN kzvsu% = 0
   END IF 
   IF vorschubis.maadr <> 0 THEN 
     IF vorschubis.maadr < DAYS (calcdate$) THEN kzvsu% = 0
   END IF 
   IF PROVSperreEig.maadr = "j" THEN GOTO kzvsu% = 0
   codema% = codema.maadr
   qcode$ = STR$ (codema.maadr,"000000") + LEFT$ ( DATE$ (calcdate%,"yyyymmdd"),6) + "00"
   qcode1$ = STR$ (codema.maadr,"000000") + LEFT$ ( DATE$ (calcdate%,"yyyymmdd"),6)
   q1$ = LEFT$ ( DATE$ (calcdate%,"yyyymmdd"),6)
   SELECT FIRST FILE "buchung1" INDEX QuickCode.buchung1
   SELECT KEY qcode$ FILE "buchung1" INDEX QuickCode.buchung1
   summe% = 0
   
   REM berechnen, was der Mitarbeiter an Provision bekommt
   WHILE NOT EOF ("Buchung1") AND LEFT$ (QuickCode.buchung1,12) = qcode1$
     IF vorschujn.buchung1 <> 1 AND Provision.buchung1 = "j" THEN 
       REM nur die DatensÑtze berÅcksichtigen, die tatsÑchlich eine Provision enthalten
       summe% = summe% + betrag.buchung1 + vsv.buchung1
     END IF 
     SELECT NEXT FILE "buchung1" INDEX QuickCode.buchung1
   WEND 
 
     REM jetzt testen ob er vorschu·fÑhige VertrÑge hat
     Maklerprovsum% = 0
     FILE "kvertrag"
     INDEX codema.kvertrag
     SELECT FIRST LOCK FILE "kvertrag"
     SELECT KEY codema% FILE "kvertrag" INDEX codema.kvertrag
     ok% = - 1
     anzvertrvo% = 0
     anzvertrges% = 0
     ii% = 0
     WHILE NOT EOF ("KVERTRAG") AND codema.kvertrag = codema% AND ok% = - 1
       anzvertrges% = anzvertrges% + 1
       REM festellen, ob es vorschu·fÑhige VertrÑge gibt, 
       REM aber die mÅssen Antrag oder lebend sein und
       REM Antragsdatum in dem zu testenden Monat
       IF lfdnr.kvertrag = 37803 THEN 
         REM CALL Fehler("Vorschuss fÅr 37803","")
       END IF 
       IF kzv.kvertrag = "j" THEN 
         IF codevstatus.kvertrag = 1 OR codevstatus.kvertrag = 12 THEN 
           antrag$ = LEFT$ ( DATE$ (Antragsdatum.kvertrag,"yyyymmdd"),6)
           IF antrag$ = q1$ THEN 
             anzvertrvo% = anzvertrvo% + 1
             weitermach% = 1
             Maklerprovsum% = Maklerprovsum% + fs24maklprov.kvertrag
           END IF 
         END IF 
       END IF 
       SET STATUS "feststellen vorschu·fÑhiger VertrÑge " + Agenturnr.maadr + " " + nachname.maadr + " " + STR$ (anzvertrges%,",9999999")
       SELECT NEXT FILE "KVERTRAG"
     WEND 
nextma220620041: 
   REM MakProvSum.maadr = Maklerprovsum%
   REM ProvSum.maadr = summe%
   REM CALL Fehler("Maklerprovsum: " + STR$ (Maklerprovsum%,",99999999.00"),"Provisionssumme: " + STR$ (summe%,",99999999.00"))
   CALL SpezStoreMA(Maklerprovsum%,summe%,calcdate%,anzvertrvo%,anzvertrges%,codema%,kzvsu%)
   Maklerprovsum% = 0
   summe% = 0
   SELECT NEXT FILE "MAADR" INDEX vorschujn.maadr
 WEND 
 CALL Fehler("Vorschussberechnung BEENDET!","")
end220620041: 
 END SUB 
 
 REM *************************************************************************************************
 REM                        Kredite hochrechnen
 REM *************************************************************************************************

SUB Kredit()
     GAdrDat$ = "ADRESSEN"
     GConDat$ = "CONNECT"
     GTelDat$ = "TELEFON"
     GAkquiDat$ = "AKQUISE"
     GDokDat$ = "DOKUMENT"
     GADRStat$ = "ADRSTAT"
 
 
 
 IF PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
   IF NOT OPEN ("buchung1") THEN CALL DFile(3,"Buchung1" + _fpw$)
   SELECT WHERE FILE "Buchung1"
 ELSE 
   IF NOT OPEN ("buchung") THEN CALL DFile(3,"Buchung" + _fpw$)
   SELECT WHERE FILE "Buchung"
 END IF 
 REM CALL DFile(3,"fs24imp" + _fpw$)
 CALL DFile(2,"OFFICE\adrstat" + _fpw$)
 SELECT WHERE FILE "adrstat"
 CALL DFile(2,"OFFICE\adrgrup" + _fpw$)
 SELECT WHERE FILE "adrgrup"
 CALL DFile(3,"Kgeadr" + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 SELECT WHERE FILE "Sparten"
 CALL DFile(3,"geadr" + _fpw$):CALL DFile(3,"geadr2" + _fpw$)
 SELECT WHERE FILE "geadr"
 CALL DFile(3,"tarif" + _fpw$)
 SELECT WHERE FILE "tarif"
 CALL DFile(3,"maadr" + _fpw$)
 SELECT WHERE FILE "maadr"
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"mavorg" + _fpw$)
 SELECT WHERE FILE "maadrgru"
 CALL DFile(3,"kvertrag" + _fpw$)
 SELECT WHERE FILE "kvertrag"
 CALL DFile(3,"vprodukt" + _fpw$)
 SELECT WHERE FILE "vprodukt"
 CALL DFile(3,"tarif" + _fpw$)
 SELECT WHERE FILE "tarif"
 CALL DFile(3,"vorgang" + _fpw$)
 SELECT WHERE FILE "vorgang"
 CALL DFile(3,"vkond" + _fpw$)
 SELECT WHERE FILE "vkond"
 CALL DFile(3,"formular" + _fpw$)
 SELECT WHERE FILE "formular"
 CALL DFile(3,"spgruppe" + _fpw$)
 SELECT WHERE FILE "spgruppe"
 CALL DFile(3,"agdir" + _fpw$)
 
 CALL DFile(3,"KVEXEXP" + _fpw$)
 CALL DFile(3,"ZEINGAN1" + _fpw$)


 CALL DFile(3,"MAKREDIT" + _fpw$)
 CALL DFile(3,"MAKREBUC" + _fpw$)
 
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 SELECT WHERE FILE GAdrDat$
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 SELECT WHERE FILE GAkquiDat$
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 SELECT WHERE FILE "aktionen"
 CALL DFile(2,"OFFICE\" + GTelDat$ + _fpw$)
 SELECT WHERE FILE GTelDat$
 CALL DFile(2,"OFFICE\" + GDokDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GConDat$ + _fpw$)
 CALL DFile(2,"OFFICE\banken" + _fpw$)
 CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 
anf260120051: 
     CREATE DIALOG "STICHTAG",0,0,222,114,"Krediterzeugung bis zum","MS Sans Serif",8
     ADD DIALOG "STICHTAG",4,0,0,222,91,0,""
     ADD DIALOG "STICHTAG",9,6,9,23,24,2
     ADD DIALOG "STICHTAG",5,31,15,183,10,0,"Bitte geben Sie an, mit welchem Datum"
     ADD DIALOG "STICHTAG",5,31,25,183,10,0,"die Kredite/Raten DatensÑtze erzeugt"
     ADD DIALOG "STICHTAG",5,31,35,183,10,0,"werden sollen. Die Monatsangabe des Datums"
     ADD DIALOG "STICHTAG",5,31,45,183,10,0,"bestimmt, fÅr welchen Monat die Daten"
     ADD DIALOG "STICHTAG",5,31,55,183,10,0,"erzeugt werden"
     ADD DIALOG "STICHTAG",6,94,72,42,12,0,0,CalcDate$,10
     ADD DIALOG "STICHTAG",5,30,74,58,10,0,"Datum:"
     ADD DIALOG "STICHTAG",1,52,94,54,14,1,"&OK",1,1
     ADD DIALOG "STICHTAG",1,109,94,54,14,0,"&Abbrechen",0,0
     DIALOG "STICHTAG",req%
     REMOVE DIALOG "STICHTAG"
     IF req% <> 1 THEN GOTO en260120051
     IF DateOK%(CalcDate$) THEN 
       calcdate% = DAYS (CalcDate$)
       mm$ = LEFT$ ( DATE$ (calcdate%,"mmyyyydd"),2)
     ELSE 
       CALL Fehler("Datum ist ungÅltig!","")
       GOTO anf260120051
     END IF 

 FILE "makrebuc"
 CALL Fehler("Es werden jetzt zunÑchst mal die jenigen KrediteinzeldatensÑtze rÅckgerechnet und gelîscht die noch nicht als gebucht gekennzeichnet wurden!","")
 FILE "maadr"
 REM INDEX vorschujn.maadr
 INDEX codema.maadr
 REM SELECT FIRST FILE "maadr" INDEX vorschujn.maadr
 REM SELECT KEY 1 FILE "maadr" INDEX vorschujn.maadr
 REM WHILE NOT EOF ("maadr") AND vorschujn.maadr = 1
 FILE "makredit"
 INDEX codema.makredit
 FILE "makrebuc"
 INDEX codekre.makrebuc
 SELECT FIRST FILE "maadr" INDEX codema.maadr
 i% = 0

 WHILE NOT EOF ("maadr")
   SET STATUS agenturnr.maadr + " " + nachname.maadr
   ma1% = codema.maadr
   IF EXISTS (ma1%,codema.makredit) THEN 
     SELECT FIRST FILE "makredit" INDEX codema.makredit
     SELECT KEY ma1% LOCK FILE "makredit" INDEX codema.makredit
     WHILE NOT EOF ("makredit") AND codema.makredit = ma1%
       _codekre% = codekre.makredit
       IF EXISTS (_codekre%,codekre.makrebuc) THEN 
         SELECT FIRST FILE "makrebuc" INDEX codekre.makrebuc
         SELECT KEY _codekre% LOCK FILE "makrebuc" INDEX codekre.makrebuc
         WHILE NOT EOF ("makrebuc") AND codekre.makrebuc = _codekre%
           i% = i% + 1
           IF gebucht.makrebuc <> "J" THEN 
             SET STATUS agenturnr.maadr + " " + nachname.maadr + " " + STR$ (i%,"999999")
             _codebuc% = codebuc.makrebuc
             IF art.makrebuc = 0 THEN 
               REM Erstzahlung
               gezErstZahlung.makredit = "N"

               bisjetztgezahlt.makredit = bisjetztgezahlt.makredit - ErsteZahlung.makredit
               nochausstehend.makredit = nochausstehend.makredit + ErsteZahlung.makredit
               gezahlterBetrag.makredit = GezBetragOld.makredit
               GezahltAm.makredit = GezahltAmOld.makredit
             END IF 
             IF art.makrebuc = 1 THEN 
               REM Rate
               bisjetztgezahlt.makredit = bisjetztgezahlt.makredit - Rate.makredit
               IF RateOrKredit.makredit = 1 THEN nochausstehend.makredit = nochausstehend.makredit + Rate.makredit
               gezahlterBetrag.makredit = gezahlterBetrag.makredit - Rate.makredit
               GezahltAm.makredit = GezahltAmOld.makredit
               gezahlterBetrag.makredit = GezBetragOld.makredit
               AnzahlRatengez.makredit = AnzahlRatengez.makredit - 1
               IF RateOrKredit.makredit = 1 THEN AnzahlRatenAust.makredit = AnzahlRatenAust.makredit + 1
             END IF 
             IF art.makrebuc = 2 THEN 
               REM letzte Zahlung
               gezletzZahlung.makredit = "N"
 
               bisjetztgezahlt.makredit = bisjetztgezahlt.makredit - LetzteZahlung.makredit
               nochausstehend.makredit = nochausstehend.makredit + LetzteZahlung.makredit
               gezahlterBetrag.makredit = gezahlterBetrag.makredit - LetzteZahlung.makredit
               GezahltAm.makredit = GezahltAmOld.makredit
               gezahlterBetrag.makredit = GezBetragOld.makredit
  
             END IF 
             CALL QuickStore("makredit")
           END IF 
           SELECT NEXT LOCK FILE "makrebuc" INDEX codekre.makrebuc
         WEND 
       END IF 
       SELECT NEXT LOCK FILE "makredit" INDEX codema.makredit
     WEND 
     MOUSE OFF 
     SET STATUS "lîschen der nicht gebuchten DatensÑtze"
     REMOVE FROM FILE "makrebuc" WHERE gebucht.makrebuc <> "J"
   END IF 
   FILE "maadr"
   SELECT NEXT FILE "maadr" INDEX codema.maadr
 WEND 
 REQUEST "RÅcksetzen fertig!","",2
 REQUEST "Erzeugen der MonatsdatensÑtze der Kredite","",2
 FILE "makredit"
 INDEX codema.makredit
 FILE "makrebuc"
 INDEX codekre.makrebuc
 SELECT FIRST LOCK FILE "maadr" INDEX codema.maadr
 i% = 0
 moja$ = LEFT$ ( DATE$ (calcdate%,"yyyymm0d"),6)
 WHILE NOT EOF ("maadr")
   SET STATUS agenturnr.maadr + " " + nachname.maadr
   ma1% = codema.maadr
   IF EXISTS (ma1%,codema.makredit) THEN 
     SELECT FIRST FILE "makredit" INDEX codema.makredit
     SELECT KEY ma1% LOCK FILE "makredit" INDEX codema.makredit
     kreditmon% = 0
     kreditsum% = 0
     WHILE NOT EOF ("makredit") AND codema.makredit = ma1%
       CALL Fehler("1371",Sache.makredit)
       IF agenturnr.maadr LIKE "1371" THEN 
         REM CALL Fehler("1371",Sache.makredit)
       END IF 
       kreditsum% = kreditsum% + Kreditsumme.makredit
       _codekre% = codekre.makredit
       REM IF EXISTS (_codekre%,codekre.makrebuc) THEN 
         REM SELECT FIRST FILE "makrebuc" INDEX codekre.makrebuc
         REM SELECT KEY _codekre% LOCK FILE "makrebuc" INDEX codekre.makrebuc
         REM WHILE NOT EOF ("makrebuc") AND codekre.makrebuc = _codekre%
           REM IF gebucht.makrebuc <> "J" THEN 
             SET STATUS agenturnr.maadr + " " + nachname.maadr + " " + STR$ (i%,"999999")
             REM _codebuc% = codebuc.makrebuc
             mojaver$ = LEFT$ ( DATE$ (ErstzahlungAm.makredit,"yyyymm0d"),6)
             IF gezErstZahlung.makredit <> "J" AND moja$ = mojaver$ THEN 
               REM Erstzahlung
               art% = 0
               GezahltAmOld.makredit = GezahltAm.makredit
               GezahltAm.makredit = calcdate%
               GezBetragOld.makredit = gezahlterBetrag.makredit
               gezahlterBetrag.makredit = ErsteZahlung.makredit
               gezErstZahlung.makredit = "J"
 
               bisjetztgezahlt.makredit = bisjetztgezahlt.makredit + ErsteZahlung.makredit
               REM nochausstehend.makredit = nochausstehend.makredit - ErsteZahlung.makredit
               nochausstehend.makredit = Kreditsumme.makredit - ErsteZahlung.makredit
               AnzahlRatenAust.makredit = AnzahlMonate.makredit - 1
               gezahlterBetrag.makredit = ErsteZahlung.makredit
               AnzahlRatengez.makredit = 1
               CALL QuickStore("makredit")

               BLANK FILE "MAKreBuc"
               SET STATUS "Datensatz neu angelegt..."
               aa% = CopyRecord%("MAKREDIT","MAKREBUC")
               CodeBUC.MAKreBuc = SER ("MAKreBUC",1)
               _CodeBUC% = CodeBUC.MAKreBuc
               art.makrebuc = art%
               Codema.MAKredit = codema.makredit
               gezahlterBetrag.makrebuc = ErsteZahlung.makredit
               GezahltAm.makrebuc = calcdate%
               
               CALL QuickStore ("makrebuc")
             END IF 
             RatenBis% = RatenBis.makredit
             RatenVom% = RatenVom.makredit
             IF RatenBis.makredit < 1 THEN RatenBis% = DAYS ("31.12.2999")
             IF RatenVom.makredit < 1 THEN RatenVom% = DAYS ("01.01.0001")
             IF calcdate% >= RatenVom% AND calcdate% <= RatenBis% THEN 
               REM Rate
               art% = 1
               GezahltAmOld.makredit = GezahltAm.makredit
               GezahltAm.makredit = calcdate%
               GezBetragOld.makredit = gezahlterBetrag.makredit
               REM gezahlterBetrag.makredit = Rate.makredit

               bisjetztg% = bisjetztgezahlt.makredit
               bisjetztgezahlt.makredit = bisjetztgezahlt.makredit + Rate.makredit
               bisjetztg% = bisjetztgezahlt.makredit
               IF Kreditsumme.makredit <> 0 AND RateOrKredit.makredit = 1 THEN 
                 IF nochausstehend.makredit = 0 THEN 
                   nochausstehend.makredit = Kreditsumme.makredit - Rate.makredit
                   AnzahlRatenAust.makredit = AnzahlMonate.makredit
                   AnzahlRatengez.makredit = 1
                 ELSE 
                   nochausstehend.makredit = nochausstehend.makredit - Rate.makredit
                   AnzahlRatenAust.makredit = AnzahlRatenAust.makredit - 1
                   AnzahlRatengez.makredit = AnzahlRatengez.makredit + 1
                 END IF 
               ELSE 
                 AnzahlRatengez.makredit = AnzahlRatengez.makredit + 1
               END IF 
               gezahlterBe% = gezahlterBetrag.makredit
               gezahlterBetrag.makredit = gezahlterBetrag.makredit + Rate.makredit
               gezahlterBe% = gezahlterBetrag.makredit
               GezahltAmOld.makredit = GezahltAm.makredit
               GezahltAm.makredit = calcdate%

                 
               CALL QuickStore("makredit")

               BLANK FILE "MAKreBuc"
               SET STATUS "Datensatz neu angelegt..."
               aa% = CopyRecord%("MAKREDIT","MAKREBUC")
               CodeBUC.MAKreBuc = SER ("MAKreBUC",1)
               _CodeBUC% = CodeBUC.MAKreBuc
               art.makrebuc = art%
               Codema.MAKredit = codema.makredit
               gezahlterBetrag.makrebuc = Rate.makredit
               GezahltAm.makrebuc = calcdate%
               CALL QuickStore ("makrebuc")
             END IF 

             mojaver$ = LEFT$ ( DATE$ (LetzteZahlungAm.makredit,"yyyymm0d"),6)
             IF gezletzZahlung.makredit <> "J" AND moja$ = mojaver$ THEN 
               REM letzte Zahlung
               art% = 2
               GezahltAmOld.makredit = GezahltAm.makredit
               GezahltAm.makredit = calcdate%
               GezBetragOld.makredit = gezahlterBetrag.makredit
               gezahlterBetrag.makredit = LetzteZahlung.makredit

               LetzteZahlungAm.makredit = calcdate%
               gezletzZahlung.makredit = "J"
 
               bisjetztgezahlt.makredit = bisjetztgezahlt.makredit + LetzteZahlung.makredit
               nochausstehend.makredit = nochausstehend.makredit - LetzteZahlung.makredit
               CALL QuickStore("makredit")

               BLANK FILE "MAKreBuc"
               SET STATUS "Datensatz neu angelegt..."
               aa% = CopyRecord%("MAKREDIT","MAKREBUC")
               CodeBUC.MAKreBuc = SER ("MAKreBUC",1)
               _CodeBUC% = CodeBUC.MAKreBuc
               art.makrebuc = art%
               Codema.MAKredit = codema.makredit
               gezahlterBetrag.makrebuc = LetzteZahlung.makredit
               GezahltAm.makrebuc = calcdate%
               CALL QuickStore ("makrebuc")
             END IF 
             kreditmon% = kreditmon% + gezahlterBetrag.makrebuc

             
 
           REM END IF 
           REM SELECT NEXT LOCK FILE "makrebuc" INDEX codekre.makrebuc
         REM WEND 
       REM END IF 
       SELECT NEXT LOCK FILE "makredit" INDEX codema.makredit
     WEND 
     FILE "maadr"
     SELECT CURRENT LOCK 
     KreditMon.maadr = kreditmon%
     KreditSum.maadr = kreditsum%
     STORE FILE "maadr"
     MOUSE OFF 
   END IF 
   FILE "maadr"
   SELECT NEXT LOCK FILE "maadr" INDEX codema.maadr
 WEND 
 CALL Fehler("Fertig mit Kreditvorausberechnung","")
en260120051: 
 END SUB 


SUB SichMaKredit()
 codekre% = codekre.makredit
 IF MOD ("MAKREDIT") OR NEW ("MAKREDIT") THEN STORE FILE "MAKREDIT"
 SELECT FIRST FILE "makredit" INDEX codekre.makredit
 SELECT KEY codekre% LOCK FILE "makredit" INDEX codekre.makredit
 fehl$ = ""
 IF RateOrKredit.makredit = 0 THEN 
   REM Raten
   IF von.makredit > 0 OR bis.makredit > 0 OR AnzahlMonate.makredit > 0 OR Kreditsumme.makredit = > THEN 
     fehl$ = "Sie haben angegeben, da· es sich bei diesem Datensatz um <zu zahlende feste Rate> handelt, deshalb dÅrfen die Felder im Abschnitt Kreditangaben (Laufzeit von, bis, Monate und Kredithîhe) NICHT ausgefÅllt werden!"
     fehl$ = fehl$ + CHR$ (13) + CHR$ (10)
   END IF 
   IF ErsteZahlung.makredit <> 0 OR ErstzahlungAm.makredit > 0 OR LetzteZahlung.makredit <> 0 OR LetzteZahlungAm.makredit > 0 THEN 
     fehl$ = "Sie haben angegeben, da· es sich bei diesem Datensatz um <zu zahlende feste Rate> handelt, deshalb dÅrfen die Felder der Zeile <erste Zahlung> und <letzte Zahlung> nicht ausgefÅllt werden!"
     fehl$ = fehl$ + CHR$ (13) + CHR$ (10)
   END IF 
   IF Rate.makredit = 0 OR RatenVom.makredit = 0 THEN 
     fehl$ = "Sie haben angegeben, da· es sich bei diesem Datensatz um <zu zahlende feste Rate> handelt, deshalb mÅssen die Felder <Betrag der Raten> und <Start> ausgefÅllt werden!"
     fehl$ = fehl$ + CHR$ (13) + CHR$ (10)
   END IF 
 ELSE 
   REM Kredite
   IF von.makredit = 0 OR bis.makredit = 0 OR AnzahlMonate.makredit = 0 OR Kreditsumme.makredit = 0 THEN 
     fehl$ = "Sie haben angegeben, da· es sich bei diesem Datensatz um <abzuzahlender Kredit> handelt, deshalb mÅssen die Felder im Abschnitt Kreditangaben (Laufzeit von, bis, Monate und Kredithîhe) ausgefÅllt werden!"
     fehl$ = fehl$ + CHR$ (13) + CHR$ (10)
   END IF 
   IF ErsteZahlung.makredit <> 0 THEN 
     IF ErstzahlungAm.makredit = 0 THEN 
       fehl$ = "Sie haben angegeben, da· es sich bei diesem Datensatz um <abzuzahlender Kredit> handelt und das Feld <erste Zahlung> ausgefÅllt, deshalb mÅssen die Felder der Zeile <erste Zahlung> komplett ausgefÅllt werden!"
       fehl$ = fehl$ + CHR$ (13) + CHR$ (10)
     END IF 
   END IF 
   IF LetzteZahlung.makredit <> 0 THEN 
     IF LetzteZahlungAm.makredit = 0 THEN 
       fehl$ = "Sie haben angegeben, da· es sich bei diesem Datensatz um <abzuzahlender Kredit> handelt und das Feld <erste Zahlung> ausgefÅllt, deshalb mÅssen die Felder der Zeile <erste Zahlung> komplett ausgefÅllt werden!"
       fehl$ = fehl$ + CHR$ (13) + CHR$ (10)
     END IF 
   END IF 
   IF Rate.makredit = 0 OR RatenVom.makredit = 0 OR RatenBis.makredit = 0 OR AnzahlRaten.makredit = 0 THEN 
     fehl$ = "Sie haben angegeben, da· es sich bei diesem Datensatz um <abzuzahlender Kredit> handelt, deshalb mÅssen die Felder <Betrag der Raten>,<Start>,<Ende> und <Anzahl> ausgefÅllt werden!"
     fehl$ = fehl$ + CHR$ (13) + CHR$ (10)
   END IF 
 END IF 
 IF fehl$ <> "" THEN CALL Fehler(fehl$,"")
 END SUB 


SUB SpezStoreMA(maksum%,provsum%,datum%,anzvertrvo%,anzvertrges%,ma%,kzvsu%)
 IF NOT OPEN ("BUMSATZ") THEN CALL DFile(3,"BUmsatz" + _fpw$)
 IF NOT OPEN ("BUMSKTO") THEN CALL DFile(3,"BUmskto" + _fpw$)
 codema% = ma%
 codemanr% = ma%
 CodeVstatus% = CodeVStatus.kvertrag
 monat$ = LEFT$ ( DATE$ (datum%,"mm0dyyyy"),2)
 REM aktueller Monat, aber wir brauchen zur Sicherung der alten Zahlen
 REM den Vormonat
 monat% = VAL (monat$)
 jahr$ = LEFT$ ( DATE$ (datum%,"yyyymm0d"),4)
 jahr% = VAL (jahr$)
 monatold% = monat%
 jahrold% = jahr%
 IF monatold% = 01 THEN 
   REM Vormonat ist also Dezember des Vorjahres
   monatold% = 12
   jahrold% = jahrold% - 1
 ELSE 
   monatold% = monatold% - 1
 END IF 
 MonatOld$ = STR$ (monatold%,"00")
 Jahrold$ = STR$ (Jahrold%,"0000")
 AbrMonatOld$ = Jahrold$ + Monatold$
 abrmonatold% = VAL (AbrMonatold$)
 AbrMonat$ = Jahr$ + Monat$
 abrmonat% = VAL (AbrMonat$)
 FILE "maadr"
 INDEX codema.maadr
 SELECT FIRST 
 SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
 qcodemajahr1$ = STR$ (codema.maadr,"000000") + STR$ (jahr%,"0000")
 IF NOT EXISTS (qcodemajahr1$,qcodemajahr.bumsatz) THEN 
   FOR i% = 2000 TO jahr%
     qcodemajahr$ = STR$ (codema.maadr,"000000") + STR$ (i%,"0000")
     i$ = STR$ (i%,"0000")
     IF NOT EXISTS (qcodemajahr$,qcodemajahr.bumsatz) THEN 
       BLANK FILE "BUMSATZ"
       codema.BUMSATZ = codema.maadr
       Jahr.bumsatz = VAL (i$)
       QCodemaJahr.BUMSATZ = qcodemajahr$
       STORE FILE "BUMSATZ"
       UNLOCK CURRENT FILE "BUMSATZ"
     END IF 
   NEXT i%
 END IF 
 FILE "BUMSATZ"
 SELECT FIRST FILE "BUMSATZ" INDEX QCodemaJahr.BUMSATZ
 SELECT KEY Qcodemajahr$ LOCK FILE "BUMSATZ" INDEX QCodemaJahr.BUMSATZ
 REM jetzt die alten Werte in BUmsatz schreiben und die neuen Werte in maadr,
 REM aber eigentlich darf das nur sein, wenn der vorhergehende Monat definitiv abgeschlossen wurde
 GOTO w0101051
 IF AbrMonat% > AbrMonat.maadr THEN 
   IF MonAbgeschlosse.maadr > 0 THEN 
     ok% = - 1
   ELSE 
     IF AbrMonat.maadr = 0 THEN ok% = - 1
   END IF 
 ELSE 
   IF AbrMonat% = AbrMonat.maadr THEN 
     IF MonAbgeschlosse.maadr = 0 THEN ok% = - 1
   END IF 
 END IF 
w0101051: 
 ok% = - 1
 IF ok% = - 1 THEN 
   FILE "maadr"
   SELECT CURRENT LOCK FILE "MAADR"
 
   MakProvSum.maadr = maksum%
   ProvSum.maadr = ProvSum%
   AbrMonat.maadr = AbrMonat%
   ProvSumUberweis.maadr = ProvSum.maadr
   Vorschangewiese.maadr = 0
   VorschVorschlag.maadr = 0
   REM jetzt noch irgendwie feststellen, was mit Vorschuss ist
   IF VorschArt.maadr = 2 AND kzvsu% = 1 THEN 
     REM allgemeiner Pauschalvorschuss
     IF VorschAllg.maadr <> 0 THEN 
       IF Vorschubis.maadr = 0 OR Vorschubis.maadr >= datum% THEN 
         VorschVorschlag.maadr = VorschAllg.maadr
       END IF 
     END IF 
   END IF 
 
   IF VorschArt.maadr = 1 AND Vorschuvon.maadr > 0 AND Vorschujn.maadr = 1 AND kzvsu% = 1 THEN 
     REM 6Monatsregel
     dstart% = Vorschuvon.maadr
     dmonat$ = LEFT$ ( DATE$ (dstart%,"mm0dyyyy"),2)
     dmonat% = VAL (dmonat$)
     djahr$ = LEFT$ ( DATE$ (dstart%,"yyyymm0d"),4)
     djahr% = VAL (djahr$)
 
     dges$ = LEFT$ ( DATE$ (dstart%,"yyyymm0d"),6)
     dges% = VAL (dges$)
     dtestmon% = dmonat%
     dtestmon% = dtestmon% + 5
     dtestj% = djahr%
     IF dtestmon% > 12 THEN 
       dtestj% = dtestj% + 1
       dtestmon% = dtestmon% - 12
     END IF 
     dtest$ = STR$ (dtestj%,"0000") + STR$ (dtestmon%,"00")
     dtest% = VAL (dtest$)
     ok% = 0
     IF abrmonat% >= dges% AND abrmonat% <= dtest% THEN 
       ok% = - 1
     END IF 
     IF ok% = - 1 THEN 
       dtestmon% = dmonat%
       dtestj% = djahr%
       IF dges% = abrmonat% THEN 
         REM Anfangsmonat=akt.Abrechnungsmonat -> vmonat%=1
         vmonat% = 1
       ELSE 
         vmonat% = 0
         FOR k% = 1 TO 5
            vmonat% = vmonat% + 1
            dtestmon% = dtestmon% + 1
            IF dtestmon% > 12 THEN 
              dtestj% = dtestj% + 1
              dtestmon% = dtestmon% - 12
            END IF 
            dtest$ = STR$ (dtestj%,"0000") + STR$ (dtestmon%,"00")
            dtest% = VAL (dtest$)
            IF dtest% = abrmonat% THEN 
              k% = 6
            END IF 
         NEXT k%
       END IF 
       IF vmonat% > 0 THEN 
         REM jetzt die zum Monat gehîrenden Grenzwerte fÅr die VorschÅsse auslesen, dann testen ob die maksum% Åber irgendwelche Grenzen liegt
         vorschg$ = "VorschG" + STR$ (vmonat%,"0") + ".maadr"
         vorschw$ = "VorschW" + STR$ (vmonat%,"0") + ".maadr"
 
         vorschgrm$ = "VorschGRM" + STR$ (vmonat%,"0") + ".maadr"
         vorschrm$ = "VorschRM" + STR$ (vmonat%,"0") + ".maadr"
 
         vorschgvd$ = "VorschGVD" + STR$ (vmonat%,"0") + ".maadr"
         vorschvd$ = "VorschVD" + STR$ (vmonat%,"0") + ".maadr"
 
         vorschg% = vorschg$$
         vorschw% = vorschw$$
 
         vorschgrm% = vorschgrm$$
         vorschrm% = vorschrm$$
 
         vorschgvd% = vorschgvd$$
         vorschvd% = vorschvd$$
         
         IF maksum% >= vorschg% THEN 
           VorschVorschlag.maadr = vorschw%
         END IF 
         IF maksum% >= vorschgrm% THEN 
           VorschVorschlag.maadr = vorschrm%
         END IF 
         IF maksum% >= vorschgvd% THEN 
           VorschVorschlag.maadr = vorschvd%
         END IF 
 
       END IF 
     END IF 
   END IF 
 
 
   STORE FILE "maadr"
 END IF 
 END SUB 
 
 
 
SUB FSMonAbschl()
 IF NOT OPEN ("BUMSATZ") THEN CALL DFile(3,"BUmsatz" + _fpw$)
 IF NOT OPEN ("BUMSKTO") THEN CALL DFile(3,"BUmskto" + _fpw$)
 FILE "maadr"
 INDEX codema.maadr
 SELECT FIRST LOCK FILE "maadr"
 WHILE NOT EOF ("maadr")
   ma% = codema.maadr
   CALL FSMonAbschlMa(ma%)
   SELECT NEXT LOCK FILE "maadr" INDEX codema.maadr
 WEND 
 END SUB 
 
SUB FSMonAbschlMa(ma%)
 codema% = ma%
 codemanr% = ma%
 CodeVstatus% = CodeVStatus.kvertrag
 monat$ = LEFT$ ( DATE$ (datum%,"mm0dyyyy"),2)
 REM aktueller Monat, aber wir brauchen zur Sicherung der alten Zahlen
 REM den Vormonat
 monat% = VAL (monat$)
 jahr$ = LEFT$ ( DATE$ (datum%,"yyyymm0d"),4)
 jahr% = VAL (jahr$)
 monatold% = monat%
 jahrold% = jahr%
 IF monatold% = 01 THEN 
   REM Vormonat ist also Dezember des Vorjahres
   monatold% = 12
   jahrold% = jahrold% - 1
 ELSE 
   monatold% = monatold% - 1
 END IF 
 MonatOld$ = STR$ (monatold%,"00")
 Jahrold$ = STR$ (Jahrold%,"0000")
 AbrMonatOld$ = Jahrold$ + Monatold$
 abrmonatold% = VAL (AbrMonatold$)
 AbrMonat$ = Jahr$ + Monat$
 abrmonat% = VAL (AbrMonat$)
 FILE "maadr"
 INDEX codema.maadr
 SELECT FIRST 
 SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
 
 FOR i% = 2000 TO jahr%
   qcodemajahr$ = STR$ (codema.maadr,"000000") + STR$ (jahr%,"0000")
   jahr$ = STR$ (jahr%,"0000")
   IF NOT EXISTS (qcodemajahr$,qcodemajahr.bumsatz) THEN 
     BLANK FILE "BUMSATZ"
     codema.BUMSATZ = codema.maadr
     Jahr.bumsatz = VAL (jahr$)
     QCodemaJahr.BUMSATZ = qcodemajahr$
     STORE FILE "BUMSATZ"
     UNLOCK CURRENT FILE "BUMSATZ"
   END IF 
 NEXT i%
 FILE "BUMSATZ"
 SELECT FIRST FILE "BUMSATZ" INDEX QCodemaJahr.BUMSATZ
 SELECT KEY Qcodemajahr$ LOCK FILE "BUMSATZ" INDEX QCodemaJahr.BUMSATZ
 ok% = 0
 IF mkz.maadr = 0 THEN 
   ok% = - 1
 ELSE 
 END IF 
 
 
 END SUB 
 
 
SUB ExpProvli()
     GAdrDat$ = "ADRESSEN"
     GConDat$ = "CONNECT"
     GTelDat$ = "TELEFON"
     GAkquiDat$ = "AKQUISE"
     GDokDat$ = "DOKUMENT"
     GADRStat$ = "ADRSTAT"
 
 
 
 IF PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
   CALL DFile(3,"Buchung1" + _fpw$)
   SELECT WHERE FILE "Buchung1"
   budat$ = "Buchung1"
 ELSE 
   CALL DFile(3,"Buchung" + _fpw$)
   SELECT WHERE FILE "Buchung"
   budat$ = "Buchung"
 END IF 
 CALL DFile(3,"fs24imp" + _fpw$)
 CALL DFile(2,"OFFICE\adrstat" + _fpw$)
 SELECT WHERE FILE "adrstat"
 CALL DFile(2,"OFFICE\adrgrup" + _fpw$)
 SELECT WHERE FILE "adrgrup"
 CALL DFile(3,"Kgeadr" + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 SELECT WHERE FILE "Sparten"
 CALL DFile(3,"geadr" + _fpw$):CALL DFile(3,"geadr2" + _fpw$)
 SELECT WHERE FILE "geadr"
 CALL DFile(3,"tarif" + _fpw$)
 SELECT WHERE FILE "tarif"
 CALL DFile(3,"maadr" + _fpw$)
 SELECT WHERE FILE "maadr"
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"mavorg" + _fpw$)
 SELECT WHERE FILE "maadrgru"
 CALL DFile(3,"kvertrag" + _fpw$)
 SELECT WHERE FILE "kvertrag"
 CALL DFile(3,"vprodukt" + _fpw$)
 SELECT WHERE FILE "vprodukt"
 CALL DFile(3,"tarif" + _fpw$)
 SELECT WHERE FILE "tarif"
 CALL DFile(3,"vorgang" + _fpw$)
 SELECT WHERE FILE "vorgang"
 CALL DFile(3,"vkond" + _fpw$)
 SELECT WHERE FILE "vkond"
 CALL DFile(3,"formular" + _fpw$)
 SELECT WHERE FILE "formular"
 CALL DFile(3,"spgruppe" + _fpw$)
 SELECT WHERE FILE "spgruppe"
 CALL DFile(3,"agdir" + _fpw$)
 
 CALL DFile(3,"KVEXEXP" + _fpw$)
 CALL DFile(3,"ZEINGAN1" + _fpw$)
 CALL DFile(3,"BUCHXLS" + _fpw$)
 
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 SELECT WHERE FILE GAdrDat$
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 SELECT WHERE FILE GAkquiDat$
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 SELECT WHERE FILE "aktionen"
 CALL DFile(2,"OFFICE\" + GTelDat$ + _fpw$)
 SELECT WHERE FILE GTelDat$
 CALL DFile(2,"OFFICE\" + GDokDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GConDat$ + _fpw$)
 CALL DFile(2,"OFFICE\banken" + _fpw$)
 CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 
anf2306200410: 
 von$ = ""
 bis$ = TODAY 
 allProv$ = "n"
 CREATE DIALOG "Konto1",0,0,221,165,title$,"MS Sans Serif",8
 ADD DIALOG "Konto1",9,6,7,24,22,2
 ADD DIALOG "Konto1",5,34,8,170,9,0,"Provisionsliste:"
 ADD DIALOG "Konto1",4,34,14,176,5,0,""
 ADD DIALOG "Konto1",5,34,22,175,16,0,"Bitte geben Sie ein, fÅr welchen Buchungszeitraum Sie eine öbersicht wÅnschen."
 ADD DIALOG "Konto1",5,34,40,175,32,0,"Wenn Sie keine Angaben zum Buchungszeitraum eintragen, werden alle Provisionen bzw. die Provisionen des vorgegebenen Zeitraumes aufgelistet."
 ADD DIALOG "Konto1",5,34,80,12,8,0,"von"
 ADD DIALOG "Konto1",6,53,79,45,11,0,0,von$,10
 ADD DIALOG "Konto1",5,102,80,12,8,0,"bis"
 ADD DIALOG "Konto1",6,116,79,45,11,0,0,bis$,10
 REM ADD DIALOG "Konto1",5,44,108,167,25,0,"(es werden auch die Provisionen angezeigt, die wegen fehlender ZahlungsbeitrÑge in der Mahnlist sind)"
 ADD DIALOG "Konto1",1,50,144,55,15,1,"&Weiter",1,1
 ADD DIALOG "Konto1",1,110,144,55,15,0,"&Abbruch",0,0
 DIALOG "Konto1",req%
 REMOVE DIALOG "Konto1"
 MOUSE ON 
 IF req% <> 1 THEN GOTO end2306200410
   MOUSE OFF 
   IF von$ = "" THEN vondat$ = "01.01.1980" ELSE vondat$ = von$
   IF bis$ = "" THEN bisdat$ = DATE$ ( TODAY ) ELSE bisdat$ = bis$
 
 
     
     IF DateOK%(vondat$) THEN 
       von% = DAYS (von$)
     ELSE 
       CALL Fehler("Datum ist ungÅltig!","")
       GOTO anf2306200410
     END IF 
     IF DateOK%(bisdat$) THEN 
       bis% = DAYS (bisdat$)
     ELSE 
       CALL Fehler("Datum ist ungÅltig!","")
       GOTO anf2306200410
     END IF 
     dpfad$ = _netpath$ + "0-Export"
     ON ERROR GOTO w280820061
     MAKE DIRECTORY dpfad$
w280820061: 
     dpfad$ = _netpath$ + "0-Export\ProvAbr"
     ON ERROR GOTO w280820062
     MAKE DIRECTORY dpfad$
w280820062:  
     ON ERROR GOTO ErrorHandler
     dpfad$ = _netpath$ + "0-Export\ProvAbr\" + DATE$ ( TODAY ,"yymm0d")
     datnr$ = DATE$ ( TODAY ,"yymm0d")
     i% = 0
     ok% = 0
     WHILE ok% = 0
       i% = i% + 1
       IF i% > 99 THEN 
         ON ERROR GOTO arb2306042
         REMOVE DIRECTORY dpfad$ + "01"
arb2306042: 
         i% = 1
       END IF 
       ON ERROR GOTO arb2306041
       tpfad$ = dpfad$ + STR$ (i%,"00")
       MAKE DIRECTORY dpfad$ + STR$ (i%,"00")
       dpfad$ = dpfad$ + STR$ (i%,"00")
       ok% = - 1
arb2306041: 
       ON ERROR GOTO ErrorHandler
     WEND 
 
     textdo1$ = tpfad$
     REM CALL Fehler("EXPORT " + nachname.maadr,textdo1$)
 FILE budat$
 INDEX QuickCode.budat$
 FILE "maadr"
 INDEX codema.maadr
 SELECT FIRST 
 WHILE NOT EOF ("maadr")
   MOUSE OFF 
   codema% = codema.maadr
   codema$ = STR$ (codema.maadr,"000000")
   SET STATUS codema$ + " " + nachname.maadr
   IF NOT EXISTS (codema%,codema.budat$) THEN GOTO testma2306200413
   qcode$ = STR$ (codema.maadr,"000000") + DATE$ (von%,"yyyymmdd")
   qcode1$ = STR$ (codema.maadr,"000000") + DATE$ (bis%,"yyyymmdd")
   SELECT FIRST FILE budat$ INDEX QuickCode.budat$
   SELECT KEY qcode$ FILE budat$ INDEX QuickCode.budat$
   summeprov% = 0
   summevsv% = 0
   summesr% = 0
   summevorsch% = 0
   anzahl% = 0
   REMOVE FROM FILE "buchxls"
   WHILE NOT EOF (budat$) AND QuickCode.budat$ >= qcode$ AND QuickCode.budat$ <= qcode1$
     anzahl% = anzahl% + 1
     SET STATUS "Erstelle Liste fÅr: " + codema$ + " " + nachname.maadr + " / Anzahl Buchungen " + STR$ (anzahl%,",999999")
     MOUSE OFF 
     summeprov% = summeprov% + betrag.budat$
     summesr% = summsr% + sr.budat$
     IF budat$ LIKE "buchung1" THEN 
       IF vorschujn.budat$ = 1 THEN 
         summevorsch% = summevorsch% + betrag.budat$
       END IF 
       summevsv% = summevsv% + vsv.budat$
     END IF 
     
     BLANK FILE "Buchxls"
     a% = CopyRecord%(budat$,"Buchxls")
     STORE FILE "buchxls"
     SELECT NEXT FILE budat$
   WEND 
   REM Anfang Ausgabe nach EXCEL
   IF anzahl% > 0 THEN 
     IF GAFSK$ LIKE "TRUE" THEN 
       FILE "buchxls"
       DIRECTORY textdo1$
       OPEN FIELDS Datum,Buchungstext,Betrag,SR,VSV,Nachname,Vorname,VS_Beginn,Gesellschaft,Bewertungssumme,Gesamtbetrag,Einheiten,VTAgentur,FÑlligkeit,Waehrung:
       agenturnr$ = VSNRPack$( TRIM$ ( LTRIM$ ( RIGHT$ (Agenturnr.maadr,8))))
       IF LTRIM$ (agenturnr$) = "" THEN agenturnr$ = STR$ (codema.maadr,"000000")
       
       datneu$ = textdo1$ + "\" + agenturnr$ + ".xls"
       IF EXISTS (datneu$) THEN DELETE datneu$
       Superbase.Converters.SBF.SourceFormat = "Superbase"
       Superbase.Converters.SBF.SourceFile = "BUCHXLS"
       Superbase.Converters.SBF.Descending = 0
       Superbase.Converters.SBF.Merge = - 1
       Superbase.Converters.SBF.LogErrors = 0
       Superbase.Converters.SBF.MultiResponse = 0
       Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
       Superbase.Converters.XLS.DestFile = datneu$
       Superbase.Converters.XLS.StartRow = 2
       Superbase.Converters.XLS.StartCol = 1
       Superbase.Converters.XLS.EndRow = - 1
       Superbase.Converters.XLS.EndCol = - 1
       Superbase.Converters.XLS.UseLabels = - 1
       Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
       REM CALL Fehler("EXPORT " + nachname.maadr,datneu$)
       SET STATUS "EXPORT " + nachname.maadr + "   " + datneu$
     ELSE 
       FILE "buchxls"
       DIRECTORY textdo1$
       OPEN FIELDS Datum,Buchungstext,Betrag,MWSTProz,MWSTBetragEU,NettoEU,SR,Gesamtbetrag,VSV,Nachname,Vorname,VS_Beginn,Gesellschaft,Sparte,Bewertung2EU,Einheiten,VTAgentur,FÑlligkeit,Waehrung:
       agenturnr$ = VSNRPack$( TRIM$ ( LTRIM$ ( RIGHT$ (Agenturnr.maadr,8))))
       IF LTRIM$ (agenturnr$) = "" THEN agenturnr$ = STR$ (codema.maadr,"000000")
       datneu$ = textdo1$ + "\" + agenturnr$ + ".xls"
       IF EXISTS (datneu$) THEN DELETE datneu$
       Superbase.Converters.SBF.SourceFormat = "Superbase"
       Superbase.Converters.SBF.SourceFile = "BUCHXLS"
       Superbase.Converters.SBF.Descending = 0
       Superbase.Converters.SBF.Merge = - 1
       Superbase.Converters.SBF.LogErrors = 0
       Superbase.Converters.SBF.MultiResponse = 0
       Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
       Superbase.Converters.XLS.DestFile = datneu$
       Superbase.Converters.XLS.StartRow = 2
       Superbase.Converters.XLS.StartCol = 1
       Superbase.Converters.XLS.EndRow = - 1
       Superbase.Converters.XLS.EndCol = - 1
       Superbase.Converters.XLS.UseLabels = - 1
       Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
       REM CALL Fehler("EXPORT " + nachname.maadr,datneu$)
       SET STATUS "EXPORT " + nachname.maadr + "   " + datneu$
     END IF 
     ziel$ = textdo1$ + "\" + FN ansi(nachname.maadr + "-" + vorname.maadr + "-" + agenturnr$) + ".xls"
 
     a% = CALL ("_SBFileCopy",datneu$,ziel$)
     il% = 0
w280820063: 
     REM WAIT FOR 1
     ON ERROR GOTO w280820063
     IF EXISTS (datneu$) AND il% < 10 THEN 
       il% = il% + 1
       REM DELETE datneu$
     END IF 
     REQUEST "MS Excel Ausgabe fÅr:",nachname.maadr,2
   END IF 
   REM Ende Ausgabe nach Excel
testma2306200413: 
   FILE "maadr"
   SELECT NEXT FILE "maadr"
 WEND 
  REM REGISTER _netpath$ + "CODieLIB.dll","_SBSetCurrentDir","IF"
  REM a% = CALL ("_SBSetCurrentDir",textdo1$)
  REM REGISTER CLEAR "_SBSetCurrentDir"
  REM REGISTER _netpath$ + "CODieLIB.dll","_SBGetCurrentDir","IF"
  REM a% = CALL ("_SBGetCurrentDir",ziel$)
  REM REGISTER CLEAR "_SBGetCurrentDir"
  
  CALL Fehler("Die Ausgabe der MS EXCEL Provisionslisten in das Verzeichnis: " + textdo1$,"wurde beendet!")
 
end2306200410: 
 END SUB 
 
 

