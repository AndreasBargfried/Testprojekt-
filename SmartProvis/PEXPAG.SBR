 CALL main()


 'Schlie·en aller Dateien
SUB CloseDatei1()
 ' NEU CLOSEFILE
 
 DIM dateien1$(1000)
 DIM ixkukto$(1)
 DIRECTORY _netpath$
 FILLARRAY dateien1$,5,"*.sbf"
 anzdat% = 0
 WHILE dateien1$(anzdat%) <> ""
   name1$ = dateien1$(anzdat%)
   name2$ = LEFT$ (name1$, LEN (name1$) - 4)
   IF OPEN (name2$) THEN CLOSE FILE name2$
   anzdat% = anzdat% + 1
 WEND 
 DIRECTORY _netpath$ + "\office"
 FILLARRAY dateien1$,5,"*.sbf"
 anzdat% = 0
 WHILE dateien1$(anzdat%) <> ""
   name1$ = dateien1$(anzdat%)
   name2$ = LEFT$ (name1$, LEN (name1$) - 4)
   IF OPEN (name2$) THEN CLOSE FILE name2$
   anzdat% = anzdat% + 1
 WEND 
 DIRECTORY _netpath$ + "\PROVIS"
 FILLARRAY dateien1$,5,"*.sbf"
 anzdat% = 0
 WHILE dateien1$(anzdat%) <> ""
   name1$ = dateien1$(anzdat%)
   name2$ = LEFT$ (name1$, LEN (name1$) - 4)
   IF OPEN (name2$) THEN CLOSE FILE name2$
   anzdat% = anzdat% + 1
 WEND 
 
 
 ON ERROR GOTO cl0711974 
 DELETE _netpath$ + "Provis\*.sb!"
cl0711974:   
 ON ERROR GOTO cl0711975 
 DELETE _netpath$ + "office\*.sb!"
cl0711975:  
 ON ERROR GOTO cl0711976 
 DELETE _netpath$ + "*.sb!"
cl0711976: 
 ON ERROR GOTO cl0711977 
 DELETE _netpath$ + "export\*.sb!"
cl0711977: 
 ON ERROR GOTO cl0711978 
 DELETE _netpath$ + "export\office\*.sb!"
cl0711978: 
  ON ERROR GOTO cl0711979 
 DELETE _netpath$ + "export\provis\*.sb!"
cl0711979: 
 END SUB 
 
 
 
 ' Export aller Daten zu einer Agentur
SUB ExportAG()
 IF MNdisabled%("SUPERVISOR") THEN 
   CALL Fehler("Keine Zugangsberechtigung!","Nur durch Supervisor mîglich!")
   END SUB 
 END IF 
 CALL DFile(3,"maadr" + _fpw$)
 _cuma% = CodeMA.MAADR
 rep% = GetCodeMA%(_cuma%,Workstation%)
 IF rep% <> 0 THEN 
   _cuma% = rep%
   cu% = _cuma%
   reqaktag% = 0
   REQUEST "Soll der Vermittler ohne seine Struktur kopiert werden?","",130,reqaktag%
 ELSE 
   CALL Fehler ("Es wurde kein Mitarbeiter ausgewÑhlt! Export wird abgebrochen!","")
   GOTO end310320042
 END IF 
 t1$ = "Es werden nachfolgend die Daten des zu exportierenden Vermittlers und aller ihm untergeordneten Vermittler aus den vorhandenen Daten selektiert und in Form von separaten Dateien gespeichert."
 t1a$ = " Ein Backup der Dateien kînnen Sie Åber START/Programme/CODie-Anwendungen/SmartPROVIS-Mitarbeiter-Export erzeugen lassen (die erzeugte Datei provis.arj finden Sie unter ...\codie\export\support) und diesem Vermittler zur VerfÅgung stellen. "
 t1b$ = "Der Vermittler kann dann diese Backup - Datei Åber START/Programme/CODie-Anwendungen/SmartPROVIS Restore auf seinen Rechner einspielen."
 t2$ = "Zu beachten ist, da· der Vermittler ebenfalls in Ihrer Mitarbeiterdatei (SmartPROVIS Hauptmaske/Stammdaten/Einstellungen/Mitarbeiterverwaltung) erfa·t sein mu· "
 t2a0$ = "(und zwar so, da· der Vorname und Nachname des Vermitllers genauso geschrieben wird, wie in der Vermittlerdatei, um die anderslautenden Mitarbeiter fÅr diesen Export zu lîschen), da die Mitarbeiterdatei ebenfalls an den zu"
 t2a$ = " exportierenden Vermittler Åbergeben wird. Auf diese Art kînnen Sie dem Vermittler z.B bestimmte Programmfunktionen sperren und weiterhin bestimmen, wie lange er mit den ihm Åbergebenen Daten arbeiten darf."
 t3a$ = " Ist der Vermittler nicht in Ihrer Mitarbeiterdatei definiert, so wird ein Mitarbeiter mit dem Namen Supervisor angelegt, der im Rahmen der Agenturverwaltung alle Zugriffsrechte besitzt."
 CALL Fehler(t1$ + t1a$ + t1b$,t2$ + t2a0$ + t2a$ + t3a$)
 IF gasp% THEN 
   CALL Fehler("Achtung bei der ASP Version mu· nach dem generieren der Daten fÅr den zu exportierenden Vermittler, das Programm beendet werden und per Hand das Programm ...\codie\export\support\ProvBak.exe aufgerufen werden.","")
 END IF 
 
 REM REQUEST "Haben Sie den Vermitller in Ihrer Mitarbeiterdatei eingerichtet und","darauf geachtet ihm bestimmte Bereich zu sperren?",130,req%
 
 SELECT KEY cu% FILE "maadr" INDEX codema.maadr
 mavor$ = Vorname.maadr
 manach$ = nachname.maadr
 REQUEST "Haben alle anderen Nutzer die Anwendung geschlossen?","",130,req%
 IF req% <> 1 THEN 
   CALL Fehler("Der Export kann nur durchgefÅhrt werden,","wenn alle Nutzer die Anwendung verlassen haben.")
   END SUB 
 END IF 
 REM REQUEST "Soll die Buchungsdatei mit Åbergeben werden?","",130,reqExpBuch%
 reqExpBuch% = 0
 reqsp% = 1
 reqma% = 1
 reqge% = 1
 reqfle% = 1
 reqnV% = 1
 anp$ = DATE$ ( TODAY + 60,"0d.mm.yyyy")
 
    DIM dlg AS Dialog
    DIM control AS DialogControl
exkorrdate01:  
    Superbase.Dialogs.Add("ANPASSUNG")
    SET dlg = Superbase.Dialogs.ANPASSUNG
    dlg.Move(0,0,361,200)
    dlg.Caption = "Export Daten fÅr Vermittler"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(0,0,361,163)
    control.Caption = "Parameter fÅr den Export"

    

    SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
    control.Move(4,10,337,10)
    control.Caption = "Dokumente und Termine mit Åbergeben (Achtung nicht bei Export fÅr SmartPROVIS Agentur, da sonst die"
    control.Bind("bîse%")
    control.ValueOn = - 1
    control.ValueOff = 0


    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(4,20,335,10)
    control.Caption = "Dokumente und Termine, die die Agentur erstellt hat, Åberschrieben werden!)"


    SET control = dlg.Add("DialogCheckBox5","DialogCheckBox")
    control.Move(4,34,137,14)
    control.Caption = "Buchungsdaten mit Åbergeben "
    control.Bind("reqExpBuch%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogCheckBox2","DialogCheckBox")
    control.Move(4,48,154,13)
    control.Caption = "Notizen in Sparten nicht Åbergeben"
    control.Bind("reqsp%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogCheckBox3","DialogCheckBox")
    control.Move(4,64,154,13)
    control.Caption = "Notizen in Gesellschaften nicht Åbergeben"
    control.Bind("reqge%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogCheckBox4","DialogCheckBox")
    control.Move(4,80,144,13)
    control.Caption = "Notizen in Mitarbeiter nicht Åbergeben"
    control.Bind("reqma%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(4,100,335,14)
    control.Caption = "Bis wann kann die externe Agentur mit diesen Daten arbeiten?"
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(214,100,44,12)
    control.MaxLength = 10
    control.TextBinding = "anp$"

    SET control = dlg.Add("DialogCheckBox15","DialogCheckBox")
    control.Move(4,118,300,13)
    control.Caption = "falls beim letzten Export ein Fehler auftrat, hier ein Kreuz setzen"
    control.Bind("reqfle%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogCheckBox16","DialogCheckBox")
    control.Move(4,131,300,13)
    control.Caption = "auch Adressen des Vermittler Åbergeben, zu denen kein Vertrag existiert"
    control.Bind("reqnV%")
    control.ValueOn = 1
    control.ValueOff = 0

 REM alleVMKV%

    SET control = dlg.Add("DialogCheckBox17","DialogCheckBox")
    control.Move(4,144,300,13)
    control.Caption = "auch VertrÑge zur Adresse exportieren, wenn diese von anderen Vermittlern sind"
    control.Bind("alleVMKV%")
    control.ValueOn = 1
    control.ValueOff = 0


    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(120,180,44,13)
    control.Default = 1
    control.Caption = "OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(171,180,44,13)
    control.Caption = "Abbruch"
    control.ReturnValue = 0
    DIALOG "ANPASSUNG",req%
    REMOVE DIALOG "ANPASSUNG"

    IF req% = 0 THEN END SUB 
 IF DateOK%(anp$) THEN 
   anp% = DAYS (anp$)
   IF anp% < TODAY THEN 
     anp% = TODAY 
     REQUEST "Das angegebene Datum ist kleiner als der heutige Tag!","Wollen Sie es korrigieren?",130,req1%
     IF req1% = 1 THEN 
       GOTO exkorrdate01
     END IF 
   END IF 
 ELSE 
   REQUEST "Das angegebene Datum ist leer oder ungÅltig!","Wollen Sie es korrigieren?",130,req1%
   IF req1% = 1 THEN 
     GOTO exkorrdate01
   ELSE 
     anp% = 0
   END IF 
 END IF 
 IF bîse% = - 1 THEN 
   REQUEST "Sollen wirklich alle Dokumente und Termine Åbergeben werden?","",130,req%
   IF req% <> 1 THEN GOTO exkorrdate01
 END IF 
 MOUSE OFF 
 REQUEST "Es werden alle offenen Dateien geschlossen !","",2
 CALL CloseDatei1()
 REQUEST "Kopieren aller Dateien in das Verzeichnis \CODIE\EXPORT","",2
 ON ERROR GOTO ex0711971
 tt$ = _netpath$ + "LOCAL\DelExpF.EXE"
 a% = CALL ("ShellExecute",0,"open",tt$,"","",1)
 WAIT FOR 3
 DELETE _netpath$ + "export\*.*"
ex0711971: 
 ON ERROR GOTO ex0711971b
 DELETE _netpath$ + "export\office\*.*"
 
 REM 310898 Kopieren der Supportdateien in den OFFICE - Pfad
 IF EXISTS (_netpath$ + "export\support\provis.arj") THEN 
   DELETE _netpath$ + "export\support\provis.arj"
 END IF 
 COPY _netpath$ + "export\support\*.*" TO _netpath$ + "export\office\"
ex0711971b: 
 ON ERROR GOTO ex0711971c
 DELETE _netpath$ + "export\provis\*.*"
ex0711971c: 
 SET STATUS "Kopieren aller Dateien in das Verzeichnis \CODIE\EXPORT"
 IF EXISTS (_netpath$ + "export\support\provis.arj") THEN 
   DELETE _netpath$ + "export\support\provis.arj"
 END IF 
 ON ERROR GOTO ErrorHandler
 REM  Kopieren aller Dateien in die Verzeichnisse Export, /Export/Office und Export/Provis
 SET STATUS "Kopieren ac*.*"
 COPY _netpath$ + "ac*.*" TO _netpath$ + "export\ac*.*"
 COPY _netpath$ + "op*.*" TO _netpath$ + "export\op*.*"
 SET STATUS "Kopieren supervis*.*"
 COPY _netpath$ + "superv*.*" TO _netpath$ + "export\superv*.*"
 SET STATUS "Kopieren office\Adre*.*"
 COPY _netpath$ + "office\adre*.*" TO _netpath$ + "export\office\adre*.*"
 w% = 0
 WHILE w% = 0
   SET STATUS "warte darauf das Adressen.sbf zu Ende kopiert wurde"
   IF EXISTS (_netpath$ + "export\office\adressen.sbf") THEN 
     w% = 1
   ELSE 
     WAIT FOR 3
   END IF 
 WEND 
 IF reqfle% = 1 THEN CALL Fehler("Adressen wurden kopiert","")
 SET STATUS "Kopieren office\Adrs*.*"
 COPY _netpath$ + "office\adrs*.*" TO _netpath$ + "export\office\adrs*.*"
 SET STATUS "Kopieren office\Conn*.*"
 COPY _netpath$ + "office\Conn*.*" TO _netpath$ + "export\office\Conn*.*"
 w% = 0
 WHILE w% = 0
   SET STATUS "warte darauf das connect.sbf zu Ende kopiert wurde"
   IF EXISTS (_netpath$ + "export\office\connect.sbf") THEN 
     w% = 1
   ELSE 
     WAIT FOR 3
   END IF 
 WEND 
 IF reqfle% = 1 THEN CALL Fehler("Adressenverbindungen wurden kopiert","")
 SET STATUS "Kopieren office\be*.*"
 COPY _netpath$ + "office\be*.*" TO _netpath$ + "export\office\be*.*"

 IF bîse% = - 1 THEN 
   COPY _netpath$ + "office\d*.*" TO _netpath$ + "export\office\d*.*"
   w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das dokument.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\office\dokument.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF reqfle% = 1 THEN CALL Fehler("Adress-Dokumente wurden kopiert","")
   w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das dokma.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\office\dokma.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF reqfle% = 1 THEN CALL Fehler("Vermittler-Dokumente wurden kopiert","")
   w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das dokge.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\office\dokge.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF reqfle% = 1 THEN CALL Fehler("Gesellschafts-Dokumente wurden kopiert","")
   w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das dokkv.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\office\dokkv.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF reqfle% = 1 THEN CALL Fehler("Vertrags-Dokumente wurden kopiert","")
   COPY _netpath$ + "office\ak*.*" TO _netpath$ + "export\office\ak*.*"
   w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das akquise.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\office\akquise.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF reqfle% = 1 THEN CALL Fehler("Adressen-Termine wurden kopiert","")
 END IF 
 SET STATUS "Kopieren office\f*.*"
 COPY _netpath$ + "office\f*.*" TO _netpath$ + "export\office\f*.*"
 SET STATUS "Kopieren office\h*.*"
 COPY _netpath$ + "office\h*.*" TO _netpath$ + "export\office\h*.*"
 SET STATUS "Kopieren office\k*.*"
 COPY _netpath$ + "office\k*.*" TO _netpath$ + "export\office\k*.*"
 REM SET STATUS "Kopieren office\l*.*"
 REM COPY _netpath$ + "office\l*.*" TO _netpath$ + "export\office\l*.*"
 REM SET STATUS "Kopieren office\m*.*"
 REM COPY _netpath$ + "office\m*.*" TO _netpath$ + "export\office\m*.*"
 SET STATUS "Kopieren office\n*.*"
 COPY _netpath$ + "office\n*.*" TO _netpath$ + "export\office\n*.*"
 SET STATUS "Kopieren office\p*.*"
 COPY _netpath$ + "office\o*.*" TO _netpath$ + "export\office\o*.*"
 SET STATUS "Kopieren office\staat*.*"
 COPY _netpath$ + "office\staat*.*" TO _netpath$ + "export\office\staat*.*"
 IF reqfle% = 1 THEN CALL Fehler("Adressen-Nebendateien wurden kopiert","")
 SET STATUS "Kopieren office\tel*.*"
 COPY _netpath$ + "office\tel*.*" TO _netpath$ + "export\office\tel*.*"
    w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das telefon.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\office\telefon.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF reqfle% = 1 THEN CALL Fehler("Adressen-Telefon wurden kopiert","")
 SET STATUS "Kopieren office\tit*.*"
 COPY _netpath$ + "office\tit*.*" TO _netpath$ + "export\office\tit*.*"
    w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das titel.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\office\titel.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF reqfle% = 1 THEN CALL Fehler("Adressen-Titel wurden kopiert","")
 SET STATUS "Lîschen der Masken, Icons und doc files"
 ON ERROR GOTO ex0711972 
 DELETE _netpath$ + "export\office\*.sbv"
ex0711972: 
 ON ERROR GOTO ex0711973 
 DELETE _netpath$ + "export\office\*.hlp"
ex0711973: 
 ON ERROR GOTO ex0711973a 
 DELETE _netpath$ + "export\office\*.ico"
ex0711973a: 
 ON ERROR GOTO ex0711974 
 DELETE _netpath$ + "export\office\*.sb!"
ex0711974: 
 ON ERROR GOTO ex0711974a 
 REM DELETE _netpath$ + "export\office\*.exe"
ex0711974a:  
 ON ERROR GOTO ex0711974b 
 DELETE _netpath$ + "export\office\*.doc"
ex0711974b:   
 ON ERROR GOTO ex0711974c 
 DELETE _netpath$ + "export\office\superbase.net"
ex0711974c:   
 ON ERROR GOTO ex0711975d1
 DELETE _netpath$ + "export\office\*.xls"
ex0711975d1:   
 ON ERROR GOTO ex0711975c1
 DELETE _netpath$ + "export\office\*.sbq"
ex0711975c1:  
 ON ERROR GOTO ex0711975b1
 DELETE _netpath$ + "export\office\*.sbp"
ex0711975b1:  
 ON ERROR GOTO ex0711975a1
 DELETE _netpath$ + "export\office\loepro*.*"
ex0711975a1:   
 ON ERROR GOTO ex200620061
 DELETE _netpath$ + "export\office\kvhis.*"
ex200620061:    
 ON ERROR GOTO ex200620062
 DELETE _netpath$ + "export\office\adrstat.*"
ex200620062:      
 ON ERROR GOTO ex200620063
 DELETE _netpath$ + "export\office\key*.*"
ex200620063:     
 ON ERROR GOTO ex200620064
 DELETE _netpath$ + "export\office\onlb.*"
ex200620064:     
 ON ERROR GOTO ex200620065
 DELETE _netpath$ + "export\office\kont*.*"
ex200620065:     
 ON ERROR GOTO ex200620066
 DELETE _netpath$ + "export\office\kpro*.*"
ex200620066:     
 ON ERROR GOTO ex200620067
 DELETE _netpath$ + "export\office\beru*.*"
ex200620067:     
 ON ERROR GOTO ex200620068
 DELETE _netpath$ + "export\office\fsta*.*"
ex200620068:     
 ON ERROR GOTO ex200620069
 DELETE _netpath$ + "export\office\hobb*.*"
ex200620069:     
 ON ERROR GOTO ex2006200610
 DELETE _netpath$ + "export\office\o*.*"
ex2006200610:     
 ON ERROR GOTO ex2006200611
 DELETE _netpath$ + "export\office\tite*.*"
ex2006200611:     
  IF (reqExpBuch% = 1) THEN 
   SET STATUS "Kopieren provis\buch*.*"
   COPY _netpath$ + "provis\buch*.*" TO _netpath$ + "export\provis\buch*.*"
    w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das buchung.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\provis\buchung.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF reqfle% = 1 THEN CALL Fehler("Buchung wurden kopiert","")
    w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das buchung1.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\provis\buchung1.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF reqfle% = 1 THEN CALL Fehler("Buchung1 wurden kopiert","")
   COPY _netpath$ + "provis\zein*.*" TO _netpath$ + "export\provis\zein*.*"
    w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das zeingan1.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\provis\zeingan1.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF reqfle% = 1 THEN CALL Fehler("Zeingan1 wurden kopiert","")
    w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das zeingang.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\provis\zeingang.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF reqfle% = 1 THEN CALL Fehler("zeingang wurden kopiert","")
 END IF 
 ON ERROR GOTO ErrorHandler
 SET STATUS "Kopieren provis\fo*.*"
 COPY _netpath$ + "provis\fo*.*" TO _netpath$ + "export\provis\fo*.*"
    w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das formular.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\provis\formular.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF reqfle% = 1 THEN CALL Fehler("Formular wurden kopiert","")
 SET STATUS "Kopieren provis\ge*.*"
 COPY _netpath$ + "provis\ge*.*" TO _netpath$ + "export\provis\ge*.*"
 SET STATUS "Kopieren provis\kver*.*"
 COPY _netpath$ + "provis\k*.*" TO _netpath$ + "export\provis\k*.*"
    w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das kvtmp.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\provis\kvtmp.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF EXISTS (_netpath$ + "export\provis\kukto.sbf") THEN 
     DELETE _netpath$ + "export\provis\kukto.*"
     WAIT FOR 3
   END IF 
   IF reqfle% = 1 THEN CALL Fehler("KVTMP wurden kopiert","")
 SET STATUS "Kopieren provis\kuk*.*"
 REM COPY _netpath$ + "provis\kuk*.*" TO _netpath$ + "export\provis\kuk*.*"
 SET STATUS "Kopieren provis\m*.*"
 COPY _netpath$ + "provis\m*.*" TO _netpath$ + "export\provis\m*.*"
 IF reqfle% = 1 THEN CALL Fehler("Mitarbeiter wurden kopiert","")
 SET STATUS "Kopieren provis\sp*.*"
 COPY _netpath$ + "provis\sp*.*" TO _netpath$ + "export\provis\sp*.*"
    w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das sparten.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\provis\sparten.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF reqfle% = 1 THEN CALL Fehler("Sparten wurden kopiert","")
 SET STATUS "Kopieren provis\stam*.*"
 REM COPY _netpath$ + "provis\stam*.*" TO _netpath$ + "export\provis\stam*.*"
 REM IF reqfle% = 1 THEN CALL Fehler("STAMM wurden kopiert","")
 SET STATUS "Kopieren provis\verm*.*"
 COPY _netpath$ + "provis\verm*.*" TO _netpath$ + "export\provis\verm*.*"
 SET STATUS "Kopieren provis\vor*.*"
 COPY _netpath$ + "provis\vor*.*" TO _netpath$ + "export\provis\vor*.*"
 SET STATUS "Kopieren provis\vko*.*"
 COPY _netpath$ + "provis\vko*.*" TO _netpath$ + "export\provis\vko*.*"
 SET STATUS "Kopieren provis\waehr*.*"
 COPY _netpath$ + "provis\waehr*.*" TO _netpath$ + "export\provis\waehr*.*"
    w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das waehrung.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\provis\waehrung.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF reqfle% = 1 THEN CALL Fehler("WAEHRUNG wurden kopiert","")
 SET STATUS "Kopieren provis\tarif*.*"
 COPY _netpath$ + "provis\tarif*.*" TO _netpath$ + "export\provis\tarif*.*"
    w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das tarif.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\provis\tarif.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF reqfle% = 1 THEN CALL Fehler("TARIF wurden kopiert","")
 SET STATUS "Kopieren provis\agdir*.*"
 COPY _netpath$ + "provis\agdir*.*" TO _netpath$ + "export\provis\agdir*.*"
 SET STATUS "Kopieren provis\vprod*.*"
 COPY _netpath$ + "provis\vp*.*" TO _netpath$ + "export\provis\vp*.*"
    w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das vprodukt.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\provis\vprodukt.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF reqfle% = 1 THEN CALL Fehler("VPRODUKT wurden kopiert","")
 SET STATUS "Kopieren provis\aums*.*"
 COPY _netpath$ + "provis\aums*.*" TO _netpath$ + "export\provis\aums*.*"
 SET STATUS "Kopieren provis\kgeadr*.*"
 COPY _netpath$ + "provis\kgeadr*.*" TO _netpath$ + "export\provis\kgeadr*.*"
 SET STATUS "Kopieren provis\kurs*.*"
 COPY _netpath$ + "provis\kurs*.*" TO _netpath$ + "export\provis\kurs*.*"
    w% = 0
   WHILE w% = 0
     SET STATUS "warte darauf das kurshist.sbf zu Ende kopiert wurde"
     IF EXISTS (_netpath$ + "export\provis\kurshist.sbf") THEN 
       w% = 1
     ELSE 
       WAIT FOR 3
     END IF 
   WEND 
   IF reqfle% = 1 THEN CALL Fehler("KURSHIST wurden kopiert","")
 REM COPY _netpath$ + "provis\z*.*" TO _netpath$ + "export\provis\z*.*"
 SET STATUS "Lîschen der Masken, Icons und doc files"
 ON ERROR GOTO ex0711975d
 DELETE _netpath$ + "export\provis\*.xls"
ex0711975d:   
 ON ERROR GOTO ex0711975c
 DELETE _netpath$ + "export\provis\*.sbq"
ex0711975c: 
 ON ERROR GOTO ex0711975b
 DELETE _netpath$ + "export\provis\*.sbp"
ex0711975b:  
 ON ERROR GOTO ex0711975a
 DELETE _netpath$ + "export\provis\loepro*.*"
ex0711975a: 
 ON ERROR GOTO ex0711975
 DELETE _netpath$ + "export\provis\*.sbv"
ex0711975: 
 ON ERROR GOTO ex0711976 
 DELETE _netpath$ + "export\provis\*.hlp"
ex0711976: 
 ON ERROR GOTO ex0711976a 
 DELETE _netpath$ + "export\provis\*.ico"
ex0711976a: 
 ON ERROR GOTO ex0711977 
 DELETE _netpath$ + "export\provis\*.sb!"
ex0711977:   
 ON ERROR GOTO ex0711978 
 DELETE _netpath$ + "export\provis\*.exe"
ex0711978:    
 ON ERROR GOTO ex0711979a 
 DELETE _netpath$ + "export\provis\*.doc"
ex0711979a:    
 ON ERROR GOTO ex0711979 
 DELETE _netpath$ + "export\provis\superbase.net"
ex0711979:    
 ON ERROR GOTO exp200620061 
 DELETE _netpath$ + "export\provis\agdir*.*"
exp200620061:     
 ON ERROR GOTO exp200620062 
 DELETE _netpath$ + "export\provis\foerk*.*"
exp200620062:      
 ON ERROR GOTO exp200620063 
 DELETE _netpath$ + "export\provis\geadru*.*"
exp200620063:      
 ON ERROR GOTO exp200620064
 DELETE _netpath$ + "export\provis\geko*.*"
exp200620064:      
 ON ERROR GOTO exp200620065
 DELETE _netpath$ + "export\provis\K?0*.*"
exp200620065:      
 ON ERROR GOTO exp200620066 
 DELETE _netpath$ + "export\provis\krg*.*"
exp200620066:      
 ON ERROR GOTO exp200620067 
 DELETE _netpath$ + "export\provis\kvf*.*"
exp200620067:      
 ON ERROR GOTO exp200620068
 DELETE _netpath$ + "export\provis\kvp*.*"
exp200620068:       
 ON ERROR GOTO exp200620069
 DELETE _netpath$ + "export\provis\kvs*.*"
exp200620069:       
 ON ERROR GOTO exp2006200610
 DELETE _netpath$ + "export\provis\kvt*.*"
exp2006200610:       
 ON ERROR GOTO exp2006200611
 DELETE _netpath$ + "export\provis\spezko*.*"
exp2006200611:       
 ON ERROR GOTO exp2006200612
 DELETE _netpath$ + "export\provis\vko*.*"
exp2006200612:       
 ON ERROR GOTO exp2006200613
 DELETE _netpath$ + "export\provis\vpgeko*.*"
exp2006200613:       
 ON ERROR GOTO exp2006200614
 DELETE _netpath$ + "export\provis\vpspez*.*"
exp2006200614:       
 ON ERROR GOTO exp2006200615
 DELETE _netpath$ + "export\provis\maaus*.*"
exp2006200615:       
 ON ERROR GOTO exp2006200616
 DELETE _netpath$ + "export\provis\makre*.*"
exp2006200616:         
 ON ERROR GOTO exp2006200617
 DELETE _netpath$ + "export\provis\aum*.*"
exp2006200617:        
 ON ERROR GOTO exp2006200618
 DELETE _netpath$ + "export\provis\maaus*.*"
exp2006200618:        





 


 COPY _netpath$ + "export\support\*.*" TO _netpath$ + "export\office\"
 WAIT FOR 10
 REQUEST "ENDE des Kopierens","",2
 IF reqfle% = 1 THEN CALL Fehler("ENDE des Kopierens","")
 SET STATUS ""
 CALL DFile(5,"supervis" + _fpw$)
 INDEX codema.supervis
 SELECT FIRST LOCK 
 WHILE NOT EOF ("supervis")
   SET STATUS "bearbeite Mitarbeiter: " + name.supervis
   IF nachname.supervis LIKE manach$ AND vorname.supervis LIKE mavor$ THEN 
     SELECT NEXT 
   ELSE 
     SELECT REMOVE 
   END IF 
 WEND 
 SET STATUS "Vorbereitung der weiteren Verarbeitung"
 WAIT FOR 10
 IF RECCOUNT ("supervis") < 1 THEN 
   BLANK FILE "supervis"
   codema.supervis = 1
   Nachname.supervis = "Supervisor"
   name.supervis = "Supervisor"
   STORE FILE "supervis"
 END IF 
 CLOSE FILE "supervis"
 IF PrvVerfahr$ LIKE "Zahlungseingang" THEN 
   IF reqExpBuch% = 1 THEN 
     CALL DFile(7,"buchung1" + _fpw$)
     SET STATUS "Vorbereitung Buchungsdatei"
     REM UPDATE ExpAg.buchung1 = "0"
     REM END UPDATE 
     i% = 0
     FILE "Buchung1"
     INDEX ExpAG.Buchung1
     SELECT KEY "1" LOCK FILE "buchung1" INDEX ExpAG.buchung1
   
     WHILE NOT EOF ("buchung1") AND expag.buchung1 = "1"
       IF expag.buchung1 = "1" THEN 
         i% = i% + 1
         expag.buchung1 = "0"
         STORE FILE "Buchung1"
         SELECT FIRST 
         SELECT KEY "1" LOCK FILE "buchung1" INDEX ExpAG.buchung1
         SET STATUS "Vorbereitung Buchungsdatei  " + STR$ (i%,"99999999")
       ELSE 
         SELECT NEXT LOCK 
       END IF 
     WEND 
   END IF 
 ELSE 
   IF reqExpBuch% = 1 THEN 
     CALL DFile(7,"buchung" + _fpw$)
     SET STATUS "Vorbereitung Buchungsdatei"
     REM UPDATE ExpAg.buchung = "0"
     REM END UPDATE 
     i% = 0
     FILE "Buchung"
     INDEX ExpAG.Buchung
     SELECT KEY "1" LOCK FILE "buchung" INDEX ExpAG.buchung
   
     WHILE NOT EOF ("buchung") AND expag.buchung = "1"
       IF expag.buchung = "1" THEN 
         i% = i% + 1
         expag.buchung = "0"
         STORE FILE "Buchung"
         SELECT FIRST 
         SELECT KEY "1" LOCK FILE "buchung" INDEX ExpAG.buchung
         SET STATUS "Vorbereitung Buchungsdatei  " + STR$ (i%,"99999999")
       ELSE 
         SELECT NEXT LOCK 
       END IF 
     WEND 
   END IF 
 END IF 
 IF reqExpBuch% = 1 THEN 
   CALL DFile(7,"buchtemp" + _fpw$)
   FILE "buchtemp"
   REMOVE FROM FILE "buchtemp"
 END IF 
 CALL DFile(7,"sparten" + _fpw$)
 REM REQUEST "Sollen die Notizen in der Spartendatei ","fÅr die zu exportierende Agentur gelîscht werden?",130,req%
 IF reqsp% = 1 THEN 
   UPDATE Notiz.sparten = ""
   END UPDATE 
 END IF 
 CALL DFile(7,"geadr" + _fpw$)
 REM REQUEST "Sollen die Notizen in der Gesellschaftsdatei ","fÅr die zu exportierende Agentur gelîscht werden?",130,req%
 IF reqge% = 1 THEN 
   UPDATE Notiz.geadr = ""
   END UPDATE 
 END IF 
 CALL DFile(7,"maadr" + _fpw$)
   SET STATUS "Vorbereitung Mitarbeiterdatei"
   i% = 0
   FILE "maadr"
   INDEX ExpAG.maadr
   SELECT KEY "1" LOCK FILE "maadr" INDEX ExpAG.maadr
   WHILE NOT EOF ("maadr") AND expag.maadr = "1"
     IF expag.maadr = "1" THEN 
       i% = i% + 1
       expag.maadr = "0"
       STORE FILE "maadr"
       SELECT FIRST 
       SELECT KEY "1" LOCK FILE "maadr" INDEX ExpAG.maadr
       SET STATUS "Vorbereitung Mitarbeiterdatei  " + STR$ (i%,"99999999")
     ELSE 
       SELECT NEXT LOCK 
     END IF 
   WEND 
   REM REQUEST "Sollen die Notizen in der Vermittlerdatei ","fÅr die zu exportierende Agentur gelîscht werden?",130,req%
   IF reqma% = 1 THEN 
     UPDATE Notiz.maadr = ""
     END UPDATE 
   END IF 
 REM UPDATE ExpAg.maadr = "0"
 REM END UPDATE 
 CALL DFile(7,"kvertrag" + _fpw$)
 SET STATUS "Vorbereitung Vertragsdatei"
 REM UPDATE ExpAg.kvertrag = "0"
 REM END UPDATE 
   SET STATUS "Vorbereitung Vertragsdatei"
   i% = 0
   FILE "Kvertrag"
   INDEX ExpAG.Kvertrag
   SELECT KEY "1" LOCK FILE "Kvertrag" INDEX ExpAG.Kvertrag
   WHILE NOT EOF ("Kvertrag") AND expag.Kvertrag = "1"
     IF expag.Kvertrag = "1" THEN 
       i% = i% + 1
       expag.Kvertrag = "0"
       STORE FILE "Kvertrag"
       SELECT FIRST 
       SELECT KEY "1" LOCK FILE "Kvertrag" INDEX ExpAG.Kvertrag
       SET STATUS "Vorbereitung Vertragsdatei  " + STR$ (i%,"99999999")
     ELSE 
       SELECT NEXT LOCK 
     END IF 
   WEND 
 
 IF reqExpBuch% = 1 THEN 
   IF PrvVerfahr$ LIKE "Zahlungseingang" THEN 
     CALL DFile(7,"zeingan1" + _fpw$)
     SET STATUS "Vorbereitung Zahlungseingangddatei"
     FILE "zeingan1"
   ON ERROR GOTO f1701200410
   CALL FldAdd1("EXPAG","TXT;1",1)
   SAVE FILE "zeingan1"
f1701200410: 
   ON ERROR GOTO ErrorHandler 
     INDEX ExpAG.zeingan1
     SELECT KEY "1" LOCK FILE "zeingan1" INDEX ExpAG.zeingan1
     WHILE NOT EOF ("zeingan1") AND expag.zeingan1 = "1"
       IF expag.zeingan1 = "1" THEN 
         i% = i% + 1
         expag.zeingan1 = "0"
         STORE FILE "zeingan1"
         SELECT FIRST 
         SELECT KEY "1" LOCK FILE "zeingan1" INDEX ExpAG.zeingan1
         SET STATUS "Vorbereitung Zahlungseingangsdatei  " + STR$ (i%,",99999999")
       ELSE 
         SELECT NEXT LOCK 
       END IF 
     WEND 
   ELSE 
     CALL DFile(7,"zeingang" + _fpw$)
     SET STATUS "Vorbereitung Zahlungseingangddatei"
     FILE "zeingang"
   ON ERROR GOTO f1701200420
   CALL FldAdd1("EXPAG","TXT;1",1)
   SAVE FILE "zeingang"
f1701200420: 
   ON ERROR GOTO ErrorHandler 
     INDEX ExpAG.zeingang
     SELECT KEY "1" LOCK FILE "zeingang" INDEX ExpAG.zeingang
     WHILE NOT EOF ("zeingang") AND expag.zeingang = "1"
       IF expag.zeingang = "1" THEN 
         i% = i% + 1
         expag.zeingang = "0"
         STORE FILE "zeingang"
         SELECT FIRST 
         SELECT KEY "1" LOCK FILE "zeingang" INDEX ExpAG.zeingang
         SET STATUS "Vorbereitung Zahlungseingangsdatei  " + STR$ (i%,",99999999")
       ELSE 
         SELECT NEXT LOCK 
       END IF 
     WEND 
   END IF 
 
 END IF 
 CALL DFile(6,"adressen" + _fpw$)
 SET STATUS "Vorbereitung Adressdatei"
 REM UPDATE ExpAg.GAdrDat$ = "0"
 REM END UPDATE 
   i% = 0
   FILE "Adressen"
   INDEX ExpAG.GAdrDat$
   SELECT KEY "1" LOCK FILE "Adressen" INDEX ExpAG.GAdrDat$
   WHILE NOT EOF ("Adressen") AND expag.GAdrDat$ = "1"
     IF expag.GAdrDat$ = "1" THEN 
       i% = i% + 1
       expag.GAdrDat$ = "0"
       STORE FILE "Adressen"
       SELECT FIRST 
       SELECT KEY "1" LOCK FILE "Adressen" INDEX ExpAG.GAdrDat$
       SET STATUS "Vorbereitung Adressdatei  " + STR$ (i%,"99999999")
     ELSE 
       SELECT NEXT LOCK 
     END IF 
   WEND 

 CALL DFile(6,"telefon" + _fpw$)
 SET STATUS "Vorbereitung Telefondatei"
 REM UPDATE ExpAg.GAdrDat$ = "0"
 REM END UPDATE 
   i% = 0
   FILE "Telefon"
   INDEX ExpAG.Telefon
   SELECT KEY "1" LOCK FILE "Telefon" INDEX ExpAG.Telefon
   WHILE NOT EOF ("Telefon") AND expag.Telefon = "1"
     IF expag.Telefon = "1" THEN 
       i% = i% + 1
       expag.Telefon = "0"
       STORE FILE "Telefon"
       SELECT FIRST 
       SELECT KEY "1" LOCK FILE "Telefon" INDEX ExpAG.Telefon
       SET STATUS "Vorbereitung Telefondatei  " + STR$ (i%,"99999999")
     ELSE 
       SELECT NEXT LOCK 
     END IF 
   WEND 

 IF bîse% = - 1 THEN 
   CALL DFile(6,"akquise" + _fpw$)
   SET STATUS "Vorbereitung Akquise"
   i% = 0
   FILE "Akquise"
   ON ERROR GOTO f170120041
   CALL FldAdd1("EXPAG","TXT;1",1)
   SAVE FILE "AKQUISE"
f170120041: 
   ON ERROR GOTO ErrorHandler
   INDEX ExpAG.Akquise
   SELECT KEY "1" LOCK FILE "Akquise" INDEX ExpAG.Akquise
   WHILE NOT EOF ("Akquise") AND expag.Akquise = "1"
     IF expag.Akquise = "1" THEN 
       i% = i% + 1
       expag.Akquise = "0"
       STORE FILE "Akquise"
       SELECT FIRST 
       SELECT KEY "1" LOCK FILE "Akquise" INDEX ExpAG.Akquise
       SET STATUS "Vorbereitung Akquisedatei  " + STR$ (i%,",99999999")
     ELSE 
       SELECT NEXT LOCK 
     END IF 
   WEND 


   CALL DFile(6,"dokument" + _fpw$)
   SET STATUS "Vorbereitung Dokument"
   i% = 0
   FILE "dokument"
   ON ERROR GOTO f170120042
   CALL FldAdd1("EXPAG","TXT;1",1)
   SAVE FILE "dokument"
f170120042: 
   ON ERROR GOTO ErrorHandler 
   INDEX ExpAG.dokument
   SELECT KEY "1" LOCK FILE "dokument" INDEX ExpAG.dokument
   WHILE NOT EOF ("dokument") AND expag.dokument = "1"
     IF expag.dokument = "1" THEN 
       i% = i% + 1
       expag.dokument = "0"
       STORE FILE "dokument"
       SELECT FIRST 
       SELECT KEY "1" LOCK FILE "dokument" INDEX ExpAG.dokument
       SET STATUS "Vorbereitung Dokumentdatei  " + STR$ (i%,",99999999")
     ELSE 
       SELECT NEXT LOCK 
     END IF 
   WEND 

   CALL DFile(6,"dokkv" + _fpw$)
   SET STATUS "Vorbereitung Dokkv"
   i% = 0
   FILE "dokkv"
   ON ERROR GOTO f170120043
   CALL FldAdd1("EXPAG","TXT;1",1)
   SAVE FILE "DOKKV"
f170120043: 
   ON ERROR GOTO ErrorHandler 
   INDEX ExpAG.dokkv
   SELECT KEY "1" LOCK FILE "dokkv" INDEX ExpAG.dokkv
   WHILE NOT EOF ("dokkv") AND expag.dokkv = "1"
     IF expag.dokkv = "1" THEN 
       i% = i% + 1
       expag.dokkv = "0"
       STORE FILE "dokkv"
       SELECT FIRST 
       SELECT KEY "1" LOCK FILE "dokkv" INDEX ExpAG.dokkv
       SET STATUS "Vorbereitung Dokkv  " + STR$ (i%,",99999999")
     ELSE 
       SELECT NEXT LOCK 
     END IF 
   WEND 

   CALL DFile(6,"dokge" + _fpw$)
   SET STATUS "Vorbereitung Dokge"
   i% = 0
   FILE "dokge"
   ON ERROR GOTO f170120044
   CALL FldAdd1("EXPAG","TXT;1",1)
   SAVE FILE "DOKGE"
f170120044: 
   ON ERROR GOTO ErrorHandler 
   INDEX ExpAG.dokge
   SELECT KEY "1" LOCK FILE "dokge" INDEX ExpAG.dokge
   WHILE NOT EOF ("dokge") AND expag.dokge = "1"
     IF expag.dokge = "1" THEN 
       i% = i% + 1
       expag.dokge = "0"
       STORE FILE "dokge"
       SELECT FIRST 
       SELECT KEY "1" LOCK FILE "dokge" INDEX ExpAG.dokge
       SET STATUS "Vorbereitung Dokge  " + STR$ (i%,",99999999")
     ELSE 
       SELECT NEXT LOCK 
     END IF 
   WEND 

   CALL DFile(6,"dokma" + _fpw$)
   SET STATUS "Vorbereitung DokMa"
   i% = 0
   FILE "dokma"
   ON ERROR GOTO f170120045
   CALL FldAdd1("EXPAG","TXT;1",1)
   SAVE FILE "DOKMA"
f170120045: 
   ON ERROR GOTO ErrorHandler 
   INDEX ExpAG.dokma
   SELECT KEY "1" LOCK FILE "dokma" INDEX ExpAG.dokma
   WHILE NOT EOF ("dokma") AND expag.dokma = "1"
     IF expag.dokma = "1" THEN 
       i% = i% + 1
       expag.dokma = "0"
       STORE FILE "dokma"
       SELECT FIRST 
       SELECT KEY "1" LOCK FILE "dokma" INDEX ExpAG.dokma
       SET STATUS "Vorbereitung DokMa  " + STR$ (i%,",99999999")
     ELSE 
       SELECT NEXT LOCK 
     END IF 
   WEND 
 END IF 


 REM CALL DFile(6,GAkquiDat$ + _fpw$)
 REM SET STATUS "Vorbereitung Termindatei"
 REM UPDATE ExpAg.GAkquiDat$ = "0"
 REM END UPDATE 
 MOUSE OFF 
 REM Mitarbeiter festlegen
 FILE "maadr"
 SELECT KEY _cuma% LOCK FILE "MAADR" INDEX CodeMA.MAADR
 IF vorgÑnger.maadr = _cuma% THEN 
   _cuma% = 0
   CALL Fehler("Export wird nicht durchgefÅhrt, da Agentur sich selbst als VorgÑnger hat!","")
 END IF 
 ExpAG.maadr = "1"
 STORE FILE "maadr"
 SET INDEX codema.MAADR
 INDEX codema.MAADR
 SELECT FIRST 
 rec% = RECCOUNT ("maadr")
 DIM maa12%(rec% + 5000)
 DIM maa12st%(rec% + 5000)
 REM Aufbau eines Arrays mit den Nummern der Mitarbeiter, die der Struktur unterstellt sind
 IF _cuma% = 0 THEN GOTO expend071197
 ok% = 0
 anz% = 1
 anzold% = 0
 maa12%(0) = _cuma%
 REM CALL Fehler ("DEBUG-Beginn","***********************************************************************************************************************************************************************************************************")
 CALL Fehler("Export-Feststellung der Vermittler","")
 IF reqaktag% = 1 THEN GOTO reagexp290420041
 MOUSE OFF 
 ku% = 0
 cuold% = 0
 stold% = 1
startAGSel1611: 
 FILE "maadr"
 SELECT WHERE 
 SELECT WHERE VorgÑnger.maadr = cu%
 SELECT FIRST LOCK 
 REM startanz% = stold%
 WHILE NOT EOF ("maadr")
   ok% = 0
   FOR i% = 0 TO anz%
     IF maa12%(i%) = codema.maadr THEN 
       ok% = 1
       i% = anz%
     END IF 
   NEXT i%
   IF ok% = 0 THEN 
     IF codema.maadr > 0 THEN 
       maa12%(anz%) = codema.maadr
       maa12st%(anz%) = 0
       ExpAG.maadr = "1"
       STORE FILE "maadr"
       anz% = anz% + 1
     END IF 
   END IF 
 SELECT NEXT LOCK 
 WEND 
 
 FOR startanz% = stold% TO anz%
   IF maa12st%(startanz%) = 0 THEN 
     cu% = maa12%(startanz%)
     maa12st%(startanz%) = 1
     stold% = startanz%
     GOTO startAGSel1611:
   END IF 
 NEXT startanz%
 
 
 REM CALL Fehler("DEBUG","")
 CALL Fehler("Export-Feststellung der Vermittler","Ende")
reagexp290420041: 
 REMOVE FROM FILE "maadr" WHERE ExpAG.maadr <> "1"
 REM Setzen ExpAG in den verschiedenen Dateien
 FOR i% = 0 TO anz%
  FILE "Kvertrag"
  INDEX CodeMA.kvertrag
  SELECT FIRST 
  codemaKV% = maa12%(i%)
  IF codemaKV% < 1 THEN GOTO xtend250701001
  SELECT KEY codemaKV% LOCK FILE "KVERTRAG" INDEX codema.kvertrag
  WHILE NOT EOF ("KVERTRAG") AND codema.kvertrag = codemaKV%
    SET STATUS "Kennzeichen in Vertragsdatei setzen ! " + VS_Nr.kvertrag
    ExpAG.kvertrag = "1"
    STORE FILE "KVERTRAG"
    SELECT NEXT LOCK 
  WEND 
  REM CALL Fehler("Routine einbauen,um dafÅr zu sorgen","")
  IF reqnV% = 1 THEN 
    REM dafÅr sorgen das alle Adressen, Telefonnr, evt Dokumente, evt Termine markiert werden
    IF EXISTS (codemaKV%,codema.adressen) THEN 
      FILE "Adressen"
      INDEX codema.adressen
      SELECT FIRST FILE "adressen" INDEX codema.adressen
      SELECT KEY codemaKV% LOCK FILE "Adressen" INDEX codema.adressen
      iab% = 0
      WHILE NOT EOF ("Adressen") AND codema.adressen = codemaKV%
         iab% = iab% + 1
         SET STATUS "Markiere Adressen zur Agentur :" + STR$ (iab%,",99999999")
         codeku% = codeku.adressen
         IF codema.adressen = codemaKV% THEN 
           ExpAG.adressen = "1"
           STORE FILE "adressen"
           IF EXISTS (codeku.adressen,codeku.telefon) THEN 
             SELECT FIRST FILE "telefon" INDEX codeku.telefon
             SELECT KEY codeku.adressen LOCK FILE "telefon" INDEX codeku.telefon
             WHILE NOT EOF ("Telefon") AND codeku.telefon = codeku.adressen
               IF codeku.telefon = codeku.adressen THEN 
                 ExpAG.telefon = "1"
                 STORE FILE "telefon"
               END IF 
               SELECT NEXT LOCK FILE "telefon" INDEX codeku.telefon
             WEND 
           END IF 
           IF alleVMKV% = 1 THEN 
             IF EXISTS (codeku.adressen,codeku.kvertrag) THEN 
               FILE "kvertrag"
               INDEX codeku.kvertrag
               SELECT FIRST FILE "kvertrag" INDEX codeku.kvertrag
               SELECT KEY codeku.adressen LOCK FILE "kvertrag" INDEX codeku.kvertrag
               WHILE NOT EOF ("kvertrag") AND codeku.kvertrag = codeku%
                 IF codeku.kvertrag = codeku% THEN 
                   ExpAG.kvertrag = "1"
                   STORE FILE "kvertrag"
                 END IF 
                 SELECT NEXT LOCK FILE "kvertrag" INDEX codeku.kvertrag
               WEND 
             END IF 
           END IF 
           IF bîse% = - 1 THEN 
             IF EXISTS (codeku.adressen,codeku.akquise) THEN 
               SELECT FIRST FILE "akquise" INDEX codeku.akquise
               SELECT KEY codeku.adressen LOCK FILE "akquise" INDEX codeku.akquise
               WHILE NOT EOF ("akquise") AND codeku.akquise = codeku.adressen
                 IF codeku.akquise = codeku.adressen THEN 
                   ExpAG.akquise = "1"
                   STORE FILE "akquise"
                 END IF 
                 SELECT NEXT LOCK FILE "akquise" INDEX codeku.akquise
               WEND 
             END IF 
             IF EXISTS (codeku.adressen,codeku.dokument) THEN 
               SELECT FIRST FILE "dokument" INDEX codeku.dokument
               SELECT KEY codeku.adressen LOCK FILE "dokument" INDEX codeku.dokument
               WHILE NOT EOF ("dokument") AND codeku.dokument = codeku.adressen
                 IF codeku.dokument = codeku.adressen THEN 
                   ExpAG.dokument = "1"
                   STORE FILE "dokument"
                 END IF 
                 SELECT NEXT LOCK FILE "dokument" INDEX codeku.dokument
               WEND 
             END IF 
           END IF 
         END IF 
         SELECT NEXT LOCK FILE "adressen" INDEX codema.adressen
      WEND 
    END IF 
  END IF 
  IF PrvVerfahr$ LIKE "Zahlungseingang" THEN 
    
    IF reqExpBuch% = 1 THEN 
      IF EXISTS (maa12%(i%),codema.buchung1) THEN 
        FILE "Buchung1"
        INDEX codema.buchung1
        SELECT FIRST 
        codemaBU% = maa12%(i%)
        SELECT KEY codemaBU% LOCK FILE "Buchung1" INDEX codema.buchung1
        IF reqExpBuch% = 1 THEN 
          WHILE NOT EOF ("buchung1") AND codema.buchung1 = codemaKV%
            SET STATUS "Kennzeichen in Buchungsdatei setzen ! " + LEFT$ (Buchungstext.buchung1,30)
            ExpAG.buchung1 = "1"
            STORE FILE "buchung1"
            IF EXISTS (codevt.buchung1,codevt.zeingan1) THEN 
              FILE "zeingan1"
              INDEX codevt.zeingan1
              SELECT FIRST FILE "zeingan1" INDEX codevt.zeingan1
              SELECT KEY codevt.buchung1 LOCK FILE "zeingan1" INDEX codevt.zeingan1
              WHILE NOT EOF ("zeingan1") AND codevt.zeingan1 = codevt.buchung1
                ExpAG.zeingan1 = "1"
                STORE FILE "zeingan1"
                SELECT NEXT LOCK FILE "zeingan1"
              WEND 
            END IF 
            FILE "buchung1"
            SELECT NEXT LOCK 
          WEND 
        END IF 
        SET STATUS "Kennzeichen in Buchungsdatei setzen !"
        REM UPDATE ExpAG.buchung1 = "1" WHERE codema.buchung1 = maa12%(i%)
        REM END UPDATE 
      END IF 
    END IF 
    REM IF EXISTS (maa12%(i%),codema.zeingan1) THEN 
      REM SET STATUS "Kennzeichen in Buchungsdatei setzen !"
      REM UPDATE ExpAG.zeingan1 = "1" WHERE codema.zeingan1 = maa12%(i%)
      REM END UPDATE 
    REM END IF 
  ELSE 
    IF reqExpBuch% = 1 THEN 
      IF EXISTS (maa12%(i%),codema.buchung) THEN 
        FILE "Buchung"
        INDEX codema.buchung
        SELECT FIRST 
        codemaBU% = maa12%(i%)
        SELECT KEY codemaBU% LOCK FILE "Buchung" INDEX codema.buchung
        IF reqExpBuch% = 1 THEN 
          WHILE NOT EOF ("buchung") AND codema.buchung = codemaKV%
            SET STATUS "Kennzeichen in Buchungsdatei setzen !"
            ExpAG.buchung = "1"
            STORE FILE "buchung"
            IF EXISTS (codevt.buchung,codevt.zeingang) THEN 
              FILE "zeingang"
              INDEX codevt.zeingang
              SELECT FIRST FILE "zeingang" INDEX codevt.zeingang
              SELECT KEY codevt.buchung LOCK FILE "zeingang" INDEX codevt.zeingang
              WHILE NOT EOF ("zeingang") AND codevt.zeingang = codevt.buchung
                ExpAG.zeingang = "1"
                STORE FILE "zeingang"
                SELECT NEXT LOCK FILE "zeingang"
              WEND 
            END IF 
            FILE "buchung"
            SELECT NEXT LOCK 
          WEND 
        END IF 
      END IF 
    END IF 
    REM IF EXISTS (maa12%(i%),codema.zeingang) THEN 
      REM SET STATUS "Kennzeichen in Buchungsdatei setzen !"
      REM UPDATE ExpAG.zeingang = "1" WHERE codema.zeingang = maa12%(i%)
      REM END UPDATE 
    REM END IF 
  END IF 
xtend250701001: 
 NEXT i%
 FILE "Kvertrag"
 INDEX ExpAG.kvertrag
 SELECT FIRST 
 SELECT KEY "1" FILE "KVERTRAG" INDEX ExpAG.kvertrag
 i1% = RECCOUNT ("Kvertrag")
 j1% = 0
 WHILE NOT EOF ("kvertrag") AND ExpAG.kvertrag = "1"
   
   IF ExpAG.kvertrag = "1" THEN 
     codeku% = codeku.kvertrag
     codege% = codege.kvertrag
     codevt% = lfdnr.kvertrag
     codema% = codema.kvertrag
     IF bîse% = - 1 THEN 
       IF EXISTS (codege%,codeku.dokge) THEN 
         SET STATUS "Kennzeichen in Dokge setzen !"
         FILE "dokge"
         UPDATE ExpAG.dokge = "1" WHERE codeku.dokge = codege%
         END UPDATE 
       END IF 
       IF bîse% = - 1 AND EXISTS (codema%,codeku.dokma) THEN 
         SET STATUS "Kennzeichen in Dokma setzen !"
         FILE "dokma"
         UPDATE ExpAG.dokma = "1" WHERE codeku.dokma = codema%
         END UPDATE 
       END IF 
       IF bîse% = - 1 AND EXISTS (codevt%,codeku.dokkv) THEN 
         SET STATUS "Kennzeichen in Dokkv setzen !"
         FILE "dokkv"
         UPDATE ExpAG.dokkv = "1" WHERE codeku.dokkv = codevt%
         END UPDATE 
       END IF 
       IF bîse% = - 1 AND EXISTS (codeku%,codeku.akquise) THEN 
         SET STATUS "Kennzeichen in Akquisedatei setzen !"
         FILE "akquise"
         UPDATE ExpAG.akquise = "1" WHERE codeku.akquise = codeku%
         END UPDATE 
       END IF 
       IF bîse% = - 1 AND EXISTS (codeku%,codeku.dokument) THEN 
         SET STATUS "Kennzeichen in Dokumentdatei setzen !"
         FILE "dokument"
         UPDATE ExpAG.dokument = "1" WHERE codeku.dokument = codeku%
         END UPDATE 
       END IF 
     END IF 
     IF EXISTS (codeku%,codeku.GAdrDat$) THEN 
       j1% = j1% + 1
       SELECT KEY codeku% LOCK FILE "adressen" INDEX codeku.GAdrDat$
       ExpAG.GAdrDat$ = "1"
       STORE FILE "Adressen"
     END IF 
     IF EXISTS (codeku%,codeku.Telefon) THEN 
       SET STATUS "Kennzeichen in Telefondatei setzen !"
       FILE "Telefon"
       UPDATE ExpAG.Telefon = "1" WHERE codeku.Telefon = codeku%
       END UPDATE 
     END IF 
   END IF 
 SELECT NEXT FILE "KVERTRAG"
 SET STATUS STR$ (j1%,"999999") + " DatensÑtze Åbernommen von :" + STR$ (i1%,"999999")
 WEND 
 MOUSE OFF 
 IF bîse% <> - 1 THEN GOTO weit310320043
   SET STATUS "Bereinigung AKQUISE!"
   FILE "AKQUISE"
   INDEX ExpAG.AKQUISE
   SELECT FIRST 
   SELECT WHERE ExpAG.AKQUISE = "1"
   dirmoment$ = DIRECTORY 
   IF EXISTS (_netpath$ + "Export\office\AKQUISE.csv") THEN 
     DELETE _netpath$ + "Export\office\AKQUISE.csv"
   END IF 
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
   Superbase.Converters.SBF.SourceFile = "AKQUISE"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = - 1
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.ASD.DestFormat = "ASCII Delimited"
   Superbase.Converters.ASD.DestFile = _netpath$ + "Export\office\AKQUISE.csv"
   Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
   Superbase.Converters.ASD.FieldSeparator = ","
   Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
   Superbase.Converters.ASD.ANSIConvert = - 1
   Superbase.Converters.ASD.Convert(Superbase.Converters.SBF)
   SELECT WHERE FILE "AKQUISE"
   REMOVE FROM FILE "AKQUISE":REM                               RemoveAll
   SELECT WHERE FILE "AKQUISE":REM                              ImportFile
   Superbase.Converters.ASD.SourceFormat = "ASCII Delimited"
   Superbase.Converters.ASD.SourceFile = _netpath$ + "EXPORT\office\AKQUISE.csv"
   Superbase.Converters.ASD.Descending = 0
   Superbase.Converters.ASD.Merge = - 1
   Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
   Superbase.Converters.ASD.FieldSeparator = ","
   Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
   Superbase.Converters.ASD.ANSIConvert = - 1
   Superbase.Converters.SBF.DestFormat = "Superbase"
   Superbase.Converters.SBF.DestFile = "AKQUISE.SBF"
   Superbase.Converters.SBF.IndexSkip = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.SBF.Convert(Superbase.Converters.ASD)
   IF EXISTS (_netpath$ + "Export\office\AKQUISE.csv") THEN 
     DELETE _netpath$ + "Export\office\AKQUISE.csv"
   END IF 

 MOUSE OFF 
 SET STATUS "Bereinigung DOKUMENT!"
 FILE "DOKUMENT"
 INDEX ExpAG.DOKUMENT
 SELECT FIRST 
 SELECT WHERE ExpAG.DOKUMENT = "1"
 dirmoment$ = DIRECTORY 
 IF EXISTS (_netpath$ + "Export\office\DOKUMENT.csv") THEN 
   DELETE _netpath$ + "Export\office\DOKUMENT.csv"
 END IF 
 Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
 Superbase.Converters.SBF.SourceFile = "DOKUMENT"
 Superbase.Converters.SBF.Descending = 0
 Superbase.Converters.SBF.Merge = - 1
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.ASD.DestFormat = "ASCII Delimited"
 Superbase.Converters.ASD.DestFile = _netpath$ + "Export\office\DOKUMENT.csv"
 Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
 Superbase.Converters.ASD.FieldSeparator = ","
 Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
 Superbase.Converters.ASD.ANSIConvert = - 1
 Superbase.Converters.ASD.Convert(Superbase.Converters.SBF)
 MOUSE OFF 
 SELECT WHERE FILE "DOKUMENT"
 REMOVE FROM FILE "DOKUMENT":REM                               RemoveAll
 SELECT WHERE FILE "DOKUMENT":REM                              ImportFile
 Superbase.Converters.ASD.SourceFormat = "ASCII Delimited"
 Superbase.Converters.ASD.SourceFile = _netpath$ + "EXPORT\office\DOKUMENT.csv"
 Superbase.Converters.ASD.Descending = 0
 Superbase.Converters.ASD.Merge = - 1
 Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
 Superbase.Converters.ASD.FieldSeparator = ","
 Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
 Superbase.Converters.ASD.ANSIConvert = - 1
 Superbase.Converters.SBF.DestFormat = "Superbase"
 Superbase.Converters.SBF.DestFile = "DOKUMENT.SBF"
 Superbase.Converters.SBF.IndexSkip = 0
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.SBF.Convert(Superbase.Converters.ASD)
 IF EXISTS (_netpath$ + "Export\office\DOKUMENT.csv") THEN 
   DELETE _netpath$ + "Export\office\DOKUMENT.csv"
 END IF 
 MOUSE OFF 

 SET STATUS "Bereinigung DOKMA!"
 FILE "DOKMA"
 INDEX ExpAG.DOKMA
 SELECT FIRST 
 SELECT WHERE ExpAG.DOKMA = "1"
 dirmoment$ = DIRECTORY 
 IF EXISTS (_netpath$ + "Export\office\DOKMA.csv") THEN 
   DELETE _netpath$ + "Export\office\DOKMA.csv"
 END IF 
 Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
 Superbase.Converters.SBF.SourceFile = "DOKMA"
 Superbase.Converters.SBF.Descending = 0
 Superbase.Converters.SBF.Merge = - 1
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.ASD.DestFormat = "ASCII Delimited"
 Superbase.Converters.ASD.DestFile = _netpath$ + "Export\office\DOKMA.csv"
 Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
 Superbase.Converters.ASD.FieldSeparator = ","
 Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
 Superbase.Converters.ASD.ANSIConvert = - 1
 Superbase.Converters.ASD.Convert(Superbase.Converters.SBF)
 SELECT WHERE FILE "DOKMA"
 REMOVE FROM FILE "DOKMA":REM                               RemoveAll
 SELECT WHERE FILE "DOKMA":REM                              ImportFile
 Superbase.Converters.ASD.SourceFormat = "ASCII Delimited"
 Superbase.Converters.ASD.SourceFile = _netpath$ + "EXPORT\office\DOKMA.csv"
 Superbase.Converters.ASD.Descending = 0
 Superbase.Converters.ASD.Merge = - 1
 Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
 Superbase.Converters.ASD.FieldSeparator = ","
 Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
 Superbase.Converters.ASD.ANSIConvert = - 1
 Superbase.Converters.SBF.DestFormat = "Superbase"
 Superbase.Converters.SBF.DestFile = "DOKMA.SBF"
 Superbase.Converters.SBF.IndexSkip = 0
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.SBF.Convert(Superbase.Converters.ASD)
 IF EXISTS (_netpath$ + "Export\office\DOKMA.csv") THEN 
   DELETE _netpath$ + "Export\office\DOKMA.csv"
 END IF 
 MOUSE OFF 
 SET STATUS "Bereinigung DOKKV!"
 FILE "DOKKV"
 INDEX ExpAG.DOKKV
 SELECT FIRST 
 SELECT WHERE ExpAG.DOKKV = "1"
 dirmoment$ = DIRECTORY 
 IF EXISTS (_netpath$ + "Export\office\DOKKV.csv") THEN 
   DELETE _netpath$ + "Export\office\DOKKV.csv"
 END IF 
 MOUSE OFF 
 Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
 Superbase.Converters.SBF.SourceFile = "DOKKV"
 Superbase.Converters.SBF.Descending = 0
 Superbase.Converters.SBF.Merge = - 1
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.ASD.DestFormat = "ASCII Delimited"
 Superbase.Converters.ASD.DestFile = _netpath$ + "Export\office\DOKKV.csv"
 Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
 Superbase.Converters.ASD.FieldSeparator = ","
 Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
 Superbase.Converters.ASD.ANSIConvert = - 1
 Superbase.Converters.ASD.Convert(Superbase.Converters.SBF)
 SELECT WHERE FILE "DOKKV"
 REMOVE FROM FILE "DOKKV":REM                               RemoveAll
 SELECT WHERE FILE "DOKKV":REM                              ImportFile
 Superbase.Converters.ASD.SourceFormat = "ASCII Delimited"
 Superbase.Converters.ASD.SourceFile = _netpath$ + "EXPORT\office\DOKKV.csv"
 Superbase.Converters.ASD.Descending = 0
 Superbase.Converters.ASD.Merge = - 1
 Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
 Superbase.Converters.ASD.FieldSeparator = ","
 Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
 Superbase.Converters.ASD.ANSIConvert = - 1
 Superbase.Converters.SBF.DestFormat = "Superbase"
 Superbase.Converters.SBF.DestFile = "DOKKV.SBF"
 Superbase.Converters.SBF.IndexSkip = 0
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.SBF.Convert(Superbase.Converters.ASD)
 IF EXISTS (_netpath$ + "Export\office\DOKKV.csv") THEN 
   DELETE _netpath$ + "Export\office\DOKKV.csv"
 END IF 
 MOUSE OFF 
 SET STATUS "Bereinigung DOKGE!"
 REM REMOVE FROM FILE "adressen" WHERE ExpAG.GAdrDat$ <> "1"
 FILE "DOKGE"
 INDEX ExpAG.DOKGE
 SELECT FIRST 
 SELECT WHERE ExpAG.DOKGE = "1"
 dirmoment$ = DIRECTORY 
 IF EXISTS (_netpath$ + "Export\office\DOKGE.csv") THEN 
   DELETE _netpath$ + "Export\office\DOKGE.csv"
 END IF 
 Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
 Superbase.Converters.SBF.SourceFile = "DOKGE"
 Superbase.Converters.SBF.Descending = 0
 Superbase.Converters.SBF.Merge = - 1
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.ASD.DestFormat = "ASCII Delimited"
 Superbase.Converters.ASD.DestFile = _netpath$ + "Export\office\DOKGE.csv"
 Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
 Superbase.Converters.ASD.FieldSeparator = ","
 Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
 Superbase.Converters.ASD.ANSIConvert = - 1
 Superbase.Converters.ASD.Convert(Superbase.Converters.SBF)
 SELECT WHERE FILE "DOKGE"
 REMOVE FROM FILE "DOKGE":REM                               RemoveAll
 SELECT WHERE FILE "DOKGE":REM                              ImportFile
 Superbase.Converters.ASD.SourceFormat = "ASCII Delimited"
 Superbase.Converters.ASD.SourceFile = _netpath$ + "EXPORT\office\DOKGE.csv"
 Superbase.Converters.ASD.Descending = 0
 Superbase.Converters.ASD.Merge = - 1
 Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
 Superbase.Converters.ASD.FieldSeparator = ","
 Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
 Superbase.Converters.ASD.ANSIConvert = - 1
 Superbase.Converters.SBF.DestFormat = "Superbase"
 Superbase.Converters.SBF.DestFile = "DOKGE.SBF"
 Superbase.Converters.SBF.IndexSkip = 0
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.SBF.Convert(Superbase.Converters.ASD)
 IF EXISTS (_netpath$ + "Export\office\DOKGE.csv") THEN 
   DELETE _netpath$ + "Export\office\DOKGE.csv"
 END IF 
 MOUSE OFF 
weit310320043: 
 MOUSE OFF 
 SET STATUS "Bereinigung Telefondatei!"
 REM REMOVE FROM FILE "adressen" WHERE ExpAG.GAdrDat$ <> "1"
 FILE "telefon"
 INDEX ExpAG.telefon
 SELECT FIRST 
 SELECT WHERE ExpAG.telefon = "1"
 dirmoment$ = DIRECTORY 
 IF EXISTS (_netpath$ + "Export\office\telefon.csv") THEN 
   DELETE _netpath$ + "Export\office\telefon.csv"
 END IF 
 Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
 Superbase.Converters.SBF.SourceFile = "TELEFON"
 Superbase.Converters.SBF.Descending = 0
 Superbase.Converters.SBF.Merge = - 1
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.ASD.DestFormat = "ASCII Delimited"
 Superbase.Converters.ASD.DestFile = _netpath$ + "Export\office\telefon.csv"
 Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
 Superbase.Converters.ASD.FieldSeparator = ","
 Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
 Superbase.Converters.ASD.ANSIConvert = - 1
 Superbase.Converters.ASD.Convert(Superbase.Converters.SBF)
 SELECT WHERE FILE "telefon"
 REMOVE FROM FILE "telefon":REM                               RemoveAll
 SELECT WHERE FILE "telefon":REM                              ImportFile
 Superbase.Converters.ASD.SourceFormat = "ASCII Delimited"
 Superbase.Converters.ASD.SourceFile = _netpath$ + "EXPORT\office\telefon.csv"
 Superbase.Converters.ASD.Descending = 0
 Superbase.Converters.ASD.Merge = - 1
 Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
 Superbase.Converters.ASD.FieldSeparator = ","
 Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
 Superbase.Converters.ASD.ANSIConvert = - 1
 Superbase.Converters.SBF.DestFormat = "Superbase"
 Superbase.Converters.SBF.DestFile = "TELEFON.SBF"
 Superbase.Converters.SBF.IndexSkip = 0
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.SBF.Convert(Superbase.Converters.ASD)
 IF EXISTS (_netpath$ + "Export\office\telefon.csv") THEN 
   DELETE _netpath$ + "Export\office\telefon.csv"
 END IF 
 MOUSE OFF 
 MOUSE OFF 
 SET STATUS "Bereinigung Adressdatei!"
 FILE "adressen"
 INDEX ExpAG.GAdrDat$
 MOUSE OFF 
 CALL ThousANoTh()
 MOUSE OFF 
 SELECT FIRST 
 SELECT WHERE ExpAG.GAdrDat$ = "1"
 dirmoment$ = DIRECTORY 
 IF EXISTS (_netpath$ + "Export\office\adressen.csv") THEN 
   DELETE _netpath$ + "Export\office\adressen.csv"
 END IF 
 Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
 Superbase.Converters.SBF.SourceFile = "ADRESSEN"
 Superbase.Converters.SBF.Descending = 0
 Superbase.Converters.SBF.Merge = - 1
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.ASD.DestFormat = "ASCII Delimited"
 Superbase.Converters.ASD.DestFile = _netpath$ + "Export\office\adressen.csv"
 Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
 Superbase.Converters.ASD.FieldSeparator = ","
 Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
 Superbase.Converters.ASD.ANSIConvert = - 1
 Superbase.Converters.ASD.Convert(Superbase.Converters.SBF)
 SELECT WHERE FILE "ADRESSEN"
 REMOVE FROM FILE "ADRESSEN":REM                               RemoveAll
 SELECT WHERE FILE "ADRESSEN":REM                              ImportFile
 Superbase.Converters.ASD.SourceFormat = "ASCII Delimited"
 Superbase.Converters.ASD.SourceFile = _netpath$ + "EXPORT\office\adressen.csv"
 Superbase.Converters.ASD.Descending = 0
 Superbase.Converters.ASD.Merge = - 1
 Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
 Superbase.Converters.ASD.FieldSeparator = ","
 Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
 Superbase.Converters.ASD.ANSIConvert = - 1
 Superbase.Converters.SBF.DestFormat = "Superbase"
 Superbase.Converters.SBF.DestFile = "ADRESSEN.SBF"
 Superbase.Converters.SBF.IndexSkip = 0
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.SBF.Convert(Superbase.Converters.ASD)
 IF EXISTS (_netpath$ + "Export\office\adressen.csv") THEN 
   DELETE _netpath$ + "Export\office\adressen.csv"
 END IF 
 MOUSE OFF 
 CALL ThousAYesTh()
 MOUSE OFF 
 REM SET STATUS "Bereinigung Termindatei!"
 REM REMOVE FROM FILE GAkquiDat$ WHERE ExpAG.GAkquiDat$ = "0"
 SET STATUS "Bereinigung Vertragsdatei!"
 REM REMOVE FROM FILE "kvertrag" WHERE ExpAG.kvertrag <> "1"
 MOUSE OFF 
 CALL ThousendNOK()
 MOUSE OFF 
 SET STATUS "Bereinigung Vertragsdatei!"
 FILE "kvertrag"
 INDEX ExpAG.kvertrag
 SELECT FIRST 
 SELECT WHERE expag.kvertrag = "1"
 IF EXISTS (_netpath$ + "Export\provis\kvertrag.csv") THEN 
   DELETE _netpath$ + "Export\provis\kvertrag.csv"
 END IF 
 SET STATUS "Export der gÅltigen Daten der Vertragsdatei in eine ASCII - Datei!"
 Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
 Superbase.Converters.SBF.SourceFile = "KVERTRAG"
 Superbase.Converters.SBF.Descending = 0
 Superbase.Converters.SBF.Merge = - 1
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.ASD.DestFormat = "ASCII Delimited"
 Superbase.Converters.ASD.DestFile = _netpath$ + "Export\provis\kvertrag.csv"
 Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
 Superbase.Converters.ASD.FieldSeparator = ","
 Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
 Superbase.Converters.ASD.ANSIConvert = - 1
 Superbase.Converters.ASD.Convert(Superbase.Converters.SBF)
 SELECT WHERE FILE "KVERTRAG"
 SET STATUS "Bereinigung Vertragsdatei!"
 REMOVE FROM FILE "KVERTRAG":REM                               RemoveAll
 SELECT WHERE FILE "KVERTRAG":REM                              ImportFile
 SET STATUS "Import der gÅltigen Daten der Vertragsdatei aus der ASCII - Datei!"
 Superbase.Converters.ASD.SourceFormat = "ASCII Delimited"
 Superbase.Converters.ASD.SourceFile = _netpath$ + "Export\provis\kvertrag.csv"
 Superbase.Converters.ASD.Descending = 0
 Superbase.Converters.ASD.Merge = - 1
 Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
 Superbase.Converters.ASD.FieldSeparator = ","
 Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
 Superbase.Converters.ASD.ANSIConvert = - 1
 Superbase.Converters.SBF.DestFormat = "Superbase"
 Superbase.Converters.SBF.DestFile = "KVERTRAG.SBF"
 Superbase.Converters.SBF.IndexSkip = 0
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.SBF.Convert(Superbase.Converters.ASD)
 IF EXISTS (_netpath$ + "Export\provis\kvertrag.csv") THEN 
   DELETE _netpath$ + "Export\provis\kvertrag.csv"
 END IF 
 CALL ThousendYesK()
 SET STATUS "Vertragsdatei fertiggestellt!"
 
 MOUSE OFF 
 
 IF PrvVerfahr$ LIKE "Zahlungseingang" THEN 
  IF reqExpBuch% = 1 THEN 
   SET STATUS "Bereinigung Buchungsdatei!"
   REM REMOVE FROM FILE "buchung1" WHERE ExpAG.buchung1 <> "1"
   MOUSE OFF 
   IF reqExpBuch% = 1 THEN 
     CALL ThousendNOB()
   END IF 
   MOUSE OFF 
   FILE "buchung1"
   INDEX Expag.buchung1
   SELECT WHERE expag.buchung1 = "1"
   IF EXISTS (_netpath$ + "Export\provis\BUCHUNG1.csv") THEN 
     DELETE _netpath$ + "Export\provis\BUCHUNG1.csv"
   END IF 
   IF reqExpBuch% = 1 THEN 
     SET STATUS "Export der gÅltigen Daten der Buchungsdatei in eine ASCII-Datei!"
     Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
     Superbase.Converters.SBF.SourceFile = "BUCHUNG1"
     Superbase.Converters.SBF.Descending = 0
     Superbase.Converters.SBF.Merge = - 1
     Superbase.Converters.SBF.LogErrors = 0
     Superbase.Converters.SBF.MultiResponse = 0
     Superbase.Converters.ASD.DestFormat = "ASCII Delimited"
     Superbase.Converters.ASD.DestFile = _netpath$ + "Export\provis\BUCHUNG1.csv"
     Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
     Superbase.Converters.ASD.FieldSeparator = ","
     Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
     Superbase.Converters.ASD.ANSIConvert = - 1
     Superbase.Converters.ASD.Convert(Superbase.Converters.SBF)
   END IF 
   MOUSE OFF 
   SELECT WHERE FILE "BUCHUNG1"
   SET STATUS "Bereinigung Buchungsdatei!"
   REMOVE FROM FILE "BUCHUNG1":REM                               RemoveAll
   SELECT WHERE FILE "BUCHUNG1":REM                              ImportFile
   IF reqExpBuch% = 1 THEN 
     SET STATUS "Import der gÅltigen Daten der Buchungsdatei aus der ASCII-Datei!"
     Superbase.Converters.ASD.SourceFormat = "ASCII Delimited"
     Superbase.Converters.ASD.SourceFile = _netpath$ + "Export\provis\BUCHUNG1.csv"
     Superbase.Converters.ASD.Descending = 0
     Superbase.Converters.ASD.Merge = - 1
     Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
     Superbase.Converters.ASD.FieldSeparator = ","
     Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
     Superbase.Converters.ASD.ANSIConvert = - 1
     Superbase.Converters.SBF.DestFormat = "Superbase"
     Superbase.Converters.SBF.DestFile = "BUCHUNG1.SBF"
     Superbase.Converters.SBF.IndexSkip = 0
     Superbase.Converters.SBF.LogErrors = 0
     Superbase.Converters.SBF.MultiResponse = 0
     Superbase.Converters.SBF.Convert(Superbase.Converters.ASD)
   END IF 
   MOUSE OFF 
   IF EXISTS (_netpath$ + "Export\provis\BUCHUNG1.csv") THEN 
     DELETE _netpath$ + "Export\provis\BUCHUNG1.csv"
   END IF 
   IF reqExpBuch% = 1 THEN 
     CALL ThousendYESB()
   END IF 
   SET STATUS "Buchungsdatei erstellt!"

   SET STATUS "Bereinigung Zdatei!"
   REM REMOVE FROM FILE "buchung1" WHERE ExpAG.buchung1 <> "1"
   MOUSE OFF 
   IF reqExpBuch% = 1 THEN 
     CALL ThousendNoZei()
   END IF 
   MOUSE OFF 
   FILE "zeingan1"
   INDEX Expag.zeingan1
   SELECT WHERE expag.zeingan1 = "1"
   IF EXISTS (_netpath$ + "Export\provis\zeingan1.csv") THEN 
     DELETE _netpath$ + "Export\provis\zeingan1.csv"
   END IF 
   IF reqExpBuch% = 1 THEN 
     SET STATUS "Export der gÅltigen Daten der zeingandatei in eine ASCII-Datei!"
     Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
     Superbase.Converters.SBF.SourceFile = "zeingan1"
     Superbase.Converters.SBF.Descending = 0
     Superbase.Converters.SBF.Merge = - 1
     Superbase.Converters.SBF.LogErrors = 0
     Superbase.Converters.SBF.MultiResponse = 0
     Superbase.Converters.ASD.DestFormat = "ASCII Delimited"
     Superbase.Converters.ASD.DestFile = _netpath$ + "Export\provis\zeingan1.csv"
     Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
     Superbase.Converters.ASD.FieldSeparator = ","
     Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
     Superbase.Converters.ASD.ANSIConvert = - 1
     Superbase.Converters.ASD.Convert(Superbase.Converters.SBF)
   END IF 
   SELECT WHERE FILE "zeingan1"
   SET STATUS "Bereinigung zeingandatei!"
   REMOVE FROM FILE "zeingan1":REM                               RemoveAll
   SELECT WHERE FILE "zeingan1":REM                              ImportFile
   IF reqExpBuch% = 1 THEN 
     SET STATUS "Import der gÅltigen Daten der zeingandatei aus der ASCII-Datei!"
     Superbase.Converters.ASD.SourceFormat = "ASCII Delimited"
     Superbase.Converters.ASD.SourceFile = _netpath$ + "Export\provis\zeingan1.csv"
     Superbase.Converters.ASD.Descending = 0
     Superbase.Converters.ASD.Merge = - 1
     Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
     Superbase.Converters.ASD.FieldSeparator = ","
     Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
     Superbase.Converters.ASD.ANSIConvert = - 1
     Superbase.Converters.SBF.DestFormat = "Superbase"
     Superbase.Converters.SBF.DestFile = "zeingan1.SBF"
     Superbase.Converters.SBF.IndexSkip = 0
     Superbase.Converters.SBF.LogErrors = 0
     Superbase.Converters.SBF.MultiResponse = 0
     Superbase.Converters.SBF.Convert(Superbase.Converters.ASD)
   END IF 
   IF EXISTS (_netpath$ + "Export\provis\zeingan1.csv") THEN 
     DELETE _netpath$ + "Export\provis\zeingan1.csv"
   END IF 
   IF reqExpBuch% = 1 THEN 
     CALL ThousendZei()
   END IF 
   SET STATUS "Zdatei erstellt!"
   MOUSE OFF 


  END IF 
 ELSE 
  IF reqExpBuch% = 1 THEN 
   SET STATUS "Bereinigung Buchungsdatei!"
   REM REMOVE FROM FILE "buchung" WHERE ExpAG.buchung <> "1"
   FILE "buchung"
   INDEX Expag.buchung
   IF reqExpBuch% = 1 THEN 
     CALL ThousendNOB1()
   END IF 
   SELECT WHERE expag.buchung = "1"
   IF EXISTS (_netpath$ + "Export\provis\BUCHUNG.csv") THEN 
     DELETE _netpath$ + "Export\provis\BUCHUNG.csv"
   END IF 
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
   Superbase.Converters.SBF.SourceFile = "BUCHUNG"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = - 1
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.ASD.DestFormat = "ASCII Delimited"
   Superbase.Converters.ASD.DestFile = _netpath$ + "Export\provis\BUCHUNG.csv"
   Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
   Superbase.Converters.ASD.FieldSeparator = ","
   Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
   Superbase.Converters.ASD.ANSIConvert = - 1
   Superbase.Converters.ASD.Convert(Superbase.Converters.SBF)
   SELECT WHERE FILE "BUCHUNG"
   REMOVE FROM FILE "BUCHUNG":REM                               RemoveAll
   SELECT WHERE FILE "BUCHUNG":REM                              ImportFile
   Superbase.Converters.ASD.SourceFormat = "ASCII Delimited"
   Superbase.Converters.ASD.SourceFile = _netpath$ + "Export\provis\BUCHUNG.csv"
   Superbase.Converters.ASD.Descending = 0
   Superbase.Converters.ASD.Merge = - 1
   Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
   Superbase.Converters.ASD.FieldSeparator = ","
   Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
   Superbase.Converters.ASD.ANSIConvert = - 1
   Superbase.Converters.SBF.DestFormat = "Superbase"
   Superbase.Converters.SBF.DestFile = "BUCHUNG.SBF"
   Superbase.Converters.SBF.IndexSkip = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.SBF.Convert(Superbase.Converters.ASD)
   IF EXISTS (_netpath$ + "Export\provis\BUCHUNG.csv") THEN 
     DELETE _netpath$ + "Export\provis\BUCHUNG.csv"
   END IF 
   IF reqExpBuch% = 1 THEN 
     CALL ThousendYESB1()
   END IF 

   SET STATUS "Bereinigung Zdatei!"
   REM REMOVE FROM FILE "buchung1" WHERE ExpAG.buchung1 <> "1"
   IF reqExpBuch% = 1 THEN 
     CALL ThousendNoZei()
   END IF 
   FILE "zeingang"
   INDEX Expag.zeingang
   SELECT WHERE expag.zeingang = "1"
   IF EXISTS (_netpath$ + "Export\provis\zeingang.csv") THEN 
     DELETE _netpath$ + "Export\provis\zeingang.csv"
   END IF 
   IF reqExpBuch% = 1 THEN 
     SET STATUS "Export der gÅltigen Daten der zeingandatei in eine ASCII-Datei!"
     Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
     Superbase.Converters.SBF.SourceFile = "zeingang"
     Superbase.Converters.SBF.Descending = 0
     Superbase.Converters.SBF.Merge = - 1
     Superbase.Converters.SBF.LogErrors = 0
     Superbase.Converters.SBF.MultiResponse = 0
     Superbase.Converters.ASD.DestFormat = "ASCII Delimited"
     Superbase.Converters.ASD.DestFile = _netpath$ + "Export\provis\zeingang.csv"
     Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
     Superbase.Converters.ASD.FieldSeparator = ","
     Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
     Superbase.Converters.ASD.ANSIConvert = - 1
     Superbase.Converters.ASD.Convert(Superbase.Converters.SBF)
   END IF 
   SELECT WHERE FILE "zeingang"
   SET STATUS "Bereinigung zeingandatei!"
   REMOVE FROM FILE "zeingang":REM                               RemoveAll
   SELECT WHERE FILE "zeingang":REM                              ImportFile
   IF reqExpBuch% = 1 THEN 
     SET STATUS "Import der gÅltigen Daten der zeingandatei aus der ASCII-Datei!"
     Superbase.Converters.ASD.SourceFormat = "ASCII Delimited"
     Superbase.Converters.ASD.SourceFile = _netpath$ + "Export\provis\zeingang.csv"
     Superbase.Converters.ASD.Descending = 0
     Superbase.Converters.ASD.Merge = - 1
     Superbase.Converters.ASD.RecordSeparator = "" + CHR$ (13) + CHR$ (10) + ""
     Superbase.Converters.ASD.FieldSeparator = ","
     Superbase.Converters.ASD.FieldDelimiter = "" + CHR$ (34) + ""
     Superbase.Converters.ASD.ANSIConvert = - 1
     Superbase.Converters.SBF.DestFormat = "Superbase"
     Superbase.Converters.SBF.DestFile = "zeingang.SBF"
     Superbase.Converters.SBF.IndexSkip = 0
     Superbase.Converters.SBF.LogErrors = 0
     Superbase.Converters.SBF.MultiResponse = 0
     Superbase.Converters.SBF.Convert(Superbase.Converters.ASD)
   END IF 
   IF EXISTS (_netpath$ + "Export\provis\zeingang.csv") THEN 
     DELETE _netpath$ + "Export\provis\zeingang.csv"
   END IF 
   IF reqExpBuch% = 1 THEN 
     CALL ThousendZei()
   END IF 
   SET STATUS "Zdatei erstellt!"
  END IF 
 END IF 
 IF bîse% = - 1 THEN 
   IF reqfle% = 1 THEN CALL Fehler("EXPORT Dokumente","")
   CALL DFile(6,"dokument" + _fpw$)
   CALL DFile(6,"dokge" + _fpw$)
   CALL DFile(6,"dokkv" + _fpw$)
   CALL DFile(6,"dokma" + _fpw$)
   lw$ = LEFT$ (_netpath$,2)
   FILE "dokument"
   ff$ = FILE 
   INDEX codedok
   SELECT FIRST 
   WHILE NOT EOF (ff$)
     quell$ = _netpath$ + Dateiname.ff$
     IF EXISTS (quell$) THEN 
       IF Dateiname.ff$ LIKE "*vertr.dok*" THEN 
         REM CALL Fehler(Dateiname.ff$,"")
       END IF 
       zw$ = Dateiname.ff$
       t1% = INSTR (4,zw$,"\")
       zw1$ = MID$ (zw$,t1%)
       l1% = LEN (zw1$)
       ok% = - 1
       von% = 2
       WHILE ok% = - 1
         t0% = INSTR (von%,zw1$,"\")
         IF t0% > von% THEN 
           von% = t0% + 1
         ELSE 
           ok% = 0
         END IF 
       WEND 
       dname$ = MID$ (zw1$,von%)
       t1% = INSTR (zw1$,dname$)
       dlen% = l1% - t1% + 1
       plen% = l1% - dlen%
       pfad$ = LEFT$ (zw1$,plen%)
       IF Dateiname.ff$ LIKE "*OFFICE*" THEN 
         pfad$ = "\OFFICE" + pfad$
       END IF 
       IF Dateiname.ff$ LIKE "*PROVIS*" THEN 
         pfad$ = "\PROVIS" + pfad$
       END IF 
       REM IF pfad$ LIKE "*vertr.dok*" THEN 
         REM pfad$ = "\PROVIS\VERTR.DOK\"
       REM ELSE 
         REM IF pfad$ LIKE "*geadr.dok*" THEN 
           REM pfad$ = "\PROVIS\geadr.DOK\"
         REM ELSE 
           REM IF pfad$ LIKE "*maadr.dok*" THEN 
             REM pfad$ = "\PROVIS\MAADR.DOK\"
           REM END IF 
         REM END IF 
       REM END IF 
       zielp$ = _netpath$ + "EXPORT" + pfad$
       bef$ = "md " + zielp$
       CALL (bef$)
       zieldat$ = zielp$ + dname$
       kkk% = kkk% + 1
       IF kkk% > 100 THEN 
         WAIT FOR 1
         kkk% = 0
       END IF 
       ON ERROR GOTO n280720061
       REM CALL Fehler(quell$ + " vorhanden?",zieldat$)
       IF EXISTS (quell$) THEN 
         COPY quell$ TO zieldat$
       END IF 
n280720061: 
       ON ERROR GOTO ErrorHandler
     END IF 
     SELECT NEXT FILE ff$
     REM anz$ = STR$ ( RECCOUNT (ff$),"999999")
     SET STATUS dateiname.ff$
   WEND 

 END IF 
 
expend071197: 
 SET STATUS "Dateien schlie·en"
 REM CALL Fehler("","")
 CALL DFile(5,"OPENFILE" + _fpw$)
 CALL DFile(7,"MAADR" + _fpw$)
 FILE "maadr"
 INDEX codema.maadr
 SELECT FIRST 
 SELECT KEY _cuma% LOCK FILE "maadr" INDEX codema.maadr
 vorgÑnger.maadr = codema.maadr
 Namevorg.maadr = nachname.maadr + "," + vorname.maadr + "," + agenturnr.maadr
 STORE FILE "maadr"
 CLOSE FILE "maadr"
 CALL CloseDatei1()
 
 REM 310898
 SET STATUS "Lîschen der Masken, Icons und doc files"
 ON ERROR GOTO ex3108985
 DELETE _netpath$ + "export\provis\*.sbv"
ex3108985: 
 ON ERROR GOTO ex3108986
 DELETE _netpath$ + "export\provis\*.hlp"
ex3108986: 
 ON ERROR GOTO ex3108986a 
 DELETE _netpath$ + "export\provis\*.ico"
ex3108986a: 
 ON ERROR GOTO ex3108987
 DELETE _netpath$ + "export\provis\*.sb!"
ex3108987:   
 ON ERROR GOTO ex3108988
 DELETE _netpath$ + "export\provis\*.exe"
ex3108988:    
 ON ERROR GOTO ex3108989a 
 DELETE _netpath$ + "export\provis\*.doc"
ex3108989a:    
 ON ERROR GOTO ex3108989
 DELETE _netpath$ + "export\provis\superbase.net"
ex3108989:     
 ON ERROR GOTO ex31089810
 IF bîse% <> - 1 THEN 
   DELETE _netpath$ + "export\provis\gekond.*"
 END IF 
ex31089810:     
 ON ERROR GOTO ex31089811
 IF bîse% <> - 1 THEN 
   DELETE _netpath$ + "export\provis\vkond.*"
 END IF 
ex31089811:     
 ON ERROR GOTO ex31089812
 DELETE _netpath$ + "export\provis\statist.*"
ex31089812:     
 ON ERROR GOTO ex31089813
 DELETE _netpath$ + "export\provis\statist2.*"
ex31089813:     
 ON ERROR GOTO ex31089814
 DELETE _netpath$ + "export\provis\*.xls"
ex31089814: 
 ON ERROR GOTO ex31089815
 DELETE _netpath$ + "export\provis\*.doc"
ex31089815: 
 ON ERROR GOTO ex31089816
 DELETE _netpath$ + "export\provis\*.sbq"
ex31089816: 
 ON ERROR GOTO ex31089817
 DELETE _netpath$ + "export\provis\*.dbf"
ex31089817: 
 ON ERROR GOTO ex31089818
 DELETE _netpath$ + "export\office\*.sb!"
ex31089818: 
 ON ERROR GOTO ex31089819
 DELETE _netpath$ + "export\office\banken.*"
ex31089819: 
 ON ERROR GOTO ex31089820
 DELETE _netpath$ + "export\office\superbas.net"
ex31089820: 
 ON ERROR GOTO ex31089821
 DELETE _netpath$ + "export\office\*.dbf"
ex31089821: 
 ON ERROR GOTO ex31089822
 DELETE _netpath$ + "export\office\*.xls"
ex31089822: 
 ON ERROR GOTO ex31089823
 DELETE _netpath$ + "export\office\*.doc"
ex31089823: 
 ON ERROR GOTO ex31089824
 DELETE _netpath$ + "export\office\*.sbq"
ex31089824: 
 ON ERROR GOTO ErrorHandler 
 ON ERROR GOTO ex31089825 
 IF bîse% <> - 1 THEN 
   DELETE _netpath$ + "export\provis\vpgekond.*"
 END IF 
ex31089825: 
 ON ERROR GOTO ErrorHandler 
 
 IF anp% > 0 THEN 
   CALL DFile(5,"supervis" + _fpw$)
   FILE "supervis"
   INDEX codema.supervis
   SELECT FIRST LOCK 
   AGSperreAB.supervis = anp%
   STORE FILE "supervis"
   CLOSE FILE "supervis"
 ELSE 
 END IF 
 
 REM CALL _netpath$ + "\export\office\provag.bat"
 MOUSE ON 
 REQUEST "Export beendet!!!","",0
 REM CALL DFile(2,"supervis" + _fpw$)
 t1$ = "Ein Backup der exportierten Dateien kînnen Sie Åber START / Programme / CODie - Anwendungen / SmartPROVIS - Mitarbeiter - EXPORT erzeugen lassen(die erzeugte Datei provis.arj findenSie unter...\codie\EXPORT\support)"
 CALL Fehler(t1$,"Diese Datei kînnen Sie dem Vermittler zur VerfÅgung stellen, der sie dann Åber Start / Programme / Codie-Anwendungen / SmartPROVIS Restore importieren kann.")
 IF gasp% THEN 
   CALL Fehler("Die Inhaber einer ASP Version mÅssen per Hand das Programm ...\codie\export\support\ProvBax.exe aufrufen, um die Datei provis.arj erzeugen zu lassen!","")
 END IF 
 
 REM ttt$ = _netpath$ + "EXPORT\SUPPORT\PROVBAK.EXE"
 REM a% = CALL ("ShellExecute",0,"open",ttt$,"","",1)
 REM WAIT FOR 3
test310320041: 
 REM REQUEST "Das Programm mu· jetzt neu gestartet werden!","",2
 IF EXISTS (_netpath$ + "AUTOBAK.EXE") THEN 
   IF NOT EXISTS (_netpath$ + "EXPORT\AUTOBAK.EXE") THEN 
     COPY _netpath$ + "AUTOBAK.EXE" TO _netpath$ + "EXPORT\AUTOBAK.EXE"
   END IF 
     DIRECTORY _netpath$ + "EXPORT\SUPPORT"
     v$ = DIRECTORY 
     l$ = LEFT$ (v$,2)
   REM CALL Fehler ("Es wird jetzt das SmartPROVIS-Mitarbeiter-EXPORT-BACKUP gestartet! Wenn Sie mîchten, da· sich die erzeugte Datei PROVIS.ARJ im Verzeichnis: " + v$ + " befinden soll, mÅssen Sie im Backup-Dialog das Laufwerk: " + l$ + " eingeben!","")
     CLOSE ALL 
     a% = CALL ("ShellExecute",0,"open",_netpath$ + "EXPORT\AUTOBAK.EXE","","",1)
 ELSE 
   IF EXISTS (_netpath$ + "EXPORT\SUPPORT\PROVBAK.EXE") THEN 
     DIRECTORY _netpath$ + "EXPORT\SUPPORT"
     v$ = DIRECTORY 
     l$ = LEFT$ (v$,2)
     CALL Fehler ("Es wird jetzt das SmartPROVIS-Mitarbeiter-EXPORT-BACKUP gestartet! Wenn Sie mîchten, da· sich die erzeugte Datei PROVIS.ARJ im Verzeichnis: " + v$ + " befinden soll, mÅssen Sie im Backup-Dialog das Laufwerk: " + l$ + " eingeben!","")
     CLOSE ALL 
     a% = CALL ("ShellExecute",0,"open",_netpath$ + "EXPORT\SUPPORT\PROVBAK.EXE","","",1)
   END IF 
 END IF 
 CALL EXIT()
end310320042: 
 SET STATUS ""
 END SUB 
 
 
SUB ThousendNOK()
   FILE "KVERTRAG"
   MOUSE OFF 
   SET STATUS "KVERTRAG - Passe Feldformat fÅr ASCII-Export an!"
   CALL FldAddT("Bewertungssumme","NUM;999999999.00",0)
   CALL FldAddT("VSumme","NUM;999999999.00",0)
   CALL FldAddT("StornoBetrag","NUM;99999999.00",0)
   CALL FldAddT("Volumen","NUM;999999999.00",0)'                          ; WÑhrungsanzeige entfernt
   CALL FldAddT("FahrzeugstÑrke","NUM;999999.",0)
   CALL FldAddT("Fahrzeugwert","NUM;99999999.00",0)
   CALL FldAddT("HV_SFR","NUM;999.",0)
   CALL FldAddT("TK_Betrag","NUM;99999999.00",0)
   CALL FldAddT("VK_Betrag","NUM;99999999.00",0)
   CALL FldAddT("VK_SFR","NUM;999.",0)
   REM 210597
   CALL FldAddT("Basisinvalid","NUM;99999999.00",0)
   CALL FldAddT("Progression1","NUM;999.00",0)
   CALL FldAddT("Progression2","NUM;999.00",0)
   CALL FldAddT("Todesfall","NUM;99999999.00",0)
   CALL FldAddT("KHT","NUM;99999999.00",0)
   CALL FldAddT("Genesungsgeld","NUM;99999999.00",0)
   CALL FldAddT("öbergangsleist","NUM;99999999.00",0)
   CALL FldAddT("Chir_Leist","NUM;99999999.00",0)
   CALL FldAddT("Unfallrente","NUM;99999999.00",0)
   CALL FldAddT("Unfall_KHT","NUM;99999999.00",0)
   CALL FldAddT("Bewertungssumme","NUM;99999999.00",0)
   CALL FldAddT("VSumme","NUM;99999999.00",0)
   CALL FldAddT("F_VS","NUM;99999999.00;",0)
   CALL FldAddT("F_Satz","NUM;9999.000",0)
   CALL FldAddT("F_Beitrag","NUM;99999999.00",0)
   CALL FldAddT("FKBU_VS","NUM;99999999.00",0)
   CALL FldAddT("FKBU_Satz","NUM;9999.000",0)
   CALL FldAddT("FKBU_Beitrag","NUM;99999999.00",0)
   CALL FldAddT("LW_VS","NUM;99999999.00",0)
   CALL FldAddT("LW_Satz","NUM;9999.000",0)
   CALL FldAddT("LW_Beitrag","NUM;99999999.00",0)
   CALL FldAddT("LWKBU_VS","NUM;99999999.00",0)
   CALL FldAddT("LWKBU_Satz","NUM;9999.000",0)
   CALL FldAddT("LWKBU_Beitrag","NUM;99999999.00",0)
   CALL FldAddT("ST_VS","NUM;99999999.00",0)
   CALL FldAddT("ST_Satz","NUM;9999.000",0)
   CALL FldAddT("ST_Beitrag","NUM;99999999.00",0)
   CALL FldAddT("STKBU_VS","NUM;99999999.00",0)
   CALL FldAddT("STKBU_Satz","NUM;9999.000",0)
   CALL FldAddT("STKBU_Beitrag","NUM;99999999.00",0)
   CALL FldAddT("ED_VS","NUM;99999999.00",0)
   CALL FldAddT("ED_Satz","NUM;9999.000",0)
   CALL FldAddT("ED_Beitrag","NUM;99999999.00",0)
   CALL FldAddT("EDVANDA_VS","NUM;99999999.00",0)
   CALL FldAddT("EDVANDA_Satz","NUM;9999.000",0)
   CALL FldAddT("EDVANDA_Beitrag","NUM;99999999.00",0)
   CALL FldAddT("EDKBU_VS","NUM;99999999.00",0)
   CALL FldAddT("EDKBU_Satz","NUM;9999.000",0)
   CALL FldAddT("EDKBU_Beitrag","NUM;99999999.00",0)
   CALL FldAddT("Gesamtbeitrag","NUM;999999999999.00",0)
   CALL FldAddT("Deckung_Pers","NUM;999999999.00",0)
   CALL FldAddT("Deckung_Sach","NUM;999999999.00",0)
   CALL FldAddT("Deckung_Verm","NUM;999999999.00",0)
   CALL FldAddT("TÑtigk_SchÑden","NUM;999999999.00",0)
   CALL FldAddT("TÑtigk_SBBetrag","NUM;999999.00",0)
   CALL FldAddT("TÑtigk_SBSatz","NUM;99.99",0)
   CALL FldAddT("Ums_Betrag","NUM;999999999.00",0)
   CALL FldAddT("Ums_Satz","NUM;9999.000",0)
   CALL FldAddT("Ums_Beitrag","NUM;999999999.00",0)
   CALL FldAddT("Lîhne_Betrag","NUM;999999999.00",0)
   CALL FldAddT("Lîhne_Satz","NUM;9999.",0)
   CALL FldAddT("Lîhne_Beitrag","NUM;999999999.00",0)
   CALL FldAddT("Gehalt_Betrag","NUM;999999999.00",0)
   CALL FldAddT("Gehalt_Satz","NUM;9999.",0)
   CALL FldAddT("Gehalt_Beitrag","NUM;999999999.00",0)
   CALL FldAddT("PersB_Betrag","NUM;999999999.00",0)
   CALL FldAddT("PersB_Satz","NUM;9999.",0)
   CALL FldAddT("PersB_Beitrag","NUM;999999999.00",0)
   CALL FldAddT("PersBa_Betrag","NUM;999999999.00",0)
   CALL FldAddT("PersBa_Satz","NUM;9999.",0)
   CALL FldAddT("PersBa_Beitrag","NUM;999999999.00",0)
   CALL FldAddT("Gesamt_Beitrag","NUM;999999999.00",0)
   CALL FldAddT("Pool","NUM;99999999.00",0)
   CALL FldAddT("Beitragssatz","NUM;999.00",0)
   CALL FldAddT("Eintrittsalter","NUM;999",0)
   CALL FldAddT("WohnflÑche","NUM;999.99",0)
   CALL FldAddT("BZDauer","NUM;999",0)
   CALL FldAddT("Leistungsdauer","NUM;999",0)
 
   CALL FldAddT("Vollinvalid","NUM;99999999.00",0)
   CALL FldAddT("Vollinvalid1","NUM;99999999.00",0)
   CALL FldAddT("Vollinvalid2","NUM;99999999.00",0)
   CALL FldAddT("Vollinvalid3","NUM;99999999.00",0)
   CALL FldAddT("Vollinvalid4","NUM;99999999.00",0)
   CALL FldAddT("Basisinvalid1","NUM;99999999.00",0)
   CALL FldAddT("Basisinvalid2","NUM;99999999.00",0)
   CALL FldAddT("Basisinvalid3","NUM;99999999.00",0)
   CALL FldAddT("Basisinvalid4","NUM;99999999.00",0)
   CALL FldAddT("Progression1_1","NUM;99999999.00",0)
   CALL FldAddT("Progression1_2","NUM;99999999.00",0)
   CALL FldAddT("Progression1_3","NUM;99999999.00",0)
   CALL FldAddT("Progression1_4","NUM;99999999.00",0)
   CALL FldAddT("Progression2_1","NUM;99999999.00",0)
   CALL FldAddT("Progression2_2","NUM;99999999.00",0)
   CALL FldAddT("Progression2_3","NUM;99999999.00",0)
   CALL FldAddT("Progression2_4","NUM;99999999.00",0)
   CALL FldAddT("Todesfall1","NUM;99999999.00",0)
   CALL FldAddT("Todesfall2","NUM;99999999.00",0)
   CALL FldAddT("Todesfall3","NUM;99999999.00",0)
   CALL FldAddT("Todesfall4","NUM;99999999.00",0)
   CALL FldAddT("KHT1","NUM;99999999.00",0)
   CALL FldAddT("KHT2","NUM;99999999.00",0)
   CALL FldAddT("KHT3","NUM;99999999.00",0)
   CALL FldAddT("KHT4","NUM;99999999.00",0)
   CALL FldAddT("Genesungsgeld1","NUM;99999999.00",0)
   CALL FldAddT("Genesungsgeld2","NUM;99999999.00",0)
   CALL FldAddT("Genesungsgeld3","NUM;99999999.00",0)
   CALL FldAddT("Genesungsgeld4","NUM;99999999.00",0)
   CALL FldAddT("öbergangsleist1","NUM;99999999.00",0)
   CALL FldAddT("öbergangsleist2","NUM;99999999.00",0)
   CALL FldAddT("öbergangsleist3","NUM;99999999.00",0)
   CALL FldAddT("öbergangsleist4","NUM;99999999.00",0)
   CALL FldAddT("Chir_Leist1","NUM;99999999.00",0)
   CALL FldAddT("Chir_Leist2","NUM;99999999.00",0)
   CALL FldAddT("Chir_Leist3","NUM;99999999.00",0)
   CALL FldAddT("Chir_Leist4","NUM;99999999.00",0)
   CALL FldAddT("Unfallrente1","NUM;99999999.00",0)
   CALL FldAddT("Unfallrente2","NUM;99999999.00",0)
   CALL FldAddT("Unfallrente3","NUM;99999999.00",0)
   CALL FldAddT("Unfallrente4","NUM;99999999.00",0)
   CALL FldAddT("Kartenwert","NUM;99999.00",0)
   CALL FldAddT("Kartenanzahl","NUM;999999.",0)
   REM Leben
   CALL FldAddT("BURenteMonat","NUM;999999999.00",0)
   REM Unfall
   CALL FldAddT("KuBeitrag","NUM;999999999.00",0)
   CALL FldAddT("zvp1Beitrag","NUM;999999999.00",0)
   CALL FldAddT("zvp2Beitrag","NUM;999999999.00",0)
   CALL FldAddT("zvp3Beitrag","NUM;999999999.00",0)
   CALL FldAddT("zvp4Beitrag","NUM;999999999.00",0)
   CALL FldAddT("SummeBeitrag","NUM;999999999.00",0)
   REM Inventar Praxis
   CALL FldAddT("IVSu","NUM;999999999.00",0)
   CALL FldAddT("IVSB","NUM;999999999.00",0)
   CALL FldAddT("IVSatz","NUM;99999999.000",0)
   CALL FldAddT("IVBeitrag","NUM;999999999.00",0)
   CALL FldAddT("KBUSu","NUM;999999999.00",0)
   CALL FldAddT("KBUSB","NUM;999999999.00",0)
   CALL FldAddT("KBUSatz","NUM;99999999.000",0)
   CALL FldAddT("KBUBeitrag","NUM;999999999.00",0)
   CALL FldAddT("GLESu","NUM;999999999.00",0)
   CALL FldAddT("GLESB","NUM;999999999.00",0)
   CALL FldAddT("GLESatz","NUM;99999999.000",0)
   CALL FldAddT("GLEBeitrag","NUM;999999999.00",0)
   CALL FldAddT("GLPSu","NUM;999999999.00",0)
   CALL FldAddT("GLPSB","NUM;999999999.00",0)
   CALL FldAddT("GLPSatz","NUM;99999999.000",0)
   CALL FldAddT("GLPBeitrag","NUM;999999999.00",0)
   CALL FldAddT("ELSu","NUM;999999999.00",0)
   CALL FldAddT("ELSB","NUM;999999999.00",0)
   CALL FldAddT("ELSatz","NUM;99999999.000",0)
   CALL FldAddT("ELBeitrag","NUM;999999999.00",0)
   CALL FldAddT("BEWSu","NUM;999999999.00",0)
   CALL FldAddT("BEWSB","NUM;999999999.00",0)
   CALL FldAddT("BEWSatz","NUM;99999999.000",0)
   CALL FldAddT("BEWBeitrag","NUM;999999999.00",0)
   CALL FldAddT("IVPRabatt","NUM;99999999.000",0)
   CALL FldAddT("IVPSumme","NUM;999999999.00",0)
   REM Berufshaftpflicht
   CALL FldAddT("BHBeitrag","NUM;999999999.00",0)
   CALL FldAddT("BEHZusRisiko","NUM;999999999.00",0)
   CALL FldAddT("BEHRabatt","NUM;99999999.000",0)
   CALL FldAddT("BEHPHV","NUM;999999999.00",0)
   CALL FldAddT("BEHSumme","NUM;999999999.00",0)
   REM Rechtsschutz
   CALL FldAddT("RSPrivatSB","NUM;999999999.00",0)
   CALL FldAddT("RSPrivatBeitrag","NUM;999999999.00",0)
   CALL FldAddT("RSBerufSB","NUM;999999999.00",0)
   CALL FldAddT("RSBerufBeitrag","NUM;999999999.00",0)
   CALL FldAddT("RSVerkSB","NUM;999999999.00",0)
   CALL FldAddT("RSVerkBeitrag","NUM;999999999.00",0)
   CALL FldAddT("RSVertrSB","NUM;999999999.00",0)
   CALL FldAddT("RSVertrBeitrag","NUM;999999999.00",0)
   CALL FldAddT("RSRegrSB","NUM;999999999.00",0)
   CALL FldAddT("RSRegrBeitrag","NUM;999999999.00",0)
   CALL FldAddT("RSSpeziSB","NUM;999999999.00",0)
   CALL FldAddT("RSSpeziBeitrag","NUM;999999999.00",0)
   CALL FldAddT("RSWohnSB","NUM;999999999.00",0)
   CALL FldAddT("RSWohnBeitrag","NUM;999999999.00",0)
   CALL FldAddT("Rechtsumme","NUM;999999999.00",0)
   REM Kapitalanlagen
   CALL FldAddT("AnlFond1","NUM;99999999999999.",0)
   CALL FldAddT("AnlFond2","NUM;99999999999999.",0)
   CALL FldAddT("AnlFond3","NUM;99999999999999.",0)
   CALL FldAddT("AnlFond4","NUM;99999999999999.",0)
   CALL FldAddT("AnlFond5","NUM;99999999999999.",0)
   CALL FldAddT("AnlFond6","NUM;99999999999999.",0)
   CALL FldAddT("AnliFond1","NUM;99999999999999.",0)
   CALL FldAddT("AnliFond2","NUM;99999999999999.",0)
   CALL FldAddT("AnliFond3","NUM;99999999999999.",0)
   CALL FldAddT("AnliFond4","NUM;99999999999999.",0)
   CALL FldAddT("AnliFond5","NUM;99999999999999.",0)
   CALL FldAddT("AnliFond6","NUM;99999999999999.",0)
   CALL FldAddT("SparFond1","NUM;99999999999999.",0)
   CALL FldAddT("SparFond2","NUM;99999999999999.",0)
   CALL FldAddT("SparFond3","NUM;99999999999999.",0)
   CALL FldAddT("SparFond4","NUM;99999999999999.",0)
   CALL FldAddT("SparFond5","NUM;99999999999999.",0)
   CALL FldAddT("SparFond6","NUM;99999999999999.",0)
   CALL FldAddT("SpariFond1","NUM;99999999999999.",0)
   CALL FldAddT("SpariFond2","NUM;99999999999999.",0)
   CALL FldAddT("SpariFond3","NUM;99999999999999.",0)
   CALL FldAddT("SpariFond4","NUM;99999999999999.",0)
   CALL FldAddT("SpariFond5","NUM;99999999999999.",0)
   CALL FldAddT("SpariFond6","NUM;99999999999999.",0)
   CALL FldAddT("HRWertsachProz","NUM;9999.0000",0)
   CALL FldAddT("HRUnterdeckProz","NUM;9999.0000",0)
   CALL FldAddT("HRöberspannProz","NUM;9999.0000",0)
   CALL FldAddT("HRFahrdiebProz","NUM;9999.000",0)
   CALL FldAddT("HRWohnflÑche","NUM;99999.000",0)
   CALL FldAddT("HRZuschlagProz","NUM;99999.0000",0)
 
   REM Glasbruch
   CALL FldAddT("KFZHaftBeitrag","NUM;999999999.00",0)
   CALL FldAddT("KFZVollkBeitrag","NUM;999999999.00",0)
   CALL FldAddT("KFZTeilkBeitrag","NUM;999999999.00",0)
   CALL FldAddT("KFZGesBeitrag","NUM;999999999.00",0)
   REM tatsÑchliches KÅndigungsdatum
   CALL FldAddT("Deckung1","NUM;99999999.00",0)
   CALL FldAddT("Deckung2","NUM;99999999.00",0)
   CALL FldAddT("Deckung3","NUM;99999999.00",0)
   CALL FldAddT("Deckung4","NUM;99999999.00",0)
   CALL FldAddT("VGezGesamtPlus","NUM;999999999.00",0)
   CALL FldAddT("VGezGesamtMinus","NUM;999999999.00",0)
 
   CALL FldAddT("Umrechnung","NUM;99999999.000000",0)
   CALL FldAddT("FEigmittel","NUM;999999999.00",0)
   CALL FldAddT("FDarlBetrag","NUM;999999999.00",0)
   CALL FldAddT("FZinsNom","NUM;999.0000",0)
   CALL FldAddT("FZinsEff","NUM;999.0000",0)
   CALL FldAddT("FBeitrag","NUM;999999999.00",0)
   CALL FldAddT("FAuszahl","NUM;999999999.00",0)
   CALL FldAddT("FTilgung","NUM;999999999.00",0)
   CALL FldAddT("KFZ_Genes","NUM;99999999.00",0)
   CALL FldAddT("BeitrSum","NUM;9999999999.00",0)
   CALL FldAddT("BewertEinm","NUM;99999999.00",0)
   CALL FldAddT("SummeAnteile","NUM;99999999999.000",0)
   CALL FldAddT("SummeEinzDM","NUM;999999999999.00",0)
   CALL FldAddT("SummeEinzUS","NUM;999999999999.00",0)
   CALL FldAddT("SummeEinzEur","NUM;999999999999.00",0)
   CALL FldAddT("NettoBeitrag","NUM;999999999999.00",0)
   CALL FldAddT("Einheiten","NUM;999999999.00",0)
   CALL FldAddT("PoolV","NUM;99999999.00",0)
   CALL FldAddT("SummeEinzWaehr","NUM;999999999999.00",0)
   CALL FldAddT("BAnteilsprWaehr","NUM;9999999999.0000",0)
   CALL FldAddT("BAnteilsprDM","NUM;9999999999.0000",0)
   CALL FldAddT("BAnteilsprUS","NUM;9999999999.0000",0)
   CALL FldAddT("BAnteilsprEuro","NUM;9999999999.0000",0)
   CALL FldAddT("SummeBestWaehr","NUM;999999999999.00",0)
   CALL FldAddT("BRÅckkaufWaehr","NUM;9999999999.0000",0)
   CALL FldAddT("BRÅckkaufDM","NUM;9999999999.0000",0)
   CALL FldAddT("BRÅckkaufUS","NUM;9999999999.0000",0)
   CALL FldAddT("BRÅckkaufEuro","NUM;9999999999.0000",0)
   CALL FldAddT("BBestandDM","NUM;999999999999.00",0)
   CALL FldAddT("BBestandUS","NUM;999999999999.00",0)
   CALL FldAddT("BBestandEuro","NUM;999999999999.00",0)
   CALL FldAddT("BBestandWaehr","NUM;999999999999.00",0)

   CALL FldAddT("EinzBeitrag","NUM;999999999999.00",0)
   CALL FldAddT("Courtage","NUM;999999999999.00",0)
   CALL FldAddT("EinzCourtage","NUM;999999999999.00",0)
   CALL FldAddT("EinzBeitragOld","NUM;999999999999.00",0)
   CALL FldAddT("DradDiSum","NUM;999999999.00",0)
   CALL FldAddT("KMStand","NUM;999999999999.",0)
   CALL FldAddT("Schadquote","NUM;9999999.0000",0)
   CALL FldAddT("AFSKPAUEUR","NUM;99999.00",0)

   SAVE FILE "KVERTRAG"
 END SUB 
 
SUB ThousendNOB()
   SET STATUS "Buchung1 - Passe Feldformat fÅr ASCII-Export an!"
   FILE "BUCHUNG1"
   CALL FldAddT("Volumen","NUM;9999999.00",0)' -- WÑhrungsanzeige entfernt
   CALL FldAddT("Gesamtbetrag","NUM;9999999.00",0)
   CALL FldAddT("gezahlt","NUM;9999999.00",0)
   CALL FldAddT("Einheiten","NUM;9999999999.00",0)
   CALL FldAddT("GesamtbetragEU","NUM;9999999999.00",0)
   CALL FldAddT("BetragEU","NUM;9999999999.00",0)
   CALL FldAddT("SREU","NUM;9999999999.00",0)
   CALL FldAddT("BewertungssumEU","NUM;9999999999.00",0)
   CALL FldAddT("gezahltEU","NUM;9999999999.00",0)
 
     CALL FldAddT("Bewertung2","NUM;9999999.00",0)
     CALL FldAddT("Bewertung2EU","NUM;9999999.00",0)
     CALL FldAddT("VSumme","NUM;999999999999.00",0)
     CALL FldAddT("BeitragBrut","NUM;999999999.00",0)
     CALL FldAddT("BeitragNet","NUM;999999999.00",0)
     CALL FldAddT("VSummeEU","NUM;999999999999.00",0)
     CALL FldAddT("BeitragBrutEU","NUM;999999999.00",0)
     CALL FldAddT("BeitragNetEU","NUM;999999999.00",0)
     CALL FldAddT("JahresBBrut","NUM;999999999.00",0)
     CALL FldAddT("JahresBNet","NUM;999999999.00",0)
     CALL FldAddT("JahresBBrutEU","NUM;999999999.00",0)
     CALL FldAddT("JahresBNetEU","NUM;999999999.00",0)
     CALL FldAddT("ProvBasiswert","NUM;999999999.00",0)
     CALL FldAddT("KundEinzahlung","NUM;999999999.00",0)
     CALL FldAddT("KundEinzahluEU","NUM;999999999.00",0)

     CALL FldAddT("EinheitenEU","NUM;9999999999.00",0)
   SAVE FILE "BUCHUNG1"
 END SUB 
 

SUB ThousendNOB1()
   SET STATUS "Buchung - Passe Feldformat fÅr ASCII-Export an!"
   FILE "BUCHUNG"
   CALL FldAddT("Volumen","NUM;9999999.00",0)' -- WÑhrungsanzeige entfernt
   CALL FldAddT("Gesamtbetrag","NUM;9999999.00",0)
   CALL FldAddT("gezahlt","NUM;9999999.00",0)
   CALL FldAddT("Einheiten","NUM;9999999999.00",0)
   CALL FldAddT("GesamtbetragEU","NUM;9999999999.00",0)
   CALL FldAddT("BetragEU","NUM;9999999999.00",0)
   CALL FldAddT("SREU","NUM;9999999999.00",0)
   CALL FldAddT("BewertungssumEU","NUM;9999999999.00",0)
   CALL FldAddT("gezahltEU","NUM;9999999999.00",0)
     CALL FldAddT("Bewertung2","NUM;9999999.00",0)
     CALL FldAddT("Bewertung2EU","NUM;9999999.00",0)
     CALL FldAddT("VSumme","NUM;999999999999.00",0)
     CALL FldAddT("BeitragBrut","NUM;999999999.00",0)
     CALL FldAddT("BeitragNet","NUM;999999999.00",0)
     CALL FldAddT("VSummeEU","NUM;999999999999.00",0)
     CALL FldAddT("BeitragBrutEU","NUM;999999999.00",0)
     CALL FldAddT("BeitragNetEU","NUM;999999999.00",0)
     CALL FldAddT("JahresBBrut","NUM;999999999.00",0)
     CALL FldAddT("JahresBNet","NUM;999999999.00",0)
     CALL FldAddT("JahresBBrutEU","NUM;999999999.00",0)
     CALL FldAddT("JahresBNetEU","NUM;999999999.00",0)
     CALL FldAddT("ProvBasiswert","NUM;999999999.00",0)
     CALL FldAddT("KundEinzahlung","NUM;999999999.00",0)
     CALL FldAddT("KundEinzahluEU","NUM;999999999.00",0)

   SAVE FILE "BUCHUNG"
 END SUB 
 
SUB ThousendZei()
     CALL FldAddT("BetragEU","NUM;,9999999.00",0)
     CALL FldAddT("BetraggezEU","NUM;,9999999.00",0)
     CALL FldAddT("gezahltEU","NUM;,9999999.00",0)
     CALL FldAddT("SREU","NUM;,9999999.00",0)
     CALL FldAddT("SRAuszahlungEU","NUM;,9999999.00",0)
     CALL FldAddT("BewertungEU","NUM;,999999999.00",0)
     CALL FldAddT("Umrechnung","NUM;,99999999.000000",0)
     CALL FldAddT("KundEinzahlung","NUM;,999999999.00",0)
     CALL FldAddT("KundEinzahluEU","NUM;,999999999.00",0)
 END SUB 


SUB ThousendNoZei()
     CALL FldAddT("BetragEU","NUM;9999999.00",0)
     CALL FldAddT("BetraggezEU","NUM;9999999.00",0)
     CALL FldAddT("gezahltEU","NUM;9999999.00",0)
     CALL FldAddT("SREU","NUM;9999999.00",0)
     CALL FldAddT("SRAuszahlungEU","NUM;9999999.00",0)
     CALL FldAddT("BewertungEU","NUM;999999999.00",0)
     CALL FldAddT("Umrechnung","NUM;99999999.000000",0)
     CALL FldAddT("KundEinzahlung","NUM;999999999.00",0)
     CALL FldAddT("KundEinzahluEU","NUM;999999999.00",0)
 END SUB 
 
SUB FldAddT(Feldname$,NewFormat$,IndexType%)
  ON ERROR GOTO TTrapFileFind
 tsfound% = 0
 a$ = FIELDINFO$ (FeldName$,0)
 SET STATUS "Anpassung " + Feldname$
 tsfound% = 1
TTrapFileFind: 
 IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
 IF tsfound% = 0 THEN 
   REM ** Feld neu erstellen
   ADD Feldname$ + ";" + NewFormat$ + ";1;1"
   SELECT CASE IndexType%
   CASE 1
     CREATE INDEX ON Feldname$$
   CASE 2
     CREATE INDEX ON Feldname$$ UNIQUE 
   END SELECT 
 ELSE 
   REM ** Feld auf FormatÑnderungen testen und anpassen
   IF FIELDINFO$ (feldname$,3) LIKE "IX*" AND IndexType% = 0 THEN 
  
     REMOVE INDEX Feldname$$
   END IF 
   ok% = 1
   NewForm% = 0
   NewIndex% = 0
   cFormat$ = TRIM$ ( FIELDINFO$ (Feldname$,0) + ";" + FIELDINFO$ (Feldname$,4))
   IF UCASE$ (cformat$) <> UCASE$ (NewFormat$) THEN 
     ok% = 0
     NewForm% = 1
   END IF 
   IndexType$ = FIELDINFO$ (feldname$,3)
   IF (IndexType$ = "IXD" AND IndexType% = 2) OR (IndexType$ = "IXU" AND IndexType% = 1) THEN 
     ok% = 0
     NewIndex% = 1
   END IF 
   IF FIELDINFO$ (feldname$,3) LIKE "" AND IndexType% <> 0 THEN 
     NewIndex% = 1
     ok% = 0
   END IF 
   IF ok% = 0 THEN 
     IF NewForm% = 1 AND IndexType$ LIKE "IX*" THEN 
       CALL Server("UPDSTATUS","Indexlîschung")
       REMOVE INDEX Feldname$$
     END IF 
     IF NewForm% = 1 THEN 
  
       MODIFY Feldname$$,Feldname$ + ";" + NewFormat$
  
       SELECT CASE IndexType%
       CASE 1
         CREATE INDEX ON Feldname$$
       CASE 2
         CREATE INDEX ON Feldname$$ UNIQUE 
       END SELECT 
       ok% = 1
     END IF 
   END IF 
   IF ok% = 0 THEN 
     IF NewIndex% = 1 THEN 
       IF IndexType$ LIKE "IX*" THEN 
  
         REMOVE INDEX Feldname$$
       END IF 
  
       SELECT CASE IndexType%
       CASE 1
         CREATE INDEX ON Feldname$$
       CASE 2
         CREATE INDEX ON Feldname$$ UNIQUE 
       END SELECT 
       ok% = 1
     END IF 
   END IF 
 END IF 
 END SUB 
 
 
SUB ThousendYesK()
   SET STATUS "Vertragsdatei - RÅcksetzen Feldformat!"
   CALL FldAddT("Bewertungssumme","NUM;,999999999.00",0)
   CALL FldAddT("VSumme","NUM;,999999999.00",0)
   CALL FldAddT("StornoBetrag","NUM;,99999999.00",0)
   CALL FldAddT("Volumen","NUM;,999999999.00",0)'                          ; WÑhrungsanzeige entfernt
   CALL FldAddT("FahrzeugstÑrke","NUM;,999999.",0)
   CALL FldAddT("Fahrzeugwert","NUM;,99999999.00",0)
   CALL FldAddT("HV_SFR","NUM;,999.",0)
   CALL FldAddT("TK_Betrag","NUM;,99999999.00",0)
   CALL FldAddT("VK_Betrag","NUM;,99999999.00",0)
   CALL FldAddT("VK_SFR","NUM;,999.",0)
   REM 210597
   CALL FldAddT("Basisinvalid","NUM;,99999999.00",0)
   CALL FldAddT("Progression1","NUM;,999.00",0)
   CALL FldAddT("Progression2","NUM;,999.00",0)
   CALL FldAddT("Todesfall","NUM;,99999999.00",0)
   CALL FldAddT("KHT","NUM;,99999999.00",0)
   CALL FldAddT("Genesungsgeld","NUM;,99999999.00",0)
   CALL FldAddT("öbergangsleist","NUM;,99999999.00",0)
   CALL FldAddT("Chir_Leist","NUM;,99999999.00",0)
   CALL FldAddT("Unfallrente","NUM;,99999999.00",0)
   CALL FldAddT("Unfall_KHT","NUM;,99999999.00",0)
   CALL FldAddT("Bewertungssumme","NUM;,99999999.00",0)
   CALL FldAddT("VSumme","NUM;,99999999.00",0)
   CALL FldAddT("F_VS","NUM;,99999999.00;",0)
   CALL FldAddT("F_Satz","NUM;,9999.000",0)
   CALL FldAddT("F_Beitrag","NUM;,99999999.00",0)
   CALL FldAddT("FKBU_VS","NUM;,99999999.00",0)
   CALL FldAddT("FKBU_Satz","NUM;,9999.000",0)
   CALL FldAddT("FKBU_Beitrag","NUM;,99999999.00",0)
   CALL FldAddT("LW_VS","NUM;,99999999.00",0)
   CALL FldAddT("LW_Satz","NUM;,9999.000",0)
   CALL FldAddT("LW_Beitrag","NUM;,99999999.00",0)
   CALL FldAddT("LWKBU_VS","NUM;,99999999.00",0)
   CALL FldAddT("LWKBU_Satz","NUM;,9999.000",0)
   CALL FldAddT("LWKBU_Beitrag","NUM;,99999999.00",0)
   CALL FldAddT("ST_VS","NUM;,99999999.00",0)
   CALL FldAddT("ST_Satz","NUM;,9999.000",0)
   CALL FldAddT("ST_Beitrag","NUM;,99999999.00",0)
   CALL FldAddT("STKBU_VS","NUM;,99999999.00",0)
   CALL FldAddT("STKBU_Satz","NUM;,9999.000",0)
   CALL FldAddT("STKBU_Beitrag","NUM;,99999999.00",0)
   CALL FldAddT("ED_VS","NUM;,99999999.00",0)
   CALL FldAddT("ED_Satz","NUM;,9999.000",0)
   CALL FldAddT("ED_Beitrag","NUM;,99999999.00",0)
   CALL FldAddT("EDVANDA_VS","NUM;,99999999.00",0)
   CALL FldAddT("EDVANDA_Satz","NUM;,9999.000",0)
   CALL FldAddT("EDVANDA_Beitrag","NUM;,99999999.00",0)
   CALL FldAddT("EDKBU_VS","NUM;,99999999.00",0)
   CALL FldAddT("EDKBU_Satz","NUM;,9999.000",0)
   CALL FldAddT("EDKBU_Beitrag","NUM;,99999999.00",0)
   CALL FldAddT("Gesamtbeitrag","NUM;,999999999999.00",0)
   CALL FldAddT("Deckung_Pers","NUM;,999999999.00",0)
   CALL FldAddT("Deckung_Sach","NUM;,999999999.00",0)
   CALL FldAddT("Deckung_Verm","NUM;,999999999.00",0)
   CALL FldAddT("TÑtigk_SchÑden","NUM;,999999999.00",0)
   CALL FldAddT("TÑtigk_SBBetrag","NUM;,999999.00",0)
   CALL FldAddT("TÑtigk_SBSatz","NUM;,99.99",0)
   CALL FldAddT("Ums_Betrag","NUM;,999999999.00",0)
   CALL FldAddT("Ums_Satz","NUM;,9999.000",0)
   CALL FldAddT("Ums_Beitrag","NUM;,999999999.00",0)
   CALL FldAddT("Lîhne_Betrag","NUM;,999999999.00",0)
   CALL FldAddT("Lîhne_Satz","NUM;,9999.",0)
   CALL FldAddT("Lîhne_Beitrag","NUM;,999999999.00",0)
   CALL FldAddT("Gehalt_Betrag","NUM;,999999999.00",0)
   CALL FldAddT("Gehalt_Satz","NUM;,9999.",0)
   CALL FldAddT("Gehalt_Beitrag","NUM;,999999999.00",0)
   CALL FldAddT("PersB_Betrag","NUM;,999999999.00",0)
   CALL FldAddT("PersB_Satz","NUM;,9999.",0)
   CALL FldAddT("PersB_Beitrag","NUM;,999999999.00",0)
   CALL FldAddT("PersBa_Betrag","NUM;,999999999.00",0)
   CALL FldAddT("PersBa_Satz","NUM;,9999.",0)
   CALL FldAddT("PersBa_Beitrag","NUM;,999999999.00",0)
   CALL FldAddT("Gesamt_Beitrag","NUM;,999999999.00",0)
   CALL FldAddT("Pool","NUM;,99999999.00",0)
   CALL FldAddT("Beitragssatz","NUM;,999.00",0)
   CALL FldAddT("Eintrittsalter","NUM;,999",0)
   CALL FldAddT("WohnflÑche","NUM;,999.99",0)
   CALL FldAddT("BZDauer","NUM;,999",0)
   CALL FldAddT("Leistungsdauer","NUM;,999",0)
 
   CALL FldAddT("Vollinvalid","NUM;,99999999.00",0)
   CALL FldAddT("Vollinvalid1","NUM;,99999999.00",0)
   CALL FldAddT("Vollinvalid2","NUM;,99999999.00",0)
   CALL FldAddT("Vollinvalid3","NUM;,99999999.00",0)
   CALL FldAddT("Vollinvalid4","NUM;,99999999.00",0)
   CALL FldAddT("Basisinvalid1","NUM;,99999999.00",0)
   CALL FldAddT("Basisinvalid2","NUM;,99999999.00",0)
   CALL FldAddT("Basisinvalid3","NUM;,99999999.00",0)
   CALL FldAddT("Basisinvalid4","NUM;,99999999.00",0)
   CALL FldAddT("Progression1_1","NUM;,99999999.00",0)
   CALL FldAddT("Progression1_2","NUM;,99999999.00",0)
   CALL FldAddT("Progression1_3","NUM;,99999999.00",0)
   CALL FldAddT("Progression1_4","NUM;,99999999.00",0)
   CALL FldAddT("Progression2_1","NUM;,99999999.00",0)
   CALL FldAddT("Progression2_2","NUM;,99999999.00",0)
   CALL FldAddT("Progression2_3","NUM;,99999999.00",0)
   CALL FldAddT("Progression2_4","NUM;,99999999.00",0)
   CALL FldAddT("Todesfall1","NUM;,99999999.00",0)
   CALL FldAddT("Todesfall2","NUM;,99999999.00",0)
   CALL FldAddT("Todesfall3","NUM;,99999999.00",0)
   CALL FldAddT("Todesfall4","NUM;,99999999.00",0)
   CALL FldAddT("KHT1","NUM;,99999999.00",0)
   CALL FldAddT("KHT2","NUM;,99999999.00",0)
   CALL FldAddT("KHT3","NUM;,99999999.00",0)
   CALL FldAddT("KHT4","NUM;,99999999.00",0)
   CALL FldAddT("Genesungsgeld1","NUM;,99999999.00",0)
   CALL FldAddT("Genesungsgeld2","NUM;,99999999.00",0)
   CALL FldAddT("Genesungsgeld3","NUM;,99999999.00",0)
   CALL FldAddT("Genesungsgeld4","NUM;,99999999.00",0)
   CALL FldAddT("öbergangsleist1","NUM;,99999999.00",0)
   CALL FldAddT("öbergangsleist2","NUM;,99999999.00",0)
   CALL FldAddT("öbergangsleist3","NUM;,99999999.00",0)
   CALL FldAddT("öbergangsleist4","NUM;,99999999.00",0)
   CALL FldAddT("Chir_Leist1","NUM;,99999999.00",0)
   CALL FldAddT("Chir_Leist2","NUM;,99999999.00",0)
   CALL FldAddT("Chir_Leist3","NUM;,99999999.00",0)
   CALL FldAddT("Chir_Leist4","NUM;,99999999.00",0)
   CALL FldAddT("Unfallrente1","NUM;,99999999.00",0)
   CALL FldAddT("Unfallrente2","NUM;,99999999.00",0)
   CALL FldAddT("Unfallrente3","NUM;,99999999.00",0)
   CALL FldAddT("Unfallrente4","NUM;,99999999.00",0)
   CALL FldAddT("Kartenwert","NUM;,99999.00",0)
   CALL FldAddT("Kartenanzahl","NUM;,999999.",0)
   REM Leben
   CALL FldAddT("BURenteMonat","NUM;,999999999.00",0)
   REM Unfall
   CALL FldAddT("KuBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("zvp1Beitrag","NUM;,999999999.00",0)
   CALL FldAddT("zvp2Beitrag","NUM;,999999999.00",0)
   CALL FldAddT("zvp3Beitrag","NUM;,999999999.00",0)
   CALL FldAddT("zvp4Beitrag","NUM;,999999999.00",0)
   CALL FldAddT("SummeBeitrag","NUM;,999999999.00",0)
   REM Inventar Praxis
   CALL FldAddT("IVSu","NUM;,999999999.00",0)
   CALL FldAddT("IVSB","NUM;,999999999.00",0)
   CALL FldAddT("IVSatz","NUM;,99999999.000",0)
   CALL FldAddT("IVBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("KBUSu","NUM;,999999999.00",0)
   CALL FldAddT("KBUSB","NUM;,999999999.00",0)
   CALL FldAddT("KBUSatz","NUM;,99999999.000",0)
   CALL FldAddT("KBUBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("GLESu","NUM;,999999999.00",0)
   CALL FldAddT("GLESB","NUM;,999999999.00",0)
   CALL FldAddT("GLESatz","NUM;,99999999.000",0)
   CALL FldAddT("GLEBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("GLPSu","NUM;,999999999.00",0)
   CALL FldAddT("GLPSB","NUM;,999999999.00",0)
   CALL FldAddT("GLPSatz","NUM;,99999999.000",0)
   CALL FldAddT("GLPBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("ELSu","NUM;,999999999.00",0)
   CALL FldAddT("ELSB","NUM;,999999999.00",0)
   CALL FldAddT("ELSatz","NUM;,99999999.000",0)
   CALL FldAddT("ELBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("BEWSu","NUM;,999999999.00",0)
   CALL FldAddT("BEWSB","NUM;,999999999.00",0)
   CALL FldAddT("BEWSatz","NUM;,99999999.000",0)
   CALL FldAddT("BEWBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("IVPRabatt","NUM;,99999999.000",0)
   CALL FldAddT("IVPSumme","NUM;,999999999.00",0)
   REM Berufshaftpflicht
   CALL FldAddT("BHBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("BEHZusRisiko","NUM;,999999999.00",0)
   CALL FldAddT("BEHRabatt","NUM;,99999999.000",0)
   CALL FldAddT("BEHPHV","NUM;,999999999.00",0)
   CALL FldAddT("BEHSumme","NUM;,999999999.00",0)
   REM Rechtsschutz
   CALL FldAddT("RSPrivatSB","NUM;,999999999.00",0)
   CALL FldAddT("RSPrivatBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("RSBerufSB","NUM;,999999999.00",0)
   CALL FldAddT("RSBerufBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("RSVerkSB","NUM;,999999999.00",0)
   CALL FldAddT("RSVerkBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("RSVertrSB","NUM;,999999999.00",0)
   CALL FldAddT("RSVertrBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("RSRegrSB","NUM;,999999999.00",0)
   CALL FldAddT("RSRegrBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("RSSpeziSB","NUM;,999999999.00",0)
   CALL FldAddT("RSSpeziBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("RSWohnSB","NUM;,999999999.00",0)
   CALL FldAddT("RSWohnBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("Rechtsumme","NUM;,999999999.00",0)
   REM Kapitalanlagen
   CALL FldAddT("AnlFond1","NUM;,99999999999999.",0)
   CALL FldAddT("AnlFond2","NUM;,99999999999999.",0)
   CALL FldAddT("AnlFond3","NUM;,99999999999999.",0)
   CALL FldAddT("AnlFond4","NUM;,99999999999999.",0)
   CALL FldAddT("AnlFond5","NUM;,99999999999999.",0)
   CALL FldAddT("AnlFond6","NUM;,99999999999999.",0)
   CALL FldAddT("AnliFond1","NUM;,99999999999999.",0)
   CALL FldAddT("AnliFond2","NUM;,99999999999999.",0)
   CALL FldAddT("AnliFond3","NUM;,99999999999999.",0)
   CALL FldAddT("AnliFond4","NUM;,99999999999999.",0)
   CALL FldAddT("AnliFond5","NUM;,99999999999999.",0)
   CALL FldAddT("AnliFond6","NUM;,99999999999999.",0)
   CALL FldAddT("SparFond1","NUM;,99999999999999.",0)
   CALL FldAddT("SparFond2","NUM;,99999999999999.",0)
   CALL FldAddT("SparFond3","NUM;,99999999999999.",0)
   CALL FldAddT("SparFond4","NUM;,99999999999999.",0)
   CALL FldAddT("SparFond5","NUM;,99999999999999.",0)
   CALL FldAddT("SparFond6","NUM;,99999999999999.",0)
   CALL FldAddT("SpariFond1","NUM;,99999999999999.",0)
   CALL FldAddT("SpariFond2","NUM;,99999999999999.",0)
   CALL FldAddT("SpariFond3","NUM;,99999999999999.",0)
   CALL FldAddT("SpariFond4","NUM;,99999999999999.",0)
   CALL FldAddT("SpariFond5","NUM;,99999999999999.",0)
   CALL FldAddT("SpariFond6","NUM;,99999999999999.",0)
   CALL FldAddT("HRWertsachProz","NUM;,9999.0000",0)
   CALL FldAddT("HRUnterdeckProz","NUM;,9999.0000",0)
   CALL FldAddT("HRöberspannProz","NUM;,9999.0000",0)
   CALL FldAddT("HRFahrdiebProz","NUM;,9999.000",0)
   CALL FldAddT("HRWohnflÑche","NUM;,99999.000",0)
   CALL FldAddT("HRZuschlagProz","NUM;,99999.0000",0)
 
   REM Glasbruch
   CALL FldAddT("KFZHaftBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("KFZVollkBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("KFZTeilkBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("KFZGesBeitrag","NUM;,999999999.00",0)
   REM tatsÑchliches KÅndigungsdatum
   CALL FldAddT("Deckung1","NUM;,99999999.00",0)
   CALL FldAddT("Deckung2","NUM;,99999999.00",0)
   CALL FldAddT("Deckung3","NUM;,99999999.00",0)
   CALL FldAddT("Deckung4","NUM;,99999999.00",0)
   CALL FldAddT("VGezGesamtPlus","NUM;,999999999.00",0)
   CALL FldAddT("VGezGesamtMinus","NUM;,999999999 .00",0)
   CALL FldAddT("Umrechnung","NUM;,99999999.000000",0)
   CALL FldAddT("FEigmittel","NUM;,999999999.00",0)
   CALL FldAddT("FDarlBetrag","NUM;,999999999.00",0)
   CALL FldAddT("FZinsNom","NUM;999.0000",0)
   CALL FldAddT("FZinsEff","NUM;999.0000",0)
   CALL FldAddT("FBeitrag","NUM;,999999999.00",0)
   CALL FldAddT("FAuszahl","NUM;,999999999.00",0)
   CALL FldAddT("FTilgung","NUM;,999999999.00",0)
   CALL FldAddT("KFZ_Genes","NUM;,99999999.00",0)
   CALL FldAddT("BeitrSum","NUM;,9999999999.00",0)
   CALL FldAddT("BewertEinm","NUM;,99999999.00",0)
   CALL FldAddT("SummeAnteile","NUM;,99999999999.000",0)
   CALL FldAddT("SummeEinzDM","NUM;,999999999999.00",0)
   CALL FldAddT("SummeEinzUS","NUM;,999999999999.00",0)
   CALL FldAddT("SummeEinzEur","NUM;,999999999999.00",0)
   CALL FldAddT("NettoBeitrag","NUM;,999999999999.00",0)
   CALL FldAddT("Einheiten","NUM;999999999.00",0)
   CALL FldAddT("PoolV","NUM;99999999.00",0)
   CALL FldAddT("SummeEinzWaehr","NUM;,999999999999.00",0)
   CALL FldAddT("BAnteilsprWaehr","NUM;,9999999999.0000",0)
   CALL FldAddT("BAnteilsprDM","NUM;,9999999999.0000",0)
   CALL FldAddT("BAnteilsprUS","NUM;,9999999999.0000",0)
   CALL FldAddT("BAnteilsprEuro","NUM;,9999999999.0000",0)
   CALL FldAddT("SummeBestWaehr","NUM;,999999999999.00",0)
   CALL FldAddT("BRÅckkaufWaehr","NUM;,9999999999.0000",0)
   CALL FldAddT("BRÅckkaufDM","NUM;,9999999999.0000",0)
   CALL FldAddT("BRÅckkaufUS","NUM;,9999999999.0000",0)
   CALL FldAddT("BRÅckkaufEuro","NUM;,9999999999.0000",0)
   CALL FldAddT("BBestandDM","NUM;,999999999999.00",0)
   CALL FldAddT("BBestandUS","NUM;,999999999999.00",0)
   CALL FldAddT("BBestandEuro","NUM;,999999999999.00",0)
   CALL FldAddT("BBestandWaehr","NUM;,999999999999.00",0)

   CALL FldAddT("EinzBeitrag","NUM;,999999999999.00",0)
   CALL FldAddT("Courtage","NUM;,999999999999.00",0)
   CALL FldAddT("EinzCourtage","NUM;,999999999999.00",0)
   CALL FldAddT("EinzBeitragOld","NUM;,999999999999.00",0)
   CALL FldAddT("DradDiSum","NUM;,999999999.00",0)
   CALL FldAddT("KMStand","NUM;,999999999999.",0)
   CALL FldAddT("Schadquote","NUM;,9999999.0000",0)
   CALL FldAddT("AFSKPAUEUR","NUM;,99999.00",0)
 
   SAVE FILE "KVERTRAG"
 END SUB 
 
SUB ThousendYESB()
   SET STATUS "Buchung1 - RÅcksetzen Feldformat!"
   FILE "BUCHUNG1"
   CALL FldAddT("Volumen","NUM;,9999999.00",0)' -- WÑhrungsanzeige entfernt
   CALL FldAddT("Gesamtbetrag","NUM;,9999999.00",0)
   CALL FldAddT("gezahlt","NUM;,9999999.00",0)
   CALL FldAddT("gezahlt_am","DAT;0d.mm.yyyy",0)
   CALL FldAddT("Einheiten","NUM;,9999999999.00",0)
   CALL FldAddT("GesamtbetragEU","NUM;,9999999999.00",0)
   CALL FldAddT("BetragEU","NUM;,9999999999.00",0)
   CALL FldAddT("SREU","NUM;,9999999999.00",0)
   CALL FldAddT("BewertungssumEU","NUM;,9999999999.00",0)
   CALL FldAddT("gezahltEU","NUM;,9999999999.00",0)
     CALL FldAddT("Bewertung2","NUM;,9999999.00",0)
     CALL FldAddT("Bewertung2EU","NUM;,9999999.00",0)
     CALL FldAddT("VSumme","NUM;,999999999999.00",0)
     CALL FldAddT("BeitragBrut","NUM;,999999999.00",0)
     CALL FldAddT("BeitragNet","NUM;,999999999.00",0)
     CALL FldAddT("VSummeEU","NUM;,999999999999.00",0)
     CALL FldAddT("BeitragBrutEU","NUM;,999999999.00",0)
     CALL FldAddT("BeitragNetEU","NUM;,999999999.00",0)
     CALL FldAddT("JahresBBrut","NUM;,999999999.00",0)
     CALL FldAddT("JahresBNet","NUM;,999999999.00",0)
     CALL FldAddT("JahresBBrutEU","NUM;,999999999.00",0)
     CALL FldAddT("JahresBNetEU","NUM;,999999999.00",0)
     CALL FldAddT("ProvBasiswert","NUM;,999999999.00",0)
     CALL FldAddT("KundEinzahlung","NUM;,999999999.00",0)
     CALL FldAddT("KundEinzahluEU","NUM;,999999999.00",0)
     CALL FldAddT("EinheitenEU","NUM;,9999999999.00",0)
   SAVE FILE "BUCHUNG1"
 END SUB 
 
SUB ThousendYESB1()
   SET STATUS "Buchung - RÅcksetzen Feldformat!"
   FILE "BUCHUNG"
   CALL FldAddT("Volumen","NUM;,9999999.00",0)' -- WÑhrungsanzeige entfernt
   CALL FldAddT("Gesamtbetrag","NUM;9999999.00",0)
   CALL FldAddT("gezahlt","NUM;9999999.00",0)
   CALL FldAddT("gezahlt_am","DAT;0d.mm.yyyy",0)
   CALL FldAddT("Einheiten","NUM;,9999999999.00",0)
   CALL FldAddT("GesamtbetragEU","NUM;,9999999999.00",0)
   CALL FldAddT("BetragEU","NUM;,9999999999.00",0)
   CALL FldAddT("SREU","NUM;,9999999999.00",0)
   CALL FldAddT("BewertungssumEU","NUM;,9999999999.00",0)
   CALL FldAddT("gezahltEU","NUM;,9999999999.00",0)
     CALL FldAddT("Bewertung2","NUM;,9999999.00",0)
     CALL FldAddT("Bewertung2EU","NUM;,9999999.00",0)
     CALL FldAddT("VSumme","NUM;,999999999999.00",0)
     CALL FldAddT("BeitragBrut","NUM;,999999999.00",0)
     CALL FldAddT("BeitragNet","NUM;,999999999.00",0)
     CALL FldAddT("VSummeEU","NUM;,999999999999.00",0)
     CALL FldAddT("BeitragBrutEU","NUM;,999999999.00",0)
     CALL FldAddT("BeitragNetEU","NUM;,999999999.00",0)
     CALL FldAddT("JahresBBrut","NUM;,999999999.00",0)
     CALL FldAddT("JahresBNet","NUM;,999999999.00",0)
     CALL FldAddT("JahresBBrutEU","NUM;,999999999.00",0)
     CALL FldAddT("JahresBNetEU","NUM;,999999999.00",0)
     CALL FldAddT("ProvBasiswert","NUM;,999999999.00",0)
     CALL FldAddT("KundEinzahlung","NUM;,999999999.00",0)
     CALL FldAddT("KundEinzahluEU","NUM;,999999999.00",0)
   SAVE FILE "BUCHUNG"
 END SUB 
 
SUB ThousANoTh()
 SET STATUS "Adressen - Passe Feldformat fÅr ASCII-Export an!"
 FILE "ADRESSEN"
 CALL FldAddT("Schadquote","NUM;9999999.0000",0)
 CALL FldAddT("Stornoquote","NUM;99999.0000",0)
     CALL FldAddT("VertrGesamt","NUM;999999999999",0)
     CALL FldAddT("VertrStatu1","NUM;999999999999",0)
     CALL FldAddT("VertrStatu2","NUM;999999999999",0)
     CALL FldAddT("VertrStatu3","NUM;999999999999",0)
     CALL FldAddT("VertrStatu4","NUM;999999999999",0)
     CALL FldAddT("VertrStatu5","NUM;999999999999",0)
     CALL FldAddT("VertrStatu6","NUM;999999999999",0)
     CALL FldAddT("VertrStatu7","NUM;999999999999",0)
     CALL FldAddT("VertrStatu8","NUM;999999999999",0)
     CALL FldAddT("VertrStatu9","NUM;999999999999",0)
     CALL FldAddT("VertrStatu10","NUM;999999999999",0)
     CALL FldAddT("VertrStatu11","NUM;999999999999",0)
     CALL FldAddT("VertrStatu12","NUM;999999999999",0)
     CALL FldAddT("VertrStatu13","NUM;999999999999",0)
     CALL FldAddT("VertrStatu14","NUM;999999999999",0)
     CALL FldAddT("VertrStatu15","NUM;999999999999",0)
     CALL FldAddT("VertrStatu16","NUM;999999999999",0)
 
     CALL FldAddT("BWVertrGesamt","NUM;999999999999.00",0)
     CALL FldAddT("BWVertrStatu1","NUM;999999999999.00",0)
     CALL FldAddT("BWVertrStatu2","NUM;999999999999.00",0)
     CALL FldAddT("BWVertrStatu3","NUM;999999999999.00",0)
     CALL FldAddT("BWVertrStatu4","NUM;999999999999.00",0)
     CALL FldAddT("BWVertrStatu5","NUM;999999999999.00",0)
     CALL FldAddT("BWVertrStatu6","NUM;999999999999.00",0)
     CALL FldAddT("BWVertrStatu7","NUM;999999999999.00",0)
     CALL FldAddT("BWVertrStatu8","NUM;999999999999.00",0)
     CALL FldAddT("BWVertrStatu9","NUM;999999999999.00",0)
     CALL FldAddT("BWVertrStatu10","NUM;999999999999.00",0)
     CALL FldAddT("BWVertrStatu11","NUM;999999999999.00",0)
     CALL FldAddT("BWVertrStatu12","NUM;999999999999.00",0)
     CALL FldAddT("BWVertrStatu13","NUM;999999999999.00",0)
     CALL FldAddT("BWVertrStatu14","NUM;999999999999.00",0)
     CALL FldAddT("BWVertrStatu15","NUM;999999999999.00",0)
     CALL FldAddT("BWVertrStatu16","NUM;999999999999.00",0)
 
     CALL FldAddT("BeiVertrGesamt","NUM;999999999999.00",0)
     CALL FldAddT("BeiVertrStatu1","NUM;999999999999.00",0)
     CALL FldAddT("BeiVertrStatu2","NUM;999999999999.00",0)
     CALL FldAddT("BeiVertrStatu3","NUM;999999999999.00",0)
     CALL FldAddT("BeiVertrStatu4","NUM;999999999999.00",0)
     CALL FldAddT("BeiVertrStatu5","NUM;999999999999.00",0)
     CALL FldAddT("BeiVertrStatu6","NUM;999999999999.00",0)
     CALL FldAddT("BeiVertrStatu7","NUM;999999999999.00",0)
     CALL FldAddT("BeiVertrStatu8","NUM;999999999999.00",0)
     CALL FldAddT("BeiVertrStatu9","NUM;999999999999.00",0)
     CALL FldAddT("BeiVertrStatu10","NUM;999999999999.00",0)
     CALL FldAddT("BeiVertrStatu11","NUM;999999999999.00",0)
     CALL FldAddT("BeiVertrStatu12","NUM;999999999999.00",0)
     CALL FldAddT("BeiVertrStatu13","NUM;999999999999.00",0)
     CALL FldAddT("BeiVertrStatu14","NUM;999999999999.00",0)
     CALL FldAddT("BeiVertrStatu15","NUM;999999999999.00",0)
     CALL FldAddT("BeiVertrStatu16","NUM;999999999999.00",0)
 
     CALL FldAddT("EinhGesamt","NUM;9999999999.0000",0)
     CALL FldAddT("EinhStatu1","NUM;9999999999.0000",0)
     CALL FldAddT("EinhStatu2","NUM;9999999999.0000",0)
     CALL FldAddT("EinhStatu3","NUM;9999999999.0000",0)
     CALL FldAddT("EinhStatu4","NUM;9999999999.0000",0)
     CALL FldAddT("EinhStatu5","NUM;9999999999.0000",0)
     CALL FldAddT("EinhStatu6","NUM;9999999999.0000",0)
     CALL FldAddT("EinhStatu7","NUM;9999999999.0000",0)
     CALL FldAddT("EinhStatu8","NUM;9999999999.0000",0)
     CALL FldAddT("EinhStatu9","NUM;9999999999.0000",0)
     CALL FldAddT("EinhStatu10","NUM;9999999999.0000",0)
     CALL FldAddT("EinhStatu11","NUM;9999999999.0000",0)
     CALL FldAddT("EinhStatu12","NUM;9999999999.0000",0)
     CALL FldAddT("EinhStatu13","NUM;9999999999.0000",0)
     CALL FldAddT("EinhStatu14","NUM;9999999999.0000",0)
     CALL FldAddT("EinhStatu15","NUM;9999999999.0000",0)
     CALL FldAddT("EinhStatu16","NUM;9999999999.0000",0)
 
     CALL FldAddT("AnzSchGesamt","NUM;9999999999.",0)
     CALL FldAddT("AnzSchStatu1","NUM;9999999999.",0)
     CALL FldAddT("AnzSchStatu2","NUM;9999999999.",0)
     CALL FldAddT("AnzSchStatu3","NUM;9999999999.",0)
     CALL FldAddT("AnzSchStatu4","NUM;9999999999.",0)
     CALL FldAddT("AnzSchStatu5","NUM;9999999999.",0)
     CALL FldAddT("AnzSchStatu6","NUM;9999999999.",0)
     CALL FldAddT("AnzSchStatu7","NUM;9999999999.",0)
     CALL FldAddT("AnzSchStatu8","NUM;9999999999.",0)
     CALL FldAddT("AnzSchStatu9","NUM;9999999999.",0)
     CALL FldAddT("AnzSchStatu10","NUM;9999999999.",0)
     CALL FldAddT("AnzSchStatu11","NUM;9999999999.",0)
     CALL FldAddT("AnzSchStatu12","NUM;9999999999.",0)
     CALL FldAddT("AnzSchStatu13","NUM;9999999999.",0)
     CALL FldAddT("AnzSchStatu14","NUM;9999999999.",0)
     CALL FldAddT("AnzSchStatu15","NUM;9999999999.",0)
     CALL FldAddT("AnzSchStatu16","NUM;9999999999.",0)
 
     CALL FldAddT("SchGesamt","NUM;9999999999.00",0)
     CALL FldAddT("SchStatu1","NUM;9999999999.00",0)
     CALL FldAddT("SchStatu2","NUM;9999999999.00",0)
     CALL FldAddT("SchStatu3","NUM;9999999999.00",0)
     CALL FldAddT("SchStatu4","NUM;9999999999.00",0)
     CALL FldAddT("SchStatu5","NUM;9999999999.00",0)
     CALL FldAddT("SchStatu6","NUM;9999999999.00",0)
     CALL FldAddT("SchStatu7","NUM;9999999999.00",0)
     CALL FldAddT("SchStatu8","NUM;9999999999.00",0)
     CALL FldAddT("SchStatu9","NUM;9999999999.00",0)
     CALL FldAddT("SchStatu10","NUM;9999999999.00",0)
     CALL FldAddT("SchStatu11","NUM;9999999999.00",0)
     CALL FldAddT("SchStatu12","NUM;9999999999.00",0)
     CALL FldAddT("SchStatu13","NUM;9999999999.00",0)
     CALL FldAddT("SchStatu14","NUM;9999999999.00",0)
     CALL FldAddT("SchStatu15","NUM;9999999999.00",0)
     CALL FldAddT("SchStatu16","NUM;9999999999.00",0)
     CALL FldAddT("STATISTDATE","DAT;0d.mm.yyyy",0)
     CALL FldAddT("VertrStatu0","NUM;999999999999",0)
     CALL FldAddT("BWVertrStatu0","NUM;999999999999.00",0)
     CALL FldAddT("BeiVertrStatu0","NUM;999999999999.00",0)
     CALL FldAddT("EinhStatu0","NUM;9999999999.0000",0)
     CALL FldAddT("AnzSchStatu0","NUM;9999999999.",0)
     CALL FldAddT("SchStatu0","NUM;9999999999.00",0)
     CALL FldAddT("CAgez","NUM;999999999999.00",0)
     SAVE FILE "ADRESSEN"
 END SUB 



SUB ThousAYesTh()
 SET STATUS "Adressen - Passe Feldformat fÅr ASCII-Export an!"
 FILE "ADRESSEN"
 CALL FldAddT("Schadquote","NUM;9999999.0000",0)
 CALL FldAddT("Stornoquote","NUM;99999.0000",0)
     CALL FldAddT("VertrGesamt","NUM;,999999999999",0)
     CALL FldAddT("VertrStatu1","NUM;,999999999999",0)
     CALL FldAddT("VertrStatu2","NUM;,999999999999",0)
     CALL FldAddT("VertrStatu3","NUM;,999999999999",0)
     CALL FldAddT("VertrStatu4","NUM;,999999999999",0)
     CALL FldAddT("VertrStatu5","NUM;,999999999999",0)
     CALL FldAddT("VertrStatu6","NUM;,999999999999",0)
     CALL FldAddT("VertrStatu7","NUM;,999999999999",0)
     CALL FldAddT("VertrStatu8","NUM;,999999999999",0)
     CALL FldAddT("VertrStatu9","NUM;,999999999999",0)
     CALL FldAddT("VertrStatu10","NUM;,999999999999",0)
     CALL FldAddT("VertrStatu11","NUM;,999999999999",0)
     CALL FldAddT("VertrStatu12","NUM;,999999999999",0)
     CALL FldAddT("VertrStatu13","NUM;,999999999999",0)
     CALL FldAddT("VertrStatu14","NUM;,999999999999",0)
     CALL FldAddT("VertrStatu15","NUM;,999999999999",0)
     CALL FldAddT("VertrStatu16","NUM;,999999999999",0)
 
     CALL FldAddT("BWVertrGesamt","NUM;,999999999999.00",0)
     CALL FldAddT("BWVertrStatu1","NUM;,999999999999.00",0)
     CALL FldAddT("BWVertrStatu2","NUM;,999999999999.00",0)
     CALL FldAddT("BWVertrStatu3","NUM;,999999999999.00",0)
     CALL FldAddT("BWVertrStatu4","NUM;,999999999999.00",0)
     CALL FldAddT("BWVertrStatu5","NUM;,999999999999.00",0)
     CALL FldAddT("BWVertrStatu6","NUM;,999999999999.00",0)
     CALL FldAddT("BWVertrStatu7","NUM;,999999999999.00",0)
     CALL FldAddT("BWVertrStatu8","NUM;,999999999999.00",0)
     CALL FldAddT("BWVertrStatu9","NUM;,999999999999.00",0)
     CALL FldAddT("BWVertrStatu10","NUM;,999999999999.00",0)
     CALL FldAddT("BWVertrStatu11","NUM;,999999999999.00",0)
     CALL FldAddT("BWVertrStatu12","NUM;,999999999999.00",0)
     CALL FldAddT("BWVertrStatu13","NUM;,999999999999.00",0)
     CALL FldAddT("BWVertrStatu14","NUM;,999999999999.00",0)
     CALL FldAddT("BWVertrStatu15","NUM;,999999999999.00",0)
     CALL FldAddT("BWVertrStatu16","NUM;,999999999999.00",0)
 
     CALL FldAddT("BeiVertrGesamt","NUM;,999999999999.00",0)
     CALL FldAddT("BeiVertrStatu1","NUM;,999999999999.00",0)
     CALL FldAddT("BeiVertrStatu2","NUM;,999999999999.00",0)
     CALL FldAddT("BeiVertrStatu3","NUM;,999999999999.00",0)
     CALL FldAddT("BeiVertrStatu4","NUM;,999999999999.00",0)
     CALL FldAddT("BeiVertrStatu5","NUM;,999999999999.00",0)
     CALL FldAddT("BeiVertrStatu6","NUM;,999999999999.00",0)
     CALL FldAddT("BeiVertrStatu7","NUM;,999999999999.00",0)
     CALL FldAddT("BeiVertrStatu8","NUM;,999999999999.00",0)
     CALL FldAddT("BeiVertrStatu9","NUM;,999999999999.00",0)
     CALL FldAddT("BeiVertrStatu10","NUM;,999999999999.00",0)
     CALL FldAddT("BeiVertrStatu11","NUM;,999999999999.00",0)
     CALL FldAddT("BeiVertrStatu12","NUM;,999999999999.00",0)
     CALL FldAddT("BeiVertrStatu13","NUM;,999999999999.00",0)
     CALL FldAddT("BeiVertrStatu14","NUM;,999999999999.00",0)
     CALL FldAddT("BeiVertrStatu15","NUM;,999999999999.00",0)
     CALL FldAddT("BeiVertrStatu16","NUM;,999999999999.00",0)
 
     CALL FldAddT("EinhGesamt","NUM;,9999999999.0000",0)
     CALL FldAddT("EinhStatu1","NUM;,9999999999.0000",0)
     CALL FldAddT("EinhStatu2","NUM;,9999999999.0000",0)
     CALL FldAddT("EinhStatu3","NUM;,9999999999.0000",0)
     CALL FldAddT("EinhStatu4","NUM;,9999999999.0000",0)
     CALL FldAddT("EinhStatu5","NUM;,9999999999.0000",0)
     CALL FldAddT("EinhStatu6","NUM;,9999999999.0000",0)
     CALL FldAddT("EinhStatu7","NUM;,9999999999.0000",0)
     CALL FldAddT("EinhStatu8","NUM;,9999999999.0000",0)
     CALL FldAddT("EinhStatu9","NUM;,9999999999.0000",0)
     CALL FldAddT("EinhStatu10","NUM;,9999999999.0000",0)
     CALL FldAddT("EinhStatu11","NUM;,9999999999.0000",0)
     CALL FldAddT("EinhStatu12","NUM;,9999999999.0000",0)
     CALL FldAddT("EinhStatu13","NUM;,9999999999.0000",0)
     CALL FldAddT("EinhStatu14","NUM;,9999999999.0000",0)
     CALL FldAddT("EinhStatu15","NUM;,9999999999.0000",0)
     CALL FldAddT("EinhStatu16","NUM;,9999999999.0000",0)
 
     CALL FldAddT("AnzSchGesamt","NUM;,9999999999.",0)
     CALL FldAddT("AnzSchStatu1","NUM;,9999999999.",0)
     CALL FldAddT("AnzSchStatu2","NUM;,9999999999.",0)
     CALL FldAddT("AnzSchStatu3","NUM;,9999999999.",0)
     CALL FldAddT("AnzSchStatu4","NUM;,9999999999.",0)
     CALL FldAddT("AnzSchStatu5","NUM;,9999999999.",0)
     CALL FldAddT("AnzSchStatu6","NUM;,9999999999.",0)
     CALL FldAddT("AnzSchStatu7","NUM;,9999999999.",0)
     CALL FldAddT("AnzSchStatu8","NUM;,9999999999.",0)
     CALL FldAddT("AnzSchStatu9","NUM;,9999999999.",0)
     CALL FldAddT("AnzSchStatu10","NUM;,9999999999.",0)
     CALL FldAddT("AnzSchStatu11","NUM;,9999999999.",0)
     CALL FldAddT("AnzSchStatu12","NUM;,9999999999.",0)
     CALL FldAddT("AnzSchStatu13","NUM;,9999999999.",0)
     CALL FldAddT("AnzSchStatu14","NUM;,9999999999.",0)
     CALL FldAddT("AnzSchStatu15","NUM;,9999999999.",0)
     CALL FldAddT("AnzSchStatu16","NUM;,9999999999.",0)
 
     CALL FldAddT("SchGesamt","NUM;,9999999999.00",0)
     CALL FldAddT("SchStatu1","NUM;,9999999999.00",0)
     CALL FldAddT("SchStatu2","NUM;,9999999999.00",0)
     CALL FldAddT("SchStatu3","NUM;,9999999999.00",0)
     CALL FldAddT("SchStatu4","NUM;,9999999999.00",0)
     CALL FldAddT("SchStatu5","NUM;,9999999999.00",0)
     CALL FldAddT("SchStatu6","NUM;,9999999999.00",0)
     CALL FldAddT("SchStatu7","NUM;,9999999999.00",0)
     CALL FldAddT("SchStatu8","NUM;,9999999999.00",0)
     CALL FldAddT("SchStatu9","NUM;,9999999999.00",0)
     CALL FldAddT("SchStatu10","NUM;,9999999999.00",0)
     CALL FldAddT("SchStatu11","NUM;,9999999999.00",0)
     CALL FldAddT("SchStatu12","NUM;,9999999999.00",0)
     CALL FldAddT("SchStatu13","NUM;,9999999999.00",0)
     CALL FldAddT("SchStatu14","NUM;,9999999999.00",0)
     CALL FldAddT("SchStatu15","NUM;,9999999999.00",0)
     CALL FldAddT("SchStatu16","NUM;,9999999999.00",0)
     CALL FldAddT("STATISTDATE","DAT;0d.mm.yyyy",0)
     CALL FldAddT("VertrStatu0","NUM;,999999999999",0)
     CALL FldAddT("BWVertrStatu0","NUM;,999999999999.00",0)
     CALL FldAddT("BeiVertrStatu0","NUM;,999999999999.00",0)
     CALL FldAddT("EinhStatu0","NUM;,9999999999.0000",0)
     CALL FldAddT("AnzSchStatu0","NUM;,9999999999.",0)
     CALL FldAddT("SchStatu0","NUM;,9999999999.00",0)
     CALL FldAddT("CAgez","NUM;,999999999999.00",0)
     SAVE FILE "ADRESSEN"
 END SUB 
 

