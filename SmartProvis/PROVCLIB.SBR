 

 CALL main()'                           ; Library Funktionen
 
 REM 'CLIB letzte énderungen
 '-------------------------------------------------------------------
 
  
 ' AppIDs fÅr Lizensierung Stand 21.10.1998
 ' ------------------------------------------------------------------
 ' 1    PROVIS/SmartPROVIS              ohne Euro
 ' 2    PROVIS Agentur von Datasend     ohne Euro
 ' 3    PROVIS FirstStep(6Agenturen)    ohne Euro
 ' 4    OFFICE/SmartBÅro                ohne Euro
 ' 5    PRICEIT/SmartFactura            ohne Euro
 ' 6    WORKS/SmartBusiness             ohne Euro
 ' 7    IMMAK                           ohne Euro
 ' 8    IMMAK Agentur                   ohne Euro
 ' 9    IMMAK FirstStep                 ohne Euro
 ' 10   PRICEIT (Studiotours)           ohne Euro
 ' 11   PROJECT                         ohne Euro(alt)
 ' 12   MEDIA                           ohne Euro
 ' 13   WAWI                            ohne Euro
 ' 14   HORTUS                          ohne Euro
 ' 15   AKTE                            ohne Euro
 REM OBEN sind die bisherigen AppID's, unten die ab 01.11.98 gÅltigen
 
 ' 20   Business98                      ohne Euro
 ' 25   Business98                      mit Euro
 ' 30   PROJECT98                       ohne EURO(neu)
 ' 35   PROJECT98                       mit EURO
 ' 40   PROVIS98-RealCash Company       ohne Euro
 ' 41   PROVIS98-RealCash Agentur       ohne Euro
 ' 42   PROVIS98-RealCash Company       mit Euro
 ' 43   PROVIS98-RealCash Agentur       mit Euro
 ' 45   PROVIS98-DatasendMaster         ohne Euro
 ' 46   PROVIS98-Agentur von Datsend    ohne Euro
 ' 47   PROVIS98-DatasendMaster         mit Euro
 ' 48   PROVIS98-Agentur von Datsend    mit Euro
 ' 50   PROVIS98                        ohne Euro
 ' 51   PROVIS98                        mit Euro
 ' 52   PROVIS FirstStep(6Agenturen)    ohne Euro 
 ' 54  PROVIS FirstStep(6Agenturen)    mit Euro
 ' 55  PROVIS ohne ProvBerechnung    mit Euro
 ' 60 ProvisMakler
 ' ------------------------------------------------------------------ 
 
 ' Initialisierung der Bibliothek
 ' =======================================================================
 ' Zweck:       setzt alle allgemein benîtigen Variablen etc.
 ' Nutzung:     CALL LIBInit(pintname$,ptitle$,mode%,intID%)
 '              pintname$       = interner Programmname
 '              ptitle$         = offizieller Programmname
 '              mode%           = Programmmodus
 '                              0 = normale Version
 '                              1 = Test
 '              intID%          = interne Programm-ID
 ' =======================================================================
 ' 09.11.95    - Umstellung auf Remote-Zugriff
 ' 28.01.96    - Standardobjekte GLOBAL erzeugt
  
SUB LIBInit(pintname$,ptitle$,mode%,intID%)
 REGISTER CLEAR 
 ERASE 
 CLEAR GLOBAL 
 SET HEADING "SETUP"
 REGISTER "USER","FindWindow","HCC"
 REGISTER "USER","SetWindowLong","JHIJ"
 GLOBAL _projekt$,_netpath$,_localpath$,_remotepath$,_ppath$,_docpath$,test%,plzfound%,stichworte$(300),DisplaySet%,HInstance%,HWnd%%
 GLOBAL inhouse$,inhouse1$,sep1$,_db%,suchopt$,textversch$,ergdatuma$,akquiseneu$,_debug%
 GLOBAL sm_x$,sm_y$,sm_dx$,sm_dy$,sm_x%,sm_y%,sm_dx%,sm_dy%
 GLOBAL Termine$(1),LastTermin%,tfound%,cmd$,AutoKeyword$,suna$,sunaold$,AdrFound$(1),tfoundadr%,adrfound%,LAuswahl1$(1),ADRFilter$
 GLOBAL Delphi%,RNotiz$,proserv$,Felder$(100),GWemailAbr%
 GLOBAL dlg AS DIALOG ,c AS DialogControl,control AS DialogControl
 GLOBAL hdoc%,mleft%,mright%,mtop%,mbottom%,vzeil%,ueberpos%,listende%,czeile%,cPage%,cPageold%
 GLOBAL VFREE%,VRIGHT%,VLEFT%,VLEFTMARGIN%,VRIGHTMARGIN%,VTOP%,VBOTTOM%,VTOPMARGIN%,VBOTTOMMARGIN%
 GLOBAL wbericht$,nummer$,AutoAnrede$,AutoTitel$,AutoBeruf$,AutoHobbys$,AutoOrt$,AutoLand$,AutoFiForm$
 GLOBAL AutoFStand$,AutoAnstell$,AutoNational$,AutoStaat$,AutoPLZ$,nemany$,MATagest$,tpfad$,adrglob%
 GLOBAL eurosupport$,ProjectJN$,PrvVerfahr$,prv$,DokVor$,ProvBuch$,adrser%,gesser%,maser%,aqbearb$,reser%,mahnser%
 GLOBAL noserie%,codeadrt%,ag$,Workstation%,offVlLi%,offBMCh%,nomail%,minuteab%,TV%(10),TV$(10),ter1anz%,KonTest$
  
 ERASE ipaddress$,portnumber$,udpserver$,version%,GPPCS$
 GLOBAL ipaddress$,portnumber$,udpserver$,version%,GPPCS$
 GLOBAL terbyhand%,GAnredADR$,GTitelADR$,GNachnameADR$,GVornameADR$,GGebname$,GPLZADR$,GOrtADR$,GStrasseADR$,GAppName$,GTelefon1$,GGeburtstag%,GLandAdr$
 GLOBAL GMAName$,GMACodeMA%,GDirektion$,GErledTermin$
 GLOBAL GAdrDat$,GConDat$,GTelDat$,GAkquiDat$,GDokDat$,GADRUni$
 GLOBAL Gdname$,ErrZAB%,GASFKZEVerarb%,GCODieRuf%,GCODieRuf1%,GCodieruf2%,GCodieRuf3%
 GLOBAL f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$,GGGcodeku$
 GLOBAL Gintid%,GCODie%,GHDSerial$,GASP%,GMACodeDir$,zweimille$,_WPSuffix$
 GLOBAL GLundWrigg$,GAFSK$,GAFSKLALA%,GBENE$,GBENE%,GGSuna$,GOptGeb%,GEurofin%,GBerlimex%,GZP%
 GLOBAL GMASuper$(1),GMASuper%(1),GMASuperCount%,GIIMTemplate$
 GLOBAL GAufrufproj$,ASerie25%(1),GzurzumVertr%,Greqstati%
 GLOBAL AutoKArt1$,AutoKArt2$,GAutoKArt1$(50),GAutoKArt2$(50),GLizEnde$,GLizFirma$,GLizName$,Gpdemende$,Vista$
 GLOBAL GPrompt$,CodeMA%,GELO%,GELOApp$,GELOErg%,GELOFehlText$,GFdate$

 GLOBAL GEMAILRAUS$,GEMAIL%,GEMAILSer%,GBCC$(1,1),GEMAILJNAuto%,GTerArtSpez%
 GLOBAL GFormBew$,WinDir$,GCodema%,GsVSNR$,cucuma%
 GLOBAL GVTAgentur$,GVTCodema%,GNetzAPAkt%
 GLOBAL GStorWarnJN$,GStorWarnDGes$,GStorWarnDMA$,GStorWarnGrund$,GStorWarnMasn$,GStorWarnErg$
 GLOBAL GAdministrator%,GFAELLIG%,Gdruvonma%,GScanDir$,GEMAILon$,GVertrID%,GSofortfile$,GCalcuvDir$
 GLOBAL GOrt$,GPLZ$,GMFoAq%,GMalist2$(10),GKondList$(1),Gfsc%,Gdirneu%,GExpSAPPfad$
 GLOBAL GCodeAnalyse%,GFinanzAnalyse%
 GLOBAL GMaAnrede$,GMaAnrede2$,GMaVorname$,GMaVorname2$,GMaNachname$,GMaNachname2$
 GLOBAL GMaFirmaName$,GMaFirmaName2$,GMaOrt$,GMaOrt2$,GMaStrasse$,GMaStrasse2$,GMaPLZ$,GMaPLZ2$,GMALand$,GMALand2$
 GLOBAL GDoksu1%,GFoerdVerr%,GZEID%,GTerminal%,GohneVertr$
 GLOBAL GdruckAG%,GDruckPr%,GPdf%,GDruckName$,GZEDat%,_codekre%,_codebuc%,GSpartenart$(100)
 GLOBAL GDatumVON%,GDatumBis%,GSuFromAdr%,GProvSperreJN$,GSerDir$,GCodeGRSP%
 GLOBAL GSpGruppe$(1),GSPGrausw$(1),GSpGrPrompt$
 GLOBAL GGesell$(1),GGesellausw$(1),GGesellPrompt$
 GLOBAL GSpart$(1),GSpartausw$(1),GSpartPrompt$
 GLOBAL ggewprod$(1),ggewprod1$(1),ggewprod2$
 GLOBAL GVSupersuch%
 GLOBAL Galle$,GZEj%
 GLOBAL GStornoDiff%,GSollNeu%,GFPB%,GBewertungOld%,GOldProdSu$,GAleks%
 GLOBAL GSpezProzEinh%,GSpezBWEinh%,GSpGSparte%,GnurSpart%,GEinhEinmSpez%,GNoAbsendInfo%,Gbodytxt$,GMailBetreff$
 GLOBAL GoldScanVerf$,GXMLCSVExport$,GZEDatF%
 GLOBAL GBangel$,GDisDokSchu$,GKredit%
 GLOBAL GIvonAdr%,GAnfrage%,GAngebot%,GIMMAK%,GInvesthouse$,GSuna1$,GSuna2$,Gund$
 GLOBAL GUeberweislist$,GIdeal$,GBuchauszug$,_gnetpath$
 GLOBAL GHilfstru%(1),GHilfstru$(1),GhstruI%,GDirINI$,GVarI%,GDieMakler$
 GLOBAL GAbgleich%,GSuche%,GCodeEingGE%,GProvisMaske$
 GLOBAL _gesold$,_gesold1$,_gesstra·e$,_Gesplz$,_Gesort$,_gesland$
 GLOBAL GNeuSuGeadr$,GInhouse$,GInhaus%,GTerflNote%,Gvertraege$(1),Gf%,GSeaButDis%,GReShow%
 GReShow% = 0
 GSeaButDis% = 0
 GTerflNote% = 0
 GInhouse$ = "TRUE"
 GTerminal% = 0
 GDirINI$ = ""
 GhstruI% = 0
 GIMMAK% = 0
 GIvonAdr% = 0
 GKredit% = 0
 GSpGSparte% = 0
 GStornoDiff% = 0
 GVSupersuch% = 0
 Galle$ = "n"
 GFoerdVerr% = 0:GZEID% = 0
 GDoksu1% = 0
 Gfsc% = 0
 GFinanzAnalyse% = 0
 GMFoAq% = 1
 GEurofin% = 0
 GBerlimex% = 0
 GZP% = 0
 GAdministrator% = 0
 GBVF% = 0
 GFAELLIG% = 0
 GELOApp$ = "SPv2ELO.exe"
 GFormBew$ = ""
 GEMAILSer% = 0
 GEMAILJNAuto% = 0
 GEMAILRAUS$ = ""
 GELO% = 0
 zweimille$ = "000000"
 GCODieRuf% = 0
 GCODieRuf1% = 0
 GCodieRuf2% = 0
 GCodieRuf3% = 0
 GGGcodeku$ = "":f1$ = "":f2$ = "":f3$ = "":f4$ = "":f5$ = "":f6$ = "":f7$ = "":f8$ = "":f9$ = "":f10$ = "":
 f11$ = "":f12$ = "":f13$ = "":f14$ = "":f15$ = "":f16$ = "":f17$ = "":f18$ = "":f19$ = "":f20$ = ""
 ErrZAB% = 0
 GAdrDat$ = "ADRESSEN"
 GConDat$ = "CONNECT"
 GTelDat$ = "TELEFON"
 GAkquiDat$ = "AKQUISE"
 GDokDat$ = "DOKUMENT"
 terbyhand% = 0
 ter1anz% = 0
 minuteab% = 10
 nomail% = 0
 offBMCh% = 0
 offVlLi% = 0
 noserie% = 0
 aqbearb$ = "n"
 adrser% = 0
 maser% = 0
 gesser% = 0
 reser% = 0
 mahnser% = 0
 ProvBuch$ = "TRUE"
 ag$ = "n"
 IF intID% = 55 THEN ProvBuch$ = "FALSE"
 DokVor$ = "n"
 eurosupport$ = "FALSE"
 ProjectJN$ = "FALSE"
 PrvVerfahr$ = "STANDARD"
 IF intID% >= 40 AND intID% <= 43 OR intID% > 59 THEN PrvVerfahr$ = "ZAHLUNGSEINGANG"
 IF intID% = 25 OR intID% = 35 OR intID% = 42 OR intID% = 43 OR intID% = 47 OR intID% = 48 OR intID% = 51 OR intID% = 54 OR intID% = 55 OR intID% > 59 THEN eurosupport$ = "TRUE"
 IF intID% = 30 OR intID% = 35 THEN ProjectJN$ = "TRUE"
 IF intID% > 59 THEN 
   MAKLER$ = "TRUE"
   eurosupport$ = "TRUE"
 END IF 
 IF intID% = 80 THEN 
   GASP% = - 1
 END IF 
 REM ag$="j" dann Agenturvariante und alle Funktionen sperren
 IF intID% = 43 THEN ag$ = "j"
 dokneu$ = ""
 wbsort$ = ""
 IF PrvVerfahr$ LIKE "Zahlungseingang" THEN 
    prv$ = "Real Cash"
 ELSE 
    PrvVerfahr$ = "STANDARD"
    prv$ = "STANDARD"
 END IF 
 _projekt$ = pintname$
 Gintid% = intid%
 IF GintID% = 62 THEN 
   GProvisMaske$ = "PROVISC"
 ELSE 
   GProvisMaske$ = ""
 END IF 
 suchopt$ = "Nachname"
 IF FN sys(4) = 3 OR FN sys(4) = 2 THEN test% = 0 ELSE test% = mode%
 IF CALL ("FindWindow","ThunderForm","") > 0 THEN test% = 0
 _db% = 0
 Delphi% = 1
 Superbase.Ctl3D = - 1
 REM Superbase.MDIMode = - 1
 Superbase.MDIMode = 0
 Superbase.CenturyBase = 1930
 
 REM Datenbanken mit mehr als 16 Millionen Adressen
 SET FILE MAX ON 
 REM Alle lokalen Dateien fÅr gemeinsamen Zugriff îffnen
 Superbase.LocalFileLocking = - 1
 Superbase.FileHandlesTotal = 250
 Superbase.FileHandlesMaxOpen = 250

 REM Ein Verzîgerung von 5 Sekunden fÅr Wiederholungsversuche beim 
 
 REM Zugriff auf gesperrte Dateien einstellen
 REM Die Anzahl der Wiederholungsversuche einstellen
 REM Superbase.LockDelayFile = 500
 REM Superbase.LockRetryFile = 5
 REM Dieselbe Wartezeit und diesselbe Versuchsanzahl fÅr einen gesperrten 
 REM Datensatz angeben
 REM Superbase.LockDelayRecord = 500
 REM Superbase.LockRetryRecord = 5
 REM Dieselbe Wartezeit und diesselbe Versuchsanzahl fÅr die
 REM Systemsperren angeben
 REM Superbase.LockDelaySystem = 500
 REM Superbase.LockRetrySystem = 5
 
 REM Einstellen, da· meherer DatensÑtze auf einmal gesperrt werden kînnen
 
 Superbase.LockRetention = 0
 
 Superbase.BufferCount = 2000
 Superbase.ANSICONVERT = 0
 REM Superbase.CursorBusy = 32514
 Superbase.Dateformat = "0D.0M.YYYY"


 REGISTER "USER","GetWindowWord","III"
 REGISTER "USER","MessageBox","IICCI"
 IF test% = 0 THEN ON ERROR GOTO ErrorHandler
 REGISTER "Kernel","GetWindowsDirectory","IFI"
 REGISTER "Kernel","GetSystemDirectory","IFI"
 REM REGISTER "Kernel","GetFullPathName","IFI"
 REM a% = CALL ("GetFullPathName",_gnetpath$,255)
 WinDir$ = ""
 a% = CALL ("GetWindowsDirectory",WinDir$,128)
 SysDir$ = ""
 a% = CALL ("GetSystemDirectory",SysDir$,128)
 REGISTER "Kernel","GetPrivateProfileString","ICCCFIC"
 REM CALL Fehler ("Andi test","")
 
 REM CALL Fehler("","")
 Superbase.ShowLongFileNames = - 1
 _gnetpath$ = DIRECTORY 
 Superbase.ShowLongFileNames = 0
 dir$ = DIRECTORY 
 REM REQUEST dir$,"",2
 IF test% = 0 THEN 
   IF UCASE$ (ptitle$) LIKE "*PROJECT*" THEN 
     pintname$ = "PROJECT"
     _netpath$ = dir$
     pintname$ = "FACTURA"
   ELSE 
     _netpath$ = dir$
   END IF 
   
 ELSE 
   _netpath$ = ReadINI$("DEBUG",pintname$ + "_net")
 END IF 
 _netpath$ = dir$
 _remotepath$ = dir$
 _localpath$ = dir$
 REM ** Remote-Zugriff aktivieren **
 IF _remotepath$ LIKE "leer" THEN _remotepath$ = _netpath$
 
 _localpath$ = _netpath$
 _remotepath$ = _netpath$
 
 
 IF RIGHT$ (_netpath$,1) <> "\" THEN _netpath$ = _netpath$ + "\"
 IF RIGHT$ (_localpath$,1) <> "\" THEN _localpath$ = _localpath$ + "\"
 IF RIGHT$ (_remotepath$,1) <> "\" THEN _remotepath$ = _remotepath$ + "\"
 REM IF Delphi% <> 0 THEN dll$ = "APPSERV.DLL" ELSE dll$ = "SBTOOLS.DLL" 
 REM GCODIE$ = UCASE$ (ReadINI$("SYSTEM","NewSearch"))
 
 REM 22032010
 GCodie% = - 1
 GCODIE$ = "TRUE"

 REM CALL Fehler(GCODIE$,"")
 IF Gcodie$ LIKE "leer" THEN 
   IF GASP% = - 1 OR GTerminal% = - 1 THEN 
   ELSE 
     GDirINI$ = "C:\codie.tmp\"
     IF NOT EXISTS (GDirINI$ + "codieapp.ini") THEN 
       IF EXISTS (windir$ + "codieapp.ini" THEN 
         COPY windir$ + "codieapp.ini" TO GDirINI$ + "codieapp.ini"
       ELSE 
         IF EXISTS (_netpath$ + "LOCAL\codieapp.ini") THEN 
           COPY _netpath$ + "LOCAL\codieapp.ini" TO GDirINI$ + "codieapp.ini"
         ELSE 
           CALL Fehler("Es wurde keine gÅltige Datei codieapp.ini gefunden!","Bitte organisieren Sie, da· im aktuellen Windows-Ordner oder im Ordner C:\codie.tmp eine solche Datei vorhanden ist!")
         END IF 
       END IF 
     END IF 
   END IF 
 END IF 
 REM GCODIE$ = UCASE$ (ReadINI$("SYSTEM","NewSearch"))
 REM 19.06.2003
 REM CALL Fehler(Windir$,"")
 

 REM 22032010
 GCodie% = - 1
 GCODIE$ = "TRUE"

 andi$ = "0"
 IF GASP% = - 1 OR GTerminal% = - 1 THEN 
   GCodie% = - 1
   GCODIE$ = "TRUE"
   ON ERROR GOTO cop190620031
   IF EXISTS (Windir$ + "\codielib.dll") THEN 
     DELETE Windir$ + "\codielib.dll"
   END IF 
cop190620031: 
   ON ERROR GOTO cop190620032
   COPY _netpath$ + "LOCAL\codielib.dll" TO Windir$ + "\codielib.dll"

cop190620032: 
  ON ERROR GOTO ErrorHandler
   REGISTER _netpath$ + "CODieLIB.dll","_GetHDSerial","JC"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileExists","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileCopy","IFF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileCopyCall","IFF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileCall","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileDelete","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileDelete1","IF"
   REM REGISTER _netpath$ + "CODieLIB.dll","_SBCreateDir","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileRename","IFF"
   REGISTER _netpath$ + "CODieLIB.dll","_GetStringHash","ICCF"
   REM VerschlÅsselung
   REGISTER _netpath$ + "CODieLIB.dll","_EncryptToFile","IFFFI"
   REGISTER _netpath$ + "CODieLIB.dll","_DecryptFromFile","IFFFI"
   REGISTER _netpath$ + "CODieLIB.dll","_EncryptString","IFFF"
   REGISTER _netpath$ + "CODieLIB.dll","_DecryptString","IFFF"
   REGISTER _netpath$ + "CODieLIB.dll","_ExclusiveAccess","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_GetFileHash","IFFF"
   l$ = LEFT$ (_netpath$,3)
   a% = CALL ("_GetHDSerial",l$)
   GHDSerial$ = RIGHT$ ( STR$ (a%,"000000000000"),6)

   ON ERROR GOTO cop190620033
   textvorlage$ = Windir$ + "\CODieEMAILSend.dll"
   a% = CALL ("_SBFileExists",textvorlage$)
   IF a% = - 1 THEN 
     a% = CALL ("_SBFileDelete1",textvorlage$)
   END IF 
cop190620033: 
   ON ERROR GOTO cop190620034
   REM textdatei$ = _netpath$ + "LOCAL\CODieEMAILSend.dll"
   REM a% = CALL ("_SBFileCopy",textdatei$,textvorlage$)
cop190620034: 
   ON ERROR GOTO ErrorHandler
 ELSE 
   ON ERROR GOTO ErrorHandler
   REGISTER _netpath$ + "CODieLIB.dll","_GetHDSerial","JC"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileExists","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileCopy","IFF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileCopyCall","IFF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileCall","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileDelete","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileDelete1","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SBFileRename","IFF"
   REGISTER _netpath$ + "CODieLIB.dll","_GetStringHash","ICCF"
   REM VerschlÅsselung
   REGISTER _netpath$ + "CODieLIB.dll","_EncryptToFile","IFFFI"
   REGISTER _netpath$ + "CODieLIB.dll","_DecryptFromFile","IFFFI"
   REGISTER _netpath$ + "CODieLIB.dll","_EncryptString","IFFF"
   REGISTER _netpath$ + "CODieLIB.dll","_DecryptString","IFFF"
   REGISTER _netpath$ + "CODieLIB.dll","_ExclusiveAccess","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_GetFileHash","IFFF"
   l$ = LEFT$ (_netpath$,3)
   a% = CALL ("_GetHDSerial",l$)
   GHDSerial$ = RIGHT$ ( STR$ (a%,"000000000000"),6)
 END IF 
 REM CALL Fehler(dir$,"")
 REM GCODIE$ = ""
 Superbase.ShowLongFileNames = - 1
 REM GOTO test13092002
 REM SendEMAILAuto(char *quel) <- Name der INI-Datei
test13092002: 
 REM CALL Fehler("","")
 IF GCODIE$ LIKE "TRUE" THEN 
   GCODie% = - 1
   IF GELO% THEN 
     REM ELO **************************************************************************************************************************************************

     REM Dokumentenanzeige: ****************************************************************************************************************************************
       REM REGISTER _netpath$ + "SPv2ELO.dll","showELOdoc","IFFFFF"

       REM showELOdoc('K', KundenNr, DokumentenNr)
       REM showELOdoc('V', VertragsNr, KundenNr, DokumentenNr)
       REM showELOdoc('S, SchadensNr, VertragsNr, KundenNr,DokumentenNr)
       REM showELOdoc('G', GesellschaftsNr, DokumentenNr)
       REM showELOdoc('A', AgenturNr, DokumentenNr)
       REM showELOdoc('D', DokumentenNr)
       REM RÅckgabewerte: 0 : alles ok
       REM                1 : falsche Parameter
       REM                2 : Dokument nicht vorhanden
       REM                3 : sonstiger Fehler aufgetreten

     REM Dokumentenerstellung:******************************************************************************************************************************************
       REM REGISTER _netpath$ + "SPv2ELO.dll","expELOdoc","IFFFFFFFFFFFFFFFFFFF"

       REM expELOdoc('K', KundenNr, DokumentenNr,Nachname,Vorname,Dokumentenname,Pfad,ErstellerNr,Erstellername,Datum,Dokumententyp,Spartengruppe,Sparte)
       REM expELOdoc('V', VertragsNr, KundenNr,DokumentenNr,GesellschaftsNr,AgenturNr,Gesellschaftsname,Agenturname,Dokumentenname,Pfad,ErstellerNr,Erstellername,Datum,Dokumententyp,Nachname,Vorname,Spartengruppe,Sparte)
       REM expELOdoc('S', SchadensNr, VertragsNr, KundenNr,DokumentenNr,GesellschaftsNr,AgenturNr,Gesellschaftsname,Agenturname,Dokumentenname,Pfad,ErstellerNr,Erstellername, Datum,Dokumententyp,Nachname,Vorname,Spartengruppe,Sparte)
       REM expELOdoc('G', GesellschaftsNr,DokumentenNr,Gesellschaftsname,Dokumentenname,Pfad,ErstellerNr,Erstellername,Datum,Dokumententyp,Spartengruppe,Sparte)
       REM expELOdoc('A', AgenturNr, DokumentenNr,Agenturname,Dokumentenname,Pfad,ErstellerNr,Erstellername,Datum,Dokumententyp,Spartengruppe,Sparte)
       REM RÅckgabewerte: 0 : alles ok
       REM                1:falsche Parameter
       REM                2:sonstiger Fehler aufgetreten

     REM Scannen eines Dokumentes aus SmartPROVIS:**********************************************************************************************************************
       REM REGISTER _netpath$ + "SPv2ELO.dll","scanELOdoc","IFFFFFFFFFFFFFFFFFF"
 
       REM scanELOdoc('K', KundenNr, DokumentenNr,Nachname,Vorname,Dokumentenname,ErstellerNr,Erstellername,Datum,Dokumententyp,Spartengruppe,Sparte)
       REM scanELOdoc('V', VertragsNr, KundenNr,DokumentenNr,GesellschaftsNr,AgenturNr,Gesellschaftsname,Agenturname,Dokumentenname,ErstellerNr,Erstellername,Datum,Dokumententyp,Nachname,Vorname,Spartengruppe,Sparte)
       REM scanELOdoc('S', SchadensNr, VertragsNr, KundenNr,DokumentenNr,GesellschaftsNr,AgenturNr,Gesellschaftsname, Agenturname,Dokumentenname,ErstellerNr,Erstellername,Datum,Dokumententyp,Nachname,Vorname,Spartengruppe,Sparte)
       REM scanELOdoc('G', GesellschaftsNr, DokumentenNr, Gesellschaftsname,Dokumentenname,ErstellerNr,Erstellername,Datum,Dokumententyp,Spartengruppe,Sparte)
       REM scanELOdoc('A', AgenturNr, DokumentenNr, Agenturname,Dokumentenname,ErstellerNr,Erstellername,Datum,Dokumententyp,Spartengruppe,Sparte)
       REM scanELOdoc('D', DokumentenNr,Dokumentenname,ErstellerNr,Erstellername,Datum,Dokumententyp,Spartengruppe,Sparte)
       REM RÅckgabewerte: 0 : alles ok
       REM                1:falsche Parameter
       REM                2:sonstiger Fehler aufgetreten

   END IF 
   REM CODie EMAIL ******************************************************************************************************************************************
   REM GEMAILON$ = UCASE$ (ReadINI$("SYSTEM","EMAILON"))
   GEMAILON$ = "TRUE"
   IF GEMAILON$ LIKE "TRUE" AND andi$ = "andi" THEN 
     REM REGISTER _netpath$ + "CODieEMAILSend.dll","_SendEMAILAuto","IFFFFFFFFF"
     REM REGISTER _netpath$ + "CODieEMAILSend.dll","_SendEMAILSerie","IFFFFFFFFFFFF"
     REM SendEMAILForm(char *TO1, char *Host, char *Port, char *UserID, char *AbsenderFirma, char *AbsenderName, char *AbsenderEMAIL, char *BCC, char *Sendebericht, char *adresse, char *semail, char *Text1,char *Text2, char *BAnrede,char *Bersend1$)
     REM REGISTER _netpath$ + "CODieEMAILSend.dll","_SendEMAILForm","IFFFFFFFFFFFFFFFFFFFFF"
     REM SendEMAILTest(char *absenderemail,char *HostSMTP, char *UserIDSMTP, char *PortSMTP,
     REM  char * HostPOP3,char * UserIDPOP3,char * PortPOP3,char * PasswortPOP3,char * POPCon)
     REM REGISTER _netpath$ + "CODieEMAILSend.dll","_SendEMAILTest","IFFFFFFFFF"
   END IF 
 END IF 
   REM CODieLIB *********************************************************************************************************************************************
   REGISTER _netpath$ + "CODieLIB.dll","_SearchInit","IFFFFFFFFFFFFFFFFFFFFF"
   REGISTER _netpath$ + "CODieLIB.dll","_SearchFill","IFFFFFFFFFFFFFFFFFFFFF"
   REGISTER _netpath$ + "CODieLIB.dll","_SearchShow","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SearchReShow","IF"
   REGISTER _netpath$ + "CODieLIB.dll","_SearchClose","I"
   REGISTER _netpath$ + "CODieLIB.dll","_SearchHide","I"

 
 GIdeal$ = UCASE$ (ReadConfig$("PROVIS","IDXMLIMP"))
 GBuchauszug$ = UCASE$ (ReadConfig$("PROVIS","BAXLSEXP"))
 PrvLiXls$ = UCASE$ (ReadConfig$("PROVIS","PRVLIXLS"))
 IF PrvLiXls$ LIKE "BPRVTR" THEN 
   GUeberweislist$ = "TRUE"
 ELSE 
   GUeberweislist$ = ""
 END IF 

 REM GFinanzAnalyse$ = UCASE$ (ReadConfig$("PROVIS","FinanzAnalyse"))
 GFinanzAnalyse$ = ""
 IF GFinanzAnalyse$ LIKE "TRUE" THEN 
   GFinanzAnalyse% = - 1
 END IF 
 Workstation% = VAL (ReadConfig$("PROVIS","BUERO"))
 REM GPPCS$ = UCASE$ (ReadConfig$("PROVIS","PPCS"))
 REM GLundWrigg$ = UCASE$ (ReadConfig$("PROVIS","LUNDWRIGGERS"))
 GAFSK$ = UCASE$ (ReadConfig$("PROVIS","AFSK"))
 GFPB$ = UCASE$ (ReadConfig$("PROVIS","FPB"))
 GDieMakler$ = UCASE$ (ReadConfig$("PROVIS","DIEMAKLER"))
 GFPB% = 0
 IF GFPB$ LIKE "TRUE" THEN 
   GFPB% = - 1
 END IF 
 GAleks$ = UCASE$ (ReadConfig$("PROVIS","Aleks"))
 GAleks% = 0
 IF GAleks$ LIKE "TRUE" THEN GAleks% = - 1
 eurofin$ = UCASE$ (ReadConfig$("PROVIS","EUROFIN"))
 IF eurofin$ LIKE "TRUE" THEN GEurofin% = - 1
 gfsc$ = ReadConfig$("PROVIS","FSC24")
 IF gfsc$ LIKE "TRUE" THEN gfsc% = - 1
 GBENE$ = UCASE$ (ReadConfig$("PROVIS","BENEDICT"))
 GInvesthouse$ = UCASE$ (ReadConfig$("PROVIS","Investhouse"))
 IF UCASE$ (ReadConfig$("PROVIS","FÑlligkeitsvorschau")) LIKE "TRUE" THEN 
   GFAELLIG% = - 1
   PrvVerfahr$ = ";Zahlungseingang"
 END IF 
 IF GBENE$ LIKE "TRUE" THEN GBENE% = - 1
 IF GPPCS$ = "TRUE" THEN 
   ON ERROR GOTO dfufehler
      version% = superbase.buildno
      IF version% < 478 THEN 
        REQUEST "Sie benîtigen die Buildno 478","Ihre Version hat Buildno " + STR$ (version%,0)
        CLOSE ALL 
        Superbase.Connections.Clear()
        QUIT 
      END IF 
      ipaddress$ = UCASE$ (ReadConfig$("PROVIS","IPADR"))
      portnumber$ = UCASE$ (ReadConfig$("PROVIS","PORTNO"))
      iterations%% = 8000
      interval%% = 100
      REM ipaddress$ = "130.20.0.202"
      REM portnumber$ = "1280"
      udpserver$ = ipaddress$ + ":" + portnumber$
      REM CLOSE ALL 
      Superbase.Connections.Clear()
      Superbase.Connections.Add("CODIE","ConnectionUDPClient").ServerName = udpserver$
      Superbase.Connections.CODIE.Retry = 10000
      Superbase.Connections.CODIE.Timeout = 80000
      GOTO dfuende
dfufehler: 
    SELECT CASE ERRNO 
        CASE 0
 
        CASE 5
            CLOSE ALL 
            Superbase.Connections.Clear()
            REQUEST "DFö-Fehler zum Registrier-Server  Fehler-Nr. :" + STR$ ( ERRNO ,3,0), ERR$ ( ERRNO )100
            CLOSE ALL 
         CASE ELSE 
            CLOSE ALL 
            Superbase.Connections.Clear()
            REQUEST "DFö-Fehler zum Registrier-Server  Fehler-Nr. :" + STR$ ( ERRNO ,3,0), ERR$ ( ERRNO )100
            CLOSE ALL 
    END CASE 
dfuende: 
 ON ERROR GOTO ErrorHandler
 END IF 




 dll$ = "SBTOOLS.DLL"

 REGISTER _netpath$ + dll$,"crypt","CC"
 REGISTER _netpath$ + dll$,"GetLicense","IIC"
 REGISTER _netpath$ + dll$,"PutLicense","IIC"
 REGISTER _netpath$ + dll$,"AccessItemC","CIIC"
 REGISTER _netpath$ + dll$,"AccessItemI","IIII"
 REGISTER _netpath$ + dll$,"AccessItemL","JIIJ"
 REGISTER _netpath$ + dll$,"GetAppVersion","IJJ"
 REGISTER _netpath$ + dll$,"GetUserName","C"
 REGISTER _netpath$ + dll$,"GetUserCompany","C"
 REGISTER _netpath$ + dll$,"GetFileDate","CC"


 REM a% = CALL ("GetLicense",iAppID%,_netpath$ + "LICENSE.DLL")
 GLizFirma$ = ""

 SET DISPLAY OFF 
 CALL SetSBWindow()
 REGISTER "SHELL","ShellExecute","IICCCCI"
 REGISTER "Kernel","GetProfileString","ICCCFI"
 REGISTER "Kernel","WritePrivateProfileString","ICCCC"
 REGISTER "Kernel","WriteProfileString","ICCC"
 cdir$ = DIRECTORY 
 DIRECTORY _netpath$
 REM IF EXISTS ("CPR.DLL") THEN 
   REM REGISTER "CPR.DLL","SUCHEN","ICCCJI"
   REM REGISTER "CPR.DLL","SZURUECK","I"
   REM REGISTER "CPR.DLL","SWEITER","I"
   REM REGISTER "CPR.DLL","OZURUECK","I"
   REM REGISTER "CPR.DLL","OWEITER","I"
   REM REGISTER "CPR.DLL","GETORT","C"
   REM REGISTER "CPR.DLL","GETSTR","C"
   REM REGISTER "CPR.DLL","GETPLZ","C"
   plzfound% = 1
 ELSE 
   plzfound% = 0
 END IF 
 REGISTER "VPENGINE.DLL","VpeOpenDoc","JICIIJ"
 REGISTER "VPENGINE.DLL","VpePrint","IJIIC"
 REGISTER "VPENGINE.DLL","VpePreviewDoc","IJJI"
 REGISTER "VPENGINE.DLL","VpePrintDoc","IJA"
 REGISTER "VPENGINE.DLL","VpePageBreak","IJ"
 REGISTER "VPENGINE.DLL","VpeGetCurrentPage","IJ"
 REGISTER "VPENGINE.DLL","VpeGotoPage","IJI"
 REGISTER "VPENGINE.DLL","VpeStorePos","IJ"
 REGISTER "VPENGINE.DLL","VpeRestorePos","IJ"
 REGISTER "VPENGINE.DLL","VpeGet","IJI"
 REGISTER "VPENGINE.DLL","VpeWrite","IJIIIIC"
 REGISTER "VPENGINE.DLL","VpeLine","IJIIII"
 REGISTER "VPENGINE.DLL","VpeBox","IJIIII"
 REGISTER "VPENGINE.DLL","VpeSetPen","IJIIJ"
 REGISTER "VPENGINE.DLL","VpeSetBkgColor","IJJ"
 REGISTER "VPENGINE.DLL","VpeSetTransparentMode","IJI"
 REGISTER "VPENGINE.DLL","VpeSetAlign","IJI"
 REGISTER "VPENGINE.DLL","VpeSetAutoBreak","IJI"
 
 DIRECTORY cdir$


 
 REGISTER "User","GetSystemMetrics","II"
 IF FN sys(12) >= 480 THEN 
   STATUS ON 
 ELSE 
   statmode$ = ReadINI$("SYSTEM","StatusAutohide")
   IF statmode$ LIKE "true" THEN 
     STATUS OFF 
   ELSE 
     STATUS ON 
   END IF 
 END IF 
 Release$ = ReadConfig$(_projekt$,"Release")
 IF Release$ LIKE "*DEMO*" THEN ptitle$ = ptitle$ + " (DEMO)"
 SET HEADING ptitle$
 SET EDIT ATTR OFF 
 SET REQUEST HEADING ptitle$
 REMOVE DIALOG ALL 
 MOUSE OFF 
 DATEBASE "0d.mm.yyyy"
 GLOBAL PROVISsub%,WAWIsub%,IMMAKsub%,OFFICEsub%,PRICEsub%,MEDIAsub%,DOKsub%,HORTUSsub%,AKsub%,FORMsub%
 GLOBAL demo%,_help%,_formend%,befehl$
 GLOBAL knr%,cuma%,cuku%,sort$,cudo%,cuak%,cuaq%,cuakma$,termin%
 GLOBAL monate$(11),monates$(11),_dlg$(12),WoAnfang%(6)
 GLOBAL _fpw$
 GLOBAL ADRsub%
 GLOBAL title$,AppID%,iAppID%
 GLOBAL vcodema%,_vcodema%,_vcodeak%
 GLOBAL ht$
 GLOBAL AQsub%,SETUPsub%,SUPERVISsub%
 GLOBAL cudat$,monat2$,tag2$,jahr2$,datanz$
 GLOBAL vbezug$,bezug%
 GLOBAL _errormessages%,meterlength%,askonerror%,mousebutton%,_error%
 GLOBAL DOKU$(120),Auswahl$(500),AuswahlA$(500),Notizen$(120),BERICHTE$(120),BERNAME$(120)
 GLOBAL MALIST$(20),MALIST1$(20),MALIST%(20),MADEST$(100),DOKGruppen$(50),AddOn$(50),MALIST2$(1),MALIST2%(1)
 GLOBAL ddeadr%,quickbar%,mnadr1%,mnadr2%,addon1%,addon2%,inhmen%
 GLOBAL andidial$,userfile$,treq%,tString$,GScrWidth$,GPrjForm$,GOFFForm$,GBildschirm%
 GLOBAL DOKGruppenMA$(50)
 andidial$ = ReadINI$("Modem","ISDNDial")
 SELECT CASE UCASE$ (_projekt$)
 CASE "OFFICE"
   AppID% = 10000
 CASE "AKTE"
   AppID% = 10000
 CASE "PROVIS"
   AppID% = 5000
 CASE "IMMAK"
   AppID% = 8000
 CASE "WAWI"
   AppID% = 5600
 CASE "FACTURA"
   AppID% = 1807
 CASE "MEDIA"
   AppID% = 2315
 CASE "HORTUS"
   AppID% = 3089
 END SELECT 
 iAppID% = intID%
 _WPSuffix$ = ReadINI$("SYSTEM","WPSuffix")
 IF _WPSuffix$ = "" THEN _WPSuffix$ = "DOC"
 GBildschirm% = 1024
 IF EXISTS (_netpath$ + "XCHANGE.SBR") THEN 
   REM -- Variablen fÅr XCHANGE
   GLOBAL AllFilesCount%,FilesCount%
 END IF 
 inhmen% = 0
 REM Videokarte$ = UCASE$ (ReadINI$(_projekt$,"Video"))
 _errormessages% = 1
 _fpw$ = ";paris"
 bezug% = 2
 vbezug$ = "Adre&sse"
 IF test% = 0 THEN BREAK OFF 
 BREAK QUIT OFF 
 title$ = ptitle$
 IF test% <> 0 THEN title$ = title$ + "*"
 _ppath$ = _netpath$ + _projekt$ + "\"
 IF Delphi% = 1 THEN 
   IF EXISTS (_netpath$ + "APPSERV.DLL") THEN 
     REGISTER _netpath$ + "APPSERV.DLL","ServerCMD","ICC"
     REGISTER _netpath$ + "APPSERV.DLL","GetReply","C"
   ELSE 
     Delphi% = 0
   END IF 
 END IF 
 CALL ServerInit()
 DIRECTORY _ppath$
 LOAD KEY _netpath$ + "KEYS"
 SET ICON _projekt$ + ".ICO"
 SET COPY NEWLINE ON 
 REM OPEN FORM _netpath$ + _projekt$ + "\" + _projekt$
 progname$ = title$
 SET STATUS "(c)'1990-'2006 CODie software products e.K."
 PANEL OFF 
 SET MENU OFF 
 REM **************************************
 REM ******* Fenstergrî·e anpassen ********
 REM **************************************
 
 ScrWidth% = FN sys(6)
 ScrHeight% = FN sys(7)
 CapHeight% = CALL ("GetSystemMetrics",51)
 IF EXISTS (_netpath$ + "IMMAK\Anfrage.sbf") AND aabb$ = "xxxyyy" THEN 
   REM CALL WriteINI("SYSTEM","Bildschirmaufloesung", STR$ (800,"000"))
 ELSE 
   REM CALL WriteINI("SYSTEM","Bildschirmaufloesung", STR$ (1024,"0000"))
 END IF 
 REM wenn kleiner 19 dann kleine Schriftart
 REM CALL Fehler( STR$ (CapHeight%,"9999"),"")
 REM CALL Fehler("Screen","")
 REM CALL Fehler( STR$ (CapHeight%,"9999"),"")
 IF (ScrWidth% < 800 OR ScrHeight% < 600) AND ( UCASE$ (_projekt$) LIKE "FACTURA" OR UCASE$ (_projekt$) LIKE "AKTE" OR UCASE$ (_projekt$) LIKE "PROVIS" OR UCASE$ (_projekt$) LIKE "OFFICE") THEN 
   CALL Fehler("Sie kînnen das Programm nicht unter der Bildschirmauflîsung 640*480 betreiben!","éndern Sie bitte Ihre Bildschirmauflîsung in 800 * 600 (kleine Schrift/Small Fonts)!")
 ELSE 
   SELECT CASE ScrWidth%
   CASE 640
     LargeFont$ = "FALSE"
     IF UCASE$ (_projekt$) LIKE "FACTURA" OR UCASE$ (_projekt$) LIKE "AKTE" OR UCASE$ (_projekt$) LIKE "PROVIS" OR UCASE$ (_projekt$) LIKE "OFFICE" THEN 
       CALL Fehler("Sie kînnen das Programm nicht unter der Bildschirmauflîsung 640*480 betreiben!","éndern Sie bitte Ihre Bildschirmauflîsung in 800 * 600 (kleine Schrift/Small Fonts)!")
       REM CALL EXIT()
     END IF 
   CASE 800
     IF CapHeight% >= 19 THEN LargeFont$ = "TRUE" ELSE LargeFont$ = "FALSE"
     IF LargeFont$ = "TRUE" THEN 
       xxa$ = "Bitte Ñndern Sie die Bildschirmauflîsung auf mindestens 1024*768 Bildpunkte und den Bildschirmfont auf kleine Schriftart(Normal 96 DPI)!"
       CALL Fehler("Sie haben als Bildschirmfont ~Largefonts/Gro·e Schriftart~ bei einer Auflîsung von 800*600 Bildpunkten, dieses Format wird nicht mehr unterstÅtzt!",xxa$)
     END IF 
   CASE 1024
     IF CapHeight% >= 21 THEN 
       LargeFont$ = "TRUE"
       GBildschirm% = 800
       xxa$ = "Bitte Ñndern Sie den Bildschirmfont auf kleine Schriftart(Normal 96 DPI) oder erhîhen Sie die Bildschirmauflîsung!"
       CALL Fehler("Sie haben als Bildschirmfont ~Largefonts/Gro·e Schriftart~ eingestellt, dies fÅhrt zu Problemen, da die Programm-Masken fÅr Auflîsung 1024*768 Kleine Schriftart erstellt wurden!",xxa$)
     ELSE 
       LargeFont$ = "FALSE"
     END IF 
   CASE ELSE 
     GBildschirm% = 1024
     IF CapHeight% >= 21 THEN LargeFont$ = "TRUE" ELSE LargeFont$ = "FALSE"
   END SELECT 
   REM 060499
   REM large1$ = UCASE$ ( LTRIM$ (ReadINI$("SYSTEM","LARGEFONT")))
   IF CapHeight% >= 21 THEN LargeFont$ = "TRUE"
 
   IF UCASE$ (LargeFont$) = "FALSE" THEN 
     WndWidth% = 640
     WndHeight% = 480
     IF UCASE$ (_projekt$) LIKE "FACTURA" OR UCASE$ (_projekt$) LIKE "AKTE" OR UCASE$ (_projekt$) LIKE "PROVIS" OR UCASE$ (_projekt$) LIKE "OFFICE" OR UCASE$ (_projekt$) LIKE "IMMAK" OR UCASE$ (_projekt$) LIKE "MEDIA" THEN 
       REM 10052002
       IF ScrWidth% = 1024 THEN 
         WndWidth% = 1024
         WndHeight% = 768
        _t1% = FN sys(6) - 1024
        _t2% = FN sys(7) - 768
       ELSE 
         IF ScrWidth% >= 800 AND ScrWidth% < 1024 THEN 
           CALL Fehler("Auf Ihrem Rechner ist eine Bildschirmauflîsung < 1024 *768 eingestellt!","Bitte Ñndern Sie Ihre Bildschirmauflîsung auf 1024*768!")
           WndWidth% = 800
           WndHeight% = 600
           _t1% = FN sys(6) - 800
           _t2% = FN sys(7) - 600

           REM CALL WriteINI("SYSTEM","Bildschirmaufloesung", STR$ (800,"000"))
           REM GBildschirm% = 800
         ELSE 
           WndWidth% = ScrWidth%
           WndHeight% = ScrHeight%
          _t1% = FN sys(6)
          _t2% = FN sys(7)
          _t1% = FN sys(6) - 1024
          _t2% = FN sys(7) - 768
         END IF 
       END IF 
     END IF 
   ELSE 
     IF ScrWidth% = 1024 THEN 
       WndWidth% = 1024
       WndHeight% = 768
       _t1% = FN sys(6) - 1024
       _t2% = FN sys(7) - 768
     END IF 
     IF ScrWidth% = 1152 THEN 
       WndWidth% = 1000
       WndHeight% = 700
       _t1% = FN sys(6) - 1000
       _t2% = FN sys(7) - 700
     END IF 
     IF ScrWidth% = 1280 THEN 
       WndWidth% = 1040
       WndHeight% = 700
       _t1% = FN sys(6) - 1040
       _t2% = FN sys(7) - 700
     END IF 
     IF ScrWidth% = 1400 THEN 
       WndWidth% = 1400
       WndHeight% = 1050
       _t1% = FN sys(6) - 1040
       _t2% = FN sys(7) - 700
     END IF 
   END IF 
 IF WndWidth% > 1200 THEN 
   _wpx% = ( FN sys(6) - WndWidth%) / 2
   _wpy% = ( FN sys(7) - WndHeight%) / 2
 ELSE 
   IF UCASE$ (LargeFont$) = "FALSE" THEN 
     _wpx% = _t1% / 2
     _wpy% = _t2% / 2
   ELSE 
     _wpx% = _t1% / 4
     _wpy% = _t2% / 4
   END IF 
 END IF 
 REM 10052002
 REM SET POSITION _wpx%,_wpy%,WndWidth%,WndHeight%
 REM SET POSITION 
 END IF 
 DisplaySet% = 0
 REM CALL Fehler( STR$ (CapHeight%,"9999"),"")
 REM ***************************************************
 REM IF UCASE$ (_projekt$) LIKE "FACTURA1" THEN 
 IF (ScrWidth% < 1024 OR ScrHeight% < 768) AND ( UCASE$ (_projekt$) LIKE "MEDIA") THEN 
   SET POSITION 0,0,ScrWidth%,ScrHeight%
   SET POSITION 
   SET DISPLAY 3
 END IF 
 REM CALL Fehler("","")
 REM IF EXISTS (_netpath$ + "IMMAK\Anfrage.sbf") THEN 
 REM IF GAFSK$ LIKE "TRUE" OR GLundWrigg$ LIKE "TRUE" OR GBildschirm% = 800 OR GBENE% = - 1 OR GFAELLIG% = - 1 OR EXISTS (_netpath$ + "IMMAK\Anfrage.sbf") THEN 
 IF EXISTS (_netpath$ + "IMMAK\Anfrage.sbf") AND aabb$ = "xxxyyy" THEN 
   REM CALL WriteINI("SYSTEM","Bildschirmaufloesung", STR$ (800,"000"))
   GBildschirm% = 800
   _t1% = FN sys(6) - 800
   _t2% = FN sys(7) - 600
   IF UCASE$ (LargeFont$) = "FALSE" THEN 
     _wpx% = _t1% / 2
     _wpy% = _t2% / 2
   ELSE 
     _wpx% = _t1% / 4
     _wpy% = _t2% / 4
   END IF 
   REM SET POSITION _wpx%,_wpy%,WndWidth%,WndHeight%
   REM IF GAFSK$ LIKE "TRUE" OR GLundWrigg$ LIKE "TRUE" OR GBENE% = - 1 OR GFAELLIG% = - 1 OR GBildschirm% = 800 OR EXISTS (_netpath$ + "IMMAK\Anfrage.sbf") THEN 
   IF EXISTS (_netpath$ + "IMMAK\Anfrage.sbf") THEN 
     REM CALL WriteINI("SYSTEM","Bildschirmaufloesung", STR$ (800,"000"))
     GBildschirm% = 800
     IF ScrWidth% = 1024 AND LargeFont$ LIKE "TRUE" THEN 
       SET POSITION 0,0,ScrWidth%,ScrHeight%
     ELSE 
       IF ScrWidth% = 1152 AND LargeFont$ LIKE "TRUE" THEN 
         SET POSITION _wpx%,_wpy%,1000,700
       ELSE 
         SET POSITION _wpx%,_wpy%,800,600
       END IF 
     END IF 
   ELSE 
     SET POSITION _wpx%,_wpy%,ScrWidth%,ScrHeight%
   END IF 
   SET POSITION 
   SET DISPLAY 0
   GScrWidth$ = LTRIM$ ( STR$ (800,"9999")) + ".SBV" + "\"
   GPrjForm$ = _ppath$ + GScrWidth$
   GOFFForm$ = _netpath$ + "OFFICE\" + GScrWidth$
 ELSE 
   IF ScrWidth% >= 1024 OR GBildschirm% = 1024 THEN 
     GScrWidth$ = LTRIM$ ( STR$ (1024,"9999")) + ".SBV" + "\"
     REM CALL WriteINI("SYSTEM","Bildschirmaufloesung", STR$ (1024,"0000"))
     GBildschirm% = 1024
   ELSE 
     IF EXISTS (_netpath$ + "IMMAK\Anfrage.sbf") AND aabb$ = "xxxyyy" THEN 
       GScrWidth$ = LTRIM$ ( STR$ (800,"9999")) + ".SBV" + "\"
       REM CALL WriteINI("SYSTEM","Bildschirmaufloesung", STR$ (800,"000"))
       GBildschirm% = 800
     ELSE 
       GScrWidth$ = LTRIM$ ( STR$ (1024,"9999")) + ".SBV" + "\"
       REM CALL WriteINI("SYSTEM","Bildschirmaufloesung", STR$ (1024,"0000"))
       GBildschirm% = 1024
     END IF 
   END IF 

   GPrjForm$ = _ppath$ + GScrWidth$
   GOFFForm$ = _netpath$ + "OFFICE\" + GScrWidth$
   IF (ScrWidth% < 800 OR ScrHeight% < 600) AND ( UCASE$ (_projekt$) LIKE "FACTURA" OR UCASE$ (_projekt$) LIKE "AKTE" OR UCASE$ (_projekt$) LIKE "PROVIS" OR UCASE$ (_projekt$) LIKE "OFFICE" OR UCASE$ (_projekt$) LIKE "IMMAK") THEN 
     SET POSITION 0,0,ScrWidth%,ScrHeight%
     SET POSITION 
     SET DISPLAY 3
   ELSE 
     IF ScrWidth% > 800 AND ScrHeight% > 600 THEN 
       IF Largefont$ = "TRUE" THEN 
         IF ScrWidth% = 1152 THEN 
           SET POSITION 0,0,ScrWidth%,ScrHeight%
           REM SET POSITION _t1% / 8,_t2% / 8,ScrWidth%,ScrHeight%
           SET POSITION 
           SET DISPLAY 3
         END IF 
         IF ScrWidth% = 1280 THEN 
           SET POSITION 0,0,ScrWidth%,ScrHeight%
           REM SET POSITION _t1% / 8,_t2% / 8,ScrWidth%,ScrHeight%
           SET POSITION 
           SET DISPLAY 0
         END IF 
         IF ScrWidth% = 1400 THEN 
           REM SET POSITION 0,0,ScrWidth%,ScrHeight%
           SET POSITION _t1% / 8,_t2% / 8,1300,960
           SET POSITION 
           SET DISPLAY 0
         END IF 
         IF ScrWidth% = 1024 THEN 
           REM 10052002
           SET POSITION 0,0,1024,768
           SET POSITION 
           SET DISPLAY 3
         END IF 
         REM SET DISPLAY 0
       ELSE 
       
         REM SET POSITION _wpx%,_wpy%,WndWidth%,WndHeight%
         IF ScrWidth% = 1152 THEN 
           SET POSITION _t1% / 2,_t2% / 2,1024,768
           REM SET POSITION 100,50,1024,768
           REM SET POSITION _wpx%,_wpy%,ScrWidth%,ScrHeight%
           REM SET POSITION _wpx%,_wpy%,800,600
           SET POSITION 
           SET DISPLAY 0
         ELSE 
           IF ScrWidth% = 1200 THEN 
             SET POSITION _t1% / 2,_t2% / 2,1024,768
             REM SET POSITION _wpx%,_wpy%,1024,768
             REM SET POSITION _wpx%,_wpy%,ScrWidth%,ScrHeight%
             REM SET POSITION _wpx%,_wpy%,800,600
             SET POSITION 
             SET DISPLAY 0
           ELSE 
             SET POSITION _t1% / 2,_t2% / 2,1024,738
             SET POSITION 
             SET DISPLAY 0
           END IF 
           REM SET DISPLAY MAX 
         END IF 
       
         REM 071098 Superbase.ShowLongFileNames = - 1
       END IF 
     ELSE 
       IF ScrWidth% = 800 AND ScrHeight% = 600 THEN 
         SET POSITION 0,0,800,600
         SET POSITION 
         SET DISPLAY 3
       ELSE 
         CALL Fehler("Bildschirmauflîsung ist nicht richtig eingestellt (Ihre Parameter Breite=" + STR$ (Scrwidth%,"9999") + ",Hîhe=" + STR$ (ScrHeight%,"9999"),"Korrekte Parameter wÑren: Breite>=800,Hîhe>=600)!")
         SET DISPLAY 3
       END IF 
     END IF 
   END IF 
 END IF 

 ddeadr% = 0
  
 REM -- globale CursorKonstanten --
 
 GLOBAL CrsLeft%,CrsRight%,PgUp%,PgDn%
 CrsLeft% = 177
 CrsRight% = 178
 PgUp% = 181
 PgDn% = 182
 
 NUMDELIM ",."
 END SUB 
 
 
 ' Gauge
 ' ===================================================================
 ' Zweck:       Prozentbalkengenerierung
 ' Nutzung:     Call Gauge(Prozent%,message$)
 '              Prozent%        = Breite des Balken
 ' ===================================================================
  
SUB Gauge(Level%,GaugeMessage$)
 Level% = INT (Level%)
 IF Level% < 0 THEN Level% = 0
 IF Level% > 100 THEN Level% = 100
 SELECT CASE Level%
 CASE 1
   CALL Server("GaugeInit","")
   CALL Server("GaugeMessage",GaugeMessage$)
   CALL Server("Gauge","0")
   CALL Server("GaugeShow","")
 CASE 0
   CALL Server("GaugeRelease","")
 CASE ELSE 
   CALL Server("Gauge", STR$ (Level%,"999"))
   IF GaugeMessage$ <> "" THEN 
     CALL Server("GaugeMessage",GaugeMessage$)
   END IF 
 END SELECT 
 END SUB 
 
 
 ' Hilfe
 ' ============================================================
 ' Zweck:   zeigt Inhaltsverzeichnis der aktuellen Hilfedatei
 ' Nutzung: Call Hilfe()
 ' ============================================================
 
SUB Hilfe1()
 GAppName$ = _netpath$ + "DOC\" + _projekt$ + ".PDF"
 CALL Hilfe()
 END SUB 

SUB Hilfe()
 REM HELP 
 ON ERROR GOTO HilfeErr
 a% = CALL ("ShellExecute",0,"open",GAppName$,"","",1)
 IF a% = 33 THEN GOTO HilfeEnd
HilfeErr: 
 ON ERROR GOTO HilfeErr1
 GAppName$ = _netpath$ + "DOC\provis.pdf"
 a% = CALL ("ShellExecute",0,"open",GAppName$,"","",1)
 GOTO HilfeEnd
HilfeErr1: 
 CALL Fehler ("Um den Hilfetext zu installieren, mÅssen Sie den AcrobatReader der Installations CD installieren!,"")
HilfeEnd: 
 ON ERROR GOTO ErrorHandler
 END SUB 
 
 
SUB HilfeSpez(datei$)
 ON ERROR GOTO HilfeErr
 datei1$ = _netpath$ + "DOC\" + datei$
 a% = CALL ("ShellExecute",0,"open",datei1$,"","",1)
 IF a% = 33 THEN GOTO HilfeEnd
HilfeErr: 
 ON ERROR GOTO HilfeErr1
 GAppName$ = _netpath$ + "DOC\provis.pdf"
 a% = CALL ("ShellExecute",0,"open",GAppName$,"","",1)
 GOTO HilfeEnd
HilfeErr1: 
 CALL Fehler ("Um den Hilfetext zu installieren, mÅssen Sie den AcrobatReader der Installations CD installieren!,"")
HilfeEnd: 
 ON ERROR GOTO ErrorHandler 
 END SUB 


 ' DFile
 ' ============================================================
 ' Zweck:   îffnet eine SBF-Datei des Projektes
 ' Nutzung: Call DFile(filetype%,datei$)
 '          filetype%   = Dateityp
 '                        1: Systemdatei (Workstation)
 '                        2: Systemdatei (Server)
 '                        3: Projektdatei (Server)
 '                        4: Systemdatei exklusiv (Server)
 '          datei$      = Dateiname
 ' ============================================================
 ' 11.07.93    - Test auf TimeStamp und evtl. ErgÑnzung
 ' 10.10.94    - Autokorrektur von SERNUM
 ' 19.10.94    - 
SUB DFile(filetype%,datei$)
 MOUSE OFF 
 REM CALL Fehler(datei$,"")
 cfile$ = FILE 
 REM CALL Fehler("Dateien îffnen","")
 IF INSTR (datei$,";") > 0 THEN 
   testname$ = UCASE$ ( FN name( LEFT$ (datei$, INSTR (datei$,";") - 1)))
 ELSE 
   testname$ = UCASE$ ( FN name(datei$))
 END IF 
 IF filetype% = 4 OR filetype% = 31 OR filetype% = 222 THEN 
   IF OPEN (testname$) THEN CLOSE FILE testname$
 END IF 
 
 IF OPEN (testname$) THEN 
   GOTO dfileend06112002
 END IF 



 IF NOT OPEN ("OPENFILE") AND blockab% = 99 THEN 
   DIM d$(1000)
   FILLARRAY d$,9,"CODIE:?*"
   FOR i%% = 0 TO 1000
      IF d$(i%%) <> "" THEN 
        OPEN FILE SHARE ,0"CODIE:" + d$(i%%)
        SET STATUS "îffne Datei: " + d$(i%%) + " " + STR$ (i%%,"999999")
      ELSE 
        i%% = 1001
      END IF 
   NEXT i%%
 END IF 
 notopen% = 0
 IF NOT OPEN (testname$) THEN 
   notopen% = - 1
   SET STATUS "Datei " + UCASE$ (testname$) + " îffnen..."
   REM ostart% = NOW 
   REM CALL Fehler("","")
   ppop$ = ""
   IF GPPCS$ <> "TRUE" THEN 
     SELECT CASE filetype%
     CASE 1
       IF EXISTS (_localpath$ + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr01
         REM DELETE _localpath$ + testname$ + ".sb!"
cerr01: 
         ON ERROR GOTO ErrorHandler
       END IF 
       ON ERROR GOTO cerr01a
       OPEN FILE SHARE ,0_localpath$ + datei$
       path$ = _localpath$
       GOTO cerr01b
cerr01a: 
       _error% = ERRNO 
       ft$ = "Rechnername: " + LTRIM$ ( TRIM$ ( ERR$ (0))) + " Anzahl der ArbeitsplÑtze:" + LTRIM$ ( STR$ ( FN SYS(5),"99")) + "/ Sie sind der " + LTRIM$ ( STR$ ( FN SYS(17) + 1,"99")) + "." + " Nutzer"
       t0$ = " Eventuell kînnen Sie auch folgendes versuchen: Alle Mitarbeiter verlassen das Programm und Sie starten anschlie·end aus der Programm-Gruppe >>CODie-Anwendungen<< das Programm >>Netzverwaltungsdateien lîschen<<!"
       msg$ = "oder die Datei ist defekt und lÑ·t sich deshalb nicht îffnen! Bitte nehmen Sie Verbindung mit diesem Mitarbeiter auf und klÑren Sie, ab wann Sie wieder auf das Programm zugreifen kînnen. " + t0$
       CALL Fehler("Es ist ein Mitarbeiter im Programm angemeldet (" + ft$ + "), der einen EXCLUSIV-Zugriff auf die geîffnete Datei " + testname$ + " besitzt, wie z.B. bei der Provisionsabrechnung oder beim Update-Lauf ",msg$)
       CALL EXIT()
cerr01b: 
       ON ERROR GOTO ErrorHandler 
     CASE 2
       REM CALL Fehler(testname$,"")
       IF EXISTS (_netpath$ + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr02
         REM DELETE _netpath$ + testname$ + ".sb!"
cerr02: 
         ON ERROR GOTO ErrorHandler
       END IF 
       ON ERROR GOTO cerr02a
       IF testname$ LIKE "ADRTEMP" THEN 
         IF EXISTS (GMACodeDir$ + "ADRTEMP.SBF") THEN 
           DELETE GMACodeDir$ + "ADRTEMP.*"
         END IF 
         COPY _netpath$ + "OFFICE\ADRTEMP.*" TO GMACodeDir$
         IF EXISTS (GMACodeDir$ + "ADRTEMP.SB!") THEN 
           DELETE GMACodeDir$ + "ADRTEMP.SB!"
         END IF 
         OPEN FILE GMACodeDir$ + "ADRTEMP;paris"
         GOTO dfileend06112002
       ELSE 
         IF testname$ LIKE "ADRTEMP1" THEN 
           IF EXISTS (GMACodeDir$ + "ADRTEMP1.SBF") THEN 
             DELETE GMACodeDir$ + "ADRTEMP1.*"
           END IF 
           COPY _netpath$ + "OFFICE\ADRTEMP1.*" TO GMACodeDir$
           IF EXISTS (GMACodeDir$ + "ADRTEMP1.SB!") THEN 
             DELETE GMACodeDir$ + "ADRTEMP1.SB!"
           END IF 
           OPEN FILE SHARE ,0GMACodeDir$ + "ADRTEMP1;paris"
           GOTO dfileend06112002
         ELSE 
           IF testname$ LIKE "AKQTMP" THEN 
             IF EXISTS (GMACodeDir$ + "AKQTMP.SBF") THEN 
               DELETE GMACodeDir$ + "AKQTMP.*"
             END IF 
             COPY _netpath$ + "OFFICE\AKQTMP.*" TO GMACodeDir$
             IF EXISTS (GMACodeDir$ + "AKQTMP.SB!") THEN 
               DELETE GMACodeDir$ + "AKQTMP.SB!"
             END IF 
             OPEN FILE SHARE ,0GMACodeDir$ + "AKQTMP;paris"
             GOTO dfileend06112002
           ELSE 
             IF testname$ LIKE "ONLBERAT" THEN 
               IF EXISTS (GMACodeDir$ + "ONLBERAT.SBF") THEN 
                 DELETE GMACodeDir$ + "ONLBERAT.*"
               END IF 
               COPY _netpath$ + "OFFICE\ONLBERAT.*" TO GMACodeDir$
               IF EXISTS (GMACodeDir$ + "ONLBERAT.SB!") THEN 
                 DELETE GMACodeDir$ + "ONLBERAT.SB!"
               END IF 
               OPEN FILE SHARE ,0GMACodeDir$ + "ONLBERAT;paris"
               GOTO dfileend06112002
             ELSE 
               IF testname$ LIKE "GESINFO" THEN 
                 IF EXISTS (GMACodeDir$ + "GESINFO.SBF") THEN 
                   DELETE GMACodeDir$ + "GESINFO.*"
                 END IF 
                 COPY _netpath$ + "OFFICE\GESINFO.*" TO GMACodeDir$
                 IF EXISTS (GMACodeDir$ + "GESINFO.SB!") THEN 
                   DELETE GMACodeDir$ + "GESINFO.SB!"
                 END IF 
                 OPEN FILE SHARE ,0GMACodeDir$ + "GESINFO;paris"
                 GOTO dfileend06112002 
               ELSE 
                 OPEN FILE SHARE ,0_netpath$ + datei$
               END IF 
             END IF 
           END IF 
         END IF 
       END IF 
       GOTO cerr02b
cerr02a:        
       spos% = INSTR (datei$,";")
       testname$ = LEFT$ (datei$,spos% - 1)
       IF EXISTS (_netpath$ + testname$ + ".sbf") THEN 
         ft$ = "Rechnername: " + LTRIM$ ( TRIM$ ( ERR$ (0))) + " Anzahl der ArbeitsplÑtze:" + LTRIM$ ( STR$ ( FN SYS(5),"99")) + "/ Sie sind der " + LTRIM$ ( STR$ ( FN SYS(17) + 1,"99")) + "." + " Nutzer"
         t0$ = " Eventuell kînnen Sie auch folgendes versuchen: Alle Mitarbeiter verlassen das Programm und Sie starten anschlie·end aus der Programm-Gruppe >>CODie-Anwendungen<< das Programm >>Netzverwaltungsdateien lîschen<<!"
         msg$ = "oder die Datei ist defekt und lÑ·t sich deshalb nicht îffnen! Bitte nehmen Sie Verbindung mit diesem Mitarbeiter auf und klÑren Sie, ab wann Sie wieder auf das Programm zugreifen kînnen." + t0$
         CALL Fehler("Es ist ein Mitarbeiter im Programm angemeldet (" + ft$ + "), der einen EXCLUSIV-Zugriff auf die geîffnete Datei " + testname$ + " besitzt, wie z.B. bei der Provisionsabrechnung oder beim Update-Lauf ",msg$)
         CALL EXIT()
       ELSE 
         CALL Fehler("Die Datei: " + _netpath$ + testname$ + ".sbf  wurde nicht gefunden und kann deshalb nicht geîffnet werden!","")
         CALL EXIT()
       END IF 
cerr02b: 
       ON ERROR GOTO ErrorHandler
       path$ = _netpath$
     CASE 3
       REM **alte Version** OPEN FILE SHARE ,0_ppath$ + datei$
       ON ERROR GOTO ErrorHandler
       IF testname$ LIKE "KVTMP" THEN 
         IF EXISTS (GMACodeDir$ + "KVTMP.SBF") THEN 
           DELETE GMACodeDir$ + "KVTMP.*"
         END IF 
         COPY _netpath$ + "PROVIS\KVTMP.*" TO GMACodeDir$
         IF EXISTS (GMACodeDir$ + "KVTMP.SB!") THEN 
           DELETE GMACodeDir$ + "KVTMP.SB!"
         END IF 
         OPEN FILE GMACodeDir$ + "KVTMP;paris"
         GOTO dfileend06112002
       ELSE 
         IF EXISTS (_netpath$ + _projekt$ + "\" + testname$ + ".sb!") THEN 
           ON ERROR GOTO cerr03
           REM DELETE _netpath$ + _projekt$ + "\" + testname$ + ".sb!"
cerr03: 
           ON ERROR GOTO ErrorHandler
         END IF 
         ON ERROR GOTO cerr03a
         OPEN FILE SHARE ,0_netpath$ + _projekt$ + "\" + datei$
         GOTO cerr03b
       END IF 
cerr03a: 
       spos% = INSTR (datei$,";")
       testname$ = LEFT$ (datei$,spos% - 1)
       IF EXISTS (_netpath$ + _projekt$ + "\" + testname$ + ".sbf") THEN 
         ft$ = "Rechnername: " + LTRIM$ ( TRIM$ ( ERR$ (0))) + " Anzahl der ArbeitsplÑtze:" + LTRIM$ ( STR$ ( FN SYS(5),"99")) + "/ Sie sind der " + LTRIM$ ( STR$ ( FN SYS(17) + 1,"99")) + "." + " Nutzer"
         t0$ = " Eventuell kînnen Sie auch folgendes versuchen: Alle Mitarbeiter verlassen das Programm und Sie starten anschlie·end aus der Programm-Gruppe >>CODie-Anwendungen<< das Programm >>Netzverwaltungsdateien lîschen<<!"
         msg$ = "oder die Datei ist defekt und lÑ·t sich deshalb nicht îffnen! Bitte nehmen Sie Verbindung mit diesem Mitarbeiter auf und klÑren Sie, ab wann Sie wieder auf das Programm zugreifen kînnen. " + t0$
         CALL Fehler("Es ist ein Mitarbeiter im Programm angemeldet (" + ft$ + "), der einen EXCLUSIV-Zugriff auf die geîffnete Datei " + testname$ + " besitzt, wie z.B. bei der Provisionsabrechnung oder beim Update-Lauf ",msg$)
         CALL EXIT()
       ELSE 
         CALL Fehler("Die Datei: " + _netpath$ + _projekt$ + "\" + testname$ + ".sbf  wurde nicht gefunden und kann deshalb nicht geîffnet werden!","")
         CALL EXIT()
       END IF 
cerr03b: 
       ON ERROR GOTO ErrorHandler
       path$ = _netpath$ + _projekt$ + "\"
     CASE 4
       IF EXISTS (_netpath$ + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr04
         REM DELETE _netpath$ + testname$ + ".sb!"
cerr04: 
         ON ERROR GOTO ErrorHandler
       END IF 
       ON ERROR GOTO cerr04a
       OPEN FILE SHARE ,2_netpath$ + datei$
       GOTO cerr04b
cerr04a: 
       _error% = ERRNO 
       spos% = INSTR (datei$,";")
       testname$ = LEFT$ (datei$,spos% - 1)
       IF EXISTS (_netpath$ + testname$ + ".sbf") THEN 
         ft$ = "Rechnername: " + LTRIM$ ( TRIM$ ( ERR$ (0))) + " Anzahl der ArbeitsplÑtze:" + LTRIM$ ( STR$ ( FN SYS(5),"99")) + "/ Sie sind der " + LTRIM$ ( STR$ ( FN SYS(17) + 1,"99")) + "." + " Nutzer"
         msg$ = "oder die Datei ist defekt und lÑ·t sich deshalb nicht îffnen! Bitte nehmen Sie Verbindung mit diesem Mitarbeiter auf und klÑren Sie, ab wann Sie wieder auf das Programm zugreifen kînnen."
         CALL Fehler("Es ist ein Mitarbeiter im Programm angemeldet (" + ft$ + "), der einen EXCLUSIV-Zugriff auf die geîffnete Datei " + testname$ + " besitzt, wie z.B. bei der Provisionsabrechnung oder beim Update-Lauf ",msg$) CALL EXIT()
       ELSE 
         CALL Fehler("Die Datei: " + _netpath$ + testname$ + ".sbf  wurde nicht gefunden und kann deshalb nicht geîffnet werden!","")
         CALL EXIT()
       END IF 
cerr04b: 
       ON ERROR GOTO ErrorHandler
       path$ = _netpath$
     CASE 5
       IF EXISTS (_netpath$ + "EXPORT\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr05
         REM DELETE _netpath$ + "EXPORT\" + testname$ + ".sb!"
cerr05: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,2_netpath$ + "EXPORT\" + datei$
       path$ = _netpath$ + "EXPORT\"
     CASE 6
       IF EXISTS (_netpath$ + "EXPORT\OFFICE\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr06
         REM DELETE _netpath$ + "EXPORT\OFFICE\" + testname$ + ".sb!"
cerr06: 
         ON ERROR GOTO ErrorHandler
       END IF 
       
       OPEN FILE SHARE ,2_netpath$ + "EXPORT\OFFICE\" + datei$
       path$ = _netpath$ + "EXPORT\OFFICE\"
     CASE 7
       IF EXISTS (_netpath$ + "EXPORT\PROVIS\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr07
         REM DELETE _netpath$ + "EXPORT\PROVIS\" + testname$ + ".sb!"
cerr07: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,2_netpath$ + "EXPORT\PROVIS\" + datei$
       path$ = _netpath$ + "EXPORT\PROVIS\"
     CASE 8
       IF EXISTS (_netpath$ + "GDV\GDV_DAT\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr08
         REM DELETE _netpath$ + "GDV\GDV_DAT\" + testname$ + ".sb!"
cerr08: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,0_netpath$ + "GDV\GDV_DAT\" + datei$
       path$ = _netpath$ + "GDV\GDV_DAT\"
     CASE 9
       IF EXISTS (_netpath$ + "Templeto\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr09
         REM DELETE _netpath$ + "Templeto\" + testname$ + ".sb!"
cerr09: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,0_netpath$ + "Templeto\" + datei$
       path$ = _netpath$ + "Templeto\"
     CASE 20
       REM bei PPCS - Betrieb per PPCS zu îffnen 
       OPEN FILE SHARE ,0_netpath$ + datei$
     CASE 22
       OPEN FILE SHARE ,0_netpath$ + "config;london8474"
     CASE 23
       ON ERROR GOTO openconfig1
       OPEN FILE SHARE ,0_netpath$ + "local\" + "config1;london8474"
openconfig1: 
       ON ERROR GOTO ErrorHandler
     CASE 30
       REM bei PPCS - Betrieb per PPCS zu îffnen
       OPEN FILE SHARE ,0_netpath$ + _projekt$ + "\" + datei$
     CASE 31
       ON ERROR GOTO cerr31a
       OPEN FILE SHARE ,2_netpath$ + _projekt$ + "\" + datei$
       GOTO cerr31b
cerr31a: 
       ft$ = "Rechnername: " + LTRIM$ ( TRIM$ ( ERR$ (0))) + " Anzahl der ArbeitsplÑtze:" + LTRIM$ ( STR$ ( FN SYS(5),"99")) + "/ Sie sind der " + LTRIM$ ( STR$ ( FN SYS(17) + 1,"99")) + "." + " Nutzer"
       t0$ = " Eventuell kînnen Sie auch folgendes versuchen: Alle Mitarbeiter verlassen das Programm und Sie starten anschlie·end aus der Programm-Gruppe >>CODie-Anwendungen<< das Programm >>Netzverwaltungsdateien lîschen<<!"
       msg$ = "oder die Datei ist defekt und lÑ·t sich deshalb nicht îffnen! Bitte nehmen Sie Verbindung mit diesem Mitarbeiter auf und klÑren Sie, ab wann Sie wieder auf das Programm zugreifen kînnen. " + t0$
       CALL Fehler("Es ist ein Mitarbeiter im Programm angemeldet (" + ft$ + "), S5e ben+t5gen aber einen EXCLUSIV-Zugriff auf die geîffnete Datei " + testname$ + "  ",msg$) CALL EXIT()
       CALL EXIT()
cerr31b: 
       ON ERROR GOTO ErrorHandler
       path$ = _netpath$ + _projekt$ + "\"
     CASE 222
       ON ERROR GOTO cerr222a
       OPEN FILE SHARE ,2_netpath$ + "config;london8474"
       GOTO cerr222b
cerr222a: 
        ft$ = "Rechnername: " + LTRIM$ ( TRIM$ ( ERR$ (0))) + " Anzahl der ArbeitsplÑtze:" + LTRIM$ ( STR$ ( FN SYS(5),"99")) + "/ Sie sind der " + LTRIM$ ( STR$ ( FN SYS(17) + 1,"99")) + "." + " Nutzer"
        t0$ = " Eventuell kînnen Sie auch folgendes versuchen: Alle Mitarbeiter verlassen das Programm und Sie starten anschlie·end aus der Programm-Gruppe >>CODie-Anwendungen<< das Programm >>Netzverwaltungsdateien lîschen<<!"
        msg$ = "oder die Datei ist defekt und lÑ·t sich deshalb nicht îffnen! Bitte nehmen Sie Verbindung mit diesem Mitarbeiter auf und klÑren Sie, ab wann Sie wieder auf das Programm zugreifen kînnen. " + t0$
       CALL Fehler("Es ist ein Mitarbeiter im Programm angemeldet (" + ft$ + "), S5e ben+t5gen aber einen EXCLUSIV-Zugriff auf die geîffnete Datei " + testname$ + "  ",msg$) CALL EXIT()
       CALL EXIT()
cerr222b: 
       ON ERROR GOTO ErrorHandler
     END SELECT 
   ELSE 
     SELECT CASE filetype%
     CASE 1
       IF EXISTS (_localpath$ + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr011
         DELETE _localpath$ + testname$ + ".sb!"
cerr011: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,0_localpath$ + datei$
       path$ = _localpath$
     CASE 2
       IF EXISTS (_netpath$ + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr021
         DELETE _netpath$ + testname$ + ".sb!"
cerr021: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,0_netpath$ + datei$
       
       path$ = _netpath$
     CASE 3
       REM **alte Version** OPEN FILE SHARE ,0_ppath$ + datei$
       IF EXISTS (_netpath$ + _projekt$ + "\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr031
         DELETE _netpath$ + _projekt$ + "\" + testname$ + ".sb!"
cerr031: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,0_netpath$ + _projekt$ + "\" + datei$
       path$ = _netpath$ + _projekt$ + "\"
     CASE 4
       IF EXISTS (_netpath$ + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr041
         DELETE _netpath$ + testname$ + ".sb!"
cerr041: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,2_netpath$ + datei$
       path$ = _netpath$
     CASE 5
       IF EXISTS (_netpath$ + "EXPORT\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr051
         DELETE _netpath$ + "EXPORT\" + testname$ + ".sb!"
cerr051: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,2_netpath$ + "EXPORT\" + datei$
       path$ = _netpath$ + "EXPORT\"
     CASE 6
       IF EXISTS (_netpath$ + "EXPORT\OFFICE\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr061
         DELETE _netpath$ + "EXPORT\OFFICE\" + testname$ + ".sb!"
cerr061: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,2_netpath$ + "EXPORT\OFFICE\" + datei$
       path$ = _netpath$ + "EXPORT\OFFICE\"
     CASE 7
       IF EXISTS (_netpath$ + "EXPORT\PROVIS\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr071
         DELETE _netpath$ + "EXPORT\PROVIS\" + testname$ + ".sb!"
cerr071: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,2_netpath$ + "EXPORT\PROVIS\" + datei$
       path$ = _netpath$ + "EXPORT\PROVIS\"
     CASE 8
       IF EXISTS (_netpath$ + "GDV\GDV_DAT\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr081
         DELETE _netpath$ + "GDV\GDV_DAT\" + testname$ + ".sb!"
cerr081: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,0_netpath$ + "GDV\GDV_DAT\" + datei$
       path$ = _netpath$ + "GDV\GDV_DAT\"
     CASE 9
       IF EXISTS (_netpath$ + "Templeto\" + testname$ + ".sb!") THEN 
         ON ERROR GOTO cerr091
         DELETE _netpath$ + "Templeto\" + testname$ + ".sb!"
cerr091: 
         ON ERROR GOTO ErrorHandler
       END IF 
       OPEN FILE SHARE ,0_netpath$ + "Templeto\" + datei$
       path$ = _netpath$ + "Templeto\"
     CASE 20
       REM bei PPCS - Betrieb per PPCS zu îffnen
       ppop$ = "    CODIE:" + testname$
       SET STATUS "Datei " + UCASE$ (testname$) + " îffnen..." + ppop$
       OPEN FILE SHARE ,0"CODIE:" + testname$
       
     CASE 30
       REM bei PPCS - Betrieb per PPCS zu îffnen
       ppop$ = "    CODIE:" + testname$
       SET STATUS "Datei " + UCASE$ (testname$) + " îffnen..." + ppop$
       OPEN FILE SHARE ,0"CODIE:" + testname$
       
       
     END SELECT 
   END IF 
   REM oend% = NOW 
   REM ------ TimeStamp prÅfen/erzeugen ----------
   IF GPPCS$ = "TRUE" THEN GOTO openadtemp231100
   tsfound% = 0


   ON ERROR GOTO ErrCr01251120031
   IF testname$ LIKE "BCKONTAK" OR testname$ LIKE "ADRE1" THEN 
     CREATE INDEX ON codema.testname$
   END IF 
ErrCr01251120031: 
   ON ERROR GOTO ErrCr01
   IF testname$ LIKE "CONFI*" OR testname$ LIKE "KVEXEXP" OR testname$ LIKE "SAP*" THEN 
   ELSE 
     CREATE INDEX ON Workstation.testname$
   END IF 
ErrCr01: 
   ON ERROR GOTO ErrDFile1
   a$ = FIELDINFO$ ("TimeStamp",0)
   tsfound% = 1
ErrDFile1: 
   IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   IF tsfound% = 0 AND testname$ <> "DTAUS" AND testname$ <> "ZBERICHT" AND testname$ <> "EINSIMPO" AND testname$ <> "ADRTEMP" AND testname$ <> "ADRTEMP1" THEN 
     IF testname$ LIKE "000*" OR testname$ LIKE "SAP*" OR testname$ LIKE "BUCHAUSZ" OR testname$ LIKE "BANGIMP1" THEN 
     ELSE 
       IF testname$ <> "OPENFILE" AND testname$ <> "IMPOADR" AND testname$ <> "KVEXEXP" AND testname$ <> "AFSKIMP" AND testname$ <> "AFSIPSP" AND testname$ <> "GESINFO" THEN 
         ADD "TimeStamp; NUM; 0000000000."
         SAVE FILE FILE 
       END IF 
     END IF 
   END IF 
   REM ------ Sperre prÅfen/erzeugen ---------
   tsfound% = 0
   ON ERROR GOTO ErrDFile2
   a$ = FIELDINFO$ ("Sperre",0)
   tsfound% = 1
ErrDFile2: 
   IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   IF tsfound% = 0 AND testname$ <> "DTAUS" AND testname$ <> "ZBERICHT" AND testname$ <> "EINSIMPO" AND testname$ <> "ADRTEMP" AND testname$ <> "ADRTEMP1" THEN 
     IF testname$ LIKE "000*" OR testname$ LIKE "SAP*" OR testname$ LIKE "BUCHAUSZ" OR testname$ LIKE "BANGIMP1" THEN 
     ELSE 
       IF testname$ <> "OPENFILE" AND testname$ <> "IMPOADR" AND testname$ <> "KVEXEXP" AND testname$ <> "AFSKIMP" AND testname$ <> "AFSIPSP" AND testname$ <> "GESINFO" THEN 
         ADD "Sperre; NUM; 000000."
         SAVE FILE FILE 
       END IF 
     END IF 
   END IF 
   REM ------ Workstation prÅfen/erzeugen ---------
   tsfound% = 0
   ON ERROR GOTO ErrDFile3
   a$ = FIELDINFO$ ("Workstation",0)
   tsfound% = 1
ErrDFile3: 
   IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   IF tsfound% = 0 AND testname$ <> "DTAUS" AND testname$ <> "ZBERICHT" AND testname$ <> "EINSIMPO" AND testname$ <> "ADRTEMP" AND testname$ <> "ADRTEMP1" THEN 
     IF testname$ LIKE "000*" OR testname$ LIKE "SAP*" OR testname$ LIKE "BUCHAUSZ" OR testname$ LIKE "BANGIMP1" THEN 
     ELSE 
       IF testname$ <> "OPENFILE" AND testname$ <> "IMPOADR" AND testname$ <> "KVEXEXP" AND testname$ <> "AFSKIMP" AND testname$ <> "AFSIPSP" AND testname$ <> "GESINFO" THEN 
         ADD "Workstation; NUM; 000000."
         SAVE FILE FILE 
       END IF 
     END IF 
   END IF 
   REM ------ QWoNo prÅfen/erzeugen ---------
   tsfound% = 0
   ON ERROR GOTO ErrDFile4
   a$ = FIELDINFO$ ("QWoNo",0)
   tsfound% = 1
ErrDFile4: 
   IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   IF tsfound% = 0 AND testname$ <> "DTAUS" AND testname$ <> "ZBERICHT" AND testname$ <> "EINSIMPO" AND testname$ <> "ADRTEMP" AND testname$ <> "ADRTEMP1" THEN 
     IF testname$ LIKE "000*" OR testname$ LIKE "SAP*" OR testname$ LIKE "BUCHAUSZ" OR testname$ LIKE "BANGIMP1" THEN 
     ELSE 
       IF testname$ <> "OPENFILE" AND testname$ <> "IMPOADR" AND testname$ <> "KVEXEXP" AND testname$ <> "AFSKIMP" AND testname$ <> "AFSIPSP" AND testname$ <> "GESINFO" THEN 
         ADD "QWoNo; TXT; 12"
         SAVE FILE FILE 
       END IF 
     END IF 
   END IF 
   REM ------ RecStatus prÅfen/erzeugen ---------
   tsfound% = 0
   ON ERROR GOTO ErrDFile5
   a$ = FIELDINFO$ ("RecStatus",0)
   tsfound% = 1
ErrDFile5: 
   IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   IF tsfound% = 0 AND testname$ <> "DTAUS" AND testname$ <> "ZBERICHT" AND testname$ <> "ADRTEMP" AND testname$ <> "ADRTEMP1" THEN 
     IF testname$ LIKE "000*" OR testname$ LIKE "SAP*" OR testname$ LIKE "BUCHAUSZ" OR testname$ LIKE "BANGIMP1" THEN 
     ELSE 
       IF testname$ <> "OPENFILE" AND testname$ <> "IMPOADR" AND testname$ <> "KVEXEXP" AND testname$ <> "AFSKIMP" AND testname$ <> "AFSIPSP" AND testname$ <> "GESINFO" THEN 
         ADD "RecStatus; TXT; 1"
         SAVE FILE FILE 
       END IF 
     END IF 
   END IF 
   REM ------ RecStatus prÅfen/erzeugen ---------
   tsfound% = 0
   ON ERROR GOTO ErrDFile6
   a$ = FIELDINFO$ ("MAName",0)
   tsfound% = 1
ErrDFile6: 
   IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   IF tsfound% = 0 AND testname$ <> "DTAUS" AND testname$ <> "ZBERICHT" AND testname$ <> "ADRTEMP" AND testname$ <> "ADRTEMP1" THEN 
     IF testname$ LIKE "000*" OR testname$ LIKE "SAP*" OR testname$ LIKE "BUCHAUSZ" OR testname$ LIKE "BANGIMP1" THEN 
     ELSE 
       IF testname$ <> "OPENFILE" AND testname$ <> "IMPOADR" AND testname$ <> "KVEXEXP" AND testname$ <> "AFSKIMP" AND testname$ <> "AFSIPSP" AND testname$ <> "GESINFO" THEN 
         ADD "MAName; TXT; 50"
         SAVE FILE FILE 
         CREATE INDEX ON MAName
       END IF 
     END IF 
   END IF 
   REM ------ RecStatus prÅfen/erzeugen ---------
   tsfound% = 0
   ON ERROR GOTO ErrDFile7
   a$ = FIELDINFO$ ("MACodeMA",0)
   tsfound% = 1
ErrDFile7: 
   IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   IF tsfound% = 0 AND testname$ <> "DTAUS" AND testname$ <> "ZBERICHT" AND testname$ <> "ADRTEMP" AND testname$ <> "ADRTEMP1" THEN 
     IF testname$ LIKE "000*" OR testname$ LIKE "SAP*" OR testname$ LIKE "BUCHAUSZ" OR testname$ LIKE "BANGIMP1" THEN 
     ELSE 
       IF testname$ <> "OPENFILE" AND testname$ <> "IMPOADR" AND testname$ <> "KVEXEXP" AND testname$ <> "AFSKIMP" AND testname$ <> "AFSIPSP" THEN 
         ADD "MACodeMA; NUM; 000000."
         SAVE FILE FILE 
         CREATE INDEX ON MACodeMA
       END IF 
     END IF 
   END IF 

   REM ------ RecStatus prÅfen/erzeugen ---------
   tsfound% = 0
   ON ERROR GOTO ErrDFile8
   a$ = FIELDINFO$ ("MATimeStamp",0)
   tsfound% = 1
ErrDFile8: 
   IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   IF tsfound% = 0 AND testname$ <> "DTAUS" AND testname$ <> "ZBERICHT" AND testname$ <> "ADRTEMP" AND testname$ <> "ADRTEMP1" THEN 
     IF testname$ LIKE "000*" OR testname$ LIKE "SAP*" OR testname$ LIKE "BUCHAUSZ" OR testname$ LIKE "BANGIMP1" THEN 
     ELSE 
       IF testname$ <> "OPENFILE" AND testname$ <> "IMPOADR" AND testname$ <> "KVEXEXP" AND testname$ <> "AFSKIMP" AND testname$ <> "AFSIPSP" AND testname$ <> "GESINFO" THEN 
         ADD "MATimeStamp; NUM; 0000000000."
         SAVE FILE FILE 
         CREATE INDEX ON MATimeStamp
       END IF 
     END IF 
   END IF 


   REM ------ RecStatus prÅfen/erzeugen ---------
   tsfound% = 0
   ON ERROR GOTO ErrDFile9
   a$ = FIELDINFO$ ("MATimeStamp1",0)
   tsfound% = 1
ErrDFile9: 
   IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   IF tsfound% = 0 AND testname$ <> "DTAUS" AND testname$ <> "ZBERICHT" AND testname$ <> "ADRTEMP" AND testname$ <> "ADRTEMP1" THEN 
     IF testname$ LIKE "000*" OR testname$ LIKE "SAP*" OR testname$ LIKE "BUCHAUSZ" OR testname$ LIKE "BANGIMP1" THEN 
     ELSE 
       IF testname$ <> "OPENFILE" AND testname$ <> "IMPOADR" AND testname$ <> "KVEXEXP" AND testname$ <> "AFSKIMP" AND testname$ <> "AFSIPSP" AND testname$ <> "GESINFO" THEN 
         ADD "MATimeStamp1; TXT; 16"
         SAVE FILE FILE 
         REM CREATE INDEX ON MATimeStamp
       END IF 
     END IF 
   END IF 

 IF testname$ LIKE "supervis*" THEN 
   REM CALL Fehler("supervis","")
   tsfound% = 0
   ON ERROR GOTO ErrDFile10
   a$ = FIELDINFO$ ("AGSperre1",0)
   tsfound% = 1
ErrDFile10:  
   IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   IF tsfound% = 0 THEN 
         ADD "AGSperre1; NUM; 000000."
         SAVE FILE "supervis"
   END IF 

   tsfound% = 0
   ON ERROR GOTO ErrDFile11
   a$ = FIELDINFO$ ("AGSperre2",0)
   tsfound% = 1
ErrDFile11:  
   IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   IF tsfound% = 0 THEN 
         ADD "AGSperre2; NUM; 000000."
         SAVE FILE "supervis"
   END IF 

   tsfound% = 0
   ON ERROR GOTO ErrDFile12
   a$ = FIELDINFO$ ("AGSperreAB",0)
   tsfound% = 1
ErrDFile12:  
   IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   IF tsfound% = 0 THEN 
         ADD "AGSperreAB; NUM; 000000."
         SAVE FILE "supervis"
   END IF 

 END IF 


   SET STATUS "Datei " + testname$ + " îffnen...OK" + ppop$
   REM REQUEST FILE + ": " + TIME$ (oend% - ostart%,"hh:mm:ss.s")
 END IF 
  
 IF testname$ = "KVTMPaaa" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "KVFTM" FROM FILE "KVFTMP"
   CLOSE FILE "KVFTMP"
   CREATE FILE MEMORY "KVFTMP" FROM FILE "KVFTM"
   CLOSE FILE "KVFTM"
 END IF 


 IF testname$ = "KVEXEXP" AND notopen% = - 1 THEN 
   REM REMOVE FROM FILE testname$
   CREATE FILE MEMORY "KVEXEXM" FROM FILE "KVEXEXP"
   CLOSE FILE "KVEXEXP"
   CREATE FILE MEMORY "KVEXEXP" FROM FILE "KVEXEXM"
   CLOSE FILE "KVEXEXM"
 END IF 

 IF testname$ = "ARTIKTMP" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "umst" FROM FILE "ARTIKTMP"
   CLOSE FILE "ARTIKTMP"
   CREATE FILE MEMORY "ARTIKTMP" FROM FILE "umst"
   CLOSE FILE "umst"
 END IF 
 IF testname$ = "UMSTEMP1" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "umst" FROM FILE "UMSTEMP1"
   CLOSE FILE "UMSTEMP1"
   CREATE FILE MEMORY "UMSTEMP1" FROM FILE "umst"
   CLOSE FILE "umst"
 END IF 
openadtemp231100: 
 IF testname$ = "ADRTEMPaaaaaa" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "adrt" FROM FILE "ADRTEMP"
   CLOSE FILE "ADRTEMP"
   CREATE FILE MEMORY "ADRTEMP" FROM FILE "ADRT"
   CLOSE FILE "adrt"
 END IF 
 IF testname$ = "ADRTEMP1aaaaa" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "adrt" FROM FILE "ADRTEMP1"
   CLOSE FILE "ADRTEMP1"
   CREATE FILE MEMORY "ADRTEMP1" FROM FILE "ADRT"
   CLOSE FILE "adrt"
 END IF 
 IF testname$ = "AKQTMPaaaaa" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "aq" FROM FILE "AKQTMP"
   CLOSE FILE "AKQTMP"
   CREATE FILE MEMORY "AKQTMP" FROM FILE "AQ"
   CLOSE FILE "AQ"
 END IF 
 IF testname$ = "BUCHTEMPaaa" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "BT" FROM FILE "BUCHTEMP"
   CLOSE FILE "BUCHTEMP"
   CREATE FILE MEMORY "BUCHTEMP" FROM FILE "BT"
   CLOSE FILE "BT"
 END IF 
 IF testname$ = "BUT" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "BT" FROM FILE "BUT"
   CLOSE FILE "BUT"
   CREATE FILE MEMORY "BUT" FROM FILE "BT"
   CLOSE FILE "BT"
 END IF 
 IF testname$ = "STATIST" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "ST" FROM FILE "STATIST"
   CLOSE FILE "STATIST"
   CREATE FILE MEMORY "STATIST" FROM FILE "ST"
   CLOSE FILE "ST"
 END IF 
 IF testname$ = "STATIST2" AND notopen% = - 1 THEN 
   REMOVE FROM FILE testname$
   CREATE FILE MEMORY "ST2" FROM FILE "STATIST2"
   CLOSE FILE "STATIST2"
   CREATE FILE MEMORY "STATIST2" FROM FILE "ST2"
   CLOSE FILE "ST2"
 END IF 
 IF cfile$ <> "" THEN 
   IF OPEN (cfile$) THEN FILE cfile$
 END IF 
dfileend06112002: 
 ON ERROR GOTO ErrorHandler
 END SUB 
  
 
 
 ' Fehler
 ' ============================================================
 ' Zweck:   Anzeigen von Fehlermeldungen
 ' Nutzung: Call Fehler(Z1$,Z2$)
 '          Z1$         = erste Zeile
 '          Z2$         = zweite Zeile
 ' ============================================================
 
SUB Fehler(Z1$,Z2$)
 msg$ = Z1$
 IF z2$ <> "" THEN msg$ = msg$ + CHR$ (13) + CHR$ (10) + Z2$
 v% = CALL ("MessageBox",hWnd%%, FN ansi(msg$), FN ansi(title$),48)
 END SUB 
 
SUB Info(Z1$,Z2$)
 msg$ = Z1$
 IF z2$ <> "" THEN msg$ = msg$ + CHR$ (13) + CHR$ (10) + Z2$
 v% = CALL ("MessageBox",hWnd%%, FN ansi(msg$), FN ansi(title$),64)
 END SUB 
 
 
 
 ' Funktion ReadINI
 ' ============================================================
 ' Zweck:   liest Eintrag aus CODIEAPP.INI
 ' Nutzung: x$=ReadINI$(topic$,item$)
 '          topic$      = Abschnitt
 '          item$       = Eintrag
 ' ============================================================
 ' 28.07.93    - umgestellt auf Kernel
 
FUNCTION ReadINI$(topic$,item$)
 REM CALL Fehler("readini",item$)
 i$ = ""
 a% = CALL ("GetPrivateProfileString",topic$,item$,"leer",i$,250,GDirINI$ + "CODIEAPP.INI")
 ReadINI$ = i$
 END FUNCTION 


FUNCTION ReadINI1$(topic$,item$)
 REM CALL Fehler("readini1",item$)
 i$ = ""
 a% = CALL ("GetPrivateProfileString",topic$,item$,"leer",i$,250,windir$ + "\CODIEAPP.INI")
 ReadINI1$ = i$
 END FUNCTION 


FUNCTION ReadDesti$(topic$,item$,name$)
 i$ = ""
 a% = CALL ("GetPrivateProfileString",topic$,item$,"leer",i$,250,name$)
 ReadDesti$ = i$
 END FUNCTION 
 
FUNCTION ReadDestiIBM$(topic$,item$,name$)
 i$ = ""
 a% = CALL ("GetPrivateProfileString",topic$,item$,"leer",i$,250,name$)
 x$ = FN ibm(i$)
 i$ = x$
 zaehl% = 0
anf070620061: 
 zaehl% = zaehl% + 1

 IF x$ LIKE "«*" OR x$ LIKE "*«*" OR x$ LIKE "*«" THEN 
 ELSE 
   GOTO anf070620062
 END IF 
 IF LEFT$ (x$,1) LIKE "«" THEN 
   IF x$ LIKE "«-*" OR x$ LIKE "*«-*" THEN 
     pos% = INSTR (x$,"«")
     i$ = "ô" + MID$ (x$,pos% + 2)
     x$ = i$
   ELSE 
     IF x$ LIKE "«o*" OR x$ LIKE "*«o*" THEN 
       pos% = INSTR (x$,"«")
       i$ = "ö" + MID$ (x$,pos% + 2)
       x$ = i$
     ELSE 
       IF x$ LIKE "«*" OR x$ LIKE "*«*" THEN 
         pos% = INSTR (x$,"«")
         i$ = "é" + MID$ (x$,pos% + 2)
         x$ = i$
       ELSE 
         IF x$ LIKE "*«∏*" THEN 
           pos% = INSTR (x$,"«")
           i$ = "e" + MID$ (x$,pos% + 2)
           x$ = i$
         ELSE 
           pos% = INSTR (x$,"«")
           i$ = "?" + MID$ (x$,pos% + 1)
           x$ = i$
         END IF 
       END IF 
     END IF 
   END IF 
 END IF 
 IF x$ LIKE "«∏*" OR x$ LIKE "*«∏*" THEN 
   pos% = INSTR (x$,"«")
   i$ = LEFT$ (x$,pos% - 1) + "e" + MID$ (x$,pos% + 2)
   x$ = i$
 END IF 
 IF x$ LIKE "«Ù*" OR x$ LIKE "*«Ù*" THEN 
   pos% = INSTR (x$,"«")
   i$ = LEFT$ (x$,pos% - 1) + "î" + MID$ (x$,pos% + 2)
   x$ = i$
 END IF 
 IF x$ LIKE "«¨*" OR x$ LIKE "*«¨*" THEN 
   pos% = INSTR (x$,"«")
   i$ = LEFT$ (x$,pos% - 1) + "Å" + MID$ (x$,pos% + 2)
   x$ = i$
 END IF 
 IF x$ LIKE "«œ*" OR x$ LIKE "*«œ*" THEN 
   pos% = INSTR (x$,"«")
   i$ = LEFT$ (x$,pos% - 1) + "Ñ" + MID$ (x$,pos% + 2)
   x$ = i$
 END IF 
 IF x$ LIKE "«Y*" OR x$ LIKE "*«Y*" THEN 
   pos% = INSTR (x$,"«")
   i$ = LEFT$ (x$,pos% - 1) + "·" + MID$ (x$,pos% + 2)
   x$ = i$
 END IF 
 IF zaehl% < 15 THEN 
   GOTO anf070620061
 ELSE 
   
 END IF 


 
 
 
anf070620062:  


 ReadDestiIBM$ = i$
 END FUNCTION 

FUNCTION ReadDestiOEM$(topic$,item$,name$)
 i$ = ""
 a% = CALL ("GetPrivateProfileString",topic$,item$,"leer",i$,250,name$)
 x$ = FN oem(i$)
 i$ = x$
 ReadDestiOEM$ = i$
 END FUNCTION 

  
 ' Funktion ReadConfig$
 ' ============================================================
 ' Zweck:   liest Eintrag aus CODIEAPP.NET
 ' Nutzung: x$=ReadConfig$(topic$,item$)
 '          topic$      = Abschnitt
 '          item$       = Eintrag
 ' ============================================================
 ' 28.07.93    - umgestellt auf Kernel
 
FUNCTION ReadConfig$(topic$,item$)
 i$ = ""
 a% = CALL ("GetPrivateProfileString",topic$,item$,"leer",i$,250,_netpath$ + "CODIEAPP.NET")
 ReadConfig$ = i$
 END FUNCTION 
 
 
 ' Funktion ReadWININI
 ' ============================================================
 ' Zweck:   liest Eintrag aus WIN.INI
 ' Nutzung: x$=ReadWININI$(topic$,item$)
 '          topic$      = Abschnitt
 '          item$       = Eintrag
 ' ============================================================
 ' 28.07.93    - umgestellt auf Kernel
 
FUNCTION ReadWININI$(topic$,item$)
 i$ = ""
 a% = CALL ("GetProfileString",topic$,item$,"leer",i$,250)
 ReadWININI$ = i$
 END FUNCTION 
 
  
 
 ' WriteINI
 ' ============================================================
 ' Zweck:   schreibt Eintrag in CODIEAPP.INI
 ' Nutzung: CALL WriteINI$(topic$,item$,value$)
 '          topic$      = Abschnitt
 '          item$       = Eintrag
 '          value$      = Wert
 ' ============================================================
 
SUB WriteINI(topic$,item$,value$)
 ON ERROR GOTO w150420071
 IF GDirINI$ <> "" THEN 
   a% = CALL ("WritePrivateProfileString",topic$,item$,value$,"CODIEAPP.INI")
 END IF 
w150420071: 
 ON ERROR GOTO ErrorHandler
 a% = CALL ("WritePrivateProfileString",topic$,item$,value$,GDirINI$ + "CODIEAPP.INI")
 END SUB 

SUB WriteINIDes(topic$,item$,value$,datei$)
 a% = CALL ("WritePrivateProfileString",topic$,item$,value$,datei$)
 END SUB 

FUNCTION ReadINIDes$(topic$,item$,datei$)
 i$ = ""
 a% = CALL ("GetPrivateProfileString",topic$,item$,"leer",i$,250,datei$)
 ReadINIDes$ = i$
 
 END FUNCTION 
 
 
 ' WriteConfig
 ' ============================================================
 ' Zweck:   schreibt Eintrag in gemeinsame CODIEAPP.INI
 ' Nutzung: CALL WriteConfig(topic$,item$,value$)
 '          topic$      = Abschnitt
 '          item$       = Eintrag
 '          value$      = Wert
 ' ============================================================
 
SUB WriteConfig(topic$,item$,value$)
 a% = CALL ("WritePrivateProfileString",topic$,item$,value$,_netpath$ + "CODIEAPP.NET")
 END SUB 
 
  
 ' WriteWININI
 ' ============================================================
 ' Zweck:   schreibt Eintrag in WIN.INI
 ' Nutzung: CALL WriteWININI$(topic$,item$,value$)
 '          topic$      = Abschnitt
 '          item$       = Eintrag
 '          value$      = Wert
 ' ============================================================
 
SUB WriteWININI(topic$,item$,value$)
 a% = CALL ("WriteProfileString",topic$,item$,value$)
 END SUB 
 
 
 ' FileDate
 ' ============================================================
 ' Zweck:   ermittelt Erstellungsdatum einer Datei
 ' Nutzung: x$=FileDate$(datei$)
 ' ============================================================
 
FUNCTION FileDate$(datei$)
 FileDate$ = CALL ("FileDate",datei$)
 END FUNCTION 
  
 
 ' LOGIN Filiale
 ' ======================================================================== 
 
SUB LOGIN1()
 CALL DFile(2,"OPENFILE" + _fpw$)
 CALL DFile(2,"ZERO" + _fpw$)
 CALL DFile(20,"Filiale" + _fpw$)
 CALL DFile(2,"supervis" + _fpw$)
 CALL DFile(2,"pssetup" + _fpw$)
 FILE "filiale"
 ON ERROR GOTO lo100520041
lo100520041: 
 ON ERROR GOTO ErrorHandler
 INDEX name.filiale
 REMOVE FROM FILE "filiale" WHERE LTRIM$ (name.filiale) = ""
 SELECT FIRST 

 a% = 0
 REM 110197
 fzaehl% = RECCOUNT ("filiale") + 1
 IF fzaehl% > 20000 THEN fzaehl% = 20000
 REDIM MALIST$(fzaehl%)
 REDIM MALIST1$(fzaehl%)
 REDIM GMALIST2$(fzaehl%)
 DIM MALIST1%(fzaehl%)
 WHILE NOT EOF ("filiale")
   IF LTRIM$ (name.filiale) <> "" AND NoAnzeigeJN.filiale <> "j" THEN 
     MALIST$(a%) = name.filiale
     GMALIST2$(a%) = name.filiale + " " + STR$ (bÅronr.filiale,"000") + "                                                                       " + STR$ (filialnr.filiale,"000000")
     MALIST1%(a%) = codema.filiale
     a% = a% + 1
   END IF 
   SELECT NEXT FILE "filiale" INDEX name.filiale
 WEND 
 SELECT FIRST 
 w% = 156:h% = 80
 d$ = "PASSWORD"
 name$ = ReadINI$(_projekt$,"lastfiliale")
 REM logon$ = ReadINI$(_projekt$,"autologon")
 passed% = 0
 IF UCASE$ (logon$) = "TRUE" THEN 
   SELECT KEY name$ LOCK FILE "filiale" INDEX name.filiale
   IF FOUND ("filiale") THEN 
     vcodema% = CodeMA.filiale
     letzterZugang.filiale = TODAY 
     STORE FILE "filiale"
     UNLOCK CURRENT FILE "filiale"
     UNLOCK FILE "filiale"
     passed% = 1
   END IF 
 END IF 
 passed% = 0
 IF passed% = 0 THEN 
   CREATE DIALOG "LOGHELP",0,0,197,94,title$,"MS Sans Serif",8
   ADD DIALOG "LOGHELP",4,0,0,196,66,0,""
   ADD DIALOG "LOGHELP",9,5,12,19,21,4
   ADD DIALOG "LOGHELP",5,30,12,155,46,0,"Falls Sie die Anwendung das erstemal benutzen oder neu installiert haben, wÑhlen Sie als BÅro 'CODie' aus und geben Sie kein Passwort ein."
   ADD DIALOG "LOGHELP",1,69,74,54,14,1,"&OK",1,1
   CREATE DIALOG "LOGIN",0,0,193,150,"SmartPROVIS - BÅroanmeldung","MS Sans Serif",8
   ADD DIALOG "LOGIN",4,0,0,193,126,0,""
   ADD DIALOG "LOGIN",9,5,11,20,22,3
   ADD DIALOG "LOGIN",5,33,11,139,9,0,"Der Zugang zu diesem Programm ist durch "
   ADD DIALOG "LOGIN",5,33,20,68,10,0,"Passwort geschÅtzt."
   ADD DIALOG "LOGIN",5,33,30,151,11,0,"Bitte wÑhlen Sie aus der Liste der BÅros"
   ADD DIALOG "LOGIN",5,33,41,152,10,0,"Ihr BÅro aus und geben Sie anschlie·end"
   ADD DIALOG "LOGIN",5,33,51,152,9,0,"das gÅltige Passwort ein."
   ADD DIALOG "LOGIN",5,33,97,32,12,0,"&Passwort:"
   ADD DIALOG "LOGIN",6,33,107,149,12,32,0,pw$,10
   ADD DIALOG "LOGIN",5,33,70,53,8,0,"&BÅroliste:"
   ADD DIALOG "LOGIN",8,33,80,149,65,259,2,name$,GMALIST2$
   ADD DIALOG "LOGIN",1,17,129,50,15,1,"Einloggen",1,1
   ADD DIALOG "LOGIN",1,68,129,50,15,0,"&Abbruch",0,0
   ADD DIALOG "LOGIN",1,119,129,50,15,0,"&Hilfe",0,2,"LOGHELP"
   WHILE passed% = 0
     pwzaehl% = pwzaehl% + 1
     PW$ = ""
     DIALOG "LOGIN",a%
     IF a% = 0 THEN 
       REMOVE DIALOG ALL 
       CALL HideStartup()
       CALL EXIT()
     END IF 
     n$ = RIGHT$ (name$,6)
     n% = VAL (n$)
     SELECT FIRST FILE "Filiale" INDEX filialnr.filiale
     SELECT KEY n% FILE "Filiale" INDEX filialnr.filiale
     name$ = Name.filiale
     IF name$ = name.filiale THEN 
       filialnr% = FilialNr.filiale
       IF filialnr% < 1 THEN filialnr% = 0
       IF UCASE$ (FPWDecoded$()) = UCASE$ (PW$) THEN 
         passed% = 1
         SELECT KEY filialnr% LOCK FILE "filiale" INDEX filialnr.filiale
         letzterZugang.filiale = TODAY 
         Workstation% = Filialnr%
         
         STORE FILE "filiale"
         UNLOCK CURRENT FILE "filiale"
         UNLOCK FILE "filiale"
         CALL WriteINI(_projekt$,"lastfiliale",name.filiale)
       END IF 
     END IF 
     IF passed% = 0 THEN CALL Fehler("Keine Zugangsberechtigung!","Wechsel zwischen den Feldern mit Tabulatortaste, Abschlu· mit <ENTER> !")
     IF pwzaehl% = 3 THEN 
       REMOVE DIALOG ALL 
       CALL HideStartup()
       CALL EXIT()
     END IF 
   WEND 
 END IF 
 REMOVE DIALOG ALL 
 END SUB 



 ' LOGIN Mitarbeiter
 ' ========================================================================
 
SUB LOGIN()
 GMASuperCount% = 0
 CALL DFile(3,"STAMM" + _fpw$)
 FILE "stamm"
log120520041: 
 ON ERROR GOTO ErrorHandler
 SELECT FIRST FILE "stamm"
 ON ERROR GOTO t021020051
 IF ADRZwang.stamm = 1 THEN GBerlimex% = - 1
 IF Protall.stamm = 1 THEN GZP% = - 1
t021020051: 
 ON ERROR GOTO ErrorHandler
 CALL DFile(2,"OPENFILE" + _fpw$)
 CALL DFile(2,"ZERO" + _fpw$)
 CALL DFile(2,"MASUPER" + _fpw$)
 CALL DFile(2,"color" + _fpw$)
 REM CALL Fehler("config îffnen","")
 CALL DFile(22,"CONFIG" + _fpw$)
 REM CALL DFile(2,"OFFICE\PROTALL" + _fpw$)
 CALL DFile(2,"pssetup" + _fpw$)
 CALL DFile(2,"supervis" + _fpw$)
 
 FILE "pssetup"
 ON ERROR GOTO su011120050
 a$ = oldScanVerf.pssetup
 GOTO su011120051
su011120050: 
 CALL FldAdd1("oldScanVerf","TXT;5",0)
su011120051:  
 ON ERROR GOTO ErrorHandler


 FILE "supervis"
 ON ERROR GOTO su051020051
 a$ = Adminstrator1.supervis
 GOTO su051020052
su051020051: 
 CALL FldAdd1("Adminstrator1","TXT;1",0)
su051020052: 
 ON ERROR GOTO su051020053
 a$ = NoEmailJN.supervis
 GOTO su051020054
su051020053:   
 CALL FldAdd1("NoEmailJN","TXT;1",0)
su051020054: 
 ON ERROR GOTO su051020055
 a$ = NoAnzeigeJN.supervis
 GOTO su051020056
su051020055:   
   CALL FldAdd1("NoAnzeigeJN","TXT;1",0)
su051020056:  
   ON ERROR GOTO su051020057
   SAVE FILE "supervis"
su051020057: 
 ON ERROR GOTO ErrorHandler
 FILE "config"
 IF GASP% THEN 
 ELSE 
   ON ERROR GOTO logerr160420021
   so$ = soll.config
   GOTO logerr160420021a
logerr160420021: 
   CALL FldAdd1("SOLL","TXT;1",0)
logerr160420021a: 
   ON ERROR GOTO logerr160420022
   aas$ = asp.config
   GOTO logerr160420023
logerr160420022: 
   ON ERROR GOTO logerr160420023
   CALL FldAdd1("ASP","TXT;1",0)
   
   SAVE FILE "config"
logerr160420023: 
 END IF 
   ON ERROR GOTO ErrorHandler
   
   REM CALL Fehler(_netpath$ + "local\config1.sbf","")
 IF EXISTS (_netpath$ + "local\config1.sbf") THEN 
   CALL DFile(23,"CONFIG1" + _fpw$)
   FILE "config1"
   CALL FldAdd1("SOLL","TXT;1",0)
   CALL FldAdd1("ASP","TXT;1",0)
   SAVE FILE "config1"
   ok% = - 1
   IF gdv.config <> gdv.config1 THEN ok% = 0
   IF Makler.config <> Makler.config1 THEN ok% = 0
   IF anzag.config <> anzag.config1 THEN ok% = 0
   IF spezkond.config <> spezkond.config1 THEN ok% = 0
   IF Templetonimport.config <> Templetonimport.config1 THEN ok% = 0
   IF AGzus.config <> AGzus.config1 THEN ok% = 0
   IF Direktion.config <> Direktion.config1 THEN ok% = 0
   IF PRGVersion.config <> PRGVersion.config1 THEN ok% = 0
   IF Verwaltung.config <> Verwaltung.config1 THEN ok% = 0
   IF SOLL.config <> SOLL.config1 THEN ok% = 0
   IF ok% = 0 THEN 
     CLOSE FILE "config1"
     DELETE _netpath$ + "local\config1.*"
   ELSE 
     CLOSE FILE "config1"
     CLOSE FILE "config"
     DELETE _netpath$ + "config.*"
     ON ERROR GOTO login190320021
     COPY _netpath$ + "local\config1.1" TO _netpath$ + "config.1"
login190320021: 
     ON ERROR GOTO login190320022
     COPY _netpath$ + "local\config1.4" TO _netpath$ + "config.4"
login190320022: 
     ON ERROR GOTO login190320023
     COPY _netpath$ + "local\config1.8" TO _netpath$ + "config.8"
login190320023: 
     COPY _netpath$ + "local\config1.sbd" TO _netpath$ + "config.sbd"
     ON ERROR GOTO login190320023
     COPY _netpath$ + "local\config1.sbf" TO _netpath$ + "config.sbf"
login190320023: 
     DELETE _netpath$ + "local\config1.*"
     CALL DFile(22,"CONFIG" + _fpw$)
   END IF 
 END IF 
 FILE "supervis"
 INDEX name.supervis
 SELECT FIRST 
 a% = 0
 REM 110197
  fzaehl% = RECCOUNT ("supervis") + 1
 IF fzaehl% > 20000 THEN fzaehl% = 20000
 REDIM MALIST$(fzaehl%,1)
 REDIM MALIST$(fzaehl%)
 REDIM MALIST%(fzaehl%,1)
 REDIM MALIST%(fzaehl%)
 REDIM MALIST2$(fzaehl%,1)
 REDIM MALIST2%(fzaehl%)
 b% = 0
 d% = 0
 WHILE NOT EOF ("supervis")
   REM CALL Fehler(name.supervis, STR$ (Workstation.supervis))
   IF LTRIM$ (name.supervis) <> "" AND NoAnzeigeJN.supervis <> "j" THEN 
     REM CALL Fehler(name.supervis, STR$ (d%))
     IF NoEmailJN.supervis <> "j" THEN 
       MALIST2$(d%) = name.supervis
       MALIST2%(d%) = codema.supervis
       d% = d% + 1
     END IF 
     REM MALIST2%(b%) = codema.supervis
     REM b% = b% + 1
     REM CALL Fehler("","")
     IF GASP% THEN 
       wks% = Workstation%
       FOR ii% = 0 TO VisCount% - 1' Fall externes BÅro
         wks% = VisOff%(ii%)
         aa% = IsWksVisible%(wks%)
         IF aa% = - 1 AND Workstation.supervis = wks% THEN 
           sok% = - 1
           ii% = VisCount%
         ELSE 
           sok% = 0
         END IF 
       NEXT ii%
       IF sok% THEN 
         MALIST$(a%) = PAD$ (name.supervis,30) + "BÅro: " + LTRIM$ (GetWksName$(Workstation.supervis))
         MALIST%(a%) = codema.supervis
         a% = a% + 1
       END IF 
     ELSE 
       IF ag$ <> "j" THEN 
         ON ERROR GOTO lgin211201001
         IF ZugSperr.supervis <> "j" THEN 
           MALIST$(a%) = name.supervis
           MALIST%(a%) = codema.supervis
           a% = a% + 1
         END IF 
       ELSE 
lgin211201001: 
         MALIST$(a%) = name.supervis
         MALIST%(a%) = codema.supervis
         a% = a% + 1
       END IF 
     END IF 
   END IF 
   SELECT NEXT FILE "supervis" INDEX name.supervis
 WEND 
 ON ERROR GOTO ErrorHandler
 SELECT FIRST 
 w% = 156:h% = 80
 d$ = "PASSWORD"
 name$ = ReadINI$("PROVIS","lastuser")
 REM logon$ = ReadINI$(_projekt$,"autologon")
 logon$ = ""
 passed% = 0
 IF UCASE$ (logon$) = "TRUE" AND GASP% <> - 1 AND GTerminal% <> - 1 THEN 
   SELECT KEY name$ LOCK FILE "SUPERVIS" INDEX name.supervis
   IF FOUND ("SUPERVIS") THEN 
     vcodema% = CodeMA.supervis
     letzterZugang.supervis = TODAY 
     CALL QuickStore("supervis")
     passed% = 1
     GMACodeDir$ = LEFT$ (windir$,2) + "\CODIE.TMP"
     ON ERROR GOTO w300920041
     MAKE DIRECTORY GMACodeDir$
w300920041: 
     ON ERROR GOTO ErrorHandler
     GMACodeDir$ = LEFT$ (windir$,2) + "\CODIE.TMP\"
     REM CALL Fehler(_netpath$,GMACodeDir$)
     IF EXISTS ("c:\search.dat") THEN DELETE "C:\search.dat"
     IF EXISTS ("c:\search.idx") THEN DELETE "C:\search.idx"
     IF EXISTS (GMACodeDir$ + "search.dat") THEN DELETE GMACodeDir$ + "search.dat"
     IF EXISTS (GMACodeDir$ + "search.idx") THEN DELETE GMACodeDir$ + "search.idx"
     IF EXISTS (_netpath$ + "local\search.dat") AND EXISTS (_netpath$ + "local\search.idx") THEN 
       COPY _netpath$ + "local\search.dat",GMACodeDir$ + "search.dat"
       COPY _netpath$ + "local\search.idx",GMACodeDir$ + "search.idx"
     ELSE 
       GCodie% = 0
     END IF 
   END IF 
 END IF 
 passed% = 0
 IF passed% = 0 THEN 
   SET STATUS "Nutzeranmeldung"
   CREATE DIALOG "LOGHELP",0,0,197,94,title$,"MS Sans Serif",8
   ADD DIALOG "LOGHELP",4,0,0,196,66,0,""
   ADD DIALOG "LOGHELP",9,5,12,19,21,4
   ADD DIALOG "LOGHELP",5,30,12,155,46,0,"Falls Sie die Anwendung das erstemal benutzen oder neu installiert haben, wÑhlen Sie als Mitarbeiter 'Supervisor' aus und geben Sie als Passwort 'supervisor' ein oder lassen Sie es leer."
   ADD DIALOG "LOGHELP",1,69,64,54,14,1,"&OK",1,1
   CREATE DIALOG "LOGIN",0,0,193,150,title$,"MS Sans Serif",8
   ADD DIALOG "LOGIN",4,0,0,193,126,0,""
   ADD DIALOG "LOGIN",9,5,11,20,22,2
   ADD DIALOG "LOGIN",5,33,11,139,9,0,"Der Zugang zu diesem Programm ist durch "
   ADD DIALOG "LOGIN",5,33,20,68,10,0,"Passwort geschÅtzt."
   ADD DIALOG "LOGIN",5,33,30,151,11,0,"Bitte wÑhlen Sie aus der Liste der Mitarbeiter"
   ADD DIALOG "LOGIN",5,33,41,152,10,0,"Ihren Namen aus und geben Sie anschlie·end"
   ADD DIALOG "LOGIN",5,33,51,57,9,0,"Ihr Passwort ein."
   IF GASP% THEN 
     ADD DIALOG "LOGIN",5,3,97,32,12,0,"&Passwort:"
     ADD DIALOG "LOGIN",6,3,107,185,12,32,0,pw$,10
     ADD DIALOG "LOGIN",5,3,70,53,8,0,"&Mitarbeiterliste:"
     ADD DIALOG "LOGIN",8,3,80,185,195,259,2,name$,MALIST$
   ELSE 
     ADD DIALOG "LOGIN",5,33,97,32,12,0,"&Passwort:"
     ADD DIALOG "LOGIN",6,33,107,149,12,32,0,pw$,10
     ADD DIALOG "LOGIN",5,33,70,53,8,0,"&Mitarbeiterliste:"
     ADD DIALOG "LOGIN",8,33,80,149,195,259,2,name$,MALIST$
   END IF 
   ADD DIALOG "LOGIN",1,17,129,50,15,1,"Einloggen",1,1
   ADD DIALOG "LOGIN",1,68,129,50,15,0,"&Abbruch",0,0
   ADD DIALOG "LOGIN",1,119,129,50,15,0,"&Hilfe",0,2,"LOGHELP"
   WHILE passed% = 0
     PW$ = ""
     DIALOG "LOGIN",a%
     IF a% = 0 THEN 
       REMOVE DIALOG ALL 
       CALL HideStartup()
       CALL EXIT()
     END IF 
     name1$ = TRIM$ ( LEFT$ (name$,30))
     SELECT KEY name1$
     IF name1$ LIKE name.supervis THEN 
       vcodema% = CodeMA.supervis
       _vcodema% = vcodema%
       IF UCASE$ (PWDecoded$()) = UCASE$ (PW$) THEN 
         GMAName$ = LEFT$ (name.supervis,50)
         GMACodeMA% = CodeMA.supervis
         passed% = 1
         SELECT KEY vcodema% LOCK FILE "supervis" INDEX CodeMA.supervis
         letzterZugang.supervis = TODAY 
         CALL QuickStore("supervis")
         IF GZP% = - 1 THEN CALL ProtAll(0,"Anmeldung am Programm","",0,"",0,"")
       END IF 
     END IF 
     IF demo% = 1 THEN passed% = 1
     IF name1$ = "Supervisor" THEN passed% = 1
     IF passed% = 1 THEN 
       GMAName$ = LEFT$ (name.supervis,50)
       GMACodeMA% = CodeMA.supervis
       REM GMACodeDir$ = LEFT$ (windir$,2) + "\Programme\CODie.TMP"
       ON ERROR GOTO w300920042
       REM MAKE DIRECTORY GMACodeDir$
       REM REGISTER _netpath$ + "CODieLIB.dll","_SBCreateDir","IF"
       REM a% = CALL ("_SBCreateDir",GMACodeDir$)
       REM REGISTER CLEAR "_SBCreateDir"
         REM GMACodeDir$ = _netpath$ + STR$ (GMACodeMA%,"00000000") + "\"
         IF GASP% = - 1 OR GTERMINAL% = - 1 THEN 
           MACodeDir$ = _netpath$ + STR$ (GMACodeMA%,"00000000")
           GMACodeDir$ = _netpath$ + STR$ (GMACodeMA%,"00000000") + "\"
         ELSE 
           GMACodeDir$ = LEFT$ (windir$,2) + "\CODie.TMP\"
           MACodeDir$ = LEFT$ (windir$,2) + "\CODie.TMP"
         END IF 
         ON ERROR GOTO crdir090320021
         MAKE DIRECTORY MACodeDir$
w300920042: 
       ON ERROR GOTO ErrorHandler 
       REM GMACodeDir$ = LEFT$ (windir$,2) + "\Programme\CODie.TMP"
       REM REGISTER _netpath$ + "CODieLIB.dll","_SBSetCurrentDir","IF"
       REM REQUEST GMACodeDir$,"",2
       GSerDir$ = GMACodeDir$
       IF GASP% = - 1 THEN 
         ON ERROR GOTO w2405051
         GSerDir$ = gserdir.stamm
w2405051: 
         ON ERROR GOTO ErrorHandler
         IF GSerDir$ = "" THEN GSerDir$ = "H:\"
       END IF 
       IF Adminstrator1.supervis = "j" THEN 
         REQUEST "Mîchten Sie permanent die SperreintrÑge angezeigt bekommen","auf die in den einzelnen Funktionen getestet wird?",135,reqsperr%
         IF reqsperr% = 1 THEN 
           GAdministrator% = - 1
         ELSE 
           GAdministrator% = 0
         END IF 
       ELSE 
         GAdministrator% = 0
       END IF 
       IF GASP% = - 1 OR GTERMINAL% = - 1 THEN 
         GMACodeDir$ = _netpath$ + STR$ (GMACodeMA%,"00000000") + "\"
         MACodeDir$ = _netpath$ + STR$ (GMACodeMA%,"00000000")
         ON ERROR GOTO crdir090320021
         MAKE DIRECTORY MACodeDir$
       END IF 
crdir090320021: 
       ON ERROR GOTO ErrorHandler
       IF GASP% = - 1 OR GTerminal% = - 1 THEN 
         GMACodeDir$ = _netpath$ + STR$ (GMACodeMA%,"00000000") + "\"
       END IF 
       ON ERROR GOTO w120820061
       DELETE GMACodeDir$ + "OUTLOOK\*.exe"
       DELETE GMACodeDir$ + "OUTLOOK\*.dll"
w120820061: 
       ON ERROR GOTO ErrorHandler
       IF EXISTS (GMACodeDir$ + "CODieSF0.exe") OR EXISTS (GMACodeDir$ + "CODieSF0.ini") THEN 
         DELETE GMACodeDir$ + "CODieSF0.*"
       END IF 
       IF EXISTS (GMACodeDir$ + "search.dat") OR EXISTS (GMACodeDir$ + "search.idx") THEN 
         ON ERROR GOTO err061120021
         IF (GASP% = - 1 OR GTerminal% = - 1) AND GMACodeDir$ <> "C:\" AND GMACodeDir$ <> "c:\" THEN 
           DELETE GMACodeDir$ + "search.*"
         ELSE 
           DELETE GMACodeDir$ + "search.*"
         END IF 
err061120021: 
         ON ERROR GOTO ErrorHandler
         IF EXISTS (_netpath$ + "local\CODieSF0.exe") THEN 
           COPY _netpath$ + "local\CODieSF0.exe",GMACodeDir$ + "CODieSF0.exe"
         END IF 
         IF EXISTS (_netpath$ + "local\search.dat") AND EXISTS (_netpath$ + "local\search.idx") THEN 
           COPY _netpath$ + "local\search.dat",GMACodeDir$ + "search.dat"
           COPY _netpath$ + "local\search.idx",GMACodeDir$ + "search.idx"
         ELSE 
           GCodie% = 0
         END IF 
       ELSE 
         IF EXISTS (_netpath$ + "local\CODieSF0.exe") THEN 
           COPY _netpath$ + "local\CODieSF0.exe",GMACodeDir$ + "CODieSF0.exe"
         END IF 
         IF EXISTS (_netpath$ + "local\search.dat") AND EXISTS (_netpath$ + "local\search.idx") THEN 
           COPY _netpath$ + "local\search.dat",GMACodeDir$ + "search.dat"
           COPY _netpath$ + "local\search.idx",GMACodeDir$ + "search.idx"
         ELSE 
           GCodie% = 0
         END IF 
       END IF 
       IF NOT EXISTS (GMACodedir$ + "codieapp.ini") AND andi$ = "12345" THEN 
         IF EXISTS (windir$ + "\codieapp.ini") THEN 
           COPY windir$ + "\codieapp.ini",GMACodedir$ + "codieapp.ini"
         ELSE 
           IF EXISTS (_netpath$ + "local\codieapp.ini") THEN 
             COPY _netpath$ + "local\codieapp.ini",GMACodedir$ + "codieapp.ini"
           ELSE 
             CALL Fehler("Es wurde die Datei codieapp.ini weder im Verzeichnis: " + windir$ + " noch in: " + GMACodedir$ + " gefunden. Bitte informieren Sie Ihren Administrator!","")
           END IF 
         END IF 
       END IF 
     END IF 
     look3d$ = "TRUE"
     inhouse$ = ReadINI$("SYSTEM","INHOUSE")
     inhouse1$ = ReadINI$("SYSTEM","INHOUSE1")
     AutoKeyword$ = UCASE$ (ReadINI$("SYSTEM","AutoKeyword"))
     AutoAnrede$ = UCASE$ (ReadINI$("SYSTEM","AutoAnrede"))
     AutoTitel$ = UCASE$ (ReadINI$("SYSTEM","AutoTitel"))
     AutoBeruf$ = UCASE$ (ReadINI$("SYSTEM","AutoBeruf"))
     AutoHobbys$ = UCASE$ (ReadINI$("SYSTEM","AutoHobbys"))
     AutoOrt$ = UCASE$ (ReadINI$("SYSTEM","AutoOrt"))
     AutoPLZ$ = UCASE$ (ReadINI$("SYSTEM","AutoPLZ"))
     AutoLand$ = UCASE$ (ReadINI$("SYSTEM","AutoLand"))
     AutoFiForm$ = UCASE$ (ReadINI$("SYSTEM","AutoFirmenformForm"))
     AutoFStand$ = UCASE$ (ReadINI$("SYSTEM","AutoFamilienStand"))
     AutoAnstell$ = UCASE$ (ReadINI$("SYSTEM","AutoAnstellungsverh"))
     AutoNational$ = UCASE$ (ReadINI$("SYSTEM","AutoNational"))
     AutoStaat$ = UCASE$ (ReadINI$("SYSTEM","AutoStaat"))
     MATagest$ = UCASE$ (ReadINI$("SYSTEM","MitarbeiterTagestermine"))
     AutoKArt1$ = UCASE$ (ReadINI$("SYSTEM","AutoTelefonart1"))
     AutoKArt2$ = UCASE$ (ReadINI$("SYSTEM","AutoTelefonart2"))
     Vista$ = UCASE$ (ReadINI$("SYSTEM","MSVista"))
     GScanDir$ = UCASE$ (ReadINI$("SYSTEM","ScanUndImportVerzeichnis"))
     GCalcuvDir$ = UCASE$ (ReadINI$("SYSTEM","CalcuVitaVerzeichnis"))
 
     REM GOldProdSu$ = UCASE$ (ReadINI$("SYSTEM","OldProdSu"))
     REM GSofortFile$ = LCASE$ (ReadINI$("SYSTEM","SofortFileAuswahl"))
 
     REM GEMAILON$ = UCASE$ (ReadINI$("SYSTEM","EMAILON"))
     GEMAILON$ = "TRUE"
     KonTest$ = UCASE$ (ReadConfig$("PROVIS","KONDTEST"))
     GNeuSuGeadr$ = UCASE$ (ReadConfig$("PROVIS","NeuSuGeadr"))
     IF GNeuSuGeadr$ LIKE "TRUE" THEN 
       GNeuSuGeadr$ = "j"
     ELSE 
       GNeuSuGeadr$ = "n"
     END IF 
     textversch$ = ReadINI$("SYSTEM","TEXTVERSCHIEBUNG")
     ergdatuma$ = ReadINI$("SYSTEM","ERGDATUMAUTOMAT")
     sep1$ = ReadINI$("SYSTEM","SEP1&1EDV")
     andidial$ = ReadINI$("Modem","ISDNDial")
     _WPSuffix$ = ReadINI$("SYSTEM","WPSuffix")
     IF _WPSuffix$ = "" THEN _WPSuffix$ = "DOC"
     ProServ$ = UCASE$ (ReadConfig$("PROVIS","PROSERV"))
     CALL WriteINI(_projekt$,"NetDirectory",_netpath$)
     CALL WriteINI(_projekt$,"LocalPath",_localpath$)
     CALL WriteINI(_projekt$,"RemotePath",_remotepath$)
 
     CALL WriteINI("DEBUG",pintname$ + "_net",_netpath$)
     CALL WriteINI("DEBUG",pintname$ + "_local",_localpath$)
     CALL WriteINI("DEBUG",pintname$ + "_remote",_remotepath$)
 
     Release$ = ReadConfig$(_projekt$,"Release")
     IF Release$ LIKE "*DEMO*" THEN ptitle$ = ptitle$ + " (DEMO)"
     SET HEADING "SmartPROVIS HauptÅbersicht"
     SET EDIT ATTR OFF 
     SET REQUEST HEADING "SmartPROVIS HauptÅbersicht"
     IF passed% = 1 THEN CALL DFile(2,"OFFICE\adrtemp" + _fpw$)
     IF passed% = 0 THEN CALL Fehler("Keine Zugangsberechtigung!","Wechsel zwischen den Feldern mit Tabulatortaste, Abschlu· mit <ENTER> !")
   WEND 
   IF demo% = 1 THEN 
     vcodema% = 0
     kÅrzel$ = "Co"
   ELSE 
     kÅrzel$ = KÅrzel.supervis
   END IF 
   REMOVE DIALOG ALL 
   ON ERROR GOTO ErrorHandler
   CALL WriteINI(_projekt$,"lastuser",name.supervis)
   FILE "MASUPER"
   INDEX codema.masuper
   SELECT FIRST 
   REDIM GMASuper$(1000,1)
   REDIM GMASuper%(1000,1)
   REDIM GMASuper$(1000)
   REDIM GMASuper%(1000)
   IF EXISTS (GMACodeMA%,codema.masuper) THEN 
     SELECT KEY codema.supervis FILE "MASUPER" INDEX codema.masuper
     i% = 0
     WHILE NOT EOF ("MASUPER") AND codema.masuper = codema.supervis
       GMASuper$(i%) = vonMitarbeiter.masuper
       GMASuper%(i%) = voncodema.masuper
       i% = i% + 1
       SELECT NEXT FILE "MASUPER" INDEX codema.masuper
     WEND 
     GMASuperCount% = i%
   END IF 
 END IF 
 IF EXISTS (GMACodema%,codema.pssetup) THEN 
   SELECT KEY codema.supervis FILE "pssetup" INDEX codema.pssetup
   GOldProdSu$ = OldProdSu.pssetup
   GSofortFile$ = SofortFile.pssetup
   ON ERROR GOTO lo2509051
   GSpGSparte% = GSpGSparte.pssetup
   GnurSpart% = GnurSpart.pssetup
   GNoAbsendInfo% = NoAbsendInfo.pssetup
   GoldScanVerf$ = oldScanVerf.pssetup
lo2509051: 
   ON ERROR GOTO ErrorHandler
 ELSE 
   GOldProdSu$ = UCASE$ (ReadINI$("SYSTEM","OldProdSu"))
   GSofortFile$ = LCASE$ (ReadINI$("SYSTEM","SofortFileAuswahl"))
   IF GSofortFile$ LIKE "leer" THEN GSofortFile$ = "n"
   BLANK FILE "PSSetup"
   codema.pssetup = GMACodeMA%
   nachname.pssetup = nachname.supervis
   Vorname.pssetup = Vorname.supervis
   OldProdSu.pssetup = GOldProdSu$
   SofortFile.pssetup = LEFT$ (GSofortFile$,1)
   ON ERROR GOTO lo2509051
   GSpGSparte.pssetup = 0
   GnurSpart% = 0
   GNoAbsendInfo% = 0
lo2509051: 
   ON ERROR GOTO ErrorHandler 
   STORE FILE "pssetup"
 END IF 
 IF GFPB% = - 1 THEN 
   GSpGSparte% = - 1
   GNoAbsendInfo% = - 1
 END IF 
 
 FILE "Supervis"
 INDEX codema.supervis
 END SUB 
 
 
 ' Undo
 ' ======================================================================
 ' Zweck:   VerÑnderungen des aktuellen Datensatzes zurÅcksetzen
 ' Nutzung: CALL UNDO()
 ' ======================================================================
 
SUB UNDO()
 IF MOD ("") OR NEW ("") THEN 
   REQUEST "énderungen wirklich verwerfen?","",130,req%
   IF req% = 1 THEN 
     IF NEW ("") THEN 
       BLANK 
     ELSE 
       SELECT FORM CURRENT 
     END IF 
   END IF 
 END IF 
 FORM 
 END SUB 
 
 
  

SUB PSelectNext()
 MOUSE OFF 
 cfile$ = FILE 
 SET STATUS "NÑchster Datensatz wird gesucht..."
 SELECT FORM NEXT 
 IF EOF (cfile$) THEN REQUEST "Letzter Datensatz","",2
 IF MNdisabled%("DATALOCK") THEN 
   REM -- öberspringen gesperrter DatensÑtze --
   WHILE Sperre.cfile$ <> 0 AND Sperre.cfile$ <> vcodema% AND NOT EOF (cfile$)
     MOUSE OFF 
     SELECT FORM NEXT 
     IF EOF (cfile$) THEN 
       IF UCASE$ (cfile$) <> GAkquiDat$ THEN REQUEST "Letzter Datensatz","",2
     END IF 
   WEND 
 ELSE 
   IF cfile$ LIKE "ADRESSEN" OR cfile$ LIKE "SUPERVIS" OR cfile$ LIKE "KVERTRAG" OR cfile$ LIKE "MAADR" THEN 
     IF GMASuperCount% > 0 THEN 
       WHILE IsMASuper%(codema.cfile$) <> - 1 AND NOT EOF (cfile$)
         MOUSE OFF 
         SELECT FORM NEXT 
         IF EOF (cfile$) THEN 
           IF UCASE$ (cfile$) <> GAkquiDat$ THEN REQUEST "Letzter Datensatz","",2
         END IF 
       WEND 
     END IF 
   END IF 
 END IF 

 SET STATUS "Bereit"
 MOUSE ON 
 FORM 
 END SUB 
 
SUB PSelectPrev()
 REM CALL Fehler("TEST","")
 MOUSE OFF 
 cfile$ = FILE 
 ON ERROR GOTO ErrorHandler
 SET STATUS "Vorheriger Datensatz wird gesucht..."
 SELECT FORM PREVIOUS 
 IF EOF (cfile$) THEN REQUEST "Erster Datensatz","",2
 ende1% = 0
 IF MNdisabled%("DATALOCK") THEN 
   REM -- öberspringen gesperrter DatensÑtze --
   cfile$ = FILE 
   WHILE Sperre.cfile$ <> 0 AND Sperre.cfile$ <> vcodema% AND NOT EOF (cfile$)
     MOUSE OFF 
     SELECT FORM PREVIOUS 
     IF EOF (cfile$) THEN 
       IF UCASE$ (cfile$) <> GAkquiDat$ THEN 
         REQUEST "Erster Datensatz","",2
         ende1% = - 1
       END IF 
     END IF 
   WEND 
 ELSE 
   IF cfile$ LIKE "ADRESSEN" OR cfile$ LIKE "SUPERVIS" OR cfile$ LIKE "KVERTRAG" OR cfile$ LIKE "MAADR" THEN 
     IF GMASuperCount% > 0 THEN 
       WHILE IsMASuper%(codema.cfile$) <> - 1 AND NOT EOF (cfile$)
         MOUSE OFF 
         SELECT FORM PREVIOUS 
         IF EOF (cfile$) THEN 
           IF UCASE$ (cfile$) <> GAkquiDat$ THEN REQUEST "Erster Datensatz","",2
         END IF 
       WEND 
     END IF 
   END IF 
 END IF 
 SET STATUS "Bereit"
 MOUSE ON 
 FORM 
 END SUB 
 
 
SUB 1PSelectNext()
 MOUSE OFF 
 SELECT FORM NEXT 
 MOUSE ON 
 END SUB 
 
SUB 1PSelectPrev()
 MOUSE OFF 
 SELECT FORM PREVIOUS 
 MOUSE ON 
 END SUB 
 
SUB PSelectFirst()
 MOUSE OFF 
 SELECT FORM FIRST 
 MOUSE ON 
 END SUB 
 
SUB PSelectLast()
 MOUSE OFF 
 EXECUTE "SELECT FORM LAST"
 MOUSE ON 
 END SUB 
 
 
  
  
 
 
 ' FileChanged
 ' ======================================================================
 ' Zweck:       testet auf VerÑnderungen in einem Datensatz
 ' Nutzung:     x%=FileChanged%(datei$)
 '              datei$  = Dateiname der zu prÅfenden Datei
 ' Ergebnis:    0       = keine VerÑnderungen
 '              1       = Datensatz wurde verÑndert oder neu erstellt
 ' ======================================================================
 
FUNCTION FileChanged%(datei$)
 MOUSE OFF 
 FileChanged% = 0
 IF MOD (datei$) OR NEW (datei$) THEN 
   MOUSE ON 
   REQUEST "Datensatz wurde verÑndert/neu erstellt.","Soll der Datensatz gespeichert werden?",130,req%
   IF req% = 1 THEN FileChanged% = 1
 END IF 
 MOUSE ON 
 END FUNCTION 
 
FUNCTION SelSerZiel%()
    opt1% = 2
    DIM dlg AS Dialog
    DIM control AS DialogControl
 
    Superbase.Dialogs.Add("SELZIEL")
    SET dlg = Superbase.Dialogs.SELZIEL
    dlg.Move(0,0,222,84)
    dlg.Caption = "Ziel auswÑhlen"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(0,1,222,56)
    control.Caption = "Serienbrief erstellen mit"
 
    SET control = dlg.Add("DialogIcon1","DialogIcon")
    control.Move(2,16,20,22)
    control.Icon = 2
 
    SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
    control.Move(30,19,106,11)
    control.Caption = "dBASE-Datei"
    control.Bind("opt1%")
    control.ValueOn = 1
 
    SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
    control.Move(30,33,106,11)
    control.Caption = "MS Excel-Datei"
    control.Bind("opt1%")
    control.ValueOn = 2
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(56,62,64,16)
    control.Default = 1
    control.Caption = "&OK"
    control.ReturnValue = 1
    DIALOG "SELZIEL",req%
    REMOVE DIALOG ALL 
    SelSerZiel% = opt1%
 END FUNCTION 



 ' geÑnderten Datensatz sichern
 ' ======================================================================
 
SUB Sichern()
 cfile$ = FILE 
 IF NEW (cfile$) OR MOD (cfile$) THEN 
   REQUEST "Soll der aktuelle Datensatz gesichert werden?","",130,req%
   IF req% = 1 THEN CALL FStore(cfile$)
 END IF 
 ENTER END 
 END SUB 
 
 
 ' FStore
 ' ======================================================================
 ' Zweck:       Sichert Daten eines Datensatzes
 ' Nutzung:     CALL FStore(datei$)
 '              datei$  = Datei deren Datensatz gesichert werden soll
 ' Hinweis:     Es kînnen Routinen zur SatzprÅfung und QuickCode-Gene-
 '              rierung ergÑnzt werden.
 ' ======================================================================
 ' 11.07.93    - TimeStamp wird erzeugt
 
SUB FStore(datei$)
 IF datei$ LIKE "MAADR" AND ( MOD (datei$) OR NEW (datei$)) THEN 
   notiz.maadr = notiz.maadr + " "
 END IF 
 IF datei$ LIKE GAdrDat$ THEN 
   IF MOD (datei$) OR NEW (datei$) THEN 
   ELSE 
     REM knr% = codeku.GAdrDat$
     REM SELECT KEY knr% LOCK FILE GAdrDat$ INDEX codeku.GAdrDat$
     REM RecStatus.GAdrDat$ = "c"
   END IF 
 END IF 
 IF MOD (datei$) OR NEW (datei$) THEN 
   MOUSE OFF 
   _OK% = 0
   cfile$ = FILE 
   FILE datei$
   SET STATUS "Sichere Datensatz..."
   Hinweis$ = ""
   SELECT CASE UCASE$ (datei$)
   CASE "FONDS"
      req% = 0
      IF Bewertungssumme.kvertrag <> Bewertungssumme.fonds THEN 
        t$ = "Soll der Wert aus dem Feld Bewertungssumme(Fondsmaske): " + LTRIM$ (p$)
        REQUEST t$,"in das Feld Bewertung(Vertragsmaske) Åbernommen werden?",135,req%
        IF req% = 1 THEN 
          SELECT KEY codevt.fonds LOCK FILE "KVERTRAG" INDEX lfdnr.kvertrag
          Bewertungssumme.kvertrag = Bewertungssumme.fonds
          RecStatus.Kvertrag = "c"
          STORE FILE "Kvertrag"
          UNLOCK CURRENT FILE "kvertrag"
          UNLOCK FILE "kvertrag"
        END IF 
      END IF 
     CASE UCASE$ (GTelDat$)
       IF art.GTelDat$ <> "" OR nummer.GTelDat$ <> "" THEN 
         IF codetel.GTelDat$ < 1 THEN CodeTEL.GTelDat$ = SER (GTelDat$,1)
         IF art.GTelDat$ = "" THEN art.GTelDat$ = "Telefon:"
         codeku.GTelDat$ = codeku.GAdrDat$
       ELSE 
         _ok% = - 1
       END IF 
     CASE "SCHADEN"
       IF Kurznotiz.schaden <> "" THEN 
         IF codesch < 1 THEN codesch = SER ("SCHADEN",1)
       ELSE 
         hinweis$ = "Es mu· mindestens eine Kurznotiz eingegeben werden!"
         _ok% = - 1
       END IF 
     CASE "IMMOGRUP"
       IF bezeichnung <> "" THEN 
         IF codegr.immogrup < 1 THEN codegr.immogrup = SER ("immogrup",1)
       ELSE 
         _OK% = - 1
         Hinweis$ = "Es mu· mindestens eine Gruppenbezeichnung eingegeben werden!"
       END IF 
     CASE GAdrDat$
       IF nachname.GAdrDat$ <> "" THEN 
         IF CodeKU.GAdrDat$ < 1 THEN Codeku.GAdrDat$ = SER (GAdrDat$,1)
         Hinweis$ = "Nachname ist erforderlich."
         IF DEFA$ = "MEGA" THEN 
           IF kostentrÑger.GAdrDat$ <> "" AND kostenstelle.GAdrDat$ <> 0 THEN 
             _OK% = - 1
             Hinweis$ = "Die Felder KostentrÑger und Kostenstelle dÅrfen nicht gleichzeitig ausgefÅllt sein!"
           END IF 
         END IF 
       ELSE 
         _OK% = - 1
         Hinweis$ = "Es mu· mindestens ein Name eingegeben werden!"
       END IF 
       req% = 0
     CASE "AKTIONEN"
       GAktion$ = Bezeichnung.aktionen
       codeak% = codeak.aktionen
       STORE FILE "Aktionen"
       FILE "akquise"
       MOUSE OFF 
       UPDATE Aktion.Akquise = GAktion$ WHERE codeak.akquise = codeak%
       END UPDATE 
       CLOSE FILE "akquise"
       CALL DFile(2,"OFFICE\akquise" + _fpw$)
       SELECT KEY codeak% LOCK FILE "Aktionen" INDEX codeak.aktionen
       IF bezeichnung.aktionen <> "" THEN 
         IF codeak.aktionen < 1 THEN codeak.aktionen = SER ("aktionen",1)
       ELSE 
         _OK% = - 1
         Hinweis$ = "Es mu· mindestens die Aktionsbezeichnung eingegeben werden!"
       END IF 
     CASE GAkquiDat$
       REM IF notiz.GAkquiDat$ = "" THEN _OK% = - 1
       Hinweis$ = ""
     CASE "GEADR"
       IF gesellschaft.geadr <> "" THEN 
         IF codege.geadr < 1 THEN codege.geadr = SER ("geadr",1)
       ELSE 
         _OK% = - 1
         Hinweis$ = "Name ist erforderlich."
       END IF 
     CASE "GEKOND"
       IF lfdnr.GEKOND < 1 THEN 
         _OK% = - 1
         Hinweis$ = ""
       END IF 
       IF srjn.gekond = "j" THEN 
         IF Haftung.gekond = 0 THEN 
           CALL Fehler("ACHTUNG: Sie haben vergessen den Haftungszeitraum fÅr die Stornoreserve auszufÅllen","")
         END IF 
       END IF 
     CASE "GEKONDM"
       IF lfdnr.GEKONDM < 1 THEN 
         _OK% = - 1
         Hinweis$ = ""
       END IF 
     CASE "IMMOGRUP"
       IF bezeichnung.immogrup = "" THEN _OK% = 1
       Hinweis$ = "Bezeichnung fÅr die Immobiliengruppe ist erforderlich."
     CASE "MAADR"
       IF nachname.maadr <> "" THEN 
         IF codema.maadr < 1 THEN codema.maadr = SER ("maadr",1)
       ELSE 
         Hinweis$ = "Nachname ist erforderlich."
         _OK% = - 1
       END IF 
     CASE "SPARTEN"
       IF sparte.sparten = "" THEN _OK% = - 1
       Hinweis$ = "Spartenbezeichnung ist erforderlich."
     CASE "OBJEKTE"
       IF Bezeichnung.objekte <> "" THEN 
         IF codeob.objekte < 1 THEN codeob.objekte = SER ("objekte",1)
       ELSE 
         Hinweis$ = "Bitte geben Sie erst eine Objektbezeichnung an."
         _OK% = - 1
       END IF 
     CASE "ANFRAGE"
       IF Bezeichnung.anfrage <> "" THEN 
         IF codeob.anfrage < 1 THEN codeob.anfrage = SER ("anfrage",1)
       ELSE 
         Hinweis$ = "Bitte geben Sie erst eine Objektbezeichnung an."
         _OK% = - 1
       END IF 
     CASE "SUPERVIS"
       IF Name.supervis = "" THEN _OK% = - 1
       Hinweis$ = "Bitte geben Sie einen Anmeldenamen ein."
       IF Nachname.supervis = "" THEN _OK% = - 1
       Hinweis$ = "Bitte geben Sie erst einen Nachnamen ein."
       KÅrzel.SUPERVIS = "XX"
     END SELECT 
     IF _OK% = 0 THEN 
       FILE datei$
       CALL QuickStore(datei$)
       SET STATUS "Datensatz wurde gesichert..."
     ELSE 
       IF Hinweis$ <> "" THEN CALL Fehler("Datensatz konnte nicht gesichert werden!",Hinweis$)
     END IF 
     SELECT CASE UCASE$ ( FILE )
     CASE GAkquiDat$
       IF FORM LIKE GAkquiDat$ THEN CALL SHOWCal()
   END SELECT 
   FILE cfile$
 ELSE 
   ON ERROR GOTO FStUnl150620001
   UNLOCK CURRENT FILE datei$
   UNLOCK FORM 
FStUnl150620001: 
   ON ERROR GOTO ErrorHandler
 END IF 
 REM CALL BMCheckMail()
 MOUSE ON 
 END SUB 
 
 
SUB MATimeStamp(ff$)
 REM CALL Fehler("MATimeStamp","")
 IF NEW (ff$) OR MOD (ff$) THEN 
   timestamp$ = DATE$ ( TODAY ,"yymmdd") + STR$ ( HRS ( NOW ) * 100 + MINS ( NOW ),"0000")
   timestamp% = VAL (timestamp$)
   MANAme.ff$ = GMANAme$
   MACodema.ff$ = GCodeMA%
   MaTimeStamp.ff$ = timestamp%
   MaTimeStamp1.ff$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm")
 END IF 
 END SUB 


 ' Speichern fÅr Massenverarbeitung
 ' ======================================================================
 
SUB QuickStore(datei$)
 MOUSE OFF 
 IF NOT OPEN ("stamm") THEN CALL DFile(3,"STAMM" + _fpw$)
 SELECT FIRST FILE "STAMM"
 NUMBASE "0000000000"
 DATEBASE "0d.mm.yyyy"
 timestamp$ = DATE$ ( TODAY ,"yymmdd") + STR$ ( HRS ( NOW ) * 100 + MINS ( NOW ),"0000")
 timestamp% = VAL (timestamp$)
 IF MOD (datei$) OR NEW (datei$) THEN 
   _OK% = 0
   cfile$ = FILE 
   FILE datei$
   SELECT CASE UCASE$ (datei$)
   CASE "MAKREBUC"
     QCodeMAKre.MAKreBuc = STR$ (codema.makrebuc,"000000") + STR$ (codeKre.makrebuc,"000000")
     QCodeMAKreBuc.MAKreBuc = STR$ (codema.makrebuc,"000000") + STR$ (codeKre.makrebuc,"000000") + STR$ (codeBuc.makrebuc,"000000")
   CASE "MAKREDIT"
     QCodeMAKre.MAKredit = STR$ (codema.makredit,"000000") + STR$ (codeKre.makredit,"000000")
   CASE "FINVDETA"
     CALL MATimeStamp("FINVDETA")
   CASE "FINV17","FINV18","FINV14","FINV11","FINV12","FINV12_1","FINV13","FINV13_1","FINV13_1","FINV17_1","FINV20","FINV19","FINV16","FINV16_1","FINV18_1","FINV21","FINV21_1"
     CALL MATimeStamp(datei$)
     STORE FILE datei$
     SELECT KEY GCodeAnalyse% LOCK FILE "FINVDETA" INDEX codeanalyse.finvdeta
     datum.FINVDETA = TODAY 
     CALL MATimeStamp("finvdeta")
     STORE FILE "finvdeta"
   CASE "FINV1","FINV1_1","FINV2","FINV2_1","FINV3","FINV3_1","FINV4","FINV4_1","FINV5","FINV6","FINV7","FINV8","FINV8_1","FINV9","FINV8_2","FINV8_3","FINV2B","FINV4B"
     CALL MATimeStamp(datei$)
     STORE FILE datei$
     SELECT KEY GCodeAnalyse% LOCK FILE "FINVDETA" INDEX codeanalyse.finvdeta
     datum.FINVDETA = TODAY 
     CALL MATimeStamp("finvdeta")
     STORE FILE "finvdeta"
   CASE "FINZIEL"
     CALL MATimeStamp("FINZIEL")
     STORE FILE "FINZIEL"
     SELECT KEY GCodeAnalyse% LOCK FILE "FINVDETA" INDEX codeanalyse.finvdeta
     Ziele.finvdeta = "X"
     CALL MATimeStamp("finvdeta")
     STORE FILE "finvdeta"
   CASE "FININVE"
     CALL MATimeStamp("FININVE")
     STORE FILE "FININVE"
     SELECT KEY GCodeAnalyse% LOCK FILE "FINVDETA" INDEX codeanalyse.finvdeta
     Investangaben.finvdeta = "X"
     CALL MATimeStamp("finvdeta")
     STORE FILE "finvdeta"
   CASE "FINAUSG"
     CALL MATimeStamp("FINAUSG")
     STORE FILE "FINAUSG"
     SELECT KEY GCodeAnalyse% LOCK FILE "FINVDETA" INDEX codeanalyse.finvdeta
     Ausgaben.finvdeta = "X"
     CALL MATimeStamp("finvdeta")
     STORE FILE "finvdeta"
   CASE "FINEINK"
     CALL MATimeStamp("FINEINK")
     CALL FINEINKBer1()
     STORE FILE "FINEINK"
     SELECT KEY GCodeAnalyse% LOCK FILE "FINVDETA" INDEX codeanalyse.finvdeta
     Einkommen.finvdeta = "X"
     CALL MATimeStamp("finvdeta")
     STORE FILE "finvdeta"
   CASE "FINADR"
     CALL MATimeStamp("FINADR")
     STORE FILE "FINADR"
     SELECT KEY GCodeAnalyse% LOCK FILE "FINVDETA" INDEX codeanalyse.finvdeta
     Adresse.finvdeta = "X"
     CALL MATimeStamp("finvdeta")
     STORE FILE "finvdeta"
   CASE "FINBERU"
     CALL MATimeStamp("finvdeta")
     STORE FILE "FINBERU"
     SELECT KEY GCodeAnalyse% LOCK FILE "FINVDETA" INDEX codeanalyse.finvdeta
     Beruf_Bank.finvdeta = "X"
     CALL MATimeStamp("FINVDETA")
     STORE FILE "finvdeta"
   CASE "FILIALE"
     IF LTRIM$ (name.filiale) = "" THEN name.filiale = "NEU"
   CASE "VPGEKOND"
     CALL MATimeStamp("VPGEKOND")
     fehl$ = ""
     IF apjn.vpgekond = "j" THEN 
       IF CourtageJN.vpgekond = "j" THEN 
         fehl$ = fehl$ + "Sie haben AP und Courtage angekreuzt,"
       END IF 
       IF APKVMonatJN.vpgekond LIKE "j" THEN 
         fehl$ = fehl$ + "Sie haben AP und AP nach KV-MonatsbeitrÑgen angekreuzt,"
       END IF 
       IF APPfMonatJN.vpgekond LIKE "j" THEN 
         fehl$ = fehl$ + "Sie haben AP und AP nach Pflegepflicht-MonatsbeitrÑgen angekreuzt,"
       END IF 
       IF MonatJN.vpgekond = "j" THEN 
         fehl$ = fehl$ + "Sie haben AP und AP nach MonatsbeitrÑgen angekreuzt,"
       END IF 
       IF PauschaleJN.vpgekond = "j" THEN 
         fehl$ = fehl$ + "Sie haben AP und AP Pauschale angekreuzt,"
       END IF 
       IF VDjn.vpgekond = "j" THEN 
         fehl$ = fehl$ + "Sie haben AP und AP nach Vertragsdauer angekreuzt,"
       END IF 
     ELSE 
       IF courtagejn.vpgekond = "j" THEN 
         IF APKVMonatJN.vpgekond LIKE "j" THEN 
           fehl$ = fehl$ + "Sie haben AP und AP nach KV-MonatsbeitrÑgen angekreuzt,"
         END IF 
         IF APPfMonatJN.vpgekond LIKE "j" THEN 
           fehl$ = fehl$ + "Sie haben AP und AP nach Pflegepflicht-MonatsbeitrÑgen angekreuzt,"
         END IF 
         IF APJN.vpgekond = "j" THEN 
           fehl$ = fehl$ + "Sie haben Courtage und AP angekreuzt,"
         END IF 
         IF MonatJN.vpgekond = "j" THEN 
           fehl$ = fehl$ + "Sie haben Courtage und AP nach MonatsbeitrÑgen angekreuzt,"
         END IF 
         IF PauschaleJN.vpgekond = "j" THEN 
           fehl$ = fehl$ + "Sie haben Courtage und AP Pauschale angekreuzt,"
         END IF 
         IF VDjn.vpgekond = "j" THEN 
           fehl$ = fehl$ + "Sie haben Courtage und AP nach Vertragsdauer angekreuzt,"
         END IF 
       ELSE 
         IF MonatJN.vpgekond = "j" THEN 
           IF APKVMonatJN.vpgekond LIKE "j" THEN 
             fehl$ = fehl$ + "Sie haben AP und AP nach KV-MonatsbeitrÑgen angekreuzt,"
           END IF 
           IF APPfMonatJN.vpgekond LIKE "j" THEN 
             fehl$ = fehl$ + "Sie haben AP und AP nach Pflegepflicht-MonatsbeitrÑgen angekreuzt,"
           END IF 
           IF PauschaleJN.vpgekond = "j" THEN 
             fehl$ = fehl$ + "Sie haben Courtage und AP Pauschale angekreuzt,"
           END IF 
           IF VDjn.vpgekond = "j" THEN 
             fehl$ = fehl$ + "Sie haben Courtage und AP nach Vertragsdauer angekreuzt,"
           END IF 
         ELSE 
           IF PauschaleJN.vpgekond = "j" THEN 
             IF APKVMonatJN.vpgekond LIKE "j" THEN 
               fehl$ = fehl$ + "Sie haben AP und AP nach KV-MonatsbeitrÑgen angekreuzt,"
             END IF 
             IF APPfMonatJN.vpgekond LIKE "j" THEN 
               fehl$ = fehl$ + "Sie haben AP und AP nach Pflegepflicht-MonatsbeitrÑgen angekreuzt,"
             END IF 
             IF VDjn.vpgekond = "j" THEN 
               fehl$ = fehl$ + "Sie haben Courtage und AP nach Vertragsdauer angekreuzt,"
             END IF 
           ELSE 
             IF VDjn.vpgekond = "j" THEN 
               IF APKVMonatJN.vpgekond LIKE "j" THEN 
                 fehl$ = fehl$ + "Sie haben AP und AP nach KV-MonatsbeitrÑgen angekreuzt,"
               END IF 
               IF APPfMonatJN.vpgekond LIKE "j" THEN 
                 fehl$ = fehl$ + "Sie haben AP und AP nach Pflegepflicht-MonatsbeitrÑgen angekreuzt,"
               END IF 
             END IF 
           END IF 
         END IF 
       END IF 
     END IF 
     IF fehl$ <> "" THEN 
       CALL Fehler(fehl$,"Sie dÅrfen sich nur fÅr eine dieser Optionen entscheiden! BITTE KORRIGIEREN!")
     END IF 
 
     
   CASE "ZEINVOR"
     IF kondart% = 0 THEN 
       REM AP.zeingan1 = "j"
       REM Buchungstext.zeinvor = "Abschlu·: " + VS_Nr.zeinvor
       kondart.zeinvor = kondart%
     END IF 
     IF kondart% = 1 THEN 
       REM CP.zeingan1 = "j"
       REM Buchungstext.zeinvor = "Courtage: " + VS_Nr.zeinvor
       kondart.zeinvor = kondart%
     END IF 
     IF kondart% = 2 THEN 
       REM Pf.zeingan1 = "j"
       REM Buchungstext.zeinvor = "Pflege: " + VS_Nr.zeinvor
       kondart.zeinvor = kondart%
     END IF 
     IF kondart% = 3 THEN 
       REM Ersatz.zeingan1 = "j"
       REM Buchungstext.zeinvor = "Ersatz: " + VS_Nr.zeinvor
       kondart.zeinvor = kondart%
     END IF 
     BewertungEU.zeinvor = VAL ( STR$ (Bewertung.zeinvor / Umrechnung.zeinvor,"99999999.00"))
     SREU.zeinvor = VAL ( STR$ (SR.zeinvor / Umrechnung.zeinvor,"99999999.00"))
   CASE "AGDIR"
     MOUSE OFF 
     FILE "AGDIR"
     TimeStamp = TimeStamp%
     MANAme = GMANAme$
     MACodema = GCodeMA%
     codeagdir% = codeagdir.agdir
     REM 14052003 IF Workstation% > 0 THEN Workstation.agdir = Workstation%
     IF RecStatus.agdir <> "n" THEN RecStatus.agdir = "c"
     STORE FILE "AGDIR"
     UNLOCK CURRENT FILE "AGDIR"
     UNLOCK FILE "AGDIR"
     IF GDirektion$ <> direktion.agdir THEN 
       GDirektion$ = direktion.agdir
       IF EXISTS (codeagdir%,codeagdir.maadr) THEN 
         FILE "maadr"
         INDEX codeagdir.maadr
         SELECT FIRST 
         SELECT KEY codeagdir% LOCK FILE "maadr" INDEX codeagdir.maadr
         WHILE NOT EOF ("maadr") AND codeagdir.maadr = codeagdir%
            IF codeagdir.maadr = codeagdir% THEN 
              direktion.maadr = GDirektion$
              TimeStamp = TimeStamp%
              MANAme = GMANAme$
              MACodema = GCodeMA%
              IF Workstation% > 0 THEN 
                
                REM 14052003 Workstation.maadr = Workstation%
              END IF 
              RecStatus = "c"
              STORE FILE "maadr"
              UNLOCK CURRENT FILE "maadr"
              UNLOCK FILE "maadr"
            ELSE 
              SELECT LAST 
            END IF 
            SELECT NEXT LOCK 
         WEND 
         UNLOCK CURRENT FILE "maadr"
         UNLOCK FILE "maadr"
       END IF 
     END IF 
     MOUSE ON 
     GDirektion$ = ""
     FILE "agdir"
   CASE "SPEZKOND"
     CALL MATimeStamp("SPEZKOND")
      IF codema.spezkond > 0 THEN 
        SELECT KEY codema.spezkond FILE "maadr" INDEX codema.maadr
        REM Agentur.SPEZKOND = Nachname.maadr + "," + Vorname.maadr
        QCodeVTMA.spezkond = STR$ (codevt.spezkond,"000000") + STR$ (codema.spezkond,"000000")
        QCodeGEVAMA.spezkond = STR$ (codege.spezkond,"000000") + STR$ (codeva.spezkond,"000000") + STR$ (codema.spezkond,"000000")
        QCodeVTsort.spezkond = STR$ (codevt.spezkond,"000000") + STR$ (sortkond.spezkond,"000000")
      END IF 
   CASE "TARIF"
     CALL MATimeStamp("TARIF")
     codeTARIF% = codeTARIF.TARIF
     BKursZeit.TARIF = NOW 
     QuickVTBerDat.TARIF = DATE$ (BKursTag.TARIF,"yyyymm0d") + LEFT$ ( TIME$ (BKursZeit.TARIF,"hh:mm:ss"),2) + MID$ ( TIME$ (BKursZeit.TARIF,"hh:mm:ss"),4,2) + RIGHT$ ( TIME$ (BKursZeit.TARIF,"hh:mm:ss"),2)
     CALL TFormelAusw()
     STORE FILE "Tarif"
     UNLOCK CURRENT FILE "TARIF"
     UNLOCK FILE "Tarif"
     IF FondsKZ.tarif LIKE "j" THEN 
       ixkuktoz% = FILEINFO ("TARIF",1)
       DIM ixkukto$(ixkuktoz%)
       FILLARRAY ixkukto$,1
       BLANK FILE "KURSHIST"
       a% = CopyRecord%("TARIF","KURSHIST")
       REM FOR j% = 0 TO ixkuktoz% - 1
         REM feld1$ = ixkukto$(j%) + ".KURSHIST"
         REM feld2$ = ixkukto$(j%) + ".TARIF"
         REM IF feld1$ LIKE "AGSperre*" OR feld2$ LIKE "AGSperre*" THEN 
         REM ELSE 
           REM feld1$$ = feld2$$
         REM END IF 
       REM NEXT j%
       codetarifhist.kurshist = SER ("KURSHIST",1)
       STORE FILE "KURSHIST"
       UNLOCK CURRENT FILE "KURSHIST"
       UNLOCK FILE "kurshist"
     END IF 
     
     REM CALL Fehler("","")
       IF EXISTS (codeTARIF%,codeTARIF.kvertrag) AND GTarifname$ <> Tarif.Tarif THEN 
         MOUSE OFF 
         REQUEST "Es wird nachfolgend der geÑnderte Tarifname","in die betroffenen VertrÑge eingetragen!"
         FILE "Kvertrag"
         INDEX codeTARIF.kvertrag
         SELECT FIRST 
         IF RECCOUNT ("Kvertrag") > 0 THEN 
           SELECT KEY codeTARIF% LOCK FILE "Kvertrag" INDEX codeTARIF.kvertrag
           i% = 0
           WHILE NOT EOF ("Kvertrag") AND codeTARIF.kvertrag = codeTARIF%
             i% = i% + 1
             TarifFo.kvertrag = Tarif.Tarif
             STORE FILE "Kvertrag"
             UNLOCK CURRENT FILE "KVERTRAG"
             UNLOCK FILE "kvertrag"
             SELECT NEXT LOCK 
             SET STATUS STR$ (i%,"999999") + " DatensÑtze angepa·t!"
           WEND 
           UNLOCK CURRENT FILE "KVERTRAG"
           UNLOCK FILE "kvertrag"
         SET STATUS ""
         END IF 
       END IF 
   CASE "VPRODUKT"
     CALL MATimeStamp("VPRODUKT")
     codevp% = codevp.vprodukt
     QCodeGEVA.vprodukt = STR$ (CodeGE.vprodukt,"000000") + STR$ (Codeva.vprodukt,"000000")
     QCodeGEVA$ = QCodeGEVA.vprodukt
     GesSpa.Vprodukt = Gesellschaft.vprodukt + Sparte.vprodukt
     IF vbewert% <> Bewertungsbasis.vprodukt THEN 
       notiz.vprodukt = notiz.vprodukt + CHR$ (13) + CHR$ (10) + "énderung Teiler am: " + DATE$ ( TODAY ,"0d.mm.yyyy") + " alter Wert: " + STR$ (vbewert%,",99999999.0000")
     END IF 
     CALL VFormelAusw()
     STORE FILE "VPRODUKT"
     UNLOCK CURRENT FILE "vprodukt"
     UNLOCK FILE "vprodukt"
     REM CALL Fehler("","")
     IF vbewert% <> Bewertungsbasis.vprodukt AND FirmaEinhTab.stamm <> "j" THEN 
       IF EXISTS (codevp%,codevp.kvertrag) THEN 
      a$ = "Nachfolgend werden die Einheiten aller betroffenen VertrÑge geÑndert! Wenn Sie schon Provisionsabrechnungen gefahren haben, bei denen die Einheiten aus dem Vertrag verwendet werden, mÅssen Sie zur Richtigstellung eine Korrekturbuchung fahren!"
         CALL Fehler("Sie haben die Bewertungsbasis fÅr die Einheitenberechnung geÑndert!",a$)
        REQUEST "Mîchten Sie die Berechnung jetzt durchfÅhren lassen?","Sie mÅssen sich allein im Programm befinden!",135,req%
        IF req% = 1 THEN 
         FILE "kvertrag"
         INDEX codevp.kvertrag
         SELECT FIRST 
         SELECT KEY codevp% LOCK FILE "KVERTRAG" INDEX codevp.kvertrag
         WHILE NOT EOF ("KVERTRAG") AND codevp.kvertrag = codevp%
           IF Bewertungssumme.kvertrag <> 0 THEN 
             bewert% = Bewertungsbasis.vprodukt
             IF bewert% = 0 THEN bewert% = 1
             IF Bewertungsbasis.vprodukt = - 1 THEN 
               Einheiten.kvertrag = 0
             ELSE 
               einh$ = STR$ (Bewertungssumme.kvertrag / bewert%,",9999999999.0000")
               Einheiten.kvertrag = VAL (einh$)
             END IF 
           END IF 
           STORE FILE "KVERTRAG"
           UNLOCK CURRENT FILE "KVERTRAG"
           UNLOCK FILE "kvertrag"
           SELECT NEXT LOCK FILE "kvertrag" INDEX codevp.kvertrag
         WEND 
         UNLOCK CURRENT FILE "KVERTRAG"
         UNLOCK FILE "kvertrag"
        END IF 
       END IF 
     END IF 
     IF AutomNetBer.vprodukt <> "j" AND mwst.vprodukt <> 0 THEN 
       CALL Fehler ("Es wurde festgestellt, da· bei diesem Produkt eine Versicherungssteuer hinterlegt wurde, aber die Checkbox zur automatischen Berechnung nicht aktiviert wurde!","Bitte prÅfen Sie diesen Sachverhalt!")
     END IF 
     IF vst% <> mwst.vprodukt THEN 
       okre% = - 1
       IF AutomNetBer.vprodukt <> "j" THEN 
         a0$ = "Sie kînnen in der nachfolgenden Frage veranlassen, da· die Berechnung fÅr dieses Produkt trotzdem durchgefÅhrt wird!"
         CALL Fehler("Die automatische Berechnung fÅr Brutto-/Nettobeitrag an Hand der VST des zugehîrigen Produktes ist noch deaktiviert.",a0$)
         REQUEST "Mîchten Sie die Berechnung jetzt durchfÅhren lassen?","Sie mÅssen sich allein im Programm befinden!",135,req%
         IF req% = 1 THEN 
           okre% = - 1
         ELSE 
           okre% = 0
         END IF 
       END IF 

       IF EXISTS (QCodeGEVA$,QuickGEVA.kvertrag) AND okre% = - 1 THEN 
         opt% = 2
         MOUSE OFF 
         REM REQUEST "Es wird nachfolgend die geÑnderte Versicherungssteuer","in die betroffenen VertrÑge eingetragen!"
         a$ = "z.B. hatten Sie die BeitrÑge (im Feld Beitrag der Vertragsmaske) als BruttobeitrÑge erfa·t? Sind die BeitrÑge durch einen GDV-Import entstanden (Nettobeitrag + ZuschlÑge, aber ohne VST)?"
         CALL Fehler("Es wurde festgestellt, da· Sie die Versicherungssteuer geÑndert haben! Nachfolgend mÅssen Sie entscheiden, wie die Netto/Brutto - Berechnung bereits vorhandener VertrÑge des Produktes realisiert werden sollen.",a$)

         DIM dlg AS Dialog
         DIM control AS DialogControl
 
         Superbase.Dialogs.Add("Dialogname")
         SET dlg = Superbase.Dialogs.Dialogname
         dlg.Move(0,0,330,124)
         dlg.Caption = "Verrechnung der Versicherungssteuer"
         dlg.FontName = "MS Sans Serif"
         dlg.FontSize = 8
 
         SET control = dlg.Add("DialogFrame1","DialogFrame")
         control.Move(0,3,329,100)
         control.Caption = "Parametersetzung fÅr die VST-Verrechnung"
 
         SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
         control.Move(5,22,285,13)
         control.Caption = "im Feld Beitrag wurde der Bruttobeitrag eingetragen, von hier aus berechnen"
         control.Bind("opt%")
         control.ValueOn = 1
 
 
         SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
         control.Move(5,42,300,13)
         control.Caption = "im Feld Beitrag wurde der Nettobeitrag (GDV-Import) eingetragen, von hier aus berechnen"
         control.Bind("opt%")
         control.ValueOn = 2
 

         SET control = dlg.Add("DialogOptionButton5","DialogOptionButton")
         control.Move(5,62,285,13)
         control.Caption = "im Feld Netto-Beitrag steht der Nettobeitrag , von hier aus berechnen"
         control.Bind("opt%")
         control.ValueOn = 3
 

         SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
         control.Move(92,106,58,15)
         control.Default = 1
         control.Caption = "&OK"
         control.ReturnValue = 1
 
         SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
         control.Move(152,106,57,15)
         control.Caption = "&Abbruch"
         control.ReturnValue = 0
         DIALOG "Dialogname",req%
         REMOVE DIALOG ALL 
         IF req% <> 1 THEN GOTO e071220061

         v8$ = "j":REM Antrag
         v0$ = "j":REM lebend
         v1$ = "j":REM leben / kurzfristig / unterjÑhrig 
         REM DIM dlg AS Dialog
         REM DIM control AS DialogControl
 
         Superbase.Dialogs.Add("Dialogname")
         SET dlg = Superbase.Dialogs.Dialogname
         dlg.Move(0,0,218,177)
         dlg.Caption = "Anpassung VSt"
         dlg.FontName = "MS Sans Serif"
         dlg.FontSize = 8
 
         SET control = dlg.Add("DialogLabel12","DialogLabel")
         control.Move(5,1,120,20)
         control.Caption = "Anpassung der VertrÑge die den folgenden Vertragsstatus besitzen"
 
         SET control = dlg.Add("DialogLabel13","DialogLabel")
         control.Move(155,3,86,9)
         control.Caption = "anpassen"
 
         SET control = dlg.Add("DialogLabel1","DialogLabel")
         control.Move(5,19,124,9)
         control.Caption = "lebend"
 
         SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
         control.Move(168,19,12,9)
         control.Caption = ""
         control.Bind("v0$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel2","DialogLabel")
         control.Move(5,30,124,10)
         control.Caption = "leben/kurzfristig/unterjÑhrig"
 
         SET control = dlg.Add("DialogCheckBox3","DialogCheckBox")
         control.Move(168,30,12,10)
         control.Caption = ""
         control.Bind("v1$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel10","DialogLabel")
         control.Move(5,41,124,10)
         control.Caption = "ruhend/Anwartschaft"
 
         SET control = dlg.Add("DialogCheckBox5","DialogCheckBox")
         control.Move(168,41,12,10)
         control.Caption = ""
         control.Bind("v2$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel3","DialogLabel")
         control.Move(5,57,124,10)
         control.Caption = "ruhend/beitragsfrei"
 
         SET control = dlg.Add("DialogCheckBox7","DialogCheckBox")
         control.Move(168,56,12,9)
         control.Caption = ""
         control.Bind("v3$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel4","DialogLabel")
         control.Move(5,73,124,10)
         control.Caption = "beitragsfrei"
 
          SET control = dlg.Add("DialogCheckBox9","DialogCheckBox")
         control.Move(168,72,12,9)
         control.Caption = ""
         control.Bind("v4$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel5","DialogLabel")
         control.Move(5,84,124,10)
         control.Caption = "beitragsfrei durch Leistung"
 
         SET control = dlg.Add("DialogCheckBox11","DialogCheckBox")
         control.Move(168,84,12,10)
         control.Caption = ""
         control.Bind("v5$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel6","DialogLabel")
         control.Move(5,97,124,10)
         control.Caption = "Beitragsstundung"
 
         SET control = dlg.Add("DialogCheckBox13","DialogCheckBox")
         control.Move(168,97,12,10)
         control.Caption = ""
         control.Bind("v6$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel8","DialogLabel")
         control.Move(5,110,124,10)
         control.Caption = "Fremdvertrag"
 
         SET control = dlg.Add("DialogCheckBox19","DialogCheckBox")
         control.Move(168,108,12,10)
         control.Caption = ""
         control.Bind("v7$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel7","DialogLabel")
         control.Move(5,128,124,9)
         control.Caption = "Antrag"
 
         SET control = dlg.Add("DialogCheckBox15","DialogCheckBox")
         control.Move(168,127,12,10)
         control.Caption = ""
         control.Bind("v8$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel9","DialogLabel")
         control.Move(5,140,124,10)
         control.Caption = "Sonstiges"
 
         SET control = dlg.Add("DialogCheckBox17","DialogCheckBox")
         control.Move(168,139,12,9)
         control.Caption = ""
         control.Bind("v9$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
         control.Move(118,156,42,13)
         control.Default = 1
         control.Caption = "OK"
         control.ReturnValue = 1
 
         SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
         control.Move(162,156,43,13)
         control.Caption = "Abbruch"
         control.ReturnValue = 0
         DIALOG "Dialogname",req%
         REMOVE DIALOG "Dialogname"
 

         FILE "Kvertrag"
         INDEX QuickGEVA.kvertrag
         SELECT FIRST 

         IF RECCOUNT ("Kvertrag") > 0 AND req% = 1 THEN 
           CALL VStAnpass(QCodeGEVA$,v0$,v1$,v2$,v3$,v4$,v5$,v6$,v7$,v8$,v9$,opt%,vst%)
         END IF 
       END IF 
     END IF 
e071220061: 
   CASE GConDat$
     CALL MATimeStamp(GConDat$)
     SELECT KEY codeku.GConDat$ FILE GadrDat$ INDEX codeku.GADRDat$
     Workstation.GConDat$ = Workstation.GadrDat$
     QWoNo.GConDat$ = STR$ (Workstation.GCondat$,"000000") + STR$ (CodeKey.GConDat$,"000000")
     RecStatus.GConDat$ = "c"
   CASE GDokDat$
     CALL MATimeStamp(datei$)
     QWoNo.GDokDat$ = STR$ (Workstation.GDokDat$,"000000") + STR$ (CodeDOK.GDokDat$,"000000")
     QuickCodekuGru.GDokDat$ = STR$ (codeku.GDokDat$,"000000") + Gruppe.GDokDat$
     RecStatus.GDokDat$ = "c"
   CASE "DOKUMENT","DOKBCK"
     CALL MATimeStamp(datei$)
     SELECT KEY codeku.datei$ FILE GadrDat$ INDEX codeku.GADRDat$
     Workstation.datei$ = Workstation.GadrDat$
     QWoNo.datei$ = STR$ (Workstation.datei$,"000000") + STR$ (CodeDOK.datei$,"000000")
     QuickCodekuGru.dokument = STR$ (codeku.datei$,"000000") + Gruppe.datei$
     RecStatus.GDokDat$ = "c"
   CASE "MAADR"
     Pof% = 0
     CALL MATimeStamp("MAADR")
     REM CALL Fehler("MA","")
         p1% = 0
         p2% = 0
         IF GMaAnrede$ <> Anrede.maadr THEN p1% = 1
         IF GMaAnrede2$ <> Anrede2.maadr THEN p2% = 1
         IF GMaVorname$ <> Vorname.maadr THEN p1% = 1
         IF GMaVorname2$ <> Vorname2.maadr THEN p2% = 1
         IF GMaNachname$ <> Nachname.maadr THEN p1% = 1
         IF GMaNachname2$ <> Nachname2.maadr THEN p2% = 1
         IF GMaFirmaName$ <> FirmaName.maadr THEN p1% = 1
         IF GMaFirmaName2$ <> FirmaName2.maadr THEN p2% = 1
         IF GMaOrt$ <> Ort.maadr THEN p1% = 1
         IF GMaOrt2$ <> Ort2.maadr THEN p2% = 1
         IF GMaStrasse$ <> Stra·e.maadr THEN p1% = 1
         IF GMaStrasse2$ <> Strasse2.maadr THEN p2% = 1
         IF GMaPLZ$ <> plz.maadr THEN p1% = 1
         IF GMaPLZ2$ <> plz2.maadr THEN p2% = 1
         IF GMALand$ <> Land.maadr THEN p1% = 1
         IF GMALand2$ <> Land2.maadr THEN p2% = 1
         ooo% = - 1
         IF FORM LIKE "ver*" OR FORM LIKE "ker*" OR FORM LIKE "rer*" OR FORM LIKE "wer*" THEN 
           p1% = 0
           p2% = 0
           ooo% = 0
         END IF 
     REM AND stra·e.maadr <> "" AND ort.maadr <> "" AND nachname.maadr
     IF (Postanschrift.maadr = "" OR p1% = 1) AND Nachname.maadr <> "NEU" AND ooo% = - 1 THEN 
       IF Postanschrift.maadr = "" THEN 
         req% = 1
       ELSE 
         IF Postanschrift.maadr = "" THEN 
           req% = 1
         ELSE 
           REQUEST "Adressfelder in Hauptanschrift wurden geÑndert!","Soll das Postanschriftsfeld neu erzeugt werden?",130,req%
         END IF 
       END IF 
       IF req% = 1 THEN 
         P1$ = ""
         IF firmaName.maadr <> "" THEN p1$ = firmaName.maadr + CHR$ (13) + CHR$ (10)
         IF Anrede.maadr <> "" THEN p1$ = p1$ + anrede.maadr + " "
         IF Vorname.maadr <> "" THEN p1$ = p1$ + Vorname.maadr + " "
         p1$ = p1$ + NachName.maadr + CHR$ (13) + CHR$ (10)
         p1$ = p1$ + Stra·e.maadr + CHR$ (13) + CHR$ (10)
         p1$ = p1$ + plz.maadr + " " + Ort.maadr + CHR$ (13) + CHR$ (10)
         p1$ = p1$ + Land.maadr + CHR$ (13) + CHR$ (10)
         Postanschrift.maadr = p1$
         SELECT CASE UCASE$ ( LEFT$ (anrede.maadr,3))
         CASE "HER"
           briefanrede1.maadr = "Sehr geehrter Herr " + nachname.maadr + ","
         CASE "FRA","FR."
           briefanrede1.maadr = "Sehr geehrte Frau " + nachname.maadr + ","
         CASE "FRé","FRL"
           briefanrede1.maadr = "Sehr geehrtes FrÑulein " + nachname.maadr + ","
         CASE "FA.","FIR",""
           briefanrede1.maadr = "Sehr geehrte Damen und Herren,"
         CASE "FAM"
           briefanrede1.maadr = "Sehr geehrte Familie " + nachname.maadr + ","
         CASE "EHE"
           briefanrede1.maadr = "Sehr geehrte Eheleute " + nachname.maadr + ","
         CASE ELSE 
           briefanrede1.maadr = "Sehr geehrte Damen und Herren,"
         END SELECT 
 
       END IF 
     END IF 
     IF ( LTRIM$ (nachname2.maadr) = "" OR LTRIM$ (nachname2.maadr) LIKE "Neu") AND LTRIM$ (vorname2.maadr) = "" THEN 
       Anrede2.maadr = anrede.maadr
       firmaName2.maadr = firmaName.maadr
       nachname2.maadr = nachname.maadr
       vorname2.maadr = vorname.maadr
       ort2.maadr = ort.maadr
       strasse2.maadr = stra·e.maadr
       plz2.maadr = plz.maadr
       Briefanrede2.maadr = Briefanrede1.maadr
       TelefonMA2.maadr = Telefon1.maadr
       FaxMa2.maadr = TeleFax.maadr
       Handyma2.maadr = Telefon2.maadr
       emailma2.maadr = email.maadr
       IF Postanschrift2.maadr = "" THEN Postanschrift2.maadr = Postanschrift.maadr
     END IF 
     IF (Postanschrift2.maadr = "" OR p2% = 1) AND ooo% = - 1 THEN 
       IF Postanschrift2.maadr = "" THEN 
         req% = 1
       ELSE 
         REQUEST "Adressfelder in Zweitanschrift wurden geÑndert!","Soll das Postanschriftsfeld2 neu erzeugt werden?",130,req%
       END IF 
       IF req% = 1 THEN 
         P1$ = ""
         IF firmaName2.maadr <> "" THEN p1$ = firmaName2.maadr + CHR$ (13) + CHR$ (10)
         IF Anrede2.maadr <> "" THEN p1$ = p1$ + anrede2.maadr + " "
         IF Vorname2.maadr <> "" THEN p1$ = p1$ + Vorname2.maadr + " "
         p1$ = p1$ + NachName2.maadr + CHR$ (13) + CHR$ (10)
         p1$ = p1$ + Strasse2.maadr + CHR$ (13) + CHR$ (10)
         p1$ = p1$ + plz2.maadr + " " + Ort2.maadr + CHR$ (13) + CHR$ (10)
         p1$ = p1$ + Land2.maadr + CHR$ (13) + CHR$ (10)
         Postanschrift2.maadr = p1$
         SELECT CASE UCASE$ ( LEFT$ (anrede2.maadr,3))
         CASE "HER"
           briefanrede2.maadr = "Sehr geehrter Herr " + nachname2.maadr + ","
         CASE "FRA","FR."
           briefanrede2.maadr = "Sehr geehrte Frau " + nachname2.maadr + ","
         CASE "FRé","FRL"
           briefanrede2.maadr = "Sehr geehrtes FrÑulein " + nachname2.maadr + ","
         CASE "FA.","FIR",""
           briefanrede2.maadr = "Sehr geehrte Damen und Herren,"
         CASE "FAM"
           briefanrede2.maadr = "Sehr geehrte Familie " + nachname2.maadr + ","
         CASE "EHE"
           briefanrede2.maadr = "Sehr geehrte Eheleute " + nachname2.maadr + ","
         CASE ELSE 
           briefanrede2.maadr = "Sehr geehrte Damen und Herren,"
         END SELECT 
 
       END IF 
     END IF 



     Stornoreserve.maadr = VAL ( STR$ (StornoreserveEu.maadr * umrechnung.stamm,"999999999.00"))
     stoeu$ = STR$ (StornoEuAb.maadr,"999999999.00")
     stoeu% = VAL (stoeu$)
     StornoEuAb.maadr = stoeu%
     IF StornoEuAb.maadr <> 0 THEN 
       Stornoab.maadr = VAL ( STR$ (StornoEuAb.maadr * umrechnung.stamm,"999999999.00"))
     ELSE 
       Stornoab.maadr = 0
     END IF 
     REM IF StornoAb.maadr <> 0 THEN 
       REM StornoEUab.maadr = VAL ( STR$ (StornoAb.maadr / umrechnung.stamm,"999999999.00"))
     REM ELSE 
     REM END IF 

     AuszahlSchwEU.maadr = VAL ( STR$ (AuszahlSchw.maadr / umrechnung.stamm,"999999999.00"))
     AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / umrechnung.stamm,"999999999.00"))
     IstBWS.maadr = BWSGes.maadr + SBwsges.maadr
     istbwseu.maadr = VAL ( STR$ (IstBWS.maadr / umrechnung.stamm,"999999999.00"))
     QNameCodema.maadr = LTRIM$ (NAchnaME.maadr) + STR$ (codema.maadr,"000000")
     AuszProvABGesEU.maadr = VAL ( STR$ (AuszProvABGes.maadr / umrechnung.stamm,"999999999.00"))
     IF Gnichtaktiv$ <> nichtaktiv.maadr THEN 
       Gnichtaktiv$ = nichtaktiv.maadr
       STORE FILE "maadr"
       UNLOCK CURRENT FILE "maadr"
       UNLOCK FILE "maadr"
       acodema% = codema.maadr
       REM CALL StruAll()
       SELECT KEY acodema% FILE "maadr" INDEX codema.maadr
     END IF 
   CASE GAdrDat$,"ADRESSEN","BCKONTAK","ADRE1"
     CALL MATimeStamp(GADRDat$)
     IF briefanrede.GADRDat$ = "" OR GenBanrede.stamm = 1 THEN 
     SELECT CASE UCASE$ ( LEFT$ (anrede.GADRDat$,3))
     CASE "HER"
       IF UCASE$ (Nachname.GADRDat$) <> "NEU" THEN briefanrede.GAdrDat$ = "Sehr geehrter Herr " + nachname.GAdrDat$ + ","
       Geschlecht.GAdrDat$ = "j"
     CASE "FRA","FR."
       IF UCASE$ (Nachname.GADRDat$) <> "NEU" THEN briefanrede.GAdrDat$ = "Sehr geehrte Frau " + nachname.GAdrDat$ + ","
       Geschlecht.GAdrDat$ = "n"
     CASE "FRé","FRL"
       IF UCASE$ (Nachname.GADRDat$) <> "NEU" THEN briefanrede.GAdrDat$ = "Sehr geehrtes FrÑulein " + nachname.GAdrDat$ + ","
       Geschlecht.GAdrDat$ = "n"
     CASE "FA.","FIR",""
       IF UCASE$ (Nachname.GADRDat$) <> "NEU" THEN briefanrede.GAdrDat$ = "Sehr geehrte Damen und Herren,"
       Geschlecht.GAdrDat$ = ""
     CASE "FAM"
       IF UCASE$ (Nachname.GADRDat$) <> "NEU" THEN briefanrede.GAdrDat$ = "Sehr geehrte Familie " + nachname.GAdrDat$ + ","
       Geschlecht.GAdrDat$ = ""
     CASE "EHE"
       IF UCASE$ (Nachname.GADRDat$) <> "NEU" THEN briefanrede.GAdrDat$ = "Sehr geehrte Eheleute " + nachname.GAdrDat$ + ","
       Geschlecht.GAdrDat$ = ""
     CASE ELSE 
       IF UCASE$ (Nachname.GADRDat$) <> "NEU" THEN briefanrede.GAdrDat$ = "Sehr geehrte Damen und Herren,"
       Geschlecht.GAdrDat$ = ""
     END SELECT 
     IF GenBanrede.stamm = 1 AND postbriefanrede.GADRDat$ = "" THEN postbriefanrede.GADRDat$ = briefanrede.GAdrDat$
   END IF 
   IF PostBriefanrede.adressen = "" THEN PostBriefanrede.adressen = Briefanrede.adressen
     Pof% = 0
     zero.GAdrDat$ = 0
     QNachname.GAdrDat$ = VSNRPack$(nachname.GAdrDat$)
     QVorname.GAdrDat$ = VSNRPack$(vorname.GAdrDat$)
     QOrt.GAdrDat$ = VSNRPack$(Ort.GAdrDat$)
     QStra·e.GAdrDat$ = VSNRPack$(Stra·e.GAdrDat$)
     QAusweisnr.GAdrDat$ = VSNRPack$(Ausweisnr.GAdrDat$)
     QMatchcode.GAdrDat$ = VSNRPack$(Matchcode.GAdrDat$)
     QPLZ.GAdrDat$ = VSNRPack$(PLZ.GAdrDat$)
     QGeburtsname.GAdrDat$ = VSNRPack$(Geburtsname.GAdrDat$)
     IF codema.GadrDat$ > 0 THEN 
       SELECT KEY codema.GADRDat$ FILE "MAADR" INDEX codema.maadr
       Workstation.GAdrDat$ = Workstation.maadr
       QWoNo.GAdrDat$ = STR$ (Workstation.GAdrDat$,"000000") + STR$ (codeku.GAdrDat$,"000000")
     END IF 
     RecStatus.GAdrDat$ = "c"
     IF Geburtstag.adressen > 0 THEN GebDatKurz.adressen = LEFT$ ( DATE$ (Geburtstag.adressen,"0dmmyyyy"),4)
     IF K1Geburtstag.adressen > 0 THEN GebDatKurz1.adressen = LEFT$ ( DATE$ (K1Geburtstag.adressen,"0dmmyyyy"),4)
     IF K2Geburtstag.adressen > 0 THEN GebDatKurz2.adressen = LEFT$ ( DATE$ (K2Geburtstag.adressen,"0dmmyyyy"),4)
     IF K3Geburtstag.adressen > 0 THEN GebDatKurz3.adressen = LEFT$ ( DATE$ (K3Geburtstag.adressen,"0dmmyyyy"),4)
     IF K4Geburtstag.adressen > 0 THEN GebDatKurz4.adressen = LEFT$ ( DATE$ (K4Geburtstag.adressen,"0dmmyyyy"),4)
     IF EGGeburtstag.adressen > 0 THEN GebDatKurzEG.adressen = LEFT$ ( DATE$ (EGGeburtstag.adressen,"0dmmyyyy"),4)
     IF NEW (GTelDat$) OR MOD (GTelDat$) AND (art.GTelDat$ <> "" OR nummer.gteldat$ <> "") THEN 
       REM CALL Fehler("","")
       IF art.GTelDat$ <> "" OR nummer.GTelDat$ <> "" THEN 
         IF codetel.GTelDat$ < 1 THEN CodeTEL.GTelDat$ = SER (GTelDat$,1)
         IF art.GTelDat$ = "" THEN art.GTelDat$ = "Telefon:"
         Qart.GTelDat$ = VSNRPack$(art.GTelDat$)
         Qnummer.GTelDat$ = VSNRPack$(nummer.GTelDat$)
         codeku.GTelDat$ = codeku.GAdrDat$
         Kart1.GtelDat$ = "k.A."
         Kart1.GtelDat$ = "k.A."
         Workstation.GTelDat$ = Workstation.GadrDat$
         QWoNo.GTelDat$ = STR$ (Workstation.GTelDat$,"000000") + STR$ (CodeTEL.GTelDat$,"000000")
         RecStatus.GTelDat$ = "c"
         STORE FILE GTelDat$
         UNLOCK CURRENT FILE GTelDat$
         UNLOCK FILE GTelDat$
         SELECT CURRENT LOCK FILE GTELDat$
       END IF 
     END IF 
 
     MOUSE ON 
   CASE "EINZPROV"
     IF Workstation% > 0 THEN Workstation.EINZPROV = Workstation%
     IF Workstation% > 0 THEN QWoNo.EINZPROV = STR$ (Workstation%,"000000") + STR$ (CodeMS.EINZPROV,"000000")
     RecStatus.EINZPROV = "c"
   CASE "FONDS"
      IF Bewertungssumme.fonds = 0 THEN Bewertungssumme.fonds = preis.fonds
      p$ = STR$ (preis.fonds,",9999999999.00")
      IF Workstation% > 0 THEN Workstation.fonds = Workstation%
      IF Workstation% > 0 THEN QWoNo.fonds = STR$ (Workstation%,"000000") + STR$ (codevt.fonds,"000000")
      RecStatus.Kvertrag = "c"
      QuickVTBerDat.fonds = STR$ (codevt.fonds,"000000") + DATE$ (BKursTag.fonds,"yyyymm0d") + LEFT$ ( TIME$ (BKursZeit.fonds,"hh:mm:ss"),2) + MID$ ( TIME$ (BKursZeit.fonds,"hh:mm:ss"),4,2) + RIGHT$ ( TIME$ (BKursZeit.fonds,"hh:mm:ss"),2)
      IF GBkursTag% <> Bkurstag.fonds OR GBAntPreisinW% <> BAntPreisinWaeh.fonds OR GBKursEuro% <> BKursEuro.fonds OR GBKursUS% <> BKursUS.fonds THEN 
        REM CALL Fehler("Schreibe","")
        BKursZeit.fonds = NOW 
        QuickVTBerDat.fonds = STR$ (codevt.fonds,"000000") + DATE$ (BKursTag.fonds,"yyyymm0d") + LEFT$ ( TIME$ (BKursZeit.fonds,"hh:mm:ss"),2) + MID$ ( TIME$ (BKursZeit.fonds,"hh:mm:ss"),4,2) + RIGHT$ ( TIME$ (BKursZeit.fonds,"hh:mm:ss"),2)
      END IF 
   CASE "KPRODUKT"
     CALL MATimeStamp("KPRODUKT")
     IF codekprod.kprodukt < 1 THEN codekprod.kprodukt = SER ("Kprodukt",1)
     IF produktname.kprodukt = "" THEN produktname.kprodukt = "NEU"
     zero.kprodukt = 0
     IF codeku.kprodukt < 1 THEN codeku.kprodukt = codeku.GAdrDat$
     IF Workstation% > 0 THEN Workstation.kprodukt = Workstation%
     IF Workstation% > 0 THEN QWoNo.kprodukt = STR$ (Workstation%,"000000") + STR$ (codekprod.kprodukt,"000000")
     RecStatus.kprodukt = "c"
   CASE "PRODUKT"
     CALL MATimeStamp("PRODUKT")
     IF codeprod.produkt < 1 THEN codeprod.produkt = SER ("produkt",1)
     IF produktname.produkt = "" THEN produktname.produkt = "NEU"
     IF Workstation% > 0 THEN Workstation.produkt = Workstation%
     IF Workstation% > 0 THEN QWoNo.produkt = STR$ (Workstation%,"000000") + STR$ (codeprod.produkt,"000000")
     RecStatus.produkt = "c"
     zero.produkt = 0
   CASE "PRCONADR"
     CALL MATimeStamp("PRCONADR")
     QuickPRKU.prconadr = STR$ (codepr.prconadr,"000000") + Nachname.prconadr
     CodePRKU.prconadr = STR$ (codepr.prconadr,"000000") + STR$ (codeku.prconadr,"000000")
     IF Workstation% > 0 THEN Workstation.prconadr = Workstation%
     IF Workstation% > 0 THEN QWoNo.prconadr = STR$ (Workstation%,"000000") + STR$ (codepr.prconadr,"000000")
     RecStatus.prconadr = "c"
   CASE "WAEHRUNG"
     CALL MATimeStamp("WAEHRUNG")
     IF codew.waehrung = 1 THEN 
       CALL Fehler("Beachten Sie, da· Sie bei der WÑhrung DM nur den Umrechnungsfaktor und/oder den Kommaentar Ñndern dÅrfen!","")
       waehrung.waehrung = "DM"
     END IF 
     IF codew.waehrung < 1 THEN 
       codew.waehrung = SER ("waehrung",1)
       zero.waehrung = 0
     END IF 
     Workstation.waehrung = Workstation%
     QWoNo.waehrung = STR$ (Workstation%,"000000") + STR$ (codew.waehrung,"000000")
     RecStatus.waehrung = "c"
   CASE "ORT"
     PLZOrt.ort = FN NUMERIC(PLZ.ort) + TRIM$ ( LTRIM$ (ort.ort))
     OrtPLZ.ort = TRIM$ ( LTRIM$ (ort.ort)) + FN NUMERIC(PLZ.ort)
   CASE GTelDat$,"TELEFON","TELBCK"
     REM CALL Fehler("","")
     IF MOD (GAdrDat$) OR NEW (GADRDat$) THEN 
       STORE FILE GAdrDat$
       UNLOCK CURRENT FILE GAdrDat$
       UNLOCK FILE GADRDat$
     END IF 
     IF art.GTelDat$ <> "" OR nummer.GTelDat$ <> "" THEN 
       IF codetel.GTelDat$ < 1 THEN CodeTEL.GTelDat$ = SER (GTelDat$,1)
       IF art.GTelDat$ = "" THEN art.GTelDat$ = "Telefon:"
       codeku.GTelDat$ = codeku.GAdrDat$
       QArt.GTELDat$ = VSNRPack$(Art.GTELDat$)
       QNummer.GTELDat$ = VSNRPack$(Nummer.GTELDat$)
       IF Kart1.GtelDat$ = "" THEN Kart1.GtelDat$ = "k.A."
       IF Kart2.GtelDat$ = "" THEN Kart2.GtelDat$ = "k.A."
       IF Kart1.GtelDat$ = "FAX" THEN 
         FonOderFax.GTelDat$ = "j"
       ELSE 
         FonOderFax.GTelDat$ = "n"
       END IF 
       SELECT KEY codeku.GTelDat$ FILE GADRDat$ INDEX codeku.GADRDat$
       Workstation.GTelDat$ = Workstation.GadrDat$
       QWoNo.GTelDat$ = STR$ (Workstation.GTelDat$,"000000") + STR$ (CodeTEL.GTelDat$,"000000")
       QCodeKUTEL.GTelDat$ = STR$ (codeku.GTelDat$,"000000") + STR$ (codetel.GTelDat$,"000000")
       RecStatus.GTelDat$ = "c"
       IF GTELDAT$ LIKE "TELEFON" THEN 
         IF GZP% = - 1 THEN CALL ProtAll(codeku.GTelDat$,"Telefondaten ADRESSEN aufgenommen oder geÑndert",Nachname.GADRDat$,0,"",0,"")
       ELSE 
         IF GZP% = - 1 THEN CALL ProtAll(codeku.GTelDat$,"Telefondaten INTERESSENT aufgenommen oder geÑndert",Nachname.GADRDat$,0,"",0,"")
       END IF 
     ELSE 
       ok% = 0
     END IF 
     MOUSE ON 
   CASE "AKTIONEN"
     CALL MATimeStamp("AKTIONEN")
       GAktion$ = Bezeichnung.aktionen
       codeak% = codeak.aktionen
       FILE "akquise"
       REM CALL Fehler("Bitte warten, die Termindatei wird dazu angepa·t!","")
       MOUSE OFF 

       UPDATE Aktion.Akquise = GAktion$ WHERE codeak.akquise = codeak%
       END UPDATE 
       CLOSE FILE "akquise"
       CALL DFile(2,"OFFICE\akquise" + _fpw$)
       SELECT KEY codeak% LOCK FILE "Aktionen" INDEX codeak.aktionen
     IF MemberOf.AKTIONEN = "" THEN MemberOf.AKTIONEN = STR$ (CodeAK.AKTIONEN,"000000")
     IF Workstation% > 0 THEN Workstation.AKTIONEN = Workstation%
     IF Workstation% > 0 THEN QWoNo.AKTIONEN = STR$ (Workstation%,"000000") + STR$ (CodeAK.AKTIONEN,"000000")
     RecStatus.AKTIONEN = "c"
   CASE GAkquiDat$,"AKQUISE","AKQUIBCK"
    IF codema.GAkquiDat$ > 0 THEN 
     codeaq% = codeaq.GAkquiDat$
     codema% = codema.GAkquiDat$
     erledigt_Temin$ = erledigt_Termin.GAkquiDat$
     IF PAGE = 3 AND LTRIM$ (EMAILTO.GAkquiDat$) <> "" AND emailraus.GAkquiDat$ <> "j" THEN 
       fehl$ = ""
       IF LTRIM$ (emailcc.GAkquiDat$) <> "" THEN 
         IF RIGHT$ (emailcc.GAkquiDat$,1) <> ":" THEN 
           emailcc.GAkquiDat$ = emailcc.GAkquiDat$ + ":"
         END IF 
       END IF 
       IF LTRIM$ (emailbcc.GAkquiDat$) <> "" THEN 
         IF RIGHT$ (emailbcc.GAkquiDat$,1) <> ":" THEN 
           emailbcc.GAkquiDat$ = emailbcc.GAkquiDat$ + ":"
         END IF 
       END IF 
       IF LTRIM$ (EMAILBETREFF.GAkquiDat$) = "" THEN 
         fehl$ = "Wenn die EMAIL versand werden soll MUSS die Betreff-Zeile ausgefÅllt werden!" + CHR$ (13) + CHR$ (10)
       END IF 
       IF EMAILAutomat.GAkquidat$ = "j" THEN 
         IF ErDatum.GAkquiDat$ < 1 THEN 
           fehl$ = fehl$ + "ACHTUNG der Vorlagetermin mu· eingetragen werden, wenn die EMAIL automatisch versand werden soll!"
         END IF 
       END IF 
       IF fehl$ <> "" THEN CALL Fehler(fehl$,"")
     END IF 
     CALL MATimeStamp(GAkquiDat$)
     IF NOT OPEN (GADRDat$) THEN CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
     SELECT KEY codeku.GAkquiDat$ FILE GADRDat$ INDEX codeku.GADRDat$
     Workstation.GAkquiDat$ = Workstation.GadrDat$
     IF GAkquiDat$ LIKE "Akquise" THEN 
       IF NOT OPEN ("aktionen") THEN CALL DFile(2,"OFFICE\aktionen" + _fpw$)
       SELECT FIRST FILE "aktionen" INDEX codeak.aktionen
       SELECT KEY codeak.akquise FILE "aktionen" INDEX codeak.aktionen
       Aktion.akquise = Bezeichnung.aktionen
     END IF 
     QWoNo.GAkquiDat$ = STR$ (Workstation.GAkquiDat$,"000000") + STR$ (CodeAQ.GAkquiDat$,"000000")
     IF EMAILAutomat.GAkquiDat$ <> "j" AND EMAILRAUS.GAkquiDat$ <> "j" THEN 
       IF GEMAILRAUS$ <> EMAILRAUS.GAkquiDat$ AND GAkquiDat$ LIKE "AKQUISE" THEN 
         IF GEMAILRAUS$ = "" OR GEMAILRAUS$ = "n" THEN 
           EMAILSendDat.GAkquiDat$ = TODAY 
           EMAILSendZeit.GAkquiDat$ = NOW 
           SELECT KEY GMACodema% FILE "supervis" INDEX codema.supervis
           text1$ = DATE$ (EMAILSendDat.GAkquiDat$,"0d.mm.yyyy") + " " + TIME$ (EMAILSendZeit.GAkquiDat$,"hh:mm") + " EMAIL wurde per Hand von " + name.supervis + " als erledigt gekennzeichnet, "
           text2$ = "aber nicht gesendet!"
           ergebnis.GAkquiDat$ = LEFT$ (ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
         ELSE 
           EMAILSendDat.GAkquiDat$ = 0
           EMAILSendZeit.GAkquiDat$ = 0
           SELECT KEY GMACodema% FILE "supervis" INDEX codema.supervis
           text1$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm") + " EMAIL wurde per Hand von " + name.supervis + " als NICHT erledigt gekennzeichnet, "
           text2$ = "aber nicht gesendet!"
           ergebnis.GAkquiDat$ = LEFT$ (ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + text1$ + text2$,1500)
         END IF 
       END IF 
     END IF 
     STORE FILE GAkquiDat$
     UNLOCK CURRENT FILE GAkquiDat$
     UNLOCK FILE GAkquiDat$
     CALL DFile(3,"vorgang" + _fpw$)

     IF GAkquiDat$ LIKE "AKQUISE" THEN 
       foooo$ = FORM 
       IF EXISTS (codeaq.GAkquiDat$,codeaq.vorgang) AND foooo$ LIKE "AKQUISE" THEN 
         SELECT FIRST FILE "vorgang" INDEX codeaq.vorgang
         SELECT KEY codeaq.GAkquiDat$ LOCK FILE "vorgang" INDEX codeaq.vorgang
         erledigt.vorgang = erledigt_Termin.GAkquiDat$
         ter$ = "j"
         besch2$ = "j"
         IF NOT MNdisabled%("TERMININNACHBEARB") THEN 
           CREATE DIALOG "KNDG",0,0,321,110,"TerminÅbernahme","MS Sans Serif",8
           ADD DIALOG "KNDG",9,3,14,21,23,2
           ADD DIALOG "KNDG",5,25,13,172,25,0,"Bitte kreuzen Sie die Felder an, die aus dem Termin in die Nachbearbeitung Åbernommen werden sollen:"
           ADD DIALOG "KNDG",2,10,43,290,11,0,"Termindatum  in das Feld Termin der Nachbearbeitung Åbertragen","j","n",Ter$
           REM ADD DIALOG "KNDG",2,15,45,143,11,0,"Notiz nach Beschreibung1 Åbertragen","j","n",besch1$
           ADD DIALOG "KNDG",2,10,55,300,11,0,"Ergebnis(aus dem Termin) in das Feld Beschreibung2 (der Nachbearbeitung) Åbertragen","j","n",besch2$
           ADD DIALOG "KNDG",1,100,85,55,15,1,"&OK",1,1
           ADD DIALOG "KNDG",1,156,85,55,15,0,"&Abbrechen",0,0
           DIALOG "KNDG",req%
           REMOVE DIALOG "KNDG"
           IF req% = 1 THEN 
             IF ter$ = "j" THEN 
               Termin.vorgang = Termin.GAkquiDat$
             END IF 
             IF besch2$ = "j" THEN 
               beschreibung1.vorgang = Ergebnis.GAkquiDat$
             END IF 
           END IF 
         END IF 
         REM CALL Fehler("weiterer Sachen in Vorgang eintragen","")
         STORE FILE "vorgang"
       END IF 
     END IF 
     CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
     IF GAkquiDat$ LIKE "AKQUISE" THEN 
       IF erledigt_termin.GAkquiDat$ <> "j" AND ErDatum.GAkquiDat$ > 0 AND ErDatum.GAkquiDat$ >= TODAY THEN 
         IF NOT EXISTS (codeaq%,codeaq.tvorlage) THEN 
           BLANK FILE "TVORLAGE"
           CodeTV.TVORLAGE = SER ("TVORLAGE",1)
           emailraus.tvorlage = emailraus.GAkquiDat$
           codeaq.TVORLAGE = codeaq.GAkquiDat$
           codema.TVORLAGE = codema.GAkquiDat$
           Termin.TVORLAGE = termin.GAkquiDat$
           Uhrzeit.TVORLAGE = Uhrzeit.GAkquiDat$
           Datum.TVORLAGE = ERDATUM.GAkquiDat$
           Zeit.TVORLAGE = ErZeit.GAkquiDat$
           Notiz.TVORLAGE = Notiz.GAkquiDat$
           Ergebnis.TVORLAGE = Ergebnis.GAkquiDat$
           Nachname.TVORLAGE = Nachname.GAkquiDat$
           Bearbeiter.TVORLAGE = Bearbeiter.GAkquiDat$
           erledigt_Termin.tvorlage = erledigt_termin.GAkquiDat$
           DTVorlage.TVORLAGE = STR$ (CodeMA.GAkquiDat$,"000000") + DATE$ (ErDatum.GAkquiDat$,"yyyymm0d") + TIME$ (ErZeit.GAkquiDat$,"hhmm")
           Workstation.TVORLAGE = Workstation.GAkquiDat$
           QWoNo.TVORLAGE = STR$ (Workstation.GAkquiDat$,"000000") + STR$ (CodeTV.TVORLAGE,"000000")
           RecStatus.TVORLAGE = "c"
           STORE FILE "TVORLAGE"
           UNLOCK CURRENT FILE "tvorlage"
           UNLOCK FILE "tvorlage"
         ELSE 
           SELECT FIRST FILE "TVORLAGE" INDEX codeaq.tvorlage
           SELECT KEY codeaq% LOCK FILE "TVORLAGE" INDEX codeaq.tvorlage
           emailraus.tvorlage = emailraus.GAkquiDat$
           codema.TVORLAGE = codema.GAkquiDat$
           Termin.TVORLAGE = termin.GAkquiDat$
           Uhrzeit.TVORLAGE = Uhrzeit.GAkquiDat$
           Datum.TVORLAGE = ERDATUM.GAkquiDat$
           Zeit.TVORLAGE = ErZeit.GAkquiDat$
           Notiz.TVORLAGE = Notiz.GAkquiDat$
           Ergebnis.TVORLAGE = Ergebnis.GAkquiDat$
           Nachname.TVORLAGE = Nachname.GAkquiDat$
           Bearbeiter.TVORLAGE = Bearbeiter.GAkquiDat$
           erledigt_Termin.tvorlage = erledigt_termin.GAkquiDat$
           DTVorlage.TVORLAGE = STR$ (CodeMA.GAkquiDat$,"000000") + DATE$ (ErDatum.GAkquiDat$,"yyyymm0d") + TIME$ (ErZeit.GAkquiDat$,"hhmm")
           Workstation.TVORLAGE = Workstation.GAkquiDat$
           QWoNo.TVORLAGE = STR$ (Workstation.GAkquiDat$,"000000") + STR$ (CodeTV.TVORLAGE,"000000")
           RecStatus.TVORLAGE = "c"
           STORE FILE "TVORLAGE"
           UNLOCK CURRENT FILE "tvorlage"
           UNLOCK FILE "tvorlage"
         END IF 
       ELSE 
         IF erledigt_termin.GAkquiDat$ LIKE "j" THEN 
           IF EXISTS (codeaq.GAkquiDat$,codeaq.tvorlage) THEN 
             codeaq% = codeaq.GAkquiDat$
             REMOVE FROM FILE "Tvorlage" WHERE codeaq.tvorlage = Codeaq%
           END IF 
         END IF 
       END IF 
     END IF 
     IF GAkquiDat$ LIKE "AKQUISE" AND ErDatum.GAkquiDat$ < 1 THEN 
       IF EXISTS (codeaq.GAkquiDat$,codeaq.tvorlage) THEN 
         codeaq% = codeaq.GAkquiDat$
         REMOVE FROM FILE "Tvorlage" WHERE codeaq.tvorlage = Codeaq%
       END IF 
     END IF 
     SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
     IF aqbearb$ = "j" THEN 
       IF termin.GAkquiDat$ < TODAY THEN CALL Fehler("ACHTUNG der Termin den Sie eingegeben haben ist kleiner als das aktuelle Datum!","")
     END IF 
     aqbearb$ = "n"
     IF codema.GAkquiDat$ < 1 THEN 
       IF bearbeiter.GAkquiDat$ <> "" THEN 
         IF EXISTS (bearbeiter.GAkquiDat$,nachname.supervis) THEN 
           SELECT KEY bearbeiter.GAkquiDat$ FILE "Supervis" INDEX nachname.supervis
           codema.GAkquiDat$ = codema.supervis
           codema% = codema.supervis
           STORE FILE GAkquiDat$
           UNLOCK CURRENT FILE GAkquiDat$
           UNLOCK FILE GAkquiDat$
           SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         END IF 
       END IF 
     END IF 
     IF GErledTermin$ <> erledigt_Temin$ THEN 
       SELECT FIRST FILE "Supervis" INDEX codema.supervis
       SELECT KEY codema% LOCK FILE "Supervis" INDEX codema.supervis
       IF erledigt_Temin$ LIKE "j" AND GErledTermin$ <> "j" THEN 
         AnzTermineErl.supervis = AnzTermineErl.supervis + 1
         AnzTermineUnErl.supervis = AnzTermineUnErl.supervis - 1
       END IF 
       IF erledigt_Temin$ <> "j" AND GErledTermin$ = "j" THEN 
         AnzTermineErl.supervis = AnzTermineErl.supervis - 1
         AnzTermineUnErl.supervis = AnzTermineUnErl.supervis + 1
       END IF 
         
       STORE FILE "supervis"
       UNLOCK CURRENT FILE "supervis"
       UNLOCK FILE "supervis"
     END IF 
     QuickCodeMA.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (CodeMA.GAkquiDat$,"000000")
     QuickCodeMAZ.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (CodeMA.GAkquiDat$,"000000") + TIME$ (Uhrzeit.GAkquiDat$,"hhmm")
     QuickCodeKU.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (CodeKU.GAkquiDat$,"000000")
     QuickCodeAK.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (CodeAK.GAkquiDat$,"000000")
     QuickAKMA.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (codeak.GAkquiDat$,"000000") + STR$ (CodeMA.GAkquiDat$,"000000")
     CodeAKMA.GAkquiDat$ = STR$ (codeak.GAkquiDat$,"000000") + STR$ (CodeMA.GAkquiDat$,"000000")
     QuickKUDat.GAkquiDat$ = STR$ (CodeKU.GAkquiDat$,"000000") + UCASE$ (erledigt_Termin.GAkquiDat$) + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickMADat.GAkquiDat$ = STR$ (CodeMA.GAkquiDat$,"000000") + UCASE$ (erledigt_Termin.GAkquiDat$) + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickAKDat.GAkquiDat$ = STR$ (CodeAK.GAkquiDat$,"000000") + UCASE$ (erledigt_Termin.GAkquiDat$) + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickAKMADat.GAkquiDat$ = STR$ (codeak.GAkquiDat$,"000000") + STR$ (CodeMA.GAkquiDat$,"000000") + UCASE$ (erledigt_Termin.GAkquiDat$) + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickKuDatDiff.GAkquiDat$ = codeku * 1000000 + (1000000 - DAYS (termin))
     QuickPRDatDiff.GAkquiDat$ = codepr * 1000000 + (1000000 - DAYS (termin))
     REM 221098 neu
     QuickAKTer.GAkquiDat$ = STR$ (CodeAK.GAkquiDat$,"000000") + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickMATer.GAkquiDat$ = STR$ (CodeMA.GAkquiDat$,"000000") + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickKUTer.GAkquiDat$ = STR$ (CodeKU.GAkquiDat$,"000000") + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     QuickAKMATer.GAkquiDat$ = STR$ (codeak.GAkquiDat$,"000000") + STR$ (CodeMA.GAkquiDat$,"000000") + DATE$ (termin.GAkquiDat$,"yyyymm0d")
     RecStatus.GAkquiDat$ = "c"
     CALL DFile(2,"OFFICE\aktionen" + _fpw$)
     SELECT KEY CodeAK.GAkquiDat$ FILE "aktionen" INDEX CodeAK.aktionen
     MemberOf.GAkquiDat$ = MemberOf.aktionen
     GErledTermin$ = erledigt_Termin.GAkquiDat$
    END IF 
    IF GAkquiDat$ LIKE "AKQUISE" THEN 
      IF GZP% = - 1 THEN CALL ProtAll(codeku.GAkquiDat$,"Termindaten ADRESSEN aufgenommen oder geÑndert",Nachname.GADRDat$,0,"",codeaq.GAkquiDat$,Notiz.GAkquiDat$)
    ELSE 
      IF GZP% = - 1 THEN CALL ProtAll(codeku.GAkquiDat$,"Termindaten INTERESSENT aufgenommen oder geÑndert",Nachname.GADRDat$,0,"",codeaq.GAkquiDat$,Notiz.GAkquiDat$)
    END IF 
    IF EXISTS (codeaq.GAkquiDat$,codeaq.tvorlage) THEN 
      IF erdatum.GAkquiDat$ < 1 AND GAkquiDat$ LIKE "AKQUISE" THEN 
        codeaq% = Codeaq.GAkquiDat$
        REMOVE FROM FILE "Tvorlage" WHERE codeaq.tvorlage = Codeaq%
      END IF 
    END IF 
   CASE "BILDER"
     QuickCode.BILDER = STR$ (ApplID.BILDER,"000000") + STR$ (topic.BILDER,"000000") + STR$ (link.BILDER,"000000")
   CASE "BUCHUNG"
     QuickCode.BUCHUNG = STR$ (CodeMA.BUCHUNG,"000000") + DATE$ (Datum.BUCHUNG,"yyyymm0d")
     QCodeMAPROD.buchung = STR$ (CodeMA.buchung,"000000") + VSNRPack$(Gesellschaft.buchung) + VSNRPack$(Sparte.buchung)
     QCodeMAVT.buchung = STR$ (codema.buchung,"000000") + STR$ (codevt.buchung,"000000")
     IF Workstation% > 0 THEN Workstation.Buchung = Workstation%
     IF Workstation% > 0 THEN QWoNo.Buchung = STR$ (Workstation%,"000000") + STR$ (CodeBu.Buchung,"000000")
     RecStatus.Buchung = "c"
     IF umrechnung.buchung = 0 THEN umrechnung.buchung = 1
     IF gebuchtjn.buchung <> 1 THEN gebuchtjn.buchung = 0
     gebuchtJNDat.buchung = STR$ (gebuchtjn.buchung,"0") + DATE$ (datum.buchung,"yyyymm0d")
     gebuchtJNMADat.buchung = STR$ (gebuchtjn.buchung,"0") + STR$ (Codema.buchung,"000000") + DATE$ (datum.buchung,"yyyymm0d")
     CALL BUDMEuro(umrechnung.buchung)
   CASE "BUCHUNG1"
     QuickCode.BUCHUNG1 = STR$ (CodeMA.BUCHUNG1,"000000") + DATE$ (Datum.BUCHUNG1,"yyyymm0d")
     QCodeMAPROD.buchung1 = STR$ (CodeMA.buchung1,"000000") + VSNRPack$(Gesellschaft.buchung1) + VSNRPack$(Sparte.buchung1)
     QCodeMAVT.buchung1 = STR$ (codema.buchung1,"000000") + STR$ (codevt.buchung1,"000000")
     buday.buchung1 = DAY (Datum.buchung1)
     IF Workstation% > 0 THEN Workstation.Buchung1 = Workstation%
     IF Workstation% > 0 THEN QWoNo.Buchung1 = STR$ (Workstation%,"000000") + STR$ (CodeBu.Buchung1,"000000")
     RecStatus.Buchung1 = "c"
     IF umrechnung.buchung1 = 0 THEN umrechnung.buchung1 = 1
     IF gebuchtjn.buchung1 <> 1 THEN gebuchtjn.buchung1 = 0
     gebuchtJNDat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + DATE$ (datum.buchung1,"yyyymm0d")
     gebuchtJNMADat.buchung1 = STR$ (gebuchtjn.buchung1,"0") + STR$ (Codema.buchung1,"000000") + DATE$ (datum.buchung1,"yyyymm0d")
     CALL BU1DMEuro(umrechnung.buchung1)
   CASE "GEKOND"
     CALL MATimeStamp("GEKOND")
     IF lfdnr.gekond < 1 THEN lfdnr.gekond = SER ("GEKOND",1)
     IF courtageJN.gekond = "j" THEN CourtEinstellen.gekond = "j"
     IF courtageJN.gekond <> "j" THEN CourtEinstellen.gekond = "n"
     QuickCode.gekond = STR$ (CodeMA.gekond,"000000") + STR$ (CodeGE.gekond,"000000") + STR$ (CodeVA.gekond,"000000")
     QCodeGEVA.gekond = STR$ (Codege.gekond,"000000") + STR$ (Codeva.gekond,"000000")
     IF EXISTS (QCodeGEVA.gekond,QCodeGEVA.vprodukt) THEN 
       SELECT KEY QCodeGEVA.gekond FILE "vprodukt" INDEX QCodeGEVA.vprodukt
     ELSE 
       SELECT KEY codege.gekond FILE "geadr" INDEX codege.geadr
       SELECT KEY codeva.gekond FILE "sparten" INDEX codeva.sparten
       BLANK FILE "Vprodukt"
       codevp.vprodukt = SER ("vprodukt",1)
       codege.vprodukt = codege.gekond
       codeva.vprodukt = codeva.gekond
       codegrsp.vprodukt = codegrsp.gekond
       gruppe.vprodukt = gruppe.gekond
       Gesellschaft.vprodukt = Gesellschaft.geadr
       Sparte.vprodukt = sparte.sparten
       QCodeGEVA.vprodukt = QCodeGEVA.gekond
       GesSpa.Vprodukt = Gesellschaft.vprodukt + Sparte.vprodukt
       STORE FILE "Vprodukt"
       UNLOCK CURRENT FILE "vprodukt"
       UNLOCK FILE "vprodukt"
       SELECT KEY QCodeGEVA.gekond FILE "vprodukt" INDEX QCodeGEVA.vprodukt
     END IF 
     Gesellschaft.gekond = gesellschaft.vprodukt
     Sparte.gekond = sparte.vprodukt
     codegrsp.gekond = codegrsp.vprodukt
     gruppe.gekond = gruppe.vprodukt
     REM QuickCodeGes.gekond = STR$ (CodeMA.gekond,"000000") + UCASE$ (gesellschaft.gekond) + UCASE$ (sparte.gekond) + DATE$ (bwvon.gekond,"yyyymm0d")
     QuickCodeGes.gekond = STR$ (CodeMA.gekond,"000000") + UCASE$ (gesellschaft.gekond) + UCASE$ (sparte.gekond)
     Kurzname.gekond = kurzname.vprodukt
     REM EuroEinheit.GEKOND = DMEinheit.GEKOND / Umrechnung.STAMM
     IF Workstation% > 0 THEN Workstation.gekond = Workstation%
     IF Workstation% > 0 THEN QWoNo.gekond = STR$ (Workstation%,"000000") + STR$ (lfdnr.gekond,"000000")
     RecStatus.gekond = "c"
   CASE "GEKONDM"
     CALL MATimeStamp("GEKONDM")
     IF lfdnr.gekondm < 1 THEN lfdnr.gekondm = SER ("GEKONDM",1)
     IF courtageJN = "j" THEN CourtEinstellen = "j"
     IF courtageJN <> "j" THEN CourtEinstellen = "n"
     QuickCode.gekondm = STR$ (CodeMA.gekondm,"000000") + STR$ (CodeGE.gekondm,"000000") + STR$ (CodeVA.gekondm,"000000")
     QCodeGEVA.gekondm = STR$ (Codege.gekondm,"000000") + STR$ (Codeva.gekondm,"000000")
     IF Workstation% > 0 THEN Workstation.gekondm = Workstation%
     IF Workstation% > 0 THEN QWoNo.gekondm = STR$ (Workstation%,"000000") + STR$ (lfdnr.gekondm,"000000")
     RecStatus.gekondm = "c"
   CASE "KUKTO"
     QuickCode.KUKTO = STR$ (CodeVT.KUKTO,"000000") + DATE$ (FÑlligkeit.KUKTO,"yyyymm0d")
     QuickCodeKU.KUKTO = STR$ (CodeKU.KUKTO,"000000") + DATE$ (FÑlligkeit.KUKTO,"yyyymm0d")
     QuickVSNR.KUKTO = VSNRPack$(VS_Nr.KUKTO)
     QNumVSNR.kukto = VSNRPackNum$(VS_NR.kukto)
     QVTDat.kukto = STR$ (Codevt.kukto,"000000") + DATE$ (FÑlligkeit.kukto,"yyyymm0d")
     zero.KuKto = 0
     BeitragEU.kukto = VAL ( STR$ (Beitrag.kukto / umrechnung.kukto,"999999999.00"))
     gezBetragEu.kukto = VAL ( STR$ (gezBetrag.kukto / umrechnung.kukto,"999999999.00"))
     gezBeitrag1Eu.kukto = VAL ( STR$ (gezBeitrag1.kukto / umrechnung.kukto,"999999999.00"))
     IF Workstation% > 0 THEN Workstation.KUKTO = Workstation%
     IF Workstation% > 0 THEN QWoNo.KUKTO = STR$ (Workstation%,"000000") + STR$ (codeKUKO.KUKTO,"000000")
     RecStatus.KUKTO = "c"
     erlverr.kukto = erledigtJaNein.kukto + verrechnet.kukto
   CASE "VERMOEG"
     CALL MATimeStamp("VERMOEG")
     QuickCodeRKU.vermoeg = STR$ (CodeRKU.vermoeg,"000000") + DATE$ (gezahltam.vermoeg,"yyyymm0d")
     QuickCodeKU.vermoeg = STR$ (CodeKU.vermoeg,"000000") + DATE$ (gezahltam.vermoeg,"yyyymm0d")
     zero.vermoeg = 0
     IF Workstation% > 0 THEN Workstation.vermoeg = Workstation%
     IF Workstation% > 0 THEN QWoNo.vermoeg = STR$ (Workstation%,"000000") + STR$ (codeverm.vermoeg,"000000")
     RecStatus.vermoeg = "c"
   CASE "VORGANG"
     CALL MATimeStamp("VORGANG")
     codevg% = CodeVG.vorgang
     codevt% = cuvt%
     SELECT KEY codevt% FILE "Kvertrag" INDEX lfdnr.kvertrag
     codeku% = Codeku.kvertrag
     codeku.vorgang = Codeku%
     VS_NR.vorgang = VS_NR.kvertrag
     Antragsnr.vorgang = Antragsnr.kvertrag
     QuickCode.VORGANG = STR$ (CodeVT.VORGANG,"000000") + DATE$ (Datum.VORGANG,"yyyymm0d")
     QuickCodeKU.VORGANG = STR$ (CodeKU.VORGANG,"000000") + DATE$ (Datum.VORGANG,"yyyymm0d")
     SELECT KEY codevt.VORGANG FILE "KVERTRAG" INDEX lfdnr.kvertrag
     workstation.VORGANG = workstation.kvertrag
     QWoNo.VORGANG = STR$ (Workstation.VORGANG,"000000") + STR$ (CodeVG.VORGANG,"000000")
     RecStatus.VORGANG = "c"
     STORE FILE "VORGANG"
     UNLOCK CURRENT FILE "vorgang"
     UNLOCK FILE "vorgang"
     codevg% = CodeVG.vorgang
     SELECT KEY codeku% FILE GAdrDat$ INDEX codeku.GAdrDat$
     REM SELECT KEY codevt% FILE "Kvertrag" INDEX lfdnr.kvertrag
     SELECT KEY GMACodeMA% FILE "Supervis" INDEX codema.supervis
     nachn$ = NachName.supervis
     codege% = codege.kvertrag
     codeva% = Codeva.kvertrag
     codema% = codema.kvertrag
     codeku% = codeku.kvertrag
     ges$ = ""
     sparte$ = ""
     mitarb$ = ""
     IF EXISTS (codege%,codege.geadr) THEN 
       SELECT KEY codege% FILE "Geadr" INDEX codege.geadr
       ges$ = Gesellschaft.geadr
     END IF 
     IF EXISTS (codeva%,codeva.sparten) THEN 
       SELECT KEY codeva% FILE "sparten" INDEX codeva.sparten
       sparte$ = Sparte.sparten
     END IF 
     IF EXISTS (codema%,codema.maadr) THEN 
       SELECT KEY codema% FILE "maadr" INDEX codema.maadr
       mitarb$ = nachname.maadr
     END IF 
     _vcodema% = GMACodeMA%
     SELECT KEY GMACodeMA% LOCK FILE "supervis" INDEX codema.supervis
     IF NOT EXISTS (codeaq.vorgang,codeaq.GAkquiDat$) OR codeaq.vorgang < 1 THEN 
       AnzTermine.supervis = AnzTermine.supervis + 1
       IF erledigt.Vorgang LIKE "j" THEN 
         AnzTermineErl.supervis = AnzTermineErl.supervis + 1
       ELSE 
         AnzTermineUnErl.supervis = AnzTermineUnErl.supervis + 1
       END IF 
       STORE FILE "Supervis"
       UNLOCK CURRENT FILE "Supervis"
       UNLOCK FILE "supervis"
     END IF 

     namsup$ = Nachname.supervis
     aneu% = 0
     FILE GAkquiDat$
     IF NOT EXISTS (codeaq.vorgang,codeaq.GAkquiDat$) OR codeaq.vorgang < 1 THEN 
       aneu% = - 1
       BLANK FILE GAkquiDat$
       codeaq% = SER (GAkquiDat$,1)
       CodeAQ.GAkquiDat$ = codeaq%
       GErledTermin$ = erledigt.Vorgang
       Terminnr.GAkquiDat$ = AnzTermine.supervis
       codema.GAkquiDat$ = GMACodeMA%
       Bearbeiter.GAkquiDat$ = namsup$
 
       STORE FILE GAkquiDat$
       UNLOCK CURRENT FILE GAkquiDat$
       UNLOCK FILE GAkquiDat$
       SELECT KEY codevg% LOCK FILE "Vorgang" INDEX codevg.vorgang
       codeaq.vorgang = codeaq%
       STORE FILE "Vorgang"
       UNLOCK CURRENT FILE "vorgang"
       UNLOCK FILE "vorgang"
     END IF 
     codeaq% = codeaq.vorgang
     SELECT FIRST FILE "Akquise" INDEX codeaq.akquise
     SELECT KEY codeaq% FILE "Akquise" INDEX codeaq.akquise
     tt$ = erledigt_termin.GAkquiDat$
     IF erledigt_termin.GAkquiDat$ LIKE "j" THEN 
       IF EXISTS (codeaq.GAkquiDat$,codeaq.tvorlage) THEN 
         codeaq% = codeaq.GAkquiDat$
         REMOVE FROM FILE "Tvorlage" WHERE codeaq.tvorlage = Codeaq%
       END IF 
     END IF 
     SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       IF aneu% = 0 THEN GErledTermin$ = erledigt_Termin.GAkquiDat$
       datum.GAkquiDat$ = Datum.vorgang
       REM CodeMA.GAkquiDat$ = GMACodeMA%
       REM bearbeiter.GAkquiDat$ = Namsup$
       codeku.GAkquiDat$ = codeku%
       nachname.GAkquiDat$ = LEFT$ ( TRIM$ (nachname.GAdrDat$) + "," + TRIM$ (vorname.GadrDat$),100)
       IF Termin.vorgang < 1 THEN 
         Termin.GAkquiDat$ = TODAY + 2
       ELSE 
         Termin.GAkquiDat$ = Termin.vorgang
       END IF 
       Notizv$ = LEFT$ (Kurznotiz.vorgang) + CHR$ (13) + CHR$ (10)
       Notizv$ = Notizv$ + "Vertragsnachbearbeitung zum VERTRAG: " + VS_NR.Kvertrag + CHR$ (13) + CHR$ (10)
       IF ges$ <> "" THEN 
         Notizv$ = Notizv$ + "GESELLSCH.: " + ges$ + CHR$ (13) + CHR$ (10)
       END IF 
       IF sparte$ <> "" THEN 
         Notizv$ = Notizv$ + "SPARTE: " + Sparte$ + CHR$ (13) + CHR$ (10)
       END IF 
       IF mitarb$ <> "" THEN 
         Notizv$ = Notizv$ + "AGENTUR: " + mitarb$ + CHR$ (13) + CHR$ (10)
       END IF 
       Notizv$ = Notizv$ + LEFT$ ( LTRIM$ (Beschreibung.vorgang),1500)
       IF schadenssumme.vorgang > 0 THEN 
         NUMBASE "999999999999.00"
         Notizv$ = LEFT$ (Notizv$ + CHR$ (13) + CHR$ (10) + "Schadenssumme: " + STR$ (Schadenssumme.vorgang,",99999999.99"),1500)
       END IF 
       IF zahlung1.vorgang <> 0 OR zahlung2.vorgang <> 0 OR zahlung3.vorgang <> 0 OR zahlung4.vorgang <> 0 OR zahlung5.vorgang <> 0 OR zahlung6.vorgang <> 0 OR zahlung7.vorgang <> 0 THEN 
         Notizv$ = LEFT$ (Notizv$ + CHR$ (13) + CHR$ (10) + "Teilzahlungen:" + CHR$ (13) + CHR$ (10),1500)
         IF zahlung1.vorgang <> 0 THEN 
           Notizv$ = LEFT$ (Notizv$ + LTRIM$ ( STR$ (zahlung1.vorgang,",99999999.00")),1500) + "/" + DATE$ (ZahlDat1.vorgang,"0d.mm.yyyy")
         END IF 
         IF zahlung2.vorgang <> 0 THEN 
           Notizv$ = LEFT$ (Notizv$ + "  " + LTRIM$ ( STR$ (zahlung2.vorgang,",99999999.00")),1500) + "/" + DATE$ (ZahlDat2.vorgang,"0d.mm.yyyy")
         END IF 
         IF zahlung3.vorgang <> 0 THEN 
           Notizv$ = LEFT$ (Notizv$ + "  " + LTRIM$ ( STR$ (zahlung3.vorgang,",99999999.00")),1500) + "/" + DATE$ (ZahlDat3.vorgang,"0d.mm.yyyy")
         END IF 
         IF zahlung4.vorgang <> 0 THEN 
           Notizv$ = LEFT$ (Notizv$ + "  " + LTRIM$ ( STR$ (zahlung4.vorgang,",99999999.00")),1500) + "/" + DATE$ (ZahlDat4.vorgang,"0d.mm.yyyy")
         END IF 
         IF zahlung5.vorgang <> 0 THEN 
           Notizv$ = LEFT$ (Notizv$ + "  " + LTRIM$ ( STR$ (zahlung5.vorgang,",99999999.00")),1500) + "/" + DATE$ (ZahlDat5.vorgang,"0d.mm.yyyy")
         END IF 
         IF zahlung6.vorgang <> 0 THEN 
           Notizv$ = LEFT$ (Notizv$ + "  " + LTRIM$ ( STR$ (zahlung6.vorgang,",99999999.00")),1500) + "/" + DATE$ (ZahlDat6.vorgang,"0d.mm.yyyy")
         END IF 
         IF zahlung7.vorgang <> 0 THEN 
           Notizv$ = LEFT$ (Notizv$ + "  " + LTRIM$ ( STR$ (zahlung7.vorgang,",99999999.00")),1500) + "/" + DATE$ (ZahlDat7.vorgang,"0d.mm.yyyy")
         END IF 
       END IF 
       IF gezahlt.vorgang > 0 THEN 
         Notizv$ = LEFT$ (Notizv$ + CHR$ (13) + CHR$ (10) + "gezahlt Summe: " + LTRIM$ ( STR$ (gezahlt.vorgang,",99999999.00")),1500)
       END IF 
       IF gezahlt_am.vorgang > 0 THEN 
         Notizv$ = LEFT$ (Notizv$ + CHR$ (13) + CHR$ (10) + "erledigt am: " + DATE$ (gezahlt_am,"0d.mm.yyyy"),1500)
       END IF 
       Notiz.GAkquiDat$ = LEFT$ (Notizv$,1500)
       GErledTermin$ = erledigt_Termin.GAkquiDat$
       erledigt_Termin.GAkquiDat$ = erledigt.Vorgang
       IF erledigt_Termin.GAkquiDat$ <> "j" THEN 
         IF Termin.vorgang > 0 THEN 
           ErDatum.GAkquiDat$ = Termin.vorgang - 1
         ELSE 
           ErDatum.GAkquiDat$ = Termin.GAkquidat$ - 1
         END IF 
         ErZeit.GAkquiDat$ = 9
       END IF 
       IF UCASE$ (erledigt.vorgang) <> "J" THEN erledigt_Termin.GAkquiDat$ = "n"
       CodeAK.GAkquiDat$ = 1
       QuickCodeMA.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (CodeMA.GAkquiDat$,"000000")
       QuickCodeKU.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (CodeKU.GAkquiDat$,"000000")
       QuickCodeAK.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (CodeAK.GAkquiDat$,"000000")
       QuickAKMA.GAkquiDat$ = DATE$ (termin.GAkquiDat$,"0dmmyyyy") + STR$ (codeak.GAkquiDat$,"000000") + STR$ (CodeMA.GAkquiDat$,"000000")
       CodeAKMA.GAkquiDat$ = STR$ (codeak.GAkquiDat$,"000000") + STR$ (CodeMA.GAkquiDat$,"000000")
       QuickKUDat.GAkquiDat$ = STR$ (CodeKU.GAkquiDat$,"000000") + UCASE$ (erledigt_Termin.GAkquiDat$) + DATE$ (termin.GAkquiDat$,"yyyymm0d")
       QuickMADat.GAkquiDat$ = STR$ (CodeMA.GAkquiDat$,"000000") + UCASE$ (erledigt_Termin.GAkquiDat$) + DATE$ (termin.GAkquiDat$,"yyyymm0d")
       QuickAKDat.GAkquiDat$ = STR$ (CodeAK.GAkquiDat$,"000000") + UCASE$ (erledigt_Termin.GAkquiDat$) + DATE$ (termin.GAkquiDat$,"yyyymm0d")
       QuickAKMADat.GAkquiDat$ = STR$ (codeak.GAkquiDat$,"000000") + STR$ (CodeMA.GAkquiDat$,"000000") + UCASE$ (erledigt_Termin.GAkquiDat$) + DATE$ (termin.GAkquiDat$,"yyyymm0d")
       QuickKuDatDiff.GAkquiDat$ = codeku * 1000000 + (1000000 - DAYS (termin))
       QuickAKTer.GAkquiDat$ = STR$ (CodeAK.GAkquiDat$,"000000") + DATE$ (termin.GAkquiDat$,"yyyymm0d")
       QuickMATer.GAkquiDat$ = STR$ (CodeMA.GAkquiDat$,"000000") + DATE$ (termin.GAkquiDat$,"yyyymm0d")
       QuickKUTer.GAkquiDat$ = STR$ (CodeKU.GAkquiDat$,"000000") + DATE$ (termin.GAkquiDat$,"yyyymm0d")
       QuickAKMATer.GAkquiDat$ = STR$ (codeak.GAkquiDat$,"000000") + STR$ (CodeMA.GAkquiDat$,"000000") + DATE$ (termin.GAkquiDat$,"yyyymm0d")
       IF Workstation% > 0 THEN Workstation.GAkquiDat$ = Workstation%
       IF Workstation% > 0 THEN QWoNo.GAkquiDat$ = STR$ (Workstation%,"000000") + STR$ (CodeAq.GAkquiDat$,"000000")
       RecStatus.GAkquiDat$ = "c"
       CALL DFile(2,"OFFICE\aktionen" + _fpw$)
       SELECT KEY CodeAK.GAkquiDat$ FILE "aktionen" INDEX CodeAK.aktionen
       MemberOf.GAkquiDat$ = MemberOf.aktionen
     
       codeaq% = Codeaq.vorgang
       CALL MATimeStamp(GAkquiDat$)
       STORE FILE GAkquiDat$
       UNLOCK CURRENT FILE GAkquiDat$
       UNLOCK FILE GAkquiDat$
       IF GErledTermin$ <> erledigt_Termin.GAkquiDat$ THEN 
         SELECT FIRST FILE "supervis" INDEX codema.supervis
         SELECT KEY _vcodema% LOCK FILE "supervis" INDEX codema.supervis
         IF erledigt_Termin.GAkquiDat$ LIKE "j" THEN 
           AnzTermineErl.supervis = AnzTermineErl.supervis + 1
           AnzTermineUnErl.supervis = AnzTermineUnErl.supervis - 1
         ELSE 
           IF GErledTermin$ LIKE "j" THEN 
             AnzTermineErl.supervis = AnzTermineErl.supervis - 1
           END IF 
           AnzTermineUnErl.supervis = AnzTermineUnErl.supervis + 1
         END IF 
         STORE FILE "supervis"
         UNLOCK CURRENT FILE "supervis"
         UNLOCK FILE "supervis"
       END IF 
     IF erledigt_termin.GAkquiDat$ <> "j" AND ErDatum.GAkquiDat$ > 0 AND ErDatum.GAkquiDat$ >= TODAY THEN 
       IF NOT EXISTS (codeaq%,codeaq.tvorlage) THEN 
         BLANK FILE "TVORLAGE"
         CodeTV.TVORLAGE = SER ("TVORLAGE",1)
         codeaq.TVORLAGE = codeaq.GAkquiDat$
         codema.TVORLAGE = codema.GAkquiDat$
         Termin.TVORLAGE = termin.GAkquiDat$
         Uhrzeit.TVORLAGE = Uhrzeit.GAkquiDat$
         Datum.TVORLAGE = ERDATUM.GAkquiDat$
         Zeit.TVORLAGE = ErZeit.GAkquiDat$
         Notiz.TVORLAGE = Notiz.GAkquiDat$
         Ergebnis.TVORLAGE = Ergebnis.GAkquiDat$
         Nachname.TVORLAGE = Nachname.GAkquiDat$
         Bearbeiter.TVORLAGE = Bearbeiter.GAkquiDat$
         erledigt_Termin.tvorlage = erledigt_termin.GAkquiDat$
         DTVorlage.TVORLAGE = STR$ (CodeMA.GAkquiDat$,"000000") + DATE$ (ErDatum.GAkquiDat$,"yyyymm0d") + TIME$ (ErZeit.GAkquiDat$,"hhmm")
         IF Workstation% > 0 THEN Workstation.TVORLAGE = Workstation%
         IF Workstation% > 0 THEN QWoNo.TVORLAGE = STR$ (Workstation%,"000000") + STR$ (CodeTV.TVORLAGE,"000000")
         RecStatus.TVORLAGE = "c"
         STORE FILE "TVORLAGE"
         UNLOCK CURRENT FILE "tvorlage"
         UNLOCK FILE "tvorlage"
       ELSE 
         SELECT KEY codeaq% LOCK FILE "TVORLAGE" INDEX codeaq.tvorlage
         codema.TVORLAGE = codema.GAkquiDat$
         Termin.TVORLAGE = termin.GAkquiDat$
         Uhrzeit.TVORLAGE = Uhrzeit.GAkquiDat$
         Datum.TVORLAGE = ERDATUM.GAkquiDat$
         Zeit.TVORLAGE = ErZeit.GAkquiDat$
         Notiz.TVORLAGE = Notiz.GAkquiDat$
         Ergebnis.TVORLAGE = Ergebnis.GAkquiDat$
         Nachname.TVORLAGE = Nachname.GAkquiDat$
         Bearbeiter.TVORLAGE = Bearbeiter.GAkquiDat$
         erledigt_Termin.tvorlage = erledigt_termin.GAkquiDat$
         DTVorlage.TVORLAGE = STR$ (CodeMA.GAkquiDat$,"000000") + DATE$ (ErDatum.GAkquiDat$,"yyyymm0d") + TIME$ (ErZeit.GAkquiDat$,"hhmm")
         IF Workstation% > 0 THEN Workstation.TVORLAGE = Workstation%
         IF Workstation% > 0 THEN QWoNo.TVORLAGE = STR$ (Workstation%,"000000") + STR$ (CodeTV.TVORLAGE,"000000")
         RecStatus.TVORLAGE = "c"
         STORE FILE "TVORLAGE"
          UNLOCK CURRENT FILE "tvorlage"
          UNLOCK FILE "tvorlage"
       END IF 
     ELSE 
       IF erledigt_termin.GAkquiDat$ LIKE "j" THEN 
         IF EXISTS (codeaq.GAkquiDat$,codeaq.tvorlage) THEN 
           codeaq% = codeaq.GAkquiDat$
           REMOVE FROM FILE "Tvorlage" WHERE codeaq.tvorlage = Codeaq%
         END IF 
       END IF 
     END IF 
     IF GAkquiDat$ LIKE "AKQUISE" AND ErDatum.GAkquiDat$ < 1 THEN 
       IF EXISTS (codeaq.GAkquiDat$,codeaq.tvorlage) THEN 
         codeaq% = codeaq.GAkquiDat$
         REMOVE FROM FILE "Tvorlage" WHERE codeaq.tvorlage = Codeaq%
       END IF 
     END IF 

     FILE "Vorgang"
   CASE "ZEINGANG"
     CALL MATimeStamp("ZEINGANG")
     QuickVSNR.ZEINGANG = VSNRPack$(VS_Nr.ZEINGANG)
     QNumVSNR.zeingang = VSNRPackNum$(VS_NR.zeingang)
     BetragEU = VAL ( STR$ (Betrag / umrechnung,"999999999.00"))
     SELECT KEY codevt.zeingang FILE "KVERTRAG" INDEX lfdnr.kvertrag
     workstation.zeingang = workstation.kvertrag
     QWoNo.ZEINGANG = STR$ (Workstation.zeingang,"000000") + STR$ (CodeAZ.ZEINGANG,"000000")
     CodeEingGE.zeingang = CodeEingGE.kvertrag
     EingereichtBei.zeingang = EingereichtBei.kvertrag
     RecStatus.ZEINGANG = "c"
   CASE "ZEINGAN1"
     CALL MATimeStamp("ZEINGAN1")
     QuickVSNR.ZEINGAN1 = VSNRPack$(VS_Nr.ZEINGAN1)
     QNumVSNR.zeingan1 = VSNRPackNum$(VS_NR.zeingan1)
     QuickVSNRDat.zeingan1 = QuickVSNR.ZEINGAN1 + STR$ ( YEAR (Buchungsdatum.zeingan1),"0000") + STR$ ( MONTH (Buchungsdatum.zeingan1),"00") + STR$ ( DAY (Buchungsdatum.zeingan1),"00")
     BetraggezEU.ZEINGAN1 = VAL ( STR$ (Betrag_gezahlt.ZEINGAN1 / umrechnung.ZEINGAN1,"999999999.00"))
     BetragEU.ZEINGAN1 = VAL ( STR$ (Betrag.ZEINGAN1 / umrechnung.ZEINGAN1,"999999999.00"))
     BetraggezEU.ZEINGAN1 = VAL ( STR$ (Betrag_gezahlt.ZEINGAN1 / umrechnung.ZEINGAN1,"999999999.00"))
     gezahltEU.ZEINGAN1 = VAL ( STR$ (gezahlt.ZEINGAN1 / umrechnung.ZEINGAN1,"999999999.00"))
     SREU.ZEINGAN1 = VAL ( STR$ (SR.ZEINGAN1 / umrechnung.ZEINGAN1,"999999999.00"))
     SRAuszahlungEU.ZEINGAN1 = VAL ( STR$ (SRAuszahlung.ZEINGAN1 / umrechnung.ZEINGAN1,"999999999.00"))
     BewertungEU.ZEINGAN1 = VAL ( STR$ (Bewertung.ZEINGAN1 / umrechnung.ZEINGAN1,"999999999.00"))
     KundEinzahluEU.ZEINGAN1 = VAL ( STR$ (KundEinzahlung.ZEINGAN1 / umrechnung.ZEINGAN1,"999999999.00"))
     SELECT KEY codevt.zeingan1 FILE "KVERTRAG" INDEX lfdnr.kvertrag
     workstation.zeingan1 = workstation.kvertrag
     CodeEingGE.zeingan1 = CodeEingGE.kvertrag
     EingereichtBei.zeingan1 = EingereichtBei.kvertrag
     QWoNo.ZEINGAN1 = STR$ (Workstation.zeingan1,"000000") + STR$ (CodeAZ.ZEINGAN1,"000000")
     RecStatus.ZEINGAN1 = "c"
     IF waehrung.zeingan1 = "" THEN 
       STORE FILE "Zeingan1"
       UNLOCK CURRENT FILE "zeingan1"
       UNLOCK FILE "zeingan1"
       CALL ZEingWaehrung("zeingan1")
     END IF 
   CASE "SPARTEN"
     CALL MATimeStamp("SPARTEN")
     MOUSE OFF 
     CALL DFile(3,"KVERTRAG" + _fpw$)
     CALL DFile(3,"gekond" + _fpw$)
     CALL DFile(3,"gekondm" + _fpw$)
     CALL DFile(3,"vprodukt" + _fpw$)
     _codegrspnew% = codegrsp.sparten
     SELECT FIRST FILE "spgruppe" INDEX codegrsp.spgruppe
     SELECT KEY _codegrspnew% FILE "spgruppe" INDEX codegrsp.spgruppe
     _spartnew$ = Sparte.sparten
     codeva% = codeva.sparten
     vertragsart.sparten = formular.sparten
     gruppe$ = gruppe.spgruppe
     REM QHauptDGVStanda.sparten = STR$ (Hauptsparte.sparten,"000") + STR$ (GDVStandardSpar.sparten,"0")
     IF Workstation% > 0 THEN Workstation.sparten = Workstation%
     IF Workstation% > 0 THEN QWoNo.sparten = STR$ (Workstation%,"000000") + STR$ (Codeva.sparten,"000000")
     RecStatus.sparten = "c"
     IF _codegrspold% <> _codegrspnew% OR _spartold$ <> _spartnew$ THEN 
       STORE FILE "sparten"
       UNLOCK CURRENT FILE "sparten"
       UNLOCK FILE "sparten" ALL 
       IF _codegrspold% <> _codegrspnew% THEN 
        REM 15062005 REQUEST "Bitte warten, die Kundenvertragsdatei","wird an die geÑnderte Spartengruppe angepa·t!",2
         MOUSE OFF 
         FILE "vprodukt"
         UPDATE codegrsp.vprodukt = _codegrspnew%:gruppe.vprodukt = gruppe$ WHERE codeva.vprodukt = codeva%
         END UPDATE 
         CLOSE FILE "vprodukt"
         CALL DFile(3,"vprodukt" + _fpw$)

         FILE "gekond"
         UPDATE codegrsp.gekond = _codegrspnew% WHERE codeva.gekond = codeva%
         END UPDATE 
         CLOSE FILE "gekond"
         CALL DFile(3,"gekond" + _fpw$)
         FILE "kvertrag"
         UPDATE codegrsp.kvertrag = _codegrspnew% WHERE codeva.kvertrag = codeva%
         END UPDATE 
         CLOSE FILE "KVERTRAG"
         CALL DFile(3,"KVERTRAG" + _fpw$)
         
       END IF 
       IF _spartold$ <> _spartnew$ THEN 
         IF EXISTS (codeva%,codeva.gekondm) THEN 
           REQUEST "Bitte warten, die Musteragentur","wird an den geÑnderten Spartenname angepa·t!",2
           MOUSE OFF 
           FILE "gekondm"
           INDEX codeva.gekondm
           SELECT FIRST 
           SELECT KEY codeva% LOCK FILE "gekondm" INDEX codeva.gekondm
           WHILE NOT EOF ("gekondm") AND codeva.gekondm = codeva%
             Sparte.gekondm = _spartnew$
             REM GesSpa.gekondm = Gesellschaft.gekondm + Sparte.gekondm
             STORE FILE "gekondm"
             UNLOCK CURRENT FILE "gekondm"
             UNLOCK FILE "gekondm" ALL 
             SELECT NEXT LOCK 
           WEND 
           UNLOCK CURRENT FILE "gekondm"
           UNLOCK FILE "gekondm" ALL 
         END IF 
         IF EXISTS (codeva%,codeva.vprodukt) THEN 
           REQUEST "Bitte warten, die Produktdatei","wird an den geÑnderten Spartenname angepa·t!",2
           MOUSE OFF 
           FILE "vprodukt"
           INDEX codeva.vprodukt
           SELECT FIRST 
           SELECT KEY codeva% LOCK FILE "vprodukt" INDEX codeva.vprodukt
           WHILE NOT EOF ("vprodukt") AND codeva.vprodukt = codeva%
             Sparte.vprodukt = _spartnew$
             GesSpa.Vprodukt = Gesellschaft.vprodukt + Sparte.vprodukt
             STORE FILE "Vprodukt"
             UNLOCK CURRENT FILE "vprodukt"
             UNLOCK FILE "vprodukt" ALL 
             SELECT NEXT LOCK 
           WEND 
           UNLOCK CURRENT FILE "vprodukt"
           UNLOCK FILE "vprodukt" ALL 
         END IF 
         IF EXISTS (codeva%,codeva.kvertrag) THEN 
           REQUEST "Bitte warten, die Kundenvertragsdatei","wird an den geÑnderten Gesellschaftsnamen angepa·t!",2
           MOUSE OFF 
           FILE "kvertrag"
           UPDATE QuickKUSpar.kvertrag = STR$ (codeku.kvertrag,"000000") + TRIM$ (_spartnew$):
              QuickGesSpar.kvertrag = STR$ (CodeKU.kvertrag,"000000") + gesellschaft.kvertrag + _spartnew$:
              Sparte.kvertrag = _spartnew$:
              produkt.kvertrag = Gesellschaft.kvertrag + " / " + _spartnew$:
              QuickGesSpart.kvertrag = gesellschaft.kvertrag + _spartnew$:
              WHERE codeva.kvertrag = codeva%
           END UPDATE 
           CLOSE FILE "KVERTRAG"
           CALL DFile(3,"KVERTRAG" + _fpw$)
         END IF 
         IF EXISTS (codeva%,codeva.gekond) THEN 
           REQUEST "Bitte warten, die Konditionsdatei","wird an den geÑnderten Spartenname angepa·t!",2
           MOUSE OFF 
           FILE "Gekond"
           INDEX codeva.gekond
           SELECT FIRST 
           SELECT KEY codeva% LOCK FILE "gekond" INDEX codeva.gekond
           WHILE NOT EOF ("gekond") AND codeva.vprodukt = codeva%
             Sparte.gekond = _spartnew$
             QuickCodeGes.gekond = STR$ (CodeMA.gekond,"000000") + UCASE$ (gesellschaft.gekond) + UCASE$ (sparte.gekond)
             STORE FILE "gekond"
             UNLOCK CURRENT FILE "gekond"
             UNLOCK FILE "gekond"
             SELECT NEXT LOCK 
           WEND 
             UNLOCK CURRENT FILE "gekond"
             UNLOCK FILE "gekond" ALL 
           END IF 
       END IF 
       UNLOCK CURRENT FILE "kvertrag"
       UNLOCK FILE "kvertrag" ALL 
       UNLOCK CURRENT FILE "gekond"
       UNLOCK FILE "gekond" ALL 
       UNLOCK CURRENT FILE "vprodukt"
       UNLOCK FILE "vprodukt" ALL 
     END IF 
   CASE "KVERTRAG"
     IF lfdnr.kvertrag < 1 THEN 
       lfdnr.kvertrag = SER ("KVERTRAG",1)
     END IF 
     srtest% = SRHaftung.kvertrag
     lf% = lfdnr.kvertrag
     REM STORE FILE "kvertrag"
     REM SELECT KEY lf% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
     IF NOT OPEN ("sparten") THEN CALL DFile(3,"sparten" + _fpw$)
     IF NOT OPEN ("geadr") THEN CALL DFile(3,"geadr" + _fpw$):CALL DFile(3,"geadr2" + _fpw$)
     IF NOT OPEN ("maadr") THEN CALL DFile(3,"maadr" + _fpw$)
     IF NOT OPEN ("gekond") THEN CALL DFile(3,"gekond" + _fpw$)
     IF NOT OPEN ("spgruppe") THEN CALL DFile(3,"spgruppe" + _fpw$)
     IF NOT OPEN ("aumsatz") THEN CALL DFile(3,"AUmsatz" + _fpw$)
     IF DBeitrZahlung.kvertrag = 0 THEN DBeitrZahlung.kvertrag = VS_Dauer.kvertrag
     WMonJahr.kvertrag = STR$ (WMon.kvertrag,"00") + STR$ (WJahr.kvertrag,"0000")
     QuickVSNR.KVERTRAG = VSNRPack$(VS_Nr.KVERTRAG)
     QNumVSNR.kvertrag = VSNRPackNum$(VS_NR.kvertrag)
     QuickKennz.KVERTRAG = VSNRPack$(Kennzeichen.KVERTRAG)
     QTarif.kvertrag = VSNRPack$(Tarif.kvertrag)
     QzvP1Name.kvertrag = VSNRPack$(zvP1Name.kvertrag)
     QzvP2Name.kvertrag = VSNRPack$(zvP2Name.kvertrag)
     QzvP3Name.kvertrag = VSNRPack$(zvP3Name.kvertrag)
     QzvP4Name.kvertrag = VSNRPack$(zvP4Name.kvertrag)
     QzvP5Name.kvertrag = VSNRPack$(zvP5Name.kvertrag)
     QzvP6Name.kvertrag = VSNRPack$(zvP6Name.kvertrag)

     QzvP1vName.kvertrag = VSNRPack$(zvP1vName.kvertrag)
     QzvP2vName.kvertrag = VSNRPack$(zvP2vName.kvertrag)
     QzvP3vName.kvertrag = VSNRPack$(zvP3vName.kvertrag)
     QzvP4vName.kvertrag = VSNRPack$(zvP4vName.kvertrag)
     QzvP5vName.kvertrag = VSNRPack$(zvP5vName.kvertrag)
     QzvP6vName.kvertrag = VSNRPack$(zvP6vName.kvertrag)


     QAntragsnr.kvertrag = VSNRPack$(Antragsnr.kvertrag)
     QHistCodeVT.Kvertrag = STR$ (Codehist.Kvertrag,"000000") + STR$ (lfdnr.Kvertrag,"000000")
     IF GAFSK$ LIKE "TRUE" THEN 
       IF AFSKPAUDAT.kvertrag > 0 THEN QAFSKPAUDAT.kvertrag = AFSKPAUJN.kvertrag + DATE$ (AFSKPAUDAT.kvertrag,"yyyymm0d")
       IF AFSKPAUDAT.kvertrag < 1 THEN QAFSKPAUDAT.kvertrag = AFSKPAUJN.kvertrag + "00000000"
       IF AFSKPauschDat.kvertrag < 1 THEN QAFSKPAUMADAT.kvertrag = AFSKPauschJN.kvertrag + "00000000"
       IF AFSKPauschDat.kvertrag > 0 THEN 
         QAFSKPAUMADAT.kvertrag = AFSKPauschJN.kvertrag + DATE$ (AFSKPauschDat.kvertrag,"yyyymm0d")
       END IF 
     END IF 
     REM END IF 
     ges$ = "<keine Zuordnung>"
     spar$ = "<keine Zuordnung>"
     ma$ = "<keine Zuordnung>"
     gruppe$ = "<keine Zuordnung>"
     codege1% = codege.kvertrag
     codeva1% = codeva.kvertrag
     codema1% = codema.kvertrag
     codegrsp1% = codegrsp.kvertrag
     IF codema.kvertrag > 0 THEN 
       SELECT KEY codema.kvertrag FILE "maadr" INDEX codema.maadr
       Workstation.kvertrag = workstation.maadr
       w% = workstation.kvertrag
       ANachname.kvertrag = LEFT$ (Nachname.maadr,50)
       AVorname.kvertrag = LEFT$ (vorname.maadr,50)
       Aort.kvertrag = LEFT$ (ort.maadr,50)
       Aplz.kvertrag = LEFT$ (plz.maadr,15)
       Astrasse.kvertrag = LEFT$ (Stra·e.maadr,50)
       REM CALL Fehler("von Quickstore " + VS_NR.Kvertrag,"MA " + Nachname.maadr + "   wks" + STR$ (w%))
     END IF 
     QWoNo.kvertrag = STR$ (Workstation.kvertrag,"000000") + STR$ (lfdnr.kvertrag,"000000")
     STORE FILE "kvertrag"
     UNLOCK CURRENT FILE "kvertrag"
     SELECT KEY lf% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
     REM SELECT KEY lf% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
     ' *********************************************************************************
     ' ZÑhler aktualisieren
     ' *********************************************************************************
     vst% = Codevstatus.kvertrag
     REM CALL Fehler("","")
     IF CodeVStatus.kvertrag <> 11 AND CodeVStatus.kvertrag <> 13 AND codema.kvertrag > 0 AND ag$ <> "j" THEN CALL ZokTest()
     ' *********************************************************************************
     '      E N D E  ZÑhler aktualisieren
     ' ********************************************************************************* 
     
     FILE "kvertrag"
     REM CALL Fehler("von Quickstore " + VS_NR.Kvertrag,"MA " + Nachname.maadr + "   wks" + STR$ (w%))
     IF GLundWrigg$ = "TRUE" THEN 
       CALL DFile(3,"kvfael" + _fpw$)
       SELECT KEY lf% FILE "kvertrag" INDEX lfdnr.kvertrag
       IF NOT EXISTS (lf%,codevt.kvfael) THEN 
         BLANK FILE "kvfael"
         codevt.kvfael = lf%
         EUUmstellung.kvfael = "j"
         STORE FILE "kvfael"
         UNLOCK CURRENT FILE "kvfael"
         UNLOCK FILE "kvfael"
       END IF 
       SELECT FIRST FILE "KVFAEL"
       SELECT KEY lf% LOCK FILE "KVFAEL" INDEX codevt.kvfael
       vs_nr.kvfael = vs_nr.kvertrag
       codeku.kvfael = codeku.kvertrag
       codege.kvfael = codege.kvertrag
       SELECT KEY codeku.kvertrag FILE "Adressen" INDEX codeku.adressen
       Kunde.kvfael = LEFT$ ( LTRIM$ (Nachname.adressen) + LTRIM$ (Vorname.adressen),100)
       SELECT KEY codege.kvertrag FILE "geadr" INDEX codege.geadr
       Gesellschaft.kvfael = Gesellschaft.geadr
       SELECT KEY codeva.kvertrag FILE "Sparten" INDEX codeva.sparten
       codeva.kvfael = Codeva.kvertrag
       Sparte.kvfael = LEFT$ (Sparte.sparten,30)
       INKART.kvfael = INKART.kvertrag
       ZW.kvfael = zw.kvertrag
       Zahlart.kvfael = Zahlart.kvertrag
       K1Bank.kvfael = K1Bank.kvertrag
       K1BLZ.kvfael = K1BLZ.kvertrag
       K1Konto.kvfael = K1Konto.kvertrag
       CodeVStatus.kvfael = CodeVStatus.kvertrag
       QuickVIK.kvFAEL = STR$ (CodeVStatus.kvFAEL,"00") + STR$ (inkart,"0")

     END IF 
     SELECT KEY lf% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
     
     IF EXISTS (codege1%,codege.geadr) THEN 
       SELECT KEY codege1% FILE "geadr" INDEX codege.geadr
       ges$ = TRIM$ (Gesellschaft.geadr)
     END IF 
     IF EXISTS (codeva1%,codeva.sparten) THEN 
       SELECT KEY codeva1% FILE "sparten" INDEX codeva.sparten
       spar$ = TRIM$ (Sparte.sparten)
       codegrsp.kvertrag = codegrsp.sparten
     END IF 
     IF EXISTS (codema1%,codema.maadr) THEN 
       SELECT KEY codema1% FILE "maadr" INDEX codema.maadr
       ma$ = TRIM$ ( LTRIM$ (Nachname.maadr)) + ", " + TRIM$ ( LTRIM$ (Agenturnr.maadr))
     END IF 
     REM 25012000
     IF EXISTS (codegrsp1%,codegrsp.spgruppe) THEN 
       SELECT KEY codegrsp1% FILE "spgruppe" INDEX codegrsp.spgruppe
       spgr$ = TRIM$ (gruppe.spgruppe)
     END IF 
     Agentur.kvertrag = LEFT$ (ma$,30)
     Spartengruppe.kvertrag = spgr$
     QuickKUGEs.kvertrag = STR$ (CodeKU,"000000") + LEFT$ (ges$,30)
     QuickKUSpar.kvertrag = STR$ (CodeKU,"000000") + LEFT$ (spar$,60)
     QuickGesSpar.kvertrag = STR$ (CodeKU,"000000") + LEFT$ (ges$,30) + LEFT$ (spar$,60)
     QuickVIH.kvertrag = STR$ (CodeVStatus.kvertrag,"00") + STR$ (inkart,"0") + STR$ (HauptfÑlligkeit.kvertrag,"00")
     QuickVIK.kvertrag = STR$ (CodeVStatus.kvertrag,"00") + STR$ (inkart,"0")
     QuickGEVA.kvertrag = STR$ (CodeGE,"000000") + STR$ (CodeVA,"000000")
     IF EXISTS (QuickGEVA.kvertrag,QCodeGEVA.vprodukt) THEN 
       SELECT KEY QuickGEVA.kvertrag FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
       codevp% = codevp.vprodukt
       mwst.kvertrag = mwst.vprodukt
       DirektVSKZ.kvertrag = DirektVSKZ.vprodukt
             rzsonst% = rzusonst.vprodukt
             IF zw.kvertrag = 0 THEN 
               rz% = rzueinmal.vprodukt
             END IF 
             IF zw.kvertrag = 1 THEN 
               rz% = rzujÑhrl.vprodukt
             END IF 
             IF zw.kvertrag = 2 THEN 
               rz% = rzuhalb.vprodukt
             END IF 
             IF zw.kvertrag = 4 THEN 
               rz% = rzuviert.vprodukt
             END IF 
             IF zw.kvertrag = 6 THEN 
               rz% = rzu2mon.vprodukt
             END IF 
             IF zw.kvertrag = 12 THEN 
               rz% = rzumon.vprodukt
             END IF 
             SELECT KEY codevp.kvertrag FILE "Vprodukt" INDEX codevp.vprodukt
             IF AutomNetBer.vprodukt = "jjdefekt" THEN 
               Beitrag$ = STR$ (Beitrag.kvertrag,"99999999.00")
               Beitrag% = VAL (Beitrag$)
               netzw% = Beitrag% * 100 / (100 + rzsonst%)
               NettoSonst$ = STR$ (netzw%,"9999999999.00")
               NettoSonst% = VAL (NettoSonst$)
               Netto$ = STR$ ((NettoSonst% * 100) / (100 + rz%),"9999999999.00")
               Netto% = VAL (Netto$)
               NettoMwst% = Netto% * 100 / (100 + mwst.kvertrag)
               NettoMwst$ = STR$ (NettoMwst%,"99999999.00")
               Nettobeitrag.kvertrag = VAL (NettoMwst$)
             END IF 
             IF AutomNetBer.vprodukt LIKE "j" AND GGDVistAN% = 0 THEN 
               IF mwst.kvertrag <> 0 THEN 
                 IF KVBrutto.kvertrag = 0 THEN NettoBeitrag.kvertrag = VAL ( STR$ (Beitrag.kvertrag / (100 + MwSt.kvertrag) * 100,"999999999.00"))
               ELSE 
                 IF KVBrutto.kvertrag = 0 THEN NettoBeitrag.kvertrag = Beitrag.kvertrag
               END IF 
             END IF 
             
       IF Bewertungssumme.kvertrag <> 0 THEN 
         bewert% = Bewertungsbasis.vprodukt
         IF bewert% = 0 THEN bewert% = 1
         IF Bewertungsbasis.vprodukt = - 1 THEN 
           Einheiten.kvertrag = 0
         ELSE 
           IF Einheiten.kvertrag = 0 THEN 
             einh$ = STR$ (Bewertungssumme.kvertrag / bewert%,",9999999999.0000")
             Einheiten.kvertrag = VAL (einh$)
           END IF 
         END IF 
       END IF 
     ELSE 
       BLANK FILE "VProdukt"
       codevp% = SER ("VPRODUKT",1)
       codevp.vprodukt = codevp%
       codege.vprodukt = codege.kvertrag
       codeva.vprodukt = codeva.kvertrag
       gesellschaft.vprodukt = LEFT$ (ges$,30)
       sparte.vprodukt = spar$
       QCodeGEVA.vprodukt = STR$ (CodeGE.vprodukt,"000000") + STR$ (Codeva.vprodukt,"000000")
       QCodeGEVA$ = QCodeGEVA.vprodukt
       GesSpa.Vprodukt = Gesellschaft.vprodukt + Sparte.vprodukt
       STORE FILE "VPRODUKT"
       UNLOCK CURRENT FILE "vprodukt"
       UNLOCK FILE "vprodukt"
     END IF 
     codevp.kvertrag = codevp%
     IF inkart.kvertrag = 0 THEN dtaus.kvertrag = "n"
 
     Gesellschaft.kvertrag = LEFT$ (ges$,30)
     sparte.kvertrag = spar$
     produkt.kvertrag = Gesellschaft.kvertrag + " / " + sparte.kvertrag
     QuickGesSpart = ges$ + spar$
     codeva% = codeva.kvertrag
     REM IF Workstation% > 0 THEN Workstation.kvertrag = Workstation%
     REM IF Workstation% > 0 THEN QWoNo.kvertrag = STR$ (Workstation%,"000000") + STR$ (lfdnr.kvertrag,"000000")
     RecStatus.kvertrag = "c"
     srtest% = SRHaftung.kvertrag
     IF vnehmer.kvertrag = "" THEN 
       SELECT KEY codeku.kvertrag FILE "Adressen" INDEX codeku.adressen
       VNehmer.kvertrag = LEFT$ ( LTRIM$ ( TRIM$ (Nachname.adressen)) + "," + LTRIM$ ( TRIM$ (vorname.adressen)) + "," + LTRIM$ ( TRIM$ (Stra·e.adressen)) + "," + LTRIM$ ( TRIM$ (PLZ.adressen + " " + Ort.adressen)),210)
       ANachname.kvertrag = nachname.GAdrDat$
       AVorname.kvertrag = vorname.GAdrDat$
       AStrasse.kvertrag = Stra·e.GAdrDat$
       AOrt.kvertrag = Ort.GAdrDat$
       APLZ.kvertrag = Plz.GAdrDat$
     END IF 
     REM STORE FILE "kvertrag"
     REM CALL Fehler("von Quickstore " + VS_NR.Kvertrag,"MA " + Nachname.maadr + "   wks" + STR$ (w%))
   CASE "KVPSP"
     QCodeVTZnum."KVPSP" = STR$ (codevt.kvpsp,"000000") + STR$ (ZNummer.kvpsp,"000000")
   CASE "KVFAEL"
     lf% = codevt.kvfael
     IF GLundWrigg$ = "TRUE" THEN 
       SELECT KEY lf% FILE "kvertrag" INDEX lfdnr.kvertrag
       vs_nr.kvfael = vs_nr.kvertrag
       codeku.kvfael = codeku.kvertrag
       codege.kvfael = codege.kvertrag
       SELECT KEY codeku.kvertrag FILE "Adressen" INDEX codeku.adressen
       Kunde.kvfael = LEFT$ ( LTRIM$ (Nachname.adressen) + LTRIM$ (Vorname.adressen),100)
       SELECT KEY codege.kvertrag FILE "geadr" INDEX codege.geadr
       Gesellschaft.kvfael = Gesellschaft.geadr
       SELECT KEY codeva.kvertrag FILE "Sparten" INDEX codeva.sparten
       codeva.kvfael = Codeva.kvertrag
       Sparte.kvfael = LEFT$ (Sparte.sparten,30)
       INKART.kvfael = INKART.kvertrag
       ZW.kvfael = zw.kvertrag
       Zahlart.kvfael = Zahlart.kvertrag
       K1Bank.kvfael = K1Bank.kvertrag
       K1BLZ.kvfael = K1BLZ.kvertrag
       K1Konto.kvfael = K1Konto.kvertrag
       CodeVStatus.kvfael = CodeVStatus.kvertrag
       QuickVIK.kvFAEL = STR$ (CodeVStatus.kvFAEL,"00") + STR$ (inkart,"0")
       QIAZAAbr.kvFAEL = STR$ (Inkart.kvfael,"0") + STR$ (Zahlart.kvfael,"0") + Abruf.kvfael
     END IF 
   CASE "GEADR2"
     CALL MATimeStamp("GEADR2")
     okab% = 0
     IF (_gesold$ <> Gesellschaft.geadr2 OR _gesold1$ <> Gesellschaft2.geadr2 OR _gesstra·e$ <> Stra·e.geadr2 OR _Gesplz$ <> PLZ.Geadr2 OR _Gesort$ <> ort.geadr2 OR _gesland$ <> land.geadr2) AND gesellschaft.geadr2 <> "NEU" THEN 
       REQUEST "Soll das Postanschriftsfeld neu erzeugt werden?","",130,req%
       IF req% = 1 THEN 
         p$ = ""
         IF gesellschaft2.geadr2 <> "" THEN 
           p$ = p$ + LTRIM$ (gesellschaft2.geadr2) + CHR$ (13) + CHR$ (10)
         END IF 
         IF gesellschaft.geadr2 <> "" THEN 
           p$ = p$ + LTRIM$ (gesellschaft.geadr2) + CHR$ (13) + CHR$ (10)
         END IF 
         p$ = p$ + Stra·e.geadr2 + CHR$ (13) + CHR$ (10) + plz.geadr2 + " " + Ort.geadr2 + CHR$ (13) + CHR$ (10) + Land.geadr2 + CHR$ (13) + CHR$ (10)
         Postanschrift.geadr2 = p$
         _gesold$ = Gesellschaft.geadr2
         _gesold1$ = Gesellschaft2.geadr2
         _gesstra·e$ = Stra·e.geadr2
         _Gesplz$ = PLZ.Geadr2
         _Gesort$ = ort.geadr2
         _Gesland$ = Land.geadr2
       END IF 
     END IF 
   CASE "GEADR"
     CALL MATimeStamp("GEADR")
     REM CALL Fehler("Sich geadr","")
     IF (_gesold$ <> Gesellschaft.geadr OR _gesold1$ <> Gesellschaft2.geadr OR _gesstra·e$ <> Stra·e.geadr OR _Gesplz$ <> PLZ.Geadr OR _Gesort$ <> ort.geadr) OR _gesland$ <> land.geadr AND gesellschaft.geadr <> "NEU" THEN 
       IF _gesold$ <> "" THEN 
         IF Postanschrift.geadr = "" THEN 
           req% = 1
         ELSE 
           REQUEST "Soll das Postanschriftsfeld neu erzeugt werden?","",130,req%
         END IF 
       ELSE 
         req% = 1
       END IF 

       IF req% = 1 THEN 
         p$ = ""
         p$ = p$ + LTRIM$ (gesellschaft.geadr) + CHR$ (13) + CHR$ (10)
         p$ = p$ + Stra·e.geadr + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + plz.geadr + " " + Ort.geadr + CHR$ (13) + CHR$ (10) + land.geadr + CHR$ (13) + CHR$ (10)
         Postanschrift.geadr = p$
       END IF 
     END IF 
     MOUSE OFF 
     _gesnew$ = Gesellschaft.geadr
     codege% = Codege.geadr
     CALL DFile(3,"gekond" + _fpw$)
     CALL DFile(3,"gekondm" + _fpw$)
     CALL DFile(3,"vprodukt" + _fpw$)
     IF Workstation% > 0 THEN Workstation.geadr = Workstation%
     IF Workstation% > 0 THEN QWoNo.geadr = STR$ (Workstation%,"000000") + STR$ (codege.geadr,"000000")
     RecStatus.geadr = "c"
     IF _gesnew$ <> _gesold$ THEN 
       STORE FILE "geadr"
       UNLOCK CURRENT FILE "geadr"
       UNLOCK FILE "geadr"
       CALL DFile(3,"kvertrag" + _fpw$)
       REQUEST "Bitte warten, die Kundenvertragsdatei","wird an den geÑnderten Gesellschaftsnamen angepa·t!",2
       MOUSE OFF 
       FILE "kvertrag"
       UPDATE QuickKUGES.kvertrag = STR$ (codeku.kvertrag,"000000") + TRIM$ (_gesnew$):
              QuickGesSpar.kvertrag = STR$ (CodeKU.kvertrag,"000000") + ges$ + sparte.kvertrag:
              Gesellschaft.kvertrag = _gesnew$:
              produkt.kvertrag = Gesellschaft.kvertrag + " / " + sparte.kvertrag:
              QuickGesSpart.kvertrag = gesellschaft.kvertrag + sparte.kvertrag:
              WHERE codege.kvertrag = codege%
       END UPDATE 
       CLOSE FILE "KVERTRAG"
       CALL DFile(3,"KVERTRAG" + _fpw$)
       
       IF EXISTS (codege%,codege.vprodukt) THEN 
         REQUEST "Bitte warten, die Produktdatei","wird an den geÑnderten Gesellschaftsnamen angepa·t!",2
         FILE "vprodukt"
         INDEX codege.vprodukt
         SELECT FIRST 
         SELECT KEY codege% LOCK FILE "vprodukt" INDEX codege.vprodukt
         WHILE NOT EOF ("vprodukt") AND codege.vprodukt = codege%
           Gesellschaft.vprodukt = _gesnew$
           GesSpa.Vprodukt = Gesellschaft.vprodukt + Sparte.vprodukt
           STORE FILE "vprodukt"
           UNLOCK CURRENT FILE "vprodukt"
           UNLOCK FILE "vprodukt"
           SELECT NEXT LOCK 
         WEND 
         UNLOCK CURRENT FILE "vprodukt"
         UNLOCK FILE "vprodukt" ALL 
       END IF 
       IF EXISTS (codege%,codege.gekond) THEN 
         REQUEST "Bitte warten, die Konditionsdatei","wird an den geÑnderten Gesellschaftsnamen angepa·t!",2
         FILE "gekond"
         INDEX codege.gekond
         SELECT FIRST 
         SELECT KEY codege% LOCK FILE "gekond" INDEX codege.gekond
         WHILE NOT EOF ("gekond") AND codege.gekond = codege%
           Gesellschaft.gekond = _gesnew$
           REM 
           QuickCodeGes.gekond = STR$ (CodeMA.gekond,"000000") + UCASE$ (gesellschaft.gekond) + UCASE$ (sparte.gekond)
           STORE FILE "gekond"
           UNLOCK CURRENT FILE "gekond"
           UNLOCK FILE "gekond"
           SELECT NEXT LOCK 
         WEND 
         UNLOCK CURRENT FILE "gekond"
         UNLOCK FILE "gekond" ALL 
       END IF 
       IF EXISTS (codege%,codege.gekondm) THEN 
         REQUEST "Bitte warten, die Musteragentur","wird an den geÑnderten Gesellschaftsnamen angepa·t!",2
         FILE "gekondm"
         INDEX codege.gekondm
         SELECT FIRST 
         SELECT KEY codege% LOCK FILE "gekondm" INDEX codege.gekondm
         WHILE NOT EOF ("gekondm") AND codege.gekondm = codege%
           Gesellschaft.gekondm = _gesnew$
           REM 
           REM QuickCodeGes.gekondm = STR$ (CodeMA.gekondm,"000000") + UCASE$ (gesellschaft.gekondm) + UCASE$ (sparte.gekondm)
           STORE FILE "gekondm"
           UNLOCK CURRENT FILE "gekondm"
           UNLOCK FILE "gekondm"
           SELECT NEXT LOCK 
         WEND 
         UNLOCK CURRENT FILE "gekondm"
         UNLOCK FILE "gekondm" ALL 
       END IF 
     END IF 
         _gesold$ = Gesellschaft.geadr
         _gesold1$ = Gesellschaft2.geadr
         _gesstra·e$ = Stra·e.geadr
         _Gesplz$ = PLZ.Geadr
         _Gesort$ = ort.geadr
     CALL DFile(3,"KVERTRAG" + _fpw$)
     UNLOCK CURRENT FILE "KVERTRAG"
     UNLOCK FILE "KVERTRAG" ALL 
   CASE "KGEADR"
     QVTGE.KGeadr = STR$ (codevt.kgeadr,"000000") + STR$ (codege.kgeadr,"000000")
     ges$ = ""
     IF EXISTS (codege.kgeadr,codege.geadr) THEN 
       SELECT KEY codege.kgeadr FILE "Geadr" INDEX codege.geadr
       ges$ = Gesellschaft.geadr
     END IF 
     REQUEST "Mîchten Sie den Namen, Stra·e,Ort und Telefon aus der"," Hauptgesellschaft Åbernehmen?",130,req%
     IF (req% = 1) THEN 
       anrede.kgeadr = anrede.geadr
       nachname.kgeadr = nachname.geadr
       vorname.kgeadr = vorname.geadr
       stra·e.kgeadr = stra·e.geadr
       ort.kgeadr = ort.geadr
       plz.kgeadr = plz.geadr
       telefon1.kgeadr = telefon1.geadr
       telefon2.kgeadr = telefon2.geadr
       telefax.kgeadr = telefax.geadr
       btx.kgeadr = btx.geadr
     END IF 
     IF Workstation% > 0 THEN Workstation.kgeadr = Workstation%
     IF Workstation% > 0 THEN QWoNo.kgeadr = STR$ (Workstation%,"000000") + STR$ (codebge.kgeadr,"000000")
     RecStatus.kgeadr = "c"
     Gesellschaft.kgeadr = ges$
   CASE "WEMAIL","wmail"
     SELECT FIRST FILE "supervis" INDEX codema.supervis
     SELECT KEY GMACodema% FILE "supervis" INDEX codema.supervis
     Name.wemail = name.supervis
     datum.wemail = TODAY 
   END SELECT 
   IF MOD (datei$) THEN 
     TimeStamp = TimeStamp%
     REM MANAme = GMANAme$
     REM MACodema = GCodeMA%
     REM IF Workstation% > 0 THEN Workstation = Workstation%
     IF abbruch% <> - 1 THEN 
       STORE FILE datei$
       UNLOCK CURRENT FILE datei$
       UNLOCK FILE datei$ ALL 
       ON ERROR GOTO Unl150620001
       UNLOCK CURRENT FILE datei$
       UNLOCK FORM 
Unl150620001: 
     ON ERROR GOTO ErrorHandler
     ELSE 
       abbruch% = 0
     END IF 
   ELSE 
       ON ERROR GOTO Unl150620002
       UNLOCK CURRENT FILE datei$
       UNLOCK FORM 
Unl150620002: 
     ON ERROR GOTO ErrorHandler 
   END IF 
   UNLOCK CURRENT FILE datei$
   UNLOCK FILE datei$ ALL 
   FILE cfile$
 END IF 
 MOUSE ON 
 END SUB 
 
 
 
 ' MStore
 ' ======================================================================
 ' Zweck:       gleiche Funktion wie FStore jedoch als MenÅaufruf ver-
 '              wendbar
 ' Hinweis:     Prozedur gilt nur fÅr aktuelle Datei
 ' ======================================================================
 ' 0000/10.01.93   
 
SUB MStore()
 CALL FStore( FILE )
 END SUB 
 
 
 ' ClearFile
 ' ======================================================================
 ' Zweck:       lîscht alle DatensÑtze einer Datei
 ' Aufruf:      CALL ClearFile(datei$)
 ' Parameter:   datei$  = Datei deren Inhalt gelîscht werden soll
 ' ======================================================================
 
SUB ClearFile(cldatei$)
 MOUSE OFF 
 cfile$ = FILE 
 REMOVE FROM FILE cldatei$
 FILE cfile$
 MOUSE ON 
 END SUB 
 
 
 ' DateOK%
 ' ======================================================================
 ' Zweck:       prÅft Variable auf korrektes Datum
 ' Aufruf:      if DateOK%(datvar$) then ...
 ' Parameter:   datvar$  = Variable mit zu prÅfendem Datum
 ' RÅckgabe:    -1 : Datum OK
 '              0  : Datumsformat fehlerhaft
 ' ======================================================================
 
FUNCTION DateOK%(datvar$)
   ON ERROR GOTO FalseDate
   _dateok% = 0
   _testdays% = DAYS (datvar$)
   _dateok% = - 1
FalseDate: 
   CLEAR ERRNO 
   IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
   DateOK% = _dateok%
 END FUNCTION 
 
 
 
 
  


 ' Nummernvergabe im Netzwerk
 ' ======================================================================
 
FUNCTION sernum%(datei$)
 datei$ = UCASE$ (datei$)
 CALL DFile(2,"OFFICE\sernum" + _fpw$)
 SELECT KEY datei$ LOCK FILE "sernum" INDEX datei.sernum
 IF NOT FOUND ("sernum") THEN 
   BLANK FILE "sernum"
   CodeSN.sernum = SER ("sernum",1)
   Datei.sernum = datei$
   lastnum.sernum = SER (datei$,1) + 1
   sernum% = lastnum.sernum
   STORE FILE "sernum"
   UNLOCK CURRENT FILE "Sernum"
   UNLOCK FILE "sernum"
 ELSE 
   lastnum.sernum = lastnum.sernum + 1
   sernum% = lastnum.sernum
   STORE FILE "sernum"
   UNLOCK CURRENT FILE "Sernum"
   UNLOCK FILE "sernum"
 END IF 
 END FUNCTION 
 
 
 '      ******************************
 '      ** Handling von LOG-Dateien **
 '      ******************************
 
SUB LogDemo()
 CALL CreateLog()
 FOR a% = 1 TO 20
   CALL WriteLog( STR$ (a%,"9999") + ". Aufruf von WriteLog()")
 NEXT 
 CALL CloseLog()
 END SUB 
  
 
SUB CreateLog()
 OPEN _netpath$ + _projekt$ + ".LOG" FOR OUTPUT 
 ? "Datei " + UCASE$ (_netpath$ + _projekt$) + ".LOG erstellt am " + DATE$ ( TODAY ,"0d.mm.yyyy") + " / " + TIME$ ( NOW ,"hh:mm:ss")
 ? "-------------------------------------------------------------------------"
 ? 
 CLOSE OUTPUT 
 END SUB 
 
SUB CloseLog()
 OPEN _netpath$ + _projekt$ + ".LOG" FOR APPEND 
 ? 
 ? "-------------------------------------------------------------------------"
 ? "Eintragung beendet am " + DATE$ ( TODAY ,"0d.mm.yyyy") + "/" + TIME$ ( NOW ,"hh:mm:ss")
 CLOSE OUTPUT 
 IF Greqstati% <> 1 THEN 
   CREATE DIALOG "PROT",0,0,244,154,title$,"MS Sans Serif",8
   ADD DIALOG "PROT",4,0,0,244,130,0,""
   ADD DIALOG "PROT",9,6,9,22,22,2
   ADD DIALOG "PROT",5,35,13,194,10,0,"WÑhrend der zuletzt durchgefÅhrten Aktion wurde eine"
   ADD DIALOG "PROT",5,35,23,194,10,0,"Protokolldatei erstellt, in der eventuelle Fehler und Zusatz-"
   ADD DIALOG "PROT",5,35,33,194,10,0,"information gespeichert wurden."
   ADD DIALOG "PROT",5,35,53,194,10,0,"WÑhlen Sie " + CHR$ (34) + "Ja" + CHR$ (34) + ", wenn Sie das Protokoll einsehen und"
   ADD DIALOG "PROT",5,35,63,194,10,0,"eventuell drucken wollen."
   ADD DIALOG "PROT",5,35,83,194,10,0,"WÑhlen Sie " + CHR$ (34) + "Nein" + CHR$ (34) + ", wenn Sie das Protokoll nicht"
   ADD DIALOG "PROT",5,35,93,194,10,0,"einsehen mîchten."
   ADD DIALOG "PROT",5,35,113,194,10,0,"Wollen Sie das Protokoll einsehen?"
   ADD DIALOG "PROT",1,118,134,55,15,0,"&Nein",0,0
   ADD DIALOG "PROT",1,62,134,55,15,1,"&Ja",1,1
   DIALOG "PROT",req%
   REMOVE DIALOG "PROT"
   IF req% = 1 THEN CALL ShowLog()
 END IF 
 END SUB 
 
SUB WriteLog(logtext$)
 OPEN _netpath$ + _projekt$ + ".LOG" FOR APPEND 
 IF WinWordAnsi$ LIKE "ON" THEN 
   ? FN ansi(logtext$)
 ELSE 
   ? FN ansi(logtext$)
 END IF 
 CLOSE OUTPUT 
 END SUB 
 
SUB DeleteLog()
 IF EXISTS (_netpath$ + _projekt$ + ".LOG") THEN DELETE _netpath$ + _projekt$ + ". LOG "
 END SUB 
  
SUB ShowLog()
 SET STATUS "Anzeige des Fehlerprotokolls"
 IF EXISTS (_netpath$ + _projekt$ + ".LOG") THEN 
   REM LOAD TEXT _netpath$ + _projekt$ + ".LOG"
   REM EDIT TEXT 
   atext$ = _netpath$ + _projekt$ + ".LOG"
   a% = CALL ("ShellExecute",0,"open",atext$,"","",1)
 ELSE 
   CALL Fehler("Es konnte kein Fehlerprotokoll gefunden werden!","")
 END IF 
 SET STATUS "Bereit"
 END SUB 

 REM **************************************************************************************************************************************************************************
 REM 14.09.2005 freie Log - Datei Routinen

SUB CreateLogF(datei$)
 OPEN _netpath$ + datei$ FOR OUTPUT 
 ? "Datei " + UCASE$ (_netpath$ + datei$) + " erstellt am " + DATE$ ( TODAY ,"0d.mm.yyyy") + " / " + TIME$ ( NOW ,"hh:mm:ss")
 ? "-------------------------------------------------------------------------"
 ? 
 CLOSE OUTPUT 
 END SUB 
 
SUB CloseLogF(datei$)
 OPEN _netpath$ + datei$ FOR APPEND 
 ? 
 ? "-------------------------------------------------------------------------"
 ? "Eintragung beendet am " + DATE$ ( TODAY ,"0d.mm.yyyy") + "/" + TIME$ ( NOW ,"hh:mm:ss")
 CLOSE OUTPUT 
 END SUB 
 
SUB WriteLogF(datei$,logtext$)
 OPEN _netpath$ + datei$ FOR APPEND 
 ? FN ansi(logtext$)
 CLOSE OUTPUT 
 END SUB 
 
SUB DeleteLogF(datei$)
 IF EXISTS (_netpath$ + datei$) THEN DELETE _netpath$ + datei$
 END SUB 
  
SUB ShowLogF(datei$)
 SET STATUS "Anzeige des Protokolls"
 IF EXISTS (_netpath$ + datei$) THEN 
   REM LOAD TEXT _netpath$ + _projekt$ + ".LOG"
   REM EDIT TEXT 
   atext$ = _netpath$ + datei$
   a% = CALL ("ShellExecute",0,"open",atext$,"","",1)
 ELSE 
   CALL Fehler("Die Protokolldatei " + _netpath$ + datei$ + " konnte nicht gefunden werden!","")
 END IF 
 SET STATUS "Bereit"
 END SUB 
 REM **************************************************************************************************************************************************************************


  
SUB EditASCIIFile(asciifile$)
 IF EXISTS (asciifile$) THEN 
   LOAD TEXT asciifile$
   EDIT TEXT 
   REM a% = CALL ("ShellExecute",0,"open",atext$,"","",1)
 ELSE 
   CALL Fehler("Die Datei " + UCASE$ (asciifile$) + " konnte nicht gefunden werden!","")
 END IF 
 END SUB 
 
 
  
  
 
  
 
  

  
 '      **************************************
 '      ** Routinen fÅr Formular "SUPERVIS" **
 '      **************************************
 
SUB SUPERVIS()
 IF disabled%("SUPERVIS") THEN END SUB 
 cuvc% = Codema.supervis
 CALL DFile(2,"access" + _fpw$)
 CALL DFile(2,"accode" + _fpw$)
 CALL DFile(2,"masuper" + _fpw$)
 _formend% = 0
 SET STATUS "Bereit"
 ON ERROR GOTO ErrorHandler
 WHILE _formend% = 0
   ON ERROR GOTO ErrorHandler
   SUPERVISsub% = 0
   maske$ = "SUPERVIS"
   IF GASP% THEN 
     maske$ = "ASPSUPER"
   END IF 
   IF FORM <> maske$ THEN 
     SET HEADING title$ + " - Mitarbeiterverwaltung"
     IF EXISTS (GOFFForm$ + maske$ + ".sbv") THEN 
       OPEN FORM GOFFForm$ + maske$
     ELSE 
       OPEN FORM GOFFForm$ + maske$
     END IF 
     SET f = Superbase.Form
     SET STATUS "Mitarbeiterverwaltung"
     FILE "SUPERVIS"
     INDEX nachname.supervis
     SELECT FIRST 
     SELECT FORM KEY codema.supervis FILE "access" INDEX codema.access
 
     CALL MNSUPERVIS()
     FORM 
   END IF 
   MENU ON 
   MOUSE ON 
   FORM 
   cucuma% = codema.supervis
   CALL SVUpdate()
   ON ERROR GOTO ErrorHandler
   f.suchen.enabled = - 1
   f.abbruch.enabled = 0
   f.abbruch.visible = 0
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL SVPrev()
   CASE CrsRight%,PgDn%
     CALL SVNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   CALL ClearKBDBuffer()
   SELECT CASE SUPERVISsub%
   CASE 1
     REM neues BÅro zuweisen
     IF NOT disabled%("SUPERVISCHANGEOFF") THEN 
       REQUEST "Wollen Sie wirklich das BÅro Ñndern?","",130,req%
       codema% = codema.supervis
       IF req% = 1 THEN 
         wks1% = Workstation.supervis
         IF wks1% < 1 THEN wks1% = 0
         a% = SelectOffice%("BÅro-Auswahl","",1,wks1%)
         IF a% <> - 1 THEN 
           bÅro$ = "BÅro: " + LTRIM$ (GetWksName$(a%))
           SELECT KEY codema% LOCK FILE "supervis" INDEX codema.supervis
           Workstation.supervis = a%
           BÅro.supervis = bÅro$
           STORE FILE "supervis"
           UNLOCK CURRENT FILE "supervis"
           UNLOCK FILE "supervis"
           bÅro$ = "BÅro: " + LTRIM$ (GetWksName$(Workstation.supervis))
           FORM 
         END IF 
       END IF 
     END IF 
     MOUSE ON 
   CASE 2
     REM Zugriffsrechte Åbernehmen
     codema% = codema.supervis
     CALL MAZugriff(codema%)
     SELECT FORM KEY codema% FILE "supervis" INDEX codema.supervis
     FORM 
   CASE 99
     CALL ButDesabled()
     f.freigeben.enabled = 0
     f.sperren.enabled = 0
     MENU OFF 
     ENTER nachname.supervis,0
     MENU ON 
     f.freigeben.enabled = - 1
     f.sperren.enabled = - 1
     IF GEMAILJNAuto% = - 1 AND GMACodeMA% = codema.supervis THEN 
       GEMAILJNAuto% = EMAILJNAuto.supervis
     END IF 
     CALL ButEnabled()
     IF abbruch% = - 1 THEN 
       SELECT KEY codema.supervis FILE "supervis" INDEX codema.supervis
       FORM 
       abbruch% = 0
     END IF 
     SELECT FORM KEY codema.supervis FILE "supervis" INDEX codema.supervis
     FORM 
   END SELECT 
 WEND 
 _formend% = 0
 cucuma% = CodeMA.Supervis
 IF FileChanged%("supervis") = 1 THEN CALL FStore("supervis")
 FILE "supervis"
 INDEX codema.supervis
 SELECT FIRST FILE "supervis" INDEX CodeMA.supervis
 SELECT KEY GMACodeMA% FILE "supervis" INDEX CodeMA.supervis
 END SUB 
 
 '  Mitarbeiter mit Zugriffsrechten von anderem Mitarbeiter Åbernehmen
 ' ======================================================================  
SUB MAZugriff(codema%)
 wks% = Workstation%
 vonCodema% = GetCodeMASU%(prompt%,wks%)
 MOUSE OFF 
 IF vonCodema% = codema% OR vonCodema% = 0 THEN GOTO endMAzug110420021
 DIM Acodeac%(20000)
 ff$ = FILE 
 REMOVE FROM FILE "ACCESS" WHERE codema.access = codema%
 FILE "ACCESS"
 ind$ = INDEX 
 INDEX codema.access
 SELECT FIRST 
 i% = 0
 SELECT KEY voncodema% FILE "ACCESS" INDEX codema.access
 WHILE NOT EOF ("ACCESS") AND codema.access = vonCodema%
   SET STATUS STR$ (i%,",999999")
   IF codema.access = vonCodema% AND ACCODE.ACCess <> "" THEN 
     Acodeac%(i%) = Codeac.access
     i% = i% + 1
   END IF 
   SELECT NEXT FILE "ACCESS"
 WEND 
 IF i% > 0 THEN 
   FOR a% = 0 TO i% - 1
     SET STATUS STR$ (a%,",999999")
     SELECT FIRST FILE "ACCESS" INDEX codeac.access
     SELECT KEY Acodeac%(a%) FILE "ACCESS" INDEX codeac.access
     BLANK DUPLICATE 
     codeac.access = SER ("ACCESS",1)
     codema.access = codema%
     QuickCode.ACCESS = STR$ (CodePR.ACCess,"000000") + STR$ (codema%,"000000") + ACCODE.ACCess
     STORE FILE "ACCESS"
     UNLOCK CURRENT FILE "ACCESS"
     UNLOCK FILE "access"
   NEXT a%
   INDEX ind$
   FILE ff$
   REQUEST "Zugriffsrechte wurden Åbernommen!",""
 END IF 

endMAzug110420021: 
 MOUSE ON 
 END SUB 


 '  Mitarbeiter mit Zugriffsrechten drucken
 ' ====================================================================== 
SUB SVDrucken()
 ma% = Codema.supervis
 IF disabled%("SUPERVISDRU") THEN GOTO SVDruckend
    DIM dlg AS Dialog
    DIM control AS DialogControl
    opt% = 0
    Superbase.Dialogs.Add("Dialogname")
    SET dlg = Superbase.Dialogs.Dialogname
    dlg.Move(0,0,222,84)
    dlg.Caption = "Art des Druckes"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(2,8,219,54)
    control.Caption = " WÑhlen Sie eine Option "
 
    SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
    control.Move(6,20,214,10)
    control.Caption = "gesperrte Funktionen des aktuellen Mitarbeiter drucken"
    control.Bind("opt%")
    control.ValueOn = 0
 
    SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
    control.Move(6,32,214,9)
    control.Caption = "gesperrte Funktionen - Gesamtliste der Mitarbeiter drucken"
    control.Bind("opt%")
    control.ValueOn = 1
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(58,64,43,16)
    control.Default = 1
    control.Caption = "OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(104,64,42,16)
    control.Caption = "Abbruch"
    control.ReturnValue = 0
    DIALOG "Dialogname",req%
    REMOVE DIALOG "Dialogname"
    IF req% = 0 THEN END SUB 
  
    FILE "supervis"
    SELECT FIRST LOCK 
    WHILE NOT EOF ("Supervis")
      IF NOT EXISTS (codema.supervis,codema.access) THEN 
        BLANK FILE "access"
        codema.access = codema.supervis
        STORE FILE "ACCESS"
        UNLOCK CURRENT FILE "access"
        UNLOCK FILE "access"
      END IF 
      SELECT NEXT LOCK FILE "Supervis"
    WEND 
    SELECT FIRST FILE "supervis" INDEX codema.supervis
    IF opt% = 0 THEN 
      SELECT KEY ma% FILE "supervis" INDEX codema.supervis
    END IF 
    CALL PRep("SVDRUCK")
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 GROUP Name.SUPERVIS
 BEFORE GROUP Name.SUPERVIS
     SET REPORT PAGE "H_Name.SUPER002"
     OUTPUT REPORT PAGE 
 END GROUP 
 
 AFTER GROUP Name.SUPERVIS
     SET REPORT PAGE "F_Name.SUPER002"
     OUTPUT REPORT PAGE 
     EJECT REPORT 
 END GROUP 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 ON ERROR GOTO SVDruckend
 SET QUERY ON 
 SET QUERY LOCK OFF 
 IF opt% = 0 THEN 
   SELECT ;
     WHERE CodeMA.SUPERVIS = CodeMA.access AND codema.supervis = ma%
     ORDER REPORT Name.SUPERVIS,Beschreibung.ACCESS
     TO ASK 
   END SELECT 
 ELSE 
   SELECT ;
     WHERE CodeMA.SUPERVIS = CodeMA.access
     ORDER REPORT Name.SUPERVIS,Beschreibung.ACCESS
     TO ASK 
   END SELECT 
 END IF 
 
SVDruckend: 
 ON ERROR GOTO ErrorHandler
 END SUB 
 
 



SUB PROVEuroDM()
 MOUSE OFF 
 aa% = 0
 FILE "waehrung"
 WHILE NOT EOF ("WAEHRUNG")
   IF UCASE$ (waehrung.waehrung) = zweitwaehr$ THEN 
     euro% = umrechnung.waehrung
     aa% = 1
   END IF 
   SELECT NEXT 
 WEND 
 IF aa% = 0 THEN 
   SELECT FIRST INDEX codew.waehrung
   zweitwaehr$ = waehrung.waehrung
   euro% = umrechnung.waehrung
 END IF 
 FILE "Provisio"
 INDEX codepr.provisio
 IF RECCOUNT ("provisio") > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 j% = 0
 WHILE NOT EOF ("provisio")
   j% = j% + 1
   SET STATUS STR$ (j%,"9999999") + " Umrechnung der Euro-Werte in Ihre StandarwÑhrung in Datei Provision!"
   FOR i% = 1 TO 12
     feld$ = "Ang" + STR$ (i%,"00")
     feldEU$ = "Ang" + STR$ (i%,"00") + "EU"
     feld$$ = feldEU$$ * euro%
     feld$ = "Rec" + STR$ (i%,"00")
     feldEU$ = "Rec" + STR$ (i%,"00") + "EU"
     feld$$ = feldEU$$ * euro%
     feld$ = "Lie" + STR$ (i%,"00")
     feldEU$ = "Lie" + STR$ (i%,"00") + "EU"
     feld$$ = feldEU$$ * euro%
     feld$ = "Auf" + STR$ (i%,"00")
     feldEU$ = "Auf" + STR$ (i%,"00") + "EU"
     feld$$ = feldEU$$ * euro%
     feld$ = "Bes" + STR$ (i%,"00")
     feldEU$ = "Bes" + STR$ (i%,"00") + "EU"
     feld$$ = feldEU$$ * euro%
     feld$ = "Gut" + STR$ (i%,"00")
     feldEU$ = "Gut" + STR$ (i%,"00") + "EU"
     feld$$ = feldEU$$ * euro%
     feld$ = "Pro" + STR$ (i%,"00")
     feldEU$ = "Pro" + STR$ (i%,"00") + "EU"
     feld$$ = feldEU$$ * euro%
   NEXT i%
   ReGesJahr = ReGesJahrEU * euro%
   ReGesGes = ReGesGesEU * euro%
   AngGesJahr = AngGesJahrEU * euro%
   AngGesGes = AngGesGesEU * euro%
   BesGesJahr = BesGesJahrEU * euro%
   BesGesGes = BesGesGesEU * euro%
   AufGesJahr = AufGesJahrEU * euro%
   AufGesGes = AufGesGesEU * euro%
   LieGesJahr = LieGesJahrEU * euro%
   LieGesGes = LieGesGesEU * euro%
   GutGesJahr = GutGesJahrEU * euro%
   GutGesGes = GutGesGesEU * euro%
   STORE FILE "provisio"
   UNLOCK CURRENT FILE "provisio"
   SELECT NEXT LOCK FILE "Provisio" INDEX codepr.provisio
 WEND 
 FILE "vertrete"
 INDEX codema.vertrete
 IF RECCOUNT ("vertrete") > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 SET STATUS "Umrechnung der Euro-Werte in Ihre StandarwÑhrung in Datei Vertrete"
 j% = 0
 WHILE NOT EOF ("vertrete")
   j% = j% + 1
   SET STATUS STR$ (j%,"9999999") + " Umrechnung der Euro-Werte in Ihre StandarwÑhrung in Datei Vertreter!"
   ReGesJahr = ReGesJahrEU * euro%
   ReGesGes = ReGesGesEU * euro%
   AngGesJahr = AngGesJahrEU * euro%
   AngGesGes = AngGesGesEU * euro%
   BesGesJahr = BesGesJahrEU * euro%
   BesGesGes = BesGesGesEU * euro%
   AufGesJahr = AufGesJahrEU * euro%
   AufGesGes = AufGesGesEU * euro%
   LieGesJahr = LieGesJahrEU * euro%
   LieGesGes = LieGesGesEU * euro%
   GutGesJahr = GutGesJahrEU * euro%
   GutGesGes = GutGesGesEU * euro%
   STORE FILE "vertrete"
   UNLOCK CURRENT FILE "vertrete"
   SELECT NEXT LOCK FILE "vertrete" INDEX codema.vertrete
 WEND 
 SET STATUS ""
 MOUSE ON 
 END SUB 
 
SUB VERTRETER()
 ON ERROR GOTO ErrorHandler
 IF disabled%("SUPERVIS") THEN END SUB 
 cuvc% = Codema.vertrete
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "VERTRET"
 IF eurosupport$ = "TRUE" THEN maske$ = "VERTRETE"
 FILE "VERTRETE"
 INDEX nachname.VERTRETE
 vnachn$ = name.vertrete
 SELECT FIRST 
 WHILE _formend% = 0
   ON ERROR GOTO ErrorHandler
   SUPERVISsub% = 0
   IF FORM <> maske$ THEN 
     SET HEADING title$ + " - Vertreterverwaltung"
     IF EXISTS (GPrjForm$ + maske$ + ".sbv") THEN 
       OPEN FORM GPrjForm$ + maske$
     ELSE 
       OPEN FORM GPrjForm$ + maske$
     END IF 
     SET f = superbase.form
     IF eurosupport$ = "TRUE" THEN 
       f.waehrmask.visible = - 1
       f.Labelwaehr.visible = - 1
     ELSE 
       f.waehrmask.visible = 0
       f.Labelwaehr.visible = 0
     END IF 
     SET STATUS "Vertreterverwaltung"
     REM FILE "provisio"
     REM INDEX codema.provisio
     SELECT FORM KEY vnachn$ FILE "vertrete" INDEX name.vertrete
     FORM 
     CALL MNVERTRETE()
     REM FORM 
   END IF 
   MENU ON 
   MOUSE ON 
   FORM 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL VTPrev()
   CASE CrsRight%,PgDn%
     CALL VTNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   CALL ClearKBDBuffer()
   SELECT CASE SUPERVISsub%
   CASE 99
     MENU OFF 
     CALL ButDesabled()
     MOUSE ON 
     ENTER nachname.VERTRETE,0
     CALL ButEnabled()
     MENU ON 
     IF abbruch% = - 1 THEN 
       SELECT KEY codema.vertrete FILE "vertrete" INDEX codema.vertrete
       FORM 
       abbruch% = 0
     END IF 
     CASE 991
        vnachn$ = name.vertrete
        IF UCASE$ ( FORM ) = "VERTRET" THEN 
          maske$ = "VERTRETE"
        ELSE 
          maske$ = "VERTRET"
          CALL Fehler("Es ist notwendig die Provisionen von Euro in Ihre ZweitwÑhrung umzurechnen!","Wenn Sie diese Operation gerade durchgefÅhrt haben, ist diese Operation nicht notwendig!")
          REQUEST "Mîchten Sie die Umrechnung jetzt vornehmen?","",130,req%
          IF req% = 1 THEN CALL PROVEuroDM()
        END IF 
   END SELECT 
 WEND 
 _formend% = 0
 IF MOD ("VERTRETE") OR NEW ("VERTRETE") THEN CALL FStore("VERTRETE")
 SELECT KEY cuvc% FILE "VERTRETE" INDEX CodeMA.VERTRETE
 END SUB 
 
 
 
 ' Felder in Maske updaten
 ' ======================================================================
 
SUB SVUpdate()
 IF cucuma% <> 0 THEN 
   SELECT FIRST FILE "Supervis" INDEX codema.supervis
   SELECT KEY cucuma% FILE "Supervis" INDEX codema.supervis
 END IF 
 pawo$ = CALL ("crypt",Pa·wort.SUPERVIS)
 IF GASP% THEN 
   bÅro$ = "BÅro: " + LTRIM$ (GetWksName$(Workstation.supervis))
 END IF 
 FORM 
 END SUB 
 
 ' Mitarbeiter neu erfassen
 ' ======================================================================
 
SUB SVNeu()
 IF nachname.supervis <> "" THEN CALL FStore("supervis")
   IF GASP% THEN 
     wks1% = Workstation%
     a% = SelectOffice%("BÅro-Auswahl","",1,wks1%)
     IF a% = - 1 THEN 
       CALL Fehler("Sie haben kein BÅro gewÑhlt, die Erfassung wird abgebrochen!","")
       GOTO svneuend17032002
     END IF 
   END IF 
 
 BLANK FILE "supervis"
 SET STATUS "Datensatz neu angelegt..."
 CodeMA% = SER ("supervis",1)
 Codema.supervis = Codema%
 Workstation.supervis = a%
 Name.supervis = "NEU"
 STORE FILE "supervis"
 UNLOCK CURRENT FILE "supervis"
 SELECT FORM KEY codema% LOCK FILE "Supervis" INDEX codema.supervis
 IF GASP% THEN 
   bÅro$ = "BÅro: " + LTRIM$ (GetWksName$(Workstation.supervis))
 END IF 
 pawo$ = ""
 FORM 
 SUPERVISsub% = 99
svneuend17032002: 
 FORM 
 END SUB 
 
 
 ' Mitarbeiter suchen
 ' ======================================================================
 
SUB SVSuchen()
 GCodieRuf1% = 0
 REM REQUEST "WÑhlen Sie einen Bearbeiter aus:","",25,req%,ma%,72,codeMA.Supervis,nachname.supervis,vorname.supervis INDEX nachname.supervis
 ma% = 0
 GCodieRuf1% = 0
 ma% = MitSuchen%()
 GCODieRuf% = - 1
 IF ma% <> 0 THEN 
   SELECT FORM KEY ma% FILE "supervis" INDEX codema.supervis
 END IF 
 FORM 
 END SUB 
 

SUB SuKurzSuche()
 ma% = 0
 req3% = CALL ("_SearchReShow",c$)
 IF VAL (c$) <> 0 THEN ma% = VAL (c$)

 IF ma% <> 0 THEN 
   SELECT FORM KEY ma% FILE "supervis" INDEX codema.supervis
 END IF 
 FORM 
 END SUB 

FUNCTION MitSuchen%()
 FILE "supervis"
 INDEX nachname.supervis
 MitSuchen% = 0
 SELECT FIRST FILE "Supervis" INDEX nachname.supervis
 a% = 0
 prompt$ = ""
 MOUSE OFF 
 fzaehl% = RECCOUNT ("SUPERVIS") + 1
 IF fzaehl% > 20000 THEN fzaehl% = 20000
 DIM Agenturen$(fzaehl%,1)
 REDIM Agenturen$(fzaehl%)
 DIM Auswahl$(1)
 WHILE NOT EOF ("Supervis")
   IF name.supervis <> "" THEN 
     Agenturen$(a%) = nachname.supervis + ", " + vorname.supervis + SPACE$ (120) + STR$ (CodeMA.supervis,"000000")
     IF GCODIE% = - 1 THEN 
       IF GCodieRuf1% = 0 THEN CALL SearchInitMA2("SUPERVIS")
     END IF 
     IF GCODIE% = - 1 THEN CALL SearchVorbMA2("SUPERVIS")
     a% = a% + 1
   END IF 
   SELECT NEXT FILE "Supervis" INDEX nachname.supervis
 WEND 
 IF GCODie% = - 1 THEN 
     REM CALL Fehler("","")
     req3% = CALL ("_SearchReShow",c$)
     IF VAL (c$) <> 0 THEN 
       MitSuchen% = VAL (c$)
       IF MitSuchen% > 0 THEN 
         cucuma% = MitSuchen%
       END IF 
     END IF 
 ELSE 
   CREATE DIALOG "MASUCH",0,0,380,284,"MitarbeiterÅbersicht","Courier New",10
   ADD DIALOG "MASUCH",4,0,0,380,263,0,""
   ADD DIALOG "MASUCH",9,5,5,21,21,2
   ADD DIALOG "MASUCH",5,37,15,260,10,0,"Name/Nachname,Vorname"
   ADD DIALOG "MASUCH",5,37,5,151,10,0,"Bitte wÑhlen Sie einen Mitarbeiter aus:"
   ADD DIALOG "MASUCH",7,7,27,368,229,2,2,Agenturen$,Auswahl$,prompt$
   ADD DIALOG "MASUCH",1,116,268,55,15,1,"&OK",1,1
   ADD DIALOG "MASUCH",1,182,268,55,15,0,"&Abbrechen",0,0
   MOUSE ON 
   DIALOG "MASUCH",req%
   REMOVE DIALOG "MASUCH"

   IF req% <> 0 THEN 
     MitSuchen% = VAL ( RIGHT$ (Auswahl$(0),6))
     cucuma% = MitSuchen%
   ELSE 
     MitSuchen% = 0
   END IF 
 END IF 
 FORM 
 END FUNCTION 

 
SUB SVNext()
 FILE "SUPERVIS"
 SET INDEX Nachname.supervis
 INDEX Nachname.supervis
 CALL PSelectNext()
 FORM 
 END SUB 
 
SUB SVPrev()
 FILE "SUPERVIS"
 SET INDEX Nachname.supervis
 INDEX Nachname.supervis
 CALL PSelectPrev()
 FORM 
 END SUB 
 
 
SUB SVLoeschen()
 cuma% = CodeMA.supervis
 REQUEST "Mitarbeiter wirklich lîschen?","",135,req%
 IF req% = 1 THEN 
   SELECT KEY cuma% LOCK FILE "SUPERVIS" INDEX CodeMA.supervis
   SELECT REMOVE FILE "SUPERVIS"
   SELECT NEXT FILE "SUPERVIS"
   FORM 
 END IF 
 FORM 
 END SUB 
 
 
 
SUB VTNeu()
 IF nachname.vertrete <> "" THEN CALL FStore("vertrete")
 BLANK 
 SET STATUS "Datensatz neu angelegt..."
 CodeMA = SER ("vertrete",1)
 SUPERVISsub% = 99
 FORM 
 END SUB 
 
 
 ' Mitarbeiter suchen
 ' ======================================================================
 
SUB VTSuchen()
 REQUEST "WÑhlen Sie einen Vertreter aus:","",25,req%,ma%,72,codeMA.vertrete,nachname.vertrete,vorname.vertrete INDEX nachname.vertrete
 IF req% = 1 THEN 
   SELECT FORM KEY ma% FILE "vertrete" INDEX codema.vertrete
 END IF 
 FORM 
 END SUB 
 
 
SUB VTNext()
 FILE "vertrete"
 SET INDEX Nachname.vertrete
 INDEX Nachname.vertrete
 CALL PSelectNext()
 FORM 
 END SUB 
 
SUB VTPrev()
 FILE "vertrete"
 SET INDEX Nachname.vertrete
 INDEX Nachname.vertrete
 CALL PSelectPrev()
 FORM 
 END SUB 
 
 
SUB VTLoeschen()
 cuma% = CodeMA.vertrete
 REQUEST "Wollen Sie den Vertreter wirklich lîschen?","",130,req%
 IF req% <> 1 THEN END SUB 
 MOUSE OFF 
 REMOVE FROM FILE "ARTPROV" WHERE codema.artprov = cuma%
 REQUEST "Vertreter wirklich lîschen?","",135,req%
 IF req% = 1 THEN 
   SELECT KEY cuma% LOCK FILE "vertrete" INDEX CodeMA.vertrete
   name$ = "ZZZ GELôSCHT" + name.vertrete
   name.vertrete = name$
   STORE FILE "vertrete"
   UNLOCK CURRENT FILE "vertrete"
   SELECT FIRST 
   FORM 
 END IF 
 FORM 
 MOUSE ON 
 REQUEST "Vertreter wurde als gelîscht markiert!","Alle Provisionseintrgungen in der Artikeldatei wurden ebenfalls gelîscht",2
 END SUB 
 
 
 
 
 
 
 
SUB ACAdd()
 cuma% = CodeMA.SUPERVIS
 DIM Auswahl$(500)
 DIM Rechte$(500)
 FILE "accode"
 SELECT FIRST 
 a% = 0
 WHILE NOT EOF ("accode")
   scode$ = STR$ (CodePR.ACCODE,"000000") + STR$ (cuma%,"000000") + ACCODE.ACCODE
   SELECT KEY scode$ FILE "ACCESS" INDEX QuickCode.ACCESS
   IF NOT FOUND ("ACCESS") THEN 
     IF CodePR.ACCODE = 0 OR CodePR.ACCODE = AppID% THEN 
       Rechte$(a%) = Beschreibung.ACCODE
       a% = a% + 1
     END IF 
   END IF 
   SELECT NEXT 
 WEND 
 CREATE DIALOG "ACCESS",0,0,395,382,title$,"MS Sans Serif",8
 ADD DIALOG "ACCESS",9,6,8,20,20,2
 ADD DIALOG "ACCESS",5,36,9,152,8,0,"Bitte markieren Sie die Funktionen, die Sie fÅr"
 ADD DIALOG "ACCESS",5,36,17,152,10,0,"den aktuellen Mitarbeiter sperren wollen:"
 ADD DIALOG "ACCESS",7,36,28,296,345,10,2,Rechte$,Auswahl$
 ADD DIALOG "ACCESS",1,336,323,55,15,1,"&OK",1,1
 ADD DIALOG "ACCESS",1,336,341,55,15,0,"&Abbrechen",0,0
 DIALOG "ACCESS",req%
 REMOVE DIALOG "ACCESS"
 IF req% = 1 THEN 
   SET STATUS "Mitarbeiterdatei wird aktualisiert..."
   MOUSE OFF 
   a% = 0
   WHILE Auswahl$(a%) <> ""
     SELECT KEY Auswahl$(a%) FILE "ACCODE" INDEX Beschreibung.ACCODE
     IF FOUND ("ACCODE") THEN 
       BLANK FILE "ACCESS"
       codeac.access = SER ("ACCESS",1)
       CodeMA.ACCESS = cuma%
       CodePR.ACCESS = CodePR.ACCODE
       ACCODE.ACCESS = ACCODE.ACCODE
       QuickCode.ACCESS = STR$ (CodePR.ACCODE,"000000") + STR$ (cuma%,"000000") + ACCODE.ACCODE
       Beschreibung.ACCESS = Beschreibung.ACCODE
       CALL QuickStore("ACCESS")
     END IF 
     a% = a% + 1
   WEND 
 END IF 
 SET STATUS "Bereit"
 FILE "SUPERVIS"
 SELECT FORM KEY cuma% FILE "SUPERVIS" INDEX CodeMA.SUPERVIS
 SET INDEX Nachname.SUPERVIS
 INDEX Nachname.SUPERVIS
 FORM 
 MOUSE ON 
 END SUB 
 
 
SUB ACLoeschen()
 cuma% = CodeMA.SUPERVIS
 DIM Auswahl$(500)
 DIM Rechte$(500)
 FILE "ACCESS"
 SELECT FIRST 
 a% = 0
 WHILE NOT EOF ("ACCESS")
   IF CodeMA.ACCESS = cuma% AND (CodePR.ACCESS = 0 OR CodePR.ACCESS = AppID%) THEN 
     Rechte$(a%) = Beschreibung.ACCESS + SPACE$ (120) + STR$ (CodeAC.access,"000000")
     a% = a% + 1
   END IF 
   SELECT NEXT 
 WEND 
 CREATE DIALOG "ACCESS",0,0,355,382,title$,"MS Sans Serif",8
 ADD DIALOG "ACCESS",9,6,8,20,20,2
 ADD DIALOG "ACCESS",5,36,9,152,8,0,"Bitte markieren Sie die Funktionen, die Sie fÅr"
 ADD DIALOG "ACCESS",5,36,17,152,10,0,"den aktuellen Mitarbeiter freigeben wollen:"
 ADD DIALOG "ACCESS",7,36,28,256,323,10,2,Rechte$,Auswahl$
 ADD DIALOG "ACCESS",1,296,323,55,15,1,"&OK",1,1
 ADD DIALOG "ACCESS",1,296,341,55,15,0,"&Abbrechen",0,0
 DIALOG "ACCESS",req%
 REMOVE DIALOG "ACCESS"
 IF req% = 1 THEN 
   SET STATUS "Mitarbeiterdatei wird aktualisiert..."
   MOUSE OFF 
   a% = 0
   WHILE Auswahl$(a%) <> ""
     codeac% = VAL ( RIGHT$ (Auswahl$(a%),6))
     REM SELECT KEY codeac% FILE "ACCODE" INDEX CodeAC.ACCODE
     REM scode$ = STR$ (CodePR.ACCODE,"000000") + STR$ (cuma%,"000000") + ACCODE.ACCODE
     REM SELECT KEY scode$ LOCK FILE "ACCESS" INDEX QuickCode.ACCESS
     SELECT KEY codeac% LOCK FILE "ACCESS" INDEX CodeAC.ACCESS
     IF FOUND ("ACCESS") THEN SELECT REMOVE FILE "ACCESS"
     a% = a% + 1
   WEND 
 END IF 
 SET STATUS "Bereit"
 FILE "SUPERVIS"
 SELECT FORM KEY cuma% FILE "SUPERVIS" INDEX CodeMA.SUPERVIS
 SET INDEX Nachname.SUPERVIS
 INDEX Nachname.SUPERVIS
 FORM 
 MOUSE ON 
 END SUB 
 
 
 ' Zugriffsberechtigung testen
 ' ======================================================================
  
FUNCTION disabled%(topic$)
 cfile$ = FILE 
 CALL DFile(2,"access" + _fpw$)
 CALL DFile(2,"accode" + _fpw$)
 FILE "ACCODE"
 INDEX accode.accode
 SELECT FIRST FILE "accode" INDEX accode.accode
 
 SELECT KEY topic$ FILE "accode" INDEX accode.accode
 IF GAdministrator% = - 1 THEN CALL Fehler("Sperrcode",Beschreibung.accode)
 scode$ = STR$ (AppID%,"000000") + STR$ (GMAcodema%,"000000") + topic$
 SELECT KEY scode$ FILE "ACCESS" INDEX QuickCode.ACCESS
 disabled% = 0
 IF FOUND ("ACCESS") THEN 
   disabled% = - 1
   funktion$ = Beschreibung.ACCESS
 ELSE 
   scode$ = "000000" + STR$ (GMAcodema%,"000000") + topic$
   SELECT KEY scode$ FILE "ACCESS" INDEX QuickCode.ACCESS
   IF FOUND ("ACCESS") THEN 
     disabled% = - 1
     funktion$ = Beschreibung.ACCESS
     IF funktion$ LIKE "Vertrag Seite 2 und ff. einsehen" THEN 
       FORM 1
     END IF 
   END IF 
 END IF 
 IF disabled% = - 1 THEN 
     CALL Fehler("Die Funktion " + CHR$ (34) + funktion$ + CHR$ (34) + " ist fÅr Sie gesperrt!","")
 END IF 
 FILE cfile$
 MOUSE ON 
 END FUNCTION 
 
 ' Zugriffsberechtigung ohne Ausschrift testen
 ' ======================================================================
  
FUNCTION disabled1%(topic$)
 cfile$ = FILE 
 CALL DFile(2,"access" + _fpw$)
 CALL DFile(2,"accode" + _fpw$)
 FILE "ACCODE"
 INDEX accode.accode
 SELECT FIRST FILE "accode" INDEX accode.accode
 SELECT KEY topic$ FILE "accode" INDEX accode.accode
 IF GAdministrator% = - 1 THEN CALL Fehler("Sperrcode",Beschreibung.accode)
 scode$ = STR$ (AppID%,"000000") + STR$ (GMAcodema%,"000000") + topic$
 SELECT KEY scode$ FILE "ACCESS" INDEX QuickCode.ACCESS
 disabled1% = 0
 IF FOUND ("ACCESS") THEN 
   disabled1% = - 1
   funktion$ = Beschreibung.ACCESS
 ELSE 
   scode$ = "000000" + STR$ (GMAcodema%,"000000") + topic$
   SELECT KEY scode$ FILE "ACCESS" INDEX QuickCode.ACCESS
   IF FOUND ("ACCESS") THEN 
     disabled1% = - 1
     funktion$ = Beschreibung.ACCESS
   END IF 
 END IF 
 REM IF disabled% = - 1 THEN CALL Fehler("Die Funktion " + CHR$ (34) + funktion$ + CHR$ (34) + " ist fÅr Sie gesperrt!","")
 FILE cfile$
 MOUSE ON 
 END FUNCTION 
  
 
 ' Zugriffsberechtigung fÅr MenÅfunktionen
 ' ======================================================================
  
FUNCTION MNdisabled%(topic$)
 cfile$ = FILE 
 CALL DFile(2,"access" + _fpw$)
 CALL DFile(2,"accode" + _fpw$)
 FILE "ACCODE"
 INDEX accode.accode
 SELECT FIRST FILE "accode" INDEX accode.accode
 SELECT KEY topic$ FILE "accode" INDEX accode.accode
 IF GAdministrator% = - 1 THEN CALL Fehler("Sperrcode MenÅ",Beschreibung.accode)
 scode$ = STR$ (AppID%,"000000") + STR$ (GMAcodema%,"000000") + topic$
 SELECT KEY scode$ FILE "ACCESS" INDEX QuickCode.ACCESS
 MNdisabled% = 0
 IF FOUND ("ACCESS") THEN 
   MNdisabled% = - 1
 ELSE 
   scode$ = "000000" + STR$ (GMAcodema%,"000000") + topic$
   SELECT KEY scode$ FILE "ACCESS" INDEX QuickCode.ACCESS
   IF FOUND ("ACCESS") THEN 
     MNdisabled% = - 1
   END IF 
 END IF 
 IF OPEN (cfile$) THEN FILE cfile$
 MOUSE ON 
 END FUNCTION 
 
 
 ' Pa·wort entschlÅsseln
 ' ======================================================================
 
FUNCTION PWDecoded$()
 IF KÅrzel.SUPERVIS = "XX" THEN PWDecoded$ = CALL ("crypt",pa·wort.supervis) ELSE PWDecoded$ = Pa·wort.SUPERVIS
 REM CALL Fehler(PWDecoded$,"")
 END FUNCTION 
 
FUNCTION FPWDecoded$()
 FPWDecoded$ = CALL ("crypt",pa·wort.FILIALE)
 REM CALL Fehler(FPWDecoded$,"")
 END FUNCTION 
 

FUNCTION PWDecoded1$(name$)
 PWDecoded1$ = CALL ("crypt",name$)
 REM CALL Fehler(PWDecoded1$,"")
 END FUNCTION 
 
 '      *******************************
 '      ** Programm und System-Setup **
 '      *******************************
 
SUB SETUP()
 CALL DFile(2,"ZERO" + _fpw$)
 IF disabled%("SETUP") THEN END SUB 
 SET STATUS "Einstellungen"
 CREATE DIALOG "SETUP",0,0,173,229,title$,"MS Sans Serif",8
 ADD DIALOG "SETUP",9,2,6,19,21,3
 ADD DIALOG "SETUP",5,26,8,139,8,0,"WÑhlen Sie aus, welche Einstellungen Sie"
 ADD DIALOG "SETUP",5,26,17,63,8,0,"vornehmen wollen:"
 IF _projekt$ LIKE "PROVIS*" THEN 
   REM ADD DIALOG "SETUP",1,14,30,110,16,1,"Programmkonfiguration",1,1
 END IF 
 IF GASP% THEN 
   ADD DIALOG "SETUP",1,14,48,150,16,0,"BÅro/Filialverwaltung",3,1
 END IF 
 ADD DIALOG "SETUP",1,14,65,150,16,0,"&lokale Rechnereinstellungen",6,1

 ADD DIALOG "SETUP",1,14,83,150,16,0,"persînliche Mitarbeitereinstellungen",9,1

 ADD DIALOG "SETUP",1,14,101,150,16,0,"&Mitarbeiterverwaltung",2,1
 IF _projekt$ LIKE "PROVIS*" THEN 
   ADD DIALOG "SETUP",1,14,119,150,16,0,"&Firmen - Stammdaten",5,1
   ADD DIALOG "SETUP",1,14,137,150,16,0,"&WÑhrungstabelle",4,1
 END IF 
 IF _projekt$ LIKE "IMMAK" THEN 
 ELSE 
   ADD DIALOG "SETUP",1,14,155,150,16,0,"interne Vertragsstati",7,1
 END IF 
 IF _projekt$ LIKE "IMMAK" THEN 
 ELSE 
   ADD DIALOG "SETUP",1,14,173,150,16,0,"Wertpapierkennziffern",8,1
 END IF 
 ADD DIALOG "SETUP",1,14,198,150,16,0,"&Abbrechen",0,0
 DIALOG "SETUP",req%
 REMOVE DIALOG "SETUP"
 SELECT CASE req%
 CASE 1
   IF Delphi% <> 1 THEN 
     AppName$ = _netpath$ + _projekt$ + "\CONFIG.EXE"
     a% = CALL ("ShellExecute",0,"open",AppName$,"","",1)
   ELSE 
     REQUEST "Arbeiten Sie mit WindosNT?","",130,reqnt%
     IF reqnt% = 1 THEN 
       REM CALL Server("SETUP",_netpath$ + "OFFICE\CONFIG.EXE")
       AppName$ = _netpath$ + "OFFICE\CONFIG.EXE"
       a% = CALL ("ShellExecute",0,"open",AppName$,"","",1)
     ELSE 
       REM CALL Server("SETUP",_netpath$ + "PROVIS\CONFIG.EXE")
       AppName$ = _netpath$ + "PROVIS\CONFIG.EXE"
       a% = CALL ("ShellExecute",0,"open",AppName$,"","",1)
     END IF 
   END IF 
 CASE 2
   CALL SUPERVIS()
 CASE 3
   CALL FILIALE()
 CASE 4
   CALL Waehrtab()
 CASE 5
   CALL Stamm()
 CASE 6
   CALL LokalSetup()
 CASE 7
   CALL IntStatustab()
 CASE 8
   CALL WKNTab()
 CASE 9
   REM persînliche Mitarbeitereinstellungen
   CALL PersMASetup()
 END SELECT 
 SET STATUS "Bereit"
 END SUB 
 

 ' Bearbeitung der WÑhrungstabelle
SUB Waehrtab()
 ON ERROR GOTO ErrorHandler
 CALL DFile(3,"waehrung" + _fpw$)
 
 IF disabled%("SUPERVIS") THEN END SUB 
 
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "WAEHRUNG"
 IF eurosupport$ = "TRUE" THEN maske$ = "WAEHRUNG"
 FILE "WAEHRUNG"
 INDEX WAEHRUNG.WAEHRUNG
 SELECT FIRST 
 vnachn$ = WAEHRUNG.WAEHRUNG
 SELECT FIRST 
 aend% = 0
 WHILE _formend% = 0
   ON ERROR GOTO ErrorHandler
   SUPERVISsub% = 0
   IF FORM <> maske$ THEN 
     SET HEADING title$ + " - WÑhrungsmaske"
     IF EXISTS (GPrjForm$ + maske$ + ".sbv") THEN 
       OPEN FORM GPrjForm$ + maske$
     ELSE 
       OPEN FORM GPrjForm$ + maske$
     END IF 
     SET f = superbase.form
    SET STATUS "WÑhrungsmaske"
     REM FILE "provisio"
     REM INDEX codema.provisio
     SELECT FORM KEY vnachn$ FILE "waehrung" INDEX WAEHRUNG.WAEHRUNG
     FORM 
     CALL MNProgramm()
     CALL ButEnabled()
     REM FORM 
   END IF 
   MENU ON 
   f.suchen.visible = 0
   f.suchen.enabled = 0
   MOUSE ON 
   FORM 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL PSelectPrev()
   CASE CrsRight%,PgDn%
     CALL PSelectNext()()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   CALL ClearKBDBuffer()
   SELECT CASE SUPERVISsub%
   CASE 90
     REM Datensatz neu
     codew% = SER ("WAEHRUNG",1)
     BLANK FILE "Waehrung"
     codew.waehrung = codew%
     zero.waehrung = 0
     waehrung.waehrung = "Neu"
     IF Workstation% > 0 THEN Workstation.waehrung = Workstation%
     IF Workstation% > 0 THEN QWoNo.waehrung = STR$ (Workstation%,"000000") + STR$ (codew.waehrung,"000000")
     RecStatus.waehrung = "c"
     STORE FILE "Waehrung"
     UNLOCK CURRENT FILE "waehrung"
     SELECT FORM KEY codew% FILE "Waehrung" INDEX codew.waehrung
     CALL ButDesabled()
     MOUSE ON 
     ENTER waehrung.waehrung,0
     aend% = 1
     CALL ButEnabled()
     f.suchen.visible = 0
     f.suchen.enabled = 0
     MENU ON 
     IF abbruch% = - 1 THEN 
       SELECT KEY WAEHRUNG.WAEHRUNG FILE "WAEHRUNG" INDEX WAEHRUNG.WAEHRUNG
       FORM 
       abbruch% = 0
     END IF 
   CASE 99
     MENU OFF 
     CALL ButDesabled()
     MOUSE ON 
     ENTER WAEHRUNG.WAEHRUNG,0
     aend% = 1
     CALL ButEnabled()
     f.suchen.visible = 0
     f.suchen.enabled = 0
     MENU ON 
     IF abbruch% = - 1 THEN 
       SELECT KEY WAEHRUNG.WAEHRUNG FILE "WAEHRUNG" INDEX WAEHRUNG.WAEHRUNG
       FORM 
       abbruch% = 0
     END IF 
 END SELECT 
 IF aend% = 1 THEN 
   aend% = 0
   IF _projekt$ LIKE "Factu*" THEN 
     REQUEST "In der WÑhrungsdatei wurden énderungen vorgenommen!","énderungen in die Artikeldatei Åbernehmen?",130,req%
     IF req% = 1 THEN 
       FILE "waehrung"
       INDEX codew.waehrung
       SELECT FIRST 
       WHILE NOT EOF ("waehrung")
         CALL DFile(3,"artikel" + _fpw$)
         FILE "artikel"
         INDEX codew.artikel
         SELECT FIRST 
         IF RECCOUNT ("") > 0 THEN SELECT KEY codew.waehrung LOCK FILE "artikel" INDEX codew.artikel
         i% = 0
         IF RECCOUNT ("") < 1 THEN SELECT LAST 
         WHILE NOT EOF ("Artikel") AND codew.artikel = codew.waehrung
           i% = i% + 1
           SET STATUS STR$ (i%,"999999") + " Artikel angepa·t"
           IF umrechnung.artikel <> umrechnung.waehrung THEN 
             umrechnung.artikel = umrechnung.waehrung
             waehrung.artikel = waehrung.waehrung
             CALL ArtDMEuro()
             IF Workstation% > 0 THEN Workstation.artikel = Workstation%
             IF Workstation% > 0 THEN QWoNo.artikel = STR$ (Workstation%,"000000") + STR$ (codear.artikel,"000000")
             RecStatus.artikel = "c"
             STORE FILE "Artikel"
           END IF 
     
           SELECT NEXT LOCK 
         WEND 
         FILE "waehrung"
         SELECT NEXT INDEX codew.waehrung
       WEND 
     END IF 
     REM
     f1$ = "Sie kînnen im Anschlu· diese énderungen und Umrechnungen auf Ihre Rechnungsdateien(master,schein), RE-Eingangs-/Ausgangsbuch und Mahndatei(mahnung) anwenden."
     f2$ = "Bedenken Sie aber, da· Sie damit alle alten Rechnungen usw. VERFéLSCHEN, da sie ursprÅnglich mit einem anderen Umrechnungskurs gerechnet wurden!!!"
     CALL Fehler(f1$,f2$)
     REQUEST "Wollen Sie diese Manipulation wirklich durchfÅhren?","",147,req%
     IF req% = 2 OR req% = 0 THEN 
        CALL Fehler("Manipulation wird nicht durchgefÅhrt!!!","")
        _formend% = 2
        GOTO end031298
     END IF 
   END IF 
   IF _projekt$ LIKE "PROVIS*" THEN 
     f1$ = "Sie kînnen im Anschlu· diese énderungen und Umrechnungen auf Ihre Vertagsdatei, Buchungsdatei, Zahlungsdatei usw. anwenden."
     f2$ = "Bedenken Sie aber, da· Sie damit alle alten Buchungen usw. VERFéLSCHEN, da sie ursprÅnglich mit einem anderen Umrechnungskurs gerechnet wurden!!!"
     CALL Fehler(f1$,f2$)
     REQUEST "Wollen Sie diese Manipulation wirklich durchfÅhren?","",147,req%
     IF req% = 2 OR req% = 0 THEN 
        CALL Fehler("Manipulation wird nicht durchgefÅhrt!!!","")
        _formend% = 2
        GOTO end031298
     END IF 
     REQUEST "In der WÑhrungsdatei wurden énderungen vorgenommen!","énderungen in die Vertragsdatei Åbernehmen?",130,req%
     IF req% = 1 THEN 
       FILE "waehrung"
       INDEX codew.waehrung
       SELECT FIRST 
       WHILE NOT EOF ("waehrung")
         CALL DFile(3,"kvertrag" + _fpw$)
         FILE "kvertrag"
         INDEX codew.kvertrag
         SELECT FIRST 
         IF RECCOUNT ("") > 0 THEN SELECT KEY codew.waehrung LOCK FILE "kvertrag" INDEX codew.kvertrag
         IF RECCOUNT ("") < 1 THEN SELECT LAST 
         i% = 0
         WHILE NOT EOF ("kvertrag") AND codew.kvertrag = codew.waehrung
           i% = i% + 1
           SET STATUS STR$ (i%,"999999") + " VertrÑge angepa·t"
           IF umrechnung.kvertrag <> umrechnung.waehrung THEN 
             umrechnung.kvertrag = umrechnung.waehrung
             waehrung.kvertrag = waehrung.waehrung
             REM CALL ArtDMEuro()
             RecStatus.kvertrag = "c"
             STORE FILE "kvertrag"
             UNLOCK CURRENT FILE "kvertrag"
             UNLOCK FILE "kvertrag"
           END IF 
           SELECT NEXT LOCK 
         WEND 
         FILE "waehrung"
         SELECT NEXT INDEX codew.waehrung
       WEND 
     END IF 

 
     REQUEST "In der WÑhrungsdatei wurden énderungen vorgenommen!","énderungen in die Buchungsdatei Åbernehmen?",130,req%
     IF req% = 1 THEN 
       FILE "waehrung"
       INDEX codew.waehrung
       SELECT FIRST 
       WHILE NOT EOF ("waehrung")
         CALL DFile(3,"buchung" + _fpw$)
         FILE "buchung"
         INDEX codew.buchung
         SELECT FIRST 
         IF RECCOUNT ("") > 0 THEN SELECT KEY codew.waehrung LOCK FILE "buchung" INDEX codew.buchung
         IF RECCOUNT ("") < 1 THEN SELECT LAST 
         i% = 0
         WHILE NOT EOF ("buchung") AND codew.buchung = codew.waehrung
           i% = i% + 1
           SET STATUS STR$ (i%,"999999") + " BuchungssÑtze angepa·t"
           IF umrechnung.buchung <> umrechnung.waehrung THEN 
             umrechnung.buchung = umrechnung.waehrung
             waehrung.buchung = waehrung.waehrung
             euro1% = umrechnung.waehrung
             CALL BUDMEuro(euro1%)
             IF Workstation% > 0 THEN Workstation.buchung = Workstation%
             IF Workstation% > 0 THEN QWoNo.buchung = STR$ (Workstation%,"000000") + STR$ (codebu.buchung,"000000")
             RecStatus.buchung = "c"
             STORE FILE "buchung"
             UNLOCK CURRENT FILE "buchung"
             UNLOCK FILE "buchung"
           END IF 
           SELECT NEXT LOCK 
         WEND 
         FILE "waehrung"
         SELECT NEXT INDEX codew.waehrung
       WEND 
       IF EXISTS ("buchung1.sbf") THEN 
         FILE "waehrung"
         INDEX codew.waehrung
         SELECT FIRST 
         WHILE NOT EOF ("waehrung")
           CALL DFile(3,"buchung1" + _fpw$)
           FILE "buchung1"
           INDEX codew.buchung1
           SELECT FIRST 
           IF RECCOUNT ("") > 0 THEN SELECT KEY codew.waehrung LOCK FILE "buchung1" INDEX codew.buchung1
           IF RECCOUNT ("") < 1 THEN SELECT LAST 
           i% = 0
           WHILE NOT EOF ("buchung1") AND codew.buchung1 = codew.waehrung
             i% = i% + 1
             SET STATUS STR$ (i%,"999999") + " BuchungssÑtze angepa·t"
             IF umrechnung.buchung1 <> umrechnung.waehrung THEN 
               umrechnung.buchung1 = umrechnung.waehrung
               waehrung.buchung1 = waehrung.waehrung
               euro1% = umrechnung.waehrung
               CALL BU1DMEuro(euro1%)
               IF Workstation% > 0 THEN Workstation.buchung1 = Workstation%
               IF Workstation% > 0 THEN QWoNo.buchung1 = STR$ (Workstation%,"000000") + STR$ (codebu.buchung1,"000000")
               RecStatus.buchung1 = "c"
               STORE FILE "buchung1"
               UNLOCK CURRENT FILE "buchung1"
               UNLOCK FILE "buchung1"
             END IF 
             SELECT NEXT LOCK 
           WEND 
           FILE "waehrung"
           SELECT NEXT INDEX codew.waehrung
         WEND 
       END IF 
     END IF 
     REQUEST "In der WÑhrungsdatei wurden énderungen vorgenommen!","énderungen in die Zahlungsdatei Åbernehmen?",130,req%
     IF req% = 1 THEN 
       FILE "waehrung"
       INDEX codew.waehrung
       SELECT FIRST 
       WHILE NOT EOF ("waehrung")
         CALL DFile(3,"ZEINGANG" + _fpw$)
         FILE "ZEINGANG"
         INDEX codew.ZEINGANG
         SELECT FIRST 
         IF RECCOUNT ("") > 0 THEN SELECT KEY codew.waehrung LOCK FILE "ZEINGANG" INDEX codew.ZEINGANG
         i% = 0
         IF RECCOUNT ("") < 1 THEN SELECT LAST 
         WHILE NOT EOF ("ZEINGANG") AND codew.ZEINGANG = codew.waehrung
           i% = i% + 1
           SET STATUS STR$ (i%,"999999") + " ZahlungseingangssÑtze angepa·t"
           IF umrechnung.ZEINGANG <> umrechnung.waehrung THEN 
             umrechnung.ZEINGANG = umrechnung.waehrung
             waehrung.ZEINGANG = waehrung.waehrung
             euro1% = umrechnung.waehrung
             BetragEU.ZEINGANG = VAL ( STR$ (Betrag_gezahlt.ZEINGANG / euro1%,"999999999.00"))
             IF Workstation% > 0 THEN Workstation.ZEINGANG = Workstation%
             IF Workstation% > 0 THEN QWoNo.ZEINGANG = STR$ (Workstation%,"000000") + STR$ (codeAZ.ZEINGANG,"000000")
             RecStatus.ZEINGANG = "c"
             STORE FILE "ZEINGANG"
             UNLOCK CURRENT FILE "zeingang"
             UNLOCK FILE "zeingang"
           END IF 
           SELECT NEXT LOCK 
         WEND 
         FILE "waehrung"
         SELECT NEXT INDEX codew.waehrung
       WEND 
       IF EXISTS ("zeingan1.sbf") THEN 
         FILE "waehrung"
         INDEX codew.waehrung
         SELECT FIRST 
         WHILE NOT EOF ("waehrung")
           CALL DFile(3,"zeingan1" + _fpw$)
           FILE "zeingan1"
           INDEX codew.zeingan1
           SELECT FIRST 
           IF RECCOUNT ("") > 0 THEN SELECT KEY codew.waehrung LOCK FILE "zeingan1" INDEX codew.zeingan1
           IF RECCOUNT ("") < 1 THEN SELECT LAST 
           i% = 0
           WHILE NOT EOF ("zeingan1") AND codew.zeingan1 = codew.waehrung
             i% = i% + 1
             SET STATUS STR$ (i%,"999999") + " ZahlungseingangssÑtze angepa·t"
             IF umrechnung.zeingan1 <> umrechnung.waehrung THEN 
               umrechnung.zeingan1 = umrechnung.waehrung
               waehrung.zeingan1 = waehrung.waehrung
               euro1% = umrechnung.waehrung
               BetragEU.zeingan1 = VAL ( STR$ (Betrag.zeingan1 / euro1%,"999999999.00"))
               BetraggezEU.zeingan1 = VAL ( STR$ (Betrag_gezahlt.zeingan1 / euro1%,"999999999.00"))
               gezahltEU.zeingan1 = VAL ( STR$ (gezahlt.zeingan1 / euro1%,"999999999.00"))
               SREU.zeingan1 = VAL ( STR$ (SR.zeingan1 / euro1%,"999999999.00"))
               SRAuszahlungEU.zeingan1 = VAL ( STR$ (SRAuszahlung.zeingan1 / euro1%,"999999999.00"))
               BewertungEU.zeingan1 = VAL ( STR$ (Bewertung.zeingan1 / euro1%,"999999999.00"))
               IF Workstation% > 0 THEN Workstation.ZEINGAN1 = Workstation%
               IF Workstation% > 0 THEN QWoNo.ZEINGAN1 = STR$ (Workstation%,"000000") + STR$ (codeAZ.ZEINGAN1,"000000")
               RecStatus.ZEINGAN1 = "c"
               STORE FILE "zeingan1"
               UNLOCK CURRENT FILE "zeingan1"
               UNLOCK FILE "zeingan1"
             END IF 
             SELECT NEXT LOCK 
           WEND 
           FILE "waehrung"
           SELECT NEXT INDEX codew.waehrung
         WEND 
       END IF 
     END IF 
   END IF 
 END IF 
end031298: 
 SET STATUS ""
 WEND 
 _formend% = 0
 IF MOD ("waehrung") OR NEW ("waehrung") THEN CALL FStore("waehrung")
 END SUB 


 
 ' EXIT
 ' ================================================================
 ' Zweck:    Programmende
 ' Nutzung: CALL EXIT()
 ' ================================================================
 
SUB EXIT()
 DIRECTORY _netpath$
 IF GAFSK$ LIKE "TRUE" THEN 
   REM IF PROGRAMFILE ("AFSFOIMP") THEN CLOSE PROGRAMFILE "AFSFOIMP"
   REM IF PROGRAMFILE ("AFSFOPSP") THEN CLOSE PROGRAMFILE "AFSFOPSP"
   REM IF PROGRAMFILE ("AFSPFLEG") THEN CLOSE PROGRAMFILE "AFSPFLEG"
 END IF 
 IF GZP% = - 1 THEN CALL ProtAll(0,"Beendigung Programm","",0,"",0,"")
 CALL HideStartup()
 IF GCODieRuf% = - 1 THEN 
   ret% = CALL ("_SearchClose"):REM CALL Fehler("","")
   GCODieRuf% = 0
   GCODieRuf1% = 0
 END IF 
 IF GCODieRuf1% < - 1 THEN 
   ret% = CALL ("_SearchClose"):REM CALL Fehler("","")
   GCODieRuf1% = 0
 END IF 
 IF FN sys(2) < 48 THEN '                                            ; Test auf Superbase95
   look3d$ = ReadINI$("SYSTEM","3DLOOK")
   IF look3d$ = "TRUE" THEN 
     IF HInstance% <> 0 THEN 
       a% = CALL ("Ctl3dUnRegister",HInstance%)
     END IF 
   END IF 
 END IF 
 CALL ServerDown()
 IF test% = 1 THEN 
   SET DISPLAY ON 
   SET DISPLAY 7
   SET MENU ON 
   REGISTER CLEAR 
   Superbase.SelectionBar = - 1
   END 
 END IF 
 SET DISPLAY OFF 
 REGISTER CLEAR 
 IF test% <> 1 THEN 
   CLOSE ALL 
 END IF 
 IF GPPCS$ = "TRUE" THEN 
   Superbase.Connections.Clear()
 END IF 
 
 QUIT 
 END SUB 
 
SUB FormEnd()
 _formend% = 1
 END SUB 
 
SUB PEND()
 END 
 END SUB 
 
 
 '      *******************************************
 '      ** Routinen fÅr CoDIE Application Server **
 '      *******************************************
 
 ' Server initialisieren
 ' =================================================================
 
SUB ServerInit()
 IF Delphi% <> 1 THEN 
   CALL _netpath$ + "SERVER.DLL"
   DDEINIT 99,"SERVER","Server"
   CALL Server("SETPROJECT",title$)
 ELSE 
   v% = CALL ("ServerCMD","SETPROJECT",title$)
 END IF 
 END SUB 
 
 
 ' Server beenden
 ' =================================================================
 
SUB ServerDown()
 IF Delphi% <> 1 THEN 
   REM DDEINIT 3,"SERVER","Server"
   REM DDEPOKE 3,"DDECmd","Down"
   DDETERM 99
 END IF 
 END SUB 
 
 
 ' Serverbefehl ausfÅhren
 ' =================================================================
 
SUB Server(cmd$,Value$)
 IF delphi% = 1 THEN 
   r% = CALL ("ServerCMD", UCASE$ ( FN ansi(cmd$)), FN ansi(Value$))
 ELSE 
   REM DDEINIT 99,"SERVER","Server"
   DDEPOKE 99,"DDEValue1",Value$
   DDEPOKE 99,"DDECmd",cmd$
   DDEPOKE 99,"DDECmd",""
   REM DDETERM 99
 END IF 
 END SUB 
 
 ' Serverergebnis abfragen
 ' =================================================================
 
FUNCTION ServerReply$()
 IF delphi% = 1 THEN 
   ServerReply$ = CALL ("GetReply")
 ELSE 
   REM WAIT FOR 1
   REM DDEINIT 99,"SERVER","Server"
   DDEPOKE 99,"DDEReply","WAIT"
   DDEREQ 99,"DDEReply",tmpZeile$
   WHILE tmpZeile$ <> "WAIT"
     DDEREQ 99,"DDEReply",tmpZeile$
   WEND 
   REM DDETERM 99
   ServerReply$ = tmpZeile$
 END IF 
 END FUNCTION 
 
  
 ' SUMME%
 ' =================================================================
 ' Zweck:   Summenbildung eines Feldes aller DatensÑtze einer Datei
 ' Nutzung: x%=SUMME%(datei$,feld$)
 '          datei$      = Name der SB-Datei
 '          feld$       = Name des zu summierenden Feldes
 ' =================================================================
 
FUNCTION SUMME%(datei$,feld$)
 FILE datei$
 feld$ = feld$ + "." + datei$
 REPORT feld$$
 AFTER REPORT 
   SUMME% = SUM (feld$$)
 END REPORT 
 SELECT 
   TO "NUL"
 END SELECT 
 END FUNCTION 
 
 
 'ErrorHandler 
 
 ' =================================================================
 ' Zweck:   Behandlung von Laufzeitfehlern
 ' Nutzung: Aktivierung durch ON ERROR GOTO ErrorHandler
 ' =================================================================
 ' 0000/21.02.93   
 
ErrorHandler: 
 
 
 _error% = ERRNO 
  REM ? ERRNO 
  REM ? ERR$ ( ERRNO )
 SELECT CASE _error%
 CASE 8
   REQUEST "Kein eineindeutiges Suchergebnis!"
   RESUME NEXT 
 CASE 10
   SET STATUS "Dateiende!"
   WAIT FOR 0.05
   SET STATUS "Bereit"
   RESUME NEXT 
 CASE 11
   REM IF askonerror% = 1 THEN REQUEST "Funktion abgebrochen!","",2
   REM CALL Fehler("Funktion abgebrochen!","")
   req% = 0
   RESUME NEXT 
 CASE 19,73
   CALL Fehler("Bitte geben Sie ein Datum in der Form TT.MM.JJJJ ein (z.B. " + DATE$ ( TODAY ,"dd.mm.yyyy") + ")","")
   RESUME NEXT 
 CASE 34
   RESUME NEXT 
 CASE 156
   RESUME NEXT 
 CASE 177
   CALL Fehler("Datensatz ist nicht gesperrt!","Operation wurde nicht durchgefÅhrt.")
   RESUME NEXT 
 CASE 130
   IF _errormessages% = 1 THEN CALL Fehler("Datensatz wird zur Zeit benutzt","durch: " + ERR$ (0))
   RESUME NEXT 
 CASE 140,132
   REM Datei ist fÅr gemeinsamen Schreibzugriff geîffnet
   RESUME NEXT 
 CASE 160
   REQUEST "Ende?"
 CASE 174
 
 tf$ = " Ihre Programmversion ist fÅr " + LTRIM$ ( STR$ ( FN SYS(5),"99")) + " ArbeitsplÑtze ausgelegt, die sich gleichzeitig im Programm anmelden kînnen / es sind bereits " + LTRIM$ ( STR$ ( FN SYS(17),"99")) + " Nutzer angemeldet!"
 tf1$ = " Sie sind der " + LTRIM$ ( STR$ ( FN SYS(17) + 1,"99")) + "." + " Nutzer, der sich anmelden mîchte!"
 CALL Fehler(tf$,tf1$)
 CASE 176
   IF ErrZAB% < 1 THEN 
     ErrZAB% = 1
     RESUME 
   ELSE 
     ErrZAB% = 0
   END IF 
 END CASE 
 Fehler% = ERRNO 
 Fehler$ = "[" + LTRIM$ ( STR$ (Fehler%,"9999999")) + "] " + ERR$ (Fehler%) + "/" + ERR$ (0)
 CREATE DIALOG "PROBHILFE",0,0,245,180,title$,"MS Sans Serif",8
 ADD DIALOG "PROBHILFE",5,34,11,133,9,0,"Hinweise"
 ADD DIALOG "PROBHILFE",9,5,12,20,21,4
 ADD DIALOG "PROBHILFE",4,34,18,203,5,0,""
 ADD DIALOG "PROBHILFE",5,34,30,56,10,0,"Wiederholen:"
 ADD DIALOG "PROBHILFE",5,40,40,197,32,0,"Falls die Fehlermeldung z.B. durch eine nicht eingelegte Diskette oder einem Ñhnlichen Fehler verursacht wurde, kînnen Sie die letzte Aktion vom Programm wiederholen lassen."
 ADD DIALOG "PROBHILFE",5,34,76,60,10,0,"Ignorieren:"
 ADD DIALOG "PROBHILFE",5,40,86,196,30,0,"Die Fehlermeldung wird ignoriert und das Programm versucht eine andere Mîglichkeit zur WeiterfÅhrung der aktuellen Funktion zu finden."
 ADD DIALOG "PROBHILFE",5,34,115,60,10,0,"Beenden:"
 ADD DIALOG "PROBHILFE",5,40,125,196,31,0,"WÑhlen Sie diese Mîglichkeit um das Programm ordnungsgemÑ· zu beenden, falls 'Wiederholen' und 'Ignorieren' keine Wirkung zeigten."
 ADD DIALOG "PROBHILFE",1,90,159,55,15,1,"&OK",0,0
 CREATE DIALOG "REQ",0,0,261,99,title$,"MS Sans Serif",8
 ADD DIALOG "REQ",9,4,11,22,22,3
 ADD DIALOG "REQ",5,30,12,156,10,0,"Problem bei der Programmabarbeitung!"
 ADD DIALOG "REQ",4,30,22,155,5,0,""
 ADD DIALOG "REQ",5,30,30,52,11,0,"Fehlermeldung:"
 ADD DIALOG "REQ",5,30,43,155,45,0,Fehler$
 ADD DIALOG "REQ",1,197,12,55,15,1,"&Wiederholen",1,1
 ADD DIALOG "REQ",1,197,30,55,15,0,"&Ignorieren",0,0
 ADD DIALOG "REQ",1,197,48,55,15,0,"&Beenden",2,1
 ADD DIALOG "REQ",1,197,73,55,15,0,"&Hilfe",4,2,"PROBHILFE"
 DIALOG "REQ",req%
 REMOVE DIALOG "PROBHILFE"
 REMOVE DIALOG "REQ"
 IF req% = 1 THEN RESUME 
 IF req% = 0 THEN RESUME NEXT 
 IF req% = 2 THEN CALL EXIT()
 CALL EXIT()
 
 

SUB LPRGCo()
  SELECT FIRST FILE "config"
  IF UCASE$ (GDV.config) = "TRUE" THEN 
    g$ = "07"
  ELSE 
    g$ = "70"
  END IF 
  IF UCASE$ (Makler.config) = "TRUE" THEN 
    m$ = "33"
  ELSE 
    m$ = "31"
  END IF 
  IF Verwaltung.config = - 1 THEN 
    vv$ = "01"
  ELSE 
    vv$ = "11"
  END IF 
  IF UCASE$ (TempletonImport.config) = "TRUE" THEN 
    t$ = "55"
  ELSE 
    t$ = "65"
  END IF 
  IF AnzAG.config > 0 THEN 
    agtt$ = LTRIM$ ( STR$ (100000 - anzag.config,"99999"))
  ELSE 
    agtt$ = "00000"
  END IF 
  LPRGCode$ = "[" + vv$ + "-" + t$ + "-" + m$ + "-" + g$ + "-" + agtt$ + "]"
 END SUB 


 
 REM ********************************************************************************************************************
SUB LizProbe(codeku%)
  CALL Fehler("LizProbe","")
 SELECT FIRST FILE "adressen" INDEX codeku.adressen
 SELECT KEY codeku% LOCK FILE "adressen" INDEX codeku.adressen
 IF LizenzNotiz.adressen = "" THEN 
   CALL Fehler("Lizenzprobe kann nur gemacht werden, wenn das Feld verschlÅsselter Lizenzcode nicht leer ist!","")
   GOTO elp230120083
 END IF 
 
elp230120083: 
 END SUB 
 
 
 
SUB LizenzGenDemo()
 REM CALL Fehler("DEMO-LizenzGenerate","")
 REM CALL FldAdd("Lizenzfirma","TXT;100",0)
 REM CALL FldAdd("LizenzName","TXT;100",0)
 REM CALL FldAdd("LizDatBis","DAT;0d.mm.yyyy",0)
 REM CALL FldAdd("LizenzNotiz","TXT;400 R",0)
 pw$ = "london8474"
 decfirma$ = "DEMO Firma"
 decname$ = "Demo User"
 decdatum% = TODAY + 30
 decdatum$ = DATE$ (decdatum%,"0d.mm.yyyy")
 
 GLizFirma$ = decfirma$
 GLizName$ = decname$
 Gpdemende$ = decdatum$
 
 ap$ = LTRIM$ ( STR$ ( FN sys(5),"999"))
 aa% = CALL ("_EncryptString",decfirma$,encfirma1$,pw$)
 a1% = CALL ("_GetStringHash",encfirma1$,pw$,hash1$)
 aa% = CALL ("_EncryptString",decname$,encname1$,pw$)
 a1% = CALL ("_GetStringHash",encname1$,pw$,hash2$)
 aa% = CALL ("_EncryptString",decdatum$,encdatum1$,pw$)
 a1% = CALL ("_GetStringHash",encdatum1$,pw$,hash3$)
 aa% = CALL ("_EncryptString",ap$,encap1$,pw$)
 a1% = CALL ("_GetStringHash",encap1$,pw$,hash4$)
 REM GOTO al230120082
 DIRECTORY _netpath$
 IF EXISTS (_netpath$ + "sbcode30.DLL") THEN DELETE _netpaht$ + "sbcode30.DLL"
 d$ = CHR$ (13) + CHR$ (10)
 inh$ = encfirma1$ + d$ + hash1$ + d$ + encname1$ + d$ + hash2$ + d$ + + encdatum1$ + d$ + + hash3$ + d$ + encap1$ + d$ + hash4$ + d$
 OPEN _netpath$ + "SBCODE30.DLL" FOR OUTPUT 
 ? inh$
 REM ? encfirma1$
 REM ? hash1$
 REM ? encname1$
 REM ? hash2$
 REM ? encdatum1$
 REM ? hash3$
 REM ? encap1$
 REM ? hash4$
 CLOSE OUTPUT 
al230120082: 
 SELECT FIRST LOCK FILE "config"
 QWoNo.config = encdatum1$
 MAName.config = encfirma1$
 MATimeStamp1.config = encap1$
 STORE FILE "config"
eliz230120081: 
 FORM 
 END SUB 
 
 
 
SUB LizenzNeu()
 REM EncryptString(const char* decText, char* encText, char* pwd);
 REM DecryptString(const char * encText,char * decText,char * pwd); 
 REM aa% = CALL ("_EncryptToFile",dokorig$,dokZiel$,passw$,0)
 REM decfirma$ = "CODie software products e.K."
 pw$ = "london8474"
 DIRECTORY _netpath$
 datei1$ = _netpath$ + "sbcode30.dll"
 OPEN datei1$ FOR INPUT 
 i% = 0
 WHILE i% < 8
   SELECT CASE i%
   CASE 0
     INPUT LINE firma1$
   CASE 1
     INPUT LINE firmahash$
   CASE 2
     INPUT LINE name1$
   CASE 3
     INPUT LINE namehash$
   CASE 4
     INPUT LINE datum1$
   CASE 5
     INPUT LINE datumhash$
   CASE 6
     INPUT LINE ap$
   CASE 7
     INPUT LINE aphash$
   END SELECT 
   i% = i% + 1
 WEND 
 CLOSE INPUT 
 a1% = CALL ("_GetStringHash",firma1$,pw$,hash1$)
 IF firmahash$ <> hash1$ AND firmahash$ <> "" THEN 
   CALL Fehler("Fehler beim Firmen-Hash Wert","")
 END IF 
 a1% = CALL ("_GetStringHash",name1$,pw$,hash1$)
 IF namehash$ <> hash1$ AND namehash$ <> "" THEN 
   CALL Fehler("Fehler beim Namen-Hash Wert","")
 END IF 
 a1% = CALL ("_GetStringHash",datum1$,pw$,hash1$)
 IF datumhash$ <> hash1$ AND datumhash$ <> "" THEN 
   CALL Fehler("Fehler beim Datum-Hash Wert","")
 END IF 
 a1% = CALL ("_GetStringHash",ap$,pw$,aphash$)
 IF aphash$ <> aphash$ AND aphash$ <> "" THEN 
   CALL Fehler("Fehler beim AP-Hash Wert","")
 END IF 
 REM Anzahl der AP aus Superbase.dll
 ap% = FN sys(5)
 anzap$ = LTRIM$ ( STR$ ( FN sys(5),"999"))
 aa% = CALL ("_DecryptString",firma1$,decfirma2$,pw$)
 aa% = CALL ("_DecryptString",name1$,decname2$,pw$)
 aa% = CALL ("_DecryptString",datum1$,decdatum2$,pw$)
 aa% = CALL ("_DecryptString",ap$,decap2$,pw$)
 GLizFirma$ = decfirma2$
 GLizName$ = decname2$
 Gpdemende$ = decdatum2$
 Htlfon$ = ReadConfig$(_projekt$,"HotlinePhone")'                  ; Hotlinedaten aus
 decap2% = VAL (decap2$)
 REM CALL Fehler(decfirma2$ + " --- " + decname2$ + " --- " + decdatum2$,"Anzahl AP:" + decap2$ + " aus DLL " + anzap$)
 decdatum2% = DAYS (decdatum2$)
 heute% = DAYS ( TODAY )
 
 SELECT FIRST FILE "config"
 REM QWoNo.config = encdatum1$
 REM MAName.config = encfirma1$
 REM MATimeStamp1.config = encap1$
 
 REM CALL Fehler("endliz070220081","")
 IF GCODieADR$ LIKE "TRUE" THEN GOTO endliz070220081
 
 fehl% = 0
 IF decdatum2% = 0 THEN 
   REM es wurde noch gar nichts eingetragen, jetzt alles setzen auf 30 Tage config.sbf beachten
   SELECT FIRST FILE "config"
   IF qwono.config = "" AND MAName.config = "" THEN 
     REM jungfreulich, also jetzt auf 30 Tage eintragen und die Anzahl der AP's aus der dll -> ap% = FN sys(5)
     CALL LizenzGenDemo()
     GOTO endliz070220081
   ELSE 
     REM Lizenzdatei wurde per Hand leer gemacht, also Versuch....
     CALL Fehler("Die Lizensierungsdatei ist offensichtlich beschÑdigt!","Bitte melden Sie sich bei der Firma CODie software products e.K.,www.codie.com,info@codie.com, " + Htlfon$ + ", um die Programmlizenz zu verlÑngern!")
     CALL LizMussNeu()
     GOTO endliz070220081
   END IF 
 ELSE 
   REM Datum prÅfen
   IF QWoNo.config <> datum1$ THEN 
     CALL Fehler("Liezensierungskonflikt beim Lizenzendedatum!","Bitte melden Sie sich bei der Firma CODie software products e.K.,www.codie.com,info@codie.com, " + Htlfon$ + ", um die Programmlizenz zu verlÑngern!")
     fehl% = - 1
   END IF 
   REM Firmennamen prÅfen, um zu verhinder das die Lizenzdatei ausgetauscht wurde
   IF MAName.config <> firma1$ THEN 
     CALL Fehler("Liezensierungskonflikt beim Firmennamen!","Bitte melden Sie sich bei der Firma CODie software products e.K.,www.codie.com,info@codie.com, " + Htlfon$ + ", um die Programmlizenz zu verlÑngern!")
     fehl% = - 1
   END IF 
   REM Anzahl der AP prÅfen
   IF ap% <> decap2% THEN 
     REM Anzahl der physischen AP<>der registrierten APs
     CALL Fehler("Liezensierungskonflikt A bei der Anzahl der ArbeitsplÑtze!","Bitte melden Sie sich bei der Firma CODie software products e.K.,www.codie.com,info@codie.com, " + Htlfon$ + ", um die Programmlizenz zu verlÑngern!")
     fehl% = - 1
   END IF 
   IF fehl% = - 1 THEN 
     CALL LizMussNeu()
   END IF 
 END IF 
 IF decdatum2% < heute% THEN 
   REM Software ist abgelaufen
   CALL Fehler("Die Probezeit des Programmes ist abgelaufen!","Bitte melden Sie sich bei der Firma CODie software products e.K.,www.codie.com,info@codie.com, " + Htlfon$ + ", um die Programmlizenz zu verlÑngern!")
   CALL LizMussNeu()
 END IF 
endliz070220081: 
 IF GLizFirma$ <> "" THEN 
   liz$ = "Registrierung fÅr Firma " + GLizFirma$ + "/" + GlizName$
 ELSE 
   liz$ = "DEMO Version "
 END IF 
 IF Gpdemende$ <> "" AND Gpdemende$ <> "31.12.2199" THEN liz$ = liz$ + "   -> das Programm lÑuft noch bis zum " + Gpdemende$
 Lizens$ = liz$
 FORM 
 END SUB 
 
 
SUB LizMussNeu()
   REM Software ist abgelaufen
   REMOVE DIALOG ALL 
   datei1$ = _netpath$ + "sbcode30.dll"
   inh$ = ""
   inhold$ = ""
   GTElDat$ = "TELEFON"
   ap$ = LTRIM$ ( STR$ ( FN sys(5),"999"))
   nr$ = "Bitte geben Sie nachfolgend den Ihnen gesandten Registrierungscode ein:"

   HtlFirma$ = ReadConfig$(_projekt$,"HotlineFirma")
   HtlTelefon$ = ReadConfig$(_projekt$,"HotlinePhone")'                         ; Hotlinedaten aus
   HtlTelefax$ = ReadConfig$(_projekt$,"HotlineFax")'                           ; CODIEAPP.NET auslesen und
   IF HtlTelefon$ LIKE "leer" THEN HtlTelefon$ = "(0331) 28 00 28 1"'           ; notfalls auf Standardwerte
   IF HtlTelefax$ LIKE "leer" THEN HtlTelefax$ = "(0331) 28 00 28 2"'           ; setzen
 


 REM REM CALL LIBInit("PROVIS","SmartPROVIS Agentur",1,43)' Agentur mit Euro 
 REM CALL LIBInit("PROVIS","SmartPROVIS +",1,61)' PROVISMakler
 REM CALL LIBInit("PROVIS","SmartPROVIS Classic+",1,62)' PROVISClassik+
 REM CALL LIBInit("PROVIS","SmartPROVIS online.center ASP",1,80)' PROVISASP
 SELECT CASE Gintid%
   CASE 43
     versio2008$ = "SmartPROVIS Agentur"
   CASE 61
      versio2008$ = "SmartPROVIS"
   CASE 62
      versio2008$ = "SmartPROVIS Classic+"
   CASE 80
      versio2008$ = "SmartPROVIS online.center ASP"
 END SELECT 
 IF GTerminal% = - 1 THEN 
   versio2008$ = versio2008$ + " Terminalserver"
 END IF 

  prgv$ = PRGVersion$ + "/ Module: "
 IF gdv.config = "TRUE" THEN prgv$ = prgv$ + " GDV"
 IF soll.config = "j" THEN prgv$ = prgv$ + ", Soll"
 REM versio2008$ = title$ + " Version: " + RIGHT$ (GBuildno$,GBuilnolen%) + "-" + PRGV$ + "/" + LTRIM$ ( STR$ ( FN sys(5),"999")) + " AP/ " + prv$

 versio2008$ = title$ + PRGV$ + "/"

    Seriennummer$ = versio2008$ + " - Version: " + GBuildno$ + " Anzahl AP: " + ap$
    SELECT FIRST FILE "stamm"
    REM firma$ = firma1.stamm
    REM Name$ = Firma2.stamm
    firma$ = GLizFirma$
    Name$ = GLizName$
     CREATE DIALOG "LIZENZ",0,0,350,185,title1$,"MS Sans Serif",8
     ADD DIALOG "LIZENZ",4,0,0,350,160,0,""
     ADD DIALOG "LIZENZ",9,8,10,19,21,3
     REM ADD DIALOG "LIZENZ",5,32,10,214,10,0,"Registrierung/Lizensierung: " + Htlfon$
     ADD DIALOG "LIZENZ",5,32,10,264,10,0,"Registrierung: Telefon: " + HtlTelefon$ + " / email: info@codie.com"
     ADD DIALOG "LIZENZ",5,32,20,214,20,0,"Zur ordnungsgemÑ·en Lizensierung dieser Anwendung fÅllen Sie bitte die nachfolgenden Eingabefelder vollstÑndig aus."
     REM ADD DIALOG "LIZENZ",5,32,44,214,30,0,"Variante:" + title1$
     REM ADD DIALOG "LIZENZ",5,32,63,214,10,0,"Die Seriennummern werden Ihnen vom CODie-Team angesagt!"
     ADD DIALOG "LIZENZ",5,32,44,300,22,0,"Diese Registrierungsdaten mÅssen Sie an das CODie-Team senden!"
     ADD DIALOG "LIZENZ",5,32,68,250,22,0,"Registrierungsdaten:(Firma und Name wurden aus den Firmenstammdaten entnommen)"
     ADD DIALOG "LIZENZ",5,32,93,23,10,0,"Name:"
     ADD DIALOG "LIZENZ",6,90,89,254,11,0,0,Name$,50
     ADD DIALOG "LIZENZ",5,32,108,24,10,0,"Firma:"
     ADD DIALOG "LIZENZ",6,90,104,254,11,0,0,Firma$,50
     ADD DIALOG "LIZENZ",5,32,123,55,10,0,"Version:"
     ADD DIALOG "LIZENZ",5,90,121,254,24,0,Seriennummer$
     REM ADD DIALOG "LIZENZ",5,32,136,55,10,0,"Seriennummer 2:"
     REM ADD DIALOG "LIZENZ",6,90,133,154,11,0,0,Seriennummer2$,50
     ADD DIALOG "LIZENZ",1,106,167,55,15,1,"&Weiter",1,1
     ADD DIALOG "LIZENZ",1,163,167,55,15,0,"&Abbruch",0,0
     REM ADD DIALOG "LIZENZ",1,150,167,55,15,0,"&Hilfe",2,2
     ok% = 0
     WHILE NOT ok%
       DIALOG "LIZENZ",req%
       SELECT CASE req%
       CASE 1
         fehler$ = ""
         IF Name$ = "" THEN fehler$ = fehler$ + ", Name"
         IF Firma$ = "" THEN fehler$ = fehler$ + ", Firma"
         IF fehler$ <> "" THEN 
           REQUEST "Die Lizensierungsdaten sind noch nicht vollstÑndig oder fehlerhaft!","Es fehlen die Angaben: " + RIGHT$ (fehler$, LEN (fehler$) - 1),139,req1%
         ELSE 
           CREATE DIALOG "LIZENZ2",0,0,254,102,title1$,"MS Sans Serif",8
           ADD DIALOG "LIZENZ2",4,0,0,253,80,0,""
           ADD DIALOG "LIZENZ2",9,7,10,20,23,2
           ADD DIALOG "LIZENZ2",5,34,10,202,11,0,"Sind die eingegebenen Daten richtig?"
           ADD DIALOG "LIZENZ2",5,34,21,23,11,0,"Name:"
           ADD DIALOG "LIZENZ2",5,88,21,157,11,0,Name$
           ADD DIALOG "LIZENZ2",5,34,32,24,11,0,"Firma:"
           ADD DIALOG "LIZENZ2",5,88,32,157,11,0,Firma$
           ADD DIALOG "LIZENZ2",5,34,44,51,11,0,"Version:"
           ADD DIALOG "LIZENZ2",5,88,44,157,25,0,Seriennummer$
           ADD DIALOG "LIZENZ2",1,68,84,55,15,1,"&Weiter",1,1
           ADD DIALOG "LIZENZ2",1,125,84,55,15,0,"é&ndern",0,0
           DIALOG "LIZENZ2",req2%
           REMOVE DIALOG "LIZENZ2"
           IF req2% = 1 THEN ok% = - 1 ELSE ok% = 0
         END IF 
       CASE 2
         REM ** ? "Hilfetext zu LIZ1 anzeigen"
       CASE ELSE 
         ok% = - 1
         CALL EXIT()
       END SELECT 
     WEND 
     REMOVE DIALOG "LIZENZ"

     IF EXISTS (_netpath$ + "Lizenz.txt") THEN DELETE _netpath$ + "Lizenz.txt"
     emailtxt$ = "Bitte senden Sie diesen Text als email an:   info@codie.com" + CHR$ (13) + CHR$ (10) + "oder faxen Sie das Dokument an " + HtlTelefax$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
     emailtxt$ = emailtxt$ + "betrifft Lizensierung SmartPROVIS" + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
     emailtxt$ = emailtxt$ + "Firma:  " + Firma$ + CHR$ (13) + CHR$ (10)
     emailtxt$ = emailtxt$ + "Name:  " + Name$ + CHR$ (13) + CHR$ (10)
     emailtxt$ = emailtxt$ + "Programmversion:  " + Seriennummer$ + CHR$ (13) + CHR$ (10)
     OPEN _netpath$ + "Lizenz.txt" FOR APPEND 
     ? emailtxt$
     CLOSE OUTPUT 
     WAIT FOR 1
     CALL TextAnz(_netpath$ + "Lizenz.txt")
   CREATE DIALOG GTelDat$,0,0,443,253,"Registrierung " + versio2008$ + " - Version: " + GBuildno$ + " Anzahl AP: " + ap$,"MS Sans Serif",8
   ADD DIALOG GTelDat$,5,5,6,56,10,0,"ACHTUNG:"
   ADD DIALOG GTelDat$,5,62,6,380,9,128,nr$
   ADD DIALOG GTelDat$,6,5,32,430,200,4,3,inh$,400
   ADD DIALOG GTelDat$,1,130,235,55,15,1,"&Speichern",1,1
   ADD DIALOG GTelDat$,1,190,235,55,15,0,"&Abbruch",0,0
   SET EDIT SELECT OFF 
   DIALOG GTelDat$,req%
   REM SET EDIT SELECT OFF 
   REMOVE DIALOG ALL 
   IF inh$ <> inhold$ THEN 
     REQUEST "Soll der Registrierungscode jetzt gespeichert werden?","",130,req%
     IF req% = 1 THEN 
       OPEN datei1$ FOR OUTPUT 
       ? inh$
       CLOSE OUTPUT 
       REQUEST "Die Registrierungsdaten wurden gespeichert!","",2
     END IF 
     OPEN datei1$ FOR INPUT 
     i% = 0
     WHILE i% < 8
       SELECT CASE i%
       CASE 0
         INPUT LINE firma1$
       CASE 1
         INPUT LINE firmahash$
       CASE 2
         INPUT LINE name1$
       CASE 3
         INPUT LINE namehash$
       CASE 4
         INPUT LINE datum1$
       CASE 5
         INPUT LINE datumhash$
       CASE 6
         INPUT LINE ap$
       CASE 7
         INPUT LINE aphash$
       END SELECT 
       i% = i% + 1
     WEND 
     CLOSE INPUT 
     SELECT FIRST LOCK FILE "config"
     QWoNo.config = datum1$
     MAName.config = firma1$
     MATimeStamp1.config = ap$
     STORE FILE "config"
   END IF 
   CALL Fehler("Das Programm muss jetzt beendet werden!","")
   CALL EXIT()
 END SUB 
 




 ' Lizensierung
 ' =================================================================
 ' Zweck:       Lizensierung einer CoDIE-Anwendung
 ' Nutzung:     CALL Lizensierung()
 ' =================================================================
 ' 22.04.93    - Testzeitraum auf 14 Tage eingeschrÑnkt
 ' 31.01.95    - Umstellung auf neues Lizensierungsverfahren
 ' 07.09.95    - Fehler bei Neulizensierung einer geÑnderten Netz-
 '               werk-AP-Zahl
 
SUB Lizensierung()
 CALL Fehler("Lizensierung","")

 title1$ = title$ + " Version: " + RIGHT$ (GBuildno$,GBuilnolen%) + "-" + PRGVersion$ + "/" + LTRIM$ ( STR$ ( FN sys(5),"999")) + " AP/ " + prv$
 REM CALL Fehler(title1$,"")
 IF NOT EXISTS (_netpath$ + "LICENSE.DLL") THEN 
   CALL Fehler("Fehler in Superbase-Runtime!","Bitte wenden Sie sich an Ihren HÑndler oder an die Hotline.")
   CALL EXIT()
 END IF 
 mp% = 0
 licfound% = CALL ("GetLicense",iAppID%,_netpath$ + "LICENSE.DLL")
 IF licfound% = 1 THEN 
   DiskSize&% = CALL ("AccessItemL",0,0,0)'                                     ; == auf Manipulation testen ==
   lDiskSize&% = CALL ("AccessItemL",11,0,0)
   IF DiskSize&% <> lDiskSize&% THEN mp% = - 1'                                 ; Festplatte gewechselt
   IF CALL ("AccessItemI",12,0,0) <> FN sys(5) THEN mp% = - 1'                  ; andere Netzwerk-Version
   timeout% = CALL ("AccessItemL",9,0,0)
   SELECT FIRST LOCK FILE "config"
   tdt$ = qwono.config
   testtimeout% = VAL (tdt$)
   p$ = DATE$ (testtimeout%,"0dmmyyyy")
   IF timeout% > 0 AND testtimeout% <> timeout% AND qwono.config <> "" AND p$ <> "09092999" THEN mp% = - 1
   heute% = DAYS ( TODAY )
   IF testtimeout% < heute% THEN mp% = - 1
   IF ag$ <> "test9999999" THEN 
     IF timeout% - 30 > DAYS ( TODAY ) AND p$ <> "09092999" THEN 
       mp% = - 1'; Systemzeit manipuliert?
     END IF 
   ELSE 
     IF timeout% - 60 > DAYS ( TODAY ) THEN 
       mp% = - 1'; Systemzeit manipuliert?
     END IF 
   END IF 
   IF mp% THEN 
     a% = CALL ("AccessItemL",9,1,0)'                                           ; AppLicense.Timeout = 0
     a% = CALL ("PutLicense",iAppID%,_netpath$ + "LICENSE.DLL")'                ; TimeOut sperren
   END IF 
 ELSE '                                                                         ; == Basisdaten schreiben ==
   SELECT FIRST LOCK FILE "CONFIG"
   p% = VAL (qwono.config)
   p$ = DATE$ (p%,"0dmmyyyy")
   timeout% = CALL ("AccessItemL",9,0,0)
   IF qwono.config <> "" AND p$ <> "09092999" AND timeout% < 1 THEN mp% = - 1
   IF ag$ <> "test9999999" THEN 
     tttod1% = DAYS ( TODAY ) + 30
   ELSE 
     tttod1% = DAYS ( TODAY ) + 60
   END IF 
   a% = CALL ("AccessItemI",8,1,0)'                                             ; AppLicense.Licensed = 0
   a% = CALL ("AccessItemL",9,1,tttod1%)'                          ; AppLicense.Timeout
   a% = CALL ("AccessItemL",10,1,0)'                                            ; AppLicense.SerialNo = 0
   a% = CALL ("AccessItemL",11,1, CALL ("AccessItemL",0,0,0))'                  ; AppLicense.SysParam = 0
   a% = CALL ("AccessItemI",12,1, FN sys(5))'                                   ; AppLicense.NetCount = 0
   a% = CALL ("PutLicense",iAppID%,_netpath$ + "LICENSE.DLL")
   IF qwono.config = "" OR p$ = "09092999" THEN 
     tttod1$ = STR$ (tttod1%,"00000000")
     qwono.config = STR$ (tttod1%,"00000000")
     STORE FILE "config"
     UNLOCK CURRENT FILE "config"
   ELSE 
     dw$ = STR$ ( TODAY ,"00000000")
     qwono.config = dw$
     STORE FILE "config"
     UNLOCK CURRENT FILE "config"
     mp% = - 1
   END IF 
   IF mp% THEN 
     a% = CALL ("AccessItemL",9,1, DAYS ( TODAY ) - 90)'                        ; AppLicense.Timeout = 0
     a% = CALL ("PutLicense",iAppID%,_netpath$ + "LICENSE.DLL")'                ; TimeOut sperren 
     mp% = - 1
     licfound% = 1
   END IF 
 END IF 
 timeout% = 0
 IF licfound% = 1 THEN 
   a% = CALL ("GetLicense",iAppID%,_netpath$ + "LICENSE.DLL")
   timeout% = CALL ("AccessItemL",9,0,0)
   pdemende$ = ""
   IF timeout% <= DAYS ( TODAY ) THEN 
     pdemende$ = DATE$ (timeout%,"0d.mm.yyyy")
     timeout% = - 1
   ELSE 
     pdemende$ = DATE$ (timeout%,"0d.mm.yyyy")
     timeout% = 0'         ; Probezeit abgelaufen ? 
   END IF 
 END IF 
 IF CALL ("AccessItemI",8,0,0) = 255 - FN sys(5) AND NOT mp% THEN 
   SELECT FIRST FILE "config"
   test1$ = maname.config
   test$ = MID$ (PWDecoded1$(test1$),7)
   testser$ = LEFT$ (PWDecoded1$(test1$),6)
   testserial&% = CALL ("AccessItemL",10,0,0)
   testSerie$ = STR$ (testserial&%,"000000")
   REM CALL Fehler(test$,Gserial$)
   REM CALL Fehler(testser$,testSerie$)
   IF testser$ = testSerie$ THEN 
     END SUB '     ; Lizensierung OK! - Austritt
   ELSE 
     licfound% = 0
     mp% = - 1
   END IF 
 ELSE 
   mp% = - 1
 END IF 
 REMOVE DIALOG ALL 
 IF licfound% = 0 OR mp% OR CALL ("AccessItemL",10,0,0) = 0 THEN 
   msg$ = "Registrieren"
 ELSE 
   msg$ = "Freischalten"
 END IF 
 cmReg$ = "&" + msg$
 msg$ = "Wenn Sie das Programm kÑuflich erworben haben oder erwerben wollen, klicken Sie auf die SchaltflÑche '" + msg$ + "'."
 IF NOT timeout% THEN 
   CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
   REM FILE GAdrDat$
   REM INDEX codeku.GAdrDat$
   REM SELECT FIRST LOCK 
   REM IF prioritÑt.GAdrDat$ = 3 THEN timeout% = - 1
   FILE "Supervis"
 END IF 
 IF timeout% THEN 
   CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
   FILE GAdrDat$
   INDEX codeku.GAdrDat$
   SELECT FIRST LOCK 
   prioritÑt.GAdrDat$ = 3
   STORE FILE GAdrDat$
   UNLOCK CURRENT FILE GAdrDat$
   UNLOCK FILE GADRDat$
   FILE "Supervis"
   HtlFirma$ = ReadConfig$(_projekt$,"HotlineFirma")
   HtlTelefon$ = ReadConfig$(_projekt$,"HotlinePhone")'                         ; Hotlinedaten aus
   HtlTelefax$ = ReadConfig$(_projekt$,"HotlineFax")'                           ; CODIEAPP.NET auslesen und
   IF HtlTelefon$ LIKE "leer" THEN HtlTelefon$ = "(0331) 28 00 28 1"'           ; notfalls auf Standardwerte
   IF HtlTelefax$ LIKE "leer" THEN HtlTelefax$ = "(0331) 28 00 28 2"'           ; setzen
   IF ag$ <> "test999999" THEN 
     CREATE DIALOG "Demo2",0,0,233,127,title1$,"MS Sans Serif",8'                  ; == Dialog fÅr Timeout erzeugen ==
     ADD DIALOG "Demo2",4,0,0,233,106,0,""
     ADD DIALOG "Demo2",9,4,8,20,22,3
     ADD DIALOG "Demo2",5,30,11,159,11,0,"Der Testzeitraum fÅr diese Demo ist abgelaufen."
     ADD DIALOG "Demo2",5,30,25,158,29,0,"Um das Programm zu erwerben oder den Testzeitraum der Demo zu verlÑngern, setzen Sie sich bitte mit der Hotline in Verbindung."
     ADD DIALOG "Demo2",5,30,58,196,20,0,"Hotline (Mo - Do, 10:00 - 18:00, Fr 10:00-15:00):"
     ADD DIALOG "Demo2",5,30,78,30,10,0,"Telefon:"
     ADD DIALOG "Demo2",5,71,78,119,10,0,HtlTelefon$
     ADD DIALOG "Demo2",5,30,88,17,10,0,"Fax:"
     ADD DIALOG "Demo2",5,71,88,117,10,0,HtlTelefax$
     ADD DIALOG "Demo2",1,91,109,55,15,1,"&OK",1,2
   ELSE 
     CREATE DIALOG "Demo2",0,0,233,127,title1$,"MS Sans Serif",8'                  ; == Dialog fÅr Timeout erzeugen ==
     ADD DIALOG "Demo2",4,0,0,233,106,0,""
     ADD DIALOG "Demo2",9,4,8,20,22,3
     ADD DIALOG "Demo2",5,30,11,159,11,0,"Der Nutzungszeitraum von 60 Tagen ist abgelaufen."
     ADD DIALOG "Demo2",5,30,25,158,29,0,"Um das Programm weiter zu nutzen oder den Testzeitraum der Demo zu verlÑngern, setzen Sie sich bitte mit der Hotline in Verbindung."
     ADD DIALOG "Demo2",5,30,58,196,20,0,"Hotline (Mo - Do, 10:00 - 18:00 Fr 10:00-15:00):"
     ADD DIALOG "Demo2",5,30,78,30,10,0,"Telefon:"
     ADD DIALOG "Demo2",5,71,78,119,10,0,HtlTelefon$
     ADD DIALOG "Demo2",5,30,88,17,10,0,"Fax:"
     ADD DIALOG "Demo2",5,71,88,117,10,0,HtlTelefax$
     ADD DIALOG "Demo2",1,91,109,55,15,1,"&OK",1,2
   END IF 
 END IF 
 pddok% = 0
 IF DateOK%(pdemende$) THEN 
   pdemende% = DAYS (pdemende$)
   IF pdemende% > TODAY + 4 THEN 
     pddok% = - 1
   END IF 
 END IF 
 IF pddok% = - 1 THEN 
   REM REQUEST "Diese Anwendung wurde noch nicht endgÅltig lizensiert!","Das Programm lÑuft noch bis zum " + pdemende$,2
   req% = 1
 ELSE 
   CREATE DIALOG "Demo",0,0,237,98,title1$,"MS Sans Serif",8'                      ; == Regist/Demo-Dialog erzeugen ==
   ADD DIALOG "Demo",4,0,0,236,74,0,""
   ADD DIALOG "Demo",9,4,11,22,22,4
   ADD DIALOG "Demo",5,31,13,192,10,0,"Diese Anwendung wurde noch nicht endgÅltig lizensiert!"
   IF pdemende% > 0 THEN ADD DIALOG "Demo",5,31,25,198,18,0,"Das Programm lÑuft noch bis zum " + pdemende$
   ADD DIALOG "Demo",5,31,45,198,24,0,msg$
   IF NOT timeout% THEN 
     ADD DIALOG "Demo",1,14,78,65,15,1,"&Programm starten",1,1
   ELSE 
     ADD DIALOG "Demo",1,14,78,65,15,1,"&Programm starten",1,2,"Demo2"
   END IF 
   ADD DIALOG "Demo",1,81,78,55,15,0,cmReg$,2,1
   ADD DIALOG "Demo",1,138,78,55,15,0,"&Beenden",0,0
   DIALOG "Demo",req%
   REMOVE DIALOG ALL 
 END IF 
 Gpdemende$ = pdemende$
 IF req% = 0 THEN CALL EXIT()
 
 IF req% = 2 THEN 
   tt% = CALL ("AccessItemL",10,0,0)
   REM CALL Fehler( STR$ (licfound%,"99") + " " + STR$ (mp%,"99"), STR$ (tt%,"99"))
   IF licfound% = 0 OR mp% = - 1 OR tt% = 0 THEN 
     SELECT FIRST LOCK FILE "config"
     GLizName$ = CALL ("AccessItemC",1,0,"")
     GLizFirma$ = CALL ("AccessItemC",2,0,"")
     Name$ = GLizName$
     Firma$ = GLizFirma$
     REM Name$ = TRIM$ ( CALL ("GetUserName"))
     REM Firma$ = TRIM$ ( CALL ("GetUserCompany"))
     IF anzag.config <> 0 THEN 
       ag1$ = LTRIM$ ( STR$ (anzag.config,"999999")) + " Agent"
     ELSE 
       ag1$ = "+"
     END IF 
     IF UCASE$ (TempletonImport.config) <> "TRUE" THEN 
       prgv$ = PRGVersion.config + " " + ag1$
     ELSE 
       prgv$ = PRGVersion.config + " " + ag1$ + " TImp"
     END IF 
     Htlfon$ = ReadConfig$(_projekt$,"HotlinePhone")'                  ; Hotlinedaten aus
     name$ = GLizName$
     Firma$ = GLizFirma$
     CREATE DIALOG "LIZENZ",0,0,350,185,title1$,"MS Sans Serif",8
     ADD DIALOG "LIZENZ",4,0,0,350,160,0,""
     ADD DIALOG "LIZENZ",9,8,10,19,21,3
     REM ADD DIALOG "LIZENZ",5,32,10,214,10,0,"Registrierung/Lizensierung: " + Htlfon$
     ADD DIALOG "LIZENZ",5,32,10,214,10,0,"Registrierung/Lizensierung: +49 331 242180"
     ADD DIALOG "LIZENZ",5,32,20,214,20,0,"Zur ordnungsgemÑ·en Lizensierung dieser Anwendung fÅllen Sie bitte die nachfolgenden Eingabefelder vollstÑndig aus."
     ADD DIALOG "LIZENZ",5,32,44,214,30,0,"Variante:" + title1$
     REM ADD DIALOG "LIZENZ",5,32,63,214,10,0,"Die Seriennummern werden Ihnen vom CODie-Team angesagt!"
     ADD DIALOG "LIZENZ",5,32,63,214,10,0,"Die Seriennummer wird Ihnen vom CODie-Team angesagt!"
     ADD DIALOG "LIZENZ",5,32,74,70,10,0,"Lizensierungsdaten:"
     ADD DIALOG "LIZENZ",5,32,93,23,10,0,"Name:"
     ADD DIALOG "LIZENZ",6,90,89,254,11,0,0,Name$,50
     ADD DIALOG "LIZENZ",5,32,108,24,10,0,"Firma:"
     ADD DIALOG "LIZENZ",6,90,104,254,11,0,0,Firma$,50
     ADD DIALOG "LIZENZ",5,32,123,55,10,0,"Seriennummer 1:"
     ADD DIALOG "LIZENZ",6,90,119,254,11,0,0,Seriennummer$,50
     REM ADD DIALOG "LIZENZ",5,32,136,55,10,0,"Seriennummer 2:"
     REM ADD DIALOG "LIZENZ",6,90,133,154,11,0,0,Seriennummer2$,50
     ADD DIALOG "LIZENZ",1,106,167,55,15,1,"&Weiter",1,1
     ADD DIALOG "LIZENZ",1,163,167,55,15,0,"&Abbruch",0,0
     REM ADD DIALOG "LIZENZ",1,150,167,55,15,0,"&Hilfe",2,2
     ok% = 0
     WHILE NOT ok%
       DIALOG "LIZENZ",req%
       Seriennummer$ = LTRIM$ ( UCASE$ (Seriennummer$))
       REM Seriennummer2$ = LTRIM$ ( UCASE$ (Seriennummer2$))
       Seriennummer2$ = LTRIM$ ( UCASE$ ( RIGHT$ (GBuildno$,GBuilnolen%)))
       SELECT CASE req%
       CASE 1
         fehler$ = ""
         IF Name$ = "" THEN fehler$ = fehler$ + ", Name"
         IF Firma$ = "" THEN fehler$ = fehler$ + ", Firma"
         IF Seriennummer2$ = "" OR Seriennummer$ = "" OR Seriennummer$ <> GSerial$ THEN 
           fehler$ = fehler$ + ", Seriennummer"
         ELSE 
           REM 010300-kxq-yac-12-3xa
           Seriennummero$ = Seriennummer$
           s$ = LEFT$ (Seriennummer$,6)
           Seriennummer$ = s$
           serial$ = MID$ (Seriennummero$,7)
           so$ = Seriennummero$
           REM so$=-kxq-yac-12-3xa
           a1$ = RIGHT$ (GBuildno$,GBuilnolen%)
           REM a1$= A01-0305
           a2$ = RIGHT$ (Seriennummer2$,GBuilnolen%)
           REM a2$= A01-0305
           a$ = CALL ("AccessItemC",1,1,name$)
           a$ = CALL ("AccessItemC",2,1,Firma$)
           REM                                                                                             010300                         A01-0305                               A01-0305                  -kxq-yac-12-3xa        -kxq-yac-12-3xa  
           REM IF VAL (Seriennummer$) = 0 OR LEFT$ (Seriennummer$,1) <> "0" OR LEN (Seriennummer$) < 4 OR LEN (Seriennummer$) > 6 OR LEFT$ (Seriennummer2$,GBuilnolen%) <> RIGHT$ (GBuildno$,GBuilnolen%) OR UCASE$ (serial$) <> UCASE$ (GSerial$) THEN 
           IF LEN (Seriennummer$) < 4 OR LEN (Seriennummer$) > 6 THEN 
             fehler$ = fehler$ + ", Seriennummer falsch"
           END IF 
         END IF 
         IF fehler$ <> "" THEN 
           REQUEST "Die Lizensierungsdaten sind noch nicht vollstÑndig oder fehlerhaft!","Es fehlen die Angaben: " + RIGHT$ (fehler$, LEN (fehler$) - 1),139,req1%
           Seriennummer$ = Seriennummero$
         ELSE 
           Seriennummer$ = Seriennummero$
           CREATE DIALOG "LIZENZ2",0,0,254,82,title1$,"MS Sans Serif",8
           ADD DIALOG "LIZENZ2",4,0,0,253,60,0,""
           ADD DIALOG "LIZENZ2",9,7,10,20,23,2
           ADD DIALOG "LIZENZ2",5,34,10,202,11,0,"Sind die eingegebenen Daten richtig?"
           ADD DIALOG "LIZENZ2",5,34,21,23,11,0,"Name:"
           ADD DIALOG "LIZENZ2",5,88,21,157,11,0,Name$
           ADD DIALOG "LIZENZ2",5,34,32,24,11,0,"Firma:"
           ADD DIALOG "LIZENZ2",5,88,32,157,11,0,Firma$
           ADD DIALOG "LIZENZ2",5,34,44,51,11,0,"Seriennummer:"
           ADD DIALOG "LIZENZ2",5,88,44,157,11,0,Seriennummer$
           ADD DIALOG "LIZENZ2",1,68,64,55,15,1,"&Weiter",1,1
           ADD DIALOG "LIZENZ2",1,125,64,55,15,0,"é&ndern",0,0
           DIALOG "LIZENZ2",req2%
           REMOVE DIALOG "LIZENZ2"
           IF req2% = 1 THEN ok% = - 1 ELSE ok% = 0
         END IF 
       CASE 2
         REM ** ? "Hilfetext zu LIZ1 anzeigen"
       CASE ELSE 
         ok% = - 1
         CALL EXIT()
       END SELECT 
     WEND 
     REMOVE DIALOG "LIZENZ"
     a$ = CALL ("AccessItemC",1,1,name$)
     a$ = CALL ("AccessItemC",2,1,Firma$)
     GLizName$ = CALL ("AccessItemC",1,0,"")
     GLizFirma$ = CALL ("AccessItemC",2,0,"")
     IF mp% THEN 
       REM normalerweise mu· hier eingetragen werden bis wann das Programm laufen soll
       REM also die Sache aus SER2 Åbernehmen
       atests$ = LTRIM$ ( MID$ (Seriennummer2$,9))
       IF atests$ <> "" THEN 
         REM CALL Fehler(atests$,"")
         xxxlz% = VAL (atests$) / 2
         a% = CALL ("AccessItemL",9,1, DAYS ( TODAY ) + xxxlz%)
         SELECT FIRST LOCK FILE "config"
         xxbis1% = TODAY 
         xxbis1% = DAYS ( TODAY + xxxlz%)
         dw$ = STR$ (xxbis1%,"00000000")
         qwono.config = dw$
         STORE FILE "config"
         UNLOCK FILE "config"
       ELSE 
         a% = CALL ("AccessItemL",9,1,0)
       END IF 
     ELSE 
       IF ag$ <> "test9999999" THEN 
         a% = CALL ("AccessItemL",9,1, DAYS ( TODAY ) + 30)
       ELSE 
         a% = CALL ("AccessItemL",9,1, DAYS ( TODAY ) + 60)
       END IF 
     END IF 
     Seriennummer$ = s$
     a% = CALL ("AccessItemL",10,1, VAL (Seriennummer$))
     a% = CALL ("AccessItemL",11,1, CALL ("AccessItemL",0,0,0))
     a% = CALL ("AccessItemI",12,1, FN sys(5))
     DiskSize% = CALL ("AccessItemL",0,0,0)
     lizcode$ = MakeCode$(Name$,DiskSize%, VAL (Seriennummer$),iAppID%)
     lizcode&% = VAL ( RIGHT$ (lizcode$,6))
     a% = CALL ("AccessItemL",7,1,lizcode&%)
     a% = CALL ("AccessItemI",8,1,0)
     a% = CALL ("PutLicense",iAppID%,_netpath$ + "LICENSE.DLL")
   END IF 
   IF CALL ("AccessItemI",8,0,0) <> 255 - FN sys(5) THEN 
     a% = CALL ("GetLicense",iAppID%,_netpath$ + "LICENSE.DLL")
     Seriennummer$ = STR$ ( CALL ("AccessItemL",10,0,0),"000000")
     name$ = CALL ("AccessItemC",1,0,"")
     firma$ = CALL ("AccessItemC",2,0,"")
     DiskSize% = CALL ("AccessItemL",0,0,0)
     lizcode$ = MakeCode$(Name$,DiskSize%, VAL (Seriennummer$),iAppID%)
     name$ = CALL ("AccessItemC",1,0,"")
     IF ag$ <> "test999999999" THEN 
       CREATE DIALOG "LIZENZ",0,0,350,156,title1$,"MS Sans Serif",8
       ADD DIALOG "LIZENZ",4,0,0,350,134,0,""
       ADD DIALOG "LIZENZ",9,8,12,20,23,2
       ADD DIALOG "LIZENZ",5,33,12,210,10,0,"Bitten geben Sie den Freischaltcode ein:"
       ADD DIALOG "LIZENZ",5,33,23,210,28,0,"Sollten Sie noch keinen Freischaltcode erhalten haben, kontaktieren Sie uns telefonisch 0331 242180."
       ADD DIALOG "LIZENZ",5,33,51,210,18,0,"Den Freischaltcode erhalten Sie dann von uns telefonisch, per Fax oder per Post."
       REM ADD DIALOG "LIZENZ",5,33,70,210,26,0,"Innerhalb der ersten 14 Tage nach Installation des Programmes, kînnen Sie das Programm auch ohne Eingabe des Freischaltcodes starten."
       ADD DIALOG "LIZENZ",5,33,102,63,11,0,"Lizensierungscode:"
       ADD DIALOG "LIZENZ",5,103,102,240,11,0,lizcode$
       ADD DIALOG "LIZENZ",6,103,115,235,11,0,0,fscode$,50
       ADD DIALOG "LIZENZ",5,33,118,50,10,0,"Freischaltcode:"
       ADD DIALOG "LIZENZ",1,115,139,55,15,1,"&Weiter",1,1
       ADD DIALOG "LIZENZ",1,172,139,55,15,0,"&Ende",0,0
       DIALOG "LIZENZ",req%
       REMOVE DIALOG "LIZENZ"
     ELSE 
       req% = 1
       fscode$ = "V"
     END IF 
     IF req% = 1 THEN 
       IF fscode$ LIKE "V" THEN CALL LizV(so$)
       lizcode&% = VAL ( RIGHT$ (lizcode$,6))
       xxxlz% = 0
       IF LEN (fscode$) > 6 THEN 
         fscode&% = VAL ( LEFT$ (fscode$,6))
         xxxlz% = VAL ( MID$ (fscode$,7))
       ELSE 
         fscode&% = VAL (fscode$)
       END IF 
       REM xxxlz% = 0
       a% = CALL ("GetAppVersion",lizcode&%,fscode&%)
       IF a% = 1 THEN 
         dw% = DAYS ("09.09.2999")
         IF xxxlz% > 0 THEN 
           dw% = DAYS ( TODAY ) + xxxlz%
         END IF 
         a% = CALL ("AccessItemI",8,1,255 - FN sys(5))
         a% = CALL ("AccessItemL",11,1, CALL ("AccessItemL",0,0,0))
         a% = CALL ("AccessItemI",12,1, FN sys(5))
         IF xxxlz% > 0 THEN 
           a% = CALL ("AccessItemL",9,1, DAYS ( TODAY ) + xxxlz%)'                          ; AppLicense.Timeout
         ELSE 
           REM a% = CALL ("AccessItemL",9,1, DAYS ( TODAY ) + 30)'                          ; AppLicense.Timeout
           a% = CALL ("AccessItemL",9,1,dw%)
         END IF 
         REM a% = CALL ("AccessItemL",9,1,dw%)
         a% = CALL ("PutLicense",iAppID%,_netpath$ + "LICENSE.DLL")
         CREATE DIALOG "LIZENZ",0,0,222,190,title1$,"MS Sans Serif",8
         ADD DIALOG "LIZENZ",4,0,0,222,168,0,""
         ADD DIALOG "LIZENZ",9,6,12,20,23,4
         ADD DIALOG "LIZENZ",5,30,12,182,8,0,"Herzlichen GlÅckwunsch!"
         ADD DIALOG "LIZENZ",5,30,20,182,8,0,"Das Programm wurde erfolgreich lizensiert."
         REM ADD DIALOG "LIZENZ",5,30,32,182,30,0,"Bitte notieren Sie sich die nachfolgenden Daten, um im Falle einer Neuinstallation die Software wieder freischalten zu kînnen."
         REM ADD DIALOG "LIZENZ",5,30,60,182,25,0,"Bedenken Sie aber bitte, da· der Freischaltcode nur fÅr diesen Computer gilt. Die Installation auf einen anderen Computer ist mit diesem Freischaltcode nicht mîglich."
         ADD DIALOG "LIZENZ",4,30,91,187,72,0,""
         ADD DIALOG "LIZENZ",4,30,91,187,18,0,""
         ADD DIALOG "LIZENZ",5,35,98,88,10,0,"Lizensierungsdaten"
         ADD DIALOG "LIZENZ",5,35,112,47,10,0,"Name:"
         ADD DIALOG "LIZENZ",5,90,112,125,10,0,Name$
         ADD DIALOG "LIZENZ",5,35,122,46,10,0,"Firma:"
         ADD DIALOG "LIZENZ",5,90,122,125,10,0,Firma$
         ADD DIALOG "LIZENZ",5,35,132,46,10,0,"Programm:"
         ADD DIALOG "LIZENZ",5,90,132,125,10,0,title$
         ADD DIALOG "LIZENZ",5,35,142,48,10,0,"Seriennummer:"
         ADD DIALOG "LIZENZ",5,90,142,125,10,0,Seriennummer$
         ADD DIALOG "LIZENZ",5,35,152,50,10,0,"Freischaltcode:"
         ADD DIALOG "LIZENZ",5,90,152,125,10,0,fscode$
         ADD DIALOG "LIZENZ",1,52,172,55,15,1,"&Weiter",1,1
         REM ADD DIALOG "LIZENZ",1,108,172,55,15,0,"&Drucken",2,1
         DIALOG "LIZENZ",req%
         REMOVE DIALOG "LIZENZ"
         SELECT FIRST LOCK FILE "config"
         REM Pa·wort.SUPERVIS = CALL (~crypt~,pawo$)
         REM CALL Fehler(so$,"")
         MAName.config = CALL ("crypt",so$)
         IF xxxlz% > 0 THEN 
           dw% = DAYS ( TODAY + xxxlz%)
         ELSE 
           dw% = DAYS ("09.09.2999")
         END IF 
         dw$ = STR$ (dw%,"00000000")
         qwono.config = dw$
         REM QWONo.config = PWDecoded1$(so$)
         STORE FILE "CONFIG"
         REM 160698
         CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
         FILE GAdrDat$
         INDEX codeku.GAdrDat$
         SELECT FIRST LOCK 
         prioritÑt.GAdrDat$ = 0
         STORE FILE GAdrDat$
         UNLOCK CURRENT FILE GADRDat$
         UNLOCK FILE GADRDat$
         FILE "Supervis"
         Gpdemende$ = ""
       ELSE 
         a% = CALL ("GetLicense",iAppID%,_netpath$ + "LICENSE.DLL")
         timeout% = CALL ("AccessItemL",9,0,0)
         IF timeout% <= DAYS ( TODAY ) THEN timeout% = - 1 ELSE timeout% = 0
         IF fscode$ <> "" OR timeout% THEN 
           IF timeout% THEN 
             a% = CALL ("AccessItemL",9,1,0)
             a% = CALL ("PutLicense",iAppID%,_netpath$ + "LICENSE.DLL")
             cmOK$ = "&Ende"
             msg$ = "Ein Fortfahren ohne Eingabe des richtigen Freischaltcodes ist nicht mehr mîglich."
           ELSE 
             cmOK$ = "&Weiter"
             CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
             FILE GAdrDat$
             INDEX codeku.GAdrDat$
             SELECT FIRST LOCK 
             IF prioritÑt.GAdrDat$ = 3 THEN cmOK$ = "&Ende"
             msg$ = "Bitte geben Sie beim nÑchsten Programmstart den korrekten Freischaltcode ein."
           END IF 
           CREATE DIALOG "LIZENZ",0,0,198,69,title1$,"MS Sans Serif",8
           ADD DIALOG "LIZENZ",4,0,0,198,45,0,""
           ADD DIALOG "LIZENZ",9,6,10,20,22,1
           ADD DIALOG "LIZENZ",5,34,9,155,10,0,"Der eingegebene Freischaltcode ist fehlerhaft!"
           ADD DIALOG "LIZENZ",5,34,20,156,20,0,msg$
           ADD DIALOG "LIZENZ",1,66,50,55,15,0,cmOK$,0,0
           DIALOG "LIZENZ"
           REMOVE DIALOG "LIZENZ"
           IF cmOK$ LIKE "*Ende*" THEN CALL EXIT()
         END IF 
       END IF 
     ELSE 
       CALL EXIT()
     END IF 
   END IF 
 END IF 
 END SUB 
 
 'ermîglicht die Sperung einer externen Agentur durch den Datenexport
 ' file supervis, Index codema, AGSperreAB wird verglichen mit AGSperre1
 ' ist AGSperre1<1 dann AGSperre1=Akt.Datum AGSperre2=Akt.Datum
 ' ist AGSperre1>1 dann AGSperre1 mit AGSperre2 vergleichen (wegen Manipulation)
 
SUB LizensAG()
 FILE "Supervis"
 INDEX codema.supervis
 SELECT FIRST LOCK 
 ok% = - 1
 IF AGSperreAB.supervis > 0 THEN 
   dddab$ = DATE$ (AGSperreAB.supervis,"0d.mm.yyyy")
   IF AGSperre1.supervis < 1 THEN 
     AGSperre1.supervis = TODAY 
     AGSperre2.supervis = AGSperre1.supervis
   ELSE 
     IF AGSperre1.supervis > TODAY THEN 
       'es wurde manipuliert
       AGSperreAB.supervis = AGSperre1.supervis
       ok% = 0
     ELSE 
       AGSperre1.supervis = TODAY 
     END IF 
 
   END IF 
   REM dddab$ = DATE$ (AGSperreAB.supervis,"0d.mm.yyyy")
   ddd1$ = DATE$ (AGSperre1.supervis,"0d.mm.yyyy")
   ddd2$ = DATE$ (AGSperre2.supervis,"0d.mm.yyyy")
   REM  AGSperreAB.supervis = DAYS ("30.09.2002")
   REM  AGSperre1.supervis = DAYS ("30.07.2002")
   REM  AGSperre2.supervis = DAYS ("30.09.2002")
   IF AGSperreAB.supervis < TODAY THEN 
     ok% = 0
   END IF 
   STORE FILE "Supervis"
   UNLOCK CURRENT FILE "supervis"
   UNLOCK FILE "supervis"
   IF ok% = 0 THEN 
     aaa$ = "Bitte setzen Sie sich mit Ihrer Mutteragentur in Verbindung, um neue Daten zu erhalten und somit den Nutzungszeitraum zu verlÑngern!"
     CALL Fehler("Der Nutzungszeitraum der Daten, die Sie von Ihrem Datenlieferanten (Mutteragentur) erhalten haben, ist abgelaufen! " + dddab$,aaa$)
     CALL EXIT()
   END IF 
 END IF 
 END SUB 
 
FUNCTION MakeCode$(UsrName$,DiskSize%,Sernum%,AppID%)
 UsrName$ = LTRIM$ ( TRIM$ ( UCASE$ (UsrName$)))
 sernum$ = STR$ (Sernum% * AppID%,"00000000")
 tser$ = ""
 FOR a% = LEN (sernum$) TO 1 STEP - 1
   tser$ = tser$ + STR$ (9 - VAL ( MID$ (Sernum$,a%,1)) - FN sys(5),"0")
 NEXT a%
 nser% = VAL ( LEFT$ (tser$,6))
 ds$ = RIGHT$ ( STR$ (DiskSize%,"00000000000"),6)
 tds$ = ""
 FOR a% = LEN (ds$) TO 1 STEP - 1
   tds$ = tds$ + STR$ (9 - VAL ( MID$ (ds$,a%,1)),"0")
 NEXT a%
 qs% = 0
 FOR a% = 1 TO LEN (UsrName$)
   qs% = qs% + ASC ( MID$ (UsrName$,a%,1)) * a%
 NEXT a%
 qs% = qs% + VAL ( RIGHT$ (tds$,6))
 qs$ = STR$ (qs% + nser%,"00000000")
 qs% = VAL ( RIGHT$ (qs$,6))
 IF FN sys(5) = 1 THEN nc$ = "E" ELSE nc$ = "N"
 MakeCode$ = STR$ (sernum%,"000000") + "-" + LTRIM$ ( STR$ (AppID%,"999")) + nc$ + LTRIM$ ( STR$ ( FN sys(5),"99999")) + "-" + RIGHT$ ( STR$ (qs% - ((sernum% * 2.1) * 10),"00000000"),6)
 END FUNCTION 
 
SUB LizV(so$)
 VCode$ = RIGHT$ ( STR$ ( TIMEVAL ( NOW ),"00000000000"),6)
     IF anzag.config <> 0 THEN 
       ag1$ = LTRIM$ ( STR$ (anzag.config,"999999")) + " Agent"
     ELSE 
       ag1$ = "+"
     END IF 
     IF UCASE$ (TempletonImport.config) <> "TRUE" THEN 
       prgVariante$ = PRGVersion.config + " " + ag1$
     ELSE 
       prgVariante$ = PRGVersion.config + " " + ag1$ + " TImp"
     END IF 
     IF GASP% THEN 
       pcode$ = "ASP " + prgVariante$ + " - " + LPRGCode$ + "-" + DATE$ ( TODAY ,"yymmdd") + "-" + VCode$ + "-" + TIME$ ( NOW ,"hh:mm")
     ELSE 
       pcode$ = prgVariante$ + " - " + LPRGCode$ + "-" + DATE$ ( TODAY ,"yymmdd") + "-" + VCode$ + "-" + TIME$ ( NOW ,"hh:mm")
     END IF 
 REM pcode$ = title$ + DATE$ ( TODAY ,"yymmdd") + "-" + VCode$ + "-" + TIME$ ( NOW ,"hh:mm")
 CREATE DIALOG "LIZ7",0,0,350,90,title$,"MS Sans Serif",8
 ADD DIALOG "LIZ7",4,0,0,349,68,0,""
 ADD DIALOG "LIZ7",9,6,11,21,23,2
 ADD DIALOG "LIZ7",5,30,11,202,17,0,"Bitte geben Sie den Gegencode ein, um die Testzeit fÅr diese Anwendung zu verlÑngern."
 ADD DIALOG "LIZ7",5,30,35,33,10,0,"PrÅfcode:"
 ADD DIALOG "LIZ7",5,82,35,340,10,0,pcode$
 ADD DIALOG "LIZ7",5,30,49,42,10,0,"Gegencode:"
 ADD DIALOG "LIZ7",6,82,47,147,11,0,0,gcode$,50
 ADD DIALOG "LIZ7",1,90,72,55,15,1,"&OK",1,1
 ADD DIALOG "LIZ7",1,147,72,55,15,0,"&Abbrechen",0,0
 DIALOG "LIZ7",req%
 REMOVE DIALOG "LIZ7"
 IF req% = 1 THEN 
   IF LEN (gcode$) > 6 THEN 
     gcode1$ = LEFT$ (gcode$,6)
     xxxlz% = VAL ( MID$ (gcode$,7)) / 2
     gcode$ = gcode1$
     a% = CALL ("GetAppVersion", VAL (vcode$), VAL (gcode1$))
   ELSE 
     a% = CALL ("GetAppVersion", VAL (vcode$), VAL (gcode$))
   END IF 
   IF a% = 1 THEN 
     a% = CALL ("GetLicense",iAppID%,_netpath$ + "License.DLL")
     IF ag$ <> "test999999" THEN 
       IF xxxlz% > 0 THEN 
         a% = CALL ("AccessItemL",9,1, DAYS ( TODAY ) + xxxlz%)
         REM SELECT FIRST LOCK FILE "config"
         REM dw% = TODAY + xxxlz%
         REM qwono.config = STR$ (dw%,"00000000")
         REM STORE FILE "config"
         REM UNLOCK FILE "config"
       ELSE 
         a% = CALL ("AccessItemL",9,1, DAYS ( TODAY ) + 30)
       END IF 
     ELSE 
       a% = CALL ("AccessItemL",9,1, DAYS ( TODAY ) + 60)
     END IF 
     a% = CALL ("PutLicense",iAppID%,_netpath$ + "License.DLL")
     SELECT FIRST LOCK FILE "Config"
     MAName.config = CALL ("crypt",so$)
     IF ag$ <> "test9999999" THEN 
       IF xxxlz% > 0 THEN 
         dw% = TODAY + xxxlz%
       ELSE 
         dw% = DAYS ( DAYS ( TODAY ) + 30)
       END IF 
     ELSE 
       dw% = DAYS ( DAYS ( TODAY ) + 60)
     END IF 
     dw$ = STR$ (dw%,"00000000")
     qwono.config = dw$
     STORE FILE "config"
     REQUEST "Die Nutzungszeit wurde verlÑngert!"
     REM 160698
     CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
     FILE GAdrDat$
     INDEX codeku.GAdrDat$
     SELECT FIRST LOCK 
     prioritÑt.GAdrDat$ = 0
     STORE FILE GAdrDat$
     UNLOCK CURRENT FILE GADRDat$
     UNLOCK FILE GadrDat$
     FILE "Supervis"
   ELSE 
     REQUEST "Falscher VerlÑngerungscode!"
   END IF 
 END IF 
 CALL EXIT()
 END SUB 
  
  
 
  
 
 ' Aufruf externer Anwendungen
 ' ====================================================================
 
SUB ADDON()
 Anwendung$ = ReadINI$("AddOn", LTRIM$ ( STR$ (addon2%,"99")))
 StartUp$ = ReadINI$("AddOnProgs",Anwendung$)
 IF UCASE$ ( RIGHT$ (startup$,3)) LIKE "SB*" THEN 
   cdir$ = DIRECTORY 
   DIRECTORY _netpath$ + "REPORT"
   IF NOT PROGRAMFILE (startup$) THEN LOAD + startup$, NEW 
   startup$ = UCASE$ ( FN name(startup$))
   startup1$ = startup$
   startup$ = LEFT$ (startup$, LEN (startup$) - 4) + "()"
   MOUSE OFF 
   CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
   CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
   CALL DFile(2,"OFFICE\aktionen" + _fpw$)
   REM ******CALL DFile(2,"OFFICE\dokgroup" + _fpw$)
   CALL DFile(2,"OFFICE\" + GDokDat$ + _fpw$)
   CALL DFile(2,"OFFICE\fax" + _fpw$)
   CALL DFile(2,"OFFICE\keywords" + _fpw$)
   CALL DFile(2,"OFFICE\mail" + _fpw$)
   CALL DFile(2,"OFFICE\notiz" + _fpw$)
   CALL DFile(2,"OFFICE\sernum" + _fpw$)
   IF _projekt$ LIKE "PROVIS" THEN 
     CALL DFile(3,"buchung" + _fpw$)
     CALL DFile(3,"geadr" + _fpw$):CALL DFile(3,"geadr2" + _fpw$)
     CALL DFile(3,"gekond" + _fpw$)
     CALL DFile(3,"gekondm" + _fpw$)
     CALL DFile(3,"kvertrag" + _fpw$)
     CALL DFile(3,"maadr" + _fpw$)
     CALL DFile(3,"protokol" + _fpw$)
     CALL DFile(3,"schaden" + _fpw$)
     CALL DFile(3,"sparten" + _fpw$)
     CALL DFile(3,"zeingang" + _fpw$)
   END IF 
   IF _projekt$ LIKE "IMMAK" THEN 
     CALL DFile(3,"anfrage" + _fpw$)
     CALL DFile(3,"gruppen" + _fpw$)
     CALL DFile(3,"immogrup" + _fpw$)
     CALL DFile(3,"ob" + _fpw$)
     CALL DFile(3,"objekte" + _fpw$)
   END IF 
   ON ERROR GOTO Endeproz
   EXECUTE "call " + startup$
 
   CLOSE PROGRAMFILE startup1$
   SET STATUS "HauptmenÅ"
   MOUSE ON 
   DIRECTORY cdir$
 ELSE 
   CALL StartUp$
 END IF 
Endeproz: 
 END SUB 
 
 
  
 
 '      ************************
 '      ** Formular GAkquiDat$ **
 '      ************************
 '
 
SUB AKQUISE1()
 CALL AKQUISE(1)
 END SUB 
 
SUB AKQUISE2()
 CALL AKQUISE(2)
 END SUB 
 
SUB AKQUISE3()
 CALL AKQUISE(3)
 END SUB 
 
SUB AKQUISE4()
 CALL AKQUISE(4)
 END SUB 
 
FUNCTION AQFileOK%()
 aqok$ = ReadConfig$("OFFICE","UpdAkquise")
 IF aqok$ LIKE "TRUE" THEN 
   CALL AKAQUpd()
 END IF 
 aqok$ = ReadConfig$("OFFICE","UpdAkquise")
 IF aqok$ LIKE "TRUE" THEN 
   AQFileOK% = 0
 ELSE 
   AQFileOK% = - 1
 END IF 
 END FUNCTION 
 
 
 ' TerminbezÅge:
 '      1=Mitarbeiter
 '      2=Kunde
 '      3=Aktion
 '      4=Aktion/Mitarbeiter
 
 
SUB AKQUISE(bez%)
 IF disabled%("AKQUISE") THEN END SUB 
 IF NOT AQFileOK%() THEN END SUB 
 IF title$ LIKE "*FACTURA*" OR title$ LIKE "*price*" THEN 
   CALL Fehler("Funktion wird in dieser Programm-Version nicht unterstÅtzt!","")
   END SUB 
 END IF 
 ON ERROR GOTO ErrorHandler
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GDokDat$ + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\" + GTelDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GConDat$ + _fpw$)
 ON ERROR GOTO ErrorHandler
 _continue% = 1
 bezug% = bez%
 FILE GAkquiDat$
 IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
 
  
 REM ** genereller Check, ob Åberhaupt EintrÑge vorhanden sind **
 SELECT WHERE 
 SELECT CASE bezug%
 CASE 1
   vbezug$ = "&Mitarbeiter"
   _vcodema% = vcodema%
   SELECT KEY _vcodema% FILE GAkquiDat$ INDEX CodeMA.GAkquiDat$
 CASE 2
   knr% = codeku.GAdrDat$
   IF NEW (GAdrDat$) OR MOD (GAdrDat$) THEN CALL FStore(GAdrDat$)
   vbezug$ = "Adre&sse"
   _vcodema% = vcodema%
   SELECT KEY knr% FILE GAkquiDat$ INDEX CodeKU.GAkquiDat$
 CASE 3
   cuak% = codeak.aktionen
   IF NEW ("aktionen") OR MOD ("aktionen") THEN CALL FStore("aktionen")
   vbezug$ = "Aktion&en"
   REM _vcodema% = vcodema%
   SELECT KEY cuak% FILE GAkquiDat$ INDEX CodeAK.GAkquiDat$
 CASE 4
   IF termin% = 1 THEN 
     cuak% = 1
     _vcodema% = vcodema%
     cuakma$ = "000001" + STR$ (vcodema%,"000000")
     SELECT KEY cuakma$ FILE GAkquiDat$ INDEX CodeAKMA.GAkquiDat$
     termin% = 0
   ELSE 
     cuakma$ = codeakma.GAkquiDat$
     IF NEW ("aktionen") OR MOD ("aktionen") THEN CALL FStore("aktionen")
     IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
     IF NEW (GAdrDat$) OR MOD (GAdrDat$) THEN CALL FStore(GAdrDat$)
     SELECT KEY cuakma$ FILE GAkquiDat$ INDEX CodeAKMA.GAkquiDat$
   END IF 
   vbezug$ = "&Mitarbeiter+Aktion"
   _vcodema% = vcodema%
 END SELECT 
 akquiseneu$ = "n"
 ON ERROR GOTO ErrorHandler
 IF NOT FOUND (GAkquiDat$) THEN 
   IF bezug% = 4 THEN 
     CALL Fehler("Es wurden fÅr diesen Mitarbeiter zu dieser Aktion noch keine Termine erfa·t !","Erfassen Sie die Termine Åber Adressen oder Mailing !")
   ELSE 
     IF bezug% = 3 THEN 
       CALL Fehler("Es wurden fÅr diese Aktion noch keine Termine erfa·t !","Erfassen Sie die Termine Åber Adressen oder Mailing !")
     ELSE 
       REM 170398
       REM REQUEST "Es wurden noch keine Termine erfa·t.","Neuen Termin erfassen ?",130,req%
       req% = 1
       akquiseneu$ = "j"
     END IF 
     IF req% = 0 THEN _continue% = 0
   END IF 
 END IF 
 IF _continue% <> 0 THEN 
   cudat$ = DATE$ ( TODAY ,"0d.mm.yyyy")
   datanz$ = DATE$ ( TODAY ,"0d.mm.yyyy")
   SET STATUS "Bereit"
   _formend% = 0
   akmaske$ = GAkquiDat$
   IF ProjectJN$ = "TRUE" THEN akmaske$ = "AKQUIPRJ"
   ON ERROR GOTO ErrorHandler
   WHILE _formend% = 0
     ON ERROR GOTO ErrorHandler
     AQsub% = 0
     IF UCASE$ ( FORM ) <> akmaske$ THEN 
       SET HEADING title$ + " - Termine"
       IF EXISTS (GOFFForm$ + akmaske$ + ".sbv") THEN 
         OPEN FORM GOFFForm$ + akmaske$
       ELSE 
         OPEN FORM GOFFForm$ + akmaske$
       END IF 
       SET f = Superbase.Form
       ON ERROR GOTO w180420061
       IF GIMMAK% <> - 1 THEN 
         f.anfrage.visible = 0
         f.anfrage.enabled = 0
         f.angebot.visible = 0
         f.angebot.enabled = 0
       END IF 
w180420061: 
       ON ERROR GOTO ErrorHandler
       GAppName$ = _netpath$ + "DOC\Termine.pdf"
       IF cuaq% > 0 THEN 
         SELECT FIRST FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
         SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
         SELECT FIRST FILE GADRDat$ INDEX codeku.gadrdat$
         SELECT KEY codeku.GAkquiDat$ FILE GADRDat$ INDEX codeku.gadrdat$
         knr% = codeku.GAkquiDat$
         FORM 
       ELSE 
         SELECT CASE bezug%
         CASE 1
           SELECT FORM KEY _vcodema% FILE GAkquiDat$ INDEX CodeMA.GAkquiDat$
           FORM 
         CASE 2
           SELECT FORM KEY knr% FILE GAkquiDat$ INDEX CodeKU.GAkquiDat$
           FORM 
         CASE 3
           SELECT FORM KEY cuak% FILE GAkquiDat$ INDEX CodeAK.GAkquiDat$
           FORM 
         CASE 4
           IF termin% = 1 THEN 
             SELECT FORM KEY cuakma$ FILE GAkquiDat$ INDEX CodeAKMA.GAkquiDat$
             FORM 
            ELSE 
             SELECT FORM KEY cuakma$ FILE GAkquiDat$ INDEX CodeAKMA.GAkquiDat$
             FORM 
           END IF 
         END SELECT 
       END IF 
       SET STATUS "Termine"
       CALL MNAKQUISE()
       MENU ON 
       CALL AKQUISEIntro1()
       REM CALL AKQUISEIntro()
       FORM 
       SET DISPLAY ON 
     END IF 
       ON ERROR GOTO em2305200301
         f.emailbearb.visible = - 1
         f.emailbearb.enabled = - 1
       IF GEMAIL% = - 1 THEN 
         IF GEMAILJNAuto% = - 1 THEN 
           f.emailauto.visible = - 1
           f.emailauto.enabled = - 1
         ELSE 
           f.emailauto.visible = - 1
           f.emailauto.enabled = 0
         END IF 
       ELSE 
         REM f.emailbearb.visible = 0
         REM f.emailbearb.enabled = 0
       END IF 
em2305200301: 
       ON ERROR GOTO ErrorHandler 
     CALL MNAKQUISE()
     CALL AQButtUpdate()
     ON ERROR GOTO ErrorHandler
     SET STATUS "Bereit"
      
     IF NOT NEW (GAkquiDat$) THEN 
       IF PAGE = 5 OR PAGE = 6 THEN 
         MENU CLEAR 
       ELSE 
         MENU ON 
       END IF 
       MOUSE ON 
       f.suchen.enabled = - 1
       f.suchen.visible = - 1
       f.abbruch.enabled = 0
       f.abbruch.visible = 0
       f.abbruch2.enabled = 0
       f.abbruch2.visible = 0
       ON ERROR GOTO err130520042
       IF _projeKt$ LIKE "PROVIS" AND GAkquiDat$ LIKE "AKQUISE" AND Workstation% = 0 THEN 
         f.vertrag.enabled = - 1
         f.vertrag.visible = - 1
       ELSE 
         f.vertrag.enabled = 0
         f.vertrag.visible = 0
       END IF 
       IF GMFoAq% = 1 THEN 
         f.adrmaske.visible = - 1
         f.adrmaske.enabled = - 1
       ELSE 
         f.adrmaske.visible = 0
         f.adrmaske.enabled = 0
       END IF 
       IF _projekt$ LIKE "IMMAK" THEN 
         f.anfrage.visible = - 1
         f.anfrage.enabled = - 1
         f.angebot.visible = - 1
         f.angebot.enabled = - 1
       ELSE 
         f.anfrage.visible = 0
         f.anfrage.enabled = 0
         f.angebot.visible = 0
         f.angebot.enabled = 0
       END IF 
err130520042: 
        
        ON ERROR GOTO ErrorHandler
       CALL ClearKBDBuffer()
       FILE GAkquiDat$

       WAIT MOUSE OR KEY OR UPDATE OR MENU 
       GET k$
       SELECT CASE ASC (k$)
       CASE CrsLeft%,PgUp%
         CALL AQPrev()
       CASE CrsRight%,PgDn%
         CALL AQNext()
       END SELECT 
       IF k$ = CHR$ (27) THEN 
         IF PAGE > 1 THEN 
           FORM 1
         ELSE 
           _formend% = 1
         END IF 
       END IF 
 
     ELSE 
       AQsub% = 99
     END IF 
     SELECT CASE AQsub%
         CASE 120
           REM Dokument importieren
           codeaq% = codeaq.GAkquiDat$
           cuaq% = codeaq%
           REM**********************************************************************************************
     opt% = 1
     
       opt% = 2
       req% = 1
     IF req% = 1 THEN 
       neudir$ = GScandir$
       IF GScandir$ = "" OR GScandir$ LIKE "leer" THEN 
         GScanDir$ = "C:\"
         IF gasp% = - 1 THEN 
           neudir$ = "P:\"
           GScanDir$ = "P:\"
         END IF 
       ELSE 
         neudir$ = ""
       END IF 
       ON ERROR GOTO f230220101
       IF GCodie% = - 1 AND GoldScanVerf$ <> "TRUE" AND GScanDir$ <> neudir$ THEN 
         REGISTER _netpath$ + "CODieLIB.dll","_SBCreateDir","IF"
         a% = CALL ("_SBCreateDir",GScanDir$)
         REGISTER CLEAR "_SBCreateDir"
         REGISTER _netpath$ + "CODieLIB.dll","_SBSetCurrentDir","IF"
         a% = CALL ("_SBSetCurrentDir",GScanDir$)
         REGISTER CLEAR "_SBSetCurrentDir"
       ELSE 
         DIRECTORY GScanDir$
       END IF 
       GOTO f230220102
f230220101: 
       CALL Fehler("Das definierte Importverzeichnis: " + GScanDir$ + " ist ungÅltig, es wird deshalb jetzt erstmal auf C:\ gesetzt, um eine Weiterarbeit zu ermîglichen!","")
       GScanDir$ = "C:\"
       
f230220102: 
       ON ERROR GOTO ErrorHandler
       IF opt% = 1 THEN 
         textvorlage$ = _netpath$ + "OFFICE\text\0w97.doc"
           REM REQUEST "Eintrag in Termindatei vornehmen?","",130,raa%
           REM IF raa% = 1 THEN CALL ADRDokRegister(CodeDOK.GDokDat$)
         CALL DOKImportKU(1)
       ELSE 
         REM textvorlage$ = "*.*"
         REM REQUEST "Dokument importieren","",26,req%,textvorlage$
         CALL DOKImportKU(0)
       END IF 
     END IF 
     SELECT FORM KEY cuaq% FILE "AKQUISE" INDEX codeaq.akquise
     FORM 
      REM**********************************************************************************************
         CASE 119
           REM Dokument bearbeiten
           MENU OFF 
           GDokName$ = Dokument.GDokDat$
           GDoknovi% = novi1.GDokDat$
           ENTER Dokument.GDokDat$,0
           MENU ON 
         CASE 118
           codeaq% = codeaq.GAkquiDat$
           SELECT FORM KEY codeaq% FILE GDokDat$ INDEX CodeAQ.GDokDat$
           MENU OFF 
           FORM 5
         CASE 117 REM Dokument importieren
           
           REM Dokument scannen
           REM CALL Fehler("Dokument einscannen","")
           GCodeAQ% = codeaq.GAkquiDat$
           knr% = codeku.GAkquiDat$
           codeku% = codeku.GAkquiDat$
           knr% = codeku.GAkquiDat$
           CALL ScanDok(codeku%)
           SELECT FORM KEY Gcodeaq% FILE GDokDat$ INDEX CodeAQ.GDokDat$
           FORM 5
         CASE 116
           REM Dokument vom Termin abkoppeln
           REQUEST "Dokument wirklich entkoppeln?","",130,req%
           IF req% = 1 THEN 
             GCodeAQ% = codeaq.GAkquiDat$
             knr% = codeku.Adressen
             codedok% = codedok.GDokDat$
             SELECT FIRST FILE GDokDat$ INDEX Codedok.GDokDat$
             SELECT KEY codedok% LOCK FILE GDokDat$ INDEX Codedok.GDokDat$
             CodeAQ.GDokDat$ = 0
             CALL QuickStore(GDokDat$)
             SELECT KEY GCodeAQ% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
             codedok.GAkquiDat$ = 0
             IF ergebnis.GAkquiDat$ <> "" THEN 
               ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh.mm") + " "
             ELSE 
               ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + DATE$ ( TODAY ) + " " + TIME$ ( NOW ,"hh.mm") + " "
             END IF 
             ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + " - " + GMAName$ + " - Dokument entkoppelt: " + dokument.GDokDat$
             STORE FILE GAkquiDat$
             CALL Fehler("Dokument wurde vom Termin entkoppelt","")
             SELECT FORM KEY GCodeAQ% FILE GDokDat$ INDEX CodeAQ.GDokDat$
             FORM 5
           END IF 
         CASE 115
           REM Dokumentenverwaltung in Akquise
           GCodeAQ% = codeaq.GAkquiDat$
           knr% = codeku.GAdrDat$
           SELECT FORM KEY GCodeAQ% FILE GDokDat$ INDEX CodeAQ.GDokDat$
           MENU OFF 
           FORM 5
         CASE 114
           codeaq% = codeaq.GAkquiDat$
           adr% = ADRSuche%(0)
           IF adr% > 0 THEN 
             SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
             SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
             SELECT FIRST FILE GAdrDat$ INDEX codeku.GAdrDat$
             SELECT KEY adr% FILE GAdrDat$ INDEX codeku.GAdrDat$
             codeku.GAkquiDat$ = adr%
             knr% = adr%
             nachname.GAkquiDat$ = nachname.GAdrDat$
             CALL QuickStore(GAkquiDat$)
           END IF 
           SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           knr% = codeku.GAkquiDat$
           IF codedok.GAkquiDat$ > 0 THEN 
             codedok% = codedok.GAkquiDat$
             SELECT FIRST FILE GDokDat$ INDEX codedok.GDokDat$
             SELECT KEY codedok% LOCK FILE GDokDat$ INDEX codedok.GDokDat$
             CodeMA.GDokDat$ = codema.GAkquiDat$
             Bearbeiter.GDokDat$ = Bearbeiter.GAkquiDat$
             letzte_Bearbeit.GDokDat$ = TODAY 
             Codeku.GDokDat$ = knr%
             Link.GDokDat$ = knr%
             CALL QuickStore(GDokDat$)
           END IF 
     CASE 1
       knr% = codeku.GAkquiDat$
       cuaq% = codeaq.GAkquiDat$
       CALL ADRDokNew()
     CASE 99
        IF disabled%("AQBEARB") THEN GOTO enaqbearb22042001
        GErledTermin$ = erledigt_Termin.GAkquiDat$
        IF UCASE$ (ergdatuma$) = "TRUE" AND NOT ( NEW (GAkquiDat$) OR MOD (GAkquiDat$)) THEN 
          codeaq% = CodeAQ.GAkquiDat$
          SELECT KEY codeaq% LOCK INDEX CodeAq.GAkquiDat$
          IF ergebnis.GAkquiDat$ <> "" THEN 
            ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh.mm") + " "
          ELSE 
            ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + DATE$ ( TODAY ) + " " + TIME$ ( NOW ,"hh.mm") + " "
          END IF 
          ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + " - " + GMAName$ + " - "
          GEMAILRAUS$ = EMAILRAUS.GAkquiDat$
          STORE FILE GAkquiDat$
        END IF 
       MOUSE ON 
       aqbearb$ = "j"
       GEMAILRAUS$ = EMAILRAUS.GAkquiDat$
       IF PAGE = 1 THEN 
         CALL ButDesabled()
         
         f.seite2.enabled = 0
         f.offenetermine.enabled = 0
         f.terminplan.enabled = 0
         f.sprache.enabled = 0
         f.brief.enabled = 0
         f.Telefon.enabled = 0
         f.mitarbeiter.enabled = 0
         f.bezug.enabled = 0
         f.aktion.enabled = 0
         f.kundeninfo.enabled = 0
         f.Monat.enabled = 0
         f.Juli.enabled = 0
         f.Jahr.enabled = 0
         f.W1.enabled = 0
         f.W2.enabled = 0
         f.W3.enabled = 0
         f.W4.enabled = 0
         f.W5.enabled = 0
         f.W6.enabled = 0
         f.vertrag.enabled = 0
         f.vertrag.visible = 0
       END IF 
       IF PAGE < 3 THEN 
         IF PAGE = 2 THEN 
           f.bearb2.enabled = 0
           f.abbruch2.enabled = - 1
           f.abbruch2.visible = - 1
           f.kundeninfo2.enabled = 0
           f.seite1.enabled = 0
         END IF 
         IF UCASE$ (ergdatuma$) = "TRUE" AND notiz.GAkquiDat$ <> "" THEN 
           MENU OFF 
           SET EDIT SELECT OFF 
           ENTER ergebnis.GAkquiDat$,0
           SET EDIT SELECT ON 
           MENU ON 
         ELSE 
           MENU OFF 
           ENTER datum.GAkquiDat$,0
           MENU ON 
         END IF 
       END IF 
       IF PAGE = 3 THEN 
         ENTER emailto.GAkquiDat$,0
       END IF 
       aqbearb$ = "n"
       IF PAGE = 1 THEN 
         CALL ButEnabled()
         f.seite2.enabled = - 1
         f.offenetermine.enabled = - 1
         f.terminplan.enabled = - 1
         f.sprache.enabled = - 1
         f.brief.enabled = - 1
         f.Telefon.enabled = - 1
         f.mitarbeiter.enabled = - 1
         f.bezug.enabled = - 1
         f.aktion.enabled = - 1
         f.kundeninfo.enabled = - 1
         f.Monat.enabled = - 1
         f.Juli.enabled = - 1
         f.Jahr.enabled = - 1
         f.W1.enabled = - 1
         f.W2.enabled = - 1
         f.W3.enabled = - 1
         f.W4.enabled = - 1
         f.W5.enabled = - 1
         f.W6.enabled = - 1
         IF _projeKt$ LIKE "PROVIS" THEN 
           f.vertrag.enabled = - 1
           f.vertrag.visible = - 1
         ELSE 
           f.vertrag.enabled = 0
           f.vertrag.visible = 0
         END IF 
       END IF 
       IF PAGE = 2 THEN 
         f.bearb2.enabled = - 1
         f.abbruch2.enabled = 0
         f.abbruch2.visible = 0
         f.kundeninfo2.enabled = - 1
         f.seite1.enabled = - 1
       END IF 
enaqbearb22042001: 
     CASE 100
       REM VertragsÅbersicht
       cuaq% = codeaq.GAkquiDat$
       SELECT KEY codeku.GAkquiDat$ FILE "Kvertrag" INDEX codeku.kvertrag
       SELECT KEY codeku.GAkquiDat$ FILE GAdrDat$ INDEX codeku.GAdrDat$
       CALL KVERTRAGGR()
     CASE 101
       REM TerminÅbersicht Kunde 12082003
       codeku% = codeku.akquise
       codeaq% = codeaq.Akquise
       CALL KunTer1()
       knr% = codeku%
       GCodieruf2% = 0
       MOUSE OFF 
       SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
       SELECT KEY codeku% FILE "ADRESSEN" INDEX codeku.adressen
       IF UCASE$ ( FORM ) <> akmaske$ THEN 
         SET HEADING title$ + " - Termine"
         OPEN FORM GOFFForm$ + akmaske$
         SET f = Superbase.Form
         SELECT CASE bezug%
         CASE 1
           SELECT FORM KEY _vcodema% FILE "AKQUISE" INDEX CodeMA.akquise
           FORM 
         CASE 2
           SELECT FORM KEY knr% FILE "AKQUISE" INDEX CodeKU.akquise
           FORM 
         CASE 3
           SELECT FORM KEY cuak% FILE "AKQUISE" INDEX CodeAK.akquise
           FORM 
         CASE 4
           IF termin% = 1 THEN 
             SELECT FORM KEY cuakma$ FILE "AKQUISE" INDEX CodeAKMA.akquise
             FORM 
           ELSE 
             SELECT FORM KEY cuakma$ FILE "AKQUISE" INDEX CodeAKMA.akquise
             FORM 
           END IF 
         END SELECT 
         SET STATUS "Termine"
         CALL MNAKQUISE()
         MENU 6,3,1,"Liste erneut &anzeigen,F7","AQTermineO2","Suchliste erneut anzeigen"
         MENU ON 
         
         REM CALL AKQUISEIntro()
         FORM 
         SET DISPLAY ON 
       END IF 
       MOUSE OFF 
       SELECT FIRST FILE "AKQUISE" INDEX codeaq.akquise
       SELECT FORM KEY codeaq% FILE "AKQUISE" INDEX codeaq.akquise
       FORM 
       CALL AKQUISEIntro1()
       MOUSE ON 
     CASE 103
       CALL ADRESSEN()
     CASE 104
       REM Export einzelner Termin nach Outlook
       codeaq% = codeaq.GAkquiDat$
       IF NOT disabled%("OUTLOOKTERM") THEN 
         CALL TerExpOutl(codeaq.GAkquiDat$)
       END IF 
       MOUSE OFF 
       SELECT FIRST FILE "AKQUISE" INDEX codeaq.akquise
       SELECT FORM KEY codeaq% FILE "AKQUISE" INDEX codeaq.akquise
       FORM 
       CALL AKQUISEIntro1()
       MOUSE ON 
     CASE 105
       CALL AQAnfrage()
     CASE 106
       CALL AQAngebot()
     CASE 107
       CALL ADRESSEN()
     END SELECT 
     REM CALL BMCheckMail()
   WEND 
 END IF 
 cuaq% = 0
 _formend% = 0
 IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) AND CodeAQ.GAkquiDat$ <> 0 THEN CALL QuickStore (GAkquiDat$)
 END SUB 
 
 
SUB TerFloskNeu()
 GTerflNote% = 0
 CALL AStichNeu("keyword","TERFLOSK","Termin-Floskel",200)
 UNLOCK FORM 
 END SUB 

SUB TerFloskNeu1()
 GTerflNote% = - 1
 CALL AStichNeu("keyword","TERFLOSK","Termin-Floskel",200)
  GTerflNote% = 0
 UNLOCK FORM 
 END SUB 


 ' GAkquiDat$ Intro Button Termine 221098
 ' ====================================================================
 
SUB AKQUISEIntro1()
 MOUSE OFF 
 CALL SHOWCal()
 IF akquiseneu$ = "j" THEN vbezug$ = "Adre&sse"
 REM IF akquiseneu$ <> "j" THEN CALL AKQUISEFilter()
 MOUSE OFF 
 SELECT FORM KEY codeku.GAdrDat$ FILE GTelDat$ INDEX codeku.GTelDat$
 SELECT CASE bezug%
 CASE 1
   REM IF _vcodema% <> CodeMA.GAkquiDat$ THEN CALL AQNeu()
 CASE 2
   vbezug$ = "Adre&sse"
   IF knr% <> CodeKU.GAkquiDat$ THEN 
     t% = CodeKU.GAkquiDat$
     CALL AQNeu()
   ELSE 
      REM INDEX QuickKuDatDiff
      REM SELECT FORM KEY knr% * 1000000 INDEX QuickKuDatDiff
   END IF 
 CASE 3
   IF cuak% <> 0 AND cuaq% <> 0 THEN 
     SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
   ELSE 
     IF cuak% <> 0 THEN 
       SELECT FORM KEY cuak% FILE GAkquiDat$ INDEX CodeAk.GAkquiDat$
     ELSE 
       REM IF CodeAK.GAkquiDat$ <> cuak% THEN CALL AQNEU()
     END IF 
   END IF 
 CASE 4
   IF cuakma$ = "" THEN 
     SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
   ELSE 
     REM IF CodeAKMA.GAkquiDat$ <> cuakma$ THEN CALL AQNEU()
   END IF 
 END SELECT 
 FORM 
 MOUSE ON 
 END SUB 

 
SUB AKQUISEIntro()
 MOUSE OFF 
 CALL SHOWCal()
 IF akquiseneu$ = "j" THEN vbezug$ = "Adre&sse"
 IF akquiseneu$ <> "j" THEN CALL AKQUISEFilter()
 MOUSE OFF 
 SELECT FORM KEY codeku.GAdrDat$ FILE GTelDat$ INDEX codeku.GTelDat$
 SELECT CASE bezug%
 CASE 1
   IF GMAcodema% <> CodeMA.GAkquiDat$ THEN CALL AQNeu()
 CASE 2
   IF knr% <> CodeKU.GAkquiDat$ THEN 
     CALL AQNeu()
   ELSE 
      REM INDEX QuickKuDatDiff
      REM SELECT FORM KEY knr% * 1000000 INDEX QuickKuDatDiff
   END IF 
 CASE 3
   IF cuak% <> 0 AND cuaq% <> 0 THEN 
     SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
   ELSE 
     IF cuak% <> 0 THEN 
       SELECT FORM KEY cuak% FILE GAkquiDat$ INDEX CodeAk.GAkquiDat$
     ELSE 
       IF CodeAK.GAkquiDat$ <> cuak% THEN CALL AQNEU()
     END IF 
   END IF 
 CASE 4
   IF cuakma$ = "" THEN 
     SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
   ELSE 
     IF CodeAKMA.GAkquiDat$ <> cuakma$ THEN CALL AQNEU()
   END IF 
 END SELECT 
 FORM 
 MOUSE ON 
 END SUB 
  

 
 ' Filter fÅr Termine auf Kunden/Mitarbeiter setzen
 ' ========================================================================
 
SUB AKQUISEFilter()
 MOUSE OFF 
 SET STATUS "Setze Filter fÅr Termindatei..."
 FILE GAkquiDat$
 SELECT WHERE FILE GAkquiDat$
 SELECT CASE bezug%
 CASE 0
   vbezug$ = "alle Termine"
 CASE 1
   vbezug$ = "&Mitarbeiter"
   INDEX CodeMa.GAkquiDat$
   SELECT FIRST 
   b$ = "SELECT WHERE Codema.GAkquiDat$ = _vcodema%"
   EXECUTE b$
 CASE 2
   vbezug$ = "Adre&sse"
   INDEX CodeKU.GAkquiDat$
   b$ = "SELECT WHERE CodeKU.GAkquiDat$ = knr%"
   EXECUTE b$
 CASE 3
   vbezug$ = "Aktion&en"
   INDEX CodeAK.GAkquiDat$
   b$ = "SELECT WHERE CodeAK.GAkquiDat$ = cuak%"
   EXECUTE b$
 CASE 4
   vbezug$ = "Mitarbeiter+Aktion"
   INDEX CodeAKMA.GAkquiDat$
   b$ = "SELECT WHERE CodeAKMA.GAkquiDat$ = cuakma$"
   EXECUTE b$
 END SELECT 
 EXECUTE "INDEX termin.GAkquiDat$"
 CALL PSelectLast()
 SET STATUS "Bereit"
 MOUSE ON 
 END SUB 
 
 
 ' Datensatz fÅr neuen Termin vorbereiten
 ' ========================================================================
 ' 0001 28.10.92/23.32/AB
 
SUB AQNeu()
 SET STATUS "Lege neuen Datensatz an..."
 IF ( MOD (GAkquiDat$) OR NEW (GAkquiDat$)) AND notiz.GAkquiDat$ <> "" THEN CALL FStore(GAkquiDat$)
 vknr% = knr%
 REM vcuak% = CodeAK.GAkquiDat$
 REM vcuma% = CodeMA.GAkquiDat$
 BLANK FILE "akquise"
 SET STATUS "Datensatz neu angelegt..."
 codeaq% = SER (GAkquiDat$,1)
 codeaq.GAkquiDat$ = codeaq%
 CodeKU.GAkquiDat$ = knr%
 IF bezug% = 2 THEN 
   CodeKU.GAkquiDat$ = knr%
 END IF 
 IF bezug% = 1 THEN 
   opt% = 1
   CREATE DIALOG "AKQNEU",0,0,134,81,title$,"MS Sans Serif",8
   ADD DIALOG "AKQNEU",9,9,6,27,22,2
   ADD DIALOG "AKQNEU",5,40,6,82,8,0,"Wie soll der neue Termin"
   ADD DIALOG "AKQNEU",5,40,16,50,8,0,"erfa·t werden?"
   ADD DIALOG "AKQNEU",3,40,30,80,10,0,"fÅr aktuelle Adresse",1,opt%
   ADD DIALOG "AKQNEU",3,40,41,61,10,0,"eigener Termin",2,opt%
   ADD DIALOG "AKQNEU",1,40,60,50,15,1,"&OK",1,1
   DIALOG "AKQNEU",req%
   REMOVE DIALOG "AKQNEU"
   IF opt% = 1 THEN 
     CodeKU.GAkquiDat$ = vknr%
   ELSE 
     CodeKU.GAkquiDat$ = 1
   END IF 
 END IF 
 IF bezug% > 2 THEN 
   CodeKU.GAkquiDat$ = vknr%
 END IF 
 IF vcuak% = 0 THEN 
   CodeAK.GAkquiDat$ = 1
 ELSE 
   CodeAK.GAkquiDat$ = vcuak%
 END IF 
 CodeMA.GAkquiDat$ = _vcodema%
 Wertung.GAkquiDat$ = 0
 Sprachnotiz.GAkquiDat$ = "n"
 Datum.GAkquiDat$ = TODAY 
 Termin.GAkquiDat$ = TODAY 
 cudat$ = TODAY 
 REM Termin.GAkquiDat$ = TODAY 
 erledigt_Termin.GAkquiDat$ = "n"
 erledigt_Vorg.GAkquiDat$ = "n"
 GErledTermin$ = "n"
 cuaq% = codeaq.GAkquiDat$
 SELECT KEY CodeKU.GAkquiDat$ FILE GAdrDat$ INDEX codeku.GAdrDat$
 nachname.GAkquiDat$ = LEFT$ ( TRIM$ (nachname.GAdrDat$) + "," + TRIM$ (vorname.GadrDat$),100)
 SELECT KEY codema.GAkquiDat$ FILE "supervis" INDEX codema.supervis
 Bearbeiter.GAkquiDat$ = nachname.supervis
 akquiseneu$ = "n"
 TerminNr.GAkquiDat$ = AnzTermine.supervis + 1
 CALL QuickStore(GAkquiDat$)
 SELECT FIRST FILE "Supervis" INDEX codema.supervis
 SELECT KEY _vcodema% LOCK FILE "Supervis" INDEX codema.supervis
 AnzTermine.supervis = AnzTermine.supervis + 1
 AnzTermineUnerl.supervis = AnzTermineUnerl.supervis + 1
 STORE FILE "supervis"
 UNLOCK CURRENT FILE "supervis"
 FILE GAkquiDat$
 SELECT FIRST 
 SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 REM 150699
 CALL AKQUISEIntro1()
 REM CALL AQButtUpdate()
 
 FORM 
 REM ENTER termin.GAkquiDat$,0
 END SUB 
 
SUB AQNeu1()
 aqbearb$ = "n"
 SET STATUS "Lege neuen Datensatz an..."
 IF ( MOD (GAkquiDat$) OR NEW (GAkquiDat$)) AND notiz.GAkquiDat$ <> "" THEN CALL FStore(GAkquiDat$)
 vknr% = codeku.GAkquiDat$
 vcuak% = CodeAK.GAkquiDat$
 vcuma% = CodeMA.GAkquiDat$
 BLANK 
 SET STATUS "Datensatz neu angelegt..."
 codeaq% = SER (GAkquiDat$,1)
 codeaq.GAkquiDat$ = codeaq%
 IF bezug% = 2 THEN 
   CodeKU.GAkquiDat$ = knr%
 END IF 
 IF bezug% = 1 THEN 
   opt% = 1
   CREATE DIALOG "AKQNEU",0,0,134,81,title$,"MS Sans Serif",8
   ADD DIALOG "AKQNEU",9,9,6,27,22,2
   ADD DIALOG "AKQNEU",5,40,6,82,8,0,"Wie soll der neue Termin"
   ADD DIALOG "AKQNEU",5,40,16,50,8,0,"erfa·t werden?"
   ADD DIALOG "AKQNEU",3,40,30,80,10,0,"fÅr aktuelle Adresse",1,opt%
   ADD DIALOG "AKQNEU",3,40,41,61,10,0,"eigener Termin",2,opt%
   ADD DIALOG "AKQNEU",1,40,60,50,15,1,"&OK",1,1
   DIALOG "AKQNEU",req%
   REMOVE DIALOG "AKQNEU"
   IF opt% = 1 THEN 
     CodeKU.GAkquiDat$ = vknr%
   ELSE 
     CodeKU.GAkquiDat$ = 1
   END IF 
 END IF 
 IF bezug% > 2 THEN 
   CodeKU.GAkquiDat$ = vknr%
 END IF 
 IF vcuak% = 0 THEN 
   CodeAK.GAkquiDat$ = 1
 ELSE 
   CodeAK.GAkquiDat$ = vcuak%
 END IF 
 CodeMA.GAkquiDat$ = _vcodema%
 Wertung.GAkquiDat$ = 0
 Sprachnotiz.GAkquiDat$ = "n"
 Datum.GAkquiDat$ = TODAY 
 REM Termin.GAkquiDat$ = TODAY 
 erledigt_Termin.GAkquiDat$ = "n"
 erledigt_Vorg.GAkquiDat$ = "n"
 cuaq% = codeaq.GAkquiDat$
 SELECT KEY CodeKU.GAkquiDat$ FILE GAdrDat$ INDEX codeku.GAdrDat$
 nachname.GAkquiDat$ = LEFT$ ( TRIM$ (nachname.GAdrDat$) + "," + TRIM$ (vorname.GadrDat$),100)
 ort.GAkquiDat$ = ort.GAdrDat$
 SELECT KEY codema.GAkquiDat$ FILE "supervis" INDEX codema.supervis
 Bearbeiter.GAkquiDat$ = nachname.supervis
 TerminNr.GAkquiDat$ = AnzTermine.supervis + 1
 akquiseneu$ = "n"
 CALL QuickStore(GAkquiDat$)
 SELECT FIRST FILE "Supervis" INDEX codema.supervis
 SELECT KEY _vcodema% LOCK FILE "Supervis" INDEX codema.supervis
 AnzTermine.supervis = AnzTermine.supervis + 1
 AnzTermineUnerl.supervis = AnzTermineUnerl.supervis + 1
 STORE FILE "supervis"
 UNLOCK CURRENT FILE "supervis"
 FILE GAkquiDat$
 SELECT FIRST 
 SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 REM 150699
 CALL AKQUISEIntro1()
 CALL AQButtUpdate()
 
 FORM 
 aqbearb$ = "j"
 REM MENU OFF 
 REM ENTER termin.GAkquiDat$,0
 REM MENU ON 
 REM MOUSE ON 
 AQsub% = 99
 END SUB 
 
  
 ' vorherigen Termin anzeigen
 ' ===========================================================================
 
SUB AQPrev()
 IF ( MOD (GAkquiDat$) OR NEW (GAkquiDat$)) AND notiz.GAkquiDat$ <> "" THEN CALL FStore(GAkquiDat$)
 FILE GAkquiDat$
 cuaq% = codeaq.GAkquiDat$
 MOUSE OFF 
 ok% = - 1
 REM CALL PSelectPrev()
 SELECT CASE bezug%
  CASE 0
   vbezug$ = "alle Termine"
   CALL PSelectPrev()
 CASE 1
   vbezug$ = "&Mitarbeiter"
   b$ = "SELECT WHERE Codema.GAkquiDat$ = _vcodema%"
   SET INDEX QuickMATer.GAkquiDat$
   INDEX QuickMATer.GAkquiDat$
   CALL PSelectPrev()
   IF EOF (GAkquiDat$) OR Codema.GAkquiDat$ <> _vcodema% THEN ok% = 0
 CASE 2
   vbezug$ = "Adre&sse"
   b$ = "SELECT WHERE CodeKU.GAkquiDat$ = knr%"
   REM SET INDEX QuickKuDatDiff.GAkquiDat$
   REM INDEX QuickKuDatDiff.GAkquiDat$
   SET INDEX QuickKuTer.GAkquiDat$
   INDEX QuickKuTer.GAkquiDat$
   CALL PSelectPrev()
   IF EOF (GAkquiDat$) OR CodeKU.GAkquiDat$ <> knr% THEN ok% = 0
 CASE 3
   vbezug$ = "Aktion&en"
   b$ = "SELECT WHERE CodeAK.GAkquiDat$ = cuak%"
   SET INDEX QuickAKTer.GAkquiDat$
   INDEX QuickAKTer.GAkquiDat$
   CALL PSelectPrev()
   IF EOF (GAkquiDat$) OR CodeAK.GAkquiDat$ <> cuak% THEN ok% = 0
 CASE 4
   vbezug$ = "Mitarbeiter+Aktion"
   b$ = "SELECT WHERE CodeAKMA.GAkquiDat$ = cuakma$"
   SET INDEX QuickAKMATer.GAkquiDat$
   INDEX QuickAKMATer.GAkquiDat$
   CALL PSelectPrev()
   IF EOF (GAkquiDat$) OR CodeAKMA.GAkquiDat$ <> cuakma$ THEN ok% = 0
 END SELECT 
 
 IF ok% = 0 THEN 
   CALL PSelectNext()
   REQUEST "Erster Datensatz","",2
 END IF 
 CALL AQButtUpdate()
 MOUSE ON 
 END SUB 
 
 
 ' nÑchsten Termin anzeigen
 ' ==========================================================================
 
SUB AQNext()
 MOUSE OFF 
 FILE GAkquiDat$
 IF ( MOD (GAkquiDat$) OR NEW (GAkquiDat$)) AND notiz.GAkquiDat$ <> "" THEN CALL FStore(GAkquiDat$)
 cuaq% = codeaq.GAkquiDat$
 MOUSE OFF 
 ok% = - 1
 REM CALL PSelectNext()
 SELECT CASE bezug%
  CASE 0
   vbezug$ = "alle Termine"
   CALL PSelectNext()
 CASE 1
   vbezug$ = "&Mitarbeiter"
   b$ = "SELECT WHERE Codema.GAkquiDat$ = _vcodema%"
   REM INDEX Codema.GAkquiDat$
   SET INDEX QuickMATer.GAkquiDat$
   INDEX QuickMATer.GAkquiDat$
   CALL PSelectNext()
   IF EOF (GAkquiDat$) OR Codema.GAkquiDat$ <> _vcodema% THEN ok% = 0
 CASE 2
   vbezug$ = "Adre&sse"
   b$ = "SELECT WHERE CodeKU.GAkquiDat$ = knr%"
   REM SET INDEX QuickKuDatDiff.GAkquiDat$
   REM INDEX QuickKuDatDiff.GAkquiDat$
   SET INDEX QuickKuTer.GAkquiDat$
   INDEX QuickKuTer.GAkquiDat$
   CALL PSelectNext()
   REM SELECT NEXT 
   IF EOF (GAkquiDat$) OR CodeKU.GAkquiDat$ <> knr% THEN ok% = 0
 CASE 3
   vbezug$ = "Aktion&en"
   REM INDEX CodeAK.GAkquiDat$
   b$ = "SELECT WHERE CodeAK.GAkquiDat$ = cuak%"
   SET INDEX QuickAKTer.GAkquiDat$
   INDEX QuickAKTer.GAkquiDat$
   CALL PSelectNext()
   IF EOF (GAkquiDat$) OR CodeAK.GAkquiDat$ <> cuak% THEN ok% = 0
 CASE 4
   vbezug$ = "Mitarbeiter+Aktion"
   b$ = "SELECT WHERE CodeAKMA.GAkquiDat$ = cuakma$"
   REM INDEX CodeAKMA.GAkquiDat$
   SET INDEX QuickAKMATer.GAkquiDat$
   INDEX QuickAKMATer.GAkquiDat$
   CALL PSelectNext()
   IF EOF (GAkquiDat$) OR CodeAKMA.GAkquiDat$ <> cuakma$ THEN ok% = 0
 END SELECT 
 IF ok% = 0 THEN 
   CALL PSelectPrev()
   REQUEST "Letzter Datensatz","",2
 END IF 
 CALL AQButtUpdate()
 MOUSE ON 
 END SUB 
 
 
 ' diverse Drucklisten
 ' ============================================================================
 
SUB AQDrucken()
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 cuaq% = CodeAQ.GAkquiDat$
 opt1% = 1
 cdir$ = DIRECTORY 
 DIRECTORY _netpath$ + "OFFICE"
 CREATE DIALOG "AQDRUCK",0,0,178,89,title$,"MS Sans Serif",8
 ADD DIALOG "AQDRUCK",5,30,4,140,10,0,"Bitte wÑhlen Sie aus, welche Art von Liste"
 ADD DIALOG "AQDRUCK",9,5,6,19,21,2
 ADD DIALOG "AQDRUCK",5,30,14,72,8,0,"Sie drucken mîchten:"
 ADD DIALOG "AQDRUCK",3,30,30,78,11,0,"alle offenen Termine",1,opt1%
 ADD DIALOG "AQDRUCK",3,30,43,130,11,0,"offene Termine des akt. Mitarbeiters",2,opt1%
 ADD DIALOG "AQDRUCK",1,44,64,54,14,1,"&OK",1,1
 ADD DIALOG "AQDRUCK",1,100,64,54,14,0,"&Abbrechen",0,0
 DIALOG "AQDRUCK",req%
 REMOVE DIALOG ALL 
 IF req% = 1 THEN 
   SET STATUS "Druck: offene Termine"
   CALL ORep("TERMINE")
   HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
   END HEADING 
   AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
   END SELECT 
   SET QUERY ON 
   SET QUERY LOCK OFF 
   Ueberschr$ = "offene Termine"
   ON ERROR GOTO ErrAQDR1
   IF opt1% = 1 THEN 
     SELECT ;
     WHERE erledigt_Termin.GAkquiDat$ = "n" AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   ELSE 
     SELECT ;
     WHERE erledigt_Termin.GAkquiDat$ = "n" AND CodeMA.GAkquiDat$ = _vcodema% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
ErrAQDR1: 
   ON ERROR GOTO ErrorHandler
 END IF 
 DIRECTORY cdir$
 SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
 FORM 
 END SUB 
  
 
 ' Info-Knopf fÅr Akquisemaske
 ' ============================================================================
 
SUB AQADRInfo()
 cfile$ = FILE 
 FILE GAdrDat$
 cuku% = CodeKU.GAdrDat$
 SELECT KEY cuku% LOCK FILE GAdrDat$ INDEX CodeKU.GAdrDat$
 CREATE DIALOG "ADRInfo",0,0,277,169,title$,"MS Sans Serif",8
 ADD DIALOG "ADRInfo",4,33,0,180,51,0,""
 ADD DIALOG "ADRInfo",5,37,8,171,11,0,Anrede.GAdrDat$
 ADD DIALOG "ADRInfo",5,37,17,171,11,0,Nachname.GAdrDat$
 ADD DIALOG "ADRInfo",5,37,28,171,10,0,Geburtsname.GAdrDat$
 ADD DIALOG "ADRInfo",5,37,38,171,11,0,Vorname.GAdrDat$
 ADD DIALOG "ADRInfo",9,6,9,22,21,4
 ADD DIALOG "ADRInfo",1,218,150,54,14,1,"&Weiter",0,1
 ADD DIALOG "ADRInfo",4,33,52,180,50,0,"Stichwîrter"
 ADD DIALOG "ADRInfo",6,37,62,172,35,76,0,Stichwort.GAdrDat$,400
 ADD DIALOG "ADRInfo",1,218,86,54,14,0,"&ErgÑnzen",1,1
 ADD DIALOG "ADRInfo",4,33,104,180,60,0,"Notiz"
 ADD DIALOG "ADRInfo",6,38,115,171,45,68,0,Notiz.GAdrDat$,4000
 DIALOG "ADRInfo",req%
 REMOVE DIALOG "ADRInfo"
 IF req% = 1 THEN 
   CALL ADRStichw1()
   CALL QuickStore(GAdrDat$)
 END IF 
 CALL QuickStore(GAdrDat$)
 FILE cfile$
 END SUB 
 
 
 ' Aktionen zuordnen/auswÑhlen
 ' ============================================================================
 
SUB AQAktionen()
 IF disabled%("AQAKTIONEN") THEN END SUB 
 cuaq% = CodeAQ.GAkquiDat$
 _cuak% = CodeAK.GAkquiDat$
 IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
 selak% = AKSelect%(MemberOf.GAkquiDat$)
 IF selak% <> 0 THEN 
   cuak% = selak%
   IF _cuak% <> cuak% THEN 
     REQUEST "Soll der aktuelle Termin der gewÑhlten Aktion zugeordnet werden ?","",130,req1%
     IF req1% = 1 THEN 
       SELECT KEY cuaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       CodeAK.GAkquiDat$ = cuak%
       CALL FStore(GAkquiDat$)
     END IF 
   END IF 
   bezug% = 3
   vbezug$ = "Aktion&en"
   _vcodema% = vcodema%
   SELECT WHERE FILE GAkquiDat$
   SELECT FIRST FILE GAkquiDat$ INDEX CodeAK.GAkquiDat$
   SELECT FORM KEY cuak% FILE GAkquiDat$ INDEX CodeAK.GAkquiDat$
   SELECT WHERE CodeAK.GAkquiDat$ = cuak%
 ELSE 
   FILE GAkquiDat$
   SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
 END IF 
 REM  SET INDEX Termin.GAkquiDat$
 REM INDEX Termin.GAkquiDat$
 CALL AQButtUpdate()
 CALL SHOWCal()
 FORM 
 END SUB 
 
 
 
 ' Sprachnotiz aufnehmen
 ' ============================================================================
 REM andi 21.12.95 
SUB AQSprache()
 IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
 cuaq% = CodeAQ.GAkquiDat$
 SoundRec$ = ReadINI$("SOUNDREC","Programm")
 IF ReadINI$("SOUNDREC","available") = "TRUE" THEN 
   SET STATUS "Sprachnotiz aufnehmen/abspielen..."
   sound$ = _netpath$ + "WAVES\" + STR$ (codeaq.GAkquiDat$,"00000000") + ".wav"
   vorlage$ = _netpath$ + "default.wav"
   IF NOT EXISTS (sound$) THEN 
     REQUEST "Es wurde noch keine Sprachnotiz erfa·t!","Wollen Sie eine Sprachnotiz erfassen?",130,req%
     IF req% = 1 THEN 
       COPY vorlage$ TO sound$
       CALL Soundrec$ + " " + sound$
       SELECT KEY cuaq% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
       Sprachnotiz.GAkquiDat$ = "j"
       CALL FStore(GAkquiDat$)
     END IF 
   ELSE 
     CREATE DIALOG "SPRNOT",0,0,119,30,title$,"MS Sans Serif",8
     ADD DIALOG "SPRNOT",4,0,0,119,29,0,""
     ADD DIALOG "SPRNOT",1,2,10,55,15,1,"&Abspielen",1,1
     ADD DIALOG "SPRNOT",1,60,10,55,15,0,"&Bearbeiten",2,1
     DIALOG "SPRNOT",req%
     REMOVE DIALOG "SPRNOT"
     SELECT CASE req%
     CASE 1
       REM CALL Server("PLAYSOUND",sound$)
       CALL SoundRec$ + " " + sound$
     CASE 2
       CALL SoundRec$ + " " + sound$
     END SELECT 
   END IF 
   SET STATUS "Bereit"
 ELSE 
   CALL Fehler("Sprachoption ist nicht aktiviert!","")
 END IF 
 SELECT FORM KEY cuaq% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
 SELECT KEY cuaq% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
 CALL AQButtUpdate()
 END SUB 
 
 
 ' DokumentenÅbersicht fÅr aktuellen Kunden
 ' ============================================================================
 
SUB AQDOKLIST()
 IF disabled%("AQDOKLIST") THEN END SUB 
 aqnr% = codeaq.GAkquiDat$
 knr% = codeku.GAkquiDat$
 CALL DOKLIST(knr%)
 SELECT FORM KEY aqnr% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 END SUB 
 
 
 ' Kundenhistorie
 ' ============================================================================
 
SUB AQKundenHist()
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 IF disabled%("AQKUNDENHIST") THEN END SUB 
 IF title$ LIKE "*FACTURA*" OR title$ LIKE "*price*" THEN 
    CALL Fehler("Funktion wird in dieser Programm-Version nicht unterstÅtzt!","")
   END SUB 
 END IF 
 cfile$ = FILE 
 FILE GAkquiDat$
 cdir$ = DIRECTORY 
 DIRECTORY _netpath$ + "OFFICE"
 opt% = 2
 d$ = "Terminliste"
  CREATE DIALOG d$,0,0,165,112,title$,"MS Sans Serif",8
    ADD DIALOG d$,4,0,0,165,88,0,""
    ADD DIALOG d$,9,5,13,19,21,2
    ADD DIALOG d$,3,31,14,86,14,0,"Termin - AuswahlmenÅ",1,opt%
    ADD DIALOG d$,3,31,54,68,14,0,"&Terminliste",2,opt%
    ADD DIALOG d$,5,41,28,121,10,0,"Auflistung aller Termine und Auswahl"
    ADD DIALOG d$,5,41,38,119,10,0,"eines einzelnen Termins"
    ADD DIALOG d$,5,41,70,114,10,0,"Ausdruck der Termine"
    ADD DIALOG d$,1,28,91,54,14,1,"&OK",1,1
    ADD DIALOG d$,1,84,91,54,14,0,"&Abbruch",0,1
 DIALOG d$,req%
 REMOVE DIALOG d$
 IF req% = 0 THEN END SUB 
 IF opt% = 2 THEN 
   IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
   cuaq% = CodeAQ.GAkquiDat$
   REQUEST "Wollen Sie den Notizteil der Adresse mit ausgeben?","",130,reqnot%
   IF reqnot% > 0 THEN 
     IF GAkquiDat$ LIKE "AKQUISE" THEN 
       CALL ORep("TERMINE")
     END IF 
     IF GAkquiDat$ LIKE "AKQUIBC*" THEN 
       CALL ORep("TERBCK")
     END IF 
     IF GAkquiDat$ LIKE "AKQUI1" THEN 
       CALL ORep("TERADR1")
     END IF 
   ELSE 
     IF GAkquiDat$ LIKE "AKQUISE" THEN 
       CALL ORep("TERMINE1")
     END IF 
     IF GAkquiDat$ LIKE "AKQUIBC*" THEN 
       CALL ORep("TER1BC")
     END IF 
     IF GAkquiDat$ LIKE "AKQUI1" THEN 
       CALL ORep("TER1AD")
     END IF 
   END IF 
   SELECT KEY CodeMA.GAkquiDat$ FILE "supervis" INDEX CodeMA.supervis
   SELECT CASE bezug%
   CASE 1
     Ueberschr$ = "Mitarbeiterhistorie: " + nachname.supervis
     _vcodema% = CodeMA.GAkquiDat$
   CASE 2
     Ueberschr$ = "Adresshistorie: " + nachname.GAdrDat$
     knr% = CodeKU.GAkquiDat$
   CASE 3
     vcuak% = CodeAK.GAkquiDat$
     SELECT KEY vcuak% FILE "AKTIONEN" INDEX CodeAK.aktionen
     Ueberschr$ = "Aktionshistorie: " + Bezeichnung.aktionen
   CASE 4
     vcuak% = CodeAK.GAkquiDat$
     vcuakma$ = CodeAKMA.GAkquiDat$
     SELECT KEY vcuak% FILE "AKTIONEN" INDEX CodeAK.aktionen
     Ueberschr$ = "Aktionshistorie/Mitarbeiter: " + Bezeichnung.aktionen + "/" + nachname.supervis
   END SELECT 
   HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
   END HEADING 
   AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
   END SELECT 
   SET QUERY ON 
   SET QUERY LOCK OFF 
   MOUSE OFF 
   ON ERROR GOTO ErrAQKHIST
   IF bezug% = 2 THEN 
     SELECT ;
       WHERE CodeKU.GAkquiDat$ = knr% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
       ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
       TO ASK 
   END IF 
   IF bezug% = 1 THEN 
     SELECT ;
       WHERE CodeMA.GAkquiDat$ = _vcodema% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
       ORDER nachname.GAkquiDat$,termin.GAkquiDat$,uhrzeit.GAkquiDat$
       TO ASK 
   END IF 
   IF bezug% = 3 THEN 
     SELECT ;
       WHERE CodeAK.GAkquiDat$ = vcuak% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
       ORDER termin.GAkquiDat$
       TO ASK 
   END IF 
   IF bezug% = 4 THEN 
     SELECT ;
       WHERE CodeAKMA.GAkquiDat$ = vcuakma$ AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
       ORDER termin.GAkquiDat$
       TO ASK 
   END IF 
ErrAQKHIST: 
   ON ERROR GOTO ErrorHandler
   SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
   DIRECTORY cdir$
   MOUSE ON 
 ELSE 
   CALL AQTerminListe()
 END IF 
 DIRECTORY cdir$
 FILE cfile$
 END SUB 
 
SUB AQAdrHist1()
 ADRsub% = 13
 END SUB 
 
SUB AQAdrHist(art%)
 GCodieRuf% = 0
 IF NOT OPEN ("AKTIONEN") THEN CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 REM art%=1 aus adressmaske heraus
 REM art%=2 aus Terminmaske heraus
 REM art%=3 aus Projektmaske heraus
 IF disabled%("AQKUNDENHIST") THEN END SUB 
 IF title$ LIKE "*FACTURA*" OR title$ LIKE "*price*" THEN 
    CALL Fehler("Funktion wird in dieser Programm-Version nicht unterstÅtzt!","")
   END SUB 
 END IF 
 IF art% = 1 THEN _cuku% = CodeKU.adressen
 IF art% = 2 THEN 
   _cuku% = CodeKU.akquise
   codeaq% = codeaq.akquise
   index1$ = INDEX 
   select1$ = WHERE 
 END IF 
 IF art% = 3 THEN 
   prj% = Codepr.project
   codepr% = prj%
   index1$ = "codepr"
   select1$ = WHERE 
 END IF 
 cfile$ = FILE 
 IF art% = 1 THEN 
   IF NOT OPEN ("Dokument") THEN CALL DFile(2,"OFFICE\dokument" + _fpw$)
   REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
   IF NOT OPEN ("aktionen") THEN CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 END IF 
 FILE "akquise"
 SELECT WHERE 
 cdir$ = DIRECTORY 
 DIRECTORY _netpath$ + "OFFICE"
 DIM Auswahl1$(1)
 IF RECCOUNT ("Akquise") < 23000 THEN 
   DIM Termine1$( RECCOUNT ("Akquise"))
 ELSE 
   DIM Termine1$(23000)
 END IF 
 b% = RECCOUNT ("Akquise")
 REM FOR a% = 0 TO b%:Termine1$(a%) = "":NEXT a%
 IF art% < 3 THEN 
   qindex$ = "QuickKUDatDiff"
   qfield$ = "CodeKU"
   SELECT KEY _cuku% FILE "ADRESSEN" INDEX CodeKU.ADRESSEN
   caption$ = "Adresse: " + Nachname.ADRESSEN + ", " + LEFT$ (Vorname.ADRESSEN,1) + "."
   scode% = _cuku%
 END IF 
 IF art% = 3 THEN 
   qindex$ = "QuickPRDatDiff"
   qfield$ = "CodePR"
   SELECT KEY prj% FILE "project" INDEX Codepr.project
   caption$ = "Projekt: " + name1.project + ", " + LEFT$ (name2.project,10) + "."
   scode% = prj%
 END IF 
 
 tfilter1% = scode% * 1000000
 tfilter2% = (scode% + 1) * 1000000
 FILE "akquise"
 INDEX qindex$$
 REM SELECT WHERE codeku.akquise = _cuku%
 SELECT FIRST 
 SELECT KEY tfilter1% FILE GAkquiDat$ INDEX qindex$$
 tfound1% = 0
 SET STATUS "Durchsuche Termindatei..."
 IF art% < 3 THEN WHILE NOT EOF (GAkquiDat$) AND quickKuDatDiff >= tfilter1% AND quickKuDatDiff < tfilter2%
 IF art% = 3 THEN WHILE NOT EOF (GAkquiDat$) AND quickPRDatDiff >= tfilter1% AND quickPRDatDiff < tfilter2%
   REM 100597
   IF art% <> 3 THEN 
     aq$ = GAkquiDat$
     IF GTerArtSpez% = - 1 THEN 
       IF UCASE$ (erledigt_Termin.aq$) <> "J" THEN 
         Termine1$(tfound1%) = DATE$ (Termin.aq$,"0d.mm.yyyy") + "; " + "[" + erledigt_Termin.aq$ + "]" + ";  " + "[" + LTRIM$ ( STR$ (Wertung.aq$,"99")) + "]" + "; " + LEFT$ ( TRIM$ (notiz.aq$),150) + SPACE$ (120) + STR$ (CodeAQ.aq$,"000000")
         tfound1% = tfound1% + 1
         IF GCODIE% = - 1 THEN 
           IF GCodieRuf1% = 0 THEN CALL SearchInitAq1(GAkquiDat$)
         END IF 
         IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
       END IF 
     ELSE 
 Termine1$(tfound1%) = DATE$ (Termin.aq$,"0d.mm.yyyy") + "; " + "[" + erledigt_Termin.aq$ + "]" + ";  " + "[" + LTRIM$ ( STR$ (Wertung.aq$,"99")) + "]" + "; " + LEFT$ ( TRIM$ (notiz.aq$),150) + SPACE$ (120) + STR$ (CodeAQ.aq$,"000000")
      IF GCODIE% = - 1 THEN 
         IF GCodieRuf1% = 0 THEN CALL SearchInitAq1(GAkquiDat$)
      END IF 
      IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
      tfound1% = tfound1% + 1
     END IF 
   END IF 
   IF art% = 3 THEN 
 Termine1$(tfound1%) = DATE$ (Termin,"0d.mm.yyyy") + "; " + "[" + erledigt_Termin + "]" + ";  " + LTRIM$ ( LEFT$ (nachname,30)) + ";  " + LEFT$ ( TRIM$ (notiz.akquise),150) + SPACE$ (120) + STR$ (CodeAQ.akquise,"000000")
    IF GCODIE% = - 1 THEN 
       IF GCodieRuf1% = 0 THEN CALL SearchInitAq1(GAkquiDat$)
    END IF 
    IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
    tfound1% = tfound1% + 1
   END IF 
   
   SET STATUS LTRIM$ ( STR$ (tfound1%,",9999999")) + " Termine gefunden"
   SELECT NEXT FILE "akquise" INDEX qindex$$
 WEND 
 Termine1$(tfound1%) = ""
 IF tfound1% <> 0 THEN 
  req% = 99
  aaaak% = 0
  WHILE req% <> 0
   
   IF GCODIE% = - 1 THEN 
     c$ = "aa"
     REM CALL Fehler("","")
     IF aaaak% = 0 THEN 
       req3% = CALL ("_SearchShow",c$)
       GCodieRuf% = - 1
     ELSE 
       req3% = CALL ("_SearchReShow",c$)
       GCodieRuf% = - 1
     END IF 
     REM CALL Fehler( STR$ (req%),"")
     IF req3% = 3 THEN 
       req% = 2
     ELSE 
       IF VAL (c$) <> 0 THEN 
         req% = 1
         _cuaq% = VAL (c$)
         REM MENU 4,2,1,"aus Suchliste &wÑhlen,F7","DokKurzSuche","Auflistung aller vorher gesuchten Dokumente"
         ok% = 0
         SET STATUS "Termine gefunden..."
       ELSE 
         IF req3% = 2 THEN 
           req% = 3
         ELSE 
           req% = 0
         END IF 
       END IF 
     END IF 
     aaaak% = aaaak% + 1
   ELSE 
     SET STATUS "Bitte wÑhlen Sie einen Termin aus."
     CREATE DIALOG "TERLISTE",0,0,440,196,title$,"MS Sans Serif",8
     ADD DIALOG "TERLISTE",5,6,3,319,8,0,"Termin erledigt Wertung       Notiz"
     ADD DIALOG "TERLISTE",7,6,16,429,153,0,2,Termine1$,Auswahl1$,Termine1$(0)
     ADD DIALOG "TERLISTE",1,114,174,56,16,0,"&OK",1,1
     ADD DIALOG "TERLISTE",1,174,174,56,16,0,"&Abbrechen",0,0
     ADD DIALOG "TERLISTE",1,234,174,56,16,1,"&Terminliste",2,0
     DIALOG "TERLISTE",req%
     REMOVE DIALOG "TERLISTE"
   END IF 
   knr% = codeku.adressen
   IF req% = 0 AND art% = 2 THEN 
     REM INDEX index1$$
     z1$ = "select where " + select1$
     REM EXECUTE z1$
     FILE "akquise"
     SELECT FORM KEY codeaq% INDEX codeaq.akquise
   END IF 
   IF req% = 3 THEN 
     CALL TagestExp1(Termine1$(),tfound1%)
   END IF 
   IF req% = 1 THEN 
     IF GCODIE% <> - 1 THEN 
       _cuaq% = VAL ( RIGHT$ (Auswahl1$(0),6))
     END IF 
     lastT1% = _cuaq%
     IF NEW ("adressen") OR MOD ("adressen") THEN CALL FStore("adressen")
     IF NEW ("akquise") OR MOD ("akquise") THEN CALL FStore("akquise")
     SELECT KEY _cuaq% FILE "Akquise" INDEX codeaq.akquise
     _continue% = 1
     IF _continue% <> 0 THEN 
       cudat$ = DATE$ ( TODAY ,"0d.mm.yyyy")
       datanz$ = DATE$ ( TODAY ,"0d.mm.yyyy")
       SET STATUS "Bereit"
       _formend% = 0
       WHILE _formend% = 0 AND (art% = 1 OR art% = 3)
         ON ERROR GOTO ErrorHandler
         REM vbezug$ = "Adre&sse"
         _vcodema% = vcodema%
         AQsub% = 0
         akmaske$ = "AKQUISE"
         IF ProjectJN$ = "TRUE" THEN akmaske$ = "AKQUIPRJ"
 
         IF UCASE$ ( FORM ) <> akmaske$ THEN 
           SET HEADING title$ + " - Termine"
           IF EXISTS (GOFFForm$ + akmaske$ + ".sbv") THEN 
             OPEN FORM GOFFForm$ + akmaske$
           ELSE 
             OPEN FORM GOFFForm$ + akmaske$
           END IF 
           SET f = Superbase.Form
           SELECT FORM KEY _cuaq% INDEX codeaq.akquise
           SET STATUS "Termine"
           CALL MNAKQUISE()
           MENU 5,4,0,"&Adresshistorie,F10","AQAdrHistT","Adresshistorie anzeigen/drucken"
           MENU ON 
         END IF 
           CALL AKQUISEIntro1()
           SELECT FORM KEY _cuaq% INDEX codeaq.akquise
           FORM 
           SET DISPLAY ON 
           CALL AQButtUpdate()
         SET STATUS "Bereit"
         IF NOT NEW ("akquise") THEN 
           MENU ON 
           MOUSE ON 
           f.suchen.enabled = - 1
           f.suchen.visible = - 1
           f.abbruch.enabled = 0
           f.abbruch.visible = 0
           f.abbruch2.enabled = 0
           f.abbruch2.visible = 0
           IF _projeKt$ LIKE "PROVIS" THEN 
             f.vertrag.enabled = - 1
             f.vertrag.visible = - 1
           ELSE 
             f.vertrag.enabled = 0
             f.vertrag.visible = 0
           END IF 
           FORM 
           WAIT MOUSE OR KEY OR UPDATE OR MENU 
           GET k$
           SELECT CASE ASC (k$)
           CASE CrsLeft%,PgUp%
             CALL AQPrev()
           CASE CrsRight%,PgDn%
             CALL AQNext()
           END SELECT 
           IF k$ = CHR$ (27) THEN 
             IF PAGE > 1 THEN 
               FORM 1
             ELSE 
               _formend% = 1
             END IF 
           END IF 
         ELSE 
           AQsub% = 99
         END IF 
         SELECT CASE AQsub%
         CASE 99
           IF ergdatuma$ = "TRUE" AND NOT ( NEW ("akquise") OR MOD ("akquise")) THEN 
             codeaq% = CodeAQ.akquise
             SELECT KEY codeaq% LOCK INDEX CodeAq.akquise
             IF ergebnis.akquise <> "" THEN 
               ergebnis.akquise = ergebnis.akquise + CHR$ (13) + CHR$ (10) + DATE$ ( TODAY ) + " " + TIME$ ( NOW ,"hh.mm")
             ELSE 
               ergebnis.akquise = ergebnis.akquise + DATE$ ( TODAY ) + " " + TIME$ ( NOW ,"hh.mm")
             END IF 
             CALL QuickStore("akquise")
           END IF 
           MOUSE ON 
           IF PAGE = 1 THEN 
             CALL ButDesabled()
             f.seite2.enabled = 0
             f.offenetermine.enabled = 0
             f.terminplan.enabled = 0
             f.sprache.enabled = 0
             f.brief.enabled = 0
             f.telefon.enabled = 0
             f.mitarbeiter.enabled = 0
             f.bezug.enabled = 0
             f.aktion.enabled = 0
             f.kundeninfo.enabled = 0
             f.Monat.enabled = 0
             f.Juli.enabled = 0
             f.Jahr.enabled = 0
             f.W1.enabled = 0
             f.W2.enabled = 0
             f.W3.enabled = 0
             f.W4.enabled = 0
             f.W5.enabled = 0
             f.W6.enabled = 0
             f.vertrag.enabled = 0
             f.vertrag.visible = 0
           END IF 
           IF PAGE = 2 THEN 
             f.bearb2.enabled = 0
             f.abbruch2.enabled = - 1
             f.abbruch2.visible = - 1
             f.kundeninfo2.enabled = 0
             f.seite1.enabled = 0
           END IF 
           MENU OFF 
           ENTER datum.akquise,0
           MENU ON 
           IF PAGE = 1 THEN 
             CALL ButEnabled()
             f.seite2.enabled = - 1
             f.offenetermine.enabled = - 1
             f.terminplan.enabled = - 1
             f.sprache.enabled = - 1
             f.brief.enabled = - 1
             f.telefon.enabled = - 1
             f.mitarbeiter.enabled = - 1
             f.bezug.enabled = - 1
             f.aktion.enabled = - 1
             f.kundeninfo.enabled = - 1
             f.Monat.enabled = - 1
             f.Juli.enabled = - 1
             f.Jahr.enabled = - 1
             f.W1.enabled = - 1
             f.W2.enabled = - 1
             f.W3.enabled = - 1
             f.W4.enabled = - 1
             f.W5.enabled = - 1
             f.W6.enabled = - 1
             f.suchen.enabled = - 1
             f.suchen.visible = - 1
             IF _projeKt$ LIKE "PROVIS" THEN 
               f.vertrag.enabled = - 1
               f.vertrag.visible = - 1
             ELSE 
               f.vertrag.enabled = 0
               f.vertrag.visible = 0
             END IF 
           END IF 
           IF PAGE = 2 THEN 
             f.bearb2.enabled = - 1
             f.abbruch2.enabled = 0
             f.abbruch2.visible = 0
             f.kundeninfo2.enabled = - 1
             f.seite1.enabled = - 1
           END IF 
         CASE 100
          REM VertragsÅbersicht
          SELECT KEY codeku.akquise FILE "Kvertrag" INDEX codeku.kvertrag
          SELECT KEY codeku.akquise FILE "Adressen" INDEX codeku.adressen
          CALL KVERTRAGGR()
         END SELECT 
         REM CALL BMCheckMail()
       WEND 
       IF art% = 2 THEN 
         SELECT FORM KEY _cuaq% INDEX codeaq.akquise
         REM cuaq% = _cuaq%
       END IF 
     END IF 
     IF art% = 1 THEN 
       cuaq% = 0
      _formend% = 0
     END IF 
     IF NEW ("akquise") OR MOD ("akquise") AND CodeAQ.akquise <> 0 THEN CALL FStore("akquise")
   END IF 
   IF req% = 2 THEN 
     fo$ = UCASE$ ( FORM )
     IF UCASE$ ( FORM ) LIKE "PROJECT*" THEN 
       prj% = codepr.project
       initjn$ = "j"
       wbericht$ = "Project"
       CALL VPETermineJ(initjn$,prj%)
       Ueberschr$ = "Projekthistorie: " + nachname.adressen
     ELSE 
       REM ab adresshist
       knr% = _cuku%
       initjn$ = "j"
       wbericht$ = "Adressen"
       CALL VPETermineJ(initjn$,_cuku%)
       Ueberschr$ = "Adresshistorie: " + nachname.adressen
     END IF 
   END IF 
  WEND 
 ELSE 
   SET STATUS "Bereit"
   CALL Fehler("Es wurden keine Termine gefunden!","")
   lastT1% = 0
 END IF 
 
 SET STATUS "Bereit"
  
ErrAQKHIST: 
   ON ERROR GOTO ErrorHandler
 DIRECTORY cdir$
 FILE cfile$
 knr% = _cuku%
 REM SELECT FORM KEY _cuku% FILE "adressen" INDEX codeku.adressen
 REM FORM 
 DIRECTORY cdir$
 MOUSE ON 
 END SUB 
 


SUB AQAdrHistOld(art%)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 REM art%=1 aus adressmaske heraus
 REM art%=2 aus Terminmaske heraus
 REM art%=3 aus Projektmaske heraus
 IF disabled%("AQKUNDENHIST") THEN END SUB 
 IF title$ LIKE "*FACTURA*" OR title$ LIKE "*price*" THEN 
    CALL Fehler("Funktion wird in dieser Programm-Version nicht unterstÅtzt!","")
   END SUB 
 END IF 
 IF art% = 1 THEN _cuku% = CodeKU.GAdrDat$
 IF art% = 2 THEN 
   _cuku% = CodeKU.GAkquiDat$
   codeaq% = codeaq.GAkquiDat$
   index1$ = INDEX 
   select1$ = WHERE 
 END IF 
 IF art% = 3 THEN 
   prj% = Codepr.project
   codepr% = prj%
   index1$ = "codepr"
   select1$ = WHERE 
 END IF 
 cfile$ = FILE 
 IF art% = 1 THEN 
   CALL DFile(2,"OFFICE\" + GDokDat$ + _fpw$)
   REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
   CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 END IF 
 FILE GAkquiDat$
 SELECT WHERE 
 cdir$ = DIRECTORY 
 DIRECTORY _netpath$ + "OFFICE"
 DIM Auswahl1$(1)
 IF RECCOUNT (GAkquiDat$) < 23000 THEN 
   DIM Termine1$( RECCOUNT (GAkquiDat$),1)
   REDIM Termine1$( RECCOUNT (GAkquiDat$))
 ELSE 
   DIM Termine1$(23000,1)
   REDIM Termine1$(23000)
 END IF 
 b% = RECCOUNT (GAkquiDat$)
 REM FOR a% = 0 TO b%:Termine1$(a%) = "":NEXT a%
 IF art% < 3 THEN 
   qindex$ = "QuickKUDatDiff"
   qfield$ = "CodeKU"
   SELECT KEY _cuku% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
   caption$ = "Adresse: " + Nachname.GAdrDat$ + ", " + LEFT$ (Vorname.GAdrDat$,1) + "."
   scode% = _cuku%
 END IF 
 IF art% = 3 THEN 
   qindex$ = "QuickPRDatDiff"
   qfield$ = "CodePR"
   SELECT KEY prj% FILE "project" INDEX Codepr.project
   caption$ = "Projekt: " + name1.project + ", " + LEFT$ (name2.project,10) + "."
   scode% = prj%
 END IF 
 
 tfilter1% = scode% * 1000000
 tfilter2% = (scode% + 1) * 1000000
 FILE GAkquiDat$
 INDEX qindex$$
 REM SELECT WHERE codeku.GAkquiDat$ = _cuku%
 SELECT FIRST 
 SELECT KEY tfilter1% FILE GAkquiDat$ INDEX qindex$$
 tfound1% = 0
 SET STATUS "Durchsuche Termindatei..."
 IF art% < 3 THEN WHILE NOT EOF (GAkquiDat$) AND quickKuDatDiff >= tfilter1% AND quickKuDatDiff < tfilter2%
 IF art% = 3 THEN WHILE NOT EOF (GAkquiDat$) AND quickPRDatDiff >= tfilter1% AND quickPRDatDiff < tfilter2%
   REM 100597
   IF art% <> 3 THEN 
     daaa$ = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy")
 Termine1$(tfound1%) = daaa$ + "; " + "[" + erledigt_Termin.GAkquiDat$ + "]" + ";  " + "[" + LTRIM$ ( STR$ (Wertung.GAkquiDat$,"99")) + "]" + "; " + LEFT$ ( TRIM$ (notiz.GAkquiDat$),150) + SPACE$ (120) + STR$ (CodeAQ.GAkquiDat$,"000000")
   END IF 
   IF art% = 3 THEN 
    daaa$ = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy")
 Termine1$(tfound1%) = daaa$ + "; " + "[" + erledigt_Termin + "]" + ";  " + LTRIM$ ( LEFT$ (nachname,30)) + ";  " + LEFT$ ( TRIM$ (notiz.GAkquiDat$),150) + SPACE$ (120) + STR$ (CodeAQ.GAkquiDat$,"000000")
   END IF 
   tfound1% = tfound1% + 1
   SELECT NEXT FILE GAkquiDat$ INDEX qindex$$
 WEND 
 Termine1$(tfound1%) = ""
 IF tfound1% <> 0 THEN 
   SET STATUS "Bitte wÑhlen Sie einen Termin aus."
    CREATE DIALOG "TERLISTE",0,0,440,196,title$,"MS Sans Serif",8
    ADD DIALOG "TERLISTE",5,6,3,319,8,0,"Termin erledigt Wertung       Notiz"
    ADD DIALOG "TERLISTE",7,6,16,429,153,0,2,Termine1$,Auswahl1$,Termine1$(0)
    ADD DIALOG "TERLISTE",1,114,174,56,16,0,"&OK",1,1
    ADD DIALOG "TERLISTE",1,174,174,56,16,0,"&Abbrechen",0,0
    ADD DIALOG "TERLISTE",1,234,174,56,16,1,"&Terminliste",2,0
    DIALOG "TERLISTE",req%
   REMOVE DIALOG "TERLISTE"
   knr% = codeku.GAdrDat$
   IF req% = 0 AND art% = 2 THEN 
     REM INDEX index1$$
     z1$ = "select where " + select1$
     REM EXECUTE z1$
     FILE GAkquiDat$
     SELECT FORM KEY codeaq% INDEX codeaq.GAkquiDat$
   END IF 
   IF req% = 1 THEN 
     _cuaq% = VAL ( RIGHT$ (Auswahl1$(0),6))
     lastT1% = _cuaq%
     IF NEW (GAdrDat$) OR MOD (GAdrDat$) THEN CALL FStore(GAdrDat$)
     IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
     SELECT KEY _cuaq% INDEX codeaq.GAkquiDat$
     _continue% = 1
     IF _continue% <> 0 THEN 
       cudat$ = DATE$ ( TODAY ,"0d.mm.yyyy")
       datanz$ = DATE$ ( TODAY ,"0d.mm.yyyy")
       SET STATUS "Bereit"
       _formend% = 0
       WHILE _formend% = 0 AND (art% = 1 OR art% = 3)
         ON ERROR GOTO ErrorHandler
         REM vbezug$ = "Adre&sse"
         _vcodema% = vcodema%
         AQsub% = 0
         akmaske$ = GAkquiDat$
         IF ProjectJN$ = "TRUE" THEN akmaske$ = "AKQUIPRJ"
 
         IF UCASE$ ( FORM ) <> akmaske$ THEN 
           SET HEADING title$ + " - Termine"
           IF EXISTS (GOFFForm$ + akmaske$ + ".sbv") THEN 
             OPEN FORM GOFFForm$ + akmaske$
           ELSE 
             OPEN FORM GOFFForm$ + akmaske$
           END IF 
           SET f = Superbase.Form
           SELECT FORM KEY _cuaq% INDEX codeaq.GAkquiDat$
           SET STATUS "Termine"
           CALL MNAKQUISE()
           MENU 5,4,0,"&Adresshistorie,F10","AQAdrHistT","Adresshistorie anzeigen/drucken"
           MENU ON 
           CALL AKQUISEIntro1()
           SELECT FORM KEY _cuaq% INDEX codeaq.GAkquiDat$
           FORM 
           SET DISPLAY ON 
           CALL AQButtUpdate()
         END IF 
         SET STATUS "Bereit"
         IF NOT NEW (GAkquiDat$) THEN 
           MENU ON 
           MOUSE ON 
           f.suchen.enabled = - 1
           f.suchen.visible = - 1
           f.abbruch.enabled = 0
           f.abbruch.visible = 0
           f.abbruch2.enabled = 0
           f.abbruch2.visible = 0
           IF _projeKt$ LIKE "PROVIS" THEN 
             f.vertrag.enabled = - 1
             f.vertrag.visible = - 1
           ELSE 
             f.vertrag.enabled = 0
             f.vertrag.visible = 0
           END IF 
           WAIT MOUSE OR KEY OR UPDATE OR MENU 
           GET k$
           SELECT CASE ASC (k$)
           CASE CrsLeft%,PgUp%
             CALL AQPrev()
           CASE CrsRight%,PgDn%
             CALL AQNext()
           END SELECT 
           IF k$ = CHR$ (27) THEN 
             IF PAGE > 1 THEN 
               FORM 1
             ELSE 
               _formend% = 1
             END IF 
           END IF 
         ELSE 
           AQsub% = 99
         END IF 
         SELECT CASE AQsub%
         CASE 99
           IF ergdatuma$ = "TRUE" AND NOT ( NEW (GAkquiDat$) OR MOD (GAkquiDat$)) THEN 
             codeaq% = CodeAQ.GAkquiDat$
             SELECT KEY codeaq% LOCK INDEX CodeAq.GAkquiDat$
             IF ergebnis.GAkquiDat$ <> "" THEN 
               ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10) + DATE$ ( TODAY ) + " " + TIME$ ( NOW ,"hh.mm")
             ELSE 
               ergebnis.GAkquiDat$ = ergebnis.GAkquiDat$ + DATE$ ( TODAY ) + " " + TIME$ ( NOW ,"hh.mm")
             END IF 
             CALL QuickStore(GAkquiDat$)
           END IF 
           MOUSE ON 
           IF PAGE = 1 THEN 
             CALL ButDesabled()
             f.seite2.enabled = 0
             f.offenetermine.enabled = 0
             f.terminplan.enabled = 0
             f.sprache.enabled = 0
             f.brief.enabled = 0
             f.Telefon.enabled = 0
             f.mitarbeiter.enabled = 0
             f.bezug.enabled = 0
             f.aktion.enabled = 0
             f.kundeninfo.enabled = 0
             f.Monat.enabled = 0
             f.Juli.enabled = 0
             f.Jahr.enabled = 0
             f.W1.enabled = 0
             f.W2.enabled = 0
             f.W3.enabled = 0
             f.W4.enabled = 0
             f.W5.enabled = 0
             f.W6.enabled = 0
             f.vertrag.enabled = 0
             f.vertrag.visible = 0
           END IF 
           IF PAGE = 2 THEN 
             f.bearb2.enabled = 0
             f.abbruch2.enabled = - 1
             f.abbruch2.visible = - 1
             f.kundeninfo2.enabled = 0
             f.seite1.enabled = 0
           END IF 
           MENU OFF 
           ENTER datum.GAkquiDat$,0
           MENU ON 
           IF PAGE = 1 THEN 
             CALL ButEnabled()
             f.seite2.enabled = - 1
             f.offenetermine.enabled = - 1
             f.terminplan.enabled = - 1
             f.sprache.enabled = - 1
             f.brief.enabled = - 1
             f.Telefon.enabled = - 1
             f.mitarbeiter.enabled = - 1
             f.bezug.enabled = - 1
             f.aktion.enabled = - 1
             f.kundeninfo.enabled = - 1
             f.Monat.enabled = - 1
             f.Juli.enabled = - 1
             f.Jahr.enabled = - 1
             f.W1.enabled = - 1
             f.W2.enabled = - 1
             f.W3.enabled = - 1
             f.W4.enabled = - 1
             f.W5.enabled = - 1
             f.W6.enabled = - 1
             f.suchen.enabled = - 1
             f.suchen.visible = - 1
             IF _projeKt$ LIKE "PROVIS" THEN 
               f.vertrag.enabled = - 1
               f.vertrag.visible = - 1
             ELSE 
               f.vertrag.enabled = 0
               f.vertrag.visible = 0
             END IF 
           END IF 
           IF PAGE = 2 THEN 
             f.bearb2.enabled = - 1
             f.abbruch2.enabled = 0
             f.abbruch2.visible = 0
             f.kundeninfo2.enabled = - 1
             f.seite1.enabled = - 1
           END IF 
         CASE 100
          REM VertragsÅbersicht
          SELECT KEY codeku.GAkquiDat$ FILE "Kvertrag" INDEX codeku.kvertrag
          SELECT KEY codeku.GAkquiDat$ FILE GAdrDat$ INDEX codeku.GAdrDat$
          CALL KVERTRAGGR()
         END SELECT 
         REM CALL BMCheckMail()
       WEND 
       IF art% = 2 THEN 
         SELECT FORM KEY _cuaq% INDEX codeaq.GAkquiDat$
         REM cuaq% = _cuaq%
       END IF 
     END IF 
     IF art% = 1 THEN 
       cuaq% = 0
      _formend% = 0
     END IF 
     IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) AND CodeAQ.GAkquiDat$ <> 0 THEN CALL FStore(GAkquiDat$)
   END IF 
   IF req% = 2 THEN 
     IF UCASE$ ( FORM ) = "PROJECT" THEN 
       prj% = codepr.project
       initjn$ = "j"
       wbericht$ = "Project"
       CALL VPETermineJ(initjn$,prj%)
       Ueberschr$ = "Projekthistorie: " + nachname.GAdrDat$
     ELSE 
       REM ab adresshist
       knr% = _cuku%
       initjn$ = "j"
       wbericht$ = GAdrDat$
       CALL VPETermineJ(initjn$,_cuku%)
       Ueberschr$ = "Adresshistorie: " + nachname.GAdrDat$
       
     END IF 
   END IF 
 ELSE 
   SET STATUS "Bereit"
   CALL Fehler("Es wurden keine Termine gefunden!","")
   lastT1% = 0
 END IF 
 
 SET STATUS "Bereit"
  
ErrAQKHIST: 
   ON ERROR GOTO ErrorHandler
 DIRECTORY cdir$
 FILE cfile$
 knr% = _cuku%
 REM SELECT FORM KEY _cuku% FILE GAdrDat$ INDEX codeku.GAdrDat$
 REM FORM 
 DIRECTORY cdir$
 MOUSE ON 
 SELECT WHERE FILE GAkquiDat$
 END SUB 
 
 
 
  
 ' Anschreiben verfassen
 ' ============================================================================
 ' 05.10.04    - Dokumentenzuweisung (LOCK)
 
SUB AQAnschreiben()
 SET STATUS "Dokumentenverwaltung"
 cuaq% = CodeAQ.GAkquiDat$
 IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
 _OK% = 1
 opt% = 1
 IF CodeDOK.GAkquiDat$ > 0 THEN 
   CREATE DIALOG "ANSCHR",0,0,105,93,title$,"MS Sans Serif",8
   ADD DIALOG "ANSCHR",4,1,3,101,66,0," Brief/Anschreiben "
   ADD DIALOG "ANSCHR",3,4,16,78,14,0,"Dokument einsehen",1,opt%
   ADD DIALOG "ANSCHR",3,4,30,76,14,0,"Dokument lîschen",2,opt%
   ADD DIALOG "ANSCHR",3,4,44,96,14,0,"Dokument entkoppeln",3,opt%
   ADD DIALOG "ANSCHR",1,2,74,48,16,1,"&Weiter",1,1
   ADD DIALOG "ANSCHR",1,54,74,48,16,0,"&Abbruch",0,0
   DIALOG "ANSCHR",req%
   REMOVE DIALOG "ANSCHR"
   IF req% = 1 THEN 
     SELECT CASE opt%
     CASE 1
       CALL DOKBearbeiten(CodeDOK.GAkquiDat$,1)
     CASE 2
       CALL DOKLoeschen(CodeDOK.GAkquiDat$)
       SELECT KEY CodeDOK.GAkquiDat$ FILE GDokDat$ INDEX CodeDOK.GDokDat$
       IF NOT FOUND (GDokDat$) THEN 
         SELECT KEY cuaq% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
         CodeDOK.GAkquiDat$ = 0
         CALL QuickStore(GAkquiDat$)
       END IF 
     CASE 3
       REM dokument entkoppeln
       SELECT KEY cuaq% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
       CodeDOK.GAkquiDat$ = 0
       CALL QuickStore(GAkquiDat$)
       CALL Fehler("Dokument wurde vom Termin entkoppelt","")
     END SELECT 
   END IF 
 ELSE 
   CALL Fehler("Es ist kein Dokument zu diesem Termin erfa·t worden!","")
   IF GAkquiDat$ LIKE "AKQUISE" THEN 
     REQUEST "Wollen Sie dem Termin ein Dokument zuordnen?","",130,req%
     IF req% = 1 THEN 
       GDoksu1% = 0
       codeaq% = codeaq.akquise
       CALL DokSuchen1(codeku.akquise,"")
       IF GDoksu1% > 0 THEN 
         SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
         SELECT FIRST FILE "dokument" INDEX codedok.dokument
         SELECT KEY GDoksu1% FILE "dokument" INDEX codedok.dokument
         notiz.akquise = "Dokument(" + gruppe.dokument + ")" + Dokument.dokument + CHR$ (13) + CHR$ (10) + notiz.akquise
         CodeDOK.GAkquiDat$ = GDoksu1%
         STORE FILE GAkquiDat$
         GDoksu1% = 0
         CALL Fehler("Dokument wurde an den Termin angehÑngt","")
       END IF 
     END IF 
   END IF 
 END IF 
 FILE GAkquiDat$
 SELECT FORM FIRST FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
 SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
 CALL AQButtUpdate()
 END SUB 
 
 
 ' Beschriftung fÅr Buttons Sprachnotiz u. Brief/FAX generieren
 ' ============================================================================
 
SUB AQButtUpdate()
 IF sprachnotiz.GAkquiDat$ = "j" THEN sprnot$ = "Sprachnotiz Æ" ELSE sprnot$ = "Sprachnotiz"
 IF CodeDOK.GAkquiDat$ > 0 OR EXISTS (codeaq.akquise,codeaq.dokument) THEN 
   anschr1$ = "Brief/F&ax Æ"
 ELSE 
   anschr1$ = "Brief/F&ax"
 END IF 
 aqma$ = Bearbeiter.GAkquiDat$
 SELECT KEY CodeAK.GAkquiDat$ FILE "AKTIONEN" INDEX CodeAK.aktionen
 aktion$ = Bezeichnung.aktionen
 datanz$ = DATE$ ( TODAY ,"0d.mmm.yyyy")
 IF ProjectJN$ = "TRUE" THEN 
   IF projekt.GAkquiDat$ <> "" THEN 
     proj$ = Projekt.GAkquiDat$
   ELSE 
     proj$ = "<ohne Zuordnung>"
   END IF 
 END IF 
   IF EMAILTO.GAkquiDat$ <> "" AND EMAILBETREFF.GAkquiDat$ <> "" THEN 
     IF EMAILRAUS.GAkquiDat$ = "j" THEN 
       IF EMAILAutomat.GAkquiDat$ = "j" THEN 
         s3e$ = "EMAIL aut.erl.Æ"
       ELSE 
         s3e$ = "EMAIL man.erl.Æ"
       END IF 
     ELSE 
       IF EMAILAutomat.GAkquiDat$ = "j" THEN 
         s3e$ = "EMAIL autom.Æ"
       ELSE 
         s3e$ = "EMAIL man.Æ"
       END IF 
     END IF 
   ELSE 
     s3e$ = "EMAIL"
   END IF 
   ON ERROR GOTO err120420061
   IF CodeAnfrage.GAkquiDat$ > 0 THEN 
     anfrage$ = "Anfrage Æ"
   ELSE 
     anfrage$ = "Anfrage"
   END IF 
   IF codeobjekt.GAkquiDat$ > 0 THEN 
     angebot$ = "Angebot Æ"
   ELSE 
     angebot$ = "Angebot"
   END IF 
err120420061: 
   ON ERROR GOTO e200320071 
   fo1$ = FORM 
   IF fo1$ LIKE "AKQUISE" THEN 
     IF MNdisabled%("OUTLOOKEXPORTEIN") OR FIIMMAK.GADRDat$ <> "j" THEN 
       IF GADRDat$ LIKE "ADRESSEN" THEN f.expoutl.enabled = 0
     ELSE 
       IF GADRDat$ LIKE "ADRESSEN" THEN f.expoutl.enabled = - 1
     END IF 
     IF gemail% <> - 1 THEN 
       REM IF GADRDat$ LIKE "ADRESSEN" THEN f.email.enabled = 0
     ELSE 
       IF GADRDat$ LIKE "ADRESSEN" THEN f.email.enabled = - 1
     END IF 
   END IF 
e200320071: 
   ON ERROR GOTO ErrorHandler
 FORM 
 END SUB 
 
 
 ' Bezug wechseln Mitarbeiter/Kunde
 ' ============================================================================
 
SUB BEZUGWechseln()
 IF disabled%("AQBEZUGWECHSELN") THEN END SUB 
 codeaq% = codeaq.GAkquiDat$
 FILE GAkquiDat$
 SELECT WHERE FILE GAkquiDat$
 SELECT CASE bezug%
 CASE 1
   knr% = CodeKU.GAkquiDat$
   bezug% = 2
   vbezug$ = "Adre&sse"
   _vcodema% = vcodema%
   SELECT WHERE CodeKU.GAkquiDat$ = knr%
   
 CASE 2
   vbezug$ = "Aktion&en"
   cuak% = CodeAK.GAkquiDat$
   bezug% = 3
   SELECT WHERE CodeAK.GAkquiDat$ = cuak%
 CASE 3
   vbezug$ = "Mitarbeiter+Aktion"
   _vcodema% = CodeMA.GAkquiDat$
   cuakma$ = CodeAKMA.GAkquiDat$
   bezug% = 4
   SELECT WHERE CodeAKMA.GAkquiDat$ = cuakma$
 CASE 4
   vbezug$ = "&Mitarbeiter"
   _vcodema% = CodeMA.GAkquiDat$
   knr% = CodeKU.GAkquiDat$
   bezug% = 1
   SELECT WHERE Codema.GAkquiDat$ = _vcodema%
   END SELECT 
 CALL SHOWCal()
 REM 100999
       SELECT CASE bezug%
       CASE 1
         REM SELECT FORM KEY _vcodema% FILE GAkquiDat$ INDEX CodeMA.GAkquiDat$
         SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         FORM 
       CASE 2
         REM SELECT FORM KEY knr% FILE GAkquiDat$ INDEX CodeKU.GAkquiDat$
         SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         FORM 
       CASE 3
         REM SELECT FORM KEY cuak% FILE GAkquiDat$ INDEX CodeAK.GAkquiDat$
         SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         FORM 
       CASE 4
         IF termin% = 1 THEN 
           REM SELECT FORM KEY cuakma$ FILE GAkquiDat$ INDEX CodeAKMA.GAkquiDat$
           SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           FORM 
         ELSE 
           REM SELECT FORM KEY cuakma$ FILE GAkquiDat$ INDEX CodeAKMA.GAkquiDat$
           SELECT FORM KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
           FORM 
         END IF 
       END SELECT 
 FORM 
 END SUB 
 
 
 ' Mitarbeiter suchen aus Termine heraus
 ' ============================================================================
 
SUB AQMASuchen()
 IF disabled%("MAWECHSELN") THEN END SUB 
 codemaold% = codema.GAkquiDat$
 erlt$ = erledigt_Termin.GAkquiDat$
 GErledTermin$ = erlt$
 FILE "supervis"
 IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
 SET STATUS "Suche Mitarbeiter..."
 REM REQUEST "Mitarbeiter auswÑhlen","",25,req%,_vma%,72,codema,nachname,vorname INDEX nachname.supervis
 _vma% = GetSupervis%(codemaold%)
 IF _vma% > 0 THEN req% = 1
 FILE GAkquiDat$
 IF req% = 1 THEN 
   knr% = CodeKU.GAkquiDat$
   codeaq% = codeaq.GAkquiDat$
   REM _vcodema% = _vma%
   bezug% = 1
   vbezug$ = "&Mitarbeiter"
   IF CodeMA.GAkquiDat$ <> _vma% THEN 
     REQUEST "Soll der ausgewÑhlte Mitarbeiter in den","aktuellen Termin aufgenommen werden?",130,req%
     IF req% = 1 THEN 
       _CodeAQ% = CodeAQ.GAkquiDat$
       SELECT KEY _CodeAQ% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
       CodeMA.GAkquiDat$ = _vma%
       SELECT KEY _vma% LOCK FILE "SUPERVIS" INDEX CodeMA.supervis
       IF codemaold% <> _vma% THEN 
         AnzTermine.supervis = AnzTermine.supervis + 1
         Terminnr.GAkquiDat$ = AnzTermine.supervis
         IF erlT$ LIKE "j" THEN 
           AnzTermineErl.supervis = AnzTermineErl.supervis + 1
         ELSE 
           AnzTermineUnErl.supervis = AnzTermineUnErl.supervis + 1
         END IF 
         STORE FILE "supervis"
         UNLOCK CURRENT FILE "Supervis"
       END IF 
       bearbeiter.GAkquiDat$ = Nachname.supervis
       CALL FStore(GAkquiDat$)
       IF codemaold% <> _vma% THEN 
         SELECT KEY codemaold% LOCK FILE "SUPERVIS" INDEX CodeMA.supervis
         AnzTermine.supervis = AnzTermine.supervis - 1
         IF erlT$ LIKE "j" THEN 
           AnzTermineErl.supervis = AnzTermineErl.supervis - 1
         ELSE 
           AnzTermineUnErl.supervis = AnzTermineUnErl.supervis - 1
         END IF 
         STORE FILE "supervis"
         UNLOCK CURRENT FILE "Supervis"
       END IF 
       SELECT FIRST FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
       SELECT KEY _CodeAQ% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
       REM FORM 
     ELSE 
       SELECT WHERE Codema.GAkquiDat$ = _vcodema%
       SELECT FORM LAST 
     END IF 
   ELSE 
     SELECT WHERE Codema.GAkquiDat$ = _vcodema%
     REM SELECT codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
   END IF 
   REM SELECT WHERE Codema.GAkquiDat$ = _vcodema%
   REM SELECT FORM LAST 
 
 END IF 
 CALL SHOWCal()
 CALL AQButtUpdate()
 FORM 
 SET STATUS "Bereit"
 END SUB 
 
 
 
 ' Kalenderbeschriftung generieren 
 ' ============================================================================
 ' 0001 3.11.92/16.40/AB
 
SUB SHOWCal()
 SET STATUS "Generiere Kalender..."
 vcuaq% = CodeAQ.GAkquiDat$
 monat$ = MONTH$ (cudat$)
 jahr$ = STR$ ( YEAR (cudat$),"9999")
 MOUSE OFF 
 wtag$ = DAY$ ("1. " + monat$ + " " + jahr$)
 SELECT CASE wtag$
 CASE "Sonntag","Sunday"
   spalte% = 7
   wtag% = 0
 CASE "Montag","Monday"
   spalte% = 6
   wtag% = 1
 CASE "Dienstag","Tuesday"
   spalte% = 5
   wtag% = 2
 CASE "Mittwoch","Wednesday"
   spalte% = 4
   wtag% = 3
 CASE "Donnerstag","Thursday"
   spalte% = 3
   wtag% = 4
 CASE "Freitag","Friday"
   spalte% = 2
   wtag% = 5
 CASE "Samstag","Saturday"
   spalte% = 1
   wtag% = 6
 END CASE 
 wmonanf% = DAYS ("1. " + monat$ + " " + jahr$)
 wochmonanfang% = wmonanf% - wtag%
 WoAnfang%(1) = wochmonanfang%
 FOR a% = 2 TO 6
   WoAnfang%(a%) = WoAnfang%(a% - 1) + 7
 NEXT a%
 monatanfang% = 8 - spalte%
 zw2% = DAYS ("26. " + monat$ + " " + jahr$)
 m1$ = monat$
 zw3% = 0
 WHILE m1$ = monat$
   zw3% = zw3% + 1
   zw2% = zw2% + 1
   m1$ = MONTH$ (zw2%)
 WEND 
 monatende% = 26 + zw3% - 1
 FOR i% = 1 TO monatanfang% - 1 STEP 1
   tagx$ = "d" + LTRIM$ ( STR$ (i%,"99")) + "$"
   tagx$$ = ""
 NEXT i%
 i% = 0
 FOR y% = monatanfang% TO monatanfang% + monatende% - 1 STEP 1
   tagx$ = "d" + LTRIM$ ( STR$ (y%,"99")) + "$"
   i% = i% + 1
   termine1$ = STR$ (i%,"99") + "." + monat$ + " " + jahr$
   zwi4% = DAYS (termine1$)
   tagx$$ = STR$ (i%,"99 ") + LTRIM$ (DAYMark$(zwi4%))
 NEXT y%
 FOR y% = monatende% + monatanfang% TO 37 STEP 1:REM +1
   tagx$ = "d" + LTRIM$ ( STR$ (y%,"99")) + "$"
   tagx$$ = ""
 NEXT y%
 REM 200999 SELECT FORM KEY vcuaq% INDEX codeaq.GAkquiDat$
  MOUSE ON 
 FORM 
 END SUB 
 
 
 ' verplante Tage markieren
 ' ==================================================================
 ' Zweck:       liefert Markierung fÅr ein bestimmtes Datum
 ' Nutzung:     x$=DAYMark$(datum$)
 '              datum$  = zu testendes Tagesdatum
 ' ==================================================================
 
FUNCTION DAYMark$(datum%)
 DAYMark$ = " "
 IF akquiseneu$ <> "j" THEN 
   SELECT CASE bezug%
   CASE 0
     IF EXISTS (scode$,termin.GAkquiDat$) THEN DAYMark$ = "Æ"
     REM SELECT KEY datum% FILE GAkquiDat$ INDEX termin.GAkquiDat$
   CASE 1
     scode$ = DATE$ (datum%,"0dmmyyyy") + STR$ (_vcodema%,"000000")
     REM SELECT KEY scode$ FILE GAkquiDat$ INDEX QuickCodeMA
     IF EXISTS (scode$,QuickCodeMA.GAkquiDat$) THEN DAYMark$ = "Æ"
   CASE 2
     scode$ = DATE$ (datum%,"0dmmyyyy") + STR$ (knr%,"000000")
     REM SELECT KEY scode$ FILE GAkquiDat$ INDEX QuickCodeKU
     IF EXISTS (scode$,QuickCodeKU.GAkquiDat$) THEN DAYMark$ = "Æ"
   CASE 3
     scode$ = DATE$ (datum%,"0dmmyyyy") + STR$ (cuak%,"000000")
     REM SELECT KEY scode$ FILE GAkquiDat$ INDEX QuickCodeAK
     IF EXISTS (scode$,QuickCodeAK.GAkquiDat$) THEN DAYMark$ = "Æ"
   CASE 4
     scode$ = DATE$ (datum%,"0dmmyyyy") + STR$ (cuak%,"000000") + STR$ (_vcodema%,"000000")
     REM SELECT KEY scode$ FILE GAkquiDat$ INDEX QuickAKMA
    IF EXISTS (scode$,QuickAKMA.GAkquiDat$) THEN DAYMark$ = "Æ"
   END SELECT 
   REM IF FOUND (GAkquiDat$) THEN DAYMark$ = "Æ"
   REM IF EXISTS (scode$) THEN DAYMark$ = "Æ"
 END IF 
 END FUNCTION 
 
 
 ' TagesÅbersicht anzeigen/Termin auswÑhlen
 ' ==================================================================================
 
TerminListe: 
 cfilt$ = WHERE 
 cindex$ = INDEX 
 SELECT WHERE FILE GAkquiDat$
 SET STATUS "Terminliste anzeigen..."
 cuaq% = CodeAQ.GAkquiDat$
 IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
 datum$ = FN numeric(tag$) + "." + monat$ + " " + jahr$
 zugopt% = 1
 CREATE DIALOG "ZUGART",0,0,134,65,title$,"MS Sans Serif",8
    ADD DIALOG "ZUGART",9,6,1,20,21,2
    ADD DIALOG "ZUGART",9,6,1,20,21,2
    ADD DIALOG "ZUGART",4,27,2,90,41,0,"Terminliste/Festlegung"
    ADD DIALOG "ZUGART",3,33,16,77,10,0,"Tagesterminliste",1,zugopt%
    ADD DIALOG "ZUGART",3,33,27,77,10,0,"Terminfestlegung",2,zugopt%
    ADD DIALOG "ZUGART",1,13,46,55,15,1,"&OK",1,1
    ADD DIALOG "ZUGART",1,70,46,55,15,0,"&Abbrechen",0,0
    DIALOG "ZUGART",req%
    REMOVE DIALOG "ZUGART"
 IF req% = 0 THEN 
   EXECUTE "SELECT WHERE " + cfilt$
             REM 071098
             SELECT FIRST 
   SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
   SET INDEX cindex$
   INDEX cindex$
   MOUSE ON 
   FORM 
   _cuaq% = cuaq%
   RETURN 
 END IF 
 IF zugopt% = 1 AND tag$ <> "" AND RIGHT$ (tag$,1) <> "Æ" THEN 
   CALL Fehler("Es sind keine Tagestermine vorhanden!","")
   EXECUTE "SELECT WHERE " + cfilt$
             REM 071098
             SELECT FIRST 
   SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
   SET INDEX cindex$
   INDEX cindex$
   MOUSE ON 
   FORM 
   _cuaq% = cuaq%
   RETURN 
 END IF 
 
 IF zugopt% = 1 AND tag$ <> "" AND RIGHT$ (tag$,1) = "Æ" THEN 
   tfound% = 0
   REM ** Termine$() Grî·e anpassen und lîschen
   IF RECCOUNT (GAkquiDat$) < 23000 THEN 
     REDIM Termine$( RECCOUNT (GAkquiDat$))
   ELSE 
     REDIM Termine$(23000)
   END IF 
   REM b% = RECCOUNT (GAkquiDat$)
   REM FOR a% = 0 TO b%:Termine$(a%) = "":NEXT a%
 
   CALL Server("LISTBOXINIT","TagesÅbersicht")
   cuaqtmp% = cuaq%
   MOUSE OFF 
   IF bezug% = 1 THEN 
     tfound% = 0
     INDEX QuickCodeMA.GAkquiDat$
     scode$ = DATE$ ( DAYS (datum$),"0dmmyyyy") + STR$ (_vcodema%,"000000")
     SELECT FIRST 
     SELECT KEY scode$
     WHILE NOT EOF (GAkquiDat$) AND QuickCodeMA.GAkquiDat$ = scode$
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + nachname.GAkquiDat$ + ", " + notiz.GAkquiDat$ + " (" + STR$ (CodeAQ.GAkquiDat$,"000000") + ")"
       IF LEFT$ (entry$,1) = " " THEN ent$ = "0" ELSE ent$ = LEFT$ (entry$,1)
       entry$ = ent$ + RIGHT$ (entry$, LEN (entry$) - 1)
       Termine$(tfound%) = entry$
       tfound% = tfound% + 1
       REM CALL Server("LISTBOXADD",entry$)
       REM tfound% = tfound% + 1
       SELECT NEXT FILE GAkquiDat$ INDEX QuickCodeMA.GAkquiDat$
     WEND 
     Termine$(tfound%) = ""
     caption$ = "Termine auf den Mitarbeiter bezogen"
   END IF 
   IF bezug% = 2 THEN 
     tfound% = 0
     INDEX QuickCodeKU.GAkquiDat$
     scode$ = DATE$ ( DAYS (datum$),"0dmmyyyy") + STR$ (CodeKU.GAkquiDat$,"000000")
     SELECT FIRST 
     SELECT KEY scode$
     WHILE NOT EOF (GAkquiDat$) AND QuickCodeKU.GAkquiDat$ = scode$
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + Bearbeiter.GAkquiDat$ + ", " + notiz.GAkquiDat$ + " (" + STR$ (CodeAQ.GAkquiDat$,"000000") + ")"
       IF LEFT$ (entry$,1) = " " THEN ent$ = "0" ELSE ent$ = LEFT$ (entry$,1)
       entry$ = ent$ + RIGHT$ (entry$, LEN (entry$) - 1)
       Termine$(tfound%) = entry$
       REM CALL Server("LISTBOXADD",entry$)
       tfound% = tfound% + 1
       SELECT NEXT FILE GAkquiDat$ INDEX QuickCodeKU.GAkquiDat$
     WEND 
     Termine$(tfound%) = ""
     caption$ = "Termine auf die Adresse bezogen"
   END IF 
   IF bezug% = 3 THEN 
     tfound% = 0
     INDEX QuickCodeAK.GAkquiDat$
     scode$ = DATE$ ( DAYS (datum$),"0dmmyyyy") + STR$ (CodeAK.GAkquiDat$,"000000")
     SELECT FIRST 
     SELECT KEY scode$
     WHILE NOT EOF (GAkquiDat$) AND QuickCodeAK.GAkquiDat$ = scode$
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + Nachname.GAkquiDat$ + ", " + notiz.GAkquiDat$ + " (" + STR$ (CodeAQ.GAkquiDat$,"000000") + ")"
       IF LEFT$ (entry$,1) = " " THEN ent$ = "0" ELSE ent$ = LEFT$ (entry$,1)
       entry$ = ent$ + RIGHT$ (entry$, LEN (entry$) - 1)
       Termine$(tfound%) = entry$
       REM CALL Server("LISTBOXADD",entry$)
       tfound% = tfound% + 1
       SELECT NEXT FILE GAkquiDat$ INDEX QuickCodeAK.GAkquiDat$
     WEND 
     Termine$(tfound%) = ""
     caption$ = "Termine auf die Aktion bezogen"
   END IF 
   IF bezug% = 4 THEN 
     tfound% = 0
     INDEX QuickAKMA.GAkquiDat$
     scode$ = DATE$ ( DAYS (datum$),"0dmmyyyy") + STR$ (CodeAK.GAkquiDat$,"000000") + STR$ (_vcodema%,"000000")
     SELECT FIRST 
     SELECT KEY scode$
     WHILE NOT EOF (GAkquiDat$) AND QuickAKMA.GAkquiDat$ = scode$
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + Nachname.GAkquiDat$ + ", " + notiz.GAkquiDat$ + " (" + STR$ (CodeAQ.GAkquiDat$,"000000") + ")"
       IF LEFT$ (entry$,1) = " " THEN ent$ = "0" ELSE ent$ = LEFT$ (entry$,1)
       entry$ = ent$ + RIGHT$ (entry$, LEN (entry$) - 1)
       Termine$(tfound%) = entry$
       REM CALL Server("LISTBOXADD",entry$)
       tfound% = tfound% + 1
       SELECT NEXT FILE GAkquiDat$ INDEX QuickAKMA.GAkquiDat$
     WEND 
     Termine$(tfound%) = ""
     caption$ = "Termine auf den Mitarbeiter und die Aktion bezogen"
   END IF 
 
   IF tfound% <> 0 THEN 
     SET STATUS "Bitte wÑhlen Sie einen Termin aus."
     CREATE DIALOG "TERLISTE",0,0,340,197,title$,"MS Sans Serif",8
     ADD DIALOG "TERLISTE",7,5,8,328,161,0,2,Termine$,Auswahl$,Termine$(0)
     ADD DIALOG "TERLISTE",1,114,174,56,16,1,"&OK",1,1
     ADD DIALOG "TERLISTE",1,174,174,56,16,0,"&Abbrechen",0,0
     DIALOG "TERLISTE",req%
     REMOVE DIALOG "TERLISTE"
     IF req% = 1 THEN 
       cuaq% = VAL ( RIGHT$ (Auswahl$(0),6))
       lastTermin% = cuaq%
     END IF 
     MENU 6,3,1
   ELSE 
     SET STATUS "Bereit"
     CALL Fehler("Es wurden keine unerledigten Termine gefunden!","")
     MENU 6,3,0
     lastTermin% = 0
   END IF 
 
 
 
 ELSE 
   IF tag$ <> "" THEN 
     IF termin.GAkquiDat$ > 1 THEN 
       SELECT KEY cuaq% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
       GErledTermin$ = erledigt_termin.GAkquiDat$
       REQUEST "Soll der aktuelle Termin auf den " + datum$,"festgesetzt werden?",130,req1%
       IF req1% = 1 THEN 
         IF termin.GAkquiDat$ > 1 AND textversch$ <> "FALSE" THEN 
           notiz.GAkquiDat$ = notiz.GAkquiDat$ + "; (verschoben am " + DATE$ ( TODAY ,"0d.mm.yyyy") + " vom " + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy") + " auf den " + DATE$ ( DAYS (datum$),"0d.mm.yyyy") + ")"
         END IF 
         Termin.GAkquiDat$ = datum$
       END IF 
     ELSE 
       GErledTermin$ = erledigt_termin.GAkquiDat$
       termin.GAkquiDat$ = datum$
       CALL QuickStore(GAkquiDat$)
       CALL SHOWCal()
       MENU OFF 
       ENTER uhrzeit.GAkquiDat$,0
       MENU ON 
     END IF 
     CALL QuickStore(GAkquiDat$)
     CALL SHOWCal()
   END IF 
 END IF 
 EXECUTE "SELECT WHERE " + cfilt$
             REM 071098
             SELECT FIRST 
 SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
 SET INDEX cindex$
 INDEX cindex$
 MOUSE ON 
 FORM 
 _cuaq% = cuaq%
 RETURN 
 


SUB tLi1()
 cfilt$ = WHERE 
 cindex$ = INDEX 
 SELECT WHERE FILE GAkquiDat$
 SET STATUS "Terminliste anzeigen..."
 cuaq% = CodeAQ.GAkquiDat$
 IF NEW (GAkquiDat$) OR MOD (GAkquiDat$) THEN CALL FStore(GAkquiDat$)
 datum$ = FN numeric(tag$) + "." + monat$ + " " + jahr$
 zugopt% = 1
 CREATE DIALOG "ZUGART",0,0,134,65,title$,"MS Sans Serif",8
    ADD DIALOG "ZUGART",9,6,1,20,21,2
    ADD DIALOG "ZUGART",9,6,1,20,21,2
    ADD DIALOG "ZUGART",4,27,2,90,41,0,"Terminliste/Festlegung"
    ADD DIALOG "ZUGART",3,33,16,77,10,0,"Tagesterminliste",1,zugopt%
    ADD DIALOG "ZUGART",3,33,27,77,10,0,"Terminfestlegung",2,zugopt%
    ADD DIALOG "ZUGART",1,13,46,55,15,1,"&OK",1,1
    ADD DIALOG "ZUGART",1,70,46,55,15,0,"&Abbrechen",0,0
    DIALOG "ZUGART",req%
    REMOVE DIALOG "ZUGART"
 IF req% = 0 THEN 
   EXECUTE "SELECT WHERE " + cfilt$
             REM 071098
             SELECT FIRST 
   SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
   SET INDEX cindex$
   INDEX cindex$
   MOUSE ON 
   FORM 
   _cuaq% = cuaq%
   RETURN 
 END IF 
 IF zugopt% = 1 AND tag$ <> "" AND RIGHT$ (tag$,1) <> "Æ" THEN 
   CALL Fehler("Es sind keine Tagestermine vorhanden!","")
   EXECUTE "SELECT WHERE " + cfilt$
             REM 071098
             SELECT FIRST 
   SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
   SET INDEX cindex$
   INDEX cindex$
   MOUSE ON 
   FORM 
   _cuaq% = cuaq%
   REM RETURN 
 END IF 
 
 IF zugopt% = 1 AND tag$ <> "" AND RIGHT$ (tag$,1) = "Æ" THEN 
   tfound% = 0
   REM ** Termine$() Grî·e anpassen und lîschen
   IF RECCOUNT (GAkquiDat$) < 23000 THEN 
     REDIM Termine$( RECCOUNT (GAkquiDat$))
   ELSE 
     REDIM Termine$(23000)
   END IF 
   REM b% = RECCOUNT (GAkquiDat$)
   REM FOR a% = 0 TO b%:Termine$(a%) = "":NEXT a%
 
   CALL Server("LISTBOXINIT","TagesÅbersicht")
   cuaqtmp% = cuaq%
   MOUSE OFF 
   IF bezug% = 1 THEN 
     tfound% = 0
     INDEX QuickCodeMA.GAkquiDat$
     scode$ = DATE$ ( DAYS (datum$),"0dmmyyyy") + STR$ (_vcodema%,"000000")
     SELECT FIRST 
     SELECT KEY scode$
     WHILE NOT EOF (GAkquiDat$) AND QuickCodeMA.GAkquiDat$ = scode$
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + nachname.GAkquiDat$ + ", " + notiz.GAkquiDat$ + " (" + STR$ (CodeAQ.GAkquiDat$,"000000") + ")"
       IF LEFT$ (entry$,1) = " " THEN ent$ = "0" ELSE ent$ = LEFT$ (entry$,1)
       entry$ = ent$ + RIGHT$ (entry$, LEN (entry$) - 1)
       Termine$(tfound%) = entry$
       tfound% = tfound% + 1
       REM CALL Server("LISTBOXADD",entry$)
       REM tfound% = tfound% + 1
       SELECT NEXT FILE GAkquiDat$ INDEX QuickCodeMA.GAkquiDat$
     WEND 
     Termine$(tfound%) = ""
     caption$ = "Termine auf den Mitarbeiter bezogen"
   END IF 
   IF bezug% = 2 THEN 
     tfound% = 0
     INDEX QuickCodeKU.GAkquiDat$
     scode$ = DATE$ ( DAYS (datum$),"0dmmyyyy") + STR$ (CodeKU.GAkquiDat$,"000000")
     SELECT FIRST 
     SELECT KEY scode$
     WHILE NOT EOF (GAkquiDat$) AND QuickCodeKU.GAkquiDat$ = scode$
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + Bearbeiter.GAkquiDat$ + ", " + notiz.GAkquiDat$ + " (" + STR$ (CodeAQ.GAkquiDat$,"000000") + ")"
       IF LEFT$ (entry$,1) = " " THEN ent$ = "0" ELSE ent$ = LEFT$ (entry$,1)
       entry$ = ent$ + RIGHT$ (entry$, LEN (entry$) - 1)
       Termine$(tfound%) = entry$
       REM CALL Server("LISTBOXADD",entry$)
       tfound% = tfound% + 1
       SELECT NEXT FILE GAkquiDat$ INDEX QuickCodeKU.GAkquiDat$
     WEND 
     Termine$(tfound%) = ""
     caption$ = "Termine auf die Adresse bezogen"
   END IF 
   IF bezug% = 3 THEN 
     tfound% = 0
     INDEX QuickCodeAK.GAkquiDat$
     scode$ = DATE$ ( DAYS (datum$),"0dmmyyyy") + STR$ (CodeAK.GAkquiDat$,"000000")
     SELECT FIRST 
     SELECT KEY scode$
     WHILE NOT EOF (GAkquiDat$) AND QuickCodeAK.GAkquiDat$ = scode$
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + Nachname.GAkquiDat$ + ", " + notiz.GAkquiDat$ + " (" + STR$ (CodeAQ.GAkquiDat$,"000000") + ")"
       IF LEFT$ (entry$,1) = " " THEN ent$ = "0" ELSE ent$ = LEFT$ (entry$,1)
       entry$ = ent$ + RIGHT$ (entry$, LEN (entry$) - 1)
       Termine$(tfound%) = entry$
       REM CALL Server("LISTBOXADD",entry$)
       tfound% = tfound% + 1
       SELECT NEXT FILE GAkquiDat$ INDEX QuickCodeAK.GAkquiDat$
     WEND 
     Termine$(tfound%) = ""
     caption$ = "Termine auf die Aktion bezogen"
   END IF 
   IF bezug% = 4 THEN 
     tfound% = 0
     INDEX QuickAKMA.GAkquiDat$
     scode$ = DATE$ ( DAYS (datum$),"0dmmyyyy") + STR$ (CodeAK.GAkquiDat$,"000000") + STR$ (_vcodema%,"000000")
     SELECT FIRST 
     SELECT KEY scode$
     WHILE NOT EOF (GAkquiDat$) AND QuickAKMA.GAkquiDat$ = scode$
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + Nachname.GAkquiDat$ + ", " + notiz.GAkquiDat$ + " (" + STR$ (CodeAQ.GAkquiDat$,"000000") + ")"
       IF LEFT$ (entry$,1) = " " THEN ent$ = "0" ELSE ent$ = LEFT$ (entry$,1)
       entry$ = ent$ + RIGHT$ (entry$, LEN (entry$) - 1)
       Termine$(tfound%) = entry$
       REM CALL Server("LISTBOXADD",entry$)
       tfound% = tfound% + 1
       SELECT NEXT FILE GAkquiDat$ INDEX QuickAKMA.GAkquiDat$
     WEND 
     Termine$(tfound%) = ""
     caption$ = "Termine auf den Mitarbeiter und die Aktion bezogen"
   END IF 
 
   IF tfound% <> 0 THEN 
     SET STATUS "Bitte wÑhlen Sie einen Termin aus."
     CREATE DIALOG "TERLISTE",0,0,340,197,title$,"MS Sans Serif",8
     ADD DIALOG "TERLISTE",7,5,8,328,161,0,2,Termine$,Auswahl$,Termine$(0)
     ADD DIALOG "TERLISTE",1,114,174,56,16,1,"&OK",1,1
     ADD DIALOG "TERLISTE",1,174,174,56,16,0,"&Abbrechen",0,0
     DIALOG "TERLISTE",req%
     REMOVE DIALOG "TERLISTE"
     IF req% = 1 THEN 
       cuaq% = VAL ( RIGHT$ (Auswahl$(0),6))
       lastTermin% = cuaq%
     END IF 
     MENU 6,3,1
   ELSE 
     SET STATUS "Bereit"
     CALL Fehler("Es wurden keine unerledigten Termine gefunden!","")
     MENU 6,3,0
     lastTermin% = 0
   END IF 
 
 
 
 ELSE 
   IF tag$ <> "" THEN 
     IF termin.GAkquiDat$ > 1 THEN 
       SELECT KEY cuaq% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
       GErledTermin$ = erledigt_termin.GAkquiDat$
       REQUEST "Soll der aktuelle Termin auf den " + datum$,"festgesetzt werden?",130,req1%
       IF req1% = 1 THEN 
         IF termin.GAkquiDat$ > 1 AND textversch$ <> "FALSE" THEN 
           notiz.GAkquiDat$ = notiz.GAkquiDat$ + "; (verschoben am " + DATE$ ( TODAY ,"0d.mm.yyyy") + " vom " + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy") + " auf den " + DATE$ ( DAYS (datum$),"0d.mm.yyyy") + ")"
         END IF 
         Termin.GAkquiDat$ = datum$
       END IF 
     ELSE 
       GErledTermin$ = erledigt_termin.GAkquiDat$
       termin.GAkquiDat$ = datum$
       CALL QuickStore(GAkquiDat$)
       CALL SHOWCal()
       MENU OFF 
       ENTER uhrzeit.GAkquiDat$,0
       MENU ON 
     END IF 
     CALL QuickStore(GAkquiDat$)
     CALL SHOWCal()
   END IF 
 END IF 
 EXECUTE "SELECT WHERE " + cfilt$
             REM 071098
             SELECT FIRST 
 SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
 SET INDEX cindex$
 INDEX cindex$
 MOUSE ON 
 FORM 
 _cuaq% = cuaq%
 END SUB 


  
 ' Tagestermine anzeigen (Datum im Formular angeklickt)
 ' ====================================================================
 
SUB TagesTermine()
 _cuaq% = CodeAQ.GAkquiDat$
 SELECT CASE bezug%
 CASE 0
   SELECT KEY TODAY FILE GAkquiDat$ INDEX termin.GAkquiDat$
 CASE 1
   scode$ = DATE$ ( TODAY ,"0dmmyyyy") + STR$ (_vcodema%,"000000")
   SELECT KEY scode$ FILE GAkquiDat$ INDEX QuickCodeMA
 CASE 2
   scode$ = DATE$ ( TODAY ,"0dmmyyyy") + STR$ (knr%,"000000")
   SELECT KEY scode$ FILE GAkquiDat$ INDEX QuickCodeKU
 CASE 3
   scode$ = DATE$ ( TODAY ,"0dmmyyyy") + STR$ (cuak%,"000000")
   SELECT KEY scode$ FILE GAkquiDat$ INDEX QuickCodeAK
 CASE 4
   scode$ = DATE$ ( TODAY ,"0dmmyyyy") + STR$ (cuak%,"000000") + STR$ (_vcodema%,"000000")
   SELECT KEY scode$ FILE GAkquiDat$ INDEX QuickAKMA
 END SELECT 
 IF FOUND (GAkquiDat$) THEN 
   tag$ = LTRIM$ ( STR$ ( DAY ( TODAY ),"99")) + "Æ"
   GOSUB TerminListe:
 END IF 
 SELECT KEY _cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
 FORM 
 END SUB 
 
 
 
 ' Optionsauswahl Terminlisten
 ' ====================================================================
 
FUNCTION TListeOpt$(caption$)
 opt1% = 2
 opt2% = 3
 par1$ = "j"
 CREATE DIALOG "TLISTE",0,0,207,116,title$,"MS Sans Serif",8
 ADD DIALOG "TLISTE",4,0,0,206,94,0,""
 ADD DIALOG "TLISTE",5,40,11,162,9,0,"Bitte wÑhlen Sie die gewÅnschten Kategorien aus:"
 ADD DIALOG "TLISTE",9,9,14,20,21,2
 ADD DIALOG "TLISTE",4,40,22,97,61,0,"Terminart"
 ADD DIALOG "TLISTE",3,46,33,52,12,0,"alle Termine",1,opt1%
 ADD DIALOG "TLISTE",3,46,50,80,12,0,"alle offenen Termine",2,opt1%
 ADD DIALOG "TLISTE",3,46,67,87,12,0,"alle erledigten Termine",3,opt1%
 ADD DIALOG "TLISTE",4,138,22,64,61,0,"Bezug"
 ADD DIALOG "TLISTE",3,146,33,39,12,0,"gesamt",1,opt2%
 ADD DIALOG "TLISTE",3,146,44,40,12,0,"Adresse",2,opt2%
 ADD DIALOG "TLISTE",3,146,56,51,12,0,"Mitarbeiter",3,opt2%
 ADD DIALOG "TLISTE",3,146,67,51,12,0,"Aktion",4,opt2%
 ADD DIALOG "TLISTE",1,49,97,55,15,1,"&Weiter",1,1
 ADD DIALOG "TLISTE",1,105,97,55,15,0,"&Abbrechen",0,0
 DIALOG "TLISTE",req%
 REMOVE DIALOG "TLISTE"
 IF req% = 1 THEN 
   tmp$ = STR$ (opt1%,"0") + STR$ (opt2%,"0") + par1$
   TListeOpt$ = tmp$
 ELSE 
   TListeOpt$ = ""
 END IF 
 END FUNCTION 
 
 
 ' einzelner Termin
 ' ======================================================================  
SUB TerminEinzel()
   tknr% = CodeKU.GAkquiDat$
   cdir$ = DIRECTORY 
   DIRECTORY _netpath$ + "OFFICE"
   cuaq% = codeaq.GAkquiDat$
   cuak% = codeak.GAkquiDat$
   SELECT CASE GAkquiDat$
     CASE "AKQUISE"
       CALL ORep("TERMINE")
     CASE "AKQUIBCK"
       CALL ORep("TERMBC")
   END SELECT 
   
   HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
   END HEADING 
   AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
   END SELECT 
   SET QUERY ON 
   SET QUERY LOCK OFF 
   Ueberschr$ = "einzelner Termin"
  
   ON ERROR GOTO ErrTUEB
   REM -- einzelner Termin --
     SELECT ;
     WHERE codeaq.GAkquiDat$ = cuaq% AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
  
ErrTUEB: 
   ON ERROR GOTO ErrorHandler
   DIRECTORY cdir$
   CALL AKQUISEFilter()
   SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
   FORM 
 MOUSE ON 
 END SUB 
 


 ' WochenÅbersicht
 ' ======================================================================
 
SUB WOUebersicht(woche%)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 opt$ = TListeOpt$("WochenÅbersicht")
 IF opt$ <> "" THEN 
   MOUSE OFF 
   opt1% = VAL ( LEFT$ (opt$,1))
   opt2% = VAL ( MID$ (opt$,2,1))
   par1$ = RIGHT$ (opt$,1)
   tknr% = CodeKU.GAkquiDat$
   cdir$ = DIRECTORY 
   DIRECTORY _netpath$ + "OFFICE"
   cuaq% = codeaq.GAkquiDat$
   cuak% = codeak.GAkquiDat$
   SELECT CASE GAkquiDat$
     CASE "AKQUISE"
       CALL ORep("TERMINE")
     CASE "AKQUIBCK"
       CALL ORep("TERMBC")
   END SELECT 
   
   HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
   END HEADING 
   AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
   END SELECT 
   SET QUERY ON 
   SET QUERY LOCK OFF 
   Ueberschr$ = "WochenÅbersicht vom " + DATE$ (WoAnfang%(woche%)) + " bis " + DATE$ (WoAnfang%(woche%) + 7)
  
   ON ERROR GOTO ErrWOUEB
   REM -- alle Termine/gesamt --
   IF opt1% = 1 AND opt2% = 1 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
  
   REM -- alle Termine/Kunde
   IF opt1% = 1 AND opt2% = 2 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND CodeKU.GAkquiDat$ = tknr% AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
  
   REM -- alle Termine/Mitarbeiter --
   IF opt1% = 1 AND opt2% = 3 THEN 
     SELECT ;
     WHERE (Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND CodeMA.GAkquiDat$ = _vcodema%) AND (codeak.GAkquiDat$ = codeak.aktionen) AND codeku.GAkquiDat$ = codeku.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
     
   REM -- alle Termine/Aktion --
   IF opt1% = 1 AND opt2% = 4 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND CodeAK.GAkquiDat$ = cuak% AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
 
   REM ****************************
 
   REM -- offene Termine/gesamt --
   IF opt1% = 2 AND opt2% = 1 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND erledigt_Termin.GAkquiDat$ <> "j" AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
     
   REM -- erledigte Termine/gesamt --
   IF opt2% = 3 AND opt2% = 1 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND erledigt_Termin.GAkquiDat$ = "j" AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
 
   REM -- offene Termine/Kunde --
   IF opt1% = 2 AND opt2% = 2 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND erledigt_Termin.GAkquiDat$ <> "j" AND CodeKU.GAkquiDat$ = tknr% AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
  
   REM -- erledigte Termine/Kunde --
   IF opt1% = 3 AND opt2% = 2 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND erledigt_Termin.GAkquiDat$ = "j" AND CodeKU.GAkquiDat$ = tknr% AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
 
   REM -- offene Termine/Mitarbeiter --
   IF opt1% = 2 AND opt2% = 3 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND erledigt_Termin.GAkquiDat$ <> "j" AND CodeMA.GAkquiDat$ = _vcodema% AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
   
   REM -- erledigte Termine/Mitarbeiter --
   IF opt1% = 3 AND opt2% = 3 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND erledigt_Termin.GAkquiDat$ = "j" AND CodeMA.GAkquiDat$ = _vcodema% AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
 
   REM -- offene Termine/Aktion --
   IF opt1% = 2 AND opt2% = 4 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND erledigt_Termin.GAkquiDat$ <> "j" AND CodeAK.GAkquiDat$ = cuak% AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
   
   REM -- erledigte Termine/Aktion --
   IF opt1% = 3 AND opt2% = 4 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= WoAnfang%(woche%) AND Termin.GAkquiDat$ <= WoAnfang%(woche%) + 7 AND erledigt_Termin.GAkquiDat$ = "j" AND CodeAK.GAkquiDat$ = cuak% AND codeak.GAkquiDat$ = codeak.aktionen AND codeku.GAkquiDat$ = codeku.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
ErrWOUEB: 
   ON ERROR GOTO ErrorHandler
   DIRECTORY cdir$
   CALL AKQUISEFilter()
   SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
   FORM 
 END IF 
 MOUSE ON 
 END SUB 
 
 
 ' MonatsÅbersicht
 ' ====================================================================
 ' 16.02.93    - umgestellt auf allgemeine Ausgaberoutine
 ' 10.08.93    - Aufruf der allgemeinen Terminlistenroutinen
 
SUB MOUebersicht()
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 opt$ = TListeOpt$("MonatsÅbersicht")
 IF opt$ <> "" THEN 
   MOUSE OFF 
   opt1% = VAL ( LEFT$ (opt$,1))
   opt2% = VAL ( MID$ (opt$,2,1))
   par1$ = RIGHT$ (opt$,1)
   tknr% = CodeKU.GAkquiDat$
   cdir$ = DIRECTORY 
   DIRECTORY _netpath$ + "OFFICE"
   cuaq% = codeaq.GAkquiDat$
   cuak% = codeak.GAkquiDat$
   SELECT CASE GAkquiDat$
     CASE "AKQUISE"
       CALL ORep("TERMINE")
     CASE "AKQUIBCK"
       CALL ORep("TERMBC")
     CASE "AKQUI1"
       CALL ORep("TERMAD")
   END SELECT 
   
   HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
   END HEADING 
   AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
   END SELECT 
   SET QUERY ON 
   SET QUERY LOCK OFF 
   monanf% = DAYS ("1. " + monat$ + " " + jahr$)
   monende% = DAYS ("1. " + MONTH$ (monanf% + 32) + " " + STR$ ( YEAR (monanf% + 32),"9999"))
   Ueberschr$ = "MonatsÅbersicht " + monat$
 
   ON ERROR GOTO ErrMOUEB
   REM -- alle Termine/gesamt --
   IF opt1% = 1 AND opt2% = 1 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
 
   REM -- alle Termine/Kunde
   IF opt1% = 1 AND opt2% = 2 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND CodeKU.GAkquiDat$ = tknr% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
 
   REM -- alle Termine/Mitarbeiter --
   IF opt1% = 1 AND opt2% = 3 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND CodeMA.GAkquiDat$ = _vcodema% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
 
   REM -- alle Termine/Aktion --
   IF opt1% = 1 AND opt2% = 4 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND CodeAK.GAkquiDat$ = cuak% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
 
   REM -- offene Termine/gesamt --
   IF opt1% = 2 AND opt2% = 1 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND erledigt_Termin.GAkquiDat$ <> "j" AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
   
   REM -- erledigte Termine/gesamt --
   IF opt2% = 3 AND opt2% = 1 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND erledigt_Termin.GAkquiDat$ = "j" AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
 
   REM -- offene Termine/Kunde --
   IF opt1% = 2 AND opt2% = 2 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND erledigt_Termin.GAkquiDat$ <> "j" AND CodeKU.GAkquiDat$ = tknr% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
 
   REM -- erledigte Termine/Kunde --
   IF opt1% = 3 AND opt2% = 2 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND erledigt_Termin.GAkquiDat$ = "j" AND CodeKU.GAkquiDat$ = tknr% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
 
   REM -- offene Termine/Mitarbeiter --
   IF opt1% = 2 AND opt2% = 3 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND erledigt_Termin.GAkquiDat$ <> "j" AND CodeMA.GAkquiDat$ = _vcodema% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
   
   REM -- erledigte Termine/Mitarbeiter --
   IF opt1% = 3 AND opt2% = 3 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND erledigt_Termin.GAkquiDat$ = "j" AND CodeMA.GAkquiDat$ = _vcodema% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
 
    REM -- offene Termine/Aktion --
   IF opt1% = 2 AND opt2% = 4 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND erledigt_Termin.GAkquiDat$ <> "j" AND CodeAK.GAkquiDat$ = cuak% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
   
   REM -- erledigte Termine/Aktion --
   IF opt1% = 3 AND opt2% = 4 THEN 
     SELECT ;
     WHERE Termin.GAkquiDat$ >= monanf% AND Termin.GAkquiDat$ < monende% AND erledigt_Termin.GAkquiDat$ = "j" AND CodeAK.GAkquiDat$ = cuak% AND codeak.GAkquiDat$ = codeak.aktionen AND CodeKU.GAkquiDat$ = CodeKU.GAdrDat$
     ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
     TO ASK 
   END IF 
ErrMOUEB: 
   ON ERROR GOTO ErrorHandler
   DIRECTORY cdir$
   CALL AKQUISEFilter()
   SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
   FORM 
 END IF 
 MOUSE ON 
 END SUB 
 
  
 ' Termine lîschen
 ' =====================================================================
 ' 0001 10.11.92/04:30    - REMOVE FROM durch SELECT REMOVE ersetzt
 
SUB AQLoeschen()
 IF disabled%("AQLOESCHEN") THEN END SUB 
 SET STATUS "Termin lîschen"
 fooo$ = FORM 
 REQUEST "Wollen Sie den angezeigten Termin lîschen?","",130,req%
 IF req% = 1 THEN 
   MOUSE OFF 
   FILE GAkquiDat$
   _CodeAQ% = CodeAQ.GAkquiDat$
   codema% = codema.GAkquiDat$
       SELECT FIRST FILE "Supervis" INDEX codema.supervis
       SELECT KEY codema% LOCK FILE "Supervis" INDEX codema.supervis
       IF erledigt_Termin.GAkquiDat$ LIKE "j" THEN 
         AnzTermineErl.supervis = AnzTermineErl.supervis - 1
       ELSE 
         AnzTermineUnErl.supervis = AnzTermineUnErl.supervis - 1
       END IF 
       AnzTermine.supervis = AnzTermine.supervis - 1
       STORE FILE "supervis"
       UNLOCK CURRENT FILE "supervis"


   SELECT KEY _CodeAQ% LOCK FILE GAkquiDat$ INDEX CodeAQ.GAkquiDat$
   IF req% = 1 THEN 
     MOUSE OFF 
     IF EXISTS (_CodeAQ%,codeaq.tvorlage) THEN 
       REMOVE FROM FILE "TVORLAGE" WHERE Codeaq.tvorlage = _CodeAQ%
     END IF 
     SELECT REMOVE FILE GAkquiDat$
     REQUEST "Termin gelîscht !","",2
     MOUSE ON 
     cuaq% = 0
   END IF 
 END IF 
 
 SELECT CASE bezug%
 CASE 1
   IF EXISTS (_vcodema%,CodeMA.GAkquiDat$) THEN 
     CALL AKQUISEFilter()
   ELSE 
     _formend% = 1
   END IF 
 CASE 2
   IF EXISTS (knr%,CodeKU.GAkquiDat$) THEN 
     CALL AKQUISEFilter()
   ELSE 
     _formend% = 1
   END IF 
 CASE 3
   IF EXISTS (cuak%,CodeAK.GAkquiDat$) THEN 
     CALL AKQUISEFilter()
   ELSE 
     _formend% = 1
   END IF 
 CASE 4
   IF EXISTS (cuakma$,CodeAKMA.GAkquiDat$) THEN 
     CALL AKQUISEFilter()
   ELSE 
     _formend% = 1
   END IF 
 END SELECT 
 
 IF _formend% = 1 THEN 
   REQUEST "Keine weiteren Termine vorhanden!","",113
 ELSE 
   FORM 
   MOUSE ON 
 END IF 
 END SUB 
 
 
 ' Monat auswÑhlen
 ' ========================================================================
 ' 0001/16.02.93    - Monatsauswahl Åber Dialog
 
SUB AQMonat()
 SET STATUS "WÑhlen Sie einen Monat aus."
 cuaq% = codeaq.GAkquiDat$
 d$ = "MONAT"
 CREATE DIALOG d$,0,0,56,129,title$,"MS Sans Serif",8
 ADD DIALOG d$,7,0,0,55,99,0,0,monate$,monates$,monat$
 ADD DIALOG d$,1,1,101,53,12,1,"&OK",1,1
 ADD DIALOG d$,1,1,114,53,12,0,"&Abbruch",0,0
 DIALOG d$,req%
 REMOVE DIALOG d$
 IF req% = 1 THEN 
   MOUSE OFF 
   monat$ = monates$(0)
   cudat$ = "1. " + monat$ + " " + jahr$
   CALL SHOWCal()
   MOUSE ON 
 END IF 
 SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
 FORM 
 END SUB 
 
 
 ' Jahr auswÑhlen
 ' ========================================================================
 
SUB AQJahr()
 SET STATUS "Geben Sie das gewÅnschte Jahr ein."
 cuaq% = codeaq.GAkquiDat$
 _continue% = 1
 WHILE _continue% = 1
   REQUEST "Bitte das Jahr eingeben","",4,req%,jahr1$,4
   IF req% = 1 THEN 
     IF VAL (jahr1$) > 1980 AND VAL (jahr1$) < 2300 THEN 
       _continue% = 0
       MOUSE OFF 
       cudat$ = "1. " + monat$ + " " + jahr1$
       CALL SHOWCal()
       MOUSE ON 
     ELSE 
       CALL Fehler("Bitte benutzen sie die richtige Schreibweise fÅr Jahreszahlen!","Beispiel: " + STR$ ( YEAR ( TODAY ),"9999"))
     END IF 
   ELSE 
     _continue% = 0
   END IF 
 WEND 
 SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
 FORM 
 END SUB 
 
 
 ' Anzeige der offenen(unerledigten) Termine
 ' ===========================================================================
 
SUB AQTermineO()
 SET STATUS "Auflistung offener Termine"
 MOUSE OFF 
 cfilt$ = WHERE 
 _cuaq% = CodeAQ.GAkquiDat$
 _cuma% = CodeMA.GAkquiDat$
 _cuku% = CodeKU.GAkquiDat$
 _cuak% = CodeAK.GAkquiDat$
 IF ( MOD (GAkquiDat$) OR NEW (GAkquiDat$)) AND notiz.GAkquiDat$ <> "" THEN CALL FStore(GAkquiDat$)
 REM ** Akquise-Filter kurzristig aufheben
 SELECT WHERE FILE GAkquiDat$
 tfound% = 0
 REM ** Termine$() Grî·e anpassen und lîschen
 IF RECCOUNT (GAkquiDat$) < 23000 THEN 
   REDIM Termine$( RECCOUNT (GAkquiDat$))
 ELSE 
   REDIM Termine$(23000)
 END IF 
 REM b% = RECCOUNT (GAkquiDat$)
 REM FOR a% = 0 TO b%:Termine$(a%) = "":NEXT a%
 
 REM ** Bezug ermitteln, Suchvariablen setzen
 SELECT CASE bezug%
 CASE 1
   REM ** Bezug Mitarbeiter **
   qindex$ = "QuickMADat"
   qfield$ = "CodeMA"
   SELECT KEY _cuma% FILE "SUPERVIS" INDEX CodeMA.SUPERVIS
   caption$ = "Mitarbeiter: " + Nachname.SUPERVIS + ", " + LEFT$ (Vorname.SUPERVIS,1) + "."
 CASE 2
   REM ** Bezug Adresse **
   qindex$ = "QuickKUDat"
   qfield$ = "CodeKU"
   SELECT KEY _cuku% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
   caption$ = "Adresse: " + Nachname.GAdrDat$ + ", " + LEFT$ (Vorname.GAdrDat$,1) + "."
 CASE 3
   REM ** Bezug Aktionen **
   qindex$ = "QuickAKDat"
   qfield$ = "CodeAK"
   SELECT KEY _cuak% FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
   caption$ = "Aktion: " + Bezeichnung.AKTIONEN
 CASE 4
   REM ** Bezug Mitarbeiter/Aktion **
   qindex$ = "QuickAKMADat"
   REM qfield$ = "CodeAK"
   SELECT KEY _cuak% FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
   SELECT KEY _cuma% FILE "SUPERVIS" INDEX CodeMA.SUPERVIS
   caption$ = "Mitarbeiter: " + Nachname.SUPERVIS + ", " + LEFT$ (Vorname.SUPERVIS,1) + "., Aktion: " + Bezeichnung.AKTIONEN
 END SELECT 
 
 IF bezug% = 4 THEN 
   scode$ = STR$ (_cuak%,"000000") + STR$ (_cuma%,"000000") + "N"
   tfilter$ = scode$
   FILE GAkquiDat$
   INDEX qindex$$
   SELECT FIRST 
   SELECT KEY scode$ FILE GAkquiDat$ INDEX qindex$$
   tfound% = 0
   SET STATUS "Durchsuche Termindatei..."
   WHILE NOT EOF (GAkquiDat$) AND UCASE$ (qindex$$) LIKE UCASE$ (tfilter$) + "*"
     IF Termin.GAkquiDat$ <= TODAY THEN 
       ok% = 1
       SELECT KEY codeku.GAkquiDat$ FILE GAdrDat$ INDEX codeku.GAdrDat$
       IF bezug% = 4 AND CodeMA.GAkquiDat$ <> _cuma% THEN ok% = 0
       nnn$ = LEFT$ ( TRIM$ (notiz.GAkquiDat$),100)
 IF ok% = 1 THEN Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + LEFT$ ( TRIM$ (nachname.GAdrDat$)) + "/" + LEFT$ ( TRIM$ (vorname.GAdrDat$)) + " ;" + nnn$ + SPACE$ (120) + STR$ (CodeAQ.GAkquiDat$,"000000")
       tfound% = tfound% + 1
     END IF 
     SELECT NEXT FILE GAkquiDat$ INDEX qindex$$
   WEND 
   Termine$(tfound%) = ""
 END IF 
 REM 020398
 IF bezug% <> 4 THEN 
   tfilter% = qfield$$
   scode$ = STR$ (qfield$$,"000000") + "N"
   FILE GAkquiDat$
   INDEX qindex$$
   SELECT FIRST 
   SELECT KEY scode$ FILE GAkquiDat$ INDEX qindex$$
   tfound% = 0
   SET STATUS "Durchsuche Termindatei..."
   WHILE NOT EOF (GAkquiDat$) AND qfield$$ = tfilter% AND UCASE$ (erledigt_Termin.GAkquiDat$) = "N"
     IF Termin.GAkquiDat$ <= TODAY THEN 
       ok% = 1
       SELECT KEY codeku.GAkquiDat$ FILE GAdrDat$ INDEX codeku.GAdrDat$
       IF bezug% = 4 AND CodeMA.GAkquiDat$ <> _cuma% THEN ok% = 0
       IF ok% = 1 THEN 
         datumz$ = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "-" + TIME$ (Uhrzeit.GAkquiDat$,"hh:mm")
 Termine$(tfound%) = datumz$ + "; " + LEFT$ ( TRIM$ (nachname.GAdrDat$)) + "/" + LEFT$ ( TRIM$ (vorname.GAdrDat$)) + " ;" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (120) + STR$ (CodeAQ.GAkquiDat$,"000000")
 
       END IF 
       tfound% = tfound% + 1
     END IF 
     SELECT NEXT FILE GAkquiDat$ INDEX qindex$$
   WEND 
   Termine$(tfound%) = ""
 END IF 
 
 ok% = 0
 IF tfound% <> 0 THEN 
   SET STATUS "Bitte wÑhlen Sie einen Termin aus."
   CREATE DIALOG "TERLISTE",0,0,440,297,title$,"MS Sans Serif",8
   ADD DIALOG "TERLISTE",7,5,8,428,261,0,2,Termine$,Auswahl$,Termine$(0)
   ADD DIALOG "TERLISTE",1,164,274,56,16,1,"&OK",1,1
   ADD DIALOG "TERLISTE",1,244,274,56,16,0,"&Abbrechen",0,0
   DIALOG "TERLISTE",req%
   REMOVE DIALOG "TERLISTE"
   IF req% = 1 THEN 
     ok% = 1
     _cuaq% = VAL ( RIGHT$ (Auswahl$(0),6))
     lastTermin% = _cuaq%
   END IF 
   MENU 6,3,1
 ELSE 
   SET STATUS "Bereit"
   CALL Fehler("Es wurden keine unerledigten Termine gefunden!","")
   MENU 6,3,0
   lastTermin% = 0
 END IF 
 SET STATUS "Bereit"
 cuaq% = _cuaq%
 IF ok% = 1 THEN 
   REM EXECUTE "SELECT WHERE " + cfilt$
   REM SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
   REM 071098
   REM SELECT FIRST 
 END IF 
 CALL AQButtUpdate()
 SELECT FORM KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 MOUSE ON 
 END SUB 
 
 
 ' letzte Ergebnisliste von AQTermineO erneut anzeigen
 ' ===========================================================================
 
SUB AQTermineO2()
 MOUSE OFF 
 _cuaq% = CodeAQ.GAkquiDat$
 IF LastTermin% <> 0 THEN 
   prompt% = 0
   FOR a% = 0 TO tfound%
     IF Termine$(a%) <> "" AND VAL ( RIGHT$ (Termine$(a%),6)) = LastTermin% THEN 
       IF prompt% = 0 THEN prompt% = a%
     END IF 
   NEXT a%
   CREATE DIALOG "TERLISTE",0,0,440,297,title$,"MS Sans Serif",8
   ADD DIALOG "TERLISTE",7,5,8,428,261,0,2,Termine$,Auswahl$,Termine$(prompt%)
   ADD DIALOG "TERLISTE",1,164,274,56,16,1,"&OK",1,1
   ADD DIALOG "TERLISTE",1,234,274,56,16,0,"&Abbrechen",0,0
   DIALOG "TERLISTE",req%
   MOUSE ON 
   REMOVE DIALOG "TERLISTE"
   IF req% = 1 THEN 
     _cuaq% = VAL ( RIGHT$ (Auswahl$(0),6))
     lastTermin% = _cuaq%
   END IF 
   MENU 6,3,1
 ELSE 
   CALL Fehler("Es wurden keine unerledigten Termine gefunden!","")
   MENU 6,3,0
   lastTermin% = 0
 END IF 
 cuaq% = _cuaq%
 CALL AQButtUpdate()
 SELECT FORM KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 MOUSE ON 
 END SUB 
  
 
 ' Anzeige der geplanten Termine
 ' ===========================================================================
 ' 23.02.2000  
 
SUB AQTermineP()
 SET STATUS "Auflistung Terminplan"
 MOUSE OFF 
 cfilt$ = WHERE 
 _cuaq% = CodeAQ.GAkquiDat$
 _cuma% = CodeMA.GAkquiDat$
 _cuku% = CodeKU.GAkquiDat$
 _cuak% = CodeAK.GAkquiDat$
 IF ( MOD (GAkquiDat$) OR NEW (GAkquiDat$)) AND notiz.GAkquiDat$ <> "" THEN CALL FStore(GAkquiDat$)
 REM ** Akquise-Filter kurzristig aufheben
 SELECT WHERE FILE GAkquiDat$
 tfound% = 0
 REM ** Termine$() Grî·e anpassen und lîschen
 IF RECCOUNT (GAkquiDat$) < 23000 THEN 
   REDIM Termine$( RECCOUNT (GAkquiDat$))
 ELSE 
   REDIM Termine$(23000)
 END IF 
 REM b% = RECCOUNT (GAkquiDat$)
 REM FOR a% = 0 TO b%:Termine$(a%) = "":NEXT a%
 
 REM ** Bezug ermitteln, Suchvariablen setzen
 SELECT CASE bezug%
 CASE 1
   REM ** Bezug Mitarbeiter **
   qindex$ = "QuickMADat"
   qfield$ = "CodeMA"
   SELECT KEY _cuma% FILE "SUPERVIS" INDEX CodeMA.SUPERVIS
   caption$ = "Mitarbeiter: " + Nachname.SUPERVIS + ", " + LEFT$ (Vorname.SUPERVIS,1) + "."
 CASE 2
   REM ** Bezug Adresse **
   qindex$ = "QuickKUDat"
   qfield$ = "CodeKU"
   SELECT KEY _cuku% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
   caption$ = "Adresse: " + Nachname.GAdrDat$ + ", " + LEFT$ (Vorname.GAdrDat$,1) + "."
 CASE 3
   REM ** Bezug Aktionen **
   qindex$ = "QuickAKDat"
   qfield$ = "CodeAK"
   SELECT KEY _cuak% FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
   caption$ = "Aktion: " + Bezeichnung.AKTIONEN
 CASE 4
   REM ** Bezug Mitarbeiter/Aktion **
   qindex$ = "QuickAKMADat"
   REM qfield$ = "CodeAK"
   SELECT KEY _cuak% FILE "AKTIONEN" INDEX CodeAK.AKTIONEN
   SELECT KEY _cuma% FILE "SUPERVIS" INDEX CodeMA.SUPERVIS
   caption$ = "Mitarbeiter: " + Nachname.SUPERVIS + ", " + LEFT$ (Vorname.SUPERVIS,1) + "., Aktion: " + Bezeichnung.AKTIONEN
 END SELECT 
 
 IF bezug% = 4 THEN 
   scode$ = STR$ (_cuak%,"000000") + STR$ (_cuma%,"000000") + "N"
   tfilter$ = scode$
   FILE GAkquiDat$
   INDEX qindex$$
   SELECT FIRST 
   SELECT KEY scode$ FILE GAkquiDat$ INDEX qindex$$
   tfound% = 0
   SET STATUS "Durchsuche Termindatei..."
   WHILE NOT EOF (GAkquiDat$) AND UCASE$ (qindex$$) LIKE UCASE$ (tfilter$) + "*"
     IF Termin.GAkquiDat$ >= TODAY THEN 
       ok% = 1
       SELECT KEY codeku.GAkquiDat$ FILE GAdrDat$ INDEX codeku.GAdrDat$
       IF bezug% = 4 AND CodeMA.GAkquiDat$ <> _cuma% THEN ok% = 0
       IF ok% = 1 THEN 
         Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + LEFT$ ( TRIM$ (nachname.GAdrDat$)) + "/" + LEFT$ ( TRIM$ (vorname.GAdrDat$)) + " ;" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (120) + STR$ (CodeAQ.GAkquiDat$,"000000")
         tfound% = tfound% + 1
       END IF 
     END IF 
     SELECT NEXT FILE GAkquiDat$ INDEX qindex$$
   WEND 
   Termine$(tfound%) = ""
 END IF 
 REM 020398
 IF bezug% <> 4 THEN 
   tfilter% = qfield$$
   scode$ = STR$ (qfield$$,"000000") + "N"
   FILE GAkquiDat$
   INDEX qindex$$
   SELECT FIRST 
   SELECT KEY scode$ FILE GAkquiDat$ INDEX qindex$$
   tfound% = 0
   SET STATUS "Durchsuche Termindatei..."
   WHILE NOT EOF (GAkquiDat$) AND qfield$$ = tfilter% AND UCASE$ (erledigt_Termin.GAkquiDat$) = "N"
     IF Termin.GAkquiDat$ >= TODAY THEN 
       ok% = 1
       SELECT KEY codeku.GAkquiDat$ FILE GAdrDat$ INDEX codeku.GAdrDat$
       IF bezug% = 4 AND CodeMA.GAkquiDat$ <> _cuma% THEN ok% = 0
       IF ok% = 1 THEN 
         datumz$ = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "-" + TIME$ (Uhrzeit.GAkquiDat$,"hh:mm")
 Termine$(tfound%) = datumz$ + "; " + LEFT$ ( TRIM$ (nachname.GAdrDat$)) + "/" + LEFT$ ( TRIM$ (vorname.GAdrDat$)) + " ;" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (120) + STR$ (CodeAQ.GAkquiDat$,"000000")
 
       END IF 
       tfound% = tfound% + 1
     END IF 
     SELECT NEXT FILE GAkquiDat$ INDEX qindex$$
   WEND 
   Termine$(tfound%) = ""
 END IF 
 
 ok% = 0
 IF tfound% <> 0 THEN 
   SET STATUS "Bitte wÑhlen Sie einen Termin aus!"
   CREATE DIALOG "TERLISTE",0,0,440,297,title$,"MS Sans Serif",8
   ADD DIALOG "TERLISTE",7,5,8,428,261,0,2,Termine$,Auswahl$,Termine$(0)
   ADD DIALOG "TERLISTE",1,164,274,56,16,1,"&OK",1,1
   ADD DIALOG "TERLISTE",1,244,274,56,16,0,"&Abbrechen",0,0
   DIALOG "TERLISTE",req%
   REMOVE DIALOG "TERLISTE"
   IF req% = 1 THEN 
     ok% = 1
     _cuaq% = VAL ( RIGHT$ (Auswahl$(0),6))
     lastTermin% = _cuaq%
   END IF 
   MENU 6,3,1
 ELSE 
   SET STATUS "Bereit"
   CALL Fehler("Es wurden keine unerledigten Termine gefunden!","")
   MENU 6,3,0
   lastTermin% = 0
 END IF 
 SET STATUS "Bereit"
 cuaq% = _cuaq%
 IF ok% = 1 THEN 
   REM EXECUTE "SELECT WHERE " + cfilt$
   REM SELECT FORM KEY cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
   REM 071098
   REM SELECT FIRST 
 END IF 
 CALL AQButtUpdate()
 SELECT FORM KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 MOUSE ON 
 END SUB 
 



SUB AQTerminePO()
 SET STATUS "Auflistung der Termine"
 MOUSE OFF 
 cfilt$ = WHERE 
 cuaq% = codeaq.GAkquiDat$
 codeakma$ = CodeAKMA.GAkquiDat$
 IF ( MOD ("") OR NEW ("")) AND notiz.GAkquiDat$ <> "" THEN CALL FStore(GAkquiDat$)
 zwi33% = TODAY 
 aqnr% = cuaq%
 SELECT WHERE FILE GAkquiDat$
 aqnr% = 0
 IF bezug% = 1 THEN 
   REQUEST "kommende Termine (Mitarbeiterbezogen)","lfd.Nr, Termin, Adresse",25,req%,aqnr%,72,codeaq,termin,nachname,notiz INDEX termin WHERE codema = _vcodema% AND termin >= zwi33% AND erledigt_termin <> "j"
 END IF 
 IF bezug% = 2 THEN 
   REQUEST "kommende Termine (Adressenbezogen)","lfd.Nr, Termin, Adresse",25,req%,aqnr%,72,codeaq,termin,nachname,notiz INDEX termin WHERE termin >= zwi33% AND codeku = knr% AND erledigt_Termin <> "j"
 END IF 
 IF bezug% = 3 THEN 
   REQUEST "kommende Termine (Aktionsbezogen)","lfd.Nr, Termin, Adresse",25,req%,aqnr%,72,codeaq,termin,nachname,notiz INDEX termin WHERE termin >= zwi33% AND codeak = cuak% AND erledigt_Termin <> "j"
 END IF 
 IF bezug% = 4 THEN 
   REQUEST "kommende Termine (Mitarbeiter+Aktionsbezogen)","lfd.Nr, Termin, Adresse",25,req%,aqnr%,72,codeaq,termin,nachname,notiz INDEX termin WHERE termin >= zwi33% AND CodeAKMA.GAkquiDat$ = codeakma$ AND erledigt_Termin <> "j"
 END IF 
 IF req% = 1 THEN cuaq% = aqnr%
 REM SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
 EXECUTE "SELECT WHERE " + cfilt$
             REM 071098
             SELECT FIRST 
 SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
 FORM 
 
 CALL AQButtUpdate()
 MOUSE ON 
 END SUB 
 
SUB AQTerminListe()
 SET STATUS "Auflistung aller Termine"
 MOUSE OFF 
 cfilt$ = WHERE 
 cuaq% = codeaq.GAkquiDat$
 IF ( MOD ("") OR NEW ("")) AND notiz.GAkquiDat$ <> "" THEN CALL FStore(GAkquiDat$)
 REM aqnr% = cuaq%
 aqnr% = 0
 codema% = codema.GAkquiDat$
 knr% = CodeKU.GAkquiDat$
 cuak% = CodeAK.GAkquiDat$
 codeakma$ = CodeAKMA.GAkquiDat$
 SELECT WHERE FILE GAkquiDat$
 IF bezug% = 1 THEN 
   REQUEST "Termine (Mitarbeiterbezogen)","lfd.Nr, Termin, Adresse",25,req%,aqnr%,72,codeaq,termin,nachname,notiz INDEX termin WHERE codema = codema%
 END IF 
 IF bezug% = 2 THEN 
   REQUEST "Termine (Adressenbezogen)","lfd.Nr, Termin, Adresse",25,req%,aqnr%,72,codeaq,termin,notiz INDEX termin WHERE codeku = knr%
 END IF 
 IF bezug% = 3 THEN 
   REQUEST "Termine (Aktionsbezogen)","lfd.Nr, Termin, Adresse",25,req%,aqnr%,72,codeaq,termin,nachname,notiz INDEX termin WHERE codeak = cuak%
 END IF 
  IF bezug% = 4 THEN 
   REQUEST "Termine (Mitarbeiter+Aktionsbezogen)","lfd.Nr, Termin, Adresse",25,req%,aqnr%,72,codeaq,termin,nachname,notiz INDEX termin WHERE CodeAKMA.GAkquiDat$ = codeakma$
 END IF 
 
 IF req% = 1 THEN cuaq% = aqnr%
 SELECT FORM KEY cuaq% INDEX codeaq.GAkquiDat$
 EXECUTE "SELECT WHERE " + cfilt$
             REM 071098
             REM SELECT FIRST 
 CALL AQButtUpdate()
 MOUSE ON 
 END SUB 
 
  
 
 
 
 ' Test auf Eingabefehler bei Termin
 ' ===========================================================================
 
 
SUB AQTerminTest()
 IF ABS ( TODAY - DAYS (termin.GAkquiDat$)) > 181 THEN 
   REM CALL Fehler("Hinweis:","Der eingegebene Termin entspricht einer Zeitspanne > 6 Monate")
 END IF 
 END SUB 
  
 
 ' Test auf Eingabefehler bei Termin
 ' ===========================================================================
 
SUB AQDatumTest()
 IF ABS ( TODAY - DAYS (datum.GAkquiDat$)) > 181 THEN 
   REM CALL Fehler("Hinweis:","Das eingegebene Datum entspricht einer Zeitspanne > 6 Monate")
 END IF 
 END SUB 
 
 
 ' Registrierung von Terminen
 ' ===========================================================================
  
SUB AQRegister()
 cfile$ = FILE 
 cc% = codeku.dokument
 SELECT KEY cc% FILE GADRDat$ INDEX codeku.GadrDat$
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 DIM Aktionen$(300)
 FILE "AKTIONEN"
 INDEX CodeAK
 SELECT FIRST 
 a% = - 1
 WHILE NOT EOF ("AKTIONEN")
   a% = a% + 1
   Aktionen$(a%) = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
   SELECT NEXT 
 WEND 
 SELECT KEY 1
 Aktion$ = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
 DIM Mitarbeiter$(300)
 FILE "SUPERVIS"
 INDEX CodeMA
 SELECT FIRST 
 a% = - 1
 WHILE NOT EOF ("SUPERVIS")
   a% = a% + 1
   Mitarbeiter$(a%) = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
   SELECT NEXT 
 WEND 
 SELECT FIRST FILE "SUPERVIS" INDEX CodeMA.supervis
 SELECT KEY GMAcodeMA% FILE "SUPERVIS" INDEX CodeMA.supervis
 MANachname$ = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
 datum$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 Termin$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 Nachname$ = Nachname.GAdrDat$
 Vorname$ = Vorname.GAdrDat$
 Stra·e$ = Stra·e.GAdrDat$
 Ort$ = PLZ.GAdrDat$ + " " + Ort.GAdrDat$
 tmpku% = CodeKU.GAdrDat$
 REM RNotiz$ = ""
    DIM dlg AS Dialog
    DIM control AS DialogControl
 ON ERROR GOTO dokt140420001 
   GOTO dokt140420002
dokt140420001: 
   CALL Fehler("Die Werte fÅr Datum oder Uhrzeit scheinen falsch zu sein!","Bitte prÅfen")
dokt140420002: 
    Superbase.Dialogs.Add("AQREGISTER")
    SET dlg = Superbase.Dialogs.AQREGISTER
    dlg.Move(0,0,354,235)
    dlg.Caption = title$
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(5,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Datum$"
 
    SET control = dlg.Add("DialogTextBox2","DialogTextBox")
    control.Move(49,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Termin$"
 
    SET control = dlg.Add("DialogTextBox3","DialogTextBox")
    control.Move(93,8,25,12)
    control.MaxLength = 5
    control.TextBinding = "Zeit$"
 
    SET control = dlg.Add("DialogTextBox4","DialogTextBox")
    control.Move(130,8,24,12)
    control.MaxLength = 5
    control.TextBinding = "Dauer$"
    IF GADRDat$ LIKE "ADRESSEN" THEN 
      SET control = dlg.Add("DialogTextBox6","DialogTextBox")
      control.Move(185,8,40,12)
      control.MaxLength = 10
      control.TextBinding = "VTermin$"
 
      SET control = dlg.Add("DialogTextBox7","DialogTextBox")
      control.Move(235,8,25,12)
      control.MaxLength = 5
      control.TextBinding = "VZeit$"
    END IF 
    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(130,22,28,11)
    control.Caption = "Dauer"
    IF GADRDat$ LIKE "ADRESSEN" THEN 
      SET control = dlg.Add("DialogLabel19","DialogLabel")
      control.Move(185,22,45,13)
      control.Caption = "Vorlagetermin"
 
      SET control = dlg.Add("DialogLabel20","DialogLabel")
      control.Move(235,22,54,13)
      control.Caption = "Vorlagezeit"
    END IF 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(5,22,32,13)
    control.Caption = "Datum"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(49,22,28,13)
    control.Caption = "Termin"
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(93,22,28,13)
    control.Caption = "Uhrzeit"
 
    SET control = dlg.Add("DialogLabel5","DialogLabel")
    control.Move(5,36,123,12)
    control.Caption = "Zuordnung zur Aktion"
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(186,44,160,81)
    control.Caption = "Adresse"
 
    SET control = dlg.Add("DialogLabel8","DialogLabel")
    control.Move(190,59,39,12)
    control.Caption = "Nachname"
 
    SET control = dlg.Add("DialogLabel14","DialogLabel")
    control.Move(230,59,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Nachname$"
 
    SET control = dlg.Add("DialogLabel9","DialogLabel")
    control.Move(190,69,32,12)
    control.Caption = "Vorname"
 
    SET control = dlg.Add("DialogLabel15","DialogLabel")
    control.Move(230,69,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Vorname$"
 
    SET control = dlg.Add("DialogLabel10","DialogLabel")
    control.Move(190,79,24,12)
    control.Caption = "Stra·e"
 
    SET control = dlg.Add("DialogLabel16","DialogLabel")
    control.Move(230,79,116,12)
    control.CaptionBinding = "Stra·e$"
 
    SET control = dlg.Add("DialogLabel11","DialogLabel")
    control.Move(190,89,19,12)
    control.Caption = "Ort"
 
    SET control = dlg.Add("DialogLabel17","DialogLabel")
    control.Move(230,89,116,12)
    control.CaptionBinding = "Ort$"
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(190,104,152,14)
    control.Caption = "Auswahl"
    control.ReturnValue = 2
 
    SET control = dlg.Add("DialogComboBox1","DialogComboBox")
    control.Move(5,46,169,83)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Aktionen$","Aktion$")
 
    SET control = dlg.Add("DialogLabel6","DialogLabel")
    control.Move(5,65,139,8)
    control.Caption = "Eintragen in den Kalender des Mitarbeiters"
 
    SET control = dlg.Add("DialogComboBox2","DialogComboBox")
    control.Move(5,76,169,90)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Mitarbeiter$","MANachname$")
 
    SET control = dlg.Add("DialogLabel7","DialogLabel")
    control.Move(5,96,139,8)
    control.Caption = "Notiz"
 
    SET control = dlg.Add("DialogTextBox5","DialogTextBox")
    control.Move(5,105,169,128)
    control.MultiLine = 1
    control.ScrollBars = 2
    control.MaxLength = 4000
    control.TextBinding = "RNotiz$"
 
    SET control = dlg.Add("DialogLabel12","DialogLabel")
    control.Move(186,133,162,29)
    control.Caption = "Wenn Sie diesen Termin nur zu Informationszwecken aufnehmen mîchten, markieren Sie bitte die Option 'Termin erledigt'."
 
    SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
    control.Move(186,165,76,12)
    control.Caption = "Termin erledigt"
    control.Bind("Terminerl$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel13","DialogLabel")
    control.Move(186,178,159,37)
    control.Caption = "Nach BetÑtigung der SchaltflÑche 'OK' wird der Eintrag in der Termindatei erzeugt."
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(186,217,78,15)
    control.Default = 1
    control.Caption = "&OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
    control.Move(268,217,78,15)
    control.Caption = "&Abbrechen"
    control.ReturnValue = 0
    control.Cancel = 1
 
 _ok% = 0
 WHILE _ok% = 0
   DIALOG "AQREGISTER",req%
   IF req% = 2 THEN 
     kunr% = ADRSuche%(0)
     IF kunr% <> 0 THEN 
       SELECT KEY kunr% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
       Nachname$ = Nachname.GAdrDat$
       Vorname$ = Vorname.GAdrDat$
       Stra·e$ = Stra·e.GAdrDat$
       Ort$ = PLZ.GAdrDat$ + " " + Ort.GAdrDat$
       tmpku% = CodeKU.GAdrDat$
     END IF 
   END IF 
   IF req% = 0 THEN _ok% = 2
   IF req% = 1 THEN _ok% = 1
 WEND 
 REMOVE DIALOG "AQREGISTER"
 IF _ok% = 1 THEN 
   FILE GAkquiDat$
   BLANK 
   cuaq% = SER (GAkquiDat$,1)
   codeaq.GAkquiDat$ = cuaq%
   codeKU.GAkquiDat$ = tmpku%
   CodeAK.GAkquiDat$ = VAL ( MID$ (Aktion$, LEN (Aktion$) - 6,6))
   CodeMA.GAkquiDat$ = VAL ( MID$ (MANachname$, LEN (MANachname$) - 6,6))
   SELECT KEY tmpku% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
   nachname.GAkquiDat$ = LEFT$ ( TRIM$ (nachname.GAdrDat$) + "," + TRIM$ (vorname.GadrDat$),100)
   Wertung.GAkquiDat$ = 0
   Datum.GAkquiDat$ = Datum$
   Uhrzeit.GAkquiDat$ = zeit$
   Dauer.GAkquiDat$ = VAL (dauer$)
   CodeDOK.GAkquiDat$ = 0
   ErDatum.GAkquiDat$ = VTermin$
   ErZeit.GAkquiDat$ = VZeit$
   SELECT KEY codema.GAkquiDat$ LOCK FILE "supervis" INDEX codema.supervis
   Bearbeiter.GAkquiDat$ = nachname.supervis
   AnzTermine.supervis = AnzTermine.supervis + 1
   IF Terminerl$ LIKE "j" THEN 
     AnzTermineErl.supervis = AnzTermineErl.supervis + 1
   ELSE 
     AnzTermineUnErl.supervis = AnzTermineUnErl.supervis + 1
   END IF 
   STORE FILE "supervis"
   UNLOCK CURRENT FILE "Supervis"
   IF PROJECTJN$ = "TRUE" THEN 
     codepr.GAkquiDat$ = codeprdok%
     projekt.GAkquiDat$ = projektdok$
     codeprdok% = 0
     projektdok$ = ""
   END IF 
   notiz.GAkquiDat$ = rnotiz$
   termin.GAkquiDat$ = Termin$
   erledigt_Termin.GAkquiDat$ = Terminerl$
   TerminNr.GAkquiDat$ = AnzTermine.supervis
   REM 01032001
   GErledTermin$ = Terminerl$
   CALL FStore(GAkquiDat$)
 END IF 
 FILE cfile$
 ON ERROR GOTO ErrorHandler
 MOUSE ON 
 END SUB 
 
SUB AQVRegister()
 cfile$ = FILE 
 cc% = codeku.kvertrag
 SELECT KEY cc% FILE GADRDat$ INDEX codeku.GadrDat$
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 DIM Aktionen$(300)
 FILE "AKTIONEN"
 INDEX CodeAK
 SELECT FIRST 
 a% = - 1
 WHILE NOT EOF ("AKTIONEN")
   a% = a% + 1
   Aktionen$(a%) = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
   SELECT NEXT 
 WEND 
 SELECT KEY 1
 Aktion$ = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
 DIM Mitarbeiter$(300)
 FILE "SUPERVIS"
 INDEX CodeMA
 SELECT FIRST 
 a% = - 1
 WHILE NOT EOF ("SUPERVIS")
   a% = a% + 1
   Mitarbeiter$(a%) = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
   SELECT NEXT 
 WEND 
 IF codema.kvertrag > 0 THEN 
   SELECT FIRST FILE "maadr" INDEX codema.maadr
   SELECT KEY codema.kvertrag FILE "MAADR" INDEX codema.maadr
   Vermittler$ = Vorname.maadr + "," + Nachname.Maadr + "," + Agenturnr.maadr
 ELSE 
   Vermittler$ = "<ohne Zuordnung>"
 END IF 
 SELECT FIRST FILE "SUPERVIS" INDEX CodeMA.supervis
 SELECT KEY GMAcodeMA% FILE "SUPERVIS" INDEX CodeMA.supervis
 MANachname$ = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
 datum$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 Termin$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 Nachname$ = Nachname.GAdrDat$
 Vorname$ = Vorname.GAdrDat$
 Stra·e$ = Stra·e.GAdrDat$
 Ort$ = PLZ.GAdrDat$ + " " + Ort.GAdrDat$
 tmpku% = CodeKU.GAdrDat$
 RNotiz$ = "VS_Nr: " + VS_NR.Kvertrag + CHR$ (13) + CHR$ (10)
 RNotiz$ = RNotiz$ + "Gesellschaft: " + Gesellschaft.Kvertrag + CHR$ (13) + CHR$ (10)
 RNotiz$ = RNotiz$ + "Sparte: " + Sparte.Kvertrag + CHR$ (13) + CHR$ (10)
 IF codetarif.kvertrag > 0 THEN 
   RNotiz$ = RNotiz$ + "Tarif: " + Tariffo.Kvertrag + CHR$ (13) + CHR$ (10)
 END IF 
 RNotiz$ = RNotiz$ + "Vermittler: " + Vermittler$ + CHR$ (13) + CHR$ (10)
 RNotiz$ = RNotiz$ + "Antragsdatum: " + DATE$ (Antragsdatum.Kvertrag,"0d.mm.yyyy") + CHR$ (13) + CHR$ (10)
 RNotiz$ = RNotiz$ + "Beginn: " + DATE$ (VS_Beginn.Kvertrag,"0d.mm.yyyy") + CHR$ (13) + CHR$ (10)
 RNotiz$ = RNotiz$ + LTRIM$ ("Beitrag: " + STR$ (Beitrag.Kvertrag,",999999.00")) + CHR$ (13) + CHR$ (10)
    DIM dlg AS Dialog
    DIM control AS DialogControl
 ON ERROR GOTO dokt290320041
   GOTO dokt290320042
dokt290320041: 
   CALL Fehler("Die Werte fÅr Datum oder Uhrzeit scheinen falsch zu sein!","Bitte prÅfen")
dokt290320042: 
    Superbase.Dialogs.Add("AQREGISTER")
    SET dlg = Superbase.Dialogs.AQREGISTER
    dlg.Move(0,0,354,235)
    dlg.Caption = title$
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(5,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Datum$"
 
    SET control = dlg.Add("DialogTextBox2","DialogTextBox")
    control.Move(49,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Termin$"
 
    SET control = dlg.Add("DialogTextBox3","DialogTextBox")
    control.Move(93,8,25,12)
    control.MaxLength = 5
    control.TextBinding = "Zeit$"
 
    SET control = dlg.Add("DialogTextBox4","DialogTextBox")
    control.Move(130,8,24,12)
    control.MaxLength = 5
    control.TextBinding = "Dauer$"
    IF GADRDat$ LIKE "ADRESSEN" THEN 
      SET control = dlg.Add("DialogTextBox6","DialogTextBox")
      control.Move(185,8,40,12)
      control.MaxLength = 10
      control.TextBinding = "VTermin$"
 
      SET control = dlg.Add("DialogTextBox7","DialogTextBox")
      control.Move(235,8,25,12)
      control.MaxLength = 5
      control.TextBinding = "VZeit$"
    END IF 
    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(130,22,28,11)
    control.Caption = "Dauer"
    IF GADRDat$ LIKE "ADRESSEN" THEN 
      SET control = dlg.Add("DialogLabel19","DialogLabel")
      control.Move(185,22,45,13)
      control.Caption = "Vorlagetermin"
 
      SET control = dlg.Add("DialogLabel20","DialogLabel")
      control.Move(235,22,54,13)
      control.Caption = "Vorlagezeit"
    END IF 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(5,22,32,13)
    control.Caption = "Datum"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(49,22,28,13)
    control.Caption = "Termin"
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(93,22,28,13)
    control.Caption = "Uhrzeit"
 
    SET control = dlg.Add("DialogLabel5","DialogLabel")
    control.Move(5,36,123,12)
    control.Caption = "Zuordnung zur Aktion"
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(186,44,160,81)
    control.Caption = "Adresse"
 
    SET control = dlg.Add("DialogLabel8","DialogLabel")
    control.Move(190,59,39,12)
    control.Caption = "Nachname"
 
    SET control = dlg.Add("DialogLabel14","DialogLabel")
    control.Move(230,59,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Nachname$"
 
    SET control = dlg.Add("DialogLabel9","DialogLabel")
    control.Move(190,69,32,12)
    control.Caption = "Vorname"
 
    SET control = dlg.Add("DialogLabel15","DialogLabel")
    control.Move(230,69,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Vorname$"
 
    SET control = dlg.Add("DialogLabel10","DialogLabel")
    control.Move(190,79,24,12)
    control.Caption = "Stra·e"
 
    SET control = dlg.Add("DialogLabel16","DialogLabel")
    control.Move(230,79,116,12)
    control.CaptionBinding = "Stra·e$"
 
    SET control = dlg.Add("DialogLabel11","DialogLabel")
    control.Move(190,89,19,12)
    control.Caption = "Ort"
 
    SET control = dlg.Add("DialogLabel17","DialogLabel")
    control.Move(230,89,116,12)
    control.CaptionBinding = "Ort$"
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(190,104,152,14)
    control.Caption = "Auswahl"
    control.ReturnValue = 2
 
    SET control = dlg.Add("DialogComboBox1","DialogComboBox")
    control.Move(5,46,169,83)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Aktionen$","Aktion$")
 
    SET control = dlg.Add("DialogLabel6","DialogLabel")
    control.Move(5,65,139,8)
    control.Caption = "Eintragen in den Kalender des Mitarbeiters"
 
    SET control = dlg.Add("DialogComboBox2","DialogComboBox")
    control.Move(5,76,169,90)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Mitarbeiter$","MANachname$")
 
    SET control = dlg.Add("DialogLabel7","DialogLabel")
    control.Move(5,96,139,8)
    control.Caption = "Notiz"
 
    SET control = dlg.Add("DialogTextBox5","DialogTextBox")
    control.Move(5,105,169,128)
    control.MultiLine = 1
    control.ScrollBars = 2
    control.MaxLength = 4000
    control.TextBinding = "RNotiz$"
 
    SET control = dlg.Add("DialogLabel12","DialogLabel")
    control.Move(186,133,162,29)
    control.Caption = "Wenn Sie diesen Termin nur zu Informationszwecken aufnehmen mîchten, markieren Sie bitte die Option 'Termin erledigt'."
 
    SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
    control.Move(186,165,76,12)
    control.Caption = "Termin erledigt"
    control.Bind("Terminerl$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel13","DialogLabel")
    control.Move(186,178,159,37)
    control.Caption = "Nach BetÑtigung der SchaltflÑche 'OK' wird der Eintrag in der Termindatei erzeugt."
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(186,217,78,15)
    control.Default = 1
    control.Caption = "&OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
    control.Move(268,217,78,15)
    control.Caption = "&Abbrechen"
    control.ReturnValue = 0
    control.Cancel = 1
 
 _ok% = 0
 WHILE _ok% = 0
   DIALOG "AQREGISTER",req%
   IF req% = 2 THEN 
     kunr% = ADRSuche%(0)
     IF kunr% <> 0 THEN 
       SELECT KEY kunr% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
       Nachname$ = Nachname.GAdrDat$
       Vorname$ = Vorname.GAdrDat$
       Stra·e$ = Stra·e.GAdrDat$
       Ort$ = PLZ.GAdrDat$ + " " + Ort.GAdrDat$
       tmpku% = CodeKU.GAdrDat$
     END IF 
   END IF 
   IF req% = 0 THEN _ok% = 2
   IF req% = 1 THEN _ok% = 1
 WEND 
 REMOVE DIALOG "AQREGISTER"
 IF _ok% = 1 THEN 
   FILE GAkquiDat$
   BLANK 
   cuaq% = SER (GAkquiDat$,1)
   codeaq.GAkquiDat$ = cuaq%
   codeKU.GAkquiDat$ = tmpku%
   CodeAK.GAkquiDat$ = VAL ( MID$ (Aktion$, LEN (Aktion$) - 6,6))
   CodeMA.GAkquiDat$ = VAL ( MID$ (MANachname$, LEN (MANachname$) - 6,6))
   SELECT KEY tmpku% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
   nachname.GAkquiDat$ = LEFT$ ( TRIM$ (nachname.GAdrDat$) + "," + TRIM$ (vorname.GadrDat$),100)
   Wertung.GAkquiDat$ = 0
   Datum.GAkquiDat$ = Datum$
   Uhrzeit.GAkquiDat$ = zeit$
   Dauer.GAkquiDat$ = VAL (dauer$)
   CodeDOK.GAkquiDat$ = 0
   ErDatum.GAkquiDat$ = VTermin$
   ErZeit.GAkquiDat$ = VZeit$
   SELECT KEY codema.GAkquiDat$ LOCK FILE "supervis" INDEX codema.supervis
   Bearbeiter.GAkquiDat$ = nachname.supervis
   AnzTermine.supervis = AnzTermine.supervis + 1
   IF Terminerl$ LIKE "j" THEN 
     AnzTermineErl.supervis = AnzTermineErl.supervis + 1
   ELSE 
     AnzTermineUnErl.supervis = AnzTermineUnErl.supervis + 1
   END IF 
   STORE FILE "supervis"
   UNLOCK CURRENT FILE "Supervis"
   IF PROJECTJN$ = "TRUE" THEN 
     codepr.GAkquiDat$ = codeprdok%
     projekt.GAkquiDat$ = projektdok$
     codeprdok% = 0
     projektdok$ = ""
   END IF 
   notiz.GAkquiDat$ = rnotiz$
   termin.GAkquiDat$ = Termin$
   erledigt_Termin.GAkquiDat$ = Terminerl$
   TerminNr.GAkquiDat$ = AnzTermine.supervis
   REM 01032001
   GErledTermin$ = Terminerl$
   CALL FStore(GAkquiDat$)
 END IF 
 FILE cfile$
 ON ERROR GOTO ErrorHandler
 MOUSE ON 
 END SUB 
  
 
  
 
 ' FeldergÑnzung
 ' =======================================================================
 ' Zweck:       fÅgt ein neues Feld an die aktuelle Datei an
 ' Aufruf:      CALL FldAdd(feldname$,newformat$,IndexType%
 '
 '              IndexType%      0 = kein Index
 '                              1 = Mehrfachindex
 '                              2 = SchlÅsselindex
 '
 ' Beispiel:    CALL FldAdd("Notiz","TXT;4000",0)
 ' Hinweis:     - alle énderungen mÅssen abschlie·end mit 
 '                SAVE FILE "filename" gesichert werden
 ' -----------------------------------------------------------------------
 ' 01.09.93   
 
SUB FldAdd1(Feldname$,NewFormat$,IndexType%)
 REM CALL GaugeUpdate()
 REM CALL Server("UPDFILE", FILE )
 REM CALL Server("UPDFIELD",Feldname$)
 REM CALL Server("UPDSTATUS","prÅfen")
 ON ERROR GOTO TrapFileFind
 tsfound% = 0
 a$ = FIELDINFO$ (FeldName$,0)
 tsfound% = 1
TrapFileFind: 
 IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
 IF tsfound% = 0 THEN 
   REM ** Feld neu erstellen
   ADD Feldname$ + ";" + NewFormat$ + ";1;1"
   SELECT CASE IndexType%
   CASE 1
     CREATE INDEX ON Feldname$$
   CASE 2
     CREATE INDEX ON Feldname$$ UNIQUE 
   END SELECT 
 ELSE 
   REM ** Feld auf FormatÑnderungen testen und anpassen
   IF FIELDINFO$ (feldname$,3) LIKE "IX*" AND IndexType% = 0 THEN 
     REM CALL Server("UPDSTATUS","Indexlîschung")
     REMOVE INDEX Feldname$$
   END IF 
   ok% = 1
   NewForm% = 0
   NewIndex% = 0
   cFormat$ = TRIM$ ( FIELDINFO$ (Feldname$,0) + ";" + FIELDINFO$ (Feldname$,4))
   IF UCASE$ (cformat$) <> UCASE$ (NewFormat$) THEN 
     ok% = 0
     NewForm% = 1
   END IF 
   IndexType$ = FIELDINFO$ (feldname$,3)
   IF (IndexType$ = "IXD" AND IndexType% = 2) OR (IndexType$ = "IXU" AND IndexType% = 1) THEN 
     ok% = 0
     NewIndex% = 1
   END IF 
   IF FIELDINFO$ (feldname$,3) LIKE "" AND IndexType% <> 0 THEN 
     NewIndex% = 1
     ok% = 0
   END IF 
   IF ok% = 0 THEN 
     IF NewForm% = 1 AND IndexType$ LIKE "IX*" THEN 
       REM CALL Server("UPDSTATUS","Indexlîschung")
       REMOVE INDEX Feldname$$
     END IF 
     IF NewForm% = 1 THEN 
       REM CALL Server("UPDSTATUS","Formatanpassung")
       MODIFY Feldname$$,Feldname$ + ";" + NewFormat$
       REM CALL Server("UPDSTATUS","Indexanpassung")
       SELECT CASE IndexType%
       CASE 1
         CREATE INDEX ON Feldname$$
       CASE 2
         CREATE INDEX ON Feldname$$ UNIQUE 
       END SELECT 
       ok% = 1
     END IF 
   END IF 
   IF ok% = 0 THEN 
     IF NewIndex% = 1 THEN 
       IF IndexType$ LIKE "IX*" THEN 
         REM CALL Server("UPDSTATUS","Indexlîschung")
         REMOVE INDEX Feldname$$
       END IF 
       REM CALL Server("UPDSTATUS","Indexanpassung")
       SELECT CASE IndexType%
       CASE 1
         CREATE INDEX ON Feldname$$
       CASE 2
         CREATE INDEX ON Feldname$$ UNIQUE 
       END SELECT 
       ok% = 1
     END IF 
   END IF 
 END IF 
 END SUB 
 
  
 


SUB FLFillList()
 MOUSE OFF 
 FILE GAdrDat$
 DIM adrFields$( FILEINFO (GAdrDat$,1))
 FILLARRAY adrFields$,1
 FOR a% = 0 TO FILEINFO (GAdrDat$,1) - 1
   dlg.sbdFields.AddItem(adrFields$(a%))
 NEXT a%
 MOUSE ON 
 END SUB 
 
SUB FLAdd()
 IF dlg.sbdFields.ListIndex <> 0 THEN 
   ok% = - 1
   IF dlg.ListFields.ListCount <> 0 THEN 
     FOR a% = 1 TO dlg.ListFields.ListCount
       IF dlg.ListFields.List(a%) = dlg.sbdFields.List(dlg.sbdFields.ListIndex) THEN ok% = 0
     NEXT a%
   END IF 
   IF ok% THEN 
     dlg.ListFields.AddItem(dlg.sbdFields.List(dlg.sbdFields.Listindex))
     dlg.ListFields.ListIndex = dlg.ListFields.ListCount
   ELSE 
     REQUEST "Das Feld wurde bereits ausgewÑhlt!"
   END IF 
 END IF 
 END SUB 
 
SUB FLDel()
 lidx% = dlg.ListFields.ListIndex
 IF lidx% <> 0 THEN 
   dlg.ListFields.RemoveItem(lidx%)
   IF lidx% <> 1 THEN dlg.ListFields.ListIndex = lidx% - 1
 END IF 
 END SUB 
 
SUB FLOK()
 FILE GAdrDat$
 tString$ = "CodeKU,Anrede,Vorname,Nachname,Stra·e,PLZ,Ort,Briefanrede"
 IF dlg.ListFields.ListCount <> 0 THEN 
   FOR a% = 1 TO dlg.ListFields.ListCount
     fieldname$ = dlg.ListFields.List(a%)
     ok% = - 1
     SELECT CASE fieldname$
     CASE "CodeKU","Anrede","Vorname","Nachname","Stra·e","PLZ","Ort","Briefanrede"
       ok% = 0
     END SELECT 
     IF ok% THEN 
       tString$ = tString$ + "," + fieldname$
     END IF 
   NEXT a%
 END IF 
 treq% = 1
 dlg.SetActive(0)
 END SUB 
  
 
 
 
 
 ' generierte Mailingliste auf Bildschirm ausgeben
 ' ===========================================================================
 ' Zweck:       zeigt vorher generierte Adre·liste auf Bildschirm an
 ' Nutzung:     CALL ShowMailFile(sourcefile$)
 '              sourcefile$     = Name der zu zeigenden Datei
 ' ===========================================================================
 
SUB ShowMailFile(sourcefile$)
 cfile$ = FILE 
 SET STATUS "Ausgabe der Ergebnisliste..."
 FILE sourcefile$
 prolog$ = "SELECT ALL REPORT WHERE "
 epilog$ = " ORDER REPORT TO WINDOW ~Mailingliste~"
 befehl$ = prolog$ + filter$ + epilog$
 EXECUTE befehl$
 FILE cfile$
 END SUB 
 
 
 ' SBF-Datei exportieren
 ' ===========================================================================
 ' Zweck:       exportiert eine Superbase-Datei in ein anderes Fileformat
 ' Nutzung:     CALL FileExport(sourcefile$,dest%)
 '              sourcefile$     = Name der zu exportierenden Datei
 '              dest%           = Zielformat
 '                              0 = Format kundendefiniert
 '                              1 = dBase-Format
 '                              2 = ASCII-Format
 ' ===========================================================================
  
SUB FileExport(sourcefile$,dest%)
 cfile$ = FILE 
 cdir$ = DIRECTORY 
 FILE sourcefile$
 DIRECTORY _netpath$ + "OFFICE\TEXT"
 SELECT CASE dest%
 CASE 0
   CALL ExportFile()
 CASE 1
   IF gasp% <> - 1 THEN 
     IF EXISTS ("c:\ADRSER1.dbf") THEN DELETE "c:\ADRSER1.dbf"
   END IF 
   dateiname$ = GMACodeDir$ + "ADRSER1.DBF"
   REM REQUEST "Export nach dBase..."," ",27,req%,dateiname$
   req% = 1
   IF req% = 1 THEN 
     SET STATUS "Exportiere Datei nach " + dateiname$ + " ..."
     IF EXISTS (dateiname$) THEN DELETE dateiname$
     EXPORT TO dateiname$ USING "3"
     IF EXISTS (GMACodeDir$ + "ADRSER1.XLS") THEN DELETE GMACodeDir$ + "ADRSER1.XLS"
     Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
     Superbase.Converters.SBF.SourceFile = sourcefile$
     Superbase.Converters.SBF.Descending = 0
     Superbase.Converters.SBF.Merge = 0
     Superbase.Converters.SBF.LogErrors = 0
     Superbase.Converters.SBF.MultiResponse = 0
     Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
     Superbase.Converters.XLS.DestFile = GMACodeDir$ + "ADRSER1.XLS"
     Superbase.Converters.XLS.StartRow = 2
     Superbase.Converters.XLS.StartCol = 1
     Superbase.Converters.XLS.EndRow = - 1
     Superbase.Converters.XLS.EndCol = - 1
     Superbase.Converters.XLS.UseLabels = - 1
     Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
     SET STATUS "Ausgabe beendet!"
   END IF 
 CASE 2
   dateiname$ = "*.ASC"
   REQUEST "Export nach ASCII..."," ",27,req%,dateiname$
   IF req% = 1 THEN 
     SET STATUS "Exportiere Datei nach " + dateiname$ + " ..."
     IF EXISTS (dateiname$) THEN DELETE dateiname$
     EXPORT TO dateiname$
     SET STATUS "Ausgabe beendet!"
   END IF 
 END SELECT 
 DIRECTORY cdir$
 FILE cfile$
 END SUB 
 
 
 
 ' Aktualisierung Terminkalender
 ' ===========================================================================
 ' ehemals TERMINAkquiAkt:
 ' noch keine angepa·te ParameterÅbergabe
 
SUB MAILAQAkt(userfile$)
 opt% = 1
 adrser% = 1
 SET STATUS "Mailing - Schritt 5..."
 CREATE DIALOG "MAIL5",0,0,257,136,title$,"MS Sans Serif",8
 ADD DIALOG "MAIL5",9,6,9,22,24,2
 ADD DIALOG "MAIL5",5,36,9,211,10,0,"Mailing - Schritt 5"
 ADD DIALOG "MAIL5",4,36,19,212,5,0,""
 ADD DIALOG "MAIL5",5,36,28,212,21,0,"Zur Betreuung des Mailings kînnen Sie automatisch EintrÑge in der Termindatei erzeugen lassen."
 ADD DIALOG "MAIL5",5,36,51,212,25,0,"Soll das Programm diese EintrÑge fÅr Sie vornehmen?"
 ADD DIALOG "MAIL5",3,47,76,124,11,0,"&Ja",0,opt%
 ADD DIALOG "MAIL5",3,47,87,136,12,0,"&Nein",1,opt%
 ADD DIALOG "MAIL5",4,36,107,212,5,0,""
 ADD DIALOG "MAIL5",1,136,116,55,15,1,"&Weiter >>",1,1
 ADD DIALOG "MAIL5",1,192,116,55,15,0,"&Abbrechen",0,0
 DIALOG "MAIL5",req%
 REMOVE DIALOG "MAIL5"
 IF opt% = 0 AND req% = 1 THEN 
   cfile$ = FILE 
   FILE "AKTIONEN"
   DIM AKListe$( RECCOUNT ("AKTIONEN"))
   INDEX MemberOf
   SELECT FIRST 
   a% = 0
   _MemberOf$ = "*"
   butofs% = 64
   WHILE NOT EOF ("AKTIONEN")
     IF MemberOf.AKTIONEN LIKE _MemberOf$ + "*" THEN 
       IF LEN (_MemberOf$) < 6 THEN 
         space% = LEN (MemberOf) - 6
       ELSE 
         space% = LEN (MemberOf) - LEN (_memberOf$)
       END IF 
       AKListe$(a%) = SPACE$ (space%) + Bezeichnung + SPACE$ (150) + STR$ (CodeAK,"000000")
       a% = a% + 1
     END IF 
     SELECT NEXT 
   WEND 
   SET STATUS "Mailing - Schritt 6..."
   CREATE DIALOG "MAIL6",0,0,257,136,title$,"MS Sans Serif",8
   ADD DIALOG "MAIL6",9,6,9,22,24,2
   ADD DIALOG "MAIL6",5,36,9,211,10,0,"Mailing - Schritt 6"
   ADD DIALOG "MAIL6",4,36,19,212,5,0,""
   ADD DIALOG "MAIL6",5,36,28,212,16,0,"Bitte wÑhlen Sie eine der vorhandenen Aktionen aus, die dem Mailing zugeordnet werden soll."
   ADD DIALOG "MAIL6",7,36,50,211,57,0,2,AKListe$,Auswahl$,AKListe$(0)
   ADD DIALOG "MAIL6",4,36,107,212,5,0,""
   ADD DIALOG "MAIL6",1,136,116,55,15,1,"&Weiter >>",1,1
   ADD DIALOG "MAIL6",1,192,116,55,15,0,"&Abbrechen",0,0
   DIALOG "MAIL6",req%
   REMOVE DIALOG "MAIL6"
   IF req% = 0 THEN 
     CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
     END SUB 'Procedure verlassen
   END IF 
   _vak% = VAL ( RIGHT$ (Auswahl$(0),6))
 
   FILE "SUPERVIS"
   DIM MAListe$( RECCOUNT ("SUPERVIS"))
   INDEX Nachname
   SELECT FIRST 
   a% = 0
   WHILE NOT EOF ("SUPERVIS")
     MAListe$(a%) = Nachname + ", " + Vorname + SPACE$ (150) + STR$ (CodeMA,"000000")
     a% = a% + 1
     SELECT NEXT 
   WEND 
   SET STATUS "Mailing - Schritt 7..."
   CREATE DIALOG "MAIL7",0,0,257,136,title$,"MS Sans Serif",8
   ADD DIALOG "MAIL7",9,6,9,22,24,2
   ADD DIALOG "MAIL7",5,36,9,211,10,0,"Mailing - Schritt 7"
   ADD DIALOG "MAIL7",4,36,19,212,5,0,""
   ADD DIALOG "MAIL7",5,36,28,212,16,0,"Bitte wÑhlen Sie einen Mitarbeiter aus, dem das Mailing zugeordnet werden soll."
   ADD DIALOG "MAIL7",7,36,50,211,57,0,2,MAListe$,Auswahl$,MAListe$(0)
   ADD DIALOG "MAIL7",4,36,107,212,5,0,""
   ADD DIALOG "MAIL7",1,136,116,55,15,1,"&Weiter >>",1,1
   ADD DIALOG "MAIL7",1,192,116,55,15,0,"&Abbrechen",0,0
   DIALOG "MAIL7",req%
   REMOVE DIALOG "MAIL7"
   IF req% = 0 THEN 
     CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
     END SUB 'Procedure verlassen
   END IF 
   _vma% = VAL ( RIGHT$ (Auswahl$(0),6))
 
   SET STATUS "Mailing - Schritt 8..."
   CREATE DIALOG "MAIL8",0,0,257,136,title$,"MS Sans Serif",8
   ADD DIALOG "MAIL8",9,6,9,22,24,2
   ADD DIALOG "MAIL8",5,36,9,211,10,0,"Mailing - Schritt 7"
   ADD DIALOG "MAIL8",4,36,19,212,5,0,""
   ADD DIALOG "MAIL8",5,36,28,212,16,0,"Bitte geben Sie einen Termin und einen Text fÅr die Kennzeichnung in der Termindatei ein."
   ADD DIALOG "MAIL8",5,36,48,26,9,0,"Datum:"
   ADD DIALOG "MAIL8",6,64,46,42,12,0,0,datum$,8
   ADD DIALOG "MAIL8",5,36,62,22,11,0,"Notiz:"
   ADD DIALOG "MAIL8",6,64,60,184,47,4,0,notiztext$,500
   ADD DIALOG "MAIL8",4,36,107,212,5,0,""
   ADD DIALOG "MAIL8",1,136,116,55,15,1,"&Weiter >>",1,1
   ADD DIALOG "MAIL8",1,192,116,55,15,0,"&Abbrechen",0,0
   DIALOG "MAIL8",req%
   REMOVE DIALOG "MAIL8"
   IF req% = 0 THEN 
     CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
     END SUB 'Procedure verlassen
   END IF 
   FILE userfile$
   INDEX codeku.userfile$
   SELECT FIRST 
   MOUSE OFF 
   SET STATUS "Termindatei wird aktualisiert..."
   tmpdok% = SER (GDokDat$,1) + 1
   WHILE NOT EOF (userfile$)
     FILE GAkquiDat$
     BLANK 
     codeaq.GAkquiDat$ = SER (GAkquiDat$,1)
     codeKU.GAkquiDat$ = CodeKU.userfile$
     CodeAK.GAkquiDat$ = _vak%
     CodeMA.GAkquiDat$ = _vma%
     SET STATUS "Termindatei wird aktualisiert (" + nachname.userfile$ + ")..."
     nachname.GAkquiDat$ = LEFT$ ( TRIM$ (nachname.GAdrDat$) + "," + TRIM$ (vorname.GadrDat$),100)
     Wertung.GAkquiDat$ = 0
     Datum.GAkquiDat$ = TODAY 
     CodeDOK.GAkquiDat$ = tmpdok%
     cuaq% = codeaq.GAkquiDat$
     SELECT KEY codema.GAkquiDat$ FILE "supervis" INDEX codema.supervis
     Bearbeiter.GAkquiDat$ = nachname.supervis
     notiz.GAkquiDat$ = "MAILING: " + notiztext$
     termin.GAkquiDat$ = datum$
     erledigt_Termin.GAkquiDat$ = "n"
     CALL QuickStore(GAkquiDat$)
     SELECT NEXT FILE userfile$
   WEND 
 END IF 
 MOUSE ON 
 SET STATUS "Mailing - letzter Schritt..."
 CREATE DIALOG "MAIL9",0,0,257,136,title$,"MS Sans Serif",8
 ADD DIALOG "MAIL9",9,6,9,22,24,2
 ADD DIALOG "MAIL9",5,36,9,211,10,0,"Mailing - letzter Schritt"
 ADD DIALOG "MAIL9",4,36,19,212,5,0,""
 ADD DIALOG "MAIL9",5,36,27,212,10,0,"Die Vorbereitung des Mailings ist abgeschlossen."
 ADD DIALOG "MAIL9",5,36,38,210,38,0,"Nachfolgend wird die Textverarbeitung aufgerufen, mit deren Serienbrieffunktion das Mailing fertigstellen kînnen."
 ADD DIALOG "MAIL9",4,36,107,212,5,0,""
 ADD DIALOG "MAIL9",1,136,116,55,15,1,"&Weiter >>",1,1
 ADD DIALOG "MAIL9",1,192,116,55,15,0,"&Abbrechen",0,0
 DIALOG "MAIL9",req%
 REMOVE DIALOG "MAIL9"
 IF req% = 0 THEN 
   CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
   END SUB 'Procedure verlassen
 END IF 
 SET STATUS "Aufruf der Textverarbeitung..."
 CALL DOKUMENT("allgemeine Schreiben",0)
 SET STATUS "Bereit"
 END SUB 
  
 
 '      ***********************
 '      ** Stichwort-Auswahl **
 '      ***********************
 
FUNCTION StichwortSel%(stichw$)
 j% = 1
 lÑnge% = LEN (stichw$)
 REM FOR i% = 1 TO 300
 REM  stichworte$(i%) = ""
 REM NEXT i%
 stichwver$ = LCASE$ (stichw$)
 FOR i% = 1 TO lÑnge%
   pos1% = INSTR (i%,stichwver$,",")
   IF pos1% > 0 THEN 
     IF pos2% > 0 THEN 
       pos% = pos1% - pos2% - 1
     ELSE 
       pos% = pos1% - 1
     END IF 
     stichworte$(j%) = MID$ (stichwver$,i%,pos%)
     pos2% = pos1%
     j% = j% + 1
     i% = pos1%
   ELSE 
     stichworte$(j%) = MID$ (stichwver$,i%,lÑnge% - i%)
     IF stichworte$(j%) <> "" THEN j% = j% + 1
     i% = lÑnge%
   END IF 
 NEXT i%
 StichwortSel% = j% - 1
 END FUNCTION 
 
 
 '      *************************
 '      ** Superbase Extension **
 '      *************************
   
SUB SetSBWindow()
 HWnd%% = Superbase.Handle
 IF GBildschirm% = 800 THEN 
   OldWord% = CALL ("SetWindowLong",hWnd%%, - 16,382337024)
   hInstance% = CALL ("GetWindowWord",HWnd%%, - 6)
 END IF 
 SET DISPLAY OFF 
 END SUB 
 
 
 
  
 ' Titelbild ausblenden
 ' ======================================================================
 
SUB HideStartup()
 a% = CALL ("FindWindow","ThunderForm","")
 IF a% > 0 THEN 
   REM ** alte Variante *** IF title$ LIKE "*BUSINESS*" THEN suprg$ = "BUSINESS" ELSE suprg$ = _projekt$
   REM ** DDEINIT 1, UCASE$ (suprg$),"Startup"
   DDEINIT 1,"STARTUP","Startup"
   DDETERM 1
   test% = 0
 END IF 
 END SUB 
 
 
SUB PrintParam()
 IF PRINTER (6) = 0 THEN 
   REQUEST "Der Drucker " + PRINTER + " bietet keine weiteren Einstellmîglichkeiten!","",113
 ELSE 
   Drucker$ = PRINTER 
   Port$ = PRINTER (0)
   Kopien% = PRINTER (6)
   IF Kopien% < 1 THEN Kopien% = 1
   CREATE DIALOG "PRINTDLG",0,0,226,80,title$,"MS Sans Serif",8
   ADD DIALOG "PRINTDLG",4,0,0,226,58,0,""
   ADD DIALOG "PRINTDLG",5,6,13,63,12,0,"aktueller Drucker:"
   ADD DIALOG "PRINTDLG",5,72,13,146,12,0,Drucker$
   ADD DIALOG "PRINTDLG",5,6,25,49,12,0,"Ausgabeport:"
   ADD DIALOG "PRINTDLG",5,72,25,145,12,0,Port$
   ADD DIALOG "PRINTDLG",6,72,37,38,12,0,0,Kopien%,20
   ADD DIALOG "PRINTDLG",5,6,39,27,12,0,"Kopien:"
   ADD DIALOG "PRINTDLG",1,59,62,55,15,1,"&OK",1,1
   ADD DIALOG "PRINTDLG",1,116,62,55,15,0,"&Abbrechen",0,0
   DIALOG "PRINTDLG",req%
   REMOVE DIALOG "PRINTDLG"
   IF req% = 1 THEN 
     IF Kopien% <> 0 THEN 
       SET PRINTER PRINTER , PRINTER (0),1,9,0,0,100,Kopien%
     ELSE 
       CALL Fehler("Falscher Parameter fÅr Anzahl der Kopien","")
     END IF 
   END IF 
 END IF 
 END SUB 
 
SUB DemoInfo()
 CALL Fehler("In der Demo kînnen Sie nur mit einem festen Adre·bestand arbeiten - VerÑnderungen sind nicht mîglich.","")
 END SUB 
 
 
 ' Standard Hotkeys abfangen
 ' =====================================================================
 
SUB 1EditPaste()
 SET STATUS "Bereit"
 CALL Fehler("EinfÅgen nicht mîglich!","Die Daten in der Zwischenablage sind nicht im geforderten Format.")
 END SUB 
 
SUB 1EditCut()
 SET STATUS "Bereit"
 END SUB 
 
SUB 1EditDelete()
 SET STATUS "Bereit"
 END SUB 
 
 ' About
 ' =====================================================================
SUB About()
 SET STATUS "Info - öber " + title$
 Stand$ = LTRIM$ ( DATE$ ( DAYS ( CALL ("GetFileDate",_netpath$ + "provis.SBR")),"0d.mm.yyyy"))
 GVersion$ = ReadConfig$(_projekt$,"Version")
 GRelease$ = ReadConfig$(_projekt$,"Release")
 GRelease$ = = GVersion$
 GNetzAPAkt% = FN sys(17) + 1
 IF FN sys(5) > 1 THEN GVariante$ = "Netzwerk mit " + LTRIM$ ( STR$ ( FN sys(5),"99")) + " PlÑtzen" + " / " + LTRIM$ ( STR$ (GNetzAPAkt%,"99")) + " User angemeldet" ELSE GVariante$ = "Einzelplatz"
 Programm$ = title$ + " V:" + GVersion$
 CREATE DIALOG "ABout",0,0,240,178,title$,"MS Sans Serif",8
 ADD DIALOG "ABout",9,4,6,20,21,4
 ADD DIALOG "ABout",4,30,1,202,18,0,""
 ADD DIALOG "ABout",5,34,8,180,10,0,Programm$
 ADD DIALOG "ABout",5,32,22,69,10,0,"Variante:"
 ADD DIALOG "ABout",5,84,22,153,10,0,GVariante$
 REM ADD DIALOG "ABout",5,32,32,69,10,0,"Release:"
 REM ADD DIALOG "ABout",5,84,32,152,10,0,GRelease$
 ADD DIALOG "ABout",5,32,42,69,10,0,"Stand:"
 ADD DIALOG "ABout",5,84,42,112,10,0,Stand$
 ADD DIALOG "ABout",4,30,52,202,18,0,""
 ADD DIALOG "ABout",5,34,59,180,8,0,"Lizenzinformation"
 a% = CALL ("GetLicense",iAppID%,_netpath$ + "LICENSE.DLL")
 IF CALL ("AccessItemI",8,0,0) = 255 - FN sys(5) THEN 
   name$ = CALL ("AccessItemC",1,0,"")
   firma$ = CALL ("AccessItemC",2,0,"")
   serialno&% = CALL ("AccessItemL",10,0,0)
   Seriennummer$ = STR$ (serialno&%,"000000")
   ADD DIALOG "ABout",5,32,73,69,10,0,"Name:"
   ADD DIALOG "ABout",5,84,73,140,10,0,Name$
   ADD DIALOG "ABout",5,32,83,69,10,0,"Firma:"
   ADD DIALOG "ABout",5,84,83,170,10,0,Firma$
   ADD DIALOG "ABout",5,32,93,69,10,0,"Seriennummer:"
   ADD DIALOG "ABout",5,84,93,162,10,0,Seriennummer$
 ELSE 
   ADD DIALOG "ABout",5,32,73,202,20,0,"Diese Version wurde noch nicht lizensiert und darf nur zu PrÅfzwecken verwendet werden!"
   ADD DIALOG "ABout",5,32,90,202,20,0,"Um zu erfahren, wie Sie diese Version lizensieren lassen kînnen, erkundigen Sie sich bitte bei der Hotline."
 END IF 
 HtlFirma$ = ReadConfig$(_projekt$,"HotlineFirma")
 Htlfon$ = ReadConfig$(_projekt$,"HotlinePhone")'                  ; Hotlinedaten aus
 Htlfax$ = ReadConfig$(_projekt$,"HotlineFax")'                    ; CODIEAPP.NET auslesen und
 IF HtlFirma$ LIKE "leer" THEN HtlFirma$ = "CODie software products e.K.   www.codie.com"
 IF Htlfon$ LIKE "leer" THEN Htlfon$ = "(0331) 242180"'           ; notfalls auf Standardwerte
 IF Htlfax$ LIKE "leer" THEN Htlfax$ = "(0331) 242181"'           ; setzen
 ADD DIALOG "ABout",4,30,104,202,18,0,""
 REM ADD DIALOG "ABout",5,34,111,180,8,0,"Hotline"
 ADD DIALOG "ABout",5,64,110,162,10,0,HtlFirma$
 ADD DIALOG "ABout",5,33,110,28,8,0,"Hotline"
 ADD DIALOG "ABout",5,32,127,69,10,0,"Telefon:"
 ADD DIALOG "ABout",5,84,127,162,10,0,HtlFon$
 ADD DIALOG "ABout",5,32,137,69,10,0,"Telefax:"
 ADD DIALOG "ABout",5,84,137,162,10,0,HtlFax$
 ADD DIALOG "ABout",1,85,157,55,15,1,"&OK",1,1
 DIALOG "About",req%
 REMOVE DIALOG "About"
 IF FN sys(5) > 1 THEN GVariante$ = "Netzwerk mit " + LTRIM$ ( STR$ ( FN sys(5),"99")) + " PlÑtzen" ELSE GVariante$ = "Einzelplatz"
 SET STATUS "Bereit"
 END SUB 
 
 
 ' Datenbanken reorganisieren
 ' =====================================================================
 ' 23.01.96    - umgestellt auf Prozedur FileReorg
 
 
SUB ReorgDB()
 IF _remotepath$ <> _netpath$ AND test% = 0 THEN 
   CALL Fehler("Die Reorganisation kann nicht von einem Remote-Arbeitsplatz aus ausgefÅhrt werden!","Nur durch Supervisor mîglich!")
   END SUB 
 END IF 
 IF MNdisabled%("SUPERVISOR") THEN 
   CALL Fehler("Keine Zugangsberechtigung!","Nur durch Supervisor mîglich!")
   END SUB 
 END IF 
 CREATE DIALOG "DBREORG",0,0,265,162,title$,"MS Sans Serif",8
 ADD DIALOG "DBREORG",9,6,9,21,23,3
 ADD DIALOG "DBREORG",5,35,9,84,11,0,"Datenbankreorganisation"
 ADD DIALOG "DBREORG",4,35,18,223,5,0,""
 ADD DIALOG "DBREORG",5,35,30,221,21,0,"Mit dieser Funktion kînnen Sie allgemeine Fehler in Ihren Datenbanken automatisch beheben lassen."
 ADD DIALOG "DBREORG",5,35,52,219,23,0,"Bevor Sie diese Funktion ausfÅhren, treffen Sie bitte folgende Vorkehrungen, um Datenverluste zu vermeiden:"
 ADD DIALOG "DBREORG",5,35,76,12,10,0,"1."
 ADD DIALOG "DBREORG",5,45,76,205,10,0,"Erstellen Sie eine Sicherheitskopie Ihrer Daten!"
 ADD DIALOG "DBREORG",5,35,89,12,17,0,"2."
 ADD DIALOG "DBREORG",5,45,89,205,17,0,"Stellen Sie sicher, da· Sie der einzige Nutzer sind, der momentan mit diesem Programm im Netzwerk arbeitet!"
 ADD DIALOG "DBREORG",5,35,108,12,16,0,"3."
 ADD DIALOG "DBREORG",5,45,108,200,16,0,"Schalten Sie Ihren Computer wÑhrend der Reorganisation nicht aus!"
 ADD DIALOG "DBREORG",1,69,140,55,15,0,"&Reorganisieren",1,1
 ADD DIALOG "DBREORG",1,127,140,55,15,1,"&Abbrechen",0,1
 DIALOG "DBREORG",req%
 REMOVE DIALOG "DBREORG"
 IF req% <> 1 THEN END SUB 
 REQUEST "Haben alle anderen Nutzer die Anwendung geschlossen?","",130,req%
 IF req% <> 1 THEN 
   CALL Fehler("Die Reorganisation kann nur durchgefÅhrt werden,","wenn alle Nutzer die Anwendung verlassen haben.")
   END SUB 
 END IF 
 CLOSE ALL 
 IF EXISTS (_localpath$ + "DUMMY.sbv") THEN 
   IF GBildschirm% = 800 THEN 
     OPEN FORM _localpath$ + "DUMMY"
   ELSE 
     OPEN FORM _localpath$ + "DUMMY1"
   END IF 
 ELSE 
   IF GBildschirm% = 800 THEN 
     OPEN FORM _netpath$ + "DUMMY"
   ELSE 
     OPEN FORM _netpath$ + "DUMMY1"
   END IF 
 END IF 
 MOUSE OFF 
 dpfad$ = _netpath$ + "OFFICE\" + DATE$ ( TODAY ,"yymm0d")
 datnr$ = DATE$ ( TODAY ,"yymm0d")
 i% = 0
 ok% = 0
 WHILE ok% = 0
   i% = i% + 1
   IF i% > 99 THEN 
     ON ERROR GOTO rb3004982
     REMOVE DIRECTORY dpfad$ + "01"
rb3004982: 
     i% = 1
   END IF 
   ON ERROR GOTO rb3004981
   tpfad$ = dpfad$ + STR$ (i%,"00")
   MAKE DIRECTORY dpfad$ + STR$ (i%,"00")
   ok% = - 1
rb3004981: 
   ON ERROR GOTO ErrorHandler
 WEND 
 textdo1$ = "Sicherungskopie befindet sich im Pfad: " + tpfad$
 FORM 
 MOUSE OFF 
 cdir$ = DIRECTORY 
 REM CALL Server("LOADMESSAGE","")
 REM allgmeine Dateien (OFFICE)
 DIRECTORY _netpath$ + "OFFICE"
 DIM Dateien$(500)
 FILLARRAY Dateien$,5,"*.sbf"
 REM CALL Fehler("Start ROrg","")
 i% = 0
 WHILE Dateien$(i%) <> ""
   dd$ = Dateien$(i%)
   datei1$ = LEFT$ (dd$, LEN (dd$) - 4)
   CALL FileReorg("OFFICE\" + datei1$)
   i% = i% + 1
 WEND 
 REM CALL FileReorg("OFFICE\" + GADRDat$)
 REMOVE FROM FILE GAdrDat$ WHERE codeku.GAdrDat$ < 1
 REM CALL FileReorg("OFFICE\" + GAkquiDat$)
 IF RECCOUNT (GAkquiDat$) > 1 THEN 
   FILE GAkquiDat$
   INDEX codeku.GAkquiDat$
   SELECT FIRST LOCK 
   codeku% = codeku.GAkquiDat$
   last1% = codeku.GAkquiDat$
   WHILE NOT EOF (GAkquiDat$)
     codeku% = codeku.GAkquiDat$
     IF NOT EXISTS (codeku%,codeku.GAdrDat$) THEN 
       REMOVE FROM FILE GAkquiDat$ WHERE codeku.GAkquiDat$ = codeku%
       SELECT FIRST 
       SELECT KEY last1% FILE GAkquiDat$ INDEX codeku.GAkquiDat$
     ELSE last1% = codeku%
     END IF 
   SELECT NEXT LOCK 
   WEND 
 END IF 
 REM CALL FileReorg("OFFICE\AKTIONEN")
 REM CALL FileReorg("OFFICE\Dokument")
 REM CALL FileReorg("OFFICE\FAX")
 REM CALL FileReorg("OFFICE\KEYWORDS")
 FILE "keywords"
 REMOVE FROM FILE "keywords" WHERE LTRIM$ (keyword) = ""
 REM CALL FileReorg("OFFICE\MAIL")
 REM CALL FileReorg("OFFICE\NOTIZ")
 REM CALL FileReorg("OFFICE\Telefon")
 REM CALL FileReorg("OFFICE\CONNECT")
 REM CALL FileReorg("OFFICE\ADRTEMP")
 REM CALL FileReorg("OFFICE\LOEPROT")
 GTelDat$ = "TELEFON"
 IF RECCOUNT ("TELEFON") > 1 THEN 
   FILE GTelDat$
   INDEX codeku.GTelDat$
   SELECT FIRST LOCK 
   codeku% = codeku.GTelDat$
   last1% = codeku.GTelDat$
   WHILE NOT EOF (GTelDat$)
     codeku% = codeku.GTelDat$
     IF NOT EXISTS (codeku%,codeku.GAdrDat$) THEN 
       REMOVE FROM FILE GTelDat$ WHERE codeku.GTelDat$ = codeku%
       SELECT FIRST 
       SELECT KEY last1% FILE GTelDat$ INDEX codeku.GTelDat$
     ELSE last1% = codeku%
     END IF 
   SELECT NEXT LOCK 
   WEND 
 END IF 
 REM CALL FileReorg("OFFICE\ANREDE")
 REM CALL FileReorg("OFFICE\ANSTELL")
 REM CALL FileReorg("OFFICE\BERUF")
 REM CALL FileReorg("OFFICE\FIFORM")
 REM CALL FileReorg("OFFICE\FSTAND")
 REM CALL FileReorg("OFFICE\HOBBYS")
 REM CALL FileReorg("OFFICE\LAND")
 REM CALL FileReorg("OFFICE\NATIONAL")
 REM CALL FileReorg("OFFICE\ORT")
 REM CALL FileReorg("OFFICE\STAAT")
 REM CALL FileReorg("OFFICE\TITEL")

 REM CALL Fehler("Ende ROrg","")
 
 
 
 REM Dateien von PROVIS
 IF _projekt$ LIKE "PROVIS" THEN 
   dpfad$ = _netpath$ + "PROVIS\" + DATE$ ( TODAY ,"yymm0d")
   datnr$ = DATE$ ( TODAY ,"yymm0d")
   i% = 0
   ok% = 0
   WHILE ok% = 0
     i% = i% + 1
     IF i% > 99 THEN 
       ON ERROR GOTO rb3004985
       REMOVE DIRECTORY dpfad$ + "01"
rb3004985: 
       i% = 1
     END IF 
     ON ERROR GOTO rb3004986
     tpfad$ = dpfad$ + STR$ (i%,"00")
     MAKE DIRECTORY dpfad$ + STR$ (i%,"00")
     ok% = - 1
rb3004986: 
     ON ERROR GOTO ErrorHandler
   WEND 
 textdo1$ = "Sicherungskopie befindet sich im Pfad: " + tpfad$
 FORM 
 DIRECTORY _netpath$
 DIRECTORY _netpath$ + "PROVIS"
 REDIM Dateien$(500,1)
 REDIM Dateien$(500)
 FILLARRAY Dateien$,5,"*.sbf"
 REM CALL Fehler("Start ROrg","")
 i% = 0
 WHILE Dateien$(i%) <> ""
   dd$ = Dateien$(i%)
   datei1$ = UCASE$ ( LEFT$ (dd$, LEN (dd$) - 4))
   IF datei1$ <> "KVEXEXP" AND datei1$ <> "VKOTMP" AND datei1$ <> "KVFTMP" AND datei1$ <> "BUT1" AND datei1$ <> "KVTMP" AND datei1$ <> "STATIST2" AND datei1$ <> "GDVTEMP1" AND datei1$ <> "STATIST" AND datei1$ <> "STATIST1" THEN 
     CALL FileReorg("PROVIS\" + datei1$)
   END IF 
   i% = i% + 1
 WEND 
   REM CALL FileReorg("PROVIS\BUCHUNG")
   REM CALL FileReorg("PROVIS\GEADR")
   REM CALL FileReorg("PROVIS\KGEADR")
   REM CALL FileReorg("PROVIS\GEKOND")
   REM CALL FileReorg("PROVIS\GEKONDM")
   REM CALL FileReorg("PROVIS\KVERTRAG")
   CALL DFile(2,"PROVIS\KVERTRAG" + _fpw$)
   IF RECCOUNT ("KVERTRAG") > 1 THEN 
     FILE "KVERTRAG"
     INDEX codeku.KVERTRAG
     SELECT FIRST LOCK 
     codeku% = codeku.KVERTRAG
     last1% = codeku.KVERTRAG
     CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
     WHILE NOT EOF ("KVERTRAG")
       codeku% = codeku.KVERTRAG
       IF NOT EXISTS (codeku%,codeku.GAdrDat$) THEN 
         
         REM REMOVE FROM FILE "KVERTRAG" WHERE codeku.KVERTRAG = codeku%
         REM REMOVE FROM FILE "Buchung" WHERE codeku.Buchung = codeku%
         REM SELECT FIRST 
         REM SELECT KEY last1% FILE "KVERTRAG" INDEX codeku.KVERTRAG
       REM ELSE 
         REM last1% = codeku%
         FILE GAdrDat$
         BLANK FILE GAdrDat$
         nr% = SER (GAdrDat$,1)
         codeku.GAdrDat$ = Codeku.kvertrag
         nachname.GAdrDat$ = LEFT$ (anachname.kvertrag + "   @",50)
         vorname.GAdrDat$ = avorname.kvertrag
         ort.GAdrDat$ = aort.kvertrag
         plz.GAdrDat$ = aplz.kvertrag
         stra·e.GAdrDat$ = astrasse.kvertrag
         CALL QuickStore(GAdrDat$)
         FILE "Kvertrag"
       END IF 
     SELECT NEXT LOCK 
     WEND 
     REM 090398
     FILE GAdrDat$
     INDEX codeku.GAdrDat$
     SELECT LAST 
     codeku% = codeku.GAdrDat$
     nr% = SER (GAdrDat$)
     IF nr% <= codeku% THEN 
       WHILE nr% <= codeku%
         nr% = SER (GAdrDat$,1)
       WEND 
     END IF 
   END IF 
   REM CALL FileReorg("PROVIS\MAADR")
   REM CALL FileReorg("PROVIS\VORGANG")
   REM CALL FileReorg("PROVIS\SPARTEN")
   REM CALL FileReorg("PROVIS\ZEINGANG")
   REM CALL FileReorg("PROVIS\FORMULAR")
   REM CALL FileReorg("PROVIS\SPGRUPPE")
   REM CALL FileReorg("PROVIS\VKOND")
   IF PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
     REM CALL FileReorg("PROVIS\ZEINGAN1")
     REM CALL FileReorg("PROVIS\BUCHUNG1")
   END IF 
   REM CALL FileReorg("PROVIS\BUCHTEMP")
   REM CALL FileReorg("PROVIS\MAADRGRU")
   IF EXISTS ("PROVIS\STATIST.SBF") THEN 
     REM CALL FileReorg("PROVIS\STATIST")
   END IF 
   IF EXISTS ("PROVIS\STATIST2.SBF") THEN 
     REM CALL FileReorg("PROVIS\STATIST2")
   END IF 
 END IF 
 
 REM Dateien von IMMAK
 IF _projekt$ LIKE "IMMAK" THEN 
   dpfad$ = _netpath$ + "IMMAK\" + DATE$ ( TODAY ,"yymm0d")
   datnr$ = DATE$ ( TODAY ,"yymm0d")
   i% = 0
   ok% = 0
   WHILE ok% = 0
     i% = i% + 1
     IF i% > 99 THEN 
       ON ERROR GOTO rb3004989
       REMOVE DIRECTORY dpfad$ + "01"
rb3004989: 
       i% = 1
     END IF 
     ON ERROR GOTO rb30049810
     tpfad$ = dpfad$ + STR$ (i%,"00")
     MAKE DIRECTORY dpfad$ + STR$ (i%,"00")
     ok% = - 1
rb30049810: 
     ON ERROR GOTO ErrorHandler
   WEND 
 textdo1$ = "Sicherungskopie befindet sich im Pfad: " + tpfad$
 FORM 

   CALL FileReorg("IMMAK\ANFRAGE")
   CALL FileReorg("IMMAK\IMMOGRUP")
   CALL FileReorg("IMMAK\OBJEKTE")
 END IF 
 
 REM Dateien von MEDIA
 IF _projekt$ LIKE "MEDIA" THEN 
   dpfad$ = _netpath$ + "MEDIA\" + DATE$ ( TODAY ,"yymm0d")
   datnr$ = DATE$ ( TODAY ,"yymm0d")
   i% = 0
   ok% = 0
   WHILE ok% = 0
     i% = i% + 1
     IF i% > 99 THEN 
       ON ERROR GOTO rb30049811
       REMOVE DIRECTORY dpfad$ + "01"
rb30049811: 
       i% = 1
     END IF 
     ON ERROR GOTO rb30049812
     tpfad$ = dpfad$ + STR$ (i%,"00")
     MAKE DIRECTORY dpfad$ + STR$ (i%,"00")
     ok% = - 1
rb30049812: 
     ON ERROR GOTO ErrorHandler
   WEND 
 textdo1$ = "Sicherungskopie befindet sich im Pfad: " + tpfad$
 FORM 
   CALL FileReorg("MEDIA\FILME")
   CALL FileReorg("MEDIA\JOURNAL")
   CALL FileReorg("MEDIA\MEDIUM")
   CALL FileReorg("MEDIA\VERLEIH")
 END IF 
 DIRECTORY _netpath$
 REM CALL Server("UNLOADMESSAGE","")
 msg$ = "Die Reorganisation wurde abgeschlossen!"
 IF NOT PROGRAMFILE ("PROVUPD") THEN LOAD _netpath$ + "PROVUPD.SBR", NEW 
 CALL Server("UNLOADMESSAGE","")
 CALL DoUpdate()
 MOUSE ON 
 SET STATUS msg$
 REQUEST msg$,"",100
 CALL DFile(2,"supervis" + _fpw$)
 SET STATUS "Bereit"
 END SUB 
 
  
 ' FileReorg - Datei reorganisieren
 ' =====================================================================
 ' Aufruf: CALL FileReorg(Datei$)
 ' Parameter: Datei$      Pfad+Dateiname ohne Suffix .SBF
 ' =====================================================================
 ' 23.01.96   
 
SUB FileReorg(Datei$)
 textdo$ = "Anfertigung einer Sicherheitskopie der Datei " + _netpath$ + datei$ + " in den Pfad " + tpfad$
 FORM 
 COPY _netpath$ + datei$ + ".*" TO tpfad$
 CALL DFile(2,Datei$ + _fpw$)
 msg$ = "Bitte warten, die Datei " + CHR$ (34) + FN name(Datei$) + CHR$ (34) + " wird reorganisiert..."
 textdo$ = msg$
 FORM 
 REM CALL Server("MESSAGE",msg$)
 SET STATUS msg$
 CALL WriteConfig("REORG","Started","TRUE")
 CALL WriteConfig("REORG","File",Datei$)
 curFile$ = FN name(Datei$)
 FILE curFile$
 REM -- Indizes lîschen --
 idxCount% = FILEINFO (curFile$,0)
 CALL WriteConfig("REORG","IdxCount", STR$ (idxCount%,"000"))
 DIM IdxList$(idxCount%)
 FILLARRAY IdxList$,3
 FOR a% = 0 TO idxCount% - 1
   IdxName$ = IdxList$(a%) + "." + curFile$
   CALL WriteConfig("REORG","Index" + STR$ (a%,"000"),IdxName$)
 NEXT 
 FOR a% = 0 TO idxCount% - 1
   IdxName$ = IdxList$(a%) + "." + curFile$
   ON ERROR GOTO ab1403971
   REMOVE INDEX IdxName$$
ab1403971: 
 NEXT a%
 ON ERROR GOTO ErrorHandler
 REM REORGANIZE FILE FN name(Datei$) TO _netpath$ + Datei$
 IF OPEN ("TMP") THEN CLOSE "TMP"
 IF EXISTS (_netpath$ + "TMP.SBF") THEN DELETE _netpath$ + "TMP.SBF"
 REORGANIZE FILE FN name(Datei$) TO _netpath$ + "TMP"
 CLOSE FILE curFile$
 REM CALL Fehler("Reorg, Datei lîschen","")
 IF EXISTS (_netpath$ + Datei$ + ".SBF") THEN 
   REM DELETE _netpath$ + Datei$ + ".SBF"
   REM IF EXISTS (_netpath$ + Datei$ + ".SBD") THEN DELETE _netpath$ + Datei$ + ".SBD"
   REM IF EXISTS (_netpath$ + Datei$ + ".SB!") THEN DELETE _netpath$ + Datei$ + ".SB!"
   DELETE _netpath$ + Datei$ + ".*"
   REM 29092003
   REM FOR b% = 0 TO 999
     REM tdatei$ = _netpath$ + Datei$ + "." + LTRIM$ ( STR$ (b%,"999"))
     REM IF EXISTS (tdatei$) THEN DELETE tdatei$
   REM NEXT b%
 END IF 
 REORGANIZE FILE "TMP" TO _netpath$ + Datei$
 CLOSE FILE "TMP"
 FOR a% = 0 TO idxCount% - 1
   msg$ = "Bitte warten, der Index " + CHR$ (34) + IdxList$(a%) + CHR$ (34) + " der Datenbank " + CHR$ (34) + FN name(Datei$) + CHR$ (34) + " wird neu erstellt..."
   textdo$ = msg$
   FORM 
   REM CALL Server("MESSAGE",msg$)
   IdxName$ = IdxList$(a%)
   IF IdxName$ <> "" THEN CREATE INDEX ON IdxName$$
 NEXT 
 REM CALL Fehler("Reorg, Datei lîschen",curfile$)
 IF curfile$ LIKE "AKQUISE" OR curfile$ LIKE "ADRESSEN" OR curfile$ LIKE "TELEFON" OR curfile$ LIKE "KEYWORDS" THEN 
 ELSE 
   CLOSE FILE curFile$
 END IF 
 CALL WriteConfig("REORG","Started","FALSE")
 END SUB 
 
 '      ***********************
 '      ** MenÅdeklarationen **
 '      ***********************
  
 ' HauptmenÅ
 ' ======================================================================
 
  
 
 ' Formular AKQUISE
 ' ======================================================================
 
SUB MNAKQUISE()
 CALL MNProgramm()
 MENU 1,1,1,"D&rucken","AQDrucken","diverse Druckfunktionen"
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","AQNeu","einen neuen Termin erfassen"
 REM MENU 2,2,1,"S&ichern,F4","MStore","Daten des aktuellen Termins speichern"
 MENU 2,2,1,"&Verwerfen","UNDO","letzte énderungen verwerfen"
 MENU 2,3,1,"&Kopieren in Zwischenablage,F11","ADRKopWAQ","Adresse in Zwischenablage kopieren"
 IF NOT MNdisabled%("AKQUISELoeschen") THEN 
   MENU 2,4,1,"&Lîschen","AQLoeschen","aktuellen Termin lîschen"
 ELSE 
   MENU 2,4,0,"&Lîschen"
 END IF 
 MENU 3,0,1,"Be&wegen","",""
 MENU 3,1,1,"&NÑchster,BildAb","AQNext","nÑchster Termin"
 MENU 3,2,1,"&Vorheriger,BildAuf","AQPrev","vorheriger Termin"
 MENU 4,0,1,"Bez&ug"
 MENU 4,1,1,"&Wechseln","BEZUGWechseln()","Bezug setzen auf aktuelle Adresse, Aktion oder Mitarbeiter"
 MENU 4,2,1,"&Mitarbeiter suchen","AQMASuchen()","Mitarbeiter wechseln bzw. in aktuellen Termin aufnehmen"
 MENU 4,3,1,"Akt&ionen suchen","AQAktionen()","Aktion wechseln bzw. Termin der Aktion zuordnen"
 MENU 5,0,1,"&Optionen","",""
 MENU 5,1,1,"&Telefon/Fax","ADRTelefon1","Anzeige der TelefonÅbersicht, Versenden von Kurzfaxen"
 MENU 5,2,1,"&MonatsÅbersicht","MOUebersicht","MonatsÅbersicht anzeigen/drucken"
 MENU 5,3,1,"Termin&historie,F3","AQKundenHist","Terminhistorie anzeigen/drucken"
 MENU 5,4,1,"&Adresshistorie,F10","AQAdrHistT","Adresshistorie anzeigen/drucken"
 MENU 5,5,1,"&Dokumente auflisten","AQDOKLIST","alle Dokumente zur aktuellen Adresse anzeigen"
 REM dial$ = ReadINI$("Modem","ISDNDial")
 IF andidial$ LIKE "TELES" THEN 
   MENU 5,6,1,"Anwahl per TELES.FON,F12","DialTelesAQ"
 END IF 
 MENU 6,0,1,"E&xtras"
 MENU 6,1,1,"&Offene Termine","AQTermineO","Auflistung aller offenen/nicht erledigten Termine"
 MENU 6,2,1,"Termin &Plan","AQTermineP","Auflistung aller anstehenden Termine"
 MENU 6,3,0,"Liste erneut &anzeigen,F7","AQTermineO2","Suchliste erneut anzeigen"
 MENU 6,4,1,"aktuellen Termin drucken","TerminEinzel","aktuellen Termin drucken"
 IF ProjectJN$ = "TRUE" THEN 
   MENU 7,0,1,"Projektzuordnung zurÅcksetzen"
   MENU 7,1,1,"Zuordnung zum Projekt zurÅcksetzen","DelProjAkq","Zuordnung zum Projekt zurÅcksetzen"
   CALL MNHilfe(8)
 ELSE 
   CALL MNHilfe(7)
 END IF 
 END SUB 

SUB DelProjAkq()
 codeaq% = codeaq.GAkquiDat$
 SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 codepr.GAkquiDat$ = 0
 Projekt.GAkquiDat$ = ""
 IF Workstation% > 0 THEN Workstation.GAkquiDat$ = Workstation%
 IF Workstation% > 0 THEN QWoNo.GAkquiDat$ = STR$ (Workstation%,"000000") + STR$ (codeAQ.GAkquiDat$,"000000")
 RecStatus.GAkquiDat$ = "c"
 STORE FILE GAkquiDat$
 END SUB 
 
 
SUB AQAdrHistT()
 CALL AQAdrHist(2)
 END SUB 
 
  
 
 ' MenÅ SUPERVIS
 ' =======================================================================
 
SUB MNSUPERVIS()
 CALL MNProgramm()
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","SVNeu","neuen Mitarbeiter hinzufÅgen"
 REM MENU 2,2,1,"S&ichern,F4","MStore","Daten des aktuellen Mitarbeiters sichern"
 MENU 2,2,1,"&Verwerfen,Ctrl+RckT","UNDO","letzte énderungen Verwerfen"
 IF NOT MNdisabled%("SUPERVISLoeschen") THEN 
   MENU 2,3,1,"&Lîschen","SVLoeschen","aktuellen Mitarbeiter lîschen"
 ELSE 
   MENU 2,3,0,"&Lîschen"
 END IF 
 MENU 2,4,1,"S&uchen,F6","SVSuchen","Mitarbeiter suchen"
 MENU 3,0,1,"&Bewegen","",""
 MENU 3,1,1,"&NÑchster,BildAb","SVNext","nÑchster Mitarbeiter"
 MENU 3,2,1,"&Vorheriger,BildAuf","SVPrev","vorheriger Mitarbeiter"
 CALL MNHilfe(4)
 END SUB 
 
SUB MNVERTRETE()
 CALL MNProgramm()
 MENU 2,0,1,"&Daten","",""
 MENU 2,1,1,"&Neu,F2","VTNeu","neuen Vertreter hinzufÅgen"
 REM MENU 2,2,1,"S&ichern,F4","VStore","Daten des aktuellen Vertreters sichern"
 MENU 2,2,1,"&Verwerfen,Ctrl+RckT","UNDO","letzte énderungen Verwerfen"
 IF NOT MNdisabled%("SUPERVISLoeschen") THEN 
   MENU 2,3,1,"&Lîschen","VTLoeschen","aktuellen Vertreter lîschen"
 ELSE 
   MENU 2,3,0,"&Lîschen"
 END IF 
 MENU 2,4,1,"S&uchen,F6","VTSuchen","Vertreter suchen"
 MENU 3,0,1,"&Bewegen","",""
 MENU 3,1,1,"&NÑchster,BildAb","VTNext","nÑchster Vertreter"
 MENU 3,2,1,"&Vorheriger,BildAuf","VTPrev","vorheriger Vertreter"
 CALL MNHilfe(4)
 END SUB 
 
 ' Tabellenansicht
 ' ======================================================================
 
SUB MNTABLE()
 CALL MNProgramm()
 MENU 2,0,1,"B&earbeiten","",""
 MENU 2,1,1,"é&ndern,Ctrl+B","ChangeRecord","einen neuen Datensatz erfassen"
 MENU 2,2,1,"S&ichern,Ctrl+S","SaveRecord","aktuellen Datensatz sichern"
 MENU 2,3,1,"&Lîschen,Entf","RemoveCurrent","aktuellen Datensatz lîschen"
 MENU 3,0,1,"P&osition","",""
 MENU 3,1,1,"&erster,Ctrl+Pos1","SelectFirst","zum ersten Datensatz wechseln"
 MENU 3,2,1,"&letzter,Ctrl+Ende","SelectLast","zum letzten Datensatz wechseln"
 MENU 3,3,3,"","",""
 MENU 3,4,1,"&zurÅck,Auf","SelectPrevious","vorherger Datensatz"
 MENU 3,5,1,"&vor,Ab","SelectNext","nÑchster Datensatz"
 MENU 3,6,1,"Seite zurÅck,BildAuf","FormPrevPage","eine Seite zurÅck"
 MENU 3,7,1,"Seite vor,BildAb","FormNextPage","eine Seite vor"
 CALL MNHilfe(4)
 END SUB 
 
 ' ProgrammenÅ erzeugen
 ' ======================================================================
 ' 15.12.95    - Nachrichtenversand auf MAPI umgestellt
 
SUB MNProgramm()
 MENU CLEAR 
 MENU 1,0,1,"&Programm","","allgemeine Programmfunktionen"
 MENU 1,1,0,"D&rucken"
 MENU 1,2,1,"Drucker &einrichten...","PrinterSetup","Druckereinrichtung"
 MENU 1,3,1,"Druck&parameter","PrintParam","Druckparameter"
 IF MNdisabled%("SCREENSHOT") THEN 
   MENU 1,4,0,"akt.&Bildschirmseite drucken,Ctrl+F3","SeiteDrucken","Seite drucken"
 ELSE 
   IF _projekt$ LIKE "*MEDIA*" THEN 
     MENU 1,4,1,"akt.&Bildschirmseite drucken","SeiteDrucken","Seite drucken"
   ELSE 
     MENU 1,4,1,"akt.&Bildschirmseite drucken,Ctrl+F3","SeiteDrucken","Seite drucken"
   END IF 
 END IF 
  
 MENU 1,5,1,"Tagesterminliste Mitarbeiter,F12","TagestMA1a","Tagesterminliste Mitarbeiter"
 MENU 1,6,3
 MENU 1,7,1,"&Mitarbeiter wechseln","LOGIN","neuen Mitarbeiter am System anmelden"
 REM MENU 1,8,1,"&Beenden,Ctrl+F4","EXIT1()","Programm beenden"
 MENU 1,8,1,"Nachricht versenden,F9","NetMail","Nachrichten an andere Mitarbeiter versenden"
 MENU 1,9,1,"NachrichtenÅberblick","MAIL1a","öberblick der Nachrichten die an andere Mitarbeiter versandt wurden"
 at% = 9
 IF GCodie% = - 1 THEN 
   IF GCodieruf% = - 1 OR GCodieruf1% <= - 1 THEN 
     IF GCodieruf2% = - 1 THEN 
       at% = at% + 1
       MENU 1,at%,0,"aus Termin-Suchliste &wÑhlen,F10","TERKurzSuche","Auflistung Termine"
     ELSE 
       at% = at% + 1
       MENU 1,at%,1,"aus Termin-Suchliste &wÑhlen,F10","TERKurzSuche","Auflistung Termine"
     END IF 
   ELSE 
     at% = at% + 1
     MENU 1,at%,0,"aus Termin-Suchliste &wÑhlen,F10","TERKurzSuche","Auflistung Termine"
   END IF 
 END IF 
 at% = at% + 1
 IF NOT MNdisabled%("LOCALSTAMMEDIT") THEN 
   MENU 1,at%,1,"lokale Rechnereinstellungen","LokalSetup",""
   at% = at% + 1
 END IF 
 IF NOT MNdisabled%("PSSETUP") THEN 
   MENU 1,at%,1,"persînliche Mitarbeitereinstellungen","PersMASetup",""
   at% = at% + 1
 END IF 
 IF MNdisabled%("FIRMENSTAMM") THEN 
   MENU 1,at%,0,"Registrierung SmartPROVIS","LizMussNeu",""
 ELSE 
   MENU 1,at%,1,"Registrierung SmartPROVIS","LizMussNeu",""
 END IF 
 at% = at% + 1
 MENU 1,at%,1,"Programm beenden,Alt+F4","EXIT1",""
 END SUB 
 
SUB BILDAUFLOES()
 IF GBildschirm% = 800 THEN 
   CALL WriteINI("SYSTEM","Bildschirmaufloesung","1024")
 ELSE 
   CALL WriteINI("SYSTEM","Bildschirmaufloesung","800")
 END IF 
 CALL Fehler("Zur Aktivierung der neuen Einstellungen mÅssen Sie das Programm neu starten!","")
 REQUEST "Mîchten Sie das Programm jetzt beenden?","",130,req%
 IF req% = 1 THEN 
   CALL EXIT()
 END IF 
 
 END SUB 
 
SUB EXIT1()
 REQUEST "Programm Beenden ?","",130,req%
 IF req% = 0 THEN END SUB 
 cfile$ = FILE 
 IF cfile$ <> "" THEN 
   IF MOD (cfile$) OR NEW (cfile$) THEN CALL QuickStore(cfile$)
 END IF 
 CALL EXIT()
 END SUB 
 
 ' HilfemenÅ erzeugen
 ' ======================================================================
 ' 07.09.95    - Formulareditoraufruf abhÑngig von SB-Version
  
SUB MNHilfe(Spalte%)
 MENU Spalte%,0,1,"&Hilfe","","Hilfefunktionen"
 MENU Spalte%,1,1,"&Inhalt,F1","Hilfe","Inhaltsverzeichnis des Online-Handbuches"
 REM MENU Spalte%,2,1,"&ZusÑtze","WERBUNG","Informationen zu weiteren CODie-Produkten"
 MENU Spalte%,2,3
 MENU Spalte%,3,1,"I&nfo...","About","Informationen Åber Hotline"
 MENU ON 
 END SUB 
  
 ' DokumentenmenÅ erzeugen
 ' ======================================================================
 
SUB MNDOK(Spalte%)
 MENU Spalte%,0,1,"Do&kumente"
 a% = 0
 WHILE DOKGruppen$(a%) <> "" AND a% < 15
   IF a% < 10 THEN mnline$ = "&" ELSE mnline$ = ""
   mnline$ = mnline$ + LTRIM$ ( STR$ (a%,"999")) + " " + DOKGruppen$(a%)
   MENU Spalte%,a% + 1,1,mnline$,"ADRDOK"
   a% = a% + 1
 WEND 
 IF a% >= 15 THEN 
   MENU Spalte%,a% + 1,3
   MENU Spalte%,a% + 2,1,"&Weitere Gruppen...","ADRDok","Weitere Dokumentengruppen"
 END IF 
 END SUB 
 
SUB HISTORY()
 CALL DFile(2,"projekt" + _fpw$)
 END SUB 
 
SUB MNHISTORY()
 END SUB 
 
SUB FiltAB()
 SELECT WHERE ASK 
 END SUB 
 
SUB XCHANGE()
 IF NOT EXISTS (_netpath$ + "XCHANGE.SBR") THEN 
   CALL Fehler("Der Datenaustausch ist auf Ihrem System nicht installiert!","")
 ELSE 
   MOUSE OFF 
   IF NOT PROGRAMFILE ("XCHANGE") THEN LOAD _netpath$ + "XCHANGE.SBR", NEW 
   CALL RunXCHANGE()
   IF _projekt$ LIKE "FACTURA*" THEN CALL ABZUVerech()
   REM IF PROGRAMFILE ("XCHANGE") THEN CLOSE PROGRAMFILE "XCHANGE"
 END IF 
 END SUB 
 
 ' INHOUSE: Debugger aufrufen
 ' ======================================================================
 
SUB PROGDB()
 CALL EditProgram()
 DEBUG ASK 
 END SUB 
 
 
 ' Datei WERBUNG.HLP anzeigen
 ' ======================================================================
 
SUB WERBUNG()
 HELP _netpath$ + "WERBUNG"
 END SUB 
 
SUB SBLCMD()
 CREATE DIALOG "INTCMD",0,0,239,136,title$,"MS Sans Serif",8
 ADD DIALOG "INTCMD",4,0,0,238,112,0,""
 ADD DIALOG "INTCMD",9,5,11,20,22,2
 ADD DIALOG "INTCMD",5,28,14,202,10,0,"Bitte geben Sie einen gÅltigen SBL-Befehl ein:"
 ADD DIALOG "INTCMD",6,28,30,205,72,4,2,cmd$,4000
 ADD DIALOG "INTCMD",1,60,116,55,15,1,"Aus&fÅhren",1,1
 ADD DIALOG "INTCMD",1,117,116,55,15,0,"&Abbrechen",0,0
 DIALOG "INTCMD",req%
 REMOVE DIALOG "INTCMD"
 IF req% = 1 THEN 
   ON ERROR GOTO CMDTrap
   ok% = 0
   EXECUTE cmd$
 END IF 
 ok% = 1
CMDTrap: 
 IF ok% = 0 THEN 
   REQUEST "Fehler in Programmzeile:","[" + STR$ ( ERRNO ,"9999") + "] " + ERR$ ( ERRNO ),113
 END IF 
 IF test% = 0 THEN ON ERROR GOTO ErrorHandler ELSE ON ERROR 
 END SUB 
 
SUB ClearKBDBuffer()
 GET a$
 WHILE ASC (a$) <> 0
   GET a$
 WEND 
 END SUB 
 
 
  
   
 
 ' Datensatz sperren/freigeben
 ' ======================================================================
 ' Zweck:       Verwaltung von Zugriffsrechten auf einzelne DatensÑtze
 ' Nutzung:     CALL DSSperre(MainIndex$,FileName$)
 ' Parameter:   MainIndex$: Name des Hauptindexes der Datei
 '              FileName$ : Name der zu bearbeitenden Datei
 ' ======================================================================
 ' 26.04.95   
 
 
SUB DSSperre(MainIndex$,FileName$)
 cfile$ = FILE 
 mi$ = MainIndex$ + "." + FileName$
 IF Sperre.FileName$ = 0 THEN 
   CREATE DIALOG "DSLock",0,0,188,85,title$,"MS Sans Serif",8
   ADD DIALOG "DSLock",4,0,0,188,62,0,""
   ADD DIALOG "DSLock",5,32,8,149,33,0,"Mit dieser Funktion kînnen Sie den Zugriff auf den aktuellen Datensatz sperren, so da· nur noch Sie den Inhalt des Datensatzes angezeigt bekommen."
   ADD DIALOG "DSLock",9,6,8,22,25,2
   ADD DIALOG "DSLock",5,32,42,148,11,0,"Soll der aktuelle Datensatz gesperrt werden?"
   ADD DIALOG "DSLock",1,89,66,55,15,0,"Nein",0,0
   ADD DIALOG "DSLock",1,32,66,55,15,1,"Ja",1,1
   DIALOG "DSLock",req%
   REMOVE DIALOG "DSLock"
   IF req% = 1 THEN 
     MOUSE OFF 
     cds% = mi$$
     SELECT KEY cds% LOCK FILE FileName$ INDEX mi$$
     Sperre.FileName$ = vcodema%
     CALL FStore(FileName$)
   END IF 
 ELSE 
   SELECT KEY Sperre.FileName$ FILE "SUPERVIS" INDEX CodeMA.SUPERVIS
   msg$ = "Der aktuelle Datensatz wurde fÅr die ausschlie·liche Benutzung durch den Mitarbeiter " + Name.SUPERVIS + " reserviert."
   CREATE DIALOG "UnLock",0,0,193,91,title$,"MS Sans Serif",8
   ADD DIALOG "UnLock",4,0,0,193,65,0,""
   ADD DIALOG "UnLock",9,6,9,19,19,2
   ADD DIALOG "UnLock",5,32,9,154,34,0,msg$
   ADD DIALOG "UnLock",5,32,47,156,10,0,"Soll die Sperre aufgehoben werden?"
   ADD DIALOG "UnLock",1,36,72,55,15,1,"Ja",1,1
   ADD DIALOG "UnLock",1,93,72,55,15,0,"Nein",0,0
   DIALOG "UnLock",req%
   REMOVE DIALOG "UnLock"
   IF req% = 1 THEN 
     cds% = mi$$
     SELECT KEY cds% LOCK FILE FileName$ INDEX mi$$
     Sperre.FileName$ = 0
     CALL FStore(FileName$)
   END IF 
 END IF 
 MOUSE ON 
 END SUB 
 
 
SUB BETAINFO()
 CALL Fehler("Diese Funktion ist in dieser Version nicht verfÅgbar!","")
 END SUB 
 
SUB DialTeles()
 CALL DTELES(CodeKU.GAdrDat$)
 END SUB 
SUB DialTelesAQ()
  CALL DTELES(CodeKU.GAkquiDat$)
 END SUB 
 
SUB DTELES(Kunde%)
 cuko% = CodeKU.GAdrDat$
 SELECT KEY Kunde% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
 t1$ = Telefon1.GAdrDat$
 t2$ = Telefon2.GAdrDat$
 t3$ = ASTelefon1.GAdrDat$
 t4$ = ASTelefon2.GAdrDat$
 CREATE DIALOG "TELESFON",0,0,290,128,title$,"MS Sans Serif",8
 ADD DIALOG "TELESFON",4,0,0,290,99,0,""
 ADD DIALOG "TELESFON",9,10,12,22,24,2
 ADD DIALOG "TELESFON",5,36,16,246,19,0,"Bitte wÑhlen Sie die Telefonnummer aus, die automatisch per TELES.FON angewÑhlt werden soll:"
 
 ADD DIALOG "TELESFON",5,36,39,62,10,0,"Telefon 1:"
 ADD DIALOG "TELESFON",6,102,38,152,11,0,0,t1$,20
 ADD DIALOG "TELESFON",1,257,38,15,11,0,"...",2,1
 
 ADD DIALOG "TELESFON",5,36,53,63,10,0,"Telefon 2:"
 ADD DIALOG "TELESFON",6,102,52,152,11,0,0,t2$,20
 ADD DIALOG "TELESFON",1,257,52,15,11,0,"...",3,1
 
 ADD DIALOG "TELESFON",5,36,67,63,10,0,"Telefon 1 (2. Adr.):"
 ADD DIALOG "TELESFON",6,102,66,152,11,0,0,t3$,20
 ADD DIALOG "TELESFON",1,257,66,15,11,0,"...",4,1
 
 ADD DIALOG "TELESFON",5,36,81,62,10,0,"Telefon 2 (2. Adr.):"
 ADD DIALOG "TELESFON",6,102,80,152,11,0,0,t4$,20
 ADD DIALOG "TELESFON",1,257,80,15,11,0,"...",5,1
 
 ADD DIALOG "TELESFON",1,85,104,55,15,1,"&OK",1,1
 ADD DIALOG "TELESFON",1,142,104,55,15,0,"&Abbrechen",0,0
 DIALOG "TELESFON",req%
 REMOVE DIALOG ALL 
 IF req% <> 0 THEN 
   IF req% = 1 THEN req% = 2
   tn$ = "t" + STR$ (req% - 1,"0") + "$"
   tn$ = FN numeric(tn$$)
   Kunde$ = Nachname.GAdrDat$ + ", " + Vorname.GAdrDat$ + ", " + Anrede.GAdrDat$
   Firma$ = ""
   APPACTIVATE "TELES.FON"
   SENDKEYS "%V" + Kunde$ + "{TAB}" + Firma$ + "{TAB}" + tn$
   SENDKEYS "%b"
 END IF 
 END SUB 
 
 
SUB SBDLGED()
 CALL "C:\DEVTOOLS\SB4W\SBDLGED.EXE"
 END SUB 
 
SUB SBFORMED()
 IF FORM <> "" THEN 
   CALL "C:\DEVTOOLS\SB4W\SBFD4W.EXE " + FORM 
 ELSE 
   CALL "C:\SB4W\SBFD4W.EXE"
 END IF 
 END SUB 
 
SUB ADRKopWin()
 adresse$ = MakeAdr$(Codeku.GAdrDat$, - 1,0,0)
 COPY FROM Adresse$
 END SUB 

SUB ADRGesKopWin()
 adresse$ = MakeGesAdr$(Codege.geadr,0,0,0)
 COPY FROM Adresse$
 END SUB 

SUB ADRGes2KopWin()
 adresse$ = MakeGesAdr2$(Codege2.geadr2,0,0,0)
 COPY FROM Adresse$
 END SUB 

SUB ADRMAKopWin()
 adresse$ = MakeMAAdr$(Codema.maadr,0,0,0)
 COPY FROM Adresse$
 END SUB 

 
SUB ADRKopWAQ()
 lf$ = CHR$ (13) + CHR$ (10)
 adresse$ = MakeAdr$(Codeku.GAdrDat$,0,0,0)
 adresse$ = adresse$ + lf$ + notiz.GAkquiDat$ + lf$ + lf$ + ergebnis.GAkquiDat$
 COPY FROM Adresse$
 END SUB 
 
 ' externer Filterdefinitionseditor fÅr beliebige Dateien
 ' ======================================================================
 ' Zweck:       komfortable Erstellung von Filtern
 ' Nutzung:     a$=GetFilter$(Datei$)
 ' Parameter:   Datei$: SBF-Datei mit relativen Pfad und ohne Suffix
 ' ======================================================================
 ' 28.01.96   
 
FUNCTION GetFilter$(Datei$)
 REGISTER _netpath$ + "FILTWIZ.DLL","FilterWiz","CC"
 GetFilter$ = CALL ("FilterWiz",Datei$)
 REGISTER CLEAR "FilterWiz"
 END FUNCTION 
 
 


  
 
 
 REM ******** Tabellendarstellungen  ************* 
 
SUB ADRTab(datei$,dindex$):REM                                        19.Apr.1996
 REM DIRECTORY "I:\CODIE.DEV\OFFICE"
 REM CALL IBICO()
 FILE datei$
 INDEX dindex$$
 SET INDEX dindex$$
 ICON CLEAR 
 ICON 1, FILE 
 ICON 2, INDEX 
 ICON 3,"ControlBreak","FormEnd"
 ICON 4,"TableView","TableView"
 REM ICON 5,"PageView","PageView"
 ICON 5,"ChangeRecord","ChangeRecord"
 REM ICON 6,"SaveRecord","SaveRecord"
 REM ICON 7,"RecordView","RecordView"
 ICON 6,"FieldSelection","FieldSelection"
 ICON 7,"QuickReport","QuickReport"
 ICON 8,"StatusFile","StatusFile"
 ICON 9,"PrintSub","PrintSub"
 ICON UPDATE 
 ICON ON 
 SET DISPLAY 7
 PANEL OFF 
 i% = 0
 befehl$ = "OPEN FIELDS "
 WHILE Felder$(i%) <> ""
  befehl$ = befehl$ + Felder$(i%) + ","
  i% = i% + 2
 WEND 
 befehl1$ = LEFT$ (befehl$, LEN (befehl$) - 1) + ":VIEW"
 EXECUTE befehl1$
 REM OPEN FIELDS Anrede,Nachname,Geburtsname,Vorname,Stra·e,PLZ,Ort,Telefon1,Telefon2,Telefax,Stichwort,AAKunde,AALieferant:VIEW 
 i% = 0
 befehl$ = "MODIFY VIEW "
 
 WHILE Felder$(i%) <> ""
  befehl$ = "MODIFY VIEW " + Felder$(i%) + ",0,0,1,50," + Felder$(i% + 1) + ",50"
  REM EXECUTE befehl$
  i% = i% + 2
 WEND 
 ON ERROR GOTO ErrorHandler
 Superbase.IconBarState = - 1:REM                       Menu:  SetIconBar
 Superbase.SaveSettings("IconBarState")
 REM Specify that the contents of a field are to be selected when the
 REM cursor is placed in the field
 Superbase.EditSelection = - 1
 REM Activate enforced data consistency
 Superbase.EnforceDataConsistency = - 1
 SET TABLE :REM                                         Btn:   TableView
 PANEL ON 
 PANEL OFF 12,13,14
 ON ERROR GOTO ErrorHandler
 WHILE _formend% = 0
   ON ERROR GOTO ErrorHandler
   REM MOUSE ON
   WAIT MOUSE OR ICON OR PANEL 
 WEND 
 knr% = codeku.GAdrDat$
 CALL ADRIntro()
 SET FORM 
 SET DISPLAY 0
 PANEL OFF 
 ICON OFF 
 _formend% = 0
 CLOSE FIELDS :VIEW :REM                                Menu:  FieldSelection
 END SUB 
 
  
 
 
 'Tabelleneditor
 ' =====================================================================
 ' Zweck:       Bearbeiten von Dateien in Tabellenansicht
 ' Nutzung:     CALL TableEdit(datei$)
 ' =====================================================================
 
SUB TableEdit(datei$)
 cfile$ = FILE 
 FILE datei$
 CALL MNTABLE()
 MENU ON 
 ICON CLEAR 
 ICON 1,"ControlBreak","FormEnd"
 ICON 3,"ChangeRecord","ChangeRecord"
 ICON 4,"SaveRecord","SaveRecord"
 ICON 5,"RemoveCurrent","RemoveCurrent"
 ICON 7,"SelectFirst","SelectFirst"
 ICON 8,"FormPrevPage","SelectRewind"
 ICON 9,"SelectPrevious","SelectPrevious"
 ICON 10,"SelectNext","SelectNext"
 ICON 11,"FormNextPage","SelectFForward"
 ICON 12,"SelectLast","SelectLast"
 ICON UPDATE 
 ICON ON 
 SET TABLE :VIEW 
 SET DISPLAY 7
 CALL PSelectFirst()
 VIEW 
 _formend% = 0
 WHILE _formend% = 0
   ON ERROR GOTO ErrorHandler
   MOUSE ON :REM Damit irgendein Befehl nach dem Dateiende ausgefÅhrt werden kann 
 WEND 
 _formend% = 0
 SET DISPLAY 0
 SET FORM 
 FILE cfile$
 END SUB 
 
 REM Allg Buttons deaktivieren
 
SUB ButDesabled()
 IF _projekt$ <> "WAWI" THEN 
   ON ERROR GOTO f110820099
   f.neu.enabled = 0
f110820099: 
   ON ERROR GOTO ErrorHandler
   f.bearb.enabled = 0
   f.abbruch.enabled = - 1
   f.abbruch.visible = - 1
   REM f.suchen.visible = 0
   f.suchen.enabled = 0
   f.links1.enabled = 0
   f.rechts1.enabled = 0
   f.zurueck.enabled = 0
 END IF 
 SET EDIT SELECT ON 
 END SUB 
 
SUB ButEnabled()
 IF _projekt$ <> "WAWI" THEN 
   ON ERROR GOTO f1108200910
   f.neu.enabled = - 1
f1108200910: 
   ON ERROR GOTO ErrorHandler 
   f.abbruch.enabled = 0
   f.abbruch.visible = 0
   f.bearb.enabled = - 1
   f.suchen.visible = - 1
   f.suchen.enabled = - 1
   f.links1.enabled = - 1
   f.rechts1.enabled = - 1
   f.zurueck.enabled = - 1
 END IF 
 END SUB 
 
 
SUB SeiteDrucken()
 MOUSE OFF 
 
 ON ERROR GOTO adrdrufehl
 IF PRINTER (1) = 1 OR PRINTER (1) = 2 THEN 
   c$ = PRINTER :d$ = PRINTER (0)
   SET PRINTER c$,d$,2,9
   PRINT CURRENT PAGE 
   REM PRINT WINDOW 
   GOTO endruck03092002
 END IF 
 
adrdrufehl: 
 MOUSE ON 
 REM c$ = PRINTER :d$ = PRINTER (0)
 ON ERROR GOTO endruck03092002
 SET PRINTER 
 PRINT CURRENT PAGE 
 REM PRINT WINDOW 
 FORM 
endruck03092002: 
 ON ERROR GOTO ErrorHandler
 MOUSE ON 
 END SUB 
 
 
 
 
SUB VWrite(x0%,y0%,x1%,text0$)
 text1$ = FN ansi(text0$)
 vzeil% = CALL ("VpeWrite",hdoc%,x0%,y0%,x1%,VFREE%,text1$)
 END SUB 
 
SUB VPrintDoc()
 a% = CALL ("VpePrintDoc",hdoc%,0)
 END SUB 
 
SUB VPrevDoc()
 a% = CALL ("VpePreviewDoc",hdoc%,0,1)
 END SUB 
  
SUB VLine(x0%,y0%,x1%,y1%)
 a% = CALL ("VpeLine",hDoc%,x0%,y0%,x1%,y1%)
 END SUB 
 
SUB VPrint(x0%,y0%,text0$)
 text1$ = FN ansi(text0$)
 a% = CALL ("VpePrint",hdoc%,x0%,y0%,text1$)
 END SUB 
 
SUB VBox(x0%,y0%,x1%,y1%)
 a% = CALL ("VpeBox",hdoc%,x0%,y0%,x1%,y1%)
 END SUB 
 
SUB VTransp(onoff%)
 REM onoff% = 0 ist Transparenz aus
 a% = CALL ("VpeSetTransparentMode",hdoc%,onoff%)
 END SUB 

SUB VAlign(onoff%)
 REM onoff% = 0 ist links
 REM        = 1 ist rechts
 a% = CALL ("VpeSetAlign",hdoc%,onoff%)
 END SUB 

SUB VSetPen(pensize%,farbe%)
 REM weis=16777215
 REM pensize%=0 -> keine Umrandung
 a% = CALL ("VpeSetPen",hdoc%,pensize%,0,farbe%)
 END SUB 
 
SUB VSetBkgColor(farbe%)
 REM weis=16777215
 a% = CALL ("VpeSetBkgColor",hdoc%,farbe%)
 END SUB 
 
SUB VPEINI(title2$,FormatPrint$)
 REM Druckerformat setzen
 IF FormatPrint$ = "A4h" THEN 
   REM c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,1,9

         ON ERROR GOTO adrdr170920027
         IF PRINTER (1) = 1 OR PRINTER (1) = 2 THEN 
           c$ = PRINTER :d$ = PRINTER (0)
           SET PRINTER c$,d$,1,9
           REM PRINT CURRENT PAGE 
           GOTO endruck170920027
         END IF 
         
adrdr170920027: 
         MOUSE ON 
         REM c$ = PRINTER :d$ = PRINTER (0)
         ON ERROR GOTO endruck170920027
         SET PRINTER 
         REM PRINT CURRENT PAGE 
         FORM 
endruck170920027: 
         ON ERROR GOTO ErrorHandler 


   format% = 0
 END IF 
 IF FormatPrint$ = "A4q" THEN 
  REM c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,2,9
         ON ERROR GOTO adrdr170920028
         IF PRINTER (1) = 1 OR PRINTER (1) = 2 THEN 
           c$ = PRINTER :d$ = PRINTER (0)
           SET PRINTER c$,d$,2,9
           REM PRINT CURRENT PAGE 
           GOTO endruck170920028
         END IF 
         
adrdr170920028: 
         MOUSE ON 
         REM c$ = PRINTER :d$ = PRINTER (0)
         ON ERROR GOTO endruck170920028
         SET PRINTER 
         REM PRINT CURRENT PAGE 
         FORM 
endruck170920028: 
         ON ERROR GOTO ErrorHandler 
  format% = 8192
 END IF 
 VFREE% = - 1
 VLEFT% = - 2
 VRIGHT% = - 3
 VLEFTMARGIN% = - 4
 VRIGHTMARGIN% = - 5
 VTOP% = - 6
 VBOTTOM% = - 7
 VTOPMARGIN% = - 8
 VBOTTOMMARGIN% = - 9
 AUTOBON% = 0
 AUTOBOFF% = 1
 AUTOBNLIMITS% = 2
 
 hdoc% = CALL ("VpeOpenDoc",0,title2$, - 1, - 1,format%)
 a% = CALL ("VpeSetAutoBreak",hdoc%,2)
 mLeft% = CALL ("VpeGet",hdoc%,VLEFTMARGIN%) + 7
 mright% = CALL ("VpeGet",hdoc%,VRIGHTMARGIN%)
 mTop% = CALL ("VpeGet",hdoc%,VTOPMARGIN%)
 mBottom% = CALL ("VpeGet",hdoc%,VBOTTOMMARGIN%)
 vZeil% = mTop% + 200
 END SUB 
 
 
 '* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 '  Druckroutine Åber VPE fÅr Wartungslisten * 
 '  beding$ - Bedingungen (Filter) * 
 '  Title2$ - Titel der Liste * 
 '  ord$ - Sortierreihenfolge * 
 '  FormatPrint$ - Drucker auf A4quer oder A4 hoch * 
 '  title2$ - ListenÅberschrift * 
 '  so%   Sortierung: 1=Lieferant, 2=Produktgruppe, 3=PrÅfart, 4=Artikelnummer, 5=Termine
 '  bart% Berichtsart: 0=alle offenen Wartungstermine
 '                     1=alle erledigten Wartungstermine
 '                     2=alle Wartungstermine
 '  scedov%=1 Aufruf aus SchiffsauswahlmenÅ
 '  reqbild%<>1 Ausgabe direkt auf den Drucker
 '* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 
SUB VPEADRGr(Wbericht$,FormatPrint$,title2$,Terminejn$,KurzLang$,sort$)
 SELECT FIRST FILE "supervis" INDEX codema.supervis
 SELECT KEY GMACodeMA% FILE "supervis" INDEX codema.supervis
 fussma$ = "gedruckt durch: " + Name.supervis + " um " + TIME$ ( NOW ,"hh:mm") + " Uhr"
 MOUSE OFF 
 REM wbericht$ enthÑlt den Namen der zu druckenden Datei
 REM Initialisierung der VPE
 REM wbericht$ = GAdrDat$
 FormatPrint$ = "A4h"
 CALL VPEINI(title2$,FormatPrint$)
 FILE wbericht$
 IF sort$ LIKE "Nachname*" OR sort$ = "" THEN 
   INDEX nachname.wbericht$
 END IF 
 IF sort$ LIKE "PLZ*" THEN 
   INDEX plz.wbericht$
 END IF 
 req% = 0
 SELECT FIRST 
 gruppeneu$ = nachname.wbericht$
 gruppeold$ = gruppeneu$
 vzeil% = mTop%
 CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
 CALL VWrite(mleft%,vzeil% + 10,1610,"['Arial' S 10 B C BLACK]" + title2$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))

 REM CALL Fehler("VPE","")
   REM  CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
   REM  vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   REM  a% = vzeil% + 10

 CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
 CALL VWrite(mleft% + 720,vzeil%,mright%,"['Arial' S 8 B]Seite " + fussma$)
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 vzeil% = obBottom% + 30
 ueberpos% = vzeil%
 CALL VTransp(0)
 CALL VSetPen(0,0)
 zeilenabstand% = 40
 zeilenoffset% = 40
 i% = 1
 MOUSE OFF 
 WHILE NOT EOF (wbericht$)
   IF GASP% THEN 
     IF workstation% <> 0 THEN 
       IF IsWksVisible%(Workstation.wbericht$) <> - 1 THEN 
         GOTO VPEADREnde
       END IF 
     END IF 
   END IF 
   IF GMASuperCount% > 0 THEN 
     IF IsMASuper%(codema.wbericht$) <> - 1 THEN 
       GOTO VPEADREnde
     END IF 
   END IF 
   codeku% = codeku.wbericht$
   a% = vzeil%
   czeile% = vzeil%
   cPage% = CALL ("VpeGetCurrentPage",hdoc%)
   cPageold% = cPage%
   ok% = 0
   IF MNdisabled%("DATALOCK") THEN 
     IF sperre.wbericht$ = 0 OR sperre.wbericht$ = vcodema% THEN 
       ok% = - 1
     ELSE 
       ok% = 0
     END IF 
   ELSE 
     ok% = - 1
   END IF 
   IF GohneVertr$ LIKE "j" THEN 
     IF EXISTS (codeku%,codeku.kvertrag) THEN ok% = 0
   END IF 
   IF ok% = 0 THEN GOTO VPEADREnde
   a% = a% + 10
   IF anrede.wbericht$ <> "" OR Kundennummer.wbericht$ <> "" THEN 
     CALL VWrite(mleft%,a%,1000,"['Arial' S 8 B C BLACK]" + "Anrede: " + anrede.wbericht$)
     REM CALL VWrite(mleft% + 270,a%,1000,"['Arial' S 8 B C BLACK]" + anrede.wbericht$)
     CALL VWrite(mleft% + 1003,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + "Knr: " + Kundennummer.wbericht$)
     a% = vzeil% + 40
   END IF 
   IF titel.wbericht$ <> "" THEN 
     CALL VWrite(mleft%,a%,1000,"['Arial' S 8 B C BLACK]" + "Titel: " + titel.wbericht$)
     REM CALL VWrite(mleft% + 270,a%,1000,"['Arial' S 8 B C BLACK]" + titel.wbericht$)
     a% = vzeil%
   END IF 
   IF nachname <> "" THEN 
     CALL VWrite(mleft%,a%,1200,"['Arial' S 9 B C BLACK]" + "Name: " + nachname.wbericht$)
     REM CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name: ")
     a% = vzeil%
   END IF 
   IF stra·e.wbericht$ <> "" THEN 
     CALL VWrite(mleft% + 1200,a%,2000,"['Arial' S 8 B C BLACK]" + stra·e.wbericht$)
     a% = vzeil%
   END IF 
   IF plz.wbericht$ <> "" OR ort.wbericht$ <> "" THEN 
     CALL VWrite(mleft% + 1200,a%,1590,"['Arial' S 8 B C BLACK]" + plz.wbericht$)
     CALL VWrite(mleft% + 1390,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + ort.wbericht$)
     a% = vzeil%
     CALL VWrite(mleft% + 1200,a%,1590,"['Arial' S 8 B C BLACK]" + land.wbericht$)
     a% = vzeil%
   END IF 
   ON ERROR GOTO dr190620022
   IF geburtsname.wbericht$ <> "" THEN 
     CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + geburtsname.wbericht$)
     IF anrede.wbericht$ LIKE "Herr*" OR anrede.wbericht$ LIKE "Frau*" THEN 
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Geburtsname: ")
     ELSE 
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Zusatz: ")
     END IF 
     a% = vzeil%
   END IF 
dr190620022: 
   ON ERROR GOTO ErrorHandler
   IF vorname.wbericht$ <> "" THEN 
     CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + vorname.wbericht$)
     IF anrede.wbericht$ LIKE "Herr*" OR anrede.wbericht$ LIKE "Frau*" THEN 
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Vorname: ")
     ELSE 
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "z.H.: ")
     END IF 
     a% = vzeil%
   END IF 
   a% = vzeil%
   IF Ausweisnr.wbericht$ <> "" THEN 
     IF RPAussteller.wbericht$ <> "" THEN 
       rpaus$ = "    Ausstellungsort: " + RPAussteller.wbericht$
     ELSE 
       rpaus$ = ""
     END IF 
      rpausd$ = "
     ON ERROR GOTO er140520041
     IF RPAusstellung.wbericht$ > 0 THEN 
       rpausd$ = "    Ausstellungsdatum: " + DATE$ (RPAusstellung.wbericht$,"0d.mm.yyyy")
     ELSE 
       rpausd$ = ""
     END IF 
     CALL VWrite(mleft%,a%,1200,"['Arial' S 8 B C BLACK]" + "Ausweisnummer. " + ausweisnr.wbericht$ + rpaus$ + rpausd$)
     a% = vzeil%
   END IF 
er140520041: 
   ON ERROR GOTO ErrorHandler

   IF EXISTS (codeku%,codeku.GTelDat$) THEN 
     FILE GTelDat$
     INDEX codeku.GTelDat$
     SELECT FIRST 
     SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
     a% = vzeil%
     MOUSE OFF 
     WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku%
       IF art.GTelDat$ <> "" THEN CALL VWrite(mleft%,a%,1200,"['Arial' S 8 B C BLACK]" + art.GTelDat$)
       IF nummer.GTelDat$ <> "" THEN CALL VWrite(mleft% + 1200,a%,mright% - 3,"['Arial' S 8 C B BLACK]" + nummer.GTelDat$)
       SELECT NEXT 
       IF NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku% THEN a% = vzeil%
     WEND 
     a% = vzeil%
     vzeil% = a%
     FILE wbericht$
   END IF 
   a% = vzeil% + 10
   CALL VLine(mleft% - 7,a%,mright%,a%)
   vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   a% = vzeil% + 10
   vzeil% = a%
   okab% = 0
   REM CALL Fehler("","")
   IF k1blz.wbericht$ <> "" OR k1Bank.wbericht$ <> "" OR K1Konto.wbericht$ <> "" THEN 
     okab% = 1
     a% = vzeil% + 10
     CALL VWrite(mleft%,a%,610,"['Arial' S 8 B C BLACK]" + "Konto1 BLZ: " + K1BLZ.wbericht$)
     CALL VWrite(mleft% + 320,a%,1300,"['Arial' S 8 B C BLACK]" + "Bank: " + K1Bank.wbericht$)
     CALL VWrite(mleft% + 1300,a%,mright%,"['Arial' S 8 B C BLACK]" + "Kontonr:" + K1Konto.wbericht$)
     kt$ = ""
     IF K1IBAN.GADRDat$ <> "" AND k1swift.GADRDat$ <> "" THEN 
       kt$ = "IBAN: " + K1IBAN.GADRDat$ + "            Swift: " + k1swift.GADRDat$ + "    "
     END IF 

     a% = vzeil% + 5
     kt1$ = ""
     IF Bank1ArtKonto.wbericht$ <> "" OR KontoInh1.wbericht$ <> "" THEN 
       kt1$ = " (Kontoart: " + Bank1ArtKonto.wbericht$ + "              Inhaber: " + KontoInh1.wbericht$ + ")"
     END IF 
     CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + kt$ + kt1$)
     REM CALL VWrite(mleft% + 1310,a%,mright%,"['Arial' S 8 B C BLACK]" + "Kontonr: " + K1Konto.wbericht$ + kt$)
     
     REM CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Konto1 BLZ: ")
     REM CALL VWrite(mleft% + 270,a%,610,"['Arial' S 8 B C BLACK]" + K1BLZ.wbericht$)
     REM CALL VWrite(mleft% + 500,a%,770,"['Arial' S 8 B C BLACK]" + "Bank: ")
     REM CALL VWrite(mleft% + 580,a%,1500,"['Arial' S 8 B C BLACK]" + K1Bank.wbericht$)
     REM CALL VWrite(mleft% + 1440,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + K1Konto.wbericht$)
     REM CALL VWrite(mleft% + 1310,a%,1630,"['Arial' S 8 B C BLACK]" + "Kontonr: ")
   END IF 
   a% = vzeil% + 5
   vzeil% = a%
   IF k2blz.wbericht$ <> "" OR k2Bank.wbericht$ <> "" OR K2Konto.wbericht$ <> "" THEN 
     okab% = 1
     a% = vzeil% + 10
     CALL VWrite(mleft%,a%,610,"['Arial' S 8 B C BLACK]" + "Konto2 BLZ: " + K2BLZ.wbericht$)
     CALL VWrite(mleft% + 320,a%,1300,"['Arial' S 8 B C BLACK]" + "Bank: " + K2Bank.wbericht$)
     CALL VWrite(mleft% + 1300,a%,mright%,"['Arial' S 8 B C BLACK]" + "Kontonr:" + K2Konto.wbericht$)
     kt$ = ""
     IF K2IBAN.wbericht$ <> "" AND k2swift.wbericht$ <> "" THEN 
       kt$ = "IBAN: " + K2IBAN.wbericht$ + "            Swift: " + k2swift.wbericht$ + "    "
     END IF 
     a% = vzeil% + 5
     kt1$ = ""
     IF Bank2ArtKonto.wbericht$ <> "" OR KontoInh2.wbericht$ <> "" THEN 
       kt1$ = " (Kontoart: " + Bank2ArtKonto.wbericht$ + "              Inhaber: " + KontoInh2.wbericht$ + ")"
     END IF 
     CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + kt$ + kt1$)
   END IF 
   a% = vzeil% + 5
   vzeil% = a%
   ON ERROR GOTO dr190620023
   IF k3blz.wbericht$ <> "" OR k3Bank.wbericht$ <> "" OR K3Konto.wbericht$ <> "" THEN 
     okab% = 1
     a% = vzeil% + 10
     CALL VWrite(mleft%,a%,610,"['Arial' S 8 B C BLACK]" + "Konto3 BLZ: " + K3BLZ.wbericht$)
     CALL VWrite(mleft% + 320,a%,1300,"['Arial' S 8 B C BLACK]" + "Bank: " + K3Bank.wbericht$)
     CALL VWrite(mleft% + 1300,a%,mright%,"['Arial' S 8 B C BLACK]" + "Kontonr:" + K3Konto.wbericht$)
     kt$ = ""
     IF K3IBAN.wbericht$ <> "" AND k3swift.wbericht$ <> "" THEN 
       kt$ = "IBAN: " + K3IBAN.wbericht$ + "            Swift: " + k3swift.wbericht$ + "    "
     END IF 
     a% = vzeil% + 5
     kt1$ = ""
     IF Bank3ArtKonto.wbericht$ <> "" OR KontoInh3.wbericht$ <> "" THEN 
       kt1$ = " (Kontoart: " + Bank3ArtKonto.wbericht$ + "              Inhaber: " + KontoInh3.wbericht$ + ")"
     END IF 
     CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + kt$ + kt1$)
   END IF 
dr190620023: 
   ON ERROR GOTO ErrorHandler
   IF okab% = 1 THEN CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
   vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   a% = vzeil% + 10
   REM 111297
   IF Geburtstag.wbericht$ <> 0 THEN 
     IF anrede.GadrDat$ LIKE "Herr*" OR anrede.GadrDat$ LIKE "FrÑ*" OR anrede.GadrDat$ LIKE "Frau*" OR anrede.GadrDat$ LIKE "Fami*" OR anrede.GadrDat$ LIKE "Ehe*" THEN 
       CALL VWrite(mleft%,a%,1310,"['Arial' S 8 B C BLACK]" + "Geburtstag: " + LTRIM$ ( DATE$ (Geburtstag.wbericht$,"0d.mm.yyyy")) + " / Geburtsort: " + Gebort.GADRDat$)
     ELSE 
       CALL VWrite(mleft%,a%,1310,"['Arial' S 8 B C BLACK]" + "FirmengrÅndung: " + DATE$ (Geburtstag.wbericht$,"0d.mm.yyyy") + " / Geburtsort: " + Gebort.GADRDat$)
     END IF 
     CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
     vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     a% = vzeil% + 10
   END IF 
 
   IF erstkontakt.wbericht$ <> 0 OR letzter_Kontakt.wbericht$ <> 0 THEN 
     CALL VWrite(mleft%,a%,710,"['Arial' S 8 B C BLACK]" + "letzter Kontakt: " + DATE$ (letzter_Kontakt.wbericht$,"0d.mm.yyyy"))
     a% = vzeil%
     CALL VWrite(mleft%,a%,710,"['Arial' S 8 B C BLACK]" + "Erstkontakt    : " + DATE$ (Erstkontakt.wbericht$,"0d.mm.yyyy"))
     a% = vzeil%
     CALL VWrite(mleft%,a%,710,"['Arial' S 8 B C BLACK]" + "Kunde seit     : " + DATE$ (Kunde_seit.wbericht$,"0d.mm.yyyy"))
     CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
     vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     a% = vzeil% + 10
   END IF 

   IF stichwort.wbericht$ <> "" THEN 
     CALL VWrite(mleft%,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + "Stichworte: " + Stichwort.wbericht$)
     a% = vzeil% + 10
     REM 090799
     ttab$ = Stichwort.wbericht$
     REM IF notiz.wbericht$ <> "" THEN ttab$ = ttab$ + CHR$ (10) + CHR$ (13) + "Notizen zur Adresse:" + CHR$ (10) + CHR$ (13) + notiz.wbericht$

     REM CALL VWrite(mleft%,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + Stichwort.wbericht$)
   END IF 
   REM 111297
 
     CALL VWrite(mleft%,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + "Adress-Status: " + ADRStatus.wbericht$)
     a% = vzeil% + 10
     IF ADRGruppe.wbericht$ LIKE "<ohne Zuordnung>" THEN 
     ELSE 
       CALL VWrite(mleft%,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + "Adress-Gruppe: " + ADRGruppe.wbericht$)
       a% = vzeil% + 10
     END IF 

   IF _projekt$ LIKE "PROVIS*" THEN 
     codema1% = Codema
     IF EXISTS (codema1%,codema.maadr) THEN 
       SELECT KEY codema1% FILE "maadr" INDEX codema.maadr
       name$ = nachname.maadr + ", " + vorname.maadr + "," + Agenturnr.maadr
       CALL VWrite(mleft%,a%,1850,"['Arial' S 8 B C BLACK]" + "Betreuung durch: " + name$)
       CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
     END IF 
   END IF 

   vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   a% = vzeil% + 15
   CALL VLine(mleft% - 7,a%,mright%,a%)
   vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   a% = vzeil% + 10
   vzeil% = a%
   REM VPE neu
   IF KurzLang$ = "n" THEN 
     CALL VPEKurzLangJ()
   END IF 
   FILE wbericht$
   neueseite% = 0
   IF VertragJN$ = "j" THEN 
     _CodeKU% = Codeku.wbericht$
     IF EXISTS (_codeku%,codeku.kvertrag) THEN 
       initjn$ = "j"
       CALL VPEVertragJ(initjn$,_CodeKU%)
       neueseite% = - 1
       REM a% = CALL ("VpePageBreak",hdoc%)
       REM vzeil% = a%
     END IF 
   END IF 
   a% = vzeil%
   IF TermineJN$ = "j" THEN 
     _CodeKU% = Codeku.wbericht$
     IF EXISTS (_codeku%,codeku.GAkquiDat$) THEN 
       initjn$ = "n"
       CALL VPETermineJ(initjn$,_CodeKU%)
       neueseite% = - 1
     END IF 
   END IF 
VPEADREnde: 
   a% = vzeil%
   maxbottom% = vzeil%
   a% = vzeil%
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   IF obBottom% < a% THEN obBottom% = a%

   REM dadurch neue Seite erzwingen
   IF neueseite% = - 1 THEN obBottom% = 0

   IF obBottom% >= mBottom% THEN 
     REM CALL VBox(mleft% - 7,mTop%,mright%,obBottom%)
     CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
     CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
     CALL VLine(mright%,mtop%,mright%,czeile%)
     CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
     ab% = CALL ("VpePageBreak",hdoc%)
     vzeil% = ueberpos%
     a% = vzeil%
   ELSE 
     SELECT NEXT FILE wbericht$
     MOUSE OFF 
     i% = i% + 1
     SET STATUS STR$ (i%,"0000000") + " Adressen verarbeitet!"
     IF KurzLang$ <> "j" THEN 
       REM a% = vzeil%
       REM a% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       REM CALL VLine(mleft% - 7,a% + 3,mright%,a% + 3)
       REM a% = a% + 15
       vzeil% = a%
       IF EOF (wbericht$) THEN 
         CALL VLine(mleft% - 7,mtop%,mleft% - 7,obBottom%)
         CALL VLine(mright%,mtop%,mright%,obBottom%)
         CALL VLine(mleft% - 7,obBottom%,mright%,obBottom%)
       END IF 
     ELSE 
       IF NOT EOF (wbericht$) THEN 
         IF _projekt$ LIKE "FACTURA" OR _projekt$ LIKE "OFFICE" OR _projekt$ LIKE "IMMAK" OR _projekt$ LIKE "MEDIA" THEN 
           vzeil% = a% + 20
           a% = vzeil%
           IF EOF (wbericht$) THEN 
             CALL VLine(mleft% - 7,mtop%,mleft% - 7,obBottom%)
             CALL VLine(mright%,mtop%,mright%,obBottom%)
             CALL VLine(mleft% - 7,obBottom%,mright%,obBottom%)
           END IF 
         ELSE 
           a% = CALL ("VpePageBreak",hdoc%)
           czeile% = vzeil%
           cPage% = CALL ("VpeGetCurrentPage",hdoc%)
           cPageold% = cPage%
           vzeil% = ueberpos%
         END IF 
       END IF 
     END IF 
   END IF 
 WEND 
 IF KurzLang$ <> "j" THEN 
   vzeil% = vzeil% + 150
 ELSE 
   vzeil% = listende% + 100
 END IF 
 CALL VPrint(mleft%,vzeil% + 20,"['Arial' S 15 B C BLACK]Ende der Liste")
 cPage% = CALL ("VpeGetCurrentPage",hdoc%)
 
 FOR b% = 1 TO cPage%
   vzeil% = mTop%
   a% = CALL ("VpeGotoPage",hdoc%,b%)
   CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
   CALL VWrite(mleft%,vzeil% + 10,1610,"['Arial' S 10 B C BLACK]" + title2$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
   CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
 NEXT b%
 a% = CALL ("VpeGotoPage",hdoc%,1)
 MOUSE ON 
 IF scedov% = 1 AND reqbild% <> 1 THEN 
   CALL VPrintDoc()
 ELSE 
   REM CALL VPrevDoc()
   MOUSE ON 
   CALL Fehler("Bitte nach dem Ausdruck eine Taste drÅcken!","")
   CALL VPrevDoc()
   WAIT MOUSE OR KEY OR MENU 
   CALL Fehler("Ausdruck wurde beendet!","Um fortzufahren bitte auf den OK-Button drÅcken!")
 END IF 
 REM Nach dem Drucken, Drucker auf A4 hoch setzen
 REM c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,1,9

 ON ERROR GOTO ErrorHandler 

 MOUSE ON 
 REM CLOSE FILE wbericht$
 END SUB 
 
  
 
SUB VPEKurzLangJ()
     IF _projekt$ LIKE "PROVIS" THEN 
       a% = vzeil%
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       a% = vzeil% + 10
       vzeil% = a%
       CALL VWrite(mleft% + 110,a%,1200,"['Arial' S 8 B C BLACK]" + Land.wbericht$)
       CALL VWrite(mleft%,a%,300,"['Arial' S 8 B C BLACK]" + "Land: ")
       a% = vzeil%
       IF anrede.GadrDat$ LIKE "Herr*" OR anrede.GadrDat$ LIKE "FrÑ*" OR anrede.GadrDat$ LIKE "Frau*" OR anrede.GadrDat$ LIKE "Fami*" OR anrede.GadrDat$ LIKE "Ehe*" THEN 
         CALL VWrite(mleft%,a%,360,"['Arial' S 8 B C BLACK]" + "Geburtstag: ")
       ELSE 
         CALL VWrite(mleft%,a%,360,"['Arial' S 8 B C BLACK]" + "Fa.grÅndung: ")
       END IF 
       CALL VWrite(mleft% + 270,a%,620,"['Arial' S 8 B C BLACK]" + DATE$ (Geburtstag.wbericht$,"0d.mm.yyyy"))
       CALL VWrite(mleft% + 810,a%,1200,"['Arial' S 8 B C BLACK]" + DATE$ (Kunde_seit.wbericht$,"0d.mm.yyyy"))
       CALL VWrite(mleft% + 500,a%,900,"['Arial' S 8 B C BLACK]" + "Kunde seit: ")
       a% = vzeil%
       CALL VWrite(mleft%,a%,360,"['Arial' S 8 B C BLACK]" + "NationalitÑt: ")
       CALL VWrite(mleft% + 270,a%,620,"['Arial' S 8 B C BLACK]" + NationalitÑt.wbericht$)
       CALL VWrite(mleft% + 810,a%,1300,"['Arial' S 8 B C BLACK]" + Staatsangehîrig.wbericht$)
       CALL VWrite(mleft% + 500,a%,1000,"['Arial' S 8 B C BLACK]" + "Staatsangehîrigkeit: ")
       a% = vzeil%
       REM 090799
       REM CALL VWrite(mleft%,a%,360,"['Arial' S 8 B C BLACK]" + "Beruf: ")
       REM CALL VWrite(mleft% + 270,a%,610,"['Arial' S 8 B C BLACK]" + Beruf.wbericht$)
       CALL VWrite(mleft% + 270,a%,800,"['Arial' S 8 B C BLACK]" + Firmenform.wbericht$)
       CALL VWrite(mleft%,a%,380,"['Arial' S 8 B C BLACK]" + "Firmenform: ")
       CALL VWrite(mleft% + 500,a%,1000,"['Arial' S 8 B C BLACK]" + "Beruf: ")
       CALL VWrite(mleft% + 810,a%,mright% - 2,"['Arial' S 8 B C BLACK]" + Beruf.wbericht$)

       a% = vzeil%
       CALL VWrite(mleft% + 270,a%,1610,"['Arial' S 8 B C BLACK]" + Hobbys.wbericht$)
       CALL VWrite(mleft%,a%,360,"['Arial' S 8 B C BLACK]" + "Hobbys: ")
       a% = vzeil% + 10
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Familienstand: ")
       CALL VWrite(mleft% + 270,a%,810,"['Arial' S 8 B C BLACK]" + Familienstand.wbericht$)
       CALL VWrite(mleft% + 500,a%,1030,"['Arial' S 8 B C BLACK]" + "AnstellungsverhÑltnis: ")
       CALL VWrite(mleft% + 810,a%,1300,"['Arial' S 8 B C BLACK]" + Anstellungsverh.wbericht$)
       
       a% = vzeil%
       CALL VWrite(mleft% + 270,a%,1610,"['Arial' S 8 B C BLACK]" + STR$ (Anzahl_Kinder.wbericht$,"99"))
       IF anrede.GadrDat$ LIKE "Herr*" OR anrede.GadrDat$ LIKE "FrÑ*" OR anrede.GadrDat$ LIKE "Frau*" OR anrede.GadrDat$ LIKE "Fami*" OR anrede.GadrDat$ LIKE "Ehe*" THEN 
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Anzahl Kinder: ")
       ELSE 
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Anzahl Mitarb.: ")
       END IF 
       a% = vzeil%
       REM 090799
       IF anrede.GadrDat$ LIKE "Herr*" OR anrede.GadrDat$ LIKE "FrÑ*" OR anrede.GadrDat$ LIKE "Frau*" OR anrede.GadrDat$ LIKE "Fami*" OR anrede.GadrDat$ LIKE "Ehe*" THEN 
         ttab$ = "Name Kind 1: " + K1Name.wbericht$ + ", " + k1nname.wbericht$ + " /(Geburtstag: " + DATE$ (K1Geburtstag.wbericht$,"0d.mm.yyyy") + ")" + " / Geburtsort: " + GebortK1.GADRDat$
       ELSE 
         ttab$ = "GF 1: " + K1Name.wbericht$ + ", " + k1nname.wbericht$ + " /(Geburtstag: " + DATE$ (K1Geburtstag.wbericht$,"0d.mm.yyyy") + ")" + " / Geburtsort: " + GebortK1.GADRDat$
       END IF 
       IF (K1Name.wbericht$ <> "") THEN CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + ttab$)
       REM CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name Kind 1: ")
       REM CALL VWrite(mleft% + 270,a%,610,"['Arial' S 8 B C BLACK]" + K1Name.wbericht$)
       REM CALL VWrite(mleft% + 500,a%,1000,"['Arial' S 8 B C BLACK]" + "Geburtstag: ")
       REM CALL VWrite(mleft% + 810,a%,1300,"['Arial' S 8 B C BLACK]" + DATE$ (K1Geburtstag.wbericht$,"0d.mm.yyyy"))
       a% = vzeil%
       IF anrede.GadrDat$ LIKE "Herr*" OR anrede.GadrDat$ LIKE "FrÑ*" OR anrede.GadrDat$ LIKE "Frau*" OR anrede.GadrDat$ LIKE "Fami*" OR anrede.GadrDat$ LIKE "Ehe*" THEN 
         ttab$ = "Name Kind 2: " + K2Name.wbericht$ + ", " + k2nname.wbericht$ + " /(Geburtstag: " + DATE$ (K2Geburtstag.wbericht$,"0d.mm.yyyy") + ")" + " / Geburtsort: " + GebortK2.GADRDat$
       ELSE 
         ttab$ = "GF 2: " + K2Name.wbericht$ + ", " + k2nname.wbericht$ + " /(Geburtstag: " + DATE$ (K2Geburtstag.wbericht$,"0d.mm.yyyy") + ")" + " / Geburtsort: " + GebortK2.GADRDat$
       END IF 
       IF (K2Name.wbericht$ <> "") THEN CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + ttab$)
       REM CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name Kind 2: ")
       REM CALL VWrite(mleft% + 270,a%,610,"['Arial' S 8 B C BLACK]" + K2Name.wbericht$)
       REM CALL VWrite(mleft% + 500,a%,1000,"['Arial' S 8 B C BLACK]" + "Geburtstag: ")
       REM CALL VWrite(mleft% + 810,a%,1300,"['Arial' S 8 B C BLACK]" + DATE$ (K2Geburtstag.wbericht$,"0d.mm.yyyy"))
       a% = vzeil%
       IF anrede.GadrDat$ LIKE "Herr*" OR anrede.GadrDat$ LIKE "FrÑ*" OR anrede.GadrDat$ LIKE "Frau*" OR anrede.GadrDat$ LIKE "Fami*" OR anrede.GadrDat$ LIKE "Ehe*" THEN 
         ttab$ = "Name Kind 3: " + K3Name.wbericht$ + ", " + k3nname.wbericht$ + " /(Geburtstag: " + DATE$ (K3Geburtstag.wbericht$,"0d.mm.yyyy") + ")" + " / Geburtsort: " + GebortK3.GADRDat$
       ELSE 
         ttab$ = "GF 3: " + K3Name.wbericht$ + ", " + k3nname.wbericht$ + " /(Geburtstag: " + DATE$ (K3Geburtstag.wbericht$,"0d.mm.yyyy") + ")" + " / Geburtsort: " + GebortK3.GADRDat$
       END IF 
       IF (K3Name.wbericht$ <> "") THEN CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + ttab$)
       REM CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name Kind 3: ")
       REM CALL VWrite(mleft% + 270,a%,610,"['Arial' S 8 B C BLACK]" + K3Name.wbericht$)
       REM CALL VWrite(mleft% + 500,a%,1000,"['Arial' S 8 B C BLACK]" + "Geburtstag: ")
       REM CALL VWrite(mleft% + 810,a%,1300,"['Arial' S 8 B C BLACK]" + DATE$ (K3Geburtstag.wbericht$,"0d.mm.yyyy"))
       a% = vzeil%
       IF anrede.GadrDat$ LIKE "Herr*" OR anrede.GadrDat$ LIKE "FrÑ*" OR anrede.GadrDat$ LIKE "Frau*" OR anrede.GadrDat$ LIKE "Fami*" OR anrede.GadrDat$ LIKE "Ehe*" THEN 
         ttab$ = "Name Kind 4: " + K4Name.wbericht$ + ", " + k4nname.wbericht$ + " /(Geburtstag: " + DATE$ (K4Geburtstag.wbericht$,"0d.mm.yyyy") + ")" + " / Geburtsort: " + GebortK4.GADRDat$
       ELSE 
         ttab$ = "GF 4: " + K4Name.wbericht$ + ", " + k4nname.wbericht$ + " /(Geburtstag: " + DATE$ (K4Geburtstag.wbericht$,"0d.mm.yyyy") + ")" + " / Geburtsort: " + GebortK4.GADRDat$
       END IF 
       IF (K4Name.wbericht$ <> "") THEN CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + ttab$)
       REM CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name Kind 4: ")
       REM CALL VWrite(mleft% + 270,a%,610,"['Arial' S 8 B C BLACK]" + K4Name.wbericht$)
       REM CALL VWrite(mleft% + 500,a%,1000,"['Arial' S 8 B C BLACK]" + "Geburtstag: ")
       REM CALL VWrite(mleft% + 810,a%,1300,"['Arial' S 8 B C BLACK]" + DATE$ (K4Geburtstag.wbericht$,"0d.mm.yyyy"))
       a% = vzeil% + 10
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "KV-Pflicht: ")
       CALL VWrite(mleft% + 270,a%,610,"['Arial' S 8 B C BLACK]" + KVPflicht.wbericht$)
       CALL VWrite(mleft% + 810,a%,1300,"['Arial' S 8 B C BLACK]" + RVPflicht.wbericht$ + " KK: " + TextKV.wbericht$)
       CALL VWrite(mleft% + 500,a%,1000,"['Arial' S 8 B C BLACK]" + "RV-Pflicht: ")
       a% = vzeil%
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       a% = vzeil% + 10
       IF egnachname.wbericht$ <> "" OR egvorname.wbericht$ <> "" THEN 
         vzeil% = a%
         CALL VWrite(mleft%,a%,1200,"['Arial' S 9 B C BLACK]" + "Angaben zum Partner/in: ")
         a% = vzeil%
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + EGanrede.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Anrede:")
         a% = vzeil%
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + EGTitel.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Titel:")
         a% = vzeil%
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + egnachname.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Nachname:")
         a% = vzeil%
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + EGGeburtsname.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Geburtsname:")
         a% = vzeil%
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + egVorname.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Vorname:")
         a% = vzeil%
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + egasStra·e.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Stra·e:")
         a% = vzeil%
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + egasplz.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "PLZ:")
         a% = vzeil%
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + egasort.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Ort:")
         a% = vzeil%
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + egLand.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Land:")
         a% = vzeil%
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Geburtstag:")
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + DATE$ (eggeburtstag.wbericht$,"0d.mm.yyyy") + " / Geburtsort: " + EGGebort.GADRDat$)
         a% = vzeil%
         CALL VWrite(mleft% + 270,a%,1210,"['Arial' S 8 B C BLACK]" + GÅterstand.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "GÅterstand:")
         a% = vzeil%
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Partner seit:")
         CALL VWrite(mleft% + 270,a%,1210,"['Arial' S 8 B C BLACK]" + DATE$ (EGasseit.wbericht$,"0d.mm.yyyy"))
         a% = vzeil%
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Einkommen:")
         CALL VWrite(mleft% + 270,a%,1210,"['Arial' S 8 B C BLACK]" + STR$ (Eink2P.wbericht$,",9999999999.99"))
         vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
         a% = vzeil% + 10
       END IF 
       IF wbericht$ LIKE "ADRESSEN" OR wbericht$ LIKE "BCKONTAK" THEN 
         IF zweitanschrift.wbericht$ <> "" THEN 
           CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + "Zweitanschrift: ")
           a% = vzeil%
           CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + zweitanschrift.wbericht$)
         END IF 
       END IF 
       a% = vzeil% + 10
       CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
       IF wbericht$ LIKE "ADRESSEN" OR wbericht$ LIKE "BCKONTAK" THEN 
         IF zweitanschrift.wbericht$ <> "" THEN 
           CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + "Postanschrift: ")
           a% = vzeil%
           CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + Postanschrift.wbericht$)
         END IF 
       END IF 
       CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       a% = vzeil% + 10
       vzeil% = a%
       CALL VWrite(mleft%,a%,600,"['Arial' S 8 B C BLACK]" + "Notizen zur/m Partnerin/er:")
       a% = vzeil% + 10
       CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + EGNotiz.wbericht$)
       a% = vzeil%
       listende% = vzeil%
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
       CALL VLine(mleft% - 7,vzeil% + 1,mright%,vzeil% + 1)
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       a% = vzeil% + 10
       vzeil% = a%
     END IF 
     IF _projekt$ LIKE "FACTURA" OR _projekt$ LIKE "OFFICE" THEN 
       listende% = vzeil%
     END IF 
     CALL VLine(mleft% - 7,mtop%,mleft% - 7,listende%)
     CALL VLine(mright%,mtop%,mright%,listende%)
     IF notiz.wbericht$ <> "" THEN 
       IF _projekt$ LIKE "FACTURA" OR _projekt$ LIKE "OFFICE" OR _projekt$ LIKE "IMMAK" OR _projekt$ LIKE "MEDIA" THEN 
         a% = vzeil%
       ELSE 
         REM Seitenvorschub zwangsweise 
         a% = CALL ("VpePageBreak",hdoc%)
         czeile% = vzeil%
         cPage% = CALL ("VpeGetCurrentPage",hdoc%)
         cPageold% = cPage%
         obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         a% = ueberpos%
       END IF 
       CALL VWrite(mleft%,a%,mright%,"['Arial' S 9 B C BLACK]Notizen zur Adresse " + nachname.wbericht$)
       a% = vzeil%
       CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + notiz.wbericht$)
       a% = vzeil%
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
       CALL VLine(mleft% - 7,mtop%,mleft% - 7,vzeil% + 10)
       CALL VLine(mright%,mtop%,mright%,vzeil% + 10)
       vzeil% = vzeil% + 10
       listende% = vzeil%
     END IF 
     IF _projekt$ LIKE "FACTURA" OR _projekt$ LIKE "OFFICE" OR _projekt$ LIKE "IMMAK" OR _projekt$ LIKE "MEDIA" THEN 
     ELSE 
       REM Seitenvorschub zwangsweise
       REM a% = CALL ("VpePageBreak",hdoc%)
       obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       vzeil% = obBottom%
     END IF 
     a% = vzeil%
   END IF 
 END SUB 
 
SUB VPETermineJ(initjn$,_CodeKU%)
 REM CALL Fehler(initjn$,nachname.wbericht$)
 IF disabled%("AQKUNDENHIST") THEN END SUB 
 IF disabled%("PROJECTHIST") THEN END SUB 
 REM CREATE DIALOG "ADRLIST",0,0,192,97,title$,"MS Sans Serif",8
 REM ADD DIALOG "ADRLIST",4,0,0,192,76,0,""
 REM ADD DIALOG "ADRLIST",9,4,9,20,21,2
 REM ADD DIALOG "ADRLIST",1,45,78,50,15,1,"&Weiter",1,1
 REM ADD DIALOG "ADRLIST",1,97,78,50,15,0,"&Abbruch",0,0
 REM DIALOG "ADRLIST",req%
 REM REMOVE DIALOG "ADRLIST"
 IF initjn$ <> "j" THEN 
     a% = CALL ("VpePageBreak",hdoc%)
     nachname$ = nachname.wbericht$
 ELSE 
   IF UCASE$ ( FORM ) = "PROJECT" THEN 
     SELECT KEY _codeku% FILE wbericht$ INDEX codepr.wbericht$
     nachname$ = name1.wbericht$ + " " + name2.wbericht$
     title$ = "Terminliste Projekt" + nachname$
     FormatPrint$ = "A4h"
     CALL VPEINI(title2$,FormatPrint$)
     vzeil% = mTop%
     CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
     CALL VWrite(mleft%,vzeil% + 10,1610,"['Arial' S 16 B C BLACK]Termine zum Projekt " + nachname$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
     CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
     obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
     obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     vzeil% = obBottom% + 30
     ueberpos% = vzeil%
     vzeil% = ueberpos%
     CALL VTransp(0)
     CALL VSetPen(0,0)
   ELSE 
     SELECT KEY _codeku% FILE wbericht$ INDEX codeku.wbericht$
     nachname$ = nachname.wbericht$
     title$ = "Terminliste " + nachname$
     FormatPrint$ = "A4h"
     CALL VPEINI(title2$,FormatPrint$)
     vzeil% = mTop%
     CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
     CALL VWrite(mleft%,vzeil% + 10,1610,"['Arial' S 16 B C BLACK]Termine zur Adresse " + nachname$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
     CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
     obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
     obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     vzeil% = obBottom% + 30
     ueberpos% = vzeil%
     vzeil% = ueberpos%
     CALL VTransp(0)
     CALL VSetPen(0,0)
   END IF 
 END IF 
     czeile% = vzeil%
     cPage% = CALL ("VpeGetCurrentPage",hdoc%)
     cPageold% = cPage%
     obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     vzeil% = ueberpos%
     a% = vzeil%
     IF initjn$ <> "j" THEN 
       IF UCASE$ ( FORM ) = "PROJECT" THEN 
         CALL VWrite(mleft%,a%,mright%,"['Arial' S 10 B C BLACK]Termine zum Projekt " + nachname$)
       ELSE 
         CALL VWrite(mleft%,a%,mright%,"['Arial' S 10 B C BLACK]Termine zur Adresse " + nachname$)
       END IF 
       a% = vzeil%
       CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
       vzeil% = vzeil% + 20
       a% = vzeil%
     END IF 
     CALL VWrite(mleft%,a%,mleft% + 160,"['Arial' S 8 B C BLACK]" + "Termin")
     CALL VWrite(mleft% + 170,a%,mleft% + 360,"['Arial' S 8 B C BLACK]" + "Uhrzeit")
     CALL VWrite(mleft% + 370,a%,mleft% + 560,"['Arial' S 8 B C BLACK]" + "Dauer")
     CALL VWrite(mleft% + 570,a%,mleft% + 760,"['Arial' S 8 B C BLACK]" + "Erf.datum")
     CALL VWrite(mleft% + 770,a%,mleft% + 960,"['Arial' S 8 B C BLACK]" + "erledigt")
     CALL VWrite(mleft% + 970,a%,mleft% + 1360,"['Arial' S 8 B C BLACK]" + "Bearbeiter")
     CALL VWrite(mleft% + 1370,a%,mleft% + 1660,"['Arial' S 8 B C BLACK]" + "Aktion")
     a% = vzeil%
     CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
     vzeil% = vzeil% + 20
     a% = vzeil%
     REM JETZT TERMINAUSGABE
     FILE GAkquiDat$
     IF UCASE$ ( FORM ) = "PROJECT" THEN 
       INDEX codepr.GAkquiDat$
       SELECT FIRST 
       SELECT KEY _codeku% FILE GAkquiDat$ INDEX codepr.GAkquiDat$
       SELECT WHERE FILE GAkquiDat$
       EXECUTE "SELECT WHERE CodePR.GAkquiDat$ = _CodeKU%"
       INDEX termin.GAkquiDat$
       SELECT FIRST 
     ELSE 
       INDEX codeku.GAkquiDat$
       SELECT FIRST 
       SELECT KEY _codeku% FILE GAkquiDat$ INDEX codeku.GAkquiDat$
       SELECT WHERE FILE GAkquiDat$
       EXECUTE "SELECT WHERE CodeKU.GAkquiDat$ = _CodeKU%"
       INDEX termin.GAkquiDat$
       SELECT FIRST 
     END IF 
     REM INDEX termin.GAkquiDat$
     REM SELECT FIRST 
     codeakold% = 0
     codeaknew% = codeak.GAkquiDat$
     FILE "aktionen"
     INDEX codeak.aktionen
     SELECT FIRST 
     FILE GAkquiDat$
     j% = 0
     WHILE NOT EOF (GAkquiDat$)
     j% = j% + 1
vpetermdru1: 
       czeile% = vzeil%
       cPage% = CALL ("VpeGetCurrentPage",hdoc%)
       cPageold% = cPage%
       IF UCASE$ ( FORM ) = "PROJECT" THEN 
         CALL VWrite(mleft%,a%,mright% + 160,"['Arial' S 8 B C BLACK]" + "Adresse: " + LEFT$ (nachname.GAkquiDat$))
         a% = a% + 35
       ELSE 
         IF ProjectJN$ = "TRUE" THEN 
           IF projekt.GAkquiDat$ <> "" THEN 
             CALL VWrite(mleft%,a%,mright% + 160,"['Arial' S 8 B C BLACK]" + "Projekt: " + LEFT$ (Projekt.GAkquiDat$))
             a% = a% + 35
           END IF 
         END IF 
       END IF 
       CALL VWrite(mleft%,a%,mleft% + 160,"['Arial' S 8 B C BLACK]" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy"))
       CALL VWrite(mleft% + 170,a%,mleft% + 360,"['Arial' S 8 B C BLACK]" + TIME$ (uhrzeit.GAkquiDat$,"hh.mm"))
       CALL VWrite(mleft% + 370,a%,mleft% + 560,"['Arial' S 8 B C BLACK]" + STR$ (dauer.GAkquiDat$,"9999"))
       CALL VWrite(mleft% + 570,a%,mleft% + 760,"['Arial' S 8 B C BLACK]" + DATE$ (datum.GAkquiDat$,"0d.mm.yyyy"))
       CALL VWrite(mleft% + 820,a%,mleft% + 960,"['Arial' S 8 B C BLACK]" + erledigt_Termin.GAkquiDat$)
       CALL VWrite(mleft% + 970,a%,mleft% + 1360,"['Arial' S 8 B C BLACK]" + Bearbeiter.GAkquiDat$)
       codeaknew% = codeak.GAkquiDat$
       IF codeaknew% <> codeakold% THEN 
         FILE "aktionen"
         SELECT FIRST 
         SELECT KEY codeak.GAkquiDat$ FILE "aktionen" INDEX codeak.aktionen
         aktion$ = bezeichnung.aktionen
         codeakold% = codeaknew%
         FILE GAkquiDat$
       END IF 
       CALL VWrite(mleft% + 1370,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + aktion$)
       a% = vzeil% + 10
       CALL VWrite(mleft%,a%,1000,"['Arial' S 8 B C BLACK]" + "Notizen zum Termin")
       a% = vzeil%
       CALL VWrite(mleft%,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + notiz.GAkquiDat$)
       a% = vzeil%
       obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       IF obBottom% < a% THEN obBottom% = a%
       cPage% = CALL ("VpeGetCurrentPage",hdoc%)
       IF obBottom% > mBottom% THEN 
         CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
         CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
         CALL VLine(mright%,mtop%,mright%,czeile%)
         CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
         ab% = CALL ("VpePageBreak",hdoc%)
         obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         vzeil% = ueberpos%
         IF initjn$ <> "j" THEN 
           a% = vzeil%
           IF UCASE$ ( FORM ) = "PROJECT" THEN 
             CALL VWrite(mleft%,a%,mright%,"['Arial' S 10 B C BLACK]Termine zur Adresse " + name1.wbericht$ + " " + name2.wbericht$)
           ELSE 
             CALL VWrite(mleft%,a%,mright%,"['Arial' S 10 B C BLACK]Termine zur Adresse " + nachname.wbericht$)
           END IF 
           a% = vzeil%
           CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
           vzeil% = vzeil% + 20
         END IF 
         a% = vzeil%
         CALL VWrite(mleft%,a%,mleft% + 160,"['Arial' S 8 B C BLACK]" + "Termin")
         CALL VWrite(mleft% + 170,a%,mleft% + 360,"['Arial' S 8 B C BLACK]" + "Uhrzeit")
         CALL VWrite(mleft% + 370,a%,mleft% + 560,"['Arial' S 8 B C BLACK]" + "Dauer")
         CALL VWrite(mleft% + 570,a%,mleft% + 760,"['Arial' S 8 B C BLACK]" + "Erf.datum")
         CALL VWrite(mleft% + 770,a%,mleft% + 960,"['Arial' S 8 B C BLACK]" + "erledigt")
         CALL VWrite(mleft% + 970,a%,mleft% + 1360,"['Arial' S 8 B C BLACK]" + "Bearbeiter")
         CALL VWrite(mleft% + 1370,a%,mleft% + 1660,"['Arial' S 8 B C BLACK]" + "Aktion")
         a% = vzeil%
         CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
         vzeil% = vzeil% + 20
         a% = vzeil%
         GOTO vpetermdru1 
       END IF 
       IF ergebnis.GAkquiDat$ <> "" THEN 
         a% = vzeil% + 10
vpetermdru3: 
         czeile% = vzeil%
         cPage% = CALL ("VpeGetCurrentPage",hdoc%)
         cPageold% = cPage%
         CALL VWrite(mleft%,a%,1000,"['Arial' S 8 B C BLACK]" + "Ergebnisse zum Termin")
         a% = vzeil%
         CALL VWrite(mleft%,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + Ergebnis.GAkquiDat$)
         a% = vzeil%
         obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         IF obBottom% < a% THEN obBottom% = a%
         REM IF vzeil% > mBottom% THEN 
         cPage% = CALL ("VpeGetCurrentPage",hdoc%)
         IF obBottom% > mBottom% THEN 
           CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
           CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
           CALL VLine(mright%,mtop%,mright%,czeile%)
           CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
           ab% = CALL ("VpePageBreak",hdoc%)
           obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
           vzeil% = ueberpos%
           a% = vzeil%
           IF UCASE$ ( FORM ) = "PROJECT" THEN 
             CALL VWrite(mleft%,a%,mright%,"['Arial' S 10 B C BLACK]Termine zum Projekt " + name1.wbericht$ + " " + name2.wbericht$)
           ELSE 
             CALL VWrite(mleft%,a%,mright%,"['Arial' S 10 B C BLACK]Termine zur Adresse " + nachname.wbericht$)
           END IF 
           a% = vzeil%
           CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
           vzeil% = vzeil% + 20
           a% = vzeil%
           CALL VWrite(mleft%,a%,mleft% + 160,"['Arial' S 8 B C BLACK]" + "Termin")
           CALL VWrite(mleft% + 170,a%,mleft% + 360,"['Arial' S 8 B C BLACK]" + "Uhrzeit")
           CALL VWrite(mleft% + 370,a%,mleft% + 560,"['Arial' S 8 B C BLACK]" + "Dauer")
           CALL VWrite(mleft% + 570,a%,mleft% + 760,"['Arial' S 8 B C BLACK]" + "Erf.datum")
           CALL VWrite(mleft% + 770,a%,mleft% + 960,"['Arial' S 8 B C BLACK]" + "erledigt")
           CALL VWrite(mleft% + 970,a%,mleft% + 1360,"['Arial' S 8 B C BLACK]" + "Bearbeiter")
           CALL VWrite(mleft% + 1370,a%,mleft% + 1660,"['Arial' S 8 B C BLACK]" + "Aktion")
           a% = vzeil%
           CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
           vzeil% = vzeil% + 20
           a% = vzeil%
           GOTO vpetermdru3
         END IF 
       END IF 
       CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
       vzeil% = vzeil% + 15
       a% = vzeil%
     FILE GAkquiDat$
     SELECT NEXT 
     SET STATUS STR$ (j%,"000000") + " Termine verarbeitet!"
     WEND 
     REM CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
     CALL VLine(mleft% - 7,mtop%,mleft% - 7,vzeil%)
     CALL VLine(mright%,mtop%,mright%,vzeil%)
     vzeil% = vzeil% + 10
     listende% = vzeil%
     FILE wbericht$
     IF initjn$ = "j" THEN 
       vzeil% = listende% + 100
       CALL VPrint(mleft%,vzeil% + 20,"['Arial' S 15 B C BLACK]Ende der Liste")
       cPage% = CALL ("VpeGetCurrentPage",hdoc%)
       FOR b% = 1 TO cPage%
         vzeil% = mTop%
         a% = CALL ("VpeGotoPage",hdoc%,b%)
         CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
         IF UCASE$ ( FORM ) = "PROJECT" THEN 
           CALL VWrite(mleft%,vzeil% + 10,1610,"['Arial' S 16 B C BLACK]Termine zum Projekt " + nachname$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
         ELSE 
           CALL VWrite(mleft%,vzeil% + 10,1610,"['Arial' S 16 B C BLACK]Termine zur Adresse " + nachname$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
         END IF 
         CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
         obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
       NEXT b%
       a% = CALL ("VpeGotoPage",hdoc%,1)
       MOUSE ON 
       IF scedov% = 1 AND reqbild% <> 1 THEN 
         CALL VPrintDoc()
       ELSE 
         REM CALL VPrevDoc()
         MOUSE ON 
         CALL Fehler("Bitte nach dem Ausdruck eine Taste drÅcken!","")
         CALL VPrevDoc()
         WAIT MOUSE OR KEY OR MENU 
         CALL Fehler("Ausdruck wurde beendet!","Um fortzufahren bitte auf den OK-Button drÅcken!")
       END IF 
       REM Nach dem Drucken, Drucker auf A4 hoch setzen
       REM c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,1,9

         ON ERROR GOTO adrdr1709200210
         IF PRINTER (1) = 1 OR PRINTER (1) = 2 THEN 
           c$ = PRINTER :d$ = PRINTER (0)
           SET PRINTER c$,d$,1,9
           REM PRINT CURRENT PAGE 
           GOTO endruck1709200210
         END IF 
         
adrdr1709200210: 
         MOUSE ON 
         REM c$ = PRINTER :d$ = PRINTER (0)
         ON ERROR GOTO endruck1709200210
         SET PRINTER 
         REM PRINT CURRENT PAGE 
         FORM 
endruck1709200210: 
         ON ERROR GOTO ErrorHandler 

     END IF 
   REM END IF 
   SELECT WHERE FILE GAkquiDat$
   REM CALL AKQUISEIntro1()
 END SUB 
 
 

 REM Drucken von Vertragsdaten

SUB VPEVertragJ(initjn$,_CodeKU%)
 REM IF disabled%("AQKUNDENHIST") THEN END SUB 
 REM CREATE DIALOG "ADRLIST",0,0,192,97,title$,"MS Sans Serif",8
 REM ADD DIALOG "ADRLIST",4,0,0,192,76,0,""
 REM ADD DIALOG "ADRLIST",9,4,9,20,21,2
 REM ADD DIALOG "ADRLIST",1,45,78,50,15,1,"&Weiter",1,1
 REM ADD DIALOG "ADRLIST",1,97,78,50,15,0,"&Abbruch",0,0
 REM DIALOG "ADRLIST",req%
 REM REMOVE DIALOG "ADRLIST"
 IF initjn$ <> "j" THEN 
     a% = CALL ("VpePageBreak",hdoc%)
     nachname$ = nachname.wbericht$
 END IF 
     czeile% = vzeil%
     cPage% = CALL ("VpeGetCurrentPage",hdoc%)
     cPageold% = cPage%
     obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     vzeil% = vzeil% + 10
     a% = vzeil%
     czeile% = a%
     CALL VWrite(mleft%,a%,mleft% + 360,"['Arial' S 9 B C BLACK]" + "Gesellschaft")
     CALL VWrite(mleft% + 400,a%,mleft% + 790,"['Arial' S 9 B C BLACK]" + "Sparte")
     CALL VWrite(mleft% + 800,a%,mleft% + 1190,"['Arial' S 9 B C BLACK]" + "Agentur")
     CALL VWrite(mleft% + 1200,a%,mright%,"['Arial' S 9 B C BLACK]" + "Spartengruppe")
     vzeil% = vzeil% + 12
     a% = vzeil%
     CALL VWrite(mleft%,a%,mleft% + 290,"['Arial' S 9 B C BLACK]" + "Vertr.nr.")
     CALL VWrite(mleft% + 300,a%,mleft% + 490,"['Arial' S 9 B C BLACK]" + "Beginn")
     CALL VWrite(mleft% + 500,a%,mleft% + 690,"['Arial' S 9 B C BLACK]" + "Dauer")
     CALL VWrite(mleft% + 700,a%,mleft% + 990,"['Arial' S 9 B C BLACK]" + "Ablauf")
     CALL VWrite(mleft% + 1000,a%,mleft% + 1290,"['Arial' S 9 B C BLACK]" + "Vers.summe")
     CALL VWrite(mleft% + 1300,a%,mleft% + 1490,"['Arial' S 9 B C BLACK]" + "Beitrag/Jahr")
     CALL VWrite(mleft% + 1530,a%,mright%,"['Arial' S 9 B C BLACK]" + "zahlweise")
     CALL VLine(mleft% - 7,vzeil% + 5,mright%,vzeil% + 5)
     a% = vzeil%
     vzeil% = vzeil% + 10
     a% = vzeil%

     obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     IF obBottom% < a% THEN obBottom% = a%
       cPage% = CALL ("VpeGetCurrentPage",hdoc%)
       IF obBottom% > mBottom% THEN 
         CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
         CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
         CALL VLine(mright%,mtop%,mright%,czeile%)
         CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
         REM mit Farbe wei· Åberschreiben
         ab% = CALL ("VpePageBreak",hdoc%)
         obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         vzeil% = ueberpos%
         czeile% = vzeil%
         a% = vzeil%
         CALL VWrite(mleft%,a%,mleft% + 360,"['Arial' S 9 B C BLACK]" + "Gesellschaft")
         CALL VWrite(mleft% + 400,a%,mleft% + 790,"['Arial' S 9 B C BLACK]" + "Sparte")
         CALL VWrite(mleft% + 800,a%,mleft% + 1190,"['Arial' S 9 B C BLACK]" + "Agentur")
         CALL VWrite(mleft% + 1200,a%,mright%,"['Arial' S 9 B C BLACK]" + "Spartengruppe")
         vzeil% = vzeil% + 12
         a% = vzeil%
         CALL VWrite(mleft%,a%,mleft% + 290,"['Arial' S 9 B C BLACK]" + "Vertr.nr.")
         CALL VWrite(mleft% + 300,a%,mleft% + 490,"['Arial' S 9 B C BLACK]" + "Beginn")
         CALL VWrite(mleft% + 500,a%,mleft% + 690,"['Arial' S 9 B C BLACK]" + "Dauer")
         CALL VWrite(mleft% + 700,a%,mleft% + 990,"['Arial' S 9 B C BLACK]" + "Ablauf")
         CALL VWrite(mleft% + 1000,a%,mleft% + 1290,"['Arial' S 9 B C BLACK]" + "Vers.summe")
         CALL VWrite(mleft% + 1300,a%,mleft% + 1490,"['Arial' S 9 B C BLACK]" + "Beitrag/Jahr")
         CALL VWrite(mleft% + 1530,a%,mright%,"['Arial' S 9 B C BLACK]" + "zahlweise")
         CALL VLine(mleft% - 7,vzeil% + 5,mright%,vzeil% + 5)
         a% = vzeil%
         vzeil% = vzeil% + 10
       END IF 
     END IF 


     REM CALL Fehler("Vertragsausgabe","")
     codeku% = _codeku%
     REM JETZT VERTRAGSAUSGABE
     FILE "kvertrag"
       REM INDEX QuickGesSpar.kvertrag
       INDEX codeku.kvertrag
       SELECT FIRST 
       SELECT KEY codeku% FILE "KVERTRAG" INDEX codeku.kvertrag
       REM _codeku$ = STR$ (_codeku%,"000000")
       REM SELECT KEY _codeku$ FILE "kvertrag" INDEX QuickGesSpar.kvertrag
       REM SELECT WHERE FILE "kvertrag"
       REM EXECUTE "SELECT WHERE CodeKU.kvertrag = _CodeKU%"
       REM INDEX QuickGesSpar.kvertrag
       REM SELECT FIRST 
     REM INDEX termin.GAkquiDat$
     REM SELECT FIRST 
     codeakold% = 0
     codeaknew% = codeak.GAkquiDat$
     j% = 0
     sumbeitrag% = 0
     WHILE NOT EOF ("kvertrag") AND codeku.kvertrag = codeku%
     j% = j% + 1
vpetermdru1a: 
       czeile% = vzeil%
       zmax% = vzeil%
       a% = vzeil%
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema.kvertrag FILE "maadr" INDEX codema.maadr
       Agentur$ = Nachname.maadr + "," + Vorname.maadr + "," + Agenturnr.maadr
       cPage% = CALL ("VpeGetCurrentPage",hdoc%)
       cPageold% = cPage%
       CALL VWrite(mleft%,a%,mleft% + 390,"['Arial' S 8 B C BLACK]" + Gesellschaft.kvertrag)
       IF vzeil% > zmax% THEN zmax% = vzeil%
       CALL VWrite(mleft% + 400,a%,mleft% + 790,"['Arial' S 8 B C BLACK]" + Sparte.kvertrag)
       IF vzeil% > zmax% THEN zmax% = vzeil%
       CALL VWrite(mleft% + 800,a%,mleft% + 1190,"['Arial' S 8 B C BLACK]" + Agentur$)
       IF vzeil% > zmax% THEN zmax% = vzeil%
       CALL VWrite(mleft% + 1200,a%,mright%,"['Arial' S 8 B C BLACK]" + Spartengruppe.kvertrag)
       IF vzeil% > zmax% THEN zmax% = vzeil%
       vzeil% = zmax%
       vzeil% = vzeil% + 15
       a% = vzeil%
       CALL VWrite(mleft%,a%,mleft% + 290,"['Arial' S 8 B C BLACK]" + VS_Nr)
       CALL VWrite(mleft% + 300,a%,mleft% + 490,"['Arial' S 8 B C BLACK]" + DATE$ (VS_Beginn,"0d.mm.yyyy"))
       CALL VWrite(mleft% + 500,a%,mleft% + 690,"['Arial' S 8 B C BLACK]" + STR$ (VS_Dauer,"99"))
       CALL VWrite(mleft% + 700,a%,mleft% + 990,"['Arial' S 8 B C BLACK]" + DATE$ (KÅndigung,"0d.mm.yyyy"))
       CALL VWrite(mleft% + 1000,a%,mleft% + 1290,"['Arial' S 8 B C BLACK]" + STR$ (VSumme,",999999999.00") + " ")
       IF zw.kvertrag > 0 THEN 
         beitrag% = beitrag.kvertrag * zw.kvertrag
       ELSE 
         beitrag% = beitrag.kvertrag
       END IF 
       
       CALL VWrite(mleft% + 1300,a%,mleft% + 1490,"['Arial' S 8 B C BLACK]" + STR$ (Beitrag%,",999999999.00") + " ")

       SELECT CASE zw.kvertrag
         CASE 0
           zw$ = "einmalig"
         CASE 12
           zw$ = "monatl."
         CASE 6
           zw$ = "2monatl."
         CASE 2
           zw$ = "halbj."
         CASE 4
           zw$ = "viertelj."
         CASE 1
           zw$ = "JÑhrlich"
       END SELECT 
       CALL VWrite(mleft% + 1550,a%,mright%,"['Arial' S 8 B C BLACK]" + zw$)
       a% = vzeil%
       IF notiz.kvertrag <> "" THEN 
         CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + "Notiz: " + notiz.kvertrag)
         a% = vzeil%
       END IF 

       IF zvp1Name.kvertrag <> "" OR zvp1vName.kvertrag <> "" THEN 
         CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + "vers.Personen/Risiken: " + LTRIM$ (zvp1vName.kvertrag + " " + zvp1Name.kvertrag))
         a% = vzeil%
       END IF 
       a% = vzeil%
       IF zvp2Name.kvertrag <> "" OR zvp2vName.kvertrag <> "" THEN 
         CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + "vers.Personen/Risiken: " + LTRIM$ (zvp2vName.kvertrag + " " + zvp2Name.kvertrag))
         a% = vzeil%
       END IF 

       a% = vzeil%
       IF zvp3Name.kvertrag <> "" OR zvp3vName.kvertrag <> "" THEN 
         CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + "vers.Personen/Risiken: " + LTRIM$ (zvp3vName.kvertrag + " " + zvp3Name.kvertrag))
         a% = vzeil%
       END IF 
       a% = vzeil%
       IF zvp4Name.kvertrag <> "" OR zvp4vName.kvertrag <> "" THEN 
         CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + "vers.Personen/Risiken: " + LTRIM$ (zvp4vName.kvertrag + " " + zvp4Name.kvertrag))
         a% = vzeil%
       END IF 
       a% = vzeil%
       IF zvp5Name.kvertrag <> "" OR zvp5vName.kvertrag <> "" THEN 
         CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + "vers.Personen/Risiken: " + LTRIM$ (zvp5vName.kvertrag + " " + zvp5Name.kvertrag))
         a% = vzeil%
       END IF 
       a% = vzeil%
       IF zvp6Name.kvertrag <> "" OR zvp6vName.kvertrag <> "" THEN 
         CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + "vers.Personen/Risiken: " + LTRIM$ (zvp6vName.kvertrag + " " + zvp6Name.kvertrag))
         a% = vzeil%
       END IF 




       STATUS1$ = "Status: " + VstatusTXT.kvertrag
       IF proviab.kvertrag <> 0 THEN 
         status1$ = status1$ + "verprovisioniert seit " + DATE$ (proviab.kvertrag,"0d.mm.yyyy") + " ;"
       END IF 
       IF vorzeitig.kvertrag = "j" THEN status1$ = status1$ + "vorzeitig gekÅndigt; "
       CALL VWrite(mleft%,a%,mright%,"['Arial' S 8 B C BLACK]" + STATUS1$)
       a% = vzeil%
       CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
       a% = vzeil%
 
       obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       IF obBottom% < a% THEN obBottom% = a%
       cPage% = CALL ("VpeGetCurrentPage",hdoc%)
       IF obBottom% > mBottom% THEN 
         REM CALL Fehler("Ausgabe","Seitenwechsel")
         CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
         CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
         CALL VLine(mright%,mtop%,mright%,czeile%)
         CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
         ab% = CALL ("VpePageBreak",hdoc%)
         obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         vzeil% = ueberpos%
         a% = vzeil%
         REM 200197
         CALL VWrite(mleft%,a%,mleft% + 360,"['Arial' S 9 B C BLACK]" + "Gesellschaft")
         CALL VWrite(mleft% + 400,a%,mleft% + 790,"['Arial' S 9 B C BLACK]" + "Sparte")
         CALL VWrite(mleft% + 800,a%,mleft% + 1190,"['Arial' S 9 B C BLACK]" + "Agentur")
         CALL VWrite(mleft% + 1200,a%,mright%,"['Arial' S 9 B C BLACK]" + "Spartengruppe")
         vzeil% = vzeil% + 12
         a% = vzeil%
         CALL VWrite(mleft%,a%,mleft% + 290,"['Arial' S 9 B C BLACK]" + "Vertr.nr.")
         CALL VWrite(mleft% + 300,a%,mleft% + 490,"['Arial' S 9 B C BLACK]" + "Beginn")
         CALL VWrite(mleft% + 500,a%,mleft% + 690,"['Arial' S 9 B C BLACK]" + "Dauer")
         CALL VWrite(mleft% + 700,a%,mleft% + 990,"['Arial' S 9 B C BLACK]" + "Ablauf")
         CALL VWrite(mleft% + 1000,a%,mleft% + 1290,"['Arial' S 9 B C BLACK]" + "Vers.summe")
         CALL VWrite(mleft% + 1300,a%,mleft% + 1490,"['Arial' S 9 B C BLACK]" + "Beitrag/Jahr")
         CALL VWrite(mleft% + 1530,a%,mright%,"['Arial' S 9 B C BLACK]" + "zahlweise")
         vzeil% = vzeil% + 12
         a% = vzeil%
         CALL VLine(mleft% - 7,vzeil% + 5,mright%,vzeil% + 5)
         
         a% = vzeil% + 5
         obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         IF obBottom% < a% THEN obBottom% = a%
         vzeil% = obBottom%
         REM IF vzeil% > mBottom% THEN 
         cPage% = CALL ("VpeGetCurrentPage",hdoc%)
         IF obBottom% > mBottom% THEN 
           CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
           CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
           CALL VLine(mright%,mtop%,mright%,czeile%)
           CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
           ab% = CALL ("VpePageBreak",hdoc%)
           obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
           vzeil% = ueberpos%
           a% = vzeil%
           vzeil% = vzeil% + 20
           a% = vzeil%
           CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
           vzeil% = vzeil% + 20
           a% = vzeil%
           GOTO vpetermdru1a
         ELSE 
           vzeil% = vzeil% + 20
           GOTO vpetermdru1a
         END IF 
       END IF 

       IF proviab.kvertrag <> 0 AND vorzeitig.kvertrag <> "j" AND fremdvertrag.kvertrag <> "j" AND altvertrag.kvertrag <> "j" THEN 
         sumbeitrag% = sumbeitrag% + beitrag%
       END IF 
       REM CALL Fehler( STR$ (sumbeitrag%,",999999.00"), STR$ (beitrag%,",999999.00"))
       CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
       vzeil% = vzeil% + 15
       a% = vzeil%
     FILE "kvertrag"
     SELECT NEXT FILE "kvertrag"
     SET STATUS STR$ (j%,"000000") + " VertrÑge verarbeitet!   " + vs_nr.kvertrag
     REM CALL Fehler( STR$ (j%,"000000") + " VertrÑge verarbeitet!   " + vs_nr.kvertrag,"")
     WEND 
     REM CALL VWrite(mleft%,a%,mright%,"['Arial' S 9 B C BLACK]" + "Jahresbeitrag: " + STR$ (sumbeitrag%,",999999999.00") + " ")
     CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
     vzeil% = vzeil% + 15
     a% = vzeil%
     REM CALL VLine(mleft% - 7,vzeil% + 10,mright%,vzeil% + 10)
     CALL VLine(mleft% - 7,mtop%,mleft% - 7,vzeil%)
     CALL VLine(mright%,mtop%,mright%,vzeil%)
     vzeil% = vzeil% + 10
     listende% = vzeil%
     FILE wbericht$
     IF initjn$ = "jj" THEN 
       vzeil% = listende% + 100
       REM CALL VPrint(mleft%,vzeil% + 20,"['Arial' S 15 B C BLACK]Ende der Liste")
       cPage% = CALL ("VpeGetCurrentPage",hdoc%)
       FOR b% = 1 TO cPage%
         vzeil% = mTop%
         a% = CALL ("VpeGotoPage",hdoc%,b%)
         CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
         CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
         obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
         CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
       NEXT b%
       a% = CALL ("VpeGotoPage",hdoc%,1)
       MOUSE ON 
       IF scedov% = 1 AND reqbild% <> 1 THEN 
         CALL VPrintDoc()
       ELSE 
         REM CALL VPrevDoc()
           MOUSE ON 
           CALL Fehler("Bitte nach dem Ausdruck eine Taste drÅcken!","")
           CALL VPrevDoc()
           WAIT MOUSE OR KEY OR MENU 
           CALL Fehler("Ausdruck wurde beendet!","Um fortzufahren bitte auf den OK-Button drÅcken!")
       END IF 
       REM Nach dem Drucken, Drucker auf A4 hoch setzen
       REM c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,1,9
         ON ERROR GOTO adrdr1709200211
         IF PRINTER (1) = 1 OR PRINTER (1) = 2 THEN 
           c$ = PRINTER :d$ = PRINTER (0)
           SET PRINTER c$,d$,1,9
           REM PRINT CURRENT PAGE 
           GOTO endruck1709200211
         END IF 
         
adrdr1709200211: 
         MOUSE ON 
         REM c$ = PRINTER :d$ = PRINTER (0)
         ON ERROR GOTO endruck1709200211
         SET PRINTER 
         REM PRINT CURRENT PAGE 
         FORM 
endruck1709200211: 
         ON ERROR GOTO ErrorHandler 

     END IF 
   REM END IF 
   SELECT WHERE FILE "kvertrag"
 END SUB 
 
 





 REM Drucken von ADRTemp
 
SUB VPEADRTemp(Wbericht$,FormatPrint$,title2$,wbsort$,listart%)
 SELECT FIRST FILE "supervis" INDEX codema.supervis
 SELECT KEY GMACodeMA% FILE "supervis" INDEX codema.supervis
 fussma$ = "gedruckt durch: " + Name.supervis + " um " + TIME$ ( NOW ,"hh:mm") + " Uhr"
 MOUSE OFF 
 REM wbericht$ enthÑlt den Namen der zu druckenden Datei
 REM Initialisierung der VPE
 FormatPrint$ = "A4h"
 CALL VPEINI(title2$,FormatPrint$)
 FILE wbericht$
 
 IF wbsort$ = "" THEN 
   IF FILE LIKE "ADRTEMP" THEN 
     INDEX name2.adrtemp
   ELSE 
     INDEX nachname.wbericht$
   END IF 
 ELSE 
   IF FILE LIKE "ADRTEMP" THEN 
     IF wbsort$ LIKE "nachname" THEN 
       INDEX name2.adrtemp
     ELSE 
       INDEX wbsort$$
     END IF 
   ELSE 
     INDEX wbsort$$
   END IF 
 END IF 
 req% = 0
 SELECT FIRST 
 gruppeneu$ = Quickname.wbericht$
 gruppeold$ = gruppeneu$
 vzeil% = mTop%
 CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
 CALL VWrite(mleft%,vzeil% + 10,1610,"['Arial' S 10 B C BLACK]" + title2$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
 CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
 CALL VWrite(mleft% + 720,vzeil%,mright%,"['Arial' S 8 B]Seite " + fussma$)
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
 obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
 vzeil% = obBottom% + 30
 ueberpos% = vzeil%
 CALL VTransp(0)
 CALL VSetPen(0,0)
 zeilenabstand% = 40
 zeilenoffset% = 40
 i% = 1
 WHILE NOT EOF (wbericht$)
   REM codeku% = codeku.wbericht$
   a% = vzeil%
   czeile% = vzeil%
   cPage% = CALL ("VpeGetCurrentPage",hdoc%)
   cPageold% = cPage%
   ok% = - 1
  REM CREATE DIALOG "ADRLIST",0,0,192,97,title$,"MS Sans Serif",8
  REM ADD DIALOG "ADRLIST",4,0,0,192,76,0,""
  REM ADD DIALOG "ADRLIST",9,4,9,20,21,2
  REM ADD DIALOG "ADRLIST",1,45,78,50,15,1,"&Weiter",1,1
  REM ADD DIALOG "ADRLIST",1,97,78,50,15,0,"&Abbruch",0,0
  REM DIALOG "ADRLIST",req%
  REM REMOVE DIALOG "ADRLIST"
   IF listart% = 1 THEN 
     IF anrede.wbericht$ <> "" OR Kundennummer.wbericht$ <> "" THEN 
       CALL VPrint(mleft%,a%,"['Arial' S 8 B C BLACK]" + "Anrede: ")
       CALL VWrite(mleft% + 270,a%,1000,"['Arial' S 8 B C BLACK]" + anrede.wbericht$)
       CALL VPrint(mleft% + 900,a%,"['Arial' S 8 B C BLACK]" + "Knr: ")
       CALL VWrite(mleft% + 1100,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + Kundennummer.wbericht$)
       a% = vzeil%
     END IF 
     IF titel.wbericht$ <> "" THEN 
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Titel: ")
       CALL VWrite(mleft% + 270,a%,1000,"['Arial' S 8 B C BLACK]" + titel.wbericht$)
       a% = vzeil%
     END IF 
     IF anrede.wbericht$ LIKE "Herr*" OR anrede.wbericht$ LIKE "Fr*" OR anrede.wbericht$ LIKE "Fam*" OR anrede.wbericht$ LIKE "Ehe*" THEN 
       IF name2.wbericht$ <> "" THEN 
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 9 B C BLACK]" + name2.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name: ")
         a% = vzeil%
       END IF 
       IF name1.wbericht$ <> "" THEN 
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + name1.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Vorname: ")
         a% = vzeil%
       END IF 
       IF name3.wbericht$ <> "" THEN 
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + name3.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Geburtsname: ")
         a% = vzeil%
       END IF 
   
     ELSE 
       IF name1.wbericht$ <> "" THEN 
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 9 B C BLACK]" + name1.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name2: ")
         a% = vzeil%
       END IF 
       IF name2.wbericht$ <> "" THEN 
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + name2.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name1: ")
         a% = vzeil%
       END IF 
       IF zuHaenden.wbericht$ <> "" THEN 
         CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 8 B C BLACK]" + name3.wbericht$)
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "zuHaenden: ")
         a% = vzeil%
       END IF 
     END IF 
     IF strasse.wbericht$ <> "" THEN 
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Stra·e: ")
       CALL VWrite(mleft% + 270,a%,2000,"['Arial' S 8 B C BLACK]" + strasse.wbericht$)
       a% = vzeil%
     END IF 
     IF plz.wbericht$ <> "" OR ort.wbericht$ <> "" THEN 
       t$ = plz.wbericht$ + " " + ort.wbericht$
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "PLZ/Ort: ")
       CALL VWrite(mleft% + 270,a%,1490,"['Arial' S 8 B C BLACK]" + t$)
       REM CALL VWrite(mleft% + 270,a%,1490,"['Arial' S 8 B C BLACK]" + plz.wbericht$ + " ")
       REM call VWrite(mleft% + 370,a%,mright% - 3,"['Arial' S 8 B C BLACK]" + ort.wbericht$)
       a% = vzeil%
     END IF 
     IF Land.wbericht$ <> "" THEN 
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Land: ")
       CALL VWrite(mleft% + 270,a%,2000,"['Arial' S 8 B C BLACK]" + Land.wbericht$)
       a% = vzeil%
     END IF 
     a% = vzeil%
     abi% = 0
     feld1$ = "Telart"
     feld2$ = "Telnr"
     feldart$ = feld1$ + STR$ (1,"0") + "." + wbericht$
     feldnum$ = feld2$ + STR$ (1,"0") + "." + wbericht$
     WHILE abi% < 20 AND feldart$$ <> ""
       abi% = abi% + 1
       IF abi% < 10 THEN 
         feldart$ = feld1$ + STR$ (abi%,"0") + ".adrtemp"
         feldnum$ = feld2$ + STR$ (abi%,"0") + ".adrtemp"
       ELSE 
         feldart$ = feld1$ + STR$ (abi%,"00") + ".adrtemp"
         feldnum$ = feld2$ + STR$ (abi%,"00") + ".adrtemp"
       END IF 
       IF feldart$$ <> "" THEN 
         CALL VWrite(mleft%,a%,1200,"['Arial' S 8 B C BLACK]" + feldart$$)
       END IF 
       IF feldnum$$ <> "" THEN 
         CALL VWrite(mleft% + 1200,a%,mright% - 3,"['Arial' S 8 C B BLACK]" + feldnum$$)
       END IF 
       a% = vzeil%
     WEND 
     vzeil% = a%

     a% = vzeil% + 10
     CALL VLine(mleft% - 7,a%,mright%,a%)
     vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     a% = vzeil% + 10
     vzeil% = a%

     CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Geburtstag: ")
     IF Mitarbeiter.adrtemp <> "" THEN 
       CALL VWrite(mleft% + 610,a%,1060,"['Arial' S 8 B C BLACK]" + "Betreuung durch: ")
     END IF 
     CALL VWrite(mleft% + 270,a%,710,"['Arial' S 8 B C BLACK]" + Geburtstag.wbericht$)
     IF Mitarbeiter.adrtemp <> "" THEN 
       CALL VWrite(mleft% + 870,a%,1850,"['Arial' S 8 B C BLACK]" + Mitarbeiter.wbericht$)
     END IF 
     CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
     vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
     a% = vzeil% + 10
     vzeil% = a%
   END IF 


   IF listart% = 2 THEN 
   REM Kurzliste
   REM 050196
     name$ = ""
     IF anrede.wbericht$ LIKE "Herr*" OR anrede.wbericht$ LIKE "Fr*" OR anrede.wbericht$ LIKE "Fam*" OR anrede.wbericht$ LIKE "Ehe*" OR anrede.wbericht$ LIKE "Kind*" THEN 
       IF name2.wbericht$ <> "" THEN 
         name$ = name2.wbericht$
       END IF 
       IF name1.wbericht$ <> "" THEN 
         name$ = name$ + ", " + name1.wbericht$
       END IF 
     ELSE 
       IF name1.wbericht$ <> "" THEN 
         name$ = name1.wbericht$
       END IF 
       IF name2.wbericht$ <> "" AND name1.wbericht$ <> "" THEN 
         name$ = name$ + ", " + name2.wbericht$
       ELSE 
         name$ = name2.wbericht$
       END IF 
       IF name1.wbericht$ <> "" AND name2.wbericht$ = "" THEN 
         name$ = name1.wbericht$
       END IF 
     END IF 
       IF kundennummer <> "" THEN 
         name$ = name$ + ", " + Kundennummer.wbericht$
       END IF 
       CALL VWrite(mleft% + 270,a%,1200,"['Arial' S 9 B C BLACK]" + name$)
       CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Name: ")
       a% = vzeil%
    
       abi% = 0
       feld1$ = "Telart"
       feld2$ = "Telnr"
       feld3$ = "FaxJN"
       feldart$ = feld1$ + STR$ (1,"0") + "." + wbericht$
       feldnum$ = feld2$ + STR$ (1,"0") + "." + wbericht$
       feldfax$ = feld3$ + STR$ (1,"0") + "." + wbericht$
       WHILE abi% < 20 AND feldart$$ <> ""
         abi% = abi% + 1
         IF abi% < 10 THEN 
           feldart$ = feld1$ + STR$ (abi%,"0") + ".adrtemp"
           feldnum$ = feld2$ + STR$ (abi%,"0") + ".adrtemp"
           feldfax$ = feld3$ + STR$ (abi%,"0") + "." + wbericht$
         ELSE 
           feldart$ = feld1$ + STR$ (abi%,"00") + ".adrtemp"
           feldnum$ = feld2$ + STR$ (abi%,"00") + ".adrtemp"
           feldfax$ = feld3$ + STR$ (abi%,"00") + "." + wbericht$
         END IF 
         IF feldnum$$ <> "" THEN 
           IF feldart$$ <> "" THEN 
             CALL VWrite(mleft%,a%,1200,"['Arial' S 8 B C BLACK]" + feldart$$)
           END IF 
           CALL VWrite(mleft% + 1200,a%,mright% - 3,"['Arial' S 8 C B BLACK]" + feldnum$$)
         END IF 
         a% = vzeil%
       WEND 
       vzeil% = a%
      
       a% = vzeil% + 10
       CALL VLine(mleft% - 7,a%,mright%,a%)
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       a% = vzeil% + 10
       vzeil% = a%
       
         CALL VWrite(mleft%,a%,460,"['Arial' S 8 B C BLACK]" + "Geburtstag: ")
         IF Mitarbeiter.adrtemp <> "" THEN 
           CALL VWrite(mleft% + 610,a%,1060,"['Arial' S 8 B C BLACK]" + "Betreuung durch: ")
         END IF 
         IF Geburtstag.wbericht$ <> "" THEN 
           CALL VWrite(mleft% + 270,a%,710,"['Arial' S 8 B C BLACK]" + Geburtstag.wbericht$)
         END IF 
         IF Mitarbeiter.adrtemp <> "" THEN 
           CALL VWrite(mleft% + 870,a%,1850,"['Arial' S 8 B C BLACK]" + Mitarbeiter.wbericht$)
         END IF 
         CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
       
       vzeil% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       a% = vzeil% + 10
       vzeil% = a%
     REM END IF 
   END IF 


   maxbottom% = vzeil%
   a% = vzeil%
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   IF obBottom% < a% THEN obBottom% = a%
   IF obBottom% >= mBottom% THEN 
     REM CALL VBox(mleft% - 7,mTop%,mright%,obBottom%)
     CALL VBox(mleft% - 7,czeile%,mright%,obBottom% + 50)
     CALL VLine(mleft% - 7,mtop%,mleft% - 7,czeile%)
     CALL VLine(mright%,mtop%,mright%,czeile%)
     CALL VLine(mleft% - 7,czeile%,mright%,czeile%)
     ab% = CALL ("VpePageBreak",hdoc%)
     vzeil% = ueberpos%
     a% = vzeil%
   ELSE 
     SELECT NEXT 
     i% = i% + 1
     SET STATUS STR$ (i%,"0000000") + " Adressen verarbeitet!"
     IF KurzLang$ <> "j" THEN 
       REM a% = vzeil%
       REM a% = CALL ("VpeGet",hdoc%,VBOTTOM%)
       REM CALL VLine(mleft% - 7,a% + 3,mright%,a% + 3)
       REM a% = a% + 15
       vzeil% = a%
       IF EOF (wbericht$) THEN 
         CALL VLine(mleft% - 7,mtop%,mleft% - 7,obBottom%)
         CALL VLine(mright%,mtop%,mright%,obBottom%)
         CALL VLine(mleft% - 7,obBottom%,mright%,obBottom%)
       END IF 
     ELSE 
       IF NOT EOF (wbericht$) THEN 
         a% = CALL ("VpePageBreak",hdoc%)
         czeile% = vzeil%
         cPage% = CALL ("VpeGetCurrentPage",hdoc%)
         cPageold% = cPage%
         vzeil% = ueberpos%
       END IF 
     END IF 
  END IF 
 WEND 
 IF KurzLang$ <> "j" THEN 
   vzeil% = vzeil% + 150
 ELSE 
   vzeil% = listende% + 100
 END IF 
 CALL VPrint(mleft%,vzeil% + 20,"['Arial' S 15 B C BLACK]Ende der Liste")
 cPage% = CALL ("VpeGetCurrentPage",hdoc%)
 
 FOR b% = 1 TO cPage%
   vzeil% = mTop%
   a% = CALL ("VpeGotoPage",hdoc%,b%)
   CALL VLine(mleft% - 7,vzeil%,mright%,vzeil%)
   CALL VWrite(mleft%,vzeil% + 10,1610,"['Arial' S 10 B C BLACK]" + title2$ + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy"))
   CALL VWrite(mleft% + 10,vzeil%,1000,"['Arial' S 8 B]Seite " + LTRIM$ ( STR$ (b%,"999")) + " von " + LTRIM$ ( STR$ (cPage%,"999")))
   obBottom% = CALL ("VpeGet",hdoc%,VBOTTOM%)
   CALL VLine(mleft% - 7,obBottom% + 10,mright%,obBottom% + 10)
 NEXT b%
 a% = CALL ("VpeGotoPage",hdoc%,1)
 MOUSE ON 
 IF scedov% = 1 AND reqbild% <> 1 THEN 
   CALL VPrintDoc()
 ELSE 
   REM CALL VPrevDoc()
           MOUSE ON 
           CALL Fehler("Bitte nach dem Ausdruck eine Taste drÅcken!","")
           CALL VPrevDoc()
           WAIT MOUSE OR KEY OR MENU 
           CALL Fehler("Ausdruck wurde beendet!","Um fortzufahren bitte auf den OK-Button drÅcken!")
 END IF 
 REM Nach dem Drucken, Drucker auf A4 hoch setzen
 REM c$ = PRINTER :d$ = PRINTER (0):SET PRINTER c$,d$,1,9
         ON ERROR GOTO adrdr1709200212
         IF PRINTER (1) = 1 OR PRINTER (1) = 2 THEN 
           c$ = PRINTER :d$ = PRINTER (0)
           SET PRINTER c$,d$,1,9
           REM PRINT CURRENT PAGE 
           GOTO endruck1709200212
         END IF 
         
adrdr1709200212: 
         MOUSE ON 
         REM c$ = PRINTER :d$ = PRINTER (0)
         ON ERROR GOTO endruck1709200212
         SET PRINTER 
         REM PRINT CURRENT PAGE 
         FORM 
endruck1709200212: 
         ON ERROR GOTO ErrorHandler 
 REM CLOSE FILE wbericht$
 END SUB 
  
 
SUB LoeschProt(codeku%,Daten$)
 CALL DFile(2,"OFFICE\LoeProt" + _fpw$)
 SELECT KEY vcodema% FILE "Supervis" INDEX codema.supervis
 namem$ = name.supervis
 BLANK FILE "Loeprot"
 codema.Loeprot = vcodema%
 Mitarbeiter.loeprot = namem$
 datum.loeprot = TODAY 
 codeku.loeprot = codeku%
 daten.loeprot = daten$
 NUMBASE "0000000000"
 timestamp$ = DATE$ ( TODAY ,"yyyymm0d") + STR$ ( HRS ( NOW ) * 100 + MINS ( NOW ),"0000")
 timestamp.loeprot = timestamp$
 STORE FILE "loeprot"
 END SUB 



SUB ProtAll(codeku%,Daten$,Kunde$,lfdnr%,Police$,CodeAQ%,Termin$)
 IF NOT OPEN ("PROTALL") THEN CALL DFile(2,"OFFICE\PROTALL" + _fpw$)
 REM SELECT KEY GMAcodema% FILE "Supervis" INDEX codema.supervis
 REM namem$ = name.supervis
 BLANK FILE "PROTALL"
 codema.PROTALL = GMAcodema%
 Mitarbeiter.PROTALL = GMAname$
 datum.PROTALL = TODAY 
 codeku.PROTALL = codeku%
 daten.PROTALL = daten$
 Kunde.PROTALL = Kunde$
 lfdnr.PROTALL = lfdnr%
 Police.PROTALL = Police$
 CodeAQ.PROTALL = CodeAQ%
 Termin.PROTALL = Termin$
 NUMBASE "0000000000"
 timestamp$ = DATE$ ( TODAY ,"yyyymm0d") + STR$ ( HRS ( NOW ) * 10000 + MINS ( NOW ) * 100 + SECS ( NOW ),"000000")
 timestamp.PROTALL = timestamp$
 STORE FILE "PROTALL"
 END SUB 

  
SUB ADRDokNew()
 knr% = Codeku.GAdrDat$
 IF disabled%("DOKUMENT") THEN END SUB 
 CALL DFile(2,"OFFICE\" + GDokDat$ + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 cudo% = CodeDOK.GDokDat$
 _formend% = 0
 SET STATUS "Bereit"
 REM maske$ = "DOKGES"
 SELECT CASE GAdrDat$
   CASE "ADRESSEN"
     maske$ = "DOKGES3"
   CASE "BCKONTAK"
     maske$ = "DOKBC"
   CASE "ADRE1"
     maske$ = "DOKADR1D"
 END SELECT 
 
 FILE GDokDat$
 INDEX codeku.GDokDat$
 SELECT FIRST 
 
 DIM dlg AS Dialog
 DIM control AS DialogControl
 
 WHILE _formend% = 0
   ON ERROR GOTO ErrorHandler
   DOKsub% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     SET HEADING title$ + " - Dokumentenverwaltung"
     IF EXISTS (GOFFForm$ + maske$ + ".sbv") THEN 
       OPEN FORM GOFFForm$ + maske$
     ELSE 
       OPEN FORM GOFFForm$ + maske$
     END IF 
     SET STATUS "Dokumentenverwaltung"
     SET f = Superbase.Form
     GAppName$ = _netpath$ + "DOC\Dokument.pdf"
     ON ERROR GOTO ErrorHandler
     FILE "dokument"
     befe$ = "SELECT WHERE codeku.dokument = knr% AND novi1.dokument = 0"
     EXECUTE befe$
     CALL MNDOKSRV1()
     ON ERROR GOTO ErrorHandler
     CALL ADRDokNewInt()
     ON ERROR GOTO ErrorHandler
     FORM 
     SET DISPLAY ON 
   END IF 
   MENU ON 
   FORM 
   MOUSE ON 
   dokgrup$ = Gruppe.GDokDat$
   FORM 
   CALL ClearKBDBuffer()
   ON ERROR GOTO ErrorHandler
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE DOKsub%
   CASE 30
     REM Dokument einscannen
     REM CALL Fehler("Dokument einscannen","")
     codeku% = codeku.adressen
     knr% = codeku.adressen
     CALL ScanDok(codeku%)
     SELECT WHERE FILE "dokument"
     befe$ = "SELECT WHERE codeku.dokument = knr% AND novi1.dokument = 0"
     EXECUTE befe$
     SELECT FIRST FILE "dokument"
     CALL ADRDokNewInt()
     FORM 
   CASE 1
     befe1$ = befe$
     SELECT WHERE FILE GDokDat$
     CALL ADRDOK()
     CALL ADRDokNewInt()
    
     ab$ = FORM 
   CASE 2
     IF disabled%("DOKUMENTBEARB") THEN 
     ELSE 
       CALL DOKSRV1()
     END IF 
   CASE 3
     SELECT WHERE FILE GDokDat$
     REM CALL DokSuchen1(knr%,befe$)
     REM adrfound% = DokSuchen%(codeku.adressen,befe$)
     codeku% = knr%
     cudo% = 0
     CALL DOKVSuchen(codeku%)
     adrfound% = GDokSu1%
     adrfound% = cudo%
     IF adrfound% <> 0 AND codeku.GDokDat$ = knr% THEN 
       cudo% = CodeDOK.GDokDat$
       SELECT KEY adrfound% FILE GDokDat$ INDEX codedok.GDokDat$
       CALL DOKSRV1()
     END IF 
   CASE 4
     CALL DokFilt()
     CALL ADRDokNewInt()
     FORM 
   CASE 5
     REM Scannen/Import
     opt% = 1
     
     IF GSofortfile$ = "j" THEN 
       opt% = 2
       req% = 1
       GOTO f140320041
     END IF 
     Superbase.Dialogs.Add("DOKNEU")
     SET dlg = Superbase.Dialogs.DOKNEU
     dlg.Move(0,0,252,111)
     dlg.Caption = "Dokument anlegen"
     dlg.FontName = "MS Sans Serif"
     dlg.FontSize = 8
 
     SET control = dlg.Add("DialogLabel1","DialogLabel")
     control.Move(6,8,172,29)
     control.Caption = "Sie haben jetzt die folgenden Mîglichkeiten"
 
     SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
     control.Move(21,48,222,12)
     control.Caption = "leeres Word-Dokument anlegen und von dort aus einscannen"
     control.Bind("opt%")
     control.ValueOn = 1
 
     SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
     control.Move(21,62,140,13)
     control.Caption = "eine vorhandene Datei importieren"
     control.Bind("opt%")
     control.ValueOn = 2
 
     SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
     control.Move(37,84,50,15)
     control.Default = 1
     control.Caption = "OK"
     control.ReturnValue = 1
 
     SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
     control.Move(90,84,50,15)
     REM control.Default = 1
     control.Caption = "Abbruch"
     control.ReturnValue = 0
 
     DIALOG "DOKNEU",req%
     REMOVE DIALOG "DOKNEU"
f140320041: 
     IF req% = 1 THEN 
       neudir$ = GScandir$
       IF GScandir$ = "" OR GScandir$ LIKE "leer" THEN 
         GScanDir$ = "C:\"
         IF gasp% = - 1 THEN 
           neudir$ = "P:\"
           GScanDir$ = "P:\"
         END IF 
       ELSE 
         neudir$ = ""
       END IF 
       ON ERROR GOTO f230220041
       IF GCodie% = - 1 AND GoldScanVerf$ <> "TRUE" AND GScanDir$ <> neudir$ THEN 
         REGISTER _netpath$ + "CODieLIB.dll","_SBCreateDir","IF"
         a% = CALL ("_SBCreateDir",GScanDir$)
         REGISTER CLEAR "_SBCreateDir"
         REGISTER _netpath$ + "CODieLIB.dll","_SBSetCurrentDir","IF"
         a% = CALL ("_SBSetCurrentDir",GScanDir$)
         REGISTER CLEAR "_SBSetCurrentDir"
       ELSE 
         DIRECTORY GScanDir$
       END IF 
       GOTO f230220042
f230220041: 
       CALL Fehler("Das definierte Importverzeichnis: " + GScanDir$ + " ist ungÅltig, es wird deshalb jetzt erstmal auf C:\ gesetzt, um eine Weiterarbeit zu ermîglichen!","")
       GScanDir$ = "C:\"
       
f230220042: 
       ON ERROR GOTO ErrorHandler
       IF opt% = 1 THEN 
         textvorlage$ = _netpath$ + "OFFICE\text\0w97.doc"
           REM REQUEST "Eintrag in Termindatei vornehmen?","",130,raa%
           REM IF raa% = 1 THEN CALL ADRDokRegister(CodeDOK.GDokDat$)
         CALL DOKImportKU(1)
       ELSE 
         REM textvorlage$ = "*.*"
         REM REQUEST "Dokument importieren","",26,req%,textvorlage$
         CALL DOKImportKU(0)
       END IF 
     END IF 
     
   CASE 22
      SELECT CASE GAdrDat$
        CASE "ADRESSEN"
          maske$ = "DOKGES"
        CASE "BCKONTAK"
          maske$ = "DOKBC"
        CASE "ADRE1"
          maske$ = "DOKADR1"
      END SELECT 
   CASE 23
      SELECT CASE GAdrDat$
        CASE "ADRESSEN"
          maske$ = "DOKGESPR"
        CASE "BCKONTAK"
          maske$ = "DOKGESBC"
        CASE "ADRE1"
          maske$ = "DOKADR1D"
      END SELECT 
   CASE 24
      SELECT CASE GAdrDat$
        CASE "ADRESSEN"
          maske$ = "DOKGES1"
        CASE "BCKONTAK"
          maske$ = "DOKGES1B"
        CASE "ADRE1"
          maske$ = "DOKADR1C"
      END SELECT 
   CASE 25
      SELECT CASE GAdrDat$
        CASE "ADRESSEN"
          maske$ = "DOKGES2"
        CASE "BCKONTAK"
          maske$ = "DOKGES2B"
        CASE "ADRE1"
          maske$ = "DOKADR1B"
      END SELECT 
   CASE 26
      SELECT CASE GAdrDat$
        CASE "ADRESSEN"
          maske$ = "DOKGES3"
        CASE "BCKONTAK"
          maske$ = "DOKGES3B"
        CASE "ADRE1"
          maske$ = "DOKADR1A"
      END SELECT 
   CASE 27
      SELECT CASE GAdrDat$
        CASE "ADRESSEN"
          maske$ = "DOKGESPR"
        CASE "BCKONTAK"
          maske$ = "DOKGESBC"
      END SELECT 
   CASE 28
      SELECT CASE GAdrDat$
        CASE "ADRESSEN"
          maske$ = "DOKGES4"
        CASE "BCKONTAK"
          maske$ = "DOKGESBC"
      END SELECT 
   END SELECT 
 WEND 
 _formend% = 0

 SELECT WHERE FILE GDokDat$
     IF GCODieRuf% = - 1 THEN 
       ret% = CALL ("_SearchClose"):REM CALL Fehler("","")
       GCODieRuf% = 0
     END IF 
 REM IF FileChanged%(GDokDat$) = 1 THEN CALL FStore(GDokDat$)
end141020051: 
 END SUB 


SUB MNDOKSRV1()
 CALL MNProgramm()
 MENU 2,0,1,"Bearbeiten","",""
 MENU 2,1,1,"&RÅckgÑngig,Ctrl+RckT","UNDO","letzte énderungen verwerfen"
 MENU 2,2,1,"Dokument &importieren","DOKImport","existierende Dokumente in Dokumentenverwaltung aufnehmen"
 MENU 3,0,1,"&Bewegen","",""
 MENU 3,1,0,"&NÑchster,BildAb","PSelectNext","nÑchstes Dokument"
 MENU 4,0,1,"&Optionen"
 MENU 4,1,0,"als &Tabelle bearbeiten","DOKSRVTAB","DokumenteneintrÑge als Tabelle bearbeiten"
 MENU 4,2,1,"aus Suchliste &wÑhlen,F7","DokKurzSuche","Auflistung aller vorher gesuchten Dokumente"
 IF ProjectJN$ = "TRUE" THEN 
   MENU 5,0,1,"Projektzuordnung zurÅcksetzen"
   MENU 5,1,1,"Zuordnung zum Projekt zurÅcksetzen","DelProjDok","Zuordnung zum Projekt zurÅcksetzen"
   CALL MNHilfe(6)
 ELSE 
   CALL MNHilfe(5)
 END IF 
 REM CALL MNHilfe(2)
 END SUB 
 
SUB ADRDokNewInt()
 SELECT KEY knr% FILE GAdrDat$ INDEX codeku.GAdrDat$
 SELECT FORM KEY knr% FILE GAdrDat$ INDEX codeku.GAdrDat$
 SELECT FORM KEY knr% FILE GDokDat$ INDEX codeku.GDokDat$
 END SUB 


SUB DOKSRV1()
 ON ERROR GOTO ErrorHandler
 IF disabled%("DOKUMENT") THEN END SUB 
 cudo% = CodeDOK.GDokDat$
 SELECT WHERE FILE GDokDat$
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = GDokDat$
 IF GDokDat$ LIKE "DOKADR1" THEN 
   maske$ = "DOKADR1F"
 END IF 

 IF ProjectJN$ = "TRUE" THEN maske$ = "DOKEPRJ"
 xpwvers% = 0
 WHILE _formend% = 0
   ON ERROR GOTO ErrorHandler
   DOKsub% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     SET HEADING title$ + " - Dokumentenverwaltung"
     IF EXISTS (GOFFForm$ + maske$ + ".sbv") THEN 
       OPEN FORM GOFFForm$ + maske$
     ELSE 
       OPEN FORM GOFFForm$ + maske$
     END IF 
     SET f = superbase.form
     GAppName$ = _netpath$ + "DOC\Dokument.pdf"
     SET STATUS "Dokumentenverwaltung"
     CALL MNDOKSRV()
     FILE GDokDat$
     INDEX Dokument.GDokDat$
     SELECT FORM FIRST 
     FORM 
     SET DISPLAY ON 
   END IF 
   MENU ON 
   MOUSE ON 
   REM dokgrup$ = Gruppe.GDokDat$
   SELECT FORM KEY cudo% FILE GDokDat$ INDEX codedok.GDokDat$
   dokgrup$ = Gruppe.GDokDat$
   IF ProjectJN$ = "TRUE" THEN 
     IF projekt.GDokDat$ <> "" THEN 
       proj$ = Projekt.GDokDat$
     ELSE 
       proj$ = "<ohne Zuordnung>"
     END IF 
     IF gruppe.GDokDat$ <> "" THEN 
       dokgrup$ = gruppe.GDokDat$
     ELSE 
       dokgrup$ = "<ohne Zuordnung>"
     END IF 
   END IF 
   REM f.imp.visible = 0
   f.such.visible = 0
   f.left.visible = 0
   f.right.visible = 0
   ON ERROR GOTO dowei081220031
   IF GELO% = - 1 THEN 
     f.elo.visible = - 1
     f.elo1.visible = - 1
     f.elo2.visible = - 1
     f.elo3.visible = - 1
     f.elo4.visible = - 1
     f.elo5.visible = - 1
     f.elo6.visible = - 1
   ELSE 
     f.elo.visible = 0
     f.elo1.visible = 0
     f.elo2.visible = 0
     f.elo3.visible = 0
     f.elo4.visible = 0
     f.elo5.visible = 0
     f.elo6.visible = 0
   END IF 
dowei081220031: 
   ON ERROR GOTO dowei081220032
     f.doksehen.visible = - 1
     f.doksehen.enabled = - 1
   END IF 
dowei081220032: 
   ON ERROR GOTO ErrorHandler
   REM f.doksuchen.visible = 0
   ON ERROR GOTO Err120220071
   IF dokpass.GDokDat$ = "" THEN 
     f.dokschu.Backcolor = 3
     dokschutz$ = "Dokument gegen énderungen schÅtzen"
     f.dateiname.readonly = 0
     f.dateiname.enabled = - 1
     f.dateiname.visible = - 1
     f.textschu.visible = 0
   ELSE 
     f.dokschu.Backcolor = 2
     dokschutz$ = "Dokument wurde erfolgreich geschÅtzt"
     f.dateiname.readonly = - 1
     f.dateiname.enabled = 0
     f.dateiname.visible = 0
     f.textschu.visible = - 1
   END IF 
Err120220071: 
   ON ERROR GOTO ErrorHandler
   FORM 
   MENU ON 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE DOKsub%
   CASE 1
     codeku% = codeku.GDokDat$
     CALL DokSuchen1(codeku%,"")
     cudo% = codedok.GDokDat$
   CASE 2
     REM dokument lîschen
     codeku% = codeku.GDokDat$
     IF DokPass.GDokDat$ = "" THEN 
       CALL DOKVLoeschen()
     ELSE 
       CALL Fehler("Das Dokument wurde geschÅtzt und kann deshalb nicht mehr gelîscht werden!","")
     END IF 
     IF EXISTS (codeku%,codeku.GDokDat$) THEN 
       SELECT KEY codeku% FILE GDokDat$ INDEX codeku.GDokDat$
       FORM 
     ELSE 
       _formend% = 1
       CALL Fehler("Es sind keine weiteren Dokumente fÅr diesen Kunden vorhanden!","")
     END IF 
   CASE 3
     IF NOT disabled%("DOKUMENTBEARB") THEN 
       MENU OFF 
       CALL DOKAuswGrup()
       MENU ON 
     END IF 
   CASE 4
     REM Import
     CALL DOKImportKU(0)
     cudo% = Codedok.GDokDat$
   CASE 5
     REM Dokument nach ELO Åbertragen
     cudo% = Codedok.GDokDat$
     codedok% = cudo%
     codeku% = codeku.GDokDat$
     SELECT KEY codeku.GDokDat$ FILE GADRDat$ INDEX codeku.GADRDat$
     IF ELOTrans.GDokDat$ <> 1 THEN 
       CALL ADRDokSendELO(codedok%,codeku%)
     ELSE 
       REQUEST "Das Dokument wurde bereits an ELO Åbergeben?","Soll es nochmal Åbergeben werden?",135,req%
       IF req% = 1 THEN 
         CALL ADRDokSendELO(codedok%,codeku%)
       END IF 
     END IF 
     SELECT KEY cudo% FILE GDokDat$ INDEX codedok.GDokDat$
   CASE 6
     codedok% = codedok.GDokDat$
     IF dokpass.GDokDat$ = "" THEN 
       SELECT FIRST FILE "Stamm"
       passw$ = DokPass.stamm
       passw1$ = ""
       IF passw$ = "" THEN 
         CALL Fehler("Es wurde kein Passwort hinterlegt!","Bitte tragen Sie in Einstellungen->Firmenstammdaten->Dokumentenpasswort ein Passwort ein!")
         GOTO endpw180120061
       END IF 
       IF dokpass1.GDokDat$ = "" THEN 
         REQUEST "Soll das Dokument jetzt geschÅtzt werden?","",135,req%
         IF req% = 1 THEN 
           passw1$ = ""
           CALL EncryptDoks(codedok%,0,passw$,passw1$)
         END IF 
       END IF 
     ELSE 
       IF GDisDokSchu$ = "j" THEN 
         REQUEST "Soll der Dokumentenschutz jetzt aufgehoben werden?","",135,req%
         IF req% = 1 THEN 
           REM passw$ = DokPass.GDokDat$
           SELECT FIRST FILE "Stamm"
           passw1$ = DokPass.stamm
           REM passdenc$ = ""
           REM encpw$ = "london8474" 
           
           CREATE DIALOG "LOGIN",0,0,193,79,title$,"MS Sans Serif",8
           ADD DIALOG "LOGIN",4,0,0,193,58,0,""
           ADD DIALOG "LOGIN",9,5,11,20,22,2
           ADD DIALOG "LOGIN",5,33,11,139,9,0,"Das EntschlÅsseln ist durch "
           ADD DIALOG "LOGIN",5,33,20,68,10,0,"Passwort geschÅtzt."
           ADD DIALOG "LOGIN",5,33,31,32,12,0,"&Passwort:"
           ADD DIALOG "LOGIN",6,33,41,149,11,32,0,pw$,10
           ADD DIALOG "LOGIN",1,38,61,50,15,1,"&OK",1,1
           ADD DIALOG "LOGIN",1,89,61,50,15,0,"&Abbruch",0,0
           DIALOG "LOGIN",req%
           REMOVE DIALOG ALL 
           IF req% = 1 THEN 
             IF pw$ = passw1$ THEN 
               req% = 1
             ELSE 
               req% = 0
               xpwvers% = xpwvers% + 1
               IF xpwvers% < 3 THEN 
                 CALL Fehler("Passwort ist falsch!","")
               END IF 
               IF xpwvers% > 2 THEN 
                 REQUEST "Passwort ist falsch!","Programm wird beendet!",2
                 CALL EXIT()
               END IF 
             END IF 
           END IF 
           pw$ = ""
           REM ac% = CALL ("_DecryptString",passw$,passdenc$,encpw$)
           IF req% = 1 THEN CALL DecryptDoks(codedok%,"",0)
         END IF 
       ELSE 
         CALL Fehler("Das Dokument wurde bereits geschÅtzt","")
       END IF 
     END IF 
endpw180120061: 
     DOKsub% = 0
   CASE 7
     codedok% = codedok.GDokDat$
     IF dokpass1.GDokDat$ = "" THEN 
       SELECT FIRST FILE "stamm"
       passw$ = ""
       REM passw$ = DokPass.stamm
       SELECT FIRST FILE "supervis" INDEX codema.supervis
       SELECT KEY GCodeMA% FILE "supervis" INDEX codema.supervis
       passw1$ = DokPass1.supervis
       IF passw1$ = "" THEN 
         CALL Fehler("Es wurde kein Passwort hinterlegt!","Bitte tragen Sie in Mitarbeiterverwaltung->Ihr Dokumentenpasswort ein Passwort ein!")
         GOTO endpw180120061
       END IF 
       IF dokpass1.GDokDat$ = "" AND passw1$ <> "" THEN 
         REQUEST "Soll das Dokument jetzt geschÅtzt werden?","",135,req%
         IF req% = 1 THEN 
           CALL EncryptDoks(codedok%,0,passw$,passw1$)
         END IF 
       END IF 
     ELSE 
       IF GDisDokSchu$ = "j" THEN 
         REQUEST "Soll der persînliche Dokumentenschutz jetzt aufgehoben werden?","",135,req%
         IF req% = 1 THEN 
           CALL DecryptDoks(codedok%,"",0)
         END IF 
       ELSE 
         CALL Fehler("Das Dokument wurde bereits geschÅtzt","")
       END IF 
     END IF 
endpw180120061: 
     DOKsub% = 0
   CASE 99
     IF NOT disabled%("DOKUMENTBEARB") THEN 
       MENU OFF 
       ENTER Dokument.GDokDat$,0
       MENU ON 
     END IF 
   END SELECT 
 WEND 
 _formend% = 0
 IF FileChanged%(GDokDat$) = 1 THEN CALL FStore(GDokDat$)

 END SUB 



 REM 23.01.2006 - verschlÅsseln von Dokumenten
 REM sch%=0 mit Abfragen
 REM sch%=1 ohne Abfragen (fÅr AutomatiklÑufe)
SUB EncryptDoks(codedok%,sch%,passwverg$,passwpers$)
   IF NOT OPEN ("DOKMA") THEN CALL DFile(2,"OFFICE\DOKMA" + _fpw$)
   IF NOT OPEN ("DOKGE") THEN CALL DFile(2,"OFFICE\DOKGE" + _fpw$)
   IF NOT OPEN ("DOKKV") THEN CALL DFile(2,"OFFICE\DOKKV" + _fpw$)
   IF NOT OPEN ("DOKUMENT") THEN CALL DFile(2,"OFFICE\DOKUMENT" + _fpw$)
   SELECT FIRST FILE "stamm"
         SELECT FIRST FILE GDokDat$ INDEX codedok.GDokDat$
         SELECT KEY codedok% LOCK FILE GDokDat$ INDEX codedok.GDokDat$
         passw$ = passwverg$
         IF EXISTS (_netpath$ + Dateiname.GDokDat$) THEN 
           ON ERROR GOTO ErrorHandler
           dokorig$ = _netpath$ + Dateiname.GDokDat$
           lenge% = LEN (dokorig$) - 3
           dokRest$ = MID$ (dokorig$,1,lenge%)
           dokZiel$ = dokrest$ + "ENC"
           a1% = 0
           smagic$ = "london8474"
           hash$ = ""
           a1% = CALL ("_GetFileHash",dokorig$,smagic$,hash$)
           aa% = 0
           aa% = CALL ("_EncryptToFile",dokorig$,dokZiel$,passw$,0)
           IF sch% = 0 THEN 
             SELECT CASE aa%
             CASE 0
               CALL Fehler("Beim verschlÅsseln ist ein unerwarteter Systemfehler aufgetreten!","")
             CASE 2
               CALL Fehler("Die zu verschlÅsselnde Datei: " + dokorig$ + " wurde nicht gefunden!","")
             CASE 3
               CALL Fehler("Die Zieldatei: " + dokZiel$ + " existiert bereits!","")
             CASE 4
               CALL Fehler("Die Zieldatei: " + dokZiel$ + " konnte nicht geschrieben werden!","")
             CASE 5
               CALL Fehler("Die zu verschlÅsselnde Datei: " + dokorig$ + "ist in Benutzung!","")
             CASE 6
               CALL Fehler("Das Verzeichnis fÅr die Zieldatei: " + dokZiel$ + " existiert nicht!","")
             END SELECT 
           ELSE 
           END IF 
Doc301220032: 
           ON ERROR GOTO ErrorHandler
           IF aa% = - 1 THEN 
             ac% = 0
             passenc$ = "1234567"
             encpw$ = "london8474"
             ac% = CALL ("_EncryptString",passw$,passenc$,encpw$)
             IF aa% = - 1 AND ac% = - 1 THEN 
               IF passwverg$ <> "" THEN 
                 DokPass.GDokDat$ = passenc$
                 SMaTimeStamp1.GDokDat$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm")
                 SMANAme.GDokDat$ = GMANAme$
               END IF 
               FileHash.GDokDat$ = hash$
               IF passwpers$ <> "" THEN 
                 DokPass1.GDokDat$ = passenc$
                 SMaTimeStampP.GDokDat$ = DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh:mm")
                 SMANAmeP.GDokDat$ = GMANAme$
               END IF 
               STORE FILE GDokDat$
               SELECT CASE UCASE$ (GDokDat$)
               CASE "DOKUMENT"
                 d$ = "DOKKV"
                 dnam$ = Dateiname.GDokDat$
                 IF EXISTS (dnam$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
                 d$ = "DOKMA"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
                 d$ = "DOKGE"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
               CASE "DOKKV"
                 d$ = "DOKUMENT"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
                 d$ = "DOKGE"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
                 d$ = "DOKMA"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
               CASE "DOKMA"
                 d$ = "DOKKV"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
                 d$ = "DOKUMENT"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
                 d$ = "DOKGE"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
               CASE "DOKGE"
                 d$ = "DOKKV"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
                 d$ = "DOKMA"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
                 d$ = "DOKUMENT"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
               END SELECT 
               DELETE dokorig$
             ELSE 
               IF sch% = 0 THEN 
                 CALL Fehler("Dokument wurde nicht verschlÅsselt, da ein oder mehrere Fehler auftraten!","")
               ELSE 
               END IF 
             END IF 
           END IF 
         END IF 
 END SUB 

 REM 23.01.2006 - EntschlÅsseln von Dokumenten
 REM sch%=0 mit Abfragen
 REM sch%=1 ohne Abfragen (fÅr AutomatiklÑufe)

SUB DecryptDoks(codedok%,dest$,sch%)
   IF NOT OPEN ("DOKMA") THEN CALL DFile(2,"OFFICE\DOKMA" + _fpw$)
   IF NOT OPEN ("DOKGE") THEN CALL DFile(2,"OFFICE\DOKGE" + _fpw$)
   IF NOT OPEN ("DOKKV") THEN CALL DFile(2,"OFFICE\DOKKV" + _fpw$)
   IF NOT OPEN ("DOKUMENT") THEN CALL DFile(2,"OFFICE\DOKUMENT" + _fpw$)
         SELECT FIRST FILE GDokDat$ INDEX codedok.GDokDat$
         SELECT KEY codedok% LOCK FILE GDokDat$ INDEX codedok.GDokDat$
         dest1$ = dest$
           ON ERROR GOTO ErrorHandler
           IF dest$ = "" THEN 
             dest$ = _netpath$ + Dateiname.GDokDat$
             lenge% = LEN (dest$) - 3
             dokRest$ = MID$ (dest$,1,lenge%)
             source$ = dokrest$ + "ENC"
           ELSE 
             destorig$ = _netpath$ + Dateiname.GDokDat$
             lenge% = LEN (destorig$) - 3
             dokRest$ = MID$ (destorig$,1,lenge%)
             source$ = dokrest$ + "ENC"
           END IF 
           FileHash$ = FileHash.GDokDat$
           passw$ = DokPass.GDokDat$

         IF EXISTS (source$) THEN 
           ac% = 0
           passdenc$ = ""
           encpw$ = "london8474"
           ac% = CALL ("_DecryptString",passw$,passdenc$,encpw$)
           aa% = 0
           passw$ = passdenc$
           aa% = CALL ("_DecryptFromFile",source$,dest$,passw$,0)
           IF sch% = 0 THEN 
             SELECT CASE aa%
             CASE 0
               CALL Fehler("Beim entschlÅsseln ist ein unerwarteter Systemfehler aufgetreten!","")
             CASE 2
               CALL Fehler("Die zu entschlÅsselnde Datei: " + source$ + " wurde nicht gefunden!","")
             CASE 3
               CALL Fehler("Die Zieldatei: " + dest$ + " existiert bereits!","")
             CASE 4
               CALL Fehler("Die Zieldatei: " + dest$ + " konnte nicht geschrieben werden!","")
             CASE 5
               CALL Fehler("Die zu entschlÅsselnde Datei: " + source$ + "ist in Benutzung!","")
             CASE 6
               CALL Fehler("Das Verzeichnis fÅr die Zieldatei: " + dest$ + " existiert nicht!","")
             END SELECT 
           ELSE 
           END IF 
Doc301220033: 
           ON ERROR GOTO ErrorHandler
           IF ac% = - 1 THEN 
             IF aa% = - 1 THEN 
               hash$ = ""
               smagic$ = "london8474"
               a2% = 0
               a2% = CALL ("_GetFileHash",dest$,smagic$,hash$)
               IF hash$ = FileHash$ THEN 
                 IF dest1$ = "" THEN 
                   REM richtig entschlÅsseln
                   DokPass.GDokDat$ = ""
                   SMaTimeStamp1.GDokDat$ = ""
                   SMANAme.GDokDat$ = ""
                   FileHash.GDokDat$ = ""
                   STORE FILE GDokDat$
                   DELETE source$
                 END IF 
               ELSE 
                 CALL Fehler("Das Dokument entspricht nicht dem eigentlichem Original, es wurde manipuliert (wahrscheinlich ausgetauscht),","die Hashwerte (PrÅfsummen) stimmen nicht Åberein!")
                 REQUEST "Soll es trotzdem entschlÅsselt werden?","",135,req%
                 IF req% = 1 THEN 
                   DokPass.GDokDat$ = ""
                   SMaTimeStamp1.GDokDat$ = ""
                   SMANAme.GDokDat$ = ""
                   FileHash.GDokDat$ = ""
                   STORE FILE GDokDat$
                 ELSE 
                   GOTO w050420061
                 END IF 
               END IF 
               REM *******************************************************************************************************************************
               SELECT CASE UCASE$ (GDokDat$)
               CASE "DOKUMENT"
                 d$ = "DOKKV"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
                 d$ = "DOKMA"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
                 d$ = "DOKGE"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
               CASE "DOKKV"
                 d$ = "DOKUMENT"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
                 d$ = "DOKGE"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
                 d$ = "DOKMA"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
               CASE "DOKMA"
                 d$ = "DOKKV"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
                 d$ = "DOKUMENT"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
                 d$ = "DOKGE"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
               CASE "DOKGE"
                 d$ = "DOKKV"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
                 d$ = "DOKMA"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
                 d$ = "DOKUMENT"
                 IF EXISTS (Dateiname.GDokDat$,Dateiname.d$) THEN 
                   SELECT FIRST FILE d$ INDEX dateiname.d$
                   SELECT KEY Dateiname.GDokDat$ LOCK FILE d$ INDEX dateiname.d$
                   DokPass.d$ = DokPass.GDokDat$
                   DokPass1.d$ = DokPass1.GDokDat$
                   FileHash.d$ = FileHash.GDokDat$
                   SMaTimeStamp1.d$ = SMaTimeStamp1.GDokDat$
                   SMANAme.d$ = SMANAme.GDokDat$
                   SMaTimeStampP.d$ = SMaTimeStamp1.GDokDat$
                   SMANAmeP.d$ = SMANAme.GDokDat$
                   STORE FILE d$
                 END IF 
               END SELECT 
               REM *********************************************************************************************************************************
             ELSE 
               IF sch% = 0 THEN 
                 CALL Fehler("Dokument wurde nicht entschlÅsselt, da ein oder mehrere Fehler auftraten!","")
               ELSE 
               END IF 
             END IF 
           END IF 
         END IF 
w050420061: 
 END SUB 








































           IF ac% = - 1 THEN 
             IF aa% = - 1 THEN 
               hash$ = ""
               smagic$ = "london8474"
               a2% = 0
               a2% = CALL ("_GetFileHash",dest$,smagic$,hash$)
               IF hash$ = FileHash$ THEN 
                 IF dest1$ = "" THEN 
                   REM richtig entschlÅsseln
                   DokPass.GDokDat$ = ""
                   SMaTimeStamp1.GDokDat$ = ""
                   SMANAme.GDokDat$ = ""
                   FileHash.GDokDat$ = ""
                   STORE FILE GDokDat$
               ELSE 
                 CALL Fehler("Das Dokument entspricht nicht dem eigentlichem Original, es wurde manipuliert (wahrscheinlich ausgetauscht),","die Hashwerte (PrÅfsummen) stimmen nicht Åberein!")
                 REQUEST "Soll es trotzdem entschlÅsselt werden?","",135,req%
                 IF req% = 1 THEN 
                   DokPass.GDokDat$ = ""
                   SMaTimeStamp1.GDokDat$ = ""
                   SMANAme.GDokDat$ = ""
                   FileHash.GDokDat$ = ""
                   STORE FILE GDokDat$
                 ELSE 
                   GOTO w050420061
                 END IF 
               END IF 
 
                   DELETE source$
w050420061: 
                 END IF 
             ELSE 
               IF sch% = 0 THEN 
                 CALL Fehler("Dokument wurde nicht entschlÅsselt, da ein oder mehrere Fehler auftraten!","")
               ELSE 
               END IF 
             END IF 
           END IF 
         END IF 
 END SUB 
 


SUB TagestMA1a()
 terbyhand% = 1
 CALL TagestMA()
 terbyhand% = 0
 END SUB 

SUB TagestMA()
    SELECT FIRST FILE "supervis" INDEX codema.supervis
    SELECT KEY vcodema% FILE "supervis" INDEX codema.supervis
    TerMaName$ = "Mitarbeiter: " + Name.supervis
    TextTerGes$ = "Termine gesamt: " + LTRIM$ ( STR$ (AnzTermine.supervis,"999999"))
    TextTerUnerl$ = "unerledigte Termine: " + LTRIM$ ( STR$ (AnzTermineUnerl.supervis,"999999"))
    DIM dlg AS Dialog
    DIM control AS DialogControl
    opt% = 0
    Superbase.Dialogs.Add("Dialogname")
    SET dlg = Superbase.Dialogs.Dialogname
    dlg.Move(0,0,350,113)
    dlg.Caption = "Art der TerminÅbersicht"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(2,8,340,84)
    control.Caption = " WÑhlen Sie eine Option "
 
    SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
    control.Move(6,20,159,10)
    control.Caption = "aus den vorhandenen Terminen selektieren"
    control.Bind("opt%")
    control.ValueOn = 0
 
    SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
    control.Move(6,32,214,9)
    control.Caption = "Liste der Termine der automatischen Wiedervorlage anzeigen"
    control.Bind("opt%")
    control.ValueOn = 1
 
    SET control = dlg.Add("DialogOptionButton3","DialogOptionButton")
    control.Move(6,44,200,10)
    control.Caption = "Liste der Netzwerknachrichten des Mitarbeiters anzeigen"
    control.Bind("opt%")
    control.ValueOn = 2
 

    SET control = dlg.Add("DialogOptionButton4","DialogOptionButton")
    control.Move(6,63,300,10)
    control.Caption = "MS EXCEL Kunden-Geburtstagsliste HEUTE (und Wochenende wenn am Freitag generiert)"
    control.Bind("opt%")
    control.ValueOn = 3

    SET control = dlg.Add("DialogOptionButton5","DialogOptionButton")
    control.Move(6,73,300,10)
    control.Caption = "Bildschirm Kunden-Geburtstagsliste HEUTE (und Wochenende wenn am Freitag generiert)"
    control.Bind("opt%")
    control.ValueOn = 4
 


    REM SET control = dlg.Add("DialogFrame2","DialogFrame")
    REM control.Move(1,63,219,39)
    REM control.Caption = ""
 
    REM SET control = dlg.Add("DialogLabel1","DialogLabel")
    REM control.Move(5,71,204,10)
    REM control.CaptionBinding = "TerMaName$"
 
    REM SET control = dlg.Add("DialogLabel2","DialogLabel")
    REM control.Move(5,84,100,10)
    REM control.CaptionBinding = "TextTerGes$"
 
    REM SET control = dlg.Add("DialogLabel4","DialogLabel")
    REM control.Move(111,85,106,10)
    REM control.CaptionBinding = "TextTerUnerl$"
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(109,94,43,16)
    control.Default = 1
    control.Caption = "OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(155,94,42,16)
    control.Caption = "Abbruch"
    control.ReturnValue = 0

    DIALOG "Dialogname",req%
    REMOVE DIALOG "Dialogname"
    GOptGeb% = 0
    IF req% = 0 THEN END SUB 
    IF opt% = 0 THEN 
      CALL TagestMA1()
    END IF 
    IF opt% = 1 THEN 
      offVlLi% = 1
      offBMCh% = 1
      CALL CheckTermin()
      offVlLi% = 0
    END IF 
    IF opt% = 2 THEN 
      offVlLi% = 1
      offBMCh% = 1
      nomail% = 0
      CALL BMCheckMail()
      IF nomail% <> 0 THEN 
        CALL Fehler("Keine neuen Nachrichten vorhanden!","")
      END IF 
      nomail% = 0
      offBMCh% = 0
    END IF 
    IF opt% = 3 THEN 
      GGebList% = - 1
      GOptGeb% = 3
      GAdrDat$ = "ADRESSEN"
      CALL GEBLISTE()
      GOptGeb% = 0
    END IF 
    IF opt% = 4 THEN 
      GGebList% = - 1
      GAdrDat$ = "ADRESSEN"
      GOptGeb% = 4
      CALL GEBLISTE()
      GOptGeb% = 0
    END IF 
    offVlLi% = 0
    offBMCh% = 0
 END SUB 


SUB TagestMA1()
 ON ERROR GOTO ErrorHandler
 bez% = 1
 IF disabled%("AKQUISE") THEN END SUB 
 IF NOT AQFileOK%() THEN END SUB 
 IF title$ LIKE "*FACTURA*" OR title$ LIKE "*price*" THEN 
   CALL Fehler("Funktion wird in dieser Programm-Version nicht unterstÅtzt!","")
   END SUB 
 END IF 
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GDokDat$ + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\" + GTelDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GConDat$ + _fpw$)
 REM CALL DFile(2,"OFFICE\AKQTMP" + _fpw$)
 IF EXISTS (GMACodeDir$ + "AKQTMP.SBF") THEN 
   IF OPEN ("AKQTMP") THEN 
     REMOVE FROM FILE "AKQTMP"
     CLOSE FILE "AKQTMP"
   END IF 
   REM DELETE GMACodeDir$ + "AKQTMP.*"
 END IF 
 
 
 _continue% = 1
 bezug% = bez%
 FILE "Supervis"
 INDEX nachname.supervis
 SELECT FIRST FILE "Supervis" INDEX nachname.supervis
 DIM Agenturen$( RECCOUNT ("SUPERVIS") + 1)
 IF gasp% = - 1 AND workstation% > 0 THEN 
   a% = 0
 ELSE 
   Agenturen$(0) = "<alle Mitarbeiter>" + SPACE$ (80) + "000000"
   a% = 1
 END IF 
 IF gasp% <> - 1 OR workstation% = 0 THEN 
   WHILE NOT EOF ("Supervis")
     Agenturen$(a%) = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
     a% = a% + 1
     SELECT NEXT FILE "supervis"
   WEND 
 END IF 
 IF gasp% THEN 
   WHILE NOT EOF ("supervis")
    IF LTRIM$ (name.supervis) <> "" THEN 
     REM MALIST2$(b%) = name.supervis
     REM MALIST2%(b%) = codema.supervis
     b% = b% + 1
     REM CALL Fehler("","")
     IF GASP% THEN 
       wks% = Workstation%
       FOR ii% = 0 TO VisCount% - 1' Fall externes BÅro
         wks% = VisOff%(ii%)
         aa% = IsWksVisible%(wks%)
         na123$ = name.supervis
         REM CALL Fehler(na123$,"")
         IF aa% = - 1 AND Workstation.supervis = wks% THEN 
           sok% = - 1
           ii% = VisCount%
         ELSE 
           sok% = 0
         END IF 
       NEXT ii%
       joo% = - 1
       REM IF GMASuperCount% > 0 THEN 
         REM joo% = IsMASuper%(codema.supervis)
       REM END IF 
       IF sok% AND joo% THEN 
         Agenturen$(a%) = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
         REM MALIST%(a%) = codema.supervis
         a% = a% + 1
       END IF 
     ELSE 
       IF ag$ <> "j" THEN 
         ON ERROR GOTO w261020021
         IF ZugSperr.supervis <> "j" THEN 
           IF GMASuperCount% > 0 THEN 
             IF IsMASuper%(codema.supervis) THEN 
               Agenturen$(a%) = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
               a% = a% + 1
             END IF 
           ELSE 
             Agenturen$(a%) = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
             a% = a% + 1
           END IF 
         END IF 
       ELSE 
w261020021: 
         REM MALIST$(a%) = name.supervis
         REM MALIST%(a%) = codema.supervis
         IF GMASuperCount% > 0 THEN 
           IF IsMASuper%(codema.supervis) THEN 
             Agenturen$(a%) = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
             a% = a% + 1
           END IF 
         ELSE 
           Agenturen$(a%) = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
           a% = a% + 1
         END IF 
       END IF 
     END IF 
   END IF 
   SELECT NEXT FILE "supervis" INDEX nachname.supervis
  WEND 
 END IF 
 SELECT FIRST FILE "supervis"
 SELECT KEY vcodema% FILE "Supervis" INDEX codema.supervis
 auswahl$ = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
 FILE "Aktionen"
 INDEX Bezeichnung.Aktionen
 SELECT FIRST 
 DIM Aktionen$( RECCOUNT ("Aktionen") + 1)
 a% = 1
 WHILE NOT EOF ("Aktionen")
   Aktionen$(a%) = Bezeichnung.Aktionen + SPACE$ (80) + STR$ (codeak.Aktionen,"000000")
   a% = a% + 1
   SELECT NEXT FILE "Aktionen"
 WEND 
 Aktionen$(0) = "<alle Aktionen>" + SPACE$ (80) + "000000"
 LAuswahl$ = Aktionen$(0)
 opt1% = 2
 REM von$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 Tervon$ = (ReadINI$("FACTURA","Terminvon"))
 von$ = ""
 IF DateOK%(Tervon$) THEN 
   von$ = Tervon$
 END IF 
 bis$ = DATE$ ( TODAY ,"0d.mm.yyyy")
TMA260320001: 
 CREATE DIALOG "TLISTE",0,0,307,136,title$,"MS Sans Serif",8
 ADD DIALOG "TLISTE",4,0,0,306,114,0,""
 ADD DIALOG "TLISTE",5,40,11,162,9,0,"Bitte wÑhlen Sie die gewÅnschten Kategorien aus:"
 ADD DIALOG "TLISTE",9,9,14,20,21,2
 ADD DIALOG "TLISTE",4,40,22,97,61,0,"Terminart"
 ADD DIALOG "TLISTE",3,46,33,52,12,0,"alle Termine",1,opt1%
 ADD DIALOG "TLISTE",3,46,50,80,12,0,"alle offenen Termine",2,opt1%
 ADD DIALOG "TLISTE",3,46,67,87,12,0,"alle erledigten Termine",3,opt1%
 ADD DIALOG "TLISTE",4,138,22,304,61,0,"Bezug"
 ADD DIALOG "TLISTE",5,146,30,62,9,0,"Mitarbeiter:"
 ADD DIALOG "TLISTE",5,146,57,62,9,0,"Aktionen:"
 ADD DIALOG "TLISTE",8,146,40,146,88,259,2,Auswahl$,Agenturen$
 ADD DIALOG "TLISTE",8,146,66,146,88,259,2,LAuswahl$,Aktionen$

 ADD DIALOG "TLISTE",5,84,95,12,8,0,"von"
 ADD DIALOG "TLISTE",6,99,94,45,11,0,0,von$,10
 ADD DIALOG "TLISTE",5,152,95,12,8,0,"bis"
 ADD DIALOG "TLISTE",6,166,94,45,11,0,0,bis$,10
 ADD DIALOG "TLISTE",1,99,117,55,15,1,"&Weiter",1,1
 ADD DIALOG "TLISTE",1,155,117,55,15,0,"&Abbrechen",0,0
 DIALOG "TLISTE",req%
 REMOVE DIALOG "TLISTE"

 IF req% = 1 THEN 
   FILE "Adressen"
   INDEX codeku.adressen
   FILE GAkquiDat$
   CALL WriteINI("FACTURA","Terminvon",von$)
   IF RECCOUNT (GAkquiDat$) < 23000 THEN 
     REDIM Termine$( RECCOUNT (GAkquiDat$),1)
     REDIM Termine$( RECCOUNT (GAkquiDat$))
     t% = RECCOUNT (GAkquiDat$)
   ELSE 
     REDIM Termine$(23000,1)
     REDIM Termine$(23000)
     t% = 23000
   END IF 
   REM FOR i% = 0 TO t% - 1
     REM Termine$(i%) = ""
   REM NEXT i%
   vonold$ = LTRIM$ (von$)
   IF von$ = "" THEN von$ = "01.01.1901"
   IF bis$ = "" THEN bis$ = "01.01.2200"
   IF DateOK%(von$) THEN 
     IF DateOK%(bis$) THEN 
     ELSE 
       GOTO TMA260320001
     END IF 
   ELSE 
     GOTO TMA260320001
   END IF 
   IF DAYS (von$) > DAYS (bis$) THEN 
     von1$ = bis$
     bis$ = von$
     von$ = von1$
   END IF 
   von% = DAYS (von$)
   von$ = DATE$ (von%,"0d.mm.yyyy")
   bis% = DAYS (bis$)
   bis$ = DATE$ (bis%,"0d.mm.yyyy")
   REM Feststellen was los ist
   ma% = VAL ( RIGHT$ (Auswahl$,6))
   ak% = VAL ( RIGHT$ (Lauswahl$,6))
   IF ma% = 0 AND ak% = 0 THEN 
     feld$ = "Termin"
     sel$ = ""
     ma$ = "alle Mitarbeiter"
     ak$ = "alle Aktionen"
   END IF 
   IF ma% > 0 AND ak% = 0 THEN 
     feld$ = "QuickMATer"
     sel$ = STR$ (ma%,"000000")
     lenge% = 6
     sel1$ = ""
     IF opt1% = 2 THEN 
       REM nichterledigte
       IF vonold$ <> "" THEN 
         sel1$ = STR$ (ma%,"000000") + DATE$ (von%,"yyyymm0d")
         lenge% = 6
       END IF 
     END IF 
     IF opt1% = 3 THEN 
       REM erledigte
       IF vonold$ <> "" THEN 
         sel1$ = STR$ (ma%,"000000") + DATE$ (von%,"yyyymm0d")
         lenge% = 6
       END IF 
     END IF 
     SELECT KEY ma% FILE "supervis" INDEX codema.supervis
     ma$ = name.supervis
     ak$ = "alle Aktionen"
   END IF 
   IF ma% = 0 AND ak% > 0 THEN 
     feld$ = "QuickAKTer"
     sel$ = STR$ (ak%,"000000")
     lenge% = 6
     sel1$ = ""
     IF opt1% = 2 THEN 
       REM nichterledigte
       IF vonold$ <> "" THEN 
         sel1$ = STR$ (ak%,"000000") + DATE$ (von%,"yyyymm0d")
       END IF 
     END IF 
     IF opt1% = 3 THEN 
       REM erledigte
       IF vonold$ <> "" THEN 
         sel1$ = STR$ (ak%,"000000") + DATE$ (von%,"yyyymm0d")
       END IF 
     END IF 
     ma$ = "alle Mitarbeiter"
     SELECT KEY ak% FILE "Aktionen" INDEX codeak.aktionen
     ak$ = Bezeichnung.aktionen
   END IF 
   IF ma% > 0 AND ak% > 0 THEN 
     feld$ = "QuickAKMATer"
     sel$ = STR$ (ak%,"000000") + STR$ (ma%,"000000")
     lenge% = 12
     sel1$ = ""
     IF opt1% = 2 THEN 
       REM nichterledigte
       IF vonold$ <> "" THEN 
         sel1$ = STR$ (ak%,"000000") + STR$ (ma%,"000000") + DATE$ (von%,"yyyymm0d")
       END IF 
     END IF 
     IF opt1% = 3 THEN 
       REM erledigte
       IF vonold$ <> "" THEN 
         sel1$ = STR$ (ak%,"000000") + STR$ (ma%,"000000") + DATE$ (von%,"yyyymm0d")
       END IF 
     END IF 
     SELECT KEY ak% FILE "Aktionen" INDEX codeak.aktionen
     ak$ = Bezeichnung.aktionen
     SELECT KEY ma% FILE "supervis" INDEX codema.supervis
     ma$ = name.supervis
   END IF 
   IF opt1% = 1 THEN tart$ = "alle Termine"
   IF opt1% = 2 THEN tart$ = "nichterledigte Termine"
   IF opt1% = 3 THEN tart$ = "erledigte Termine"
   FILE GAkquiDat$
   INDEX feld$$
   REM feld$ = feld$ + ".GAkquiDat$"
   SELECT FIRST 
   
   
   
    DIM dlg AS Dialog
    DIM control AS DialogControl
    DIM Auswahl$(1)


A060420001: 
   tfound% = 0
   IF sel$ = "" THEN 
     FILE GAkquiDat$
     SELECT FIRST FILE GAkquiDat$
   IF GASP% <> - 1 OR workstation% = 0 THEN 
     WHILE NOT EOF (GAkquiDat$)
       ssok% = - 1
       IF GMASuperCount% > 0 THEN 
         codeku% = codeku.akquise
         SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
         ssok% = IsMASuper%(codema.adressen)
       END IF 
       IF opt1% = 1 AND ssok% = - 1 THEN 
         IF Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$) THEN 
           t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
           IF GCODIE% = - 1 THEN 
             IF GCodieRuf1% = 0 THEN CALL SearchInitAq1("tvorlage")
           END IF 
           IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
           tfound% = tfound% + 1
         END IF 
       END IF 
       IF opt1% = 2 AND ssok% = - 1 THEN 
         IF UCASE$ (erledigt_Termin.GAkquiDat$) = "N" THEN 
           IF Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$) THEN 
             t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
             IF GCODIE% = - 1 THEN 
               IF GCodieRuf1% = 0 THEN CALL SearchInitAq1("tvorlage")
             END IF 
             IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
             tfound% = tfound% + 1
           END IF 
         END IF 
       END IF 
       IF opt1% = 3 AND ssok% = - 1 THEN 
         IF UCASE$ (erledigt_Termin.GAkquiDat$) = "J" THEN 
           IF Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$) THEN 
             t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
             IF GCODIE% = - 1 THEN 
               IF GCodieRuf1% = 0 THEN CALL SearchInitAq1("tvorlage")
             END IF 
             IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
             tfound% = tfound% + 1
           END IF 
         END IF 
       END IF 
       SELECT NEXT FILE GAkquiDat$ INDEX feld$$
     WEND 
    ELSE 
     WHILE NOT EOF (GAkquiDat$)
       ssok% = - 1
       IF GMASuperCount% > 0 THEN 
         codeku% = codeku.akquise
         SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
         ssok% = IsMASuper%(codema.adressen)
       END IF 
       IF opt1% = 1 AND ssok% = - 1 THEN 
         IF Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$) AND IsWksVisible%(Workstation.GAkquiDat$) = - 1 THEN 
           t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
           IF GCODIE% = - 1 THEN 
             IF GCodieRuf1% = 0 THEN CALL SearchInitAq1("tvorlage")
           END IF 
           IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
           tfound% = tfound% + 1
         END IF 
       END IF 
       IF opt1% = 2 AND ssok% = - 1 THEN 
         IF UCASE$ (erledigt_Termin.GAkquiDat$) = "N" AND IsWksVisible%(Workstation.GAkquiDat$) = - 1 THEN 
           IF Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$) THEN 
             t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
             IF GCODIE% = - 1 THEN 
               IF GCodieRuf1% = 0 THEN CALL SearchInitAq1("tvorlage")
             END IF 
             IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
             tfound% = tfound% + 1
           END IF 
         END IF 
       END IF 
       IF opt1% = 3 AND ssok% = - 1 THEN 
         IF UCASE$ (erledigt_Termin.GAkquiDat$) = "J" AND IsWksVisible%(Workstation.GAkquiDat$) = - 1 THEN 
           IF Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$) THEN 
             t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
             IF GCODIE% = - 1 THEN 
               IF GCodieRuf1% = 0 THEN CALL SearchInitAq1("tvorlage")
             END IF 
             IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
             tfound% = tfound% + 1
           END IF 
         END IF 
       END IF 
       SELECT NEXT FILE GAkquiDat$ INDEX feld$$
     WEND 
    END IF 
   END IF 


   IF sel$ <> "" THEN 
     FILE GAkquiDat$
     SELECT FIRST INDEX feld$$
     IF sel1$ <> "" THEN 
       SELECT KEY sel1$ FILE GAkquiDat$ INDEX feld$$
     ELSE 
       SELECT KEY sel$ FILE GAkquiDat$ INDEX feld$$
     END IF 
     test1$ = LEFT$ (feld$$,lenge%)
    IF gasp% <> - 1 OR workstation% = 0 THEN 
     WHILE NOT EOF (GAkquiDat$) AND LEFT$ (feld$$,lenge%) = sel$
       ssok% = - 1
       IF GMASuperCount% > 0 THEN 
         codeku% = codeku.akquise
         SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
         ssok% = IsMASuper%(codema.adressen)
       END IF 
       IF opt1% = 1 AND ssok% = - 1 THEN 
         IF (Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$)) OR Termin.GAkquiDat$ = 0 THEN 
           t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
           IF GCODIE% = - 1 THEN 
             IF GCodieRuf1% = 0 THEN CALL SearchInitAq1("tvorlage")
           END IF 
           IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
           tfound% = tfound% + 1
         END IF 
       END IF 
       IF opt1% = 2 AND ssok% = - 1 THEN 
         IF UCASE$ (erledigt_Termin.GAkquiDat$) = "N" THEN 
           IF (Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$)) OR Termin.GAkquiDat$ = 0 THEN 
             t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
             IF GCODIE% = - 1 THEN 
               IF GCodieRuf1% = 0 THEN CALL SearchInitAq1("tvorlage")
             END IF 
             IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
             tfound% = tfound% + 1
           END IF 
         END IF 
       END IF 
       IF opt1% = 3 AND ssok% = - 1 THEN 
         IF UCASE$ (erledigt_Termin.GAkquiDat$) = "J" THEN 
           IF (Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$)) OR Termin.GAkquiDat$ = 0 THEN 
             t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
             IF GCODIE% = - 1 THEN 
               IF GCodieRuf1% = 0 THEN CALL SearchInitAq1("tvorlage")
             END IF 
             IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
             tfound% = tfound% + 1
           END IF 
         END IF 
       END IF 
       SELECT NEXT FILE GAkquiDat$ INDEX feld$$
     WEND 
     Termine$(tfound%) = ""
    ELSE 
     WHILE NOT EOF (GAkquiDat$) AND LEFT$ (feld$$,lenge%) = sel$
       ssok% = - 1
       IF GMASuperCount% > 0 THEN 
         codeku% = codeku.akquise
         SELECT KEY codeku% FILE "Adressen" INDEX codeku.adressen
         ssok% = IsMASuper%(codema.adressen)
       END IF 
       IF opt1% = 1 AND ssok% = - 1 THEN 
         IF (Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$)) OR Termin.GAkquiDat$ = 0 AND IsWksVisible%(Workstation.GAkquiDat$) = - 1 THEN 
           t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
           IF GCODIE% = - 1 THEN 
             IF GCodieRuf1% = 0 THEN CALL SearchInitAq1("tvorlage")
           END IF 
           IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
           tfound% = tfound% + 1
         END IF 
       END IF 
       IF opt1% = 2 AND ssok% = - 1 THEN 
         IF UCASE$ (erledigt_Termin.GAkquiDat$) = "N" AND IsWksVisible%(Workstation.GAkquiDat$) = - 1 THEN 
           IF (Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$)) OR Termin.GAkquiDat$ = 0 THEN 
             t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
             IF GCODIE% = - 1 THEN 
               IF GCodieRuf1% = 0 THEN CALL SearchInitAq1("tvorlage")
             END IF 
             IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
             tfound% = tfound% + 1
           END IF 
         END IF 
       END IF 
       IF opt1% = 3 AND ssok% = - 1 THEN 
         IF UCASE$ (erledigt_Termin.GAkquiDat$) = "J" AND IsWksVisible%(Workstation.GAkquiDat$) = - 1 THEN 
           IF (Termin.GAkquiDat$ >= DAYS (von$) AND Termin.GAkquiDat$ <= DAYS (bis$)) OR Termin.GAkquiDat$ = 0 THEN 
             t$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + ";" + erledigt_Termin.GAkquiDat$ + " |" + Bearbeiter.GAkquiDat$ + " |"
 Termine$(tfound%) = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy") + "; " + t$ + "; " + LEFT$ ( TRIM$ (nachname.GAkquiDat$)) + "/" + LEFT$ ( TRIM$ (notiz.GAkquiDat$),100) + SPACE$ (160) + STR$ (CodeAQ.GAkquiDat$,"000000")
             IF GCODIE% = - 1 THEN 
               IF GCodieRuf1% = 0 THEN CALL SearchInitAq1("tvorlage")
             END IF 
             IF GCODIE% = - 1 THEN CALL SearchVorbAq1(GAkquiDat$)
             tfound% = tfound% + 1
           END IF 
         END IF 
       END IF 
       SELECT NEXT FILE GAkquiDat$ INDEX feld$$
     WEND 
     Termine$(tfound%) = ""
    END IF 
   END IF 
   REM CALL Fehler("","")
   REDIM Auswahl$(tfound%)
   aaaak% = 0
   IF tfound% <> 0 THEN 
     prompt$ = Termine$(0)
TLi260320003:  
     IF GCODIE% = - 1 THEN 
       c$ = "aa"
       REM CALL Fehler("","")
       IF aaaak% = 0 THEN 
         req3% = CALL ("_SearchShow",c$)
       ELSE 
         req3% = CALL ("_SearchReShow",c$)
       END IF 
       REM CALL Fehler( STR$ (req%),"")
       IF req3% = 3 THEN 
         req% = 2
       ELSE 
         IF VAL (c$) <> 0 THEN 
           req% = 1
           _cuaq% = VAL (c$)
           REM MENU 4,2,1,"aus Suchliste &wÑhlen,F7","DokKurzSuche","Auflistung aller vorher gesuchten Dokumente"
           ok% = 0
           SET STATUS "Termine gefunden..."
         ELSE 
           IF req3% = 2 THEN 
             req% = 3
           ELSE 
             req% = 0
           END IF 
         END IF 
       END IF 
       aaaak% = aaaak% + 1
     ELSE 
       Superbase.Dialogs.Add("TERLISTE")
       SET dlg = Superbase.Dialogs.TERLISTE
       dlg.Move(0,0,440,297)
       dlg.Caption = "TerminÅbersicht"
       dlg.FontName = "MS Sans Serif"
       dlg.FontSize = 8
 
       SET control = dlg.Add("DialogListBox1","DialogListBox")
       control.Move(4,8,429,256)
       control.MultiSelect = 1
       control.ScrollBars = 2
       control.Bind("Termine$","Auswahl$","prompt$")
 
       SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
       control.Move(10,273,124,16)
       control.Default = 1
       control.Caption = "&zum einzelnen Termin springen"
       control.ReturnValue = 1
 
       SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
       control.Move(140,273,56,16)
       control.Caption = "&Drucken"
       control.ReturnValue = 2
 
       SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
       control.Move(201,273,56,16)
       control.Caption = "Dat&ei"
       control.ReturnValue = 3
 
       SET control = dlg.Add("DialogCommandButton6","DialogCommandButton")
       control.Move(261,273,56,16)
       control.Caption = "MS EXCEL"
       control.ReturnValue = 5

       SET control = dlg.Add("DialogCommandButton5","DialogCommandButton")
       control.Move(321,273,56,16)
       control.Caption = "Er&ledigen"
       control.ReturnValue = 4
 
       SET control = dlg.Add("DialogCommandButton4","DialogCommandButton")
       control.Move(381,273,56,16)
       control.Caption = "&Abbruch"
       control.ReturnValue = 0
       control.Cancel = 1
       DIALOG "TERLISTE",req%
       REMOVE DIALOG ALL 
     END IF 
     IF req% = 0 THEN 
       _formend% = 0
       GOTO e060420001
     END IF 
     IF req% = 1 THEN 
       ok% = 1
       IF GCODIE% <> - 1 THEN 
         _cuaq% = VAL ( RIGHT$ (Auswahl$(0),6))
       END IF 
       prompt$ = Auswahl$(0)
       lastTermin% = _cuaq%
       SELECT KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
       knr% = codeku.GAkquiDat$
       _vcodema% = codema.GAkquiDat$
       CALL TerLiSpez(_cuaq%)
       _formend% = 0
       GOTO TLi260320003
     END IF 
     REM EXCEL-Datei erzeugen
     IF req% = 5 THEN 
       ON ERROR GOTO ErrorHandler
       IF OPEN ("AKQTMP1") THEN CLOSE FILE "AKQTMP1"
       IF EXISTS (GMACodeDir$ + "AKQTMP1.sbf") THEN 
         DELETE GMACodeDir$ + "AKQTMP1.*"
       END IF 
       COPY _netpath$ + "\OFFICE\AKQTMP1.*" TO GMACodeDir$
       OPEN FILE SHARE ,0GMACodeDir$ + "AKQTMP1;paris"
       FOR i% = 0 TO tfound% - 1
         SET STATUS STR$ (i%,"9999999")
         codeaq% = VAL ( RIGHT$ (Termine$(i%),6))
         SELECT KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         SELECT FIRST FILE GAdrDat$ INDEX codeku.GAdrDat$
         IF codeku.GAkquiDat$ > 0 AND EXISTS (codeku.GAkquiDat$,codeku.GADRDat$) THEN 
           SELECT KEY codeku.GAkquiDat$ FILE GAdrDat$ INDEX codeku.GAdrDat$
           BLANK FILE "AKQTMP1"
           ber.AKQTMP1 = LEFT$ (bearbeiter.GAkquiDat$,3)
           REM datum.AKQTMP1 = datum.GAkquiDat$
           REM notiz.AKQTMP1 = notiz.GAkquiDat$
           IF termin.GAkquiDat$ > 0 THEN termin.AKQTMP1 = termin.GAkquiDat$
           IF Uhrzeit.GAkquiDat$ > 0 THEN Uhrzeit.AKQTMP1 = Uhrzeit.GAkquiDat$
           Kunde.AKQTMP1 = LTRIM$ (nachname.GAkquiDat$)
           ergebnis.AKQTMP1 = ergebnis.GAkquiDat$
           REM tnr.akqtmp1 = terminnr.GAkquiDat$
           AkquiseTag.akqtmp1 = AkquiseTag.GAkquiDat$
           Ft1.akqtmp1 = Folgetermin1.GAkquiDat$
           IF Folgezeit1.GAkquiDat$ <> 0 THEN zeit1.akqtmp1 = Folgezeit1.GAkquiDat$
           Ft2.akqtmp1 = Folgetermin2.GAkquiDat$
           IF Folgezeit2.GAkquiDat$ <> 0 THEN zeit2.akqtmp1 = Folgezeit2.GAkquiDat$
           IF ErDatum.GAkquiDat$ > 0 THEN 
             VorlageTermin.akqtmp1 = ErDatum.GAkquiDat$
             IF ErZeit.GAkquiDat$ <> 0 THEN Vorlagezeit.akqtmp1 = ErZeit.GAkquiDat$
           END IF 
           ort.akqtmp1 = ort.GAkquiDat$
           az.akqtmp1 = az.GAkquiDat$
           bba.akqtmp1 = bba.GAkquiDat$
           sonstiges.akqtmp1 = sonstiges.GAkquiDat$
           STORE FILE "AKQTMP1"
         END IF 
       NEXT i%
       REM CALL Fehler("","")
       FILE "AKQTMP1"
       INDEX Termin.AKQTMP1
       IF RECCOUNT ("AKQTMP1") > 0 THEN 
         SELECT FIRST LOCK FILE "AKQTMP1"
       ELSE 
         SELECT LAST FILE "AKQTMP1"
       END IF 
       k% = 0
       WHILE NOT EOF ("AKQTMP1")
         k% = k% + 1
         nr.akqtmp1 = k%
         STORE FILE "AKQTMP1"
         SELECT NEXT LOCK 
       WEND 
       REM OPEN FIELDS Nr,AkquiseTag,Ber,Kunde,Termin,Uhrzeit,FT1,Zeit1,FT2,Zeit2,Vorlagedatum,Vorlagezeit,Ergebnis
       IF GRiese$ LIKE "TRUE" THEN 
         OPEN FIELDS Nr,AkquiseTag,Ber,Kunde,Ort,AZ,BBA,Sonstiges,Termin,Uhrzeit,FT1,Zeit1,FT2,Zeit2,VorlageTermin,Ergebnis
       ELSE 
         OPEN FIELDS Nr,AkquiseTag,Ber,Kunde,Ort,Termin,Uhrzeit,FT1,Zeit1,FT2,Zeit2,VorlageTermin,VorlageZeit,Ergebnis
       END IF 
       SELECT FIRST FILE "AKQTMP1"
       IF EXISTS (GMACodeDir$ + "AKQTMP1.xls") THEN 
         DELETE GMACodeDir$ + "AKQTMP1.xls"
       END IF 
       DIRECTORY GMACodeDir$:REM     
       ON ERROR GOTO TagestErrExc01
       Superbase.Converters.SBF.SourceFormat = "Superbase"
       Superbase.Converters.SBF.SourceFile = "AKQTMP1"
       Superbase.Converters.SBF.Descending = 0
       Superbase.Converters.SBF.Merge = 0
       Superbase.Converters.SBF.LogErrors = 0
       Superbase.Converters.SBF.MultiResponse = 0
       Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
       Superbase.Converters.XLS.DestFile = GMACodeDir$ + "AKQTMP1.XLS"
       Superbase.Converters.XLS.StartRow = 2
       Superbase.Converters.XLS.StartCol = 1
       Superbase.Converters.XLS.EndRow = - 1
       Superbase.Converters.XLS.EndCol = - 1
       Superbase.Converters.XLS.UseLabels = - 1
       Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
       WAIT FOR 3
       CALL Fehler("MS Excel-Termindatei wurde erstellt!",GMACodeDir$ + "AKQTMP1.XLS")
       IF EXISTS (GMACodeDir$ + "AKQTMP1.xls") THEN 
         a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "AKQTMP1.XLS","","",1)
       END IF 
       GOTO TagestErrExc02
TagestErrExc01: 
       ON ERROR GOTO ErrorHandler
       CALL Fehler("Es ist ein Fehler aufgetreten!","Bitte prÅfen Sie, ob die Datei " + GMACodeDir$ + "AKQTMP1.XLS in MS EXCEL geîffnet ist, ggf. bitte schlie·en und nochmal probieren!")
TagestErrExc02: 
       cdir$ = DIRECTORY 
     END IF 
     IF req% = 2 THEN 
       REM Drucken
       MOUSE OFF 
       IF OPEN ("AKQTMP") THEN 
         REM CLOSE FILE "AKQTMP"
         REMOVE FROM FILE "AKQTMP"
       ELSE 
         CALL DFile(2,"OFFICE\" + "AKQTMP" + _fpw$)
         REMOVE FROM FILE "AKQTMP"
       END IF 
       FOR i% = 0 TO tfound% - 1
         SET STATUS STR$ (i%,"9999999")
         codeaq% = VAL ( RIGHT$ (Termine$(i%),6))
         SELECT KEY codeaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         BLANK FILE "AKQTMP"
         codeku.AKQTMP = codeku.GAkquiDat$
         codeak.akqtmp = codeak.GAkquiDat$
         bearbeiter.AKQTMP = bearbeiter.GAkquiDat$
         codema.AKQTMP = codema.GAkquiDat$
         datum.AKQTMP = datum.GAkquiDat$
         notiz.AKQTMP = notiz.GAkquiDat$
         termin.AKQTMP = termin.GAkquiDat$
         erledigt_termin.AKQTMP = erledigt_termin.GAkquiDat$
         codeaq.AKQTMP = codeaq.GAkquiDat$
         Uhrzeit.AKQTMP = Uhrzeit.GAkquiDat$
         nachname.AKQTMP = nachname.GAkquiDat$
         ergebnis.AKQTMP = ergebnis.GAkquiDat$
         projekt.AKQTMP = projekt.GAkquiDat$
         codepr.AKQTMP = codepr.GAkquiDat$
         dauer.AKQTMP = dauer.GAkquiDat$
         DME.AKQTMP = dme.GAkquiDat$
         terminnr.akqtmp = terminnr.GAkquiDat$
         STORE FILE "AKQTMP"
       NEXT i%
       cdir$ = DIRECTORY 
       DIRECTORY _netpath$ + "OFFICE"
       CALL ORep("TERMINE2")
       HEADING 
       SET REPORT PAGE "H_PAGE"
       OUTPUT REPORT PAGE 
       END HEADING 
       AFTER SELECT 
       SET REPORT PAGE "F_SELECT"
       OUTPUT REPORT PAGE 
       END SELECT 
       SET QUERY ON 
       SET QUERY LOCK ON 
       Ueberschr$ = "TerminÅbersicht Åber " + tart$ + " von: " + von$ + " bis: " + bis$ + " fÅr Mitarbeiter: " + ma$ + " und Aktion: " + ak$
       ON ERROR GOTO TD010420001
       SELECT ;
       WHERE codeak.AKQTMP = codeak.aktionen AND CodeKU.AKQTMP = CodeKU.GAdrDat$
       ORDER Termin.AKQTMP,Uhrzeit.AKQTMP
       TO ASK 
       END SELECT 
TD010420001: 
       ON ERROR GOTO ErrorHandler
       DIRECTORY cdir$
       MOUSE ON 
       GOTO TLi260320003
     END IF 

     IF req% = 3 THEN 
       CALL TagestExp(Termine$(),tfound%)
       GOTO TLi260320003
     END IF 
     REM markierte erledigen 04052001
     IF req% = 4 THEN 
       i% = 0
       MOUSE OFF 
       WHILE Auswahl$(i%) <> ""
         _cuaq% = VAL ( RIGHT$ (Auswahl$(i%),6))
         SELECT KEY _cuaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
         GErledTermin$ = erledigt_Termin.GAkquiDat$
         erledigt_Termin.GAkquiDat$ = "j"
         CALL QuickStore(GAkquiDat$)
         MOUSE OFF 
         i% = i% + 1
       WEND 
       MOUSE ON 
       REDIM Termine$(tfound%,1)
       REDIM Termine$(tfound%)
       REM FOR a% = 0 TO tfound% - 1
         REM Termine$(a%) = ""
       REM NEXT a%
       CALL Fehler("Termin(e) wurden als erledigt gekennzeichnet","")
       GOTO A060420001
     END IF 
   ELSE 
     CALL Fehler("Es wurden keine Termine gefunden, die den Auswahlkriterien entsprachen!","")
   END IF 
 END IF 
e060420001: 
 MOUSE ON 
 IF GCODieRuf1% < - 1 THEN 
   ret% = CALL ("_SearchClose"):REM CALL Fehler( STR$ (GCodieruf1%),"")
   GCODieRuf1% = 0
 END IF 
 END SUB 

SUB TagestExp(Termine$(),tfound%)
 bez% = 1
   IF RECCOUNT (GAkquiDat$) < 23000 THEN 
     DIM Termine1$( RECCOUNT (GAkquiDat$))
   ELSE 
     DIM Termine1$(23000)
   END IF 
   tfound1% = 0
 IF disabled%("AKQUISE") THEN END SUB 
 IF NOT AQFileOK%() THEN END SUB 
 IF title$ LIKE "*FACTURA*" OR title$ LIKE "*price*" THEN 
   CALL Fehler("Funktion wird in dieser Programm-Version nicht unterstÅtzt!","")
   END SUB 
 END IF 
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GDokDat$ + _fpw$)
 REM CALL DFile(2,"OFFICE\dokgrup" + _fpw$)
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\" + GTelDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GConDat$ + _fpw$)
 _continue% = 1
 bezug% = bez%
 SET STATUS "Erzeuge Tagestermindatei fÅr den aktuellen Mitarbeiter"
 MOUSE OFF 
  
   CALL Server("LISTBOXINIT","TagesÅbersicht Mitarbeiter")
   cuaqtmp% = cuaq%
   MOUSE OFF 
   datum$ = TODAY 
   bezug% = 1
   IF bezug% = 1 THEN 
     tfound1% = 0
     INDEX QuickCodeMAZ.GAkquiDat$
     scode$ = DATE$ ( DAYS (datum$),"0dmmyyyy") + STR$ (_vcodema%,"000000")
     SELECT FIRST 
     SELECT KEY scode$
     REM CALL Fehler("Test","")
     IF EXISTS (GMACodeDir$ + "termtmp.ini") THEN DELETE GMACodeDir$ + "termtmp.ini"
     OPEN GMACodeDir$ + "termtmp.ini" FOR OUTPUT 
     ? FN ansi("Termine fÅr den Mitarbeiter ") + FN ansi(Vorname.supervis) + " " + FN ansi(nachname.supervis) + FN ansi(" fÅr den ") + DATE$ ( DAYS (datum$),"0d.mm.yyyy")
     ? " "
     ? "Uhrzeit/Dauer"
     ? "-----------------------------------------------------------------------------------------------------------------------------------------------------------------------"
     FOR i% = 0 TO tfound%
       _cuaq% = VAL ( RIGHT$ (Termine$(i%),6))
      SELECT KEY _cuaq% FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
     codeku% = codeku.GAkquiDat$
     SELECT FIRST FILE GAdrDat$ INDEX codeku.GAdrDat$
     SELECT KEY codeku% FILE GAdrDat$ INDEX codeku.GAdrDat$
     IF ergebnis.GAkquiDat$ = "" THEN 
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + TRIM$ (nachname.GAdrDat$) + "," + TRIM$ (Vorname.GAdrDat$) + ", " + notiz.GAkquiDat$
     ELSE 
       ab$ = CHR$ (13) + CHR$ (10) + "NOTIZ: " + notiz.GAkquiDat$ + CHR$ (13) + CHR$ (10) + "ERGEBNIS: " + ergebnis.GAkquiDat$ + CHR$ (13) + CHR$ (10)
       entry$ = TIME$ (Uhrzeit.GAkquiDat$,"hh:mm") + "/" + STR$ (Dauer.GAkquiDat$,"99") + " [" + UCASE$ (erledigt_termin.GAkquiDat$) + "]: " + TRIM$ (nachname.GAdrDat$) + "," + TRIM$ (Vorname.GAdrDat$) + ab$
     END IF 
     SET STATUS LEFT$ (entry$,50)
       ? FN ansi(entry$)
       Termine1$(tfound%) = entry$
       tfound1% = tfound1% + 1
       REM CALL Server("LISTBOXADD",entry$)
       REM tfound% = tfound% + 1
     NEXT i%
     ? " "
     ? " "
     ? FN ansi("Ende der TerminÅbersicht")
  
     CLOSE OUTPUT 
     Termine$(tfound%) = ""
     caption$ = "Termine auf den Mitarbeiter bezogen"
   END IF 

     ww% = 1
     i% = 0
     MOUSE OFF 
     WHILE NOT EXISTS (GMACodeDir$ + "termtmp.ini") AND i% < 9990000
       i% = i% + 1
       IF i% = 10000 THEN 
         REQUEST "Die zu erstellende Datei " + GMACodeDir$ + "termtmp.ini wurde nicht gefunden!","Soll der Versuch Sie zu îffnen abgebrochen werden?",130,req%
         IF req% = 1 THEN 
           i% = 9991000
           ww% = 0
         END IF 
       END IF 
     WEND 
     MOUSE ON 
     IF EXISTS (GMACodeDir$ + "termtmp.ini") AND ww% > 0 THEN CALL "notepad.exe " + GMACodeDir$ + "termtmp.ini"
   ELSE 
     SET STATUS "Bereit"
     CALL Fehler("Es wurden keine Tagstermine fÅr den aktuellen Mitarbeiter gefunden !","")
   END IF 
  
ttend230498: 
 SET STATUS ""
 END SUB 
 
 


SUB AdrGlobalSuch()
 
 
    DIM dlg AS Dialog
    DIM control AS DialogControl
    
    
AnfSuAdr180998:   
   adrglob% = 0
    Superbase.Dialogs.Add("ADRCON1")
    SET dlg = Superbase.Dialogs.ADRCON1
    dlg.Move(0,0,360,242)
    dlg.Caption = "Projektsuche"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(0,0,360,221)
    control.Caption = ""
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(2,11,240,11)
    control.Caption = "Tragen Sie hier die einzelnen Suchbegriffe in die zugehîrigen Felder ein!"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(2,23,60,10)
    control.Caption = "Kundennummer"
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(77,23,136,10)
    control.ScrollEnable = 2
    control.MaxLength = 20
    control.TextBinding = "Projektnummer$"
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(2,35,60,11)
    control.Caption = "Nachname/FIRMA"
 
    SET control = dlg.Add("DialogTextBox2","DialogTextBox")
    control.Move(77,35,136,11)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "name1$"
 
    SET control = dlg.Add("DialogTextBox3","DialogTextBox")
    control.Move(77,46,136,11)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "name3$"
 
    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(2,47,60,10)
    control.Caption = "Vorname/ZUSATZ"
 
    SET control = dlg.Add("DialogLabel5","DialogLabel")
    control.Move(2,59,60,11)
    control.Caption = "Geburtsname/z.H."
 
    SET control = dlg.Add("DialogTextBox4","DialogTextBox")
    control.Move(77,59,136,11)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "name2$"
 
    SET control = dlg.Add("DialogLabel6","DialogLabel")
    control.Move(2,71,50,10)
    control.Caption = "Stra·e"
 
    SET control = dlg.Add("DialogTextBox5","DialogTextBox")
    control.Move(77,71,136,10)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "Strasse$"
 
    SET control = dlg.Add("DialogTextBox6","DialogTextBox")
    control.Move(77,83,136,11)
    control.ScrollEnable = 2
    control.MaxLength = 8
    control.TextBinding = "PLZ$"
 
    SET control = dlg.Add("DialogLabel7","DialogLabel")
    control.Move(2,84,50,11)
    control.Caption = "PLZ"
 
    SET control = dlg.Add("DialogTextBox7","DialogTextBox")
    control.Move(77,95,136,10)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "Ort$"
 
    SET control = dlg.Add("DialogLabel8","DialogLabel")
    control.Move(2,97,50,11)
    control.Caption = "Ort"
 
    SET control = dlg.Add("DialogTextBox8","DialogTextBox")
    control.Move(77,107,136,11)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "Land$"
 
    SET control = dlg.Add("DialogLabel9","DialogLabel")
    control.Move(2,108,48,11)
    control.Caption = "Land"
 
    SET control = dlg.Add("DialogLabel10","DialogLabel")
    control.Move(2,119,48,10)
    control.Caption = "Stadtteil"
 
    SET control = dlg.Add("DialogTextBox9","DialogTextBox")
    control.Move(77,119,136,10)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "Stadtteil$"
 
    SET control = dlg.Add("DialogLabel11","DialogLabel")
    control.Move(2,132,59,11)
    control.Caption = "Kunde seit von"
 
    SET control = dlg.Add("DialogTextBox10","DialogTextBox")
    control.Move(77,132,40,10)
    control.MaxLength = 10
    control.TextBinding = "Projektstart$"
 
    SET control = dlg.Add("DialogTextBox11","DialogTextBox")
    control.Move(146,132,40,11)
    control.MaxLength = 10
    control.TextBinding = "Projektstart2$"
 
    SET control = dlg.Add("DialogLabel12","DialogLabel")
    control.Move(126,134,20,11)
    control.Caption = "bis"
 
    SET control = dlg.Add("DialogLabel13","DialogLabel")
    control.Move(2,147,59,11)
    control.Caption = "Notiz"
 
    SET control = dlg.Add("DialogTextBox12","DialogTextBox")
    control.Move(77,147,57,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Notiz1$"
 
    SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
    control.Move(137,147,47,11)
    control.Caption = "Und/Oder"
    control.Bind("noder0%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogTextBox15","DialogTextBox")
    control.Move(186,147,58,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Notiz2$"
 
    SET control = dlg.Add("DialogCheckBox2","DialogCheckBox")
    control.Move(250,147,46,11)
    control.Caption = "Und/Oder"
    control.Bind("noder1%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogTextBox16","DialogTextBox")
    control.Move(298,147,56,13)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Notiz3$"
 
    SET control = dlg.Add("DialogTextBox13","DialogTextBox")
    control.Move(77,161,57,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Stichwort1$"
 
    SET control = dlg.Add("DialogCheckBox3","DialogCheckBox")
    control.Move(137,161,47,11)
    control.Caption = "Und/Oder"
    control.Bind("sticho0%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogTextBox17","DialogTextBox")
    control.Move(186,161,56,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Stichwort2$"
 
    SET control = dlg.Add("DialogCheckBox4","DialogCheckBox")
    control.Move(250,161,46,11)
    control.Caption = "Und/Oder"
    control.Bind("sticho1%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogTextBox18","DialogTextBox")
    control.Move(298,161,56,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Stichwort3$"
 
    SET control = dlg.Add("DialogLabel14","DialogLabel")
    control.Move(2,161,59,11)
    control.Caption = "Stichwort"
 
    SET control = dlg.Add("DialogTextBox14","DialogTextBox")
    control.Move(77,174,57,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "ADRStatus1$"
 
    SET control = dlg.Add("DialogTextBox19","DialogTextBox")
    control.Move(186,174,56,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "ADRStatus2$"
 
    SET control = dlg.Add("DialogTextBox20","DialogTextBox")
    control.Move(298,174,56,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "ADRStatus3$"
 
    SET control = dlg.Add("DialogCheckBox5","DialogCheckBox")
    control.Move(137,176,47,11)
    control.Caption = "Und/Oder"
    control.Bind("adro0%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogCheckBox6","DialogCheckBox")
    control.Move(250,176,46,11)
    control.Caption = "Und/Oder"
    control.Bind("adro1%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogLabel15","DialogLabel")
    control.Move(2,177,59,11)
    control.Caption = "Adress-Status"
 
 
    REM ********************
 
    SET control = dlg.Add("DialogTextBox41","DialogTextBox")
    control.Move(77,187,57,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "ADRGruppe1$"
 
    SET control = dlg.Add("DialogTextBox42","DialogTextBox")
    control.Move(186,187,56,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "ADRGruppe2$"
 
    SET control = dlg.Add("DialogTextBox43","DialogTextBox")
    control.Move(298,187,56,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "ADRGruppe3$"
 
    SET control = dlg.Add("DialogCheckBox44","DialogCheckBox")
    control.Move(137,189,47,11)
    control.Caption = "Und/Oder"
    control.Bind("adrgr0%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogCheckBox45","DialogCheckBox")
    control.Move(250,189,46,11)
    control.Caption = "Und/Oder"
    control.Bind("adrgr1%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogLabel46","DialogLabel")
    control.Move(2,190,59,11)
    control.Caption = "Adress-Gruppe"
    REM ***********************
 
    SET control = dlg.Add("DialogLabel16","DialogLabel")
    control.Move(93,210,233,11)
    control.Caption = "ein Kreuz in der Checkbox bedeutet UND, kein Kreuz ODER"
 
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(106,226,56,15)
    control.Default = 1
    control.Caption = "&OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(165,226,54,14)
    control.Caption = "&Abbrechen"
    control.ReturnValue = 0
    control.Cancel = 1
   DIALOG "ADRCON1",reqsu%
   REMOVE DIALOG "ADRCON1"
 notiz% = 0
 IF reqsu% <> 1 THEN END SUB 
 suna1$ = "J"
 MOUSE OFF 
 IF projektnummer$ <> "" THEN 
   suna$ = projektnummer$
   feld$ = "Kundennummer." + GADRDat$
 ELSE 
   IF name1$ <> "" THEN 
     suna$ = VSNRPack$(name1$)
     feld$ = "QNachname." + GADRDat$
   ELSE 
     IF name2$ <> "" THEN 
       suna$ = VSNRPack$(name2$)
       feld$ = "QVorname." + GADRDat$
     ELSE 
       IF name3$ <> "" THEN 
         suna$ = VSNRPack$(name3$)
         feld$ = "QGeburtsname." + GADRDat$
       ELSE 
         IF strasse$ <> "" THEN 
           suna$ = VSNRPack$(strasse$)
           feld$ = "Qstra·e." + GADRDat$
         ELSE 
           IF plz$ <> "" THEN 
             suna$ = VSNRPack$(plz$)
             feld$ = "Qplz." + GADRDat$
           ELSE 
             IF ort$ <> "" THEN 
               suna$ = VSNRPack$(ort$)
               feld$ = "Qort." + GADRDat$
             ELSE 
               IF land$ <> "" THEN 
                 suna$ = land$
                 feld$ = "land." + GADRDat$
               ELSE 
                 IF Stadtteil$ <> "" THEN 
                   suna$ = stadtteil$
                   REM feld$ = "Stadtteil.project"
                 ELSE 
                   IF projektstart$ <> "" OR projektstart2$ <> "" THEN 
                     suna$ = projektstart$
                     feld$ = "Kunde_seit." + GADRDat$
                   ELSE 
                     IF LTRIM$ (adrstatus1$) <> "" THEN 
                       suna$ = ADRSTATUS1$
                       feld$ = "ADRSTATUS." + GADRDat$
                     ELSE 
                       IF LTRIM$ (Stichwort1$) <> "" THEN 
                         notiz% = - 1
                         suna$ = Stichwort1$
                         feld$ = "Stichwort." + GADRDat$
                       ELSE 
                         IF LTRIM$ (ADRGruppe1$) <> "" THEN 
                           notiz% = - 1
                           suna$ = ADRGruppe1$
                           feld$ = "ADRGruppe." + GADRDat$
                         ELSE 
 
                         END IF 
                       END IF 
                     END IF 
                   END IF 
                 END IF 
               END IF 
             END IF 
           END IF 
         END IF 
       END IF 
     END IF 
   END IF 
 END IF 
 FILE GADRDat$
 REM 150699
 IF feld$ = "" THEN GOTO endadr180998
 INDEX feld$$
 SELECT FIRST 
 datind$ = "FALSE"
 datind1$ = "FALSE"
 IF feld$ LIKE "Kunde_seit*" THEN 
   IF projektstart$ <> "" OR projektstart2$ <> "" THEN 
      
     IF projektstart$ = "" THEN projektstart$ = "1.1.0001"
     IF projektstart2$ = "" THEN projektstart2$ = "31.12.2999"
     IF DateOK%(projektstart$) THEN 
       datind$ = "TRUE"
     ELSE 
       GOTO AnfSuAdr180998
     END IF 
     IF projektstart2$ <> "" THEN 
       IF DateOK%(projektstart2$) THEN 
         datind1$ = "TRUE"
       ELSE 
         GOTO AnfSuAdr180998
       END IF 
     END IF 
   END IF 
 END IF 
 
 IF notiz% <> - 1 THEN 
   IF datind$ <> "TRUE" THEN 
     SELECT KEY suna$ INDEX feld$$
   ELSE 
     suna% = DAYS (suna$)
     SELECT KEY suna% INDEX feld$$
   END IF 
 END IF 
 REM suna$ = suna$ + "*"
 SET STATUS "Adresssuche lÑuft..."
 a% = 0
 REDIM AdrFound$( RECCOUNT ("adressen"),1)
 REDIM AdrFound$( RECCOUNT ("adressen"))
 b% = RECCOUNT ("adressen")
 REM CALL Fehler("","")
 i% = 0
 adrfound% = 1
 projektstart% = suna%
 projektstart2% = DAYS (projektstart2$)
 j% = RECCOUNT ("adressen")
 
 IF GCODIE% = - 1 THEN 
   CALL SearchInitADR()
 END IF 
 
 IF datind$ <> "TRUE" AND notiz% <> - 1 AND (suna$ = "" OR suna$ = "*") THEN WHILE NOT EOF ("adressen")
 IF datind$ <> "TRUE" AND notiz% <> - 1 AND suna$ <> "" AND suna$ <> "*" THEN WHILE feld$$ LIKE suna$ + "*" AND NOT EOF ("adressen")
 IF datind$ = "TRUE" AND datind1$ = "FALSE" AND notiz% <> - 1 THEN WHILE feld$$ = DAYS (projektstart$) AND NOT EOF ("adressen")
 IF datind$ = "TRUE" AND datind1$ = "TRUE" AND notiz% <> - 1 THEN WHILE feld$$ >= projektstart% AND feld$$ <= projektstart2% + 1 AND NOT EOF ("adressen")
 IF notiz% = - 1 THEN WHILE NOT EOF ("ADRESSEN")
   i% = i% + 1
   test$ = nachname.adressen
   IF LTRIM$ (notiz1$) <> "" THEN 
     IF LTRIM$ (notiz2$) <> "" THEN 
       IF LTRIM$ (notiz3$) <> "" THEN 
         IF RIGHT$ (notiz1$,1) <> "*" THEN notiz1$ = notiz1$ + "*"
         IF RIGHT$ (notiz2$,1) <> "*" THEN notiz2$ = notiz2$ + "*"
         IF RIGHT$ (notiz3$,1) <> "*" THEN notiz3$ = notiz3$ + "*"
         IF noder0% = 1 AND noder1% = 1 THEN 
           IF (notiz.adressen LIKE notiz1$ OR notiz.adressen LIKE "*" + notiz1$) AND (notiz.adressen LIKE notiz2$ OR notiz.adressen LIKE "*" + notiz2$) AND (notiz.adressen LIKE notiz3$ OR notiz.adressen LIKE "*" + notiz3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF noder0% = 1 AND noder1% = 0 THEN 
           IF (notiz.adressen LIKE notiz1$ OR notiz.adressen LIKE "*" + notiz1$) AND (notiz.adressen LIKE notiz2$ OR notiz.adressen LIKE "*" + notiz2$) OR (notiz.adressen LIKE notiz3$ OR notiz.adressen LIKE "*" + notiz3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF noder0% = 0 AND noder1% = 1 THEN 
           IF (notiz.adressen LIKE notiz1$ OR notiz.adressen LIKE "*" + notiz1$) OR (notiz.adressen LIKE notiz2$ OR notiz.adressen LIKE "*" + notiz2$) AND (notiz.adressen LIKE notiz3$ OR notiz.adressen LIKE "*" + notiz3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF noder0% = 0 AND noder1% = 0 THEN 
           IF (notiz.adressen LIKE notiz1$ OR notiz.adressen LIKE "*" + notiz1$) OR (notiz.adressen LIKE notiz2$ OR notiz.adressen LIKE "*" + notiz2$) OR (notiz.adressen LIKE notiz3$ OR notiz.adressen LIKE "*" + notiz3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       ELSE 
         IF RIGHT$ (notiz1$,1) <> "*" THEN notiz1$ = notiz1$ + "*"
         IF RIGHT$ (notiz2$,1) <> "*" THEN notiz2$ = notiz2$ + "*"
         IF noder0% = 1 THEN 
           REM UND
           IF (notiz.adressen LIKE notiz1$ OR notiz.adressen LIKE "*" + notiz1$) AND (notiz.adressen LIKE notiz2$ OR notiz.adressen LIKE "*" + notiz2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         ELSE 
           REM ODER
           IF (notiz.adressen LIKE notiz1$ OR notiz.adressen LIKE "*" + notiz1$) OR (notiz.adressen LIKE notiz2$ OR notiz.adressen LIKE "*" + notiz2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       END IF 
     ELSE 
       IF RIGHT$ (notiz1$,1) <> "*" THEN notiz1$ = notiz1$ + "*"
         IF notiz.adressen LIKE notiz1$ OR notiz.adressen LIKE "*" + notiz1$ THEN 
         ELSE 
          adrfound% = 0
       END IF 
     END IF 
   END IF 
 
 
   IF LTRIM$ (Stichwort1$) <> "" THEN 
     S1$ = Stichwort1$
     S2$ = Stichwort2$
     S3$ = Stichwort3$
     IF LTRIM$ (Stichwort2$) <> "" THEN 
       IF LTRIM$ (Stichwort3$) <> "" THEN 
         IF RIGHT$ (Stichwort1$,1) <> "*" THEN S1$ = Stichwort1$ + "*"
         IF RIGHT$ (Stichwort2$,1) <> "*" THEN S2$ = Stichwort2$ + "*"
         IF RIGHT$ (Stichwort3$,1) <> "*" THEN S3$ = Stichwort3$ + "*"
         IF sticho0% = 1 AND sticho1% = 1 THEN 
           IF (Stichwort.adressen LIKE S1$ OR Stichwort.adressen LIKE "*" + S1$) AND (Stichwort.adressen LIKE S2$ OR Stichwort.adressen LIKE "*" + S2$) AND (Stichwort.adressen LIKE S3$ OR Stichwort.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF sticho0% = 1 AND sticho1% = 0 THEN 
           IF (Stichwort.adressen LIKE S1$ OR Stichwort.adressen LIKE "*" + S1$) AND (Stichwort.adressen LIKE S2$ OR Stichwort.adressen LIKE "*" + S2$) OR (Stichwort.adressen LIKE S3$ OR Stichwort.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF sticho0% = 0 AND sticho1% = 1 THEN 
           IF (Stichwort.adressen LIKE S1$ OR Stichwort.adressen LIKE "*" + S1$) OR (Stichwort.adressen LIKE S2$ OR Stichwort.adressen LIKE "*" + S2$) AND (Stichwort.adressen LIKE S3$ OR Stichwort.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF sticho0% = 0 AND sticho1% = 0 THEN 
           IF (Stichwort.adressen LIKE S1$ OR Stichwort.adressen LIKE "*" + S1$) OR (Stichwort.adressen LIKE S2$ OR Stichwort.adressen LIKE "*" + S2$) OR (Stichwort.adressen LIKE S3$ OR Stichwort.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       ELSE 
         IF RIGHT$ (Stichwort1$,1) <> "*" THEN S1$ = Stichwort1$ + "*"
         IF RIGHT$ (Stichwort2$,1) <> "*" THEN S2$ = Stichwort2$ + "*"
         IF sticho0% = 1 THEN 
           REM UND
           IF (Stichwort.adressen LIKE S1$ OR Stichwort.adressen LIKE "*" + S1$) AND (Stichwort.adressen LIKE S2$ OR Stichwort.adressen LIKE "*" + S2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         ELSE 
           REM ODER
           IF (Stichwort.adressen LIKE S1$ OR Stichwort.adressen LIKE "*" + S1$) OR (Stichwort.adressen LIKE S2$ OR Stichwort.adressen LIKE "*" + S2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       END IF 
     ELSE 
       IF RIGHT$ (Stichwort1$,1) <> "*" THEN S1$ = Stichwort1$ + "*"
         IF Stichwort.adressen LIKE S1$ OR Stichwort.adressen LIKE "*" + S1$ THEN 
         ELSE 
          adrfound% = 0
       END IF 
     END IF 
   END IF 
 
   IF LTRIM$ (ADRStatus1$) <> "" THEN 
     S1$ = ADRStatus1$
     S2$ = ADRStatus2$
     S3$ = ADRStatus3$
     IF LTRIM$ (ADRStatus2$) <> "" THEN 
       IF LTRIM$ (ADRStatus3$) <> "" THEN 
         IF RIGHT$ (ADRStatus1$,1) <> "*" THEN S1$ = ADRStatus1$ + "*"
         IF RIGHT$ (ADRStatus2$,1) <> "*" THEN S2$ = ADRStatus2$ + "*"
         IF RIGHT$ (ADRStatus3$,1) <> "*" THEN S3$ = ADRStatus3$ + "*"
         IF adro0% = 1 AND adro1% = 1 THEN 
           IF (ADRStatus.adressen LIKE S1$ OR ADRStatus.adressen LIKE "*" + S1$) AND (ADRStatus.adressen LIKE S2$ OR ADRStatus.adressen LIKE "*" + S2$) AND (ADRStatus.adressen LIKE S3$ OR ADRStatus.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF adro0% = 1 AND adro1% = 0 THEN 
           IF (ADRStatus.adressen LIKE S1$ OR ADRStatus.adressen LIKE "*" + S1$) AND (ADRStatus.adressen LIKE S2$ OR ADRStatus.adressen LIKE "*" + S2$) OR (ADRStatus.adressen LIKE S3$ OR ADRStatus.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF adro0% = 0 AND adro1% = 1 THEN 
           IF (ADRStatus.adressen LIKE S1$ OR ADRStatus.adressen LIKE "*" + S1$) OR (ADRStatus.adressen LIKE S2$ OR ADRStatus.adressen LIKE "*" + S2$) AND (ADRStatus.adressen LIKE S3$ OR ADRStatus.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF adro0% = 0 AND adro1% = 0 THEN 
           IF (ADRStatus.adressen LIKE S1$ OR ADRStatus.adressen LIKE "*" + S1$) OR (ADRStatus.adressen LIKE S2$ OR ADRStatus.adressen LIKE "*" + S2$) OR (ADRStatus.adressen LIKE S3$ OR ADRStatus.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       ELSE 
         IF RIGHT$ (ADRStatus1$,1) <> "*" THEN S1$ = ADRStatus1$ + "*"
         IF RIGHT$ (ADRStatus2$,1) <> "*" THEN S2$ = ADRStatus2$ + "*"
         IF adro0% = 1 THEN 
           REM UND
           IF (ADRStatus.adressen LIKE S1$ OR ADRStatus.adressen LIKE "*" + S1$) AND (ADRStatus.adressen LIKE S2$ OR ADRStatus.adressen LIKE "*" + S2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         ELSE 
           REM ODER
           IF (ADRStatus.adressen LIKE S1$ OR ADRStatus.adressen LIKE "*" + S1$) OR (ADRStatus.adressen LIKE S2$ OR ADRStatus.adressen LIKE "*" + S2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       END IF 
     ELSE 
       IF RIGHT$ (ADRStatus1$,1) <> "*" THEN S1$ = ADRStatus1$ + "*"
         IF ADRStatus.adressen LIKE S1$ OR ADRStatus.adressen LIKE "*" + S1$ THEN 
         ELSE 
          adrfound% = 0
       END IF 
     END IF 
   END IF 
 
 REM **************************************************
 
   IF LTRIM$ (ADRGruppe1$) <> "" THEN 
     S1$ = ADRGruppe1$
     S2$ = ADRGruppe2$
     S3$ = ADRGruppe3$
     IF LTRIM$ (ADRGruppe2$) <> "" THEN 
       IF LTRIM$ (ADRGruppe3$) <> "" THEN 
         IF RIGHT$ (ADRGruppe1$,1) <> "*" THEN S1$ = ADRGruppe1$ + "*"
         IF RIGHT$ (ADRGruppe2$,1) <> "*" THEN S2$ = ADRGruppe2$ + "*"
         IF RIGHT$ (ADRGruppe3$,1) <> "*" THEN S3$ = ADRGruppe3$ + "*"
         IF adrgr0% = 1 AND adrgr1% = 1 THEN 
           IF (ADRGruppe.adressen LIKE S1$ OR ADRGruppe.adressen LIKE "*" + S1$) AND (ADRGruppe.adressen LIKE S2$ OR ADRGruppe.adressen LIKE "*" + S2$) AND (ADRGruppe.adressen LIKE S3$ OR ADRGruppe.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF adrgr0% = 1 AND adrgr1% = 0 THEN 
           IF (ADRGruppe.adressen LIKE S1$ OR ADRGruppe.adressen LIKE "*" + S1$) AND (ADRGruppe.adressen LIKE S2$ OR ADRGruppe.adressen LIKE "*" + S2$) OR (ADRGruppe.adressen LIKE S3$ OR ADRGruppe.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF adrgr0% = 0 AND adrgr1% = 1 THEN 
           IF (ADRGruppe.adressen LIKE S1$ OR ADRGruppe.adressen LIKE "*" + S1$) OR (ADRGruppe.adressen LIKE S2$ OR ADRGruppe.adressen LIKE "*" + S2$) AND (ADRGruppe.adressen LIKE S3$ OR ADRGruppe.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF adrgr0% = 0 AND adrgr1% = 0 THEN 
           IF (ADRGruppe.adressen LIKE S1$ OR ADRGruppe.adressen LIKE "*" + S1$) OR (ADRGruppe.adressen LIKE S2$ OR ADRGruppe.adressen LIKE "*" + S2$) OR (ADRGruppe.adressen LIKE S3$ OR ADRGruppe.adressen LIKE "*" + S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       ELSE 
         IF RIGHT$ (ADRGruppe1$,1) <> "*" THEN S1$ = ADRGruppe1$ + "*"
         IF RIGHT$ (ADRGruppe2$,1) <> "*" THEN S2$ = ADRGruppe2$ + "*"
         IF adrgr0% = 1 THEN 
           REM UND
           IF (ADRGruppe.adressen LIKE S1$ OR ADRGruppe.adressen LIKE "*" + S1$) AND (ADRGruppe.adressen LIKE S2$ OR ADRGruppe.adressen LIKE "*" + S2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         ELSE 
           REM ODER
           IF (ADRGruppe.adressen LIKE S1$ OR ADRGruppe.adressen LIKE "*" + S1$) OR (ADRGruppe.adressen LIKE S2$ OR ADRGruppe.adressen LIKE "*" + S2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       END IF 
     ELSE 
       IF RIGHT$ (ADRGruppe1$,1) <> "*" THEN S1$ = ADRGruppe1$ + "*"
         IF ADRGruppe.adressen LIKE S1$ OR ADRGruppe.adressen LIKE "*" + S1$ THEN 
         ELSE 
          adrfound% = 0
       END IF 
     END IF 
   END IF 
 
 
 
 REM ******************ADRGruppe ENDE********************************
 
   IF projektnummer$ <> "" THEN 
     IF kundennummer LIKE projektnummer$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF name1$ <> "" THEN 
     IF Nachname.adressen LIKE name1$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
 
   IF name2$ <> "" THEN 
     IF Vorname LIKE name2$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF name3$ <> "" THEN 
     IF Geburtsname LIKE name3$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF strasse$ <> "" THEN 
     IF stra·e LIKE strasse$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF plz$ <> "" THEN 
     IF plz LIKE plz$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF ort$ <> "" THEN 
     IF ort LIKE ort$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF land$ <> "" THEN 
     IF land LIKE land$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF projektstart$ <> "" OR projektstart2$ <> "" THEN 
     IF projektstart$ = "" THEN projektstart$ = "01.01.0001"
     IF projektstart2$ = "" THEN projektstart2$ = "31.12.2999"
     projektstart% = DAYS (projektstart$)
     projektstart2% = DAYS (projektstart2$)
     IF DateOK%(projektstart$) THEN 
       IF DateOK%(projektstart$) THEN 
         IF Kunde_seit >= projektstart% AND Kunde_seit <= projektstart2% THEN 
         ELSE 
           adrfound% = 0
         END IF 
       ELSE 
         GOTO AnfSuAdr180998
       END IF 
     ELSE 
       GOTO AnfSuAdr180998
     END IF 
   END IF 
   IF adrfound% = 1 THEN 
     codeku% = codeku.adressen
     REM 141199
     GTelDat$ = "TELEFON"
     IF GCODIE% = - 1 THEN 
       CALL SearchVorbAdr("ADRESSEN")
     END IF 
     AdrFound1$ = LTRIM$ (nachname)
     IF LTRIM$ (vorname) <> "" THEN AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (vorname)
     AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (Kundennummer) + "/" + LTRIM$ (ort) + ", " + LTRIM$ (PLZ) + ", " + LTRIM$ (Stra·e) + ", "
     REM FILE "project"
     AdrFound$(a%) = AdrFound1$ + SPACE$ (120) + STR$ (codeku,"000000")
     a% = a% + 1
             IF EXISTS (codeku%,codeku.telefon) THEN 
               FILE "telefon"
               SELECT FIRST 
               SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
               WHILE NOT EOF ("telefon") AND codeku.telefon = codeku%
                 AdrFound1$ = AdrFound1$ + LTRIM$ (nummer.telefon) + ","
                 GTELDAT$ = "TELEFON"
                 IF _projekt$ <> "WAWI" THEN CALL SearchVorbTel("ADRESSEN")
               SELECT NEXT FILE "Telefon" INDEX codeku.telefon
               WEND 
             END IF 
           IF GCODIE% = - 1 THEN 
             ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
           END IF 
 
   ELSE 
     adrfound% = 1
   END IF 
   SET STATUS "gefunden:" + STR$ (a%,"999999") + "  in Bearbeitung: Datensatz:" + STR$ (i%,"999999") + " von " + STR$ (j%,"999999") + "durchsucht   " + Nachname.adressen
 
   MOUSE OFF 
   FILE "ADRESSEN"
   SELECT NEXT FILE "ADRESSEN"
   test$ = Nachname.adressen
   REM SET STATUS Nachname.adressen
 WEND 
 IF a% > 0 THEN 
   LAuswahl$ = AdrFound$(0)
   LAuswahl1$(0) = LAuswahl$
       IF _projekt$ LIKE "PROVIS" THEN 
         MENU 3,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
       ELSE 
         MENU 4,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
       END IF 
   IF GCODIE% = - 1 THEN 
     c$ = "aa"
     req3% = CALL ("_SearchShow",c$)
     REM REQUEST c$,"",2
     REM ret% = CALL ("_SearchClose")
     IF VAL (c$) <> 0 THEN 
       codeku1% = VAL (c$)
       adrglob% = codeku1%
       adrfound% = VAL (c$)
       ok% = 0
       SET STATUS "Adressen gefunden..."
       SELECT FORM KEY codeku1% FILE "adressen" INDEX Codeku.adressen
       SELECT FORM KEY codeku1% FILE "telefon" INDEX Codeku.telefon
       SET INDEX INDEX 
       REM CALL Fehler("","")
       CALL ADRFeldnamen()
       FORM 
       MOUSE ON 
     END IF 
     IF req3% = 2 THEN 
       adrser% = 1
       CALL SerieNeu1(GAdrDat$)
       GOTO endadr180998
     END IF 
   ELSE 
     CREATE DIALOG "ADRLISTE",0,0,440,197,title$,"MS Sans Serif",8
     ADD DIALOG "ADRLISTE",7,5,8,428,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
     ADD DIALOG "ADRLISTE",1,164,174,56,16,1,"&OK",1,1
     ADD DIALOG "ADRLISTE",1,224,174,56,16,0,"&Abbrechen",0,0
     ADD DIALOG "ADRLISTE",1,284,174,56,16,0,"&Serienbrief",3,0
     DIALOG "ADRLISTE",req3%
     MOUSE ON 
     REMOVE DIALOG "ADRLISTE"
     IF req3% = 3 THEN 
       adrser% = 1
       CALL SerieNeu1("ADRESSEN")
       GOTO endadr180998
     END IF 
     IF req3% = 1 THEN 
       LAuswahl$ = LAuswahl1$(0)
       codeku1% = VAL ( RIGHT$ (LAuswahl$,6))
       adrglob% = codeku1%
       adrfound% = VAL ( RIGHT$ (LAuswahl$,6))
       ok% = 0
       SET STATUS "Adressen gefunden..."
       SELECT FORM KEY codeku1% FILE "adressen" INDEX Codeku.adressen
       SELECT FORM KEY codeku1% FILE "telefon" INDEX Codeku.telefon
       SET INDEX INDEX 
       REM CALL Fehler("","")
       CALL ADRFeldnamen()
       FORM 
       MOUSE ON 
     END IF 
   END IF 
 ELSE 
   CALL Fehler ("Es wurden keine Adressen gefunden, die den angegebenen Kriterien entsprechen!","")
   GOTO AnfSuAdr180998
 END IF 
endadr180998: 
 END SUB 



SUB AdrGlobalSuch_Old()
 ort$ = ""
    DIM dlg AS Dialog
    DIM control AS DialogControl
AnfSuAdr180998:   
   adrglob% = 0
    Superbase.Dialogs.Add("ADRCON1")
    SET dlg = Superbase.Dialogs.ADRCON1
    dlg.Move(0,0,360,226)
    dlg.Caption = "Projektsuche"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(0,0,360,205)
    control.Caption = ""
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(2,11,240,11)
    control.Caption = "Tragen Sie hier die einzelnen Suchbegriffe in die zugehîrigen Felder ein!"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(2,23,60,10)
    control.Caption = "Kundennummer"
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(77,23,136,10)
    control.ScrollEnable = 2
    control.MaxLength = 20
    control.TextBinding = "Projektnummer$"
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(2,35,60,11)
    control.Caption = "Nachname/FIRMA"
 
    SET control = dlg.Add("DialogTextBox2","DialogTextBox")
    control.Move(77,35,136,11)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "name1$"
 
    SET control = dlg.Add("DialogTextBox3","DialogTextBox")
    control.Move(77,46,136,11)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "name2$"
    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(2,47,60,10)
    control.Caption = "Vorname/ZUSATZ"
 
    SET control = dlg.Add("DialogLabel5","DialogLabel")
    control.Move(2,59,60,11)
    control.Caption = "Geburtsname/z.H."
 
    SET control = dlg.Add("DialogTextBox4","DialogTextBox")
    control.Move(77,59,136,11)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "name3$"
 
    SET control = dlg.Add("DialogLabel6","DialogLabel")
    control.Move(2,71,50,10)
    control.Caption = "Stra·e"
 
    SET control = dlg.Add("DialogTextBox5","DialogTextBox")
    control.Move(77,71,136,10)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "Strasse$"
 
    SET control = dlg.Add("DialogTextBox6","DialogTextBox")
    control.Move(77,83,136,11)
    control.ScrollEnable = 2
    control.MaxLength = 8
    control.TextBinding = "PLZ$"
 
    SET control = dlg.Add("DialogLabel7","DialogLabel")
    control.Move(2,84,50,11)
    control.Caption = "PLZ"
 
    SET control = dlg.Add("DialogTextBox7","DialogTextBox")
    control.Move(77,95,136,10)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "Ort$"
 
    SET control = dlg.Add("DialogLabel8","DialogLabel")
    control.Move(2,97,50,11)
    control.Caption = "Ort"
 
    SET control = dlg.Add("DialogTextBox8","DialogTextBox")
    control.Move(77,107,136,11)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "Land$"
 
    SET control = dlg.Add("DialogLabel9","DialogLabel")
    control.Move(2,108,48,11)
    control.Caption = "Land"
 
    SET control = dlg.Add("DialogTextBox81","DialogTextBox")
    control.Move(77,121,60,11)
    control.ScrollEnable = 2
    control.MaxLength = 20
    control.TextBinding = "anrede$"
 
    SET control = dlg.Add("DialogLabel91","DialogLabel")
    control.Move(2,122,48,11)
    control.Caption = "Anrede"
 



    SET control = dlg.Add("DialogLabel11","DialogLabel")
    control.Move(2,132,59,11)
    control.Caption = "Kunde seit von"
 
    SET control = dlg.Add("DialogTextBox10","DialogTextBox")
    control.Move(77,132,40,10)
    control.MaxLength = 10
    control.TextBinding = "Projektstart$"
 
    SET control = dlg.Add("DialogLabel10","DialogLabel")
    control.Move(230,32,118,107)
    control.Caption = "Sie kînnen in die Felder Notiz, Stichwort und Adress-Status auch unvollstÑndige Begriffe eingeben, die Sie aber mit einem vorstehenden * oder einem nachstehenden * fÅr den weggelassenen Teil komplettieren mÅssen"

    SET control = dlg.Add("DialogTextBox11","DialogTextBox")
    control.Move(146,132,40,11)
    control.MaxLength = 10
    control.TextBinding = "Projektstart2$"
 
    SET control = dlg.Add("DialogLabel12","DialogLabel")
    control.Move(126,134,20,11)
    control.Caption = "bis"
 
    SET control = dlg.Add("DialogLabel13","DialogLabel")
    control.Move(2,147,59,11)
    control.Caption = "Notiz"
 
    SET control = dlg.Add("DialogTextBox12","DialogTextBox")
    control.Move(77,147,57,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Notiz1$"
 
    SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
    control.Move(137,147,47,11)
    control.Caption = "Und/Oder"
    control.Bind("noder0%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogTextBox15","DialogTextBox")
    control.Move(186,147,58,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Notiz2$"
 
    SET control = dlg.Add("DialogCheckBox2","DialogCheckBox")
    control.Move(250,147,46,11)
    control.Caption = "Und/Oder"
    control.Bind("noder1%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogTextBox16","DialogTextBox")
    control.Move(298,147,56,13)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Notiz4$"
 
    SET control = dlg.Add("DialogTextBox13","DialogTextBox")
    control.Move(77,161,57,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Stichwort1$"
 
    SET control = dlg.Add("DialogCheckBox3","DialogCheckBox")
    control.Move(137,161,47,11)
    control.Caption = "Und/Oder"
    control.Bind("sticho0%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogTextBox17","DialogTextBox")
    control.Move(186,161,56,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Stichwort2$"
 
    SET control = dlg.Add("DialogCheckBox4","DialogCheckBox")
    control.Move(250,161,46,11)
    control.Caption = "Und/Oder"
    control.Bind("sticho1%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogTextBox18","DialogTextBox")
    control.Move(298,161,56,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "Stichwort3$"
 
    SET control = dlg.Add("DialogLabel14","DialogLabel")
    control.Move(2,161,59,11)
    control.Caption = "Stichwort"
 
    SET control = dlg.Add("DialogTextBox14","DialogTextBox")
    control.Move(77,174,57,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "ADRStatus1$"
 
    SET control = dlg.Add("DialogTextBox19","DialogTextBox")
    control.Move(186,174,56,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "ADRStatus2$"
 
    SET control = dlg.Add("DialogTextBox20","DialogTextBox")
    control.Move(298,174,56,11)
    control.ScrollEnable = 2
    control.MaxLength = 40
    control.TextBinding = "ADRStatus3$"
 

    SET control = dlg.Add("DialogLabel15","DialogLabel")
    control.Move(147,176,35,11)
    control.Caption = "ODER"


    REM SET control = dlg.Add("DialogCheckBox5","DialogCheckBox")
    REM control.Move(137,176,47,11)
    REM control.Caption = "Und/Oder"
    REM control.Bind("adro0%")
    REM control.ValueOn = 1
    REM control.ValueOff = 0
 
    REM SET control = dlg.Add("DialogCheckBox6","DialogCheckBox")
    REM control.Move(250,176,46,11)
    REM control.Caption = "Und/Oder"
    REM control.Bind("adro1%")
    REM control.ValueOn = 1
    REM control.ValueOff = 0
 
    SET control = dlg.Add("DialogLabel16","DialogLabel")
    control.Move(260,176,35,11)
    control.Caption = "ODER"
 
    SET control = dlg.Add("DialogLabel17","DialogLabel")
    control.Move(2,177,59,11)
    control.Caption = "Adress-Status"
 
 
    SET control = dlg.Add("DialogLabel18","DialogLabel")
    control.Move(93,190,233,11)
    control.Caption = "ein Kreuz in der Checkbox bedeutet UND, kein Kreuz ODER"
 
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(106,208,56,15)
    control.Default = 1
    control.Caption = "&OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(165,208,54,14)
    control.Caption = "&Abbrechen"
    control.ReturnValue = 0
    control.Cancel = 1
   DIALOG "ADRCON1",reqsu%
   REMOVE DIALOG "ADRCON1"
 notiz% = 0
 IF reqsu% <> 1 THEN END SUB 
 suna1$ = "J"
 MOUSE OFF 
 IF projektnummer$ <> "" THEN 
   suna$ = projektnummer$
   feld$ = "Kundennummer." + GAdrDat$
 ELSE 
   IF name1$ <> "" THEN 
     suna$ = VSNRPack$(name1$)
     feld$ = "QNachname." + GAdrDat$
   ELSE 
     IF name2$ <> "" THEN 
       suna$ = VSNRPack$(name2$)
       feld$ = "QVorname." + GAdrDat$
     ELSE 
       IF name3$ <> "" THEN 
         suna$ = VSNRPack$(name3$)
         feld$ = "QGeburtsname." + GAdrDat$
       ELSE 
         IF strasse$ <> "" THEN 
           suna$ = VSNRPack$(strasse$)
           feld$ = "Qstra·e." + GAdrDat$
         ELSE 
           IF plz$ <> "" THEN 
             suna$ = VSNRPack$(plz$)
             feld$ = "Qplz." + GAdrDat$
           ELSE 
             IF ort$ <> "" THEN 
               suna$ = VSNRPack$(ort$)
               feld$ = "Qort." + GAdrDat$
             ELSE 
               IF land$ <> "" THEN 
                 suna$ = land$
                 feld$ = "land." + GAdrDat$
               ELSE 
                 IF Stadtteil$ <> "" THEN 
                   suna$ = stadtteil$
                   REM feld$ = "Stadtteil.project"
                 ELSE 
                   IF projektstart$ <> "" OR projektstart2$ <> "" THEN 
                     suna$ = projektstart$
                     feld$ = "Kunde_seit." + GAdrDat$
                   ELSE 
                     IF LTRIM$ (adrstatus1$) <> "" THEN 
                       suna$ = ADRSTATUS1$
                       feld$ = "ADRSTATUS." + GAdrDat$
                     ELSE 
                       IF LTRIM$ (Stichwort1$) <> "" THEN 
                         notiz% = - 1
                         suna$ = ADRStatus1$
                         feld$ = "ADRSTatus." + GAdrDat$
                       ELSE 
                         IF LTRIM$ (notiz1$) <> "" THEN 
                           notiz% = - 1
                           suna$ = ADRStatus1$
                           feld$ = "ADRStatus." + GAdrDat$
                         ELSE 
                           IF LTRIM$ (anrede$) <> "" THEN 
                             suna$ = anrede$
                             feld$ = "Anrede." + GadrDat$
                           END IF 
                         END IF 
                       END IF 
                     END IF 
                   END IF 
                 END IF 
               END IF 
             END IF 
           END IF 
         END IF 
       END IF 
     END IF 
   END IF 
 END IF 
 FILE GAdrDat$
 REM 150699
 IF feld$ = "" THEN GOTO endadr180998
 INDEX feld$$
 SELECT FIRST 
 IF name1$ <> "" THEN name1$ = VSNRPack$(name1$)
 IF name2$ <> "" THEN name2$ = VSNRPack$(name2$)
 IF name3$ <> "" THEN name3$ = VSNRPack$(name3$)
 IF strasse$ <> "" THEN strasse$ = VSNRPack$(strasse$)
 IF ort$ <> "" THEN ort$ = VSNRPack$(ort$)
 IF plz$ <> "" THEN plz$ = VSNRPack$(plz$)
 

 datind$ = "FALSE"
 datind1$ = "FALSE"
 IF feld$ LIKE "Kunde_seit*" THEN 
   IF projektstart$ = "" THEN projektstart$ = "1.1.1980"
   IF projektstart2$ = "" THEN projektstart2$ = "31.12.2999"
   IF DateOK%(projektstart$) THEN 
     datind$ = "TRUE"
   ELSE 
     GOTO AnfSuAdr180998
   END IF 
   IF projektstart2$ <> "" THEN 
     IF DateOK%(projektstart2$) THEN 
       datind1$ = "TRUE"
     ELSE 
       GOTO AnfSuAdr180998
     END IF 
   END IF 
 END IF 
 
 IF notiz% <> - 1 THEN 
   SELECT FIRST INDEX feld$$
   IF datind$ <> "TRUE" THEN 
     SELECT KEY suna$ INDEX feld$$
   ELSE 
     suna% = DAYS (suna$)
     SELECT KEY suna% INDEX feld$$
   END IF 
 END IF 
 IF Projektnummer$ = "" AND name1$ = "" AND name2$ = "" AND name3$ = "" AND strasse$ = "" AND ort$ = "" AND plz$ = "" AND land$ = "" AND Projektstart$ = "" THEN datind$ = "ALLE"
 IF datind$ LIKE "ALLE" THEN 
   IF (notiz1$ <> "" AND notiz2$ <> "") OR (notiz1$ <> "" AND notiz4$ <> "") THEN 
     SELECT FIRST FILE GAdrDat$
   END IF 
   IF (ADRStatus1$ <> "" AND ADRStatus2$ <> "") OR (ADRStatus2$ <> "" AND ADRStatus3$ <> "") THEN 
     SELECT FIRST FILE GAdrDat$
   END IF 
   IF (Stichwort1$ <> "" AND Stichwort2$ <> "") OR (Stichwort2$ <> "" AND Stichwort3$ <> "") THEN 
     SELECT FIRST FILE GAdrDat$
   END IF 
   REM ? ADRSTATUS.GAdrDat$
 END IF 
 REM suna$ = suna$ + "*"
 SET STATUS "Adresssuche lÑuft..."
 a% = 0
 fzaehl% = RECCOUNT (GAdrDat$)
 IF fzaehl% > 20000 THEN fzaehl% = 20000
 REDIM AdrFound$(fzaehl%)
 b% = RECCOUNT (GAdrDat$)
 REM FOR i% = 0 TO b%
   REM AdrFound$(i%) = ""
 REM NEXT i%
 REM CALL Fehler("","")
 i% = 0
 adrfound% = 1
 projektstart% = suna%
 projektstart2% = DAYS (projektstart2$)
 j% = RECCOUNT (GAdrDat$)
 adro0% = 0
 adro1% = 0
 IF GCODIE% = - 1 THEN 
   CALL SearchInitADR()
 END IF 
 locktest% = MNdisabled%("DATALOCK")
 IF datind$ LIKE "ALLE" THEN WHILE NOT EOF (GAdrDat$)
 IF datind$ LIKE "FALSE" AND notiz% <> - 1 THEN WHILE feld$$ LIKE suna$ + "*" AND NOT EOF (GAdrDat$)
 IF datind$ = "TRUE" AND datind1$ = "FALSE" AND notiz% <> - 1 THEN WHILE feld$$ = DAYS (projektstart$) AND NOT EOF (GAdrDat$)
 IF datind$ = "TRUE" AND datind1$ = "TRUE" AND notiz% <> - 1 THEN WHILE feld$$ >= projektstart% AND feld$$ <= projektstart2% + 1 AND NOT EOF (GAdrDat$)
 IF notiz% = - 1 THEN WHILE NOT EOF (GAdrDat$)
   i% = i% + 1
   test$ = nachname.GAdrDat$
   IF LTRIM$ (notiz1$) <> "" THEN 
     IF LTRIM$ (notiz2$) <> "" THEN 
       IF LTRIM$ (notiz4$) <> "" THEN 
         IF RIGHT$ (notiz1$,1) <> "*" THEN notiz1$ = notiz1$ + "*"
         IF RIGHT$ (notiz2$,1) <> "*" THEN notiz2$ = notiz2$ + "*"
         IF RIGHT$ (notiz4$,1) <> "*" THEN notiz4$ = notiz4$ + "*"
         IF noder0% = 1 AND noder1% = 1 THEN 
           IF (notiz.GAdrDat$ LIKE notiz1$ OR notiz.GAdrDat$ LIKE "*" + notiz1$) AND (notiz.GAdrDat$ LIKE notiz2$ OR notiz.GAdrDat$ LIKE "*" + notiz2$) AND (notiz.GAdrDat$ LIKE notiz4$ OR notiz.GAdrDat$ LIKE "*" + notiz4$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF noder0% = 1 AND noder1% = 0 THEN 
           IF (notiz.GAdrDat$ LIKE notiz1$ OR notiz.GAdrDat$ LIKE "*" + notiz1$) AND (notiz.GAdrDat$ LIKE notiz2$ OR notiz.GAdrDat$ LIKE "*" + notiz2$) OR (notiz.GAdrDat$ LIKE notiz4$ OR notiz.GAdrDat$ LIKE "*" + notiz4$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF noder0% = 0 AND noder1% = 1 THEN 
           IF (notiz.GAdrDat$ LIKE notiz1$ OR notiz.GAdrDat$ LIKE "*" + notiz1$) OR (notiz.GAdrDat$ LIKE notiz2$ OR notiz.GAdrDat$ LIKE "*" + notiz2$) AND (notiz.GAdrDat$ LIKE notiz4$ OR notiz.GAdrDat$ LIKE "*" + notiz4$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF noder0% = 0 AND noder1% = 0 THEN 
           IF (notiz.GAdrDat$ LIKE notiz1$ OR notiz.GAdrDat$ LIKE "*" + notiz1$) OR (notiz.GAdrDat$ LIKE notiz2$ OR notiz.GAdrDat$ LIKE "*" + notiz2$) OR (notiz.GAdrDat$ LIKE notiz4$ OR notiz.GAdrDat$ LIKE "*" + notiz4$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       ELSE 
         IF RIGHT$ (notiz1$,1) <> "*" THEN notiz1$ = notiz1$ + "*"
         IF RIGHT$ (notiz2$,1) <> "*" THEN notiz2$ = notiz2$ + "*"
         IF noder0% = 1 THEN 
           REM UND
           IF (notiz.GAdrDat$ LIKE notiz1$ OR notiz.GAdrDat$ LIKE "*" + notiz1$) AND (notiz.GAdrDat$ LIKE notiz2$ OR notiz.GAdrDat$ LIKE "*" + notiz2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         ELSE 
           REM ODER
           IF (notiz.GAdrDat$ LIKE notiz1$ OR notiz.GAdrDat$ LIKE "*" + notiz1$) OR (notiz.GAdrDat$ LIKE notiz2$ OR notiz.GAdrDat$ LIKE "*" + notiz2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       END IF 
     ELSE 
       IF RIGHT$ (notiz1$,1) <> "*" THEN notiz1$ = notiz1$ + "*"
         IF notiz.GAdrDat$ LIKE notiz1$ OR notiz.GAdrDat$ LIKE "*" + notiz1$ THEN 
         ELSE 
          adrfound% = 0
       END IF 
     END IF 
   END IF 
 
 
   IF LTRIM$ (Stichwort1$) <> "" THEN 
     s1$ = UCASE$ (Stichwort1$)
     s2$ = UCASE$ (Stichwort2$)
     s3$ = UCASE$ (Stichwort3$)
     IF LTRIM$ (Stichwort2$) <> "" THEN 
       IF LTRIM$ (Stichwort3$) <> "" THEN 
         REM IF RIGHT$ (Stichwort1$,1) <> "*" THEN S1$ = Stichwort1$ + "*"
         REM IF RIGHT$ (Stichwort2$,1) <> "*" THEN S2$ = Stichwort2$ + "*"
         REM IF RIGHT$ (Stichwort3$,1) <> "*" THEN S3$ = Stichwort3$ + "*"
         IF sticho0% = 1 AND sticho1% = 1 THEN 
           REM IF (Stichwort.GAdrDat$ LIKE S1$ OR Stichwort.GAdrDat$ LIKE "*" + S1$) AND (Stichwort.GAdrDat$ LIKE S2$ OR Stichwort.GAdrDat$ LIKE "*" + S2$) AND (Stichwort.GAdrDat$ LIKE S3$ OR Stichwort.GAdrDat$ LIKE "*" + S3$) THEN 
           IF (Stichwort.GAdrDat$ LIKE S1$) AND (Stichwort.GAdrDat$ LIKE S2$) AND (Stichwort.GAdrDat$ LIKE S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF sticho0% = 1 AND sticho1% = 0 THEN 
           REM IF (Stichwort.GAdrDat$ LIKE S1$ OR Stichwort.GAdrDat$ LIKE "*" + S1$) AND (Stichwort.GAdrDat$ LIKE S2$ OR Stichwort.GAdrDat$ LIKE "*" + S2$) OR (Stichwort.GAdrDat$ LIKE S3$ OR Stichwort.GAdrDat$ LIKE "*" + S3$) THEN 
           IF (Stichwort.GAdrDat$ LIKE S1$) AND (Stichwort.GAdrDat$ LIKE S2$) OR (Stichwort.GAdrDat$ LIKE S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF sticho0% = 0 AND sticho1% = 1 THEN 
           REM IF (Stichwort.GAdrDat$ LIKE S1$ OR Stichwort.GAdrDat$ LIKE "*" + S1$) OR (Stichwort.GAdrDat$ LIKE S2$ OR Stichwort.GAdrDat$ LIKE "*" + S2$) AND (Stichwort.GAdrDat$ LIKE S3$ OR Stichwort.GAdrDat$ LIKE "*" + S3$) THEN 
           IF (Stichwort.GAdrDat$ LIKE S1$) OR (Stichwort.GAdrDat$ LIKE S2$) AND (Stichwort.GAdrDat$ LIKE S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF sticho0% = 0 AND sticho1% = 0 THEN 
           REM IF (Stichwort.GAdrDat$ LIKE S1$ OR Stichwort.GAdrDat$ LIKE "*" + S1$) OR (Stichwort.GAdrDat$ LIKE S2$ OR Stichwort.GAdrDat$ LIKE "*" + S2$) OR (Stichwort.GAdrDat$ LIKE S3$ OR Stichwort.GAdrDat$ LIKE "*" + S3$) THEN 
           IF (Stichwort.GAdrDat$ LIKE S1$ OR Stichwort.GAdrDat$ LIKE "*" + S1$) OR (Stichwort.GAdrDat$ LIKE S2$) OR (Stichwort.GAdrDat$ LIKE S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       ELSE 
         REM IF RIGHT$ (Stichwort1$,1) <> "*" THEN S1$ = Stichwort1$ + "*"
         REM IF RIGHT$ (Stichwort2$,1) <> "*" THEN S2$ = Stichwort2$ + "*"
         IF sticho0% = 1 THEN 
           REM UND
           REM IF (Stichwort.GAdrDat$ LIKE S1$ OR Stichwort.GAdrDat$ LIKE "*" + S1$) AND (Stichwort.GAdrDat$ LIKE S2$ OR Stichwort.GAdrDat$ LIKE "*" + S2$) THEN 
           IF (Stichwort.GAdrDat$ LIKE S1$) AND (Stichwort.GAdrDat$ LIKE S2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         ELSE 
           REM ODER
           REM IF (Stichwort.GAdrDat$ LIKE S1$ OR Stichwort.GAdrDat$ LIKE "*" + S1$) OR (Stichwort.GAdrDat$ LIKE S2$ OR Stichwort.GAdrDat$ LIKE "*" + S2$) THEN 
           IF (Stichwort.GAdrDat$ LIKE S1$) OR (Stichwort.GAdrDat$ LIKE S2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
       END IF 
     ELSE 
       REM IF RIGHT$ (Stichwort1$,1) <> "*" THEN S1$ = Stichwort1$ + "*"
       IF Stichwort.GAdrDat$ LIKE S1$ THEN 
       ELSE 
         adrfound% = 0
       END IF 
     END IF 
   END IF 
 
   IF LTRIM$ (ADRStatus1$) <> "" THEN 
     Stern$ = ""
     S1$ = UCASE$ (ADRStatus1$)
     S2$ = UCASE$ (ADRStatus2$)
     S3$ = UCASE$ (ADRStatus3$)
     IF RIGHT$ (ADRStatus1$,1) = "*" OR LEFT$ (ADRStatus1$,1) = "*" THEN Stern$ = "*"
     IF RIGHT$ (ADRStatus2$,1) = "*" OR LEFT$ (ADRStatus2$,1) = "*" THEN Stern$ = "*"
     IF RIGHT$ (ADRStatus3$,1) = "*" OR LEFT$ (ADRStatus3$,1) = "*" THEN Stern$ = "*"
     IF LTRIM$ (ADRStatus2$) <> "" THEN 
       IF LTRIM$ (ADRStatus3$) <> "" THEN 
         REM IF RIGHT$ (ADRStatus1$,1) <> "*" THEN S1$ = ADRStatus1$ + "*"
         REM IF RIGHT$ (ADRStatus2$,1) <> "*" THEN S2$ = ADRStatus2$ + "*"
         REM IF RIGHT$ (ADRStatus3$,1) <> "*" THEN S3$ = ADRStatus3$ + "*"
         IF adro0% = 1 AND adro1% = 1 THEN 
           REM IF (ADRStatus.GAdrDat$ LIKE S1$ OR ADRStatus.GAdrDat$ LIKE "*" + S1$) AND (ADRStatus.GAdrDat$ LIKE S2$ OR ADRStatus.GAdrDat$ LIKE "*" + S2$) AND (ADRStatus.GAdrDat$ LIKE S3$ OR ADRStatus.GAdrDat$ LIKE "*" + S3$) THEN 
           IF (ADRStatus.GAdrDat$ LIKE S1$) AND (ADRStatus.GAdrDat$ LIKE S2$) AND (ADRStatus.GAdrDat$ LIKE S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF adro0% = 1 AND adro1% = 0 THEN 
           REM IF (ADRStatus.GAdrDat$ LIKE S1$ OR ADRStatus.GAdrDat$ LIKE "*" + S1$) AND (ADRStatus.GAdrDat$ LIKE S2$ OR ADRStatus.GAdrDat$ LIKE "*" + S2$) OR (ADRStatus.GAdrDat$ LIKE S3$ OR ADRStatus.GAdrDat$ LIKE "*" + S3$) THEN 
           IF (ADRStatus.GAdrDat$ LIKE S1$) AND (ADRStatus.GAdrDat$ LIKE S2$) OR (ADRStatus.GAdrDat$ LIKE S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF adro0% = 0 AND adro1% = 1 THEN 
           REM IF (ADRStatus.GAdrDat$ LIKE S1$ OR ADRStatus.GAdrDat$ LIKE "*" + S1$) OR (ADRStatus.GAdrDat$ LIKE S2$ OR ADRStatus.GAdrDat$ LIKE "*" + S2$) AND (ADRStatus.GAdrDat$ LIKE S3$ OR ADRStatus.GAdrDat$ LIKE "*" + S3$) THEN 
           IF (ADRStatus.GAdrDat$ LIKE S1$) OR (ADRStatus.GAdrDat$ LIKE S2$) AND (ADRStatus.GAdrDat$ LIKE S3$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         END IF 
         IF adro0% = 0 AND adro1% = 0 THEN 
           REM IF (ADRStatus.GAdrDat$ LIKE S1$ OR ADRStatus.GAdrDat$ LIKE "*" + S1$) OR (ADRStatus.GAdrDat$ LIKE S2$ OR ADRStatus.GAdrDat$ LIKE "*" + S2$) OR (ADRStatus.GAdrDat$ LIKE S3$ OR ADRStatus.GAdrDat$ LIKE "*" + S3$) THEN 
           IF Stern$ = "*" THEN 
             IF (ADRStatus.GAdrDat$ LIKE S1$) OR (ADRStatus.GAdrDat$ LIKE S2$) OR (ADRStatus.GAdrDat$ LIKE S3$) THEN 
             ELSE 
               adrfound% = 0
             END IF 
           ELSE 
             IF (ADRStatus.GAdrDat$ = S1$) OR (ADRStatus.GAdrDat$ = S2$) OR (ADRStatus.GAdrDat$ = S3$) THEN 
             ELSE 
               adrfound% = 0
             END IF 
           END IF 
         END IF 
       ELSE 
         REM IF RIGHT$ (ADRStatus1$,1) <> "*" THEN S1$ = ADRStatus1$ + "*"
         REM IF RIGHT$ (ADRStatus2$,1) <> "*" THEN S2$ = ADRStatus2$ + "*"
         IF adro0% = 1 THEN 
           REM UND
           REM IF (ADRStatus.GAdrDat$ LIKE S1$ OR ADRStatus.GAdrDat$ LIKE "*" + S1$) AND (ADRStatus.GAdrDat$ LIKE S2$ OR ADRStatus.GAdrDat$ LIKE "*" + S2$) THEN 
           IF (ADRStatus.GAdrDat$ LIKE S1$) AND (ADRStatus.GAdrDat$ LIKE S2$) THEN 
           ELSE 
             adrfound% = 0
           END IF 
         ELSE 
           REM ODER
           REM IF (ADRStatus.GAdrDat$ LIKE S1$ OR ADRStatus.GAdrDat$ LIKE "*" + S1$) OR (ADRStatus.GAdrDat$ LIKE S2$ OR ADRStatus.GAdrDat$ LIKE "*" + S2$) THEN 
           IF Stern$ = "*" THEN 
             IF (ADRStatus.GAdrDat$ LIKE S1$) OR (ADRStatus.GAdrDat$ LIKE S2$) THEN 
             ELSE 
               adrfound% = 0
             END IF 
           ELSE 
             IF (ADRStatus.GAdrDat$ = S1$) OR (ADRStatus.GAdrDat$ = S2$) THEN 
             ELSE 
               adrfound% = 0
             END IF 
           END IF 
         END IF 
       END IF 
     ELSE 
         REM IF RIGHT$ (ADRStatus1$,1) <> "*" THEN S1$ = ADRStatus1$ + "*"
         REM IF ADRStatus.GAdrDat$ LIKE S1$ OR ADRStatus.GAdrDat$ LIKE "*" + S1$ THEN 
         IF Stern$ = "*" THEN 
           IF ADRStatus.GAdrDat$ LIKE S1$ THEN 
           ELSE 
            adrfound% = 0
           END IF 
         ELSE 
           IF ADRStatus.GAdrDat$ = S1$ THEN 
           ELSE 
            adrfound% = 0
           END IF 
         END IF 
     END IF 
   END IF 
 
 
 
   IF projektnummer$ <> "" THEN 
     IF kundennummer LIKE projektnummer$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF name1$ <> "" THEN 
     IF QNachname.GAdrDat$ LIKE name1$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
 
   IF name2$ <> "" THEN 
     IF QVorname LIKE name2$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF name3$ <> "" THEN 
     IF QGeburtsname LIKE name3$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF strasse$ <> "" THEN 
     IF Qstra·e LIKE strasse$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF plz$ <> "" THEN 
     IF Qplz LIKE plz$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF ort$ <> "" THEN 
     IF Qort LIKE ort$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF land$ <> "" THEN 
     IF land LIKE land$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF anrede$ <> "" THEN 
     IF anrede LIKE anrede$ + "*" THEN 
     ELSE 
       adrfound% = 0
     END IF 
   END IF 
   IF projektstart$ <> "" THEN 
     IF DateOK%(projektstart$) THEN 
       IF projektstart2$ <> "" THEN 
         IF DateOK%(projektstart2$) THEN 
         ELSE 
           GOTO AnfSuAdr180998
         END IF 
         IF Kunde_seit >= projektstart% AND Kunde_seit <= projektstart2% THEN 
         ELSE 
           adrfound% = 0
         END IF 
       ELSE 
         IF projektstart$ <> "" AND kunde_seit = DAYS (projektstart$) THEN 
         ELSE 
           adrfound% = 0
         END IF 
       END IF 
     ELSE 
       GOTO AnfSuAdr180998
     END IF 
   END IF 
   IF locktest% AND FreeFormular.GadrDat$ < 1 THEN 
     IF Sperre.GAdrDat$ <> 0 AND Sperre.GAdrDat$ <> GMAcodema% THEN adrfound% = 0
   END IF 
   IF GMASuperCount% > 0 THEN 
     IF IsMASuper%(codema.GADRDAT$) <> - 1 THEN adrfound% = 0
   END IF 
   IF GASP% AND Workstation% <> 0 THEN 
     IF IsWksVisible%(Workstation.GADRDat$) <> - 1 THEN adrfound% = 0
   END IF 
   IF adrfound% = 1 THEN 
     codeku% = codeku.GAdrDat$
     REM 141199
     IF GCODIE% = - 1 THEN 
       CALL SearchVorbAdr(GADRDAT$)
       codeku% = Codeku.GADRDAT$
       IF EXISTS (codeku%,codeku.GTelDat$) THEN 
         SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
         CALL SearchVorbTel(GADRDAT$)
       END IF 
     END IF 
     AdrFound1$ = LTRIM$ (nachname)
     IF LTRIM$ (vorname) <> "" THEN AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (vorname)
     IF LTRIM$ (EGNachname) <> "" AND LTRIM$ (EGNACHNAme) <> LTRIM$ (Nachname) THEN AdrFound1$ = AdrFound1$ + ",LAB: " + LTRIM$ (EGNachname) + ", "
     IF LTRIM$ (EGvorname) <> "" THEN AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (EGvorname)
     IF LTRIM$ (K1name) <> "" THEN AdrFound1$ = AdrFound1$ + ", Kind1: " + LTRIM$ (K1name)
     IF LTRIM$ (K2name) <> "" THEN AdrFound1$ = AdrFound1$ + ", Kind2: " + LTRIM$ (K2name)
     IF LTRIM$ (K3name) <> "" THEN AdrFound1$ = AdrFound1$ + ", Kind3: " + LTRIM$ (K3name)
     IF LTRIM$ (K4name) <> "" THEN AdrFound1$ = AdrFound1$ + ", Kind4: " + LTRIM$ (K4name)
     AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (Kundennummer) + "/" + LTRIM$ (ort) + ", " + LTRIM$ (PLZ) + ", " + LTRIM$ (Stra·e) + ", "
     REM FILE "project"
     AdrFound$(a%) = AdrFound1$ + SPACE$ (120) + STR$ (codeku,"000000")
     a% = a% + 1
     IF GCODIE% = - 1 THEN 
       GGGcodeku$ = STR$ (codeku,"000000")
       ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
     END IF 
   ELSE 
     adrfound% = 1
   END IF 
   SET STATUS "Datensatz: " + STR$ (i%,"999999") + " von " + STR$ (j%,"999999") + " durchsucht, gefunden: " + STR$ (a%,"999999")
   SELECT NEXT 
   test$ = Nachname.GAdrDat$
 WEND 
 a% = a% + 1
 tfoundadr% = a%
 AdrFound$(a%) = ""
 IF a% > 0 THEN 

   LAuswahl$ = AdrFound$(0)
   LAuswahl1$(0) = LAuswahl$
   IF _projekt$ LIKE "PROVIS" THEN 
     MENU 3,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
   ELSE 
     MENU 4,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
   END IF 
   IF GCODIE% = - 1 THEN 
     c$ = "aa"
     req3% = CALL ("_SearchShow",c$)
     REM REQUEST c$,"",2
     REM ret% = CALL ("_SearchClose"):rem CALL Fehler("","")
     IF VAL (c$) <> 0 THEN 
       AdrSuche% = VAL (c$)
       adrfound% = VAL (c$)
       codeku1% = VAL (c$)
       knr% = codeku1%
       adrglob% = knr%
       ok% = 0
       SET STATUS "Adressen gefunden..."
       SELECT FORM KEY codeku1% FILE GAdrDat$ INDEX Codeku.GAdrDat$
       SELECT FORM KEY codeku1% FILE GTelDat$ INDEX Codeku.GTelDat$
       SET INDEX INDEX 
       REM CALL Fehler("von suche","")
       CALL ADRFeldnamen()
       FORM 
       MOUSE ON 
     END IF 
     IF req3% = 2 THEN 
       adrser% = 1
       CALL SerieNeu1(GAdrDat$)
       GOTO endadr180998
     END IF 
     IF req3% = 3 THEN 
       REM CALL Fehler("req3% = 3","")
         ja% = - 1
         IF disabled%("ADRDrucken") THEN ja% = 0
         IF req3% = 3 AND ja% = - 1 THEN 
           REM drucken
           ON ERROR GOTO adrdr211020031
           DIM dlg AS Dialog
           DIM control AS DialogControl
adrdr211020031: 
           ON ERROR GOTO ErrorHandler
           Superbase.Dialogs.Add("ADRFilter")
           SET dlg = Superbase.Dialogs.ADRFilter
           dlg.Move(0,0,158,111)
           dlg.Caption = title$
           dlg.FontName = "MS Sans Serif"
           dlg.FontSize = 8
 
           SET control = dlg.Add("DialogFrame2","DialogFrame")
           control.Move(5,7,141,77)
           control.Caption = "Druckoptionen"
 
           SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
           control.Move(11,24,85,10)
           control.Caption = "Alle Angaben drucken"
           control.Bind("KurzLang$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCheckBox2","DialogCheckBox")
           control.Move(11,38,85,11)
           control.Caption = "Termine mitdrucken"
           control.Bind("Terminejn$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCheckBox3","DialogCheckBox")
           control.Move(11,53,115,11)
           control.Caption = "VertrÑge zur Adresse drucken!"
           control.Bind("VertragJN$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCheckBox4","DialogCheckBox")
           control.Move(11,68,105,11)
           control.Caption = "als Telefonliste"
           control.Bind("adrtelefon$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
           control.Move(22,89,48,15)
           control.Default = 1
           control.Caption = "&Weiter"
           control.ReturnValue = 1
 
           SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
           control.Move(74,89,48,15)
           control.Caption = "&Abbruch"
           control.ReturnValue = 0
           control.Cancel = 1
           DIALOG "ADRFilter",req%
           REMOVE DIALOG ALL 
           IF req% = 1 THEN 
             REM jetzt das Array auslesen und in eine Datei speichern
             FILE GADRDat$
             cindex$ = INDEX 
             INDEX codeku.Gadrdat$
             CALL DFile(2,"OFFICE\ADRLEER" + _fpw$)
             FOR xi% = 0 TO a% - 1
               codeku% = VAL ( RIGHT$ (AdrFound$(xi%),6))
               SELECT KEY codeku% FILE GADRDat$ INDEX codeku.GADRDat$
               anrede$ = Anrede.GadrDat$
               titel$ = Titel.GADRDat$
               IF anrede$ LIKE "Herr*" OR anrede$ LIKE "Fr*" OR anrede$ LIKE "Fam*" OR anrede$ LIKE "Ehe*" OR anrede$ LIKE "Kind*" THEN 
                 nachname$ = LTRIM$ (nachname.GAdrDat$)
                 vorname$ = LTRIM$ (vorname.GAdrDat$)
               ELSE 
                 nachname$ = LTRIM$ (nachname.GAdrDat$)
                 vorname$ = LTRIM$ (Geburtsname.GAdrDat$)
               END IF 
               gebdat% = Geburtstag.GAdrDat$
               REM CALL WriteAdrTemp(codeku%,anrede$,titel$,nachname$,vorname$,gebdat%)
               BLANK FILE "ADRLEER"
               a% = CopyRecord%(GADRDat$,"ADRLEER")
               Nachname.adrleer = nachname$
               Vorname.adrleer = Vorname$
               STORE FILE "ADRLEER"
               UNLOCK FILE "ADRLEER"
             NEXT xi%
             REM dann drucken auslîsen
             Wbericht$ = "ADRLEER"
             title2$ = "Adressliste "
             CALL VPEADRGr(Wbericht$,FormatPrint$,title2$,Terminejn$,KurzLang$,"")
             INDEX cindex$
             REMOVE FROM FILE "ADRLEER"
             REM CALL Fehler("","")
           END IF 
         END IF 
     END IF 
   ELSE 
     CREATE DIALOG "ADRLISTE",0,0,440,197,title$,"MS Sans Serif",8
     ADD DIALOG "ADRLISTE",7,5,8,428,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
     ADD DIALOG "ADRLISTE",1,164,174,56,16,1,"&OK",1,1
     ADD DIALOG "ADRLISTE",1,224,174,56,16,0,"&Abbrechen",0,0
     ADD DIALOG "ADRLISTE",1,284,174,56,16,0,"&Serienbrief",3,0
     DIALOG "ADRLISTE",req3%
     MOUSE ON 
     REMOVE DIALOG "ADRLISTE"
     IF req3% = 3 THEN 
       adrser% = 1
       CALL SerieNeu1(GAdrDat$)
       GOTO endadr180998
     END IF 
     IF req3% = 1 THEN 
       adrglob% = a% - 1
       LAuswahl$ = LAuswahl1$(0)
       codeku1% = VAL ( RIGHT$ (LAuswahl$,6))
       REM adrglob% = codeku1%
       adrfound% = VAL ( RIGHT$ (LAuswahl$,6))
       adrglob% = adrfound%
       ok% = 0
       SET STATUS "Adressen gefunden..."
       SELECT FORM KEY codeku1% FILE GAdrDat$ INDEX Codeku.GAdrDat$
       SELECT FORM KEY codeku1% FILE GTelDat$ INDEX Codeku.GTelDat$
       SET INDEX INDEX 
       REM CALL Fehler("","")
       CALL ADRFeldnamen()
       FORM 
       MOUSE ON 
     END IF 
   END IF 
 ELSE 
   CALL Fehler ("Es wurden keine Adressen gefunden, die den angegebenen Kriterien entsprechen!","")
   GOTO AnfSuAdr180998
 END IF 
endadr180998: 
 END SUB 
 



 
 REM Serienbrieferstellung

SUB SerieNeu1(adressen$)
 REM CALL Fehler("Serienbrief","")
 dir$ = DIRECTORY 
 IF OPEN ("adrtemp1") THEN 
   REM CLOSE FILE "ADRTEMP1"
   IF RECCOUNT ("adrtemp1") > 0 THEN REMOVE FROM FILE "adrtemp1"
 ELSE 
   CALL DFile(2,"OFFICE\adrtemp1" + _fpw$)
   IF RECCOUNT ("adrtemp1") > 0 THEN REMOVE FROM FILE "adrtemp1"
 END IF 
 userfile$ = STR$ (CodeMA.supervis,"00000000")
 adrtemp$ = STR$ (CodeMA.supervis,"00000000")
 CALL CreateMailFil1(adrfilt$,adrtemp$)
 REM adressen$ = GAdrDat$
 ansionoff$ = UCASE$ (ReadINI$("SYSTEM","WinWordAnsi"))
 REQUEST "Wollen Sie die öbergabe der Adressen, die fÅr Serienbriefe gesperrt sind","(Adresse/Seite Notiz -> Checkbox) unterdrÅcken?",130,req%
 kw$ = ""
 CALL EMAILAbfrage(kw$)
 IF UCASE$ (ansionoff$) = "ON" THEN 
         a% = 0
         k% = 0
         WHILE AdrFound$(a%) <> ""
           FILE Adressen$
           SELECT FIRST 
          
           IF adressen$ = GAdrDat$ THEN 
             codeku% = VAL ( RIGHT$ (AdrFound$(a%),6))
             SELECT KEY codeku% FILE Adressen$ INDEX codeku.Adressen$
           END IF 
           IF adressen$ = "ADRTEMP" THEN 
             codeadrt% = VAL ( RIGHT$ (AdrFound$(a%),6))
             SELECT KEY codeadrt% FILE Adressen$ INDEX codeadrt.Adressen$
             codeku% = codeku.Adressen$
           END IF 
           IF GEMAILSer% = - 1 THEN 
             ook% = 0
             IF EXISTS (codeku%,codeku.GTelDat$) THEN 
               SELECT FIRST FILE GTelDat$ INDEX codeku.GTelDat$
               SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
               WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku%
                 IF nummer.GTelDat$ LIKE "*@*" THEN 
                   IF GEMAILRAUS$ LIKE "<kein Filter>" THEN 
                     ook% = - 1
                     REM GBCC$(k%,0) = nummer.GTelDat$
                     REM GBCC$(k%,1) = STR$ (codeku%,"000000")
                     k% = k% + 1
                     SELECT LAST FILE GTelDat$ INDEX codeku.GTelDat$
                   ELSE 
                     IF KART2.GTELDAT$ = GEMAILRAUS$ THEN 
                       ook% = - 1
                       REM GBCC$(k%,0) = nummer.GTelDat$
                       REM GBCC$(k%,1) = STR$ (codeku%,"000000")
                       k% = k% + 1
                       SELECT LAST FILE GTelDat$ INDEX codeku.GTelDat$
                     END IF 
                   END IF 
                 ELSE 
                 END IF 
                 SELECT NEXT FILE GTelDat$ INDEX codeku.GTelDat$
               WEND 
             ELSE 
               ook% = 0
             END IF 
             IF ook% = 0 THEN GOTO ser2305200302
           END IF 
           abz% = abz% + 1
           SET STATUS "Anzahl der verarbeiteten Adressen: " + STR$ (abz%,"99999999")
           REM codeku% = codeku.GAdrDat$
           REM 200999
         IF ASerJN = "j" AND req% = 1 THEN 
         ELSE 
           BLANK FILE adrtemp$
           IF adressen$ = GAdrDat$ THEN codeku.adrtemp$ = STR$ (codeku%,"000000")
           IF adressen$ = "ADRTEMP" THEN codeku.adrtemp$ = STR$ (codeku%,"000000")
           Kundennummer.adrtemp$ = FN ansi(Kundennummer.Adressen$)
           Anrede.adrtemp$ = FN ansi(Anrede.Adressen$)
           REM CALL Fehler("SER","")
           Postanschrift.adrtemp$ = FN ansi(Postanschrift.Adressen$)
           PostBriefanrede.adrtemp$ = FN ansi(PostBriefanrede.Adressen$)
           ADRStatus.adrtemp$ = FN ansi(adrstatus.Adressen$)
           ADRGruppe.adrtemp$ = FN ansi(adrgruppe.Adressen$)
           IF anrede.Adressen$ LIKE "Herr*" OR anrede.Adressen$ LIKE "Fr*" OR anrede.Adressen$ LIKE "Fam*" OR anrede.Adressen$ LIKE "Ehe*" OR anrede.Adressen$ LIKE "Kind*" THEN 
             IF adressen$ = GAdrDat$ THEN 
               Name2.adrtemp$ = FN ansi(Nachname.Adressen$)
               Name1.adrtemp$ = FN ansi(Vorname.Adressen$)
               REM Name3.adrtemp = Geburtsname.Adressen$
             ELSE 
               IF adressen$ = "ADRTEMP" THEN 
                 IF gesser% = 1 THEN 
                   Name1.adrtemp$ = FN ansi(name1.Adressen$)
                   zuHaenden.adrtemp$ = FN ansi(zuHaenden.Adressen$)
                 ELSE 
                   Name2.adrtemp$ = FN ansi(name2.Adressen$)
                   Name1.adrtemp$ = FN ansi(name1.Adressen$)
                   IF maser% = 1 THEN zuHaenden.adrtemp$ = FN ansi(zuHaenden.Adressen$)
                 END IF 
               END IF 
             END IF 
           ELSE 
             IF adressen$ = GAdrDat$ THEN 
               Name1.adrtemp$ = FN ansi(Nachname.Adressen$)
               zuHaenden.adrtemp$ = FN ansi(Vorname.Adressen$)
               Name2.adrtemp$ = FN ansi(Geburtsname.Adressen$)
             ELSE 
               IF adressen$ = "ADRTEMP" THEN 
                 Name1.adrtemp$ = FN ansi(name1.Adressen$)
                 zuHaenden.adrtemp$ = FN ansi(zuHaenden.Adressen$)
                 Name2.adrtemp$ = FN ansi(name2.Adressen$)
               END IF 
             END IF 
           END IF 
           IF adressen$ = GAdrDat$ THEN 
             Strasse.adrtemp$ = FN ansi(Stra·e.Adressen$)
           ELSE 
             IF adressen$ = "ADRTEMP" THEN 
               Strasse.adrtemp$ = FN ansi(Strasse.Adressen$)
             END IF 
           END IF 
           PLZ.adrtemp$ = FN ansi(PLZ.Adressen$)
           Ort.adrtemp$ = FN ansi(Ort.Adressen$)
           NationalitÑt.adrtemp$ = FN ansi(NationalitÑt.Adressen$)
           Staatsangehîrig.adrtemp$ = FN ansi(Staatsangehîrig.Adressen$)
           Land.adrtemp$ = FN ansi(Land.Adressen$)
           IF adressen$ = GAdrDat$ THEN 
             Geburtstag.adrtemp$ = DATE$ (Geburtstag.Adressen$,"0d.mm.yyyy")
           ELSE 
             IF adressen$ = "ADRTEMP" THEN 
               Geburtstag.adrtemp$ = Geburtstag.Adressen$
             END IF 
           END IF 
           K1Bank.adrtemp$ = FN ansi(K1Bank.Adressen$)
           K1BLZ.adrtemp$ = FN ansi(K1BLZ.Adressen$)
           K1Konto.adrtemp$ = FN ansi(K1Konto.Adressen$)
           K2Bank.adrtemp$ = FN ansi(K2Bank.Adressen$)
           K2BLZ.adrtemp$ = FN ansi(K2BLZ.Adressen$)
           K2Konto.adrtemp$ = FN ansi(K2Konto.Adressen$)
           IF adressen$ = GAdrDat$ THEN 
             Kunde_seit.adrtemp$ = DATE$ (Kunde_seit.Adressen$,"0d.mm.yyyy")
           ELSE 
             IF adressen$ = "ADRTEMP" THEN 
               Kunde_seit.adrtemp$ = Kunde_seit.Adressen$
             END IF 
           END IF 
           IF adressen$ = GAdrDat$ THEN 
             letzter_Kontakt.adrtemp$ = DATE$ (letzter_Kontakt.Adressen$,"0d.mm.yyyy")
           ELSE 
             IF adressen$ = "ADRTEMP" THEN 
               letzter_Kontakt.adrtemp$ = letzter_Kontakt.Adressen$
             END IF 
           END IF 
           REM Notiz.adrtemp$ = Notiz.Adressen$
           Beruf.adrtemp$ = FN ansi(Beruf.Adressen$)
           Hobbys.adrtemp$ = FN ansi(Hobbys.Adressen$)
           Geschlecht.adrtemp$ = FN ansi(Geschlecht.Adressen$)
           Familienstand.adrtemp$ = FN ansi(Familienstand.Adressen$)
           Briefanrede.adrtemp$ = FN ansi(Briefanrede.Adressen$)
           Postanschrift.adrtemp$ = Postanschrift.Adressen$
           REM Geburtsname.adrtemp = Geburtsname.Adressen$
           feld1$ = "Telart"
           feld2$ = "Telnr"
           feld3$ = "FaxJN"
           codema% = Codema.Adressen$
           REM 061196
           IF _projekt$ LIKE "PROVIS" THEN 
             IF EXISTS (codema%,codema.maadr) THEN 
               FILE "maadr"
               INDEX codema.maadr
               SELECT FIRST 
               SELECT KEY codema% FILE "maadr" INDEX codema.maadr
               Mitarbeiter.adrtemp$ = FN ansi( TRIM$ (nachname.maadr) + ", " + TRIM$ (vorname.maadr))
               IF adressen$ = GAdrDat$ THEN 
                 QuickMaKund.adrtemp$ = FN ansi( TRIM$ (nachname.maadr) + TRIM$ (vorname.maadr) + nachname.Adressen$)
               ELSE 
                 IF adressen$ = "ADRTEMP" THEN 
                   QuickMaKund.adrtemp$ = FN ansi( TRIM$ (nachname.maadr) + TRIM$ (vorname.maadr) + name1.Adressen$)
                 END IF 
               END IF 
             END IF 
           END IF 
           IF EXISTS (codeku%,codeku.GTelDat$) THEN 
             FILE GTelDat$
             INDEX codeku.GTelDat$
             SELECT FIRST 
             SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
             abi% = 0
             WHILE codeku.GTelDat$ = codeku% AND abi% < 20 AND NOT EOF (GTelDat$)
               abi% = abi% + 1
               IF abi% < 10 THEN 
                 feldart$ = feld1$ + STR$ (abi%,"9") + "." + adrtemp$
                 feldnum$ = feld2$ + STR$ (abi%,"9") + "." + adrtemp$
                 feldFax$ = TRIM$ (feld3$ + STR$ (abi%,"9") + "." + adrtemp$)
               ELSE 
                 feldart$ = feld1$ + STR$ (abi%,"99") + "." + adrtemp$
                 feldnum$ = feld2$ + STR$ (abi%,"99") + "." + adrtemp$
                 feldFax$ = TRIM$ (feld3$ + STR$ (abi%,"99") + "." + adrtemp$)
               END IF 
               feldart$$ = FN ansi( LEFT$ (art.GTelDat$,60))
               feldnum$$ = FN ansi( LEFT$ (nummer.GTelDat$,60))
               FeldFax$$ = FonOderFax.GTelDat$
             SELECT NEXT FILE GTelDat$ INDEX codeku.GTelDat$
             WEND 
           END IF 
           FILE adrtemp$
           STORE FILE adrtemp$
         END IF 
         FILE adressen$
         REM SELECT NEXT FILE GAdrDat$
ser2305200302: 
         a% = a% + 1
         WEND 
 ELSE 
         a% = 0
         REM  CALL Fehler("Fehler","")
         ON ERROR GOTO ErrorHandler
         WHILE AdrFound$(a%) <> ""
           FILE Adressen$
           SELECT FIRST 
          
           IF adressen$ = GAdrDat$ THEN 
             codeku% = VAL ( RIGHT$ (AdrFound$(a%),6))
             SELECT KEY codeku% FILE Adressen$ INDEX codeku.Adressen$
           END IF 
           IF adressen$ = "ADRTEMP" THEN 
             codeadrt% = VAL ( RIGHT$ (AdrFound$(a%),6))
             SELECT KEY codeadrt% FILE Adressen$ INDEX codeadrt.Adressen$
             codeku% = codeku.Adressen$
           END IF 
           IF GEMAILSer% = - 1 THEN 
             ook% = 0
             IF EXISTS (codeku%,codeku.GTelDat$) THEN 
               SELECT FIRST FILE GTelDat$ INDEX codeku.GTelDat$
               SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
               WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku%
                 IF nummer.GTelDat$ LIKE "*@*" THEN 
                   IF GEMAILRAUS$ LIKE "<kein Filter>" THEN 
                     ook% = - 1
                     REM GBCC$(k%,0) = nummer.GTelDat$
                     REM GBCC$(k%,1) = STR$ (codeku%,"000000")
                     k% = k% + 1
                     SELECT LAST FILE GTelDat$ INDEX codeku.GTelDat$
                   ELSE 
                     IF KART2.GTELDAT$ = GEMAILRAUS$ THEN 
                       ook% = - 1
                       REM GBCC$(k%,0) = nummer.GTelDat$
                       REM GBCC$(k%,1) = STR$ (codeku%,"000000")
                       k% = k% + 1
                       SELECT LAST FILE GTelDat$ INDEX codeku.GTelDat$
                     END IF 
                   END IF 
                 ELSE 
                 END IF 
                 SELECT NEXT FILE GTelDat$ INDEX codeku.GTelDat$
               WEND 
             ELSE 
               ook% = 0
             END IF 
             IF ook% = 0 THEN GOTO ser2305200303
           END IF 
           abz% = abz% + 1
           SET STATUS "Anzahl der verarbeiteten Adressen: " + STR$ (abz%,"99999999")
           REM codeku% = codeku.GAdrDat$
           REM 200999
         IF ASerJN = "j" AND req% = 1 THEN 
         ELSE 
           BLANK FILE adrtemp$
           codeku.adrtemp$ = STR$ (codeku%,"000000")
           Kundennummer.adrtemp$ = Kundennummer.Adressen$
           Anrede.adrtemp$ = Anrede.Adressen$
           Postanschrift.adrtemp$ = Postanschrift.Adressen$
           PostBriefanrede.adrtemp$ = PostBriefanrede.Adressen$
           ADRStatus.adrtemp$ = adrstatus.Adressen$
           ADRGruppe.adrtemp$ = adrgruppe.Adressen$
           REM CALL Fehler("SER","")
           IF anrede.Adressen$ LIKE "Herr*" OR anrede.Adressen$ LIKE "Fr*" OR anrede.Adressen$ LIKE "Fam*" OR anrede.Adressen$ LIKE "Ehe*" OR anrede.Adressen$ LIKE "Kind*" THEN 
             IF adressen$ = GAdrDat$ THEN 
               Name2.adrtemp$ = Nachname.Adressen$
               Name1.adrtemp$ = Vorname.Adressen$
               REM Name3.adrtemp = Geburtsname.Adressen$
             ELSE 
               IF adressen$ = "ADRTEMP" THEN 
                 IF gesser% = 1 THEN 
                   Name1.adrtemp$ = name1.Adressen$
                   zuHaenden.adrtemp$ = zuHaenden.Adressen$
                 ELSE 
                   Name2.adrtemp$ = name2.Adressen$
                   Name1.adrtemp$ = name1.Adressen$
                   IF maser% = 1 THEN zuHaenden.adrtemp$ = zuHaenden.Adressen$
                 END IF 
               END IF 
             END IF 
           ELSE 
             IF adressen$ = GAdrDat$ THEN 
               REM 261099
               Name1.adrtemp$ = Nachname.Adressen$
               zuHaenden.adrtemp$ = Vorname.Adressen$
               Name2.adrtemp$ = Geburtsname.Adressen$
             ELSE 
               IF adressen$ = "ADRTEMP" THEN 
               REM 261099
                 Name1.adrtemp$ = name1.Adressen$
                 zuHaenden.adrtemp$ = zuHaenden.Adressen$
                 Name2.adrtemp$ = Name2.Adressen$
               END IF 
             END IF 
           END IF 
           IF adressen$ = GAdrDat$ THEN 
             Strasse.adrtemp$ = Stra·e.Adressen$
           ELSE 
             IF adressen$ = "ADRTEMP" THEN 
               Strasse.adrtemp$ = Strasse.Adressen$
             END IF 
           END IF 
           PLZ.adrtemp$ = PLZ.Adressen$
           Ort.adrtemp$ = Ort.Adressen$
           NationalitÑt.adrtemp$ = NationalitÑt.Adressen$
           Staatsangehîrig.adrtemp$ = Staatsangehîrig.Adressen$
           Land.adrtemp$ = Land.Adressen$
           IF adressen$ = GAdrDat$ THEN 
             Geburtstag.adrtemp$ = DATE$ (Geburtstag.Adressen$,"0d.mm.yyyy")
           ELSE 
             IF adressen$ = "ADRTEMP" THEN 
               Geburtstag.adrtemp$ = Geburtstag.Adressen$
             END IF 
           END IF 
           K1Bank.adrtemp$ = K1Bank.Adressen$
           K1BLZ.adrtemp$ = K1BLZ.Adressen$
           K1Konto.adrtemp$ = K1Konto.Adressen$
           K2Bank.adrtemp$ = K2Bank.Adressen$
           K2BLZ.adrtemp$ = K2BLZ.Adressen$
           K2Konto.adrtemp$ = K2Konto.Adressen$
           IF adressen$ = GAdrDat$ THEN 
             Kunde_seit.adrtemp$ = DATE$ (Kunde_seit.Adressen$,"0d.mm.yyyy")
           ELSE 
             IF adressen$ = "ADRTEMP" THEN 
               Kunde_seit.adrtemp$ = Kunde_seit.Adressen$
             END IF 
           END IF 
           IF adressen$ = GAdrDat$ THEN 
             letzter_Kontakt.adrtemp$ = DATE$ (letzter_Kontakt.Adressen$,"0d.mm.yyyy")
           ELSE 
             IF adressen$ = "ADRTEMP" THEN 
               letzter_Kontakt.adrtemp$ = letzter_Kontakt.Adressen$
             END IF 
           END IF 
           REM Notiz.adrtemp$ = Notiz.Adressen$
           Beruf.adrtemp$ = Beruf.Adressen$
           Hobbys.adrtemp$ = LEFT$ (Hobbys.Adressen$,40)
           Geschlecht.adrtemp$ = Geschlecht.Adressen$
           Familienstand.adrtemp$ = Familienstand.Adressen$
           Briefanrede.adrtemp$ = Briefanrede.Adressen$
           REM Geburtsname.adrtemp = Geburtsname.Adressen$
           feld1$ = "Telart"
           feld2$ = "Telnr"
           feld3$ = "FaxJN"
           codema% = Codema.Adressen$
           REM 061196
           IF _projekt$ LIKE "PROVIS" THEN 
             IF EXISTS (codema%,codema.maadr) THEN 
               FILE "maadr"
               INDEX codema.maadr
               SELECT FIRST 
               SELECT KEY codema% FILE "maadr" INDEX codema.maadr
               Mitarbeiter.adrtemp$ = TRIM$ (nachname.maadr) + ", " + TRIM$ (vorname.maadr)
               IF adressen$ = GAdrDat$ THEN 
                 QuickMaKund.adrtemp$ = TRIM$ (nachname.maadr) + TRIM$ (vorname.maadr) + nachname.Adressen$
               ELSE 
                 IF adressen$ = "ADRTEMP" THEN 
                   QuickMaKund.adrtemp$ = TRIM$ (nachname.maadr) + TRIM$ (vorname.maadr) + name1.Adressen$
                 END IF 
               END IF 
             END IF 
           END IF 
           IF EXISTS (codeku%,codeku.GTelDat$) THEN 
             FILE GTelDat$
             INDEX codeku.GTelDat$
             SELECT FIRST 
             SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
             abi% = 0
             WHILE codeku.GTelDat$ = codeku% AND abi% < 20 AND NOT EOF (GTelDat$)
               abi% = abi% + 1
               IF abi% < 10 THEN 
                 feldart$ = feld1$ + STR$ (abi%,"9") + "." + adrtemp$
                 feldnum$ = feld2$ + STR$ (abi%,"9") + "." + adrtemp$
                 feldFax$ = TRIM$ (feld3$ + STR$ (abi%,"9") + "." + adrtemp$)
               ELSE 
                 feldart$ = feld1$ + STR$ (abi%,"99") + "." + adrtemp$
                 feldnum$ = feld2$ + STR$ (abi%,"99") + "." + adrtemp$
                 feldFax$ = TRIM$ (feld3$ + STR$ (abi%,"99") + "." + adrtemp$)
               END IF 
               feldart$$ = LEFT$ (art.GTelDat$,60)
               feldnum$$ = LEFT$ (nummer.GTelDat$,60)
               FeldFax$$ = FonOderFax.GTelDat$
             SELECT NEXT FILE GTelDat$ INDEX codeku.GTelDat$
             WEND 
           END IF 
           FILE adrtemp$
           STORE FILE adrtemp$
         END IF 
         FILE adressen$
         REM SELECT NEXT FILE GAdrDat$
ser2305200303: 
         a% = a% + 1
         WEND 
 
 END IF 
 REM -- Schritt 2 - Adre·liste bearbeiten
 opt% = 0
 IF GEMAILSer% = - 1 THEN 
   IF k% < 1 THEN 
     CALL Fehler("Es wurden keine EMAIL-Nummern gefunden, deshalb kann die Serien-EMAIL nicht erzeugt werden!","")
     req% = 0
     GOTO ser2305200304
   END IF 
 END IF 
 SET STATUS "Mailing - Schritt 2..."
 CREATE DIALOG "MAIL2",0,0,257,136,title$,"MS Sans Serif",8
 ADD DIALOG "MAIL2",9,6,9,22,24,2
 ADD DIALOG "MAIL2",5,36,9,210,10,0,"Mailing - Schritt 2"
 ADD DIALOG "MAIL2",4,36,19,212,5,0,""
 ADD DIALOG "MAIL2",5,36,28,212,10,0,"Die Adre·liste wurde erfolgreich erstellt und geladen."
 ADD DIALOG "MAIL2",5,36,46,212,10,0,"Mîchten Sie die Adre·liste vor der Mailingerstellung bearbeiten?"
 ADD DIALOG "MAIL2",3,47,66,124,11,0,"&Ja",0,opt%
 ADD DIALOG "MAIL2",3,47,79,136,11,0,"&Nein",1,opt%
 ADD DIALOG "MAIL2",4,36,107,212,5,0,""
 ADD DIALOG "MAIL2",1,136,116,55,15,1,"&Weiter >>",1,1
 ADD DIALOG "MAIL2",1,192,116,55,15,0,"&Abbrechen",0,0
 DIALOG "MAIL2",req%
 REMOVE DIALOG "MAIL2"
ser2305200304: 
 IF req% = 0 THEN 
   CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
   adrser% = 0
   maser% = 0
   gesser% = 0
   reser% = 0
   mahnser% = 0
   END SUB 'Procedure verlassen
 END IF 
 IF opt% = 0 THEN 
   REM Adre·liste bearbeiten
   SET STATUS "Adre·liste bearbeiten..."
   ok% = - 1
   Superbase.Dialogs.Add("MAIL2")
   SET dlg = Superbase.Dialogs.MAIL2
   dlg.Move(0,0,425,330):dlg.Caption = "Dialog Title":dlg.FontName = "MS Sans Serif"
   dlg.FontSize = 8:dlg.OnActivate = "MLFillList1"
   SET c = dlg.Add("DialogIcon1","DialogIcon"):c.Move(6,11,22,23):c.Icon = 2
   SET c = dlg.Add("DialogLabel1","DialogLabel"):c.Move(33,11,184,9):c.Caption = "Mailing - Schritt 3 (Adre·liste bearbeiten)"
   SET c = dlg.Add("DialogFrame1","DialogFrame"):c.Move(33,19,183,5):c.Caption = ""
   SET c = dlg.Add("DialogLabel3","DialogLabel"):c.Move(33,28,183,21):c.Caption = "Bitte entfernen Sie in der nachfolgenden Liste die EintrÑge, die nicht im Mailing erscheinen sollen."
   SET c = dlg.Add("adrList","DialogListBox"):c.Move(33,52,320,268):c.Sorted = 1:c.ScrollBars = 2:c.OnDblClick = "MListDel1"
   SET c = dlg.Add("cmDelete","DialogCommandButton"):c.Move(360,83,55,14):c.Caption = "&Entfernen":c.ReturnValue = 0:c.Cancel = 1:c.OnClick = "MListDel1"
   SET c = dlg.Add("cmOK","DialogCommandButton"):c.Move(360,181,55,15):c.Default = 1:c.Caption = "&Weiter":c.ReturnValue = 1
   SET c = dlg.Add("cmCancel","DialogCommandButton"):c.Move(360,200,55,15):c.Caption = "&Abbrechen":c.ReturnValue = 0:c.Cancel = 1
   DIALOG "MAIL2",req%
   REMOVE DIALOG "MAIL2"
   IF req% = 0 THEN 
     CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
     adrser% = 0
     maser% = 0
     gesser% = 0
     reser% = 0
     mahnser% = 0
     END SUB 'Procedure verlassen
   END IF 
 ELSE 
   REM CALL MLFillList1()
 END IF 
 
 IF GEMAILSer% <> - 1 THEN 
   CALL Fehler("Erzeuge Dateien " + GMACodeDir$ + "ADRSER1.DBF und ",GMACodeDir$ + "ADRSER1.XLS fÅr die Serienbrieferstellung!")
 END IF 

   DIRECTORY GMACodeDir$
   tf$ = FILE 
   FILE adrtemp$
   EXPORT FILE adrtemp$ TO GMACodeDir$ + "ADRSER1.DBF" USING "3"
   REM adrser% = 1
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
   Superbase.Converters.SBF.SourceFile = adrtemp$
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = "ADRSER1.XLS"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
   FILE tf$
   DIRECTORY dir$
 END IF 
 CALL MAILAQAkt1(userfile$)
 END SUB 
 
  



 
 ' Adre·liste generieren
 ' ===========================================================================
 ' Zweck:       erzeugt Adre·liste fÅr Mailing
 ' Nutzung:     CALL CreateMailFile(filter$,destfile$)
 '              filter$         = Filterbedingungen
 '              destfile$       = Zieldatei
 ' ===========================================================================
 
SUB CreateMailFil1(filter$,destfile$)
 CALL DFile(2,"OFFICE\" + GTelDat$ + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\" + GConDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 REM CALL Fehler("","")
 cfile$ = FILE 
 SET STATUS "Feldauswahl..."
 MOUSE OFF 
 FILE "adrtemp1"
 filter$ = "LTRIM$(Name1)<>~~"
 IF OPEN (destfile$) THEN CLOSE FILE destfile$
 IF EXISTS (GMACodeDir$ + destfile$ + ".sbf") THEN DELETE GMACodeDir$ + destfile$ + ".*"
 IF EXISTS (GMACodeDir$ + "ADRSER1.dbf") THEN DELETE GMACodeDir$ + "ADRSER1.dbf"
 IF EXISTS (GMACodeDir$ + "ADRSER1.xls") THEN DELETE GMACodeDir$ + "ADRSER1.xls"
 destfile1$ = GMACodeDir$ + destfile$
 SET STATUS "Adre·liste wird generiert..."
 MOUSE OFF 
 REM prolog$ = "SELECT ALL" + tString$ + " REPORT WHERE "
 prolog$ = "SELECT ALL REPORT "
 epilog$ = " ORDER REPORT TO FILE destfile1$"
 befehl$ = prolog$ + epilog$
 EXECUTE befehl$
 OPEN FILE destfile1$
 FILE destfile$
 CREATE INDEX ON codeku 
 CREATE INDEX ON name2 
 SET STATUS "Ausgabe beendet!"
 MOUSE ON 
 FILE cfile$
 MOUSE ON 
 END SUB 
 
 ' Zusatzroutinen fÅr Dialog MAIL3
 ' ===============================
 
SUB MLFillList1()
 MOUSE OFF 
 FILE userfile$
 INDEX NAME2.userfile$
 SELECT FIRST FILE userfile$ INDEX NAME2.userfile$
 WHILE NOT EOF (userfile$)
   IF name1.userfile$ <> "" THEN 
     dlg.adrList.AddItem(Name2.userfile$ + ", " + Name1.userfile$ + ", " + plz.userfile$ + " " + Ort.userfile$ + ", " + Strasse.userfile$ + SPACE$ (160) + CodeKU.userfile$)
     REM dlg.adrList.AddItem(Name2.userfile$ + SPACE$ (160) + CodeKU.userfile$)
   ELSE 
     dlg.adrList.AddItem(Name2.userfile$ + ", " + plz.userfile$ + " " + Ort.userfile$ + ", " + Strasse.userfile$ + SPACE$ (160) + CodeKU.userfile$)
   END IF 
   SELECT NEXT FILE userfile$ INDEX NAME2.userfile$
 WEND 
 MOUSE ON 
 END SUB 
 
SUB MListDel1()
 lidx% = dlg.AdrList.ListIndex
 IF lidx% <> 0 THEN 
   item$ = dlg.adrList.List(lidx%)
   SELECT KEY RIGHT$ (item$,6) LOCK FILE userfile$ INDEX CodeKU
   REQUEST Name1.userfile$ + ", " + Name2.userfile$,"Eintrag lîschen?",130,req%
   IF req% <> 0 THEN 
     dlg.adrList.RemoveItem(lidx%)
     SELECT REMOVE FILE userfile$
   END IF 
 END IF 
 END SUB 
 
 ' Aktualisierung Terminkalender
 ' ===========================================================================
 ' ehemals TERMINAkquiAkt:
 ' noch keine angepa·te ParameterÅbergabe
 
SUB MAILAQAkt1(userfile$)
 opt% = 1
 SET STATUS "Mailing - Schritt 4..."
 CREATE DIALOG "MAIL5",0,0,257,136,title$,"MS Sans Serif",8
 ADD DIALOG "MAIL5",9,6,9,22,24,2
 ADD DIALOG "MAIL5",5,36,9,211,10,0,"Mailing - Schritt 4"
 ADD DIALOG "MAIL5",4,36,19,212,5,0,""
 ADD DIALOG "MAIL5",5,36,28,212,21,0,"Zur Betreuung des Mailings kînnen Sie automatisch EintrÑge in der Termindatei erzeugen lassen."
 ADD DIALOG "MAIL5",5,36,51,212,25,0,"Soll das Programm diese EintrÑge fÅr Sie vornehmen?"
 ADD DIALOG "MAIL5",3,47,76,124,11,0,"&Ja",0,opt%
 ADD DIALOG "MAIL5",3,47,87,136,12,0,"&Nein",1,opt%
 ADD DIALOG "MAIL5",4,36,107,212,5,0,""
 ADD DIALOG "MAIL5",1,136,116,55,15,1,"&Weiter >>",1,1
 ADD DIALOG "MAIL5",1,192,116,55,15,0,"&Abbrechen",0,0
 DIALOG "MAIL5",req%
 REMOVE DIALOG "MAIL5"
 IF opt% = 0 AND req% = 1 THEN 
   cfile$ = FILE 
   FILE "AKTIONEN"
   DIM AKListe$( RECCOUNT ("AKTIONEN"))
   INDEX MemberOf
   SELECT FIRST 
   a% = 0
   _MemberOf$ = "*"
   butofs% = 64
   WHILE NOT EOF ("AKTIONEN")
     IF MemberOf.AKTIONEN LIKE _MemberOf$ + "*" THEN 
       IF LEN (_MemberOf$) < 6 THEN 
         space% = LEN (MemberOf) - 6
       ELSE 
         space% = LEN (MemberOf) - LEN (_memberOf$)
       END IF 
       AKListe$(a%) = SPACE$ (space%) + Bezeichnung + SPACE$ (150) + STR$ (CodeAK,"000000")
       a% = a% + 1
     END IF 
     SELECT NEXT 
   WEND 
   SET STATUS "Mailing - Schritt 5..."
   CREATE DIALOG "MAIL6",0,0,257,136,title$,"MS Sans Serif",8
   ADD DIALOG "MAIL6",9,6,9,22,24,2
   ADD DIALOG "MAIL6",5,36,9,211,10,0,"Mailing - Schritt 5"
   ADD DIALOG "MAIL6",4,36,19,212,5,0,""
   ADD DIALOG "MAIL6",5,36,28,212,16,0,"Bitte wÑhlen Sie eine der vorhandenen Aktionen aus, die dem Mailing zugeordnet werden soll."
   ADD DIALOG "MAIL6",7,36,50,211,57,0,2,AKListe$,Auswahl$,AKListe$(0)
   ADD DIALOG "MAIL6",4,36,107,212,5,0,""
   ADD DIALOG "MAIL6",1,136,116,55,15,1,"&Weiter >>",1,1
   ADD DIALOG "MAIL6",1,192,116,55,15,0,"&Abbrechen",0,0
   DIALOG "MAIL6",req%
   REMOVE DIALOG "MAIL6"
   IF req% = 0 THEN 
     CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
     END SUB 'Procedure verlassen
   END IF 
   _vak% = VAL ( RIGHT$ (Auswahl$(0),6))
 
   FILE "SUPERVIS"
   DIM MAListe$( RECCOUNT ("SUPERVIS"))
   INDEX Nachname
   SELECT FIRST 
   a% = 0
   WHILE NOT EOF ("SUPERVIS")
     MAListe$(a%) = Nachname + ", " + Vorname + SPACE$ (150) + STR$ (CodeMA,"000000")
     a% = a% + 1
     SELECT NEXT 
   WEND 
   SET STATUS "Mailing - Schritt 6..."
   CREATE DIALOG "MAIL7",0,0,257,136,title$,"MS Sans Serif",8
   ADD DIALOG "MAIL7",9,6,9,22,24,2
   ADD DIALOG "MAIL7",5,36,9,211,10,0,"Mailing - Schritt 6"
   ADD DIALOG "MAIL7",4,36,19,212,5,0,""
   ADD DIALOG "MAIL7",5,36,28,212,16,0,"Bitte wÑhlen Sie einen Mitarbeiter aus, dem das Mailing zugeordnet werden soll."
   ADD DIALOG "MAIL7",7,36,50,211,57,0,2,MAListe$,Auswahl$,MAListe$(0)
   ADD DIALOG "MAIL7",4,36,107,212,5,0,""
   ADD DIALOG "MAIL7",1,136,116,55,15,1,"&Weiter >>",1,1
   ADD DIALOG "MAIL7",1,192,116,55,15,0,"&Abbrechen",0,0
   DIALOG "MAIL7",req%
   REMOVE DIALOG "MAIL7"
   IF req% = 0 THEN 
     CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
     END SUB 'Procedure verlassen
   END IF 
   _vma% = VAL ( RIGHT$ (Auswahl$(0),6))
 
   SET STATUS "Mailing - Schritt 7..."
   CREATE DIALOG "MAIL8",0,0,257,146,title$,"MS Sans Serif",8
   ADD DIALOG "MAIL8",9,6,9,22,24,2
   ADD DIALOG "MAIL8",5,36,9,211,10,0,"Mailing - Schritt 7"
   ADD DIALOG "MAIL8",4,36,19,212,5,0,""
   ADD DIALOG "MAIL8",5,36,28,212,16,0,"Bitte geben Sie einen Termin und einen Text fÅr die Kennzeichnung in der Termindatei ein."
   ADD DIALOG "MAIL8",5,36,48,26,12,0,"Datum:"
   ADD DIALOG "MAIL8",6,64,46,47,12,0,0,datum$,10
   ADD DIALOG "MAIL8",5,36,62,22,12,0,"Notiz:"
   ADD DIALOG "MAIL8",6,64,60,184,47,4,0,notiztext$,500
   ADD DIALOG "Mail8",2,64,114,121,13,0,"Termin erledigt",1,0,opt1%
   ADD DIALOG "MAIL8",4,36,107,212,5,0,""
   ADD DIALOG "MAIL8",1,136,126,55,15,1,"&Weiter >>",1,1
   ADD DIALOG "MAIL8",1,192,126,55,15,0,"&Abbrechen",0,0
   DIALOG "MAIL8",req%
   REMOVE DIALOG "MAIL8"
   IF req% = 0 THEN 
     CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
     END SUB 'Procedure verlassen
   END IF 
   FILE userfile$
   INDEX codeku.userfile$
   SELECT FIRST 
   MOUSE OFF 
   SET STATUS "Termindatei wird aktualisiert..."
   tmpdok% = SER (GDokDat$,1) + 1
   REDIM ASerie25%( RECCOUNT (userfile$))
   ic% = 0
   WHILE NOT EOF (userfile$)
     FILE GAkquiDat$
     BLANK 
     codeaq.GAkquiDat$ = SER (GAkquiDat$,1)
     codeKU.GAkquiDat$ = VAL (CodeKU.userfile$)
     CodeAK.GAkquiDat$ = _vak%
     CodeMA.GAkquiDat$ = _vma%
     SELECT KEY VAL (codeku.userfile$) FILE GAdrDat$ INDEX codeku.GAdrDat$
     SET STATUS "Termindatei wird aktualisiert (" + nachname.GAdrDat$ + ")..."
     REM 17042001
     nachname.GAkquiDat$ = LEFT$ ( TRIM$ (nachname.GAdrDat$) + "," + TRIM$ (vorname.GadrDat$),100)
     Wertung.GAkquiDat$ = 0
     Datum.GAkquiDat$ = TODAY 
     CodeDOK.GAkquiDat$ = tmpdok%
     cuaq% = codeaq.GAkquiDat$
     SELECT KEY codema.GAkquiDat$ FILE "supervis" INDEX codema.supervis

     Bearbeiter.GAkquiDat$ = nachname.supervis
     notiz.GAkquiDat$ = notiztext$
     termin.GAkquiDat$ = datum$
     IF opt1% = 0 THEN 
       erledigt_Termin.GAkquiDat$ = "n"
     ELSE 
       erledigt_Termin.GAkquiDat$ = "j"
     END IF 
     TerminNr.GAkquiDat$ = AnzTermine.supervis + 1
     GErledTermin$ = erledigt_Termin.GAkquiDat$
     CALL QuickStore(GAkquiDat$)
     SELECT FIRST FILE "Supervis" INDEX codema.supervis
     SELECT KEY _vma% LOCK FILE "Supervis" INDEX codema.supervis
     AnzTermine.supervis = AnzTermine.supervis + 1
     IF erledigt_Termin.GAkquiDat$ <> "j" THEN 
       AnzTermineUnerl.supervis = AnzTermineUnerl.supervis + 1
     ELSE 
       AnzTermineErl.supervis = AnzTermineerl.supervis + 1
     END IF 
     CALL QuickStore("supervis")
     ASerie25%(ic%) = codeaq.GAkquiDat$
     ic% = ic% + 1
     UNLOCK CURRENT FILE "supervis"
     SELECT NEXT FILE userfile$
   WEND 
 END IF 
 MOUSE ON 
 SET STATUS "Mailing - letzter Schritt..."
 CREATE DIALOG "MAIL9",0,0,257,136,title$,"MS Sans Serif",8
 ADD DIALOG "MAIL9",9,6,9,22,24,2
 ADD DIALOG "MAIL9",5,36,9,211,10,0,"Mailing - letzter Schritt"
 ADD DIALOG "MAIL9",4,36,19,212,5,0,""
 ADD DIALOG "MAIL9",5,36,27,212,10,0,"Die Vorbereitung des Mailings ist abgeschlossen."
 ADD DIALOG "MAIL9",5,36,38,210,38,0,"Nachfolgend wird die Textverarbeitung aufgerufen, mit deren Serienbrieffunktion das Mailing fertigstellt werden kann."
 ADD DIALOG "MAIL9",4,36,107,212,5,0,""
 ADD DIALOG "MAIL9",1,136,116,55,15,1,"&Weiter >>",1,1
 ADD DIALOG "MAIL9",1,192,116,55,15,0,"&Abbrechen",0,0
 DIALOG "MAIL9",req%
 REMOVE DIALOG "MAIL9"
 IF req% = 0 THEN 
   CALL Fehler("Die Mailingerstellung wurde abgebrochen!","")
   adrser% = 0
   maser% = 0
   gesser% = 0
   reser% = 0
   mahnser% = 0
   END SUB 'Procedure verlassen
 END IF 
 SET STATUS "Aufruf der Textverarbeitung/EMAIL Verarbeitung..."
 REM ****************************************
 IF GEMAIL% = - 1 AND GEMAILSer% = - 1 THEN 
   CALL SerienEMAIL()
 ELSE 
   CALL DOKUMENT("allgemeine Schreiben",0)
 END IF 
 REM GEMAILSer% = 0
 SET STATUS "Bereit"
 END SUB 
 
 
  
SUB AdrHist()
   REM CALL Fehler("ADRHIS","")
 _formend% = 0
 SET STATUS "Bereit"
 ON ERROR GOTO ErrorHandler
 WHILE _formend% = 0
   ON ERROR GOTO ErrorHandler
   SUPERVISsub% = 0
   IF FORM <> "ADRHIS" THEN 
     SET HEADING title$ + " - Adress-Such-Historie"
     OPEN FORM GOFFFORM$ + "\ADRHIS"
     SET f = Superbase.Form
     SET STATUS "Adress-Such-Historie"
     FILE "SUPERVIS"
     INDEX codema.supervis
     SELECT FIRST FILE "supervis" INDEX codema.supervis
     SELECT FORM KEY GMACodeMA% FILE "supervis" INDEX codema.supervis
     FILE "ADRHIS"
     INDEX QCodeMAkey.adrhis
     SELECT FIRST FILE "ADRHIS" INDEX QCodeMAkey.adrhis
     QCodeMAkey$ = STR$ (GMACodeMA%,"000000") + "000000"
     SELECT FORM KEY QCodeMAkey$ INDEX QCodeMAkey.adrhis
     GAppName$ = _netpath$ + "DOCP\adressen.pdf"
     
     CALL MNADRHIS()
     FORM 
   END IF 
   MENU ON 
   MOUSE ON 
   waehr$ = "FirmenwÑhrung: " + waehrung.stamm
   FORM 
   CALL ClearKBDBuffer()
   MENU ON 
   WAIT MOUSE OR KEY OR MENU 
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     REM CALL SVPrev()
   CASE CrsRight%,PgDn%
     REM CALL SVNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   CALL ClearKBDBuffer()
   SELECT CASE SUPERVISsub%
   CASE 1
     REM Auswahl einer Adresse
     knr% = codeku.adrhis
     _formend% = 1
   CASE 2
     REM Abbruch
     MOUSE ON 
     _formend% = 1
 END SELECT 
 WEND 
 
 _formend% = 0
 END SUB 
 
SUB MNADRHIS()
 MENU CLEAR 
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
 END SUB 
 



 REM 08092003 Adress-Such-Historie lîschen
SUB LoeAdressHist()
 CALL DFile(2,"OFFICE\" + "ADRHIS" + _fpw$)
 opt% = 2
 von% = 30
anfloe090920031: 
 CREATE DIALOG "Konto1",0,0,221,165,"Lîschen der eigenen Adress-Such-Historie","MS Sans Serif",8
 ADD DIALOG "Konto1",9,6,7,24,22,2
 ADD DIALOG "Konto1",5,34,8,170,9,0,"Lîschen:"
 ADD DIALOG "Konto1",4,34,14,176,5,0,""
 ADD DIALOG "Konto1",5,34,22,175,16,0,"Sie haben jetzt die Mîglichkeit die gesamte Adress-Such-Historie zu lîschen oder"
 ADD DIALOG "Konto1",5,34,40,175,32,0,"zu sagen, dass sie NUR die Historie der letzten xy Tage aufheben mîchten!"
 ADD DIALOG "Konto1",3,34,64,153,10,0,"komplette Historie lîschen",1,opt%
 ADD DIALOG "Konto1",3,34,80,153,10,0,"xy Tage aufheben",2,opt%
 ADD DIALOG "Konto1",5,34,100,60,10,0,"xy Tage aufheben"
 ADD DIALOG "Konto1",6,100,99,15,11,0,0,von%,2
 ADD DIALOG "Konto1",1,50,144,55,15,1,"&Weiter",1,1
 ADD DIALOG "Konto1",1,110,144,55,15,0,"&Abbruch",0,0
 DIALOG "Konto1",req%
 REMOVE DIALOG "Konto1"
 IF req% = 1 THEN 
   IF opt% = 2 AND von% < 1 THEN 
     CALL Fehler ("Sie mÅssen bei xy einen Wert grî·er Null eintragen!","")
     GOTO anfloe090920031
   END IF 
   IF opt% = 1 THEN 
     REM alle lîschen
     REQUEST "Komplette Adress-Such-Historie lîschen?","",130,reqloe%
     IF reqloe% = 1 THEN 
       MOUSE OFF 
       REMOVE FROM FILE "ADRHIS" WHERE codema.adrhis = GMACodeMA%
       MOUSE ON 
       REQUEST "Adress-Such-Historie wurde gelîscht!",""
     END IF 
   END IF 
   IF opt% = 2 THEN 
     REM bis zu einem bestimmten Datum lîschen
     REQUEST "Adress-Such-Historie lîschen au·er den letzten " + LTRIM$ ( STR$ (von%,"99")),"Tagen",130,reqloe%
     IF reqloe% = 1 THEN 
       MOUSE OFF 
       test% = ( DAYS ( TODAY ) - von%)
       tag$ = LEFT$ ( DATE$ (test%,"0dmmyyyy"),2)
       monat$ = LEFT$ ( DATE$ (test%,"mm.0d.yyyy"),2)
       jahr$ = LEFT$ ( DATE$ (test%,"yy.mm.0d"),2)
       dat1$ = jahr$ + monat$ + tag$ + "0000"
       test1% = VAL (dat1$)
       NUMBASE "0000000000."
       dat1$ = DATE$ (test%,"yymmdd") + "9999"
       test1% = VAL (dat1$)
       REMOVE FROM FILE "ADRHIS" WHERE codema.adrhis = GMACodeMA% AND timestamp.adrhis < test1%
       MOUSE ON 
       REQUEST "Adress-Such-Historie wurde bis auf die letzten " + LTRIM$ ( STR$ (von%,"99")),"Tage gelîscht!"
     END IF 
   END IF 
 END IF 
 END SUB 


SUB CODieAPPINI()
 a% = CALL ("ShellExecute",0,"open","codieapp.ini","","",1)
 END SUB 








FUNCTION GetSupervis%(codemaorg%)
 FILE "Supervis"
 INDEX nachname.supervis
 SELECT FIRST FILE "Supervis" INDEX nachname.supervis
 DIM Agenturen$( RECCOUNT ("SUPERVIS") + 1)
 REM IF workstation% = 0 THEN 
   REM Agenturen$(0) = "<alle Mitarbeiter>" + SPACE$ (80) + "000000"
   a% = 0
 REM ELSE 
   REM a% = 0
 REM END IF 
 IF gasp% <> - 1 OR workstation% = 0 THEN 
   WHILE NOT EOF ("Supervis")
     aaaa$ = Nachname.supervis + "," + Vorname.supervis
     IF LEN (aaaa$) > 1 THEN 
       Agenturen$(a%) = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
       a% = a% + 1
     END IF 
     SELECT NEXT FILE "supervis"
   WEND 
 END IF 
 IF gasp% THEN 
   WHILE NOT EOF ("supervis")
    IF LTRIM$ (name.supervis) <> "" THEN 
     IF codema.supervis = 44 THEN 
       REM CALL Fehler(nachname.supervis + "/" + vorname.supervis, STR$ (workstation.supervis,"000000"))
     END IF 
     REM MALIST2$(b%) = name.supervis
     REM MALIST2%(b%) = codema.supervis
     b% = b% + 1
     REM CALL Fehler("","")
     IF GASP% THEN 
       wks% = Workstation%
       FOR ii% = 0 TO VisCount% - 1' Fall externes BÅro
         wks% = VisOff%(ii%)
         aa% = IsWksVisible%(wks%)
         na123$ = name.supervis
         REM CALL Fehler(na123$,"")
         IF aa% = - 1 AND Workstation.supervis = wks% THEN 
           sok% = - 1
           ii% = VisCount%
         ELSE 
           sok% = 0
         END IF 
       NEXT ii%
       joo% = - 1
       REM IF GMASuperCount% > 0 THEN 
         REM joo% = IsMASuper%(codema.supervis)
       REM END IF 
       IF sok% AND joo% THEN 
         aaaa$ = Nachname.supervis + "," + Vorname.supervis
         IF LEN (aaaa$) > 1 THEN 
           Agenturen$(a%) = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
           REM MALIST%(a%) = codema.supervis
           a% = a% + 1
         END IF 
       END IF 
     ELSE 
       IF ag$ <> "j" THEN 
         ON ERROR GOTO w261020021
         IF ZugSperr.supervis <> "j" THEN 
           IF GMASuperCount% > 0 THEN 
             IF IsMASuper%(codema.supervis) THEN 
               aaaa$ = Nachname.supervis + "," + Vorname.supervis
               IF LEN (aaaa$) > 1 THEN 
                 Agenturen$(a%) = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
                 a% = a% + 1
               END IF 
             END IF 
           ELSE 
             aaaa$ = Nachname.supervis + "," + Vorname.supervis
             IF LEN (aaaa$) > 1 THEN 
               Agenturen$(a%) = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
               a% = a% + 1
             END IF 
           END IF 
         END IF 
       ELSE 
w261020021: 
         REM MALIST$(a%) = name.supervis
         REM MALIST%(a%) = codema.supervis
         IF GMASuperCount% > 0 THEN 
           IF IsMASuper%(codema.supervis) THEN 
             aaaa$ = Nachname.supervis + "," + Vorname.supervis
             IF LEN (aaaa$) > 1 THEN 
               Agenturen$(a%) = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
               a% = a% + 1
             END IF 
           END IF 
         ELSE 
           aaaa$ = Nachname.supervis + "," + Vorname.supervis
           IF LEN (aaaa$) > 1 THEN 
             Agenturen$(a%) = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
             a% = a% + 1
           END IF 
         END IF 
       END IF 
     END IF 
   END IF 
   SELECT NEXT FILE "supervis" INDEX nachname.supervis
  WEND 
 END IF 
 SELECT FIRST FILE "supervis" INDEX codema.supervis
 SELECT KEY codemaorg% FILE "Supervis" INDEX codema.supervis
 prompt$ = Nachname.supervis + "," + Vorname.supervis + SPACE$ (80) + STR$ (codema.supervis,"000000")
 
 CREATE DIALOG "MASUCH",0,0,220,308,"MitarbeiterÅbersicht","MS Sans Serif",8
 ADD DIALOG "MASUCH",4,0,0,220,285,0,""
 ADD DIALOG "MASUCH",9,9,11,21,21,2
 ADD DIALOG "MASUCH",5,37,11,151,10,0,"Bitte wÑhlen Sie einen Mitarbeiter aus:"
 ADD DIALOG "MASUCH",7,7,27,205,259,2,2,Agenturen$,Auswahl$,prompt$
 ADD DIALOG "MASUCH",1,46,288,55,15,1,"&OK",1,1
 ADD DIALOG "MASUCH",1,103,288,55,15,0,"&Abbrechen",0,0
 MOUSE ON 
 DIALOG "MASUCH",req%
 REMOVE DIALOG "MASUCH"
 GetSupervis% = 0
 IF req% = 1 THEN 
   GetSupervis% = VAL ( RIGHT$ (Auswahl$(0),6))
 END IF 
 
 END FUNCTION 
 
FUNCTION GetDateiendung$(iniPath$)
 GetDateiendung$ = ""
       lenge% = LEN (iniPath$)
       j% = 0
       FOR i% = lenge% TO 1 STEP - 1
         punkt$ = MID$ (inipath$,i%,1)
         IF punkt$ = "." THEN 
           j% = lenge% - i%
           GetDateiendung$ = MID$ (inipath$,i% + 1,j%)
           i% = 0
         END IF 
       NEXT i%
 END FUNCTION 
 
FUNCTION GetDateiName$(inipath$)
       GetDateiName$ = ""
       lenge% = LEN (inipath$)
       IF lenge% > 0 THEN 
         d1$ = inipath$
w280920101: 
         pos% = INSTR (d1$,"\")
         IF pos% > 0 THEN 
           d2$ = MID$ (d1$,pos% + 1)
           d1$ = d2$
           GOTO w280920101
         END IF 
         REM dokname$ = "IMP-" + FN ansi(d1$)
         dokname$ = "IMP-" + FN ibm(d1$)
         GetDateiName$ = VSNRPackGK$(dokname$)
       END IF 
 END FUNCTION 


FUNCTION GetDateiendPkt%(iniPath$)
 GetDateiendPkt% = 0
       lenge% = LEN (iniPath$)
       j% = 0
       FOR i% = lenge% TO 1 STEP - 1
         punkt$ = MID$ (inipath$,i%,1)
         IF punkt$ = "." THEN 
           j% = i%
           GetDateiendPkt% = j%
           i% = 0
         END IF 
       NEXT i%
 END FUNCTION 
 
 
FUNCTION VSNRPackGK$(Betreff$)
 tVSNR$ = ""
 vsnr$ = Betreff$
 FOR a% = 1 TO LEN (VSNR$)
   tC$ = MID$ (VSNR$,a%,1)
   REM IF tC$ = "·" THEN tC$ = "ss"
         x% = ASC ( LEFT$ (tC$,1))
         SELECT CASE x%
           CASE 225
             tC$ = "ss"
           CASE 129
             tC$ = "ue"
           CASE 132
             tC$ = "ae"
           CASE 148
             tC$ = "oe"
           CASE 142
             tC$ = "AE"
           CASE 153
             tC$ = "OE"
           CASE 154
             tC$ = "UE"
         END SELECT 
     tVSNR$ = tVSNR$ + tC$
 NEXT a%
 VSNRPackGK$ = tVSNR$
 END FUNCTION 
  

