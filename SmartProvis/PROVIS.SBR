 ' _EncryptString
 ' ? STR$ ( ASC ("C") + 47,"000")
 ' ? CHR$ ( ASC ("C") + 47)->r
 '  ? CHR$ ( ASC ("s") - 47)->C
 ' http://netzreport.googlepages.com/online_umwandler_rot_5_13_18_47.html
 '  Provisionsabrechnungssystem
 '  Copyright (c) 1992-2010 CODie software products e.K.
 '  Version 2009 B-01  21.04.2009
 '  ACHTUNG alle Optionen bei Tarife wieder einschalten, GPKCO$ fÅr KrÅll TRUE setzen
 '  AgentDetail=TRUE setzen
 '  Antragswiderruf
 '  Policenwiderspruch
 ' =============================================================================== 
 ' ===============================================================================
   
SUB main()
 REM       ı319706bv
 CLOSE ALL 
 ERASE 
 CLEAR 
 CLEAR GLOBAL 
 IF NOT PROGRAMFILE ("PROVCLIB") THEN LOAD "PROVCLIB.SBR", NEW 
 
 REM IF NOT PROGRAMFILE ("FPB") THEN LOAD "FPB.SBP", NEW 
 REM CALL LIBInit("PROVIS","SmartPROVIS Agentur",1,43)' Agentur mit Euro 
 CALL LIBInit("PROVIS","SmartPROVIS",1,61)' PROVISMakler
 REM CALL LIBInit("PROVIS","SmartPROVIS Classic",1,62)' PROVISClassik+
 REM CALL LIBInit("PROVIS","SmartPROVIS online.center ASP",1,80)' PROVISASP
 
 IF GASP% THEN 
   SET DISPLAY 0
   'J an neu: -----------------
   GLOBAL jaPPCSPath$
   REM CALL Fehler(_netpath$,_remotepath$)
   REM jaPPCSPath$ = "c:\ppcsabgl\"
   jaPPCSPath$ = _netpath$
   'IF NOT PROGRAMFILE ("HIERA") THEN LOAD jaPPCSPath$ + "Hiera\hiera.sbp", NEW 
   IF NOT PROGRAMFILE ("ASPPROV") THEN LOAD jaPPCSPath$ + "ASPPROV.sbp", NEW 
   IF NOT PROGRAMFILE ("ASPPARA") THEN LOAD jaPPCSPath$ + "ASPPARA.sbp", NEW 
   'Jan ende -----------------  
 END IF 
 _fpw$ = ";paris"
 _help% = 0
 _debug% = 0
 REM CALL Fehler("","")
 CALL INIT()
 MOUSE OFF 
 FOR m% = 0 TO 11
   monate$(m%) = MONTH$ ("1." + STR$ (m% + 1,"00") + ".92")
 NEXT m%
 IF test% = 0 THEN SET REQUEST 134 BELL 1824
 REM -- automatische Erzeugung der Dokumentengruppen fÅr
 REM -- SmartPROVIS zugefÅgt 13.09.95   
 DOKKundFound% = 0
 DOKGesFound% = 0
 DOKMAFOUND % = 0
 a% = 0
 DOKGruppen$(0) = "allgemeine Schreiben"
 WHILE DOKGruppen$(a%) <> "leer"
   a% = a% + 1
   DOKGruppen$(a%) = FN ibm(ReadConfig$("Dokumentengruppen","Gruppe" + LTRIM$ ( STR$ (a%,"999999"))))
   IF DOKGruppen$(a%) LIKE "Dokumente an Kunden*" THEN DOKKundFound% = - 1
   IF DOKGruppen$(a%) LIKE "Dokumente an Gesellschaften*" THEN DOKGesFound% = - 1
   IF DOKGruppen$(a%) LIKE "Dokumente an Mitarbeiter*" THEN DOKMAFOUND% = - 1
 WEND 
 
 REM CALL Fehler("Art","")
 
 IF _projekt$ LIKE "*provis*" THEN 
   net$ = MID$ (_netpath$,3, LEN (_netpath$) - 2)
   IF NOT DOKKundFound% THEN 
     CALL WriteConfig("Dokumentengruppen","Gruppe" + LTRIM$ ( STR$ (a%,"999")),"Dokumente an Kunden")
     CALL WriteConfig("Vorlagen","Dokumente an Kunden","VorlageK.doc")
     CALL WriteConfig("Dokumente","Dokumente an Kunden",net$ + "PROVIS\TEXT\")
     a% = a% + 1
   ELSE 
     lese$ = FN ibm(ReadConfig$("Vorlagen","Dokumente an Kunden"))
     IF lese$ LIKE "leer" THEN 
       CALL WriteConfig("Vorlagen","Dokumente an Kunden","VorlageK.doc")
     END IF 
     lese$ = FN ibm(ReadConfig$("Dokumente","Dokumente an Kunden"))
     IF lese$ LIKE "leer" THEN 
       CALL WriteConfig("Dokumente","Dokumente an Kunden",net$ + "PROVIS\TEXT\")
     END IF 
   END IF 
   IF NOT DOKGesFound% THEN 
     CALL WriteConfig("Dokumentengruppen","Gruppe" + LTRIM$ ( STR$ (a%,"999")),"Dokumente an Gesellschaften")
     CALL WriteConfig("Vorlagen","Dokumente an Gesellschaften","VorlageG.doc")
     CALL WriteConfig("Dokumente","Dokumente an Gesellschaften",net$ + "PROVIS\TEXT\")
     a% = a% + 1
   ELSE 
     lese$ = FN ibm(ReadConfig$("Vorlagen","Dokumente an Gesellschaften"))
     IF lese$ LIKE "leer" THEN 
       CALL WriteConfig("Vorlagen","Dokumente an Gesellschaften","VorlageG.doc")
     END IF 
     lese$ = FN ibm(ReadConfig$("Dokumente","Dokumente an Gesellschaften"))
     IF lese$ LIKE "leer" THEN 
       CALL WriteConfig("Dokumente","Dokumente an Gesellschaften",net$ + "PROVIS\TEXT\")
     END IF 
   END IF 
   IF NOT DOKMAFOUND% THEN 
     CALL WriteConfig("Dokumentengruppen","Gruppe" + LTRIM$ ( STR$ (a%,"999")),"Dokumente an Mitarbeiter")
     CALL WriteConfig("Vorlagen","Dokumente an Mitarbeiter","VorlageM.doc")
     CALL WriteConfig("Dokumente","Dokumente an Mitarbeiter",net$ + "PROVIS\TEXT\")
     a% = a% + 1
   ELSE 
     lese$ = FN ibm(ReadConfig$("Vorlagen","Dokumente an Mitarbeiter"))
     IF lese$ LIKE "leer" THEN 
       CALL WriteConfig("Vorlagen","Dokumente an Mitarbeiter","VorlageM.doc")
     END IF 
     lese$ = FN ibm(ReadConfig$("Dokumente","Dokumente an Mitarbeiter"))
     IF lese$ LIKE "leer" THEN 
       CALL WriteConfig("Dokumente","Dokumente an Mitarbeiter",net$ + "PROVIS\TEXT\")
     END IF 
   END IF 
 
 END IF 
 DOKGruppen$(a%) = ""
 REM CALL Fehler("xxx","")





 a% = 0
 DOKGruppenMA$(0) = "Mitarbeiterdokument"
 WHILE DOKGruppenMA$(a%) <> "leer"
   a% = a% + 1
   DOKGruppenMA$(a%) = FN ibm(ReadConfig$("DokumentengruppenMA","Gruppe" + LTRIM$ ( STR$ (a%,"999999"))))
 WEND 
 DOKGruppenMA$(a%) = ""
 
 
 
 a% = 0
 ber$ = ""
 BERICHTE$(0) = "adrlist"
 BERNAME$(0) = "Adre·liste ohne Notiz"
 WHILE ber$ <> "leer" AND a% < 120
   a% = a% + 1
   ber$ = FN ibm(ReadConfig$("UserReport", LTRIM$ ( STR$ (a%,"999999"))))
   SlashPos% = INSTR (ber$,",")
   IF SlashPos% > 0 THEN 
     BERICHTE$(a%) = MID$ (ber$,1,SlashPos% - 1)
     BERNAME$(a%) = MID$ (ber$,SlashPos% + 1)
   END IF 
 WEND 
 BERICHTE$(a%) = ""
 BERNAME$(a%) = ""
 
 a% = 0
 GAutoKArt1$(0) = "FON"
 WHILE GAutoKArt1$(a%) <> "leer" AND GAutoKArt1$(a%) <> ""
   a% = a% + 1
   m$ = FN ibm(ReadConfig$("Telefonart1","Art" + LTRIM$ ( STR$ (a%,"999999"))))
   IF m$ <> "leer" THEN GAutoKArt1$(a%) = m$
 WEND 
 
 a% = 0
 GAutoKArt2$(0) = "PRIVAT"
 WHILE GAutoKArt2$(a%) <> "leer" AND GAutoKArt2$(a%) <> ""
   a% = a% + 1
   m$ = FN ibm(ReadConfig$("Telefonart2","Art" + LTRIM$ ( STR$ (a%,"999999"))))
   IF m$ <> "leer" THEN GAutoKArt2$(a%) = m$
 WEND 
 
  
 a% = 0
 GSpartenart$(0) = "<ohne Zurodnung>"
 WHILE GSpartenart$(a%) <> "leer" AND GSpartenart$(a%) <> ""
   a% = a% + 1
   m$ = FN ibm(ReadConfig$("Spartenart","Art" + LTRIM$ ( STR$ (a%,"999999"))))
   IF m$ <> "leer" THEN GSpartenart$(a%) = LEFT$ (m$,30)
 WEND 
 
 a% = 0
 



 MOUSE ON 
 
 ON ERROR GOTO e29032005
 GFdate$ = DATE$ (fdate.stamm,"0d.mm.yyyy")
e29032005: 
 ON ERROR GOTO ErrorHandler
 IF DateOK%(GFDate$) THEN 
 ELSE 
   GFdate$ = ""
 END IF 
 
 REM Festlegung wer die Detaildaten der Vermittler sehen darf
 GAgentDetail$ = UCASE$ (ReadConfig$("PROVIS","AgentDetail"))
 GBVF$ = UCASE$ (ReadConfig$("PROVIS","BVF"))
 GBangel$ = UCASE$ (ReadConfig$("PROVIS","Bangel"))
 REM ** Maximale Anzahl Agenturen in FirstStep
 REM fsmax% = 0
 REM GDVVersion
 REM GGDV$ = "TRUE"
 REM ***Maklerversion##
 REM MAKLER$ = "TRUE"
 Hubert$ = "TRUE"
 REM LPZ$ = "TRUE"
 GKODAT$ = ";TRUE"
 GShowSpeziKond% = - 1
 REM keine Direktionsverwaltung in Stammdaten anzeigen
 REM GNOAGDIR% = - 1
 REM IF PrvVerfahr$ <> "ZAHLUNGSEINGANG" THEN GShowSpeziKond% = 0
 Gbertarif% = - 1
 REM wenn fsmax = 0 dann unbegrenzte Anzahl von Agenturen
 _formend% = 0
 Upd$ = ReadConfig$(_projekt$,"UPDATE")
 IF Upd$ LIKE "TRUE" THEN 
   IF NOT PROGRAMFILE ("PROVUPD") THEN LOAD _netpath$ + "PROVUPD.SBR", NEW 
   REM CALL DoUpdate()
   REM 261097
   REM IF PrvVerfahr$ LIKE "Zahlungseingang" THEN 
     REM t1$ = "Bitte drucken Sie diese Liste UNBEDINGT aus und befolgen Sie die dort gegebenen Hinweise!!!, Sie kînnen den Listendruck Åber den Button <Listen>/ -Abgleichsliste zur Umstellung auf...- aus der Hauptmaske wiederholen!"
     REM CALL Fehler("ACHTUNG Es wird jetzt eine Abgleichsliste zur Umstellung auf SmartPROVIS Plus Real Cash erstellt!",t1$)
     REM CALL VertrAbgleich()
   REM END IF 
 END IF 
 CUpd$ = ReadConfig$(_projekt$,"CustomUpdate")
 IF CUpd$ LIKE "TRUE" THEN 
   IF NOT PROGRAMFILE ("CUPDATE") THEN LOAD _netpath$ + "CUPDATE.SBR", NEW 
   CALL DoCUpdate()
 END IF 
 ON ERROR GOTO w010220061
 GDisDokSchu$ = DisDokSchu.supervis
w010220061: 
 ON ERROR GOTO ErrorHandler
 REM SET DISPLAY ON 
 GAufrufproj$ = "PROVIS"
 WHILE _formend% = 0
   ON ERROR GOTO ErrorHandler
   CALL PROVIS()
   REQUEST "Programm wirklich beenden?","",130,req%
   IF req% = 1 THEN _formend% = 1
 WEND 
 CALL EXIT()
 END SUB 
 
SUB INIT()
 MOUSE OFF 
 GLOBAL f AS form
 GLOBAL fc AS FormControl
 REM *********fÅr IMMAK***********
 GLOBAL OBsub%,ANFsub%,GRPsub%,CLICKsub%,ESCHLIEsub%
 GLOBAL obezug%,cuob%,cugr%,anfragebuton$,angebotbuton$,Videokarte$
 GLOBAL OBArt$(500),OBLage1$(500),OBLage2$(500),OBErschl$(500),OBBranche$(500)
 GLOBAL CLAppID%,CLtopic%,CLLink%,bildnr%
 REM ********** end immak **************
 
 GLOBAL cuvt%,cuivt%,cuko%,cuva%
 GLOBAL MADRsub%,VERTRsub%,GEKONDsub%,GEKONDMsub%,BUCHUNGsub%,GEADRsub%,SPARTEsub%,ZBsub%,ZEINsub%,ZEINKsub%
 GLOBAL gekondtr%,letzteProvi%,Anschluss%,Calcdate$,cdate%
 GLOBAL vertrprov%,vertrsr%,nextprovi%
 GLOBAL GEKOND$(80),BSatz$(1),fehlnach$
 GLOBAL RepType%
 GLOBAL Kopfzeile$,Fu·zeile$
 GLOBAL fsmax%,vform%
 GLOBAL gezPauschale%,gezPflege%,gezAbschlu·%,eingab$,eingab2$,viab%
 GLOBAL vsumAP%,vsumC%,vsumPP%,vsumPausch%,GRSPARTEsub%,_codegrsp%,_codegrspnew%,_codegrspold%
 GLOBAL abbruch%,codevaProbe%,zbetragold%,_gesnew$,_spanew$,_spaold$,cuge%,cuge2%,VertragJN$
 GLOBAL CourtNachBeitr$,VertKokor%,dmeinh%,dmeinheu%,vtagentur$,vtcodema%
 GLOBAL s1B%,s1V%,s1Bei%,s1Vol%,anz1%
 GLOBAL s2B%,s2V%,s2Bei%,s2Vol%,anz2%
 GLOBAL s3B%,s3V%,s3Bei%,s3Vol%,anz3%
 GLOBAL s4B%,s4V%,s4Bei%,s4Vol%,anz4%
 GLOBAL s5B%,s5V%,s5Bei%,s5Vol%,anz5%
 GLOBAL s6B%,s6V%,s6Bei%,s6Vol%,anz6%
 GLOBAL s7B%,s7V%,s7Bei%,s7Vol%,anz7%
 GLOBAL s8B%,s8V%,s8Bei%,s8Vol%,anz8%
 GLOBAL s9B%,s9V%,s9Bei%,s9Vol%,anz9%,statistikmodul$
 GLOBAL RealListe$,PROVBU$,zweitwaehr$,euro%,AGAnzahl,nvtab%,BGEADRsub%,ZWCodew%
 GLOBAL vstatus%,vstatusnr%,vstatustxt$
 GLOBAL w97$,wXP$
 GLOBAL GCodeVStatus%,GCodeGE%,GCodeVA%,GCodeVP%
 GLOBAL MAKLER$,drfilt$,Hubert$,BUMON$,PRVCHECKLISTE$,kontoinf%,KLOTZ$,LPZ$,GGDV$
 GLOBAL KUVorgsub%,VQCodeGEVA$,_spartold$,vprodukt$(1),Agenturen$(1),Glfdnr%,ueb$,WinWordAnsi$,GSpezko$,GVonFirma$
 GLOBAL GAGvonFirma$(1),GAGvonAgentur$(1),GAGFrAgentur$(1,2),GBewertung%,GShowSpeziKond%,Gbertarif%,GKODAT$,GKondNoDattes$
 GLOBAL Gvueb$,Gvuebs$,GBVF$,GNOAGDIR%,GBewertungOrig%
 GLOBAL GBuildno$,GBuilnolen%,GSerial$
 GLOBAL G_Volume%,G_Bewert%,G_MonAntrag$,G_JahrAntrag$,G_MonVertr$,G_JahrVertr$,G_VStatus%,G_Ma%,G_Antrag%,G_Vertrag%
 GLOBAL GCodeTarif%,GBkursTag%,GBAntPreisinW%,GBKursEuro%,GBKursUS%,GTarifname$
 GLOBAL GAgentDetail$,GKukto$(1)
 GLOBAL Nachfolger%(1)
 GLOBAL VorgÑnger%(1)
 GLOBAL macount%,GPKCO$,Ganzdown%,Gnichtaktiv$,GRiese$,GFehl$,GVertrArt$
 GLOBAL GGebList%
 GLOBAL GBlz1$,GBLZ2$,GBLZ3$,GBank1$,GBank2$,GBank3$,GKonto1$,GKonto2$,GKonto3$,GKontoinh1$,GKontoinh2$,GKontoinh3$
 GLOBAL GSoll$,GBruttoBeitr%,GNettoBeitr%,GEinh%,AuswahlG$(1),GVersion$,GRelease$,GVariante$
 GLOBAL Gcuvg%,GButtonBez$,GIgnoreMultiVT%,GBewEinm%,GRealStorno%,GgdvEnde%
 GLOBAL GBanMA%,GBanGE%
 GLOBAL GBanGesFil%,GCodeGE2%,GnoverZein%,G1Vertraege$(1),GMailIn%,agprompt$,GGDVistAN%
 GLOBAL Gopt&%
  
 GGDVistAN% = 0
 
 GMailIn% = 0
 GMailBetreff$ = ""
 GBanGesFil% = 0
 GBanMA% = 0:GBanGE% = 0
 GVersion$ = ReadConfig$(_projekt$,"Version")
 GRelease$ = ReadConfig$(_projekt$,"Release")
 GBVF$ = UCASE$ (ReadConfig$("PROVIS","BVF"))
 GNetzAPAkt% = FN sys(17) + 1
 IF FN sys(5) > 1 THEN GVariante$ = "Netzwerk mit " + LTRIM$ ( STR$ ( FN sys(5),"999")) + " PlÑtzen" ELSE GVariante$ = "Einzelplatz"
 REM fÅr ASP
 MOUSE OFF 
 CALL provmask()
 MOUSE OFF 
 DIRECTORY _netpath$
 
 IF NOT PROGRAMFILE ("PLIB") THEN LOAD "PLIB.SBR", NEW 
 IF NOT PROGRAMFILE ("PLIB1") THEN LOAD "PLIB1.SBR", NEW 
 IF NOT PROGRAMFILE ("PLIB2") THEN LOAD "PLIB2.SBR", NEW 
 IF NOT PROGRAMFILE ("PLIB3") THEN LOAD "PLIB3.SBR", NEW 
 IF NOT PROGRAMFILE ("PLIB4") THEN LOAD "PLIB4.SBR", NEW 
 IF NOT PROGRAMFILE ("PPROVI") THEN LOAD "PPROVI.SBR", NEW 
 IF NOT PROGRAMFILE ("PEMAILFU") THEN LOAD "PEMAILFU.SBR", NEW 
 REM IF NOT PROGRAMFILE ("WORD1") THEN LOAD "WORD1.SBR", NEW 
 
 REM IF NOT PROGRAMFILE ("FANALYSE") THEN LOAD "FANALYSE.SBR", NEW 
 MOUSE OFF 
 GGebList% = 0
 REM fÅr Einheiten
 GEinh% = 0
 ON ERROR GOTO e020820041
 IF nurEinh.stamm LIKE "j" THEN 
   GEinh% = - 1
 END IF 
e020820041: 
 ON ERROR GOTO ErrorHandler
 REM Vorausberechnungen fÅr Firma GPKCO$="TRUE"
 GPKCO$ = "TRUE"
 GBuildno$ = "CODie-A01-2008"
 GBuilnolen% = 8
 IF GASP% THEN 
   GBuildno$ = "CODie-A01-2008"
   GBuilnolen% = 8
 END IF 
 '010300-kxq-yac-12-3xa
 GSerial$ = UCASE$ ("-abc-def-09-05z")
 GSerial$ = "010108"
 IF GASP% THEN 
   GSerial$ = "020108"
 END IF 
 IF ag$ LIKE "j" THEN 
   GSerial$ = "030108"
 END IF 
 GVonFirma$ = ""
 GSpezko$ = ""
 REM **** GDV ****
 GLOBAL gdvVarDek%
 gdvVarDek% = 0
 REM ***** Templeton-Import ****
 GLOBAL tempeltpath$,tTestLog%
 REM ************* 
 REM LPZ$ wird verwendet, um in der Spartenmaske bei Sparte Fonds den TempletonImport-Button anzuzeigen
 BUMON$ = ""
 PROVBU$ = "FALSE"
 REM KLOTZ$ wird verwendet, um alle Agenturen, die mit *** anfangen auszublenden
 KLOTZ$ = "TRUE"
 
 GIIMTemplate$ = ReadINI$("PROVIS","IIMTEMPL")
 IF LTRIM$ (GIIMTemplate$) = "" OR LTRIM$ (GIIMTemplate$) LIKE "leer*" THEN 
   GIIMTemplate$ = "C:\Programme\Indatex\Templates"
 END IF 
 REM CALL Fehler(GIIMTemplate$,"")
 IF UCASE$ (ReadConfig$("PROVIS","IMMAK")) LIKE "TRUE" THEN 
   GLOBAL OBsub%,ANFsub%,GRPsub%,CLICKsub%,ESCHLIEsub%
   GLOBAL obezug%,cuob%,cugr%,anfragebuton$,angebotbuton$,Videokarte$
   GLOBAL OBArt$(500),OBLage1$(500),OBLage2$(500),OBErschl$(500),OBBranche$(500)
   GLOBAL CLAppID%,CLtopic%,CLLink%,bildnr%
 END IF 
 
 
 GBVF$ = UCASE$ (ReadConfig$("PROVIS","BVF"))
 GRiese$ = UCASE$ (ReadConfig$("PROVIS","DRRIESE"))
 nemany$ = ""
 VertKokor% = 0
 GCodeVStatus% = 0
 Gvueb$ = UCASE$ (ReadConfig$("PROVIS","ANTRAGSDATUMFUERPROVISIONSUEBERGABE"))
 Gvuebs$ = UCASE$ (ReadConfig$("PROVIS","ANTRAGSDATUMFUERSOLLUEBERGABE"))
 GKondNoDattes$ = UCASE$ (ReadConfig$("PROVIS","KONDITIONSDATUMNICHTPRUEFEN"))
 PrvVerfahr$ = UCASE$ (ReadConfig$("PROVIS","PROVISVERFAHREN"))
 RealListe$ = UCASE$ (ReadConfig$("PROVIS","REALLISTE"))
 REM zweitwaehr$ = UCASE$ (ReadConfig$("PROVIS","ZWEITWAEHRUNG"))
 statistikmodul$ = UCASE$ (ReadConfig$("PROVIS","STATISTIK"))
 PRVCHECKLISTE$ = UCASE$ (ReadConfig$("PROVIS","PRVCHECKLISTE"))
 REM Bewirkt den A&W Modus
 PRVCHECKLISTE$ = ""
 IF Geinh% = - 1 THEN 
   PrvVerfahr$ = ";ZAHLUNGSEINGANG"
 END IF 
 w97$ = UCASE$ (ReadINI$("SYSTEM","WinWord97"))
 wXP$ = UCASE$ (ReadINI$("SYSTEM","WinWordXP"))
 IF wxp$ = "TRUE" THEN w97$ = ""
 WinWordAnsi$ = UCASE$ (ReadINI$("SYSTEM","WinWordAnsi"))
 IF PrvVerfahr$ LIKE "Zahlungseingang" THEN 
    prv$ = "Real Cash"
     IF FirmaEinhTab.stamm LIKE "j" THEN 
       prv$ = "Real Cash(Einh.)"
     END IF 
    IF GLundWrigg$ LIKE "TRUE" THEN 
      prv$ = "Real Cash Lund & Wriggers"
    END IF 
    IF GAFSK$ LIKE "TRUE" THEN 
      prv$ = "Real Cash AFSK"
    END IF 
 ELSE 
    PrvVerfahr$ = "STANDARD"
    prv$ = "STANDARD"
    ON ERROR GOTO w251020051
     IF nurEinh.stamm LIKE "j" THEN 
       prv$ = "STANDARD(Einheitensystem)"
     END IF 
    IF GLundWrigg$ LIKE "TRUE" THEN 
      prv$ = "STANDARD Lund & Wriggers"
    END IF 
    IF GAFSK$ LIKE "TRUE" THEN 
      prv$ = "STANDARD AFSK"
    END IF 
w251020051: 
 END IF 
 ON ERROR GOTO ErrorHandler

 CourtNachBeitr$ = UCASE$ (ReadConfig$("PROVIS","COURTNACHBEITRAG"))
 abbruch% = 0
 REM SET HELP FILE _netpath$ + _projekt$ + "\" + _projekt$ + ".HLP"
 SET HELP FILE _netpath$ + "DOC\" + _projekt$ + ".pdf"
 IF EXISTS (_netpath$ + "PROVIS\LISTPRO2.SBV") THEN RepType% = 1 ELSE RepType% = 0
 SET QUERY ON 
 REM CALL provmask()
 
 IF GASP% THEN 
   REM GOTO ancou140720053
   DIM userver$(1000)
   FILLARRAY userver$,6,"000*"
   ncou% = 0
   i% = 0
   REM CALL Fehler("","")
   WHILE userver$(i%) <> ""
     datei1$ = _netpath$ + userver$(i%) + "\adrtemp.sbf"
     datei0$ = _netpath$ + userver$(i%) + "\adrtemp;paris"
     ON ERROR GOTO ancou140720051
     IF EXISTS (datei1$) THEN 
       REM DELETE datei1$
       OPEN FILE datei0$
       CLOSE FILE "ADRTEMP"
     END IF 
     GOTO ancou140720052
ancou140720051: 
     ncou% = ncou% + 1
ancou140720052: 
     ON ERROR GOTO ErrorHandler
     i% = i% + 1
   WEND 
   ncou% = ncou% + 1
   IF UCASE$ (GBVF$) <> "TRUE" THEN CALL Fehler("Anzahl aktive User: " + LTRIM$ ( STR$ (ncou%,"999999")),"maximal zulÑssige User: " + LTRIM$ ( STR$ ( FN sys(5),"999")))
ancou140720053:  
   CALL LOGIN1()
   CALL Abgleich()
 END IF 
 
 CALL LOGIN()
 CALL LPRGCo()
 
 CALL DFile(22,"CONFIG" + _fpw$)
   FILE "CONFIG"
 liz% = 0
 liz% = LizensOld%()
 liz$ = STR$ (liz%,"999")
 IF liz% <> - 1 THEN 
   feldlen% = VAL ( FIELDINFO$ ("QWoNo.config",4))
   REM CALL Fehler( FIELDINFO$ ("QWoNo.config",4),"")
   IF feldlen% < 100 THEN 
     ON ERROR GOTO er180320081
     CALL FldAdd1("QWoNo","TXT;100",0)
     CALL FldAdd1("MAName","TXT;100",0)
     SAVE FILE "CONFIG"
     SELECT FIRST LOCK FILE "config"
     qwoNo.config = ""
     MAName.config = ""
     MATimeStamp1.config = ""
     STORE FILE "config"
   END IF 
er180320081: 
   ON ERROR GOTO ErrorHandler
 END IF 
 prgv$ = PRGVersion$ + "/ Module: "
 IF gdv.config = "TRUE" THEN prgv$ = prgv$ + "/GDV"
 IF soll.config = "j" THEN prgv$ = prgv$ + "/Soll"
 title1$ = title$ + " Version: " + RIGHT$ (GBuildno$,GBuilnolen%) + "-" + PRGV$ + "/" + LTRIM$ ( STR$ ( FN sys(5),"999")) + " AP/ " + prv$
 

 REM CALL 1Lizensierung()
 REM CALL Fehler(title1$,liz$)
 Vista$ = UCASE$ (ReadINI$("SYSTEM","MSVista"))
 IF vista$ LIKE "LEER" THEN 
   REQUEST "LÑuft Ihr System mit MS Vista?","",130,req%
   IF req% = 1 THEN 
     Vista$ = "TRUE"
   ELSE 
     Vista$ = "FALSE"
   END IF 
   CALL WriteINI("SYSTEM","MSVista",Vista$)
 END IF 
 IF liz% <> - 1 THEN 
   REM war nach alter Version nicht freigeschaltet
   REM CALL LizenzNeu()
 END IF 
 REM IF ag$ = "j" THEN CALL LizensAG()
 MOUSE OFF 
 END SUB 
 
 
 '      ********************************************
 '      ** Routinen Formular "PROVIS" - HauptmenÅ **
 '      ********************************************
 
SUB PROVSTAMM()
 FORM 2
 END SUB 
 
SUB PROVPROV()
 FORM 
 END SUB 
 
SUB PROVIS()
 REM CALL DFile(3,"AUmsatz" + _fpw$)
 CALL DFile(2,"OFFICE\adrstat" + _fpw$)
 CALL DFile(2,"OFFICE\terflosk" + _fpw$)
 CALL DFile(2,"OFFICE\adrgrup" + _fpw$)
     GAdrDat$ = "ADRESSEN"
     GConDat$ = "CONNECT"
     GTelDat$ = "TELEFON"
     GAkquiDat$ = "AKQUISE"
     GDokDat$ = "DOKUMENT"
     GADRStat$ = "ADRSTAT"
 SELECT FIRST FILE "CONFIG"
 ON ERROR GOTO PAnf180220021
 GSoll$ = Soll.config
 provverf$ = UCASE$ (ReadConfig$("PROVIS","PROVISVERFAHREN"))
 SELECT FIRST LOCK FILE "STAMM"
 IIM.stamm = "n"
 STORE FILE "stamm"
 IF VertrArt.stamm = "j" OR Geinh% = - 1 THEN 
   PrvVerfahr$ = ";ZAHLUNGSEINGANG"
 END IF 
 IF provverf$ LIKE "Zahlungseingang" THEN 
 ELSE 
   GSoll$ = "n"
 END IF 
PAnf180220021: 
 ON ERROR GOTO ErrorHandler
 REM ** Maximale Anzahl Agenturen in FirstStep
 IF AnzAG.config > 0 THEN 
   fsmax% = AnzAG.config + agzus.config
   Anzag% = AnzAG.config
 ELSE 
   fsmax% = 0
 END IF 
 REM CALL Fehler("","")
 ON ERROR GOTO errdelscan01
 DELETE GMACodeDir$ + "SCAN\*.*"
errdelscan01: 
 ON ERROR GOTO ErrorHandler
 REM GDVVersion
 GGDV$ = gdv.config
 REM * * * Maklerversion##
 MAKLER$ = makler.config
 LPZ$ = UCASE$ (TempletonImport.config)
 REM GShowSpeziKond% = SpezKond.config
 REM keine Direktionsverwaltung in Stammdaten anzeigen
 IF Direktion.config = - 1 THEN 
   GNOAGDIR% = 0
 ELSE 
   GNOAGDIR% = - 1
 END IF 
 GNOAGDIR% = 0
 CALL DFile(3,"WAEHRUNG" + _fpw$)
 FILE "waehrung"
 INDEX waehrung
 SELECT FIRST 
 NUMBASE "z99999999.999999"
 aa% = 1
 _formend% = 0
 fir% = 0
 REM CALL Gauge(0,"")
 IF EXISTS (_netpath$ + "office\adrold.sbf") THEN DELETE (_netpath$ + "office\adrold.*")
 IF EXISTS (_netpath$ + "provis\kvold.sbf") THEN DELETE (_netpath$ + "provis\kvold.*")
 IF statistikmodul$ = "TRUE" THEN 
   IF NOT EXISTS (_ppath$ + "ST.SBR") THEN statistikmodul$ = "False"
 END IF 
 ss% = 1
 maske$ = "PROVIS"
 IF GProvisMaske$ <> "" THEN 
   maske$ = GProvisMaske$
 END IF 
 ON ERROR GOTO prvmask250901001
 IF IntVerw.stamm LIKE "j" OR ag$ = "j" THEN maske$ = "PROVISI"
 IF GASP% THEN 
   maske$ = "ASPPROV"
   IF IntVerw.stamm LIKE "j" THEN maske$ = "ASPPROVI"
 END IF 
 IF GASP% AND GBENE% THEN 
   REM maske$ = "BENEPROV"
   maske$ = "BENEPROI"
 END IF 
 IF GFSC% = - 1 THEN 
   maske$ = "PROVFSC"
 END IF 
 IF GBVF$ LIKE "TRUE" THEN 
   maske$ = "ASPBVF"
 END IF 
 IF GInvesthouse$ LIKE "TRUE" THEN 
   maske$ = "INVESTH"
   IF IntVerw.stamm LIKE "j" THEN 
     maske$ = "INVESTHI"
   END IF 
 END IF 
 GVertrArt$ = VertrArt.stamm
 REM CALL Fehler(GVertrArt$,maske$)
prvmask250901001: 
 ON ERROR GOTO ErrorHandler
 WHILE _formend% = 0
   ON ERROR GOTO ErrorHandler
   PROVISsub% = 0
   Upd$ = UCASE$ (ReadConfig$(_projekt$,"UPDATE"))
   IF FORM <> maske$ THEN 
st3004981: 
     
     SET HEADING title$ + " - HauptÅbersicht"
     DIRECTORY _ppath$
     REM OPEN FORM "PROVIS"
     IF EXISTS (GPrjForm$ + maske$ + ".sbv") THEN 
       OPEN FORM GPrjForm$ + "\" + maske$
     ELSE 
       OPEN FORM GPrjForm$ + maske$
     END IF 
     SET f = Superbase.Form
     ss% = 1
     Version$ = GVersion$ + " vom " + GRelease$
     SELECT FIRST FILE "Config"
     b% = INSTR (PRGVersion.config,"-")
     REM CALL Fehler("","")
     IF AnzAG.config < 1 THEN 
       IF b% > 0 THEN 
         PRGVersion$ = MID$ (PRGVersion.config,1,b% - 1) + "+  " + MID$ (PRGVersion.config,b% + 1)
       ELSE 
         PRGVersion$ = PRGVersion.config + "+ "
       END IF 
     ELSE 
       PRGVersion$ = PRGVersion.config
     END IF 
     IF Makler.config = "TRUE" THEN 
       makk$ = PRGVersion$ + "+ Kundenbeitragsinkasso"
       PRGVersion$ = makk$
     END IF 
     IF TempletonImport.config = "TRUE" THEN 
       PRGVersion$ = PRGVersion$ + "-Templetonimport"
     END IF 
     IF AnzAG.config > 0 THEN 
       PRGVersion$ = PRGVersion$ + " - " + LTRIM$ ( STR$ (Anzag.config,"999999")) + " Agenturen"
     END IF 
     IF GTerminal% = - 1 THEN 
       PRGVersion$ = PRGVersion$ + " - online.center (MS Terminalserver)"
     END IF 
     IF Makler.config = "TRUE" THEN 
       f.zeinku.visible = - 1
       f.zeinku.enabled = - 1
       f.zeinkutxt.visible = - 1
       f.zeinkutxt.enabled = - 1
 
       f.makbu.visible = - 1
       f.makbu.enabled = - 1
       f.makbutext.visible = - 1
       f.makbutext.enabled = - 1
 
       f.kuink.visible = - 1
       f.kuink.enabled = - 1
       f.kuinktext.visible = - 1
       f.kuinktext.enabled = - 1
     ELSE 
       f.zeinku.visible = 0
       f.zeinku.enabled = 0
       f.zeinkutxt.visible = 0
       f.zeinkutxt.enabled = 0
       f.makbu.visible = 0
       f.makbu.enabled = 0
       f.makbutext.visible = 0
       f.makbutext.enabled = 0
       f.kuink.visible = 0
       f.kuink.enabled = 0
       f.kuinktext.visible = 0
       f.kuinktext.enabled = 0
     END IF 
     IF gdv.config = "TRUE" THEN 
       f.impgdv.visible = - 1
       f.impgdv.enabled = - 1
     ELSE 
       f.impgdv.visible = - 1
       f.impgdv.enabled = 0
     END IF 
     SET DISPLAY ON 
     CALL HideStartup()
     GAppName$ = _netpath$ + "DOC\provis.pdf"
     SET STATUS "Hauptauswahl: WÑhlen Sie die gewÅnschte Funktion!"
   END IF 
   CALL MNMAIN()
   MENU ON 
   IF fsmax% > 0 THEN fsmaxag$ = LTRIM$ ( STR$ (AnzAG%,"99"))
   REM CALL Fehler("","")
   IF PrvVerfahr$ LIKE "Zahlungseingang" THEN 
     prv$ = "Real Cash"
     IF FirmaEinhTab.stamm LIKE "j" THEN 
       prv$ = "Real Cash(Einh.)"
     END IF 
     IF GLundWrigg$ LIKE "TRUE" THEN 
       prv$ = "Real Cash Lund&Wriggers"
     END IF 
     IF GAFSK$ LIKE "TRUE" THEN 
       prv$ = "Real Cash AFSK"
     END IF 
     IF GSoll$ = "j" AND GAFSK$ <> "TRUE" THEN 
       prv$ = prv$ + " mit Sollstellung"
     END IF 
     IF GBENE% THEN 
       f.sollst.visible = 0
       f.sollst.enabled = 0
       f.sollsttxt.visible = 0
     ELSE 
       f.sollst.visible = - 1
       f.sollst.enabled = - 1
     END IF 
     IF GAFSK$ LIKE "TRUE" THEN 
       f.sollst.visible = - 1
       f.sollst.enabled = - 1
       sollst$ = "Sutor"
       f.sollsttxt.Caption = "Sutor DatensÑtze gesamt"
     END IF 
     
   ELSE 
     f.sollst.visible = 0
     f.sollst.enabled = 0
     PrvVerfahr$ = "STANDARD"
     prv$ = "STANDARD"
     ON ERROR GOTO w251020052
     IF nurEinh.stamm LIKE "j" THEN 
       prv$ = "STANDARD(Einheitensystem)"
     END IF 
     IF GLundWrigg$ LIKE "TRUE" THEN 
       prv$ = "STANDARD Lund&Wriggers"
     END IF 
     IF GAFSK$ LIKE "TRUE" THEN 
       prv$ = "STANDARD AFSK"
     END IF 
     IF GBENE% THEN 
       prv$ = "STANDARD Benedict"
     END IF 
   END IF 
w251020052: 
   ON ERROR GOTO ErrorHandler
   IF GASP% THEN 
     prv$ = prv$ + " - ASP"
   END IF 
   IF PrvVerfahr$ <> "ZAHLUNGSEINGANG" THEN GShowSpeziKond% = 0
   FORM ss%
   ss% = PAGE 
   MENU ON 
   MOUSE ON 

     IF GBVF$ = "TRUE" THEN 
       PRGVersion$ = "BVF - Managementsystem"
     END IF 

   CALL ClearKBDBuffer()
   IF MATagest$ = "TRUE" AND fir% = 0 AND upd$ <> "TRUE" THEN 
     REM REQUEST "Mîchten Sie die Tagestermine des aktuellen ","Mitarbeiters angezeigt bekommen ?",130,req310898%
 ter1anz% = 1
 gnab$ = ""
 gnab0$ = "Sie erhalten hier die Mîglichkeit sich eine öbersicht Åber erledigte/nichterledigte/alle Termine eines oder aller Mitarbeiter in einem freiwÑhlbaren Zeitraum fÅr"
 gnab0$ = gnab0$ + " einen oder fÅr alle Terminkalender (Aktionen) zu verschaffen. Weiterhin kînnen Sie die Termine auch selektieren und als erledigt kennzeichnen!"
 gnab0$ = gnab0$ + gnab$
 GOTO Prov040620001
    DIM dlg1 AS Dialog
    DIM control1 AS DialogControl
 
    Superbase.Dialogs.Add("LHELP")
    SET dlg1 = Superbase.Dialogs.LHELP
    dlg1.Move(0,0,302,159)
    dlg1.Caption = "Hilfe"
    dlg1.FontName = "MS Sans Serif"
    dlg1.FontSize = 8
 
    SET control1 = dlg1.Add("DialogFrame2","DialogFrame")
    control1.Move(0,3,301,135)
    control1.Caption = ""
 
    SET control1 = dlg1.Add("DialogIcon1","DialogIcon")
    control1.Move(6,17,22,21)
    control1.Icon = 2
 
    SET control1 = dlg1.Add("DialogLabel1","DialogLabel")
    control1.Move(6,41,291,92)
    control1.CaptionBinding = "gnab0$"
 
    SET control1 = dlg1.Add("DialogCommandButton3","DialogCommandButton")
    control1.Move(125,143,55,14)
    control1.Caption = "&OK"
    control1.ReturnValue = 0
  
    DIM dlg AS Dialog
    DIM control AS DialogControl
 
    Superbase.Dialogs.Add("TLISTE")
    SET dlg = Superbase.Dialogs.TLISTE
    dlg.Move(0,0,288,67)
    dlg.Caption = "Adressaktualisierungen"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame2","DialogFrame")
    control.Move(0,2,286,46)
    control.Caption = ""
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(30,16,255,23)
    control.Caption = "Mîchten Sie die Tagestermine des aktuellen, Mitarbeiters angezeigt bekommen ?"
 
    SET control = dlg.Add("DialogIcon1","DialogIcon")
    control.Move(6,16,22,20)
    control.Icon = 2
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(58,49,55,15)
    control.Default = 1
    control.Caption = "&Weiter"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(114,49,55,15)
    control.Caption = "&Abbrechen"
    control.ReturnValue = 0
 
    SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
    control.Move(170,49,55,15)
    control.Caption = "&Hilfe"
    control.ReturnValue = 0
    control.NestedDialogName = "LHELP"
 
 DIALOG "TLISTE",req310898%
 REMOVE DIALOG ALL 
 MOUSE ON 
 
     IF req310898% = 1 THEN CALL TagestMA()
Prov040620001: 
   CALL TagestMA()
     fir% = 1
   END IF 
   IF Upd$ LIKE "TRUE" THEN 
     IF NOT PROGRAMFILE ("PROVUPD") THEN LOAD _netpath$ + "PROVUPD.SBR", NEW 
     CALL DoUpdate()
     Upd$ = UCASE$ (ReadConfig$(_projekt$,"UPDATE"))
     IF PrvVerfahr$ LIKE "Zahlungseingang" THEN 
       IF RealListe$ <> "TRUE" THEN 
         t1$ = "Bitte drucken Sie diese Liste UNBEDINGT aus und befolgen Sie die dort gegebenen Hinweise!!!, Sie kînnen den Listendruck Åber den Button <Listen>/ -Abgleichsliste zur Umstellung auf...- aus der Hauptmaske wiederholen!"
         CALL Fehler("ACHTUNG Es wird jetzt eine Abgleichsliste zur Umstellung auf SmartPROVIS Plus Real Cash erstellt!",t1$)
         CALL VertrAbgleich()
       END IF 
     END IF 
   END IF 
   REM CALL DFile(3,"AUmsatz" + _fpw$)
   CALL DFile(3,"STAMM" + _fpw$)
   REM CALL DFile(3,"MAADR" + _fpw$)
   REM CALL DFile(3,"MAVORG" + _fpw$)
   CALL DFile(2,"OPENFILE" + _fpw$)
   CALL DFile(2,"ZERO" + _fpw$)
   CALL DFile(22,"CONFIG" + _fpw$)
   CALL DFile(2,"supervis" + _fpw$)
   SELECT FIRST FILE "stamm"
   IF codew.stamm > 0 THEN 
     zweitwaehr$ = waehrung.stamm
     euro% = umrechnung.stamm
     ZWCodew% = codew.stamm
   ELSE 
     CALL Fehler("Es wurde fÅr diese Anwendung noch keine allgemeine FirmenwÑhrung festgelegt(z.B. DM)!","WÑhlen Sie nachfolgend eine FirmenwÑhrung aus! Die Umrechnungskurse kînnen Sie Åber Stammdaten->Einstellungen->WÑhrungstabelle festlegen!")
     CALL WaehrStamm()
   END IF 
   IF iim.stamm LIKE "j" THEN 
     DIRECTORY _netpath$
     IF NOT PROGRAMFILE ("INDATEX") THEN LOAD "INDATEX.SBR", NEW 
   END IF 
   REM CALL Fehler(GScandir$,"")
   IF GScandir$ LIKE "leer" THEN 
     GScanDir$ = _netpath$
   END IF 
   SELECT KEY GMACodeMA% FILE "Supervis" INDEX codema.supervis
   REM CALL Fehler("GEMAIL%","")
   GEMAIL% = EMAILJN.stamm
   REM IF GEMAILON$ LIKE "TRUE" THEN 
   REM ELSE 
     REM GEMAIL% = 0
   REM END IF 
   IF GEMAIL% THEN 
     tt% = EMAILJN.supervis
     GEMAIL% = EMAILJN.supervis
     GEMAILJNAuto% = EMAILJNAuto.stamm
     IF GEMAILJNAuto% = - 1 THEN 
       GEMAILJNAuto% = EMAILJNAuto.supervis
     END IF 
   END IF 
   IF UCASE$ ( FORM ) <> maske$ THEN GOTO st3004981 
   DATEBASE "0d.mm.yyyy"
   MENU ON 
   ter1anz% = 0
     IF GLundWrigg$ = "TRUE" THEN 
       kuink$ = "FÑlligkeitsliste"
       REM fael$ = "Abrechnungsliste"
       IF maske$ LIKE "PROVISI" THEN 
         f.fael.visible = 0
         f.fael.enabled = 0
         ON ERROR GOTO faeltext01
         f.faeltext.visible = 0
faeltext01: 
         ON ERROR GOTO ErrorHandler
       END IF 
       makbu$ = "Abruf/DTAUS/Abrechnungsliste"
       f.makbu.visible = - 1
       f.makbu.enabled = - 1
       
       f.makbutext.visible = 0
       f.kuinktext.visible = 0
     END IF 
 
     GLizName$ = CALL ("AccessItemC",1,0,"")
     GLizFirma$ = CALL ("AccessItemC",2,0,"")
     REM CALL Fehler(GLizName$,GLizFirma$)
     IF GLizFirma$ <> "" THEN 
       liz$ = "Registrierung fÅr Firma " + GLizFirma$ + "/" + GlizName$
     ELSE 
       liz$ = "DEMO Version "
     END IF 
     IF GAFSK$ LIKE "TRUE" THEN 
       liz$ = "Registrierung fÅr Firma " + "AFSK"
     END IF 
     IF GBENE% = - 1 THEN 
       liz$ = "Registrierung fÅr Firma " + "BENDICT"
     END IF 
     gcopyright1$ = "Copyright ∏ 1990 - " + STR$ ( YEAR ( TODAY ),"0000")
   Release$ = GVariante$
   IF Gpdemende$ <> "" THEN liz$ = liz$ + "   Programm lÑuft noch bis zum " + Gpdemende$
   REM Lizens$ = liz$
   IF prvVerfahr$ LIKE "ZAHLUNGSEINGANG" THEN 
     IF Verwaltung.config = - 1 THEN 
       IF GSoll$ <> "j" THEN 
         REM f.buchung.visible = 0
         f.buchung.enabled = 0
         REM f.butext.visible = 0
         f.butext.enabled = 0
       ELSE 
         f.buchung.visible = - 1
         f.buchung.enabled = - 1
         f.butext.visible = - 1
         f.butext.enabled = - 1
       END IF 
       f.provvonges.enabled = 0
     ELSE 
       f.buchung.visible = - 1
       f.buchung.enabled = - 1
       f.butext.visible = - 1
       f.butext.enabled = - 1
     END IF 
   ELSE 
     IF Verwaltung.config = - 1 OR ag$ LIKE "j" THEN 
         REM f.buchung.visible = 0
         f.buchung.enabled = 0
         REM f.butext.visible = 0
         f.butext.enabled = 0
         f.provvonges.enabled = 0
     END IF 
     ON ERROR GOTO fa161220031
     IF GFAELLIG% = - 1 THEN 
       f.fael.visible = - 1
       f.faeltext.visible = - 1
       f.sollsttxt.visible = 0
     ELSE 
       f.fael.visible = 0
       f.faeltext.visible = 0
     END IF 
fa161220031: 
     ON ERROR GOTO ErrorHandler
   END IF 
   IF GBVF$ LIKE "TRUE" THEN 
     IF workstation% > 0 THEN 
       f.setup.enabled = 0
       f.setup.visible = 0
       f.prov.visible = 0
       f.prov.enabled = 0
       f.setuptxt.visible = 0

       f.provbvf.height = 2229
       f.provbvf.top = 2032
       f.provbvf.left = 8032
       f.prov1txt.top = 3782
       f.prov1txt.left = 8157
     ELSE 
       f.setup.enabled = - 1
       f.setup.visible = - 1
       f.prov.visible = - 1
       f.prov.enabled = - 1
       f.setuptxt.visible = - 1
     END IF 
   END IF 
   SET STATUS "Ihr temporÑres Verzeichnis befindet sich in: " + GMAcOdeDir$
   FORM 
   GMFoAq% = 1
   IF GFPB% = - 1 THEN GoldScanVerf$ = "TRUE"
   IF EXISTS (_netpath$ + "IMMAK\Anfrage.sbf") THEN 
     GIMMAK% = - 1
   END IF 
   
   WAIT MOUSE OR KEY OR MENU FOR 600
   GET k$
   IF k$ = CHR$ (27) THEN 
     IF PAGE = 1 THEN 
       _formend% = 1
     END IF 
     IF PAGE > 1 THEN 
       FORM 1
     END IF 
   END IF 
   ss% = PAGE 
   IF ss% = 2 THEN 
     IF disabled%("STAMMDATENHAUPTMASKE") THEN 
        FORM 1
        ss% = 1
      END IF 
   END IF 
   IF ss% = 3 THEN 
     IF disabled%("BUCHUNGENHAUPTMASKE") THEN 
       FORM 1
       ss% = 1
     END IF 
   END IF 
   
   SELECT CASE PROVISsub%
   CASE 1
     GMFoAq% = 0
     REM DELETE "c:\codie.fpv\00000240\superbas.net"
     GAdrDat$ = "ADRESSEN"
     GConDat$ = "CONNECT"
     GTelDat$ = "TELEFON"
     GAkquiDat$ = "AKQUISE"
     GDokDat$ = "DOKUMENT"
     GADRStat$ = "ADRSTAT"
     CALL ADRESSEN()
   CASE 2
     DIRECTORY _ppath$
     CALL MAADR()
   CASE 3
     DIRECTORY _ppath$
     CALL GEADR()
   CASE 4
     DIRECTORY _ppath$
     CALL VERTRINFO()
   CASE 5
     DIRECTORY _ppath$
     CALL FRVERTR()
   CASE 6
     REM cuva% = 0
     _codegrsp% = - 1
     DIRECTORY _ppath$
     CALL CODEVA()
   CASE 7
     REM 210897
     CALL DFile(3,"VProdukt" + _fpw$)
     DIRECTORY _ppath$
     IF PrvVerfahr$ <> "ZAHLUNGSEINGANG" THEN 
       IF ProvBuch$ = "TRUE" THEN 
         CALL BUCHUNG()
       ELSE 
         CALL Fehler ("Sie haben eine Programmvariante erworben, die keine Provisionsberechnung unterstÅtzt!!!","")
       END IF 
     ELSE 
       IF ProvBuch$ = "TRUE" THEN 
         CALL BUCHUNGZE()
       ELSE 
         CALL Fehler ("Sie haben eine Programmvariante erworben, die keine Provisionsberechnung unterstÅtzt!!!","")
       END IF 
     END IF 
   CASE 8
     CALL DFile(3,"VProdukt" + _fpw$)
     IF ag$ <> "j" THEN 
       IF gasp% THEN 
         IF workstation% = 0 THEN 
           CALL BMKurzbericht()
         ELSE 
           CALL Fehler("Diese Funktion ist in SmartPROVIS fÅr externe BÅros gesperrt!","")
         END IF 
       ELSE 
         CALL BMKurzbericht()
       END IF 
     ELSE 
       CALL Fehler("Diese Funktion ist in SmartPROVIS Agentur gesperrt!","")
     END IF 
   CASE 9
     CALL DFile(3,"VProdukt" + _fpw$)
     DIRECTORY _ppath$
     IF gasp% AND workstation% <> 0 THEN 
       CALL Fehler("Sorry, diese Funktion ist fÅr externe BÅros nicht verfÅgbar!!!!","")
     ELSE 
       CALL PROLIST()
     END IF 
   CASE 10
     CALL SETUP()
     REM maske$ = "PROVIS"
     REM IF IntVerw.stamm LIKE "j" THEN maske$ = "PROVISI"
     REM provverf$ = UCASE$ (ReadConfig$("PROVIS","PROVISVERFAHREN"))
     REM IF provverf$ = "ZAHLUNGSEINGANG" THEN 
       REM IF soll.config LIKE "j" THEN GSoll$ = "j"
     REM ELSE 
       REM GSoll$ = "n"
     REM END IF 
   CASE 11
     IF EXISTS (_netpath$ + "IMMAK\Anfrage.sbf") THEN 
       IF NOT disabled%("IMMAK") THEN 
         IF NOT PROGRAMFILE ("CLICKII") THEN LOAD _netpath$ + "CLICKII.SBR", NEW 
         IF _projekt$ LIKE "PROV*" OR _projekt$ LIKE "IMM*" THEN 
           IF EXISTS (_netpath$ + "PROVIS\kvertrag.sbf") THEN CALL DFile(3,"KVERTRAG" + _fpw$)
           IF EXISTS (_netpath$ + "PROVIS\vermoeg.sbf") THEN CALL DFile(3,"VERMOEG" + _fpw$)
           IF EXISTS (_netpath$ + "PROVIS\vorgang.sbf") THEN CALL DFile(3,"VORGANG" + _fpw$)
           IF EXISTS (_netpath$ + "PROVIS\maadr.sbf") THEN CALL DFile(3,"MAADR" + _fpw$)
           IF EXISTS (_netpath$ + "PROVIS\kukto.sbf") THEN CALL DFile(3,"KUKTO" + _fpw$)
           IF GAFSK$ LIKE "TRUE" THEN 
             IF EXISTS (_netpath$ + "PROVIS\afsksut.sbf") THEN CALL DFile(3,"AFSKSUT" + _fpw$)
           END IF 
           IF MAKLER$ = "TRUE" AND _projekt$ LIKE "PROV*" THEN 
             IF EXISTS (_netpath$ + "PROVIS\inkstamm.sbf") THEN CALL DFile(3,"INKSTAMM" + _fpw$)
           END IF 
           GPrjForm$ = _netpath$ + "IMMAK\" + LTRIM$ ( STR$ (GBildschirm%,"9999")) + ".sbv\"
           REM GOFFForm$ = _netpath$ + "OFFICE\" + GScrWidth$
           CALL CIMMAK()
           GPrjForm$ = _netpath$ + "PROVIS\" + LTRIM$ ( STR$ (GBildschirm%,"9999")) + ".sbv\"
           REM GOFFForm$ = _netpath$ + "OFFICE\" + GScrWidth$
         END IF 
       END IF 
     ELSE 
       CALL Fehler("Sie mÅssen den Programmteil fÅr SmartIMMAK erst kÑuflich erwerben, bevor Sie es aufrufen kînnen!","")
     END IF 
   CASE 12
     CALL OFFICE()
   CASE 13
     CALL XCHANGE()
   CASE 14
     GAdrDat$ = "ADRE1"
     GConDat$ = "CONADR1"
     GTelDat$ = "TELADR1"
     GAkquiDat$ = "AKQUI1"
     GDokDat$ = "DOKADR1"
     CALL ADRESSEN()
   CASE 15
     REM 170897
     IF ag$ <> "j" THEN 
       CALL DFile(3,"VProdukt" + _fpw$)
       IF UCASE$ (PrvVerfahr$) <> "ZAHLUNGSEINGANG" THEN 
         CALL EINGANG(0)
       ELSE 
         CALL EINGANG1(0)
       END IF 
     ELSE 
       CALL Fehler("Diese Funktion steht unter der Agenturversion nicht zur VerfÅgung","")
     END IF 
   CASE 16
     IF ag$ <> "j" THEN 
       CALL DFile(3,"VProdukt" + _fpw$)
       DIRECTORY _ppath$
       CALL GEKONDM()
     ELSE 
       CALL Fehler("Diese Funktion steht unter der Agenturversion nicht zur VerfÅgung","")
     END IF 
   CASE 17
     IF ag$ <> "j" THEN 
       CALL DFile(3,"VProdukt" + _fpw$)
       DIRECTORY _ppath$
       _codegrsp% = - 1
       CALL SPGRUPPE()
     ELSE 
       CALL Fehler("Diese Funktion steht unter der Agenturversion nicht zur VerfÅgung","")
     END IF 
   CASE 18
     IF gasp% AND workstation% <> 0 THEN 
       CALL Fehler("Sorry, diese Funktion steht fÅr externe BÅros an dieser Stelle nicht zur VerfÅgung!!!","Gehen Sie bitte in die Kundenmaske und nutzen Sie die Suchen-Funktion zur Erstellung von Serienbriefen!")
     ELSE 
       CALL MAILING()
     END IF 
   CASE 19
     CALL DOKallg()
   CASE 20
     IF gasp% AND workstation% <> 0 THEN 
       CALL Fehler("Sorry, diese Funktion steht fÅr externe BÅros nicht zur VerfÅgung!!!","Gehen Sie bitte Åber die Kundenmaske in die einzelnen Termine!")
     ELSE 
       termin% = 1
       CALL AKQUISE(1)
     END IF 
   CASE 21
     CALL AKTIONEN()
   CASE 22
     CALL DOKUMENTSRV()
   CASE 28
     REM 071197
     DIRECTORY _netpath$
     IF NOT PROGRAMFILE ("PEXPAG") THEN LOAD "PEXPAG.SBR", NEW 
     DIRECTORY _ppath$
     CALL ExportAG()
   REM > > FÅr GDV < < 
   CASE 30
     DIRECTORY _ppath$
     IF disabled%("GDVIMPORT") THEN GOTO noimp1304001
     REM * GDV - Programm laden"
      ON ERROR GOTO err0202991tk
       IF NOT PROGRAMFILE ("PGDV") THEN LOAD _netpath$ + "PGDV.SBR", NEW 
       REM IF NOT PROGRAMFILE ("GDVNEU") THEN LOAD _netpath$ + "GDVNEU.SBR", NEW 
       GOTO weit0202991tk
err0202991tk: 
       ON ERROR GOTO ErrorHandler
       CALL Fehler("Dateifehler","Die Datei .SBR konnte nicht im Pfad " + _netpath$ + "gefunden werden.")
       GOTO weit0202990tk
weit0202991tk:  
    ON ERROR GOTO ErrorHandler
    REM * GDV - Form aufrufen * 
    test$ = DIRECTORY 
     CALL DFile(3,"GDVHEAD" + _fpw$)
     CALL GDVImport()
     DIRECTORY test$
     IF GgdvEnde% = - 1 THEN 
       CALL Fehler("Das Programm wird jetzt beendet, um den durch den GDV-Import belegten Speicher freizugeben!","")
       CALL EXIT()
     END IF 
 REM > > Ende GDV < < 
noimp1304001: 
   CASE 31
     IF ag$ <> "j" THEN 
       CALL DFile(3,"VProdukt" + _fpw$)
       CALL EINGANGKU()
     ELSE 
       CALL Fehler("Diese Funktion steht unter der Agenturversion nicht zur VerfÅgung","")
     END IF 
   CASE 32
     CALL DFile(3,"VProdukt" + _fpw$)
     CALL DFile(3,"spgruppe" + _fpw$)
     IF NOT disabled%("PRODUKTMASKE") THEN 
       CALL VProdukt1()
     END IF 
   CASE 33
     CALL DFile(3,"Tarif" + _fpw$)
     IF NOT disabled%("TARIFMASKE") THEN 
       CALL Tarife()
     END IF 
   CASE 34
     REM Maklerbuchungen
     IF ag$ <> "j" THEN 
       IF NOT disabled%("BUCHUNG") THEN 
         IF GLundWrigg$ = "TRUE" THEN 
           REM Abrechnungsliste
           CALL LundMaklerInk(0)
         ELSE 
           CALL MaklerInk()
         END IF 
       END IF 
     ELSE 
       CALL Fehler("Diese Funktion steht unter der Agenturversion nicht zur VerfÅgung","")
     END IF 
   CASE 35
     REM autom. Kundeninkasso
     IF NOT disabled%("BUCHUNG") THEN 
       IF GLundWrigg$ = "TRUE" THEN 
         REM FÑlligkeitsliste
         CALL LundInkasso(0)
       ELSE 
         CALL Inkasso()
       END IF 
     END IF 
   CASE 36
     GMFoAq% = 0
     REM BC-Kontakte
     GADRDat$ = "BCKONTAK"
     GConDat$ = "CONBCK"
     GTelDat$ = "TELBCK"
     GAkquiDat$ = "AKQUIBCK"
     GDokDat$ = "DOKBCK"
     CALL ADRESSEN()
     GAdrDat$ = "ADRESSEN"
     GConDat$ = "CONNECT"
     GTelDat$ = "TELEFON"
     GAkquiDat$ = "AKQUISE"
     GDokDat$ = "DOKUMENT"
     GADRStat$ = "ADRSTAT"
   CASE 37
     IF ag$ = "j" OR GFAELLIG% = - 1 THEN 
       GAdrDat$ = "ADRESSEN"
       GConDat$ = "CONNECT"
       GTelDat$ = "TELEFON"
       GAkquiDat$ = "AKQUISE"
       GDokDat$ = "DOKUMENT"
       GADRStat$ = "ADRSTAT"
       CALL Faelvorsch()
     ELSE 
       CALL Fehler("Diese Funktion wird nur in der Agenturvariante unterstÅtzt!","")
     END IF 
   CASE 38
     REM Sollstellungen bearbeiten
     CALL DFile(3,"zeinvor" + _fpw$)
     IF GAFSK$ <> "TRUE" THEN 
       IF GSoll$ LIKE "j" THEN 
         IF NOT disabled%("SOLLSTELLUNG") THEN 
           IF workstation% > 0 THEN 
             FILE "ZEINVOR"
             bef$ = "SELECT WHERE workstation.zeinvor = 83"
             EXECUTE bef$
           ELSE 
             FILE "ZEINVOR"
             SELECT WHERE 
           END IF 
           CALL ZEINVOR(0)
           FILE "ZEINVOR"
           SELECT WHERE 
         END IF 
       ELSE 
         CALL Fehler("Diese Funktion kînnen Sie erst nutzen, wenn Sie das Sollstellungsmodul erworben haben!","")
       END IF 
     ELSE 
       REM CALL Fehler("Diese Funktion kînnen Sie in Ihrer AFSK-Variante nicht verwenden!","")
       CALL Sutor()
     END IF 
   CASE 39
     REM Anzeige des letzten Updatetextes
     dateilu$ = UCASE$ (ReadConfig$("PROVIS","Textlastupd"))
     REM CALL (_netpath$+"DOC\" + dateilu$)
     updtxt$ = _netpath$ + "DOC\" + dateilu$
     MOUSE OFF 
     a% = CALL ("ShellExecute",0,"open",updtxt$,"","",1)
     MOUSE ON 
   CASE 40
     REM FSCImport
     IF NOT PROGRAMFILE ("FSC24") THEN LOAD _netpath$ + "FSC24.SBR", NEW 
     DIRECTORY _netpath$ + "0-Import"
     CALL FSCImport()
   CASE 41
     CALL BUCHUNGZE()
   CASE 42
     REM FSSOnline Import
     REM IDEAL Import
     IF GIdeal$ LIKE "A1IIMTR" OR GAleks% = - 1 THEN 
       GAdrDat$ = "ADRESSEN"
       GConDat$ = "CONNECT"
       GTelDat$ = "TELEFON"
       GAkquiDat$ = "AKQUISE"
       GDokDat$ = "DOKUMENT"
       GADRStat$ = "ADRSTAT"
       REM CALL FSSOnlineImp()
       CALL IDEALImp()
     ELSE 
       CALL Fehler("Der IDEAL-Import wurde nicht aktiviert!","Bitte wenden Sie sich an die Firma CODie software products e.K.!")
     END IF 
   CASE 43
     REM Online-Beratungsprotokoll Export Adressen
     GAdrDat$ = "ADRESSEN"
     GConDat$ = "CONNECT"
     GTelDat$ = "TELEFON"
     GAkquiDat$ = "AKQUISE"
     GDokDat$ = "DOKUMENT"
     GADRStat$ = "ADRSTAT"
     CALL OnlBeratPrADR(0)
   CASE 44
     REM alte Serienmails
     CALL EMAILform()
   CASE 45
     REM Mail Vorlagen
     CALL WEMAILform()
   END SELECT 
   CALL BMCheckMail()
   REM IF k$ = CHR$ (27) THEN _formend% = 1
 WEND 
 _formend% = 0
 END SUB 
 
 
  
 
 
 
 
 
 '      *************************
 '      ** allgemeine Routinen **
 '      *************************
 
 
 ' Gesellschaftsdaten anzeigen
 ' =======================================================================
 
ProcShowGeadr: 
 w% = 120:h% = 120:st% = NOW 
 d$ = "ShowCustoms"
 CREATE DIALOG d$,0,0,w%,h%,"Angaben zur Gesellschaft","MS Sans Serif",8
 Ort$ = Plz.geadr + " " + ort.geadr
 Anspr$ = vorname.geadr + " " + nachname.geadr
 ADD DIALOG d$,5,4,20,90,9,0,gesellschaft.geadr
 ADD DIALOG d$,5,4,28,90,9,0,Anspr$
 ADD DIALOG d$,5,4,36,90,9,0,stra·e.geadr
 ADD DIALOG d$,5,4,44,90,9,0,ort$
 ADD DIALOG d$,5,4,58,90,9,0,"Telefon 1"
 ADD DIALOG d$,5,40,58,90,9,0,telefon1.geadr
 ADD DIALOG d$,5,4,66,90,9,0,"Telefon 2"
 ADD DIALOG d$,5,40,66,90,9,0,telefon2.geadr
 ADD DIALOG d$,5,4,74,90,9,0,"Telefax"
 ADD DIALOG d$,5,40,74,90,9,0,telefax.geadr
 ADD DIALOG d$,5,4,82,90,9,0,"BTX"
 ADD DIALOG d$,5,40,82,90,9,0,btx.geadr
 ADD DIALOG d$,1,w% - 40,h% - 18,36,14,1,"OK",1,1
 DIALOG d$,a%
 REMOVE DIALOG d$
 RETURN 
 
 
 ' Agenturdaten anzeigen
 ' =======================================================================
 
ProcShowMaadr: 
 w% = 120:h% = 120:st% = NOW 
 d$ = "ShowCustoms"
 CREATE DIALOG d$,0,0,w%,h%,"Angaben zur Agentur","MS Sans Serif",8
 Mitarbeiter$ = vorname.maadr + " " + nachname.maadr
 Ort$ = Plz.maadr + " " + ort.maadr
 ADD DIALOG d$,5,4,20,90,9,0,anrede.maadr
 ADD DIALOG d$,5,4,28,90,9,0,Mitarbeiter$
 ADD DIALOG d$,5,4,36,90,9,0,stra·e.maadr
 ADD DIALOG d$,5,4,44,90,9,0,ort$
 ADD DIALOG d$,5,4,58,90,9,0,"Telefon 1"
 ADD DIALOG d$,5,40,58,90,9,0,telefon1.maadr
 ADD DIALOG d$,5,4,66,90,9,0,"Telefon 2"
 ADD DIALOG d$,5,40,66,90,9,0,telefon2.maadr
 ADD DIALOG d$,5,4,74,90,9,0,"Telefax"
 ADD DIALOG d$,5,40,74,90,9,0,telefax.maadr
 ADD DIALOG d$,5,4,82,90,9,0,"BTX"
 ADD DIALOG d$,5,40,82,90,9,0,btx.maadr
 ADD DIALOG d$,1,w% - 40,h% - 18,36,14,1,"OK",1,1
 DIALOG d$,a%
 REMOVE DIALOG d$
 RETURN 
 
 
 '      *************************
 '      ** allgemeine Routinen **
 '      *************************
    
   
  
 '      ***********************
 '      ** MenÅdeklarationen **
 '      ***********************
 
 
 ' HauptmenÅ
 ' =======================================================================
 
SUB MNMAIN()
 MENU CLEAR 
 CALL MNProgramm()
 REM GOTO mnmainend
 MENU 2,0,1,"&Hauptsteuerung","",""
 MENU 2,1,1,"Kunden,F2","ADRESSEN",""
 MENU 2,2,1,"Vermittler,F3","MAADR",""
 MENU 2,3,1,"Gesellschaften,F4","GEADR",""
 MENU 2,4,1,"Sparten,F5","CODEVA",""
 MENU 2,5,1,"Produkte,F6","VProd",""
 MENU 2,6,1,"Tarife,F7","TARI",""
 MENU 2,7,1,"Vertragssuche,F8","VERTRINFO",""
 REM CALL Fehler("","")
 IF gasp% AND workstation% <> 0 THEN 
   MENU 2,8,0,"Einstellungen,Alt+F10","SETUP",""
 ELSE 
   MENU 2,8,1,"Einstellungen,Alt+F10","SETUP",""
 END IF 
 MENU 2,9,1,"Dokumentenimport,F11","DOKUMENTSRV",""
 MENU 3,0,1,"&Optionen","",""
 REM MENU 3,1,1,"&Einstellungen","SETUP",""
 IF gasp% THEN 
   MENU 3,1,0,"&Reorganisation-siehe Firmenstammdaten","",""
     MENU 3,2,0,"Registrierung SmartPROVIS","Lizensier1",""
     MENU 3,3,0,"Lokale Rechnereinstellungen","LokalSetup",""
 ELSE 
   IF NOT MNdisabled%("REORGANISATION") THEN 
     MENU 3,1,1,"&Reorganisationder Datenbanken","ReorgDB1",""
   ELSE 
     MENU 3,1,0,"&Reorganisation-siehe Firmenstammdaten","",""
   END IF 
   REM MENU 3,2,1,"Registrierung SmartPROVIS","LizMussNeu",""
   REM MENU 3,2,1,"Registrierung SmartPROVIS","Lizensier1",""
   IF NOT MNdisabled%("LOCALSTAMMEDIT") THEN 
     MENU 3,3,1,"Lokale Rechnereinstellungen","LokalSetup",""
   ELSE 
     MENU 3,3,0,"Lokale Rechnereinstellungen","LokalSetup",""
   END IF 
 END IF 
 REM MENU 3,2,1,"Statistikwerte hochrechnen","StatistMen",""
 REM MENU 3,3,0,"Dateien korrigieren","GEKONDUpdate",""
 REM MENU 3,4,0,"&Konditionsanpassung","VKONDAkt",""
 REM MENU 3,5,0,"&SR-RÅckzahlung","SRZahlung"
 IF ReadConfig$("PROVIS","Custom1") LIKE "TRUE" THEN 
   REM MENU 3,6,1,"Komplettfreigabe","BOSSERT","öbergabe aller provisionierbaren VertrÑge"
 ELSE 
   REM MENU 3,6,0,"Komplettfreigabe","BOSSERT","öbergabe aller provisionierbaren VertrÑge"
 END IF 
 IF UCASE$ (ReadConfig$("PROVIS","IMMAK")) LIKE "TRUE" THEN 
   MENU 3,4,1,"SmartIMMAK","CIMMAK","Aufruf von SmartIMMAK"
 ELSE 
   MENU 3,4,0,"SmartIMMAK","CIMMAK","Aufruf von SmartIMMAK"
 END IF 
 IF gasp% = - 1 THEN 
   IF workstation% = 0 THEN 
     IF NOT MNdisabled%("VBUCHUNG") THEN 
       IF UCASE$ (GBVF$) = "TRUE" OR GBuchauszug$ LIKE "CBRTV" THEN MENU 3,5,1,"Buchauszug","Buchauszug",""
     END IF 
   END IF 
 ELSE 
   IF NOT MNdisabled%("VBUCHUNG") THEN 
     IF UCASE$ (GBVF$) = "TRUE" OR GBuchauszug$ LIKE "CBRTV" THEN MENU 3,5,1,"Buchauszug","Buchauszug",""
   END IF 
 END IF 
 
 CALL MNHilfe(5)
 
mnmainend: 
 REM CALL MNHilfe(2)
 END SUB 
 
 
SUB CIMMAK()
    cdir$ = DIRECTORY 
    DIRECTORY _netpath$
 
    IF NOT EXISTS ("IMMAK.SBR") THEN 
      CALL Fehler ("Das Immobilienmakler-System ist nicht in dieser Version implementiert!","Bei Interesse wenden Sie sich bitte an uns! (http://www.codie.com)")
      DIRECTORY cdir$
      GOTO endIMMAK3009001
    END IF 
    IF NOT PROGRAMFILE ("IMMAK") THEN LOAD "IMMAK.SBR", NEW 
    _projekt$ = "IMMAK"
    _ppath$ = _netpath$ + _projekt$ + "\"
    DIRECTORY _ppath$
 SET HELP FILE _netpath$ + _projekt$ + "\" + _projekt$ + ".HLP"
 SET QUERY ON 
 MOUSE OFF 
 CALL DFile(3,"anfrage" + _fpw$)
 CALL DFile(3,"immogrup" + _fpw$)
 CALL DFile(3,"objekte" + _fpw$)
 
 
 REM -- Laden der Bilddatenbank --
 
 Videokarte$ = ReadINI$("CLICK","available")
 IF UCASE$ (Videokarte$) LIKE "TRUE" THEN 
   VideoTreiber$ = ReadINI$("CLICK","driver")
   IF NOT PROGRAMFILE (VideoTreiber$) THEN LOAD _netpath$ + VideoTreiber$ + ".SBR", NEW 
 END IF 
 
 REM -- Einlesen der Auswahlarrays
 
 a% = 0
 OBArt$(0) = "<keine Zuordnung>"
 WHILE OBArt$(a%) <> "leer"
   a% = a% + 1
   OBArt$(a%) = FN ibm(ReadConfig$("IMMAK_Art","Art" + LTRIM$ ( STR$ (a%,"999999"))))
 WEND 
 OBArt$(a%) = ""
 
 a% = 0
 OBLage1$(0) = "<keine Zuordnung>"
 WHILE OBLage1$(a%) <> "leer"
   a% = a% + 1
   OBLage1$(a%) = FN ibm(ReadConfig$("IMMAK_Lage1","Lage" + LTRIM$ ( STR$ (a%,"999999"))))
 WEND 
 OBLage1$(a%) = ""
 
 a% = 0
 OBLage2$(0) = "<keine Zuordnung>"
 WHILE OBLage2$(a%) <> "leer"
   a% = a% + 1
   OBLage2$(a%) = FN ibm(ReadConfig$("IMMAK_Lage2","Lage" + LTRIM$ ( STR$ (a%,"999999"))))
 WEND 
 OBLage2$(a%) = ""
 
 a% = 0
 OBErschl$(0) = "<keine Zuordnung>"
 WHILE OBErschl$(a%) <> "leer"
   a% = a% + 1
   OBErschl$(a%) = FN ibm(ReadConfig$("IMMAK_Erschl","Erschl" + LTRIM$ ( STR$ (a%,"999999"))))
 WEND 
 OBErschl$(a%) = ""
  
 a% = 0
 OBBranche$(0) = "<keine Zuordnung>"
 WHILE OBBranche$(a%) <> "leer"
   a% = a% + 1
   OBBranche$(a%) = FN ibm(ReadConfig$("IMMAK_Branche","Branche" + LTRIM$ ( STR$ (a%,"999999"))))
 WEND 
 OBBranche$(a%) = ""
 
 
 
    CALL IMMAK()
    DIRECTORY _netpath$
    CLOSE PROGRAMFILE _netpath$ + "IMMAK.SBR"
    CLOSE PROGRAMFILE _netpath$ + "CLICKII.SBR"
endIMMAK3009001: 
    
    DIRECTORY cdir$
    _projekt$ = "PROVIS"
    _ppath$ = _netpath$ + _projekt$ + "\"
 END SUB 
  
 
  
 REM Anzeige Fehlerprotokoll - Konditionen
SUB ShowLog1()
 SET STATUS "Anzeige des Fehlerprotokolls"
 IF EXISTS (_netpath$ + "Kond.txt") THEN 
   REM LOAD TEXT _netpath$ + "Kond.txt"
   REM EDIT TEXT 
   kotxt$ = _netpath$ + "Kond.txt"
   a% = CALL ("ShellExecute",0,"open",kotxt$,"","",1)
 ELSE 
   CALL Fehler("Es konnte kein Fehlerprotokoll gefunden werden!","")
 END IF 
 SET STATUS "Bereit"
 END SUB 
 
SUB CreateLog1()
 OPEN _netpath$ + "Kond.txt" FOR OUTPUT 
 ? "Datei " + UCASE$ (_netpath$ + _projekt$) + "\Kond.txt erstellt am " + DATE$ ( TODAY ,"0d.mm.yyyy") + " / " + TIME$ ( NOW ,"hh:mm:ss")
 ? "-------------------------------------------------------------------------"
 ? 
 CLOSE OUTPUT 
 END SUB 
 
SUB CloseLog1()
 OPEN _netpath$ + "Kond.txt" FOR APPEND 
 ? 
 ? "-------------------------------------------------------------------------"
 ? "Eintragung beendet am " + DATE$ ( TODAY ,"0d.mm.yyyy") + "/" + TIME$ ( NOW ,"hh:mm:ss")
 CLOSE OUTPUT 
 CREATE DIALOG "PROT",0,0,244,154,title$,"MS Sans Serif",8
 ADD DIALOG "PROT",4,0,0,244,130,0,""
 ADD DIALOG "PROT",9,6,9,22,22,2
 ADD DIALOG "PROT",5,35,13,194,10,0,"WÑhrend der zuletzt durchgefÅhrten Aktion wurde eine"
 ADD DIALOG "PROT",5,35,23,194,10,0,"Protokolldatei erstellt, in der eventuelle Fehler und Zusatz-"
 ADD DIALOG "PROT",5,35,33,194,10,0,"information gespeichert wurden."
 ADD DIALOG "PROT",5,35,53,194,10,0,"WÑhlen Sie " + CHR$ (34) + "Ja" + CHR$ (34) + ", wenn Sie das Protokoll einsehen und"
 ADD DIALOG "PROT",5,35,63,194,10,0,"eventuell drucken wollen."
 ADD DIALOG "PROT",5,35,83,194,10,0,"WÑhlen Sie " + CHR$ (34) + "Nein" + CHR$ (34) + ", wenn Sie das Protokoll nicht"
 ADD DIALOG "PROT",5,35,93,194,10,0,"einsehen mîchten."
 ADD DIALOG "PROT",5,35,113,194,10,0,"Wollen Sie das Protokoll einsehen?"
 ADD DIALOG "PROT",1,118,134,55,15,0,"&Nein",0,0
 ADD DIALOG "PROT",1,62,134,55,15,1,"&Ja",1,1
 DIALOG "PROT",req%
 REMOVE DIALOG "PROT"
 IF req% = 1 THEN CALL ShowLog1()
 END SUB 
 
SUB WriteLog1(logtext$)
 OPEN _netpath$ + "Kond.txt" FOR APPEND 
 ? FN ansi(logtext$)
 CLOSE OUTPUT 
 END SUB 
 
SUB DeleteLog1()
 IF EXISTS (_netpath$ + "Kond.txt") THEN DELETE _netpath$ + "Kond.txt"
 END SUB 
 
 
 
 
 
 
 
 
 
 
 
 
  
SUB provmask()
 CALL DFile(22,"CONFIG" + _fpw$)
 FILE "config"
 IF GASP% THEN 
   ON ERROR GOTO alogerr160420021
   so$ = soll.config
   GOTO alogerr160420021a 
 ELSE 
   ON ERROR GOTO alogerr160420021
   so$ = soll.config
   GOTO alogerr160420021a
alogerr160420021: 
   CALL FldAdd1("SOLL","TXT;1",0)
alogerr160420021a: 
   ON ERROR GOTO alogerr160420022
   aas$ = asp.config
   GOTO alogerr160420023
alogerr160420022: 
   CALL FldAdd1("ASP","TXT;1",0)
   ON ERROR GOTO alogerr160420023
   SAVE FILE "config"
alogerr160420023: 
 END IF 
   ON ERROR GOTO ErrorHandler 
 CALL DFile(3,"STAMM" + _fpw$)
 FILE "stamm"
 ON ERROR GOTO fi080920051
 CALL FldAdd1("FirmaEinhTab","TXT;1",0)
 SAVE FILE "stamm"
fi080920051: 
 ON ERROR GOTO ErrorHandler 



     GAdrDat$ = "ADRESSEN"
     GConDat$ = "CONNECT"
     GTelDat$ = "TELEFON"
     GAkquiDat$ = "AKQUISE"
     GDokDat$ = "DOKUMENT"
 SELECT FIRST FILE "CONFIG"
 
 GSoll$ = Soll.config
 provverf$ = UCASE$ (ReadConfig$("PROVIS","PROVISVERFAHREN"))
 IF Geinh% = - 1 THEN 
   provverf$ = ";Zahlungseingang"
 END IF 
 IF provverf$ LIKE "Zahlungseingang" THEN 
 ELSE 
   GSoll$ = "n"
 END IF 
 
 ON ERROR GOTO ErrorHandler
 REM ** Maximale Anzahl Agenturen in FirstStep
 IF AnzAG.config > 0 THEN 
   fsmax% = AnzAG.config + agzus.config
   Anzag% = AnzAG.config
 ELSE 
   fsmax% = 0
 END IF 
 
 
 REM GDVVersion
 GGDV$ = gdv.config
 REM * * * Maklerversion##
 MAKLER$ = makler.config
 LPZ$ = UCASE$ (TempletonImport.config)
 REM GShowSpeziKond% = SpezKond.config
 REM keine Direktionsverwaltung in Stammdaten anzeigen
 IF Direktion.config = - 1 THEN 
   GNOAGDIR% = 0
 ELSE 
   GNOAGDIR% = - 1
 END IF 
 GNOAGDIR% = 0
 CALL DFile(3,"WAEHRUNG" + _fpw$)
 FILE "waehrung"
 INDEX waehrung
 SELECT FIRST 
 NUMBASE "z99999999.999999"
 aa% = 1
 _formend% = 0
 fir% = 0
 REM CALL Gauge(0,"")
 ss% = 1
 maske$ = "PROVIS"
 IF GProvismaske$ <> "" THEN 
   maske$ = GProvismaske$
 END IF 
 ON ERROR GOTO aprvmask250901001
 IF IntVerw.stamm LIKE "j" THEN maske$ = "PROVISI"
 IF GASP% THEN 
   maske$ = "ASPPROV"
   IF IntVerw.stamm LIKE "j" THEN maske$ = "ASPPROVI"
 END IF 
 IF GASP% AND GBENE% THEN 
   REM maske$ = "BENEPROV"
   maske$ = "BENEPROI"
 END IF 
 IF GFSC% THEN 
   maske$ = "PROVFSC"
 END IF 
 IF GBVF$ LIKE "TRUE" THEN 
   maske$ = "ASPBVF"
 END IF 
 GVertrArt$ = VertrArt.stamm
aprvmask250901001: 
 ON ERROR GOTO ErrorHandler
   PROVISsub% = 0
   Upd$ = UCASE$ (ReadConfig$(_projekt$,"UPDATE"))
   IF FORM <> maske$ THEN 
st3004981: 
     CALL MNMAIN()
     SET HEADING title$ + " - HauptÅbersicht"
     DIRECTORY _ppath$
     REM OPEN FORM "PROVIS"
     
     IF EXISTS (GPrjForm$ + maske$ + ".sbv") THEN 
       OPEN FORM GPrjForm$ + "\" + maske$
     ELSE 
       OPEN FORM GPrjForm$ + maske$
     END IF 
     provverf$ = ""
     SET f = Superbase.Form
     ss% = 1
     Version$ = GVersion$ + " vom " + GRelease$
     IF GLizFirma$ <> "" THEN 
       liz$ = "Registrierung fÅr Firma " + GLizFirma$ + "/" + GlizName$
     ELSE 
       liz$ = "DEMO Version "
     END IF 
     Release$ = GVariante$
     SELECT FIRST FILE "Config"
     b% = INSTR (PRGVersion.config,"-")
     IF AnzAG.config < 1 THEN 
       IF b% > 0 THEN 
         PRGVersion$ = MID$ (PRGVersion.config,1,b% - 1) + "+  " + MID$ (PRGVersion.config,b% + 1)
       ELSE 
         PRGVersion$ = PRGVersion.config + "+ "
       END IF 
     ELSE 
       PRGVersion$ = PRGVersion.config
     END IF 
     REM CALL Fehler("","")
     IF Makler.config = "TRUE" THEN 
       REM makk$ = "Vertrieb" + makk$ + "+ Kundenbeitragsinkasso"
       makk$ = PRGVersion$ + "+ Kundenbeitragsinkasso"
       PRGVersion$ = makk$
     END IF 
     IF TempletonImport.config = "TRUE" THEN 
       PRGVersion$ = PRGVersion$ + "-Templetonimport"
     END IF 
     IF AnzAG.config > 0 THEN 
       PRGVersion$ = PRGVersion$ + " - " + LTRIM$ ( STR$ (Anzag.config,"999999")) + " Agenturen"
     END IF 
     IF GTerminal% = - 1 THEN 
       PRGVersion$ = PRGVersion$ + " - online.center (MS Terminalserver)"
     END IF 
     IF Verwaltung.config = - 1 THEN 
       f.buchung.visible = 0
       f.buchung.enabled = 0
       f.butext.visible = 0
       f.butext.enabled = 0
     ELSE 
       f.buchung.visible = - 1
       f.buchung.enabled = - 1
       f.butext.visible = - 1
       f.butext.enabled = - 1
     END IF 
     IF Makler.config = "TRUE" THEN 
       f.zeinku.visible = - 1
       f.zeinku.enabled = - 1
       f.zeinkutxt.visible = - 1
       f.zeinkutxt.enabled = - 1
 
       f.makbu.visible = - 1
       f.makbu.enabled = - 1
       f.makbutext.visible = - 1
       f.makbutext.enabled = - 1
 
       f.kuink.visible = - 1
       f.kuink.enabled = - 1
       f.kuinktext.visible = - 1
       f.kuinktext.enabled = - 1
     ELSE 
       f.zeinku.visible = 0
       f.zeinku.enabled = 0
       f.zeinkutxt.visible = 0
       f.zeinkutxt.enabled = 0
       f.makbu.visible = 0
       f.makbu.enabled = 0
       f.makbutext.visible = 0
       f.makbutext.enabled = 0
       f.kuink.visible = 0
       f.kuink.enabled = 0
       f.kuinktext.visible = 0
       f.kuinktext.enabled = 0
     END IF 
     IF gdv.config = "TRUE" THEN 
       f.impgdv.visible = - 1
       f.impgdv.enabled = - 1
     ELSE 
       f.impgdv.visible = - 1
       f.impgdv.enabled = 0
     END IF 
     REM CALL Fehler("","")
     SET DISPLAY ON 
     prv$ = ""
     FORM 
     CALL HideStartup()
     GAppName$ = _netpath$ + "DOC\provis.pdf"
     SET STATUS "Hauptauswahl: WÑhlen Sie die gewÅnschte Funktion!"
   END IF 
   IF fsmax% > 0 THEN fsmaxag$ = LTRIM$ ( STR$ (AnzAG%,"99"))
   IF PrvVerfahr$ LIKE "Zahlungseingang" THEN 
     prv$ = "Real Cash"
     IF FirmaEinhTab.stamm LIKE "j" THEN 
       prv$ = "Real Cash(Einh.)"
     END IF 
     IF GLundWrigg$ LIKE "TRUE" THEN 
       prv$ = "Real Cash Lund&Wriggers"
     END IF 
     IF GAFSK$ LIKE "TRUE" THEN 
       prv$ = "Real Cash AFSK"
     END IF 
     IF GSoll$ = "j" AND GAFSK$ <> "TRUE" THEN 
       prv$ = prv$ + " mit Sollstellung"
     END IF 
     IF GBENE% THEN 
       f.sollst.visible = 0
       f.sollst.enabled = 0
       f.sollsttxt.visible = 0
     ELSE 
       f.sollst.visible = - 1
       f.sollst.enabled = - 1
     END IF 
     IF GAFSK$ LIKE "TRUE" THEN 
       f.sollst.visible = - 1
       f.sollst.enabled = - 1
       sollst$ = "Sutor"
       f.sollsttxt.Caption = "Sutor DatensÑtze gesamt"
     END IF 
     
   ELSE 
     f.sollst.visible = 0
     f.sollst.enabled = 0
     PrvVerfahr$ = "STANDARD"
     prv$ = "STANDARD"
     IF nurEinh.stamm LIKE "j" THEN 
       prv$ = "STANDARD(Einheitensystem)"
     END IF 
     IF GLundWrigg$ LIKE "TRUE" THEN 
       prv$ = "STANDARD Lund&Wriggers"
     END IF 
     IF GAFSK$ LIKE "TRUE" THEN 
       prv$ = "STANDARD AFSK"
     END IF 
     IF GBENE% THEN 
       prv$ = "STANDARD Benedict"
     END IF 
   END IF 
   IF GASP% THEN 
     prv$ = prv$ + " - ASP"
   END IF 
   IF PrvVerfahr$ <> "ZAHLUNGSEINGANG" THEN GShowSpeziKond% = 0
     GBVF$ = UCASE$ (ReadConfig$("PROVIS","BVF"))
     IF GBVF$ = "TRUE" THEN 
       PRGVersion$ = "BVF - Managementsystem"
     END IF 
   prv$ = ""
   FORM ss%
   ss% = PAGE 
   MENU ON 
   MOUSE ON 
 END SUB 
 
  
SUB TestMail()
  spath$ = _netpath$ + "emailsend.ini"
  ret% = CALL ("_SendEMAILAuto",SPath$)
 END SUB 
 
SUB ImpNeikron()
     GAdrDat$ = "ADRESSEN"
     GConDat$ = "CONNECT"
     GTelDat$ = "TELEFON"
     GAkquiDat$ = "AKQUISE"
     GDokDat$ = "DOKUMENT"
     GADRStat$ = "ADRSTAT"
 
 CALL DFile(2,"NEICR" + _fpw$)
 CALL DFile(2,"OFFICE\ADRESSEN" + _fpw$)
 CALL DFile(2,"OFFICE\TELEFON" + _fpw$)
 CALL DFile(3,"VProdukt" + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$):CALL DFile(3,"geadr2" + _fpw$)
 CALL DFile(3,"Tarif" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"kvertrag" + _fpw$)
 CALL DFile(3,"vorgang" + _fpw$)
 CALL DFile(3,"FONDS" + _fpw$)
 CALL DFile(3,"Kgeadr" + _fpw$)
 CALL DFile(3,"WAEHRUNG" + _fpw$)
 CALL DFile(3,"KUKTO" + _fpw$)
 CALL Fehler("Dateien geîffnet","")
 n$ = "neicr"
 FILE "geadr"
 INDEX Gesellschaft.geadr
 FILE n$
 INDEX name.n$
 SELECT FIRST LOCK 
 REM GOTO adr020620051
 WHILE NOT EOF (n$)
   feld1% = feld1.n$
   FOR i% = 0 TO 8
     fges$ = "ges" + STR$ (i%,"9") + ".neicr"
     gese$ = fges$$
     IF gese$ LIKE "KRAVAG*" THEN gese$ = "KRAVAG"
     IF gese$ LIKE "Dialog*" THEN gese$ = "Dialog Lebensvers. AG"
     IF gese$ LIKE "DKV*" THEN gese$ = "DKV Kranken"
     IF gese$ LIKE "Europa Versicherung*" THEN gese$ = "Europa Versicherungs AG"
 
     IF gese$ LIKE "Geneali*" OR gese$ LIKE "Genrali*" THEN gese$ = "Generali"
     IF gese$ LIKE "R + V*" OR gese$ LIKE "R+ V*" OR gese$ LIKE "R+V*" THEN gese$ = "R+V"
 
     IF gese$ LIKE "Haftpf*" AND gese$ LIKE "*Darm*" THEN gese$ = "Haftpflichtkasse Darmstadt"
     IF gese$ LIKE "KS*" AND gese$ LIKE "*Rech*" THEN gese$ = "KS Rechtsschutz"
     IF gese$ LIKE "KS*" AND gese$ LIKE "*Vers*" THEN gese$ = "KS Versicherungs AG"
     IF gese$ LIKE "LVM*" THEN gese$ = "LVM"
     IF gese$ LIKE "Rechts*" AND gese$ LIKE "*Unio*" THEN gese$ = "Rechtsschutz Union"
     IF gese$ LIKE "Signal Id*" AND gese$ LIKE "*Pensi*" THEN gese$ = "Signal Iduna Pensionskasse"
     IF gese$ LIKE "Uniq*" THEN gese$ = "Uniqa"
     IF gese$ LIKE "Vikt*" THEN gese$ = "Victoria Versicherung"
     IF gese$ LIKE "Volkswohl*" THEN gese$ = "Volkswohlbund"
     IF gese$ LIKE "ZÅri*" THEN gese$ = "ZÅrich Versicherung"
     IF gese$ LIKE "Goth*" THEN gese$ = "Gothaer Versicherung"
     IF gese$ LIKE "Contin*" THEN gese$ = "Continentale"
     IF gese$ LIKE "Baden*" THEN gese$ = "Baden Badener"
     SELECT FIRST FILE "geadr" INDEX Gesellschaft.geadr
     SELECT KEY gese$ FILE "geadr" INDEX Gesellschaft.geadr
     L% = LEN (gese$)
     IF gese$ <> "" THEN 

       IF LEFT$ (Gesellschaft.geadr,L%) LIKE gese$ THEN 
         codege% = codege.geadr
       ELSE 
         BLANK FILE "geadr"
         codege% = SER ("geadr",1)
         codege.geadr = codege%
         Gesellschaft.geadr = gese$
         _gesold$ = ""
         CALL QuickStore("Geadr")
       END IF 
       SELECT FIRST FILE n$ INDEX feld1.n$
       SELECT KEY feld1% LOCK FILE n$ INDEX feld1.n$
       fcodege$ = "codege" + STR$ (i%,"9") + ".neicr"
       fcodege$$ = codege%
       STORE FILE "neicr"
     END IF 
   NEXT i%
   
   SELECT NEXT LOCK FILE n$
 WEND 
 CALL Fehler("Gesellschaft fertig","")
 FILE "sparten"
 INDEX sparte.sparten
 FILE n$
 INDEX name.n$
 SELECT FIRST LOCK 
 
 WHILE NOT EOF (n$)
   feld1% = feld1.n$
   FOR i% = 0 TO 8
     fges$ = "sparte" + STR$ (i%,"9") + ".neicr"
     gese$ = fges$$
     IF gese$ LIKE "Rente *" OR gese$ LIKE "Rentenvers. *" THEN gese$ = "Rente"

     IF gese$ LIKE "KV*" THEN gese$ = "Kranken"
     IF gese$ LIKE "KV*" THEN gese$ = "Kranken"
     IF gese$ LIKE "LV*" THEN gese$ = "Leben"
     IF gese$ LIKE "Leben*" THEN gese$ = "Leben"
     IF gese$ LIKE "kfz*" THEN gese$ = "KFZ"
     IF gese$ LIKE "HV*" THEN gese$ = "Haftpflicht"
     IF gese$ LIKE "HR*" THEN gese$ = "Hausrat"
     IF gese$ LIKE "RS*" THEN gese$ = "Rechtschutz"
     IF gese$ LIKE "Recht*" THEN gese$ = "Rechtschutz"
     IF gese$ LIKE "Unfa*" THEN gese$ = "Unfall"
     IF gese$ LIKE "Bauleis*" THEN gese$ = "Bauleistung"
     IF gese$ LIKE "Betrieb-,Privat-u.Hundeh.*" THEN gese$ = "Betriebs+PHV+Hund"
     IF gese$ LIKE "Betriebsh.+PHV+Hund*" THEN gese$ = "Betriebs+PHV+Hund"
     IF gese$ LIKE "Betriebshaftpflichtvers.*" THEN gese$ = "Betriebshaftpflicht"
     IF gese$ LIKE "Betriebshaftpflichtv*" THEN gese$ = "Betriebshaftpflicht"
     IF gese$ LIKE "Betriebshaftpf. m.Privat-*" THEN gese$ = "Betriebs+PHV"
     IF gese$ LIKE "Betriebs-HV m. PHV*" THEN gese$ = "Betriebs+PHV"
     IF gese$ LIKE "Betriebs-Haftpflichtv.*" THEN gese$ = "Betriebshaftpflicht"
     IF gese$ LIKE "Betriebs- und Privat HV*" THEN gese$ = "Betriebs+PHV"
     IF gese$ LIKE "Betriebs- incl. Privat-HV*" THEN gese$ = "Betriebs+PHV"
     IF gese$ LIKE "BU*" THEN gese$ = "BU"
     IF gese$ LIKE "Elektronik*" THEN gese$ = "Elektronik"
     IF gese$ LIKE "Feuer+klein*" THEN gese$ = "FeuerkleinBU"
 
     IF gese$ LIKE "geb. GebÑude-Vers.*" THEN gese$ = "GebÑudeversicherung"
     IF gese$ LIKE "GebÑudevers.*" THEN gese$ = "GebÑudeversicherung"
 
     IF gese$ LIKE "GeschÑftsgebÑudevers.*" THEN gese$ = "GeschÑftsgebÑudevers."
     IF gese$ LIKE "GeschÑfts-GebÑudevers.*" THEN gese$ = "GeschÑftsgebÑudevers."
 
     IF gese$ LIKE "Gewerbliche GebÑudevers.*" THEN gese$ = "Gewerbliche GebÑudevers."
     IF gese$ LIKE "Gewerbl. GebÑudevers.*" THEN gese$ = "Gewerbliche GebÑudevers."

     IF gese$ LIKE "Haus*" AND gese$ LIKE "*Grundbes*" THEN gese$ = "Haus- und Grundbesitzer HV"
     

     SELECT FIRST FILE "sparten" INDEX sparte.sparten
     SELECT KEY gese$ FILE "sparten" INDEX sparte.sparten
     L% = LEN (gese$)
     IF gese$ <> "" THEN 
       IF LEFT$ (sparte.sparten,L%) LIKE gese$ THEN 
         codeva% = codeva.sparten
       ELSE 
         BLANK FILE "sparten"
         codeva% = SER ("sparten",1)
         codeva.sparten = codeva%
         sparte.sparten = gese$
         Vertragsart.sparten = "VERTR024"
         Formular.sparten = "VERTR024"
         CALL QuickStore("sparten")
       END IF 
       SELECT FIRST FILE n$ INDEX feld1.n$
       SELECT KEY feld1% LOCK FILE n$ INDEX feld1.n$
       fcodege$ = "codeva" + STR$ (i%,"9") + ".neicr"
       fcodege$$ = codeva%
       STORE FILE "neicr"
     END IF 
   NEXT i%
   
   SELECT NEXT LOCK FILE n$
 WEND 
 CALL Fehler("Sparten fertig","")

adr020620051: 

 FILE n$
 INDEX name.n$
 SELECT FIRST LOCK 
 nameold$ = ""
 strold$ = ""
 WHILE NOT EOF (n$)
   name$ = name.n$ + vorname.n$
   SET STATUS name$ + " " + stra·e.n$
   stra$ = stra·e.n$
   codeku% = codeku.n$
   feld1% = feld1.n$
anf020620051: 
   REM CALL Fehler(name$,stra·e.n$)
   IF name$ <> nameold$ THEN 
     nameold$ = name$
     strold$ = stra·e.n$
     REM neue Adresse in der Neikron - datei, muss wohl neu aufgenommen werden
     BLANK FILE GAdrDat$
     SET STATUS "Datensatz neu angelegt..."
     CodeKU% = SER (GAdrDat$,1)
     CodeKU.GAdrDat$ = codeku%
     EXPInternet.GADRDat$ = "j"
     IF GASP% THEN 
       Codema.GADRDat$ = codema%
       IF workstation.maadr > 0 THEN 
         Workstation.GADRDat$ = Workstation.maadr
         SELECT KEY workstation.maadr FILE "filiale" INDEX filialnr.filiale
         bueronr% = bÅronr.filiale
       ELSE 
         Workstation.GADRDat$ = zzz%
         SELECT FIRST FILE "filiale" INDEX filialnr.filiale
         SELECT KEY zzz% FILE "filiale" INDEX filialnr.filiale
         bueronr% = bÅronr.filiale
       END IF 
     END IF 
     Erstkontakt.GADRDat$ = TODAY 
     STORE FILE GAdrDat$
 
     UNLOCK CURRENT FILE GAdrDat$
     UNLOCK FILE GAdrDat$
     SELECT KEY codeku% LOCK FILE GAdrDat$ INDEX codeku.GAdrDat$
     ADRStatus.GAdrDat$ = "<OHNE ZUORDNUNG>"
     ADRGruppe.GAdrDat$ = "<OHNE ZUORDNUNG>"
     SELECT FIRST FILE "Stamm"
     MOUSE OFF 
     anrede.GAdrDat$ = anrede.n$
     nachname.GADRDat$ = name.n$
     vorname.GAdrDat$ = vorname.n$
     ort.GAdrDat$ = Wohnort.n$
     plz.GAdrDat$ = LTRIM$ (plz.n$)
     stra·e.GAdrDat$ = stra·e.n$
     k1blz.GAdrDat$ = blz.n$
     k1konto.GAdrDat$ = LEFT$ (KTO_Nr_.n$,17)
     k2blz.GAdrDat$ = blz_.n$
     k2konto.GAdrDat$ = LEFT$ (KTONr_.n$,17)
     Geburtstag.GAdrDat$ = geboren.n$

     Kundennummer.GAdrDat$ = LTRIM$ ( STR$ (feld1.n$,"999999"))
     stichwort.GADRDat$ = "IMPORT"
     Debitorkto.GAdrDat$ = LTRIM$ ( STR$ (nnum%,"999999"))
     AAKunde.GAdrDat$ = "j"
     AAMakler.GAdrDat$ = "n"
     AAMitarbeiter.GAdrDat$ = "n"
     AAInteressent.GAdrDat$ = "n"
     AALieferant.GAdrDat$ = "n"
     FIPrivat.GAdrDat$ = "n"
     FIATEC.GAdrDat$ = "j"
     FIIMMAK.GAdrDat$ = "n"
     BerProtok.GADRDat$ = "n"
     zero.GAdrDat$ = 0
     IF Bemerkung.n$ <> "" THEN Notiz.Gadrdat$ = Bemerkung.n$
     REM Workstation.GAdrDat$ = Workstation%
     REM QWoNo.GAdrDat$ = STR$ (Workstation%,"000000") + STR$ (codeku.GAdrDat$,"000000")
     RecStatus.GAdrDat$ = "c"
     CALL QuickStore(GAdrDat$)
     BLANK FILE "telefon"
     codetel.telefon = SER (codetel.telefon,1)
     codeku.telefon = codeku%
     Nummer.telefon = Telefon.n$
     art.telefon = "Telefon"
     fonoderfax.telefon = "n"
     KART1.telefon = "FON"
     CALL QuickStore ("telefon")
     BLANK FILE "telefon"
     codetel.telefon = SER (codetel.telefon,1)
     codeku.telefon = codeku%
     Nummer.telefon = Handy.n$
     art.telefon = "Handy"
     fonoderfax.telefon = "n"
     KART1.telefon = "MOBIL"
     CALL QuickStore ("telefon")
     BLANK FILE "telefon"
     codetel.telefon = SER (codetel.telefon,1)
     codeku.telefon = codeku%
     Nummer.telefon = Fax.n$
     art.telefon = "Fax"
     fonoderfax.telefon = "j"
     KART1.telefon = "FAX"
     CALL QuickStore ("telefon")
     BLANK FILE "telefon"
     codetel.telefon = SER (codetel.telefon,1)
     codeku.telefon = codeku%
     Nummer.telefon = e_mail.n$
     art.telefon = "email"
     fonoderfax.telefon = "n"
     KART1.telefon = "EMAIL"
     CALL QuickStore ("telefon")
     SELECT FIRST FILE n$ INDEX feld1.n$
     SELECT KEY feld1% LOCK FILE n$ INDEX feld1.n$
     codeku.n$ = codeku%
     STORE FILE n$
   ELSE 
     IF stra·e.n$ <> strold$ THEN 
       nameold$ = ""
       GOTO anf020620051
     END IF 
     REM Adresse schon in Neikron vorhanden
     IF codeku% < 1 THEN 
       SELECT FIRST FILE n$ INDEX feld1.n$
       SELECT KEY feld1% LOCK FILE n$ INDEX feld1.n$
       codeku.n$ = codeku%
       STORE FILE n$
     END IF 
   END IF 
   knr% = codeku%
   FOR i% = 0 TO 8
     feld1$ = "codevt" + STR$ (i%,"9") + ".neicr"
     fge$ = "codege" + STR$ (i%,"9") + ".neicr"
     fva$ = "codeva" + STR$ (i%,"9") + ".neicr"
     
     codevt% = 0
     lfdnr% = 0
     SET STATUS (nachname.adressen + "   codege: " + STR$ (fge$$,"000000") + "/codeva:" + STR$ (fva$$,"000000") + "/I:" + STR$ (i%,"9"))
     IF feld1$$ < 1 THEN 
      IF fge$$ > 0 AND fva$$ > 0 THEN 
       REM Vertrag noch nicht vorhanden, muss neu aufgenommen werden
       REM *****************************************************************
       BLANK FILE "KVERTRAG"
       lfdnr% = SER ("KVERTRAG",1)
       codevt% = lfdnr%
       CreateVertrag% = lfdnr%
       fsparte$ = "sparte" + STR$ (i%,"9") + ".neicr"
       fbegin$ = "Beginn" + STR$ (i%,"9") + ".neicr"
       fablauf$ = "Ablauf" + STR$ (i%,"9") + ".neicr"
       fstatus$ = "STATUS" + STR$ (i%,"9") + ".neicr"
       fversnr$ = "vers_nr" + STR$ (i%,"9") + ".neicr"
       fbeitrag$ = "beitrag" + STR$ (i%,"9") + ".neicr"
       fzw$ = "zw" + STR$ (i%,"9") + ".neicr"
       fsumme$ = "summe" + STR$ (i%,"9") + ".neicr"
       fkz$ = "kz" + STR$ (i%,"9") + ".neicr"
       Notiz.kvertrag = fsparte$$
 
       kennz$ = fkz$$
       Kennzeichen.kvertrag = LEFT$ (fkz$$,15)
       VS_NR.kvertrag = fversnr$$
       VS_Beginn.kvertrag = fbegin$$
       Tarif.kvertrag = fsumme$$
       bitr% = fbeitrag$$
       Bewertungssumme.kvertrag = fbeitrag$$
       Beitrag.kvertrag = fbeitrag$$
       KÅndigung.kvertrag = fablauf$$
       ErfasDatum.kvertrag = fbegin$$
       lfdnr.KVERTRAG = lfdnr%
       lfdnrtotal.KVERTRAG = lfdnr% * 10000
       SELECT FIRST FILE "adressen" INDEX codeku.adressen
       SELECT KEY knr% FILE "adressen" INDEX codeku.adressen
       codeku.KVERTRAG = knr%
       VNehmer.kvertrag = LEFT$ ( LTRIM$ ( TRIM$ (Nachname.adressen)) + "," + LTRIM$ ( TRIM$ (vorname.adressen)) + "," + LTRIM$ ( TRIM$ (Stra·e.adressen)) + "," + LTRIM$ ( TRIM$ (PLZ.adressen + " " + Ort.adressen)),210)
       codevp.kvertrag = 0
       ANachname.kvertrag = nachname.GAdrDat$
       AVorname.kvertrag = vorname.GAdrDat$
       AStrasse.kvertrag = Stra·e.GAdrDat$
       AOrt.kvertrag = Ort.GAdrDat$
       APLZ.kvertrag = Plz.GAdrDat$
       letzteBearb.kvertrag = 0
       CodeMV.KVERTRAG = 0
       codeGE.KVERTRAG = fge$$
       codeMA.KVERTRAG = 0
       codeVA.KVERTRAG = fva$$
       letzteBearb.KVERTRAG = fbegin$$
       Zahlart.KVERTRAG = 1
       Inkart.kvertrag = 2
       mwst.kvertrag = 0
       REM 141199
       codew.kvertrag = 3
       umrechnung.kvertrag = 1
       waehrung.kvertrag = "EUR"
       REM WaehrungBezeich.kvertrag = WaehrungBezeich.waehrung
       REM REQUEST "Wollen Sie einen Fremdvertrag erfassen?","",135,req%
       IF fstatus$$ LIKE "Antrag*" THEN 
         CodeVStatus.kvertrag = 12
         VStatusTxT.kvertrag = "Antrag"
       END IF 
       IF fstatus$$ LIKE "lebend*" THEN 
         CodeVStatus.kvertrag = 01
         VStatusTxT.kvertrag = "lebend"
       END IF 
       IF fstatus$$ LIKE "storno*" OR fstatus$$ LIKE "lebd.storno*" THEN 
         CodeVStatus.kvertrag = 04
         VStatusTxT.kvertrag = "storniert"
       END IF 
       IF fstatus$$ LIKE "Ant.storno*" THEN 
         CodeVStatus.kvertrag = 15
         VStatusTxT.kvertrag = "Antragswiderruf"
       END IF 







       ZW.KVERTRAG = 55
       IF fzw$$ LIKE "1/1" THEN 
         ZW.KVERTRAG = 1
       END IF 
       IF fzw$$ LIKE "1/2" THEN 
         ZW.KVERTRAG = 2
       END IF 
       IF fzw$$ LIKE "1/4" THEN 
         ZW.KVERTRAG = 4
       END IF 
       IF fzw$$ LIKE "1/12" THEN 
         ZW.KVERTRAG = 12
       END IF 
       IF fzw$$ LIKE "einmalig" THEN 
         ZW.KVERTRAG = 0
       END IF 
       cuvt% = lfdnr%
       spezProvAktiv.kvertrag = "n"
       CALL QuickStore("KVERTRAG")
       REM *****************************************************************
      END IF 
     ELSE 
       codevt% = feld1$$
       SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
       SELECT KEY codevt% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
     END IF 
     IF codevt% > 0 THEN 
       SELECT FIRST FILE n$ INDEX feld1.n$
       SELECT KEY feld1% LOCK FILE n$ INDEX feld1.n$
       fcodege$ = "codevt" + STR$ (i%,"9") + ".neicr"
       fcodege$$ = codevt%
       STORE FILE "neicr"
     END IF 
   NEXT i%
   REM nameold$ = name$
   SELECT NEXT LOCK FILE n$ INDEX name.n$
 WEND 
 END SUB 

SUB CODieCall()
     nr$ = "http://www.codie.com"
     nr$ = FN ansi(nr$)
     IF NOT EXISTS (GMACodeDir$ + "openurl.exe") THEN COPY _netpath$ + "local\openurl.exe" TO GMACodeDir$ + "openurl.exe"
     prg$ = GMACodeDir$ + "openurl.exe"
     IF EXISTS (GMACodeDir$ + "opurl.bat") THEN DELETE GMACodeDir$ + "opurl.bat"
     OPEN GMACodeDir$ + "opurl.bat" FOR APPEND 
     ? "echo OFF"
     ? prg$ + " " + CHR$ (34) + FN oem(nr$) + CHR$ (34)
     CLOSE OUTPUT 
     COPY FROM nr$
     REM CALL Fehler("Bitte im geîffneten Browser in der Adress-Eingabezeile STRG+V und anschlie·end ENTER drÅcken, dann wird Ihnen in Google-Maps die geografische Position der Adresse angezeigt!","")
     CALL (GMACodeDir$ + "opurl.bat"),0
 END SUB 

