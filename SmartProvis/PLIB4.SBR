  CALL main()


 '      ************************************************
 '      ** Routinen fÅr Formular "GEKOND" Konditionen **
 '      ************************************************
 
SUB CalcEinhEu()
 lfdnr% = lfdnr.gekond
 SELECT KEY lfdnr% LOCK FILE "GEKOND" INDEX lfdnr.gekond
 EuroEinheit.GEKOND = DMEinheit.GEKOND / Umrechnung.STAMM
 STORE FILE "GEKOND"
 UNLOCK CURRENT FILE "GEKOND"
 FORM 
 END SUB 
 
 
SUB GEKOND()
 ON ERROR GOTO ErrorHandler
 IF disabled%("GEKOND") THEN END SUB 
 CALL DFile(3,"sparten" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$)
 CALL DFile(3,"geadr2" + _fpw$)
 CALL DFile(3,"gekond" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"vprodukt" + _fpw$)
 FILE "gekond"
 REM INDEX QuickCodeGes.GEKOND
 INDEX codema.gekond
 REM SELECT WHERE 
 REM SELECT FIRST 
 cuma$ = STR$ (cuma%,"000000")
 REM SELECT FORM KEY cuma$ FILE "gekond" INDEX QuickCode.GEKOND
 SELECT KEY Glfdnr% FILE "gekond" INDEX lfdnr.GEKOND
 _continue% = 1
 IF CodeMA.GEKOND <> cuma% THEN 
   _continue% = 0
   REQUEST "Es wurden noch keine Konditionen fÅr " + LEFT$ (nachname.maadr,20) + " erfa·t!","Konditionen erfassen?",130,req%
   IF req% = 1 THEN 
     _continue% = 1
   END IF 
 END IF 
 IF _continue% = 1 THEN 
   _formend% = 0
   maske$ = "GEKOND"
   IF PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN maske$ = "GEKONDZ"
   IF GEinh% AND PrvVerfahr$ <> "ZAHLUNGSEINGANG" THEN 
     maske$ = "GEKONDE"
   END IF 
   IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
     maske$ = "GEKONDE2"
   END IF 
   IF GAFSK$ = "TRUE" THEN 
     maske$ = "GEKONDB"
   END IF 
   WHILE _formend% = 0
     ON ERROR GOTO ErrorHandler
     GEKONDsub% = 0
     IF UCASE$ ( FORM ) <> maske$ THEN 
       SELECT KEY Glfdnr% FILE "gekond" INDEX lfdnr.GEKOND
       SET HEADING title$ + " - Konditionen"
       REM OPEN FORM "gekond"
       IF EXISTS (GPrjForm$ + maske$ + ".sbv") THEN 
         OPEN FORM GPrjForm$ + maske$
       ELSE 
         OPEN FORM GPrjForm$ + maske$
       END IF 
       SET f = Superbase.Form
       CALL GEKONDIntro()
       CALL MNGEKOND()
       MENU ON 
       SET STATUS "Konditionsverwaltung"
     END IF 
     MOUSE ON 
     CALL ClearKBDBuffer()
     CALL GEKONDUpdate()
     f.abbruch.visible = 0
     f.abbruch.enabled = 0
     f.suchen.enabled = - 1
     f.suchen.visible = - 1
     CALL ClearKBDBuffer()
     MENU ON 
     ON ERROR GOTO err300920071
     f.eingbei.enabled = - 1
     eingbei$ = EingereichtBei.gekond
     IF eingbei$ = "" THEN 
       eingbei$ = "eingereicht Åber"
     END IF 
     IF MNdisabled%("SEEEINGBEI") THEN 
       eingbei$ = "wurde ausgeblendet"
       f.eingbei.enabled = 0
     END IF 
     FORM 
err300920071: 
     ON ERROR GOTO ErrorHandler
     MENU ON 
     IF GEKONDsub% <> 99 THEN WAIT MOUSE OR KEY OR MENU 
     
     REM ** Tastaturabfrage
     GET k$
     SELECT CASE ASC (k$)
     CASE CrsLeft%,PgUp%
       CALL GEKONDPrev()
     CASE CrsRight%,PgDn%
       CALL GEKONDNext()
     END SELECT 
     IF k$ = CHR$ (27) THEN _formend% = 1
     SELECT CASE GEKONDsub%
     CASE 105
     codekey% = lfdnr.gekond
     IF ag$ <> "j" THEN 
       IF NOT disabled%("EDITEINGBEI") AND NOT disabled%("SEEEINGBEI") THEN 
         geold% = CodeEingGE.gekond
         ge% = GetCodeGEE%(CodeEingGE.gekond)
         IF ge% = - 1 THEN GOTO abr300920073
         IF ge% = 0 THEN 
           IF ge% <> geold% THEN 
             MOUSE OFF 
             SELECT FIRST FILE "gekond" INDEX lfdnr.gekond
             SELECT KEY codekey% LOCK FILE "gekond" INDEX lfdnr.gekond
             CodeEingGE.gekond = 0
             EingereichtBei.gekond = ""
             eingbei$ = ""
             STORE FILE "gekond"
           END IF 
         ELSE 
           MOUSE OFF 
           SELECT FIRST FILE "gekond" INDEX lfdnr.gekond
           SELECT KEY codekey% LOCK FILE "gekond" INDEX lfdnr.gekond
           REM codevt% = lfdnr.kvertrag
           CodeEingGE.gekond = ge%
           EingereichtBei.gekond = gesellschaft.geadr
           eingbei$ = gesellschaft.geadr
           STORE FILE "gekond"
         END IF 
         FILE "gekond"
         FORM 
       END IF 
     ELSE 
       CALL Fehler("Diese Funktion wird in der Agentuvariante nicht unterstÅtzt!","")
     END IF 
abr300920073:   


     CASE 1
       CALL GEKONDSuchen()
     CASE 2
 
     CASE 3
       REM PlausibilitÑtsprÅfungen
       CALL DeleteLog1()
       CALL CreateLog1()
       MOUSE OFF 
       codemaakt% = codema.gekond
       quickcode1$ = Quickcode.gekond
       codema1ab% = codema.gekond
       quickcode1ab$ = Quickcode.gekond
       SELECT KEY codemaakt% FILE "maadr" INDEX codema.maadr
       codemavor% = vorgÑnger.maadr
       IF codemavor% > 0 AND codemavor% <> codemaakt% THEN 
         MOUSE OFF 
         SELECT KEY codemavor% FILE "maadr" INDEX codema.maadr
         namevor$ = Nachname.maadr + "," + LEFT$ (vorname.maadr,1) + "."
         SELECT KEY codemaakt% FILE "maadr" INDEX codema.maadr
         FILE "gekond"
         INDEX codema.gekond
         SELECT FIRST 
         SELECT KEY codemavor% FILE "gekond" INDEX codema.gekond
         REDIM AdrFound$(3 * RECCOUNT ("gekond"))
         tsfound% = 0
         CALL WriteLog1("PrÅfung, ob der VorgÑnger Konditionen besitzt, die der Nachfolger nicht hat")
         CALL WriteLog1("***************************************************************************")
         CALL WriteLog1("")
         WHILE NOT EOF ("gekond")
         REM PrÅfung, ob der VorgÑnger Konditionen besitzt, die der Nachfolger nicht hat
         SET STATUS "PrÅfung, ob der VorgÑnger Konditionen besitzt, die die Agentur nicht hat"
         IF codema.gekond = codemavor% THEN 
           quickvor$ = quickcode.gekond
           quickakt$ = STR$ (codemaakt%,"000000") + RIGHT$ (quickvor$,12)
           BWvonVor% = BWvon.gekond
           IF NOT EXISTS (quickakt$,quickcode.gekond) THEN 
             codege% = VAL ( MID$ (quickvor$,7,6))
             codeva% = VAL ( RIGHT$ (quickvor$,6))
             SELECT KEY codege% FILE "geadr" INDEX codege.geadr
             ges$ = Gesellschaft.geadr
             SELECT KEY codeva% FILE "sparten" INDEX codeva.sparten
             spar$ = Sparte.sparten
             AdrFound$(tsfound%) = "WARNUNG VG " + namevor$ + " besitzt Kondition " + ges$ + "," + spar$ + SPACE$ (100) + quickcode.gekond
             CALL WriteLog1("WARNUNG VG- Der VîrgÑnger: " + namevor$ + " besitzt die Kondition " + ges$ + "," + spar$ + " die die akt. Agentur noch nicht besitzt")
             tsfound% = tsfound% + 1
           ELSE 
             REM Bewertungszeitraum prÅfen
             SELECT KEY quickakt$ FILE "gekond" INDEX quickcode.gekond
             IF BWbis.gekond < 1 AND BWvon.gekond < BWvonVor% THEN 
               codege% = VAL ( MID$ (quickvor$,7,6))
               codeva% = VAL ( RIGHT$ (quickvor$,6))
               SELECT KEY codege% FILE "geadr" INDEX codege.geadr
               ges$ = Gesellschaft.geadr
               SELECT KEY codeva% FILE "sparten" INDEX codeva.sparten
               spar$ = Sparte.sparten
               AdrFound$(tsfound%) = "FEHLER BWVON " + namevor$ + " ist spÑter! " + ges$ + "," + spar$ + SPACE$ (100) + quickcode.gekond
               CALL WriteLog1("FEHLER BWVON (Bewertungszeitraum) " + namevor$ + " (VorgÑnger) fÑngt spÑter an, als bei der akt. Agentur! " + ges$ + "," + spar$)
               tsfound% = tsfound% + 1
             END IF 
           END IF 
         END IF 
         FILE "gekond"
         SELECT NEXT 
         WEND 
         FILE "gekond"
         INDEX codema.gekond
         SELECT FIRST 
         SELECT KEY codemaakt% FILE "gekond" INDEX codema.gekond
         REM CALL Fehler("TESTKondition","")
         CALL WriteLog1("")
         CALL WriteLog1("PrÅfung, ob die aktuelle Agentur Konditionen besitzt, die der VorgÑnger nicht hat")
         CALL WriteLog1("*********************************************************************************")
         CALL WriteLog1("")
         WHILE NOT EOF ("gekond")
         REM IF codema.gekond = codemavor% THEN 
         IF codema.gekond = codemaakt% THEN 
           REM PrÅfung, ob die aktuelle Agentur Konditionen besitzt, die der VorgÑnger nicht hat
           SET STATUS "PrÅfung, ob die Agentur Konditionen besitzt, die der VorgÑnger nicht hat"
           quickakt$ = quickcode.gekond
           REM CALL Fehler("TESTKondition","")
           IF MID$ (quickakt$,7,6) = "000168" THEN 
             REM CALL Fehler("TESTKondition","Gesellsch")
           END IF 
 
           REM quickvor$ = STR$ (codemavor%,"000000") + RIGHT$ (quickvor$,12)
           quickvor$ = STR$ (codemavor%,"000000") + RIGHT$ (quickakt$,12)
 
           IF NOT EXISTS (quickvor$,quickcode.gekond) THEN 
             codege% = VAL ( MID$ (quickvor$,7,6))
             codeva% = VAL ( RIGHT$ (quickvor$,6))
             SELECT KEY codege% FILE "geadr" INDEX codege.geadr
             ges$ = Gesellschaft.geadr
             SELECT KEY codeva% FILE "sparten" INDEX codeva.sparten
             spar$ = Sparte.sparten
             AdrFound$(tsfound%) = "FEHLER VG " + namevor$ + " besitzt Kondition NICHT-> " + ges$ + "," + spar$ + SPACE$ (100) + quickcode.gekond
             CALL WriteLog1("FEHLER VG - Der VorgÑnger: " + namevor$ + " besitzt diese Kondition NICHT-> " + ges$ + "," + spar$)
             tsfound% = tsfound% + 1
           END IF 
         END IF 
         SELECT NEXT 
         WEND 
         CALL WriteLog1("")
         FILE "gekond"
         INDEX codema.gekond
         SELECT FIRST 
         REM PrÅfung auf Gesellschaft und Sparte
         SET STATUS "PrÅfung auf Gesellschaft und Sparte"
         CALL WriteLog1("PrÅfung auf Gesellschaft und Sparte")
         CALL WriteLog1("***********************************")
         WHILE NOT EOF ("gekond")
         
           quickakt$ = quickcode.gekond
           codege% = codege.gekond
           codema% = codema.gekond
           codeva% = codeva.gekond
           SELECT KEY codege% FILE "geadr" INDEX codege.geadr
           ges$ = Gesellschaft.geadr
           SELECT KEY codeva% FILE "sparten" INDEX codeva.sparten
           spar$ = Sparte.sparten
           SELECT KEY codema% FILE "maadr" INDEX codema.maadr
           mitarb$ = TRIM$ (Nachname.maadr) + "," + TRIM$ (vorname.maadr)
           IF NOT EXISTS (codege%,codege.geadr) THEN 
             AdrFound$(tsfound%) = "keine Gesellschaft definiert " + ", " + spar$ + ", " + mitarb$ + SPACE$ (100) + quickcode.gekond
             CALL WriteLog1("keine Gesellschaft definiert " + ", " + spar$ + ", " + mitarb$)
             tsfound% = tsfound% + 1
           END IF 
           IF NOT EXISTS (codema%,codema.maadr) THEN 
             REMOVE FROM FILE "gekond" WHERE codema.gekond = codema%
           END IF 
           IF NOT EXISTS (codeva%,codeva.sparten) THEN 
             AdrFound$(tsfound%) = "keine Sparte definiert " + "," + ges$ + ", " + spar$ + ", " + mitarb$ + SPACE$ (100) + quickcode.gekond
             CALL WriteLog1("keine Sparte definiert " + "," + ges$ + ", " + spar$ + ", " + mitarb$)
             tsfound% = tsfound% + 1
           END IF 
         SELECT NEXT 
         WEND 
         AdrFound$(tsfound%) = ""
         SET STATUS ""
         CALL WriteLog1("")
         CALL WriteLog1("")
         CALL CloseLog1()
         IF tsfound% > 0 THEN 
           LAuswahl$ = AdrFound$(0)
           LAuswahl1$(0) = LAuswahl$
           CREATE DIALOG "ADRSTICHW",0,0,380,260,"Fehlerliste","MS Sans Serif",8
           ADD DIALOG "ADRSTICHW",7,5,6,370,235,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
           ADD DIALOG "ADRSTICHW",1,60,242,55,16,1,"&OK",1,1
           REM ADD DIALOG "ADRSTICHW",1,120,242,55,60,0,"&Fehlerprotokoll",0,0
           DIALOG "ADRSTICHW",req5%
           MOUSE ON 
           REMOVE DIALOG "ADRSTICHW"
           IF req5% = 1 THEN 
             LAuswahl$ = LAuswahl1$(0)
             quickcode1$ = RIGHT$ (LAuswahl$,18)
             SELECT FIRST 
             SELECT FORM KEY quickcode1$ FILE "gekond" INDEX quickcode.gekond
             FORM 
           END IF 
         ELSE 
           REQUEST "Keine Fehler gefunden !","",2
         END IF 
       ELSE 
         REM PrÅfung wenn kein VorgÑnger existiert
         IF RECCOUNT ("gekond") < 6000 THEN 
           REDIM AdrFound$(3 * RECCOUNT ("gekond"))
         ELSE 
           REDIM AdrFound$(20000)
         END IF 
         tsfound% = 0
         FILE "gekond"
         INDEX codema.gekond
         SELECT FIRST 
         REM PrÅfung auf Gesellschaft und Sparte
         WHILE NOT EOF ("gekond")
         REM PrÅfung, ob aktuell Konditionen besitzt, die der VorgÑnger nicht hat
           quickakt$ = quickcode.gekond
           codege% = codege.gekond
           codema% = codema.gekond
           codeva% = codeva.gekond
           SELECT KEY codege% FILE "geadr" INDEX codege.geadr
           ges$ = Gesellschaft.geadr
           SELECT KEY codeva% FILE "sparten" INDEX codeva.sparten
           spar$ = Sparte.sparten
           SELECT KEY codema% FILE "maadr" INDEX codema.maadr
           mitarb$ = TRIM$ (Nachname.maadr) + "," + TRIM$ (vorname.maadr)
           IF NOT EXISTS (codege%,codege.geadr) THEN 
             AdrFound$(tsfound%) = "keine Gesellschaft definiert " + ", " + spar$ + ", " + mitarb$ + SPACE$ (100) + quickcode.gekond
             tsfound% = tsfound% + 1
           END IF 
           IF NOT EXISTS (codema%,codema.maadr) THEN 
             REMOVE FROM FILE "gekond" WHERE codema.gekond = codema%
           END IF 
           IF NOT EXISTS (codeva%,codeva.sparten) THEN 
             AdrFound$(tsfound%) = "keine Sparte definiert " + "," + ges$ + ", " + spar$ + ", " + mitarb$ + SPACE$ (100) + quickcode.gekond
             tsfound% = tsfound% + 1
           END IF 
         SELECT NEXT 
         WEND 
         AdrFound$(tsfound%) = ""
         IF tsfound% > 0 THEN 
           LAuswahl$ = AdrFound$(0)
           LAuswahl1$(0) = LAuswahl$
           CREATE DIALOG "ADRSTICHW",0,0,380,260,"Fehlerliste","MS Sans Serif",8
           ADD DIALOG "ADRSTICHW",7,5,6,370,235,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
           ADD DIALOG "ADRSTICHW",1,163,242,55,16,1,"&OK",1,1
           REM ADD DIALOG "ADRSTICHW",1,103,242,55,16,0,"&Abbrechen",0,0
           DIALOG "ADRSTICHW",req5%
           MOUSE ON 
           REMOVE DIALOG "ADRSTICHW"
           IF req5% = 1 THEN 
             LAuswahl$ = LAuswahl1$(0)
             quickcode1$ = RIGHT$ (LAuswahl$,18)
             SELECT FIRST 
             SELECT FORM KEY quickcode1$ FILE "gekond" INDEX quickcode.gekond
             FORM 
           END IF 
         ELSE 
           REQUEST "Keine Fehler gefunden !","",2
         END IF 
       END IF 
       SELECT FORM KEY codema1ab% FILE "maadr" INDEX codema.maadr
       SELECT FORM KEY quickcode1ab$ FILE "gekond" INDEX Quickcode.gekond
       MOUSE ON 
  
     CASE 99
       IF GASP% THEN 
         IF Workstation% = 0 THEN 
           MENU OFF 
           CALL ButDesabled()
           f.fehlgek.enabled = 0
           
           IF Geinh% = 0 THEN 
             IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
             ELSE 
               f.calc.enabled = 0
             END IF 
           END IF 
           IF PAGE = 1 THEN ENTER BWvon.gekond,0
           f.fehlgek.enabled = - 1
           IF Geinh% = 0 THEN 
             IF FirmaEinhTab.stamm = "j" AND PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
             ELSE 
               f.calc.enabled = - 1
             END IF 
           END IF 
           CALL ButEnabled()
           IF PAGE = 2 THEN ENTER TZ0.gekond,0
         END IF 
       ELSE 
         MENU OFF 
         IF EXISTS (lfdnr.GEKOND,CodeKO.VKOND) THEN 
           tx1$ = " Wenn Sie jetzt diese Kondition Ñndern, lÑ·t sich bei den bereits erzeugten Buchungen nicht ohne weiteres nachverfolgen, wie diese entstanden sind."
           tx2$ = " Normalerweise werden die Konditionen nicht einfach geÑndert, sondern wird eine vorhandene Kondition mit einem Datum <BWbis> abgeschlossen und eine neue Kondition"
           tx3$ = " mit einem Datum <BWvon> erzeugt, die dann alle VertrÑge berÅcksichtigt, die ab dem Datum <BWvon> an die Provisionsabrechnung Åbergeben werden."
           CALL Fehler("Die Kondition, die Sie Ñndern wollen, wurde schon zur Berechnung von VertrÑgen benutzt." + tx1$,tx2$ + tx3$)
         END IF 
         CALL ButDesabled()
         f.fehlgek.enabled = 0
         IF Geinh% = 0 THEN f.calc.enabled = 0
         IF PAGE = 1 THEN ENTER BWvon.gekond,0
         f.fehlgek.enabled = - 1
         IF Geinh% = 0 THEN f.calc.enabled = - 1
         CALL ButEnabled()
         IF PAGE = 2 THEN ENTER TZ0.gekond,0
       END IF 
     CASE 100
       CALL MASGeadr()
     CASE 101
       CALL GesFiltGK()
     CASE 102
       CALL SparteFiltGK()
     END SELECT 
     MENU ON 
     GEKONDsub% = 0
   WEND 
 END IF 
 _formend% = 0
 SELECT WHERE FILE "gekond"
 FILE "maadr"
 cuko% = 0
 END SUB 
 
 
SUB GekoLoeGE()
 codege1% = codege.gekond
 CALL DFile(3,"vkond" + _fpw$)
 SELECT WHERE FILE "gekond"
 FILE "GEKOND"
 INDEX codege.gekond
 SELECT FIRST INDEX codege.gekond
 SELECT KEY codege1% LOCK FILE "gekond" INDEX codege.gekond
 i% = 0
 j% = 0
 WHILE NOT EOF ("gekond") AND codege.gekond = codege1%
 MOUSE OFF 
 j% = j% + 1
 IF codege.gekond = codege1% THEN 
   cuko% = lfdnr.GEKOND
   cuma% = codema.gekond
   Dateien$ = ""
   ok% = 1
   i% = i% + 1
   IF EXISTS (cuko%,CodeKO.VKOND) THEN 
     ok% = 0
     Dateien$ = Dateien$ + ", VertrÑge"
   END IF 
   MOUSE ON 
   IF ok% = 0 THEN 
     Dateien$ = RIGHT$ (Dateien$, LEN (Dateien$) - 2)
     CALL Fehler("Lîschen nicht mîglich!","Es existieren VerknÅpfungen zu den Dateien: " + Dateien$ + ".")
     SET STATUS "Datensatz konnte nicht gelîscht werden"
   ELSE 
     MOUSE OFF 
     REM REQUEST "Wollen Sie die aktuelle Kondition wirklich lîschen?","",135,req%
     req% = 1
     IF req% = 1 THEN 
       SELECT KEY cuko% LOCK FILE "GEKOND" INDEX lfdnr.GEKOND
       SELECT REMOVE FILE "GEKOND"
       SET STATUS "Datensatz wurde gelîscht"
     END IF 
   END IF 
   SELECT FIRST LOCK 
   SELECT KEY codege1% LOCK FILE "gekond" INDEX codege.gekond
 END IF 
 SET STATUS STR$ (j%) + "         " + STR$ (i%)
 SELECT NEXT LOCK 
 
 WEND 
 END SUB 
 
SUB GekoLoeVP()
 codevp1% = codevp.gekond
 CALL DFile(3,"vkond" + _fpw$)
 SELECT WHERE FILE "gekond"
 FILE "GEKOND"
 INDEX codevp.gekond
 SELECT FIRST INDEX codevp.gekond
 SELECT KEY codevp1% LOCK FILE "gekond" INDEX codevp.gekond
 i% = 0
 j% = 0
 WHILE NOT EOF ("gekond") AND codevp.gekond = codevp1%
 MOUSE OFF 
 j% = j% + 1
 IF codevp.gekond = codevp1% THEN 
   cuko% = lfdnr.GEKOND
   cuma% = codema.gekond
   Dateien$ = ""
   ok% = 1
   i% = i% + 1
   IF EXISTS (cuko%,CodeKO.VKOND) THEN 
     ok% = 0
     Dateien$ = Dateien$ + ", VertrÑge"
   END IF 
   MOUSE ON 
   IF ok% = 0 THEN 
     Dateien$ = RIGHT$ (Dateien$, LEN (Dateien$) - 2)
     CALL Fehler("Lîschen nicht mîglich!","Es existieren VerknÅpfungen zu den Dateien: " + Dateien$ + ".")
     SET STATUS "Datensatz konnte nicht gelîscht werden"
   ELSE 
     MOUSE OFF 
     REM REQUEST "Wollen Sie die aktuelle Kondition wirklich lîschen?","",135,req%
     req% = 1
     IF req% = 1 THEN 
       SELECT KEY cuko% LOCK FILE "GEKOND" INDEX lfdnr.GEKOND
       SELECT REMOVE FILE "GEKOND"
       SET STATUS "Datensatz wurde gelîscht"
     END IF 
   END IF 
   SELECT FIRST LOCK 
   SELECT KEY codevp1% LOCK FILE "gekond" INDEX codevp.gekond
 END IF 
 SET STATUS STR$ (j%) + "         " + STR$ (i%)
 SELECT NEXT LOCK 
 
 WEND 
 END SUB 
 
 
 
 
 ' GEKOND Intro
 ' =======================================================================
 
SUB GEKONDIntro()
 FILE "gekond"
 REM INDEX codema.GEKOND
 REM SELECT WHERE 
 REM SELECT FIRST 
 scode$ = STR$ (cuma%,"000000") + "000000"
 REM SELECT FORM KEY scode$ FILE "GEKOND" INDEX QuickCode.GEKOND
      bef$ = "Select where Codema.gekond = cuma%"
      IF GCodeVA% > 0 THEN 
        bef$ = bef$ + " AND CodeVA.gekond = GCodeVA%"
      END IF 
      IF GCodeGE% > 0 THEN 
        bef$ = bef$ + " AND CodeGE.gekond = GCodeGE%"
      END IF 
      EXECUTE bef$
 SELECT FORM KEY Glfdnr% FILE "gekond" INDEX lfdnr.GEKOND
 IF cuma% <> CodeMA.gekond THEN 
   CALL GEKONDNeu()
 ELSE 
   IF cuko% <> 0 THEN 
     SELECT FORM KEY cuko% FILE "GEKOND" INDEX lfdnr.GEKOND
   END IF 
 END IF 
 IF EXISTS (QCodeGEVA.gekond,QCodeGEVA.vprodukt) THEN 
   SELECT KEY QCodeGEVA.gekond FILE "Vprodukt" INDEX QCodegeVA.vprodukt
   IF kurzname.vprodukt <> "" THEN 
     vgessparte$ = Gesellschaft.VPRODUKT + " / " + Sparte.vprodukt + " / " + kurzname.VPRODUKT
   ELSE 
     vgessparte$ = Gesellschaft.VPRODUKT + " / " + Sparte.vprodukt
   END IF 
 ELSE 
   vgessparte$ = "Bitte wÑhlen Sie hier ein Produkt aus!"
 END IF 
 IF EXISTS (lfdnr.gekond,CodeKO.VKOND) THEN 
   REM f.combosparte.BackColor = 0
 ELSE 
   REM f.combosparte.BackColor = 8
 END IF 
 ON ERROR GOTO hideko200120041
 IF PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
   f.hidekond.visible = - 1
 ELSE 
   f.hidekond.visible = 0
 END IF 
hideko200120041: 
 ON ERROR GOTO ErrorHandler
 SET INDEX QuickCodeGes.GEKOND
 INDEX QuickCodeGes.GEKOND
 FORM 
 END SUB 
 
SUB GEKONDUpdate()
 SELECT KEY CodeGE.GEKOND FILE "GEADR" INDEX CodeGE.GEADR
 SELECT KEY CodeVA.GEKOND FILE "SPARTEN" INDEX CodeVA.SPARTEN
 SELECT KEY CodeMA.GEKOND FILE "MAADR" INDEX CodeMA.MAADR
 Gesellschaft$ = IF ( FOUND ("GEADR"),Gesellschaft.GEADR,"<keine Zuordnung>")
 Sparte$ = IF ( FOUND ("SPARTEN"),Sparte.SPARTEN,"<keine Zuordnung>")
 Agentur$ = Nachname.MAADR + ", " + Vorname.MAADR
 IF EXISTS (QCodeGEVA.gekond,QCodeGEVA.vprodukt) THEN 
   SELECT KEY QCodeGEVA.gekond FILE "Vprodukt" INDEX QCodegeVA.vprodukt
   IF kurzname.vprodukt <> "" THEN 
     vgessparte$ = Gesellschaft.VPRODUKT + " / " + Sparte.vprodukt + " / " + kurzname.VPRODUKT
   ELSE 
     vgessparte$ = Gesellschaft.VPRODUKT + " / " + Sparte.vprodukt
   END IF 
 ON ERROR GOTO w2909041
   IF Mwstprovjn.vprodukt LIKE "j" AND Mwstprov.vprodukt <> 0 THEN 
     f.mja.enabled = - 1
     f.mja.visible = - 1
     f.mnein.enabled = - 1
     f.mnein.visible = - 1
     f.textnein.visible = 0
   ELSE 
     f.mja.enabled = 0
     f.mja.visible = 0
     f.mnein.enabled = 0
     f.mnein.visible = 0
     f.textnein.visible = - 1
   END IF 
w2909041: 
 ON ERROR GOTO ErrorHandler
 ELSE 
   vgessparte$ = "Bitte wÑhlen Sie hier ein Produkt aus!"
 END IF 
 IF EXISTS (lfdnr.gekond,CodeKO.VKOND) THEN 
   REM f.combosparte.BackColor = 0
 ELSE 
   REM f.combosparte.BackColor = 8
 END IF 
 FORM 
 END SUB 
     
 
 
 ' GEKOND Neu
 ' =======================================================================
 
SUB GEKONDNeu()
 IF NEW ("gekond") OR MOD ("gekond") THEN CALL FStore("gekond")
 ff$ = WHERE 
 SELECT WHERE FILE "GEKOND"
 nsp% = GetVprodukt%(codege.gekond,codeva.gekond, - 1)
 IF nsp% > 0 THEN 
   SELECT KEY nsp% FILE "Vprodukt" INDEX codevp.vprodukt
   FILE "GEKOND"
   BLANK FORM 
   SET STATUS "Datensatz neu angelegt..."
   lfdnr.gekond = SER ("gekond",1)
   codema.gekond = cuma%
   CourtageZWjn.gekond = "n"
   PflegeNachZahlw.gekond = "n"
   codege.gekond = codege.vprodukt
   codeva.gekond = codeva.vprodukt
   codevp.gekond = codevp.vprodukt
   BWVon.gekond = "01.01.1990"
   CALL QuickStore("gekond")
   CALL GEKONDUpdate()
   SELECT FORM KEY cuma% FILE "maadr" INDEX codema.maadr
   GEKONDsub% = 99
   Glfdnr% = lfdnr.gekond
   SELECT KEY Glfdnr% FILE "Gekond" INDEX lfdnr.gekond
   REM IF ff$ <> "" THEN SELECT WHERE ff$ FILE "gekond"
   IF UCASE$ ( FORM ) LIKE "GEKONDA" THEN CALL GEKOND()
   REM FORM 
 END IF 
 REM IF UCASE$ ( FORM ) <> "GEKOND" THEN CALL GEKOND()
 END SUB 
 
 
 ' GEKOND Eintrag zurÅck
 ' =======================================================================
 
SUB GEKONDPrev()
 FILE "GEKOND"
 IF MOD ("GEKOND") OR NEW ("GEKOND") THEN CALL FStore("GEKOND")
 cuko% = lfdnr.gekond
 SET INDEX QuickCodeGes.GEKOND
 SELECT FORM PREVIOUS INDEX QuickCodeGes.gekond
 IF (codema.gekond <> cuma%) AND gekondtr% = 0 THEN 
   REQUEST "Keine weiteren Konditionen!","",2
   SELECT FORM KEY cuko% INDEX lfdnr.gekond
 END IF 
 FORM 
 END SUB 
 
 
 ' GEKOND Eintrag vor
 ' =======================================================================
 
SUB GEKONDNext()
 FILE "GEKOND"
 IF MOD ("GEKOND") OR NEW ("GEKOND") THEN CALL FStore("GEKOND")
 cuko% = lfdnr.gekond
 SET INDEX QuickCodeGes.GEKOND
 SELECT FORM NEXT INDEX QuickCodeGes.GEKOND
 IF (codema.gekond <> cuma%) AND gekondtr% = 0 THEN 
   REQUEST "Keine weiteren Konditionen!","",2
   SELECT FORM KEY cuko% INDEX lfdnr.gekond
 END IF 
 FORM 
 END SUB 
 
 
 ' GEKOND Suchen
 ' =======================================================================
 
SUB GEKONDSuchen()
 kond% = FindKond%(CodeMA.GEKOND)
 FILE "gekond"
 IF kond% <> 0 THEN 
   SELECT FORM KEY kond% INDEX lfdnr.gekond
   kuko% = kond%
 END IF 
 SET INDEX QuickCode.GEKOND
 INDEX QuickCode.GEKOND
 FORM 
 END SUB 
 
SUB GEKONDLoeschen()
 IF disabled%("GEKONDLOESCHEN") THEN END SUB 
 FILE "GEKOND"
 MOUSE OFF 
 CALL DFile(3,"vkond" + _fpw$)
 cuko% = lfdnr.GEKOND
 cuma% = codema.gekond
 Dateien$ = ""
 ok% = 1
 IF EXISTS (cuko%,CodeKO.VKOND) THEN 
   ok% = 0
   Dateien$ = Dateien$ + ", VertrÑge"
 END IF 
 MOUSE ON 
 IF ok% = 0 THEN 
   Dateien$ = RIGHT$ (Dateien$, LEN (Dateien$) - 2)
   CALL Fehler("Lîschen nicht mîglich!","Es existieren VerknÅpfungen zu den Dateien: " + Dateien$ + ".")
   SET STATUS "Datensatz konnte nicht gelîscht werden"
 ELSE 
   MOUSE OFF 
   REQUEST "Wollen Sie die aktuelle Kondition wirklich lîschen?","",135,req%
   IF req% = 1 THEN 
     SELECT KEY cuko% LOCK FILE "GEKOND" INDEX lfdnr.GEKOND
     SELECT REMOVE FILE "GEKOND"
     SET STATUS "Datensatz wurde gelîscht"
   END IF 
 END IF 
 FORM 
 IF NOT EXISTS (cuma%,codema.gekond) THEN 
   CALL Fehler("Es existieren keine weiteren Konditionen fÅr diese Agentur","")
   _formend% = 1
 END IF 
 MOUSE ON 
 END SUB 
 
 REM Lîschen von leeren Konditionen 
SUB GEKONDLoeSuch()
 IF disabled%("GEKONDLOESCHEN") THEN END SUB 
 CALL Fehler("Diese Funktion lîscht ALLE LEEREN Konditionen(Konditionen bei denen KEIN KREUZ bei AP, ","Stornoreserve, Courtage und Vertragsdauer vorhanden ist) bei allen Mitarbeiter!")
 REQUEST "Wollen Sie diese Konditionen wirklich lîschen?","",135,req%
 IF req% <> 1 THEN END SUB 
 FILE "GEKOND"
 SELECT WHERE FILE "GEKOND"
 INDEX lfdnr.gekond
 SELECT FIRST 
 MOUSE OFF 
 CALL DFile(3,"vkond" + _fpw$)
 i% = 0
 j% = RECCOUNT ("gekond")
 WHILE NOT EOF ("Gekond")
   
   cuko% = lfdnr.GEKOND
   cuma% = codema.gekond
   Dateien$ = ""
   ok% = 1
   IF EXISTS (cuko%,CodeKO.VKOND) THEN 
     ok% = 0
     Dateien$ = Dateien$ + ", VertrÑge"
   END IF 
   MOUSE ON 
   IF ok% = 0 THEN 
     Dateien$ = RIGHT$ (Dateien$, LEN (Dateien$) - 2)
     REM  CALL Fehler("Lîschen nicht mîglich!","Es existieren VerknÅpfungen zu den Dateien: " + Dateien$ + ".")
     REM SET STATUS "Datensatz konnte nicht gelîscht werden"
   ELSE 
     MOUSE OFF 
     REM REQUEST "Wollen Sie die aktuelle Kondition wirklich lîschen?","",135,req%
     req% = 1
     IF APjn.gekond <> "j" AND CourtageJN.gekond <> "j" AND srjn.gekond <> "j" AND VDjn.gekond <> "j" THEN 
       i% = i% + 1
       REM CALL Fehler("Test lîsch","")
       SELECT KEY cuko% LOCK FILE "GEKOND" INDEX lfdnr.GEKOND
       REM SELECT REMOVE FILE "GEKOND"
       REMOVE FROM FILE "GEKOND" WHERE lfdnr.GEKOND = cuko%
       SET STATUS STR$ (i%,"999999") + " von " + STR$ (j%,"999999") + " DatensÑtzen wurden gelîscht"
       SELECT PREVIOUS 
       SELECT PREVIOUS 
       SELECT PREVIOUS 
     END IF 
   END IF 
   SELECT NEXT LOCK 
 WEND 
 _formend% = 1
 REQUEST "Lîschen beendet!"
 MOUSE ON 
 END SUB 
  
 
FUNCTION FindKond%(ma%)
 cuge% = CodeGE.GEKOND
 cuva% = CodeVA.GEKOND
 cuko% = lfdnr.GEKOND
 cfile$ = FILE 
 DIM LGesellsch$( RECCOUNT ("GEADR"))
 DIM LSparten$( RECCOUNT ("SPARTEN"))
 DIM AuswGEADR$(1)
 DIM AuswSPARTEN$(1)
 FILE "GEADR"
 INDEX CodeGE.GEADR
 SELECT FIRST 
 a% = 0
 WHILE NOT EOF ("GEADR")
   LGesellsch$(a%) = Gesellschaft.GEADR
   IF inhaus.geadr = 1 THEN LGesellsch$(a%) = LGesellsch$(a%) + " **INH**"
   LGesellsch$(a%) = LGesellsch$(a%) + SPACE$ (120) + STR$ (CodeGE.GEADR,"000000")
   IF CodeGE.GEADR = cuge% THEN gprompt$ = LGesellsch$(a%)
   a% = a% + 1
   SELECT NEXT FILE "GEADR" INDEX CodeGE.GEADR
 WEND 
 FILE "SPARTEN"
 INDEX CodeVA.SPARTEN
 SELECT FIRST 
 a% = 0
 WHILE NOT EOF ("SPARTEN")
   LSparten$(a%) = Sparte.SPARTEN
   IF inhaus.sparten = 1 THEN LSparten$(a%) = LSparten$(a%) + " **INH**"
   LSparten$(a%) = LSparten$(a%) + SPACE$ (120) + STR$ (CodeVA.SPARTEN,"000000")
   IF CodeVA.SPARTEN = cuva% THEN sprompt$ = LSparten$(a%)
   a% = a% + 1
   SELECT NEXT FILE "SPARTEN" INDEX CodeVA.SPARTEN
 WEND 
 gesearch$ = "j"
 spsearch$ = "j"
 SELECT KEY ma% FILE "MAADR" INDEX CodeMA.MAADR
 CREATE DIALOG "SELGEKOND",0,0,465,251,"Konditionsauswahl: " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + ".","MS Sans Serif",8
 ADD DIALOG "SELGEKOND",5,40,10,420,27,0,"Bitte wÑhlen Sie die Gesellschaft und die Sparte aus, fÅr die Sie die Konditionen bearbeiten mîchten, benutzen Sie die Checkboxen um anzuzeigen, worÅber Sie suchen mîchten oder keine, fÅr alle Konditionen:"
 ADD DIALOG "SELGEKOND",9,10,19,20,21,2
 ADD DIALOG "SELGEKOND",2,6,40,123,11,0,"Suche Åber Gesellschaft","j","n",gesearch$
 ADD DIALOG "SELGEKOND",2,206,40,94,11,0,"Suche Åber Sparte","j","n",spsearch$
 ADD DIALOG "SELGEKOND",8,6,54,197,176,257,2,gprompt$,LGesellsch$
 ADD DIALOG "SELGEKOND",8,206,54,254,176,257,2,sprompt$,LSparten$
 ADD DIALOG "SELGEKOND",1,126,233,56,15,1,"&OK",1,1
 ADD DIALOG "SELGEKOND",1,186,233,56,15,0,"&Abbrechen",0,0
 DIALOG "SELGEKOND",req%
 REMOVE DIALOG "SELGEKOND"
 IF req% = 1 THEN 
   MOUSE OFF 
   geadr% = VAL ( RIGHT$ (gprompt$,6))
   sparte% = VAL ( RIGHT$ (sprompt$,6))
   IF RECCOUNT ("GEKOND") > 32000 THEN 
     DIM KondFound$(32000)
   ELSE 
     DIM KondFound$( RECCOUNT ("GEKOND"))
   END IF 
   DIM Auswahl$(1)
   FILE "GEKOND"
   IF gesearch$ = "j" AND spsearch$ = "j" THEN 
     INDEX QuickCode.GEKOND
     scode$ = STR$ (ma%,"000000") + STR$ (geadr%,"000000") + STR$ (sparte%,"000000")
     SELECT FIRST 
     SELECT KEY scode$ FILE "GEKOND" INDEX QuickCode.GEKOND
   ELSE 
     IF gesearch$ = "n" AND spsearch$ = "n" THEN 
       INDEX QuickCode.gekond
       scode$ = STR$ (ma%,"000000")
       SELECT FIRST 
       SELECT KEY scode$ FILE "GEKOND" INDEX QuickCode.GEKOND
     ELSE 
       INDEX CodeMA.GEKOND
       SELECT FIRST 
       SELECT KEY ma% FILE "GEKOND" INDEX Codema.GEKOND
     END IF 
   END IF 
   a% = 0
   FILE "gekond"
   IF gesearch$ = "j" AND spsearch$ = "j" THEN WHILE QuickCode.GEKOND LIKE scode$ AND NOT EOF ("GEKOND") AND a% < 3200
   IF gesearch$ = "j" AND spsearch$ = "n" THEN WHILE CodeMA.gekond = ma% AND NOT EOF ("GEKOND") AND a% < 32000
   IF gesearch$ = "n" AND spsearch$ = "j" THEN WHILE CodeMA.gekond = ma% AND NOT EOF ("GEKOND") AND a% < 32000
   IF gesearch$ = "n" AND spsearch$ = "n" THEN WHILE CodeMA.gekond = ma% AND NOT EOF ("GEKOND") AND a% < 32000
     IF BWvon.GEKOND < 1 THEN BWvon$ = "__.__.____" ELSE BWvon$ = DATE$ (BWvon.GEKOND,"0d.mm.yyyy")
     IF BWbis.GEKOND < 1 THEN BWbis$ = "__.__.____" ELSE BWbis$ = DATE$ (BWbis.GEKOND,"0d.mm.yyyy")
     ListItem$ = ""
     IF APjn.gekond = "j" THEN ListItem$ = ListItem$ + "; Abschlu·provision " + STR$ (AP.GEKOND,",999.00")
     IF CourtageJN.gekond = "j" THEN ListItem$ = ListItem$ + "; Courtage " + STR$ (Courtage.GEKOND,",999.00")
     IF PflegeJN.gekond = "j" THEN ListItem$ = ListItem$ + "; Pflege " + STR$ (PflegeProvi.GEKOND,",999.00")
     IF VDjn.gekond = "j" THEN ListItem$ = ListItem$ + "; Abschlu· (LZ)"
     IF TZjn.gekond = "j" THEN ListItem$ = ListItem$ + "; Teilzahlung"
     IF PauschaleJN.gekond = "j" THEN ListItem$ = ListItem$ + "; Pauschale " + STR$ (Pauschale.GEKOND,",99999.00")
     IF gesearch$ = "n" AND spsearch$ = "j" THEN 
       geadr% = Codege.gekond
       SELECT KEY geadr% FILE "geadr" INDEX codege.geadr
       ges$ = gesellschaft.geadr
       IF codeVA.gekond = sparte% THEN 
         KondFound$(a%) = ges$ + "   " + BWvon$ + "-" + BWbis$ + ListItem$ + SPACE$ (120) + STR$ (lfdnr.GEKOND,"000000")
         a% = a% + 1
       END IF 
       SELECT NEXT FILE "GEKOND" INDEX CodeMA.GEKOND
     END IF 
     IF gesearch$ = "j" AND spsearch$ = "n" THEN 
       sparte% = Codeva.gekond
       SELECT KEY sparte% FILE "sparten" INDEX codeva.sparten
       spa1$ = sparte.sparten
       IF codeGE.gekond = geadr% THEN 
         KondFound$(a%) = spa1$ + "   " + BWvon$ + "-" + BWbis$ + ListItem$ + SPACE$ (120) + STR$ (lfdnr.GEKOND,"000000")
         a% = a% + 1
       END IF 
       SELECT NEXT FILE "GEKOND" INDEX CodeMA.GEKOND
     END IF 
     IF gesearch$ = "j" AND spsearch$ = "j" THEN 
       KondFound$(a%) = BWvon$ + "-" + BWbis$ + ListItem$ + SPACE$ (120) + STR$ (lfdnr.GEKOND,"000000")
       a% = a% + 1
       SELECT NEXT FILE "GEKOND" INDEX QuickCode.GEKOND
     END IF 
     IF gesearch$ = "n" AND spsearch$ = "n" THEN 
       geadr% = Codege.gekond
       SELECT KEY geadr% FILE "geadr" INDEX codege.geadr
       ges$ = gesellschaft.geadr
       sparte% = Codeva.gekond
       SELECT KEY sparte% FILE "sparten" INDEX codeva.sparten
       spa1$ = sparte.sparten
       IF codeVA.gekond = sparte% THEN 
         KondFound$(a%) = ges$ + "/" + spa1$ + "/" + BWvon$ + "-" + BWbis$ + ListItem$ + SPACE$ (120) + STR$ (lfdnr.GEKOND,"000000")
         a% = a% + 1
       END IF 
       SELECT NEXT FILE "GEKOND" INDEX QuickCode.gekond
     END IF 
   WEND 
   MOUSE ON 
   IF a% <> 0 THEN a% = a% - 1
   SELECT KEY geadr% FILE "GEADR" INDEX CodeGE.GEADR
   SELECT KEY sparte% FILE "SPARTEN" INDEX CodeVA.SPARTEN
   CREATE DIALOG "SELGEKOND",0,0,376,251,"Konditionsauswahl: " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + "., " + Gesellschaft.GEADR + "/" + Sparte.SPARTEN,"MS Sans Serif",8
   ADD DIALOG "SELGEKOND",4,0,0,374,220,0,""
   ADD DIALOG "SELGEKOND",9,9,16,21,25,2
   ADD DIALOG "SELGEKOND",5,38,16,193,10,0,"WÑhlen Sie die Kondition aus, die Sie bearbeiten mîchten:"
   ADD DIALOG "SELGEKOND",5,40,31,130,9,0,"Bewertungszeitraum, Kondition"
   ADD DIALOG "SELGEKOND",7,20,42,340,169,2,2,KondFound$,Auswahl$,KondFound$(0)
   ADD DIALOG "SELGEKOND",1,124,227,58,17,1,"&OK",1,1
   ADD DIALOG "SELGEKOND",1,184,227,60,17,0,"&Abbrechen",0,0
   DIALOG "SELGEKOND",req%
   REMOVE DIALOG "SELGEKOND"
   IF req% = 1 THEN 
     FindKond% = VAL ( RIGHT$ (Auswahl$(0),6))
   END IF 
 ELSE 
   FindKond% = 0
 END IF 
 FILE cfile$
 SELECT WHERE FILE "gekond"
 SELECT FORM KEY cuko% FILE "GEKOND" INDEX lfdnr.GEKOND
 END FUNCTION 
  
 
 
 
 ' QuickCode erzeugen (fÅr Transfer/18.11.93)
 ' =======================================================================
 
SUB GEKONDUpd()
 MOUSE OFF 
 SET STATUS "Mitarbeitercodes in Mitarbeiterdatei werden angepa·t..."
 FILE "MAADR"
 UPDATE CodeMA.MAADR = 1 WHERE CodeMA.MAADR = 0
 END UPDATE 
 SET STATUS "VorgÑngercodes in Mitarbeiterdatei werden angepa·t..."
 UPDATE VorgÑnger.MAADR = 1 WHERE VorgÑnger.MAADR = 0
 END UPDATE 
 SET STATUS "Mitarbeitercodes in Konditionsdatei werden angepa·t..."
 FILE "GEKOND"
 UPDATE CodeMA.GEKOND = 1 WHERE CodeMA.GEKOND = 0
 END UPDATE 
 SET STATUS "QuickCode fÅr Konditionsdatei wird neu generiert..."
 UPDATE QuickCode.GEKOND = STR$ (CodeMA.gekond,"000000") + STR$ (CodeGE.gekond,"000000") + STR$ (CodeVA.gekond,"000000")
 END UPDATE 
 FILE "kvertrag"
 SET STATUS "Vertragsdatei wird korrigiert..."
 UPDATE CodeMA.kvertrag = 1 WHERE codeMA.kvertrag = 0
 END UPDATE 
 MOUSE ON 
 REQUEST "Dateien wurden erfolgreich korrigiert!","",100
 SET STATUS "Bereit"
 END SUB 
 
 
 ' GEKOND TI ???
 ' =======================================================================
 
SUB TIGEKOND()
 cuko% = lfdnr.GEKOND
 _formend% = 1
 REM SELECT KEY cuko% FILE "GEKOND" INDEX lfdnr.GEKOND
 END SUB 
 
 
 
 ' Konditionen Åbernehmen
 ' =======================================================================
 
SUB GEKONDUebern()
 cuma1% = codema.maadr
 cuma% = codema.maadr
 CALL DFile(3,"vkond" + _fpw$)
 CALL DFile(3,"gekondm" + _fpw$)
 cuko% = lfdnr.gekond
 von$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 bis$ = ""
 opt% = 1
 GOTO GeAnf0611961
GeAnf0611960: 
 CALL Fehler("Die Datumseingabe ist falsch!","Sie mu· in der Form 0d.mm.yyyy erfolgen")
GeAnf0611961:  
 CREATE DIALOG "UEBERNAHME",0,0,268,225,"DatenÅbernahme","MS Sans Serif",8
    ADD DIALOG "UEBERNAHME",4,0,0,268,205,0,""
    ADD DIALOG "UEBERNAHME",9,6,14,22,22,2
    ADD DIALOG "UEBERNAHME",5,37,14,141,10,0,"Bitte wÑhlen Sie aus, mit welcher Methode"
    ADD DIALOG "UEBERNAHME",5,37,24,149,9,0,"die Musterdaten Åbernommen werden sollen:"
    ADD DIALOG "UEBERNAHME",3,37,46,137,10,0,"alle &ersetzen",1,opt%
    ADD DIALOG "UEBERNAHME",3,37,86,137,11,0,"er&gÑnzen",2,opt%
    ADD DIALOG "UEBERNAHME",3,37,124,137,12,0,"an&hÑngen",3,opt%
    ADD DIALOG "UEBERNAHME",5,48,57,196,11,0,"es werden alle bestehenden Konditionen gelîscht"
    ADD DIALOG "UEBERNAHME",5,48,67,194,9,0,"und durch die Daten der Musteragentur ersetzt"
    ADD DIALOG "UEBERNAHME",5,48,99,194,9,0,"Åbernimmt alle Konditionen der Musteragentur, fÅr die noch"
    ADD DIALOG "UEBERNAHME",5,48,108,194,10,0,"keine Daten in der Konditionsdatei vorhanden sind"
    ADD DIALOG "UEBERNAHME",5,48,137,194,10,0,"Åbernimmt alle Konditionen der Musteragentur, fÅr einen"
    ADD DIALOG "UEBERNAHME",5,48,147,209,9,0,"neuen Bewertungszeitraum und schlie·t die alten Konditionen"
    ADD DIALOG "UEBERNAHME",5,48,156,90,10,0,"mit Bewertungszeitraum bis:"
    ADD DIALOG "UEBERNAHME",6,140,156,41,12,0,0,bis1$,10
    ADD DIALOG "UEBERNAHME",5,38,176,170,11,0,"Bewertungszeitraum fÅr die neuen Konditionen:"
    ADD DIALOG "UEBERNAHME",6,66,188,40,13,0,0,von$,10
    ADD DIALOG "UEBERNAHME",6,132,188,41,13,0,0,bis$,10
    ADD DIALOG "UEBERNAHME",5,48,190,17,10,0,"&von:"
    ADD DIALOG "UEBERNAHME",5,114,190,16,10,0,"&bis:"
    ADD DIALOG "UEBERNAHME",1,68,208,55,15,1,"&OK",1,1
    ADD DIALOG "UEBERNAHME",1,126,208,55,15,0,"&Abbrechen",0,0
 DIALOG "UEBERNAHME",req%
 REMOVE DIALOG "UEBERNAHME"
 IF req% = 1 THEN 
   vkondakt% = 1
   ON ERROR GOTO GeAnf0611960
   IF bis1$ <> "" THEN b1% = DAYS (bis1$)
   IF von$ <> "" THEN v% = DAYS (von$)
   IF bis$ <> "" THEN b% = DAYS (bis$)
   ON ERROR GOTO ErrorHandler
   REQUEST "Die gewÑhlte Funktion nimmt énderungen Ihrer Stammdaten vor!","Funktion fortsetzen?",130,req%
   IF req% = 1 THEN 
     MOUSE OFF 
     IF opt% = 1 THEN 
       REM 150697 PrÅfung, ob die vorhandenen Provisionen bei bereits abgerechneten VertrÑgen existieren,
       REM wenn ja dann verweigern
       IF EXISTS (cuma%,codema.vkond) THEN 
         text1$ = " Entweder deaktivieren Sie alle betroffenen VertrÑge,oder Sie Ñndern die Konditionen von Hand!"
         CALL Fehler("Sie kînnen die alten Konditionen nicht lîschen und durch neue Konditionen ersetzen,","da bereits VertrÑge mit diesen Konditionen an die Abrechnung Åbergeben wurden!" + text1$)
         REQUEST "WÅnschen Sie eine öbersicht der betroffenen VertrÑge ?","",130,re150697%
         IF re150697% = 1 THEN 
           CALL VTUebersi(cuma%)
         END IF 
         GOTO KondEndMu150697
       END IF 
       SET STATUS "Konditionen werden gelîscht..."
       REMOVE FROM FILE "GEKOND" WHERE CodeMA.GEKOND = cuma%
     END IF 
     IF opt% = 3 THEN 
       SET STATUS "Konditionen werden mit abgeschlossen..."
       FILE "gekond"
       INDEX codema.gekond
       SELECT FIRST 
       SELECT KEY cuma% LOCK FILE "gekond" INDEX codema.gekond
       WHILE NOT EOF ("gekond") AND codema.gekond = cuma%
         BWbis.gekond = bis1$
         CALL QuickStore("gekond")
       SELECT NEXT LOCK 
       WEND 
       SELECT FIRST 
       SELECT KEY cuma% FILE "gekond" INDEX codema.gekond
     END IF 
     SET STATUS "DatenÅbernahme..."
     nrmax% = RECCOUNT ("GEKONDM")
     _a% = 0
     _erg% = 0
     SELECT FIRST FILE "gekondm" INDEX lfdnr.gekondm
     WHILE NOT EOF ("gekondm")
       scode$ = STR$ (cuma%,"000000") + STR$ (CodeGE.gekondm,"000000") + STR$ (CodeVA.gekondm,"000000")
       SELECT KEY scode$ FILE "GEKOND" INDEX QuickCode.GEKOND
       _a% = _a% + 1
       IF _erg% = 0 THEN 
         SET STATUS "DatenÅbernahme... " + LTRIM$ ( STR$ (_a%,"9999")) + " von " + LTRIM$ ( STR$ (nrmax%,"9999")) + " geprÅft"
       ELSE 
         SET STATUS "DatenÅbernahme... " + LTRIM$ ( STR$ (_a%,"9999")) + " von " + LTRIM$ ( STR$ (nrmax%,"9999")) + " geprÅft / " + LTRIM$ ( STR$ (_erg% + 1,"9999")) + " Åbernommen"
       END IF 
       IF NOT FOUND ("GEKOND") OR opt% = 1 OR opt% = 3 THEN 
         IF CodeGE.GEKONDM <> 0 AND CodeVA.GEKONDM <> 0 THEN 
           _erg% = _erg% + 1
           BLANK FILE "GEKOND"
           CodeGE.gekond = CodeGE.gekondm
           CodeVA.gekond = CodeVA.gekondm
           CodeMA.gekond = cuma%
           BWvon.gekond = von$
           BWbis.gekond = bis$
           VD1Dauer.gekond = VD1Dauer.gekondm
           VD1AP.gekond = VD1AP.gekondm
           VD1SR.gekond = VD1SR.gekondm
           VD1HZ.gekond = VD1HZ.gekondm
           VD2Dauer.gekond = VD2Dauer.gekondm
           VD2AP.gekond = VD2AP.gekondm
           VD2SR.gekond = VD2SR.gekondm
           VD2HZ.gekond = VD2HZ.gekondm
           VD3Dauer.gekond = VD3Dauer.gekondm
           VD3AP.gekond = VD3AP.gekondm
           VD3SR.gekond = VD3SR.gekondm
           VD3HZ.gekond = VD3HZ.gekondm
           VD4Dauer.gekond = VD4Dauer.gekondm
           VD4AP.gekond = VD4AP.gekondm
           VD4SR.gekond = VD4SR.gekondm
           VD4HZ.gekond = VD4HZ.gekondm
           VD5Dauer.gekond = VD5Dauer.gekondm
           VD5AP.gekond = VD5AP.gekondm
           VD5SR.gekond = VD5SR.gekondm
           VD5HZ.gekond = VD5HZ.gekondm
           AP.gekond = AP.gekondm
           Courtage.gekond = Courtage.gekondm
           CourtageZW.gekond = CourtageZW.gekondm
           CourtageZWjn.gekond = CourtageZWjn.gekondm
           SR.gekond = SR.gekondm
           Haftung.gekond = Haftung.gekondm
           PflegeProvi.gekond = PflegeProvi.gekondm
           PflegeZeit.gekond = PflegeZeit.gekondm
           PflegeZW.gekond = PflegeZW.gekondm
           Pauschale.gekond = Pauschale.gekondm
           Formel.gekond = Formel.gekondm
           Dynamik.gekond = Dynamik.gekondm
           Maximierung.gekond = Maximierung.gekondm
           BWjn.gekond = BWjn.gekondm
           VDjn.gekond = VDjn.gekondm
           TZjn.gekond = TZjn.gekondm
           PflegeJN.gekond = PflegeJN.gekondm
           PauschaleJN.gekond = PauschaleJN.gekondm
           FormelJN.gekond = FormelJN.gekondm
           DynamikJN.gekond = DynamikJN.gekondm
           MaximierungJN.gekond = MaximierungJN.gekondm
           APjn.gekond = APjn.gekondm
           CourtageJN.gekond = CourtageJN.gekondm
           SRjn.gekond = SRjn.gekondm
           TZD0.gekond = TZD0.gekondm
           TZD1.gekond = TZD1.gekondm
           TZD2.gekond = TZD2.gekondm
           TZD3.gekond = TZD3.gekondm
           TZD4.gekond = TZD4.gekondm
           TZD5.gekond = TZD5.gekondm
           TZD6.gekond = TZD6.gekondm
           TZD7.gekond = TZD7.gekondm
           TZD8.gekond = TZD8.gekondm
           TZD9.gekond = TZD9.gekondm
           TZD10.gekond = TZD10.gekondm
           TZD11.gekond = TZD11.gekondm
           TZ0.gekond = TZ0.gekondm
           TZ1.gekond = TZ1.gekondm
           TZ2.gekond = TZ2.gekondm
           TZ3.gekond = TZ3.gekondm
           TZ4.gekond = TZ4.gekondm
           TZ5.gekond = TZ5.gekondm
           TZ6.gekond = TZ6.gekondm
           TZ7.gekond = TZ7.gekondm
           TZ8.gekond = TZ8.gekondm
           TZ9.gekond = TZ9.gekondm
           TZ10.gekond = TZ10.gekondm
           TZ11.gekond = TZ11.gekondm
           lfdnr.gekond = SER ("gekond",1)
           DPeriode.gekond = DPeriode.gekondm
           Anpass.gekond = 1
           Notiz.gekond = Notiz.gekondm
           Rechart.gekond = Rechart.gekondm
           Faktor.gekond = Faktor.gekondm
           REM 270597
           REM CourtHaftUnbeg.gekond = CourtHaftUnbeg.gekondm
           PflegeNachZahlw.gekond = PflegeNachZahlw.gekondm
           CourtEinstellen.gekond = CourtEinstellen.gekondm
           REM 220697
           DMEinheit.gekond = DMEinheit.gekondm
           CALL QuickStore("GEKOND")
           MOUSE OFF 
         END IF 
       END IF 
       SELECT NEXT FILE "gekondm" INDEX lfdnr.gekondm
     WEND 
   END IF 
 END IF 
 MOUSE ON 
 SELECT FIRST 
 SELECT KEY cuma1% FILE "maadr" INDEX CodeMA.maadr
 SELECT KEY cuma1% FILE "gekond" INDEX CodeMA.gekond
 FORM 
 IF req% = 1 THEN 
   REQUEST "Mîchten Sie die Åbenommenen Konditionen anpassen?","Beachten Sie, da· die Kond.d.Musteragentur als 100% angesehen werden",130,req130%
   IF req130% = 1 THEN 
     MOUSE OFF 
     CALL ANPASSUNG2()
     MOUSE ON 
   ELSE 
     UPDATE anpass.gekond = 0 WHERE anpass.gekond = 1
     END UPDATE 
     CLOSE FILE "gekond"
     CALL DFile(3,"gekond" + _fpw$)
   END IF 
 END IF 
 REM 270597
 REM 150697
 REM IF vkondakt% = 1 THEN 
   REM CALL Fehler("Es ist notwendig die VertrÑge automatisch neu zur Provisionsabrechnung zuzuordnen","Jetzt durchfÅhren? Wenn NEIN dann Åber MenÅ Optionen/Reorganisation durchfÅhren")
   REM REQUEST "Anpassungen jetzt vornehmen lassen?","Wenn NEIN, dan spÑter Åber MenÅ Optionen/Reorganisation!!!",130,req%
   REM IF req% = 1 THEN CALL VKONDAkt()
 REM END IF 
KondEndMu150697: 
 SELECT KEY cuma1% FILE "maadr" INDEX CodeMA.maadr
 SELECT KEY cuma1% FILE "gekond" INDEX CodeMA.gekond
 FORM 
 SET STATUS "Bereit"
 END SUB 
 
 
 REM Konditionen von VorgÑnger Åbernehmen
 
SUB VORKONDUebern()
 lcuma% = codema.maadr
 lcuma1% = lcuma%
 CALL DFile(3,"vkond" + _fpw$)
 CALL DFile(3,"gekond" + _fpw$)
 cuko% = lfdnr.gekond
 von$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 bis$ = ""
 opt% = 1
 GOTO VGAnf0511961
VGAnf0511960: 
 CALL Fehler("Die Datumseingabe ist falsch!","Sie mu· in der Form 0d.mm.yyyy erfolgen")
VGAnf0511961: 
 REM öbernahme der Konditionen des VorgÑngers
     ok% = - 1
     SELECT KEY cuma% FILE "maadr" INDEX codema.maadr
     REM 110197 bel.madr
     REM vorg% = vorgÑnger.maadr
     rep% = GetCodeMA%(_cuma%,Workstation%)
     IF rep% <> 0 THEN 
       vorg% = rep%
     ELSE 
       vorg% = 0
     END IF 
     IF vorg% > 0 THEN 
       IF vorg% = lcuma% THEN 
         REM ok% = 0
         REM CALL Fehler("VorgÑnger = Mitarbeiter","Es kînnen keine Konditionen Åbernommen werden!")
       END IF 
     ELSE 
       ok% = 0
       CALL Fehler("Es wurde keine Agentur definiert, von der die Konditionen Åbernommen werden kînnen","")
     END IF 
 req% = 0
 IF ok% = - 1 THEN 
 CREATE DIALOG "UEBERNAHME",0,0,264,245,"DatenÅbernahme","MS Sans Serif",8
 ADD DIALOG "UEBERNAHME",4,0,0,257,221,0,""
 ADD DIALOG "UEBERNAHME",9,6,14,22,22,2
 ADD DIALOG "UEBERNAHME",5,36,14,157,10,0,"Bitte wÑhlen Sie aus, mit welcher Methode"
 ADD DIALOG "UEBERNAHME",5,37,24,202,9,0,"die Konditionen des VorgÑngers Åbernommen werden sollen:"
 ADD DIALOG "UEBERNAHME",3,30,45,137,10,0,"alle &ersetzen",1,opt%
 ADD DIALOG "UEBERNAHME",3,30,85,137,11,0,"er&gÑnzen",2,opt%
 ADD DIALOG "UEBERNAHME",3,30,123,138,12,0,"an&hÑngen",3,opt%
 ADD DIALOG "UEBERNAHME",5,30,57,196,11,0,"es werden alle bestehenden Konditionen gelîscht"
 ADD DIALOG "UEBERNAHME",5,30,67,195,9,0,"und durch die Daten der VorgÑngeragentur ersetzt"
 ADD DIALOG "UEBERNAHME",5,30,99,207,9,0,"Åbernimmt alle Konditionen der VorgÑngeragentur, fÅr die noch"
 ADD DIALOG "UEBERNAHME",5,30,108,194,10,0,"keine Daten in der Konditionsdatei vorhanden sind"
 ADD DIALOG "UEBERNAHME",5,30,137,195,10,0,"Åbernimmt alle Konditionen der VorgÑngeragentur, fÅr einen"
 ADD DIALOG "UEBERNAHME",5,29,147,181,24,0,"neuen Bewertungszeitraum und Abschlu· der alten Konditionen mit dem Berwertungszeitraum Datum bis:"
 ADD DIALOG "UEBERNAHME",6,210,152,40,12,0,0,bis1$,10
 ADD DIALOG "UEBERNAHME",5,29,180,144,10,0,"Bewertungszeitraum fÅr neue Konditionen:"
 ADD DIALOG "UEBERNAHME",6,48,194,41,12,0,0,von$,10
 ADD DIALOG "UEBERNAHME",6,114,194,41,12,0,0,bis$,10
 ADD DIALOG "UEBERNAHME",5,30,195,17,10,0,"&von:"
 ADD DIALOG "UEBERNAHME",5,96,195,17,10,0,"&bis:"
 ADD DIALOG "UEBERNAHME",1,68,225,54,15,1,"&OK",1,1
 ADD DIALOG "UEBERNAHME",1,125,225,56,15,0,"&Abbrechen",0,0
 DIALOG "UEBERNAHME",req%
 REMOVE DIALOG "UEBERNAHME"
 END IF 
 IF req% = 1 THEN 
   ON ERROR GOTO VGAnf0511960
   vkondakt% = 0
   IF bis1$ <> "" THEN b1% = DAYS (bis1$)
   IF von$ <> "" THEN v% = DAYS (von$)
   IF bis$ <> "" THEN b% = DAYS (bis$)
   ON ERROR GOTO ErrorHandler
   REQUEST "Die gewÑhlte Funktion nimmt énderungen Ihrer Stammdaten vor!","Funktion fortsetzen?",130,req%
   IF req% = 1 THEN 
     datumueb% = 0
     IF opt% = 1 AND GKondNoDattes$ = "TRUE" THEN 
       REQUEST "Sollen die Datumsangaben fÅr Bewertung von","und Bewertung bis  vom VorgÑnger Åbernommen werden?",130,req1%
       IF req1% = 1 THEN datumueb% = - 1
     END IF 
     MOUSE OFF 
     IF opt% = 2 THEN 
       REQUEST "Mîchten Sie nur die nicht abgeschlossenen","Konditionen Åbernehmen?",130,reqnurakt%
     END IF 
     IF opt% = 1 THEN 
       REQUEST "Mîchten Sie nur die nicht abgeschlossenen","Konditionen Åbernehmen?",130,reqnurakt%
       REM 150697 PrÅfung, ob die vorhandenen Provisionen bei bereits abgerechneten VertrÑgen existieren,
       REM wenn ja dann verweigern
       REM IF EXISTS (cuma%,codema.vkond) THEN 
       IF EXISTS (lcuma%,codema.vkond) THEN 
         text1$ = " Entweder deaktivieren Sie alle betroffenen VertrÑge,oder Sie Ñndern die Konditionen von Hand!"
         CALL Fehler("Sie kînnen die alten Konditionen nicht lîschen und durch neue Konditionen ersetzen,","da bereits VertrÑge mit diesen Konditionen an die Abrechnung Åbergeben wurden!" + text1$)
         REQUEST "WÅnschen Sie eine öbersicht der betroffenen VertrÑge ?","",130,re150697%
         IF re150697% = 1 THEN 
           CALL VTUebersi(cuma%)
         END IF 
         GOTO KondEndAG150697
       END IF 
       IF EXISTS (lcuma%,codema.gekond) THEN vkondakt% = 1
       SET STATUS "Konditionen werden gelîscht..."
       REMOVE FROM FILE "GEKOND" WHERE CodeMA.GEKOND = lcuma%
       IF datumueb% = - 1 THEN 
         REM Trick: nach dem die Konditionen gelîschtwurden, wird dafÅr gesorgt, da· die zu Åbernehmenden Konditionen
         REM mit Ihrem Originaldatum Åbernommen werden und au·erdem das alle Konditionen Åbernommen werden,
         REM auch doppelte Konditionen
         opt% = 3
       END IF 
     END IF 
     IF opt% = 3 THEN 
       MOUSE OFF 
       SET STATUS "Konditionen werden mit abgeschlossen..."
       FILE "gekond"
       INDEX codema.gekond
       SELECT FIRST 
       IF RECCOUNT ("gekond") > 1 THEN 
         SELECT KEY lcuma% LOCK FILE "gekond" INDEX codema.gekond
       ELSE 
         SELECT LAST 
       END IF 
       i% = 0
       WHILE NOT EOF ("gekond") AND codema.gekond = lcuma%
         IF BWbis.gekond < 1 THEN 
           i% = i% + 1
           SET STATUS STR$ (i%,"999999") + " SÑtze bearbeitet!"
           BWbis.gekond = bis1$
           CALL MATimeStamp("gekond")
           CALL QuickStore("gekond")
         END IF 
         MOUSE OFF 
       SELECT NEXT LOCK 
       WEND 
       SELECT FIRST 
       SELECT KEY lcuma% FILE "gekond" INDEX codema.gekond
     END IF 
     SET STATUS "DatenÅbernahme..."
     nrmax% = RECCOUNT ("GEKOND")
     _a% = 0
     _erg% = 0
     IF ok% = - 1 THEN 
       IF RECCOUNT ("gekond") < 10000 THEN 
         DIM TempVect%(25000)
         DIM TempBWBIS%(25000)
       ELSE 
         DIM TempVect%(25000)
         DIM TempBWBIS%(25000)
       END IF 
       FILE "gekond"
       INDEX codema.gekond
       SELECT FIRST 
       SELECT KEY vorg% FILE "gekond" INDEX codema.gekond
       a% = 0
       b% = 0
       WHILE NOT EOF ("gekond") AND codema.gekond = vorg%
         IF reqnurakt% = 1 THEN 
           IF BWBIS.gekond < 1 OR BWBIS.gekond > TODAY THEN 
             TempVect%(a%) = lfdnr.gekond
             TempVect%(a% + 1) = BWVON.gekond
             TempBWBIS%(b%) = BWBIS.gekond
             REM 110197 TempVect%(a% + 1) = v%
             a% = a% + 2
             b% = b% + 1
             SET STATUS STR$ (a%,"999999")
           END IF 
         ELSE 
           TempVect%(a%) = lfdnr.gekond
           TempVect%(a% + 1) = BWVON.gekond
           TempBWBIS%(b%) = BWBIS.gekond
           REM 110197 TempVect%(a% + 1) = v%
           a% = a% + 2
           b% = b% + 1
           SET STATUS STR$ (a%,"999999")
         END IF 
       SELECT NEXT 
       WEND 
       REM CALL Fehler("Test Kondition","")
       k% = 0
       FOR i% = 0 TO a% - 2 STEP 2
         SELECT FIRST 
         SELECT KEY TempVect%(i%) FILE "gekond" INDEX lfdnr.gekond
         REM 12092003 scode$ = STR$ (cuma%,"000000") + STR$ (CodeGE.gekond,"000000") + STR$ (CodeVA.gekond,"000000")
         scode$ = STR$ (lcuma%,"000000") + STR$ (CodeGE.gekond,"000000") + STR$ (CodeVA.gekond,"000000")
         REM 281199 IF NOT EXISTS (scode$,quickcode.GEKOND) OR opt% = 1 OR opt% = 3 THEN 
 
         IF NOT EXISTS (scode$,quickcode.GEKOND) OR opt% = 3 THEN 
 
           IF CodeGE.GEKOND <> 0 AND CodeVA.GEKOND <> 0 THEN 
             bwbis% = 0
             bis$ = ""
             _erg% = _erg% + 1
             IF datumueb% = - 1 THEN 
               bwvon% = TempVect%(i% + 1)
               bwbis% = TempBWBIS%(i%)
               von$ = DATE$ (bwvon%,"0d.mm.yyyy")
               IF bwbis% > 0 THEN bis$ = DATE$ (bwbis%,"0d.mm.yyyy")
               k% = k% + 1
             END IF 
             IF GKondNoDattes$ = "TRUE" THEN 
               BLANK DUPLICATE 
               lfdnr.gekond = SER ("gekond",1)
               Codema.gekond = lcuma%
               BWvon.gekond = von$
               IF bis$ <> "" THEN BWbis.gekond = bis$
               anpass.gekond = 1
               CALL MATimeStamp("gekond")
               CALL QuickStore("gekond")
             ELSE 
               IF von$ <> "" THEN 
                 IF v% > TempVect%(i% + 1) THEN 
                   REM 110197 bwvon% = TempVect%(i% + 1)
                   bwvon% = v%
                 ELSE 
                   REM 110197 bwvon% = v%
                   bwvon% = TempVect%(i% + 1)
                 END IF 
               ELSE 
                 bwvon% = TempVect%(i% + 1)
               END IF 
               IF bis$ <> "" THEN 
                 IF b% < bwvon% THEN bis$ = ""
               END IF 
               BLANK DUPLICATE 
               lfdnr.gekond = SER ("gekond",1)
               Codema.gekond = lcuma%
               BWvon.gekond = bwvon%
               BWbis.gekond = bis$
               anpass.gekond = 1
               CALL MATimeStamp("gekond")
               CALL QuickStore("gekond")
             END IF 
             MOUSE OFF 
           END IF 
         END IF 
         SET STATUS STR$ (i%,"999999") + " SÑtze bearbeitet!"
       NEXT i%
     END IF 
   END IF 
 END IF 
 MOUSE ON 
 SELECT FIRST 
 SELECT FORM KEY lcuma1% FILE "gekond" INDEX CodeMA.gekond
 SELECT FORM KEY lcuma1% FILE "maadr" INDEX CodeMA.maadr
 FORM 
 IF req% = 1 THEN 
   REQUEST "Mîchten Sie die Åbenommenen Konditionen anpassen?","Beachten Sie, da· die Kond.des VorgÑngers als 100% angesehen werden",130,req130%
 
   IF req130% = 1 THEN 
     
     MOUSE OFF 
     SELECT FORM KEY lcuma1% FILE "gekond" INDEX CodeMA.gekond
     SELECT FORM KEY lcuma1% FILE "maadr" INDEX CodeMA.maadr
     CALL ANPASSUNG2()
     REM stornoanpassung
     MOUSE ON 
   ELSE 
     UPDATE anpass.gekond = 0 WHERE anpass.gekond = 1
     END UPDATE 
     CLOSE FILE "gekond"
     CALL DFile(3,"gekond" + _fpw$)
   END IF 
   SELECT FIRST 
   SELECT FORM KEY lcuma1% FILE "gekond" INDEX CodeMA.gekond
   SELECT FORM KEY lcuma1% FILE "maadr" INDEX CodeMA.maadr
   FORM 
 END IF 
 SET STATUS "Bereit"
 REM 150597
 REM 150697
 REM IF vkondakt% = 1 THEN 
   REM CALL Fehler("Es ist notwendig die VertrÑge automatisch neu zur Provisionsabrechnung zuzuordnen","Jetzt durchfÅhren? Wenn NEIN dann Åber MenÅ Optionen/Reorganisation durchfÅhren")
   REM REQUEST "Anpassungen jetzt vornehmen lassen?","Wenn NEIN, dan spÑter Åber MenÅ Optionen/Reorganisation!!!",130,req%
   REM IF req% = 1 THEN CALL VKONDAkt()
 REM END IF 
KondEndAG150697: 
 END SUB 
 
  
  
 
 
 
 
 
 ' Auswahl Gesellschaft (Konditionen)
 ' =======================================================================
 ' 31.07.94  - in Prozedur geÑndert
 
SUB MASGeadr()
 IF NEW ("gekond") OR MOD ("gekond") THEN CALL FStore("gekond")
 cuge% = CodeGE.gekond
 cuko% = lfdnr.gekond
 cuma% = codema.gekond
 IF UCASE$ ( FORM ) = "GEKOND" THEN 
   CALL DFile(3,"vkond" + _fpw$)
   Dateien$ = ""
   ok% = 1
   IF EXISTS (cuko%,CodeKO.VKOND) THEN 
     ok% = 0
     Dateien$ = Dateien$ + ", VertrÑge"
     CALL Fehler("Es kann keine anderes Produkt zugewiesen werden,","da bereits VertrÑge, die diese Kondition benutzen an die Provisionsabrechnung Åbergeben wurden!")
   ELSE 
     nsp% = GetVprodukt%(codege.gekond,codeva.gekond, - 1)
   END IF 
 END IF 
 IF nsp% <> 0 THEN 
   MOUSE OFF 
    SELECT KEY nsp% FILE "vprodukt" INDEX codevp.vprodukt
    SELECT KEY codeva.vprodukt FILE "sparten" INDEX codeva.sparten
    codeva% = codeva.sparten
    SELECT KEY codege.vprodukt FILE "geadr" INDEX codege.geadr
    sparte$ = sparte.sparten
    ges$ = Gesellschaft.geadr
    codege% = codege.geadr
    codegrsp% = codegrsp.sparten
   SELECT KEY cuko% LOCK FILE "gekond" INDEX lfdnr.gekond
   codevp.gekond = nsp%
   CodeGE.gekond = codege%
   codeva.gekond = codeva%
   REM codevp.gekond = nsp%
   QCodeGEVA.gekond = STR$ (codege%,"000000") + STR$ (codeva%,"000000")
   CALL MATimeStamp("gekond")
   CALL FStore("gekond")
   SELECT FORM KEY cuko% FILE "gekond" INDEX lfdnr.gekond
   FORM 
 END IF 
 MOUSE ON 
 END SUB 
 
 ' Auswahl Sparte (Konditionen)
 ' =======================================================================
 ' 31.07.94  - in Prozedur geÑndert
 
SUB MASCodeva()
 IF NEW ("gekond") OR MOD ("gekond") THEN CALL FStore("gekond")
 cuva% = CodeVA.gekond
 cuko% = lfdnr.gekond
 cuma% = codema.gekond
 IF UCASE$ ( FORM ) = "GEKOND" THEN 
   CALL DFile(3,"vkond" + _fpw$)
   Dateien$ = ""
   ok% = 1
   IF EXISTS (cuko%,CodeKO.VKOND) THEN 
     ok% = 0
     Dateien$ = Dateien$ + ", VertrÑge"
     CALL Fehler("Es kann keine andere Sparte zugewiesen werden,","da bereits VertrÑge, die diese Kondition benutzen an die Provisionsabrechnung Åbergeben wurden!")
   ELSE 
     _cuva% = GetCodeVA%(cuva%)
   END IF 
 END IF 
 
 IF _cuva% <> 0 THEN 
   MOUSE OFF 
   SELECT KEY cuko% LOCK FILE "gekond" INDEX lfdnr.gekond
   CodeVA.gekond = _cuva%
   CALL MATimeStamp("gekond")
   CALL FStore("gekond")
   SELECT FORM KEY cuko% FILE "gekond" INDEX lfdnr.gekond
   FORM 
 END IF 
 MOUSE ON 
 END SUB 
 
 
 '      *********************************************************
 '      ** Routinen fÅr Formular "GEKONDM" - Musterkonditionen **
 '      *********************************************************
 
SUB GEKONDM()
 IF disabled%("GEKONDM") THEN END SUB 
 CALL DFile(3,"sparten" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$)
 CALL DFile(3,"geadr2" + _fpw$)
 CALL DFile(3,"gekondm" + _fpw$)
 CALL DFile(3,"gekond" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"maadrgru" + _fpw$)
 FILE "gekondm"
 _formend% = 0
 DIRECTORY _ppath$
 WHILE _formend% = 0
   ON ERROR GOTO ErrorHandler
   GEKONDMsub% = 0
   IF UCASE$ ( FORM ) <> "GEKONDM" THEN 
     SET HEADING title$ + " - Musterkonditionen"
     REM OPEN FORM "gekondm"
       IF EXISTS (GPrjForm$ + "GEKONDM.sbv") THEN 
         OPEN FORM GPrjForm$ + "GEKONDM"
       ELSE 
         OPEN FORM GPrjForm$ + "GEKONDM"
       END IF 
     SET f = Superbase.Form
     GAppName$ = _netpath$ + "DOC\magentur.pdf"
     CALL GEKONDMIntro()
     CALL MNGEKONDM()
     SET STATUS "Musterkonditionen"
   END IF 
   MOUSE ON 
   CALL GEKONDMUpdate()
   CALL ClearKBDBuffer()
   f.abbruch.visible = 0
   f.abbruch.enabled = 0
   f.suchen.enabled = - 1
   f.suchen.visible = - 1
   IF RECCOUNT ("gekondm") < 1 THEN 
     CALL ButDesabled()
     f.abbruch.visible = 0
     f.abbruch.enabled = 0
     f.neu.enabled = - 1
     f.gesellschaft.enabled = 0
     
     f.zurueck.enabled = - 1
     f.sichern.enabled = 0
   END IF 
   IF ag$ = "j" THEN 
     f.neu.visible = 0
   ELSE 
     f.neu.visible = - 1
   END IF 
   CALL ClearKBDBuffer()
   IF GEKONDMsub% <> 99 THEN WAIT MOUSE OR KEY OR MENU 
   REM ** Tastaturabfrage
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL GEKONDMPrev()
   CASE CrsRight%,PgDn%
     CALL GEKONDMNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE GEKONDMsub%
   CASE 1
     CALL GEKONDMSuchen()
   CASE 99
     MENU OFF 
     IF RECCOUNT ("gekondm") = 0 THEN CALL GEKONDMNeu()
     MOUSE ON 
     REM 140596
     CALL ButDesabled()
     f.gesellschaft.enabled = 0
     f.sichern.enabled = - 1
     IF PAGE = 1 THEN ENTER AP.gekondm,0
     CALL ButEnabled()
     f.sichern.enabled = - 1
     f.gesellschaft.enabled = - 1
     
     REM IF PAGE = 2 THEN ENTER TZ0.gekondm,0
   END SELECT 
   MENU ON 
   GEKONDMsub% = 0
   IF abbruch% = - 1 THEN 
     SELECT KEY codeva.gekondm FILE "gekondm" INDEX codeva.gekondm
     FORM 
     abbruch% = 0
   END IF 
 WEND 
 _formend% = 0
 cuko% = 0
 END SUB 
 
 ' GEKONDM Intro
 ' =======================================================================
 
SUB GEKONDMIntro()
 FILE "gekondm"
 INDEX lfdnr.gekondm
 SELECT FORM FIRST 
 FORM 
 END SUB 
 
SUB GEKONDMUpdate()
 SELECT KEY CodeGE.GEKONDM FILE "GEADR" INDEX CodeGE.GEADR
 SELECT KEY CodeVA.GEKONDM FILE "SPARTEN" INDEX CodeVA.SPARTEN
 IF codege.gekondm > 0 AND codeva.gekondm > 0 THEN 
   Gesellschaft$ = LTRIM$ (Gesellschaft.gekondm) + " / " + sparte.gekondm
 ELSE 
   Gesellschaft$ = "Bitte betÑtigen Sie den Button um ein Produkt zu wÑhlen"
 END IF 
 REM Sparte$ = IF ( FOUND ("SPARTEN"),Sparte.SPARTEN,"<keine Zuordnung>")
 FORM 
 END SUB 
    
 
 ' GEKOND Neu
 ' =======================================================================
 
SUB GEKONDMNeu()
 IF MOD ("gekondm") OR NEW ("gekondm") THEN CALL FStore("gekondm")
 BLANK FORM 
 SET STATUS "Datensatz neu angelegt..."
 lfdnr% = SER ("gekondm",1)
 lfdnr.gekondm = lfdnr%
 ap.gekondm = 100
 CourtageZWjn.gekondm = "n"
 PflegeNachZahlw.gekondm = "n"
 REM Nummer 99 fÅr Musteragentur
 codema.gekondm = 99
 REM 140596
 CALL MATimeStamp("gekondm")
 CALL QuickStore("gekondm")
 SELECT KEY lfdnr% FILE "gekondm" INDEX lfdnr.gekondm
 GEKONDMsub% = 99
 CALL GEKONDMUpdate()
 FORM 
 END SUB 
 
 ' GEKONDM Eintrag zurÅck
 ' =======================================================================
 
SUB GEKONDMPrev()
 FILE "GEKONDM"
 IF MOD ("GEKONDM") OR NEW ("GEKONDM") THEN CALL FStore("GEKONDM")
 cuko% = lfdnr.gekondm
 SELECT FORM PREVIOUS INDEX lfdnr.gekondm
 FORM 
 END SUB 
 
 
 ' GEKONDM Eintrag vor
 ' =======================================================================
 
SUB GEKONDMNext()
 FILE "GEKONDM"
 IF MOD ("GEKONDM") OR NEW ("GEKONDM") THEN CALL FStore("GEKONDM")
 cuko% = lfdnr.gekondm
 SELECT FORM NEXT FILE "gekondm" INDEX lfdnr.GEKONDM
 FORM 
 END SUB 
 
 
 ' GEKONDM suchen
 ' =======================================================================
  
SUB GEKONDMSuchen()
 cuko% = lfdnr.GEKONDM
 kond% = FindKondM%(lfdnr.GEKONDM)
 IF kond% <> 0 THEN 
   cuko% = kond%
 END IF 
 SELECT FORM KEY cuko% FILE "GEKONDM" INDEX lfdnr.GEKONDM
 FORM 
 END SUB 
 
FUNCTION FindKondM%(ko%)
 cuge% = CodeGE.GEKONDM
 cuva% = CodeVA.GEKONDM
 cuko% = lfdnr.GEKONDM
 ma% = CodeMA.GEKONDM
 cfile$ = FILE 
 DIM LGesellsch$( RECCOUNT ("GEADR"))
 DIM LSparten$( RECCOUNT ("SPARTEN"))
 DIM AuswGEADR$(1)
 DIM AuswSPARTEN$(1)
 FILE "GEADR"
 INDEX CodeGE.GEADR
 SELECT FIRST 
 a% = 0
 WHILE NOT EOF ("GEADR")
   LGesellsch$(a%) = Gesellschaft.GEADR + SPACE$ (120) + STR$ (CodeGE.GEADR,"000000")
   IF CodeGE.GEADR = cuge% THEN gprompt$ = LGesellsch$(a%)
   a% = a% + 1
   SELECT NEXT FILE "GEADR" INDEX CodeGE.GEADR
 WEND 
 FILE "SPARTEN"
 INDEX CodeVA.SPARTEN
 SELECT FIRST 
 a% = 0
 WHILE NOT EOF ("SPARTEN")
   LSparten$(a%) = Sparte.SPARTEN + SPACE$ (120) + STR$ (CodeVA.SPARTEN,"000000")
   IF CodeVA.SPARTEN = cuva% THEN sprompt$ = LSparten$(a%)
   a% = a% + 1
   SELECT NEXT FILE "SPARTEN" INDEX CodeVA.SPARTEN
 WEND 
 gesearch$ = "j"
 spsearch$ = "j"
 CREATE DIALOG "SELGEKOND",0,0,365,251,"Konditionsauswahl: Musteragentur","MS Sans Serif",8
 ADD DIALOG "SELGEKOND",5,40,10,320,27,0,"Bitte wÑhlen Sie die Gesellschaft und die Sparte aus, fÅr die Sie die Konditionen bearbeiten mîchten, benutzen Sie die Checkboxen um anzuzeigen worÅber Sie suchen mîchten, bzw. keine um alles anzuzeigen:"
 ADD DIALOG "SELGEKOND",9,10,19,20,21,2
 ADD DIALOG "SELGEKOND",2,6,40,123,11,0,"Suche Åber Gesellschaft","j","n",gesearch$
 ADD DIALOG "SELGEKOND",2,156,40,94,11,0,"Suche Åber Sparte","j","n",spsearch$
 ADD DIALOG "SELGEKOND",8,6,54,147,176,257,2,gprompt$,LGesellsch$
 ADD DIALOG "SELGEKOND",8,156,54,204,176,257,2,sprompt$,LSparten$
 ADD DIALOG "SELGEKOND",1,126,233,56,15,1,"&OK",1,1
 ADD DIALOG "SELGEKOND",1,186,233,56,15,0,"&Abbrechen",0,0
 DIALOG "SELGEKOND",req%
 REMOVE DIALOG "SELGEKOND"
 IF req% = 1 THEN 
   geadr% = VAL ( RIGHT$ (gprompt$,6))
   sparte% = VAL ( RIGHT$ (sprompt$,6))
   DIM KondFound$( RECCOUNT ("GEKONDM"))
   DIM Auswahl$(1)
   FILE "GEKONDM"
   IF gesearch$ = "j" AND spsearch$ = "j" THEN 
     INDEX QuickCode.GEKONDM
     scode$ = STR$ (ma%,"000000") + STR$ (geadr%,"000000") + STR$ (sparte%,"000000")
     SELECT FIRST 
     SELECT KEY scode$ FILE "GEKONDM" INDEX QuickCode.GEKONDM
   END IF 
   IF gesearch$ = "j" AND spsearch$ = "n" THEN 
     INDEX CodeGE.GEKONDM
     SELECT FIRST 
     SELECT KEY geadr% FILE "GEKONDM" INDEX CodeGE.GEKONDM
   END IF 
   IF gesearch$ = "n" AND spsearch$ = "j" THEN 
     INDEX CodeVA.GEKONDM
     SELECT FIRST 
     SELECT KEY sparte% FILE "GEKONDM" INDEX CodeVA.GEKONDM
   END IF 
   IF gesearch$ = "n" AND spsearch$ = "n" THEN 
     INDEX QuickCode.GEKONDM
     SELECT FIRST 
   END IF 
   a% = 0
   IF gesearch$ = "j" AND spsearch$ = "j" THEN WHILE QuickCode.GEKONDM LIKE scode$ AND NOT EOF ("GEKONDM")
   IF gesearch$ = "j" AND spsearch$ = "n" THEN WHILE CodeGE.GEKONDM = geadr% AND NOT EOF ("GEKONDM")
   IF gesearch$ = "n" AND spsearch$ = "j" THEN WHILE CodeVA.GEKONDM = sparte% AND NOT EOF ("GEKONDM")
   IF gesearch$ = "n" AND spsearch$ = "n" THEN WHILE NOT EOF ("GEKONDM")
     ListItem$ = ""
     IF APjn.gekondm = "j" THEN ListItem$ = ListItem$ + "; Abschlu·provision " + STR$ (AP.GEKONDM,",999.00")
     IF CourtageJN.gekondm = "j" THEN ListItem$ = ListItem$ + "; Courtage " + STR$ (Courtage.GEKONDM,",999.00")
     IF PflegeJN.gekondm = "j" THEN ListItem$ = ListItem$ + "; Pflege " + STR$ (PflegeProvi.GEKONDM,",999.00")
     IF VDjn.gekondm = "j" THEN ListItem$ = ListItem$ + "; Abschlu· (LZ)"
     IF TZjn.gekondm = "j" THEN ListItem$ = ListItem$ + "; Teilzahlung"
     IF PauschaleJN.gekondm = "j" THEN ListItem$ = ListItem$ + "; Pauschale " + STR$ (Pauschale.GEKONDM,",99999.00")
     IF gesearch$ = "n" AND spsearch$ = "j" THEN 
       geadr% = CodeGE.gekondm
       SELECT KEY geadr% FILE "geadr" INDEX codege.geadr
       ges$ = gesellschaft.geadr
       KondFound$(a%) = ges$ + "   " + BWvon$ + "-" + BWbis$ + ListItem$ + SPACE$ (120) + STR$ (lfdnr.GEKONDM,"000000")
       a% = a% + 1
       SELECT NEXT FILE "GEKONDM" INDEX CodeVA.GEKONDM
     END IF 
     IF gesearch$ = "j" AND spsearch$ = "n" THEN 
       sparte% = Codeva.gekondm
       SELECT KEY sparte% FILE "sparten" INDEX codeva.sparten
       spa1$ = sparte.sparten
       KondFound$(a%) = spa1$ + "   " + BWvon$ + "-" + BWbis$ + ListItem$ + SPACE$ (120) + STR$ (lfdnr.GEKONDM,"000000")
       a% = a% + 1
       SELECT NEXT FILE "GEKONDM" INDEX CodeGE.GEKONDM
     END IF 
     IF gesearch$ = "j" AND spsearch$ = "j" THEN 
       KondFound$(a%) = BWvon$ + "-" + BWbis$ + ListItem$ + SPACE$ (120) + STR$ (lfdnr.GEKONDM,"000000")
       a% = a% + 1
       SELECT NEXT FILE "GEKONDM" INDEX QuickCode.GEKONDM
     END IF 
     IF gesearch$ = "n" AND spsearch$ = "n" THEN 
       geadr% = CodeGE.gekondm
       SELECT KEY geadr% FILE "geadr" INDEX codege.geadr
       ges$ = gesellschaft.geadr
       sparte% = Codeva.gekondm
       SELECT KEY sparte% FILE "sparten" INDEX codeva.sparten
       spa1$ = sparte.sparten
       KondFound$(a%) = ges$ + "/" + spa1$ + "/" + BWvon$ + "-" + BWbis$ + ListItem$ + SPACE$ (120) + STR$ (lfdnr.GEKONDM,"000000")
       a% = a% + 1
       SELECT NEXT FILE "GEKONDM" INDEX QuickCode.GEKONDM
     END IF 
   WEND 
   IF a% <> 0 THEN a% = a% - 1
   SELECT KEY geadr% FILE "GEADR" INDEX CodeGE.GEADR
   SELECT KEY sparte% FILE "SPARTEN" INDEX CodeVA.SPARTEN
   CREATE DIALOG "SELGEKOND",0,0,376,251,"Konditionsauswahl: " + Nachname.MAADR + ", " + LEFT$ (Vorname.MAADR,1) + "., " + Gesellschaft.GEADR + "/" + Sparte.SPARTEN,"MS Sans Serif",8
   ADD DIALOG "SELGEKOND",4,0,0,374,220,0,""
   ADD DIALOG "SELGEKOND",9,9,16,21,25,2
   ADD DIALOG "SELGEKOND",5,38,16,220,10,0,"WÑhlen Sie die Kondition aus, die Sie bearbeiten mîchten:"
   ADD DIALOG "SELGEKOND",5,40,31,130,9,0,"Bewertungszeitraum, Kondition"
   ADD DIALOG "SELGEKOND",7,20,42,340,169,2,2,KondFound$,Auswahl$,KondFound$(0)
   ADD DIALOG "SELGEKOND",1,124,227,58,17,1,"&OK",1,1
   ADD DIALOG "SELGEKOND",1,184,227,60,17,0,"&Abbrechen",0,0
   DIALOG "SELGEKOND",req%
   REMOVE DIALOG "SELGEKOND"
   IF req% = 1 THEN 
     FindKondM% = VAL ( RIGHT$ (Auswahl$(0),6))
   END IF 
 ELSE 
   FindKondM% = 0
 END IF 
 FILE cfile$
 SELECT FORM KEY cuko% FILE "GEKONDM" INDEX lfdnr.GEKONDM
 END FUNCTION 
 
 
SUB GEKONDMDel()
 IF disabled%("GEKONDMLOESCHEN") THEN END SUB 
 cuko% = lfdnr.GEKONDM
 REQUEST "Wollen Sie die aktuelle Musterkondition wirklich lîschen?","",135,req%
 IF req% = 1 THEN 
   SELECT KEY cuko% LOCK FILE "GEKONDM" INDEX lfdnr.GEKONDM
   SELECT REMOVE FILE "GEKONDM"
   SET STATUS "Datensatz wurde gelîscht"
 END IF 
 FORM 
 MOUSE ON 
 END SUB 
 
 
 
 ' Auswahl Gesellschaft (Konditionen)
 ' =======================================================================
 
SUB GEKONDMGeadr()
 IF NEW ("gekondm") OR MOD ("gekondm") THEN CALL FStore("gekondm")
 cuge% = CodeGE.gekondm
 cuko% = lfdnr.gekondm
 REM _cuge% = GetCodeGE%(cuge%)
 nsp% = GetVprodukt%(codege.gekondm,codeva.gekondm, - 1)
 
  IF nsp% <> 0 THEN 
   MOUSE OFF 
    SELECT KEY nsp% FILE "vprodukt" INDEX codevp.vprodukt
    SELECT KEY codeva.vprodukt FILE "sparten" INDEX codeva.sparten
    codeva% = codeva.sparten
    SELECT KEY codege.vprodukt FILE "geadr" INDEX codege.geadr
    sparte$ = sparte.sparten
    ges$ = Gesellschaft.geadr
    codege% = codege.geadr
    codegrsp% = codegrsp.sparten
   SELECT KEY cuko% LOCK FILE "gekondm" INDEX lfdnr.gekondm
   CodeGE.gekondm = codege%
   codeva.gekondm = codeva%
   Gesellschaft.gekondm = ges$
   Sparte.gekondm = sparte$
   QCodeGEVA.gekondm = STR$ (codege%,"000000") + STR$ (codeva%,"000000")
   codevp.gekondm = nsp%
   CALL MATimeStamp("gekondm")
   CALL FStore("gekondm")
   SELECT FORM KEY cuko% FILE "gekondm" INDEX lfdnr.gekondm
   FORM 
 END IF 
 MOUSE ON 
 END SUB 
 
 
 ' Auswahl Sparte (Konditionen)
 ' =======================================================================
 
SUB GEKONDMSparte()
 IF NEW ("gekondm") OR MOD ("gekondm") THEN CALL FStore("gekondm")
 cuva% = CodeVA.gekondm
 cuko% = lfdnr.gekondm
 _cuva% = GetCodeVA%(cuva%)
 IF _cuva% <> 0 THEN 
   MOUSE OFF 
   SELECT KEY cuko% LOCK FILE "gekondm" INDEX lfdnr.gekondm
   CodeVA.gekondm = _cuva%
   CALL MATimeStamp("gekond")
   CALL FStore("gekondm")
   SELECT FORM KEY cuko% FILE "gekondm" INDEX lfdnr.gekondm
   FORM 
 END IF 
 MOUSE ON 
 END SUB 
 
 
 ' prozentuale Anpassung der aktuellen Musterkondition
 ' =======================================================================
  
SUB ANPASSUNGM()
 CREATE DIALOG "ANPASSUNG",0,0,177,94,"Anpassung","MS Sans Serif",8
 ADD DIALOG "ANPASSUNG",5,6,6,116,10,0,"Anpassung der aktuellen Kondition:"
 ADD DIALOG "ANPASSUNG",5,6,20,159,8,0,"Bitte geben Sie ein, auf welchen Prozentsatz die"
 ADD DIALOG "ANPASSUNG",5,6,30,150,8,0,"aktuelle Kondition angepa·t werden soll."
 ADD DIALOG "ANPASSUNG",6,46,49,59,13,0,0,anp$,10
 ADD DIALOG "ANPASSUNG",5,6,49,38,11,0,"Anpassung:"
 ADD DIALOG "ANPASSUNG",1,34,70,50,16,1,"&OK",1,1
 ADD DIALOG "ANPASSUNG",1,86,70,50,16,0,"&Abbruch",0,0
 DIALOG "ANPASSUNG",req%
 REMOVE DIALOG "ANPASSUNG"
 anp% = VAL (anp$)
 anp$ = STR$ (anp%)
 IF req% = 1 AND anp% <> 0 THEN 
   MOUSE OFF 
   SET STATUS "WARTEN: Kondition wird angepa·t..."
   REQUEST "gewÑhlter Anpassungswert:",anp$,0
   IF VD1AP.gekondm <> 0 THEN VD1AP.gekondm = (VD1AP.gekondm / 100) * anp%
   IF VD2AP.gekondm <> 0 THEN VD2AP.gekondm = (VD2AP.gekondm / 100) * anp%
   IF VD3AP.gekondm <> 0 THEN VD3AP.gekondm = (VD3AP.gekondm / 100) * anp%
   IF VD4AP.gekondm <> 0 THEN VD4AP.gekondm = (VD4AP.gekondm / 100) * anp%
   IF VD5AP.gekondm <> 0 THEN VD5AP.gekondm = (VD5AP.gekondm / 100) * anp%
   IF AP.gekondm <> 0 THEN AP.gekondm = (AP.gekondm / 100) * anp%
   IF Courtage.gekondm <> 0 THEN Courtage.gekondm = (Courtage.gekondm / 100) * anp%
   IF TZ0.gekondm <> 0 THEN TZ0.gekondm = (TZ0.gekondm / 100) * anp%
   IF TZ1.gekondm <> 0 THEN TZ1.gekondm = (TZ1.gekondm / 100) * anp%
   IF TZ2.gekondm <> 0 THEN TZ2.gekondm = (TZ2.gekondm / 100) * anp%
   IF TZ3.gekondm <> 0 THEN TZ3.gekondm = (TZ3.gekondm / 100) * anp%
   IF TZ4.gekondm <> 0 THEN TZ4.gekondm = (TZ4.gekondm / 100) * anp%
   IF TZ5.gekondm <> 0 THEN TZ5.gekondm = (TZ5.gekondm / 100) * anp%
   IF PflegeProvi.gekondm <> 0 THEN PflegeProvi.gekondm = (PflegeProvi.gekondm / 100) * anp%
   IF Pauschale.gekondm <> 0 THEN Pauschale.gekondm = (Pauschale.gekondm / 100) * anp%
   FORM 
   MOUSE ON 
   SET STATUS "Bereit"
 END IF 
 END SUB 
 
 
 



SUB ExpOutlook()
 dir$ = DIRECTORY 
 Adressen$ = "ADRESSEN"
 adrtemp$ = "OUTLADR1"
 CALL DFile(2,"OFFICE\OUTLADR1" + _fpw$)
 CALL DFile(2,"OFFICE\OUTKAL" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 REMOVE FROM FILE "OUTLADR1"
 REMOVE FROM FILE "OUTKAL"
 REM adressen$ = GAdrDat$
 ansionoff$ = UCASE$ (ReadINI$("SYSTEM","WinWordAnsi"))
 
 
         a% = 0
         WHILE AdrFound$(a%) <> ""
           FILE Adressen$
           SELECT FIRST 
          
           IF adressen$ = GAdrDat$ THEN 
             codeku% = VAL ( RIGHT$ (AdrFound$(a%),6))
             SELECT KEY codeku% FILE Adressen$ INDEX codeku.Adressen$
           END IF 
           
           abz% = abz% + 1
           SET STATUS "Anzahl der verarbeiteten Adressen: " + STR$ (abz%,"99999999")
           REM codeku% = codeku.GAdrDat$
           REM 200999
         IF ASerJN = "j" AND req% = 1 THEN 
         ELSE 
           BLANK FILE adrtemp$
           Anrede.adrtemp$ = VSNRPack3$(Anrede.Adressen$)
           REM CALL Fehler("SER","")
           IF anrede.Adressen$ LIKE "Herr*" OR anrede.Adressen$ LIKE "Fr*" OR anrede.Adressen$ LIKE "Fam*" OR anrede.Adressen$ LIKE "Ehe*" OR anrede.Adressen$ LIKE "Kind*" THEN 
             Nachname.adrtemp$ = LEFT$ (VSNRPack3$(Nachname.Adressen$),50)
             Vorname.adrtemp$ = LEFT$ (VSNRPack3$(Vorname.Adressen$),50)
             adr$ = "Adresse: " + VSNRPack3$(Vorname.Adressen$) + ", " + VSNRPack3$(Nachname.Adressen$) + CHR$ (13) + CHR$ (10)
           ELSE 
             Nachname.adrtemp$ = LEFT$ (VSNRPack3$(Nachname.Adressen$),50)
             Vorname.adrtemp$ = LEFT$ (VSNRPack3$(Vorname.Adressen$),50)
             WeitereVornamen.adrtemp$ = LEFT$ (VSNRPack3$(Geburtsname.Adressen$),50)
             adr$ = "Adresse: " + VSNRPack3$(Vorname.Adressen$) + ", " + VSNRPack3$(Nachname.Adressen$) + ", " + VSNRPack3$(Geburtsname.adressen$) + CHR$ (13) + CHR$ (10)
 
           END IF 
           Strassegesch.adrtemp$ = LEFT$ (VSNRPack3$(Stra·e.Adressen$),50)
           Postleitzahlges.adrtemp$ = LEFT$ (VSNRPack3$(PLZ.Adressen$),8)
           Ortgesch.adrtemp$ = LEFT$ (VSNRPack3$(Ort.Adressen$),50)
           adr$ = adr$ + VSNRPack3$(Stra·e.Adressen$) + ", " + VSNRPack3$(PLZ.Adressen$) + " " + VSNRPack3$(Ort.Adressen$)
           Landgesch.adrtemp$ = VSNRPack3$(Land.Adressen$)
           Geburtstag.adrtemp$ = DATE$ (Geburtstag.Adressen$,"0d.mm.yyyy")
           Konto.adrtemp$ = VSNRPack3$(K1Konto.Adressen$)
           Notizen.adrtemp$ = VSNRPack3$(Notiz.Adressen$)
           Stichworter.adrtemp$ = VSNRPack3$(Stichwort.Adressen$)
           Beruf.adrtemp$ = VSNRPack3$(Beruf.Adressen$)
           Hobby.adrtemp$ = VSNRPack3$(Hobbys.Adressen$)
           Geschlecht.adrtemp$ = VSNRPack3$(Geschlecht.Adressen$)
           Kinder.adrtemp$ = VSNRPack3$(K1Name.Adressen$ + ", " + K2Name.Adressen$ + ", " + K3Name.adressen$ + ", " + k4name.adressen$)
           codema% = Codema.Adressen$
           REM 061196
           IF EXISTS (codeku%,codeku.GTelDat$) THEN 
             FILE GTelDat$
             INDEX codeku.GTelDat$
             SELECT FIRST 
             SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
             abi% = 0
             note$ = ""
             WHILE codeku.GTelDat$ = codeku% AND abi% < 20 AND NOT EOF (GTelDat$)
               abi% = abi% + 1
                   
               IF fonoderfax.GTelDat$ <> "j" THEN 
                 IF Mobiltelefon.adrtemp$ = "" AND (art.GTelDat$ LIKE "mobi*" OR art.GTelDat$ LIKE "Funk*") THEN 
                   Mobiltelefon.adrtemp$ = VSNRPack3$(nummer.GTelDat$)
                 END IF 
                 IF Webseite.adrtemp$ = "" AND (art.GTelDat$ LIKE "www*" OR nummer.GTelDat$ LIKE "www*" OR art.GTelDat$ LIKE "*www*" OR nummer.GTelDat$ LIKE "*www*") THEN 
                   Webseite.adrtemp$ = VSNRPack3$(nummer.GTelDat$)
                 END IF 
                 IF emailadresse.adrtemp$ = "" AND (art.GTelDat$ LIKE "*@*" OR nummer.GTelDat$ LIKE "*@*") THEN 
                   emailadresse.adrtemp$ = VSNRPack3$(nummer.GTelDat$)
                   emailangezeigte.adrtemp$ = VSNRPack3$(nummer.GTelDat$)
                 END IF 
                 IF Telefongesch.adrtemp$ = "" THEN 
                   Telefongesch.adrtemp$ = VSNRPack3$(nummer.GTelDat$)
                 END IF 
               ELSE 
                 IF faxgesch.adrtemp$ = "" THEN 
                   faxgesch.adrtemp$ = VSNRPack3$(nummer.GTelDat$)
                 END IF 
 
               END IF 
 
               note$ = note$ + VSNRPack3$(art.GTelDat$ + "  " + nummer.GTelDat$) + CHR$ (13) + CHR$ (10)
             SELECT NEXT FILE GTelDat$ INDEX codeku.GTelDat$
             WEND 
             notizen.adrtemp$ = note$ + CHR$ (13) + CHR$ (10) + notizen.adrtemp$
             adr$ = adr$ + CHR$ (13) + CHR$ (10) + note$ + CHR$ (13) + CHR$ (10)
           END IF 
           FILE adrtemp$
           STORE FILE adrtemp$
         END IF 
         FILE adressen$
         REM SELECT NEXT FILE GAdrDat$
         REM IF nachname.adressen LIKE "klam*" THEN CALL Fehler("","")
         IF EXISTS (codeku%,codeku.GAkquiDat$) THEN 
           cfile$ = FILE 
           FILE GAkquiDat$
           INDEX codeku.GAkquiDat$
           SELECT FIRST 
           SELECT KEY codeku% FILE GAkquiDat$ INDEX codeku.GAkquiDat$
           WHILE NOT EOF (GAkquiDat$) AND codeku.GAkquiDat$ = codeku%
             IF erledigt_Termin.GAkquiDat$ <> "j" THEN 
               SELECT KEY codeak.GAkquiDat$ FILE "Aktionen" INDEX codeak.aktionen
               BLANK FILE "outkal"
               Betreff.outkal = VSNRPack3$(notiz.GAkquiDat$)
               Beschreibung.outkal = adr$ + CHR$ (13) + CHR$ (10) + VSNRPack3$(ergebnis.GAkquiDat$)
               Beginntam.outkal = DATE$ (termin.GAkquiDat$,"0d.mm.yyyy")
               IF uhrzeit.GAkquiDat$ < 1 THEN 
                 Beginntum.outkal = "09:00"
               ELSE 
                 Beginntum.outkal = TIME$ (uhrzeit.GAkquiDat$,"hh:mm")
               END IF 
               IF erdatum.GAkquiDat$ > 0 THEN 
                 Erinnerungam.outkal = DATE$ (erdatum.GAkquiDat$,"0d.mm.yyyy")
                 Erinnerungum.outkal = TIME$ (erzeit.GAkquiDat$,"hh:mm")
               ELSE 
                 Erinnerungam.outkal = Beginntam.outkal
                 Erinnerungum.outkal = Beginntum.outkal
               END IF 
               Kategorien.outkal = VSNRPack3$(Bezeichnung.aktionen)
               STORE FILE "outkal"
             END IF 
             SELECT NEXT FILE GAkquiDat$ INDEX codeku.GAkquiDat$
           WEND 
           FILE cfile$
         END IF 
         a% = a% + 1
         WEND 
 
 DIRECTORY GMACodeDir$
 tf$ = FILE 
 FILE "OUTLADR1"
 Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
 Superbase.Converters.SBF.SourceFile = "OUTLADR1"
 Superbase.Converters.SBF.Descending = 0
 Superbase.Converters.SBF.Merge = 0
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.CSV.DestFormat = "Comma-separated values"
 Superbase.Converters.CSV.DestFile = "outadr.CSV"
 Superbase.Converters.CSV.UseLabels = - 1
 Superbase.Converters.CSV.ANSIConvert = - 1
 Superbase.Converters.CSV.Convert(Superbase.Converters.SBF)
 
 
 FILE "OUTKAL"
 Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
 Superbase.Converters.SBF.SourceFile = "OUTKAL"
 Superbase.Converters.SBF.Descending = 0
 Superbase.Converters.SBF.Merge = 0
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.CSV.DestFormat = "Comma-separated values"
 Superbase.Converters.CSV.DestFile = "outkal.CSV"
 Superbase.Converters.CSV.UseLabels = - 1
 Superbase.Converters.CSV.ANSIConvert = - 1
 Superbase.Converters.CSV.Convert(Superbase.Converters.SBF)
 
 FILE tf$
 DIRECTORY dir$
 REQUEST "Export nach MS Outlook beendet!","",0
 tt0$ = "Sie kînnen die Dateien in MS Outlook importieren,in dem Sie in MS Outlook im MenÅ "
 t1$ = "Es wurden 2 Exportdateien erstellt. Die erstellten Dateien hei·en " + GMACodeDir$ + "outadr.csv (Adressen) und " + GMACodeDir$ + "outkal.csv (Termine)." + tt0$
 t2$ = "Datei/Importieren-Exportieren/Import aus anderen Programmen/Kommagetrennte Werte (Window) / Kontakte (fÅr die Adressen) oder Kalender (fÅr die Termine) wÑhlen und dort dann per Feldzuortnung die Felder verbinden!"
 CALL Fehler(t1$,t2$)
 END SUB 
  
 
 
 
 REM Export akt.Adresse fÅr ONLINE-Beratungsprotokoll 
SUB ADRExpONL()
  kunr% = codeku.adressen
  knr% = kunr%
  IF disabled%("ADRKMUONL") THEN END SUB 
  codeku1% = knr%
  CALL Fehler("Export akt.Adresse fÅr KMU-EU-Beratungsprotokoll","")
  REQUEST "Soll der Export durchgefÅhrt werden?","",130,req%
  IF req% = 1 THEN 
    CALL OnlBeratPrADR(codeku.adressen)
  ELSE 
    CALL Fehler ("Export wurde abgebrochen","")
  END IF 
  SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
  SELECT KEY codeku1% FILE "ADRESSEN" INDEX codeku.adressen
  knr% = codeku1%
  kunr% = codeku1%
 END SUB 
 
 REM Export der aktuellen Adresse und zugehîriger lebender und FremdvertrÑge in eine XML-Ausgabedatei
 REM z.B. zur öbergabe an Rendite 2000
SUB ADRExpR2000()
  kunr% = codeku.GADRDat$
  IF disabled%("ADRREN2000") THEN END SUB 
  knr% = kunr%
  codeku1% = kunr%
  CALL Fehler("Gibt die aktuelle Adresse und zugehîrige lebende- und FremdvertrÑge in eine XML-Datei aus, die z.B. in Rendite 2000 weiterverarbeitet werden kann!","")
  REQUEST "Soll der Export durchgefÅhrt werden?","",130,req%
  IF req% = 1 THEN 
    expodir$ = GMACodeDir$ + "R2000"
    ON ERROR GOTO e260720051
    MAKE DIRECTORY expodir$
    GOTO e260720052
e260720051: 
    f% = - 1
e260720052: 
    expodir$ = GMACodeDir$ + "R2000\"
    ON ERROR GOTO ErrorHandler 
 
 
       IF EXISTS (expodir$ + "R2000.xml") THEN 
         DELETE expodir$ + "R2000.xml"
       END IF 
       OPEN expodir$ + "R2000.xml" FOR OUTPUT 
       ? "<?xml version=" + CHR$ (34) + "1.0" + CHR$ (34) + " encoding=" + CHR$ (34) + "ISO-8859-1" + CHR$ (34) + "?> "
       ? "<!-- zahlweise 1=jaehrlich,2=halbjaehrlich;4=vierteljaehrlich,6=2monatlich,12=monatlich,0=einmalig -->"
       ? "<export>"
       ? "  <adresse>"
         ? "    <customid>" + STR$ (codeku.GADRDat$,"000000") + "</customid>"
         ? "    <anrede>" + FN ansi(anrede.GADRDat$) + "</anrede>"
         ? "    <vorname>" + FN ansi(vorname.GADRDat$) + "</vorname>"
         ? "    <nachname>" + FN ansi(nachname.GADRDat$) + "</nachname>"
         ? "    <Strasse>" + FN ansi(Stra·e.GADRDat$) + "</Strasse>"
         ? "    <plz>" + FN ansi(plz.GADRDat$) + "</plz>"
         ? "    <ort>" + FN ansi(ort.GADRDat$) + "</ort>"
         ? "    <land>" + FN ansi(land.GADRDat$) + "</land>"
         IF geburtstag.GADRDat$ < 1 THEN 
           ? "    <geburtstag>" + "</geburtstag>"
         ELSE 
           ? "    <geburtstag>" + DATE$ (geburtstag.GADRDat$,"0d.mm.yyyy") + "</geburtstag>"
         END IF 
         ? "    <beruf>" + FN ansi(beruf.GADRDat$) + "</beruf>"
         ? "    <hobby>" + FN ansi(hobbys.GADRDat$) + "</hobby>"
         ? "    <anzkinder>" + LTRIM$ ( STR$ (Anzahl_Kinder.GADRDat$,"99")) + "</anzkinder>"
         IF K1Name.GADRDat$ <> "" THEN 
           ? "    <kind1vorname>" + FN ansi(K1Name.GADRDat$) + "</kind1vorname>"
         ELSE 
           ? "    <kind1vorname>" + "</kind1vorname>"
         END IF 
         IF K1NName.GADRDat$ <> "" THEN 
           ? "    <kind1nachname>" + FN ansi(K1NName.GADRDat$) + "</kind1nachname>"
         ELSE 
           ? "    <kind1nachname>" + "</kind1nachname>"
         END IF 
         IF K1Geburtstag.GADRDat$ > 0 THEN 
           ? "    <kind1geb>" + DATE$ (K1Geburtstag.GADRDat$,"0d.mm.yyyy") + "</kind1geb>"
         ELSE 
           ? "    <kind1geb>" + "</kind1geb>"
         END IF 
 
         IF K2Name.GADRDat$ <> "" THEN 
           ? "    <kind2vorname>" + FN ansi(K2Name.GADRDat$) + "</kind2vorname>"
         ELSE 
           ? "    <kind2vorname>" + "</kind2vorname>"
         END IF 
         IF K2NName.GADRDat$ <> "" THEN 
           ? "    <kind2nachname>" + FN ansi(K2NName.GADRDat$) + "</kind2nachname>"
         ELSE 
           ? "    <kind2nachname>" + "</kind2nachname>"
         END IF 
         IF K2Geburtstag.GADRDat$ > 0 THEN 
           ? "    <kind2geb>" + DATE$ (K2Geburtstag.GADRDat$,"0d.mm.yyyy") + "</kind2geb>"
         ELSE 
           ? "    <kind2geb>" + "</kind2geb>"
         END IF 
 
         IF K3Name.GADRDat$ <> "" THEN 
           ? "    <kind3vorname>" + FN ansi(K3Name.GADRDat$) + "</kind3vorname>"
         ELSE 
           ? "    <kind3vorname>" + "</kind3vorname>"
         END IF 
         IF K3NName.GADRDat$ <> "" THEN 
           ? "    <kind3nachname>" + FN ansi(K3NName.GADRDat$) + "</kind3nachname>"
         ELSE 
           ? "    <kind3nachname>" + "</kind3nachname>"
         END IF 
         IF K3Geburtstag.GADRDat$ > 0 THEN 
           ? "    <kind3geb>" + DATE$ (K3Geburtstag.GADRDat$,"0d.mm.yyyy") + "</kind3geb>"
         ELSE 
           ? "    <kind3geb>" + "</kind3geb>"
         END IF 
 
         IF K4Name.GADRDat$ <> "" THEN 
           ? "    <kind4vorname>" + FN ansi(K4Name.GADRDat$) + "</kind4vorname>"
         ELSE 
           ? "    <kind4vorname>" + "</kind4vorname>"
         END IF 
         IF K4NName.GADRDat$ <> "" THEN 
           ? "    <kind4nachname>" + FN ansi(K4NName.GADRDat$) + "</kind4nachname>"
         ELSE 
           ? "    <kind4nachname>" + "</kind4nachname>"
         END IF 
         IF K1Geburtstag.GADRDat$ > 0 THEN 
           ? "    <kind4geb>" + DATE$ (K4Geburtstag.GADRDat$,"0d.mm.yyyy") + "</kind4geb>"
         ELSE 
           ? "    <kind4geb>" + "</kind4geb>"
         END IF 
         IF EXISTS (codeku1%,codeku.telefon) THEN 
           FILE "telefon"
           INDEX codeku.telefon
           SELECT FIRST FILE "telefon" INDEX codeku.telefon
           SELECT KEY codeku1% FILE "telefon" INDEX codeku.telefon
           fon% = 0
           fax% = 0
           mobil% = 0
           mail% = 0
           www% = 0
           DIM Telart$(20000)
           DIM TelNum$(20000)
           a% = 0
           WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku1%
             Telart$(a%) = Art.GTelDat$
             TelNum$(a%) = Nummer.GTelDat$
             a% = a% + 1
             SELECT NEXT FILE GTelDat$
           WEND 
           FOR i% = a% - 1 TO 0 STEP - 1
             IF (Telart$(i%) LIKE "fon*" OR Telart$(i%) LIKE "*fon*") AND fon% = 0 THEN 
               ? "    <telefon>" + TelNum$(i%) + "</telefon>"
               fon% = 1
             END IF 
             IF (Telart$(i%) LIKE "fax*" OR Telart$(i%) LIKE "*fax*") AND fax% = 0 THEN 
               ? "    <fax>" + TelNum$(i%) + "</fax>"
               fax% = 1
             END IF 
             IF (Telart$(i%) LIKE "funk*" OR Telart$(i%) LIKE "*funk*" OR Telart$(i%) LIKE "hand*" OR Telart$(i%) LIKE "*hand*" OR Telart$(i%) LIKE "mobi*" OR Telart$(i%) LIKE "*mobi*") AND mobil% = 0 THEN 
               ? "    <mobil>" + TelNum$(i%) + "</mobil>"
                mobil% = 1
             END IF 
             IF (Telart$(i%) LIKE "mail*" OR Telart$(i%) LIKE "*mail*") AND mail% = 0 THEN 
               ? "    <email>" + TelNum$(i%) + "</email>"
               mail% = 1
             END IF 
             IF (Telart$(i%) LIKE "www*" OR Telart$(i%) LIKE "*www*") AND www% = 0 THEN 
               ? "    <www>" + TelNum$(i%) + "</www>"
               www% = 1
             END IF 
           NEXT i%
           IF fon% = 0 THEN ? "  <telefon>" + "</telefon>"
           IF fax% = 0 THEN ? "  <fax>" + "</fax>"
           IF mobil% = 0 THEN ? "  <mobil>" + "</mobil>"
           IF mail% = 0 THEN ? "  <email>" + "</email>"
           IF www% = 0 THEN ? " <www>" + "</www>"
         ELSE 
           ? "    <telefon>" + "</telefon>"
           ? "    <fax>" + "</fax>"
           ? "    <mobil>" + "</mobil>"
           ? "    <email>" + "</email>"
           ? "    <www>" + "</www>"
         END IF 
       ? "  </adresse>"
       
       
       IF EXISTS (codeku1%,codeku.kvertrag) THEN 
         SELECT FIRST FILE "kvertrag" INDEX codeku.kvertrag
         SELECT KEY codeku1% FILE "kvertrag" INDEX codeku.kvertrag
         vert% = 0
         WHILE NOT EOF ("kvertrag") AND codeku.kvertrag = codeku1%
           IF CodeVStatus.kvertrag = 1 OR CodeVStatus.kvertrag = 11 THEN 
             vert% = 1
             ? "  <vertrag>"
             ? "    <customid>" + STR$ (lfdnr.kvertrag,"000000") + "</customid>"
             ? "    <Gesellschaft>" + FN ansi(gesellschaft.kvertrag) + "</Gesellschaft>"
             ? "    <Sparte>" + FN ansi(sparte.kvertrag) + "</Sparte>"
             ? "    <zahlweise>" + STR$ (zw.kvertrag,"00") + "</zahlweise>"
             IF beitrag.kvertrag <> 0 THEN 
               ? "    <beitrag>" + LTRIM$ ( STR$ (beitrag.kvertrag,"99999999.00")) + "</beitrag>"
             ELSE 
               ? "    <beitrag>" + "</beitrag>"
             END IF 
             IF VS_Beginn.kvertrag > 0 THEN 
               ? "    <vsbeginn>" + DATE$ (vs_beginn.kvertrag,"0d.mm.yyyy") + "</vsbeginn>"
             ELSE 
               ? "    <vsbeginn>" + "</vsbeginn>"
             END IF 
             IF KÅndigung.kvertrag > 0 THEN 
               ? "    <vsende>" + DATE$ (KÅndigung.kvertrag,"0d.mm.yyyy") + "</vsende>"
             ELSE 
               ? "    <vsende>" + "</vsende>"
             END IF 
             ? "  </vertrag>"
           END IF 
           SELECT NEXT FILE "kvertrag" INDEX codeku.kvertrag
         WEND 
         IF vert% = 0 THEN 
           ? "  <vertrag>"
           ? "    <customid>" + "</customid>"
           ? "    <Gesellschaft>" + "</Gesellschaft>"
           ? "    <Sparte>" + "</Sparte>"
           ? "    <zahlweise>" + "</zahlweise>"
           ? "    <beitrag>" + "</beitrag>"
           ? "    <vsbeginn>" + "</vsbeginn>"
           ? "    <vsende>" + "</vsende>"
           ? "  </vertrag>"
         END IF 
       ELSE 
         ? "    <customid>" + "</customid>"
         ? "    <Gesellschaft>" + "</Gesellschaft>"
         ? "    <Sparte>" + "</Sparte>"
         ? "    <zahlweise>" + "</zahlweise>"
         ? "    <beitrag>" + "</beitrag>"
         ? "    <vsbeginn>" + "</vsbeginn>"
         ? "    <vsende>" + "</vsende>"
         ? "  </vertrag>"
       END IF 
       
       ? "</export>"
       CLOSE OUTPUT 
       CALL Fehler("Der Export wurde erfolgreich beendet!","Sie finden die Datei in: " + expodir$ + ", der Name lautet: R2000.xml")
  ELSE 
    CALL Fehler ("Export wurde abgebrochen","")
  END IF 
 END SUB 
 
FUNCTION T1KL$(VSNR$)
 T1KL$ = ""
 FOR a% = 1 TO LEN (VSNR$)
   tC$ = MID$ (VSNR$,a%,1)
         x$ = LEFT$ (tC$,1)
         SELECT CASE x$
           CASE "<"
             tC$ = "{"
           CASE ">"
             tC$ = "}"
           CASE "&"
             tc$ = "u."
          REM  CASE "&"
             REM tC$ = "u."
         END SELECT 
   tVSNR$ = tVSNR$ + tC$
 NEXT a%
 T1KL$ = tVSNR$
 END FUNCTION 
 
 
 REM Export der aktuellen Adresse und zugehîriger lebender und FremdvertrÑge in eine XML-Ausgabedatei
 REM z.B. zur öbergabe an Rendite 2000
 codeku% > 0 - > eine einzelne Adresse und Termine Åbergeben
 codeku% = 0 - > viele Adresse aus Adrfound
SUB ADRExpOutl(codeku%,anz%)
  DIM Telart$(100)
  DIM TelNum$(100)
  codeku1% = 0
  IF codeku% > 0 THEN 
    kunr% = codeku%
    knr% = codeku%
    codeku1% = kunr%
  ELSE 
    terexpo% = 0
    REQUEST "Sollen zu den Adressen auch die","nichterledigten Termine exportiert werden?",130,terexpo%
  END IF 
  REM IF codeku% = 0 THEN CALL Fehler("öbergabe der Adressen an Outlook!","")
  REM REQUEST "öbergabe der Adressen an MS Outlook!","",2
  REM REQUEST "Soll der Export durchgefÅhrt werden?","",130,req%
  req% = 1
  IF req% = 1 THEN 
    expodir$ = GMACodeDir$ + "OUTLOOK"
    ON ERROR GOTO e270720051
    MAKE DIRECTORY expodir$
    GOTO e270720052
e270720051: 
    f% = - 1
e270720052: 
    expodir$ = GMACodeDir$ + "OUTLOOK\"
    ON ERROR GOTO ErrorHandler 
 
 
       IF EXISTS (expodir$ + "outlook.xml") THEN 
         DELETE expodir$ + "*.xml"
       END IF 
       datexe$ = GMACodeDir$ + "OUTLOOK\KontaktMaker.exe"
       a% = CALL ("_SBFileExists",datexe$)
 
 
       nach$ = GMACodeDir$ + "OUTLOOK\TerminMaker.exe"
       b% = CALL ("_SBFileExists",nach$)
 
       nach$ = GMACodeDir$ + "OUTLOOK\Interop.Microsoft.Office.Core.dll"
       c% = CALL ("_SBFileExists",nach$)
 
       nach$ = GMACodeDir$ + "OUTLOOK\Interop.Outlook.dll"
       d% = CALL ("_SBFileExists",nach$)
      
       IF a% <> - 1 OR b% <> - 1 OR c% <> - 1 OR d% <> - 1 THEN 
         ON ERROR GOTO w010820054
         DELETE GMACodeDir$ + "OUTLOOK\*.*"
w010820054:  
         ON ERROR GOTO ErrorHandler
         von$ = _netpath$ + "outlook\KontaktMaker.exe"
         nach$ = GMACodeDir$ + "OUTLOOK\KontaktMaker.exe"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "outlook\TerminMaker.exe"
         nach$ = GMACodeDir$ + "OUTLOOK\TerminMaker.exe"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "outlook\Interop.Microsoft.Office.Core.dll"
         nach$ = GMACodeDir$ + "OUTLOOK\Interop.Microsoft.Office.Core.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "outlook\Interop.Outlook.dll"
         nach$ = GMACodeDir$ + "OUTLOOK\Interop.Outlook.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
       END IF 
       SELECT FIRST FILE "supervis" INDEX codema.supervis
       SELECT KEY GMACodema% FILE "supervis" INDEX codema.supervis
       benutz$ = Outlookname.supervis
       benupw$ = Outlookpw.supervis
 
       OPEN expodir$ + "outlook.xml" FOR OUTPUT 
       ? "<?xml version=" + CHR$ (34) + "1.0" + CHR$ (34) + " encoding=" + CHR$ (34) + "ISO-8859-1" + CHR$ (34) + "?> "
       
       ? "<export>"
       ? "<MODUS>EXPORT</MODUS>"
       ? "<benutzer>"
         ? "  <name>" + benutz$ + "</name>"
         ? "  <pw>" + benupw$ + "</pw>"
       ? "</benutzer>"
       ok% = - 1
     ab% = 0
     a% = 0
     REM 29092005 IF codeku% > 0 THEN 
     IF codeku% = 0 THEN 
       IF ADRFound$(ab%) <> "" THEN 
         SELECT FIRST FILE GADRDat$ INDEX codeku.GADRDat$
         codeku1% = VAL (ADRFound$(ab%))
         SELECT KEY codeku1% FILE GADRDat$ INDEX codeku.GADRDat$
       END IF 
     END IF 
     IF codeku% > 0 THEN WHILE ok% = - 1
     IF codeku% = 0 THEN WHILE ADRFound$(ab%) <> "" AND ok% = - 1
       MOUSE OFF 
       IF codeku% > 0 THEN fiimak$ = "j"
       IF codeku% = 0 THEN 
         fiimak$ = fiimmak.GADRDat$
       END IF 
      IF fiimak$ = "j" THEN 
       ? "  <adresse>"
         ? "    <customerid>" + STR$ (codeku.GADRDat$,"000000") + "</customerid>"
         ? "    <anrede>" + FN ansi(T1KL$(anrede.GADRDat$)) + + "</anrede>"
         IF anrede.GADRDat$ LIKE "Firma" OR anrede.GADRDat$ = "" THEN 
           ? "    <firma>" + FN ansi(T1KL$(nachname.GADRDat$)) + " " + FN ansi(T1KL$(Geburtsname.GADRDat$)) + "</firma>"
           ? "    <vorname>" + "</vorname>"
           ? "    <nachname>" + FN ansi(T1KL$(vorname.GADRDat$)) + "</nachname>"
         ELSE 
           ? "    <firma>" + "" + "</firma>"
           ? "    <vorname>" + FN ansi(T1KL$(vorname.GADRDat$)) + "</vorname>"
           ? "    <nachname>" + FN ansi(T1KL$(nachname.GADRDat$)) + "</nachname>"
         END IF 
         ? "    <Strasse>" + FN ansi(T1KL$(Stra·e.GADRDat$)) + "</Strasse>"
         ? "    <plz>" + T1KL$(plz.GADRDat$) + "</plz>"
         ? "    <ort>" + FN ansi(T1KL$(ort.GADRDat$)) + "</ort>"
         ? "    <land>" + FN ansi(T1KL$(land.GADRDat$)) + "</land>"
         IF geburtstag.GADRDat$ < 1 THEN 
           ? "    <geburtstag>" + "</geburtstag>"
         ELSE 
           ? "    <geburtstag>" + DATE$ (geburtstag.GADRDat$,"0d.mm.yyyy") + "</geburtstag>"
         END IF 
         ? "    <beruf>" + FN ansi(T1KL$(beruf.GADRDat$)) + "</beruf>"
         ? "    <hobby>" + FN ansi(T1KL$(hobbys.GADRDat$)) + "</hobby>"
         ? "    <notiz>" + FN ansi(T1KL$(notiz.GADRDat$)) + "</notiz>"
 
         IF EXISTS (codeku1%,codeku.telefon) THEN 
           FILE "telefon"
           INDEX codeku.telefon
           SELECT FIRST FILE "telefon" INDEX codeku.telefon
           SELECT KEY codeku1% FILE "telefon" INDEX codeku.telefon
           fon% = 0
           fax% = 0
           mobil% = 0
           mail% = 0
           www% = 0
           tanz% = RECCOUNT (GTelDat$)
 
           tanz% = RECCOUNT (GTelDat$)
           IF tanz% < 100 THEN tanz% = 10000
           IF tanz% > 10000 THEN tanz% = 20000
           REDIM Telart$(tanz%)
           REDIM TelNum$(tanz%)
           a% = 0
           WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku1%
             Telart$(a%) = T1KL$(Art.GTelDat$)
             TelNum$(a%) = T1KL$(Nummer.GTelDat$)
             a% = a% + 1
             SELECT NEXT FILE GTelDat$
           WEND 
           IF a% > 0 THEN 
             FOR i% = a% - 1 TO 0 STEP - 1
               IF (Telart$(i%) LIKE "fon*" OR Telart$(i%) LIKE "*fon*") AND fon% = 0 THEN 
                 ? "    <telefon>" + TelNum$(i%) + "</telefon>"
                 fon% = 1
               END IF 
               IF (Telart$(i%) LIKE "fax*" OR Telart$(i%) LIKE "*fax*") AND fax% = 0 THEN 
                 ? "    <fax>" + TelNum$(i%) + "</fax>"
                 fax% = 1
               END IF 
               IF (Telart$(i%) LIKE "funk*" OR Telart$(i%) LIKE "*funk*" OR Telart$(i%) LIKE "hand*" OR Telart$(i%) LIKE "*hand*" OR Telart$(i%) LIKE "mobi*" OR Telart$(i%) LIKE "*mobi*") AND mobil% = 0 THEN 
                 ? "    <mobil>" + TelNum$(i%) + "</mobil>"
                  mobil% = 1
               END IF 
               IF (Telart$(i%) LIKE "mail*" OR Telart$(i%) LIKE "*mail*") AND mail% = 0 THEN 
                 ? "    <email>" + TelNum$(i%) + "</email>"
                 mail% = 1
               END IF 
               IF (Telart$(i%) LIKE "www*" OR Telart$(i%) LIKE "*www*") AND www% = 0 THEN 
                 ? "    <www>" + TelNum$(i%) + "</www>"
                 www% = 1
               END IF 
             NEXT i%
           END IF 
           IF fon% = 0 THEN ? "  <telefon>" + "</telefon>"
           IF fax% = 0 THEN ? "  <fax>" + "</fax>"
           IF mobil% = 0 THEN ? "  <mobil>" + "</mobil>"
           IF mail% = 0 THEN ? "  <email>" + "</email>"
           IF www% = 0 THEN ? " <www>" + "</www>"
 
           ? "<TelefonfuerNotiz>"
 
           FILE "telefon"
           INDEX codeku.telefon
           SELECT FIRST FILE "telefon" INDEX codeku.telefon
           SELECT KEY codeku1% FILE "telefon" INDEX codeku.telefon
           REDIM Telart$(1,1)
           REDIM Telart$(20000)
           REDIM TelNum$(1,1)
           REDIM TelNum$(20000)
           a% = 0
           WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku1%
             Telart$(a%) = T1KL$(Art.GTelDat$)
             TelNum$(a%) = T1KL$(Nummer.GTelDat$ + "(" + kart1.GTeldat$ + "/" + Kart2.Gteldat$ + ")")
             a% = a% + 1
             SELECT NEXT FILE GTelDat$
           WEND 
           IF a% > 0 THEN 
             FOR i% = a% - 1 TO 0 STEP - 1
             ? FN ansi(Telart$(i%) + "/" + TelNum$(i%))
             NEXT i%
           END IF 
           ? "Adressstatus: " + UCASE$ ( FN ansi(T1KL$(ADRStatus.GADRDat$)))
           ? "Adressgruppe: " + UCASE$ ( FN ansi(T1KL$(ADRGruppe.GADRDat$)))
           ? "Stichworte: " + UCASE$ ( FN ansi(T1KL$(Stichwort.GADRDat$)))
 
           ? "</TelefonfuerNotiz>"
 
         ELSE 
           ? "    <telefon>" + "</telefon>"
           ? "    <fax>" + "</fax>"
           ? "    <mobil>" + "</mobil>"
           ? "    <email>" + "</email>"
           ? "    <www>" + "</www>"
           ? "<TelefonfuerNotiz>"
           ? "</TelefonfuerNotiz>"
         END IF 
 
       ? "  </adresse>"
      END IF 

     IF codeku% > 0 THEN ok% = 0
endaex290720051: 
     IF codeku% = 0 THEN 
       ab% = ab% + 1
       MOUSE OFF 
       SET STATUS STR$ (ab%,",99999999") + " Adressen in XML - Datei eingetragen"
       IF ADRFound$(ab%) <> "" THEN 
         SELECT FIRST FILE GADRDat$ INDEX codeku.GADRDat$
         codeku1% = VAL (ADRFound$(ab%))
         SELECT KEY codeku1% FILE GADRDat$ INDEX codeku.GADRDat$
       ELSE 
         ok% = 0
       END IF 
       REM SELECT NEXT FILE GADRDat$
     END IF 
     WEND 
       ? "</export>"
       CLOSE OUTPUT 
 
       inidat$ = GMACodeDir$ + "OUTLOOK\ergebnis.ini"
       expodir$ = GMACodeDir$ + "OUTLOOK"
       DIRECTORY expodir$
       MOUSE OFF 
       a% = CALL ("ShellExecute",0,"open",datexe$,"","",1)
       
       i% = 0
       ok% = 0
       WHILE NOT EXISTS (inidat$) AND ok% = 0
         WAIT FOR 1
         IF EXISTS (inidat$) THEN ok% = 1
         i% = i% + 1
         IF i% = 60 THEN 
           REQUEST "Der Transfer wurde noch nicht abgeschlossen!","Weitere 60 Sekunden warten?",130,req%
           IF req% = 1 THEN 
             i% = 0
           ELSE 
             ok% = - 1
           END IF 
         END IF 
       WEND 
       IF EXISTS (inidat$) THEN 
         fehler$ = ReadDesti$("IMPORT","FEHLER",inidat$)
         anz$ = ReadDesti$("IMPORT","Anzahl",inidat$)
         IF Fehler$ = "" OR fehler$ LIKE "leer" THEN 
           IF codeku% > 0 THEN REQUEST "Export nach MS Outlook beendet!","",2
           REM CALL Fehler("Test Terminexport","")
           IF codeku% > 0 THEN 
             REQUEST "Sollen die Termine","auch exportiert werden?",135,req%
             IF req% = 1 THEN 
               CALL TerAExpOutl(codeku%,ab%)
             END IF 
           ELSE 
             REM Export Termine fÅr mehr als eine Adresse
             IF terexpo% = 1 THEN 
               FOR i% = 0 TO ab%
                 MOUSE OFF 
                 REM CALL TerAExpOutl(codeku%,ab%)
                 IF ADRFound$(i%) <> "" THEN 
                   SELECT FIRST FILE GADRDat$ INDEX codeku.GADRDat$
                   codeku1% = VAL (ADRFound$(i%))
                   SELECT KEY codeku1% FILE GADRDat$ INDEX codeku.GADRDat$
                   CALL TerAExpOutl(codeku1%,ab%)
                 END IF 
               NEXT i%
             END IF 
           END IF 
         ELSE 
           CALL Fehler ("Beim Export nach MS Outlook ist ein Fehler aufgetreten!","Fehlerkennung: " + fehler$)
         END IF 
       END IF 
  ELSE 
    CALL Fehler ("Export wurde abgebrochen","")
  END IF 
  DIRECTORY _netpath$
 END SUB 
 
 REM Export der aktuellen Adresse und zugehîriger lebender und FremdvertrÑge in eine XML-Ausgabedatei
 REM z.B. zur öbergabe an Rendite 2000
SUB TerExpOutl(codeaq%)
    codeku% = codeku.GAkquiDat$
    codeku1% = codeku%
    kunr% = codeku%
    knr% = codeku%
    codeku1% = kunr%
    codeku% = codeku.GAkquiDat$
  SELECT FIRST FILE GADRDat$ INDEX codeku.GADRDat$
  SELECT KEY codeku% FILE GADRDat$ INDEX codeku.GADRDat$
  CALL Fehler("TrÑgt den aktuellen Termin in MS Outlook ein!","")
  REM REQUEST "Soll der Export durchgefÅhrt werden?","",130,req%
  req% = 1
  IF req% = 1 THEN 
    expodir$ = GMACodeDir$ + "OUTLOOK"
    ON ERROR GOTO t270720051
    MAKE DIRECTORY expodir$
    GOTO t270720052
t270720051: 
    f% = - 1
t270720052: 
    expodir$ = GMACodeDir$ + "OUTLOOK\"
    ON ERROR GOTO ErrorHandler 
 
 
       IF EXISTS (expodir$ + "Termine.xml") THEN 
         DELETE expodir$ + "*.xml"
       END IF 
 
       datexe$ = GMACodeDir$ + "OUTLOOK\TerminMaker.exe"
       a% = CALL ("_SBFileExists",datexe$)
 
       nach$ = GMACodeDir$ + "OUTLOOK\KontaktMaker.exe"
       b% = CALL ("_SBFileExists",nach$)
 
       nach$ = GMACodeDir$ + "OUTLOOK\Interop.Microsoft.Office.Core.dll"
       c% = CALL ("_SBFileExists",nach$)
 
       nach$ = GMACodeDir$ + "OUTLOOK\Interop.Outlook.dll"
       d% = CALL ("_SBFileExists",nach$)
      
       IF a% <> - 1 OR b% <> - 1 OR c% <> - 1 OR d% <> - 1 THEN 
         ON ERROR GOTO w010820051
         DELETE GMACodeDir$ + "OUTLOOK\*.*"
w010820051: 
         ON ERROR GOTO ErrorHandler 
         von$ = _netpath$ + "outlook\KontaktMaker.exe"
         nach$ = GMACodeDir$ + "OUTLOOK\KontaktMaker.exe"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "outlook\TerminMaker.exe"
         nach$ = GMACodeDir$ + "OUTLOOK\TerminMaker.exe"
         a% = CALL ("_SBFileCopy",von$,nach$)
  
 
         von$ = _netpath$ + "outlook\Interop.Microsoft.Office.Core.dll"
         nach$ = GMACodeDir$ + "OUTLOOK\Interop.Microsoft.Office.Core.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "outlook\Interop.Outlook.dll"
         nach$ = GMACodeDir$ + "OUTLOOK\Interop.Outlook.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
       END IF 
       SELECT FIRST FILE "supervis" INDEX codema.supervis
       SELECT KEY GMACodema% FILE "supervis" INDEX codema.supervis
       benutz$ = Outlookname.supervis
       benupw$ = Outlookpw.supervis
       tanz% = RECCOUNT (GTelDat$)
       IF tanz% < 100 THEN tanz% = 10000
       IF tanz% > 10000 THEN tanz% = 20000
       DIM Telart$(tanz%)
       DIM TelNum$(tanz%)
       OPEN expodir$ + "Termine.xml" FOR OUTPUT 
       ? "<?xml version=" + CHR$ (34) + "1.0" + CHR$ (34) + " encoding=" + CHR$ (34) + "ISO-8859-1" + CHR$ (34) + "?> "
       
       ? "<export>"
       ? "<MODUS>EXPORT</MODUS>"
       ? "<benutzer>"
         ? "  <name>" + benutz$ + "</name>"
         ? "  <pw>" + benupw$ + "</pw>"
       ? "</benutzer>"
    FILE GAKquiDat$
    IF codeaq% > 0 THEN ok% = - 1
    IF codeaq% > 0 THEN WHILE ok% = - 1
    IF codeaq% = 0 THEN WHILE NOT EOF (GAKquiDat$)
       codeku% = codeku.GAkquiDat$
       SELECT FIRST FILE GADRDat$ INDEX codeku.GADRDat$
       SELECT KEY codeku% FILE GADRDat$ INDEX codeku.GADRDat$
       IF codeaq% > 0 THEN fiimak$ = "j"
       IF codeaq% = 0 THEN fiimak$ = fiimak.GADRdat$
      IF fiimak$ = "j" THEN 
       ? "<termine>"
       ? "<customerid>" STR$ (codeaq.GAkquiDat$,"000000") + "</customerid>"
       IF datum.GAkquiDat$ > 0 THEN 
         ? "<datum>" + DATE$ (datum.GAkquiDat$,"0d.mm.yyyy") + "</datum>"
       ELSE 
         ? "<datum></datum>"
       END IF 
 
       IF termin.GAkquiDat$ > 0 THEN 
         ? "<termin>" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy") + "</termin>"
       ELSE 
         ? "<termin></termin>"
       END IF 
 
       IF uhrzeit.GAkquiDat$ > 0 THEN 
         ? "<uhrzeit>" + TIME$ (uhrzeit.GAkquiDat$,"hh:mm") + "</uhrzeit>"
       ELSE 
         ? "<uhrzeit>00:00</uhrzeit>"
       END IF 
 
 
 
       IF ErDatum.GAkquiDat$ > 0 THEN 
         ? "<awvdatum>" + DATE$ (ErDatum.GAkquiDat$,"0d.mm.yyyy") + "</awvdatum>"
       ELSE 
         ? "<awvdatum></awvdatum>"
       END IF 
 
 
       IF Erzeit.GAkquiDat$ > 0 THEN 
         ? "<awvzeit>" + TIME$ (Erzeit.GAkquiDat$,"hh:mm") + "</awvzeit>"
       ELSE 
         ? "<awvzeit>00:00</awvzeit>"
       END IF 
 
 
       IF Dauer.GAkquiDat$ > 0 THEN 
         ? "<dauer>" + TIME$ (dauer.GAkquiDat$,"hh:mm") + "</dauer>"
       ELSE 
         ? "<dauer>00:00</dauer>"
       END IF 
       ? "<erledigt>" + erledigt_Termin.GAkquiDat$ + "</erledigt>"
       ? "<notiz>" + FN ansi(T1KL$(Notiz.GAkquiDat$)) + "</notiz>"
       ? "<ergebnis>" + FN ansi(T1KL$(ergebnis.GAkquiDat$)) + "</ergebnis>"
 
 
        ? "  <adresse>"
 
         ? FN ansi(T1KL$(anrede.GADRDat$))
         ? FN ansi(T1KL$(Geburtsname.GADRDat$))
         ? FN ansi(T1KL$(vorname.GADRDat$))
         ? FN ansi(T1KL$(nachname.GADRDat$))
         ? FN ansi(T1KL$(Stra·e.GADRDat$))
         ? T1KL$(plz.GADRDat$)
         ? FN ansi(T1KL$(ort.GADRDat$))
         ? FN ansi(T1KL$(land.GADRDat$))
         IF geburtstag.GADRDat$ < 1 THEN 
         ELSE 
           ? "Geburtstag:" + DATE$ (geburtstag.GADRDat$,"0d.mm.yyyy")
         END IF 
         IF EXISTS (codeku1%,codeku.telefon) THEN 
 
           FILE "telefon"
           INDEX codeku.telefon
           SELECT FIRST FILE "telefon" INDEX codeku.telefon
           SELECT KEY codeku1% FILE "telefon" INDEX codeku.telefon

           REDIM Telart$(1,1)
           REDIM Telart$(20000)
           REDIM TelNum$(1,1)
           REDIM TelNum$(20000)
           a% = 0
           WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku1%
             Telart$(a%) = T1KL$(Art.GTelDat$)
             TelNum$(a%) = T1KL$(Nummer.GTelDat$ + "  (" + kart1.GTeldat$ + "/" + Kart2.Gteldat$ + ")")
             a% = a% + 1
             SELECT NEXT FILE GTelDat$
           WEND 
           FOR i% = a% - 1 TO 0 STEP - 1
           ? FN ansi(Telart$(i%) + " / " + TelNum$(i%))
           NEXT i%
        ? "  </adresse>"
       ? "</termine>"
      END IF 
       ? ""
       IF codeaq% > 0 THEN ok% = 0
       FILE GAKquiDat$
       SELECT NEXT FILE GAKquiDat$
      WEND 
      ? "</export>"
       CLOSE OUTPUT 
       CALL Fehler("Fertg","Terminexport")
       inidat$ = GMACodeDir$ + "OUTLOOK\ergebnis.ini"
       expodir$ = GMACodeDir$ + "OUTLOOK"
       DIRECTORY expodir$
       a% = CALL ("ShellExecute",0,"open",datexe$,"","",1)
       SET STATUS "Bitte warten, Termine werden in MS Outlook eingetragen"
       i% = 0
       ok% = 0
       WHILE NOT EXISTS (inidat$) AND ok% = 0
         WAIT FOR 1
         IF EXISTS (inidat$) THEN ok% = 1
         i% = i% + 1
         IF i% = 10 THEN 
           REQUEST "Der Transfer wurde noch nicht abgeschlossen!","Weitere 10 Sekunden warten?",130,req%
           IF req% = 1 THEN 
             i% = 0
           ELSE 
             ok% = - 1
           END IF 
         END IF 
       WEND 
       IF EXISTS (inidat$) THEN 
         fehler$ = ReadDesti$("IMPORT","FEHLER",inidat$)
         anz$ = ReadDesti$("IMPORT","Anzahl",inidat$)
         IF Fehler$ = "" OR fehler$ LIKE "leer" THEN 
           REQUEST "Export nach MS Outlook beendet!","",2
         ELSE 
           CALL Fehler ("Beim Export nach MS Outlook ist ein Fehler aufgetreten!","Fehlerkennung: " + fehler$)
         END IF 
       END IF 
  ELSE 
    CALL Fehler ("Export wurde abgebrochen","")
  END IF 
  DIRECTORY _netpath$
 END SUB 
 
 REM die zu einer Adresse gehîrenden Termine exportieren
 REM codeku% > 0 Termine einer Adresse
 REM codeku%=0 Termine zu Adressen in AdrFoud$()
SUB TerAExpOutl(codeku%,gesamt%)
 MOUSE OFF 
 DIM AdrFound1$(10)
  REM CALL Fehler("Terminexport", STR$ (gesamt%,"99999"))
  GADRDat$ = "ADRESSEN"
  GTelDat$ = "TELEFON"
  GAkquiDat$ = "AKQUISE"
  codeku1% = 0
  IF codeku% > 0 THEN 
    codeku1% = codeku%
    kunr% = codeku%
    knr% = codeku%
    codeku1% = kunr%
  END IF 
  IF codeku% > 0 THEN 
    SELECT FIRST FILE GADRDat$ INDEX codeku.GADRDat$
    SELECT KEY codeku% FILE GADRDat$ INDEX codeku.GADRDat$
  END IF 
  REM CALL Fehler("TrÑgt den aktuellen Termin in Outlook ein!","")
  REM REQUEST "Soll der Export durchgefÅhrt werden?","",130,req%
  req% = 1
  IF req% = 1 THEN 
    expodir$ = GMACodeDir$ + "OUTLOOK"
    ON ERROR GOTO ta270720051
    MAKE DIRECTORY expodir$
    GOTO ta270720052
ta270720051: 
    f% = - 1
ta270720052: 
    expodir$ = GMACodeDir$ + "OUTLOOK\"
    ON ERROR GOTO ErrorHandler 
 
 
       IF EXISTS (expodir$ + "Termine.xml") THEN 
         DELETE expodir$ + "*.xml"
       END IF 
       datexe$ = GMACodeDir$ + "OUTLOOK\TerminMaker.exe"
       a% = CALL ("_SBFileExists",datexe$)
 
       nach$ = GMACodeDir$ + "OUTLOOK\KontaktMaker.exe"
       b% = CALL ("_SBFileExists",nach$)
 
       nach$ = GMACodeDir$ + "OUTLOOK\Interop.Microsoft.Office.Core.dll"
       c% = CALL ("_SBFileExists",nach$)
 
       nach$ = GMACodeDir$ + "OUTLOOK\Interop.Outlook.dll"
       d% = CALL ("_SBFileExists",nach$)
      
       IF a% <> - 1 OR b% <> - 1 OR c% <> - 1 OR d% <> - 1 THEN 
         ON ERROR GOTO w010820053
         DELETE GMACodeDir$ + "OUTLOOK\*.*"
w010820053: 
         ON ERROR GOTO ErrorHandler
 
         von$ = _netpath$ + "outlook\KontaktMaker.exe"
         nach$ = GMACodeDir$ + "OUTLOOK\KontaktMaker.exe"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "outlook\TerminMaker.exe"
         nach$ = GMACodeDir$ + "OUTLOOK\TerminMaker.exe"
         a% = CALL ("_SBFileCopy",von$,nach$)
  
 
         von$ = _netpath$ + "outlook\Interop.Microsoft.Office.Core.dll"
         nach$ = GMACodeDir$ + "OUTLOOK\Interop.Microsoft.Office.Core.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "outlook\Interop.Outlook.dll"
         nach$ = GMACodeDir$ + "OUTLOOK\Interop.Outlook.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
       END IF 
 
 
       SELECT FIRST FILE "supervis" INDEX codema.supervis
       SELECT KEY GMACodema% FILE "supervis" INDEX codema.supervis
       benutz$ = Outlookname.supervis
       benupw$ = Outlookpw.supervis
       DIM Telart$(20000)
       DIM TelNum$(20000)
       MOUSE OFF 
       OPEN expodir$ + "Termine.xml" FOR OUTPUT 
       ? "<?xml version=" + CHR$ (34) + "1.0" + CHR$ (34) + " encoding=" + CHR$ (34) + "ISO-8859-1" + CHR$ (34) + "?> "
       
       ? "<export>"
       ? "<MODUS>EXPORT</MODUS>"
       ? "<benutzer>"
         ? "  <name>" + benutz$ + "</name>"
         ? "  <pw>" + benupw$ + "</pw>"
       ? "</benutzer>"
    FILE GAKquiDat$
    INDEX codeku.GAKquiDat$

    a% = 0
    ab% = 0
anf060920051: 
    IF codeku% > 0 THEN 
      REDIM AdrFound1$(2)
      AdrFound1$(0) = STR$ (codeku%,"000000")
      codeku1% = codeku%
      SELECT FIRST FILE GAKquiDat$ INDEX codeku.GAKquiDat$
      SELECT KEY codeku1% FILE GAKquiDat$ INDEX codeku.GAKquiDat$
      ab% = ab% + 1
    ELSE 
      codeku1% = VAL (AdrFound1$(ab%))
      SELECT FIRST FILE GAKquiDat$ INDEX codeku.GAKquiDat$
      SELECT KEY codeku1% FILE GAKquiDat$ INDEX codeku.GAKquiDat$
      ab% = ab% + 1
    END IF 
    i% = 0
    xte% = - 1
    WHILE codeku.GAKquiDat$ = codeku1% AND xte% = - 1
      fiimak$ = "j"
      IF fiimak$ = "j" THEN 
       i% = i% + 1
       ? "<termine>"
       ? "<customerid>" STR$ (codeaq.GAkquiDat$,"000000") + "</customerid>"
       IF datum.GAkquiDat$ > 0 THEN 
         ? "<datum>" + DATE$ (datum.GAkquiDat$,"0d.mm.yyyy") + "</datum>"
       ELSE 
         ? "<datum></datum>"
       END IF 
 
       IF termin.GAkquiDat$ > 0 THEN 
         ? "<termin>" + DATE$ (termin.GAkquiDat$,"0d.mm.yyyy") + "</termin>"
       ELSE 
         ? "<termin></termin>"
       END IF 
 
       IF uhrzeit.GAkquiDat$ > 0 THEN 
         ? "<uhrzeit>" + TIME$ (uhrzeit.GAkquiDat$,"hh:mm") + "</uhrzeit>"
       ELSE 
         ? "<uhrzeit>00:00</uhrzeit>"
       END IF 
 
       IF ErDatum.GAkquiDat$ > 0 THEN 
         ? "<awvdatum>" + DATE$ (ErDatum.GAkquiDat$,"0d.mm.yyyy") + "</awvdatum>"
       ELSE 
         ? "<awvdatum></awvdatum>"
       END IF 
 
       IF Erzeit.GAkquiDat$ > 0 THEN 
         ? "<awvzeit>" + TIME$ (Erzeit.GAkquiDat$,"hh:mm") + "</awvzeit>"
       ELSE 
         ? "<awvzeit>00:00</awvzeit>"
       END IF 
 
       IF Dauer.GAkquiDat$ > 0 THEN 
         ? "<dauer>" + TIME$ (dauer.GAkquiDat$,"hh:mm") + "</dauer>"
       ELSE 
         ? "<dauer>00:00</dauer>"
       END IF 
       ? "<erledigt>" + erledigt_Termin.GAkquiDat$ + "</erledigt>"
       ? "<notiz>" + FN ansi(T1KL$(Notiz.GAkquiDat$)) + "</notiz>"
       ? "<ergebnis>" + FN ansi(T1KL$(ergebnis.GAkquiDat$)) + "</ergebnis>"
 
 
        ? "  <adresse>"
 
         ? FN ansi(T1KL$(anrede.GADRDat$))
         ? FN ansi(T1KL$(Geburtsname.GADRDat$))
         ? FN ansi(T1KL$(vorname.GADRDat$))
         ? FN ansi(T1KL$(nachname.GADRDat$))
         ? FN ansi(T1KL$(Stra·e.GADRDat$))
         ? T1KL$(plz.GADRDat$)
         ? FN ansi(T1KL$(ort.GADRDat$))
         ? FN ansi(T1KL$(land.GADRDat$))
         IF geburtstag.GADRDat$ < 1 THEN 
         ELSE 
           ? "Geburtstag:" + DATE$ (geburtstag.GADRDat$,"0d.mm.yyyy")
         END IF 
         IF EXISTS (codeku1%,codeku.telefon) THEN 
 
           FILE "telefon"
           INDEX codeku.telefon
           SELECT FIRST FILE "telefon" INDEX codeku.telefon
           SELECT KEY codeku1% FILE "telefon" INDEX codeku.telefon
           REDIM Telart$(1,1)
           REDIM Telart$(20000)
           REDIM TelNum$(1,1)
           REDIM TelNum$(20000)
           a% = 0
           WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku1%
             Telart$(a%) = T1KL$(Art.GTelDat$)
             TelNum$(a%) = T1KL$(Nummer.GTelDat$ + "  (" + kart1.GTeldat$ + "/" + Kart2.Gteldat$ + ")")
             a% = a% + 1
             SELECT NEXT FILE GTelDat$
           WEND 
           FOR i% = a% - 1 TO 0 STEP - 1
           ? FN ansi(Telart$(i%) + " / " + TelNum$(i%))
           NEXT i%
         END IF 
        ? "  </adresse>"
       ? "</termine>"
       ? ""
       SET STATUS STR$ (i%,",999999") + " Termine fÅr Adresse " + STR$ (a%,",999999") + " Åbergeben von " + STR$ (gesamt%,",999999") + " Adressen"
      END IF 
       REM IF codeaq% > 0 THEN ok% = 0
       FILE GAKquiDat$
       SELECT NEXT FILE GAKquiDat$
       IF EOF (GAKquiDat$) THEN xte% = 0
      WEND 
      SET STATUS STR$ (ab%,",999999") + " Adressen von " + STR$ (gesamt%,",999999")
      MOUSE OFF 
      IF AdrFound1$(ab%) <> "" THEN GOTO anf060920051
      ? "</export>"
       CLOSE OUTPUT 
       REM CALL Fehler("Fertig","Terminexport")
       MOUSE OFF 
       inidat$ = GMACodeDir$ + "OUTLOOK\ergebnis.ini"
       expodir$ = GMACodeDir$ + "OUTLOOK"
       DIRECTORY expodir$
       MOUSE OFF 
       a% = CALL ("ShellExecute",0,"open",datexe$,"","",1)
       SET STATUS "Bitte warten, Termine werden in MS Outlook eingetragen"
       i% = 0
       ok% = 0
       WHILE NOT EXISTS (inidat$) AND ok% = 0
         WAIT FOR 1
         IF EXISTS (inidat$) THEN ok% = 1
         i% = i% + 1
         IF i% = 10 THEN 
           REQUEST "Der Transfer wurde noch nicht abgeschlossen!","Weitere 10 Sekunden warten?",130,req%
           IF req% = 1 THEN 
             i% = 0
           ELSE 
             ok% = - 1
           END IF 
         END IF 
       WEND 
       IF EXISTS (inidat$) THEN 
         fehler$ = ReadDesti$("IMPORT","FEHLER",inidat$)
         anz$ = ReadDesti$("IMPORT","Anzahl",inidat$)
         IF Fehler$ = "" OR fehler$ LIKE "leer" THEN 
           IF gesamt% < 1 THEN REQUEST "Export nach MS Outlook beendet!","",2
         ELSE 
           CALL Fehler ("Beim Export der Termine nach MS Outlook ist ein Fehler aufgetreten!","Fehlerkennung: " + fehler$)
         END IF 
       END IF 
  ELSE 
    CALL Fehler ("Export der Termine nach MS Outlook wurde abgebrochen","")
  END IF 
  DIRECTORY _netpath$
  MOUSE ON 
 END SUB 
 
 









 REM die wunderbare Negativsuche, die rausfinden soll, ob ein Kunde einen bestimmten Vertrag
 REM nicht hat
 
SUB ADRSuNeg()
 IF disabled%("GENERATOR") THEN END SUB 
 GAppName$ = _netpath$ + "DOC\kvertrag.pdf"
 REM 070298
 VertKokor% = 1
 IF PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
   CALL DFile(3,"Buchung1" + _fpw$)
   SELECT WHERE FILE "Buchung1"
 ELSE 
   CALL DFile(3,"Buchung" + _fpw$)
   SELECT WHERE FILE "Buchung"
 END IF 
 CALL DFile(2,"OFFICE\adrstat" + _fpw$)
 SELECT WHERE FILE "adrstat"
 CALL DFile(2,"OFFICE\adrgrup" + _fpw$)
 SELECT WHERE FILE "adrgrup"
 CALL DFile(3,"Kgeadr" + _fpw$)
 CALL DFile(3,"statukey" + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 SELECT WHERE FILE "Sparten"
 CALL DFile(3,"geadr" + _fpw$):CALL DFile(3,"geadr2" + _fpw$)
 SELECT WHERE FILE "geadr"
 CALL DFile(3,"tarif" + _fpw$)
 SELECT WHERE FILE "tarif"
 CALL DFile(3,"maadr" + _fpw$)
 SELECT WHERE FILE "maadr"
 CALL DFile(3,"maadrgru" + _fpw$)
 SELECT WHERE FILE "maadrgru"
 CALL DFile(3,"kvertrag" + _fpw$)
 SELECT WHERE FILE "kvertrag"
 CALL DFile(3,"vprodukt" + _fpw$)
 SELECT WHERE FILE "vprodukt"
 CALL DFile(3,"tarif" + _fpw$)
 SELECT WHERE FILE "tarif"
 CALL DFile(3,"vorgang" + _fpw$)
 SELECT WHERE FILE "vorgang"
 CALL DFile(3,"vkond" + _fpw$)
 SELECT WHERE FILE "vkond"
 CALL DFile(3,"formular" + _fpw$)
 SELECT WHERE FILE "formular"
 CALL DFile(3,"spgruppe" + _fpw$)
 SELECT WHERE FILE "spgruppe"
 
 CALL DFile(3,"KVEXEXP" + _fpw$)
 
 IF GAFSK$ LIKE "TRUE" THEN 
   CALL DFile(3,"AFSKSUT" + _fpw$)
 END IF 
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 SELECT WHERE FILE GAdrDat$
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 SELECT WHERE FILE GAkquiDat$
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 SELECT WHERE FILE "aktionen"
 CALL DFile(2,"OFFICE\" + GTelDat$ + _fpw$)
 SELECT WHERE FILE GTelDat$
 CALL DFile(2,"OFFICE\" + GDokDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GConDat$ + _fpw$)
 CALL DFile(2,"OFFICE\banken" + _fpw$)
 CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 FILE "kvertrag"
 INDEX Codeku.kvertrag
 REM DIM Vertraege$( RECCOUNT ("KVERTRAG"))
   IF RECCOUNT ("KVERTRAG") > 10000 THEN 
     DIM Vertraege$(20000,1)
     REDIM Vertraege$(20000)
   ELSE 
     DIM Vertraege$( RECCOUNT ("KVERTRAG"),1)
     REDIM Vertraege$( RECCOUNT ("KVERTRAG"))
   END IF 
 
   DIM Waehrung$(25,1)
   REDIM Waehrung$(25)
   REM FOR i% = 1 TO 20
     REM Waehrung$(i%) = ""
   REM NEXT i%
   
   a% = 0
   Waehrung$(0) = "Filter deaktiviert"
   Waehrung$(1) = "alle nicht stornierten,nicht Fremdvertr.,nicht Altvertr." + SPACE$ (90) + "17"
   Waehrung$(2) = "alle nicht stornierten,alle Fremdvertr.,nicht Altvertr." + SPACE$ (90) + "18"
   Waehrung$(3) = "lebend" + SPACE$ (90) + "01"
   Waehrung$(4) = "leben/kurzfristig/unterjÑhrig" + SPACE$ (90) + "02"
   Waehrung$(5) = "ruhend/Anwartschaft" + SPACE$ (90) + "03"
   Waehrung$(6) = "storniert" + SPACE$ (90) + "04"
   Waehrung$(7) = "ruhend/beitragsfrei" + SPACE$ (90) + "05"
   Waehrung$(8) = "beitragsfrei" + SPACE$ (90) + "06"
   Waehrung$(9) = "beitragsfrei durch Leistung" + SPACE$ (90) + "07"
   Waehrung$(10) = "Beitragsstundung" + SPACE$ (90) + "08"
   Waehrung$(11) = "Sonstiges" + SPACE$ (90) + "09"
   Waehrung$(12) = "Altvertrag" + SPACE$ (90) + "10"
   Waehrung$(13) = "Fremdvertrag" + SPACE$ (90) + "11"
   Waehrung$(14) = "Antrag" + SPACE$ (90) + "12"
   Waehrung$(15) = "storniert durch Dynamisierung" + SPACE$ (90) + "13"
   Waehrung$(16) = "Bestandteil eines BÅndelungsvertrages" + SPACE$ (90) + "14"
   Waehrung$(17) = "Antragswiderruf" + SPACE$ (90) + "15"
   Waehrung$(18) = "Policenwiderspruch" + SPACE$ (90) + "16"
   Waehrung$(19) = "Antragsablehnung" + SPACE$ (90) + "20"
   Waehrung$(20) = "KÅnd.wg.Nichtzahlung" + SPACE$ (90) + "21"
   DIM Auswahl1$(1)
   DIM Auswahl2$(1)
 DIM Auswahl$(1)
 Auswahl1$ = "Filter deaktiviert"
 Auswahl2$ = "Filter deaktiviert"

 SELECT WHERE FILE "KVERTRAG"
 SELECT FIRST 
 IF GASP% THEN 
     DIM office$(VisCount%)'eins mehr fÅr <Alle BÅros>
     FOR i% = 0 TO VisCount% - 1
       office$(i%) = VisNames$(i%)
     NEXT i%
     IF Workstation% > 0 THEN 
       office$(VisCount%) = "<Alle BÅros>"
       selOff$ = office$(VisCount% - 1)'sis
     ELSE 
       office$(VisCount%) = "<Alle BÅros>"
       selOff$ = office$(VisCount%)'sis 
     END IF 
     ShowOther% = - 1
     IF ShowOther% <> - 1 THEN 
        FOR i% = 0 TO VisCount% - 1
            IF VisOff%(i%) = ShowOther% THEN 
                selOff$ = VisNames$(i%)
                i% = VisCount%
            END IF 
        NEXT i%
     END IF 
 END IF 
vertkond020820051: 
   IF RECCOUNT ("KVERTRAG") > 10000 THEN 
     REDIM Vertraege$(20000,1)
     REDIM Vertraege$(20000)
   ELSE 
     REDIM Vertraege$( RECCOUNT ("KVERTRAG"),1)
     REDIM Vertraege$( RECCOUNT ("KVERTRAG"))
   END IF 
anfsu220920051:    
 a% = 0
 ok% = - 1
 SELECT WHERE FILE "KVERTRAG"
 SELECT FIRST 
 WHILE ok%
   IF RECCOUNT ("KVERTRAG") > 10000 THEN 
     REDIM Vertraege$(20000,1)
     REDIM Vertraege$(20000)
   ELSE 
     REDIM Vertraege$( RECCOUNT ("KVERTRAG"),1)
     REDIM Vertraege$( RECCOUNT ("KVERTRAG"))
   END IF 
   provab% = 0
 
   REM Positivblock
   IF spa% = 0 THEN 
     vSparte$ = "alle"
   ELSE 
     SELECT FIRST FILE "SPARTEN" INDEX CodeVA.SPARTEN
     SELECT KEY spa% FILE "SPARTEN" INDEX CodeVA.SPARTEN
     vsparte$ = Sparte.SPARTEN
   END IF 
   IF spgr% < 1 THEN 
     vSpGR$ = "alle"
   ELSE 
     SELECT FIRST FILE "SPGRUPPE" INDEX Codegrsp.SPGRUPPE
     SELECT KEY spgr% FILE "SPGRUPPE" INDEX Codegrsp.SPGRUPPE
     vspGr$ = Gruppe.SPGRUPPE
   END IF 
   IF ge% = 0 THEN 
     Gesellschaft$ = "alle"
   ELSE 
     SELECT FIRST FILE "GEADR" INDEX CodeGE.GEADR
     SELECT KEY ge% FILE "GEADR" INDEX CodeGE.GEADR
     Gesellschaft$ = Gesellschaft.GEADR
     REM ** Gesellschaft auswÑhlen
   END IF 
   IF cvp% = 0 THEN 
     vprodukt$ = "alle"
   ELSE 
     SELECT KEY cvp% FILE "Vprodukt" INDEX codevp.vprodukt
     vprodukt$ = gesellschaft.vprodukt + "/" + sparte.vprodukt
   END IF 
 
   REM Negativblock
   IF nspa% = 0 THEN 
     nvSparte$ = "alle"
   ELSE 
     SELECT FIRST FILE "SPARTEN" INDEX CodeVA.SPARTEN
     SELECT KEY nspa% FILE "SPARTEN" INDEX CodeVA.SPARTEN
     nvsparte$ = Sparte.SPARTEN
   END IF 
   IF nspgr% < 1 THEN 
     nvSpGR$ = "alle"
   ELSE 
     SELECT FIRST FILE "SPGRUPPE" INDEX Codegrsp.SPGRUPPE
     SELECT KEY nspgr% FILE "SPGRUPPE" INDEX Codegrsp.SPGRUPPE
     nvspGr$ = Gruppe.SPGRUPPE
   END IF 
   IF nge% = 0 THEN 
     nGesellschaft$ = "alle"
   ELSE 
     SELECT FIRST FILE "GEADR" INDEX CodeGE.GEADR
     SELECT KEY nge% FILE "GEADR" INDEX CodeGE.GEADR
     nGesellschaft$ = Gesellschaft.GEADR
     REM ** Gesellschaft auswÑhlen
   END IF 
   IF ncvp% = 0 THEN 
     nvprodukt$ = "alle"
   ELSE 
     SELECT FIRST FILE "Vprodukt" INDEX codevp.vprodukt
     SELECT KEY ncvp% FILE "Vprodukt" INDEX codevp.vprodukt
     nvprodukt$ = gesellschaft.vprodukt + "/" + sparte.vprodukt
   END IF 
 
 
 
 
 
   bart% = 0
   st$ = "VertragsÅbersicht"
   
   REMOVE DIALOG ALL 
   so% = 1
   so1% = 1
   inc% = 1
   REM 191099/5
 
     CREATE DIALOG "BVERTRAG",0,0,446,280,"Adressen, die bestimmte VertrÑge nicht besitzen","MS Sans Serif",8
 
     ADD DIALOG "BVERTRAG",4,5,6,431,77,0,"POSITIV-Filter, d.h. die Adressen mÅssen VertrÑge besitzen, die die untenstehenden Kriterien erfÅllen"
 
     ADD DIALOG "BVERTRAG",5,8,26,28,10,0,"Produkt"
     ADD DIALOG "BVERTRAG",5,57,26,167,10,0,vProdukt$
     ADD DIALOG "BVERTRAG",1,218,26,14,10,0,"...",9,1

     ADD DIALOG "BVERTRAG",4,240,26,196,40,0,"Optionen zum Vertragsstatus"
     ADD DIALOG "BVERTRAG",8,242,46,190,135,3,2,Auswahl2$,Waehrung$
 
     ADD DIALOG "BVERTRAG",5,8,37,43,10,0,"Gesellschaft"
     ADD DIALOG "BVERTRAG",5,57,37,167,10,0,Gesellschaft$
     ADD DIALOG "BVERTRAG",1,218,37,14,10,0,"...",4,1
 
     ADD DIALOG "BVERTRAG",5,8,48,24,10,0,"Sparte"
     ADD DIALOG "BVERTRAG",5,57,48,167,10,0,vSparte$
     ADD DIALOG "BVERTRAG",1,218,48,14,10,0,"...",5,1
 
     ADD DIALOG "BVERTRAG",5,8,59,49,9,0,"Spartengruppe"
     ADD DIALOG "BVERTRAG",5,57,59,167,9,0,vSpGr$
     ADD DIALOG "BVERTRAG",1,218,59,14,9,0,"...",6,1
 
 
     REM Negativblock
     ADD DIALOG "BVERTRAG",4,5,106,431,77,0,"NEGATIV-Filter, d.h. die Adressen suchen, die keine VertrÑge besitzen, die die untenstehenden Kriterien erfÅllen"
     ADD DIALOG "BVERTRAG",5,8,126,28,10,0,"Produkt"
     ADD DIALOG "BVERTRAG",5,57,126,167,10,0,nvProdukt$
     ADD DIALOG "BVERTRAG",1,218,126,14,10,0,"...",90,1

     ADD DIALOG "BVERTRAG",4,240,126,196,40,0,"Optionen zum Vertragsstatus"
     ADD DIALOG "BVERTRAG",8,242,146,190,135,3,2,Auswahl1$,Waehrung$

 
     ADD DIALOG "BVERTRAG",5,8,137,43,10,0,"Gesellschaft"
     ADD DIALOG "BVERTRAG",5,57,137,167,10,0,nGesellschaft$
     ADD DIALOG "BVERTRAG",1,218,137,14,10,0,"...",40,1
 
     ADD DIALOG "BVERTRAG",5,8,148,24,10,0,"Sparte"
     ADD DIALOG "BVERTRAG",5,57,148,167,10,0,nvSparte$
     ADD DIALOG "BVERTRAG",1,218,148,14,10,0,"...",50,1
 
     ADD DIALOG "BVERTRAG",5,8,159,49,9,0,"Spartengruppe"
     ADD DIALOG "BVERTRAG",5,57,159,167,9,0,nvSpGr$
     ADD DIALOG "BVERTRAG",1,218,159,14,9,0,"...",60,1
 
 
 
 
     IF GASP% THEN 
       ADD DIALOG "BVERTRAG",5,250,187,130,10,0,"BÅro"
       ADD DIALOG "BVERTRAG",8,250,197,144,245,259,2,selOff$,office$
     END IF 
  

     REM ADD DIALOG "BVERTRAG",4,247,172,197,35,0,"Optionen zum Vertragsstatus"
     REM ADD DIALOG "BVERTRAG",7,250,186,190,145,0,2,Waehrung$,Auswahl1$,"Filter deaktiviert"
     REM ADD DIALOG "BVERTRAG",8,250,186,190,145,3,2,Auswahl1$,Waehrung$

     
     REM ADD DIALOG "BVERTRAG",1,222,329,110,14,1,"&Kunden-Adressen ausgeben",30,1
     ADD DIALOG "BVERTRAG",1,46,226,55,14,1,"&OK",1,1
     ADD DIALOG "BVERTRAG",1,104,226,55,14,0,"&Abbrechen",0,0
   DIALOG "BVERTRAG",dreq%
   negativsu% = 0
   SELECT CASE dreq%
   CASE 4
     ge% = GetCodeGE%(ge%)
   CASE 40
     nge% = GetCodeGE%(nge%)
   CASE 5
     spa% = GetCodeVA%(spa%)
   CASE 50
     nspa% = GetCodeVA%(nspa%)
   CASE 6
     spgr% = GetCodeGR%(spgr%)
   CASE 60
     nspgr% = GetCodeGR%(nspgr%)
   CASE 9
     REM Produkt auswÑhlen
     IF GOldProdSu$ LIKE "TRUE" THEN 
       cvp% = GetVprodukt%(0,0,0)
     ELSE 
       cvp% = NewGetCodeVP%()
     END IF 
   CASE 90
     REM Produkt auswÑhlen
     REM cvp% = GetVprodukt%(0,0)
     REM ncvp% = NewGetCodeVP%()
     IF GOldProdSu$ LIKE "TRUE" THEN 
       ncvp% = GetVprodukt%(0,0,0)
     ELSE 
       ncvp% = NewGetCodeVP%()
     END IF 
   CASE 10
     REM Tarif auswÑhlen
     ctar% = GetCodeTarif%(0,0)
   CASE 11
     REM ADRGruppe wÑhlen
       b% = 1
       IF z% < RECCOUNT (GAdrDat$) THEN 
         z% = RECCOUNT (GAdrDat$)
       END IF 
       IF z% < RECCOUNT (datei$) + 5 THEN 
         z% = RECCOUNT (datei$) + 5
       END IF 
       IF z% > 20000 THEN z% = 20000
       REDIM AdrFound$(z%)
       REM FOR i% = 0 TO z% - 1
         REM AdrFound$(i%) = ""
       REM NEXT i%
       REM CALL DFile(3,datei1$ + _fpw$)
       datei1$ = "ADRGRUP"
       FILE datei1$
       INDEX keyword.datei1$
       SELECT FIRST 
       a% = 0
       SELECT WHERE keyword.datei1$ <> ""
       SELECT FIRST 
       AdrFound$(0) = "<keinen Filter setzen>"
       WHILE NOT EOF (datei1$)
         AdrFound$(b%) = keyword
         b% = b% + 1
         SELECT NEXT 
       WEND 
       AdrFound$(b%) = ""
       LAuswahl$ = AdrFound$(0)
       LAuswahl1$(0) = LAuswahl$
       CREATE DIALOG "ADRLISTE",0,0,340,197,"Adress-Gruppe wÑhlen","MS Sans Serif",8
       REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
       ADD DIALOG "ADRLISTE",7,5,8,328,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
       ADD DIALOG "ADRLISTE",1,74,174,56,16,1,"&OK",1,1
       ADD DIALOG "ADRLISTE",1,134,174,56,16,0,"&Abbrechen",0,0
       DIALOG "ADRLISTE",req5%
       MOUSE ON 
       REMOVE DIALOG "ADRLISTE"
       IF req5% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         vADRGRUP$ = LAuswahl$
         IF LAuswahl$ = "<keinen Filter setzen>" THEN vADRGRUP$ = "alle"
       ELSE 
         vADRGRUP$ = "alle"
       END IF 
   CASE 28
     REM VertrÑge, die nicht an die Abrechnung Åbergeben wurden
     provab% = 1
     ok% = 1
   CASE 29
     REM abgerechnete VertrÑge ohne BuchungssÑtze
     provab% = 2
     ok% = 1
   CASE 30
     REM nur Adressen ausgeben
     ok% = 1
   CASE 31
      REM Negativsuche Agentur
      wks1% = Workstation%
      ma1% = GetCodeMA%(ma1%,Wks1%)
   CASE 32
     REM Negativsuche
     doit% = 1
     negativsu% = - 1
     IF DateOK%(von$) THEN 
       ok% = 1
       IF DateOK%(bis$) THEN 
         ok% = 1
       ELSE 
         ok% = - 1
         CALL Fehler("Falsche Datumsangabe bei ...bis: !","Bitte geben Sie das Datum in der Form 'tt.mm.jjjj' ein.")
       END IF 
     ELSE 
       ok% = - 1
       CALL Fehler("Falsche Datumsangabe bei ...von: !","Bitte geben Sie das Datum in der Form 'tt.mm.jjjj' ein.")
     END IF 
   CASE 0
     ok% = 0
     doit% = 0
   END SELECT 
   REMOVE DIALOG "BVERTRAG"
   IF GASP% THEN 
     REM ShowOther% = - 1'sis
     show1% = 0
     IF selOff$ <> "<Alle BÅros>" THEN 
        FOR i% = 0 TO VisCount% - 1
            IF VisNames$(i%) = selOff$ THEN 
                Show1% = VisOff%(i%)
                i% = VisCount%'und raus
            END IF 
        NEXT i%
     END IF 
   END IF 
   REM  REMOVE DIALOG ALL 
   IF dreq% = 1 THEN ok% = 0
 WEND 
 IF dreq% = 0 THEN GOTO VertKond020805END 
 REM IF nspa% > 0 OR nspgr% > 0 OR nge% > 0 OR ncvp% > 0 THEN 
 REM ELSE 
   REM CALL Fehler("Sie mÅssen mindestens 1 Negativbedingung auswÑhlen!","")
   REM GOTO vertkond020820051
 REM END IF 
 IF nspa% > 0 OR nspgr% > 0 OR nge% > 0 OR ncvp% > 0 OR spa% > 0 OR spgr% > 0 OR ge% > 0 OR cvp% > 0 THEN 
 ELSE 
   CALL Fehler("Sie mÅssen mindestens 1 Bedingung auswÑhlen!","")
   GOTO vertkond020820051
 END IF 
 REM Auswertung der gesetzten Filter
 MOUSE OFF 
 SET STATUS "VertrÑge gefunden: " + STR$ (a%,"9999999")
 REM 05092002
 ON ERROR GOTO spz22509051
 IF GCODieRuf% > 99 THEN 
   ret% = CALL ("_SearchClose"):REM CALL Fehler("","")
   GCODieRuf% = 0
   GCODieRuf1% = 0
 END IF 
spz22509051: 
 ON ERROR GOTO spz22509052
 IF GCODieRuf1% > 99 THEN 
   ret% = CALL ("_SearchClose"):REM CALL Fehler("","")
   GCODieRuf1% = 0
 END IF 
spz22509052: 
 ON ERROR GOTO spz22509053
       IF EXISTS (GMACodeDir$ + "search.dat") OR EXISTS (GMACodeDir$ + "search.idx") THEN 
         IF (GASP% = - 1 OR GTerminal% = - 1) AND GMACodeDir$ <> "C:\" AND GMACodeDir$ <> "c:\" THEN 
           DELETE GMACodeDir$ + "search.*"
         ELSE 
           DELETE GMACodeDir$ + "search.*"
         END IF 
         IF EXISTS (_netpath$ + "local\search.dat") AND EXISTS (_netpath$ + "local\search.idx") THEN 
           COPY _netpath$ + "local\search.dat",GMACodeDir$ + "search.dat"
           COPY _netpath$ + "local\search.idx",GMACodeDir$ + "search.idx"
         ELSE 
           GCodie% = 0
         END IF 
       ELSE 
         IF EXISTS (_netpath$ + "local\search.dat") AND EXISTS (_netpath$ + "local\search.idx") THEN 
           COPY _netpath$ + "local\search.dat",GMACodeDir$ + "search.dat"
           COPY _netpath$ + "local\search.idx",GMACodeDir$ + "search.idx"
         ELSE 
           GCodie% = 0
         END IF 
       END IF 
spz22509053: 
   ON ERROR GOTO ErrorHandler
   REM Waehrung$(0) = "Filter deaktiviert"
   REM Waehrung$(1) = "alle nicht stornierten,nicht Fremdvertr.,nicht Altvertr." + SPACE$ (90) + "17"
   REM Waehrung$(2) = "alle nicht stornierten,alle Fremdvertr.,nicht Altvertr." + SPACE$ (90) + "18"
   REM Waehrung$(3) = "lebend" + SPACE$ (90) + "01"
   REM Waehrung$(4) = "leben/kurzfristig/unterjÑhrig" + SPACE$ (90) + "02"
   REM Waehrung$(5) = "ruhend/Anwartschaft" + SPACE$ (90) + "03"
   REM Waehrung$(6) = "storniert" + SPACE$ (90) + "04"
   REM Waehrung$(7) = "ruhend/beitragsfrei" + SPACE$ (90) + "05"
   REM Waehrung$(8) = "beitragsfrei" + SPACE$ (90) + "06"
   REM Waehrung$(9) = "beitragsfrei durch Leistung" + SPACE$ (90) + "07"
   REM Waehrung$(10) = "Beitragsstundung" + SPACE$ (90) + "08"
   REM Waehrung$(11) = "Sonstiges" + SPACE$ (90) + "09"
   REM Waehrung$(12) = "Altvertrag" + SPACE$ (90) + "10"
   REM Waehrung$(13) = "Fremdvertrag" + SPACE$ (90) + "11"
   REM Waehrung$(14) = "Antrag" + SPACE$ (90) + "12"
   REM Waehrung$(15) = "storniert durch Dynamisierung" + SPACE$ (90) + "13"
   REM Waehrung$(16) = "Bestandteil eines BÅndelungsvertrages" + SPACE$ (90) + "14"
   REM Waehrung$(17) = "Antragswiderruf" + SPACE$ (90) + "15"
   REM Waehrung$(18) = "Policenwiderspruch" + SPACE$ (90) + "16"
   FILE "kvertrag"
   INDEX codeku.kvertrag
 
   FILE "adressen"
   INDEX codeku.adressen
   SELECT FIRST 
   ii% = 0
   jj% = RECCOUNT ("ADRESSEN")
   gg% = 0
   a% = 0
   IF RECCOUNT ("ADRESSEN") > 20000 THEN 
     z% = 20000
   ELSE 
     z% = RECCOUNT ("ADRESSEN")
   END IF 
   REDIM AdrFound$(z% + 1)
         IF GCODIE% = - 1 THEN 
           CALL SearchInitADR()
         END IF 
         sperre% = 0
     IF MNdisabled%("DATALOCK") THEN 
       sperre% = - 1
     END IF 
 
   
   CodeVStatusP% = 0
   CodeVStatus% = 0
   CodeVStatusP% = VAL ( RIGHT$ (Auswahl2$,2))
   CodeVStatus% = VAL ( RIGHT$ (Auswahl1$,2))
   datsu$ = "ADRESSEN"
   REM CALL Fehler("Jetzt gehts los","")
   WHILE NOT EOF ("adressen")
     ii% = ii% + 1
     MOUSE OFF 
     codeku% = codeku.adressen
     sok% = - 1
     datsu$ = "ADRESSEN"
           IF GASP% THEN 
               codemaField$ = "codema." + datsu$
               succ% = 0
               REM 25102002 IF (IsWksVisible%(Workstation.datsu$) = - 1 OR codemaField$$ = 0) THEN 
               IF (IsWksVisible%(Workstation.datsu$) = - 1) THEN 
                 IF VAL (GMAView$) = 0 THEN 'wenn Daten aller Mitarbeiter sichtbar
                   succ% = - 1
                 ELSE 
                   SELECT CASE UCASE$ (datsu$)
                     CASE "ADRESSEN","DOKUMENT","AKQUISE","BCKONTAK","DOKBCK","AKQUIBCK","MAADR","KVERTRAG","ANTRAG"
                       succ% = (codemaField$$ = VAL (GMAView$)) OR codemaField$$ = 0
                       succ% = succ% OR ((Workstation% = 0) AND (Workstation.datsu$ > 0))
                     ELSE CASE 
                       succ% = - 1
                   END SELECT 
                 END IF 
               END IF 
               sok% = succ%
           END IF 
     IF sperre% = - 1 THEN 
       IF Sperre.datsu$ <> 0 AND Sperre.datsu$ <> vcodema% THEN sok% = 0
     END IF 
     IF sok% <> - 1 THEN GOTO weitsu0208051
     REM*****************************************************************
     REM Merkmale des Positivblocks abfragen, wenn dort etwas gesetzt ist
     IF spa% > 0 OR spgr% > 0 OR ge% > 0 OR cvp% > 0 THEN 
       IF NOT EXISTS (codeku%,codeku.Kvertrag) THEN 
         sok% = 0
         GOTO weitsu0208051
       END IF 
       FILE "kvertrag"
       INDEX codeku.kvertrag
       SELECT FIRST FILE "kvertrag" INDEX codeku.kvertrag
       SELECT KEY codeku% FILE "kvertrag" INDEX codeku.kvertrag
       pos% = 0
       WHILE NOT EOF ("kvertrag") AND codeku.kvertrag = codeku% AND pos% = 0
         IF spa% > 0 THEN 
             IF spa% = codeva.kvertrag THEN pos% = - 1

             IF CodeVStatusP% > 0 THEN 
               IF CodeVStatusP% > 16 THEN 
                 IF codevstatusP% = 17 THEN 
                   REM "alle nicht stornierten,nicht Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 11 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 THEN 
                     pos% = 0
                   END IF 
                 END IF 
                 IF codevstatusP% = 18 THEN 
                   REM "alle nicht stornierten,alle Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 THEN 
                     pos% = 0
                   END IF 
                 END IF 
               ELSE 
                 IF codevstatus.kvertrag <> CodeVStatusP% THEN pos% = 0
               END IF 
             END IF 
         END IF 
         IF spgr% > 0 THEN 
             IF spgr% = codegrsp.kvertrag THEN pos% = - 1

             IF CodeVStatusP% > 0 THEN 
               IF CodeVStatusP% > 16 THEN 
                 IF codevstatusP% = 17 THEN 
                   REM "alle nicht stornierten,nicht Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 11 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 THEN 
                     pos% = 0
                   END IF 
                 END IF 
                 IF codevstatusP% = 18 THEN 
                   REM "alle nicht stornierten,alle Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 THEN 
                     pos% = 0
                   END IF 
                 END IF 
               ELSE 
                 IF codevstatus.kvertrag <> CodeVStatusP% THEN pos% = 0
               END IF 
             END IF 
         END IF 
         IF ge% > 0 THEN 
             IF ge% = codege.kvertrag THEN pos% = - 1

             IF CodeVStatusP% > 0 THEN 
               IF CodeVStatusP% > 16 THEN 
                 IF codevstatusP% = 17 THEN 
                   REM "alle nicht stornierten,nicht Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 11 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 THEN 
                     pos% = 0
                   END IF 
                 END IF 
                 IF codevstatusP% = 18 THEN 
                   REM "alle nicht stornierten,alle Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 THEN 
                     pos% = 0
                   END IF 
                 END IF 
               ELSE 
                 IF codevstatus.kvertrag <> CodeVStatusP% THEN pos% = 0
               END IF 
             END IF 
         END IF 
         IF cvp% > 0 THEN 
             IF cvp% = codevp.kvertrag THEN pos% = - 1
             lfdnr% = lfdnr.kvertrag

             IF CodeVStatusP% > 0 THEN 
               IF CodeVStatusP% > 16 THEN 
                 IF codevstatusP% = 17 THEN 
                   REM "alle nicht stornierten,nicht Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 11 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 THEN 
                     pos% = 0
                   END IF 
                 END IF 
                 IF codevstatusP% = 18 THEN 
                   REM "alle nicht stornierten,alle Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 THEN 
                     pos% = 0
                   END IF 
                 END IF 
               ELSE 
                 IF codevstatus.kvertrag <> CodeVStatusP% THEN pos% = 0
               END IF 
             END IF 
         END IF 
         SELECT NEXT FILE "kvertrag" INDEX codeku.kvertrag
       WEND 
       IF pos% <> - 1 THEN 
         sok% = 0
         GOTO weitsu0208051
       END IF 
     END IF 
     REM*****************************************************************
     REM*****************************************************************
     REM Merkmale des Negativblocks abfragen, wenn dort etwas gesetzt ist
       REM IF nspa% > 0 OR nspgr% > 0 OR nge% > 0 OR ncvp% > 0 THEN 
       IF NOT EXISTS (codeku%,codeku.kvertrag) THEN GOTO sok0208051
 
       FILE "kvertrag"
       INDEX codeku.kvertrag
       SELECT FIRST FILE "kvertrag" INDEX codeku.kvertrag
       SELECT KEY codeku% FILE "kvertrag" INDEX codeku.kvertrag
       pos% = - 1
       IF codeku% = 59 THEN 
         REM CALL Fehler("Jetzt gehts los","Negativblock")
       END IF 
       WHILE NOT EOF ("kvertrag") AND codeku.kvertrag = codeku% AND pos% = - 1
         IF lfdnr.kvertrag = 13 THEN 
           REM CALL Fehler("Jetzt gehts los","Vertrag=13")
         END IF 
         IF nspa% > 0 THEN 
           IF nspa% = codeva.kvertrag THEN 
             IF CodeVStatus% = 0 THEN 
               pos% = 0
             ELSE 
               IF CodeVStatus% > 16 THEN 
                 IF codevstatus% = 17 THEN 
                   REM "alle nicht stornierten,nicht Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 11 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 THEN 
                     pos% = 0
                   END IF 
                 END IF 
                 IF codevstatus% = 18 THEN 
                   REM "alle nicht stornierten,alle Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 THEN 
                     pos% = 0
                   END IF 
                 END IF 
               ELSE 
                 IF codevstatus.kvertrag <> CodeVStatus% THEN pos% = 0
               END IF 
             END IF 
           END IF 
         END IF 
         IF nspgr% > 0 THEN 
           IF nspgr% = codegrsp.kvertrag THEN 
             IF CodeVStatus% = 0 THEN 
               pos% = 0
             ELSE 
               IF CodeVStatus% > 16 THEN 
                 IF codevstatus% = 17 THEN 
                   REM "alle nicht stornierten,nicht Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 11 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 THEN 
                     pos% = 0
                   END IF 
                 END IF 
                 IF codevstatus% = 18 THEN 
                   REM "alle nicht stornierten,alle Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 THEN 
                     pos% = 0
                   END IF 
                 END IF 
               ELSE 
                 IF codevstatus.kvertrag <> CodeVStatus% THEN pos% = 0
               END IF 
             END IF 
           END IF 
         END IF 
         IF nge% > 0 THEN 
           IF nge% = codege.kvertrag THEN 
             IF CodeVStatus% = 0 THEN 
               pos% = 0
             ELSE 
               IF CodeVStatus% > 16 THEN 
                 IF codevstatus% = 17 THEN 
                   REM "alle nicht stornierten,nicht Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 11 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 THEN 
                     pos% = 0
                   END IF 
                 END IF 
                 IF codevstatus% = 18 THEN 
                   REM "alle nicht stornierten,alle Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 THEN 
                     pos% = 0
                   END IF 
                 END IF 
               ELSE 
                 IF codevstatus.kvertrag <> CodeVStatus% THEN pos% = 0
               END IF 
             END IF 
           END IF 
         END IF 
         IF ncvp% > 0 THEN 
           IF ncvp% = codevp.kvertrag THEN 
             IF CodeVStatus% = 0 THEN 
               pos% = 0
             ELSE 
               IF CodeVStatus% > 16 THEN 
                 IF codevstatus% = 17 THEN 
                   REM "alle nicht stornierten,nicht Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 11 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 THEN 
                     pos% = 0
                   END IF 
                 END IF 
                 IF codevstatus% = 18 THEN 
                   REM "alle nicht stornierten,alle Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 THEN 
                     pos% = 0
                   END IF 
                 END IF 
               ELSE 
                 IF codevstatus.kvertrag <> CodeVStatus% THEN pos% = 0
               END IF 
             END IF 
           END IF 
         END IF 
         SELECT NEXT FILE "kvertrag" INDEX codeku.kvertrag
       WEND 
       IF pos% <> - 1 THEN 
         sok% = 0
         GOTO weitsu0208051
       END IF 
     REM***************************************************************** 
sok0208051: 
     IF sok% = - 1 THEN 
       REM CALL Fehler("Jetzt gehts los","sok%=-1")
       gg% = gg% + 1
       REM *****************************************
       IF GCODIE% = - 1 THEN 
         CALL SearchVorbAdr(GADRDAT$)
         codeku% = Codeku.GADRDAT$
         IF EXISTS (codeku%,codeku.GTelDat$) THEN 
           SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
           CALL SearchVorbTel(GADRDAT$)
         END IF 
       END IF 
       AdrFound1$ = LTRIM$ (nachname)
       IF LTRIM$ (vorname) <> "" THEN AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (vorname)
       IF LTRIM$ (EGNachname) <> "" AND LTRIM$ (EGNACHNAme) <> LTRIM$ (Nachname) THEN AdrFound1$ = AdrFound1$ + ",LAB: " + LTRIM$ (EGNachname) + ", "
       IF LTRIM$ (EGvorname) <> "" THEN AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (EGvorname)
       IF LTRIM$ (K1name) <> "" THEN AdrFound1$ = AdrFound1$ + ", Kind1: " + LTRIM$ (K1name)
       IF LTRIM$ (K2name) <> "" THEN AdrFound1$ = AdrFound1$ + ", Kind2: " + LTRIM$ (K2name)
       IF LTRIM$ (K3name) <> "" THEN AdrFound1$ = AdrFound1$ + ", Kind3: " + LTRIM$ (K3name)
       IF LTRIM$ (K4name) <> "" THEN AdrFound1$ = AdrFound1$ + ", Kind4: " + LTRIM$ (K4name)
       AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (Kundennummer) + "/" + LTRIM$ (ort) + ", " + LTRIM$ (PLZ) + ", " + LTRIM$ (Stra·e) + ", "
       REM FILE "project"
       AdrFound$(a%) = AdrFound1$ + SPACE$ (120) + STR$ (codeku,"000000")
       a% = a% + 1
       IF GCODIE% = - 1 THEN 
         GGGcodeku$ = STR$ (codeku.adressen,"000000")
         ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
       END IF 
       REM ******************************************
     END IF 
weitsu0208051: 
     REM CALL Fehler( STR$ (ii%,",999999"),"")
     SET STATUS STR$ (ii%,",999999") + " durchsucht von " + STR$ (jj%,",999999") + " gefunden " + STR$ (gg%,",999999")
     SELECT NEXT FILE "ADRESSEN" INDEX codeku.adressen
   WEND 
 a% = a% + 1
 IF a% = 1 THEN 
   CALL Fehler("Es wurden keine DatensÑtze gefunden, die Ihren Auswahlkriterien entsprachen","")
   GOTO anfsu220920051
 END IF 
 tfoundadr% = a%
 AdrFound$(a%) = ""
 IF a% > 1 THEN 
 
   LAuswahl$ = AdrFound$(0)
   LAuswahl1$(0) = LAuswahl$
   IF _projekt$ LIKE "PROVIS" THEN 
     MENU 3,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
   ELSE 
     MENU 4,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
   END IF 
   IF GCODIE% = - 1 THEN 
     c$ = "aa"
     req3% = CALL ("_SearchShow",c$)
     REM REQUEST c$,"",2
     REM ret% = CALL ("_SearchClose"):rem CALL Fehler("","")
     IF VAL (c$) <> 0 THEN 
       AdrSuche% = VAL (c$)
       adrfound% = VAL (c$)
       codeku1% = VAL (c$)
       knr% = codeku1%
       adrglob% = knr%
       ok% = 0
       SET STATUS "Adressen gefunden..."
       SELECT FORM KEY codeku1% FILE GAdrDat$ INDEX Codeku.GAdrDat$
       SELECT FORM KEY codeku1% FILE GTelDat$ INDEX Codeku.GTelDat$
       SET INDEX INDEX 
       REM CALL Fehler("von suche","")
       CALL ADRFeldnamen()
       FORM 
       MOUSE ON 
     END IF 
     IF req3% = 2 THEN 
       adrser% = 1
       CALL SerieNeu1(GAdrDat$)
       GOTO endadr180998
     END IF 
     IF req3% = 3 THEN 
       REM CALL Fehler("req3% = 3","")
         ja% = - 1
         IF disabled%("ADRDrucken") THEN ja% = 0
         IF req3% = 3 AND ja% = - 1 THEN 
           REM drucken
           ON ERROR GOTO adrdr020820051
           DIM dlg AS Dialog
           DIM control AS DialogControl
adrdr020820051: 
           ON ERROR GOTO ErrorHandler
           Superbase.Dialogs.Add("ADRFilter")
           SET dlg = Superbase.Dialogs.ADRFilter
           dlg.Move(0,0,158,111)
           dlg.Caption = title$
           dlg.FontName = "MS Sans Serif"
           dlg.FontSize = 8
 
           SET control = dlg.Add("DialogFrame2","DialogFrame")
           control.Move(5,7,141,77)
           control.Caption = "Druckoptionen"
 
           SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
           control.Move(11,24,85,10)
           control.Caption = "Alle Angaben drucken"
           control.Bind("KurzLang$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCheckBox2","DialogCheckBox")
           control.Move(11,38,85,11)
           control.Caption = "Termine mitdrucken"
           control.Bind("Terminejn$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCheckBox3","DialogCheckBox")
           control.Move(11,53,115,11)
           control.Caption = "VertrÑge zur Adresse drucken!"
           control.Bind("VertragJN$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCheckBox4","DialogCheckBox")
           control.Move(11,68,105,11)
           control.Caption = "als Telefonliste"
           control.Bind("adrtelefon$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
           control.Move(22,89,48,15)
           control.Default = 1
           control.Caption = "&Weiter"
           control.ReturnValue = 1
 
           SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
           control.Move(74,89,48,15)
           control.Caption = "&Abbruch"
           control.ReturnValue = 0
           control.Cancel = 1
           DIALOG "ADRFilter",req%
           REMOVE DIALOG ALL 
           IF req% = 1 THEN 
             REM jetzt das Array auslesen und in eine Datei speichern
             FILE GADRDat$
             cindex$ = INDEX 
             INDEX codeku.Gadrdat$
             CALL DFile(2,"OFFICE\ADRLEER" + _fpw$)
             aa% = a% - 1
             FOR xi% = 0 TO a% - 1
               codeku% = VAL ( RIGHT$ (AdrFound$(xi%),6))
               SELECT KEY codeku% FILE GADRDat$ INDEX codeku.GADRDat$
               anrede$ = Anrede.GadrDat$
               titel$ = Titel.GADRDat$
               IF anrede$ LIKE "Herr*" OR anrede$ LIKE "Fr*" OR anrede$ LIKE "Fam*" OR anrede$ LIKE "Ehe*" OR anrede$ LIKE "Kind*" THEN 
                 nachname$ = LTRIM$ (nachname.GAdrDat$)
                 vorname$ = LTRIM$ (vorname.GAdrDat$)
               ELSE 
                 nachname$ = LTRIM$ (nachname.GAdrDat$)
                 vorname$ = LTRIM$ (Geburtsname.GAdrDat$)
               END IF 
               gebdat% = Geburtstag.GAdrDat$
               REM CALL WriteAdrTemp(codeku%,anrede$,titel$,nachname$,vorname$,gebdat%)
               BLANK FILE "ADRLEER"
               a% = CopyRecord%(GADRDat$,"ADRLEER")
               Nachname.adrleer = nachname$
               Vorname.adrleer = Vorname$
               STORE FILE "ADRLEER"
               UNLOCK FILE "ADRLEER"
               SET STATUS nachname$ + "         " + STR$ (xi%,",999999") + " aufbereitet von " + STR$ (aa%,",999999")
             NEXT xi%
             REM dann drucken auslîsen
             Wbericht$ = "ADRLEER"
             title2$ = "Adressliste "
             CALL VPEADRGr(Wbericht$,FormatPrint$,title2$,Terminejn$,KurzLang$,"")
             INDEX cindex$
             REMOVE FROM FILE "ADRLEER"
             REM CALL Fehler("","")
           END IF 
         END IF 
     END IF 
   ELSE 
     CREATE DIALOG "ADRLISTE",0,0,440,197,title$,"MS Sans Serif",8
     ADD DIALOG "ADRLISTE",7,5,8,428,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
     ADD DIALOG "ADRLISTE",1,164,174,56,16,1,"&OK",1,1
     ADD DIALOG "ADRLISTE",1,224,174,56,16,0,"&Abbrechen",0,0
     ADD DIALOG "ADRLISTE",1,284,174,56,16,0,"&Serienbrief",3,0
     DIALOG "ADRLISTE",req3%
     MOUSE ON 
     REMOVE DIALOG "ADRLISTE"
     IF req3% = 3 THEN 
       adrser% = 1
       CALL SerieNeu1(GAdrDat$)
       GOTO VertKond020805END
     END IF 
     IF req3% = 1 THEN 
       adrglob% = a% - 1
       LAuswahl$ = LAuswahl1$(0)
       codeku1% = VAL ( RIGHT$ (LAuswahl$,6))
       REM adrglob% = codeku1%
       adrfound% = VAL ( RIGHT$ (LAuswahl$,6))
       adrglob% = adrfound%
       ok% = 0
       SET STATUS "Adressen gefunden..."
       SELECT FORM KEY codeku1% FILE GAdrDat$ INDEX Codeku.GAdrDat$
       SELECT FORM KEY codeku1% FILE GTelDat$ INDEX Codeku.GTelDat$
       SET INDEX INDEX 
       REM CALL Fehler("","")
       CALL ADRFeldnamen()
       FORM 
       MOUSE ON 
     END IF 
   END IF 
 ELSE 
   CALL Fehler ("Es wurden keine Adressen gefunden, die den angegebenen Kriterien entsprechen!","")
   REM GOTO AnfSuAdr180998
 END IF 
VertKond020805END: 
 END SUB 
 



  


 
 REM die wunderbare Negativsuche, die rausfinden soll, ob ein Kunde einen bestimmten Vertrag
 REM nicht hat
 
SUB ADRSuNeg1()
 IF disabled%("GENERATOR") THEN END SUB 
 GAppName$ = _netpath$ + "DOC\kvertrag.pdf"
 REM 070298
 VertKokor% = 1
 IF PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
   CALL DFile(3,"Buchung1" + _fpw$)
   SELECT WHERE FILE "Buchung1"
 ELSE 
   CALL DFile(3,"Buchung" + _fpw$)
   SELECT WHERE FILE "Buchung"
 END IF 
 CALL DFile(2,"OFFICE\adrstat" + _fpw$)
 SELECT WHERE FILE "adrstat"
 CALL DFile(2,"OFFICE\adrgrup" + _fpw$)
 SELECT WHERE FILE "adrgrup"
 CALL DFile(3,"Kgeadr" + _fpw$)
 CALL DFile(3,"statukey" + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 SELECT WHERE FILE "Sparten"
 CALL DFile(3,"geadr" + _fpw$):CALL DFile(3,"geadr2" + _fpw$)
 SELECT WHERE FILE "geadr"
 CALL DFile(3,"tarif" + _fpw$)
 SELECT WHERE FILE "tarif"
 CALL DFile(3,"maadr" + _fpw$)
 SELECT WHERE FILE "maadr"
 CALL DFile(3,"maadrgru" + _fpw$)
 SELECT WHERE FILE "maadrgru"
 CALL DFile(3,"kvertrag" + _fpw$)
 SELECT WHERE FILE "kvertrag"
 CALL DFile(3,"vprodukt" + _fpw$)
 SELECT WHERE FILE "vprodukt"
 CALL DFile(3,"tarif" + _fpw$)
 SELECT WHERE FILE "tarif"
 CALL DFile(3,"vorgang" + _fpw$)
 SELECT WHERE FILE "vorgang"
 CALL DFile(3,"vkond" + _fpw$)
 SELECT WHERE FILE "vkond"
 CALL DFile(3,"formular" + _fpw$)
 SELECT WHERE FILE "formular"
 CALL DFile(3,"spgruppe" + _fpw$)
 SELECT WHERE FILE "spgruppe"
 
 CALL DFile(3,"KVEXEXP" + _fpw$)
 
 IF GAFSK$ LIKE "TRUE" THEN 
   CALL DFile(3,"AFSKSUT" + _fpw$)
 END IF 
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 SELECT WHERE FILE GAdrDat$
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 SELECT WHERE FILE GAkquiDat$
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 SELECT WHERE FILE "aktionen"
 CALL DFile(2,"OFFICE\" + GTelDat$ + _fpw$)
 SELECT WHERE FILE GTelDat$
 CALL DFile(2,"OFFICE\" + GDokDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GConDat$ + _fpw$)
 CALL DFile(2,"OFFICE\banken" + _fpw$)
 CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 FILE "kvertrag"
 INDEX Codeku.kvertrag
 REM DIM Vertraege$( RECCOUNT ("KVERTRAG"))
   IF RECCOUNT ("KVERTRAG") > 10000 THEN 
     DIM Vertraege$(20000,1)
     REDIM Vertraege$(20000)
   ELSE 
     DIM Vertraege$( RECCOUNT ("KVERTRAG"),1)
     REDIM Vertraege$( RECCOUNT ("KVERTRAG"))
   END IF 
 
   DIM Waehrung$(25,1)
   REDIM Waehrung$(25)
   REM FOR i% = 1 TO 20
     REM Waehrung$(i%) = ""
   REM NEXT i%
   
   a% = 0
   Waehrung$(0) = "Filter deaktiviert"
   Waehrung$(1) = "alle nicht stornierten,nicht Fremdvertr.,nicht Altvertr." + SPACE$ (90) + "17"
   Waehrung$(2) = "alle nicht stornierten,alle Fremdvertr.,nicht Altvertr." + SPACE$ (90) + "18"
   Waehrung$(3) = "lebend" + SPACE$ (90) + "01"
   Waehrung$(4) = "leben/kurzfristig/unterjÑhrig" + SPACE$ (90) + "02"
   Waehrung$(5) = "ruhend/Anwartschaft" + SPACE$ (90) + "03"
   Waehrung$(6) = "storniert" + SPACE$ (90) + "04"
   Waehrung$(7) = "ruhend/beitragsfrei" + SPACE$ (90) + "05"
   Waehrung$(8) = "beitragsfrei" + SPACE$ (90) + "06"
   Waehrung$(9) = "beitragsfrei durch Leistung" + SPACE$ (90) + "07"
   Waehrung$(10) = "Beitragsstundung" + SPACE$ (90) + "08"
   Waehrung$(11) = "Sonstiges" + SPACE$ (90) + "09"
   Waehrung$(12) = "Altvertrag" + SPACE$ (90) + "10"
   Waehrung$(13) = "Fremdvertrag" + SPACE$ (90) + "11"
   Waehrung$(14) = "Antrag" + SPACE$ (90) + "12"
   Waehrung$(15) = "storniert durch Dynamisierung" + SPACE$ (90) + "13"
   Waehrung$(16) = "Bestandteil eines BÅndelungsvertrages" + SPACE$ (90) + "14"
   Waehrung$(17) = "Antragswiderruf" + SPACE$ (90) + "15"
   Waehrung$(18) = "Policenwiderspruch" + SPACE$ (90) + "16"
   Waehrung$(19) = "Antragsablehnung" + SPACE$ (90) + "20"
   Waehrung$(20) = "KÅnd.wg.Nichtzahlung" + SPACE$ (90) + "21"
   DIM Auswahl1$(1)
 
 DIM Auswahl$(1)
 SELECT WHERE FILE "KVERTRAG"
 SELECT FIRST 
 IF GASP% THEN 
     DIM office$(VisCount%)'eins mehr fÅr <Alle BÅros>
     FOR i% = 0 TO VisCount% - 1
       office$(i%) = VisNames$(i%)
     NEXT i%
     IF Workstation% > 0 THEN 
       office$(VisCount%) = "<Alle BÅros>"
       selOff$ = office$(VisCount% - 1)'sis
     ELSE 
       office$(VisCount%) = "<Alle BÅros>"
       selOff$ = office$(VisCount%)'sis 
     END IF 
     ShowOther% = - 1
     IF ShowOther% <> - 1 THEN 
        FOR i% = 0 TO VisCount% - 1
            IF VisOff%(i%) = ShowOther% THEN 
                selOff$ = VisNames$(i%)
                i% = VisCount%
            END IF 
        NEXT i%
     END IF 
 END IF 
vertkond060820051: 
   IF RECCOUNT ("KVERTRAG") > 10000 THEN 
     REDIM Vertraege$(20000,1)
     REDIM Vertraege$(20000)
   ELSE 
     REDIM Vertraege$( RECCOUNT ("KVERTRAG"),1)
     REDIM Vertraege$( RECCOUNT ("KVERTRAG"))
   END IF 
 a% = 0
 ok% = - 1
 SELECT WHERE FILE "KVERTRAG"
 SELECT FIRST 
   IF RECCOUNT ("KVERTRAG") > 10000 THEN 
     REDIM Vertraege$(20000,1)
     REDIM Vertraege$(20000)
   ELSE 
     REDIM Vertraege$( RECCOUNT ("KVERTRAG"),1)
     REDIM Vertraege$( RECCOUNT ("KVERTRAG"))
   END IF 
   provab% = 0
 
   REM Positivblock
   IF spa% = 0 THEN 
     vSparte$ = "alle"
   ELSE 
     SELECT FIRST FILE "SPARTEN" INDEX CodeVA.SPARTEN
     SELECT KEY spa% FILE "SPARTEN" INDEX CodeVA.SPARTEN
     vsparte$ = Sparte.SPARTEN
   END IF 
   IF spgr% < 1 THEN 
     vSpGR$ = "alle"
   ELSE 
     SELECT FIRST FILE "SPGRUPPE" INDEX Codegrsp.SPGRUPPE
     SELECT KEY spgr% FILE "SPGRUPPE" INDEX Codegrsp.SPGRUPPE
     vspGr$ = Gruppe.SPGRUPPE
   END IF 
   IF ge% = 0 THEN 
     Gesellschaft$ = "alle"
   ELSE 
     SELECT FIRST FILE "GEADR" INDEX CodeGE.GEADR
     SELECT KEY ge% FILE "GEADR" INDEX CodeGE.GEADR
     Gesellschaft$ = Gesellschaft.GEADR
     REM ** Gesellschaft auswÑhlen
   END IF 
   IF cvp% = 0 THEN 
     vprodukt$ = "alle"
   ELSE 
     SELECT KEY cvp% FILE "Vprodukt" INDEX codevp.vprodukt
     vprodukt$ = gesellschaft.vprodukt + "/" + sparte.vprodukt
   END IF 
 
   REM Negativblock
   IF nspa% = 0 THEN 
     nvSparte$ = "alle"
   ELSE 
     SELECT FIRST FILE "SPARTEN" INDEX CodeVA.SPARTEN
     SELECT KEY nspa% FILE "SPARTEN" INDEX CodeVA.SPARTEN
     nvsparte$ = Sparte.SPARTEN
   END IF 
   IF nspgr% < 1 THEN 
     nvSpGR$ = "alle"
   ELSE 
     SELECT FIRST FILE "SPGRUPPE" INDEX Codegrsp.SPGRUPPE
     SELECT KEY nspgr% FILE "SPGRUPPE" INDEX Codegrsp.SPGRUPPE
     nvspGr$ = Gruppe.SPGRUPPE
   END IF 
   IF nge% = 0 THEN 
     nGesellschaft$ = "alle"
   ELSE 
     SELECT FIRST FILE "GEADR" INDEX CodeGE.GEADR
     SELECT KEY nge% FILE "GEADR" INDEX CodeGE.GEADR
     nGesellschaft$ = Gesellschaft.GEADR
     REM ** Gesellschaft auswÑhlen
   END IF 
   IF ncvp% = 0 THEN 
     nvprodukt$ = "alle"
   ELSE 
     SELECT FIRST FILE "Vprodukt" INDEX codevp.vprodukt
     SELECT KEY ncvp% FILE "Vprodukt" INDEX codevp.vprodukt
     nvprodukt$ = gesellschaft.vprodukt + "/" + sparte.vprodukt
   END IF 
 
 
 
    opt% = 1
    
    DIM dlg AS Dialog
    DIM control AS DialogControl
    bis$ = DATE$ ( TODAY ,"0d.mm.yyyy")
anf0608051: 
    Superbase.Dialogs.Add("Dialogname")
    SET dlg = Superbase.Dialogs.Dialogname
    dlg.Move(0,0,326,184)
    dlg.Caption = "Adresssuche"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(0,1,324,71)
    control.Caption = "Optionen zur Adresssuche"
 
    SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
    control.Move(4,14,314,13)
    control.Caption = "Alle Adressen ohne lebenden Vertrag und ohne Antrag"
    control.Bind("opt%")
    control.ValueOn = 1
 
    SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
    control.Move(4,32,314,14)
    control.Caption = "Alle Adressen ohne lebenden Vertrag und ohne Antrag von/bis Datum ...(Kunden verloren)"
    control.Bind("opt%")
    control.ValueOn = 2
 
    SET control = dlg.Add("DialogOptionButton3","DialogOptionButton")
    control.Move(4,51,314,13)
    control.Caption = "Alle Adressen mit lebenden Vertrag oder mit Antrag von/bis Datum ....(Neukunden)"
    control.Bind("opt%")
    control.ValueOn = 3

    IF GASP% THEN 
      SET control = dlg.Add("DialogComboBox1","DialogComboBox")
      control.Move(50,76,255,77)
      control.Style = 0
      control.Sorted = 1
      control.ScrollBars = 2
      control.Bind("office$","selOff$")
 
      SET control = dlg.Add("DialogLabel3","DialogLabel")
      control.Move(22,79,21,10)
      control.Caption = "BÅro"
    END IF 

    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(98,132,43,13)
    control.MaxLength = 10
    control.TextBinding = "von$"
 
    SET control = dlg.Add("DialogTextBox2","DialogTextBox")
    control.Move(156,132,42,13)
    control.MaxLength = 10
    control.TextBinding = "bis$"
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(58,134,39,13)
    control.Caption = "Datum von:"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(144,134,12,13)
    control.Caption = "bis"
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(101,161,51,15)
    control.Default = 1
    control.Caption = "&OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(154,161,50,15)
    control.Caption = "&Abbruch"
    control.ReturnValue = 0
  
   DIALOG "Dialogname",dreq%
   REMOVE DIALOG "Dialogname"
   IF dreq% <> 1 THEN GOTO VertKond020805END
   IF von$ <> "" THEN 
     IF DateOK%(von$) THEN 
     ELSE 
       CALL Fehler("ungÅltiges Datum   von   ","0d.mm.yyyy")
       GOTO anf0608051
     END IF 
   END IF 
   IF bis$ <> "" THEN 
     IF DateOK%(bis$) THEN 
     ELSE 
       CALL Fehler("ungÅltiges Datum   bis   ","0d.mm.yyyy")
       GOTO anf0608051
     END IF 
   END IF 
   IF opt% = 2 OR opt% = 3 THEN 
     IF von$ = "" THEN 
       CALL Fehler("ungÅltiges Datum   von    ","0d.mm.yyyy")
       GOTO anf0608051 
     END IF 
     IF bis$ = "" THEN 
       CALL Fehler("ungÅltiges Datum   bis    ","0d.mm.yyyy")
       GOTO anf0608051 
     END IF 
   END IF 
   IF GASP% THEN 
     REM ShowOther% = - 1'sis
     show1% = 0
     IF selOff$ <> "<Alle BÅros>" THEN 
        FOR i% = 0 TO VisCount% - 1
            IF VisNames$(i%) = selOff$ THEN 
                Show1% = VisOff%(i%)
                i% = VisCount%'und raus
            END IF 
        NEXT i%
     END IF 
   END IF 

 IF dreq% = 0 THEN GOTO VertKond020805END 

 MOUSE OFF 
 IF GCODieRuf% = 99 THEN 
   ret% = CALL ("_SearchClose"):REM CALL Fehler("","")
   GCODieRuf% = 0
   GCODieRuf1% = 0
 END IF 
 IF GCODieRuf1% = 99 THEN 
   ret% = CALL ("_SearchClose"):REM CALL Fehler("","")
   GCODieRuf1% = 0
 END IF 

       IF EXISTS (GMACodeDir$ + "search.dat") OR EXISTS (GMACodeDir$ + "search.idx") THEN 
         IF (GASP% = - 1 OR GTerminal% = - 1) AND GMACodeDir$ <> "C:\" AND GMACodeDir$ <> "c:\" THEN 
           DELETE GMACodeDir$ + "search.*"
         ELSE 
           DELETE GMACodeDir$ + "search.*"
         END IF 
         IF EXISTS (_netpath$ + "local\search.dat") AND EXISTS (_netpath$ + "local\search.idx") THEN 
           COPY _netpath$ + "local\search.dat",GMACodeDir$ + "search.dat"
           COPY _netpath$ + "local\search.idx",GMACodeDir$ + "search.idx"
         ELSE 
           GCodie% = 0
         END IF 
       ELSE 
         IF EXISTS (_netpath$ + "local\search.dat") AND EXISTS (_netpath$ + "local\search.idx") THEN 
           COPY _netpath$ + "local\search.dat",GMACodeDir$ + "search.dat"
           COPY _netpath$ + "local\search.idx",GMACodeDir$ + "search.idx"
         ELSE 
           GCodie% = 0
         END IF 
       END IF 
 
 
   FILE "kvertrag"
   INDEX codeku.kvertrag
 
   FILE "adressen"
   INDEX codeku.adressen
   SELECT FIRST 
   ii% = 0
   jj% = RECCOUNT ("ADRESSEN")
   gg% = 0
   a% = 0
   IF RECCOUNT ("ADRESSEN") > 20000 THEN 
     z% = 20000
   ELSE 
     z% = RECCOUNT ("ADRESSEN")
   END IF 
   REDIM AdrFound$(z% + 1)
         IF GCODIE% = - 1 THEN 
           CALL SearchInitADR()
         END IF 
         sperre% = 0
     IF MNdisabled%("DATALOCK") THEN 
       sperre% = - 1
     END IF 
 
   REM CALL Fehler("Jetzt gehts los","")
   WHILE NOT EOF ("adressen")
     MOUSE OFF 
     ii% = ii% + 1
     codeku% = codeku.adressen
     sok% = - 1
     datsu$ = "ADRESSEN"
           IF GASP% THEN 
               codemaField$ = "codema." + datsu$
               succ% = 0
               REM 25102002 IF (IsWksVisible%(Workstation.datsu$) = - 1 OR codemaField$$ = 0) THEN 
               IF (IsWksVisible%(Workstation.datsu$) = - 1) THEN 
                 IF VAL (GMAView$) = 0 THEN 'wenn Daten aller Mitarbeiter sichtbar
                   succ% = - 1
                 ELSE 
                   SELECT CASE UCASE$ (datsu$)
                     CASE "ADRESSEN","DOKUMENT","AKQUISE","BCKONTAK","DOKBCK","AKQUIBCK","MAADR","KVERTRAG","ANTRAG"
                        
                        succ% = (codemaField$$ = VAL (GMAView$)) OR codemaField$$ = 0
                        succ% = succ% OR ((Workstation% = 0) AND (Workstation.datsu$ > 0))
                     ELSE CASE 
                        succ% = - 1
                   END SELECT 
                 END IF 
               END IF 
               sok% = succ%
           END IF 
     IF sperre% = - 1 THEN 
       IF Sperre.datsu$ <> 0 AND Sperre.datsu$ <> vcodema% THEN sok% = 0
     END IF 
     IF sok% <> - 1 THEN GOTO weitsu0608051
     FILE "Kvertrag"
     INDEX codeku.kvertrag
     SELECT FIRST FILE "kvertrag" INDEX codeku.kvertrag
     SELECT KEY codeku% FILE "kvertrag" INDEX codeku.kvertrag
     ok% = - 1
     
       SELECT CASE opt%
       CASE 1
         REM Alle Adressen ohne lebenden Vertrag und ohne Antrag
         WHILE ok% = - 1 AND codeku.kvertrag = codeku%
           cvstat% = codevstatus.kvertrag
           IF codevstatus.kvertrag = 1 OR codevstatus.kvertrag = 2 OR codevstatus.kvertrag = 12 OR codevstatus.kvertrag = 14 OR codevstatus.kvertrag = 16 THEN sok% = 0
           SELECT NEXT FILE "kvertrag" INDEX codeku.kvertrag
           IF EOF ("KVERTRAG") THEN ok% = 0
         WEND 
       CASE 2
         REM Alle Adressen ohne lebenden Vertrag und ohne Antrag von/bis Datum ...(Kunden verloren)
         IF NOT EXISTS (codeku%,codeku.Kvertrag) THEN 
           sok% = 0
         ELSE 
           kÅn% = 0
           WHILE ok% = - 1 AND codeku.kvertrag = codeku%
             cvstat% = codevstatus.kvertrag
             IF codevstatus.kvertrag = 1 OR codevstatus.kvertrag = 2 OR codevstatus.kvertrag = 12 OR codevstatus.kvertrag = 14 OR codevstatus.kvertrag = 16 THEN 
               sok% = 0
             END IF 
             IF TatsKuenDat.kvertrag < 1 THEN sok% = 0
             SELECT NEXT FILE "kvertrag" INDEX codeku.kvertrag
             IF EOF ("KVERTRAG") THEN ok% = 0
           WEND 
           IF sok% = - 1 THEN 
             SELECT FIRST FILE "kvertrag" INDEX codeku.kvertrag
             SELECT KEY codeku% FILE "kvertrag" INDEX codeku.kvertrag
             WHILE ok% = - 1 AND codeku.kvertrag = codeku%
               IF TatsKuenDat.kvertrag <= DAYS (von$) OR TatsKuenDat.kvertrag >= DAYS (bis$) THEN sok% = 0
               SELECT NEXT FILE "kvertrag" INDEX codeku.kvertrag
               IF EOF ("KVERTRAG") THEN ok% = 0
             WEND 
           END IF 
         END IF 
       CASE 3
         REM Alle Adressen mit lebenden Vertrag oder mit Antrag von/bis Datum ....(Neukunden)
         IF NOT EXISTS (codeku%,codeku.Kvertrag) THEN 
           sok% = 0
         ELSE 
           lebend% = 0
           WHILE ok% = - 1 AND codeku.kvertrag = codeku%
             IF VS_Beginn.kvertrag <= DAYS (von$) OR VS_Beginn.kvertrag >= DAYS (bis$) THEN 
             ELSE 
               IF codevstatus.kvertrag <> 1 AND codevstatus.kvertrag <> 2 AND codevstatus.kvertrag <> 12 AND codevstatus.kvertrag <> 14 THEN 
               ELSE 
                 lebend% = - 1
               END IF 
               REM IF codevstatus.kvertrag <> 1 lebend 
               REM    codevstatus.kvertrag <> 2 lebend kurzfristig 
               REM    codevstatus.kvertrag <> 12 Antrag
               REM    codevstatus.kvertrag <> 14 BÅndelungsvertrag 
               REM    codevstatus.kvertrag <> 16 Policenwiederspruch
               REM                                       sok% = 0
             END IF 
             SELECT NEXT FILE "kvertrag" INDEX codeku.kvertrag
             IF EOF ("KVERTRAG") THEN ok% = 0
           WEND 
           sok% = lebend%
         END IF 
 
       END SELECT 
     REM***************************************************************** 
sok0608051: 
     IF sok% = - 1 THEN 
       REM CALL Fehler("Jetzt gehts los","sok%=-1")
       gg% = gg% + 1
       REM *****************************************
       IF GCODIE% = - 1 THEN 
         CALL SearchVorbAdr(GADRDAT$)
         codeku% = Codeku.GADRDAT$
         IF EXISTS (codeku%,codeku.GTelDat$) THEN 
           SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
           CALL SearchVorbTel(GADRDAT$)
         END IF 
       END IF 
       AdrFound1$ = LTRIM$ (nachname)
       IF LTRIM$ (vorname) <> "" THEN AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (vorname)
       IF LTRIM$ (EGNachname) <> "" AND LTRIM$ (EGNACHNAme) <> LTRIM$ (Nachname) THEN AdrFound1$ = AdrFound1$ + ",LAB: " + LTRIM$ (EGNachname) + ", "
       IF LTRIM$ (EGvorname) <> "" THEN AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (EGvorname)
       IF LTRIM$ (K1name) <> "" THEN AdrFound1$ = AdrFound1$ + ", Kind1: " + LTRIM$ (K1name)
       IF LTRIM$ (K2name) <> "" THEN AdrFound1$ = AdrFound1$ + ", Kind2: " + LTRIM$ (K2name)
       IF LTRIM$ (K3name) <> "" THEN AdrFound1$ = AdrFound1$ + ", Kind3: " + LTRIM$ (K3name)
       IF LTRIM$ (K4name) <> "" THEN AdrFound1$ = AdrFound1$ + ", Kind4: " + LTRIM$ (K4name)
       AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (Kundennummer) + "/" + LTRIM$ (ort) + ", " + LTRIM$ (PLZ) + ", " + LTRIM$ (Stra·e) + ", "
       REM FILE "project"
       AdrFound$(a%) = AdrFound1$ + SPACE$ (120) + STR$ (codeku,"000000")
       a% = a% + 1
       IF GCODIE% = - 1 THEN 
         GGGcodeku$ = STR$ (codeku.adressen,"000000")
         ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
       END IF 
       REM ******************************************
     END IF 
weitsu0608051: 
     REM CALL Fehler( STR$ (ii%,",999999"),"")
     SET STATUS STR$ (ii%,",999999") + " durchsucht von " + STR$ (jj%,",999999") + " gefunden " + STR$ (gg%,",999999")
     SELECT NEXT FILE "ADRESSEN" INDEX codeku.adressen
   WEND 
 a% = a% + 1
 IF a% < 2 THEN 
   CALL Fehler("Es wurden keine DatensÑtze gefunden, die den Suchkriterien entsprechen!","")
   GOTO anf0608051
 END IF 
 tfoundadr% = a%
 AdrFound$(a%) = ""
 IF a% > 0 THEN 
 
   LAuswahl$ = AdrFound$(0)
   LAuswahl1$(0) = LAuswahl$
   IF _projekt$ LIKE "PROVIS" THEN 
     MENU 3,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
   ELSE 
     MENU 4,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
   END IF 
   IF GCODIE% = - 1 THEN 
     c$ = "aa"
     req3% = CALL ("_SearchShow",c$)
     REM REQUEST c$,"",2
     REM ret% = CALL ("_SearchClose"):rem CALL Fehler("","")
     IF VAL (c$) <> 0 THEN 
       AdrSuche% = VAL (c$)
       adrfound% = VAL (c$)
       codeku1% = VAL (c$)
       knr% = codeku1%
       adrglob% = knr%
       ok% = 0
       SET STATUS "Adressen gefunden..."
       SELECT FORM KEY codeku1% FILE GAdrDat$ INDEX Codeku.GAdrDat$
       SELECT FORM KEY codeku1% FILE GTelDat$ INDEX Codeku.GTelDat$
       SET INDEX INDEX 
       REM CALL Fehler("von suche","")
       CALL ADRFeldnamen()
       FORM 
       MOUSE ON 
     END IF 
     IF req3% = 2 THEN 
       adrser% = 1
       CALL SerieNeu1(GAdrDat$)
       GOTO endadr180998
     END IF 
     IF req3% = 3 THEN 
       REM CALL Fehler("req3% = 3","")
         ja% = - 1
         IF disabled%("ADRDrucken") THEN ja% = 0
         IF req3% = 3 AND ja% = - 1 THEN 
           REM drucken
           ON ERROR GOTO adrdr060820051
           DIM dlg AS Dialog
           DIM control AS DialogControl
adrdr060820051: 
           ON ERROR GOTO ErrorHandler
           Superbase.Dialogs.Add("ADRFilter")
           SET dlg = Superbase.Dialogs.ADRFilter
           dlg.Move(0,0,158,111)
           dlg.Caption = title$
           dlg.FontName = "MS Sans Serif"
           dlg.FontSize = 8
 
           SET control = dlg.Add("DialogFrame2","DialogFrame")
           control.Move(5,7,141,77)
           control.Caption = "Druckoptionen"
 
           SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
           control.Move(11,24,85,10)
           control.Caption = "Alle Angaben drucken"
           control.Bind("KurzLang$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCheckBox2","DialogCheckBox")
           control.Move(11,38,85,11)
           control.Caption = "Termine mitdrucken"
           control.Bind("Terminejn$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCheckBox3","DialogCheckBox")
           control.Move(11,53,115,11)
           control.Caption = "VertrÑge zur Adresse drucken!"
           control.Bind("VertragJN$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCheckBox4","DialogCheckBox")
           control.Move(11,68,105,11)
           control.Caption = "als Telefonliste"
           control.Bind("adrtelefon$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
           control.Move(22,89,48,15)
           control.Default = 1
           control.Caption = "&Weiter"
           control.ReturnValue = 1
 
           SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
           control.Move(74,89,48,15)
           control.Caption = "&Abbruch"
           control.ReturnValue = 0
           control.Cancel = 1
           DIALOG "ADRFilter",req%
           REMOVE DIALOG ALL 
           IF req% = 1 THEN 
             REM jetzt das Array auslesen und in eine Datei speichern
             FILE GADRDat$
             cindex$ = INDEX 
             INDEX codeku.Gadrdat$
             CALL DFile(2,"OFFICE\ADRLEER" + _fpw$)
             aa% = a% - 1
             FOR xi% = 0 TO a% - 1
               codeku% = VAL ( RIGHT$ (AdrFound$(xi%),6))
               SELECT KEY codeku% FILE GADRDat$ INDEX codeku.GADRDat$
               anrede$ = Anrede.GadrDat$
               titel$ = Titel.GADRDat$
               IF anrede$ LIKE "Herr*" OR anrede$ LIKE "Fr*" OR anrede$ LIKE "Fam*" OR anrede$ LIKE "Ehe*" OR anrede$ LIKE "Kind*" THEN 
                 nachname$ = LTRIM$ (nachname.GAdrDat$)
                 vorname$ = LTRIM$ (vorname.GAdrDat$)
               ELSE 
                 nachname$ = LTRIM$ (nachname.GAdrDat$)
                 vorname$ = LTRIM$ (Geburtsname.GAdrDat$)
               END IF 
               gebdat% = Geburtstag.GAdrDat$
               REM CALL WriteAdrTemp(codeku%,anrede$,titel$,nachname$,vorname$,gebdat%)
               BLANK FILE "ADRLEER"
               a% = CopyRecord%(GADRDat$,"ADRLEER")
               Nachname.adrleer = nachname$
               Vorname.adrleer = Vorname$
               STORE FILE "ADRLEER"
               UNLOCK FILE "ADRLEER"
               SET STATUS nachname$ + "         " + STR$ (xi%,",999999") + " aufbereitet von " + STR$ (aa%,",999999")
             NEXT xi%
             REM dann drucken auslîsen
             Wbericht$ = "ADRLEER"
             title2$ = "Adressliste "
             CALL VPEADRGr(Wbericht$,FormatPrint$,title2$,Terminejn$,KurzLang$,"")
             INDEX cindex$
             REMOVE FROM FILE "ADRLEER"
             REM CALL Fehler("","")
           END IF 
         END IF 
     END IF 
   ELSE 
     CREATE DIALOG "ADRLISTE",0,0,440,197,title$,"MS Sans Serif",8
     ADD DIALOG "ADRLISTE",7,5,8,428,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
     ADD DIALOG "ADRLISTE",1,164,174,56,16,1,"&OK",1,1
     ADD DIALOG "ADRLISTE",1,224,174,56,16,0,"&Abbrechen",0,0
     ADD DIALOG "ADRLISTE",1,284,174,56,16,0,"&Serienbrief",3,0
     DIALOG "ADRLISTE",req3%
     MOUSE ON 
     REMOVE DIALOG "ADRLISTE"
     IF req3% = 3 THEN 
       adrser% = 1
       CALL SerieNeu1(GAdrDat$)
       GOTO VertKond020805END
     END IF 
     IF req3% = 1 THEN 
       adrglob% = a% - 1
       LAuswahl$ = LAuswahl1$(0)
       codeku1% = VAL ( RIGHT$ (LAuswahl$,6))
       REM adrglob% = codeku1%
       adrfound% = VAL ( RIGHT$ (LAuswahl$,6))
       adrglob% = adrfound%
       ok% = 0
       SET STATUS "Adressen gefunden..."
       SELECT FORM KEY codeku1% FILE GAdrDat$ INDEX Codeku.GAdrDat$
       SELECT FORM KEY codeku1% FILE GTelDat$ INDEX Codeku.GTelDat$
       SET INDEX INDEX 
       REM CALL Fehler("","")
       CALL ADRFeldnamen()
       FORM 
       MOUSE ON 
     END IF 
   END IF 
 ELSE 
   CALL Fehler ("Es wurden keine Adressen gefunden, die den angegebenen Kriterien entsprechen!","")
   REM GOTO AnfSuAdr180998
 END IF 
VertKond020805END: 
 END SUB 
 

 REM die wunderbare Negativsuche, die rausfinden soll, ob ein Kunde nur einen bestimmten Vertrag hat und sonst nichts weiter
 
SUB ADRSuNeg2()
 IF disabled%("GENERATOR") THEN END SUB 
 GAppName$ = _netpath$ + "DOC\kvertrag.pdf"
 REM 070298
 VertKokor% = 1
 IF PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
   CALL DFile(3,"Buchung1" + _fpw$)
   SELECT WHERE FILE "Buchung1"
 ELSE 
   CALL DFile(3,"Buchung" + _fpw$)
   SELECT WHERE FILE "Buchung"
 END IF 
 CALL DFile(2,"OFFICE\adrstat" + _fpw$)
 SELECT WHERE FILE "adrstat"
 CALL DFile(2,"OFFICE\adrgrup" + _fpw$)
 SELECT WHERE FILE "adrgrup"
 CALL DFile(3,"Kgeadr" + _fpw$)
 CALL DFile(3,"statukey" + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 SELECT WHERE FILE "Sparten"
 CALL DFile(3,"geadr" + _fpw$):CALL DFile(3,"geadr2" + _fpw$)
 SELECT WHERE FILE "geadr"
 CALL DFile(3,"tarif" + _fpw$)
 SELECT WHERE FILE "tarif"
 CALL DFile(3,"maadr" + _fpw$)
 SELECT WHERE FILE "maadr"
 CALL DFile(3,"maadrgru" + _fpw$)
 SELECT WHERE FILE "maadrgru"
 CALL DFile(3,"kvertrag" + _fpw$)
 SELECT WHERE FILE "kvertrag"
 CALL DFile(3,"vprodukt" + _fpw$)
 SELECT WHERE FILE "vprodukt"
 CALL DFile(3,"tarif" + _fpw$)
 SELECT WHERE FILE "tarif"
 CALL DFile(3,"vorgang" + _fpw$)
 SELECT WHERE FILE "vorgang"
 CALL DFile(3,"vkond" + _fpw$)
 SELECT WHERE FILE "vkond"
 CALL DFile(3,"formular" + _fpw$)
 SELECT WHERE FILE "formular"
 CALL DFile(3,"spgruppe" + _fpw$)
 SELECT WHERE FILE "spgruppe"
 
 CALL DFile(3,"KVEXEXP" + _fpw$)
 
 IF GAFSK$ LIKE "TRUE" THEN 
   CALL DFile(3,"AFSKSUT" + _fpw$)
 END IF 
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 SELECT WHERE FILE GAdrDat$
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 SELECT WHERE FILE GAkquiDat$
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 SELECT WHERE FILE "aktionen"
 CALL DFile(2,"OFFICE\" + GTelDat$ + _fpw$)
 SELECT WHERE FILE GTelDat$
 CALL DFile(2,"OFFICE\" + GDokDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GConDat$ + _fpw$)
 CALL DFile(2,"OFFICE\banken" + _fpw$)
 CALL DFile(2,"OFFICE\tvorlage" + _fpw$)
 FILE "kvertrag"
 INDEX Codeku.kvertrag
 REM DIM Vertraege$( RECCOUNT ("KVERTRAG"))
   IF RECCOUNT ("KVERTRAG") > 10000 THEN 
     DIM Vertraege$(20000,1)
     REDIM Vertraege$(20000)
   ELSE 
     DIM Vertraege$( RECCOUNT ("KVERTRAG"),1)
     REDIM Vertraege$( RECCOUNT ("KVERTRAG"))
   END IF 
 
   DIM Waehrung$(25,1)
   REDIM Waehrung$(25)
   REM FOR i% = 1 TO 20
     REM Waehrung$(i%) = ""
   REM NEXT i%
   
   a% = 0
   Waehrung$(0) = "Filter deaktiviert"
   Waehrung$(1) = "alle nicht stornierten,nicht Fremdvertr.,nicht Altvertr." + SPACE$ (90) + "17"
   Waehrung$(2) = "alle nicht stornierten,alle Fremdvertr.,nicht Altvertr." + SPACE$ (90) + "18"
   Waehrung$(3) = "lebend" + SPACE$ (90) + "01"
   Waehrung$(4) = "leben/kurzfristig/unterjÑhrig" + SPACE$ (90) + "02"
   Waehrung$(5) = "ruhend/Anwartschaft" + SPACE$ (90) + "03"
   Waehrung$(6) = "storniert" + SPACE$ (90) + "04"
   Waehrung$(7) = "ruhend/beitragsfrei" + SPACE$ (90) + "05"
   Waehrung$(8) = "beitragsfrei" + SPACE$ (90) + "06"
   Waehrung$(9) = "beitragsfrei durch Leistung" + SPACE$ (90) + "07"
   Waehrung$(10) = "Beitragsstundung" + SPACE$ (90) + "08"
   Waehrung$(11) = "Sonstiges" + SPACE$ (90) + "09"
   Waehrung$(12) = "Altvertrag" + SPACE$ (90) + "10"
   Waehrung$(13) = "Fremdvertrag" + SPACE$ (90) + "11"
   Waehrung$(14) = "Antrag" + SPACE$ (90) + "12"
   Waehrung$(15) = "storniert durch Dynamisierung" + SPACE$ (90) + "13"
   Waehrung$(16) = "Bestandteil eines BÅndelungsvertrages" + SPACE$ (90) + "14"
   Waehrung$(17) = "Antragswiderruf" + SPACE$ (90) + "15"
   Waehrung$(18) = "Policenwiderspruch" + SPACE$ (90) + "16"
   Waehrung$(19) = "Antragsablehnung" + SPACE$ (90) + "20"
   Waehrung$(20) = "KÅnd.wg.Nichtzahlung" + SPACE$ (90) + "21"
   DIM Auswahl1$(1)
   DIM Auswahl2$(1)
 DIM Auswahl$(1)
 Auswahl1$ = "Filter deaktiviert"
 Auswahl2$ = "Filter deaktiviert"
 
 SELECT WHERE FILE "KVERTRAG"
 SELECT FIRST 
 IF GASP% THEN 
     DIM office$(VisCount%)'eins mehr fÅr <Alle BÅros>
     FOR i% = 0 TO VisCount% - 1
       office$(i%) = VisNames$(i%)
     NEXT i%
     IF Workstation% > 0 THEN 
       office$(VisCount%) = "<Alle BÅros>"
       selOff$ = office$(VisCount% - 1)'sis
     ELSE 
       office$(VisCount%) = "<Alle BÅros>"
       selOff$ = office$(VisCount%)'sis 
     END IF 
     ShowOther% = - 1
     IF ShowOther% <> - 1 THEN 
        FOR i% = 0 TO VisCount% - 1
            IF VisOff%(i%) = ShowOther% THEN 
                selOff$ = VisNames$(i%)
                i% = VisCount%
            END IF 
        NEXT i%
     END IF 
 END IF 
vertkond070220061: 
   IF RECCOUNT ("KVERTRAG") > 10000 THEN 
     REDIM Vertraege$(20000,1)
     REDIM Vertraege$(20000)
   ELSE 
     REDIM Vertraege$( RECCOUNT ("KVERTRAG"),1)
     REDIM Vertraege$( RECCOUNT ("KVERTRAG"))
   END IF 
anfsu070220051:    
 a% = 0
 ok% = - 1
 anzv% = 0
 SELECT WHERE FILE "KVERTRAG"
 SELECT FIRST 
 WHILE ok%
   IF RECCOUNT ("KVERTRAG") > 10000 THEN 
     REDIM Vertraege$(20000,1)
     REDIM Vertraege$(20000)
   ELSE 
     REDIM Vertraege$( RECCOUNT ("KVERTRAG"),1)
     REDIM Vertraege$( RECCOUNT ("KVERTRAG"))
   END IF 
   provab% = 0
 
   REM Positivblock
   IF anzv% = 0 THEN anzv% = 1
   IF spa% = 0 THEN 
     vSparte$ = "alle"
   ELSE 
     SELECT FIRST FILE "SPARTEN" INDEX CodeVA.SPARTEN
     SELECT KEY spa% FILE "SPARTEN" INDEX CodeVA.SPARTEN
     vsparte$ = Sparte.SPARTEN
   END IF 
   IF spgr% < 1 THEN 
     vSpGR$ = "alle"
   ELSE 
     SELECT FIRST FILE "SPGRUPPE" INDEX Codegrsp.SPGRUPPE
     SELECT KEY spgr% FILE "SPGRUPPE" INDEX Codegrsp.SPGRUPPE
     vspGr$ = Gruppe.SPGRUPPE
   END IF 
   IF ge% = 0 THEN 
     Gesellschaft$ = "alle"
   ELSE 
     SELECT FIRST FILE "GEADR" INDEX CodeGE.GEADR
     SELECT KEY ge% FILE "GEADR" INDEX CodeGE.GEADR
     Gesellschaft$ = Gesellschaft.GEADR
     REM ** Gesellschaft auswÑhlen
   END IF 
   IF cvp% = 0 THEN 
     vprodukt$ = "alle"
   ELSE 
     SELECT KEY cvp% FILE "Vprodukt" INDEX codevp.vprodukt
     vprodukt$ = gesellschaft.vprodukt + "/" + sparte.vprodukt
   END IF 
 
 
   bart% = 0
   st$ = "VertragsÅbersicht"
   
   REMOVE DIALOG ALL 
   so% = 1
   so1% = 1
   inc% = 1
   REM 191099/5
   t0$ = "(auch KFZ) werden nicht angezeigt"
   tt$ = "Bsp.2: wenn Sie bei xyz eine 1 eingetragen haben und bei Kriterien Sparte KFZ gewÑhlt haben, werden alle Adressen gesucht, die genau einen lebenden KFZ Vertrag besitzen, Adressen mit mehr als einen lebenden Vertrag " + t0$
     CREATE DIALOG "BVERTRAG",0,0,446,120,"Adressen, die xyz lebende VertrÑge besitzen","MS Sans Serif",8
 
     ADD DIALOG "BVERTRAG",4,5,6,431,97,0,"die Adr.dÅrfen nur genau xyz leb.Vertr.besitzen, die die untenstehenden Kriterien erfÅllen"
     
     ADD DIALOG "BVERTRAG",5,238,14,190,40,0,"Bsp.1: wenn Sie bei xyz eine 1 eingetragen haben und keine Kriterien ausgewÑhlt haben, werden alle Adressen gesucht, die genau einen lebenden Vertrag besitzen"

     ADD DIALOG "BVERTRAG",5,238,38,190,40,0,tt$

     ADD DIALOG "BVERTRAG",5,8,26,28,10,0,"Produkt"
     ADD DIALOG "BVERTRAG",5,57,26,167,10,0,vProdukt$
     ADD DIALOG "BVERTRAG",1,218,26,14,10,0,"...",9,1
 
     REM ADD DIALOG "BVERTRAG",4,240,26,196,40,0,"Optionen zum Vertragsstatus"
     REM ADD DIALOG "BVERTRAG",8,242,46,190,135,3,2,Auswahl2$,Waehrung$
 
     IF GASP% THEN 
       ADD DIALOG "BVERTRAG",4,240,78,196,25,0,"BÅro"
       ADD DIALOG "BVERTRAG",8,242,86,190,135,259,2,selOff$,office$
     END IF 
 
     ADD DIALOG "BVERTRAG",5,8,37,43,10,0,"Gesellschaft"
     ADD DIALOG "BVERTRAG",5,57,37,167,10,0,Gesellschaft$
     ADD DIALOG "BVERTRAG",1,218,37,14,10,0,"...",4,1
 
     ADD DIALOG "BVERTRAG",5,8,48,24,10,0,"Sparte"
     ADD DIALOG "BVERTRAG",5,57,48,167,10,0,vSparte$
     ADD DIALOG "BVERTRAG",1,218,48,14,10,0,"...",5,1
 
     ADD DIALOG "BVERTRAG",5,8,59,49,9,0,"Spartengruppe"
     ADD DIALOG "BVERTRAG",5,57,59,167,9,0,vSpGr$
     ADD DIALOG "BVERTRAG",1,218,59,14,9,0,"...",6,1
 
     ADD DIALOG "BVERTRAG",5,8,75,220,8,0,"Anzahl lebender VertrÑge, die existieren sollen (mind.1)"
     ADD DIALOG "BVERTRAG",5,74,86,10,8,0,"xyz"
     ADD DIALOG "BVERTRAG",6,86,86,25,11,0,0,anzv%,3
 
 
     IF GASP% THEN 
       REM ADD DIALOG "BVERTRAG",5,240,66,130,10,0,"BÅro"
       REM ADD DIALOG "BVERTRAG",8,242,76,144,245,259,2,selOff$,office$
     END IF 
  
 
     REM ADD DIALOG "BVERTRAG",4,247,172,197,35,0,"Optionen zum Vertragsstatus"
     REM ADD DIALOG "BVERTRAG",7,250,186,190,145,0,2,Waehrung$,Auswahl1$,"Filter deaktiviert"
     REM ADD DIALOG "BVERTRAG",8,250,186,190,145,3,2,Auswahl1$,Waehrung$
 
     
     REM ADD DIALOG "BVERTRAG",1,222,329,110,14,1,"&Kunden-Adressen ausgeben",30,1
     ADD DIALOG "BVERTRAG",1,126,104,55,14,1,"&OK",1,1
     ADD DIALOG "BVERTRAG",1,184,104,55,14,0,"&Abbrechen",0,0
   DIALOG "BVERTRAG",dreq%
   negativsu% = 0
   SELECT CASE dreq%
   CASE 4
     ge% = GetCodeGE%(ge%)
   CASE 40
     nge% = GetCodeGE%(nge%)
   CASE 5
     spa% = GetCodeVA%(spa%)
   CASE 50
     nspa% = GetCodeVA%(nspa%)
   CASE 6
     spgr% = GetCodeGR%(spgr%)
   CASE 60
     nspgr% = GetCodeGR%(nspgr%)
   CASE 9
     REM Produkt auswÑhlen
     IF GOldProdSu$ LIKE "TRUE" THEN 
       cvp% = GetVprodukt%(0,0,0)
     ELSE 
       cvp% = NewGetCodeVP%()
     END IF 
   CASE 90
     REM Produkt auswÑhlen
     REM cvp% = GetVprodukt%(0,0)
     REM ncvp% = NewGetCodeVP%()
     IF GOldProdSu$ LIKE "TRUE" THEN 
       ncvp% = GetVprodukt%(0,0,0)
     ELSE 
       ncvp% = NewGetCodeVP%()
     END IF 
   CASE 10
     REM Tarif auswÑhlen
     ctar% = GetCodeTarif%(0,0)
   CASE 11
     REM ADRGruppe wÑhlen
       b% = 1
       IF z% < RECCOUNT (GAdrDat$) THEN 
         z% = RECCOUNT (GAdrDat$)
       END IF 
       IF z% < RECCOUNT (datei$) + 5 THEN 
         z% = RECCOUNT (datei$) + 5
       END IF 
       IF z% > 20000 THEN z% = 20000
       REDIM AdrFound$(z%)
       REM FOR i% = 0 TO z% - 1
         REM AdrFound$(i%) = ""
       REM NEXT i%
       REM CALL DFile(3,datei1$ + _fpw$)
       datei1$ = "ADRGRUP"
       FILE datei1$
       INDEX keyword.datei1$
       SELECT FIRST 
       a% = 0
       SELECT WHERE keyword.datei1$ <> ""
       SELECT FIRST 
       AdrFound$(0) = "<keinen Filter setzen>"
       WHILE NOT EOF (datei1$)
         AdrFound$(b%) = keyword
         b% = b% + 1
         SELECT NEXT 
       WEND 
       AdrFound$(b%) = ""
       LAuswahl$ = AdrFound$(0)
       LAuswahl1$(0) = LAuswahl$
       CREATE DIALOG "ADRLISTE",0,0,340,197,"Adress-Gruppe wÑhlen","MS Sans Serif",8
       REM CREATE DIALOG "ADRLISTE",0,0,340,197,title$,"Courier New",8
       ADD DIALOG "ADRLISTE",7,5,8,328,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
       ADD DIALOG "ADRLISTE",1,134,174,56,16,1,"&OK",1,1
       ADD DIALOG "ADRLISTE",1,194,174,56,16,0,"&Abbrechen",0,0
       DIALOG "ADRLISTE",req5%
       MOUSE ON 
       REMOVE DIALOG "ADRLISTE"
       IF req5% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         vADRGRUP$ = LAuswahl$
         IF LAuswahl$ = "<keinen Filter setzen>" THEN vADRGRUP$ = "alle"
       ELSE 
         vADRGRUP$ = "alle"
       END IF 
   CASE 28
     REM VertrÑge, die nicht an die Abrechnung Åbergeben wurden
     provab% = 1
     ok% = 1
   CASE 29
     REM abgerechnete VertrÑge ohne BuchungssÑtze
     provab% = 2
     ok% = 1
   CASE 30
     REM nur Adressen ausgeben
     ok% = 1
   CASE 31
      REM Negativsuche Agentur
      wks1% = Workstation%
      ma1% = GetCodeMA%(ma1%,Wks1%)
   CASE 32
     REM Negativsuche
     doit% = 1
     negativsu% = - 1
     IF DateOK%(von$) THEN 
       ok% = 1
       IF DateOK%(bis$) THEN 
         ok% = 1
       ELSE 
         ok% = - 1
         CALL Fehler("Falsche Datumsangabe bei ...bis: !","Bitte geben Sie das Datum in der Form 'tt.mm.jjjj' ein.")
       END IF 
     ELSE 
       ok% = - 1
       CALL Fehler("Falsche Datumsangabe bei ...von: !","Bitte geben Sie das Datum in der Form 'tt.mm.jjjj' ein.")
     END IF 
   CASE 0
     ok% = 0
     doit% = 0
   END SELECT 
   REMOVE DIALOG "BVERTRAG"
   IF GASP% THEN 
     REM ShowOther% = - 1'sis
     show1% = 0
     IF selOff$ <> "<Alle BÅros>" THEN 
        FOR i% = 0 TO VisCount% - 1
            IF VisNames$(i%) = selOff$ THEN 
                Show1% = VisOff%(i%)
                i% = VisCount%'und raus
            END IF 
        NEXT i%
     END IF 
   END IF 
   REM  REMOVE DIALOG ALL 
   IF dreq% = 1 THEN ok% = 0
 WEND 
 IF dreq% = 0 THEN GOTO VertKond070206END 
 REM IF nspa% > 0 OR nspgr% > 0 OR nge% > 0 OR ncvp% > 0 THEN 
 REM ELSE 
   REM CALL Fehler("Sie mÅssen mindestens 1 Negativbedingung auswÑhlen!","")
   REM GOTO vertkond070220061
 REM END IF 
 IF nspa% > 0 OR nspgr% > 0 OR nge% > 0 OR ncvp% > 0 OR spa% > 0 OR spgr% > 0 OR ge% > 0 OR cvp% > 0 THEN 
 ELSE 
   REM CALL Fehler("Sie mÅssen mindestens 1 Bedingung auswÑhlen!","")
   REM GOTO vertkond070220061
 END IF 
 REM Auswertung der gesetzten Filter
 MOUSE OFF 
 SET STATUS "VertrÑge gefunden: " + STR$ (a%,"9999999")
 REM 05092002
 ON ERROR GOTO spz0702061
 IF GCODieRuf% > 99 THEN 
   ret% = CALL ("_SearchClose"):REM CALL Fehler("","")
   GCODieRuf% = 0
   GCODieRuf1% = 0
 END IF 
spz0702061: 
 ON ERROR GOTO spz0702062
 IF GCODieRuf1% > 99 THEN 
   ret% = CALL ("_SearchClose"):REM CALL Fehler("","")
   GCODieRuf1% = 0
 END IF 
spz0702062: 
 ON ERROR GOTO spz0702063
       IF EXISTS (GMACodeDir$ + "search.dat") OR EXISTS (GMACodeDir$ + "search.idx") THEN 
         IF (GASP% = - 1 OR GTerminal% = - 1) AND GMACodeDir$ <> "C:\" AND GMACodeDir$ <> "c:\" THEN 
           DELETE GMACodeDir$ + "search.*"
         ELSE 
           DELETE GMACodeDir$ + "search.*"
         END IF 
         IF EXISTS (_netpath$ + "local\search.dat") AND EXISTS (_netpath$ + "local\search.idx") THEN 
           COPY _netpath$ + "local\search.dat",GMACodeDir$ + "search.dat"
           COPY _netpath$ + "local\search.idx",GMACodeDir$ + "search.idx"
         ELSE 
           GCodie% = 0
         END IF 
       ELSE 
         IF EXISTS (_netpath$ + "local\search.dat") AND EXISTS (_netpath$ + "local\search.idx") THEN 
           COPY _netpath$ + "local\search.dat",GMACodeDir$ + "search.dat"
           COPY _netpath$ + "local\search.idx",GMACodeDir$ + "search.idx"
         ELSE 
           GCodie% = 0
         END IF 
       END IF 
spz0702063: 
   ON ERROR GOTO ErrorHandler
   REM 1=lebend
   REM 2=leben/kurzfristig/unterjÑhrig
   REM 3=ruhend/Anwartschaft
   REM 4=storniert
   REM 5=ruhend/beitragsfrei
   REM 6=beitragsfrei
   REM 7=beitragsfrei durch Leistung
   REM 8=Beitragsstundung
   REM 9=Sonstiges 
   REM 10=Altvertrag
   REM 11=Fremdvertrag
   REM 12=Antrag
   REM 13=storniert durch Dynamisierung 
   REM 14=Bestandteil eines BÅndelungsvertrages 
   REM 15=Antragswiderruf
   REM 16=Policenwiderspruch
   REM 20=Antragsablehnung
   REM 21=KÅnd.wg.Nichtzahlung
 
   FILE "kvertrag"
   INDEX codeku.kvertrag
 
   FILE "adressen"
   INDEX codeku.adressen
   SELECT FIRST 
   ii% = 0
   jj% = RECCOUNT ("ADRESSEN")
   gg% = 0
   a% = 0
   IF RECCOUNT ("ADRESSEN") > 20000 THEN 
     z% = 20000
   ELSE 
     z% = RECCOUNT ("ADRESSEN")
   END IF 
   REDIM AdrFound$(z% + 1)
         IF GCODIE% = - 1 THEN 
           CALL SearchInitADR()
         END IF 
         sperre% = 0
     IF MNdisabled%("DATALOCK") THEN 
       sperre% = - 1
     END IF 
 
   
   CodeVStatusP% = 17
   CodeVStatus% = 0
   REM CodeVStatusP% = VAL ( RIGHT$ (Auswahl2$,2))
   CodeVStatus% = VAL ( RIGHT$ (Auswahl1$,2))
   datsu$ = "ADRESSEN"
   REM CALL Fehler("Jetzt gehts los","")
   WHILE NOT EOF ("adressen")
     ii% = ii% + 1
     MOUSE OFF 
     codeku% = codeku.adressen
     sok% = - 1
     datsu$ = "ADRESSEN"
           IF GASP% THEN 
               codemaField$ = "codema." + datsu$
               succ% = 0
               REM 25102002 IF (IsWksVisible%(Workstation.datsu$) = - 1 OR codemaField$$ = 0) THEN 
               IF (IsWksVisible%(Workstation.datsu$) = - 1) THEN 
                 IF VAL (GMAView$) = 0 THEN 'wenn Daten aller Mitarbeiter sichtbar
                   succ% = - 1
                 ELSE 
                   SELECT CASE UCASE$ (datsu$)
                     CASE "ADRESSEN","DOKUMENT","AKQUISE","BCKONTAK","DOKBCK","AKQUIBCK","MAADR","KVERTRAG","ANTRAG"
                       succ% = (codemaField$$ = VAL (GMAView$)) OR codemaField$$ = 0
                       succ% = succ% OR ((Workstation% = 0) AND (Workstation.datsu$ > 0))
                     ELSE CASE 
                       succ% = - 1
                   END SELECT 
                 END IF 
               END IF 
               sok% = succ%
           END IF 
     IF sperre% = - 1 THEN 
       IF Sperre.datsu$ <> 0 AND Sperre.datsu$ <> vcodema% THEN sok% = 0
     END IF 
     IF sok% <> - 1 THEN GOTO weitsu0702061
     REM*****************************************************************
     REM Merkmale des Positivblocks abfragen, wenn dort etwas gesetzt ist
     REM IF spa% > 0 OR spgr% > 0 OR ge% > 0 OR cvp% > 0 THEN 
       IF NOT EXISTS (codeku%,codeku.Kvertrag) THEN 
         sok% = 0
         GOTO weitsu0702061
       END IF 
       FILE "kvertrag"
       INDEX codeku.kvertrag
       SELECT FIRST FILE "kvertrag" INDEX codeku.kvertrag
       SELECT KEY codeku% FILE "kvertrag" INDEX codeku.kvertrag
       pos% = 0
       gefund% = 0
       anzleb% = 0
       WHILE NOT EOF ("kvertrag") AND codeku.kvertrag = codeku%
 
         REM *********anzahl lebender VertrÑge*************************
                 IF codevstatusP% = 17 THEN 
                   REM "alle nicht stornierten,nicht Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 11 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 THEN 
                   ELSE 
                     anzleb% = anzleb% + 1
                     pos% = - 1
                   END IF 
                 END IF 
         REM **********************************************************
         IF spa% > 0 THEN 
             IF spa% = codeva.kvertrag THEN 
               pos% = - 1
             ELSE 
               pos% = 0
               GOTO nextvt070220051
             END IF 
             REM CALL Fehler(vorname.adressen + " " + nachname.adressen,"")
             IF CodeVStatusP% > 0 THEN 
               IF CodeVStatusP% > 16 THEN 
                 IF codevstatusP% = 17 THEN 
                   REM "alle nicht stornierten,nicht Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 11 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag >= 20 THEN 
                     pos% = 0
                     GOTO nextvt070220051
                   END IF 
                 END IF 
                 IF codevstatusP% = 18 THEN 
                   REM "alle nicht stornierten,alle Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag >= 20 THEN 
                     pos% = 0
                     GOTO nextvt070220051
                   END IF 
                 END IF 
               ELSE 
                 IF codevstatus.kvertrag <> CodeVStatusP% THEN pos% = 0
               END IF 
             END IF 
             IF pos% = 0 THEN GOTO nextvt070220051
         END IF 
         IF spgr% > 0 THEN 
             IF spgr% = codegrsp.kvertrag THEN 
               pos% = - 1
             ELSE 
               pos% = 0
               GOTO nextvt070220051
             END IF 
 
             IF CodeVStatusP% > 0 THEN 
               IF CodeVStatusP% > 16 THEN 
                 IF codevstatusP% = 17 THEN 
                   REM "alle nicht stornierten,nicht Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 11 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag >= 20 THEN 
                     pos% = 0
                     GOTO nextvt070220051
                   END IF 
                 END IF 
                 IF codevstatusP% = 18 THEN 
                   REM "alle nicht stornierten,alle Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag >= 20 THEN 
                     pos% = 0 GOTO nextvt070220051
                   END IF 
                 END IF 
               ELSE 
                 IF codevstatus.kvertrag <> CodeVStatusP% THEN pos% = 0
               END IF 
             END IF 
             IF pos% = 0 THEN GOTO nextvt070220051
         END IF 
         IF ge% > 0 THEN 
             IF ge% = codege.kvertrag THEN 
               pos% = - 1
             ELSE 
               pos% = 0
               GOTO nextvt070220051
             END IF 
 
             IF CodeVStatusP% > 0 THEN 
               IF CodeVStatusP% > 16 THEN 
                 IF codevstatusP% = 17 THEN 
                   REM "alle nicht stornierten,nicht Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 11 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag >= 20 THEN 
                     pos% = 0
                     GOTO nextvt070220051
                   END IF 
                 END IF 
                 IF codevstatusP% = 18 THEN 
                   REM "alle nicht stornierten,alle Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag >= 20 THEN 
                     pos% = 0
                     GOTO nextvt070220051
                   END IF 
                 END IF 
               ELSE 
                 IF codevstatus.kvertrag <> CodeVStatusP% THEN pos% = 0
               END IF 
             END IF 
             IF pos% = 0 THEN GOTO nextvt070220051
         END IF 
         IF cvp% > 0 THEN 
             IF cvp% = codevp.kvertrag THEN 
               pos% = - 1
             ELSE 
               pos% = 0
               GOTO nextvt070220051
             END IF 
             lfdnr% = lfdnr.kvertrag
 
             IF CodeVStatusP% > 0 THEN 
               IF CodeVStatusP% > 16 THEN 
                 IF codevstatusP% = 17 THEN 
                   REM "alle nicht stornierten,nicht Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 11 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag >= 20 THEN 
                     pos% = 0
                     GOTO nextvt070220051
                   END IF 
                 END IF 
                 IF codevstatusP% = 18 THEN 
                   REM "alle nicht stornierten,alle Fremdvertr.,nicht Altvertr."
                   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 10 OR codevstatus.kvertrag = 13 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag >= 20 THEN 
                     pos% = 0
                     GOTO nextvt070220051
                   END IF 
                 END IF 
               ELSE 
                 IF codevstatus.kvertrag <> CodeVStatusP% THEN pos% = 0
               END IF 
             END IF 
             IF pos% = 0 THEN GOTO nextvt070220051
         END IF 
nextvt070220051: 
         IF pos% = - 1 THEN 
           gefund% = gefund% + 1
         END IF 
         SELECT NEXT FILE "kvertrag" INDEX codeku.kvertrag
       WEND 
       IF gefund% <> anzv% OR anzleb% <> anzv% THEN 
         pos% = 0
       END IF 
       IF pos% <> - 1 THEN 
         sok% = 0
         GOTO weitsu0702061
       END IF 
     REM END IF 
sok0702061: 
     IF sok% = - 1 THEN 
       REM CALL Fehler("Jetzt gehts los","sok%=-1")
       gg% = gg% + 1
       REM *****************************************
       IF GCODIE% = - 1 THEN 
         CALL SearchVorbAdr(GADRDAT$)
         codeku% = Codeku.GADRDAT$
         IF EXISTS (codeku%,codeku.GTelDat$) THEN 
           SELECT KEY codeku% FILE GTelDat$ INDEX codeku.GTelDat$
           CALL SearchVorbTel(GADRDAT$)
         END IF 
       END IF 
       AdrFound1$ = LTRIM$ (nachname)
       IF LTRIM$ (vorname) <> "" THEN AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (vorname)
       IF LTRIM$ (EGNachname) <> "" AND LTRIM$ (EGNACHNAme) <> LTRIM$ (Nachname) THEN AdrFound1$ = AdrFound1$ + ",LAB: " + LTRIM$ (EGNachname) + ", "
       IF LTRIM$ (EGvorname) <> "" THEN AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (EGvorname)
       IF LTRIM$ (K1name) <> "" THEN AdrFound1$ = AdrFound1$ + ", Kind1: " + LTRIM$ (K1name)
       IF LTRIM$ (K2name) <> "" THEN AdrFound1$ = AdrFound1$ + ", Kind2: " + LTRIM$ (K2name)
       IF LTRIM$ (K3name) <> "" THEN AdrFound1$ = AdrFound1$ + ", Kind3: " + LTRIM$ (K3name)
       IF LTRIM$ (K4name) <> "" THEN AdrFound1$ = AdrFound1$ + ", Kind4: " + LTRIM$ (K4name)
       AdrFound1$ = AdrFound1$ + ", " + LTRIM$ (Kundennummer) + "/" + LTRIM$ (ort) + ", " + LTRIM$ (PLZ) + ", " + LTRIM$ (Stra·e) + ", "
       REM FILE "project"
       AdrFound$(a%) = AdrFound1$ + SPACE$ (120) + STR$ (codeku,"000000")
       a% = a% + 1
       IF GCODIE% = - 1 THEN 
         GGGcodeku$ = STR$ (codeku.adressen,"000000")
         ret% = CALL ("_SearchFill",GGGcodeku$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$,f9$,f10$,f11$,f12$,f13$,f14$,f15$,f16$,f17$,f18$,f19$,f20$)
       END IF 
       REM ******************************************
     END IF 
weitsu0702061: 
     REM CALL Fehler( STR$ (ii%,",999999"),"")
     SET STATUS STR$ (ii%,",999999") + " durchsucht von " + STR$ (jj%,",999999") + " gefunden " + STR$ (gg%,",999999")
     SELECT NEXT FILE "ADRESSEN" INDEX codeku.adressen
   WEND 
 a% = a% + 1
 IF a% = 1 THEN 
   CALL Fehler("Es wurden keine DatensÑtze gefunden, die Ihren Auswahlkriterien entsprachen","")
   GOTO anfsu070220051
 END IF 
 tfoundadr% = a%
 AdrFound$(a%) = ""
 IF a% > 1 THEN 
 
   LAuswahl$ = AdrFound$(0)
   LAuswahl1$(0) = LAuswahl$
   IF _projekt$ LIKE "PROVIS" THEN 
     MENU 3,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
   ELSE 
     MENU 4,6,1,"aus Suchliste &wÑhlen,F7","ADRKurzSuche","Auflistung aller vorher gesuchten Adressen"
   END IF 
   IF GCODIE% = - 1 THEN 
     c$ = "aa"
     req3% = CALL ("_SearchShow",c$)
     REM REQUEST c$,"",2
     REM ret% = CALL ("_SearchClose"):rem CALL Fehler("","")
     IF VAL (c$) <> 0 THEN 
       AdrSuche% = VAL (c$)
       adrfound% = VAL (c$)
       codeku1% = VAL (c$)
       knr% = codeku1%
       adrglob% = knr%
       ok% = 0
       SET STATUS "Adressen gefunden..."
       SELECT FORM KEY codeku1% FILE GAdrDat$ INDEX Codeku.GAdrDat$
       SELECT FORM KEY codeku1% FILE GTelDat$ INDEX Codeku.GTelDat$
       SET INDEX INDEX 
       REM CALL Fehler("von suche","")
       CALL ADRFeldnamen()
       FORM 
       MOUSE ON 
     END IF 
     IF req3% = 2 THEN 
       adrser% = 1
       CALL SerieNeu1(GAdrDat$)
       GOTO VertKond070206END
     END IF 
     IF req3% = 3 THEN 
       REM CALL Fehler("req3% = 3","")
         ja% = - 1
         IF disabled%("ADRDrucken") THEN ja% = 0
         IF req3% = 3 AND ja% = - 1 THEN 
           REM drucken
           ON ERROR GOTO adrdr0702061
           DIM dlg AS Dialog
           DIM control AS DialogControl
adrdr0702061: 
           ON ERROR GOTO ErrorHandler
           Superbase.Dialogs.Add("ADRFilter")
           SET dlg = Superbase.Dialogs.ADRFilter
           dlg.Move(0,0,158,111)
           dlg.Caption = title$
           dlg.FontName = "MS Sans Serif"
           dlg.FontSize = 8
 
           SET control = dlg.Add("DialogFrame2","DialogFrame")
           control.Move(5,7,141,77)
           control.Caption = "Druckoptionen"
 
           SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
           control.Move(11,24,85,10)
           control.Caption = "Alle Angaben drucken"
           control.Bind("KurzLang$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCheckBox2","DialogCheckBox")
           control.Move(11,38,85,11)
           control.Caption = "Termine mitdrucken"
           control.Bind("Terminejn$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCheckBox3","DialogCheckBox")
           control.Move(11,53,115,11)
           control.Caption = "VertrÑge zur Adresse drucken!"
           control.Bind("VertragJN$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCheckBox4","DialogCheckBox")
           control.Move(11,68,105,11)
           control.Caption = "als Telefonliste"
           control.Bind("adrtelefon$")
           control.ValueOn = "j"
           control.ValueOff = "n"
 
           SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
           control.Move(22,89,48,15)
           control.Default = 1
           control.Caption = "&Weiter"
           control.ReturnValue = 1
 
           SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
           control.Move(74,89,48,15)
           control.Caption = "&Abbruch"
           control.ReturnValue = 0
           control.Cancel = 1
           DIALOG "ADRFilter",req%
           REMOVE DIALOG ALL 
           IF req% = 1 THEN 
             REM jetzt das Array auslesen und in eine Datei speichern
             FILE GADRDat$
             cindex$ = INDEX 
             INDEX codeku.Gadrdat$
             CALL DFile(2,"OFFICE\ADRLEER" + _fpw$)
             aa% = a% - 1
             FOR xi% = 0 TO a% - 1
               codeku% = VAL ( RIGHT$ (AdrFound$(xi%),6))
               SELECT KEY codeku% FILE GADRDat$ INDEX codeku.GADRDat$
               anrede$ = Anrede.GadrDat$
               titel$ = Titel.GADRDat$
               IF anrede$ LIKE "Herr*" OR anrede$ LIKE "Fr*" OR anrede$ LIKE "Fam*" OR anrede$ LIKE "Ehe*" OR anrede$ LIKE "Kind*" THEN 
                 nachname$ = LTRIM$ (nachname.GAdrDat$)
                 vorname$ = LTRIM$ (vorname.GAdrDat$)
               ELSE 
                 nachname$ = LTRIM$ (nachname.GAdrDat$)
                 vorname$ = LTRIM$ (Geburtsname.GAdrDat$)
               END IF 
               gebdat% = Geburtstag.GAdrDat$
               REM CALL WriteAdrTemp(codeku%,anrede$,titel$,nachname$,vorname$,gebdat%)
               BLANK FILE "ADRLEER"
               a% = CopyRecord%(GADRDat$,"ADRLEER")
               Nachname.adrleer = nachname$
               Vorname.adrleer = Vorname$
               STORE FILE "ADRLEER"
               UNLOCK FILE "ADRLEER"
               SET STATUS nachname$ + "         " + STR$ (xi%,",999999") + " aufbereitet von " + STR$ (aa%,",999999")
             NEXT xi%
             REM dann drucken auslîsen
             Wbericht$ = "ADRLEER"
             title2$ = "Adressliste "
             CALL VPEADRGr(Wbericht$,FormatPrint$,title2$,Terminejn$,KurzLang$,"")
             INDEX cindex$
             REMOVE FROM FILE "ADRLEER"
             REM CALL Fehler("","")
           END IF 
         END IF 
     END IF 
   ELSE 
     CREATE DIALOG "ADRLISTE",0,0,440,197,title$,"MS Sans Serif",8
     ADD DIALOG "ADRLISTE",7,5,8,428,161,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
     ADD DIALOG "ADRLISTE",1,164,174,56,16,1,"&OK",1,1
     ADD DIALOG "ADRLISTE",1,224,174,56,16,0,"&Abbrechen",0,0
     ADD DIALOG "ADRLISTE",1,284,174,56,16,0,"&Serienbrief",3,0
     DIALOG "ADRLISTE",req3%
     MOUSE ON 
     REMOVE DIALOG "ADRLISTE"
     IF req3% = 3 THEN 
       adrser% = 1
       CALL SerieNeu1(GAdrDat$)
       GOTO VertKond070206END
     END IF 
     IF req3% = 1 THEN 
       adrglob% = a% - 1
       LAuswahl$ = LAuswahl1$(0)
       codeku1% = VAL ( RIGHT$ (LAuswahl$,6))
       REM adrglob% = codeku1%
       adrfound% = VAL ( RIGHT$ (LAuswahl$,6))
       adrglob% = adrfound%
       ok% = 0
       SET STATUS "Adressen gefunden..."
       SELECT FORM KEY codeku1% FILE GAdrDat$ INDEX Codeku.GAdrDat$
       SELECT FORM KEY codeku1% FILE GTelDat$ INDEX Codeku.GTelDat$
       SET INDEX INDEX 
       REM CALL Fehler("","")
       CALL ADRFeldnamen()
       FORM 
       MOUSE ON 
     END IF 
   END IF 
 ELSE 
   CALL Fehler ("Es wurden keine Adressen gefunden, die den angegebenen Kriterien entsprechen!","")
   REM GOTO AnfSuAdr180998
 END IF 
VertKond070206END: 
 END SUB 
 
 
  




 '      *************************************************
 '      ** Routinen fÅr PFL_AFSK KVERTRAG**
 '      *************************************************
 ' wenn codevt%=0 dann so wie immer
 ' wenn codevt%>0 dann Sollstellung von KVERTRAG aus
SUB PFL()
 CALL DFile(3,"AFSPFL" + _fpw$)
 MOUSE OFF 
 REM 260698 REMOVE FROM FILE "AFSPFL" WHERE codevt.AFSPFL < 1
 MOUSE ON 
 CALL DFile(30,"KVERTRAG" + _fpw$)
 CALL DFile(20,"OFFICE\" + GADRDat$ + _fpw$)
 CALL DFile(30,"geadr" + _fpw$)
 CALL DFile(30,"sparten" + _fpw$)
 CALL DFile(30,"maadr" + _fpw$)
 CALL DFile(30,"maadrgru" + _fpw$)
 CALL DFile(3,"zeingan1" + _fpw$)
 codevt% = lfdnr.kvertrag
 IF FORM LIKE "PROVI*" THEN codevt% = 0
 FILE "AFSPFL"
 INDEX codevt.AFSPFL
 SELECT FIRST 
 _formend% = 0
 IF codevt% = 0 THEN maske$ = "EINGPFL1"
 IF codevt% <> 0 THEN 
   maske$ = "EINGPFL"
   IF NOT EXISTS (codevt%,codevt.AFSPFL) THEN 
     CALL Fehler("Es existieren fÅr diesen Vertrag noch keine Pflege-DatensÑtze! ","")
     END SUB 
   END IF 
 END IF 
 MOUSE OFF 
 WHILE _formend% = 0
   ON ERROR GOTO ErrorHandler
   IF UCASE$ ( FORM ) <> maske$ THEN 
     SET HEADING title$ + " - PFLimport"
     OPEN FORM GPrjForm$ + maske$
     SET f = Superbase.Form
     GAppName$ = _netpath$ + "DOC\provis.pdf"
     REM IF maske$ <> "EINGANGK" THEN SET FORM OFF Uebers$
     lGesellschaft$ = ""
     lAgentur$ = ""
     lSparte$ = ""
     lKunde$ = ""
     lAussenstand$ = ""
     eingbei$ = ""
     CALL ZPFLIntro1(codevt%)
     CALL MNPFL()
     SET STATUS "PFLimport"
     IF RECCOUNT ("AFSPFL") > 0 THEN CALL ZPFLUpdate1(codesut.AFSPFL)
   END IF 
   FORM 
   MENU ON 
   MOUSE ON 
   ZEINsub% = 0
   REM IF RECCOUNT ("AFSPFL") > 0 THEN CALL ZEISutUpdate1()
   CALL ClearKBDBuffer()
   FORM 
   IF ZEINsub% <> 99 THEN WAIT KEY OR MENU OR MOUSE 
   REM ** Tastaturabfrage
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL ZPFLPrev1()
   CASE CrsRight%,PgDn%
     CALL ZPFLNext1()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE ZEINsub%
   CASE 1
     REM Suchen
     CALL ZPFLSuch1()
     CALL ZPFLIntro1(codevt.AFSPFL)
   CASE 2
     CALL ZPFLPrev1()
   CASE 3
     IF maske$ = "EINGSUT" THEN 
       CALL ZPFLDruck(codevt.AFSPFL)
     ELSE 
       CALL ZPFLDruck(0)
     END IF 
   CASE 4
     REM Lîschen
     codesut% = codesut.AFSPFL
     codevt% = codevt.AFSPFL
     REQUEST "Wollen Sie wirklich diesen Datensatz lîschen?","",135,req%
     IF req% = 1 THEN 
       SELECT KEY codesut% LOCK FILE "AFSPFL" INDEX codesut.AFSPFL
       SELECT REMOVE FILE "AFSPFL"
       REQUEST "Datensatz wurde gelîscht!","",2
       IF maske$ = "EINGSUT" THEN 
         IF EXISTS (codevt%,codevt.AFSPFL) THEN 
           FILE "AFSPFL"
           INDEX codesut.AFSPFL
           SELECT FIRST 
           REM OPEN FORM maske$
           REM SET f = Superbase.Form
           SELECT FORM FIRST 
           FORM 
           CALL ZPFLIntro1(codevt%)
           CALL ZPFLUpdate1(codesut.AFSPFL)
           ZEINsub% = 0
         ELSE 
           CALL Fehler("Es existieren keine weiteren Sollstellungen zu diesem Vertrag!","")
           _formend% = 1
         END IF 
       ELSE 
         IF RECCOUNT ("AFSPFL") > 0 THEN 
           IF EXISTS (codevt%,codevt.AFSPFL) THEN 
             SELECT FIRST FILE "AFSPFL" INDEX codesut.AFSPFL
             SELECT FORM KEY codevt% FILE "AFSPFL" INDEX codevt.AFSPFL
             FORM 
             CALL ZPFLIntro1(codevt%)
             CALL ZPFLUpdate1(codesut.AFSPFL)
             ZEINsub% = 0
           ELSE 
             SELECT FORM FIRST FILE "AFSPFL" INDEX codesut.AFSPFL
             FORM 
           END IF 
         ELSE 
           CALL Fehler("Es existieren keine weiteren Sollstellungen!","")
           _formend% = 1
         END IF 
       END IF 
     END IF 
   CASE 5
     REM neu
     CALL AFSPFLNeu()
     MOUSE ON 
     codevt% = codevt.AFSPFL
     ENTER Bewertung.AFSPFL,0
     CALL ZPFLIntro1(codevt%)
     FORM 
     REM BewertungEU.AFSPFL = VAL ( STR$ (Bewertung.AFSPFL / Umrechnung.AFSPFL,"99999999.00"))
     REM CALL QuickStore("AFSPFL")
     REM ENTER END 
   CASE 6
     REM edit
     codevt% = codevt.AFSPFL
     ENTER Datum1.AFSPFL,0
     CALL ZPFLIntro1(codevt%)
     FORM 
   CASE 7
     CALL ZPFLNext1()
   END SELECT 
   MENU ON 
 WEND 
 REM CALL ZEINbuchung1( - 1)
 REM 110397 CALL ZEINbuchung1(0)
 _formend% = 0
 END SUB 
 
  
 
 
SUB ZPFLIntro1(codevt%)
 MOUSE OFF 
 FILE "AFSPFL"
 IF codevt% < 1 THEN 
   INDEX codevt.AFSPFL
   SELECT FIRST FILE "AFSPFL" INDEX codesut.AFSPFL
   codevt% = codevt.AFSPFL
   SELECT FORM KEY codevt% FILE "KVERTRAG" INDEX lfdnr.kvertrag
   SELECT KEY codevt% FILE "AFSPFL" INDEX codevt.AFSPFL
   REM IF codeko.kvertrag <> 0 THEN Kondition$ = ZwFirmKond$(codeko.kvertrag)
 ELSE 
   INDEX codevt.AFSPFL
   SELECT FORM KEY codevt% FILE "KVERTRAG" INDEX lfdnr.kvertrag
   SELECT KEY codevt% FILE "AFSPFL" INDEX codevt.AFSPFL
   REM IF codeko.kvertrag <> 0 THEN Kondition$ = ZwFirmKond$(codeko.kvertrag)
 END IF 
 FORM 
 END SUB 
 
 
SUB ZPFLUpdate1(codesut%)
 REM 25012000
 REM codeaz$ = codeaz.AFSPFL
 codevt% = codevt.AFSPFL
 SELECT FIRST FILE "AFSPFL" INDEX codevt.AFSPFL
 IF codesut% <> 0 AND codevt.AFSPFL <> 0 THEN 
   REM SELECT FORM KEY CodeVT.AFSPFL FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
   SELECT KEY codesut% FILE "AFSPFL" INDEX codesut.AFSPFL
   REM SELECT KEY CodeVT.AFSPFL FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
   SELECT FORM KEY codevt% FILE "AFSPFL" INDEX codevt.AFSPFL
   FORM 
 END IF 
 FORM 
 END SUB 
 
 
SUB MNPFL()
 MENU CLEAR 
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
 
 
 
SUB EinZPFL1()
 codesut% = codesut.AFSPFL
 SELECT KEY codesut% FILE "AFSPFL" INDEX codesut.AFSPFL
 REM SELECT FORM KEY codesut% FILE "AFSPFL" INDEX codesut.AFSPFL
 REM Zahlweise$ = ZW2Str$(ZW.KVERTRAG)
 REM kondart% = kondart.AFSPFL
 FORM 
 END SUB 
 
 
 REM Sutor drucken
SUB ZPFLDruck(codevt%)
       t1$ = "Wenn Sie in unterschiedlichen WÑhrungen erfa·t haben, sollten Sie die öbersicht in EURO ausgeben lassen,"
       t2$ = "da bei der Ausgabe der Belege in der OriginalwÑhrung zwar die einzelnen BetrÑge stimmen, aber keine der errechneten Summen richtig sein wird(z.B. DM+US$=?)!"
       REM CALL Fehler(t1$,t2$)
       REM REQUEST "öbersicht in EURO drucken?","",130,req1%
       req1% = 1
       IF req1% = 1 THEN 
         eu% = 1
         drwaehr$ = " in Euro"
       ELSE 
         eu% = 0
         drwaehr$ = " in allen WÑhrungen"
       END IF 
 gesell$ = ""
 suge% = 0
 codesut% = codesut.AFSPFL
 IF codevt% <> 0 THEN 
   VSNR1$ = VS_Nr.kvertrag
 ELSE 
   VSNR1$ = ""
 END IF 
 opt&% = 0
 IF codevt% = 0 THEN opt&% = VAL (ReadConfig$("PROVIS","ZPFLopt"))
 IF opt&% = 0 AND codevt% = 0 THEN opt&% = 1
 von$ = ReadConfig$("PROVIS","ZPFLvon")
 IF von$ = "leer" THEN von$ = ""
 bis$ = ReadConfig$("PROVIS","ZPFLbis")
 IF bis$ = "leer" THEN bis$ = ""
 CREATE DIALOG "ZEINSUCH",0,0,228,164,"Sutor","MS Sans Serif",8
 ADD DIALOG "ZEINSUCH",4,0,0,228,139,0,""
 ADD DIALOG "ZEINSUCH",9,9,11,23,22,2
 ADD DIALOG "ZEINSUCH",5,38,10,182,22,0,"Bitte wÑhlen Sie aus, mit welcher Methode Sie den gewÅnschten Satz drucken mîchten."
 ADD DIALOG "ZEINSUCH",5,38,30,184,24,0,"Sie kînnen die zu druckende Datenmenge durch die wahlfreie Angabe des FÑlligkeitsdatum einschrÑnken."
 ADD DIALOG "ZEINSUCH",5,38,54,76,50,0,"Druck Åber..."
 IF codevt% = 0 THEN 
   ADD DIALOG "ZEINSUCH",3,58,66,149,12,0,"Vertrags-/Policennummer",1,opt&%
   REM ADD DIALOG "ZEINSUCH",3,58,76,148,12,0,"Gesellschaft",2,opt&%
   ADD DIALOG "ZEINSUCH",3,58,86,148,12,0,"keine EinschrÑnkung",3,opt&%
 END IF 
 ADD DIALOG "ZEINSUCH",5,38,107,96,9,0,"Buchungszeitraum (optional):"
 ADD DIALOG "ZEINSUCH",5,58,120,17,11,0,"vom"
 ADD DIALOG "ZEINSUCH",6,78,119,41,11,0,0,von$,20
 ADD DIALOG "ZEINSUCH",5,130,120,13,10,0,"bis"
 ADD DIALOG "ZEINSUCH",6,144,119,41,11,0,0,bis$,20
 ADD DIALOG "ZEINSUCH",1,54,143,55,15,1,"&OK",1,1
 ADD DIALOG "ZEINSUCH",1,112,143,55,15,0,"&Abbrechen",0,0
 DIALOG "ZEINSUCH",req%
 REMOVE DIALOG "ZEINSUCH"
 IF req% = 1 THEN 
   CALL WriteConfig("PROVIS","ZPFLvon", DATE$ ( DAYS (von$),"0d.mm.yyyy"))
   CALL WriteConfig("PROVIS","ZPFLbis", DATE$ ( DAYS (bis$),"0d.mm.yyyy"))
   CALL WriteConfig("PROVIS","ZPFLopt", LTRIM$ ( STR$ (opt&%)))
   ok% = - 1
   IF opt&% = 1 THEN 
     CREATE DIALOG "DZ2",0,0,191,87,"Sutor","MS Sans Serif",8
     ADD DIALOG "DZ2",4,0,0,191,63,0,""
     ADD DIALOG "DZ2",9,5,10,21,22,2
     ADD DIALOG "DZ2",5,34,9,147,20,0,"Bitte geben Sie die Vertrags-/Policennummer der gesuchten DatensÑtze ein:"
     ADD DIALOG "DZ2",5,34,33,87,10,0,"Vertrags-/Policennummer:"
     ADD DIALOG "DZ2",6,34,44,148,12,0,0,VSNR$,50
     ADD DIALOG "DZ2",1,36,67,55,15,1,"&OK",1,1
     ADD DIALOG "DZ2",1,94,67,55,15,0,"&Abbrechen",0,0
     DIALOG "DZ2",req2%
     REMOVE DIALOG "DZ2"
     IF req2% = 0 OR VSNR$ = "" THEN ok% = 0
     VSNR1$ = VSNR$
     VSNR$ = VSNR$ + "*"
 
   ELSE 
     IF opt&% = 2 THEN 
       suge% = GetCodeGE%(0)
       SELECT FIRST FILE "geadr" INDEX codege.geadr
       SELECT KEY suge% FILE "geadr" INDEX codege.geadr
       gesell$ = gesellschaft.geadr
       IF suge% < 1 THEN ok% = 0
     END IF 
   END IF 
 END IF 
 IF ok% = 0 THEN END SUB 
 von0$ = von$
 bis0$ = bis$
 IF von$ = "" THEN von% = 0 ELSE von% = DAYS (von$)
 IF bis$ = "" THEN bis% = DAYS ("31.12.2920") ELSE bis% = DAYS (bis$)
 
 
 CALL PRep("SUTDRE")
  REPORT ON Betrag.AFSPFL AS "BewSum%",CodeSut.AFSPFL AS "anz%"
 AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 ON ERROR GOTO ZPFLdrend19110101
 ueberschr0$ = "Sutor-DatensÑtze " + drwaehr$
 
 IF gesell$ <> "" THEN 
   ueberschr0$ = ueberschr0$ + " fÅr Gesellschaft " + gesell$
 ELSE 
   IF codevt% <> 0 THEN 
     ueberschr0$ = ueberschr0$ + " fÅr Vertrag " + VSNR1$
   END IF 
 END IF 
 IF von0$ <> "" THEN 
   ueberschr1$ = "im Zeitraum von " + von0$
   IF bis0$ <> "" THEN 
     ueberschr1$ = ueberschr1$ + " bis " + bis0$
   END IF 
 ELSE 
   IF bis0$ <> "" THEN 
     ueberschr1$ = "im Zeitraum bis " + bis0$
   END IF 
 END IF 
 IF von0$ = "" AND bis0$ = "" THEN 
   ueberschr1$ = "alle DatensÑtze ohne ZeitraumbeschrÑnkung"
 END IF 
 SET QUERY ON 
 SET QUERY LOCK OFF 
 IF codevt% <> 0 THEN 
     a$ = "adressen"
     k$ = "Kvertrag"
     z$ = "AFSPFL"
   SELECT ;
     WHERE codevt.z$ = codevt% AND Datum1.z$ >= von% AND Datum1.z$ <= bis%
     ORDER REPORT Datum1.AFSPFL
     TO ASK 
   END SELECT 
 ELSE 
   IF opt&% = 3 THEN 
     REM alles drucken
     SELECT ;
     WHERE Datum1.AFSPFL >= von% AND Datum1.AFSPFL <= bis%
     ORDER REPORT Datum1.AFSPFL,VS_Nr.AFSPFL
     TO ASK 
     END SELECT 
   ELSE 
     a$ = "adressen"
     k$ = "Kvertrag"
     REM nach Gesellschaft suchen
     SELECT ;
 WHERE CodeVT.AFSPFL = lfdNr.K$ AND codeku.k$ = codeku.a$ AND CodeGE.K$ = CodeGE.GEADR AND codege.geadr = suge% AND Datum1.AFSPFL >= von% AND Datum1.AFSPFL <= bis%
     ORDER REPORT Gesellschaft.GEADR,Datum1.AFSPFL,VS_Nr.AFSPFL
     TO ASK 
     END SELECT 
   END IF 
 END IF 
ZPFLdrend19110101: 
 ON ERROR GOTO ErrorHandler
 END SUB 
 

 REM Kunden - Adresse als Vermittleradresse aufnehemen
SUB ADRTOMAADR()
  IF disabled%("MAADRNEU") OR disabled%("MAADRBEARB") OR disabled%("MAADR") THEN END SUB 
  adrind$ = INDEX 
  ON ERROR GOTO ErrorHandler
  codeku% = codeku.adressen
  knr% = codeku%
  IF EXISTS (codeku%,codeku.maadr) THEN 
    SELECT FIRST FILE "maadr" INDEX codeku.maadr
    SELECT KEY codeku% LOCK FILE "maadr" INDEX codeku.maadr
    CALL Fehler("Kunde existiert schon als Vermittler",nachname.maadr + "," + vorname.maadr + ",Agenturnummer: " + Agenturnr.maadr + " Es kînnen die Adress- und Bankangaben aktualisiert werden- nicht Telefon und email.")
    REQUEST "Mîchten Sie die Adressdaten","des Vermittlers aktualisieren lassen?",135,reqsperr%
    IF reqsperr% = 1 THEN 
      Nachname.maadr = Nachname.adressen
      Vorname.maadr = Vorname.adressen
      Stra·e.maadr = Stra·e.adressen
      plz.maadr = plz.adressen
      ort.maadr = ort.adressen
      anrede.maadr = anrede.adressen
      Postanschrift.maadr = Postanschrift.adressen
      Kontoinhaber.maadr = Kontoinh1.adressen
      IBAN.MAADR = k1iban.adressen
      Swift.maadr = k1swift.adressen
      K1BLZ.maadr = K1BLZ.adressen
      K1Bank.maadr = K1Bank.adressen
      K1Konto.maadr = K1Konto.adressen


      STORE FILE "maadr"
      UNLOCK FILE "maadr"
      CALL Fehler("Die Telefon-/Fax-/email-/www ... Verbindungen mÅssen leider von Hand geÑndert bzw. ergÑnzt werden!","")
    END IF 
  ELSE 
    REQUEST "Mîchten Sie diese Adresse","als Vermittler eintragen lassen?",135,reqsperr%
    IF NOT disabled%("MAADRNEU") AND reqsperr% = 1 THEN 
      IF fsmax% > 0 THEN 
        IF RECCOUNT ("MAADR") > fsmax% THEN 
          CALL Fehler("In dieser Version kînnen maximal " + LTRIM$ ( STR$ (fsmax%,"99999")) + " Agenturen erfa·t werden!","")
          END SUB 
        END IF 
      END IF 
      BLANK FILE "MAADR"
      a% = CopyRecord%("Adressen","MAADR")
      codema% = SER ("maadr",1)
      codema.maadr = codema%
      Agenturnr.maadr = Kundennummer.adressen
      Kontoinhaber.maadr = Kontoinh1.adressen
      IBAN.MAADR = k1iban.adressen
      Swift.maadr = k1swift.adressen
         GMaAnrede$ = Anrede.maadr
         GMaAnrede2$ = Anrede2.maadr
         GMaVorname$ = Vorname.maadr
         GMaVorname2$ = Vorname2.maadr
         GMaNachname$ = Nachname.maadr
         GMaNachname2$ = Nachname2.maadr
         GMaFirmaName$ = FirmaName.maadr
         GMaFirmaName2$ = FirmaName2.maadr
         GMaOrt$ = Ort.maadr
         GMaOrt2$ = Ort2.maadr
         GMaStrasse$ = Stra·e.maadr
         GMaStrasse2$ = Strasse2.maadr
         GMaPLZ$ = plz.maadr
         GMaPLZ2$ = plz2.maadr

      IF EXISTS (codeku%,codeku.telefon) THEN 
        SELECT FIRST FILE "telefon" INDEX codeku.telefon
        SELECT KEY codeku% FILE "telefon" INDEX codeku.telefon
        ok% = - 1
        WHILE NOT EOF ("telefon") AND codeku.telefon = codeku% AND ok% = - 1
          IF codeku.telefon = codeku% THEN 
            IF Telefon1.maadr = "" AND art.telefon LIKE "*fon*" THEN 
              Telefon1.maadr = LEFT$ (Nummer.telefon,50)
            ELSE 
              IF Telefon2.maadr = "" AND art.telefon LIKE "*fon*" THEN 
                Telefon1.maadr = LEFT$ (Nummer.telefon,20)
              ELSE 
                IF Telefax.maadr = "" AND art.telefon LIKE "*fax*" THEN 
                  Telefax.maadr = LEFT$ (Nummer.telefon,20)
                ELSE 
                  IF email.maadr = "" AND (art.telefon LIKE "*email*" OR Nummer.telefon LIKE "*@*") THEN 
                    email.maadr = LEFT$ (Nummer.telefon,100)
                  ELSE 
                    IF www.maadr = "" AND (art.telefon LIKE "*WWW*" OR art.telefon LIKE "*Internet*" OR Nummer.telefon LIKE "*WWW*") THEN 
                      www.maadr = LEFT$ (Nummer.telefon,100)
                    END IF 
                  END IF 
                END IF 
              END IF 
            END IF 

          END IF 
          SELECT NEXT FILE "telefon" INDEX codeku.telefon
        WEND 
      END IF 
      CALL QuickStore("maadr")
      REQUEST "Adresse wurde als Vermittler eingetragen!","",2
      FILE "ADRESSEN"
      INDEX codeku.adressen
      SELECT KEY knr% LOCK FILE "ADRESSEN" INDEX codeku.adressen
      AAMitarbeiter.adressen = "j"
      STORE FILE "ADRESSEN"
    END IF 
  END IF 
  cuma% = codema.maadr
  CALL MAADR()
  FILE "ADRESSEN"
  INDEX adrind$$
 END SUB 



 REM KÅndigingsdatum/Ablaufdatum bei lebenden VertrÑgen auf 0 setzen, Originaldatum wird in Notiz eingetragen
 REM 31.08.2005
SUB KuendAuf0()
 REQUEST "Wollen Sie bei allen lebenden VertrÑgen das","Ablaufdatum auf Null setzen",130,req%
 IF req% <> 1 THEN GOTO ende310820051
 CALL DFile(3,"KVERTRAG" + _fpw$)
 FILE "kvertrag"
 INDEX lfdnr.kvertrag
 SELECT FIRST LOCK FILE "KVERTRAG"
 i% = 0
 g% = 0
 j% = RECCOUNT ("KVERTRAG")
 MOUSE OFF 
 WHILE NOT EOF ("KVERTRAG")
   i% = i% + 1
   IF CodeVstatus.kvertrag = 0 AND KÅndigung.kvertrag > 0 THEN 
     g% = g% + 1
     kuen$ = "Ablauf: " + DATE$ (KÅndigung.kvertrag,"0d.mm.yyyy")
     Notiz.kvertrag = kuen$ + Notiz.kvertrag
     KÅndigung.kvertrag = 0
     STORE FILE "KVERTRAG"
   END IF 
   SET STATUS STR$ (i%,",9999999") + " bearbeitet / " + STR$ (g%",9999999") + " geÑndert / von " + STR$ (j%",9999999")
   SELECT NEXT LOCK FILE "KVERTRAG"
 WEND 
 CALL Fehler("énderungen durchgefÅhrt","")
 MOUSE ON 
ende310820051: 
 END SUB 



 '      *****************************************
 '      ** Formular "MAIL-Netzwerknachrichten" **
 '      *****************************************
 '
  
SUB MAIL1a()
 IF disabled%("NETMAIL") THEN END SUB 
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\mail" + _fpw$)
 MOUSE OFF 
 _formend% = 0
 SET STATUS "Bereit"
 AKsub% = 0
 filtma% = GCodeMA%
 FILE "mail"
 INDEX codema.mail
 SELECT WHERE FILE "mail"
 WHILE _formend% = 0
   ON ERROR GOTO ErrorHandler
   AKsub% = 0
   IF FORM <> "NETMAIL" THEN 
     SET HEADING title$ + " - NETMAIL"
     OPEN FORM GOFFForm$ + "NETMAIL"
     SET f = Superbase.Form
     SET STATUS "NETMAIL"
     CALL MNNETMAIL()
     CALL NETMAILIntro()
     SET DISPLAY ON 
   END IF 
   MENU ON 
   MOUSE ON 
   FILE "mail"
   SET STATUS "Bereit"
   GAppName$ = _netpath$ + "DOCP\provis.pdf"
   CALL NETMAILUPDATE()
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE AKsub%
   CASE 1
     REM -- Filter auf anderen Mitarbeiter
     FILE "Supervis"
     REQUEST "Mitarbeiter auswÑhlen","",25,req%,filtma%,72,codema.Supervis,nachname.Supervis,vorname.Supervis INDEX nachname.supervis
     FILE "mail"
     IF filtma% > 0 AND req% = 1 THEN 
       CALL NETMAILIntro()
       FORM 
     END IF 
   CASE 2
     REM -- Seite 2
     _codemail% = codemail.mail
 
     FORM 2
   CASE 3
     REM -- lîschen Nachricht
     IF NOT disabled%("NACHRICHTLOESCHEN") THEN 
       codemail% = codemail.mail
       REQUEST "Nachricht lîschen?","",130,req%
       IF req% = 1 THEN 
         REMOVE FROM FILE "mail" WHERE codemail.mail = codemail%
         REQUEST "Nachricht gelîscht"
         CALL NETMAILIntro()
         FORM 1
       END IF 
     END IF 
   CASE 4
     REM -- allgemeine Auswertung
   CASE 5
     REM -- alle Dokumente auflisten
   CASE 6
   CASE 99
       MENU OFF 
       MOUSE ON 
       ENTER Nachricht.mail,0
       MENU ON 
   END SELECT 
 WEND 
 cuak% = 0
 IF FileChanged%("mail") = 1 THEN CALL FStore("mail")
 _formend% = 0
 filtma% = 0
 END SUB 
  
 
 ' Nachrichten-Intro
 ' ======================================================================
 
SUB NETMAILIntro()
 MOUSE OFF 
 FILE "mail"
 IF GMACodema% > 0 THEN 
   SELECT FIRST FILE "supervis" INDEX codema.supervis
   SELECT KEY GMACodema% FILE "supervis" INDEX codema.supervis
   filt$ = vorname.supervis + " " + nachname.supervis
   SELECT WHERE FILE "mail"
   filt1$ = "Select where Codema.mail = GMACodema% or codemavon.mail = GMACodema%"
   EXECUTE filt1$
   SELECT FORM FIRST 
 END IF 
 IF _codemail% <> 0 THEN 
   SELECT KEY _codemail% FILE "mail" INDEX codemail.mail
 ELSE 
   SELECT FIRST 
 END IF 
 FORM 
 MOUSE ON 
 END SUB 
 
 
 ' NachrichtEN Formular updaten
 ' ======================================================================
 
SUB NETMAILUPDATE()
 _codemail% = Codemail.mail
 SELECT KEY _codemail% FILE "mail" INDEX Codemail.mail
 FORM 
 END SUB 
 
 
 
SUB MNNETMAIL()
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
   
 
 ' allen Adressen einer Agentur, eine neue Agentur zuweisen
 ' code$="codema" fÅr Agentur1
 ' code$="codema2" fÅr Agentur2
 ' ======================================================================
SUB ChangeMA(code$)


     GAdrDat$ = "ADRESSEN"
     GConDat$ = "CONNECT"
     GTelDat$ = "TELEFON"
     GAkquiDat$ = "AKQUISE"
     GDokDat$ = "DOKUMENT"
     GADRStat$ = "ADRSTAT"

 CALL DFile(2,"OFFICE\" + "ADRHIS" + _fpw$)
 CALL DFile(2,"OFFICE\" + "ORT" + _fpw$)
 IF GADRDat$ LIKE "ADRESSEN" THEN 
   IF disabled%("ADRESSEN") THEN END SUB 
 END IF 
 IF GADRDat$ LIKE "ADRE1" THEN 
   IF disabled%("ADRE1") THEN END SUB 
 END IF 
 IF GADRDat$ LIKE "BCKONTAK" THEN 
   IF disabled%("BCKONTAK") THEN END SUB 
 END IF 
 IF GBENE% THEN 
   CALL DFile(2,"OFFICE\" + "ADRE1" + _fpw$)
   CALL DFile(2,"OFFICE\" + "AKQUI1" + _fpw$)
   CALL DFile(2,"OFFICE\" + "TELADR1" + _fpw$)
   CALL DFile(2,"OFFICE\" + "DOKADR1" + _fpw$)
 END IF 
 IF intverw.stamm = "j" OR GADRDat$ LIKE "BCKONTAK" THEN 
   CALL DFile(2,"OFFICE\" + "BCKONTAK" + _fpw$)
   CALL DFile(2,"OFFICE\" + "AKQUIBCK" + _fpw$)
   CALL DFile(2,"OFFICE\" + "TELBCK" + _fpw$)
   CALL DFile(2,"OFFICE\" + "DOKBCK" + _fpw$)
 END IF 
 CALL DFile(2,"OFFICE\" + "ADRESSEN" + _fpw$)
 CALL DFile(2,"OFFICE\" + "AKQUISE" + _fpw$)
 CALL DFile(2,"OFFICE\" + "AKTIONEN" + _fpw$)
 CALL DFile(2,"OFFICE\" + "TELEFON" + _fpw$)
 CALL DFile(2,"OFFICE\" + "DOKUMENT" + _fpw$)
 CALL DFile(2,"OFFICE\adrstat" + _fpw$)
 CALL DFile(2,"OFFICE\adrgrup" + _fpw$)
 IF OPEN ("adrtemp") THEN 
   IF RECCOUNT ("adrtemp") > 0 THEN REMOVE FROM FILE "adrtemp"
   REM CLOSE FILE "ADRTEMP"
 ELSE 
   CALL DFile(2,"OFFICE\adrtemp" + _fpw$)
   IF RECCOUNT ("adrtemp") > 0 THEN REMOVE FROM FILE "adrtemp"
 END IF 
 CALL DFile(2,"color" + _fpw$)
 CALL DFile(2,"OFFICE\" + GConDat$ + _fpw$)
 CALL DFile(2,"OFFICE\banken" + _fpw$)
 CALL DFile(3,"STAMM" + _fpw$)
 IF _projekt$ LIKE "PROV*" OR GAufrufproj$ LIKE "PROVIS" THEN 
   IF EXISTS (_netpath$ + "PROVIS\kvertrag.sbf") THEN CALL DFile(3,"KVERTRAG" + _fpw$)
   IF EXISTS (_netpath$ + "PROVIS\statukey.sbf") THEN CALL DFile(3,"STATUKEY" + _fpw$)
   IF EXISTS (_netpath$ + "PROVIS\vermoeg.sbf") THEN CALL DFile(3,"VERMOEG" + _fpw$)
   IF EXISTS (_netpath$ + "PROVIS\vorgang.sbf") THEN CALL DFile(3,"VORGANG" + _fpw$)
   IF EXISTS (_netpath$ + "PROVIS\maadr.sbf") THEN CALL DFile(3,"MAADR" + _fpw$)
   IF EXISTS (_netpath$ + "PROVIS\kukto.sbf") THEN CALL DFile(3,"KUKTO" + _fpw$)
   IF EXISTS (_netpath$ + "office\kvhis.sbf") THEN CALL DFile(2,"OFFICE\KVHIS" + _fpw$)
   IF GAFSK$ LIKE "TRUE" THEN 
     IF EXISTS (_netpath$ + "PROVIS\afsksut.sbf") THEN CALL DFile(3,"AFSKSUT" + _fpw$)
     IF EXISTS (_netpath$ + "PROVIS\afspsp.sbf") THEN CALL DFile(3,"AFSpsp" + _fpw$)
   END IF 
 END IF 
 IF MAKLER$ = "TRUE" AND (_projekt$ LIKE "PROV*" OR GAufrufproj$ LIKE "PROV*") THEN 
   IF EXISTS (_netpath$ + "PROVIS\inkstamm.sbf") THEN CALL DFile(3,"INKSTAMM" + _fpw$)
 END IF 


 REQUEST "Haben alle anderen User das Programm verlassen?","",135,req%
 IF req% <> 1 THEN 
   GOTO END080920051
 END IF 
 IF code$ = "codema" THEN CALL Fehler("WÑhlen Sie jetzt die Agentur1 aus, die ersetzt werden soll","")
 IF code$ = "codema2" THEN CALL Fehler("WÑhlen Sie jetzt die Agentur2 aus, die ersetzt werden soll","")
 vonma% = GetCodeMA%(_cuma%,0)
 vonma$ = Nachname.maadr + "," + vorname.maadr + "," + Agenturnr.maadr
 IF code$ = "codema" THEN CALL Fehler("WÑhlen Sie jetzt die Agentur1 aus, die NEU zugewiesen werden soll","")
 IF code$ = "codema2" THEN CALL Fehler("WÑhlen Sie jetzt die Agentur2 aus, die Neu zugewiesen werden soll","")
 zuma% = GetCodeMA%(_cuma%,0)
 zuma$ = Nachname.maadr + "," + vorname.maadr + "," + Agenturnr.maadr
 IF code$ = "codema" THEN CALL Fehler("Es soll de betreuende Agentur1 :" + vonma$ + " durch die Agentur: " + zuma$ + " ersetzt werden","")
 IF code$ = "codema2" THEN CALL Fehler("Es soll de betreuende Agentur2 :" + vonma$ + " durch die Agentur: " + zuma$ + " ersetzt werden","")
 REQUEST "Soll die Umweisung jetzt vorgenommen werden?","",135,req%
 IF req% <> 1 THEN 
   GOTO END080920051
 END IF 
 SELECT FIRST FILE "maadr" INDEX codema.maadr
 SELECT KEY zuma% FILE "maadr" INDEX codema.maadr
 fcode$ = code$ + ".Adressen"
 FILE "Adressen"
 INDEX codeku.adressen
 SELECT FIRST LOCK FILE "adressen"
 MOUSE OFF 
 i% = 0
 g% = 0
 j% = RECCOUNT ("ADRESSEN")
 WHILE NOT EOF ("ADRESSEN")
   i% = i% + 1
   IF fcode$$ = vonma% THEN 
     g% = g% + 1
     IF code$ = "codema" THEN 
       codema.adressen = zuma%
       AGNachname.gadrdat$ = Nachname.maadr
       AGVorname.gadrdat$ = vorname.maadr
       AGAGNr.gadrdat$ = Agenturnr.maadr
     END IF 
     IF code$ = "codema2" THEN 
       codema2.adressen = zuma%
       Agentur2.gadrdat$ = Nachname.maadr + "," + Vorname.maadr
       Agenturnr2.gadrdat$ = Agenturnr.maadr
     END IF 
     STORE FILE "ADRESSEN"
   END IF 
   SET STATUS STR$ (i%,",999999") + " von " + STR$ (j%,",99999999") + " / geÑndert: " + STR$ (g%,",999999")
   SELECT NEXT LOCK FILE "adressen"
 WEND 
 CALL Fehler("Umweisung beendet", STR$ (i%,",999999") + " von " + STR$ (j%,",99999999") + " / geÑndert: " + STR$ (g%,",999999"))
END080920051: 
 
 END SUB 





 ' persînliche Mitarbeitereinstellungen

SUB PersMASetup()
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(2,"OFFICE\adressen" + _fpw$)
 CALL DFile(2,"OFFICE\telefon" + _fpw$)
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 CALL DFile(2,"OFFICE\connect" + _fpw$)
 CALL DFile(2,"OFFICE\dokument" + _fpw$)
 CALL DFile(2,"OFFICE\adrhis" + _fpw$)
 CALL DFile(2,"OFFICE\kvhis" + _fpw$)

 IF disabled%("PSSETUP") THEN END SUB 
 
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "PSSETUP"
 IF eurosupport$ = "TRUE" THEN maske$ = "PSSETUP"
 FILE "PSSETUP"
 INDEX codema.PSSETUP
 IF NOT EXISTS (GMACodeMA%,codema.pssetup) THEN 
   SELECT FIRST FILE "supervis" INDEX codema.supervis
   SELECT KEY GMACodeMA% FILE "supervis" INDEX codema.supervis
   BLANK FILE "PSSetup"
   codema.pssetup = GMACodeMA%
   nachname.pssetup = nachname.supervis
   Vorname.pssetup = Vorname.supervis
   OldProdSu.pssetup = GOldProdSu$
   SofortFile.pssetup = GSofortFile$
   STORE FILE "pssetup"
 END IF 
 SELECT FIRST FILE "PSSETUP" INDEX codema.pssetup
 SELECT KEY GMACodema% FILE "PSSETUP" INDEX codema.pssetup
 aend% = 0
 WHILE _formend% = 0
   ON ERROR GOTO ErrorHandler
   SUPERVISsub% = 0
   IF FORM <> maske$ THEN 
     SET HEADING title$ + " - persînliche Mitarbeitereinstellungen"
     IF EXISTS (GOffFORM$ + maske$ + ".sbv") THEN 
       OPEN FORM GOffForm$ + maske$
     ELSE 
       OPEN FORM GOffForm$ + maske$
     END IF 
     SET f = superbase.form
    SET STATUS "persînliche Mitarbeitereinstellungen"
     SELECT FORM KEY GMACodeMA% FILE "PSSETUP" INDEX codema.PSSETUP
     FORM 
     CALL MNProgramm()
     REM CALL ButEnabled()
     REM FORM 
   END IF 
   MENU ON 
   MOUSE ON 
   FORM 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL PSelectPrev()
   CASE CrsRight%,PgDn%
     CALL PSelectNext()()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   CALL ClearKBDBuffer()
   SELECT CASE SUPERVISsub%
   CASE 1
     IF NOT disabled%("OUTLOOKEXPORT") THEN 
     REM export der Adressen die der user sehen darf, nach outlook
       t1$ = "Diese beiden Dateien dienen dann als Importdateien fÅr MS Outlook. (In MS Outlook MenÅ Datei/Importieren-Exportieren/Import aus anderen Programmen/Kommagetrennte Werte (Window))"
       t0$ = "Weiterhin werden alle nichterledigten Termine dieser Adressen in die Datei " + GMACodeDir$ + "outkal.csv exportiert."
       
       CALL Fehler("Es werden nachfolgend alle Adressen, auf die der Mitarbeiter Zugriff hat gesucht und aufbereitet!","")
       REQUEST "Sollen nur die Adressen und Termine eines","einzelnen Vermittlers exportiert werden?",130,req%
       MOUSE OFF 
       IF req% = 1 THEN 
         IF GASP% THEN 
           wks1% = Workstation%
           a% = SelectOffice%("BÅro-Auswahl","",1,wks1%)
           MOUSE ON 
           IF a% <> - 1 THEN 
             zzz% = a%
             codema% = GetCodeMA%(cuma%,zzz%)
             IF codema% < 1 THEN 
               GOTO outlexp290920051
             END IF 
             IF GMASuperCount% > 0 THEN 
               IF IsMASuper%(codema%) <> - 1 THEN 
                 CALL Fehler("Sie haben keine Berechtigung fÅr diese Agentur Daten zu exportieren","")
                 GOTO outlexp290920051
               END IF 
             END IF 
           ELSE 
             CALL Fehler("MS Outlook Export abgebrochen!","Sie haben keinen Mitarbeiter ausgewÑhlt")
             GOTO outlexp290920051
           END IF 
         ELSE 
           codema% = GetCodeMA%(0,Workstation%)
         END IF 
       ELSE 
         codema% = 0
         IF GASP% THEN 
           IF workstation% = 0 THEN 
             REQUEST "Sollen nur die Adressen und Termine eines","einzelnen BÅros exportiert werden?",130,req%
             wkswahl% = 0
             IF req% = 1 THEN 
               wks1% = Workstation%
               a% = SelectOffice%("BÅro-Auswahl","",1,wks1%)
               wkswahl% = a%
               IF wkswahl% = - 1 THEN 
                 CALL Fehler("MS Outlook Export abgebrochen!","Sie haben kein BÅro ausgewÑhlt")
                 GOTO outlexp290920051
               END IF 
             ELSE 
               codema% = 0
             END IF 
           ELSE 
             wks1% = Workstation%
             a% = SelectOffice%("BÅro-Auswahl","",1,wks1%)
             wkswahl% = a%
             IF wkswahl% = - 1 THEN 
               CALL Fehler("MS Outlook Export abgebrochen!","Sie haben kein BÅro ausgewÑhlt")
               GOTO outlexp290920051
             END IF 
           END IF 
            
         END IF 
       END IF 
       IF RECCOUNT (GAdrDat$) < 30000 THEN 
         REDIM ADRFound$( RECCOUNT (GAdrDat$))
       ELSE 
         REDIM ADRFound$(30000)
       END IF 
       FILE GAdrDat$
       INDEX fiimmak.GAdrDat$
       SELECT FIRST 
       SELECT KEY "j" FILE GAdrDat$ INDEX fiimmak.GAdrDat$
       a% = 0
       WHILE NOT EOF (GAdrDat$) AND fiimmak.GAdrDat$ = "j"
         IF codema% > 0 THEN 
           IF codema.GAdrDat$ = codema% THEN 
             sok% = - 1
             IF GMASuperCount% > 0 THEN 
               IF IsMASuper%(codema.GADRDAT$) <> - 1 THEN sok% = 0
             END IF 
             IF sok% THEN 
               SET STATUS STR$ (a%) + " Adressen gefunden " + nachname.GADRDat$
               ADRFound$(a%) = STR$ (codeku.GAdrDat$,"000000")
               a% = a% + 1
             END IF 
           END IF 
         ELSE 
           IF GASP% THEN 
               IF wkswahl% = 0 THEN 
                 sok% = - 1
                 IF GMASuperCount% > 0 THEN 
                   IF IsMASuper%(codema.GADRDAT$) <> - 1 THEN sok% = 0
                 END IF 
                 IF sok% THEN 
                   SET STATUS STR$ (a%) + " Adressen gefunden " + nachname.GADRDat$
                   ADRFound$(a%) = STR$ (codeku.GAdrDat$,"000000")
                   a% = a% + 1
                 END IF 
               ELSE 
                 sok% = - 1
                 wks% = wkswahl%
                 FOR ii% = 0 TO VisCount% - 1' Fall externes BÅro
                    wks% = VisOff%(ii%)
                    aa% = IsWksVisible%(wks%)
                    IF aa% = - 1 AND Workstation.GADRDat$ = wks% THEN 
                      sok% = - 1
                      ii% = VisCount%
                    ELSE 
                      sok% = 0
                    END IF 
                 NEXT ii%
                 IF GMASuperCount% > 0 THEN 
                   IF IsMASuper%(codema.GADRDAT$) <> - 1 THEN sok% = 0
                 END IF 
                 IF sok% THEN 
                   SET STATUS STR$ (a%) + " Adressen gefunden " + nachname.GADRDat$
                   ADRFound$(a%) = STR$ (codeku.GAdrDat$,"000000")
                   a% = a% + 1
                 END IF 
               END IF 
           ELSE 
             sok% = - 1
             IF GMASuperCount% > 0 THEN 
               IF IsMASuper%(codema.GADRDAT$) <> - 1 THEN sok% = 0
             END IF 
             IF sok% THEN 
               SET STATUS STR$ (a%) + " Adressen gefunden " + nachname.GADRDat$
               ADRFound$(a%) = STR$ (codeku.GAdrDat$,"000000")
               a% = a% + 1
             END IF 
           END IF 
         END IF 
         SET STATUS STR$ (a%) + " Adressen gefunden " + nachname.GADRDat$
         SELECT NEXT FILE GAdrDat$ INDEX fiimmak.GAdrDat$
       WEND 
       ADRFound$(a%) = ""
       
       REQUEST "Die Daten wurden zur öbergabe an MS Outlook aufbereitet!","Soll die öbergabe erfolgen ?",130,req%
       IF req% = 1 THEN 
         REM CALL ExpOutlook()
         MOUSE OFF 
         CALL ADRExpOutl(0,a%)
         MOUSE ON 
         CALL Fehler("Export nach MS Outlook beendet","")
       END IF 
     END IF 
outlexp290920051: 
   CASE 99
     MENU OFF 
     CALL ButDesabled()
     MOUSE ON 
     ENTER nachname.PSSETUP,0
     aend% = 1
     CALL ButEnabled()
     f.suchen.visible = 0
     f.suchen.enabled = 0
     f.links1.enabled = 0
     f.rechts1.enabled = 0
     f.links1.visible = 0
     f.rechts1.visible = 0
     MENU ON 
     IF abbruch% = - 1 THEN 
       SELECT KEY GMACodema% FILE "PSSETUP" INDEX codema.PSSETUP
       FORM 
       abbruch% = 0
     END IF 
 END SELECT 
 IF aend% = 1 THEN 
   aend% = 0
 END IF 
end150620051: 
 SET STATUS ""
 WEND 
 _formend% = 0
 IF MOD ("PSSETUP") OR NEW ("PSSETUP") THEN CALL FStore("PSSETUP")
 GOldProdSu$ = OldProdSu.pssetup
 GSofortFile$ = SofortFile.pssetup
 GnurSpart% = GnurSpart.pssetup
 GSpGSparte% = GSpGSparte.pssetup
 GNoAbsendInfo% = NoAbsendInfo.pssetup
 GoldScanVerf$ = oldScanVerf.pssetup
 END SUB 
 



 '      ********************************************************
 '      ** Routinen fÅr Formular "GEADR" - Gesellschaftsdaten ** 
 '      ********************************************************
 
SUB GEADR()
 IF disabled%("GEADR") THEN END SUB 
 CALL DFile(3,"Kgeadr" + _fpw$)
 CALL DFile(3,"FONDS" + _fpw$)
 CALL DFile(3,"TARIF" + _fpw$)
 CALL DFile(3,"VPRODUKT" + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 CALL DFile(3,"formular" + _fpw$)
 CALL DFile(3,"spgruppe" + _fpw$)
 CALL DFile(3,"kvertrag" + _fpw$)
 CALL DFile(3,"MAADR" + _fpw$)
 CALL DFile(3,"VProdukt" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$)
 CALL DFile(3,"geadr2" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"geadrums" + _fpw$)
 CALL DFile(3,"buchges" + _fpw$)
 CALL DFile(3,"spgruppe" + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 CALL DFile(3,"statukey" + _fpw$)
 CALL DFile(3,"GEGRUP" + _fpw$)
 CALL DFile(2,"OFFICE\DOKGE" + _fpw$)
 IF NOT EXISTS ("<ohne Zuordnung>",Gesellschaft.geadr) THEN 
   BLANK FILE "geadr"
   codege.geadr = 0
   Gesellschaft.geadr = "<ohne Zuordnung>"
   STORE FILE "GEADR"
   UNLOCK CURRENT FILE "geadr"
   UNLOCK FILE "geadr"
 END IF 
 IF RECCOUNT ("geadr") < 1 THEN CALL GEADRNeu()
 FILE "GEADR"
 _formend% = 0
 maske$ = "GEADR"
 IF GLundWrigg$ = "TRUE" THEN maske$ = "RGEADR"
 IF GFSC% = - 1 THEN maske$ = "GEADRF"
 WHILE _formend% = 0
   ON ERROR GOTO ErrorHandler
   IF UCASE$ ( FORM ) <> maske$ THEN 
     SET HEADING title$ + " - Gesellschaften"
     IF EXISTS (GPrjForm$ + maske$ + ".sbv") THEN 
       OPEN FORM GPrjForm$ + maske$
     ELSE 
       OPEN FORM GPrjForm$ + maske$
     END IF 
     REM OPEN FORM "GEADR"
     SET f = Superbase.Form
     GAppName$ = _netpath$ + "DOC\gesell.pdf"
     CALL GEADRIntro()
     CALL MNGEADR()
     SET STATUS "Gesellschaften"
   END IF 
   MENU ON 
   MOUSE ON 
   GEADRsub% = 0
   REM MAKLER$ = "TRUE"
   CALL ClearKBDBuffer()
 sq$ = " Schadensquote: " + LTRIM$ ( STR$ (Schadquote.GEADR,",9999.0000"))
 st$ = " Stornoquote: " + LTRIM$ ( STR$ (Stornoquote.GEADR,",9999.0000"))
   IF workstation% = 0 THEN SET STATUS "Anzahl Gesellschaften: " + STR$ ( RECCOUNT ("geadr"),",99999") + sq$ + st$
   FORM 
   f.abbruch.visible = 0
   f.abbruch.enabled = 0
   f.suchen.enabled = - 1
   f.suchen.visible = - 1
   IF MAKLER$ <> "TRUE" THEN 
     f.kosum.visible = 0
     f.einsko.visible = 0
   ELSE 
     f.kosum.visible = - 1
     f.einsko.visible = - 1
   END IF 
   FILE "geadr"
   IF ag$ = "j" THEN 
     f.neu.enabled = 0
     f.neu.visible = 0
     f.bearb.enabled = 0
     f.bearb.visible = 0
     f.sichern.enabled = 0
     f.sichern.visible = 0
   END IF 
   IF iim.stamm LIKE "j" THEN 
     f.xmlexp.enabled = - 1
     f.xmlexp.visible = - 1
   ELSE 
     f.xmlexp.enabled = 0
     f.xmlexp.visible = 0
   END IF 
   IF GBVF$ LIKE "TRUE" THEN 
     f.gesser.visible = 0
     f.gesser.enabled = 0
   END IF 
   IF MNdisabled%("VERTRINHAUSEDIT") OR MNdisabled%("VERTRINHAUSNEW") OR MNdisabled%("VERTRINHAUSSEE") THEN 
     f.inhaus.enabled = 0
   ELSE 
     f.inhaus.enabled = - 1
   END IF 
   CALL GEADRUpdate()
   MOUSE ON 
   IF GEADRsub% <> 99 THEN WAIT KEY OR MENU OR MOUSE FOR 600
   REM ** Tastaturabfrage
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL PSelectPrev()
   CASE CrsRight%,PgDn%
     CALL PSelectNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE GEADRsub%
   CASE 102
     IF land.geadr <> "" THEN 
       IF land.geadr LIKE "deutsch*" OR land.geadr LIKE "brd*" OR land.geadr LIKE "germa*" OR land.geadr LIKE "D" THEN 
         land$ = "Germany"
       ELSE 
         land$ = FN ansi(land.geadr)
       END IF 
     ELSE 
       land$ = "Germany"
     END IF 
     nr$ = "http://maps.google.de/?Land=" + land$ + "&PLZ=" + plz.geadr + "+" + (ort.geadr) + "&Strasse=" + (stra·e.geadr) + "&q=" + (stra·e.geadr) + "%2c+" + plz.geadr + "+" + (ort.geadr) + "%2c"
     IF NOT EXISTS (GMACodeDir$ + "openurl.exe") THEN COPY _netpath$ + "local\openurl.exe" TO GMACodeDir$ + "openurl.exe"
     prg$ = GMACodeDir$ + "openurl.exe"
     IF EXISTS (GMACodeDir$ + "opurl.bat") THEN DELETE GMACodeDir$ + "opurl.bat"
     OPEN GMACodeDir$ + "opurl.bat" FOR APPEND 
     ? "echo OFF"
     ? prg$ + " " + nr$
     CLOSE OUTPUT 
     COPY FROM nr$
     CALL Fehler("Bitte im geîffneten Browser in der Adress-Eingabezeile STRG+V und anschlie·end ENTER drÅcken, dann wird Ihnen in Google-Maps die geografische Position der Adresse angezeigt!","")
     CALL (GMACodeDir$ + "opurl.bat"),0
   CASE 1
     IF NOT OPEN ("kvertrag") THEN CALL DFile(3,"kvertrag" + _fpw$)
     IF EXISTS (codege.geadr,codege.kvertrag) THEN 
       CALL VertrUniRep(0,0,0,codege.geadr,0,0,0,0,1, - 1,tarif%)
       REM CALL LIST4()
     ELSE 
       CALL Fehler("Es kann leider keine VertragsÅbersicht erzeugt werden, da zu dieser Gesellschaft kein Vertrag existiert!","")
     END IF 
   CASE 2
     IF ag$ <> "j" THEN 
       CALL GESUMS()
     ELSE 
       CALL Fehler("Diese Funktion steht unter der Agenturversion nicht zur VerfÅgung","")
     END IF 
   CASE 3
     IF ag$ <> "j" THEN 
       CALL GESEinzel()
     ELSE 
       CALL Fehler("Diese Funktion steht unter der Agenturversion nicht zur VerfÅgung","")
     END IF 
   CASE 4
     REM Serienbrief
     codege1% = codege.geadr
     GDokDat$ = "Dokument"
     CALL GESerie()
     SELECT KEY codege1% FILE "geadr" INDEX codege.geadr
     gesser% = 0
   CASE 5
     REM Maklerinkasso, also welche BetrÑge an die Gesellschaft abzufÅhren sind
   CASE 6
     REM Kundeninkasso, also die BeitrÑge vom Kunden einzuziehen sind
     CALL LundInkasso(codege.geadr)
   CASE 7
     cuge1% = codege.geadr
     IF codege.geadr < 1 OR gesellschaft.geadr LIKE "<ohne*" THEN 
       CALL Fehler("Dokumente sind fÅr diese Gesellschaft nicht verfÅgbar!","")
     ELSE 
       codege% = codege.geadr
       GADRDat$ = "GEADR"
       GADRUni$ = "GEADR"
       GDokDat$ = "DOKGE"
       CALL ADRDokUni("codege.geadr")
     END IF 
     cuge% = cuge1%
     GADRDat$ = "ADRESSEN"
     GDokDat$ = "DOKUMENT"
   CASE 8
     REM Statistik
     IF disabled%("GEADRSTATISTIK") OR ag$ = "j" THEN 
     ELSE 
       IF Gesellschaft.GEADR <> "" THEN 
         CALL MNProgramm()
         CALL MNHilfe(2)
         FORM 3
       END IF 
     END IF 
   CASE 9
     IF codege.geadr < 1 OR gesellschaft.geadr LIKE "<ohne*" THEN 
     ELSE 
       voncodege% = codege.geadr
       cuge% = codege.geadr
       IF NOT disabled%("GEADRFILIALE") THEN 
         IF NOT EXISTS (voncodege%,voncodege.geadr2) THEN 
           REQUEST "Es existieren noch keine Filialadressen?","Neue Adresse anlegen?",130,req%
           IF req% = 1 THEN 
             BLANK FILE "geadr2"
             voncodege.geadr2 = voncodege%
             codege2.geadr2 = SER ("GEADR2",1)
             Gesellschaft.geadr2 = "Neu"
             Gesellschaft2.geadr2 = Gesellschaft.geadr
             STORE FILE "geadr2"
             CALL GEADR2()
           END IF 
         ELSE 
           CALL GEADR2()
         END IF 
       END IF 
     END IF 
   CASE 10
     REM Seite zu Provisionsvereinbarungen
     ok% = - 1
     IF ag$ = "j" THEN 
       ok% = 0
       CALL Fehler("Der Zugriff auf diese Funktion ist fÅr die Agenturversion nicht gestattet!","")
     END IF 
     IF gesellschaft.geadr LIKE "<ohne*" THEN 
       ok% = 0
       CALL Fehler("Der Zugriff auf diese Funktion ist fÅr die Gesellschaft <ohne Zuordnung> nicht gestattet!","")
     END IF 
     IF disabled%("GEADRPROV") THEN 
       OK% = 0
     END IF 
     IF ok% = - 1 THEN 
       MENU OFF 
       CALL MNProgramm()
       CALL MNHilfe(2)
       MENU ON 
       FORM 4
     END IF 
   CASE 99
     REM 110197
     IF codege.geadr = 0 THEN 
       CALL Fehler("Die Gesellschaft <ohne Zuordnung> darf nicht bearbeitet werden, um eine neue Gesellschaft anzulegen drÅcken Sie bitte auf den Button NEU !","")
       GOTO e091120052
     END IF 
     IF disabled%("GEADRBEARB") OR ag$ = "j" THEN 
     ELSE 
       MOUSE ON 
       MENU OFF 
       IF RECCOUNT ("geadr") = 0 THEN CALL GEADRNeu()
       IF PAGE = 1 THEN 
         REM 101296
         _gesold$ = Gesellschaft.geadr
         _gesold1$ = Gesellschaft2.geadr
         _gesstra·e$ = Stra·e.geadr
         _Gesplz$ = PLZ.Geadr
         _Gesort$ = ort.geadr
         _GesLand$ = land.geadr
 
         CALL ButDesabled()
         f.notiz.enabled = 0
         f.vertragsuebersicht.enabled = 0
         f.xmlexp.enabled = 0
         f.vereinb.enabled = 0
         f.gesser.enabled = 0
         f.filiale.enabled = 0
         f.dokus.enabled = 0
         f.statistik.enabled = 0
         ENTER gesellschaft.geadr,0
         CALL ButEnabled()
         f.notiz.enabled = - 1
         f.vertragsuebersicht.enabled = - 1
         f.vereinb.enabled = - 1
         f.gesser.enabled = - 1
         f.filiale.enabled = - 1
         f.dokus.enabled = - 1
         f.statistik.enabled = - 1
         IF iim.stamm LIKE "j" THEN 
           f.xmlexp.enabled = - 1
           f.xmlexp.visible = - 1
         ELSE 
           f.xmlexp.enabled = 0
           f.xmlexp.visible = 0
         END IF 
       ELSE 
         IF PAGE = 2 THEN 
           ENTER postanschrift.geadr,0
         END IF 
         IF PAGE = 4 THEN 
           ENTER ProvVereinb1.geadr,0
         END IF 
       END IF 
     END IF 
     IF ag$ LIKE "j" THEN CALL Fehler("Diese Funktion steht unter der Agenturversion nicht zur VerfÅgung","")
e091120052: 
   CASE 100
     REM GesellschaftsÅbersicht
     cuge% = codege.geadr
     IF disabled%("GEADRLIST") THEN 
     ELSE 
       CALL LGEADR()
     END IF 
     SELECT FIRST FILE "geadr" INDEX codege.geadr
     SELECT KEY cuge% FILE "geadr" INDEX codege.geadr
   CASE 101
     REM Vertragssuche
     cuge% = codege.geadr
     CALL UnisuKv(cuge%,"codege")
     SELECT FIRST FILE "geadr" INDEX codege.geadr
     SELECT KEY cuge% FILE "geadr" INDEX codege.geadr
   END SELECT 
   IF abbruch% = - 1 THEN 
     SELECT KEY codege.geadr FILE "geadr" INDEX codege.geadr
     FORM 
     abbruch% = 0
   END IF 
   REM CALL BMCheckMail()
   MENU ON 
 WEND 
 _formend% = 0
 cuge% = codege.geadr
 END SUB 
 
SUB LFGEADR(codege%)
   IF disabled%("GEADRLIST") THEN END SUB 
   CALL PRep("LFGEADR")
   HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
   END HEADING 
 
   AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
   END SELECT 
 
   SET QUERY ON 
   SET QUERY LOCK OFF 
   ON ERROR GOTO endgeali08120032
     ueberschr$ = "FilialÅbersicht Gesellschaft " + Gesellschaft.geadr
     SELECT ;
       ORDER REPORT Gesellschaft.GEADR2
       WHERE Gesellschaft.geadr2 <> "<ohne Zuordnung>" AND vonCodege.geadr2 = codege%
       TO ASK 
     END SELECT 
endgeali08120032: 
 ON ERROR GOTO ErrorHandler 
 END SUB 
 

SUB GePostGen(CodeGE%)
 REQUEST "Wollen Sie die Postanschrift neu erzeugen lassen?","",130,req%
 IF req% = 1 THEN 
   SELECT FIRST FILE "geadr" INDEX codege.geadr
   SELECT KEY codege% LOCK FILE "geadr" INDEX codege.geadr
         p$ = ""
         IF gesellschaft2.geadr <> "" THEN 
           p$ = p$ + LTRIM$ (gesellschaft2.geadr) + CHR$ (13) + CHR$ (10)
         END IF 
         IF gesellschaft.geadr <> "" THEN 
           p$ = p$ + LTRIM$ (gesellschaft.geadr) + CHR$ (13) + CHR$ (10)
         END IF 
         p$ = p$ + Stra·e.geadr + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + plz.geadr + " " + Ort.geadr + CHR$ (13) + CHR$ (10) + land.geadr + CHR$ (13) + CHR$ (10)
         Postanschrift.geadr = p$
         STORE FILE "geadr"
   SELECT FIRST FILE "geadr" INDEX codege.geadr
   SELECT KEY codege% LOCK FILE "geadr" INDEX codege.geadr
 END IF 
 END SUB 

SUB LGEADR()
 codege% = codege.geadr
 MOUSE OFF 
 IF disabled%("GEADRLIST") THEN END SUB 
 DIM Gesell$( RECCOUNT ("GEADR"))
 DIM GesellGr$( RECCOUNT ("GEGRUP"))

 a% = 0
 FILE "GEGRUP"
 INDEX keyword.GEGRUP
 prompt$ = "ZZZZZZZ"
 SELECT FIRST 
 WHILE NOT EOF ("GEGRUP")
   IF keyword.geGRUP <> "<ohne Zuordnung>" THEN 
     GesellGr$(a%) = keyword.GEGRUP
     REM IF CodeGE.GEADR = codege% THEN prompt$ = Gesell$(a%)
     a% = a% + 1
   END IF 
   SELECT NEXT 
 WEND 


 a% = 0
 FILE "GEADR"
 INDEX CodeGE.GEADR
 prompt$ = "ZZZZZZZ"
 SELECT FIRST 
 WHILE NOT EOF ("GEADR")
   IF Gesellschaft.geadr <> "<ohne Zuordnung>" THEN 
     Gesell$(a%) = Gesellschaft.GEADR + IF (Gesellschaft2.GEADR <> "",", " + Gesellschaft2.GEADR,"") + SPACE$ (120) + STR$ (CodeGE.GEADR,"000000")
     IF CodeGE.GEADR = codege% THEN prompt$ = Gesell$(a%)
     a% = a% + 1
   END IF 
   SELECT NEXT 
 WEND 
 Auswahl$ = prompt$
 opt% = 1
 MOUSE ON 
 CREATE DIALOG "MALIST",0,0,195,176,"Gesellschaften","MS Sans Serif",8
 ADD DIALOG "MALIST",4,0,0,195,141,0,""
 ADD DIALOG "MALIST",9,5,10,20,23,2
 ADD DIALOG "MALIST",5,30,11,158,24,0,"Ausgabe der GesellschaftsÅbersicht"
 ADD DIALOG "MALIST",5,30,24,156,26,0,"Bitte wÑhlen Sie aus, ob Sie die Daten einer einzelnen oder aller Gesellschaften oder einer Gesllschaftsgruppe ausgeben wollen."
 ADD DIALOG "MALIST",5,30,54,44,10,0,"Ausgabe fÅr"
 ADD DIALOG "MALIST",3,30,64,78,12,0,"alle Gesellschaften",1,opt%
 ADD DIALOG "MALIST",3,30,76,128,12,0,"einzelne Gesellschaft",2,opt%
 ADD DIALOG "MALIST",3,30,104,128,12,0,"eine Gesellschaftsgruppe",3,opt%
 ADD DIALOG "MALIST",8,40,90,145,50,259,2,Auswahl$,Gesell$
 
 ADD DIALOG "MALIST",8,40,116,145,50,259,2,AuswahlA$,GesellGr$
 ADD DIALOG "MALIST",1,40,148,55,15,1,"&OK",1,1
 ADD DIALOG "MALIST",1,96,148,55,15,0,"&Abbrechen",0,0
 DIALOG "MALIST",req%
 REMOVE DIALOG "MALIST"
 IF req% = 1 THEN 
   SELECT FIRST FILE "supervis" INDEX codema.supervis
   SELECT KEY GMACodeMA% FILE "supervis" INDEX codema.supervis
   
   testgruppe$ = AuswahlA$
   CALL PRep("LGEADR")
   fussma$ = "gedruckt durch: " + Name.supervis + " am " + DATE$ ( TODAY ,"0d.mm.yyyy") + " um " + TIME$ ( NOW ,"hh:mm") + " Uhr"
   HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
   END HEADING 
   FOOTING 1
     SET REPORT PAGE "F_PAGE"
     OUTPUT REPORT PAGE 
   END FOOTING 
   AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
   END SELECT 
 
   SET QUERY ON 
   SET QUERY LOCK OFF 
   ON ERROR GOTO endgeali090920032
   IF opt% = 1 THEN 
     ueberschr$ = "GesellschaftsÅbersicht alle Gesellschaften"
     SELECT ;
       ORDER REPORT Gesellschaft.GEADR
       WHERE Gesellschaft.geadr <> "<ohne Zuordnung>"
       TO ASK 
     END SELECT 
   END IF 
   IF opt% = 2 THEN 
     ueberschr$ = "GesellschaftsÅbersicht aktuelle Gesellschaft"
     SELECT ;
       ORDER REPORT Gesellschaft.GEADR
       WHERE Gesellschaft.geadr <> "<ohne Zuordnung>" AND codege.geadr = VAL ( RIGHT$ (Auswahl$,6))
       TO ASK 
     END SELECT 
   END IF 
   IF opt% = 3 THEN 
     ueberschr$ = "GesellschaftsÅbersicht Gesellschaftsgruppe " + AuswahlA$
     SELECT ;
       ORDER REPORT Gesellschaft.GEADR
       WHERE Gesellschaft.geadr <> "<ohne Zuordnung>" AND GEGruppe.geadr LIKE testgruppe$
       TO ASK 
     END SELECT 
   END IF 
 END IF 
endgeali090920032: 
 ON ERROR GOTO ErrorHandler
 END SUB 
 
 
 ' GEADR Intro
 ' =======================================================================
 
SUB GEADRIntro()
 
 INDEX Gesellschaft.geadr
 IF cuge% <> 0 THEN 
   SELECT KEY cuge% FILE "geadr" INDEX CodeGE.geadr
 ELSE 
   SELECT FIRST 
 END IF 
 FORM 
 INDEX gesellschaft.geadr
 END SUB 
 
SUB GEADRUpdate()
 IF EXISTS (codege.geadr,codeku.dokge) THEN 
   doks$ = "Dokumente Æ"
 ELSE 
   doks$ = "Dokumente"
 END IF 
 IF EXISTS (codege.geadr,voncodege.geadr2) THEN 
   filiale$ = "Filialen Æ"
 ELSE 
   filiale$ = "Filialen"
 END IF 
 IF EXISTS (codege.geadr,codege.geadrums) THEN 
   kosum$ = "&KontosummenÅbersicht Æ"
 ELSE 
   kosum$ = "&KontosummenÅbersicht"
 END IF 
 IF EXISTS (codege.geadr,codege.buchges) THEN 
   einsko$ = "&EinzelkontenÅbersicht Æ"
 ELSE 
   einsko$ = "&EinzelkontenÅbersicht"
 END IF 
 IF ProvVereinb1.geadr <> "" OR ProvVereinb2.geadr <> "" THEN 
   vereinb$ = "Vereinb. Æ"
 ELSE 
   vereinb$ = "Vereinbarungen"
 END IF 
 FORM 
 END SUB 
 
 
 
 
SUB BGEADRIntro()
   
   FILE "KGeadr"
   INDEX Gesellschaft.kgeadr
   
   SELECT FORM KEY cuvt% FILE "kgeadr" INDEX CodeVT.kgeadr
   SELECT FORM KEY cuvt% FILE "Kvertrag" INDEX lfdnr.kvertrag
   REM SELECT FIRST 
 
 FORM 
 REM INDEX gesellschaft.Kgeadr
 END SUB 
 
 
 
 
 
 
 ' GEADR Neu
 ' =======================================================================
 
SUB GEADRNeu()
 REM 110197
 IF disabled%("GEADRNEU") THEN END SUB 
 FILE "geadr"
 IF gesellschaft.geadr <> "" THEN CALL FStore( FILE )
 BLANK FILE "geadr"
 SET STATUS "Datensatz neu angelegt..."
 CodeGE% = SER ("geadr",1)
 CodeGE.geadr = CodeGE%
 gesellschaft.geadr = "NEU"
 zero.geadr = 0
 CALL QuickStore("geadr")
 SELECT FORM KEY codege% FILE "geadr" INDEX codege.geadr
 FORM 
 GEADRsub% = 99
 MOUSE ON 
 END SUB 
 
 
 ' GEADR Suchen
 ' =======================================================================
 
SUB GEADRSuchen()
 IF GNeuSuGeadr$ = "j" THEN GCodieRuf1% = 0
 cuge% = codege.geadr
 FILE "Geadr"
 IF ( MOD ("geadr") OR NEW ("geadr")) AND gesellschaft.geadr <> "" THEN CALL FStore("GEADR")
 
 IF GNeuSuGeadr$ = "j" THEN GCodieRuf1% = 0
 REQUEST "Mîchten Sie Åber Gesellschaftsgruppen suchen?","",135,req%
 IF req% = 1 THEN 
   o1NeuSuGeadr$ = GNeuSuGeadr$
   GNeuSuGeadr$ = "j"
   rep% = GetCodeGE1%(cuge%)
   GNeuSuGeadr$ = o1NeuSuGeadr$
 ELSE 
   rep% = GetCodeGE%(cuge%)
 END IF 
 IF GNeuSuGeadr$ = "j" THEN GCODieRuf% = - 1
 IF rep% <> 0 THEN cuge% = rep%
 SELECT KEY cuge% INDEX codege.geadr
 SET INDEX Gesellschaft.geadr
 INDEX gesellschaft.geadr
 MOUSE ON 
 FORM 
 END SUB 
  

SUB GEADRSuchenE()
 cuge% = codege.geadr
 FILE "Geadr"
 IF ( MOD ("geadr") OR NEW ("geadr")) AND gesellschaft.geadr <> "" THEN CALL FStore("GEADR")
 rep% = GetCodeGEE%(cuge%)
 IF rep% <> 0 THEN cuge% = rep%
 SELECT KEY cuge% INDEX codege.geadr
 SET INDEX Gesellschaft.geadr
 INDEX gesellschaft.geadr
 MOUSE ON 
 FORM 
 END SUB 
 
 
SUB GEADRSichern()
 CALL FStore("GEADR")
 ENTER END 
 END SUB 
 
FUNCTION GetCodeGE%(prompt%)
 DIM Gesellschaften$( RECCOUNT ("GEADR") + 1)
 DIM Auswahl$(1)
 GCodieRuf1% = 0
 cfile$ = FILE 
 _pos% = CodeGE.GEADR
 REM Gesellschaften$(0) = "<keine Zuordnung>" + SPACE$ (120) + "000000"
 alle$ = "n"
AnfAlle260920071: 
 FILE "GEADR"
 INDEX Gesellschaft.GEADR
 SELECT FIRST FILE "GEADR" INDEX Gesellschaft.GEADR
 a% = 0
 prompt$ = ""
 MOUSE OFF 
 WHILE NOT EOF ("GEADR")
   sok% = - 1
   IF alle$ = "n" THEN 
     sok$ = NoAnzeige.geadr
     IF NoAnzeige.geadr LIKE "j" THEN sok% = 0
   END IF 
   IF inhouse% = 1 THEN 
     IF Inhaus.geadr <> 1 THEN sok% = 0
   ELSE 
     IF Inhaus.geadr = 1 THEN sok% = 0
   END IF 
   IF alle$ = "j" THEN 
     sok% = - 1
   END IF 
   IF sok% = - 1 THEN 
     Gesellschaften$(a%) = LTRIM$ (Gesellschaft.GEADR)
     IF LTRIM$ (Gesellschaft2.GEADR) <> "" THEN 
       Gesellschaften$(a%) = Gesellschaften$(a%) + "/" + LTRIM$ (Gesellschaft2.GEADR)
     END IF 
     IF NoAnzeige.geadr LIKE "j" THEN 
       Gesellschaften$(a%) = Gesellschaften$(a%) + " ****," + LTRIM$ (PLZ.GEADR) + " " + LTRIM$ (Ort.GEADR) + ", " + LTRIM$ (Stra·e.GEADR) + ", " + LTRIM$ (land.GEADR)
     ELSE 
       Gesellschaften$(a%) = Gesellschaften$(a%) + "," + LTRIM$ (PLZ.GEADR) + " " + LTRIM$ (Ort.GEADR) + ", " + LTRIM$ (Stra·e.GEADR) + ", " + LTRIM$ (land.GEADR)
     END IF 
     IF Inhaus.geadr = 1 THEN 
       Gesellschaften$(a%) = Gesellschaften$(a%) + " ++++INHOUSE++++ "
     END IF 
     Gesellschaften$(a%) = Gesellschaften$(a%) + SPACE$ (220) + STR$ (CodeGE.GEADR,"000000")
     IF CodeGE.GEADR = prompt% THEN prompt$ = Gesellschaften$(a%)
     IF GCODIE% = - 1 AND GNeuSuGeadr$ = "j" THEN 
       IF GCodieRuf1% = 0 THEN 
         CALL SearchInitGE1("geadr")
       END IF 
     END IF 
     IF GCODIE% = - 1 AND GNeuSuGeadr$ = "j" THEN CALL SearchVorbGE1("GEADR")
     a% = a% + 1
   END IF 
   SELECT NEXT FILE "GEADR" INDEX Gesellschaft.GEADR
   
 WEND 
 GetCodeGE% = 0
 IF a% <> 0 THEN 
   IF GCODIE% = - 1 AND GNeuSuGeadr$ = "j" THEN 
     REM CALL Fehler("","")
     IF alle$ = "n" THEN 
       req3% = CALL ("_SearchShow",c$)
     ELSE 
      req3% = CALL ("_SearchReShow",c$)
     END IF 
     IF VAL (c$) <> 0 THEN 
       GetCodeGE% = VAL (c$)
       IF GetCodeGE% > 0 THEN 
         SELECT KEY GetCodeGE% FILE "GEADR" INDEX CodeGE.GEADR
       END IF 
     ELSE 
       IF req3% = 2 THEN 
         REM alle anzeigen
         REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1,1)
         REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1)
         alle$ = "j"
         inhouse% = 0
         GCodieRuf1% = 0
         GOTO AnfAlle260920071 
       END IF 
       IF req3% = 29 THEN 
         GCodieRuf1% = 0
         REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1,1)
         REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1)
         alle$ = "n"
         inhouse% = 1
         GCodieRuf1% = 0
         GOTO AnfAlle260920071
       END IF 
     END IF 
   ELSE 
     CREATE DIALOG "MASUCH",0,0,408,388,"GesellschaftsÅbersicht","MS Sans Serif",8
     ADD DIALOG "MASUCH",4,0,0,408,263,0,""
     ADD DIALOG "MASUCH",9,9,5,21,21,2
     ADD DIALOG "MASUCH",5,37,11,151,10,0,"Bitte wÑhlen Sie eine Gesellschaft aus:"
     ADD DIALOG "MASUCH",7,7,27,398,332,2,2,Gesellschaften$,Auswahl$,prompt$
     ADD DIALOG "MASUCH",1,76,368,55,15,1,"&OK",1,1
     IF inhouse% <> 1 THEN ADD DIALOG "MASUCH",1,133,368,81,15,0,"Inhouse-Gesellschaften",3,0
     IF alle$ <> "j" THEN ADD DIALOG "MASUCH",1,216,368,61,15,0,"Alle anzeigen",2,0
     
     ADD DIALOG "MASUCH",1,278,368,55,15,0,"&Abbrechen",0,0
     MOUSE ON 
     DIALOG "MASUCH",req%
     REMOVE DIALOG "MASUCH"
     IF req% = 3 THEN 
       REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1,1)
       REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1)
       alle$ = "n"
       inhouse% = 1
       GOTO AnfAlle260920071
     END IF 
     IF req% = 2 THEN 
       REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1,1)
       REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1)
       alle$ = "j"
       inhouse% = 0
       GOTO AnfAlle260920071
     END IF 
     IF req% = 1 THEN 
       GetCodeGE% = VAL ( RIGHT$ (Auswahl$(0),6))
       IF Auswahl$(0) LIKE "<ohne Zu*" OR Auswahl$(0) LIKE "<keine Zu*" THEN GetCodeGE% = 0
     ELSE 
       GetCodeGE% = 0
     END IF 
     IF GetCodeGE% > 0 THEN 
       SELECT KEY GetCodeGE% FILE "GEADR" INDEX CodeGE.GEADR
     END IF 
   END IF 
 END IF 
 FILE cfile$
 END FUNCTION 
 

FUNCTION GetCodeGE1%(prompt%)
 DIM Gesellschaften$( RECCOUNT ("GEADR") + 1)
 DIM Auswahl$(1)
 GCodieRuf1% = 0
 cfile$ = FILE 
 _pos% = CodeGE.GEADR
 REM Gesellschaften$(0) = "<keine Zuordnung>" + SPACE$ (120) + "000000"
 alle$ = "n"
Anf1Alle260920071: 
 FILE "GEADR"
 INDEX Gesellschaft.GEADR
 SELECT FIRST FILE "GEADR" INDEX Gesellschaft.GEADR
 a% = 0
 prompt$ = ""
 MOUSE OFF 
 WHILE NOT EOF ("GEADR")
   sok% = - 1
   IF alle$ = "n" THEN 
     sok$ = NoAnzeige.geadr
     IF NoAnzeige.geadr LIKE "j" THEN sok% = 0
   END IF 
   IF inhouse% = 1 THEN 
     IF Inhaus.geadr <> 1 THEN sok% = 0
   ELSE 
     IF Inhaus.geadr = 1 THEN sok% = 0
   END IF 
   IF alle$ = "j" THEN 
     sok% = - 1
   END IF 
   IF sok% = - 1 THEN 
     Gesellschaften$(a%) = LTRIM$ (Gesellschaft.GEADR)
     IF LTRIM$ (Gesellschaft2.GEADR) <> "" THEN 
       Gesellschaften$(a%) = Gesellschaften$(a%) + "/" + LTRIM$ (Gesellschaft2.GEADR)
     END IF 
     IF NoAnzeige.geadr LIKE "j" THEN 
       Gesellschaften$(a%) = Gesellschaften$(a%) + " ****," + LTRIM$ (PLZ.GEADR) + " " + LTRIM$ (Ort.GEADR) + ", " + LTRIM$ (Stra·e.GEADR) + ", " + LTRIM$ (land.GEADR)
     ELSE 
       Gesellschaften$(a%) = Gesellschaften$(a%) + "," + LTRIM$ (PLZ.GEADR) + " " + LTRIM$ (Ort.GEADR) + ", " + LTRIM$ (Stra·e.GEADR) + ", " + LTRIM$ (land.GEADR)
     END IF 
     IF Inhaus.geadr = 1 THEN 
       Gesellschaften$(a%) = Gesellschaften$(a%) + " ++++INHOUSE++++ "
     END IF 
     Gesellschaften$(a%) = Gesellschaften$(a%) + SPACE$ (220) + STR$ (CodeGE.GEADR,"000000")
     IF CodeGE.GEADR = prompt% THEN prompt$ = Gesellschaften$(a%)
     IF GCODIE% = - 1 AND GNeuSuGeadr$ = "j" THEN 
       IF GCodieRuf1% = 0 THEN 
         CALL SearchInitGE2("geadr")
       END IF 
     END IF 
     IF GCODIE% = - 1 AND GNeuSuGeadr$ = "j" THEN CALL SearchVorbGE2("GEADR")
     a% = a% + 1
   END IF 
   SELECT NEXT FILE "GEADR" INDEX Gesellschaft.GEADR
   
 WEND 
 GetCodeGE1% = 0
 IF a% <> 0 THEN 
   IF GCODIE% = - 1 AND GNeuSuGeadr$ = "j" THEN 
     REM CALL Fehler("","")
     IF alle$ = "n" THEN 
       req3% = CALL ("_SearchShow",c$)
     ELSE 
      req3% = CALL ("_SearchReShow",c$)
     END IF 
     IF VAL (c$) <> 0 THEN 
       GetCodeGE1% = VAL (c$)
       IF GetCodeGE1% > 0 THEN 
         SELECT KEY GetCodeGE1% FILE "GEADR" INDEX CodeGE.GEADR
       END IF 
     ELSE 
       IF req3% = 2 THEN 
         REM alle anzeigen
         REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1,1)
         REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1)
         alle$ = "j"
         inhouse% = 0
         GCodieRuf1% = 0
         GOTO Anf1Alle260920071 
       END IF 
       IF req3% = 29 THEN 
         GCodieRuf1% = 0
         REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1,1)
         REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1)
         alle$ = "n"
         inhouse% = 1
         GCodieRuf1% = 0
         GOTO Anf1Alle260920071
       END IF 
     END IF 
   ELSE 
     CREATE DIALOG "MASUCH",0,0,408,388,"GesellschaftsÅbersicht","MS Sans Serif",8
     ADD DIALOG "MASUCH",4,0,0,408,263,0,""
     ADD DIALOG "MASUCH",9,9,5,21,21,2
     ADD DIALOG "MASUCH",5,37,11,151,10,0,"Bitte wÑhlen Sie eine Gesellschaft aus:"
     ADD DIALOG "MASUCH",7,7,27,398,332,2,2,Gesellschaften$,Auswahl$,prompt$
     ADD DIALOG "MASUCH",1,76,368,55,15,1,"&OK",1,1
     IF inhouse% <> 1 THEN ADD DIALOG "MASUCH",1,133,368,81,15,0,"Inhouse-Gesellschaften",3,0
     IF alle$ <> "j" THEN ADD DIALOG "MASUCH",1,216,368,61,15,0,"Alle anzeigen",2,0
     
     ADD DIALOG "MASUCH",1,278,368,55,15,0,"&Abbrechen",0,0
     MOUSE ON 
     DIALOG "MASUCH",req%
     REMOVE DIALOG "MASUCH"
     IF req% = 3 THEN 
       REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1,1)
       REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1)
       alle$ = "n"
       inhouse% = 1
       GOTO AnfAlle260920071
     END IF 
     IF req% = 2 THEN 
       REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1,1)
       REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1)
       alle$ = "j"
       inhouse% = 0
       GOTO AnfAlle260920071
     END IF 
     IF req% = 1 THEN 
       GetCodeGE1% = VAL ( RIGHT$ (Auswahl$(0),6))
       IF Auswahl$(0) LIKE "<ohne Zu*" OR Auswahl$(0) LIKE "<keine Zu*" THEN GetCodeGE% = 0
     ELSE 
       GetCodeGE1% = 0
     END IF 
     IF GetCodeGE1% > 0 THEN 
       SELECT KEY GetCodeGE1% FILE "GEADR" INDEX CodeGE.GEADR
     END IF 
   END IF 
 END IF 
 FILE cfile$
 END FUNCTION 
 




SUB GESKurzSuche()
 cuge% = codege.geadr
 FILE "Geadr"
 IF ( MOD ("geadr") OR NEW ("geadr")) AND gesellschaft.geadr <> "" THEN CALL FStore("GEADR")
   IF GCODIE% = - 1 THEN 
     REM CALL Fehler("","")
      req3% = CALL ("_SearchReShow",c$)
     IF VAL (c$) <> 0 THEN 
       GetCodeGE% = VAL (c$)
       IF GetCodeGE% > 0 THEN 
         cuge% = GetCodeGE%
         SELECT KEY cuge% INDEX codege.geadr
         SET INDEX Gesellschaft.geadr
         INDEX gesellschaft.geadr
         MOUSE ON 
       END IF 
     END IF 
   END IF 
 
 END SUB 


SUB SpKurzSuche()
  cuva% = codeva.sparten
  IF MOD ("SPARTEN") OR NEW ("SPARTEN") THEN CALL FStore("SPARTEN")
 
   IF GCODIE% = - 1 THEN 
     REM CALL Fehler("","")
     req3% = CALL ("_SearchReShow",c$)
     IF VAL (c$) <> 0 THEN 
       GetCodeVA% = VAL (c$)
       IF GetCodeVA% > 0 THEN 
         cuva% = GetCodeVA%
         SELECT KEY cuva% INDEX codeva.sparten
         SET INDEX ALL 
         INDEX sparte.sparten
         FORM 
         MOUSE ON 
       END IF 
     END IF 
   END IF 
 
 END SUB 

FUNCTION GetCodeGEE%(prompt%)
 DIM Gesellschaften$( RECCOUNT ("GEADR") + 1)
 DIM Auswahl$(1)
 cfile$ = FILE 
 _pos% = CodeGE.GEADR
 REM Gesellschaften$(0) = "<keine Zuordnung>" + SPACE$ (120) + "000000"
 alle$ = "n"
AnfAlle260920072: 
 FILE "GEADR"
 INDEX Gesellschaft.GEADR
 SELECT FIRST 
 Gesellschaften$(0) = "<ohne Zuordnung>" + SPACE$ (220) + "000000"
 a% = 1
 prompt$ = ""
 MOUSE OFF 
 WHILE NOT EOF ("GEADR")
   sok% = - 1
   IF alle$ = "n" THEN 
     sok$ = eingueb.geadr
     IF eingueb.geadr LIKE "j" THEN 
     ELSE 
       sok% = 0
     END IF 
   END IF 
   IF sok% = - 1 THEN 
     Gesellschaften$(a%) = LTRIM$ (Gesellschaft.GEADR)
     IF LTRIM$ (Gesellschaft2.GEADR) <> "" THEN 
       Gesellschaften$(a%) = Gesellschaften$(a%) + "/" + LTRIM$ (Gesellschaft2.GEADR)
     END IF 
     IF eingueb.geadr LIKE "j" THEN 
       Gesellschaften$(a%) = Gesellschaften$(a%) + "," + LTRIM$ (PLZ.GEADR) + " " + LTRIM$ (Ort.GEADR) + ", " + LTRIM$ (Stra·e.GEADR) + ", " + LTRIM$ (land.GEADR) + SPACE$ (220) + STR$ (CodeGE.GEADR,"000000")
     ELSE 
       Gesellschaften$(a%) = Gesellschaften$(a%) + "," + LTRIM$ (PLZ.GEADR) + " " + LTRIM$ (Ort.GEADR) + ", " + LTRIM$ (Stra·e.GEADR) + ", " + LTRIM$ (land.GEADR) + SPACE$ (220) + STR$ (CodeGE.GEADR,"000000")
     END IF 
     IF CodeGE.GEADR = prompt% THEN prompt$ = Gesellschaften$(a%)
     a% = a% + 1
   END IF 
   SELECT NEXT 
   
 WEND 
 
 
 CREATE DIALOG "MASUCH",0,0,408,288,"GesellschaftsÅbersicht...EINREICHEN öBER","MS Sans Serif",8
 ADD DIALOG "MASUCH",4,0,0,408,263,0,""
 ADD DIALOG "MASUCH",9,9,5,21,21,2
 ADD DIALOG "MASUCH",5,37,11,151,10,0,"Bitte wÑhlen Sie eine Gesellschaft aus:"
 ADD DIALOG "MASUCH",7,7,30,398,226,2,2,Gesellschaften$,Auswahl$,prompt$
 ADD DIALOG "MASUCH",1,96,268,55,15,1,"&OK",1,1
 REM IF alle$ <> "j" THEN ADD DIALOG "MASUCH",1,153,268,61,15,0,"Alle anzeigen",2,0
 ADD DIALOG "MASUCH",1,216,268,55,15,0,"&Abbrechen",0,0
 MOUSE ON 
 DIALOG "MASUCH",req%
 REMOVE DIALOG "MASUCH"
 IF req% = 2 THEN 
   REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1,1)
   REDIM Gesellschaften$( RECCOUNT ("GEADR") + 1)
   alle$ = "j"
   GOTO AnfAlle260920072
 END IF 
 IF req% = 1 THEN 
   GetCodeGEE% = VAL ( RIGHT$ (Auswahl$(0),6))
   IF Auswahl$(0) LIKE "<ohne Zu*" OR Auswahl$(0) LIKE "<keine Zu*" THEN GetCodeGEE% = 0
 ELSE 
   GetCodeGEE% = - 1
 END IF 
 IF GetCodeGEE% > 0 THEN 
   SELECT KEY GetCodeGEE% FILE "GEADR" INDEX CodeGE.GEADR
 END IF 
 FILE cfile$
 END FUNCTION 
 



 
FUNCTION GetCodeGE2%(voncodege%,prompt%)
 DIM Gesellschaften$( RECCOUNT ("GEADR2") + 1)
 DIM Auswahl$(1)
 cfile$ = FILE 
 _pos% = CodeGE2.GEADR2
 FILE "GEADR2"
 INDEX voncodege.GEADR2
 SELECT FIRST 
 SELECT KEY voncodege% FILE "GEADR2" INDEX voncodege.geadr2
 REM Gesellschaften$(0) = "<keine Zuordnung>" + SPACE$ (120) + "000000"
 a% = 0
 prompt$ = ""
 MOUSE OFF 
 WHILE NOT EOF ("GEADR2") AND voncodege.geadr2 = voncodege%
   Gesellschaften$(a%) = LTRIM$ (Gesellschaft.GEADR2) + "/" + LTRIM$ (Gesellschaft2.GEADR2) + "," + LTRIM$ (PLZ.GEADR2) + " " + LTRIM$ (Ort.GEADR2) + ", " + LTRIM$ (Stra·e.GEADR2) + SPACE$ (120) + STR$ (CodeGE2.GEADR2,"000000")
   IF CodeGE2.GEADR2 = prompt% THEN prompt$ = Gesellschaften$(a%)
   SELECT NEXT 
   a% = a% + 1
 WEND 
 
 
 CREATE DIALOG "MASUCH",0,0,308,288,"FilialÅbersicht","MS Sans Serif",8
 ADD DIALOG "MASUCH",4,0,0,308,263,0,""
 ADD DIALOG "MASUCH",9,9,11,21,21,2
 ADD DIALOG "MASUCH",5,37,11,151,10,0,"Bitte wÑhlen Sie eine Filiale aus:"
 ADD DIALOG "MASUCH",7,7,27,298,229,2,2,Gesellschaften$,Auswahl$,prompt$
 ADD DIALOG "MASUCH",1,46,268,55,15,1,"&OK",1,1
 ADD DIALOG "MASUCH",1,103,268,55,15,0,"&Abbrechen",0,0
 MOUSE ON 
 DIALOG "MASUCH",req%
 REMOVE DIALOG "MASUCH"
 
 IF req% = 1 THEN 
   GetCodeGE2% = VAL ( RIGHT$ (Auswahl$(0),6))
   IF Auswahl$(0) LIKE "<ohne Zu*" OR Auswahl$(0) LIKE "<keine Zu*" THEN GetCodeGE% = 0
 ELSE 
   GetCodeGE2% = 0
 END IF 
 SELECT KEY GetCodeGE2% FILE "GEADR2" INDEX CodeGE2.GEADR2
 FILE cfile$
 END FUNCTION 
 
 
 
 
FUNCTION GetCodeGEM%(prompt%)
 DIM Gesellschaften$( RECCOUNT ("GEADR") + 1)
 DIM Auswahl1$( RECCOUNT ("GEADR"))
 
 cfile$ = FILE 
 _pos% = CodeGE.GEADR
 FILE "GEADR"
 INDEX Gesellschaft.GEADR
 SELECT FIRST 
 REM Gesellschaften$(0) = "<keine Zuordnung>" + SPACE$ (120) + "000000"
 a% = 0
 prompt$ = ""
 MOUSE OFF 
 WHILE NOT EOF ("GEADR")
   Gesellschaften$(a%) = Gesellschaft.GEADR + SPACE$ (120) + STR$ (CodeGE.GEADR,"000000")
   IF CodeGE.GEADR = prompt% THEN prompt$ = Gesellschaften$(a%)
   SELECT NEXT 
   a% = a% + 1
 WEND 
 
 
     DIM dlg AS Dialog
    DIM control AS DialogControl
 
    Superbase.Dialogs.Add("MASUCH")
    SET dlg = Superbase.Dialogs.MASUCH
    dlg.Move(0,0,308,288)
    dlg.Caption = "GesellschaftsÅbersicht"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(0,0,308,262)
    control.Caption = ""
 
    SET control = dlg.Add("DialogIcon1","DialogIcon")
    control.Move(9,11,21,21)
    control.Icon = 2
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(37,11,151,9)
    control.Caption = "Bitte wÑhlen eine Gesellschaft aus:"
 
    SET control = dlg.Add("DialogListBox1","DialogListBox")
    control.Move(6,27,299,225)
    control.MultiSelect = 1
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Gesellschaften$","Auswahl1$","prompt$")
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(84,268,54,15)
    control.Default = 1
    control.Caption = "&OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(140,268,56,15)
    control.Caption = "&Abbrechen"
    control.ReturnValue = 0
    control.Cancel = 1
    MOUSE ON 
 DIALOG "MASUCH",req%
 REMOVE DIALOG "MASUCH"
 
 IF req% = 1 THEN 
   GetCodeGEM% = VAL ( RIGHT$ (Auswahl1$(0),6))
   i% = 0
   ok% = - 1
   REDIM AuswahlG$( RECCOUNT ("GEADR"))
   WHILE ok%
     CodeGE% = VAL ( RIGHT$ (Auswahl1$(i%),6))
     IF CodeGE% > 0 THEN 
       jj$ = Auswahl1$(i%)
       AuswahlG$(i%) = jj$
       AuswahlG$(i%) = Auswahl1$(i%)
       i% = i% + 1
     ELSE 
       ok% = 0
     END IF 
   WEND 
 ELSE 
   GetCodeGEM% = 0
 END IF 
 SELECT KEY _pos% FILE "GEADR" INDEX CodeGE.GEADR
 FILE cfile$
 END FUNCTION 
  
 
 
 
SUB GEADRLoeschen()
 IF disabled%("GEADRLOESCHEN") THEN END SUB 
 MOUSE OFF 
 CALL DFile(3,"geadr" + _fpw$)
 CALL DFile(3,"geadr2" + _fpw$)
 CALL DFile(3,"gekond" + _fpw$)
 CALL DFile(3,"gekondm" + _fpw$)
 CALL DFile(3,"kvertrag" + _fpw$)
 CALL DFile(3,"buchung" + _fpw$)
 cuge% = CodeGE.GEADR
 Dateien$ = ""
 ok% = 1
 IF EXISTS (cuge%,CodeGE.KVERTRAG) THEN 
   ok% = 0
   Dateien$ = Dateien$ + ", VertrÑge"
 END IF 
 IF EXISTS (cuge%,CodeGE.GEKOND) THEN 
   ok% = 0
   Dateien$ = Dateien$ + ", Konditionen"
 END IF 
 IF EXISTS (cuge%,CodeGE.GEKONDM) THEN 
   ok% = 0
   Dateien$ = Dateien$ + ", Musterkonditionen"
 END IF 
 MOUSE ON 
 IF ok% = 0 THEN 
   Dateien$ = RIGHT$ (Dateien$, LEN (Dateien$) - 2)
   CALL Fehler("Lîschen nicht mîglich!","Es existieren VerknÅpfungen zu den Dateien: " + Dateien$ + ".")
   SET STATUS "Datensatz konnte nicht gelîscht werden"
 ELSE 
   MOUSE OFF 
   REQUEST "Wollen Sie die Gesellschaft " + Gesellschaft.GEADR + " lîschen?","",135,req%
   IF req% = 1 THEN 
     SELECT KEY cuge% LOCK FILE "GEADR" INDEX CodeGE.GEADR
     SELECT REMOVE FILE "GEADR"
     SET STATUS "Datensatz wurde gelîscht"
   END IF 
 END IF 
 FORM 
 MOUSE ON 
 END SUB 
 
 
SUB BGEADRLoesch()
 cuvt% = Codevt.kgeadr
 codebge% = codebge.kgeadr
 IF disabled%("GEADRLOESCHEN") THEN END SUB 
 MOUSE OFF 
     SELECT KEY codebge% LOCK FILE "KGEADR" INDEX CodeBGE.KGEADR
     SELECT REMOVE FILE "KGEADR"
 SELECT FORM KEY cuvt% FILE "KGEADR" INDEX codevt.kgeadr
 FORM 
 FORM 1
 END SUB 
 



SUB AleksVertrAnz(codeku1%)
   IF RECCOUNT ("KVERTRAG") > 10000 THEN 
     REDIM G1Vertraege$(20000,1)
     REDIM G1Vertraege$(20000)
     DIM Vertraege%(20000)
   ELSE 
     REDIM G1Vertraege$( RECCOUNT ("KVERTRAG"),1)
     REDIM G1Vertraege$( RECCOUNT ("KVERTRAG"))
     DIM Vertraege%( RECCOUNT ("KVERTRAG"))
   END IF 
   DIM Auswahl$(1)
       codeku% = codeku1%
       FILE "kvertrag"
       INDEX codeku.kvertrag
       SELECT FIRST 
       SELECT FIRST FILE "KVERTRAG"
       SELECT KEY codeku% FILE "KVERTRAG" INDEX codeku.KVERTRAG
       a% = 0
       WHILE NOT EOF ("KVERTRAG") AND codeku.kvertrag = codeku%
         IF codeku.kvertrag = codeku% THEN 
           test$ = PAD$ (Sparte.kvertrag,40) + "," + PAD$ (Gesellschaft.kvertrag,40)
           IF vs_Beginn.kvertrag > 0 THEN test$ = test$ + ", " + DATE$ (vs_beginn.kvertrag,"0d.mm.yyyy")
           IF vsumme.kvertrag <> 0 THEN test$ = test$ + ", Versich.sum: " + LTRIM$ ( STR$ (vsumme.kvertrag,",999999999.00"))
           IF Beitrag.kvertrag <> 0 THEN test$ = test$ + ", Beitrag: " + LTRIM$ ( STR$ (beitrag.kvertrag,",999999999.00"))
           zw$ = ""
           SELECT CASE zw.kvertrag
             CASE 0
               zw$ = " einm."
             CASE 1
               zw$ = " jÑhrl."
             CASE 2
               zw$ = " halbj."
             CASE 4
               zw$ = " viertelj."
             CASE 6
               zw$ = " 2monatl."
             CASE 12
               zw$ = " monatl."
           END SELECT 
           test$ = test$ + zw$
           test$ = test$ + ", " + Vstatustxt.kvertrag
           G1Vertraege$(a%) = test$ + SPACE$ (220) + STR$ (lfdnr.KVERTRAG,"000000")
           a% = a% + 1
         END IF 
         SELECT NEXT FILE "KVERTRAG" INDEX codeku.KVERTRAG
       WEND 

     IF a% > 1 THEN 
       MOUSE ON 
       lok% = - 1
anf200603141: 
       WHILE lok%
         CREATE DIALOG "ZEINLIST",0,0,541,298,"VertrÑge " + Nachname.adressen,"Courier New",9
         ADD DIALOG "ZEINLIST",4,0,0,541,272,0,""
         ADD DIALOG "ZEINLIST",9,8,11,25,24,2
         ADD DIALOG "ZEINLIST",5,35,11,368,20,0,"Folgende KundenvertrÑge wurden gefunden gefunden."
         REM ADD DIALOG "ZEINLIST",5,35,31,305,20,0,"Bitte wÑhlen Sie den von Ihnen gesuchten Vertrag aus. Mit 'Info' erhalten Sie weitere Angaben zum gewÑhlten Vertrag."
         ADD DIALOG "ZEINLIST",5,3,58,230,10,0,""
         ADD DIALOG "ZEINLIST",7,3,68,530,205,2 + 128,2,G1Vertraege$,Auswahl$,prompt$
         ADD DIALOG "ZEINLIST",1,150,278,55,15,1,"&OK",1,1
           REM ADD DIALOG "ZEINLIST",1,205,278,55,15,0,"&Info",2,1
           ADD DIALOG "ZEINLIST",1,210,278,55,15,0,"A&bbruch",0,0
         DIALOG "ZEINLIST",req%
         REMOVE DIALOG "ZEINLIST"
         IF req% = 1 THEN 
           IF NOT OPEN ("FOERKOND") THEN CALL DFile(3,"FOERKOND" + _fpw$)
           lfdnr% = lfdnr.kvertrag
           SELECT WHERE FILE "kvertrag"
           CALL KVERTRAGneu(lfdnr%)
           GOTO anf200603141
         END IF 
         lok% = 0
       WEND 
     END IF 
 END SUB 


SUB AleksKontAnz(codeku1%)
 codeku% = codeku1%
 FILE GConDat$
 INDEX codeku.GCondat$
 SELECT FIRST FILE GConDat$ INDEX codeku.GCondat$
 SELECT KEY codeku% FILE GConDat$ INDEX codeku.GCondat$
   IF RECCOUNT (GCondat$) > 10000 THEN 
     REDIM G1Vertraege$(20000,1)
     REDIM G1Vertraege$(20000)
     DIM Vertraege%(20000)
   ELSE 
     REDIM G1Vertraege$( RECCOUNT (GCondat$),1)
     REDIM G1Vertraege$( RECCOUNT (GCondat$))
     DIM Vertraege%( RECCOUNT (GCondat$))
   END IF 
   DIM Auswahl$(1)
 a% = 0
       WHILE NOT EOF (GCondat$) AND codeku.GCondat$ = codeku%
         IF codeku.GCondat$ = codeku% THEN 
           test$ = PAD$ (Nachname.GCondat$ + ", " + Vorname.GConDat$,80) + "," + PAD$ (KontaktGruppe.GCondat$,40)
           G1Vertraege$(a%) = test$ + SPACE$ (220) + STR$ (CodeCon.GCondat$,"000000")
           a% = a% + 1
         END IF 
         SELECT NEXT FILE GCondat$ INDEX codeku.GCondat$
       WEND 
 
     IF a% > 0 THEN 
       MOUSE ON 
       lok% = - 1
       WHILE lok%
         CREATE DIALOG "ZEINLIST",0,0,541,298,"Kontakte " + Nachname.adressen,"Courier New",9
         ADD DIALOG "ZEINLIST",4,0,0,541,272,0,""
         ADD DIALOG "ZEINLIST",9,8,11,25,24,2
         ADD DIALOG "ZEINLIST",5,35,11,368,20,0,"Folgende Kontakte wurden gefunden gefunden."
         REM ADD DIALOG "ZEINLIST",5,35,31,305,20,0,"Bitte wÑhlen Sie den von Ihnen gesuchten Vertrag aus. Mit 'Info' erhalten Sie weitere Angaben zum gewÑhlten Vertrag."
         ADD DIALOG "ZEINLIST",5,3,58,230,10,0,""
         ADD DIALOG "ZEINLIST",7,3,68,530,205,2 + 128,2,G1Vertraege$,Auswahl$,prompt$
           REM ADD DIALOG "ZEINLIST",1,150,278,55,15,1,"&OK",1,1
           REM ADD DIALOG "ZEINLIST",1,205,278,55,15,0,"&Info",2,1
           ADD DIALOG "ZEINLIST",1,260,278,55,15,0,"&Abbrechen",0,0
         DIALOG "ZEINLIST",req%
         REMOVE DIALOG "ZEINLIST"
         lok% = 0
       WEND 
     END IF 


 END SUB 




 
SUB MASuFS24()
    DIM dlg AS Dialog
    DIM control AS DialogControl
    DIM Agenturen$( RECCOUNT ("maadr") + 1)
    DIM Auswahl$(1)
    opt1% = 3
suanf21062004: 
    Superbase.Dialogs.Add("ADRSUCH")
    SET dlg = Superbase.Dialogs.ADRSUCH
    dlg.Move(0,0,222,146)
    dlg.Caption = "Vermittlersuche"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(22,104,179,11)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "suna$"
 
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(0,1,222,86)
    control.Caption = "Suche nach"
 
    SET control = dlg.Add("DialogIcon1","DialogIcon")
    control.Move(2,16,20,22)
    control.Icon = 2
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(35,122,64,16)
    control.Default = 1
    control.Caption = "&Suche"
    control.ReturnValue = 1
 
 
 
    SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
    control.Move(30,19,106,11)
    control.Caption = "Vermittler-Nummer"
    control.Bind("opt1%")
    control.ValueOn = 1
 
    SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
    control.Move(30,33,106,11)
    control.Caption = "Vermittler-Name"
    control.Bind("opt1%")
    control.ValueOn = 2
 
 
    SET control = dlg.Add("DialogOptionButton3","DialogOptionButton")
    control.Move(30,47,106,11)
    control.Caption = "Firmenname"
    control.Bind("opt1%")
    control.ValueOn = 4
 
    SET control = dlg.Add("DialogOptionButton4","DialogOptionButton")
    control.Move(30,61,106,11)
    control.Caption = "Inhouse-Vermittler"
    control.Bind("opt1%")
    control.ValueOn = 5


    SET control = dlg.Add("DialogOptionButton5","DialogOptionButton")
    control.Move(30,75,106,11)
    control.Caption = "alle Vermittler"
    control.Bind("opt1%")
    control.ValueOn = 3
 
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(23,91,133,9)
    control.Caption = "Suchbegriff:"
 
  
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(100,122,64,16)
    control.Caption = "&Abbruch"
    control.ReturnValue = 0
    control.Cancel = 1
 
    DIALOG "ADRSUCH",req%
    REMOVE DIALOG "ADRSUCH"
    IF req% = 1 THEN 
      IF GNeuSuGeadr$ = "j" THEN GCodieRuf1% = 0
      IF opt1% = 3 THEN GOTO test16072004
      IF opt1% = 1 THEN 
        REM suche nach Vermittler-Nummer
        suna1$ = suna$ + "*"
        FILE "maadr"
        INDEX agenturnr.maadr
        SELECT FIRST 
        SELECT KEY suna$ FILE "maadr" INDEX agenturnr.maadr
        a% = 0
        WHILE NOT EOF ("maadr") AND agenturnr.maadr LIKE suna1$
          Agenturen$(a%) = Agenturnr.maadr + "," + nachname.maadr + ", " + vorname.maadr + ", " + firmaname.maadr + SPACE$ (120) + STR$ (CodeMA.maadr,"000000")
           IF GCODIE% = - 1 AND GNeuSuGeadr$ = "j" THEN 
             IF GCodieRuf1% = 0 THEN CALL SearchInitMA1("MAADR")
           END IF 
           IF GCODIE% = - 1 AND GNeuSuGeadr$ = "j" THEN CALL SearchVorbMA1("MAADR")
          a% = a% + 1
          SELECT NEXT FILE "maadr"
        WEND 
      END IF 
      IF opt1% = 2 THEN 
        REM suche nach Vermittler-Name
        suna1$ = suna$ + "*"
        FILE "maadr"
        INDEX nachname.maadr
        SELECT FIRST 
        SELECT KEY suna$ FILE "maadr" INDEX nachname.maadr
        a% = 0
        WHILE NOT EOF ("maadr") AND nachname.maadr LIKE suna1$
          sok% = - 1
          IF GASP% THEN 
            IF workstation% > 0 THEN 
              FOR ii% = 0 TO VisCount% - 1' Fall externes BÅro
                wks% = VisOff%(ii%)
                aa% = IsWksVisible%(wks%)
                naab$ = Nachname.maadr + "/" + vorname.maadr
                IF aa% = - 1 AND CodeMa.Maadr <> 0 AND workstation.maadr = wks% THEN 
                  REM CALL Fehler(naab$,"aa: " + STR$ (aa%))
                  ii% = VisCount%
                ELSE 
                  sok% = 0
                END IF 
              NEXT ii%
            END IF 
          END IF 
          IF sok% = - 1 THEN 
            Agenturen$(a%) = LTRIM$ (nachname.maadr) + ", " + LTRIM$ (vorname.maadr) + ", " + LTRIM$ (firmaname.maadr) + "," + LTRIM$ (Agenturnr.maadr) + SPACE$ (120) + STR$ (CodeMA.maadr,"000000")
           IF GCODIE% = - 1 AND GNeuSuGeadr$ = "j" THEN 
             IF GCodieRuf1% = 0 THEN CALL SearchInitMA1("MAADR")
           END IF 
           IF GCODIE% = - 1 AND GNeuSuGeadr$ = "j" THEN CALL SearchVorbMA1("MAADR")
            a% = a% + 1
          END IF 
          SELECT NEXT FILE "maadr"
        WEND 
      END IF 
 
      IF opt1% = 4 THEN 
        REM suche nach Vermittler-Name
        suna1$ = suna$ + "*"
        FILE "maadr"
        INDEX FirmaName.maadr
        SELECT FIRST 
        SELECT KEY suna$ FILE "maadr" INDEX FirmaName.maadr
        a% = 0
        WHILE NOT EOF ("maadr") AND FirmaName.maadr LIKE suna1$
          sok% = - 1
          IF GASP% THEN 
            IF workstation% > 0 THEN 
              FOR ii% = 0 TO VisCount% - 1' Fall externes BÅro
                wks% = VisOff%(ii%)
                aa% = IsWksVisible%(wks%)
                naab$ = Nachname.maadr + "/" + vorname.maadr
                IF aa% = - 1 AND CodeMa.Maadr <> 0 AND workstation.maadr = wks% THEN 
                  REM CALL Fehler(naab$,"aa: " + STR$ (aa%))
                  ii% = VisCount%
                ELSE 
                  sok% = 0
                END IF 
              NEXT ii%
            END IF 
          END IF 
          IF sok% = - 1 THEN 
            Agenturen$(a%) = LTRIM$ (FirmaName.maadr) + ", " + LTRIM$ (NachName.maadr) + ", " + LTRIM$ (vorname.maadr) + ", " + LTRIM$ (firmaname.maadr) + "," + LTRIM$ (Agenturnr.maadr) + SPACE$ (120) + STR$ (CodeMA.maadr,"000000")
           IF GCODIE% = - 1 AND GNeuSuGeadr$ = "j" THEN 
             IF GCodieRuf1% = 0 THEN CALL SearchInitMA1("MAADR")
           END IF 
           IF GCODIE% = - 1 AND GNeuSuGeadr$ = "j" THEN CALL SearchVorbMA1("MAADR")
            a% = a% + 1
          END IF 
          SELECT NEXT FILE "maadr"
        WEND 
      END IF 
 
      IF opt1% = 5 THEN 
        REM suche nach Inhaus -Vermittler
        suna1$ = suna$ + "*"
        FILE "maadr"
        INDEX FirmaName.maadr
        SELECT FIRST 
        REM SELECT KEY suna$ FILE "maadr" INDEX FirmaName.maadr
        a% = 0
        WHILE NOT EOF ("maadr")
          sok% = - 1
          IF GASP% THEN 
            IF workstation% > 0 THEN 
              FOR ii% = 0 TO VisCount% - 1' Fall externes BÅro
                wks% = VisOff%(ii%)
                aa% = IsWksVisible%(wks%)
                naab$ = Nachname.maadr + "/" + vorname.maadr
                IF aa% = - 1 AND CodeMa.Maadr <> 0 AND workstation.maadr = wks% THEN 
                  REM CALL Fehler(naab$,"aa: " + STR$ (aa%))
                  ii% = VisCount%
                ELSE 
                  sok% = 0
                END IF 
              NEXT ii%
            END IF 
          END IF 
          IF inhaus.maadr <> 1 THEN sok% = 0
          IF sok% = - 1 THEN 
            IF FirmaName.maadr <> "" THEN 
              Agenturen$(a%) = LTRIM$ (FirmaName.maadr) + ", " + LTRIM$ (NachName.maadr) + ", " + LTRIM$ (vorname.maadr) + ", " + LTRIM$ (firmaname.maadr) + "," + LTRIM$ (Agenturnr.maadr) + SPACE$ (120) + STR$ (CodeMA.maadr,"000000")
            ELSE 
              Agenturen$(a%) = LTRIM$ (NachName.maadr) + ", " + LTRIM$ (vorname.maadr) + ", " + LTRIM$ (firmaname.maadr) + "," + LTRIM$ (Agenturnr.maadr) + SPACE$ (120) + STR$ (CodeMA.maadr,"000000")
            END IF 
           IF GCODIE% = - 1 AND GNeuSuGeadr$ = "j" THEN 
             IF GCodieRuf1% = 0 THEN CALL SearchInitMA1("MAADR")
           END IF 
           IF GCODIE% = - 1 AND GNeuSuGeadr$ = "j" THEN CALL SearchVorbMA1("MAADR")
            a% = a% + 1
          END IF 
          SELECT NEXT FILE "maadr"
        WEND 
      END IF 
 
 
 
      IF a% > 0 THEN 
        IF GCODie% = - 1 AND GNeuSuGeadr$ = "j" THEN 
          IF alle$ = "n" THEN 
            req3% = CALL ("_SearchShow",c$)
          ELSE 
            req3% = CALL ("_SearchReShow",c$)
          END IF 
          IF VAL (c$) <> 0 THEN 
            GetCodeMA% = VAL (c$)
            IF GetCodeMA% > 0 THEN 
              cuma% = GetCodeMA%
            END IF 
          END IF 
        ELSE 
          prompt$ = Agenturen$(0)
          CREATE DIALOG "MASUCH",0,0,380,284,"Vermittlersuche","Courier New",10
          ADD DIALOG "MASUCH",4,0,0,380,263,0,""
          ADD DIALOG "MASUCH",9,5,5,21,21,2
          ADD DIALOG "MASUCH",5,37,15,260,10,0,"Name/Nachname,Vorname"
          ADD DIALOG "MASUCH",5,37,5,151,10,0,"Bitte wÑhlen Sie einen Mitarbeiter aus:"
          ADD DIALOG "MASUCH",7,7,27,368,229,2,2,Agenturen$,Auswahl$,prompt$
          ADD DIALOG "MASUCH",1,116,268,55,15,1,"&OK",1,1
          ADD DIALOG "MASUCH",1,182,268,55,15,0,"&Abbrechen",0,0
          MOUSE ON 
          DIALOG "MASUCH",req%
          REMOVE DIALOG "MASUCH"
          IF req% <> 0 THEN 
            _cuma% = VAL ( RIGHT$ (Auswahl$(0),6))
            GCodeMA% = _cuma%
            SELECT KEY _cuma% FILE "MAADR" INDEX CodeMA.MAADR
            SET INDEX Nachname.MAADR
            INDEX Nachname.MAADR
            FORM 
          ELSE 
            MitSuchen% = 0
          END IF 
        ELSE 
          CALL Fehler("Es wurde kein passender Eintrag gefunden!","")
          GOTO suanf21062004
        END IF 
      END IF 
test16072004: 
      IF opt1% = 3 THEN 
        IF GNeuSuGeadr$ = "j" THEN GCodieRuf1% = 0
        rep% = GetCodeMA%(_cuma%,Wks1%)
        IF rep% > 0 THEN 
          _cuma% = rep%
          GCodeMA% = _cuma%
          SELECT KEY _cuma% FILE "MAADR" INDEX CodeMA.MAADR
          FILE "MAADR"
          SET INDEX Nachname.MAADR
          INDEX Nachname.MAADR
          FORM 
        ELSE 
          MitSuchen% = 0
        END IF 
      END IF 
    END IF 
 END SUB 
  
 
 
SUB FS24LI1(vondat$,bisdat$,allprov$,ma%)
 CALL DFile(3,"budr1" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 CALL DFile(3,"buchung1" + _fpw$)
 
 IF vondat$ = "" THEN 
   von$ = "00000000"
 ELSE 
   von% = DAYS (vondat$)
   von$ = DATE$ (von%,"yyyymm0d")
   vondat$ = DATE$ (von%,"0d.mm.yyyy")
 END IF 
 IF bisdat$ = "" THEN 
   bisdat$ = DATE$ ( TODAY ,"0d.mm.yyyy")
   bis$ = DATE$ ( TODAY ,"yyyymm0d")
 ELSE 
   bis% = DAYS (bisdat$)
   bisdat$ = DATE$ (bis%,"0d.mm.yyyy")
   bis$ = DATE$ (bis%,"yyyymm0d")
 END IF 
 
 FILE "budr1"
 INDEX datum.budr1
 IF RECCOUNT ("budr1") > 0 THEN 
   SELECT FIRST FILE "budr1"
   anfangd$ = DATE$ (datum.budr1,"0d.mm.yyyy")
   SELECT LAST FILE "budr1"
   ended$ = DATE$ (datum.budr1,"0d.mm.yyyy")
   T1$ = "Die temporÑre Datei enthÑlt Daten im Zeitraum:" + anfangd$ + " - " + ended$
   REQUEST t1$,"Soll sie neu erzeugt werden?",135,req1neu%
   IF req1neu% = 0 THEN GOTO budr1aufb2004082801
 END IF 
 MOUSE OFF 
 a% = 0
 IF ma% = 0 THEN 
   FILE "maadr"
   INDEX QNameCodema.maadr
   SELECT FIRST FILE "maadr" INDEX QNameCodema.maadr
   j% = RECCOUNT ("maadr")
   DIM M1$(j%)
   DIM M1%(j%)
   WHILE NOT EOF ("maadr")
     IF codema.maadr > 0 THEN 
       M1$(a%) = QNameCodema.maadr
       M1%(a%) = Codema.maadr
       a% = a% + 1
     END IF 
     SELECT NEXT FILE "maadr" INDEX QNameCodema.maadr
   WEND 
 ELSE 
   DIM M1$(1)
   DIM M1%(1)
   SELECT FIRST FILE "maadr" INDEX codema.maadr
   SELECT KEY ma% FILE "maadr" INDEX codema.maadr
   M1$(a%) = QNameCodema.maadr
   M1%(a%) = Codema.maadr
   a% = a% + 1
 END IF 
 
 FILE "maadr"
 INDEX Codema.maadr
 
 REMOVE FROM FILE "BUDR1"
 REORGANIZE FILE "BUDR1" TO _netpath$ + "PROVIS\BUDR1.SBF"
 
 
 gesbrut% = 0
 gesnet% = 0
 gessr% = 0
 gesvsv% = 0
 FOR i% = 0 TO a% - 1
   codema% = M1%(i%)
   SELECT FIRST FILE "maadr" INDEX codema.maadr
   SELECT KEY codema% FILE "maadr" INDEX codema.maadr
   IF NOT EXISTS (codema%,codema.buchung1) THEN GOTO nextma2004082801
   REM CALL Fehler("Test0 " + nachname.maadr,Agenturnr.maadr)
   BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   Spalte1.budr1 = "Provisionsabrechnung Nr.:"
   
   Spalte2.budr1 = "Pro" + DATE$ ( TODAY ,"yyyy_mm_0d") + "-" + Agenturnr.maadr
   Spalte3.budr1 = "(vom " + vondat$ + " - " + bisdat$ + ")"
   STORE FILE "budr1"
 
   BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   Spalte4.budr1 = DATE$ ( TODAY ,"0d.mm.yyyy") + " - " + TIME$ ( NOW ,"hh:mm:ss")
   STORE FILE "budr1"
 
   BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   Spalte1.budr1 = Anrede.maadr
   Spalte4.budr1 = "Steuernummer: " + Steuernummer.maadr
   STORE FILE "budr1"
 
   BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   Spalte1.budr1 = FirmaName.maadr
   Spalte4.budr1 = "Agenturnummer: " + Agenturnr.maadr
   STORE FILE "budr1"
 
   BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   Spalte1.budr1 = Vorname.maadr + " " + Nachname.maadr
   STORE FILE "budr1"
 
   BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   Spalte1.budr1 = Stra·e.maadr
   STORE FILE "budr1"
 
   BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   Spalte1.budr1 = plz.maadr + " " + Ort.maadr
   STORE FILE "budr1"
 
   BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   STORE FILE "budr1"
 
 
 
   BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   Spalte1.budr1 = "Kunde"
   Spalte3.budr1 = "VS-Beginn"
   Spalte5.budr1 = "Brutto-Courtage"
   Spalte6.budr1 = "Storno-Reserve"
   Spalte7.budr1 = "VSV"
   Spalte8.budr1 = "Netto-Courtage"
   STORE FILE "budr1"
 
   BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   Spalte1.budr1 = "Gesellschaft/Sparte"
   Spalte3.budr1 = "Datum Vorschuss"
   Spalte8.budr1 = "(Auszahlungsbetrag)"
   STORE FILE "budr1"
 
   BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   Spalte1.budr1 = "Prov.Art/Vers.Nr"
   Spalte3.budr1 = "Stornodatum"
   Spalte5.budr1 = "Euro"
   Spalte6.budr1 = "Euro"
   Spalte7.budr1 = "Euro"
   Spalte8.budr1 = "Euro"
   STORE FILE "budr1"
 
   BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   STORE FILE "budr1"
 
 
   FILE "Buchung1"
   INDEX QuickCode.BUCHUNG1
   SELECT FIRST 
   QuickCode$ = STR$ (CodeMA%,"000000") + von$
   SELECT KEY QuickCode$ FILE "Buchung1" INDEX QuickCode.BUCHUNG1
   lauf% = 0
   sumapBrut% = 0
   sumapNet% = 0
   sumapSR% = 0
   sumapVSV% = 0
 
   sumpflBrut% = 0
 
   sumvorschBrut% = 0
   sumvorschNet% = 0
   sumvorschSR% = 0
   sumvorschVSV% = 0
 
   sumvorschBrutr% = 0
   sumvorschNetr% = 0
   sumvorschSRr% = 0
   sumvorschVSVr% = 0
 
   sumapBruts% = 0
   sumapNets% = 0
   sumapSRs% = 0
   sumapVSVs% = 0
 
 
loop2004082801: 
   k% = 0
   WHILE NOT EOF ("buchung1") AND Datum.buchung1 <= bis% AND codema.buchung1 = codema%
     k% = k% + 1
     SELECT FIRST FILE "KVERTRAG" INDEX lfdnr.kvertrag
     SELECT KEY codevt.buchung1 FILE "KVERTRAG" INDEX lfdnr.kvertrag
     SET STATUS LTRIM$ ( STR$ (k%,",99999999")) + " " + Nachname.maadr + " " + LTRIM$ ( STR$ (lauf%,",99999999"))
     IF lauf% = 0 THEN 
       REM alle mit AP > 0 nicht Vorschuss
       IF Buchungstext.buchung1 LIKE "AP*" OR Buchungstext.buchung1 LIKE "Abschl*" AND GesamtbetragEU.buchung1 > 0 THEN 
         sumapBrut% = sumapBrut% + GesamtbetragEU.buchung1
         sumapNet% = sumapNet% + Betrageu.buchung1
         sumapSR% = sumapSR% + sreu.buchung1
         sumapVSV% = sumapVSV% + vsv.buchung1
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = Nachname.buchung1 + "," + Vorname.buchung1
         Spalte3.budr1 = DATE$ (VS_Beginn.buchung1,"0d.mm.yyyy")
         Spalte5.budr1 = LTRIM$ ( STR$ (GesamtbetragEU.buchung1,",9999999999.00"))
         Spalte6.budr1 = LTRIM$ ( STR$ (SREU.buchung1,",9999999999.00"))
         Spalte7.budr1 = LTRIM$ ( STR$ (VSV.buchung1,",9999999999.00"))
         Spalte8.budr1 = LTRIM$ ( STR$ (BetragEU.buchung1,",9999999999.00"))
         STORE FILE "budr1"
 
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = Gesellschaft.buchung1 + "/" + sparte.buchung1
         Spalte3.budr1 = DATE$ (Datum.buchung1,"0d.mm.yyyy")
         STORE FILE "budr1"
 
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = Buchungstext.buchung1
         IF KÅndigung.kvertrag > 0 THEN 
           Spalte3.budr1 = DATE$ (KÅndigung.kvertrag,"0d.mm.yyyy")
         END IF 
         STORE FILE "budr1"
 
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = "Vertrag wurde abgeschlossen durch:"
         Spalte2.budr1 = VTAgentur.buchung1
         STORE FILE "budr1"
 
       END IF 
     END IF 
     IF lauf% = 1 THEN 
       REM alle Bestandsprov(Pflege)
       IF Buchungstext.buchung1 LIKE "Pf*" AND GesamtbetragEU.buchung1 > 0 THEN 
         sumpflBrut% = sumpflBrut% + BetragEU.buchung1
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = Nachname.buchung1 + "," + Vorname.buchung1
         Spalte3.budr1 = DATE$ (VS_Beginn.buchung1,"0d.mm.yyyy")
         Spalte5.budr1 = LTRIM$ ( STR$ (BetragEU.buchung1,",9999999999.00"))
         Spalte6.budr1 = LTRIM$ ( STR$ (SREU.buchung1,",9999999999.00"))
         Spalte7.budr1 = LTRIM$ ( STR$ (VSV.buchung1,",9999999999.00"))
         Spalte8.budr1 = LTRIM$ ( STR$ (BetragEU.buchung1,",9999999999.00"))
         STORE FILE "budr1"
 
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = Gesellschaft.buchung1 + "/" + sparte.buchung1
         Spalte3.budr1 = DATE$ (Datum.buchung1,"0d.mm.yyyy")
         STORE FILE "budr1"
 
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = Buchungstext.buchung1
         IF KÅndigung.kvertrag > 0 THEN 
           Spalte3.budr1 = DATE$ (KÅndigung.kvertrag,"0d.mm.yyyy")
         END IF 
         STORE FILE "budr1"
 
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = "Vertrag wurde abgeschlossen durch:"
         Spalte2.budr1 = VTAgentur.buchung1
         STORE FILE "budr1"
       END IF 
     END IF 
     IF lauf% = 2 THEN 
       REM VorschÅsse
       IF Buchungstext.buchung1 LIKE "Vorschuss:*" AND vorschujn.buchung1 = 1 THEN 
         sumvorschBrut% = sumvorschBrut% + GesamtbetragEU.buchung1
         sumvorschNet% = sumvorschNet% + Betrageu.buchung1
         sumvorschSR% = sumvorschSR% + sreu.buchung1
         sumvorschVSV% = sumvorschVSV% + vsv.buchung1
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = Nachname.buchung1 + "," + Vorname.buchung1
         Spalte3.budr1 = DATE$ (VS_Beginn.buchung1,"0d.mm.yyyy")
         Spalte5.budr1 = LTRIM$ ( STR$ (GesamtbetragEU.buchung1,",9999999999.00"))
         Spalte6.budr1 = LTRIM$ ( STR$ (SREU.buchung1,",9999999999.00"))
         Spalte7.budr1 = LTRIM$ ( STR$ (VSV.buchung1,",9999999999.00"))
         Spalte8.budr1 = LTRIM$ ( STR$ (BetragEU.buchung1,",9999999999.00"))
         STORE FILE "budr1"
 
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = Gesellschaft.buchung1 + "/" + sparte.buchung1
         Spalte3.budr1 = DATE$ (Datum.buchung1,"0d.mm.yyyy")
         STORE FILE "budr1"
 
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = Buchungstext.buchung1
         IF KÅndigung.kvertrag > 0 THEN 
           Spalte3.budr1 = DATE$ (KÅndigung.kvertrag,"0d.mm.yyyy")
         END IF 
         STORE FILE "budr1"
 
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = "Vertrag wurde abgeschlossen durch:"
         Spalte2.budr1 = VTAgentur.buchung1
         STORE FILE "budr1"
       END IF 
     END IF 
     IF lauf% = 3 THEN 
       REM RÅckzahlung Vorschuss, weil ZE auf Vertrag
       IF vorschujn.buchung1 = 1 AND Betrag.buchung1 < 1 THEN 
         sumvorschBrutr% = sumvorschBrutr% + GesamtbetragEU.buchung1
         sumvorschNetr% = sumvorschNetr% + Betrageu.buchung1
         sumvorschSRr% = sumvorschSRr% + sreu.buchung1
         sumvorschVSVr% = sumvorschVSVr% + vsv.buchung1
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = Nachname.buchung1 + "," + Vorname.buchung1
         Spalte3.budr1 = DATE$ (VS_Beginn.buchung1,"0d.mm.yyyy")
         Spalte5.budr1 = LTRIM$ ( STR$ (GesamtbetragEU.buchung1,",9999999999.00"))
         Spalte6.budr1 = LTRIM$ ( STR$ (SREU.buchung1,",9999999999.00"))
         Spalte7.budr1 = LTRIM$ ( STR$ (VSV.buchung1,",9999999999.00"))
         Spalte8.budr1 = LTRIM$ ( STR$ (BetragEU.buchung1,",9999999999.00"))
         STORE FILE "budr1"
 
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = Gesellschaft.buchung1 + "/" + sparte.buchung1
         Spalte3.budr1 = DATE$ (Datum.buchung1,"0d.mm.yyyy")
         STORE FILE "budr1"
 
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = Buchungstext.buchung1
         IF KÅndigung.kvertrag > 0 THEN 
           Spalte3.budr1 = DATE$ (KÅndigung.kvertrag,"0d.mm.yyyy")
         END IF 
         STORE FILE "budr1"
 
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = "Vertrag wurde abgeschlossen durch:"
         Spalte2.budr1 = VTAgentur.buchung1
         STORE FILE "budr1"
       END IF 
     END IF 
     IF lauf% = 4 THEN 
       REM Stornos 
       IF vorschujn.buchung1 <> 1 AND BetragEU.buchung1 < 1 THEN 
         sumapBruts% = sumapBruts% + GesamtbetragEU.buchung1
         sumapNets% = sumapNets% + Betrageu.buchung1
         sumapSRs% = sumapSRs% + sreu.buchung1
         sumapVSVs% = sumapVSVs% + vsv.buchung1
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = Nachname.buchung1 + "," + Vorname.buchung1
         Spalte3.budr1 = DATE$ (VS_Beginn.buchung1,"0d.mm.yyyy")
         Spalte5.budr1 = LTRIM$ ( STR$ (GesamtbetragEU.buchung1,",9999999999.00"))
         Spalte6.budr1 = LTRIM$ ( STR$ (SREU.buchung1,",9999999999.00"))
         Spalte7.budr1 = LTRIM$ ( STR$ (VSV.buchung1,",9999999999.00"))
         Spalte8.budr1 = LTRIM$ ( STR$ (BetragEU.buchung1,",9999999999.00"))
         STORE FILE "budr1"
 
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = Gesellschaft.buchung1 + "/" + sparte.buchung1
         Spalte3.budr1 = DATE$ (Datum.buchung1,"0d.mm.yyyy")
         STORE FILE "budr1"
 
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = Buchungstext.buchung1
         IF KÅndigung.kvertrag > 0 THEN 
           Spalte3.budr1 = DATE$ (KÅndigung.kvertrag,"0d.mm.yyyy")
         END IF 
         STORE FILE "budr1"
 
         BLANK FILE "budr1"
         zeilennummer.budr1 = SER ("budr1",1)
         Spalte1.budr1 = "Vertrag wurde abgeschlossen durch:"
         Spalte2.budr1 = VTAgentur.buchung1
         STORE FILE "budr1"
       END IF 
     END IF 
     SELECT NEXT FILE "Buchung1" INDEX QuickCode.BUCHUNG1
   WEND 
   REM Summenzeilen
   IF lauf% = 0 THEN 
     BLANK FILE "budr1"
     zeilennummer.budr1 = SER ("budr1",1)
     STORE FILE "budr1"
     BLANK FILE "budr1"
     zeilennummer.budr1 = SER ("budr1",1)
     Spalte1.budr1 = "Zwischensumme AP"
     Spalte5.budr1 = LTRIM$ ( STR$ (sumapbrut%,",9999999999.00"))
     Spalte6.budr1 = LTRIM$ ( STR$ (sumapsr%,",9999999999.00"))
     Spalte7.budr1 = LTRIM$ ( STR$ (sumapvsv%,",9999999999.00"))
     Spalte8.budr1 = LTRIM$ ( STR$ (sumapnet%,",9999999999.00"))
     STORE FILE "budr1"
     BLANK FILE "budr1"
     zeilennummer.budr1 = SER ("budr1",1)
     STORE FILE "budr1"
   END IF 
   IF lauf% = 1 THEN 
     BLANK FILE "budr1"
     zeilennummer.budr1 = SER ("budr1",1)
     STORE FILE "budr1"
     BLANK FILE "budr1"
     zeilennummer.budr1 = SER ("budr1",1)
     Spalte1.budr1 = "Zwischensumme Bestandprovision"
     Spalte5.budr1 = LTRIM$ ( STR$ (sumpflBrut%,",9999999999.00"))
     Spalte8.budr1 = LTRIM$ ( STR$ (sumpflBrut%,",9999999999.00"))
     STORE FILE "budr1"
     BLANK FILE "budr1"
     zeilennummer.budr1 = SER ("budr1",1)
     STORE FILE "budr1"
   END IF 
   IF lauf% = 2 THEN 
     BLANK FILE "budr1"
     zeilennummer.budr1 = SER ("budr1",1)
     STORE FILE "budr1"
     BLANK FILE "budr1"
     zeilennummer.budr1 = SER ("budr1",1)
     Spalte1.budr1 = "Zwischensumme VorschÅsse"
     Spalte5.budr1 = LTRIM$ ( STR$ (sumvorschbrut%,",9999999999.00"))
     Spalte6.budr1 = LTRIM$ ( STR$ (sumvorschsr%,",9999999999.00"))
     Spalte7.budr1 = LTRIM$ ( STR$ (sumvorschvsv%,",9999999999.00"))
     Spalte8.budr1 = LTRIM$ ( STR$ (sumvorschnet%,",9999999999.00"))
     STORE FILE "budr1"
     BLANK FILE "budr1"
     zeilennummer.budr1 = SER ("budr1",1)
     STORE FILE "budr1"
   END IF 
 
   IF lauf% = 3 THEN 
     BLANK FILE "budr1"
     zeilennummer.budr1 = SER ("budr1",1)
     STORE FILE "budr1"
     BLANK FILE "budr1"
     zeilennummer.budr1 = SER ("budr1",1)
     Spalte1.budr1 = "Zwischensumme RÅckzahlung VorschÅsse"
     Spalte5.budr1 = LTRIM$ ( STR$ (sumvorschbrutr%,",9999999999.00"))
     Spalte6.budr1 = LTRIM$ ( STR$ (sumvorschsrr%,",9999999999.00"))
     Spalte7.budr1 = LTRIM$ ( STR$ (sumvorschvsvr%,",9999999999.00"))
     Spalte8.budr1 = LTRIM$ ( STR$ (sumvorschnetr%,",9999999999.00"))
     STORE FILE "budr1"
     BLANK FILE "budr1"
     zeilennummer.budr1 = SER ("budr1",1)
     STORE FILE "budr1"
   END IF 
 
   IF lauf% = 4 THEN 
     BLANK FILE "budr1"
     zeilennummer.budr1 = SER ("budr1",1)
     STORE FILE "budr1"
     BLANK FILE "budr1"
     zeilennummer.budr1 = SER ("budr1",1)
     Spalte1.budr1 = "Zwischensumme Stornos"
     Spalte5.budr1 = LTRIM$ ( STR$ (sumapbruts%,",9999999999.00"))
     Spalte6.budr1 = LTRIM$ ( STR$ (sumapsrs%,",9999999999.00"))
     Spalte7.budr1 = LTRIM$ ( STR$ (sumapvsvs%,",9999999999.00"))
     Spalte8.budr1 = LTRIM$ ( STR$ (sumapnets%,",9999999999.00"))
     STORE FILE "budr1"
     BLANK FILE "budr1"
     zeilennummer.budr1 = SER ("budr1",1)
     STORE FILE "budr1"
   END IF 
 
   REM CALL Fehler("Test1","")
   lauf% = lauf% + 1
   SELECT FIRST FILE "Buchung1" INDEX QuickCode.BUCHUNG1
   IF lauf% < 5 THEN GOTO loop2004082801
   REM Gesamtsumme
   BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   STORE FILE "budr1"
   BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   Spalte1.budr1 = "Gesamtsumme"
   Spalte5.budr1 = LTRIM$ ( STR$ (sumpflBrut% + sumapbrut% + sumapbruts% + sumvorschbrut% + sumvorschbrutr%,",9999999999.00"))
   Spalte6.budr1 = LTRIM$ ( STR$ (sumapsr% + sumapsrs% + sumvorschsr% + sumvorschsrr%,",9999999999.00"))
   Spalte7.budr1 = LTRIM$ ( STR$ (sumapvsv% + sumapvsvs% + sumvorschvsv% + sumvorschvsvr%,",9999999999.00"))
   Spalte8.budr1 = LTRIM$ ( STR$ (sumpflBrut% + sumapnets% + sumapnet% + sumvorschnet% + sumvorschnetr%,",9999999999.00"))
   STORE FILE "budr1"
   BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   STORE FILE "budr1"
 
   gesbrut% = gesbrut% + sumpflBrut% + sumapbrut% + sumapbruts% + sumvorschbrut% + sumvorschbrutr%
   gesnet% = gesnet% + sumpflBrut% + sumapnet% + sumapnets% + sumvorschnet% + sumvorschnetr%
   gessr% = gessr% + sumapsr% + sumapsrs% + sumvorschsr% + sumvorschsrr%
   gesvsv% = gesvsv% + sumapvsv% + sumapvsvs% + sumvorschvsv% + sumvorschvsvr%
 
 
   REM CALL Fehler("Test2","")
   REM 5 leerzeilen schaffen, bis der nÑchste MA in die Liste ausgegeben wird
   FOR b% = 0 TO 5
     BLANK FILE "budr1"
     zeilennummer.budr1 = SER ("budr1",1)
     STORE FILE "budr1"
   NEXT b%
  
 
   REM CALL Fehler("Test " + Nachname.maadr,Agenturnr.maadr)
nextma2004082801: 
 MOUSE OFF 
 NEXT i%
 
    BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   STORE FILE "budr1"
   BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   Spalte1.budr1 = "Gesamtsumme Firma"
   Spalte5.budr1 = LTRIM$ ( STR$ (gesbrut%,",9999999999.00"))
   Spalte6.budr1 = LTRIM$ ( STR$ (gessr%,",9999999999.00"))
   Spalte7.budr1 = LTRIM$ ( STR$ (gesvsv%,",9999999999.00"))
   Spalte8.budr1 = LTRIM$ ( STR$ (gesnet%,",9999999999.00"))
   STORE FILE "budr1"
   BLANK FILE "budr1"
   zeilennummer.budr1 = SER ("budr1",1)
   STORE FILE "budr1"
budr1aufb2004082801: 
   CALL Fehler("Ausgabe der Ergebnisdatei nach MS EXCEL","")
 
  MOUSE ON 
  ON ERROR GOTO e2004082802
  IF EXISTS (_netpath$ + "12ab.XLS") THEN 
    DELETE _netpath$ + "12ab.XLS"
  END IF 
  GOTO e2004082803
e2004082802: 
  CALL Fehler("Es ist ein Fehler aufgetreten beim lîschen der temporÑren Datei: " + _netpath$ + "12ab.XLS","Bitte prÅfen Sie, ob diese eventuell in MS Excel geîffnet ist und schlie·en Sie diese!")
  WAIT FOR 20
  GOTO budr1aufb2004082801
  ON ERROR GOTO ErrorHandler
e2004082803: 
 ON ERROR GOTO ErrorHandler
 FILE "BUDR1":REM                                       Combo: Current File
 Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
 Superbase.Converters.SBF.SourceFile = "BUDR1"
 Superbase.Converters.SBF.Descending = 0
 Superbase.Converters.SBF.Merge = 0
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
 Superbase.Converters.XLS.DestFile = _netpath$ + "12ab.XLS"
 Superbase.Converters.XLS.StartRow = 2
 Superbase.Converters.XLS.StartCol = 1
 Superbase.Converters.XLS.EndRow = - 1
 Superbase.Converters.XLS.EndCol = - 1
 Superbase.Converters.XLS.UseLabels = 0
 Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
 a% = CALL ("ShellExecute",0,"open",_netpath$ + "12ab.XLS","","",1)
 END SUB 
 
 
SUB MKCopy()
 CALL Fehler("ACHTUNG komplette Sonderfunktion, die zum einmaligen Åbernehmen von Konditionen von einer Agentur zu einer Gruppe anderer Agenturen dient!","Es erfolgen keine PrÅfungen!")
  REM kopieren von
  CALL Fehler("Suchen Sie jetzt die Agentur aus, deren Konditionen kopiert werden sollen!","")
  CALL MASuFS24()
  vorg% = GCodema%
  CALL Fehler("WÑhlen Sie jetzt die Agenturen, die diese Konditionen erhalten sollen!","Duch drÅcken der STRG-Taste+Mausclick oder Shift+Ende kînnen Sie mehrere oder alle Agenturen wÑhlen!")
  IF vorg% = 0 THEN GOTO end300820041 
  REM kopieren nach
 
    DIM dlg AS Dialog
    DIM control AS DialogControl
    DIM Agenturen$( RECCOUNT ("maadr") + 1)
    DIM Auswahl$( RECCOUNT ("maadr") + 1)
    opt1% = 1
suanf30082004: 
    Superbase.Dialogs.Add("ADRSUCH")
    SET dlg = Superbase.Dialogs.ADRSUCH
    dlg.Move(0,0,222,126)
    dlg.Caption = "Vermittlersuche"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(0,1,222,72)
    control.Caption = "Suche nach"
 
    SET control = dlg.Add("DialogIcon1","DialogIcon")
    control.Move(2,16,20,22)
    control.Icon = 2
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(35,105,64,16)
    control.Default = 1
    control.Caption = "&Suche"
    control.ReturnValue = 1
 
 
 
    SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
    control.Move(30,19,106,11)
    control.Caption = "Vermittler-Nummer"
    control.Bind("opt1%")
    control.ValueOn = 1
 
    SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
    control.Move(30,33,106,11)
    control.Caption = "Vermittler-Name"
    control.Bind("opt1%")
    control.ValueOn = 2
 
 
    SET control = dlg.Add("DialogOptionButton3","DialogOptionButton")
    control.Move(30,47,106,11)
    control.Caption = "Firmenname"
    control.Bind("opt1%")
    control.ValueOn = 4
 
    SET control = dlg.Add("DialogOptionButton4","DialogOptionButton")
    control.Move(30,61,106,11)
    control.Caption = "alle Vermittler"
    control.Bind("opt1%")
    control.ValueOn = 3
 
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(23,76,133,9)
    control.Caption = "Suchbegriff:"
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(22,89,179,11)
    control.ScrollEnable = 2
    control.MaxLength = 50
    control.TextBinding = "suna$"
 
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(100,105,64,16)
    control.Caption = "&Abbruch"
    control.ReturnValue = 0
    control.Cancel = 1
 
    DIALOG "ADRSUCH",req%
    REMOVE DIALOG "ADRSUCH"
    IF req% <> 1 THEN GOTO end300820041
    IF req% = 1 THEN 
      IF opt1% = 3 THEN 
        a% = 0
        FILE "maadr"
        INDEX codema.maadr
        SELECT FIRST 
        WHILE NOT EOF ("maadr")
          Agenturen$(a%) = Agenturnr.maadr + "," + nachname.maadr + ", " + vorname.maadr + ", " + firmaname.maadr + SPACE$ (120) + STR$ (CodeMA.maadr,"000000")
          a% = a% + 1
          SELECT NEXT FILE "maadr"
        WEND 
      END IF 
      IF opt1% = 1 THEN 
        REM suche nach Vermittler-Nummer
        suna1$ = suna$ + "*"
        FILE "maadr"
        INDEX agenturnr.maadr
        SELECT FIRST 
        SELECT KEY suna$ FILE "maadr" INDEX agenturnr.maadr
        a% = 0
        WHILE NOT EOF ("maadr") AND agenturnr.maadr LIKE suna1$
          Agenturen$(a%) = Agenturnr.maadr + "," + nachname.maadr + ", " + vorname.maadr + ", " + firmaname.maadr + SPACE$ (120) + STR$ (CodeMA.maadr,"000000")
          a% = a% + 1
          SELECT NEXT FILE "maadr"
        WEND 
      END IF 
      IF opt1% = 2 THEN 
        REM suche nach Vermittler-Name
        suna1$ = suna$ + "*"
        FILE "maadr"
        INDEX nachname.maadr
        SELECT FIRST 
        SELECT KEY suna$ FILE "maadr" INDEX nachname.maadr
        a% = 0
        WHILE NOT EOF ("maadr") AND nachname.maadr LIKE suna1$
          Agenturen$(a%) = LTRIM$ (nachname.maadr) + ", " + LTRIM$ (vorname.maadr) + ", " + LTRIM$ (firmaname.maadr) + "," + LTRIM$ (Agenturnr.maadr) + SPACE$ (120) + STR$ (CodeMA.maadr,"000000")
          a% = a% + 1
          SELECT NEXT FILE "maadr"
        WEND 
      END IF 
 
      IF opt1% = 4 THEN 
        REM suche nach Vermittler-Name
        suna1$ = suna$ + "*"
        FILE "maadr"
        INDEX FirmaName.maadr
        SELECT FIRST 
        SELECT KEY suna$ FILE "maadr" INDEX FirmaName.maadr
        a% = 0
        WHILE NOT EOF ("maadr") AND FirmaName.maadr LIKE suna1$
          Agenturen$(a%) = LTRIM$ (FirmaName.maadr) + ", " + LTRIM$ (NachName.maadr) + ", " + LTRIM$ (vorname.maadr) + ", " + LTRIM$ (firmaname.maadr) + "," + LTRIM$ (Agenturnr.maadr) + SPACE$ (120) + STR$ (CodeMA.maadr,"000000")
          a% = a% + 1
          SELECT NEXT FILE "maadr"
        WEND 
      END IF 
 
 
 
 
        prompt$ = Agenturen$(0)
        CREATE DIALOG "MASUCH",0,0,380,284,"Vermittlersuche","Courier New",10
        ADD DIALOG "MASUCH",4,0,0,380,263,0,""
        ADD DIALOG "MASUCH",9,5,5,21,21,2
        ADD DIALOG "MASUCH",5,37,15,260,10,0,"Name/Nachname,Vorname"
        ADD DIALOG "MASUCH",5,37,5,151,10,0,"Bitte wÑhlen Sie die Mitarbeiter aus:"
        ADD DIALOG "MASUCH",7,7,27,368,229,10,2,Agenturen$,Auswahl$,prompt$
        ADD DIALOG "MASUCH",1,116,268,55,15,1,"&OK",1,1
        ADD DIALOG "MASUCH",1,182,268,55,15,0,"&Abbrechen",0,0
        MOUSE ON 
        DIALOG "MASUCH",req%
        REMOVE DIALOG "MASUCH"
        IF req% = 0 THEN GOTO end300820041
    END IF 
 
         GKondNoDattes$ = "TRUE"
         datumueb% = - 1
 
       IF RECCOUNT ("gekond") < 10000 THEN 
         DIM TempVect%( RECCOUNT ("gekond") * 2)
         DIM TempBWBIS%( RECCOUNT ("gekond"))
       ELSE 
         DIM TempVect%(20000)
         DIM TempBWBIS%(20000)
       END IF 
       FILE "gekond"
       INDEX codema.gekond
       SELECT FIRST 
       SELECT KEY vorg% FILE "gekond" INDEX codema.gekond
       a% = 0
       b% = 0
       WHILE NOT EOF ("gekond") AND codema.gekond = vorg%
           TempVect%(a%) = lfdnr.gekond
           TempVect%(a% + 1) = BWVON.gekond
           TempBWBIS%(b%) = BWBIS.gekond
           REM 110197 TempVect%(a% + 1) = v%
           a% = a% + 2
           b% = b% + 1
           SET STATUS STR$ (a%,"999999")
         SELECT NEXT FILE "gekond" INDEX codema.gekond
       WEND 
       CALL Fehler("Lîschen Konditionen","")
       kzu% = 0
       MOUSE OFF 
       WHILE Auswahl$(kzu%) <> ""
         lcuma% = VAL ( RIGHT$ (Auswahl$(kzu%),6))
         SELECT FIRST FILE "maadr" INDEX codema.maadr
         SELECT KEY lcuma% FILE "maadr" INDEX codema.maadr
         REMOVE FROM FILE "gekond" WHERE codema.gekond = lcuma%
         SET STATUS "Lîsche Konditionen von " + Nachname.maadr + "," + Agenturnr.maadr
         kzu% = kzu% + 1
       WEND 
 
 
       kzu% = 0
     WHILE Auswahl$(kzu%) <> ""
       lcuma% = VAL ( RIGHT$ (Auswahl$(kzu%),6))
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY lcuma% FILE "maadr" INDEX codema.maadr
       SET STATUS "öbernehme Konditionen fÅr " + Nachname.maadr + "," + Agenturnr.maadr
       kzu% = kzu% + 1
       k% = 0
       FOR i% = 0 TO a% - 2 STEP 2
         SELECT FIRST 
         SELECT KEY TempVect%(i%) FILE "gekond" INDEX lfdnr.gekond
         REM 12092003 scode$ = STR$ (cuma%,"000000") + STR$ (CodeGE.gekond,"000000") + STR$ (CodeVA.gekond,"000000")
         scode$ = STR$ (lcuma%,"000000") + STR$ (CodeGE.gekond,"000000") + STR$ (CodeVA.gekond,"000000")
         REM 281199 IF NOT EXISTS (scode$,quickcode.GEKOND) OR opt% = 1 OR opt% = 3 THEN 
 
         IF NOT EXISTS (scode$,quickcode.GEKOND) THEN 
           bwbis% = 0
           bis$ = ""
           IF CodeGE.GEKOND <> 0 AND CodeVA.GEKOND <> 0 THEN 
             _erg% = _erg% + 1
             IF datumueb% = - 1 THEN 
               bwvon% = TempVect%(i% + 1)
               bwbis% = TempBWBIS%(i%)
               von$ = DATE$ (bwvon%,"0d.mm.yyyy")
               IF bwbis% > 0 THEN bis$ = DATE$ (bwbis%,"0d.mm.yyyy")
               k% = k% + 1
             END IF 
             IF GKondNoDattes$ = "TRUE" THEN 
               BLANK DUPLICATE 
               lfdnr.gekond = SER ("gekond",1)
               Codema.gekond = lcuma%
               BWvon.gekond = von$
               IF bis$ <> "" THEN BWbis.gekond = bis$
               anpass.gekond = 1
               QuickCode.gekond = STR$ (CodeMA.gekond,"000000") + STR$ (CodeGE.gekond,"000000") + STR$ (CodeVA.gekond,"000000")
               QCodeGEVA.gekond = STR$ (Codege.gekond,"000000") + STR$ (Codeva.gekond,"000000")
               CALL MATimeStamp("gekond")
               CALL QuickStore("gekond")
             ELSE 
               IF von$ <> "" THEN 
                 IF v% > TempVect%(i% + 1) THEN 
                   REM 110197 bwvon% = TempVect%(i% + 1)
                   bwvon% = v%
                 ELSE 
                   REM 110197 bwvon% = v%
                   bwvon% = TempVect%(i% + 1)
                 END IF 
               ELSE 
                 bwvon% = TempVect%(i% + 1)
               END IF 
               IF bis$ <> "" THEN 
                 IF b% < bwvon% THEN bis$ = ""
               END IF 
               BLANK DUPLICATE 
               lfdnr.gekond = SER ("gekond",1)
               Codema.gekond = lcuma%
               BWvon.gekond = bwvon%
               BWbis.gekond = bis$
               anpass.gekond = 1
               CALL MATimeStamp("gekond")
               CALL QuickStore("gekond")
             END IF 
             MOUSE OFF 
           END IF 
         END IF 
         SET STATUS STR$ (i%,"999999") + " Konditionen kopiert fÅr " + Nachname.maadr + "," + Agenturnr.maadr
       NEXT i%
     WEND 
end300820041: 
 MOUSE ON 
 END SUB 
 
  
FUNCTION GETSupervMA%(prompt%,wks%)
 REDIM Agenturen$( RECCOUNT ("supervis") + 1,1)
 REDIM Agenturen$( RECCOUNT ("supervis") + 1)
 REDIM Auswahl$( RECCOUNT ("supervis") + 1,1)
 REDIM Auswahl$( RECCOUNT ("supervis") + 1)
 cfile$ = FILE 
 _pos% = CodeMA.supervis
 alle$ = "n"
AnfAlle200220021: 
 FILE "supervis"
 INDEX Nachname.supervis
 SELECT FIRST 
 REM Agenturen$(0) = "<keine Zuordnung>" + SPACE$ (120) + "000000"
 a% = 0
 prompt$ = ""
 MOUSE OFF 
 WHILE NOT EOF ("supervis")
   sok% = - 1
   IF GASP% THEN 
     IF workstation% > 0 THEN 
       FOR ii% = 0 TO VisCount% - 1' Fall externes BÅro
         wks% = VisOff%(ii%)
         aa% = IsWksVisible%(wks%)
         naab$ = Nachname.supervis + "/" + vorname.supervis
         IF aa% = - 1 AND CodeMa.supervis <> 0 AND workstation.supervis = wks% THEN 
           REM CALL Fehler(naab$,"aa: " + STR$ (aa%))
           IF MNdisabled%("DATALOCK") THEN 
             IF Sperre.supervis <> 0 AND Sperre.supervis <> vcodema% THEN sok% = 0
           END IF 
           sok% = - 1
           IF alle$ = "n" THEN 
             IF NoAnzeige.supervis LIKE "j" THEN sok% = 0
           END IF 
           
           ii% = VisCount%
         ELSE 
           sok% = 0
         END IF 
       NEXT ii%
     END IF 
   END IF 
   IF alle$ = "n" THEN 
     IF NoAnzeige.supervis LIKE "j" THEN sok% = 0
   END IF 
   IF GMASuperCount% > 0 AND sok% THEN 
     IF IsMASuper%(codema.supervis) THEN 
     ELSE 
       sok% = 0
       END IF 
     END IF 
   END IF 
   IF sok% THEN 
     IF agenturnr.supervis <> "" THEN 
       agnr$ = TRIM$ (Agenturnr.supervis)
     ELSE 
       agnr$ = ""
     END IF 
     IF GASP% THEN 
       SELECT FIRST FILE "filiale" INDEX filialnr.filiale
       SELECT KEY Workstation.supervis FILE "filiale" INDEX filialnr.filiale
       filab$ = Name.filiale
     END IF 
     IF nachname.supervis <> "" THEN 
       IF alle$ <> "j" THEN 
         IF firmaname.supervis <> "" THEN 
           firma$ = "/" + LTRIM$ (firmaname.supervis)
         ELSE 
           firma$ = ""
         END IF 
         IF GAFSK$ LIKE "TRUE" THEN 
           test$ = PAD$ ( LTRIM$ (Nachname.supervis) + ", " + LTRIM$ (Vorname.supervis) + LTRIM$ (firma$) + ", " + LTRIM$ (plz.supervis) + " " + LTRIM$ (ort.supervis) + ", ",50)
         ELSE 
           test$ = PAD$ ( LTRIM$ (Nachname.supervis) + ", " + LTRIM$ (Vorname.supervis) + LTRIM$ (firma$) + ", " + LTRIM$ (plz.supervis) + " " + LTRIM$ (ort.supervis) + ", " + LTRIM$ (Stra·e.supervis),60)
         END IF 
         IF GAFSK$ LIKE "TRUE" THEN 
           Agenturen$(a%) = test$ + " " + PAD$ (agnr$,15) + "   " + Maklerbetreuer.supervis
         ELSE 
           IF Gfsc% <> - 1 THEN 
             Agenturen$(a%) = test$ + " " + PAD$ (agnr$,20) + STR$ (stufe.supervis,"000")
           ELSE 
             Agenturen$(a%) = PAD$ (agnr$,20) + "     " + test$
           END IF 
         END IF 
       ELSE 
         IF firmaname.supervis <> "" THEN 
           firma$ = "/" + LTRIM$ (firmaname.supervis)
         ELSE 
           firma$ = ""
         END IF 
         IF GAFSK$ LIKE "TRUE" THEN 
           test$ = PAD$ (Nachname.supervis + ", " + Vorname.supervis + LTRIM$ (firma$) + ", " + LTRIM$ (plz.supervis) + " " + LTRIM$ (ort.supervis) + ", ",40)
         ELSE 
           test$ = PAD$ (Nachname.supervis + ", " + Vorname.supervis + LTRIM$ (firma$) + ", " + LTRIM$ (plz.supervis) + " " + LTRIM$ (ort.supervis) + ", " + LTRIM$ (Stra·e.supervis),50)
         END IF 
         IF NoAnzeige.supervis LIKE "j" THEN 
           IF GAFSK$ LIKE "TRUE" THEN 
             Agenturen$(a%) = test$ + " " + PAD$ (agnr$,15) + " * " + Maklerbetreuer.supervis
           ELSE 
             IF gfsc% <> - 1 THEN 
               Agenturen$(a%) = test$ + " " + PAD$ (agnr$,20) + STR$ (stufe.supervis,"000") + "            *"
             ELSE 
               Agenturen$(a%) = PAD$ (agnr$,20) + "     " + test$ + "            *"
             END IF 
           END IF 
         ELSE 
           IF GAFSK$ LIKE "TRUE" THEN 
             Agenturen$(a%) = test$ + " " + PAD$ (agnr$,15) + "   " + Maklerbetreuer.supervis
           ELSE 
             IF gfsc% <> - 1 THEN 
               Agenturen$(a%) = test$ + " " + PAD$ (agnr$,20) + STR$ (stufe.supervis,"000") + "             "
             ELSE 
               Agenturen$(a%) = PAD$ (agnr$,20) + "     " + test$ + "             "
             END IF 
           END IF 
         END IF 
       END IF 
       IF GASP% THEN 
         Agenturen$(a%) = Agenturen$(a%) + "    " + "   " + filab$
       END IF 
       Agenturen$(a%) = Agenturen$(a%) + SPACE$ (120) + STR$ (CodeMA.supervis,"000000")
       IF CodeMA.supervis = prompt% THEN prompt$ = Agenturen$(a%)
       a% = a% + 1
     END IF 
   END IF 
   SET STATUS nachname.supervis + "," + vorname.supervis + " eingelesen"
   SELECT NEXT FILE "supervis"
 WEND 
 prompt$ = agprompt$
 IF alle$ <> "j" THEN 
   IF GASP% THEN 
     CREATE DIALOG "MASUCH",0,0,440,284,"Agentur-/VermittlerÅbersicht ohne die ausgeblendeten Mitarbeiter","Courier New",10
   ELSE 
     CREATE DIALOG "MASUCH",0,0,374,284,"Agentur-/VermittlerÅbersicht ohne die ausgeblendeten Mitarbeiter","Courier New",10
   END IF 
 ELSE 
   IF GASP% THEN 
     CREATE DIALOG "MASUCH",0,0,440,284,"Agentur-/VermittlerÅbersicht aller Vermittler","Courier New",10
   ELSE 
     CREATE DIALOG "MASUCH",0,0,374,284,"Agentur-/VermittlerÅbersicht aller Vermittler","Courier New",10
   END IF 
 END IF 
 IF GASP% THEN 
   ADD DIALOG "MASUCH",4,0,0,440,263,0,""
 ELSE 
   ADD DIALOG "MASUCH",4,0,0,368,263,0,""
 END IF 
 ADD DIALOG "MASUCH",9,5,5,21,21,2
 ADD DIALOG "MASUCH",5,37,5,151,10,0,"Bitte wÑhlen Sie einen Vermittler aus:"
 IF alle$ <> "j" THEN 
   IF GASP% THEN 
     ADD DIALOG "MASUCH",5,37,15,390,10,0,"Vermittler                                       Agenturnummer          Stufe       BÅro"
   ELSE 
     IF GAFSK$ LIKE "TRUE" THEN 
       ADD DIALOG "MASUCH",5,37,15,310,10,0,"Vermittler                                  Agenturnummer    Maklerbetreuer"
     ELSE 
       ADD DIALOG "MASUCH",5,37,15,310,10,0,"Vermittler                                  Agenturnummer              Stufe"
     END IF 
   END IF 
 ELSE 
   IF GASP% THEN 
     ADD DIALOG "MASUCH",5,37,15,390,10,0,"Vermittler                                 Agenturnummer       Stufe    ausgeblendet   BÅro"
   ELSE 
     IF GAFSK$ LIKE "TRUE" THEN 
       ADD DIALOG "MASUCH",5,37,15,330,10,0,"Vermittler                     Agenturnummer   Maklerbetreuer"
     ELSE 
       ADD DIALOG "MASUCH",5,37,15,330,10,0,"Vermittler                                 Agenturnummer       Stufe    ausgebl."
     END IF 
   END IF 
 END IF 
 IF GASP% THEN 
   ADD DIALOG "MASUCH",7,7,27,430,229,10,2,Agenturen$,Auswahl$,prompt$
 ELSE 
   ADD DIALOG "MASUCH",7,7,27,330,229,10,2,Agenturen$,Auswahl$,prompt$
 END IF 
 ADD DIALOG "MASUCH",1,56,268,55,15,1,"&OK",1,1
 ADD DIALOG "MASUCH",1,113,268,55,15,0,"&Abbrechen",0,0
 IF alle$ <> "j" THEN ADD DIALOG "MASUCH",1,173,268,65,15,0,"Alle anzeigen",2,0
 MOUSE ON 
 DIALOG "MASUCH",req%
 REMOVE DIALOG "MASUCH"
 MOUSE OFF 
 IF req% = 2 THEN 
   REDIM Agenturen$( RECCOUNT ("supervis") + 1,1)
   REDIM Agenturen$( RECCOUNT ("supervis") + 1)
   alle$ = "j"
   GOTO AnfAlle200220021
 END IF 
 IF req% = 1 THEN 
   GETSupervMA% = VAL ( RIGHT$ (Auswahl$(0),6))
   cuma% = GETSupervMA%
   prompt$ = Auswahl$(0)
   agprompt$ = prompt$
 ELSE 
   GETSupervMA% = 0
 END IF 
 IF GETSupervMA% > 0 THEN SELECT KEY GETSupervMA% FILE "supervis" INDEX CodeMA.supervis
 FILE cfile$
 END FUNCTION 
 
 
 ' Registrierung von Terminen
 ' ===========================================================================
  
SUB AQRegister()
 cfile$ = FILE 
 cc% = codeku.dokument
 SELECT KEY cc% FILE GADRDat$ INDEX codeku.GadrDat$
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 DIM Aktionen$(300)
 FILE "AKTIONEN"
 INDEX CodeAK
 SELECT FIRST 
 a% = - 1
 WHILE NOT EOF ("AKTIONEN")
   a% = a% + 1
   Aktionen$(a%) = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
   SELECT NEXT 
 WEND 
 SELECT KEY 1
 Aktion$ = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
 DIM Mitarbeiter$(300)
 FILE "SUPERVIS"
 INDEX CodeMA
 SELECT FIRST 
 a% = - 1
 WHILE NOT EOF ("SUPERVIS")
   a% = a% + 1
   Mitarbeiter$(a%) = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
   SELECT NEXT 
 WEND 
 SELECT FIRST FILE "SUPERVIS" INDEX CodeMA.supervis
 SELECT KEY GMAcodeMA% FILE "SUPERVIS" INDEX CodeMA.supervis
 MANachname$ = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
 datum$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 Termin$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 Nachname$ = Nachname.GAdrDat$
 Vorname$ = Vorname.GAdrDat$
 Stra·e$ = Stra·e.GAdrDat$
 Ort$ = PLZ.GAdrDat$ + " " + Ort.GAdrDat$
 tmpku% = CodeKU.GAdrDat$
 REM RNotiz$ = ""
    DIM dlg AS Dialog
    DIM control AS DialogControl
 ON ERROR GOTO dokt140420001 
   GOTO dokt140420002
dokt140420001: 
   CALL Fehler("Die Werte fÅr Datum oder Uhrzeit scheinen falsch zu sein!","Bitte prÅfen")
dokt140420002: 
    Superbase.Dialogs.Add("AQREGISTER")
    SET dlg = Superbase.Dialogs.AQREGISTER
    dlg.Move(0,0,354,235)
    dlg.Caption = title$
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(5,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Datum$"
 
    SET control = dlg.Add("DialogTextBox2","DialogTextBox")
    control.Move(49,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Termin$"
 
    SET control = dlg.Add("DialogTextBox3","DialogTextBox")
    control.Move(93,8,25,12)
    control.MaxLength = 5
    control.TextBinding = "Zeit$"
 
    SET control = dlg.Add("DialogTextBox4","DialogTextBox")
    control.Move(130,8,24,12)
    control.MaxLength = 5
    control.TextBinding = "Dauer$"
    IF GADRDat$ LIKE "ADRESSEN" THEN 
      SET control = dlg.Add("DialogTextBox6","DialogTextBox")
      control.Move(185,8,40,12)
      control.MaxLength = 10
      control.TextBinding = "VTermin$"
 
      SET control = dlg.Add("DialogTextBox7","DialogTextBox")
      control.Move(235,8,25,12)
      control.MaxLength = 5
      control.TextBinding = "VZeit$"
    END IF 
    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(130,22,28,11)
    control.Caption = "Dauer"
    IF GADRDat$ LIKE "ADRESSEN" THEN 
      SET control = dlg.Add("DialogLabel19","DialogLabel")
      control.Move(185,22,45,13)
      control.Caption = "Vorlagetermin"
 
      SET control = dlg.Add("DialogLabel20","DialogLabel")
      control.Move(235,22,54,13)
      control.Caption = "Vorlagezeit"
    END IF 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(5,22,32,13)
    control.Caption = "Datum"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(49,22,28,13)
    control.Caption = "Termin"
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(93,22,28,13)
    control.Caption = "Uhrzeit"
 
    SET control = dlg.Add("DialogLabel5","DialogLabel")
    control.Move(5,36,123,12)
    control.Caption = "Zuordnung zur Aktion"
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(186,44,160,81)
    control.Caption = "Adresse"
 
    SET control = dlg.Add("DialogLabel8","DialogLabel")
    control.Move(190,59,39,12)
    control.Caption = "Nachname"
 
    SET control = dlg.Add("DialogLabel14","DialogLabel")
    control.Move(230,59,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Nachname$"
 
    SET control = dlg.Add("DialogLabel9","DialogLabel")
    control.Move(190,69,32,12)
    control.Caption = "Vorname"
 
    SET control = dlg.Add("DialogLabel15","DialogLabel")
    control.Move(230,69,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Vorname$"
 
    SET control = dlg.Add("DialogLabel10","DialogLabel")
    control.Move(190,79,24,12)
    control.Caption = "Stra·e"
 
    SET control = dlg.Add("DialogLabel16","DialogLabel")
    control.Move(230,79,116,12)
    control.CaptionBinding = "Stra·e$"
 
    SET control = dlg.Add("DialogLabel11","DialogLabel")
    control.Move(190,89,19,12)
    control.Caption = "Ort"
 
    SET control = dlg.Add("DialogLabel17","DialogLabel")
    control.Move(230,89,116,12)
    control.CaptionBinding = "Ort$"
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(190,104,152,14)
    control.Caption = "Auswahl"
    control.ReturnValue = 2
 
    SET control = dlg.Add("DialogComboBox1","DialogComboBox")
    control.Move(5,46,169,83)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Aktionen$","Aktion$")
 
    SET control = dlg.Add("DialogLabel6","DialogLabel")
    control.Move(5,65,139,8)
    control.Caption = "Eintragen in den Kalender des Mitarbeiters"
 
    SET control = dlg.Add("DialogComboBox2","DialogComboBox")
    control.Move(5,76,169,90)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Mitarbeiter$","MANachname$")
 
    SET control = dlg.Add("DialogLabel7","DialogLabel")
    control.Move(5,96,139,8)
    control.Caption = "Notiz"
 
    SET control = dlg.Add("DialogTextBox5","DialogTextBox")
    control.Move(5,105,169,128)
    control.MultiLine = 1
    control.ScrollBars = 2
    control.MaxLength = 4000
    control.TextBinding = "RNotiz$"
 
    SET control = dlg.Add("DialogLabel12","DialogLabel")
    control.Move(186,133,162,29)
    control.Caption = "Wenn Sie diesen Termin nur zu Informationszwecken aufnehmen mîchten, markieren Sie bitte die Option 'Termin erledigt'."
 
    SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
    control.Move(186,165,76,12)
    control.Caption = "Termin erledigt"
    control.Bind("Terminerl$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel13","DialogLabel")
    control.Move(186,178,159,37)
    control.Caption = "Nach BetÑtigung der SchaltflÑche 'OK' wird der Eintrag in der Termindatei erzeugt."
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(186,217,78,15)
    control.Default = 1
    control.Caption = "&OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
    control.Move(268,217,78,15)
    control.Caption = "&Abbrechen"
    control.ReturnValue = 0
    control.Cancel = 1
 
 _ok% = 0
 WHILE _ok% = 0
   DIALOG "AQREGISTER",req%
   IF req% = 2 THEN 
     kunr% = ADRSuche%(0)
     IF kunr% <> 0 THEN 
       SELECT KEY kunr% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
       Nachname$ = Nachname.GAdrDat$
       Vorname$ = Vorname.GAdrDat$
       Stra·e$ = Stra·e.GAdrDat$
       Ort$ = PLZ.GAdrDat$ + " " + Ort.GAdrDat$
       tmpku% = CodeKU.GAdrDat$
     END IF 
   END IF 
   IF req% = 0 THEN _ok% = 2
   IF req% = 1 THEN _ok% = 1
 WEND 
 REMOVE DIALOG "AQREGISTER"
 IF _ok% = 1 THEN 
   FILE GAkquiDat$
   BLANK 
   cuaq% = SER (GAkquiDat$,1)
   codeaq.GAkquiDat$ = cuaq%
   codeKU.GAkquiDat$ = tmpku%
   CodeAK.GAkquiDat$ = VAL ( MID$ (Aktion$, LEN (Aktion$) - 6,6))
   CodeMA.GAkquiDat$ = VAL ( MID$ (MANachname$, LEN (MANachname$) - 6,6))
   SELECT KEY tmpku% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
   nachname.GAkquiDat$ = LEFT$ ( TRIM$ (nachname.GAdrDat$) + "," + TRIM$ (vorname.GadrDat$),100)
   Wertung.GAkquiDat$ = 0
   Datum.GAkquiDat$ = Datum$
   Uhrzeit.GAkquiDat$ = zeit$
   Dauer.GAkquiDat$ = VAL (dauer$)
   CodeDOK.GAkquiDat$ = 0
   ErDatum.GAkquiDat$ = VTermin$
   ErZeit.GAkquiDat$ = VZeit$
   SELECT KEY codema.GAkquiDat$ LOCK FILE "supervis" INDEX codema.supervis
   Bearbeiter.GAkquiDat$ = nachname.supervis
   AnzTermine.supervis = AnzTermine.supervis + 1
   IF Terminerl$ LIKE "j" THEN 
     AnzTermineErl.supervis = AnzTermineErl.supervis + 1
   ELSE 
     AnzTermineUnErl.supervis = AnzTermineUnErl.supervis + 1
   END IF 
   STORE FILE "supervis"
   UNLOCK CURRENT FILE "Supervis"
   IF PROJECTJN$ = "TRUE" THEN 
     codepr.GAkquiDat$ = codeprdok%
     projekt.GAkquiDat$ = projektdok$
     codeprdok% = 0
     projektdok$ = ""
   END IF 
   notiz.GAkquiDat$ = rnotiz$
   termin.GAkquiDat$ = Termin$
   erledigt_Termin.GAkquiDat$ = Terminerl$
   TerminNr.GAkquiDat$ = AnzTermine.supervis
   REM 01032001
   GErledTermin$ = Terminerl$
   CALL FStore(GAkquiDat$)
 END IF 
 FILE cfile$
 ON ERROR GOTO ErrorHandler
 MOUSE ON 
 END SUB 
 

 REM Termin aus Vertrag erfassen
SUB AQVRegister()
 cfile$ = FILE 
 cc% = codeku.kvertrag
 SELECT KEY cc% FILE GADRDat$ INDEX codeku.GadrDat$
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 DIM Aktionen$(300)
 FILE "AKTIONEN"
 INDEX CodeAK
 SELECT FIRST 
 a% = - 1
 WHILE NOT EOF ("AKTIONEN")
   a% = a% + 1
   Aktionen$(a%) = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
   SELECT NEXT 
 WEND 
 SELECT KEY 1
 Aktion$ = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
 DIM Mitarbeiter$(300)
 FILE "SUPERVIS"
 INDEX CodeMA
 SELECT FIRST 
 a% = - 1
 WHILE NOT EOF ("SUPERVIS")
   a% = a% + 1
   Mitarbeiter$(a%) = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
   SELECT NEXT 
 WEND 
 IF codema.kvertrag > 0 THEN 
   SELECT FIRST FILE "maadr" INDEX codema.maadr
   SELECT KEY codema.kvertrag FILE "MAADR" INDEX codema.maadr
   Vermittler$ = Vorname.maadr + "," + Nachname.Maadr + "," + Agenturnr.maadr
 ELSE 
   Vermittler$ = "<ohne Zuordnung>"
 END IF 
 SELECT FIRST FILE "SUPERVIS" INDEX CodeMA.supervis
 SELECT KEY GMAcodeMA% FILE "SUPERVIS" INDEX CodeMA.supervis
 MANachname$ = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
 datum$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 Termin$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 Nachname$ = Nachname.GAdrDat$
 Vorname$ = Vorname.GAdrDat$
 Stra·e$ = Stra·e.GAdrDat$
 Ort$ = PLZ.GAdrDat$ + " " + Ort.GAdrDat$
 tmpku% = CodeKU.GAdrDat$
 RNotiz$ = "VS_Nr: " + VS_NR.Kvertrag + CHR$ (13) + CHR$ (10)
 RNotiz$ = RNotiz$ + "Gesellschaft: " + Gesellschaft.Kvertrag + CHR$ (13) + CHR$ (10)
 RNotiz$ = RNotiz$ + "Sparte: " + Sparte.Kvertrag + CHR$ (13) + CHR$ (10)
 IF codetarif.kvertrag > 0 THEN 
   RNotiz$ = RNotiz$ + "Tarif: " + Tariffo.Kvertrag + CHR$ (13) + CHR$ (10)
 END IF 
 RNotiz$ = RNotiz$ + "Vermittler: " + Vermittler$ + CHR$ (13) + CHR$ (10)
 RNotiz$ = RNotiz$ + "Antragsdatum: " + DATE$ (Antragsdatum.Kvertrag,"0d.mm.yyyy") + CHR$ (13) + CHR$ (10)
 RNotiz$ = RNotiz$ + "Beginn: " + DATE$ (VS_Beginn.Kvertrag,"0d.mm.yyyy") + CHR$ (13) + CHR$ (10)
 RNotiz$ = RNotiz$ + LTRIM$ ("Beitrag: " + STR$ (Beitrag.Kvertrag,",999999.00")) + CHR$ (13) + CHR$ (10)
    DIM dlg AS Dialog
    DIM control AS DialogControl
 ON ERROR GOTO dokt290320041
   GOTO dokt290320042
dokt290320041: 
   CALL Fehler("Die Werte fÅr Datum oder Uhrzeit scheinen falsch zu sein!","Bitte prÅfen")
dokt290320042: 
    Superbase.Dialogs.Add("AQREGISTER")
    SET dlg = Superbase.Dialogs.AQREGISTER
    dlg.Move(0,0,354,235)
    dlg.Caption = title$
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(5,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Datum$"
 
    SET control = dlg.Add("DialogTextBox2","DialogTextBox")
    control.Move(49,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Termin$"
 
    SET control = dlg.Add("DialogTextBox3","DialogTextBox")
    control.Move(93,8,25,12)
    control.MaxLength = 5
    control.TextBinding = "Zeit$"
 
    SET control = dlg.Add("DialogTextBox4","DialogTextBox")
    control.Move(130,8,24,12)
    control.MaxLength = 5
    control.TextBinding = "Dauer$"
    IF GADRDat$ LIKE "ADRESSEN" THEN 
      SET control = dlg.Add("DialogTextBox6","DialogTextBox")
      control.Move(185,8,40,12)
      control.MaxLength = 10
      control.TextBinding = "VTermin$"
 
      SET control = dlg.Add("DialogTextBox7","DialogTextBox")
      control.Move(235,8,25,12)
      control.MaxLength = 5
      control.TextBinding = "VZeit$"
    END IF 
    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(130,22,28,11)
    control.Caption = "Dauer"
    IF GADRDat$ LIKE "ADRESSEN" THEN 
      SET control = dlg.Add("DialogLabel19","DialogLabel")
      control.Move(185,22,45,13)
      control.Caption = "Vorlagetermin"
 
      SET control = dlg.Add("DialogLabel20","DialogLabel")
      control.Move(235,22,54,13)
      control.Caption = "Vorlagezeit"
    END IF 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(5,22,32,13)
    control.Caption = "Datum"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(49,22,28,13)
    control.Caption = "Termin"
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(93,22,28,13)
    control.Caption = "Uhrzeit"
 
    SET control = dlg.Add("DialogLabel5","DialogLabel")
    control.Move(5,36,123,12)
    control.Caption = "Zuordnung zur Aktion"
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(186,44,160,81)
    control.Caption = "Adresse"
 
    SET control = dlg.Add("DialogLabel8","DialogLabel")
    control.Move(190,59,39,12)
    control.Caption = "Nachname"
 
    SET control = dlg.Add("DialogLabel14","DialogLabel")
    control.Move(230,59,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Nachname$"
 
    SET control = dlg.Add("DialogLabel9","DialogLabel")
    control.Move(190,69,32,12)
    control.Caption = "Vorname"
 
    SET control = dlg.Add("DialogLabel15","DialogLabel")
    control.Move(230,69,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Vorname$"
 
    SET control = dlg.Add("DialogLabel10","DialogLabel")
    control.Move(190,79,24,12)
    control.Caption = "Stra·e"
 
    SET control = dlg.Add("DialogLabel16","DialogLabel")
    control.Move(230,79,116,12)
    control.CaptionBinding = "Stra·e$"
 
    SET control = dlg.Add("DialogLabel11","DialogLabel")
    control.Move(190,89,19,12)
    control.Caption = "Ort"
 
    SET control = dlg.Add("DialogLabel17","DialogLabel")
    control.Move(230,89,116,12)
    control.CaptionBinding = "Ort$"
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(190,104,152,14)
    control.Caption = "Auswahl"
    control.ReturnValue = 2
 
    SET control = dlg.Add("DialogComboBox1","DialogComboBox")
    control.Move(5,46,169,83)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Aktionen$","Aktion$")
 
    SET control = dlg.Add("DialogLabel6","DialogLabel")
    control.Move(5,65,139,8)
    control.Caption = "Eintragen in den Kalender des Mitarbeiters"
 
    SET control = dlg.Add("DialogComboBox2","DialogComboBox")
    control.Move(5,76,169,90)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Mitarbeiter$","MANachname$")
 
    SET control = dlg.Add("DialogLabel7","DialogLabel")
    control.Move(5,96,139,8)
    control.Caption = "Notiz"
 
    SET control = dlg.Add("DialogTextBox5","DialogTextBox")
    control.Move(5,105,169,128)
    control.MultiLine = 1
    control.ScrollBars = 2
    control.MaxLength = 4000
    control.TextBinding = "RNotiz$"
 
    SET control = dlg.Add("DialogLabel12","DialogLabel")
    control.Move(186,133,162,29)
    control.Caption = "Wenn Sie diesen Termin nur zu Informationszwecken aufnehmen mîchten, markieren Sie bitte die Option 'Termin erledigt'."
 
    SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
    control.Move(186,165,76,12)
    control.Caption = "Termin erledigt"
    control.Bind("Terminerl$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel13","DialogLabel")
    control.Move(186,178,159,37)
    control.Caption = "Nach BetÑtigung der SchaltflÑche 'OK' wird der Eintrag in der Termindatei erzeugt."
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(186,217,78,15)
    control.Default = 1
    control.Caption = "&OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
    control.Move(268,217,78,15)
    control.Caption = "&Abbrechen"
    control.ReturnValue = 0
    control.Cancel = 1
 
 _ok% = 0
 WHILE _ok% = 0
   DIALOG "AQREGISTER",req%
   IF req% = 2 THEN 
     kunr% = ADRSuche%(0)
     IF kunr% <> 0 THEN 
       SELECT KEY kunr% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
       Nachname$ = Nachname.GAdrDat$
       Vorname$ = Vorname.GAdrDat$
       Stra·e$ = Stra·e.GAdrDat$
       Ort$ = PLZ.GAdrDat$ + " " + Ort.GAdrDat$
       tmpku% = CodeKU.GAdrDat$
     END IF 
   END IF 
   IF req% = 0 THEN _ok% = 2
   IF req% = 1 THEN _ok% = 1
 WEND 
 REMOVE DIALOG "AQREGISTER"
 IF _ok% = 1 THEN 
   FILE GAkquiDat$
   BLANK 
   cuaq% = SER (GAkquiDat$,1)
   codeaq.GAkquiDat$ = cuaq%
   codeKU.GAkquiDat$ = tmpku%
   CodeAK.GAkquiDat$ = VAL ( MID$ (Aktion$, LEN (Aktion$) - 6,6))
   CodeMA.GAkquiDat$ = VAL ( MID$ (MANachname$, LEN (MANachname$) - 6,6))
   SELECT KEY tmpku% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
   nachname.GAkquiDat$ = LEFT$ ( TRIM$ (nachname.GAdrDat$) + "," + TRIM$ (vorname.GadrDat$),100)
   Wertung.GAkquiDat$ = 0
   Datum.GAkquiDat$ = Datum$
   Uhrzeit.GAkquiDat$ = zeit$
   Dauer.GAkquiDat$ = VAL (dauer$)
   CodeDOK.GAkquiDat$ = 0
   ErDatum.GAkquiDat$ = VTermin$
   ErZeit.GAkquiDat$ = VZeit$
   SELECT KEY codema.GAkquiDat$ LOCK FILE "supervis" INDEX codema.supervis
   Bearbeiter.GAkquiDat$ = nachname.supervis
   AnzTermine.supervis = AnzTermine.supervis + 1
   IF Terminerl$ LIKE "j" THEN 
     AnzTermineErl.supervis = AnzTermineErl.supervis + 1
   ELSE 
     AnzTermineUnErl.supervis = AnzTermineUnErl.supervis + 1
   END IF 
   STORE FILE "supervis"
   UNLOCK CURRENT FILE "Supervis"
   IF PROJECTJN$ = "TRUE" THEN 
     codepr.GAkquiDat$ = codeprdok%
     projekt.GAkquiDat$ = projektdok$
     codeprdok% = 0
     projektdok$ = ""
   END IF 
   notiz.GAkquiDat$ = rnotiz$
   termin.GAkquiDat$ = Termin$
   erledigt_Termin.GAkquiDat$ = Terminerl$
   TerminNr.GAkquiDat$ = AnzTermine.supervis
   REM 01032001
   GErledTermin$ = Terminerl$
   CALL FStore(GAkquiDat$)
 END IF 
 FILE cfile$
 ON ERROR GOTO ErrorHandler
 MOUSE ON 
 END SUB 
  
 
SUB AQNRegister()
 cfile$ = FILE 
 cc% = codeku.vorgang
 codeaq% = codeaq.vorgang
 SELECT FIRST FILE GAkquiDat$ INDEX codeaq.GAkquiDat$
 SELECT KEY codeaq% LOCK FILE GAkquiDat$ INDEX codeaq.GAkquiDat$

 SELECT KEY cc% FILE GADRDat$ INDEX codeku.GadrDat$
 CALL DFile(2,"OFFICE\aktionen" + _fpw$)
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + GAkquiDat$ + _fpw$)
 DIM Aktionen$(300)
 FILE "AKTIONEN"
 INDEX CodeAK
 SELECT FIRST 
 a% = - 1
 WHILE NOT EOF ("AKTIONEN")
   a% = a% + 1
   Aktionen$(a%) = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
   SELECT NEXT 
 WEND 
 SELECT KEY 1
 Aktion$ = Bezeichnung.AKTIONEN + " (" + STR$ (CodeAK.AKTIONEN,"000000") + ")"
 DIM Mitarbeiter$(300)
 FILE "SUPERVIS"
 INDEX CodeMA
 SELECT FIRST 
 a% = - 1
 WHILE NOT EOF ("SUPERVIS")
   a% = a% + 1
   Mitarbeiter$(a%) = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
   SELECT NEXT 
 WEND 
 SELECT FIRST FILE "SUPERVIS" INDEX CodeMA.supervis
 SELECT KEY codema.GAkquiDat$ FILE "SUPERVIS" INDEX CodeMA.supervis
 MANachname$ = Nachname.SUPERVIS + ", " + Vorname.SUPERVIS + " (" + STR$ (CodeMA.SUPERVIS,"000000") + ")"
 datum$ = DATE$ (Datum.GAkquiDat$,"0d.mm.yyyy")
 Termin$ = DATE$ (Termin.GAkquiDat$,"0d.mm.yyyy")
 Nachname$ = Nachname.GAdrDat$
 Vorname$ = Vorname.GAdrDat$
 Stra·e$ = Stra·e.GAdrDat$
 Ort$ = PLZ.GAdrDat$ + " " + Ort.GAdrDat$
 tmpku% = CodeKU.GAdrDat$
 RNotiz$ = Notiz.GAkquiDat$
 VTermin$ = DATE$ (ErDatum.GAkquiDat$,"0d.mm.yyyy")
 VZeit$ = TIME$ (Erzeit.GAkquiDat$,"hh:mm")
 DIM dlg AS Dialog
    DIM control AS DialogControl
 ON ERROR GOTO dokt300920051
   GOTO dokt300920052
dokt300920051: 
   CALL Fehler("Die Werte fÅr Datum oder Uhrzeit scheinen falsch zu sein!","Bitte prÅfen")
dokt300920052: 
    Superbase.Dialogs.Add("AQREGISTER")
    SET dlg = Superbase.Dialogs.AQREGISTER
    dlg.Move(0,0,354,235)
    dlg.Caption = title$
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(5,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Datum$"
 
    SET control = dlg.Add("DialogTextBox2","DialogTextBox")
    control.Move(49,8,40,12)
    control.MaxLength = 10
    control.TextBinding = "Termin$"
 
    SET control = dlg.Add("DialogTextBox3","DialogTextBox")
    control.Move(93,8,25,12)
    control.MaxLength = 5
    control.TextBinding = "Zeit$"
 
    SET control = dlg.Add("DialogTextBox4","DialogTextBox")
    control.Move(130,8,24,12)
    control.MaxLength = 5
    control.TextBinding = "Dauer$"
    IF GADRDat$ LIKE "ADRESSEN" THEN 
      SET control = dlg.Add("DialogTextBox6","DialogTextBox")
      control.Move(185,8,40,12)
      control.MaxLength = 10
      control.TextBinding = "VTermin$"
 
      SET control = dlg.Add("DialogTextBox7","DialogTextBox")
      control.Move(235,8,25,12)
      control.MaxLength = 5
      control.TextBinding = "VZeit$"
    END IF 
    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(130,22,28,11)
    control.Caption = "Dauer"
    IF GADRDat$ LIKE "ADRESSEN" THEN 
      SET control = dlg.Add("DialogLabel19","DialogLabel")
      control.Move(185,22,45,13)
      control.Caption = "Vorlagetermin"
 
      SET control = dlg.Add("DialogLabel20","DialogLabel")
      control.Move(235,22,54,13)
      control.Caption = "Vorlagezeit"
    END IF 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(5,22,32,13)
    control.Caption = "Datum"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(49,22,28,13)
    control.Caption = "Termin"
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(93,22,28,13)
    control.Caption = "Uhrzeit"
 
    SET control = dlg.Add("DialogLabel5","DialogLabel")
    control.Move(5,36,123,12)
    control.Caption = "Zuordnung zur Aktion"
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(186,44,160,81)
    control.Caption = "Adresse"
 
    SET control = dlg.Add("DialogLabel8","DialogLabel")
    control.Move(190,59,39,12)
    control.Caption = "Nachname"
 
    SET control = dlg.Add("DialogLabel14","DialogLabel")
    control.Move(230,59,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Nachname$"
 
    SET control = dlg.Add("DialogLabel9","DialogLabel")
    control.Move(190,69,32,12)
    control.Caption = "Vorname"
 
    SET control = dlg.Add("DialogLabel15","DialogLabel")
    control.Move(230,69,116,12)
    control.NoKeyboardEquivalent = 1
    control.CaptionBinding = "Vorname$"
 
    SET control = dlg.Add("DialogLabel10","DialogLabel")
    control.Move(190,79,24,12)
    control.Caption = "Stra·e"
 
    SET control = dlg.Add("DialogLabel16","DialogLabel")
    control.Move(230,79,116,12)
    control.CaptionBinding = "Stra·e$"
 
    SET control = dlg.Add("DialogLabel11","DialogLabel")
    control.Move(190,89,19,12)
    control.Caption = "Ort"
 
    SET control = dlg.Add("DialogLabel17","DialogLabel")
    control.Move(230,89,116,12)
    control.CaptionBinding = "Ort$"
 
    REM SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    REM control.Move(190,104,152,14)
    REM control.Caption = "Auswahl"
    REM control.ReturnValue = 2
 
    SET control = dlg.Add("DialogComboBox1","DialogComboBox")
    control.Move(5,46,169,83)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Aktionen$","Aktion$")
 
    SET control = dlg.Add("DialogLabel6","DialogLabel")
    control.Move(5,65,139,8)
    control.Caption = "Eintragen in den Kalender des Mitarbeiters"
 
    SET control = dlg.Add("DialogComboBox2","DialogComboBox")
    control.Move(5,76,169,90)
    control.Style = 2
    control.Sorted = 1
    control.ScrollBars = 2
    control.Bind("Mitarbeiter$","MANachname$")
 
    SET control = dlg.Add("DialogLabel7","DialogLabel")
    control.Move(5,96,139,8)
    control.Caption = "Notiz"
 
    SET control = dlg.Add("DialogTextBox5","DialogTextBox")
    control.Move(5,105,169,128)
    control.MultiLine = 1
    control.ScrollBars = 2
    control.MaxLength = 4000
    control.TextBinding = "RNotiz$"
 
    SET control = dlg.Add("DialogLabel12","DialogLabel")
    control.Move(186,133,162,29)
    control.Caption = "Wenn Sie diesen Termin nur zu Informationszwecken aufnehmen mîchten, markieren Sie bitte die Option 'Termin erledigt'."
 
    SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
    control.Move(186,165,76,12)
    control.Caption = "Termin erledigt"
    control.Bind("Terminerl$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel13","DialogLabel")
    control.Move(186,178,159,37)
    control.Caption = "Nach BetÑtigung der SchaltflÑche 'OK' wird der Eintrag in der Termindatei erzeugt."
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(186,217,78,15)
    control.Default = 1
    control.Caption = "&OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton3","DialogCommandButton")
    control.Move(268,217,78,15)
    control.Caption = "&Abbrechen"
    control.ReturnValue = 0
    control.Cancel = 1
 
 _ok% = 0
 WHILE _ok% = 0
   DIALOG "AQREGISTER",req%
   IF req% = 2 THEN 
     kunr% = ADRSuche%(0)
     IF kunr% <> 0 THEN 
       SELECT KEY kunr% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
       Nachname$ = Nachname.GAdrDat$
       Vorname$ = Vorname.GAdrDat$
       Stra·e$ = Stra·e.GAdrDat$
       Ort$ = PLZ.GAdrDat$ + " " + Ort.GAdrDat$
       tmpku% = CodeKU.GAdrDat$
     END IF 
   END IF 
   IF req% = 0 THEN _ok% = 2
   IF req% = 1 THEN _ok% = 1
 WEND 
 REMOVE DIALOG "AQREGISTER"
 IF _ok% = 1 THEN 
   REM FILE GAkquiDat$
   REM BLANK 
   REM cuaq% = SER (GAkquiDat$,1)
   REM codeaq.GAkquiDat$ = cuaq%
   codeKU.GAkquiDat$ = tmpku%
   CodeAK.GAkquiDat$ = VAL ( MID$ (Aktion$, LEN (Aktion$) - 6,6))
   CodeMA.GAkquiDat$ = VAL ( MID$ (MANachname$, LEN (MANachname$) - 6,6))
   SELECT KEY tmpku% FILE GAdrDat$ INDEX CodeKU.GAdrDat$
   nachname.GAkquiDat$ = LEFT$ ( TRIM$ (nachname.GAdrDat$) + "," + TRIM$ (vorname.GadrDat$),100)
   Wertung.GAkquiDat$ = 0
   Datum.GAkquiDat$ = Datum$
   Uhrzeit.GAkquiDat$ = zeit$
   Dauer.GAkquiDat$ = VAL (dauer$)
   CodeDOK.GAkquiDat$ = 0
   IF LTRIM$ (VTermin$) <> "" THEN ErDatum.GAkquiDat$ = VTermin$
   ErZeit.GAkquiDat$ = VZeit$
   SELECT KEY codema.GAkquiDat$ LOCK FILE "supervis" INDEX codema.supervis
   Bearbeiter.GAkquiDat$ = nachname.supervis
   AnzTermine.supervis = AnzTermine.supervis + 1
   IF Terminerl$ LIKE "j" THEN 
     AnzTermineErl.supervis = AnzTermineErl.supervis + 1
   ELSE 
     AnzTermineUnErl.supervis = AnzTermineUnErl.supervis + 1
   END IF 
   STORE FILE "supervis"
   UNLOCK CURRENT FILE "Supervis"
   IF PROJECTJN$ = "TRUE" THEN 
     codepr.GAkquiDat$ = codeprdok%
     projekt.GAkquiDat$ = projektdok$
     codeprdok% = 0
     projektdok$ = ""
   END IF 
   notiz.GAkquiDat$ = rnotiz$
   termin.GAkquiDat$ = Termin$
   erledigt_Termin.GAkquiDat$ = Terminerl$
   TerminNr.GAkquiDat$ = AnzTermine.supervis
   REM 01032001
   GErledTermin$ = Terminerl$
   CALL FStore(GAkquiDat$)
 END IF 
 FILE cfile$
 ON ERROR GOTO ErrorHandler
 MOUSE ON 
 END SUB 
  
 
SUB ProdberEinh()
  codevp% = codevp.vprodukt
  codevp1% = codevp%
 IF EXISTS (codevp%,codevp.kvertrag) THEN 
 a$ = "Nachfolgend werden die Einheiten aller betroffenen VertrÑge geÑndert! Wenn Sie schon Provisionsabrechnungen gefahren haben, bei denen die Einheiten aus dem Vertrag verwendet werden, mÅssen Sie zur Richtigstellung eine Korrekturbuchung fahren!"
   CALL Fehler("Sie haben die Bewertungsbasis fÅr die Einheitenberechnung geÑndert!",a$)
        REQUEST "Mîchten Sie die Berechnung jetzt durchfÅhren lassen?","Sie mÅssen sich allein im Programm befinden!",135,req%
        IF req% = 1 THEN 
         FILE "kvertrag"
         INDEX codevp.kvertrag
         SELECT FIRST 
         SELECT KEY codevp% LOCK FILE "KVERTRAG" INDEX codevp.kvertrag
         WHILE NOT EOF ("KVERTRAG") AND codevp.kvertrag = codevp%
           IF Bewertungssumme.kvertrag <> 0 THEN 
             bewert% = Bewertungsbasis.vprodukt
             IF bewert% = 0 THEN bewert% = 1
             IF Bewertungsbasis.vprodukt = - 1 THEN 
               Einheiten.kvertrag = 0
             ELSE 
               einh$ = STR$ (Bewertungssumme.kvertrag / bewert%,",9999999999.0000")
               Einheiten.kvertrag = VAL (einh$)
             END IF 
           END IF 
           STORE FILE "KVERTRAG"
           UNLOCK CURRENT FILE "KVERTRAG"
           UNLOCK FILE "kvertrag"
           SELECT NEXT LOCK FILE "kvertrag" INDEX codevp.kvertrag
         WEND 
         UNLOCK CURRENT FILE "KVERTRAG"
         UNLOCK FILE "kvertrag"
        END IF 
       END IF 
     END IF 
     SELECT FIRST FILE "vprodukt" INDEX codevp.vprodukt
     SELECT KEY codevp1% FILE "vprodukt" INDEX codevp.vprodukt
     CALL Fehler("Berechnung beendet!","")
 END SUB 

SUB ProdberMwst()
     codevp% = codevp.vprodukt
     codevp1% = codevp%
     QCodeGEVA$ = STR$ (codege.vprodukt,"000000") + STR$ (codeva.vprodukt,"000000")
     IF AutomNetBer.vprodukt <> "j" AND mwst.vprodukt <> 0 THEN 
       CALL Fehler ("Es wurde festgestellt, da· bei diesem Produkt eine Versicherungssteuer hinterlegt wurde, aber die Checkbox zur automatischen Berechnung nicht aktiviert wurde!","Bitte prÅfen Sie diesen Sachverhalt!")
     END IF 
     vst% = mwst.vprodukt
     ook% = - 1
     IF ook% = - 1 THEN 
       okre% = - 1
       IF AutomNetBer.vprodukt <> "j" THEN 
         a0$ = "Sie kînnen in der nachfolgenden Frage veranlassen, da· die Berechnung fÅr dieses Produkt trotzdem durchgefÅhrt wird!"
         CALL Fehler("Die automatische Berechnung fÅr Brutto-/Nettobeitrag an Hand der VST des zugehîrigen Produktes ist noch deaktiviert.",a0$)
         REQUEST "Mîchten Sie die Berechnung jetzt durchfÅhren lassen?","Sie mÅssen sich allein im Programm befinden!",135,req%
         IF req% = 1 THEN 
           okre% = - 1
         ELSE 
           okre% = 0
         END IF 
       END IF 
 
       IF EXISTS (QCodeGEVA$,QuickGEVA.kvertrag) AND okre% = - 1 THEN 
         opt% = 2
         MOUSE OFF 
         REM REQUEST "Es wird nachfolgend die geÑnderte Versicherungssteuer","in die betroffenen VertrÑge eingetragen!"
         a$ = "z.B. hatten Sie die BeitrÑge (im Feld Beitrag der Vertragsmaske) als BruttobeitrÑge erfa·t? Sind die BeitrÑge durch einen GDV-Import entstanden (Nettobeitrag + ZuschlÑge, aber ohne VST)?"
         CALL Fehler("Es wurde festgestellt, da· Sie die Versicherungssteuer geÑndert haben! Nachfolgend mÅssen Sie entscheiden, wie die Netto/Brutto - Berechnung bereits vorhandener VertrÑge des Produktes realisiert werden sollen.",a$)
 
         DIM dlg AS Dialog
         DIM control AS DialogControl
 
         Superbase.Dialogs.Add("Dialogname")
         SET dlg = Superbase.Dialogs.Dialogname
         dlg.Move(0,0,330,124)
         dlg.Caption = "Verrechnung der Versicherungssteuer"
         dlg.FontName = "MS Sans Serif"
         dlg.FontSize = 8
 
         SET control = dlg.Add("DialogFrame1","DialogFrame")
         control.Move(0,3,329,100)
         control.Caption = "Parametersetzung fÅr die VST-Verrechnung"
 
         SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
         control.Move(5,22,285,13)
         control.Caption = "im Feld Beitrag wurde der Bruttobeitrag eingetragen, von hier aus berechnen"
         control.Bind("opt%")
         control.ValueOn = 1
 
 
         SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
         control.Move(5,42,300,13)
         control.Caption = "im Feld Beitrag wurde der Nettobeitrag (GDV-Import) eingetragen, von hier aus berechnen"
         control.Bind("opt%")
         control.ValueOn = 2
 
 
         SET control = dlg.Add("DialogOptionButton5","DialogOptionButton")
         control.Move(5,62,285,13)
         control.Caption = "im Feld Netto-Beitrag steht der Nettobeitrag , von hier aus berechnen"
         control.Bind("opt%")
         control.ValueOn = 3
 
 
         SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
         control.Move(92,106,58,15)
         control.Default = 1
         control.Caption = "&OK"
         control.ReturnValue = 1
 
         SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
         control.Move(152,106,57,15)
         control.Caption = "&Abbruch"
         control.ReturnValue = 0
         DIALOG "Dialogname",req%
         REMOVE DIALOG ALL 
 
         FILE "Kvertrag"
         INDEX QuickGEVA.kvertrag
         SELECT FIRST 
         IF RECCOUNT ("Kvertrag") > 0 AND req% = 1 THEN 
           SELECT KEY QCodeGEVA$ LOCK FILE "Kvertrag" INDEX QuickGEVA.kvertrag
           i% = 0
           WHILE NOT EOF ("Kvertrag") AND QuickGEVA.kvertrag = QCodeGEVA$
             cc% = codeva.kvertrag
             SELECT FIRST FILE "sparten" INDEX codeva.sparten
             SELECT KEY cc% FILE "sparten" INDEX codeva.sparten
             IF formular LIKE "VERTR026" THEN GOTO end021020051
             i% = i% + 1
             mwst.kvertrag = mwst.vprodukt
             rzsonst% = rzusonst.vprodukt
             IF zw.kvertrag = 0 THEN 
               rz% = rzueinmal.vprodukt
             END IF 
             IF zw.kvertrag = 1 THEN 
               rz% = rzujÑhrl.vprodukt
             END IF 
             IF zw.kvertrag = 2 THEN 
               rz% = rzuhalb.vprodukt
             END IF 
             IF zw.kvertrag = 4 THEN 
               rz% = rzuviert.vprodukt
             END IF 
             IF zw.kvertrag = 6 THEN 
               rz% = rzu2mon.vprodukt
             END IF 
             IF zw.kvertrag = 12 THEN 
               rz% = rzumon.vprodukt
             END IF 
             mwst% = mwst.kvertrag
             IF vst% > 0 THEN 
               REM alte vst>0, hei·t erstmal auf Netto rÅckrechnen
               SELECT CASE opt%
               CASE 1
                 REM im Feld Beitrag wurde der Bruttobeitrag eingetragen, von hier aus berechnen
                 Nettobeitrag.kvertrag = VAL ( STR$ (Beitrag.kvertrag / (100 + vst%),"99999999.00"))
               CASE 2
                 REM im Feld Beitrag wurde der Nettobeitrag (GDV-Import) eingetragen, von hier aus berechnen
                 Nettobeitrag.kvertrag = Beitrag.kvertrag
               CASE 3
                 REM im Feld Netto-Beitrag steht der Nettobeitrag , von hier aus berechnen
                 Beitrag.kvertrag = Nettobeitrag.kvertrag
               END SELECT 
             END IF 
             SELECT CASE opt%
               CASE 1
                 REM im Feld Beitrag wurde der Bruttobeitrag eingetragen, von hier aus berechnen
                 IF mwst.kvertrag > 0 THEN 
                   NettoMwst% = Beitrag.kvertrag * 100 / (100 + mwst.kvertrag)
                   NettoMwst$ = STR$ (NettoMwst%,"99999999.00")
                   Nettobeitrag.kvertrag = VAL (NettoMwst$)
                 ELSE 
                   Nettobeitrag.kvertrag = Beitrag.kvertrag
                 END IF 
               CASE 2
                 REM im Feld Beitrag wurde der Nettobeitrag (GDV-Import) eingetragen, von hier aus berechnen
                 IF mwst.kvertrag > 0 THEN 
                   Nettobeitrag.kvertrag = Beitrag.kvertrag
                   Beitrag.kvertrag = Nettobeitrag.kvertrag * (100 + mwst.kvertrag) / 100
                 ELSE 
                   Beitrag.kvertrag = Nettobeitrag.kvertrag
                 END IF 
               CASE 3
                 REM im Feld Netto-Beitrag steht der Nettobeitrag , von hier aus berechnen
                 IF mwst.kvertrag > 0 THEN 
                   Beitrag.kvertrag = Nettobeitrag.kvertrag * (100 + mwst.kvertrag) / 100
                 ELSE 
                   Beitrag.kvertrag = Nettobeitrag.kvertrag
                 END IF 
             END SELECT 
             REM Netto$ = STR$ ((Beitrag.kvertrag * 100) / (100 + mwst.kvertrag),"9999999999.00")
             IF DBeitrZahlung.kvertrag = 0 THEN DBeitrZahlung.kvertrag = VS_Dauer.kvertrag
             IF Bewertungssumme.kvertrag <> 0 THEN 
               bewert% = Bewertungsbasis.vprodukt
               IF bewert% = 0 THEN bewert% = 1
               IF Bewertungsbasis.vprodukt = - 1 THEN 
                 Einheiten.kvertrag = 0
               ELSE 
                 einh$ = STR$ (Bewertungssumme.kvertrag / bewert%,",9999999999.0000")
                 Einheiten.kvertrag = VAL (einh$)
               END IF 
             END IF 
             STORE FILE "Kvertrag"
             UNLOCK CURRENT FILE "kvertrag"
             UNLOCK FILE "kvertrag"
end021020051: 
             SELECT NEXT LOCK FILE "kvertrag" INDEX QuickGEVA.kvertrag
             SET STATUS STR$ (i%,"999999") + " DatensÑtze angepa·t!"
           WEND 
           UNLOCK CURRENT FILE "kvertrag"
           UNLOCK FILE "kvertrag" ALL 
           SELECT KEY QCodeGEVA$ LOCK FILE "vprodukt" INDEX QCodeGEVA.vprodukt
           AnzahlVertr.vprodukt = i%
           STORE FILE "Vprodukt"
           UNLOCK CURRENT FILE "VPRODUKT"
           UNLOCK FILE "vprodukt"
           SET STATUS ""
         END IF 
       END IF 
     END IF 
     SELECT FIRST FILE "vprodukt" INDEX codevp.vprodukt
     SELECT KEY codevp1% FILE "vprodukt" INDEX codevp.vprodukt
     CALL Fehler("Berechnung beendet!","")
 END SUB 





 REM Buchauszug 01.11.2005
SUB Buchauszug()
 ON ERROR GOTO ErrorHandler
 IF PrvVerfahr$ <> "ZAHLUNGSEINGANG" THEN 
   bdat$ = "buchung"
 ELSE 
   bdat$ = "buchung1"
 END IF 
 CALL DFile(3,bdat$ + _fpw$)
 CALL DFile(3,"buchausz" + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$)
 CALL DFile(3,"gekond" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"kvertrag" + _fpw$)
 CALL DFile(3,"vkond" + _fpw$)
 CALL DFile(3,"vprodukt" + _fpw$)
 CALL DFile(3,"spezkond" + _fpw$)
 CALL DFile(3,"AUmskto" + _fpw$)
 CALL DFile(2,"OFFICE\ADRESSEN" + _fpw$)
 
 
 FILE "KVERTRAG"
 INDEX lfdnr.kvertrag
 FILE "maadr"
 INDEX codema.maadr
 REM REQUEST "Buchauszug fÅr die gesamte Firma?","",135,req%
 atxt$ = "Der Buchauszug wird nach den folgenden Kriterien durchgefÅhrt:  Es werden alle BuchungssÑtze der Buchungsdatei geprÅft, die durch Provisionsberechnungen zu Stande kamen (d.h.manuelle Buchungen werden nicht berÅcksichtigt)"
 btxt$ = "Buchungsart: AP  UND  das Feld SRHaftung des Vertrages > 0 ist UND bei denen das Stornohaftungsende > heute ist  - "
 ctxt$ = "Zu jedem Vertrag wird festgestellt wieviel Provision gezahlt wurde, wieviel davon bereits verdient wurde und wieviel sich davon noch in der Haftung befindet, das gleiche gilt fÅr die SR!"
 CALL Fehler(atxt$,ctxt$)
 req% = 1
 IF req% = 1 THEN 
   ma% = - 1
   ma% = GetCodeMA%(_cuma%,0)
   IF ma% = 0 THEN GOTO ebuasuz011120051
 ELSE 
   ma% = 0
 END IF 
 REQUEST "Wollen Sie wirklich einen Buchauszug erstellen?","",135,req%
 IF req% <> 1 THEN 
   GOTO ebuasuz011120051
 END IF 
 FILE "buchausz"
 REMOVE FROM FILE "buchausz"
 FILE bdat$
 INDEX QCodeMAVT.bdat$
 ok1% = - 1
 SELECT FIRST FILE bdat$ INDEX QCodeMAVT.bdat$
 IF ma% > 0 THEN 
   QCodeMAVT$ = STR$ (ma%,"000000") + "000000"
   SELECT KEY QCodeMAVT$ FILE bdat$ INDEX QCodeMAVT.bdat$
   IF codema.bdat$ <> ma% THEN 
     ok1% = 0
   END IF 
 END IF 
 i% = 0
 j% = RECCOUNT (bdat$)
 v% = 0
 REM CALL Fehler("Buchauszug","")
 codebuold% = 0
 SSsrgez% = 0
 WHILE ok1% = - 1
   i% = i% + 1
   Sprovgez% = 0
   Sprovverdient% = 0
   Snprovverdient% = 0
   Ssrgez% = 0
   Ssrverdient% = 0
   Snsrverdient% = 0
   codema% = codema.bdat$
   SELECT FIRST FILE "maadr" INDEX codema.maadr
   SELECT KEY codema% FILE "maadr" INDEX codema.maadr
   REM IF provision.bdat$ = "j" AND codevt.bdat$ > 0 AND apjn.bdat$ = "j" THEN 
   IF codevt.bdat$ > 0 THEN 
     codevt% = codevt.bdat$
     REM IF EXISTS (codevt%,lfdnr.kvertrag) AND sreu.bdat$ <> 0 THEN 
     IF EXISTS (codevt%,lfdnr.kvertrag) THEN 
       SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
       SELECT KEY codevt% FILE "kvertrag" INDEX lfdnr.kvertrag
       IF vs_nr.kvertrag LIKE "40-105561880" THEN 
         REM CALL Fehler("40-105561880","")
       END IF 
       codeku% = codeku.kvertrag
       SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
       SELECT KEY codeku% FILE "ADRESSEN" INDEX codeku.adressen
       REM beginn1ab% = Proviab.kvertrag
       REM beginn1ab% = FÑlligkeit.bdat$
       beginn1ab% = VS_Beginn.kvertrag
       IF beginn1ab% < 1 THEN 
         beginn1ab% = Datum.bdat$
       END IF 

       _tday% = DAY (beginn1ab%)
       _tmonth% = MONTH ( TODAY )
       _tyear% = YEAR ( TODAY )
       srhaftmon$ = STR$ (srhaftung.kvertrag,"00")
       srhaftmon% = VAL (srhaftmon$)
       REM CALL Fehler("srhaftmon$",srhaftmon$)
       weit% = - 1
  REM IF srhaftmon% > 0 AND (buchungstext.bdat$ LIKE "*AP*" OR buchungstext.bdat$ LIKE "*Absch*") THEN weit% = - 1
  REM IF srhaftmon% > 0 AND ((buchungstext.bdat$ LIKE "AP*" OR buchungstext.bdat$ LIKE "Absch*") OR (buchungstext.bdat$ LIKE "Sto*" OR buchungstext.bdat$ LIKE "*Sto*") OR (buchungstext.bdat$ LIKE "DY*" OR buchungstext.bdat$ LIKE "*DY*")) THEN weit% = - 1
  REM IF (buchungstext.bdat$ LIKE "Pf*" OR buchungstext.bdat$ LIKE "*Pf*") THEN weit% = 0
  REM IF (buchungstext.bdat$ LIKE "Cour*" OR buchungstext.bdat$ LIKE "*Cour*") THEN weit% = 0
       IF weit% = - 1 THEN 
         srhaftung% = srhaftmon%
         REM SRHaftung
         _day% = DAY (beginn1ab%)
         _month% = MONTH (beginn1ab%)
         _year% = YEAR (beginn1ab%)
         _month% = _month% + srhaftmon%
         REM CALL Fehler(begin1ab$,begin2ab$)
         WHILE _month% > 0
           _year% = _year% + 1
           _month% = _month% - 12
         WEND 
         IF _month% <= 0 THEN 
           _year% = _year% - 1
           _month% = _month% + 12
         END IF 
         IF (buchungstext.bdat$ LIKE "Cour*" OR buchungstext.bdat$ LIKE "*Cour*") THEN 
             beginn1ab% = FÑlligkeit.bdat$
             IF beginn1ab% < 1 THEN 
               beginn1ab% = VS_Beginn.kvertrag
             END IF 
 
             IF zw.kvertrag = 0 THEN 
               REM zahlweise.buchausz = "einmalig"
               srhaftung% = 0
               srhaftmon% = 0
             END IF 
             IF zw.kvertrag = 1 THEN 
               REM zahlweise.buchausz = "jÑhrlich"
               srhaftung% = 12
               srhaftmon% = 12
             END IF 
             IF zw.kvertrag = 2 THEN 
               REM zahlweise.buchausz = "halbjÑhrlich"
               srhaftung% = 6
               srhaftmon% = 6
             END IF 
             IF zw.kvertrag = 4 THEN 
               REM zahlweise.buchausz = "vierteljÑhrlich"
               srhaftung% = 3
               srhaftmon% = 3
             END IF 
             IF zw.kvertrag = 6 THEN 
               REM zahlweise.buchausz = "zweimonatlich"
               srhaftung% = 2
               srhaftmon% = 2
             END IF 
             IF zw.kvertrag = 12 THEN 
               REM zahlweise.buchausz = "monatlich"
               srhaftung% = 1
               srhaftmon% = 1
             END IF 
             _day% = DAY (beginn1ab%)
             _month% = MONTH (beginn1ab%)
             _year% = YEAR (beginn1ab%)
             _month% = _month% + srhaftmon%
             WHILE _month% > 0
              _year% = _year% + 1
              _month% = _month% - 12
             WEND 
             IF _month% <= 0 THEN 
               _year% = _year% - 1
               _month% = _month% + 12
             END IF 
             IF _day% > 30 THEN _day% = 30
             IF _day% > 28 AND _month% = 2 THEN _day% = 28
             shende% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
             shende$ = STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999")
         ELSE 
           IF _day% > 30 THEN _day% = 30
           IF _day% > 28 AND _month% = 2 THEN _day% = 28
           shende% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
           shende$ = STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999")
         END IF 
         REM CALL Fehler("Shende",shende$)
         IF shende% > TODAY THEN 
           REM Differenz1 - Provbeginn bis heute in Monate->verdient
           today1% = TODAY 
           diff1% = TODAY - beginn1ab%
           tod$ = LEFT$ ( DATE$ ( TODAY ,"yyyymm0d"),6)

           REM differenz1% = MONTH (diff1%)

           _day% = DAY (beginn1ab%)
           _month% = MONTH (beginn1ab%)
           _year% = YEAR (beginn1ab%)
           REM _month% = _month% + diff1%
           beg$ = ""
           differenz1% = 0
           beg% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
           beg$ = LEFT$ ( DATE$ (beg%,"yyyymm0d"),6)
           beg1% = VAL (beg$)
           tod1% = VAL (tod$)
           IF beg1% < tod1% THEN 
             WHILE tod$ <> beg$
               differenz1% = differenz1% + 1
               _month% = _month% + 1
               IF _month% > 12 THEN 
                 _month% = 1
                 _year% = _year% + 1
               END IF 
               IF _month% = 2 AND _day% > 28 THEN _day% = 28
               IF _day% > 30 THEN _day% = 30
               beg% = DAYS ( STR$ (_day%,"00") + "." + STR$ (_month%,"00") + "." + STR$ (_year%,"9999"))
               beg$ = LEFT$ ( DATE$ (beg%,"yyyymm0d"),6)
             WEND 
           ELSE 
             REM CALL Fehler(vs_nr.kvertrag,"")
           END IF 
           differenz1$ = STR$ (differenz1%,"00")
           REM CALL Fehler("differenz1",differenz1$)
           REM Differenz2 - heute bis ende in Monate ->nicht verdient

           differenz2% = srhaftung% - differenz1%


           provgez% = 0
           provverdient% = 0
           nprovverdient% = 0
           srgez% = 0
           srverdient% = 0
           nsrverdient% = 0
           srhaftges% = 0
           srhaftverdie% = 0
           nsrhaftverdie% = 0

           srhaftges% = srhaftung%
           srhaftverdie% = differenz1%
           nsrhaftverdie% = differenz2%
           BLANK FILE "buchausz"
           a% = CopyRecord%(bdat$,"buchausz")
           codebu.buchausz = SER ("buchausz",1)
           datum.buchausz = TODAY 
           buchungsdatum.buchausz = datum.bdat$

           vs_nr.buchausz = vs_nr.kvertrag
           REM WHILE codevt.bdat$ = codevt%
             codebuold1% = codebu.bdat$
             v% = v% + 1
             provgez% = provgez% + Betrageu.bdat$
             srgez% = srgez% + sreu.bdat$
             SET STATUS STR$ (i%,",99999999") + "getestet / verarbeitet: " + STR$ (V%,",99999999") + " von " + STR$ (j%,",99999999") + " " + Buchungstext.bdat$
             REM SELECT NEXT FILE bdat$ INDEX QCodeMAVT.bdat$
             REM IF codebu.bdat$ = codebuold1% THEN 
               REM GOTO w071120051
             REM END IF 
           REM WEND 
w071120051: 
           xv% = (differenz1% / srhaftung%) * 100
           xvn% = 100 - xv%

           provverdient% = (provgez% * xv%) / 100
           nprovverdient% = provgez% - provverdient%
           srverdient% = (srgez% * xv%) / 100
           nsrverdient% = srgez% - srverdient%

           Betraggez.buchausz = provgez%
           Betragverdient.buchausz = provverdient%
           Betragnichtverd.buchausz = nprovverdient%

           SRgez.buchausz = srgez%
           SRverdient.buchausz = srverdient%
           SRNichtverdient.buchausz = nsrverdient%

           srhaftung.buchausz = srhaftung%
           srhaftverdie.buchausz = srhaftverdie%
           srhaftnichtverd.buchausz = nsrhaftverdie%

           Provbeginn.buchausz = beginn1ab%
           Haftungsende.buchausz = shende%
           IF (buchungstext.bdat$ LIKE "Pf*" OR buchungstext.bdat$ LIKE "*Pf*") THEN 
             Haftungsende.buchausz = FÑlligkeit.bdat$
           END IF 
           IF fÑlligkeit.buchausz < 1 THEN fÑlligkeit.buchausz = 0
           allesnull% = - 1
           REM IF provgez% < 0 THEN allesnull% = 0
           IF provgez% < 0 THEN 
             REM allesnull% = 0
             Betraggez.buchausz = provgez%
             Betragverdient.buchausz = provgez%
             Betragnichtverd.buchausz = 0
             SRgez.buchausz = srgez%
             SRverdient.buchausz = srgez%
             SRNichtverdient.buchausz = 0
             srhaftung.buchausz = 0
             srhaftverdie.buchausz = 0
             srhaftnichtverd.buchausz = 0
           END IF 
           codevstatus% = codevstatus.kvertrag
           vstatustxt$ = vstatustxt.kvertrag
           
           IF codevstatus% >= 03 AND codevstatus% <= 12 THEN allesnull% = 0
           IF codevstatus% >= 15 THEN allesnull% = 0
           IF codevstatus% = 11 THEN allesnull% = - 1
           IF codevstatus% = 6 THEN allesnull% = - 1

           IF allesnull% = 0 THEN 
             Betraggez.buchausz = provgez%
             Betragverdient.buchausz = provgez%
             Betragnichtverd.buchausz = 0
 
             SRgez.buchausz = srgez%
             SRverdient.buchausz = srgez%
             SRNichtverdient.buchausz = 0
 
             srhaftung.buchausz = 0
             srhaftverdie.buchausz = 0
             srhaftnichtverd.buchausz = 0
           END IF 
           codevstatus.buchausz = codevstatus%
           vstatustxt.buchausz = vstatustxt$
           REM aus der Adressdatei
           Nachname.buchausz = Nachname.adressen
           Vorname.buchausz = Vorname.adressen
           Strasse.buchausz = Stra·e.adressen
           Ort.buchausz = Ort.adressen
           PLZ.buchausz = PLZ.adressen
           REM aus Vertrag
           Antragsdatum.buchausz = Antragsdatum.kvertrag
           VS_Beginn.buchausz = VS_Beginn.kvertrag
           VS_Summe.buchausz = VSumme.kvertrag
           Eintrittsalter.buchausz = Eintrittsalter.kvertrag
           Laufzeit.buchausz = VS_Dauer.kvertrag
           IF KÅndigung.kvertrag > 0 THEN 
             Ablauf_Kuend.buchausz = KÅndigung.kvertrag
           END IF 
           IF TatsKuenDat.kvertrag > 0 THEN 
             IF KÅndigung.kvertrag = 0 THEN 
               Ablauf_Kuend.buchausz = TatsKuenDat.kvertrag
             ELSE 
               IF TatsKuenDat.kvertrag >= KÅndigung.kvertrag THEN 
                 Ablauf_Kuend.buchausz = TatsKuenDat.kvertrag
               ELSE 
                 Ablauf_Kuend.buchausz = KÅndigung.kvertrag
               END IF 
             END IF 
           END IF 
           BeitragPerZahlw.buchausz = Beitrag.kvertrag
           NettoBeitrperZW.buchausz = NettoBeitrag.kvertrag
             IF zw.kvertrag = 0 THEN 
               zahlweise.buchausz = "einmalig"
               JahresBeitrag.buchausz = Beitrag.kvertrag
             END IF 
             IF zw.kvertrag = 1 THEN 
               zahlweise.buchausz = "jÑhrlich"
               JahresBeitrag.buchausz = Beitrag.kvertrag
             END IF 
             IF zw.kvertrag = 2 THEN 
               zahlweise.buchausz = "halbjÑhrlich"
               JahresBeitrag.buchausz = Beitrag.kvertrag * 2
             END IF 
             IF zw.kvertrag = 4 THEN 
               zahlweise.buchausz = "vierteljÑhrlich"
               JahresBeitrag.buchausz = Beitrag.kvertrag * 4
             END IF 
             IF zw.kvertrag = 6 THEN 
               zahlweise.buchausz = "zweimonatlich"
               JahresBeitrag.buchausz = Beitrag.kvertrag * 6
             END IF 
             IF zw.kvertrag = 12 THEN 
               zahlweise.buchausz = "monatlich"
               JahresBeitrag.buchausz = Beitrag.kvertrag * 12
             END IF 
             Bewertungssumme.buchausz = Bewertung2.bdat$

           QCodeVTDat.buchausz = STR$ (codevt.buchausz,"000000") + DATE$ (buchungsdatum.buchausz,"yyyymm0d")
           STORE FILE "buchausz"
           Sprovgez% = Sprovgez% + provgez%
           Sprovverdient% = Sprovverdient% + provverdient%
           Snprovverdient% = Snprovverdient% + nprovverdient%
           Ssrgez% = Ssrgez% + srgez%
           Ssrverdient% = Ssrverdient% + srverdient%
           Snsrverdient% = Snsrverdient% + nsrverdient%
         ELSE 
           REM CALL Fehler("Vertrag, der bereits abgelaufen ist oder die Haftung vorbei ist","")
           BLANK FILE "buchausz"
           a% = CopyRecord%(bdat$,"buchausz")
           codebu.buchausz = SER ("buchausz",1)
           datum.buchausz = TODAY 
           buchungsdatum.buchausz = datum.bdat$
           Agentur.buchausz = Nachname.maadr + ", " + Vorname.maadr + ", " + Agenturnr.maadr
           codevstatus.buchausz = codevstatus.kvertrag
           vstatustxt.buchausz = vstatustxt.kvertrag
           REM aus der Adressdatei
           Nachname.buchausz = Nachname.adressen
           Vorname.buchausz = Vorname.adressen
           Strasse.buchausz = Stra·e.adressen
           Ort.buchausz = Ort.adressen
           PLZ.buchausz = PLZ.adressen
           REM aus Vertrag
           Antragsdatum.buchausz = Antragsdatum.kvertrag
           VS_Beginn.buchausz = VS_Beginn.kvertrag
           VS_Summe.buchausz = VSumme.kvertrag
           Eintrittsalter.buchausz = Eintrittsalter.kvertrag
           Laufzeit.buchausz = VS_Dauer.kvertrag
           IF KÅndigung.kvertrag > 0 THEN 
             Ablauf_Kuend.buchausz = KÅndigung.kvertrag
           END IF 
           IF TatsKuenDat.kvertrag > 0 THEN 
             IF KÅndigung.kvertrag = 0 THEN 
               Ablauf_Kuend.buchausz = TatsKuenDat.kvertrag
             ELSE 
               IF TatsKuenDat.kvertrag >= KÅndigung.kvertrag THEN 
                 Ablauf_Kuend.buchausz = TatsKuenDat.kvertrag
               ELSE 
                 Ablauf_Kuend.buchausz = KÅndigung.kvertrag
               END IF 
             END IF 
           END IF 
           BeitragPerZahlw.buchausz = Beitrag.kvertrag
           NettoBeitrperZW.buchausz = NettoBeitrag.kvertrag
           IF zw.kvertrag = 0 THEN 
             zahlweise.buchausz = "einmalig"
             JahresBeitrag.buchausz = Beitrag.kvertrag
           END IF 
           IF zw.kvertrag = 1 THEN 
             zahlweise.buchausz = "jÑhrlich"
             JahresBeitrag.buchausz = Beitrag.kvertrag
           END IF 
           IF zw.kvertrag = 2 THEN 
             zahlweise.buchausz = "halbjÑhrlich"
             JahresBeitrag.buchausz = Beitrag.kvertrag * 2
           END IF 
           IF zw.kvertrag = 4 THEN 
             zahlweise.buchausz = "vierteljÑhrlich"
             JahresBeitrag.buchausz = Beitrag.kvertrag * 4
           END IF 
           IF zw.kvertrag = 6 THEN 
             zahlweise.buchausz = "zweimonatlich"
             JahresBeitrag.buchausz = Beitrag.kvertrag * 6
           END IF 
           IF zw.kvertrag = 12 THEN 
             zahlweise.buchausz = "monatlich"
             JahresBeitrag.buchausz = Beitrag.kvertrag * 12
           END IF 
           Bewertungssumme.buchausz = Bewertung2.bdat$
           srgez% = sreu.bdat$
           provgez% = Betrageu.bdat$
           Betraggez.buchausz = provgez%
           Betragverdient.buchausz = provgez%
           Betragnichtverd.buchausz = 0
           SRgez.buchausz = srgez%
           SRverdient.buchausz = srgez%
           SRNichtverdient.buchausz = 0

             srhaftung.buchausz = srhaftung%
             srhaftverdie.buchausz = srhaftung%
             srhaftnichtverd.buchausz = 0
             Haftungsende.buchausz = shende%

           Ssrgez% = Ssrgez% + srgez%
           Provbeginn.buchausz = beginn1ab%
           vs_nr.buchausz = vs_nr.kvertrag
           QCodeVTDat.buchausz = STR$ (codevt.buchausz,"000000") + DATE$ (buchungsdatum.buchausz,"yyyymm0d")
           STORE FILE "buchausz"
         END IF 
       END IF 
     END IF 
   ELSE 
     REM CALL Fehler("Handbuchung, die zu keinem Vertrag gehîrt","")
     BLANK FILE "buchausz"
     a% = CopyRecord%(bdat$,"buchausz")
     codebu.buchausz = SER ("buchausz",1)
     datum.buchausz = TODAY 
     buchungsdatum.buchausz = datum.bdat$
     Agentur.buchausz = Nachname.maadr + ", " + Vorname.maadr + ", " + Agenturnr.maadr
     srgez% = 0
     IF storwarnjn.bdat$ LIKE "j" THEN 
       txta$ = "Stornowarnung gemeldet durch Gesellschaft: "
       IF StorWarnDatGes.bdat$ > 0 THEN txta$ = DATE$ (StorWarnDatGes.bdat$,"0d.mm.yyyy") + CHR$ (13) + CHR$ (10)
       IF StorWarnDatMa.bdat$ > 0 THEN txta$ = txta$ + "Benachrichtigung Vermittler: " + DATE$ (StorWarnDatMa.bdat$,"0d.mm.yyyy") + CHR$ (13) + CHR$ (10)
       txta$ = txta$ + "Grund: " + StorWarnGrund.bdat$ + CHR$ (13) + CHR$ (10)
       txta$ = txta$ + "Ma·nahme: " + StorWarnMasn.bdat$ + CHR$ (13) + CHR$ (10)
       txta$ = txta$ + "Ergebniss: " + StorWarnErg.bdat$ + CHR$ (13) + CHR$ (10)
       Buchngstext.buchausz = FN ansi(txta$)
     ELSE 
       srgez% = sreu.bdat$
       Betraggez.buchausz = Betrageu.bdat$
       Betragverdient.buchausz = Betrageu.bdat$
       SRgez.buchausz = sreu.bdat$
       srhaftverdie.buchausz = sreu.bdat$
       srhaftnichtverd.buchausz = 0
     END IF 
     vs_nr.buchausz = vs_nr.kvertrag
     QCodeVTDat.buchausz = STR$ (codevt.buchausz,"000000") + DATE$ (buchungsdatum.buchausz,"yyyymm0d")
     STORE FILE "buchausz"
   END IF 
   srgez$ = STR$ (srgez%,"999999.00")
   SSsrgez% = SSsrgez% + VAL (srgez$)
   SET STATUS STR$ (i%,",99999999") + " getestet / in Haftung: " + STR$ (V%,",99999999") + " von " + STR$ (j%,",99999999") + "/  " + STR$ (SSsrgez%,",99999999.00") + " SR"

   SELECT NEXT FILE bdat$ INDEX QCodeMAVT.bdat$
   MOUSE OFF 
   IF ma% > 0 THEN 
     ma1% = codema.bdat$
     IF codema.bdat$ <> ma% THEN 
       GOTO ebuasuz011120052
     END IF 
   END IF 
   IF codebu.bdat$ = codebuold% THEN 
     GOTO ebuasuz011120052
   END IF 
   codebuold% = codebu.bdat$
 WEND 
ebuasuz011120052: 
 CALL Fehler( STR$ (SSsrgez%,",999999.00") + " gezahlte SR","")
 ma$ = _netpath$ + "0-Export\BA" + STR$ (ma%,"000000") + ".xls"
 CALL Fehler(ma$,"")
 IF EXISTS (ma$) THEN DELETE ma$
 FILE "buchausz"
 INDEX QCodeVTDat.buchausz
 ON ERROR GOTO ebuasuz011120053
 ON ERROR GOTO ErrorHandler
 Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
 Superbase.Converters.SBF.SourceFile = "BUCHAUSZ"
 Superbase.Converters.SBF.Descending = 0
 Superbase.Converters.SBF.Merge = 0
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 REM Superbase.Converters.SBF.Volatile = 0
 Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
 Superbase.Converters.XLS.DestFile = ma$
 Superbase.Converters.XLS.StartRow = 2
 Superbase.Converters.XLS.StartCol = 1
 Superbase.Converters.XLS.EndRow = - 1
 Superbase.Converters.XLS.EndCol = - 1
 Superbase.Converters.XLS.UseLabels = - 1
 Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
 CALL Fehler("Die Buchauszugsdatei im MS Excel Format befindet sich unter: ",ma$)
 a% = CALL ("ShellExecute",0,"open",ma$,"","",1)
 GOTO ebuasuz011120054
ebuasuz011120053: 
 CALL Fehler("Beim Export nach MS Excel ist etwas schief gegangen!","")
ebuasuz011120054:  
 ON ERROR GOTO ErrorHandler
ebuasuz011120051: 
 END SUB 








 '      ******************************************
 '      ** Routinen fÅr Vertragsnachbearbeitung **
 '      ******************************************
 
 
SUB VorgangEinz(codevg%)
 IF disabled%("VORGANG") THEN END SUB 
 REM CALL DFile(3,"VORGANG" + _fpw$)
 CALL DFile(3,"kvertrag" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 CALL DFile(2,"OFFICE\" + "DOKKV" + _fpw$)
 cuvt% = lfdnr.KVERTRAG
 
 FILE "KVERTRAG"
 indexKVer$ = INDEX 
 INDEX lfdnr.kvertrag
 FILE "vorgang"
 INDEX codevg.vorgang
 SELECT FIRST FILE "vorgang" INDEX CodeVG.VORGANG
 SELECT KEY codevg% FILE "vorgang" INDEX CodeVG.VORGANG
 test22% = lfdnr.kvertrag
 _continue% = 1
 IF NOT EXISTS (codevg%,codevg.vorgang) THEN 
   _continue% = 0
   REM IF ag$ <> "j" THEN 
     
     REQUEST "Es wurden noch keine VorgÑnge fÅr diesen Vertrag erfa·t!","Erfassung fortsetzen?",130,req%
     IF req% = 1 THEN 
       IF disabled%("VORGANGNEU") THEN 
         _continue% = 0
       ELSE 
         _continue% = 1
       END IF 
     END IF 
   REM ELSE 
     REM CALL Fehler ("Es wurden keine VorgÑnge fÅr diesen Vertrag erfa·t!","")
   REM END IF 
 END IF 
 IF _continue% = 1 THEN 
   _formend% = 0
   WHILE _formend% = 0
     ON ERROR GOTO ErrorHandler
     FORMsub% = 0
     IF UCASE$ ( FORM ) <> "VORGKV" THEN 
       IF EXISTS (GPrjForm$ + "VORGKV.sbv") THEN 
         OPEN FORM GPrjForm$ + "VORGKV"
       ELSE 
         OPEN FORM GPrjForm$ + "VORGKV"
       END IF 
       REM OPEN FORM "VORGANG"
       REM SET HEADING title$ + " - Nachbearbeitung"
       IF anrede.GAdrDat$ LIKE "Her*" OR anrede.GAdrDat$ LIKE "Fr*" OR anrede.GAdrDat$ LIKE "Fam*" OR anrede.GAdrDat$ LIKE "Ehe*" THEN 
         n$ = LEFT$ (( LTRIM$ (nachname.GAdrDat$) + "," + LTRIM$ (Vorname.GAdrDat$)),60)
         SET HEADING "VorgÑnge von: " + n$
       ELSE 
         n$ = LEFT$ (( LTRIM$ (nachname.GAdrDat$) + "," + LTRIM$ (Geburtsname.GAdrDat$)),60)
         n% = LEN (n$)
         REM CALL Fehler( STR$ (n%,"999"),"")
         SET HEADING "VorgÑnge von: " + n$
       END IF 
       
       SET f = Superbase.Form
       REM CALL VorgangIntro()
       IF _formend% = 1 THEN GOTO endvorg231105
       abfo$ = FORM 
       REM CALL MNVORGANG()
       MENU ON 
       SET STATUS "Vertragsnachbearbeitung"
     END IF 
     CALL MNVORGANG()
     vs_nr_v$ = VS_Nr.kvertrag
     SELECT FIRST FILE "vorgang" INDEX CodeVG.VORGANG
     SELECT KEY codevg% FILE "vorgang" INDEX CodeVG.VORGANG
     IF EXISTS (codevg%,codevg.dokkv) THEN 
       dokus$ = "Dokumente Æ"
     END IF 
     FORM 
     MOUSE ON 
     f.abbruch.enabled = 0
     f.abbruch.visible = 0
     CALL ClearKBDBuffer()
     MENU ON 
     IF PAGE = 1 THEN 
       sq$ = " Schadensquote: " + LTRIM$ ( STR$ (Schadquote.kvertrag,",9999.0000"))
       SET STATUS sq$
     END IF 
     IF FORMsub% <> 99 THEN WAIT MOUSE OR KEY OR MENU 
     GET k$
     IF k$ = CHR$ (27) THEN _formend% = 1
     SELECT CASE FORMsub%
     CASE 1
       CALL VorgangSuchen()
     CASE 2
       CALL VorgangNext()
     CASE 3
       CALL VorgangPrev()
     CASE 4
       CALL VORGDruck()
     CASE 5
       codevg% = codevg.vorgang
       cuvt% = lfdnr.kvertrag
       FORM 2
       SELECT FORM KEY codevg% FILE "vorgang" INDEX codevg.vorgang
       SELECT FIRST FILE "KVERTRAG" INDEX lfdnr.kvertrag
       SELECT KEY cuvt% FILE "KVERTRAG" INDEX lfdnr.kvertrag
       FORM 
     CASE 6
       _formend% = 1
     CASE 7
       REM Dokumentenverwaltung
       Gcuvg% = Codevg.vorgang
       GBanMA% = 0:GBanGE% = 0
       lfdnr% = lfdnr.kvertrag
       lfdnr1% = lfdnr.kvertrag
       REM CALL KVerDok(lfdnr%)
       IF lfdnr% > 0 THEN 
         GADRDat$ = "ADRESSEN"
         GADRUni$ = "KVERTRAG"
         GDokDat$ = "DOKKV"
         CALL ADRDokUni("lfdnr.kvertrag")
       ELSE 
         CALL Fehler("Dokumente sind fÅr diesen Vertrag nicht verfÅgbar!","")
       END IF 
       GBanMA% = 0:GBanGE% = 0
       SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
       SELECT KEY lfdnr1% FILE "kvertrag" INDEX lfdnr.kvertrag
       cuvt% = lfdnr1%
       
       SELECT WHERE FILE GDokDat$
       REM CALL VERTRIntro(0)
     REM CALL VertrDokNew() 
     CASE 99
       IF NOT disabled%("VORGANGBEARB") THEN 
         MENU OFF 
         CALL ButDesabled()
         REM 140697 f.druck.enabled = 0
         codevg% = codevg.vorgang
         ENTER Datum.VORGANG,0
         CALL ButEnabled()
         REM 140697 f.druck.enabled = - 1
         IF abbruch% = - 1 THEN 
           SELECT KEY codevg% FILE "vorgang" INDEX codevg.vorgang
           FORM 
           abbruch% = 0
         END IF 
         MENU ON 
       END IF 
     END SELECT 
     FORMsub% = 0
     codevg% = codevg.vorgang
endvorg231105: 
   WEND 
 END IF 
 _formend% = 0
 SELECT KEY cuvt% FILE "KVERTRAG" INDEX lfdnr.KVERTRAG
 cuvg% = 0
 Gcuvg% = 0
 vform% = - 1
 FILE "KVERTRAG"
 INDEX indexKVer$
 END SUB 



 '***********************************************************************************
 'VorgÑnge des aktuellen Kunden anzeigen
 '***********************************************************************************
 
SUB KUVorgangAdr(codevg%)
 IF NOT OPEN ("DOKKV") THEN CALL DFile(2,"OFFICE\DOKKV" + _fpw$)
 REM IF disabled%("EINGANG") THEN END SUB 
 REM CALL DFile(3,"ZEINGAN1" + _fpw$)
 MOUSE OFF 
 REM 260698 REMOVE FROM FILE "Zeingan1" WHERE codevt.zeingan1 < 1
 MOUSE ON 
 knr% = codeku.adressen
 SELECT FIRST FILE "adressen" INDEX codeku.adressen
 SELECT KEY knr% FILE "adressen" INDEX codeku.adressen
 FILE "Vorgang"
 INDEX codevg.vorgang
 SELECT FIRST FILE "Vorgang" INDEX codevg.vorgang
 SELECT KEY codevg% FILE "Vorgang" INDEX codevg.vorgang
 
 cuvt% = codevt.vorgang
 SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
 SELECT KEY cuvt% FILE "kvertrag" INDEX lfdnr.kvertrag

 SELECT FIRST FILE "Vorgang" INDEX codevg.vorgang
 SELECT KEY codevg% FILE "Vorgang" INDEX codevg.vorgang
 
 REM IF ( MOD (GAdrDat$) OR NEW (GAdrDat$)) THEN CALL FStore(GAdrDat$)
 _formend% = 0
 WHILE _formend% = 0
   ON ERROR GOTO ErrorHandler
   IF UCASE$ ( FORM ) <> "VORGADR" THEN 
     SET HEADING title$ + " - VorgÑnge"
     OPEN FORM GPrjForm$ + "VORGADR"
     SET f = Superbase.Form
     REM CALL KUVorgIntro1()
     CALL MNKUVorg1()
     SET STATUS "NachbearbeitungsvorgÑnge"
   END IF 
   SELECT FIRST FILE "adressen" INDEX codeku.adressen
   SELECT KEY knr% FILE "adressen" INDEX codeku.adressen
   SELECT FIRST FILE "Vorgang" INDEX codevg.vorgang
   SELECT FORM KEY codevg% FILE "Vorgang" INDEX codevg.vorgang
   MENU ON 
   MOUSE ON 
   KUVorgsub% = 0
   REM IF RECCOUNT ("zeingan1") > 0 THEN CALL ZEINUpdate1()
   CALL ClearKBDBuffer()
   SELECT FIRST FILE "vorgang" INDEX codevg.vorgang
   SELECT KEY codevg% FILE "vorgang" INDEX codevg.vorgang
   IF EXISTS (codevg%,codevg.dokkv) THEN 
     dokus$ = "Dokumente Æ"
   END IF 
   FORM 
   ffil$ = FILE 
   IF KUVorgsub% <> 99 THEN WAIT KEY OR MENU OR MOUSE 
   REM ** Tastaturabfrage
   GET k$
   SELECT CASE ASC (k$)
   CASE CrsLeft%,PgUp%
     CALL PSelectPrev()
   CASE CrsRight%,PgDn%
     CALL PSelectNext()
   END SELECT 
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE KUVorgsub%
     CASE 7
       REM Dokumentenverwaltung
       Gcuvg% = Codevg.vorgang
       GBanMA% = 0:GBanGE% = 0
       lfdnr% = codevt.vorgang
       lfdnr1% = lfdnr%
       REM CALL KVerDok(lfdnr%)
       IF lfdnr% > 0 THEN 
         GADRDat$ = "ADRESSEN"
         GADRUni$ = "KVERTRAG"
         GDokDat$ = "DOKKV"
         CALL ADRDokUni("lfdnr.kvertrag")
       ELSE 
         CALL Fehler("Dokumente sind fÅr diesen Vertrag nicht verfÅgbar!","")
       END IF 
       GBanMA% = 0:GBanGE% = 0
       SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
       SELECT KEY lfdnr1% FILE "kvertrag" INDEX lfdnr.kvertrag
       cuvt% = lfdnr1%
       Gcuvg% = 0
       SELECT WHERE FILE GDokDat$
       REM CALL VERTRIntro(0) 
   CASE 1
     codevg% = codevg.vorgang
     SELECT FORM KEY codevg% FILE "Vorgang" INDEX codevg.vorgang
     cuvt% = codevt.vorgang
     SELECT KEY cuvt% FILE "Kvertrag" INDEX lfdnr.kvertrag
     FORM 2
   CASE 2
     CALL VORGDruckALL()
   CASE 3
     CALL VorgangSichern()
   CASE 99
     ENTER Datum.VORGANG,0
   MENU OFF 
   END SELECT 
   MENU ON 
   UNLOCK FILE "vorgang"
 WEND 
 IF ( MOD ("VORGANG") OR NEW ("VORGANG")) THEN CALL FStore("VORGANG")
 REM 110397 CALL ZEINbuchung1(0)
 Gcuvg% = 0
 _formend% = 0
 END SUB 
  
 
  






 ' BuchungsÅbersicht aus dem Vermittler
 ' 22.10.2005
SUB ABuchung(codema1%,datei$)
 IF disabled%("BUCHUNG") THEN END SUB 
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"bumages" + _fpw$)
 CALL DFile(3,"kvertrag" + _fpw$)
 FILE "kvertrag"
 INDEX lfdnr.kvertrag
 CALL DFile(3,datei$ + _fpw$)
 REM CALL DFile(3,"buchung" + _fpw$)
 FILE datei$
 INDEX codema.datei$
 FILE "maadr"
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 _formend% = 0
 IF datei$ LIKE "BUCHUNG1" THEN 
   formname$ = "ABUCH"
 ELSE 
   formname$ = "ABUCHS"
 END IF 
 FILE datei$
 INDEX Codema.datei$
 SELECT FIRST 
 SELECT WHERE FILE datei$
 
 WHILE _formend% = 0
   ZBsub% = 0
   IF UCASE$ ( FORM ) <> formname$ THEN 
     SET HEADING title$ + " - Buchungsdatei"
     OPEN FORM GPrjForm$ + formname$
     SET f = Superbase.Form
     IF EXISTS (codema1%,Codema.datei$) THEN 
       ON ERROR GOTO planb221020051
       SELECT FORM KEY codema1% FILE "maadr" INDEX codema.maadr
       SELECT KEY codema1% FILE datei$ INDEX codema.datei$
       FORM 
       GOTO planb221020052
planb221020051: 
       ON ERROR GOTO ErrorHandler
       SELECT KEY codema1% FILE "maadr" INDEX codema.maadr
       bef$ = "SELECT WHERE codema.datei$ = " + STR$ (codema1%,"000000")
       REM SELECT WHERE codema.datei$ = codema1%
       FILE datei$
       EXECUTE bef$
       formname$ = formname$ + "1"
       SET HEADING title$ + " - Buchungsdatei"
       OPEN FORM GPrjForm$ + formname$
       SET f = Superbase.Form
       SELECT KEY codema1% FILE "maadr" INDEX codema.maadr
       FORM 
planb221020052: 
       ON ERROR GOTO ErrorHandler
     ELSE 
        IF GAgentDetail$ LIKE "true" THEN 
          CALL Fehler("Es existieren noch keine BuchungssÑtze zu diesem Vertrag!","Die BuchungssÑtze werden durch die Provisionsrechnung erzeugt!")
          END SUB 
        ELSE 
          REM REQUEST "Es sind noch keine Buchungen vorhanden!","Mîchten Sie ein Buchung erfassen?",130,req%
          IF GAgentDetail$ LIKE "TRUE" THEN 
            CALL Fehler("Es sind noch keine Buchungen vorhanden!","")
            req% = 0
          ELSE 
            REQUEST "Es sind noch keine Buchungen vorhanden!","Mîchten Sie ein Buchung erfassen?",130,req%
          END IF 
          IF req% = 1 THEN 
            CALL ABUNeu1(codema1%,datei$)
            SELECT FORM KEY codema1% FILE "maadr" INDEX codema.maadr
            SELECT KEY codema1% FILE datei$ INDEX codema.datei$
            FORM 
          ELSE 
            END SUB 
          END IF 
        END IF 
     END IF 
     
     CALL MNZABUCH()
     MENU ON 
     SET STATUS "Buchungsdatei"
   END IF 
   REM CALL ZBUpdate()
   MOUSE ON 
   
   IF agentur.datei$ <> "" THEN maadr$ = Agentur.datei$ ELSE maadr$ = "<keine Zuordnung>"
   REM IF GAgentDetail$ LIKE "TRUE" THEN 
   IF GASP% = - 1 AND workstation% > 0 THEN 
     f.bearb.visible = 0
     f.neu.visible = 0
     f.saveit.visible = 0
     f.bbloe.visible = 0
   ELSE 
     f.bearb.visible = - 1
     f.neu.visible = - 1
     f.saveit.visible = - 1
     f.bbloe.visible = - 1
   END IF 
   IF MNdisabled%("BUCHUNGLOESCHEN") THEN 
     f.bbloe.visible = 0
   END IF 
   IF MNdisabled%("BUCHUNGBEARB") THEN 
     f.bearb.visible = 0
     f.neu.visible = 0
     f.saveit.visible = 0
     f.bbloe.visible = 0
     f.bmaadr.visible = 0
   END IF 
   FORM 
   CALL ClearKBDBuffer()
   IF ZBsub% <> 99 THEN WAIT MOUSE OR KEY OR MENU 
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE ZBsub%
   CASE 101
     REM in den Vertrag verzweigen
     REM in Vertrag verzweigen
     CALL DFile(3,"FOERKOND" + _fpw$)
     lfdnr% = codevt.datei$
     SELECT WHERE FILE "kvertrag"
     CALL KVERTRAGneu(lfdnr%)
 
   CASE 100
     REM alles rÅckgÑngig machen
     SELECT FIRST LOCK FILE datei$ INDEX codema.datei$
     MOUSE OFF 
     i% = 0
     j% = RECCOUNT (datei$)
     WHILE NOT EOF (datei$)
       i% = i% + 1
       SET STATUS STR$ (i%,",99999999") + "/" + STR$ (j%,",99999999")
       gebuchtjn.datei$ = 0
       gebuchtDat.datei$ = 0
       gebuchtJNDat.datei$ = STR$ (gebuchtjn.datei$,"0") + DATE$ (datum.datei$,"yyyymm0d")
       gebuchtJNMADat.datei$ = STR$ (gebuchtjn.datei$,"0") + STR$ (Codema.datei$,"000000") + DATE$ (datum.datei$,"yyyymm0d")
       STORE FILE datei$
       SELECT NEXT LOCK FILE datei$
     WEND 
     MOUSE ON 
     REMOVE FROM FILE "bumages"
     FORM 
   CASE 1
     codebu% = codebu.datei$
     SELECT FORM KEY codebu% FILE datei$ INDEX codebu.datei$
     IF agentur.datei$ <> "" THEN maadr$ = Agentur.datei$ ELSE maadr$ = "<keine Zuordnung>"
     FORM 
   CASE 2
     IF gebuchtJN.datei$ <> 1 THEN 
       IF NOT disabled%("BUCHUNGLOESCHEN") THEN 
         REQUEST "Wollen Sie diesen Datensatz wirklich lîschen?","",130,req%
         IF req% = 1 THEN CALL ABULoesch1(datei$)
         SELECT FORM KEY codema1% FILE "maadr" INDEX codema.maadr
         SELECT KEY codema1% FILE datei$ INDEX codema.datei$
         FORM 
       END IF 
     ELSE 
       CALL Fehler("Dieser Datensatz kann nicht mehr gelîscht werden, da er bereits in die Gesamtbuchungsdatei Åbernommen wurde!!!","")
     END IF 
   CASE 3
     REM Neuerfassung
     CALL ABUNeu1(codema1%,datei$)
       SELECT FORM KEY codema1% FILE "maadr" INDEX codema.maadr
       SELECT KEY codema1% FILE datei$ INDEX codema.datei$
       FORM 
   CASE 4
     IF datei$ LIKE "BUCHUNG1" THEN 
       CALL BAMASuchen()
     ELSE 
       CALL BAMASuchS()
     END IF 
   CASE 5
     REM die ausgewÑhlte Buchung duplizieren und einen negativen Buchungssatz machen
     codebu% = codebu.datei$
     IF disabled%("BUCHUNGBEARB") THEN 
     ELSE 
       CALL Fehler("Sie erhalten jetzt die Mîglichkeit diese Buchung aufzuheben, dazu wird der Buchungsdatensatz dupliziert und es werden die Eurofelder und das Feld Einheiten mit -1 multipliziert!","")
       REQUEST "Wollen Sie diese Buchung gegenbuchen(aufheben)?","",130,req%
       IF req% = 1 THEN 
         dat1$ = FILE 
         ind$ = INDEX 
         FILE datei$
         ind$ = INDEX 
         INDEX codebu.datei$
         SELECT FIRST FILE datei$ INDEX codebu.datei$
         SELECT KEY codebu% FILE datei$ INDEX codebu.datei$
         FILE datei$
         INDEX codebu.datei$
         BLANK DUPLICATE 
         REM 25112004
         codebu.datei$ = SER (datei$,1)
         Betrag.datei$ = Betrag.datei$ * - 1
         MWSTBetragEU.datei$ = MWSTBetragEU.datei$ * - 1
         NettoEU.datei$ = NettoEU.datei$ * - 1
         REM vsv.datei$ = vsv.datei$ * - 1
         sr.datei$ = sr.datei$ * - 1
         sreu.datei$ = SR.datei$ * - 1
         Volumen.datei$ = Volumen.datei$ * - 1
         Einheiten.datei$ = einheiten.datei$ * - 1
         provision.datei$ = "j"
         buchungstext.datei$ = LEFT$ (buchungstext.datei$ + " NEG",100)
         CALL QuickStore(datei$)
         REM FILE dat1$
         REM INDEX ind$$
         REM SELECT FIRST FILE datei$ INDEX codevt.datei$
         REM SELECT KEY lfdnr% FILE datei$ INDEX codevt.datei$
         lfdnr% = codevt.datei$
         IF lfdnr% > 0 THEN 
           SELECT FIRST FILE "KVERTRAG" INDEX lfdnr.kvertrag
           SELECT KEY lfdnr% FILE "KVERTRAG" INDEX lfdnr.kvertrag
         END IF 
         SELECT FIRST FILE "maadr" INDEX codema.maadr
         SELECT KEY codema1% LOCK FILE "maadr" INDEX codema.maadr
         REM hier dafÅr sorgen, das Dialog zur Berechnung von SR und Einheiten kommt
         sr% = sr.datei$
         einheit% = Einheiten.datei$
         volumen% = Volumen.datei$
         CREATE DIALOG "ANPASSUNG",0,0,400,94,"manuelle Buchung","MS Sans Serif",8
         ADD DIALOG "ANPASSUNG",5,6,6,156,10,0,"manuelle Buchung"
         ADD DIALOG "ANPASSUNG",5,6,20,230,8,0,"Bitte geben Sie die SR, Einheiten und Volumen an,"
         ADD DIALOG "ANPASSUNG",5,6,30,230,8,0,"die dem Vermittler gutgeschrieben oder abgezogen werden"
         ADD DIALOG "ANPASSUNG",6,46,49,69,13,0,0,SR%,14
         ADD DIALOG "ANPASSUNG",6,169,49,69,13,0,0,einheit%,14
         ADD DIALOG "ANPASSUNG",6,292,49,69,13,0,0,volumen%,14
         ADD DIALOG "ANPASSUNG",5,6,49,38,11,0,"SR:"
         ADD DIALOG "ANPASSUNG",5,129,49,38,11,0,"Einheiten:"
         ADD DIALOG "ANPASSUNG",5,249,49,38,11,0,"Volumen:"
         REM ADD DIALOG "ANPASSUNG",5,86,52,7,8,0,""
         ADD DIALOG "ANPASSUNG",1,34,70,50,16,1,"&OK",1,1
         ADD DIALOG "ANPASSUNG",1,86,70,50,16,0,"&Abbruch",0,0
         DIALOG "ANPASSUNG",req%
         REMOVE DIALOG "ANPASSUNG"
         IF req% = 1 THEN 
           StornoreserveEU.maadr = StornoreserveEU.maadr + sr%
           Stornoreserve.maadr = Stornoreserve.maadr + sr%
           Einheiten.maadr = Einheiten.maadr + einheit%
           IF lfdnr% > 0 THEN 
             IF codema.datei$ = codema.kvertrag THEN 
               EigEinheiten.maadr = EigEinheiten.maadr + einheit%
             END IF 
           END IF 
           IF volumen% <> 0 AND lfdnr% > 0 THEN 
             gesvolumen.maadr = Gesvolumen.maadr + volumen%
             IF codema.datei$ = codema.kvertrag THEN 
               eigvolumen.maadr = eigvolumen.maadr + volumen%
             END IF 
           END IF 
 
           GMaAnrede$ = Anrede.maadr
           GMaAnrede2$ = Anrede2.maadr
           GMaVorname$ = Vorname.maadr
           GMaVorname2$ = Vorname2.maadr
           GMaNachname$ = Nachname.maadr
           GMaNachname2$ = Nachname2.maadr
           GMaFirmaName$ = FirmaName.maadr
           GMaFirmaName2$ = FirmaName2.maadr
           GMaOrt$ = Ort.maadr
           GMaOrt2$ = Ort2.maadr
           GMaStrasse$ = Stra·e.maadr
           GMaStrasse2$ = Strasse2.maadr
           GMaPLZ$ = plz.maadr
           GMaPLZ2$ = plz2.maadr
           CALL QuickStore("maadr")
         END IF 
         REM ***********************************************************************
         FILE dat1$
         INDEX ind$$
         SELECT FIRST FILE datei$ INDEX codevt.datei$
         SELECT KEY lfdnr% FILE datei$ INDEX codevt.datei$
       END IF 
     END IF 
   CASE 6
     REM nichtgebuchte in Gesamtbuchungsdatei Åbernehmen
     IF NOT disabled%("BUCHVERR") THEN 
       CalcDatum$ = DATE$ ( TODAY ,"0d.mm.yyyy")
       vonDATUM$ = ""
       bisDATUM$ = CalcDatum$
       CREATE DIALOG "STICHTAG",0,0,222,162,"Informationen fÅr die BuchungsÅbernahme","MS Sans Serif",8
       ADD DIALOG "STICHTAG",4,0,0,222,139,0,""
       ADD DIALOG "STICHTAG",9,6,9,23,24,2
       ADD DIALOG "STICHTAG",5,20,15,183,10,0,"Bitte geben Sie an, bis zu welchem Buchungsdatum"
       ADD DIALOG "STICHTAG",5,20,25,183,10,0,"die Buchungen Åbernommen werden sollen:"
       ADD DIALOG "STICHTAG",5,20,40,182,10,0,"(ohne énderung des Datums oder Weglassen"
       ADD DIALOG "STICHTAG",5,20,50,200,10,0,"der Datumsangabe, wird das angezeigte Datum verwendet)"
       ADD DIALOG "STICHTAG",6,94,72,42,12,0,0,vonDATUM$,10
       ADD DIALOG "STICHTAG",5,30,74,58,10,0,"von Datum:"
       ADD DIALOG "STICHTAG",6,94,84,42,12,0,0,bisDATUM$,10
       ADD DIALOG "STICHTAG",5,30,86,58,10,0,"bis Datum:"
       ADD DIALOG "STICHTAG",6,94,96,42,12,0,0,CalcDATUM$,10
       ADD DIALOG "STICHTAG",5,30,98,58,10,0,"Buchungsdatum:"
       ADD DIALOG "STICHTAG",5,5,110,58,10,0,"Buchungstext:"
       ADD DIALOG "STICHTAG",6,5,122,192,12,0,0,butxt$,50
       ADD DIALOG "STICHTAG",1,52,142,54,14,1,"&OK",1,1
       ADD DIALOG "STICHTAG",1,109,142,54,14,0,"&Abbrechen",0,0
       DIALOG "STICHTAG",req%
       REMOVE DIALOG "STICHTAG"
       IF req% = 1 THEN 
         CALL CreBuMaGes(codema1%,datei$,vonDatum$,bisDatum$,CalcDatum$,butxt$)
       END IF 
     END IF 
     FORM 
   CASE 9
     REM manuelle Erzeugung eines SR-Auszahlungssatzes
     codebu% = codebu.datei$
     lfdnr% = codevt.datei$
     IF disabled%("BUCHUNGBEARB") THEN 
     ELSE 
      IF lfdnr% > 0 AND sr.datei$ <> 0 THEN 
       CALL Fehler("Sie erhalten jetzt die Mîglichkeit zu dieser Buchung einen manullen SR-Auszahlungssatz zu erzeugen!","Die SR beim Vermittler werden entsprechend verrechnet!")
       REQUEST "Wollen Sie die SR-Zahlungs-Buchung erzeugen?","",130,req%
       IF req% = 1 THEN 
         dat1$ = FILE 
         FILE datei$
         ind$ = INDEX 
         INDEX codebu.datei$
         SELECT FIRST FILE datei$ INDEX codebu.datei$
         SELECT KEY codebu% FILE datei$ INDEX codebu.datei$
         FILE datei$
         INDEX codebu.datei$
         BLANK DUPLICATE 
         REM 25112004
         datum.datei$ = TODAY 
         FÑlligkeit.datei$ = TODAY 
         provision.datei$ = "j"
         codebu.datei$ = SER (datei$,1)
         codebu% = codebu.datei$
         Betrag.datei$ = SR.datei$
         MWSTBetragEU.datei$ = 0
         NettoEU.datei$ = SREU.datei$
         sr.datei$ = SR.datei$ * - 1
         sreu.datei$ = SR.datei$ * - 1
         Einheiten.datei$ = 0
         Volumen.datei$ = 0
         provision.datei$ = "j"
         buchungstext.datei$ = LEFT$ (buchungstext.datei$ + " SR Zahlung",100)
         CALL QuickStore(datei$)
         SELECT FIRST FILE datei$ INDEX codevt.datei$
         SELECT KEY lfdnr% FILE datei$ INDEX codevt.datei$
         SELECT FORM KEY lfdnr% FILE "KVERTRAG" INDEX lfdnr.kvertrag
         SELECT FIRST FILE "maadr" INDEX codema.maadr
         SELECT KEY codema.datei$ LOCK FILE "maadr" INDEX codema.maadr
         ma% = codema.datei$
         betr% = Betrag.datei$
         codew1% = codew.datei$
         euro1% = umrechnung.datei$
         waehrung1$ = waehrung.datei$
         REM hier dafÅr sorgen, das Dialog zur Berechnung von SR und Einheiten kommt
         sr% = betrag.datei$ * - 1
         einheit% = Einheiten.datei$
         CREATE DIALOG "ANPASSUNG",0,0,250,94,"manuelle Buchung","MS Sans Serif",8
         ADD DIALOG "ANPASSUNG",5,6,6,156,10,0,"manuelle Buchung"
         ADD DIALOG "ANPASSUNG",5,6,20,230,8,0,"Bitte geben Sie die SR,"
         ADD DIALOG "ANPASSUNG",5,6,30,230,8,0,"die dem Vermittler gutgeschrieben oder abgezogen wird"
         ADD DIALOG "ANPASSUNG",6,46,49,69,13,0,0,SR%,14
         REM ADD DIALOG "ANPASSUNG",6,169,49,69,13,0,0,einheit%,14
         ADD DIALOG "ANPASSUNG",5,6,49,38,11,0,"SR:"
         REM ADD DIALOG "ANPASSUNG",5,129,49,38,11,0,"Einheiten:"
         REM ADD DIALOG "ANPASSUNG",5,86,52,7,8,0,""
         ADD DIALOG "ANPASSUNG",1,34,70,50,16,1,"&OK",1,1
         ADD DIALOG "ANPASSUNG",1,86,70,50,16,0,"&Abbruch",0,0
         DIALOG "ANPASSUNG",req%
         REMOVE DIALOG "ANPASSUNG"
         IF req% = 1 THEN 
           GMaAnrede$ = Anrede.maadr
           GMaAnrede2$ = Anrede2.maadr
           GMaVorname$ = Vorname.maadr
           GMaVorname2$ = Vorname2.maadr
           GMaNachname$ = Nachname.maadr
           GMaNachname2$ = Nachname2.maadr
           GMaFirmaName$ = FirmaName.maadr
           GMaFirmaName2$ = FirmaName2.maadr
           GMaOrt$ = Ort.maadr
           GMaOrt2$ = Ort2.maadr
           GMaStrasse$ = Stra·e.maadr
           GMaStrasse2$ = Strasse2.maadr
           GMaPLZ$ = plz.maadr
           GMaPLZ2$ = plz2.maadr
           StornoreserveEU.maadr = StornoreserveEU.maadr + sr%
           Stornoreserve.maadr = Stornoreserve.maadr + sr%
           zusatz% = 1
           eigen% = 1
           PSpAll$ = ""
           PSpAllSeit% = 0
           PROVSpEig$ = ""
           PSpESeit% = 0
           datumz% = TODAY 
           AuszahlAB.maadr = AuszahlAB.maadr + betr%
           AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / euro1%,"999999999.00"))
           zusAuszahl.maadr = zusAuszahl.maadr + betr%
           zusAuszahlEU.maadr = VAL ( STR$ (zusAuszahl.maadr / euro1%,"999999999.00"))
           aktZusB.maadr = aktZusB.maadr + betr%
           aktZusBEU.maadr = VAL ( STR$ (aktZusB.maadr / euro1%,"999999999.00"))
           CALL QuickStore("maadr")
           CALL ZentrKTO(ma%,datumz%,betr%,0,codew1%,euro1%,waehrung1$,PSpAll$,PSpAllSeit%,PROVSpEig$,PSpESeit%,eigen%,zusatz%,0)
           SELECT KEY ma% LOCK FILE "maadr" INDEX codema.maadr
         END IF 
         REM ***********************************************************************
         FILE dat1$
         INDEX ind$$
         SELECT FIRST FILE datei$ INDEX codevt.datei$
         SELECT KEY lfdnr% FILE datei$ INDEX codevt.datei$
       END IF 
      ELSE 
        CALL Fehler("FÅr diese Buchung kann keine manuelle Auszahlung der SR erzeugt werden, weil entweder die Buchung zu keinem Vertrag gehîrt oder die SR=0 ist!","")
      END IF 
     END IF 
   CASE 99
     MENU OFF 
     ENTER Datum.datei$,0
     MENU ON 
   END SELECT 
   ZBsub% = 0
 WEND 
 _formend% = 0
 END SUB 
 
 
 
 
 
SUB MNZABUCH()
 MENU CLEAR 
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
SUB ABUNeu1(codema1%,datei$)
 FILE datei$
 DIM LAgenturen$( RECCOUNT ("MAADR"))
 FILE "MAADR"
 INDEX CodeMA.MAADR
 SELECT FIRST 
 a% = 0
 fprompt$ = "ZZZZZZZZZZZZZZ"
 aprompt$ = ""
 MOUSE OFF 
   FILE "Waehrung"
   INDEX waehrung.waehrung
   SELECT FIRST 
   WHILE NOT EOF ("WAEHRUNG")
     IF UCASE$ (waehrung.waehrung) = zweitwaehr$ THEN 
       euro1% = umrechnung.waehrung
       codew1% = codew.waehrung
       waehrung1$ = waehrung.waehrung
       wbez1$ = WaehrungBezeich.waehrung
     END IF 
   SELECT NEXT 
   WEND 
   SET STATUS "Zusatzbuchungen"
   MOUSE ON 
   SELECT FIRST FILE "stamm"
   waehr$ = Waehrung.stamm
   BLANK FILE datei$
   SET STATUS "Datensatz neu angelegt..."
   Datum.datei$ = TODAY 
   Buchungstext.datei$ = "Zusatzbuchung:"
 
    Superbase.Dialogs.Add("ZBUCHUNG")
    SET dlg = Superbase.Dialogs.ZBUCHUNG
    dlg.Move(0,0,225,209)
    dlg.Caption = "Zusatzbuchung"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(0,0,225,182)
    control.Caption = ""
 
    SET control = dlg.Add("DialogIcon1","DialogIcon")
    control.Move(6,12,20,23)
    control.Icon = 2
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(40,14,176,22)
    control.Caption = "Bitte fÅllen Sie die Felder Buchungstext und Betrag aus:"
 
    SET control = dlg.Add("DialogLabel6","DialogLabel")
    control.Move(74,41,139,10)
    control.CaptionBinding = "waehr$"
 
 
    SET control = dlg.Add("DialogTextBox1","DialogTextBox")
    control.Move(82,72,42,12)
    control.MaxLength = 10
    control.TextBinding = "Datum.datei$"
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(20,73,25,13)
    control.Caption = "Datum"
 
    SET control = dlg.Add("DialogTextBox2","DialogTextBox")
    control.Move(82,86,60,11)
    control.MaxLength = 20
    control.TextBinding = "Betrag.datei$"
 
    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(20,85,52,9)
    control.Caption = "Brutto - Betrag"
 
    SET control = dlg.Add("DialogTextBox6","DialogTextBox")
    control.Move(82,100,60,11)
    control.MaxLength = 20
    control.TextBinding = "MWSTBetragEU.datei$"
 
    SET control = dlg.Add("DialogLabel10","DialogLabel")
    control.Move(20,100,52,11)
    control.Caption = "MWSt - Betrag"
 
 
 
    SET control = dlg.Add("DialogTextBox7","DialogTextBox")
    control.Move(162,100,40,11)
    control.MaxLength = 7
    control.TextBinding = "MWSTProz.datei$"
 
    SET control = dlg.Add("DialogLabel11","DialogLabel")
    control.Move(145,100,17,11)
    control.Caption = "in % "
 
 
    SET control = dlg.Add("DialogTextBox8","DialogTextBox")
    control.Move(82,114,60,11)
    control.MaxLength = 20
    control.TextBinding = "NettoEU.datei$"
 
    SET control = dlg.Add("DialogLabel12","DialogLabel")
    control.Move(20,114,52,9)
    control.Caption = "Netto - Betrag"
 
 
    SET control = dlg.Add("DialogTextBox3","DialogTextBox")
    control.Move(82,130,132,40)
    control.MultiLine = 1
    control.ScrollBars = 2
    control.MaxLength = 4000
    control.TextBinding = "Buchungstext.datei$"
 
    SET control = dlg.Add("DialogLabel5","DialogLabel")
    control.Move(20,132,52,9)
    control.Caption = "Buchungstext"
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(50,186,55,15)
    control.Caption = "&Buchen"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(108,186,54,15)
    control.Caption = "&Abbrechen"
    control.ReturnValue = 0
    control.Cancel = 1
 
 
 
 
   DIALOG "ZBUCHUNG",req%
   REMOVE DIALOG "ZBUCHUNG"
 
 
   MOUSE OFF 
   REM 211299
   IF req% = 1 THEN 
     SET STATUS "Buchung wird gespeichert"
     CodeBU.datei$ = SER (datei$,1)
     CodeMA.datei$ = codema1%
     ma% = codema1%
     datumz% = Datum.datei$
     betr% = Betrag.datei$
     IF MWSTProz.datei$ <> 0 THEN 
       mwst% = 100 + MWSTProz.datei$
     END IF 
     IF betr% <> 0 THEN 
       IF MWSTProz.datei$ <> 0 THEN 
         IF NettoEU.datei$ = 0 THEN 
           NettoEU.datei$ = (betr% * 100) / mwst%
         END IF 
       ELSE 
         IF MWSTBetragEU.datei$ = 0 THEN 
           IF NettoEU.datei$ = 0 THEN 
             NettoEU.datei$ = betr%
           END IF 
         ELSE 
           IF NettoEU.datei$ = 0 THEN 
             NettoEU.datei$ = betr% - MWSTBetragEU.datei$
           END IF 
         END IF 
       END IF 
     END IF 
     IF betr% = 0 THEN 
       IF NettoEU.datei$ <> 0 THEN 
         IF MWSTProz.datei$ <> 0 THEN 
           Betrag.datei$ = (NettoEU.datei$ * mwst%) / 100
         ELSE 
           IF MWSTBetragEU.datei$ = 0 THEN 
             Betrag.datei$ = NettoEU.datei$
           ELSE 
             Betrag.datei$ = NettoEU.datei$ + MWSTBetragEU.datei$
           END IF 
         END IF 
       END IF 
     END IF 
     IF MWSTProz.datei$ <> 0 THEN 
       IF MWSTBetragEU.datei$ = 0 THEN 
         MWSTBetragEU.datei$ = Betrag.datei$ - NettoEU.datei$
       END IF 
     END IF 
     IF MWSTProz.datei$ = 0 AND MWSTBetragEU.datei$ <> 0 THEN 
       MWSTProz.datei$ = ((Betrag.datei$ / NettoEU.datei$) * 100) - 100
     END IF 
     IF MWSTProz.datei$ = 0 AND MWSTBetragEU.datei$ = 0 AND NettoEU.datei$ <> Betrag.datei$ THEN 
       MWSTBetragEU.datei$ = Betrag.datei$ - NettoEU.datei$
       MWSTProz.datei$ = ((Betrag.datei$ / NettoEU.datei$) * 100) - 100
     END IF 
     VTCodema.datei$ = 0
     Codew.datei$ = codew.stamm
     umrechnung.datei$ = umrechnung.stamm
     waehrung.datei$ = waehrung.stamm
     Betrageu.datei$ = VAL ( STR$ (Betrag.datei$ / umrechnung.datei$,"99999999.00"))
     CALL FStore(datei$)
     zusatz% = 1
     eigen% = 1
     PSpAll$ = ""
     PSpAllSeit% = 0
     PROVSpEig$ = ""
     PSpESeit% = 0
     CALL ZentrKTO(ma%,datumz%,betr%,0,codew1%,euro1%,waehrung1$,PSpAll$,PSpAllSeit%,PROVSpEig$,PSpESeit%,eigen%,zusatz%,0)
     SELECT KEY ma% LOCK FILE "maadr" INDEX codema.maadr
     AuszahlAB.maadr = AuszahlAB.maadr + betr%
     AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / euro1%,"999999999.00"))
     zusAuszahl.maadr = zusAuszahl.maadr + betr%
     zusAuszahlEU.maadr = VAL ( STR$ (zusAuszahl.maadr / euro1%,"999999999.00"))
     aktZusB.maadr = aktZusB.maadr + betr%
     aktZusBEU.maadr = VAL ( STR$ (aktZusB.maadr / euro1%,"999999999.00"))
     STORE FILE "maadr"
     UNLOCK CURRENT FILE "maadr"
   ELSE 
     ok% = 0
   END IF 
   MOUSE ON 
 END SUB 
  
SUB ABULoesch1(datei$)
 lfdnr% = codevt.datei$
 IF disabled%("BUCHUNGLOESCHEN") THEN END SUB 
 cubu% = CodeBU.datei$
 REQUEST "Buchungssatz wirklich lîschen?","",135,req%
 IF req% = 1 THEN 
   SELECT FIRST FILE datei$ INDEX CodeBU.datei$
   SELECT KEY cubu% LOCK FILE datei$ INDEX CodeBU.datei$
   SELECT REMOVE FILE datei$
   SELECT NEXT FILE datei$
   FORM 
 END IF 
 FORM 
 END SUB 
 
 
SUB CreBuMaGes(codema1%,datei$,vonDatum$,bisDatum$,CalcDatum$,butxt$)
 CALL Fehler(datei$ + "," + vonDatum$ + "," + bisDatum$ + "," + CalcDatum$,"")
 summebru% = 0
 summenet% = 0
 summemwst% = 0
 sumap% = 0
 sumcourt% = 0
 sumsr% = 0
 sumpfleg% = 0
 sumdynamik% = 0
 sumvsv% = 0
 sumbetreu% = 0
 sumeinh% = 0
 SUMEigEinh% = 0
 sumkredit% = 0
 sumleads% = 0
 sumvors% = 0
 SUMstowarn% = 0
 sumBewert% = 0
 FILE datei$
 IF LTRIM$ (vonDatum$) = "" THEN vonDatum$ = "01.01.0001"
 IF LTRIM$ (bisDatum$) = "" THEN bisDatum$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 von% = DAYS (vonDatum$)
 bis% = DAYS (bisDatum$)
 vond$ = DATE$ (von%,"yyyymm0d")
 bisd$ = DATE$ (bis%,"yyyymm0d")
 IF codema1% > 0 THEN 
   codema1$ = STR$ (codema1%,"000000")
   REM suchanf$ = "0" + codema1$ + vond$
   suchanf$ = "0" + codema1$
   ind$ = "gebuchtJNMADAT"
 ELSE 
   suchanf$ = "0000000" + vond$
   ind$ = "gebuchtJNMADAT"
 END IF 
 INDEX ind$$
 SELECT FIRST FILE datei$ INDEX ind$
 IF RECCOUNT (datei$) > 0 THEN 
   SELECT KEY suchanf$ LOCK FILE datei$ INDEX ind$
 ELSE 
   SELECT LAST FILE datei$
 END IF 
 IF codema1% > 0 THEN 
   codematest% = codema1%
 ELSE 
   codematest% = codema.datei$
 END IF 
 ok% = - 1
 WHILE NOT EOF (datei$) AND ok% = - 1
   MOUSE OFF 
   SET STATUS "bearbeite: " + Buchungstext.datei$ + " Agentur: " + Agentur.datei$
   IF datum.datei$ >= von% AND Datum.datei$ <= bis% AND gebuchtjn.datei$ <> 1 THEN 
     IF codema.datei$ = codematest% THEN 
       codebu% = codebu.datei$
 
       REM CALL Fehler(buchungstext.datei$ + "," + agentur.datei$, STR$ (betrag.datei$,"9999999.00"))
       brutbetr$ = STR$ (betrageu.datei$,"9999999999.00")
       netbetr$ = STR$ (nettoeu.datei$,"9999999999.00")
       mwstbetr$ = STR$ (mwstbetrageu.datei$,"9999999999.00")
       sreu$ = STR$ (sreu.datei$,"9999999999.00")
       vsv$ = STR$ (vsv.datei$,"9999999999.00")
       BewertungEU$ = STR$ (BewertungssumEU.datei$,"9999999999.00")

       EinheitenEU$ = STR$ (EinheitenEU,"999999999.0000")
       summebru% = summebru% + VAL (brutbetr$)
       summenet% = summenet% + VAL (netbetr$)
       summemwst% = summemwst% + VAL (mwstbetr$)
       
       IF provision.datei$ = "j" THEN 
         IF apjn.datei$ = "j" THEN sumap% = sumap% + VAL (brutbetr$)
         IF courtjn.datei$ = "j" THEN sumcourt% = sumcourt% + VAL (brutbetr$)
         sumsr% = sumsr% + VAL (sreu$)
         IF PflegeJN.datei$ = "j" THEN sumpfleg% = sumpfleg% + VAL (brutbetr$)
         IF DynamikPJN.datei$ = "j" THEN sumdynamik% = sumdynamik% + VAL (brutbetr$)
         sumvsv% = sumvsv% + VAL (vsv$)
         IF betreuJN.datei$ = "j" THEN sumbetreu% = sumbetreu% + VAL (brutbetr$)
         sumeinh% = sumeinh% + VAL (EinheitenEU$)
         IF codema.datei$ = vtcodema.datei$ THEN 
           sumEigEinh% = sumEigEinh% + VAL (EinheitenEU$)
         END IF 
         sumBewert% = sumBewert% + VAL (BewertungEU$)
       ELSE 
         IF kreditjn.datei$ = "j" THEN sumkredit% = sumkredit% + VAL (brutbetr$)
         IF leadsjn.datei$ = "j" THEN sumleads% = sumleads% + VAL (brutbetr$)
         IF vorschujn.datei$ = 1 THEN sumvors% = SUMvors% + VAL (brutbetr$)
         IF StorWarnjn.datei$ = "j" THEN SUMstowarn% = SUMstowarn% + 1
       END IF 
       gebuchtjn.datei$ = 1
       gebuchtDat.datei$ = TODAY 
       gebuchtJNDat.datei$ = STR$ (gebuchtjn.datei$,"0") + DATE$ (datum.datei$,"yyyymm0d")
       gebuchtJNMADat.datei$ = STR$ (gebuchtjn.datei$,"0") + STR$ (Codema.datei$,"000000") + DATE$ (datum.datei$,"yyyymm0d")
       timestamp$ = DATE$ ( TODAY ,"yymmdd") + STR$ ( HRS ( NOW ) * 100 + MINS ( NOW ),"0000")
       timestamp% = VAL (timestamp$)
       TStampBuges.datei$ = timestamp%
       STORE FILE datei$
       codematest$ = STR$ (codematest%,"000000")
       suchanf$ = "0" + codematest$ + vond$
       SELECT FIRST FILE datei$ INDEX ind$
       SELECT KEY suchanf$ FILE datei$ INDEX ind$
       SELECT PREVIOUS FILE datei$ INDEX ind$
       crebumages% = 0
     ELSE 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codematest% LOCK FILE "maadr" INDEX codema.maadr
       sumGut.maadr = sumGut.maadr + summebru%
       sumGutN.maadr = sumGutN.maadr + summenet%
       STORE FILE "maadr"
       BLANK FILE "bumages"
       codebuma.bumages = SER ("bumages",1)
       codema.bumages = codematest%
       datum.bumages = calcdatum$
       Buchungstext.bumages = butxt$
       gutschrift.bumages = summebru%
       gutschriftN.bumages = summenet%
       mwstineur.bumages = summemwst%
       sumGut.bumages = sumGut.bumages + summebru%
       sumGutN.bumages = sumGutN.bumages + summenet%
       QDatum.bumages = LEFT$ ( DATE$ (datum.bumages,"yyyymm0d"),6)
       QJahr.bumages = LEFT$ ( DATE$ (datum.bumages,"yyyymm0d"),4)
       Agentur.bumages = Nachname.maadr + "," + Vorname.maadr
       Agenturnr.bumages = Agenturnr.maadr
       K1Konto.bumages = K1Konto.maadr
       K1BLZ.bumages = k1blz.maadr
       K1Bank.bumages = k1Bank.maadr
       Postanschrift.bumages = Postanschrift.maadr
       ap.bumages = sumap%
       Courtage.bumages = sumcourt%
       pflege.bumages = sumpfleg%
       vsv.bumages = sumvsv%
       sr.bumages = sumsr%
       dynamik.bumages = sumdynamik%
       betreuung.bumages = sumbetreu%
       einheiten.bumages = sumeinh%
       Kredite.bumages = sumkredit%
       Leads.bumages = sumleads%
       Vorschuss.bumages = SUMvors%
       AnzStornoWarn.bumages = SUMstowarn%
       srgesamt.bumages = stornoreserveEU.maadr
       eigeinh.bumages = sumEigEinh%
       EinheitenGes.bumages = Einheiten.maadr
       EigEinhGes.bumages = EigEinheiten.maadr
       vonDat.bumages = vonDatum$
       bisdat.bumages = bisDatum$
       Bewertung.bumages = sumBewert%
       CALL QuickStore("bumages")
       crebumages% = - 1
       IF codema1% > 0 THEN 
          ok% = 0
       ELSE 
         codematest% = codema.datei$
         summebru% = 0
         summenet% = 0
         summemwst% = 0
       END IF 
     END IF 
   END IF 
   SELECT NEXT LOCK FILE datei$ INDEX ind$
 WEND 
 IF crebumages% = 0 THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codematest% LOCK FILE "maadr" INDEX codema.maadr
       sumGut.maadr = sumGut.maadr + summebru%
       sumGutN.maadr = sumGutN.maadr + summenet%
       STORE FILE "maadr"
       BLANK FILE "bumages"
       codebuma.bumages = SER ("bumages",1)
       codema.bumages = codematest%
       datum.bumages = calcdatum$
       Buchungstext.bumages = butxt$
       gutschrift.bumages = summebru%
       gutschriftN.bumages = summenet%
       mwstineur.bumages = summemwst%
       sumGut.bumages = sumGut.bumages + summebru%
       sumGutN.bumages = sumGutN.bumages + summenet%
       QDatum.bumages = LEFT$ ( DATE$ (datum.bumages,"yyyymm0d"),6)
       QJahr.bumages = LEFT$ ( DATE$ (datum.bumages,"yyyymm0d"),4)
       Agentur.bumages = Nachname.maadr + "," + Vorname.maadr
       Agenturnr.bumages = Agenturnr.maadr
       K1Konto.bumages = K1Konto.maadr
       K1BLZ.bumages = k1blz.maadr
       K1Bank.bumages = k1Bank.maadr
       Postanschrift.bumages = Postanschrift.maadr
       CALL QuickStore("bumages")
 END IF 
 
 END SUB 
 
 
SUB AlleBuch(datei$)
     REM nichtgebuchte in Gesamtbuchungsdatei Åbernehmen
     IF NOT disabled%("BUCHVERR") THEN 
       CalcDatum$ = DATE$ ( TODAY ,"0d.mm.yyyy")
       vonDATUM$ = ""
       bisDATUM$ = CalcDatum$
       CREATE DIALOG "STICHTAG",0,0,222,162,"Informationen fÅr die BuchungsÅbernahme","MS Sans Serif",8
       ADD DIALOG "STICHTAG",4,0,0,222,139,0,""
       ADD DIALOG "STICHTAG",9,6,9,23,24,2
       ADD DIALOG "STICHTAG",5,31,15,183,10,0,"Bitte geben Sie an, bis zu welchem Buchungsdatum"
       ADD DIALOG "STICHTAG",5,31,25,183,10,0,"die Buchungen Åbernommen werden sollen:"
       ADD DIALOG "STICHTAG",5,32,40,182,10,0,"(ohne énderung des Datums oder Weglassen"
       ADD DIALOG "STICHTAG",5,31,50,182,10,0,"der Datumsangabe, wird das angezeigte Datum verwendet)"
       ADD DIALOG "STICHTAG",6,94,72,42,12,0,0,vonDATUM$,10
       ADD DIALOG "STICHTAG",5,30,74,58,10,0,"von Datum:"
       ADD DIALOG "STICHTAG",6,94,84,42,12,0,0,bisDATUM$,10
       ADD DIALOG "STICHTAG",5,30,86,58,10,0,"bis Datum:"
       ADD DIALOG "STICHTAG",6,94,96,42,12,0,0,CalcDATUM$,10
       ADD DIALOG "STICHTAG",5,30,98,58,10,0,"Buchungsdatum:"
       ADD DIALOG "STICHTAG",5,5,110,58,10,0,"Buchungstext:"
       ADD DIALOG "STICHTAG",6,5,122,192,12,0,0,butxt$,50
       ADD DIALOG "STICHTAG",1,52,142,54,14,1,"&OK",1,1
       ADD DIALOG "STICHTAG",1,109,142,54,14,0,"&Abbrechen",0,0
       DIALOG "STICHTAG",req%
       REMOVE DIALOG "STICHTAG"
       IF req% = 1 THEN 
         CALL CreBuMaGes(0,datei$,vonDatum$,bisDatum$,CalcDatum$,butxt$)
       END IF 
     END IF 
 END SUB 
 
 
 
 
 
 
 
 
 
 
 
 
 ' Abrechnung aus dem Vermittler
 ' 22.10.2005
SUB AbrechMA(codema1%)
 IF disabled%("BUCHUNG") THEN END SUB 
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"bumages" + _fpw$)
 CALL DFile(3,"kvertrag" + _fpw$)
 FILE "kvertrag"
 INDEX lfdnr.kvertrag
 datei$ = "bumages"
 REM CALL DFile(3,"buchung" + _fpw$)
 FILE datei$
 INDEX codema.datei$
 FILE "maadr"
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 _formend% = 0
   formname$ = "ABRMA"
 datei$ = "bumages"
 FILE "bumages"
 INDEX Codema.datei$
 SELECT FIRST 
 SELECT WHERE FILE datei$
 
 WHILE _formend% = 0
   ZBsub% = 0
   IF UCASE$ ( FORM ) <> formname$ THEN 
     SET HEADING title$ + " - Abrechnungsdatei"
     OPEN FORM GPrjForm$ + formname$
     SET f = Superbase.Form
     IF EXISTS (codema1%,Codema.datei$) THEN 
       ON ERROR GOTO planb231020051
       SELECT FORM KEY codema1% FILE "maadr" INDEX codema.maadr
       SELECT KEY codema1% FILE datei$ INDEX codema.datei$
       FORM 
       GOTO planb231020052
planb231020051: 
       ON ERROR GOTO ErrorHandler
       SELECT KEY codema1% FILE "maadr" INDEX codema.maadr
       bef$ = "SELECT WHERE codema.datei$ = " + STR$ (codema1%,"000000")
       REM SELECT WHERE codema.datei$ = codema1%
       FILE datei$
       EXECUTE bef$
       formname$ = formname$ + "M"
       SET HEADING title$ + " - Buchungsdatei"
       OPEN FORM GPrjForm$ + formname$
       SET f = Superbase.Form
       SELECT KEY codema1% FILE "maadr" INDEX codema.maadr
       FORM 
planb231020052: 
       ON ERROR GOTO ErrorHandler
     ELSE 
          CALL Fehler("Es existieren noch keine AbrechnungssÑtze zu diesem Vermittler!","")
          _formend% = 1
     END IF 
     
     CALL MNZABRMA()
     MENU ON 
     SET STATUS "Buchungsdatei"
   END IF 
   REM CALL ZBUpdate()
   MOUSE ON 
   
   IF agentur.datei$ <> "" THEN maadr$ = Agentur.datei$ ELSE maadr$ = "<keine Zuordnung>"
   REM IF GAgentDetail$ LIKE "TRUE" THEN 
   IF GASP% = - 1 AND workstation% > 0 THEN 
     f.bearb.visible = 0
     f.neu.visible = 0
     f.saveit.visible = 0
     f.bbloe.visible = 0
   ELSE 
     f.bearb.visible = - 1
     f.neu.visible = - 1
     f.saveit.visible = - 1
     f.bbloe.visible = - 1
   END IF 
   IF MNdisabled%("BUCHUNGLOESCHEN") THEN 
     f.bbloe.visible = 0
   END IF 
   IF MNdisabled%("BUCHUNGBEARB") THEN 
     f.bearb.visible = 0
     f.neu.visible = 0
     f.saveit.visible = 0
     f.bbloe.visible = 0
     f.bmaadr.visible = 0
   END IF 
   FORM 
   CALL ClearKBDBuffer()
   IF ZBsub% <> 99 THEN WAIT MOUSE OR KEY OR MENU 
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
   SELECT CASE ZBsub%
   CASE 1
     codebu% = codebuma.datei$
     SELECT FORM KEY codebu% FILE datei$ INDEX codebuma.datei$
     FORM 
   CASE 2
     IF gebuchtJN.datei$ <> 1 THEN 
       IF NOT disabled%("BUCHUNGLOESCHEN") THEN 
         REQUEST "Wollen Sie diesen Datensatz wirklich lîschen?","",130,req%
         IF req% = 1 THEN CALL ABULoesch1(datei$)
         SELECT FORM KEY codema1% FILE "maadr" INDEX codema.maadr
         SELECT KEY codema1% FILE datei$ INDEX codema.datei$
         FORM 
       END IF 
     ELSE 
       CALL Fehler("Dieser Datensatz kann nicht mehr gelîscht werden, da er bereits in die Gesamtbuchungsdatei Åbernommen wurde!!!","")
     END IF 
   CASE 3
     REM Neuerfassung
     CALL ABUNeu1(codema1%,datei$)
       SELECT FORM KEY codema1% FILE "maadr" INDEX codema.maadr
       SELECT KEY codema1% FILE datei$ INDEX codema.datei$
       FORM 
   CASE 99
     MENU OFF 
     ENTER Datum.datei$,0
     MENU ON 
   END SELECT 
   ZBsub% = 0
 WEND 
 _formend% = 0
 END SUB 
 
 
 
 
 
SUB MNZABRMA()
 MENU CLEAR 
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 



 REM Statistik FPByern SUFP1
SUB SUFP1()
  ON ERROR GOTO ErrorHandler
  REM DIRECTORY _netpath$ + "PROVIS"
  DIRECTORY GMACodeDir$
  REM MAADR
  dat$ = "sufp1"
  dat1$ = "sufp1a"
  REM nach Spartengruppen
  dat2$ = "sufp2"
  REM nach Gesellschaften
  dat3$ = "sufp3"
  dat4$ = "sufp4"
  dat5$ = "sufp5"
  dat6$ = "sufp6"
  dat7$ = "sufp7"
  dat8$ = "sufp8"
  dat9$ = "sufp9"
 CALL DFile(3,"sparten" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$)
 CALL DFile(3,"geadr2" + _fpw$)
 CALL DFile(3,"gekond" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"vprodukt" + _fpw$)
 CALL DFile(3,"kvertrag" + _fpw$)
 CALL DFile(3,"spgruppe" + _fpw$)
 REM CALL DFile(3,dat$ + _fpw$)
 test$ = GMACodeDir$ + dat$ + ".sbf"
 IF EXISTS (GMACodeDir$ + dat$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat$ + ";paris"
 END IF 

 IF EXISTS (dat1$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat1$ + ";paris"
 END IF 
 IF EXISTS (dat2$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat2$ + ";paris"
 END IF 
 IF EXISTS (dat3$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat3$ + ";paris"
 END IF 

 IF EXISTS (dat4$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat4$ + ";paris"
 END IF 

 IF EXISTS (dat5$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat5$ + ";paris"
 END IF 

 IF EXISTS (dat6$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat6$ + ";paris"
 END IF 

 IF EXISTS (dat7$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat7$ + ";paris"
 END IF 


 IF EXISTS (dat8$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat8$ + ";paris"
 END IF 

 IF EXISTS (dat9$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat9$ + ";paris"
 END IF 

 IF PrvVerfahr$ LIKE "ZAHLUNGSEINGANG" THEN 
   bu$ = "Buchung1"
 ELSE 
   bu$ = "Buchung"
 END IF 
 CALL DFile(3,bu$ + _fpw$)
 FILE bu$
 INDEX QCodeMAVT.bu$

 FILE "SPGruppe"
 INDEX codegrsp.SPGruppe
 REM FILE dat$
 REM INDEX QMaGrSp.dat$
 
 FILE "kvertrag"
 Inde$ = "Antragsdatum.kvertrag"
 opt1% = 1

 INDEX inde$$
datSUFP1300120061: 
 CREATE DIALOG "Konto1",0,0,221,185,title$,"MS Sans Serif",8
 ADD DIALOG "Konto1",9,6,7,24,22,2
 ADD DIALOG "Konto1",5,34,8,170,9,0,"Statistik NeuabschlÅsse:"
 ADD DIALOG "Konto1",4,34,14,176,5,0,""
 ADD DIALOG "Konto1",5,34,22,175,16,0,"Bitte geben Sie ein, fÅr welchen Zeitraum Sie eine öbersicht wÅnschen."
 ADD DIALOG "Konto1",5,34,40,175,32,0,"Wenn Sie keine Angaben zum Zeitraum eintragen, werden alle VertrÑge bis zum heutigen Tag berÅcksichtigt."
 ADD DIALOG "Konto1",5,34,80,12,8,0,"von"
 ADD DIALOG "Konto1",6,53,79,45,11,0,0,von$,10
 ADD DIALOG "Konto1",5,102,80,12,8,0,"bis"
 ADD DIALOG "Konto1",6,116,79,45,11,0,0,bis$,10

 ADD DIALOG "Konto1",4,1,97,219,60,0,"Auswahl fÅr Datumsfeld"
 ADD DIALOG "Konto1",3,5,107,92,12,0,"Antragsdatum",1,opt1%
 ADD DIALOG "Konto1",3,5,119,92,12,0,"Erfassungsdatum",2,opt1%
 ADD DIALOG "Konto1",3,5,131,92,12,0,"Vertragsbeginn",3,opt1%
 ADD DIALOG "Konto1",3,5,143,92,12,0,"Policedatum",4,opt1%

 ADD DIALOG "Konto1",1,50,164,55,15,1,"&Weiter",1,1
 ADD DIALOG "Konto1",1,110,164,55,15,0,"&Abbruch",0,0
 DIALOG "Konto1",req%
 REMOVE DIALOG "Konto1"
 MOUSE ON 
 IF req% <> 1 THEN GOTO eSUFP1300120061
 IF von$ = "" THEN 
   von$ = "01.01.0001"
   von% = DAYS ("01.01.0001")
 ELSE 
   IF DateOK%(von$) THEN 
     von% = DAYS (von$)
   ELSE 
     CALL Fehler("Das Datum von: " + von$ + " ist ungÅltig!","Bitte neu eingeben!")
     GOTO datSUFP1300120061
   END IF 
 END IF 
 IF bis$ = "" THEN 
   bis% = DAYS ( TODAY )
   bis$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 ELSE 
   IF DateOK%(bis$) THEN 
     bis% = DAYS (bis$)
   ELSE 
     CALL Fehler("Das Datum bis: " + bis$ + " ist ungÅltig!","Bitte neu eingeben!")
     GOTO datSUFP1300120061
   END IF 
 END IF 
 

 REM ************************************************************************************************************************************************************************
    xls1$ = "j":xlsd1$ = "n"
    xls1a$ = "j":xlsd1a$ = "j"
    xls2$ = "n":xlsd2$ = "n"
    xls3$ = "n":xlsd3$ = "n"
    xls4$ = "n":xlsd4$ = "n"
    xls5$ = "n":xlsd5$ = "n"
    xls6$ = "n":xlsd6$ = "n"
    xls7$ = "n":xlsd7$ = "n"
    xls8$ = "n":xlsd8$ = "n"
    xls9$ = "n":xlsd9$ = "n"
 
    DIM dlg AS Dialog
    DIM control AS DialogControl
 
    Superbase.Dialogs.Add("Dialogname")
    SET dlg = Superbase.Dialogs.Dialogname
    dlg.Move(0,0,318,177)
    dlg.Caption = "Ausgabe der Statistiken"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogLabel12","DialogLabel")
    control.Move(134,3,86,9)
    control.Caption = "Ausgabe nach MS Excel"
 
    SET control = dlg.Add("DialogLabel13","DialogLabel")
    control.Move(224,3,86,9)
    control.Caption = "Ausgabe als Druckliste"
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(5,19,124,9)
    control.Caption = "Vermittler 1 - Spartengruppe"
 
    SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
    control.Move(168,19,12,9)
    control.Caption = ""
    control.Bind("xls1$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    REM SET control = dlg.Add("DialogCheckBox2","DialogCheckBox")
    REM control.Move(257,19,12,9)
    REM control.Caption = ""
    REM control.Bind("xlsd1$")
    REM control.ValueOn = "j"
    REM control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(5,30,124,10)
    control.Caption = "Vermittler 2 - Spartengruppe"
 
    SET control = dlg.Add("DialogCheckBox3","DialogCheckBox")
    control.Move(168,30,12,10)
    control.Caption = ""
    control.Bind("xls1a$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox4","DialogCheckBox")
    control.Move(257,30,12,10)
    control.Caption = ""
    control.Bind("xlsd1a$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel10","DialogLabel")
    control.Move(5,41,124,10)
    control.Caption = "Vermittler 3"
 
    SET control = dlg.Add("DialogCheckBox5","DialogCheckBox")
    control.Move(168,41,12,10)
    control.Caption = ""
    control.Bind("xls9$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox6","DialogCheckBox")
    control.Move(257,41,12,10)
    control.Caption = ""
    control.Bind("xlsd9$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(5,57,124,10)
    control.Caption = "Spartengruppen"

    SET control = dlg.Add("DialogCheckBox7","DialogCheckBox")
    control.Move(168,56,12,9)
    control.Caption = ""
    control.Bind("xls2$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox8","DialogCheckBox")
    control.Move(257,56,12,9)
    control.Caption = ""
    control.Bind("xlsd2$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(5,73,124,10)
    control.Caption = "Gesellschaften"
 
    SET control = dlg.Add("DialogCheckBox9","DialogCheckBox")
    control.Move(168,72,12,9)
    control.Caption = ""
    control.Bind("xls3$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox10","DialogCheckBox")
    control.Move(257,72,12,9)
    control.Caption = ""
    control.Bind("xlsd3$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
 
    SET control = dlg.Add("DialogLabel5","DialogLabel")
    control.Move(5,84,124,10)
    control.Caption = "Gesellschaften 1 - Spartengruppen"
 
    SET control = dlg.Add("DialogCheckBox11","DialogCheckBox")
    control.Move(168,84,12,10)
    control.Caption = ""
    control.Bind("xls4$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox12","DialogCheckBox")
    control.Move(257,84,12,10)
    control.Caption = ""
    control.Bind("xlsd4$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel6","DialogLabel")
    control.Move(5,97,124,10)
    control.Caption = "Gesellschaften 2 - Spartengruppen"
 
    SET control = dlg.Add("DialogCheckBox13","DialogCheckBox")
    control.Move(168,97,12,10)
    control.Caption = ""
    control.Bind("xls5$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox14","DialogCheckBox")
    control.Move(257,97,12,10)
    control.Caption = ""
    control.Bind("xlsd5$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel8","DialogLabel")
    control.Move(5,110,124,10)
    control.Caption = "Gesellschaften - Sparten"

    SET control = dlg.Add("DialogCheckBox19","DialogCheckBox")
    control.Move(168,108,12,10)
    control.Caption = ""
    control.Bind("xls7$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox20","DialogCheckBox")
    control.Move(257,108,12,10)
    control.Caption = ""
    control.Bind("xlsd7$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel7","DialogLabel")
    control.Move(5,128,124,9)
    control.Caption = "Sparten - Spartengruppen"
 
    SET control = dlg.Add("DialogCheckBox15","DialogCheckBox")
    control.Move(168,127,12,10)
    control.Caption = ""
    control.Bind("xls6$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox16","DialogCheckBox")
    control.Move(257,127,12,10)
    control.Caption = ""
    control.Bind("xlsd6$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
 
    SET control = dlg.Add("DialogLabel9","DialogLabel")
    control.Move(5,140,124,10)
    control.Caption = "Sparten"

    SET control = dlg.Add("DialogCheckBox17","DialogCheckBox")
    control.Move(168,139,12,9)
    control.Caption = ""
    control.Bind("xls8$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox18","DialogCheckBox")
    control.Move(257,139,12,9)
    control.Caption = ""
    control.Bind("xlsd8$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(118,156,42,13)
    control.Default = 1
    control.Caption = "OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(162,156,43,13)
    control.Caption = "Abbruch"
    control.ReturnValue = 0
    DIALOG "Dialogname",req%
    REMOVE DIALOG "Dialogname"
    IF req% = 0 GOTO eSUFP1300120061
 REM ************************************************************************************************************************************************************************  



 IF OPEN (dat1$) THEN 
   REQUEST "Sollen die Ausgaben an Hand der letzten Recherche erzeugt werden?","",130,req%
   IF req% = 1 THEN GOTO anf230420063
 END IF 
 SELECT CASE opt1%
   CASE 1
     Inde$ = "Antragsdatum.kvertrag"
   CASE 2
     Inde$ = "erfasdatum.kvertrag"
   CASE 3
     Inde$ = "VS_Beginn.kvertrag"
   CASE 4
     Inde$ = "Policedatum.kvertrag"
 END SELECT 

 SET STATUS "Erzeugen der temporÑren Dateien"
 MOUSE OFF 
 FILE "SPGruppe"
 INDEX gruppe.spgruppe
 SELECT FIRST 
 DIM spgr$( RECCOUNT ("spgruppe"))
 DIM spgr%( RECCOUNT ("spgruppe"))
 IF RECCOUNT ("spgruppe") < 14 THEN 
   REDIM spgr$(14)
   REDIM spgr%(14)
 END IF 
 i% = 0
 REM CALL Fehler("","")
 WHILE NOT EOF ("spgruppe")
    spgr$(i%) = (gruppe.spgruppe)
    spgr%(i%) = CodeGRSP.spgruppe
    i% = i% + 1
    SELECT NEXT FILE "spgruppe"
 WEND 
 kk% = i%

 REM CALL Fehler("","")
 IF kk% < 13 THEN 
   FOR i% = kk% TO 13
    spgr$(i%) = "LEER-LEER-LEER"
    spgr%(i%) = - 1
   NEXT i%
 END IF 
 kk% = 13


 REM REMOVE FROM FILE dat$
 
 IF EXISTS (GMACodeDir$ + dat$ + ".sbf") THEN 
   IF OPEN (dat$) THEN CLOSE FILE dat$
   DELETE GMACodeDir$ + dat$ + ".*"
 END IF 

 IF EXISTS (GMACodeDir$ + dat1$ + ".sbf") THEN 
   IF OPEN (dat1$) THEN CLOSE FILE dat1$
   DELETE GMACodeDir$ + dat1$ + ".*"
 END IF 

 IF EXISTS (GMACodeDir$ + dat2$ + ".sbf") THEN 
   IF OPEN (dat2$) THEN CLOSE FILE dat2$
   DELETE GMACodeDir$ + dat2$ + ".*"
 END IF 

 IF EXISTS (GMACodeDir$ + dat3$ + ".sbf") THEN 
   IF OPEN (dat3$) THEN CLOSE FILE dat3$
   DELETE GMACodeDir$ + dat3$ + ".*"
 END IF 


 IF EXISTS (GMACodeDir$ + dat4$ + ".sbf") THEN 
   IF OPEN (dat4$) THEN CLOSE FILE dat4$
   DELETE GMACodeDir$ + dat4$ + ".*"
 END IF 

 IF EXISTS (GMACodeDir$ + dat5$ + ".sbf") THEN 
   IF OPEN (dat5$) THEN CLOSE FILE dat5$
   DELETE GMACodeDir$ + dat5$ + ".*"
 END IF 

 IF EXISTS (GMACodeDir$ + dat6$ + ".sbf") THEN 
   IF OPEN (dat6$) THEN CLOSE FILE dat6$
   DELETE GMACodeDir$ + dat6$ + ".*"
 END IF 

 IF EXISTS (GMACodeDir$ + dat7$ + ".sbf") THEN 
   IF OPEN (dat7$) THEN CLOSE FILE dat7$
   DELETE GMACodeDir$ + dat7$ + ".*"
 END IF 

 IF EXISTS (GMACodeDir$ + dat8$ + ".sbf") THEN 
   IF OPEN (dat8$) THEN CLOSE FILE dat8$
   DELETE GMACodeDir$ + dat8$ + ".*"
 END IF 


 IF EXISTS (GMACodeDir$ + dat9$ + ".sbf") THEN 
   IF OPEN (dat9$) THEN CLOSE FILE dat9$
   DELETE GMACodeDir$ + dat9$ + ".*"
 END IF 

 CREATE dat$ + ";paris; paris; paris"
 ADD "CodeKey; NUM; 000000.;0;0"
 MAKE dat$
 FILE dat$
 CALL FldAdd1("Codekey","NUM;000000.",1)
 CALL FldAdd1("Codema","NUM;000000.",1)
 CALL FldAdd1("Codegrsp","NUM;000000.",1)
 CALL FldAdd1("Agentur","TXT;70",1)
 CALL FldAdd1("Agenturno","TXT;20",1)
   feld$ = "SPGruppe"
   CALL FldAdd1(feld$,"TXT;60",1)
   feld$ = "Anzahl"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Punkte"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Bewertung"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Provision"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "SR"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "AnzStorno"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "PunkteSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "BWSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   CALL FldAdd1("QMaGrSp","TXT;12",1)
   CALL FldAdd1("QAgentSpGru","TXT;100",1)
 SAVE FILE dat$


 CREATE dat1$ + ";paris; paris; paris"
 ADD "CodeKey; NUM; 000000.;0;0"
 MAKE dat1$
 FILE dat1$
 CALL FldAdd1("Codekey","NUM;000000.",1)
 CALL FldAdd1("Codema","NUM;000000.",1)
 CALL FldAdd1("Agentur","TXT;70",1)
 CALL FldAdd1("Agenturno","TXT;20",1)
 SAVE FILE dat1$
 FOR i% = 0 TO kk% - 1
   i$ = LTRIM$ ( STR$ (i%,"9999"))
   feld$ = "Gruppe" + i$
   REM CALL Fehler(feld$,"")
   CALL FldAdd1(feld$,"TXT;20",0)
   feld$ = "Anzahl" + i$
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Punkte" + i$
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Bewertung" + i$
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Provision" + i$
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "SR" + i$
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "AnzStorno" + i$
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "PunkteSto" + i$
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "BWSto" + i$
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
 NEXT i%
 SAVE FILE dat1$


 CREATE dat2$ + ";paris; paris; paris"
 ADD "CodeKey; NUM; 000000.;0;0"
 MAKE dat2$
 FILE dat2$
 CALL FldAdd1("Codekey","NUM;000000.",1)
   CALL FldAdd1("CodeGRSP","NUM;000000.",1)
   feld$ = "SPGruppe"
   CALL FldAdd1(feld$,"TXT;60",1)
   feld$ = "Anzahl"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Punkte"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Bewertung"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Provision"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "SR"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "AnzStorno"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "PunkteSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "BWSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
 SAVE FILE dat2$

 CREATE dat3$ + ";paris; paris; paris"
 ADD "CodeKey; NUM; 000000.;0;0"
 MAKE dat3$
 FILE dat3$
 CALL FldAdd1("Codekey","NUM;000000.",1)
   CALL FldAdd1("CodeGE","NUM;000000.",1)
   feld$ = "Gesellschaft"
   CALL FldAdd1(feld$,"TXT;30",1)
   feld$ = "Anzahl"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Punkte"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Bewertung"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Provision"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "SR"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "AnzStorno"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "PunkteSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "BWSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
 SAVE FILE dat3$
 

 CREATE dat4$ + ";paris; paris; paris"
 ADD "CodeKey; NUM; 000000.;0;0"
 MAKE dat4$
 FILE dat4$
 CALL FldAdd1("Codekey","NUM;000000.",1)
 CALL FldAdd1("Codege","NUM;000000.",1)
 CALL FldAdd1("Gesellschaft","TXT;70",1)
 SAVE FILE dat4$
 FOR i% = 0 TO kk% - 1
   i$ = LTRIM$ ( STR$ (i%,"9999"))
   feld$ = "Gruppe" + i$
   REM CALL Fehler(feld$,"")
   CALL FldAdd1(feld$,"TXT;20",0)
   feld$ = "Anzahl" + i$
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Punkte" + i$
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Bewertung" + i$
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Provision" + i$
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "SR" + i$
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "AnzStorno" + i$
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "PunkteSto" + i$
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "BWSto" + i$
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
 NEXT i%
 SAVE FILE dat4$


 CREATE dat5$ + ";paris; paris; paris"
 ADD "CodeKey; NUM; 000000.;0;0"
 MAKE dat5$
 FILE dat5$
 CALL FldAdd1("Codekey","NUM;000000.",1)
 CALL FldAdd1("Codege","NUM;000000.",1)
 CALL FldAdd1("Codegrsp","NUM;000000.",1)
 CALL FldAdd1("Gesellschaft","TXT;70",1)
   feld$ = "SPGruppe"
   CALL FldAdd1(feld$,"TXT;60",1)
   feld$ = "Anzahl"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Punkte"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Bewertung"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Provision"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "SR"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "AnzStorno"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "PunkteSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "BWSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   CALL FldAdd1("QGEGrSp","TXT;12",1)
   CALL FldAdd1("QGesellSpGru","TXT;100",1)
 SAVE FILE dat5$


 CREATE dat6$ + ";paris; paris; paris"
 ADD "CodeKey; NUM; 000000.;0;0"
 MAKE dat6$
 FILE dat6$
 CALL FldAdd1("Codekey","NUM;000000.",1)
 CALL FldAdd1("Codeva","NUM;000000.",1)
 CALL FldAdd1("Codegrsp","NUM;000000.",1)
 CALL FldAdd1("Sparte","TXT;70",1)
   feld$ = "SPGruppe"
   CALL FldAdd1(feld$,"TXT;60",1)
   feld$ = "Anzahl"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Punkte"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Bewertung"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Provision"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "SR"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "AnzStorno"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "PunkteSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "BWSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   CALL FldAdd1("QVAGrSp","TXT;12",1)
 SAVE FILE dat6$

 CREATE dat7$ + ";paris; paris; paris"
 ADD "CodeKey; NUM; 000000.;0;0"
 MAKE dat7$
 FILE dat7$
 CALL FldAdd1("Codekey","NUM;000000.",1)
 CALL FldAdd1("Codege","NUM;000000.",1)
 CALL FldAdd1("Codeva","NUM;000000.",1)
 CALL FldAdd1("Codegrsp","NUM;000000.",1)
 CALL FldAdd1("Gesellschaft","TXT;70",1)
 CALL FldAdd1("Sparte","TXT;70",1)
   feld$ = "SPGruppe"
   CALL FldAdd1(feld$,"TXT;60",1)
   feld$ = "Anzahl"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Punkte"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Bewertung"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Provision"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "SR"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "AnzStorno"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "PunkteSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "BWSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   CALL FldAdd1("QGEVAGr","TXT;18",1)
 SAVE FILE dat7$


 CREATE dat8$ + ";paris; paris; paris"
 ADD "CodeKey; NUM; 000000.;0;0"
 MAKE dat8$
 FILE dat8$
 CALL FldAdd1("Codekey","NUM;000000.",1)
   CALL FldAdd1("CodeVA","NUM;000000.",1)
   feld$ = "Sparte"
   CALL FldAdd1(feld$,"TXT;70",1)
   feld$ = "Anzahl"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Punkte"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Bewertung"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Provision"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "SR"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "AnzStorno"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "PunkteSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "BWSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
 SAVE FILE dat8$


 CREATE dat9$ + ";paris; paris; paris"
 ADD "CodeKey; NUM; 000000.;0;0"
 MAKE dat9$
 FILE dat9$
 CALL FldAdd1("Codekey","NUM;000000.",1)
   CALL FldAdd1("CodeMA","NUM;000000.",1)
   feld$ = "Agentur"
   CALL FldAdd1(feld$,"TXT;70",1)
   CALL FldAdd1("Agenturno","TXT;20",1)
   feld$ = "Anzahl"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Punkte"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Bewertung"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Provision"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "SR"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "AnzStorno"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "PunkteSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "BWSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
 SAVE FILE dat9$

 FILE "KVERTRAG"
 INDEX codegrsp.kvertrag
 CALL WriteConfig("PROVIS","SUFP1Avon",von$)
 CALL WriteConfig("PROVIS","SUFP1Abis",bis$)
 CALL WriteConfig("PROVIS","SUFP1Ainde",inde$)
 CALL WriteConfig("PROVIS","SUFP4von",von$)
 CALL WriteConfig("PROVIS","SUFP4bis",bis$)
 CALL WriteConfig("PROVIS","SUFP4inde",inde$)
 i% = 0
 j% = RECCOUNT ("KVERTRAG")
 gesamt% = 0
 FOR i% = 0 TO kk% - 1
   i$ = LTRIM$ ( STR$ (i%,"9999"))
   codegrsp% = spgr%(i%)
   SELECT FIRST FILE "kvertrag" INDEX codegrsp.kvertrag
   SELECT KEY codegrsp% FILE "kvertrag" INDEX codegrsp.kvertrag
   ds% = 0
   WHILE NOT EOF ("Kvertrag") AND codegrsp.kvertrag = codegrsp%
     MOUSE OFF 
     FILE dat1$
     ds% = ds% + 1
     gesamt% = gesamt% + 1
     SET STATUS "Spartengruppe: " + LTRIM$ ( STR$ (i%,",999999999")) + "/" + LTRIM$ ( STR$ (kk%,",999999999")) + "  DatensÑtze " + STR$ (ds%,",999999999") + "/" + STR$ (j%,",999999999") + "   gesamt:  " + STR$ (gesamt%,",999999999")
     IF inde$$ >= von% AND inde$$ <= bis% THEN 
       codege% = codege.kvertrag
       codema% = codema.kvertrag
       codevt% = lfdnr.kvertrag
       codegrsp% = codegrsp.kvertrag
       codeva% = codeva.kvertrag
       QMaGrsp$ = STR$ (codema%,"000000") + STR$ (codegrsp%,"000000")
       QGEGrSp$ = STR$ (codege%,"000000") + STR$ (codegrsp%,"000000")
       QVAGrSp$ = STR$ (codeva%,"000000") + STR$ (codegrsp%,"000000")
       QCodeMAVT$ = STR$ (codema%,"000000") + STR$ (codevt%,"000000")
       QGEVAGr$ = STR$ (codege%,"000000") + STR$ (codeva%,"000000") + STR$ (codegrsp%,"000000")
       REM CALL Fehler("","")
       IF NOT EXISTS (codema%,codema.dat1$) THEN 
         SELECT FIRST FILE "maadr" INDEX codema.maadr
         SELECT KEY codema% FILE "maadr" INDEX codema.maadr
         BLANK FILE dat1$
         codekey% = SER (dat1$,1)
         codekey.dat1$ = codekey%
         codema.dat1$ = codema%
         Agentur.dat1$ = Nachname.maadr + "," + Vorname.maadr
         Agenturno.dat1$ = Agenturnr.maadr
         FOR z% = 0 TO kk% - 1
           feld$ = "Gruppe" + LTRIM$ ( STR$ (z%,"999"))
           feld$$ = LEFT$ (spgr$(z%),20)
         NEXT z%
         STORE FILE dat1$
         SELECT FIRST FILE dat1$ INDEX codekey.dat1$
         SELECT KEY codekey% LOCK FILE dat1$ INDEX codekey.dat1$
       ELSE 
         SELECT FIRST FILE dat1$ INDEX codema.dat1$
         SELECT KEY codema% LOCK FILE dat1$ INDEX codema.dat1$
       END IF 
       REM kein Fremdvertrag und nicht storniert durch Dynamisierung
       FILE dat1$
       IF codevstatus.kvertrag <> 11 AND codevstatus.kvertrag <> 13 THEN 
         feld$ = "Anzahl" + i$
         feld$$ = feld$$ + 1
         feld$ = "Punkte" + i$
         feld$$ = feld$$ + einheiten.kvertrag
         feld$ = "Bewertung" + i$
         feld$$ = feld$$ + Bewertungssumme.kvertrag
         IF EXISTS (QCodeMAVT$,QCodeMAVT.bu$) THEN 
           SELECT FIRST FILE bu$ INDEX QCodeMAVT.bu$
           SELECT KEY QCodeMAVT$ FILE bu$ INDEX QCodeMAVT.bu$
           WHILE NOT EOF (bu$) AND QCodeMAVT.bu$ = QCodeMAVT$
             feld$ = "Provision" + i$
             feld$$ = feld$$ + betrageu.bu$
             feld$ = "SR" + i$
             feld$$ = feld$$ + sreu.bu$
             SELECT NEXT FILE bu$
           WEND 
         END IF 
       END IF 
       IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag = 20 OR codevstatus.kvertrag = 21 THEN 
         feld$ = "AnzStorno" + i$
         feld$$ = feld$$ + 1
         feld$ = "PunkteSto" + i$
         feld$$ = feld$$ + einheiten.kvertrag
         feld$ = "BWSto" + i$
         feld$$ = feld$$ + Bewertungssumme.kvertrag
       END IF 
       STORE FILE dat1$

       REM *******************************
       FILE dat$
       IF codevstatus.kvertrag <> 11 AND codevstatus.kvertrag <> 13 THEN 
         IF NOT EXISTS (QMaGrsp$,QMaGrsp.dat$) THEN 
           SELECT FIRST FILE "maadr" INDEX codema.maadr
           SELECT KEY codema% FILE "maadr" INDEX codema.maadr
           SELECT FIRST FILE "spgruppe" INDEX codegrsp.spgruppe
           SELECT KEY codegrsp% FILE "spgruppe" INDEX codegrsp.spgruppe
           BLANK FILE dat$
           codekey% = SER (dat$,1)
           codekey.dat$ = codekey%
           codema.dat$ = codema%
           codegrsp.dat$ = codegrsp%
           Agentur.dat$ = Nachname.maadr + "," + Vorname.maadr
           Agenturno.dat$ = Agenturnr.maadr
           SPgruppe.dat$ = Gruppe.spgruppe
           QMaGrsp.dat$ = STR$ (codema%,"000000") + STR$ (codegrsp%,"000000")
           QAgentSpGru.dat$ = LEFT$ (Agentur.dat$ + Gruppe.spgruppe,100)
           STORE FILE dat$
           SELECT FIRST FILE dat$ INDEX codekey.dat$
           SELECT KEY codekey% LOCK FILE dat$ INDEX codekey.dat$
         ELSE 
           SELECT FIRST FILE dat$ INDEX QMaGrsp.dat$
           SELECT KEY QMaGrsp$ LOCK FILE dat$ INDEX QMaGrsp.dat$
         END IF 
         Anzahl.dat$ = Anzahl.dat$ + 1
         Punkte.dat$ = Punkte.dat$ + Einheiten.kvertrag
         Bewertung.dat$ = Bewertung.dat$ + Bewertungssumme.kvertrag
         IF EXISTS (QCodeMAVT$,QCodeMAVT.bu$) THEN 
           SELECT FIRST FILE bu$ INDEX QCodeMAVT.bu$
           SELECT KEY QCodeMAVT$ FILE bu$ INDEX QCodeMAVT.bu$
           WHILE NOT EOF (bu$) AND QCodeMAVT.bu$ = QCodeMAVT$
             feld$ = "Provision"
             feld$$ = feld$$ + betrageu.bu$
             feld$ = "SR"
             feld$$ = feld$$ + sreu.bu$
             SELECT NEXT FILE bu$
           WEND 
         END IF 
         IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag = 20 OR codevstatus.kvertrag = 21 THEN 
           AnzStorno.dat$ = AnzStorno.dat$ + 1
           PunkteSto.dat$ = PunkteSto.dat$ + Einheiten.kvertrag
           BwSto.dat$ = BwSto.dat$ + Bewertungssumme.kvertrag
         END IF 
         STORE FILE dat$
       END IF 
       REM *******************************

       REM 222222222222222222222222222222222
       FILE dat2$
       IF codevstatus.kvertrag <> 11 AND codevstatus.kvertrag <> 13 THEN 
         IF NOT EXISTS (codegrsp%,codegrsp.dat2$) THEN 
           SELECT FIRST FILE "spgruppe" INDEX codegrsp.spgruppe
           SELECT KEY codegrsp% FILE "spgruppe" INDEX codegrsp.spgruppe
           BLANK FILE dat2$
           codekey% = SER (dat2$,1)
           codekey.dat2$ = codekey%
           codegrsp.dat2$ = codegrsp%
           SPgruppe.dat2$ = Gruppe.spgruppe
           STORE FILE dat2$
           SELECT FIRST FILE dat2$ INDEX codekey.dat2$
           SELECT KEY codekey% LOCK FILE dat2$ INDEX codekey.dat2$
         ELSE 
           SELECT FIRST FILE dat2$ INDEX codegrsp.dat2$
           SELECT KEY codegrsp% LOCK FILE dat2$ INDEX codegrsp.dat2$
         END IF 
         Anzahl.dat2$ = Anzahl.dat2$ + 1
         Punkte.dat2$ = Punkte.dat2$ + Einheiten.kvertrag
         Bewertung.dat2$ = Bewertung.dat2$ + Bewertungssumme.kvertrag
         IF EXISTS (codevt%,codevt.bu$) THEN 
           SELECT FIRST FILE bu$ INDEX codevt.bu$
           SELECT KEY codevt% FILE bu$ INDEX codevt.bu$
           WHILE NOT EOF (bu$) AND codevt.bu$ = codevt%
             feld$ = "Provision"
             feld$$ = feld$$ + betrageu.bu$
             feld$ = "SR"
             feld$$ = feld$$ + sreu.bu$
             SELECT NEXT FILE bu$
           WEND 
         END IF 
         IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag = 20 OR codevstatus.kvertrag = 21 THEN 
           AnzStorno.dat2$ = AnzStorno.dat2$ + 1
           PunkteSto.dat2$ = PunkteSto.dat2$ + Einheiten.kvertrag
           BwSto.dat2$ = BwSto.dat2$ + Bewertungssumme.kvertrag
         END IF 
         STORE FILE dat2$
       END IF 
       REM 2222222222222222222222222222222222222222222222222222
       REM 3333333333333333333333333333333333333333333333333333
       FILE dat3$
       IF codevstatus.kvertrag <> 11 AND codevstatus.kvertrag <> 13 THEN 
         IF NOT EXISTS (codege%,codege.dat3$) THEN 
           SELECT FIRST FILE "geadr" INDEX codege.geadr
           SELECT KEY codege% FILE "geadr" INDEX codege.geadr
           BLANK FILE dat3$
           codekey% = SER (dat3$,1)
           codekey.dat3$ = codekey%
           codege.dat3$ = codege%
           Gesellschaft.dat3$ = Gesellschaft.geadr
           STORE FILE dat3$
           SELECT FIRST FILE dat3$ INDEX codekey.dat3$
           SELECT KEY codekey% LOCK FILE dat3$ INDEX codekey.dat3$
         ELSE 
           SELECT FIRST FILE dat3$ INDEX codege.dat3$
           SELECT KEY codege% LOCK FILE dat3$ INDEX codege.dat3$
         END IF 
         Anzahl.dat3$ = Anzahl.dat3$ + 1
         Punkte.dat3$ = Punkte.dat3$ + Einheiten.kvertrag
         Bewertung.dat3$ = Bewertung.dat3$ + Bewertungssumme.kvertrag
         IF EXISTS (codevt%,codevt.bu$) THEN 
           SELECT FIRST FILE bu$ INDEX codevt.bu$
           SELECT KEY codevt% FILE bu$ INDEX codevt.bu$
           WHILE NOT EOF (bu$) AND codevt.bu$ = codevt%
             feld$ = "Provision"
             feld$$ = feld$$ + betrageu.bu$
             feld$ = "SR"
             feld$$ = feld$$ + sreu.bu$
             SELECT NEXT FILE bu$
           WEND 
         END IF 
         IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag = 20 OR codevstatus.kvertrag = 21 THEN 
           AnzStorno.dat3$ = AnzStorno.dat3$ + 1
           PunkteSto.dat3$ = PunkteSto.dat3$ + Einheiten.kvertrag
           BwSto.dat3$ = BwSto.dat3$ + Bewertungssumme.kvertrag
         END IF 
         STORE FILE dat3$
       END IF 
       REM 3333333333333333333333333333333333333333333333333333
       REM 4444444444444444444444444444444444444444444444444444
       FILE dat4$
       IF NOT EXISTS (codege%,codege.dat4$) THEN 
         SELECT FIRST FILE "geadr" INDEX codege.geadr
         SELECT KEY codege% FILE "geadr" INDEX codege.geadr
         BLANK FILE dat4$
         codekey% = SER (dat4$,1)
         codekey.dat4$ = codekey%
         codege.dat4$ = codege%
         Gesellschaft.dat4$ = Gesellschaft.geadr
         FOR z% = 0 TO kk% - 1
           feld$ = "Gruppe" + LTRIM$ ( STR$ (z%,"999"))
           feld$$ = LEFT$ (spgr$(z%),20)
         NEXT z%
         STORE FILE dat4$
         SELECT FIRST FILE dat4$ INDEX codekey.dat4$
         SELECT KEY codekey% LOCK FILE dat4$ INDEX codekey.dat4$
       ELSE 
         SELECT FIRST FILE dat4$ INDEX codege.dat4$
         SELECT KEY codege% LOCK FILE dat4$ INDEX codege.dat4$
       END IF 
       REM kein Fremdvertrag und nicht storniert durch Dynamisierung
       FILE dat4$
       IF codevstatus.kvertrag <> 11 AND codevstatus.kvertrag <> 13 THEN 
         feld$ = "Anzahl" + i$
         feld$$ = feld$$ + 1
         feld$ = "Punkte" + i$
         feld$$ = feld$$ + einheiten.kvertrag
         feld$ = "Bewertung" + i$
         feld$$ = feld$$ + Bewertungssumme.kvertrag
         IF EXISTS (codevt%,codevt.bu$) THEN 
           SELECT FIRST FILE bu$ INDEX codevt.bu$
           SELECT KEY codevt% FILE bu$ INDEX codevt.bu$
           WHILE NOT EOF (bu$) AND codevt.bu$ = codevt%
             feld$ = "Provision" + i$
             feld$$ = feld$$ + betrageu.bu$
             feld$ = "SR" + i$
             feld$$ = feld$$ + sreu.bu$
             SELECT NEXT FILE bu$
           WEND 
         END IF 
       END IF 
       IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag = 20 OR codevstatus.kvertrag = 21 THEN 
         feld$ = "AnzStorno" + i$
         feld$$ = feld$$ + 1
         feld$ = "PunkteSto" + i$
         feld$$ = feld$$ + einheiten.kvertrag
         feld$ = "BWSto" + i$
         feld$$ = feld$$ + Bewertungssumme.kvertrag
       END IF 
       STORE FILE dat4$
       REM 4444444444444444444444444444444444444444444444444444
       REM 5555555555555555555555555555555555555555555555555555
       FILE dat5$
       IF codevstatus.kvertrag <> 11 AND codevstatus.kvertrag <> 13 THEN 
         IF NOT EXISTS (QGEGrSp$,QGEGrSp.dat5$) THEN 
           SELECT FIRST FILE "geadr" INDEX codege.geadr
           SELECT KEY codege% FILE "geadr" INDEX codege.geadr
           SELECT FIRST FILE "spgruppe" INDEX codegrsp.spgruppe
           SELECT KEY codegrsp% FILE "spgruppe" INDEX codegrsp.spgruppe
           BLANK FILE dat5$
           codekey% = SER (dat5$,1)
           codekey.dat5$ = codekey%
           codege.dat5$ = codege%
           codegrsp.dat5$ = codegrsp%
           Gesellschaft.dat5$ = Gesellschaft.geadr
           SPgruppe.dat5$ = Gruppe.spgruppe
           QGEGrSp.dat5$ = STR$ (codege%,"000000") + STR$ (codegrsp%,"000000")
           QGesellSpGru.dat5$ = LEFT$ (Gesellschaft.dat5$ + Gruppe.spgruppe,100)
           STORE FILE dat5$
           SELECT FIRST FILE dat5$ INDEX codekey.dat5$
           SELECT KEY codekey% LOCK FILE dat5$ INDEX codekey.dat5$
         ELSE 
           SELECT FIRST FILE dat5$ INDEX QGeGrsp.dat5$
           SELECT KEY QMaGrsp$ LOCK FILE dat5$ INDEX QGEGrsp.dat5$
         END IF 
         Anzahl.dat5$ = Anzahl.dat5$ + 1
         Punkte.dat5$ = Punkte.dat5$ + Einheiten.kvertrag
         Bewertung.dat5$ = Bewertung.dat5$ + Bewertungssumme.kvertrag
         IF EXISTS (codevt%,codevt.bu$) THEN 
           SELECT FIRST FILE bu$ INDEX codevt.bu$
           SELECT KEY codevt% FILE bu$ INDEX codevt.bu$
           WHILE NOT EOF (bu$) AND codevt.bu$ = codevt%
             feld$ = "Provision"
             feld$$ = feld$$ + betrageu.bu$
             feld$ = "SR"
             feld$$ = feld$$ + sreu.bu$
             SELECT NEXT FILE bu$
           WEND 
         END IF 
         IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag = 20 OR codevstatus.kvertrag = 21 THEN 
           AnzStorno.dat5$ = AnzStorno.dat5$ + 1
           PunkteSto.dat5$ = PunkteSto.dat5$ + Einheiten.kvertrag
           BwSto.dat5$ = BwSto.dat5$ + Bewertungssumme.kvertrag
         END IF 
         STORE FILE dat5$
       END IF 
       REM 5555555555555555555555555555555555555555555555555555
       REM 6666666666666666666666666666666666666666666666666666  QVAGrsp
       FILE dat6$
       IF codevstatus.kvertrag <> 11 AND codevstatus.kvertrag <> 13 THEN 
         IF NOT EXISTS (QVAGrsp$,QVAGrsp.dat6$) THEN 
           SELECT FIRST FILE "sparten" INDEX codeva.sparten
           SELECT KEY codeva% FILE "sparten" INDEX codeva.sparten
           SELECT FIRST FILE "spgruppe" INDEX codegrsp.spgruppe
           SELECT KEY codegrsp% FILE "spgruppe" INDEX codegrsp.spgruppe
           BLANK FILE dat6$
           codekey% = SER (dat6$,1)
           codekey.dat6$ = codekey%
           codeva.dat6$ = codeva%
           codegrsp.dat6$ = codegrsp%
           Sparte.dat6$ = Sparte.Sparten
           SPgruppe.dat6$ = Gruppe.spgruppe
           QVAGrSp.dat6$ = STR$ (codeva%,"000000") + STR$ (codegrsp%,"000000")
           STORE FILE dat6$
           SELECT FIRST FILE dat6$ INDEX codekey.dat6$
           SELECT KEY codekey% LOCK FILE dat6$ INDEX codekey.dat6$
         ELSE 
           SELECT FIRST FILE dat6$ INDEX QVAGrsp.dat6$
           SELECT KEY QVAGrsp$ LOCK FILE dat6$ INDEX QVAGrsp.dat6$
         END IF 
         Anzahl.dat6$ = Anzahl.dat6$ + 1
         Punkte.dat6$ = Punkte.dat6$ + Einheiten.kvertrag
         Bewertung.dat6$ = Bewertung.dat6$ + Bewertungssumme.kvertrag
         IF EXISTS (codevt%,codevt.bu$) THEN 
           SELECT FIRST FILE bu$ INDEX codevt.bu$
           SELECT KEY codevt% FILE bu$ INDEX codevt.bu$
           WHILE NOT EOF (bu$) AND codevt.bu$ = codevt%
             feld$ = "Provision"
             feld$$ = feld$$ + betrageu.bu$
             feld$ = "SR"
             feld$$ = feld$$ + sreu.bu$
             SELECT NEXT FILE bu$
           WEND 
         END IF 
         IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag = 20 OR codevstatus.kvertrag = 21 THEN 
           AnzStorno.dat6$ = AnzStorno.dat6$ + 1
           PunkteSto.dat6$ = PunkteSto.dat6$ + Einheiten.kvertrag
           BwSto.dat6$ = BwSto.dat6$ + Bewertungssumme.kvertrag
         END IF 
         STORE FILE dat6$
       END IF 
       REM 6666666666666666666666666666666666666666666666666666
       REM CALL Fehler("77777777777777","")
       REM 7777777777777777777777777777777777777777777777777777  QGEVAGr$
       FILE dat7$
       IF codevstatus.kvertrag <> 11 AND codevstatus.kvertrag <> 13 THEN 
         IF NOT EXISTS (QGEVAGr$,QGEVAGr.dat7$) THEN 
           SELECT FIRST FILE "sparten" INDEX codeva.sparten
           SELECT KEY codeva% FILE "sparten" INDEX codeva.sparten
           SELECT FIRST FILE "geadr" INDEX codege.geadr
           SELECT KEY codege% FILE "geadr" INDEX codege.geadr
           SELECT FIRST FILE "spgruppe" INDEX codegrsp.spgruppe
           SELECT KEY codegrsp% FILE "spgruppe" INDEX codegrsp.spgruppe
           BLANK FILE dat7$
           codekey% = SER (dat7$,1)
           codekey.dat7$ = codekey%
           codeva.dat7$ = codeva%
           codege.dat7$ = codege%
           codegrsp.dat7$ = codegrsp%
           Sparte.dat7$ = Sparte.Sparten
           Gesellschaft.dat7$ = Gesellschaft.geadr
           SPgruppe.dat7$ = Gruppe.spgruppe
           QGEVAGr.dat7$ = STR$ (codege%,"000000") + STR$ (codeva%,"000000") + STR$ (codegrsp%,"000000")
           STORE FILE dat7$
           SELECT FIRST FILE dat7$ INDEX codekey.dat7$
           SELECT KEY codekey% LOCK FILE dat7$ INDEX codekey.dat7$
         ELSE 
           SELECT FIRST FILE dat7$ INDEX QGEVAGr.dat7$
           SELECT KEY QGEVAGr$ LOCK FILE dat7$ INDEX QGEVAGr.dat7$
         END IF 
         Anzahl.dat7$ = Anzahl.dat7$ + 1
         Punkte.dat7$ = Punkte.dat7$ + Einheiten.kvertrag
         Bewertung.dat7$ = Bewertung.dat7$ + Bewertungssumme.kvertrag
         IF EXISTS (codevt%,codevt.bu$) THEN 
           SELECT FIRST FILE bu$ INDEX codevt.bu$
           SELECT KEY codevt% FILE bu$ INDEX codevt.bu$
           WHILE NOT EOF (bu$) AND codevt.bu$ = codevt%
             feld$ = "Provision"
             feld$$ = feld$$ + betrageu.bu$
             feld$ = "SR"
             feld$$ = feld$$ + sreu.bu$
             SELECT NEXT FILE bu$
           WEND 
         END IF 
         IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag = 20 OR codevstatus.kvertrag = 21 THEN 
           AnzStorno.dat7$ = AnzStorno.dat7$ + 1
           PunkteSto.dat7$ = PunkteSto.dat7$ + Einheiten.kvertrag
           BwSto.dat7$ = BwSto.dat7$ + Bewertungssumme.kvertrag
         END IF 
         STORE FILE dat7$
       END IF 
       REM 7777777777777777777777777777777777777777777777777777
       REM 8888888888888888888888888888888888888888888888888888
       FILE dat8$
       IF codevstatus.kvertrag <> 11 AND codevstatus.kvertrag <> 13 THEN 
         IF NOT EXISTS (codeva%,codeva.dat8$) THEN 
           SELECT FIRST FILE "sparten" INDEX codeva.sparten
           SELECT KEY codeva% FILE "sparten" INDEX codeva.sparten
           BLANK FILE dat8$
           codekey% = SER (dat8$,1)
           codekey.dat8$ = codekey%
           codeva.dat8$ = codeva%
           Sparte.dat8$ = Sparte.sparten
           STORE FILE dat8$
           SELECT FIRST FILE dat8$ INDEX codekey.dat8$
           SELECT KEY codekey% LOCK FILE dat8$ INDEX codekey.dat8$
         ELSE 
           SELECT FIRST FILE dat8$ INDEX codeva.dat8$
           SELECT KEY codeva% LOCK FILE dat8$ INDEX codeva.dat8$
         END IF 
         Anzahl.dat8$ = Anzahl.dat8$ + 1
         Punkte.dat8$ = Punkte.dat8$ + Einheiten.kvertrag
         Bewertung.dat8$ = Bewertung.dat8$ + Bewertungssumme.kvertrag
         IF EXISTS (codevt%,codevt.bu$) THEN 
           SELECT FIRST FILE bu$ INDEX codevt.bu$
           SELECT KEY codevt% FILE bu$ INDEX codevt.bu$
           WHILE NOT EOF (bu$) AND codevt.bu$ = codevt%
             feld$ = "Provision"
             feld$$ = feld$$ + betrageu.bu$
             feld$ = "SR"
             feld$$ = feld$$ + sreu.bu$
             SELECT NEXT FILE bu$
           WEND 
         END IF 
         IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag = 20 OR codevstatus.kvertrag = 21 THEN 
           AnzStorno.dat8$ = AnzStorno.dat8$ + 1
           PunkteSto.dat8$ = PunkteSto.dat8$ + Einheiten.kvertrag
           BwSto.dat8$ = BwSto.dat8$ + Bewertungssumme.kvertrag
         END IF 
         STORE FILE dat8$
       END IF 
       REM 8888888888888888888888888888888888888888888888888888
       REM 9999999999999999999999999999999999999999999999999999
       FILE dat9$
       IF codevstatus.kvertrag <> 11 AND codevstatus.kvertrag <> 13 THEN 
         IF NOT EXISTS (codema%,codema.dat9$) THEN 
           SELECT FIRST FILE "maadr" INDEX codema.maadr
           SELECT KEY codema% FILE "maadr" INDEX codema.maadr
           BLANK FILE dat9$
           codekey% = SER (dat9$,1)
           codekey.dat9$ = codekey%
           codema.dat9$ = codema%
           Agentur.dat9$ = Nachname.maadr + "," + vorname.maadr
           Agenturno.dat9$ = Agenturnr.maadr
           STORE FILE dat9$
           SELECT FIRST FILE dat9$ INDEX codekey.dat9$
           SELECT KEY codekey% LOCK FILE dat9$ INDEX codekey.dat9$
         ELSE 
           SELECT FIRST FILE dat9$ INDEX codema.dat9$
           SELECT KEY codema% LOCK FILE dat9$ INDEX codema.dat9$
         END IF 
         Anzahl.dat9$ = Anzahl.dat9$ + 1
         Punkte.dat9$ = Punkte.dat9$ + Einheiten.kvertrag
         Bewertung.dat9$ = Bewertung.dat9$ + Bewertungssumme.kvertrag
         IF EXISTS (codevt%,codevt.bu$) THEN 
           SELECT FIRST FILE bu$ INDEX codevt.bu$
           SELECT KEY codevt% FILE bu$ INDEX codevt.bu$
           WHILE NOT EOF (bu$) AND codevt.bu$ = codevt%
             feld$ = "Provision"
             feld$$ = feld$$ + betrageu.bu$
             feld$ = "SR"
             feld$$ = feld$$ + sreu.bu$
             SELECT NEXT FILE bu$
           WEND 
         END IF 
         IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag = 20 OR codevstatus.kvertrag = 21 THEN 
           AnzStorno.dat9$ = AnzStorno.dat9$ + 1
           PunkteSto.dat9$ = PunkteSto.dat9$ + Einheiten.kvertrag
           BwSto.dat9$ = BwSto.dat9$ + Bewertungssumme.kvertrag
         END IF 
         STORE FILE dat9$
       END IF 
       REM 9999999999999999999999999999999999999999999999999999
     END IF 
     FILE "kvertrag"
     SELECT NEXT FILE "KVERTRAG"
   WEND 
 NEXT i%
 REM CALL Fehler("MS EXCEL - EXPORT","Sie erhalten jetzt die Mîglichkeit, Auswertungen nach MS EXCEL zu exportieren!")
 ON ERROR GOTO ErrorHandler
 REM REQUEST "Sollen die Ergebnisse nach MS Excel exportiert werden?","",130,req%
anf230420063: 
 req% = 1
 IF req% = 1 THEN 


  xx% = 0
  xy% = 0
  IF xls1$ = "j" THEN xx% = xx% + 1
  IF xls1a$ = "j" THEN xx% = xx% + 1
  IF xls2$ = "j" THEN xx% = xx% + 1
  IF xls3$ = "j" THEN xx% = xx% + 1
  IF xls4$ = "j" THEN xx% = xx% + 1
  IF xls5$ = "j" THEN xx% = xx% + 1
  IF xls6$ = "j" THEN xx% = xx% + 1
  IF xls7$ = "j" THEN xx% = xx% + 1
  IF xls8$ = "j" THEN xx% = xx% + 1
  IF xls9$ = "j" THEN xx% = xx% + 1


  IF xls1$ = "j" THEN 
   xy% = xy% + 1
   SET STATUS "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "0sufp1.xls") THEN 
     DELETE GMACodeDir$ + "0sufp1.xls"
   END IF 
   FILE "SUFP1":REM                                       Combo: Current File
   REM                                                    Menu:  FieldSelection
   OPEN FIELDS Agentur,Agenturno,SPGruppe,Anzahl,Punkte,Bewertung,Provision,SR,AnzStorno,PunkteSto,BWSto 
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM        ExportFile
   Superbase.Converters.SBF.SourceFile = "SUFP1"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = GMACodeDir$ + "0sufp1.XLS"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
   WAIT FOR 3
   REQUEST "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"Mitarbeiter1-Statistik",2
  END IF 

  IF xls1a$ = "j" THEN 
   xy% = xy% + 1
   SET STATUS "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
   IF EXISTS (GMACodeDir$ + "0sufp1a.xls") THEN 
     DELETE GMACodeDir$ + "0sufp1a.xls"
   END IF 

   MOUSE OFF 
   FILE "SUFP1A":REM                                      Combo: Current File
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
   Superbase.Converters.SBF.SourceFile = "SUFP1A"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = GMACodeDir$ + "0sufp1a.XLS"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
   WAIT FOR 3
   REQUEST "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"Mitarbeiter2-Statistik",2
  END IF 

  IF xls2$ = "j" THEN 
   xy% = xy% + 1
   SET STATUS "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "0sufp2.xls") THEN 
     DELETE GMACodeDir$ + "0sufp2.xls"
   END IF 
   FILE "SUFP2":REM                                       Combo: Current File
   REM                                                    Menu:  FieldSelection
   OPEN FIELDS SPgruppe,Anzahl,Punkte,Bewertung,Provision,SR,AnzStorno,PunkteSto,BWSto 
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM        ExportFile
   Superbase.Converters.SBF.SourceFile = "SUFP2"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = GMACodeDir$ + "0sufp2.XLS"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
   WAIT FOR 3
   REQUEST "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"Spartengruppen-Statistik",2
  END IF 

  IF xls3$ = "j" THEN 
   xy% = xy% + 1
   SET STATUS "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "0sufp3.xls") THEN 
     DELETE GMACodeDir$ + "0sufp3.xls"
   END IF 
   FILE "SUFP3":REM                                       Combo: Current File
   REM                                                    Menu:  FieldSelection
   OPEN FIELDS Gesellschaft,Anzahl,Punkte,Bewertung,Provision,SR,AnzStorno,PunkteSto,BWSto 
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM        ExportFile
   Superbase.Converters.SBF.SourceFile = "SUFP3"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = GMACodeDir$ + "0sufp3.XLS"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
   WAIT FOR 3
   REQUEST "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"Gesellschafts-Statistik",2
  END IF 

  IF xls4$ = "j" THEN 
   xy% = xy% + 1
   SET STATUS "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
   IF EXISTS (GMACodeDir$ + "0sufp4.xls") THEN 
     DELETE GMACodeDir$ + "0sufp4.xls"
   END IF 
 
   MOUSE OFF 
   FILE "SUFP4":REM                                      Combo: Current File
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
   Superbase.Converters.SBF.SourceFile = "SUFP4"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = GMACodeDir$ + "0sufp4.XLS"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
   WAIT FOR 3
   REQUEST "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"Gesellschaft1-Spartengruppen-Statistik",2
  END IF 

  IF xls5$ = "j" THEN 
     xy% = xy% + 1
   SET STATUS "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "0sufp5.xls") THEN 
     DELETE GMACodeDir$ + "0sufp5.xls"
   END IF 
   FILE "SUFP5":REM                                       Combo: Current File
   INDEX gesellschaft
   REM                                                    Menu:  FieldSelection
   OPEN FIELDS Gesellschaft,SPGruppe,Anzahl,Punkte,Bewertung,Provision,SR,AnzStorno,PunkteSto,BWSto 
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM        ExportFile
   Superbase.Converters.SBF.SourceFile = "SUFP5"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = GMACodeDir$ + "0sufp5.XLS"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
   WAIT FOR 3
   REQUEST "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"Gesellschaft2-Spartengruppen-Statistik",2
  END IF 

  IF xls6$ = "j" THEN 
   xy% = xy% + 1
   SET STATUS "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "0sufp6.xls") THEN 
     DELETE GMACodeDir$ + "0sufp6.xls"
   END IF 
   FILE "SUFP6":REM                                       Combo: Current File
   INDEX sparte
   REM                                                    Menu:  FieldSelection
   OPEN FIELDS Sparte,SPGruppe,Anzahl,Punkte,Bewertung,Provision,SR,AnzStorno,PunkteSto,BWSto 
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM        ExportFile
   Superbase.Converters.SBF.SourceFile = "SUFP6"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = GMACodeDir$ + "0sufp6.XLS"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
   WAIT FOR 3
   REQUEST "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"Sparten1-Statistik",2
  END IF 

  IF xls7$ = "j" THEN 
   xy% = xy% + 1
   SET STATUS "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "0sufp7.xls") THEN 
     DELETE GMACodeDir$ + "0sufp7.xls"
   END IF 
   FILE "SUFP7":REM                                       Combo: Current File
   INDEX gesellschaft
   REM                                                    Menu:  FieldSelection
   OPEN FIELDS Gesellschaft,Sparte,SPGruppe,Anzahl,Punkte,Bewertung,Provision,SR,AnzStorno,PunkteSto,BWSto 
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM        ExportFile
   Superbase.Converters.SBF.SourceFile = "SUFP7"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = GMACodeDir$ + "0sufp7.XLS"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
   WAIT FOR 3
   REQUEST "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"Gesellschaft-Sparten1-Statistik",2
  END IF 

  IF xls8$ = "j" THEN 
   xy% = xy% + 1
   SET STATUS "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "0sufp8.xls") THEN 
     DELETE GMACodeDir$ + "0sufp8.xls"
   END IF 
   FILE "SUFP8":REM                                       Combo: Current File
   INDEX sparte
   REM                                                    Menu:  FieldSelection
   OPEN FIELDS Sparte,Anzahl,Punkte,Bewertung,Provision,SR,AnzStorno,PunkteSto,BWSto 
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM        ExportFile
   Superbase.Converters.SBF.SourceFile = "SUFP8"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = GMACodeDir$ + "0sufp8.XLS"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
   WAIT FOR 3
   REQUEST "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"Sparten2-Statistik",2
  END IF 

  IF xls9$ = "j" THEN 
   xy% = xy% + 1
   SET STATUS "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "0sufp9.xls") THEN 
     DELETE GMACodeDir$ + "0sufp9.xls"
   END IF 
   FILE "SUFP9":REM                                       Combo: Current File
   INDEX agentur
   REM                                                    Menu:  FieldSelection
   OPEN FIELDS Agentur,Agenturno,Anzahl,Punkte,Bewertung,Provision,SR,AnzStorno,PunkteSto,BWSto 
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM        ExportFile
   Superbase.Converters.SBF.SourceFile = "SUFP9"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = GMACodeDir$ + "0sufp9.XLS"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
   WAIT FOR 3
   REQUEST "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"Mitarbeiter3-Statistik",2
  END IF 

  IF xls1$ = "j" OR xls1a$ = "j" OR xls2$ = "j" OR xls3$ = "j" OR xls4$ = "j" OR xls5$ = "j" OR xls6$ = "j" OR xls7$ = "j" OR xls8$ = "j" OR xls9$ = "j" THEN 
   ON ERROR GOTO ErrorHandler
   CALL Fehler("Export nach MS Excel ist beendet!","")
   REQUEST "Sollen die MS EXCEL-Tabellen geîffnet werden?","",130,req%
   IF req% = 1 THEN 
    IF xls1$ = "j" THEN 
     a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "0sufp1.XLS","","",1)
     WAIT FOR 2
    END IF 
    IF xls1a$ = "j" THEN 
     a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "0sufp1A.XLS","","",1)
     WAIT FOR 2
    END IF 
    IF xls2$ = "j" THEN 
     a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "0sufp2.XLS","","",1)
     WAIT FOR 2
    END IF 
    IF xls3$ = "j" THEN 
     a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "0sufp3.XLS","","",1)
     WAIT FOR 2
    END IF 
    IF xls4$ = "j" THEN 
     a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "0sufp4.XLS","","",1)
     WAIT FOR 2
    END IF 
    IF xls5$ = "j" THEN 
     a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "0sufp5.XLS","","",1)
     WAIT FOR 2
    END IF 
    IF xls6$ = "j" THEN 
     a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "0sufp6.XLS","","",1)
     WAIT FOR 2
    END IF 
    IF xls7$ = "j" THEN 
     a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "0sufp7.XLS","","",1)
     WAIT FOR 2
    END IF 
    IF xls8$ = "j" THEN 
     a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "0sufp8.XLS","","",1)
     WAIT FOR 2
    END IF 
    IF xls9$ = "j" THEN 
     a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "0sufp9.XLS","","",1)
    END IF 
   ELSE 
     CALL Fehler("Sie finden die MS Excel-Tabellen in " + GMACodeDir$,"Sie hei·en 0sufp1.XLS,0sufp1a.XLS,0sufp2.XLS,0sufp3.XLS,0sufp4.XLS,0sufp5.XLS,0sufp6.XLS,0sufp7.XLS,0sufp8.XLS und 0sufp9.XLS")
   END IF 
  END IF 
 END IF 
noex310120061: 
 REM 20060421
 REM CALL Fehler("Sie erhalten jetzt die Mîglichkeit die 9 Statistken zu drucken!","")
 IF xls1d$ = "j" OR xlsd1a$ = "j" OR xlsd2$ = "j" OR xlsd3$ = "j" OR xlsd4$ = "j" OR xlsd5$ = "j" OR xlsd6$ = "j" OR xlsd7$ = "j" OR xlsd8$ = "j" OR xlsd9$ = "j" THEN 
         CALL Fehler("Bitte den Drucker auf A4-Querformat ausrichten!","")
         ON ERROR GOTO a4010220061
         IF PRINTER (1) = 1 OR PRINTER (1) = 2 THEN 
           c$ = PRINTER :d$ = PRINTER (0)
           SET PRINTER c$,d$,2,9
           REM PRINT CURRENT PAGE 
           GOTO endruck170920028
         END IF 
         
a4010220061: 
         MOUSE ON 
         REM c$ = PRINTER :d$ = PRINTER (0)
         ON ERROR GOTO a4010220062
         SET PRINTER 
         REM PRINT CURRENT PAGE 
         FORM 
a4010220062: 
 END IF 
 

   xx% = 0
   xy% = 0
   IF xlsd1$ = "j" THEN xx% = xx% + 1
   IF xlsd1a$ = "j" THEN xx% = xx% + 1
   IF xlsd2$ = "j" THEN xx% = xx% + 1
   IF xlsd3$ = "j" THEN xx% = xx% + 1
   IF xlsd4$ = "j" THEN xx% = xx% + 1
   IF xlsd5$ = "j" THEN xx% = xx% + 1
   IF xlsd6$ = "j" THEN xx% = xx% + 1
   IF xlsd7$ = "j" THEN xx% = xx% + 1
   IF xlsd8$ = "j" THEN xx% = xx% + 1
   IF xlsd9$ = "j" THEN xx% = xx% + 1
 

 IF xlsd2$ = "j" THEN 
     xy% = xy% + 1
     SET STATUS "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
     REQUEST "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"",2
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "sufdru.sbf") THEN 
     IF OPEN ("sufdru") THEN CLOSE FILE "sufdru"
     DELETE GMACodeDir$ + "sufdru.*"
   END IF 
   REORGANIZE FILE "SUFP2" TO GMACodeDir$ + "sufdru.sbf"
   REM CALL Fehler("Reorg " + dat1$,"nach " + GMACodeDir$ + "sufpdru.sbf")
   WAIT FOR 2
   CALL SUDRU0("SUDRU2")
 END IF 

 IF xlsd3$ = "j" THEN 
     xy% = xy% + 1
     SET STATUS "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
     REQUEST "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"",2
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "sufdru.sbf") THEN 
     IF OPEN ("sufdru") THEN CLOSE FILE "sufdru"
     DELETE GMACodeDir$ + "sufdru.*"
   END IF 
   REORGANIZE FILE "SUFP3" TO GMACodeDir$ + "sufdru.sbf"
   REM CALL Fehler("Reorg " + dat1$,"nach " + GMACodeDir$ + "sufpdru.sbf")
   WAIT FOR 2
   CALL SUDRU0("SUDRU3")
 END IF 

 IF xlsd8$ = "j" THEN 
     xy% = xy% + 1
     SET STATUS "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
     REQUEST "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"",2
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "sufdru.sbf") THEN 
     IF OPEN ("sufdru") THEN CLOSE FILE "sufdru"
     DELETE GMACodeDir$ + "sufdru.*"
   END IF 
   REORGANIZE FILE "SUFP8" TO GMACodeDir$ + "sufdru.sbf"
   REM CALL Fehler("Reorg " + dat1$,"nach " + GMACodeDir$ + "sufpdru.sbf")
   WAIT FOR 2
   CALL SUDRU0("SUDRU8")
 END IF 
 
 IF xlsd9$ = "j" THEN 
     xy% = xy% + 1
     SET STATUS "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
     REQUEST "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"",2
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "sufdru.sbf") THEN 
     IF OPEN ("sufdru") THEN CLOSE FILE "sufdru"
     DELETE GMACodeDir$ + "sufdru.*"
   END IF 
   REORGANIZE FILE "SUFP9" TO GMACodeDir$ + "sufdru.sbf"
   REM CALL Fehler("Reorg " + dat1$,"nach " + GMACodeDir$ + "sufpdru.sbf")
   WAIT FOR 2
   CALL SUDRU0("SUDRU9")
 END IF 

 IF xlsd5$ = "j" THEN 
     xy% = xy% + 1
     SET STATUS "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
     REQUEST "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"",2
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "sufdru.sbf") THEN 
     IF OPEN ("sufdru") THEN CLOSE FILE "sufdru"
     DELETE GMACodeDir$ + "sufdru.*"
   END IF 
   REORGANIZE FILE "SUFP5" TO GMACodeDir$ + "sufdru.sbf"
   CALL SUDRU5a("SUDRU5")
 END IF 


 IF xlsd6$ = "j" THEN 
     xy% = xy% + 1
     SET STATUS "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
     REQUEST "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"",2
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "sufdru.sbf") THEN 
     IF OPEN ("sufdru") THEN CLOSE FILE "sufdru"
     DELETE GMACodeDir$ + "sufdru.*"
   END IF 
   REORGANIZE FILE "SUFP6" TO GMACodeDir$ + "sufdru.sbf"
   REM CALL Fehler("Reorg " + dat1$,"nach " + GMACodeDir$ + "sufpdru.sbf")
   WAIT FOR 2
   CALL SUDRU5a("SUDRU6")
 END IF 

 IF xlsd7$ = "j" THEN 
     xy% = xy% + 1
     SET STATUS "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
     REQUEST "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"",2
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "sufdru.sbf") THEN 
     IF OPEN ("sufdru") THEN CLOSE FILE "sufdru"
     DELETE GMACodeDir$ + "sufdru.*"
   END IF 
   REORGANIZE FILE "SUFP7" TO GMACodeDir$ + "sufdru.sbf"
   REM CALL Fehler("Reorg " + dat1$,"nach " + GMACodeDir$ + "sufpdru.sbf")
   WAIT FOR 2
   CALL SUDRU5a("SUDRU7")
 END IF 

 IF xlsd1a$ = "j" THEN 
     xy% = xy% + 1
     SET STATUS "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
     REQUEST "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"",2
   MOUSE OFF 
   CALL SUFP1A()
 END IF 
 IF xlsd4$ = "j" THEN 
     xy% = xy% + 1
     SET STATUS "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
     REQUEST "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"",2
   MOUSE OFF 
   CALL SUFP4()
 END IF 
eSUFP1300120061: 
 DIRECTORY _netpath$
 MOUSE ON 
 END SUB 


SUB SUDRU0(dat1$)
  ON ERROR GOTO ErrorHandler
  von$ = ReadConfig$("PROVIS","SUFP1Avon")
  bis$ = ReadConfig$("PROVIS","SUFP1Abis")
  inde$ = ReadConfig$("PROVIS","SUFP1Ainde")
  FILE "SUFDRU"
  SELECT CASE UCASE$ (dat1$)
  CASE "SUDRU2"
    ord1$ = "SPGruppe.SUFDRU"
    tex1$ = "SpartengruppenabschlÅsse vom: " + von$ + " bis: " + bis$ + " (als Datum wurde verwendet: " + inde$ + ") "
    ber$ = "SUDRU2"
    INDEX ord1$$
  CASE "SUDRU3"
    ord1$ = "Gesellschaft.SUFDRU"
    tex1$ = "GesellschaftsabschlÅsse vom: " + von$ + " bis: " + bis$ + " (als Datum wurde verwendet: " + inde$ + ") "
    ber$ = "SUDRU3"
    INDEX ord1$$
  CASE "SUDRU8"
    ord1$ = "Sparte.SUFDRU"
    tex1$ = "SpartenabschlÅsse vom: " + von$ + " bis: " + bis$ + " (als Datum wurde verwendet: " + inde$ + ") "
    ber$ = "SUDRU8"
    INDEX ord1$$
  CASE "SUDRU9"
    ord1$ = "Agentur.SUFDRU"
    tex1$ = "VermittlerabschlÅsse vom: " + von$ + " bis: " + bis$ + " (als Datum wurde verwendet: " + inde$ + ") "
    ber$ = "SUDRU9"
    INDEX ord1$$
  END SELECT 
 
  
 
  CALL PRep(ber$)
 
 REPORT ON Anzahl.SUFDRU AS "sAnzahl%",Punkte.SUFDRU AS "sPunkte%",Bewertung.SUFDRU AS "sBewertung%",Provision.SUFDRU AS "sProvision%",SR.SUFDRU AS "sSR%",AnzStorno.SUFDRU AS "sAnzStorno%",PunkteSto.SUFDRU AS "sPunkteSto%",BWSto.SUFDRU AS "sBWSto%"
 BEFORE REPORT 
     SET REPORT PAGE "H_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 Header$ = tex1$
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 ON ERROR GOTO ErrorHandler
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 SET FIRST PAGE HEADING OFF 
   SELECT ;
     ORDER REPORT ord1$$
     TO ASK 
 END SELECT 
 REM CALL Fehler(dat1$,"")
 END SUB 
 
 
 
SUB SUDRU5a(dat1$)
  ON ERROR GOTO ErrorHandler
  von$ = ReadConfig$("PROVIS","SUFP1Avon")
  bis$ = ReadConfig$("PROVIS","SUFP1Abis")
  inde$ = ReadConfig$("PROVIS","SUFP1Ainde")
  FILE "SUFDRU"
  IF dat1$ LIKE "SUDRU5" THEN 
    ord1$ = "SPGruppe.sufdru,Gesellschaft.SUFDRU"
    tex1$ = "Spartengruppe/GesellschaftsabschlÅsse vom: " + von$ + " bis: " + bis$ + " (als Datum wurde verwendet: " + inde$ + ") "
    ber$ = "SUDRU5"
  END IF 
  IF dat1$ LIKE "SUDRU6" THEN 
    ord1$ = "SPGruppe.sufdru,Sparten.SUFDRU"
    tex1$ = "Spartengruppe/SpartenabschlÅsse vom: " + von$ + " bis: " + bis$ + " (als Datum wurde verwendet: " + inde$ + ") "
    ber$ = "SUDRU6"
  END IF 
  IF dat1$ LIKE "SUDRU7" THEN 
    ord1$ = "SPGruppe.sufdru,Gesellschaft,Sparten.SUFDRU"
    tex1$ = "Spartengruppe/ProduktabschlÅsse vom: " + von$ + " bis: " + bis$ + " (als Datum wurde verwendet: " + inde$ + ") "
    ber$ = "SUDRU7"
  END IF 
    INDEX SPGruppe.SUFDRU

 CALL PRep(dat1$)


 REPORT ON sAnzahl% AS "ssAnzahl%",sPunkte% AS "ssPunkte%",sBewertung% AS "ssBewertung%",sProvision% AS "ssProvision%",sSR% AS "ssSR%",sAnzStorno% AS "ssAnzStorno%",sPunkteSto% AS "ssPunkteSto%",sBWSto% AS "ssBWSto%"
 BEFORE REPORT 
     SET REPORT PAGE "H_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 Header$ = tex1$
 GROUP SPGruppe.SUFDRU,Anzahl.SUFDRU AS "sAnzahl%",Punkte.SUFDRU AS "sPunkte%",Bewertung.SUFDRU AS "sBewertung%",Provision.SUFDRU AS "sProvision%",SR.SUFDRU AS "sSR%",AnzStorno.SUFDRU AS "sAnzStorno%",PunkteSto.SUFDRU AS "sPunkteSto%"
 GROUP SPGruppe.SUFDRU,BWSto.SUFDRU AS "sBWSto%"
 BEFORE GROUP SPGruppe.SUFDRU
     SET REPORT PAGE "H_SPGruppe.S002"
     OUTPUT REPORT PAGE 
 END GROUP 
 
 AFTER GROUP SPGruppe.SUFDRU
     SET REPORT PAGE "F_SPGruppe.S002"
     OUTPUT REPORT PAGE 
 END GROUP 
 
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 ON ERROR GOTO ErrorHandler
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 SET FIRST PAGE HEADING OFF 
 IF dat1$ LIKE "SUDRU5" THEN 
   SELECT ;
     ORDER REPORT SPGruppe.sufdru,Gesellschaft.SUFDRU
     TO ASK 
 END IF 
 IF dat1$ LIKE "SUDRU6" THEN 
   SELECT ;
     ORDER REPORT SPGruppe.sufdru,Sparte.SUFDRU
     TO ASK 
 END IF 
 IF dat1$ LIKE "SUDRU7" THEN 
   SELECT ;
     ORDER REPORT SPGruppe.sufdru,Gesellschaft.SUFDRU,Sparte.SUFDRU
     TO ASK 
 END IF 
 END SELECT 
 END SUB 




SUB SUFP1A()
  ON ERROR GOTO ErrorHandler
  von$ = ReadConfig$("PROVIS","SUFP1Avon")
  bis$ = ReadConfig$("PROVIS","SUFP1Abis")
  inde$ = ReadConfig$("PROVIS","SUFP1Ainde")
 CALL PRep("SUFP1A")
 REPORT ON Anzahl0.SUFP1A AS "suanz0%",Anzahl1.SUFP1A AS "suanz1%",Anzahl2.SUFP1A AS "suanz2%",Anzahl3.SUFP1A AS "suanz3%",Anzahl4.SUFP1A AS "suanz4%",Anzahl5.SUFP1A AS "suanz5%",Anzahl6.SUFP1A AS "suanz6%",Anzahl7.SUFP1A AS "suanz7%"
 REPORT ON Anzahl8.SUFP1A AS "suanz8%",Anzahl9.SUFP1A AS "suanz9%",Anzahl10.SUFP1A AS "suanz10%",Anzahl11.SUFP1A AS "suanz11%",Anzahl12.SUFP1A AS "suanz12%",Bewertung0.SUFP1A AS "suabw0%",Bewertung1.SUFP1A AS "suabw1%",Bewertung2.SUFP1A AS "suabw2%"
 REPORT ON Bewertung3.SUFP1A AS "suabw3%",Bewertung4.SUFP1A AS "suabw4%",Bewertung5.SUFP1A AS "suabw5%",Bewertung6.SUFP1A AS "suabw6%",Bewertung7.SUFP1A AS "suabw7%",Bewertung8.SUFP1A AS "suabw8%",Bewertung9.SUFP1A AS "suabw9%"
 REPORT ON Bewertung10.SUFP1A AS "suabw10%",Bewertung11.SUFP1A AS "suabw11%",Bewertung12.SUFP1A AS "suabw12%",Punkte0.SUFP1A AS "suanzp0%",Punkte1.SUFP1A AS "suanzp1%",Punkte2.SUFP1A AS "suanzp2%",Punkte3.SUFP1A AS "suanzp3%",Punkte4.SUFP1A AS "suanzp4%"
 REPORT ON Punkte5.SUFP1A AS "suanzp5%",Punkte6.SUFP1A AS "suanzp6%",Punkte7.SUFP1A AS "suanzp7%",Punkte8.SUFP1A AS "suanzp8%",Punkte9.SUFP1A AS "suanzp9%",Punkte10.SUFP1A AS "suanzp10%",Punkte11.SUFP1A AS "suanzp11%",Punkte12.SUFP1A AS "suanzp12%"
 BEFORE REPORT 
     SET REPORT PAGE "H_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 Header$ = "VermittlerabschlÅsse vom: " + von$ + " bis: " + bis$ + " (als Datum wurde verwendet: " + inde$ + ") - Stornos wurden nicht berÅcksichtigt"
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 SET FIRST PAGE HEADING OFF 
 SELECT ;
     ORDER REPORT Agentur.SUFP1A
     TO ASK 
 END SELECT 
 
 END SUB 

SUB SUFP4()
 ON ERROR GOTO ErrorHandler
  von$ = ReadConfig$("PROVIS","SUFP4von")
  bis$ = ReadConfig$("PROVIS","SUFP4bis")
  inde$ = ReadConfig$("PROVIS","SUFP4inde")
 CALL PRep("SUFP4")
 REPORT ON Anzahl0.SUFP4 AS "suanz0%",Anzahl1.SUFP4 AS "suanz1%",Anzahl2.SUFP4 AS "suanz2%",Anzahl3.SUFP4 AS "suanz3%",Anzahl4.SUFP4 AS "suanz4%",Anzahl5.SUFP4 AS "suanz5%",Anzahl6.SUFP4 AS "suanz6%",Anzahl7.SUFP4 AS "suanz7%",Anzahl8.SUFP4 AS "suanz8%"
 REPORT ON Anzahl9.SUFP4 AS "suanz9%",Anzahl10.SUFP4 AS "suanz10%",Anzahl11.SUFP4 AS "suanz11%",Anzahl12.SUFP4 AS "suanz12%",Bewertung0.SUFP4 AS "suabw0%",Bewertung1.SUFP4 AS "suabw1%",Bewertung2.SUFP4 AS "suabw2%",Bewertung3.SUFP4 AS "suabw3%"
 REPORT ON Bewertung4.SUFP4 AS "suabw4%",Bewertung5.SUFP4 AS "suabw5%",Bewertung6.SUFP4 AS "suabw6%",Bewertung7.SUFP4 AS "suabw7%",Bewertung8.SUFP4 AS "suabw8%",Bewertung9.SUFP4 AS "suabw9%",Bewertung10.SUFP4 AS "suabw10%",Bewertung11.SUFP4 AS "suabw11%"
 REPORT ON Bewertung12.SUFP4 AS "suabw12%",Punkte0.SUFP4 AS "suanzp0%",Punkte1.SUFP4 AS "suanzp1%",Punkte2.SUFP4 AS "suanzp2%",Punkte3.SUFP4 AS "suanzp3%",Punkte4.SUFP4 AS "suanzp4%",Punkte5.SUFP4 AS "suanzp5%",Punkte6.SUFP4 AS "suanzp6%"
 REPORT ON Punkte7.SUFP4 AS "suanzp7%",Punkte8.SUFP4 AS "suanzp8%",Punkte9.SUFP4 AS "suanzp9%",Punkte10.SUFP4 AS "suanzp10%",Punkte11.SUFP4 AS "suanzp11%",Punkte12.SUFP4 AS "suanzp12%"
 BEFORE REPORT 
     SET REPORT PAGE "H_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 Header$ = "Gesellschaften-NeuabschlÅsse vom: " + von$ + " bis: " + bis$ + " (als Datum wurde verwendet: " + inde$ + ") - Stornos wurden nicht berÅcksichtigt"
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 SET FIRST PAGE HEADING OFF 
 SELECT ;
     ORDER REPORT Gesellschaft.SUFP4
     TO ASK 
 END SELECT 
 END SUB 
 



 REM Statistik monatsweise 
SUB SUFP4mon()
  ON ERROR GOTO ErrorHandler
  REM DIRECTORY _netpath$ + "PROVIS"
  DIRECTORY GMACodeDir$
  dat1$ = "sufp1mo":REM Spartengruppem
  dat2$ = "sufp2mo":REM Vermittler
  dat3$ = "sufp3mo":REM Sparten
  dat4$ = "sufp4mo":REM Gesellschaft
  dat5$ = "sufp5mo":REM Produkt
 CALL DFile(3,"sparten" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$)
 CALL DFile(3,"geadr2" + _fpw$)
 CALL DFile(3,"gekond" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"vprodukt" + _fpw$)
 CALL DFile(3,"kvertrag" + _fpw$)
 CALL DFile(3,"spgruppe" + _fpw$)
 IF EXISTS (GMACodeDir$ + dat1$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat1$ + ";paris"
 END IF 
 IF EXISTS (GMACodeDir$ + dat2$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat2$ + ";paris"
 END IF 
 IF EXISTS (GMACodeDir$ + dat3$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat3$ + ";paris"
 END IF 
 IF EXISTS (GMACodeDir$ + dat4$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat4$ + ";paris"
 END IF 
 IF EXISTS (GMACodeDir$ + dat5$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat5$ + ";paris"
 END IF 
 IF PrvVerfahr$ LIKE "ZAHLUNGSEINGANG" THEN 
   bu$ = "Buchung1"
 ELSE 
   bu$ = "Buchung"
 END IF 
 CALL DFile(3,bu$ + _fpw$)
 FILE bu$
 INDEX QCodeMAVT.bu$
 
 FILE "SPGruppe"
 INDEX codegrsp.SPGruppe
 REM FILE dat$
 REM INDEX QMaGrSp.dat$
 
 FILE "kvertrag"
 Inde$ = "Antragsdatum.kvertrag"
 opt1% = 1
 
 bis$ = LEFT$ ( DATE$ ( TODAY ,"yyyymm0d"),4)
datSUFP4070220061: 


 CREATE DIALOG "Konto1",0,0,221,185,title$,"MS Sans Serif",8
 ADD DIALOG "Konto1",9,6,7,24,22,2
 ADD DIALOG "Konto1",5,34,8,170,9,0,"Statistik NeuabschlÅsse monatsweise:"
 ADD DIALOG "Konto1",4,34,14,176,5,0,""
 ADD DIALOG "Konto1",5,34,22,175,16,0,"Bitte geben Sie das Jahr ein, fÅr das Sie eine öbersicht wÅnschen."
 ADD DIALOG "Konto1",5,34,40,175,32,0,"Wenn Sie keine Angaben zum Jahr eintragen, wird das aktuelle Jahr berÅcksichtigt."
 ADD DIALOG "Konto1",5,82,80,15,8,0,"Jahr"
 ADD DIALOG "Konto1",6,106,79,45,11,0,0,bis$,4
 
 ADD DIALOG "Konto1",4,1,97,219,60,0,"Auswahl fÅr Datumsfeld"
 ADD DIALOG "Konto1",3,5,107,92,12,0,"Antragsdatum",1,opt1%
 ADD DIALOG "Konto1",3,5,119,92,12,0,"Erfassungsdatum",2,opt1%
 ADD DIALOG "Konto1",3,5,131,92,12,0,"Vertragsbeginn",3,opt1%
 ADD DIALOG "Konto1",3,5,143,92,12,0,"Policedatum",4,opt1%
 
 ADD DIALOG "Konto1",1,50,164,55,15,1,"&Weiter",1,1
 ADD DIALOG "Konto1",1,110,164,55,15,0,"&Abbruch",0,0
 DIALOG "Konto1",req%
 REMOVE DIALOG "Konto1"





 MOUSE ON 
 IF req% <> 1 THEN GOTO eSUFP1070220061
 IF bis$ = "" THEN 
   bis$ = LEFT$ ( DATE$ ( TODAY ,"yyyymm0d"),4)
   bis% = VAL (bis$)
 ELSE 
   IF VAL (bis$) > 0 THEN 
     bis% = VAL (bis$)
   ELSE 
     CALL Fehler("Das Jahr: " + bis$ + " ist ungÅltig!","Bitte neu eingeben!")
     GOTO datSUFP4070220061
   END IF 
 END IF 
 

 REM ************************************************************************************************************************************************************************
    xls1$ = "j":xlsd1$ = "j"
    xls1a$ = "j":xlsd1a$ = "j"
    xls2$ = "j":xlsd2$ = "j"
    xls3$ = "j":xlsd3$ = "j"
    xls4$ = "j":xlsd4$ = "j"
    xls5$ = "j":xlsd5$ = "j"
 
    DIM dlg AS Dialog
    DIM control AS DialogControl
 
    Superbase.Dialogs.Add("Dialogname")
    SET dlg = Superbase.Dialogs.Dialogname
    dlg.Move(0,0,318,177)
    dlg.Caption = "Ausgabe der Monat-Statistiken"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogLabel12","DialogLabel")
    control.Move(134,3,86,9)
    control.Caption = "Ausgabe nach MS Excel"
 
    SET control = dlg.Add("DialogLabel13","DialogLabel")
    control.Move(224,3,86,9)
    control.Caption = "Ausgabe als Druckliste"
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(5,19,124,9)
    control.Caption = "Spartengruppen"
 
    SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
    control.Move(168,19,12,9)
    control.Caption = ""
    control.Bind("xls1$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox2","DialogCheckBox")
    control.Move(257,19,12,9)
    control.Caption = ""
    control.Bind("xlsd1$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(5,30,124,10)
    control.Caption = "Vermittler"
 
    SET control = dlg.Add("DialogCheckBox3","DialogCheckBox")
    control.Move(168,30,12,10)
    control.Caption = ""
    control.Bind("xls2$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox4","DialogCheckBox")
    control.Move(257,30,12,10)
    control.Caption = ""
    control.Bind("xlsd2$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel10","DialogLabel")
    control.Move(5,41,124,10)
    control.Caption = "Sparten"
 
    SET control = dlg.Add("DialogCheckBox5","DialogCheckBox")
    control.Move(168,41,12,10)
    control.Caption = ""
    control.Bind("xls3$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox6","DialogCheckBox")
    control.Move(257,41,12,10)
    control.Caption = ""
    control.Bind("xlsd3$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(5,57,124,10)
    control.Caption = "Gesellschaften"
 
    SET control = dlg.Add("DialogCheckBox7","DialogCheckBox")
    control.Move(168,56,12,9)
    control.Caption = ""
    control.Bind("xls4$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox8","DialogCheckBox")
    control.Move(257,56,12,9)
    control.Caption = ""
    control.Bind("xlsd4$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(5,73,124,10)
    control.Caption = "Produkte"
 
    SET control = dlg.Add("DialogCheckBox9","DialogCheckBox")
    control.Move(168,72,12,9)
    control.Caption = ""
    control.Bind("xls5$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox10","DialogCheckBox")
    control.Move(257,72,12,9)
    control.Caption = ""
    control.Bind("xlsd5$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(118,156,42,13)
    control.Default = 1
    control.Caption = "OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(162,156,43,13)
    control.Caption = "Abbruch"
    control.ReturnValue = 0
    DIALOG "Dialogname",req%
    REMOVE DIALOG "Dialogname"
    IF req% = 0 GOTO eSUFP1070220061
 REM ************************************************************************************************************************************************************************   


 IF OPEN (dat1$) THEN 
   REQUEST "Sollen die Ausgaben an Hand der letzten Recherche erzeugt werden?","",130,req%
   IF req% = 1 THEN GOTO anfxlmo230420064
 END IF 
 
 MOUSE OFF 
 FILE "SPGruppe"
 INDEX gruppe.spgruppe
 SELECT FIRST 
 DIM spgr$( RECCOUNT ("spgruppe"))
 DIM spgr%( RECCOUNT ("spgruppe"))
 IF RECCOUNT ("spgruppe") < 14 THEN 
   REDIM spgr$(14)
   REDIM spgr%(14)
 END IF 
 i% = 0
 REM CALL Fehler("","")
 WHILE NOT EOF ("spgruppe")
    spgr$(i%) = (gruppe.spgruppe)
    spgr%(i%) = CodeGRSP.spgruppe
    i% = i% + 1
    SELECT NEXT FILE "spgruppe"
 WEND 
 kk% = i%
 
 REM CALL Fehler("","")
 IF kk% < 13 THEN 
   FOR i% = kk% TO 13
    spgr$(i%) = "LEER-LEER"
    spgr%(i%) = - 1
   NEXT i%
 END IF 
 kk% = 13
 
 
 
 IF EXISTS (GMACodeDir$ + dat1$ + ".sbf") THEN 
   IF OPEN (dat1$) THEN CLOSE FILE dat1$
   DELETE GMACodeDir$ + dat1$ + ".*"
 END IF 

 IF EXISTS (GMACodeDir$ + dat2$ + ".sbf") THEN 
   IF OPEN (dat2$) THEN CLOSE FILE dat2$
   DELETE GMACodeDir$ + dat2$ + ".*"
 END IF 
  
 
 IF EXISTS (GMACodeDir$ + dat3$ + ".sbf") THEN 
   IF OPEN (dat3$) THEN CLOSE FILE dat3$
   DELETE GMACodeDir$ + dat3$ + ".*"
 END IF 
  
 IF EXISTS (GMACodeDir$ + dat4$ + ".sbf") THEN 
   IF OPEN (dat4$) THEN CLOSE FILE dat4$
   DELETE GMACodeDir$ + dat4$ + ".*"
 END IF 
 
 
 IF EXISTS (GMACodeDir$ + dat5$ + ".sbf") THEN 
   IF OPEN (dat5$) THEN CLOSE FILE dat5$
   DELETE GMACodeDir$ + dat5$ + ".*"
 END IF 

 CREATE dat1$ + ";paris; paris; paris"
 ADD "CodeKey; NUM; 000000.;0;0"
 MAKE dat1$
 FILE dat1$
 CALL FldAdd1("Codekey","NUM;000000.",1)
   CALL FldAdd1("CodeGRSP","NUM;000000.",1)
   CALL FldAdd1("SPGruppe","TXT;60",1)
   CALL FldAdd1("Jan_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Feb_Anz","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Apr_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Mai_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Jun_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Jul_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Aug_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Sep_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Okt_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Nov_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Dez_Anz","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_BW","NUM;,999999999.",0)
   CALL FldAdd1("Feb_BW","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_BW","NUM;,999999999.",0)
   CALL FldAdd1("Apr_BW","NUM;,999999999.",0)
   CALL FldAdd1("Mai_BW","NUM;,999999999.",0)
   CALL FldAdd1("Jun_BW","NUM;,999999999.",0)
   CALL FldAdd1("Jul_BW","NUM;,999999999.",0)
   CALL FldAdd1("Aug_BW","NUM;,999999999.",0)
   CALL FldAdd1("Sep_BW","NUM;,999999999.",0)
   CALL FldAdd1("Okt_BW","NUM;,999999999.",0)
   CALL FldAdd1("Nov_BW","NUM;,999999999.",0)
   CALL FldAdd1("Dez_BW","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Feb_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Apr_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Mai_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Jun_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Jul_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Aug_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Sep_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Okt_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Nov_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Dez_Pkt","NUM;,999999999.",0)

   CALL FldAdd1("Jan_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Feb_Prv","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Apr_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Mai_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Jun_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Jul_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Aug_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Sep_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Okt_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Nov_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Dez_Prv","NUM;,999999999.",0)

   CALL FldAdd1("Jan_SR","NUM;,999999999.",0)
   CALL FldAdd1("Feb_SR","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_SR","NUM;,999999999.",0)
   CALL FldAdd1("Apr_SR","NUM;,999999999.",0)
   CALL FldAdd1("Mai_SR","NUM;,999999999.",0)
   CALL FldAdd1("Jun_SR","NUM;,999999999.",0)
   CALL FldAdd1("Jul_SR","NUM;,999999999.",0)
   CALL FldAdd1("Aug_SR","NUM;,999999999.",0)
   CALL FldAdd1("Sep_SR","NUM;,999999999.",0)
   CALL FldAdd1("Okt_SR","NUM;,999999999.",0)
   CALL FldAdd1("Nov_SR","NUM;,999999999.",0)
   CALL FldAdd1("Dez_SR","NUM;,999999999.",0)

   CALL FldAdd1("Jan_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Feb_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Apr_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Mai_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Jun_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Jul_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Aug_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Sep_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Okt_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Nov_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Dez_AnzSto","NUM;,999999999.",0)

   CALL FldAdd1("Jan_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Feb_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Apr_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Mai_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Jun_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Jul_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Aug_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Sep_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Okt_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Nov_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Dez_PktSto","NUM;,999999999.",0)

   CALL FldAdd1("Jan_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Feb_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Apr_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Mai_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Jun_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Jul_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Aug_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Sep_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Okt_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Nov_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Dez_BWSto","NUM;,999999999.",0)
 SAVE FILE dat1$
 
 CREATE dat2$ + ";paris; paris; paris"
 ADD "CodeKey; NUM; 000000.;0;0"
 MAKE dat2$
 FILE dat2$
 CALL FldAdd1("Codekey","NUM;000000.",1)
   CALL FldAdd1("Codema","NUM;000000.",1)
   CALL FldAdd1("Agentur","TXT;70",1)
   CALL FldAdd1("Agenturno","TXT;20",1)
   CALL FldAdd1("Jan_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Feb_Anz","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Apr_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Mai_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Jun_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Jul_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Aug_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Sep_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Okt_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Nov_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Dez_Anz","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_BW","NUM;,999999999.",0)
   CALL FldAdd1("Feb_BW","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_BW","NUM;,999999999.",0)
   CALL FldAdd1("Apr_BW","NUM;,999999999.",0)
   CALL FldAdd1("Mai_BW","NUM;,999999999.",0)
   CALL FldAdd1("Jun_BW","NUM;,999999999.",0)
   CALL FldAdd1("Jul_BW","NUM;,999999999.",0)
   CALL FldAdd1("Aug_BW","NUM;,999999999.",0)
   CALL FldAdd1("Sep_BW","NUM;,999999999.",0)
   CALL FldAdd1("Okt_BW","NUM;,999999999.",0)
   CALL FldAdd1("Nov_BW","NUM;,999999999.",0)
   CALL FldAdd1("Dez_BW","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Feb_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Apr_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Mai_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Jun_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Jul_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Aug_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Sep_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Okt_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Nov_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Dez_Pkt","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Feb_Prv","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Apr_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Mai_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Jun_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Jul_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Aug_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Sep_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Okt_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Nov_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Dez_Prv","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_SR","NUM;,999999999.",0)
   CALL FldAdd1("Feb_SR","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_SR","NUM;,999999999.",0)
   CALL FldAdd1("Apr_SR","NUM;,999999999.",0)
   CALL FldAdd1("Mai_SR","NUM;,999999999.",0)
   CALL FldAdd1("Jun_SR","NUM;,999999999.",0)
   CALL FldAdd1("Jul_SR","NUM;,999999999.",0)
   CALL FldAdd1("Aug_SR","NUM;,999999999.",0)
   CALL FldAdd1("Sep_SR","NUM;,999999999.",0)
   CALL FldAdd1("Okt_SR","NUM;,999999999.",0)
   CALL FldAdd1("Nov_SR","NUM;,999999999.",0)
   CALL FldAdd1("Dez_SR","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Feb_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Apr_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Mai_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Jun_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Jul_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Aug_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Sep_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Okt_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Nov_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Dez_AnzSto","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Feb_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Apr_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Mai_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Jun_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Jul_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Aug_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Sep_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Okt_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Nov_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Dez_PktSto","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Feb_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Apr_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Mai_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Jun_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Jul_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Aug_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Sep_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Okt_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Nov_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Dez_BWSto","NUM;,999999999.",0)
 SAVE FILE dat2$
 
 CREATE dat3$ + ";paris; paris; paris"
 ADD "CodeKey; NUM; 000000.;0;0"
 MAKE dat3$
 FILE dat3$
 CALL FldAdd1("Codekey","NUM;000000.",1)
   CALL FldAdd1("CodeVA","NUM;000000.",1)
   CALL FldAdd1("SParte","TXT;60",1)
   CALL FldAdd1("Jan_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Feb_Anz","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Apr_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Mai_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Jun_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Jul_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Aug_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Sep_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Okt_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Nov_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Dez_Anz","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_BW","NUM;,999999999.",0)
   CALL FldAdd1("Feb_BW","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_BW","NUM;,999999999.",0)
   CALL FldAdd1("Apr_BW","NUM;,999999999.",0)
   CALL FldAdd1("Mai_BW","NUM;,999999999.",0)
   CALL FldAdd1("Jun_BW","NUM;,999999999.",0)
   CALL FldAdd1("Jul_BW","NUM;,999999999.",0)
   CALL FldAdd1("Aug_BW","NUM;,999999999.",0)
   CALL FldAdd1("Sep_BW","NUM;,999999999.",0)
   CALL FldAdd1("Okt_BW","NUM;,999999999.",0)
   CALL FldAdd1("Nov_BW","NUM;,999999999.",0)
   CALL FldAdd1("Dez_BW","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Feb_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Apr_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Mai_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Jun_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Jul_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Aug_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Sep_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Okt_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Nov_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Dez_Pkt","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Feb_Prv","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Apr_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Mai_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Jun_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Jul_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Aug_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Sep_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Okt_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Nov_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Dez_Prv","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_SR","NUM;,999999999.",0)
   CALL FldAdd1("Feb_SR","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_SR","NUM;,999999999.",0)
   CALL FldAdd1("Apr_SR","NUM;,999999999.",0)
   CALL FldAdd1("Mai_SR","NUM;,999999999.",0)
   CALL FldAdd1("Jun_SR","NUM;,999999999.",0)
   CALL FldAdd1("Jul_SR","NUM;,999999999.",0)
   CALL FldAdd1("Aug_SR","NUM;,999999999.",0)
   CALL FldAdd1("Sep_SR","NUM;,999999999.",0)
   CALL FldAdd1("Okt_SR","NUM;,999999999.",0)
   CALL FldAdd1("Nov_SR","NUM;,999999999.",0)
   CALL FldAdd1("Dez_SR","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Feb_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Apr_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Mai_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Jun_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Jul_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Aug_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Sep_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Okt_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Nov_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Dez_AnzSto","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Feb_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Apr_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Mai_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Jun_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Jul_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Aug_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Sep_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Okt_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Nov_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Dez_PktSto","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Feb_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Apr_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Mai_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Jun_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Jul_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Aug_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Sep_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Okt_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Nov_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Dez_BWSto","NUM;,999999999.",0)
 SAVE FILE dat3$
 
 CREATE dat4$ + ";paris; paris; paris"
 ADD "CodeKey; NUM; 000000.;0;0"
 MAKE dat4$
 FILE dat4$
 CALL FldAdd1("Codekey","NUM;000000.",1)
   CALL FldAdd1("CodeGE","NUM;000000.",1)
   CALL FldAdd1("Gesellschaft","TXT;70",1)
   CALL FldAdd1("Jan_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Feb_Anz","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Apr_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Mai_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Jun_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Jul_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Aug_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Sep_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Okt_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Nov_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Dez_Anz","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_BW","NUM;,999999999.",0)
   CALL FldAdd1("Feb_BW","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_BW","NUM;,999999999.",0)
   CALL FldAdd1("Apr_BW","NUM;,999999999.",0)
   CALL FldAdd1("Mai_BW","NUM;,999999999.",0)
   CALL FldAdd1("Jun_BW","NUM;,999999999.",0)
   CALL FldAdd1("Jul_BW","NUM;,999999999.",0)
   CALL FldAdd1("Aug_BW","NUM;,999999999.",0)
   CALL FldAdd1("Sep_BW","NUM;,999999999.",0)
   CALL FldAdd1("Okt_BW","NUM;,999999999.",0)
   CALL FldAdd1("Nov_BW","NUM;,999999999.",0)
   CALL FldAdd1("Dez_BW","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Feb_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Apr_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Mai_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Jun_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Jul_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Aug_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Sep_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Okt_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Nov_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Dez_Pkt","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Feb_Prv","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Apr_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Mai_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Jun_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Jul_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Aug_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Sep_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Okt_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Nov_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Dez_Prv","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_SR","NUM;,999999999.",0)
   CALL FldAdd1("Feb_SR","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_SR","NUM;,999999999.",0)
   CALL FldAdd1("Apr_SR","NUM;,999999999.",0)
   CALL FldAdd1("Mai_SR","NUM;,999999999.",0)
   CALL FldAdd1("Jun_SR","NUM;,999999999.",0)
   CALL FldAdd1("Jul_SR","NUM;,999999999.",0)
   CALL FldAdd1("Aug_SR","NUM;,999999999.",0)
   CALL FldAdd1("Sep_SR","NUM;,999999999.",0)
   CALL FldAdd1("Okt_SR","NUM;,999999999.",0)
   CALL FldAdd1("Nov_SR","NUM;,999999999.",0)
   CALL FldAdd1("Dez_SR","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Feb_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Apr_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Mai_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Jun_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Jul_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Aug_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Sep_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Okt_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Nov_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Dez_AnzSto","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Feb_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Apr_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Mai_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Jun_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Jul_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Aug_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Sep_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Okt_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Nov_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Dez_PktSto","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Feb_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Apr_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Mai_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Jun_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Jul_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Aug_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Sep_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Okt_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Nov_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Dez_BWSto","NUM;,999999999.",0)
 SAVE FILE dat4$


 CREATE dat5$ + ";paris; paris; paris"
 ADD "CodeKey; NUM; 000000.;0;0"
 MAKE dat5$
 FILE dat5$
 CALL FldAdd1("Codekey","NUM;000000.",1)
   CALL FldAdd1("CodeVP","NUM;000000.",1)
   CALL FldAdd1("Gesspa","TXT;90",1)
   CALL FldAdd1("Jan_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Feb_Anz","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Apr_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Mai_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Jun_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Jul_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Aug_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Sep_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Okt_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Nov_Anz","NUM;,999999999.",0)
   CALL FldAdd1("Dez_Anz","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_BW","NUM;,999999999.",0)
   CALL FldAdd1("Feb_BW","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_BW","NUM;,999999999.",0)
   CALL FldAdd1("Apr_BW","NUM;,999999999.",0)
   CALL FldAdd1("Mai_BW","NUM;,999999999.",0)
   CALL FldAdd1("Jun_BW","NUM;,999999999.",0)
   CALL FldAdd1("Jul_BW","NUM;,999999999.",0)
   CALL FldAdd1("Aug_BW","NUM;,999999999.",0)
   CALL FldAdd1("Sep_BW","NUM;,999999999.",0)
   CALL FldAdd1("Okt_BW","NUM;,999999999.",0)
   CALL FldAdd1("Nov_BW","NUM;,999999999.",0)
   CALL FldAdd1("Dez_BW","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Feb_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Apr_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Mai_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Jun_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Jul_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Aug_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Sep_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Okt_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Nov_Pkt","NUM;,999999999.",0)
   CALL FldAdd1("Dez_Pkt","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Feb_Prv","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Apr_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Mai_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Jun_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Jul_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Aug_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Sep_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Okt_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Nov_Prv","NUM;,999999999.",0)
   CALL FldAdd1("Dez_Prv","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_SR","NUM;,999999999.",0)
   CALL FldAdd1("Feb_SR","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_SR","NUM;,999999999.",0)
   CALL FldAdd1("Apr_SR","NUM;,999999999.",0)
   CALL FldAdd1("Mai_SR","NUM;,999999999.",0)
   CALL FldAdd1("Jun_SR","NUM;,999999999.",0)
   CALL FldAdd1("Jul_SR","NUM;,999999999.",0)
   CALL FldAdd1("Aug_SR","NUM;,999999999.",0)
   CALL FldAdd1("Sep_SR","NUM;,999999999.",0)
   CALL FldAdd1("Okt_SR","NUM;,999999999.",0)
   CALL FldAdd1("Nov_SR","NUM;,999999999.",0)
   CALL FldAdd1("Dez_SR","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Feb_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Apr_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Mai_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Jun_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Jul_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Aug_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Sep_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Okt_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Nov_AnzSto","NUM;,999999999.",0)
   CALL FldAdd1("Dez_AnzSto","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Feb_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Apr_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Mai_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Jun_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Jul_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Aug_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Sep_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Okt_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Nov_PktSto","NUM;,999999999.",0)
   CALL FldAdd1("Dez_PktSto","NUM;,999999999.",0)
 
   CALL FldAdd1("Jan_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Feb_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("MÑr_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Apr_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Mai_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Jun_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Jul_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Aug_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Sep_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Okt_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Nov_BWSto","NUM;,999999999.",0)
   CALL FldAdd1("Dez_BWSto","NUM;,999999999.",0)
 SAVE FILE dat5$


  SELECT CASE opt1%
   CASE 1
     Inde$ = "Antragsdatum.kvertrag"
   CASE 2
     Inde$ = "erfasdatum.kvertrag"
   CASE 3
     Inde$ = "VS_Beginn.kvertrag"
   CASE 4
     Inde$ = "Policedatum.kvertrag"
 END SELECT 
 FILE "KVERTRAG"
 INDEX codegrsp.kvertrag
 
 CALL WriteConfig("PROVIS","SUFPJahr",bis$)
 CALL WriteConfig("PROVIS","SUFPindex",inde$)


 i% = 0
 j% = RECCOUNT ("KVERTRAG")
 gesamt% = 0
 FOR i% = 0 TO kk% - 1
   MOUSE OFF 
   i$ = LTRIM$ ( STR$ (i%,"9999"))
   codegrsp% = spgr%(i%)
   SELECT FIRST FILE "kvertrag" INDEX codegrsp.kvertrag
   SELECT KEY codegrsp% FILE "kvertrag" INDEX codegrsp.kvertrag
   ds% = 0
   WHILE NOT EOF ("Kvertrag") AND codegrsp.kvertrag = codegrsp%
     MOUSE OFF 
     FILE dat1$
     ds% = ds% + 1
     gesamt% = gesamt% + 1
     SET STATUS "Spartengruppe: " + LTRIM$ ( STR$ (i%,",999999999")) + "/" + LTRIM$ ( STR$ (kk%,",999999999")) + "  DatensÑtze " + STR$ (ds%,",999999999") + "/" + STR$ (j%,",999999999") + "   gesamt:  " + STR$ (gesamt%,",999999999")
     jahr% = YEAR (INDE$$)
     IF jahr% = bis% THEN 
       codege% = codege.kvertrag
       codema% = codema.kvertrag
       codeva% = codeva.kvertrag
       codevt% = lfdnr.kvertrag
       codegrsp% = codegrsp.kvertrag
       codevp% = codevp.kvertrag
       QMaGrsp$ = STR$ (codema%,"000000") + STR$ (codegrsp%,"000000")
       QCodeMAVT$ = STR$ (codema%,"000000") + STR$ (codevt%,"000000")
       REM CALL Fehler("","")

 
       REM 111111111111111nach Spartengruppe1111111111111111111111111111111
       FILE dat1$
       mon% = MONTH (INDE$$)
       IF codevstatus.kvertrag <> 11 AND codevstatus.kvertrag <> 13 AND mon% > 0 THEN 
         IF NOT EXISTS (codegrsp%,codegrsp.dat1$) THEN 
           SELECT FIRST FILE "spgruppe" INDEX codegrsp.spgruppe
           SELECT KEY codegrsp% FILE "spgruppe" INDEX codegrsp.spgruppe
           BLANK FILE dat1$
           codekey% = SER (dat1$,1)
           codekey.dat1$ = codekey%
           codegrsp.dat1$ = codegrsp%
           SPgruppe.dat1$ = Gruppe.spgruppe
           STORE FILE dat1$
           SELECT FIRST FILE dat1$ INDEX codekey.dat1$
           SELECT KEY codekey% LOCK FILE dat1$ INDEX codekey.dat1$
         ELSE 
           SELECT FIRST FILE dat1$ INDEX codegrsp.dat1$
           SELECT KEY codegrsp% LOCK FILE dat1$ INDEX codegrsp.dat1$
         END IF 
         datum1$ = DATE$ (INDE$$,"mmyyyy0d")
         mon% = MONTH (INDE$$)
         SELECT CASE mon%
           CASE 1
             Jan_Anz.dat1$ = Jan_Anz.dat1$ + 1
             Jan_BW.dat1$ = Jan_BW.dat1$ + Bewertungssumme.kvertrag
             Jan_Pkt.dat1$ = Jan_Pkt.dat1$ + Einheiten.kvertrag
           CASE 2
             Feb_Anz.dat1$ = Feb_Anz.dat1$ + 1
             Feb_BW.dat1$ = Feb_BW.dat1$ + Bewertungssumme.kvertrag
             Feb_Pkt.dat1$ = Feb_Pkt.dat1$ + Einheiten.kvertrag
           CASE 3
             MÑr_Anz.dat1$ = MÑr_Anz.dat1$ + 1
             MÑr_BW.dat1$ = MÑr_BW.dat1$ + Bewertungssumme.kvertrag
             MÑr_Pkt.dat1$ = MÑr_Pkt.dat1$ + Einheiten.kvertrag
           CASE 4
             Apr_Anz.dat1$ = Apr_Anz.dat1$ + 1
             Apr_BW.dat1$ = Apr_BW.dat1$ + Bewertungssumme.kvertrag
             Apr_Pkt.dat1$ = Apr_Pkt.dat1$ + Einheiten.kvertrag
           CASE 5
             Mai_Anz.dat1$ = Mai_Anz.dat1$ + 1
             Mai_BW.dat1$ = Mai_BW.dat1$ + Bewertungssumme.kvertrag
             Mai_Pkt.dat1$ = Mai_Pkt.dat1$ + Einheiten.kvertrag
           CASE 6
             Jun_Anz.dat1$ = Jun_Anz.dat1$ + 1
             Jun_BW.dat1$ = Jun_BW.dat1$ + Bewertungssumme.kvertrag
             Jun_Pkt.dat1$ = Jun_Pkt.dat1$ + Einheiten.kvertrag
           CASE 7
             Jul_Anz.dat1$ = Jul_Anz.dat1$ + 1
             Jul_BW.dat1$ = Jul_BW.dat1$ + Bewertungssumme.kvertrag
             Jul_Pkt.dat1$ = Jul_Pkt.dat1$ + Einheiten.kvertrag
           CASE 8
             Aug_Anz.dat1$ = Aug_Anz.dat1$ + 1
             Aug_BW.dat1$ = Aug_BW.dat1$ + Bewertungssumme.kvertrag
             Aug_Pkt.dat1$ = Aug_Pkt.dat1$ + Einheiten.kvertrag
           CASE 9
             Sep_Anz.dat1$ = Sep_Anz.dat1$ + 1
             Sep_BW.dat1$ = Sep_BW.dat1$ + Bewertungssumme.kvertrag
             Sep_Pkt.dat1$ = Sep_Pkt.dat1$ + Einheiten.kvertrag
           CASE 10
             Okt_Anz.dat1$ = Okt_Anz.dat1$ + 1
             Okt_BW.dat1$ = Okt_BW.dat1$ + Bewertungssumme.kvertrag
             Okt_Pkt.dat1$ = Okt_Pkt.dat1$ + Einheiten.kvertrag
           CASE 11
             Nov_Anz.dat1$ = Nov_Anz.dat1$ + 1
             Nov_BW.dat1$ = Nov_BW.dat1$ + Bewertungssumme.kvertrag
             Nov_Pkt.dat1$ = Nov_Pkt.dat1$ + Einheiten.kvertrag
           CASE 12
             Dez_Anz.dat1$ = Dez_Anz.dat1$ + 1
             Dez_BW.dat1$ = Dez_BW.dat1$ + Bewertungssumme.kvertrag
             Dez_Pkt.dat1$ = Dez_Pkt.dat1$ + Einheiten.kvertrag
         END SELECT 
         IF EXISTS (QCodeMAVT$,QCodeMAVT.bu$) THEN 
           SELECT FIRST FILE bu$ INDEX QCodeMAVT.bu$
           SELECT KEY QCodeMAVT$ FILE bu$ INDEX QCodeMAVT.bu$
           WHILE NOT EOF (bu$) AND QCodeMAVT.bu$ = QCodeMAVT$
             SELECT CASE mon%
               CASE 1
                 Jan_Prv.dat1$ = Jan_Prv.dat1$ + betrageu.bu$
                 Jan_SR.dat1$ = Jan_SR.dat1$ + sreu.bu$
               CASE 2
                 Feb_Prv.dat1$ = Feb_Prv.dat1$ + betrageu.bu$
                 Feb_SR.dat1$ = Feb_SR.dat1$ + sreu.bu$
               CASE 3
                 MÑr_Prv.dat1$ = MÑr_Prv.dat1$ + betrageu.bu$
                 MÑr_SR.dat1$ = MÑr_SR.dat1$ + sreu.bu$
               CASE 4
                 Apr_Prv.dat1$ = Apr_Prv.dat1$ + betrageu.bu$
                 Apr_SR.dat1$ = Apr_SR.dat1$ + sreu.bu$
               CASE 5
                 Mai_Prv.dat1$ = Mai_Prv.dat1$ + betrageu.bu$
                 Mai_SR.dat1$ = Mai_SR.dat1$ + sreu.bu$
               CASE 6
                 Jun_Prv.dat1$ = Jun_Prv.dat1$ + betrageu.bu$
                 Jun_SR.dat1$ = Jun_SR.dat1$ + sreu.bu$
               CASE 7
                 Jul_Prv.dat1$ = Jul_Prv.dat1$ + betrageu.bu$
                 Jul_SR.dat1$ = Jul_SR.dat1$ + sreu.bu$
               CASE 8
                 Aug_Prv.dat1$ = Aug_Prv.dat1$ + betrageu.bu$
                 Aug_SR.dat1$ = Aug_SR.dat1$ + sreu.bu$
               CASE 9
                 Sep_Prv.dat1$ = Sep_Prv.dat1$ + betrageu.bu$
                 Sep_SR.dat1$ = Sep_SR.dat1$ + sreu.bu$
               CASE 10
                 Okt_Prv.dat1$ = Okt_Prv.dat1$ + betrageu.bu$
                 Okt_SR.dat1$ = Okt_SR.dat1$ + sreu.bu$
               CASE 11
                 Nov_Prv.dat1$ = Nov_Prv.dat1$ + betrageu.bu$
                 Nov_SR.dat1$ = Nov_SR.dat1$ + sreu.bu$
               CASE 12
                 Dez_Prv.dat1$ = Dez_Prv.dat1$ + betrageu.bu$
                 Dez_SR.dat1$ = Dez_SR.dat1$ + sreu.bu$
             END SELECT 
             SELECT NEXT FILE bu$
           WEND 
         END IF 
         IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag = 20 OR codevstatus.kvertrag = 21 THEN 
             SELECT CASE mon%
               CASE 1
                 Jan_AnzSto.dat1$ = Jan_AnzSto.dat1$ + 1
                 Jan_PktSto.dat1$ = Jan_PktSto.dat1$ + Einheiten.kvertrag
                 Jan_BWSto.dat1$ = Jan_BWSto.dat1$ + Bewertungssumme.kvertrag
               CASE 2
                 Feb_AnzSto.dat1$ = Feb_AnzSto.dat1$ + 1
                 Feb_PktSto.dat1$ = Feb_PktSto.dat1$ + Einheiten.kvertrag
                 Feb_BWSto.dat1$ = Feb_BWSto.dat1$ + Bewertungssumme.kvertrag
               CASE 3
                 MÑr_AnzSto.dat1$ = MÑr_AnzSto.dat1$ + 1
                 MÑr_PktSto.dat1$ = MÑr_PktSto.dat1$ + Einheiten.kvertrag
                 MÑr_BWSto.dat1$ = MÑr_BWSto.dat1$ + Bewertungssumme.kvertrag
               CASE 4
                 Apr_AnzSto.dat1$ = Apr_AnzSto.dat1$ + 1
                 Apr_PktSto.dat1$ = Apr_PktSto.dat1$ + Einheiten.kvertrag
                 Apr_BWSto.dat1$ = Apr_BWSto.dat1$ + Bewertungssumme.kvertrag
               CASE 5
                 Mai_AnzSto.dat1$ = Mai_AnzSto.dat1$ + 1
                 Mai_PktSto.dat1$ = Mai_PktSto.dat1$ + Einheiten.kvertrag
                 Mai_BWSto.dat1$ = Mai_BWSto.dat1$ + Bewertungssumme.kvertrag
               CASE 6
                 Jun_AnzSto.dat1$ = Jun_AnzSto.dat1$ + 1
                 Jun_PktSto.dat1$ = Jun_PktSto.dat1$ + Einheiten.kvertrag
                 Jun_BWSto.dat1$ = Jun_BWSto.dat1$ + Bewertungssumme.kvertrag
               CASE 7
                 Jul_AnzSto.dat1$ = Jul_AnzSto.dat1$ + 1
                 Jul_PktSto.dat1$ = Jul_PktSto.dat1$ + Einheiten.kvertrag
                 Jul_BWSto.dat1$ = Jul_BWSto.dat1$ + Bewertungssumme.kvertrag
               CASE 8
                 Aug_AnzSto.dat1$ = Aug_AnzSto.dat1$ + 1
                 Aug_PktSto.dat1$ = Aug_PktSto.dat1$ + Einheiten.kvertrag
                 Aug_BWSto.dat1$ = Aug_BWSto.dat1$ + Bewertungssumme.kvertrag
               CASE 9
                 Sep_AnzSto.dat1$ = Sep_AnzSto.dat1$ + 1
                 Sep_PktSto.dat1$ = Sep_PktSto.dat1$ + Einheiten.kvertrag
                 Sep_BWSto.dat1$ = Sep_BWSto.dat1$ + Bewertungssumme.kvertrag
               CASE 10
                 Okt_AnzSto.dat1$ = Okt_AnzSto.dat1$ + 1
                 Okt_PktSto.dat1$ = Okt_PktSto.dat1$ + Einheiten.kvertrag
                 Okt_BWSto.dat1$ = Okt_BWSto.dat1$ + Bewertungssumme.kvertrag
               CASE 11
                 Nov_AnzSto.dat1$ = Nov_AnzSto.dat1$ + 1
                 Nov_PktSto.dat1$ = Nov_PktSto.dat1$ + Einheiten.kvertrag
                 Nov_BWSto.dat1$ = Nov_BWSto.dat1$ + Bewertungssumme.kvertrag
               CASE 12
                 Dez_AnzSto.dat1$ = Dez_AnzSto.dat1$ + 1
                 Dez_PktSto.dat1$ = Dez_PktSto.dat1$ + Einheiten.kvertrag
                 Dez_BWSto.dat1$ = Dez_BWSto.dat1$ + Bewertungssumme.kvertrag
             END SELECT 
 
         END IF 
         STORE FILE dat1$
       END IF 
       REM 11111111111111111111111111111111111111111111111111111111111
       REM 222222222222  nach Mitarbeiter   222222222222222222222222222222222222222222222
       FILE dat2$
       mon% = MONTH (INDE$$)
       IF codevstatus.kvertrag <> 11 AND codevstatus.kvertrag <> 13 AND mon% > 0 THEN 
         IF NOT EXISTS (codema%,codema.dat2$) THEN 
           SELECT FIRST FILE "maadr" INDEX codema.maadr
           SELECT KEY codema% FILE "maadr" INDEX codema.maadr
           BLANK FILE dat2$
           codekey% = SER (dat2$,1)
           codekey.dat2$ = codekey%
           codema.dat2$ = codema%
           Agentur.dat2$ = Nachname.maadr + "," + Vorname.maadr
           Agenturno.dat2$ = Agenturnr.maadr
           STORE FILE dat2$
           SELECT FIRST FILE dat2$ INDEX codekey.dat2$
           SELECT KEY codekey% LOCK FILE dat2$ INDEX codekey.dat2$
         ELSE 
           SELECT FIRST FILE dat2$ INDEX codema.dat2$
           SELECT KEY codema% LOCK FILE dat2$ INDEX codema.dat2$
         END IF 
         datum1$ = DATE$ (INDE$$,"mmyyyy0d")
         mon% = MONTH (INDE$$)
         SELECT CASE mon%
           CASE 1
             Jan_Anz.dat2$ = Jan_Anz.dat2$ + 1
             Jan_BW.dat2$ = Jan_BW.dat2$ + Bewertungssumme.kvertrag
             Jan_Pkt.dat2$ = Jan_Pkt.dat2$ + Einheiten.kvertrag
           CASE 2
             Feb_Anz.dat2$ = Feb_Anz.dat2$ + 1
             Feb_BW.dat2$ = Feb_BW.dat2$ + Bewertungssumme.kvertrag
             Feb_Pkt.dat2$ = Feb_Pkt.dat2$ + Einheiten.kvertrag
           CASE 3
             MÑr_Anz.dat2$ = MÑr_Anz.dat2$ + 1
             MÑr_BW.dat2$ = MÑr_BW.dat2$ + Bewertungssumme.kvertrag
             MÑr_Pkt.dat2$ = MÑr_Pkt.dat2$ + Einheiten.kvertrag
           CASE 4
             Apr_Anz.dat2$ = Apr_Anz.dat2$ + 1
             Apr_BW.dat2$ = Apr_BW.dat2$ + Bewertungssumme.kvertrag
             Apr_Pkt.dat2$ = Apr_Pkt.dat2$ + Einheiten.kvertrag
           CASE 5
             Mai_Anz.dat2$ = Mai_Anz.dat2$ + 1
             Mai_BW.dat2$ = Mai_BW.dat2$ + Bewertungssumme.kvertrag
             Mai_Pkt.dat2$ = Mai_Pkt.dat2$ + Einheiten.kvertrag
           CASE 6
             Jun_Anz.dat2$ = Jun_Anz.dat2$ + 1
             Jun_BW.dat2$ = Jun_BW.dat2$ + Bewertungssumme.kvertrag
             Jun_Pkt.dat2$ = Jun_Pkt.dat2$ + Einheiten.kvertrag
           CASE 7
             Jul_Anz.dat2$ = Jul_Anz.dat2$ + 1
             Jul_BW.dat2$ = Jul_BW.dat2$ + Bewertungssumme.kvertrag
             Jul_Pkt.dat2$ = Jul_Pkt.dat2$ + Einheiten.kvertrag
           CASE 8
             Aug_Anz.dat2$ = Aug_Anz.dat2$ + 1
             Aug_BW.dat2$ = Aug_BW.dat2$ + Bewertungssumme.kvertrag
             Aug_Pkt.dat2$ = Aug_Pkt.dat2$ + Einheiten.kvertrag
           CASE 9
             Sep_Anz.dat2$ = Sep_Anz.dat2$ + 1
             Sep_BW.dat2$ = Sep_BW.dat2$ + Bewertungssumme.kvertrag
             Sep_Pkt.dat2$ = Sep_Pkt.dat2$ + Einheiten.kvertrag
           CASE 10
             Okt_Anz.dat2$ = Okt_Anz.dat2$ + 1
             Okt_BW.dat2$ = Okt_BW.dat2$ + Bewertungssumme.kvertrag
             Okt_Pkt.dat2$ = Okt_Pkt.dat2$ + Einheiten.kvertrag
           CASE 11
             Nov_Anz.dat2$ = Nov_Anz.dat2$ + 1
             Nov_BW.dat2$ = Nov_BW.dat2$ + Bewertungssumme.kvertrag
             Nov_Pkt.dat2$ = Nov_Pkt.dat2$ + Einheiten.kvertrag
           CASE 12
             Dez_Anz.dat2$ = Dez_Anz.dat2$ + 1
             Dez_BW.dat2$ = Dez_BW.dat2$ + Bewertungssumme.kvertrag
             Dez_Pkt.dat2$ = Dez_Pkt.dat2$ + Einheiten.kvertrag
         END SELECT 
         IF EXISTS (QCodeMAVT$,QCodeMAVT.bu$) THEN 
           SELECT FIRST FILE bu$ INDEX QCodeMAVT.bu$
           SELECT KEY QCodeMAVT$ FILE bu$ INDEX QCodeMAVT.bu$
           WHILE NOT EOF (bu$) AND QCodeMAVT.bu$ = QCodeMAVT$
             SELECT CASE mon%
               CASE 1
                 Jan_Prv.dat2$ = Jan_Prv.dat2$ + betrageu.bu$
                 Jan_SR.dat2$ = Jan_SR.dat2$ + sreu.bu$
               CASE 2
                 Feb_Prv.dat2$ = Feb_Prv.dat2$ + betrageu.bu$
                 Feb_SR.dat2$ = Feb_SR.dat2$ + sreu.bu$
               CASE 3
                 MÑr_Prv.dat2$ = MÑr_Prv.dat2$ + betrageu.bu$
                 MÑr_SR.dat2$ = MÑr_SR.dat2$ + sreu.bu$
               CASE 4
                 Apr_Prv.dat2$ = Apr_Prv.dat2$ + betrageu.bu$
                 Apr_SR.dat2$ = Apr_SR.dat2$ + sreu.bu$
               CASE 5
                 Mai_Prv.dat2$ = Mai_Prv.dat2$ + betrageu.bu$
                 Mai_SR.dat2$ = Mai_SR.dat2$ + sreu.bu$
               CASE 6
                 Jun_Prv.dat2$ = Jun_Prv.dat2$ + betrageu.bu$
                 Jun_SR.dat2$ = Jun_SR.dat2$ + sreu.bu$
               CASE 7
                 Jul_Prv.dat2$ = Jul_Prv.dat2$ + betrageu.bu$
                 Jul_SR.dat2$ = Jul_SR.dat2$ + sreu.bu$
               CASE 8
                 Aug_Prv.dat2$ = Aug_Prv.dat2$ + betrageu.bu$
                 Aug_SR.dat2$ = Aug_SR.dat2$ + sreu.bu$
               CASE 9
                 Sep_Prv.dat2$ = Sep_Prv.dat2$ + betrageu.bu$
                 Sep_SR.dat2$ = Sep_SR.dat2$ + sreu.bu$
               CASE 10
                 Okt_Prv.dat2$ = Okt_Prv.dat2$ + betrageu.bu$
                 Okt_SR.dat2$ = Okt_SR.dat2$ + sreu.bu$
               CASE 11
                 Nov_Prv.dat2$ = Nov_Prv.dat2$ + betrageu.bu$
                 Nov_SR.dat2$ = Nov_SR.dat2$ + sreu.bu$
               CASE 12
                 Dez_Prv.dat2$ = Dez_Prv.dat2$ + betrageu.bu$
                 Dez_SR.dat2$ = Dez_SR.dat2$ + sreu.bu$
             END SELECT 
             SELECT NEXT FILE bu$
           WEND 
         END IF 
         IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag = 20 OR codevstatus.kvertrag = 21 THEN 
             SELECT CASE mon%
               CASE 1
                 Jan_AnzSto.dat2$ = Jan_AnzSto.dat2$ + 1
                 Jan_PktSto.dat2$ = Jan_PktSto.dat2$ + Einheiten.kvertrag
                 Jan_BWSto.dat2$ = Jan_BWSto.dat2$ + Bewertungssumme.kvertrag
               CASE 2
                 Feb_AnzSto.dat2$ = Feb_AnzSto.dat2$ + 1
                 Feb_PktSto.dat2$ = Feb_PktSto.dat2$ + Einheiten.kvertrag
                 Feb_BWSto.dat2$ = Feb_BWSto.dat2$ + Bewertungssumme.kvertrag
               CASE 3
                 MÑr_AnzSto.dat2$ = MÑr_AnzSto.dat2$ + 1
                 MÑr_PktSto.dat2$ = MÑr_PktSto.dat2$ + Einheiten.kvertrag
                 MÑr_BWSto.dat2$ = MÑr_BWSto.dat2$ + Bewertungssumme.kvertrag
               CASE 4
                 Apr_AnzSto.dat2$ = Apr_AnzSto.dat2$ + 1
                 Apr_PktSto.dat2$ = Apr_PktSto.dat2$ + Einheiten.kvertrag
                 Apr_BWSto.dat2$ = Apr_BWSto.dat2$ + Bewertungssumme.kvertrag
               CASE 5
                 Mai_AnzSto.dat2$ = Mai_AnzSto.dat2$ + 1
                 Mai_PktSto.dat2$ = Mai_PktSto.dat2$ + Einheiten.kvertrag
                 Mai_BWSto.dat2$ = Mai_BWSto.dat2$ + Bewertungssumme.kvertrag
               CASE 6
                 Jun_AnzSto.dat2$ = Jun_AnzSto.dat2$ + 1
                 Jun_PktSto.dat2$ = Jun_PktSto.dat2$ + Einheiten.kvertrag
                 Jun_BWSto.dat2$ = Jun_BWSto.dat2$ + Bewertungssumme.kvertrag
               CASE 7
                 Jul_AnzSto.dat2$ = Jul_AnzSto.dat2$ + 1
                 Jul_PktSto.dat2$ = Jul_PktSto.dat2$ + Einheiten.kvertrag
                 Jul_BWSto.dat2$ = Jul_BWSto.dat2$ + Bewertungssumme.kvertrag
               CASE 8
                 Aug_AnzSto.dat2$ = Aug_AnzSto.dat2$ + 1
                 Aug_PktSto.dat2$ = Aug_PktSto.dat2$ + Einheiten.kvertrag
                 Aug_BWSto.dat2$ = Aug_BWSto.dat2$ + Bewertungssumme.kvertrag
               CASE 9
                 Sep_AnzSto.dat2$ = Sep_AnzSto.dat2$ + 1
                 Sep_PktSto.dat2$ = Sep_PktSto.dat2$ + Einheiten.kvertrag
                 Sep_BWSto.dat2$ = Sep_BWSto.dat2$ + Bewertungssumme.kvertrag
               CASE 10
                 Okt_AnzSto.dat2$ = Okt_AnzSto.dat2$ + 1
                 Okt_PktSto.dat2$ = Okt_PktSto.dat2$ + Einheiten.kvertrag
                 Okt_BWSto.dat2$ = Okt_BWSto.dat2$ + Bewertungssumme.kvertrag
               CASE 11
                 Nov_AnzSto.dat2$ = Nov_AnzSto.dat2$ + 1
                 Nov_PktSto.dat2$ = Nov_PktSto.dat2$ + Einheiten.kvertrag
                 Nov_BWSto.dat2$ = Nov_BWSto.dat2$ + Bewertungssumme.kvertrag
               CASE 12
                 Dez_AnzSto.dat2$ = Dez_AnzSto.dat2$ + 1
                 Dez_PktSto.dat2$ = Dez_PktSto.dat2$ + Einheiten.kvertrag
                 Dez_BWSto.dat2$ = Dez_BWSto.dat2$ + Bewertungssumme.kvertrag
             END SELECT 
 
         END IF 
         STORE FILE dat2$
       END IF 
       REM 22222222222222222222222222222222222222222222222222222222222222222222222222222222  
       REM 333333333333333333333333 nach Sparte 3333333333333333333333333333333333333333333
       FILE dat3$
       mon% = MONTH (INDE$$)
       IF codevstatus.kvertrag <> 11 AND codevstatus.kvertrag <> 13 AND mon% > 0 THEN 
         IF NOT EXISTS (codeva%,codeva.dat3$) THEN 
           SELECT FIRST FILE "sparten" INDEX codeva.sparten
           SELECT KEY codeva% FILE "sparten" INDEX codeva.sparten
           BLANK FILE dat3$
           codekey% = SER (dat3$,1)
           codekey.dat3$ = codekey%
           codeva.dat3$ = codeva%
           SParte.dat3$ = sparte.sparten
           STORE FILE dat3$
           SELECT FIRST FILE dat3$ INDEX codekey.dat3$
           SELECT KEY codekey% LOCK FILE dat3$ INDEX codekey.dat3$
         ELSE 
           SELECT FIRST FILE dat3$ INDEX codeva.dat3$
           SELECT KEY codeva% LOCK FILE dat3$ INDEX codeva.dat3$
         END IF 
         datum1$ = DATE$ (INDE$$,"mmyyyy0d")
         mon% = MONTH (INDE$$)
         SELECT CASE mon%
           CASE 1
             Jan_Anz.dat3$ = Jan_Anz.dat3$ + 1
             Jan_BW.dat3$ = Jan_BW.dat3$ + Bewertungssumme.kvertrag
             Jan_Pkt.dat3$ = Jan_Pkt.dat3$ + Einheiten.kvertrag
           CASE 2
             Feb_Anz.dat3$ = Feb_Anz.dat3$ + 1
             Feb_BW.dat3$ = Feb_BW.dat3$ + Bewertungssumme.kvertrag
             Feb_Pkt.dat3$ = Feb_Pkt.dat3$ + Einheiten.kvertrag
           CASE 3
             MÑr_Anz.dat3$ = MÑr_Anz.dat3$ + 1
             MÑr_BW.dat3$ = MÑr_BW.dat3$ + Bewertungssumme.kvertrag
             MÑr_Pkt.dat3$ = MÑr_Pkt.dat3$ + Einheiten.kvertrag
           CASE 4
             Apr_Anz.dat3$ = Apr_Anz.dat3$ + 1
             Apr_BW.dat3$ = Apr_BW.dat3$ + Bewertungssumme.kvertrag
             Apr_Pkt.dat3$ = Apr_Pkt.dat3$ + Einheiten.kvertrag
           CASE 5
             Mai_Anz.dat3$ = Mai_Anz.dat3$ + 1
             Mai_BW.dat3$ = Mai_BW.dat3$ + Bewertungssumme.kvertrag
             Mai_Pkt.dat3$ = Mai_Pkt.dat3$ + Einheiten.kvertrag
           CASE 6
             Jun_Anz.dat3$ = Jun_Anz.dat3$ + 1
             Jun_BW.dat3$ = Jun_BW.dat3$ + Bewertungssumme.kvertrag
             Jun_Pkt.dat3$ = Jun_Pkt.dat3$ + Einheiten.kvertrag
           CASE 7
             Jul_Anz.dat3$ = Jul_Anz.dat3$ + 1
             Jul_BW.dat3$ = Jul_BW.dat3$ + Bewertungssumme.kvertrag
             Jul_Pkt.dat3$ = Jul_Pkt.dat3$ + Einheiten.kvertrag
           CASE 8
             Aug_Anz.dat3$ = Aug_Anz.dat3$ + 1
             Aug_BW.dat3$ = Aug_BW.dat3$ + Bewertungssumme.kvertrag
             Aug_Pkt.dat3$ = Aug_Pkt.dat3$ + Einheiten.kvertrag
           CASE 9
             Sep_Anz.dat3$ = Sep_Anz.dat3$ + 1
             Sep_BW.dat3$ = Sep_BW.dat3$ + Bewertungssumme.kvertrag
             Sep_Pkt.dat3$ = Sep_Pkt.dat3$ + Einheiten.kvertrag
           CASE 10
             Okt_Anz.dat3$ = Okt_Anz.dat3$ + 1
             Okt_BW.dat3$ = Okt_BW.dat3$ + Bewertungssumme.kvertrag
             Okt_Pkt.dat3$ = Okt_Pkt.dat3$ + Einheiten.kvertrag
           CASE 11
             Nov_Anz.dat3$ = Nov_Anz.dat3$ + 1
             Nov_BW.dat3$ = Nov_BW.dat3$ + Bewertungssumme.kvertrag
             Nov_Pkt.dat3$ = Nov_Pkt.dat3$ + Einheiten.kvertrag
           CASE 12
             Dez_Anz.dat3$ = Dez_Anz.dat3$ + 1
             Dez_BW.dat3$ = Dez_BW.dat3$ + Bewertungssumme.kvertrag
             Dez_Pkt.dat3$ = Dez_Pkt.dat3$ + Einheiten.kvertrag
         END SELECT 
         IF EXISTS (QCodeMAVT$,QCodeMAVT.bu$) THEN 
           SELECT FIRST FILE bu$ INDEX QCodeMAVT.bu$
           SELECT KEY QCodeMAVT$ FILE bu$ INDEX QCodeMAVT.bu$
           WHILE NOT EOF (bu$) AND QCodeMAVT.bu$ = QCodeMAVT$
             SELECT CASE mon%
               CASE 1
                 Jan_Prv.dat3$ = Jan_Prv.dat3$ + betrageu.bu$
                 Jan_SR.dat3$ = Jan_SR.dat3$ + sreu.bu$
               CASE 2
                 Feb_Prv.dat3$ = Feb_Prv.dat3$ + betrageu.bu$
                 Feb_SR.dat3$ = Feb_SR.dat3$ + sreu.bu$
               CASE 3
                 MÑr_Prv.dat3$ = MÑr_Prv.dat3$ + betrageu.bu$
                 MÑr_SR.dat3$ = MÑr_SR.dat3$ + sreu.bu$
               CASE 4
                 Apr_Prv.dat3$ = Apr_Prv.dat3$ + betrageu.bu$
                 Apr_SR.dat3$ = Apr_SR.dat3$ + sreu.bu$
               CASE 5
                 Mai_Prv.dat3$ = Mai_Prv.dat3$ + betrageu.bu$
                 Mai_SR.dat3$ = Mai_SR.dat3$ + sreu.bu$
               CASE 6
                 Jun_Prv.dat3$ = Jun_Prv.dat3$ + betrageu.bu$
                 Jun_SR.dat3$ = Jun_SR.dat3$ + sreu.bu$
               CASE 7
                 Jul_Prv.dat3$ = Jul_Prv.dat3$ + betrageu.bu$
                 Jul_SR.dat3$ = Jul_SR.dat3$ + sreu.bu$
               CASE 8
                 Aug_Prv.dat3$ = Aug_Prv.dat3$ + betrageu.bu$
                 Aug_SR.dat3$ = Aug_SR.dat3$ + sreu.bu$
               CASE 9
                 Sep_Prv.dat3$ = Sep_Prv.dat3$ + betrageu.bu$
                 Sep_SR.dat3$ = Sep_SR.dat3$ + sreu.bu$
               CASE 10
                 Okt_Prv.dat3$ = Okt_Prv.dat3$ + betrageu.bu$
                 Okt_SR.dat3$ = Okt_SR.dat3$ + sreu.bu$
               CASE 11
                 Nov_Prv.dat3$ = Nov_Prv.dat3$ + betrageu.bu$
                 Nov_SR.dat3$ = Nov_SR.dat3$ + sreu.bu$
               CASE 12
                 Dez_Prv.dat3$ = Dez_Prv.dat3$ + betrageu.bu$
                 Dez_SR.dat3$ = Dez_SR.dat3$ + sreu.bu$
             END SELECT 
             SELECT NEXT FILE bu$
           WEND 
         END IF 
         IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag = 20 OR codevstatus.kvertrag = 21 THEN 
             SELECT CASE mon%
               CASE 1
                 Jan_AnzSto.dat3$ = Jan_AnzSto.dat3$ + 1
                 Jan_PktSto.dat3$ = Jan_PktSto.dat3$ + Einheiten.kvertrag
                 Jan_BWSto.dat3$ = Jan_BWSto.dat3$ + Bewertungssumme.kvertrag
               CASE 2
                 Feb_AnzSto.dat3$ = Feb_AnzSto.dat3$ + 1
                 Feb_PktSto.dat3$ = Feb_PktSto.dat3$ + Einheiten.kvertrag
                 Feb_BWSto.dat3$ = Feb_BWSto.dat3$ + Bewertungssumme.kvertrag
               CASE 3
                 MÑr_AnzSto.dat3$ = MÑr_AnzSto.dat3$ + 1
                 MÑr_PktSto.dat3$ = MÑr_PktSto.dat3$ + Einheiten.kvertrag
                 MÑr_BWSto.dat3$ = MÑr_BWSto.dat3$ + Bewertungssumme.kvertrag
               CASE 4
                 Apr_AnzSto.dat3$ = Apr_AnzSto.dat3$ + 1
                 Apr_PktSto.dat3$ = Apr_PktSto.dat3$ + Einheiten.kvertrag
                 Apr_BWSto.dat3$ = Apr_BWSto.dat3$ + Bewertungssumme.kvertrag
               CASE 5
                 Mai_AnzSto.dat3$ = Mai_AnzSto.dat3$ + 1
                 Mai_PktSto.dat3$ = Mai_PktSto.dat3$ + Einheiten.kvertrag
                 Mai_BWSto.dat3$ = Mai_BWSto.dat3$ + Bewertungssumme.kvertrag
               CASE 6
                 Jun_AnzSto.dat3$ = Jun_AnzSto.dat3$ + 1
                 Jun_PktSto.dat3$ = Jun_PktSto.dat3$ + Einheiten.kvertrag
                 Jun_BWSto.dat3$ = Jun_BWSto.dat3$ + Bewertungssumme.kvertrag
               CASE 7
                 Jul_AnzSto.dat3$ = Jul_AnzSto.dat3$ + 1
                 Jul_PktSto.dat3$ = Jul_PktSto.dat3$ + Einheiten.kvertrag
                 Jul_BWSto.dat3$ = Jul_BWSto.dat3$ + Bewertungssumme.kvertrag
               CASE 8
                 Aug_AnzSto.dat3$ = Aug_AnzSto.dat3$ + 1
                 Aug_PktSto.dat3$ = Aug_PktSto.dat3$ + Einheiten.kvertrag
                 Aug_BWSto.dat3$ = Aug_BWSto.dat3$ + Bewertungssumme.kvertrag
               CASE 9
                 Sep_AnzSto.dat3$ = Sep_AnzSto.dat3$ + 1
                 Sep_PktSto.dat3$ = Sep_PktSto.dat3$ + Einheiten.kvertrag
                 Sep_BWSto.dat3$ = Sep_BWSto.dat3$ + Bewertungssumme.kvertrag
               CASE 10
                 Okt_AnzSto.dat3$ = Okt_AnzSto.dat3$ + 1
                 Okt_PktSto.dat3$ = Okt_PktSto.dat3$ + Einheiten.kvertrag
                 Okt_BWSto.dat3$ = Okt_BWSto.dat3$ + Bewertungssumme.kvertrag
               CASE 11
                 Nov_AnzSto.dat3$ = Nov_AnzSto.dat3$ + 1
                 Nov_PktSto.dat3$ = Nov_PktSto.dat3$ + Einheiten.kvertrag
                 Nov_BWSto.dat3$ = Nov_BWSto.dat3$ + Bewertungssumme.kvertrag
               CASE 12
                 Dez_AnzSto.dat3$ = Dez_AnzSto.dat3$ + 1
                 Dez_PktSto.dat3$ = Dez_PktSto.dat3$ + Einheiten.kvertrag
                 Dez_BWSto.dat3$ = Dez_BWSto.dat3$ + Bewertungssumme.kvertrag
             END SELECT 
 
         END IF 
         STORE FILE dat3$
       END IF 
       REM 3333333333333333333333333333333333333333333333333333333333333333333333333333333333333
       REM 444444444444444444444 nach gesellschaft 44444444444444444444444444444444444444444
       FILE dat1$
       mon% = MONTH (INDE$$)
       IF codevstatus.kvertrag <> 11 AND codevstatus.kvertrag <> 13 AND mon% > 0 THEN 
         IF NOT EXISTS (codege%,codege.dat4$) THEN 
           SELECT FIRST FILE "geadr" INDEX codege.geadr
           SELECT KEY codege% FILE "geadr" INDEX codege.geadr
           BLANK FILE dat4$
           codekey% = SER (dat4$,1)
           codekey.dat4$ = codekey%
           codege.dat4$ = codege%
           Gesellschaft.dat4$ = gesellschaft.geadr
           STORE FILE dat4$
           SELECT FIRST FILE dat4$ INDEX codekey.dat4$
           SELECT KEY codekey% LOCK FILE dat4$ INDEX codekey.dat4$
         ELSE 
           SELECT FIRST FILE dat4$ INDEX codege.dat4$
           SELECT KEY codege% LOCK FILE dat4$ INDEX codege.dat4$
         END IF 
         datum1$ = DATE$ (INDE$$,"mmyyyy0d")
         mon% = MONTH (INDE$$)
         SELECT CASE mon%
           CASE 1
             Jan_Anz.dat4$ = Jan_Anz.dat4$ + 1
             Jan_BW.dat4$ = Jan_BW.dat4$ + Bewertungssumme.kvertrag
             Jan_Pkt.dat4$ = Jan_Pkt.dat4$ + Einheiten.kvertrag
           CASE 2
             Feb_Anz.dat4$ = Feb_Anz.dat4$ + 1
             Feb_BW.dat4$ = Feb_BW.dat4$ + Bewertungssumme.kvertrag
             Feb_Pkt.dat4$ = Feb_Pkt.dat4$ + Einheiten.kvertrag
           CASE 3
             MÑr_Anz.dat4$ = MÑr_Anz.dat4$ + 1
             MÑr_BW.dat4$ = MÑr_BW.dat4$ + Bewertungssumme.kvertrag
             MÑr_Pkt.dat4$ = MÑr_Pkt.dat4$ + Einheiten.kvertrag
           CASE 4
             Apr_Anz.dat4$ = Apr_Anz.dat4$ + 1
             Apr_BW.dat4$ = Apr_BW.dat4$ + Bewertungssumme.kvertrag
             Apr_Pkt.dat4$ = Apr_Pkt.dat4$ + Einheiten.kvertrag
           CASE 5
             Mai_Anz.dat4$ = Mai_Anz.dat4$ + 1
             Mai_BW.dat4$ = Mai_BW.dat4$ + Bewertungssumme.kvertrag
             Mai_Pkt.dat4$ = Mai_Pkt.dat4$ + Einheiten.kvertrag
           CASE 6
             Jun_Anz.dat4$ = Jun_Anz.dat4$ + 1
             Jun_BW.dat4$ = Jun_BW.dat4$ + Bewertungssumme.kvertrag
             Jun_Pkt.dat4$ = Jun_Pkt.dat4$ + Einheiten.kvertrag
           CASE 7
             Jul_Anz.dat4$ = Jul_Anz.dat4$ + 1
             Jul_BW.dat4$ = Jul_BW.dat4$ + Bewertungssumme.kvertrag
             Jul_Pkt.dat4$ = Jul_Pkt.dat4$ + Einheiten.kvertrag
           CASE 8
             Aug_Anz.dat4$ = Aug_Anz.dat4$ + 1
             Aug_BW.dat4$ = Aug_BW.dat4$ + Bewertungssumme.kvertrag
             Aug_Pkt.dat4$ = Aug_Pkt.dat4$ + Einheiten.kvertrag
           CASE 9
             Sep_Anz.dat4$ = Sep_Anz.dat4$ + 1
             Sep_BW.dat4$ = Sep_BW.dat4$ + Bewertungssumme.kvertrag
             Sep_Pkt.dat4$ = Sep_Pkt.dat4$ + Einheiten.kvertrag
           CASE 10
             Okt_Anz.dat4$ = Okt_Anz.dat4$ + 1
             Okt_BW.dat4$ = Okt_BW.dat4$ + Bewertungssumme.kvertrag
             Okt_Pkt.dat4$ = Okt_Pkt.dat4$ + Einheiten.kvertrag
           CASE 11
             Nov_Anz.dat4$ = Nov_Anz.dat4$ + 1
             Nov_BW.dat4$ = Nov_BW.dat4$ + Bewertungssumme.kvertrag
             Nov_Pkt.dat4$ = Nov_Pkt.dat4$ + Einheiten.kvertrag
           CASE 12
             Dez_Anz.dat4$ = Dez_Anz.dat4$ + 1
             Dez_BW.dat4$ = Dez_BW.dat4$ + Bewertungssumme.kvertrag
             Dez_Pkt.dat4$ = Dez_Pkt.dat4$ + Einheiten.kvertrag
         END SELECT 
         IF EXISTS (QCodeMAVT$,QCodeMAVT.bu$) THEN 
           SELECT FIRST FILE bu$ INDEX QCodeMAVT.bu$
           SELECT KEY QCodeMAVT$ FILE bu$ INDEX QCodeMAVT.bu$
           WHILE NOT EOF (bu$) AND QCodeMAVT.bu$ = QCodeMAVT$
             SELECT CASE mon%
               CASE 1
                 Jan_Prv.dat4$ = Jan_Prv.dat4$ + betrageu.bu$
                 Jan_SR.dat4$ = Jan_SR.dat4$ + sreu.bu$
               CASE 2
                 Feb_Prv.dat4$ = Feb_Prv.dat4$ + betrageu.bu$
                 Feb_SR.dat4$ = Feb_SR.dat4$ + sreu.bu$
               CASE 3
                 MÑr_Prv.dat4$ = MÑr_Prv.dat4$ + betrageu.bu$
                 MÑr_SR.dat4$ = MÑr_SR.dat4$ + sreu.bu$
               CASE 4
                 Apr_Prv.dat4$ = Apr_Prv.dat4$ + betrageu.bu$
                 Apr_SR.dat4$ = Apr_SR.dat4$ + sreu.bu$
               CASE 5
                 Mai_Prv.dat4$ = Mai_Prv.dat4$ + betrageu.bu$
                 Mai_SR.dat4$ = Mai_SR.dat4$ + sreu.bu$
               CASE 6
                 Jun_Prv.dat4$ = Jun_Prv.dat4$ + betrageu.bu$
                 Jun_SR.dat4$ = Jun_SR.dat4$ + sreu.bu$
               CASE 7
                 Jul_Prv.dat4$ = Jul_Prv.dat4$ + betrageu.bu$
                 Jul_SR.dat4$ = Jul_SR.dat4$ + sreu.bu$
               CASE 8
                 Aug_Prv.dat4$ = Aug_Prv.dat4$ + betrageu.bu$
                 Aug_SR.dat4$ = Aug_SR.dat4$ + sreu.bu$
               CASE 9
                 Sep_Prv.dat4$ = Sep_Prv.dat4$ + betrageu.bu$
                 Sep_SR.dat4$ = Sep_SR.dat4$ + sreu.bu$
               CASE 10
                 Okt_Prv.dat4$ = Okt_Prv.dat4$ + betrageu.bu$
                 Okt_SR.dat4$ = Okt_SR.dat4$ + sreu.bu$
               CASE 11
                 Nov_Prv.dat4$ = Nov_Prv.dat4$ + betrageu.bu$
                 Nov_SR.dat4$ = Nov_SR.dat4$ + sreu.bu$
               CASE 12
                 Dez_Prv.dat4$ = Dez_Prv.dat4$ + betrageu.bu$
                 Dez_SR.dat4$ = Dez_SR.dat4$ + sreu.bu$
             END SELECT 
             SELECT NEXT FILE bu$
           WEND 
         END IF 
         IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag = 20 OR codevstatus.kvertrag = 21 THEN 
             SELECT CASE mon%
               CASE 1
                 Jan_AnzSto.dat4$ = Jan_AnzSto.dat4$ + 1
                 Jan_PktSto.dat4$ = Jan_PktSto.dat4$ + Einheiten.kvertrag
                 Jan_BWSto.dat4$ = Jan_BWSto.dat4$ + Bewertungssumme.kvertrag
               CASE 2
                 Feb_AnzSto.dat4$ = Feb_AnzSto.dat4$ + 1
                 Feb_PktSto.dat4$ = Feb_PktSto.dat4$ + Einheiten.kvertrag
                 Feb_BWSto.dat4$ = Feb_BWSto.dat4$ + Bewertungssumme.kvertrag
               CASE 3
                 MÑr_AnzSto.dat4$ = MÑr_AnzSto.dat4$ + 1
                 MÑr_PktSto.dat4$ = MÑr_PktSto.dat4$ + Einheiten.kvertrag
                 MÑr_BWSto.dat4$ = MÑr_BWSto.dat4$ + Bewertungssumme.kvertrag
               CASE 4
                 Apr_AnzSto.dat4$ = Apr_AnzSto.dat4$ + 1
                 Apr_PktSto.dat4$ = Apr_PktSto.dat4$ + Einheiten.kvertrag
                 Apr_BWSto.dat4$ = Apr_BWSto.dat4$ + Bewertungssumme.kvertrag
               CASE 5
                 Mai_AnzSto.dat4$ = Mai_AnzSto.dat4$ + 1
                 Mai_PktSto.dat4$ = Mai_PktSto.dat4$ + Einheiten.kvertrag
                 Mai_BWSto.dat4$ = Mai_BWSto.dat4$ + Bewertungssumme.kvertrag
               CASE 6
                 Jun_AnzSto.dat4$ = Jun_AnzSto.dat4$ + 1
                 Jun_PktSto.dat4$ = Jun_PktSto.dat4$ + Einheiten.kvertrag
                 Jun_BWSto.dat4$ = Jun_BWSto.dat4$ + Bewertungssumme.kvertrag
               CASE 7
                 Jul_AnzSto.dat4$ = Jul_AnzSto.dat4$ + 1
                 Jul_PktSto.dat4$ = Jul_PktSto.dat4$ + Einheiten.kvertrag
                 Jul_BWSto.dat4$ = Jul_BWSto.dat4$ + Bewertungssumme.kvertrag
               CASE 8
                 Aug_AnzSto.dat4$ = Aug_AnzSto.dat4$ + 1
                 Aug_PktSto.dat4$ = Aug_PktSto.dat4$ + Einheiten.kvertrag
                 Aug_BWSto.dat4$ = Aug_BWSto.dat4$ + Bewertungssumme.kvertrag
               CASE 9
                 Sep_AnzSto.dat4$ = Sep_AnzSto.dat4$ + 1
                 Sep_PktSto.dat4$ = Sep_PktSto.dat4$ + Einheiten.kvertrag
                 Sep_BWSto.dat4$ = Sep_BWSto.dat4$ + Bewertungssumme.kvertrag
               CASE 10
                 Okt_AnzSto.dat4$ = Okt_AnzSto.dat4$ + 1
                 Okt_PktSto.dat4$ = Okt_PktSto.dat4$ + Einheiten.kvertrag
                 Okt_BWSto.dat4$ = Okt_BWSto.dat4$ + Bewertungssumme.kvertrag
               CASE 11
                 Nov_AnzSto.dat4$ = Nov_AnzSto.dat4$ + 1
                 Nov_PktSto.dat4$ = Nov_PktSto.dat4$ + Einheiten.kvertrag
                 Nov_BWSto.dat4$ = Nov_BWSto.dat4$ + Bewertungssumme.kvertrag
               CASE 12
                 Dez_AnzSto.dat4$ = Dez_AnzSto.dat4$ + 1
                 Dez_PktSto.dat4$ = Dez_PktSto.dat4$ + Einheiten.kvertrag
                 Dez_BWSto.dat4$ = Dez_BWSto.dat4$ + Bewertungssumme.kvertrag
             END SELECT 
 
         END IF 
         STORE FILE dat4$
       END IF 
       REM 44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
       REM 555555555555555555555 nach Produkten 55555555555555555555555555555555555555555555555555555555
       FILE dat1$
       mon% = MONTH (INDE$$)
       IF codevstatus.kvertrag <> 11 AND codevstatus.kvertrag <> 13 AND mon% > 0 THEN 
         IF NOT EXISTS (codevp%,codevp.dat5$) THEN 
           SELECT FIRST FILE "vprodukt" INDEX codevp.vprodukt
           SELECT KEY codevp% FILE "vprodukt" INDEX codevp.vprodukt
           BLANK FILE dat5$
           codekey% = SER (dat5$,1)
           codekey.dat5$ = codekey%
           codevp.dat5$ = codevp%
           GesSpa.dat5$ = Gesellschaft.vprodukt + "/" + Sparte.vprodukt
           STORE FILE dat5$
           SELECT FIRST FILE dat5$ INDEX codekey.dat5$
           SELECT KEY codekey% LOCK FILE dat5$ INDEX codekey.dat5$
         ELSE 
           SELECT FIRST FILE dat5$ INDEX codevp.dat5$
           SELECT KEY codevp% LOCK FILE dat5$ INDEX codevp.dat5$
         END IF 
         datum1$ = DATE$ (INDE$$,"mmyyyy0d")
         mon% = MONTH (INDE$$)
         SELECT CASE mon%
           CASE 1
             Jan_Anz.dat5$ = Jan_Anz.dat5$ + 1
             Jan_BW.dat5$ = Jan_BW.dat5$ + Bewertungssumme.kvertrag
             Jan_Pkt.dat5$ = Jan_Pkt.dat5$ + Einheiten.kvertrag
           CASE 2
             Feb_Anz.dat5$ = Feb_Anz.dat5$ + 1
             Feb_BW.dat5$ = Feb_BW.dat5$ + Bewertungssumme.kvertrag
             Feb_Pkt.dat5$ = Feb_Pkt.dat5$ + Einheiten.kvertrag
           CASE 3
             MÑr_Anz.dat5$ = MÑr_Anz.dat5$ + 1
             MÑr_BW.dat5$ = MÑr_BW.dat5$ + Bewertungssumme.kvertrag
             MÑr_Pkt.dat5$ = MÑr_Pkt.dat5$ + Einheiten.kvertrag
           CASE 4
             Apr_Anz.dat5$ = Apr_Anz.dat5$ + 1
             Apr_BW.dat5$ = Apr_BW.dat5$ + Bewertungssumme.kvertrag
             Apr_Pkt.dat5$ = Apr_Pkt.dat5$ + Einheiten.kvertrag
           CASE 5
             Mai_Anz.dat5$ = Mai_Anz.dat5$ + 1
             Mai_BW.dat5$ = Mai_BW.dat5$ + Bewertungssumme.kvertrag
             Mai_Pkt.dat5$ = Mai_Pkt.dat5$ + Einheiten.kvertrag
           CASE 6
             Jun_Anz.dat5$ = Jun_Anz.dat5$ + 1
             Jun_BW.dat5$ = Jun_BW.dat5$ + Bewertungssumme.kvertrag
             Jun_Pkt.dat5$ = Jun_Pkt.dat5$ + Einheiten.kvertrag
           CASE 7
             Jul_Anz.dat5$ = Jul_Anz.dat5$ + 1
             Jul_BW.dat5$ = Jul_BW.dat5$ + Bewertungssumme.kvertrag
             Jul_Pkt.dat5$ = Jul_Pkt.dat5$ + Einheiten.kvertrag
           CASE 8
             Aug_Anz.dat5$ = Aug_Anz.dat5$ + 1
             Aug_BW.dat5$ = Aug_BW.dat5$ + Bewertungssumme.kvertrag
             Aug_Pkt.dat5$ = Aug_Pkt.dat5$ + Einheiten.kvertrag
           CASE 9
             Sep_Anz.dat5$ = Sep_Anz.dat5$ + 1
             Sep_BW.dat5$ = Sep_BW.dat5$ + Bewertungssumme.kvertrag
             Sep_Pkt.dat5$ = Sep_Pkt.dat5$ + Einheiten.kvertrag
           CASE 10
             Okt_Anz.dat5$ = Okt_Anz.dat5$ + 1
             Okt_BW.dat5$ = Okt_BW.dat5$ + Bewertungssumme.kvertrag
             Okt_Pkt.dat5$ = Okt_Pkt.dat5$ + Einheiten.kvertrag
           CASE 11
             Nov_Anz.dat5$ = Nov_Anz.dat5$ + 1
             Nov_BW.dat5$ = Nov_BW.dat5$ + Bewertungssumme.kvertrag
             Nov_Pkt.dat5$ = Nov_Pkt.dat5$ + Einheiten.kvertrag
           CASE 12
             Dez_Anz.dat5$ = Dez_Anz.dat5$ + 1
             Dez_BW.dat5$ = Dez_BW.dat5$ + Bewertungssumme.kvertrag
             Dez_Pkt.dat5$ = Dez_Pkt.dat5$ + Einheiten.kvertrag
         END SELECT 
         IF EXISTS (QCodeMAVT$,QCodeMAVT.bu$) THEN 
           SELECT FIRST FILE bu$ INDEX QCodeMAVT.bu$
           SELECT KEY QCodeMAVT$ FILE bu$ INDEX QCodeMAVT.bu$
           WHILE NOT EOF (bu$) AND QCodeMAVT.bu$ = QCodeMAVT$
             SELECT CASE mon%
               CASE 1
                 Jan_Prv.dat5$ = Jan_Prv.dat5$ + betrageu.bu$
                 Jan_SR.dat5$ = Jan_SR.dat5$ + sreu.bu$
               CASE 2
                 Feb_Prv.dat5$ = Feb_Prv.dat5$ + betrageu.bu$
                 Feb_SR.dat5$ = Feb_SR.dat5$ + sreu.bu$
               CASE 3
                 MÑr_Prv.dat5$ = MÑr_Prv.dat5$ + betrageu.bu$
                 MÑr_SR.dat5$ = MÑr_SR.dat5$ + sreu.bu$
               CASE 4
                 Apr_Prv.dat5$ = Apr_Prv.dat5$ + betrageu.bu$
                 Apr_SR.dat5$ = Apr_SR.dat5$ + sreu.bu$
               CASE 5
                 Mai_Prv.dat5$ = Mai_Prv.dat5$ + betrageu.bu$
                 Mai_SR.dat5$ = Mai_SR.dat5$ + sreu.bu$
               CASE 6
                 Jun_Prv.dat5$ = Jun_Prv.dat5$ + betrageu.bu$
                 Jun_SR.dat5$ = Jun_SR.dat5$ + sreu.bu$
               CASE 7
                 Jul_Prv.dat5$ = Jul_Prv.dat5$ + betrageu.bu$
                 Jul_SR.dat5$ = Jul_SR.dat5$ + sreu.bu$
               CASE 8
                 Aug_Prv.dat5$ = Aug_Prv.dat5$ + betrageu.bu$
                 Aug_SR.dat5$ = Aug_SR.dat5$ + sreu.bu$
               CASE 9
                 Sep_Prv.dat5$ = Sep_Prv.dat5$ + betrageu.bu$
                 Sep_SR.dat5$ = Sep_SR.dat5$ + sreu.bu$
               CASE 10
                 Okt_Prv.dat5$ = Okt_Prv.dat5$ + betrageu.bu$
                 Okt_SR.dat5$ = Okt_SR.dat5$ + sreu.bu$
               CASE 11
                 Nov_Prv.dat5$ = Nov_Prv.dat5$ + betrageu.bu$
                 Nov_SR.dat5$ = Nov_SR.dat5$ + sreu.bu$
               CASE 12
                 Dez_Prv.dat5$ = Dez_Prv.dat5$ + betrageu.bu$
                 Dez_SR.dat5$ = Dez_SR.dat5$ + sreu.bu$
             END SELECT 
             SELECT NEXT FILE bu$
           WEND 
         END IF 
         IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag = 20 OR codevstatus.kvertrag = 21 THEN 
             SELECT CASE mon%
               CASE 1
                 Jan_AnzSto.dat5$ = Jan_AnzSto.dat5$ + 1
                 Jan_PktSto.dat5$ = Jan_PktSto.dat5$ + Einheiten.kvertrag
                 Jan_BWSto.dat5$ = Jan_BWSto.dat5$ + Bewertungssumme.kvertrag
               CASE 2
                 Feb_AnzSto.dat5$ = Feb_AnzSto.dat5$ + 1
                 Feb_PktSto.dat5$ = Feb_PktSto.dat5$ + Einheiten.kvertrag
                 Feb_BWSto.dat5$ = Feb_BWSto.dat5$ + Bewertungssumme.kvertrag
               CASE 3
                 MÑr_AnzSto.dat5$ = MÑr_AnzSto.dat5$ + 1
                 MÑr_PktSto.dat5$ = MÑr_PktSto.dat5$ + Einheiten.kvertrag
                 MÑr_BWSto.dat5$ = MÑr_BWSto.dat5$ + Bewertungssumme.kvertrag
               CASE 4
                 Apr_AnzSto.dat5$ = Apr_AnzSto.dat5$ + 1
                 Apr_PktSto.dat5$ = Apr_PktSto.dat5$ + Einheiten.kvertrag
                 Apr_BWSto.dat5$ = Apr_BWSto.dat5$ + Bewertungssumme.kvertrag
               CASE 5
                 Mai_AnzSto.dat5$ = Mai_AnzSto.dat5$ + 1
                 Mai_PktSto.dat5$ = Mai_PktSto.dat5$ + Einheiten.kvertrag
                 Mai_BWSto.dat5$ = Mai_BWSto.dat5$ + Bewertungssumme.kvertrag
               CASE 6
                 Jun_AnzSto.dat5$ = Jun_AnzSto.dat5$ + 1
                 Jun_PktSto.dat5$ = Jun_PktSto.dat5$ + Einheiten.kvertrag
                 Jun_BWSto.dat5$ = Jun_BWSto.dat5$ + Bewertungssumme.kvertrag
               CASE 7
                 Jul_AnzSto.dat5$ = Jul_AnzSto.dat5$ + 1
                 Jul_PktSto.dat5$ = Jul_PktSto.dat5$ + Einheiten.kvertrag
                 Jul_BWSto.dat5$ = Jul_BWSto.dat5$ + Bewertungssumme.kvertrag
               CASE 8
                 Aug_AnzSto.dat5$ = Aug_AnzSto.dat5$ + 1
                 Aug_PktSto.dat5$ = Aug_PktSto.dat5$ + Einheiten.kvertrag
                 Aug_BWSto.dat5$ = Aug_BWSto.dat5$ + Bewertungssumme.kvertrag
               CASE 9
                 Sep_AnzSto.dat5$ = Sep_AnzSto.dat5$ + 1
                 Sep_PktSto.dat5$ = Sep_PktSto.dat5$ + Einheiten.kvertrag
                 Sep_BWSto.dat5$ = Sep_BWSto.dat5$ + Bewertungssumme.kvertrag
               CASE 10
                 Okt_AnzSto.dat5$ = Okt_AnzSto.dat5$ + 1
                 Okt_PktSto.dat5$ = Okt_PktSto.dat5$ + Einheiten.kvertrag
                 Okt_BWSto.dat5$ = Okt_BWSto.dat5$ + Bewertungssumme.kvertrag
               CASE 11
                 Nov_AnzSto.dat5$ = Nov_AnzSto.dat5$ + 1
                 Nov_PktSto.dat5$ = Nov_PktSto.dat5$ + Einheiten.kvertrag
                 Nov_BWSto.dat5$ = Nov_BWSto.dat5$ + Bewertungssumme.kvertrag
               CASE 12
                 Dez_AnzSto.dat5$ = Dez_AnzSto.dat5$ + 1
                 Dez_PktSto.dat5$ = Dez_PktSto.dat5$ + Einheiten.kvertrag
                 Dez_BWSto.dat5$ = Dez_BWSto.dat5$ + Bewertungssumme.kvertrag
             END SELECT 
 
         END IF 
         STORE FILE dat5$
       END IF 
       REM 55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
     END IF 
     FILE "kvertrag"
     SELECT NEXT FILE "KVERTRAG"
   WEND 
 NEXT i%
 
 REM CALL Fehler("EXCEL - EXPORT","")
 ON ERROR GOTO ErrorHandler
anfxlmo230420064: 
 IF xls1$ = "j" OR xls2$ = "j" OR xls3$ = "j" OR xls4$ = "j" OR xls5$ = "j" THEN req% = 1
 IF req% = 1 THEN 
  xx% = 0
  xy% = 0
  IF xls1$ = "j" THEN xx% = xx% + 1
  IF xls2$ = "j" THEN xx% = xx% + 1
  IF xls3$ = "j" THEN xx% = xx% + 1
  IF xls4$ = "j" THEN xx% = xx% + 1
  IF xls5$ = "j" THEN xx% = xx% + 1
   MOUSE OFF 
  IF xls1$ = "j" THEN 
   xy% = xy% + 1
   SET STATUS "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
   IF EXISTS (GMACodeDir$ + "0sufp1mo.xls") THEN 
     DELETE GMACodeDir$ + "0sufp1mo.xls"
   END IF 
   FILE "sufp1mo":REM                                       Combo: Current File
   REM                                                    Menu:  FieldSelection
   REM OPEN FIELDS Agentur,Agenturno,Anzahl,Punkte,Bewertung,Provision,SR,SPGruppe,AnzStorno,PunkteSto,BWSto 
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM        ExportFile
   Superbase.Converters.SBF.SourceFile = "sufp1mo"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = GMACodeDir$ + "0sufp1mo.XLS"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
   WAIT FOR 3
   REQUEST "Erzeugung der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"0sufp1mo.XLS",2
  END IF 
  IF xls2$ = "j" THEN 
   xy% = xy% + 1
   SET STATUS "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
   IF EXISTS (GMACodeDir$ + "0sufp2mo.xls") THEN 
     DELETE GMACodeDir$ + "0sufp2mo.xls"
   END IF 
   FILE "sufp2mo":REM                                       Combo: Current File
   REM                                                    Menu:  FieldSelection
   REM OPEN FIELDS Agentur,Agenturno,Anzahl,Punkte,Bewertung,Provision,SR,SPGruppe,AnzStorno,PunkteSto,BWSto 
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM        ExportFile
   Superbase.Converters.SBF.SourceFile = "sufp2mo"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = GMACodeDir$ + "0sufp2mo.XLS"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
   WAIT FOR 3
   REQUEST "Erzeugung der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"0sufp2mo.XLS",2
  END IF 
  IF xls3$ = "j" THEN 
   xy% = xy% + 1
   SET STATUS "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
   IF EXISTS (GMACodeDir$ + "0sufp3mo.xls") THEN 
     DELETE GMACodeDir$ + "0sufp3mo.xls"
   END IF 
   FILE "sufp3mo":REM                                       Combo: Current File
   REM                                                    Menu:  FieldSelection
   REM OPEN FIELDS Agentur,Agenturno,Anzahl,Punkte,Bewertung,Provision,SR,SPGruppe,AnzStorno,PunkteSto,BWSto 
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM        ExportFile
   Superbase.Converters.SBF.SourceFile = "sufp3mo"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = GMACodeDir$ + "0sufp3mo.XLS"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
   WAIT FOR 3
   REQUEST "Erzeugung der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"0sufp3mo.XLS",2
  END IF 
  IF xls4$ = "j" THEN 
   xy% = xy% + 1
   SET STATUS "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
   IF EXISTS (GMACodeDir$ + "0sufp4mo.xls") THEN 
     DELETE GMACodeDir$ + "0sufp4mo.xls"
   END IF 
   FILE "sufp4mo":REM                                       Combo: Current File
   REM                                                    Menu:  FieldSelection
   REM OPEN FIELDS Agentur,Agenturno,Anzahl,Punkte,Bewertung,Provision,SR,SPGruppe,AnzStorno,PunkteSto,BWSto 
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM        ExportFile
   Superbase.Converters.SBF.SourceFile = "sufp4mo"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = GMACodeDir$ + "0sufp4mo.XLS"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
   WAIT FOR 3
   REQUEST "Erzeugung der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"0sufp4mo.XLS",2
  END IF 
  IF xls5$ = "j" THEN 
   xy% = xy% + 1
   SET STATUS "Ausgabe der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
   IF EXISTS (GMACodeDir$ + "0sufp5mo.xls") THEN 
     DELETE GMACodeDir$ + "0sufp5mo.xls"
   END IF 
   FILE "sufp5mo":REM                                       Combo: Current File
   REM                                                    Menu:  FieldSelection
   REM OPEN FIELDS Agentur,Agenturno,Anzahl,Punkte,Bewertung,Provision,SR,SPGruppe,AnzStorno,PunkteSto,BWSto 
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM        ExportFile
   Superbase.Converters.SBF.SourceFile = "sufp5mo"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = GMACodeDir$ + "0sufp5mo.XLS"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
   WAIT FOR 3
   REQUEST "Erzeugung der MS EXCEL-Listen " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"0sufp5mo.XLS",2
  END IF 
   ON ERROR GOTO ErrorHandler
   IF xls1$ = "j" OR xls2$ = "j" OR xls3$ = "j" OR xls4$ = "j" OR xls5$ = "j" THEN 
     CALL Fehler("Export nach MS Excel ist beendet!","Die Dateien wurden in " + GMACodeDir$ + " gespeichert!")
   END IF 
 END IF 
 IF xls1$ = "j" OR xls2$ = "j" OR xls3$ = "j" OR xls4$ = "j" OR xls5$ = "j" THEN 
   REQUEST "Mîchten Sie die erzeugten MS EXCEL Dateien îffnen?","",130,req%
   IF req% = 1 THEN 
     IF xls1$ = "j" THEN 
       a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "0sufp1mo.XLS","","",1)
       WAIT FOR 2
     END IF 
     IF xls2$ = "j" THEN 
       a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "0sufp2mo.XLS","","",1)
       WAIT FOR 2
     END IF 
     IF xls3$ = "j" THEN 
       a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "0sufp3mo.XLS","","",1)
       WAIT FOR 2
     END IF 
     IF xls4$ = "j" THEN 
       a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "0sufp4mo.XLS","","",1)
       WAIT FOR 2
     END IF 
     IF xls5$ = "j" THEN 
       a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "0sufp5mo.XLS","","",1)
       WAIT FOR 2
     END IF 
   ELSE 
     CALL Fehler("Sie finden die ezeugten MS EXCEL-Dateien im Verzeichnis " + GMACodeDir$,"0sufp1mo.XLS, 0sufp2mo.XLS, 0sufp3mo.XLS, 0sufp4mo.XLS, 0sufp5mo.XLS")
   END IF 
 END IF 
noex4070220061: 
 ON ERROR GOTO ErrorHandler
 REM Hier Aufruf zum Listendruck
 REM CALL Fehler("Listendruck ist noch nicht implementiert!","")
 MOUSE OFF 
  IF EXISTS (GMACodeDir$ + dat1$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat1$ + ";paris"
 END IF 
 IF EXISTS (GMACodeDir$ + dat2$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat2$ + ";paris"
 END IF 
 IF EXISTS (GMACodeDir$ + dat3$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat3$ + ";paris"
 END IF 
 IF EXISTS (GMACodeDir$ + dat4$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat4$ + ";paris"
 END IF 
 IF EXISTS (GMACodeDir$ + dat5$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat5$ + ";paris"
 END IF 


  xx% = 0
  xy% = 0
  IF xlsd1$ = "j" THEN xx% = xx% + 1
  IF xlsd2$ = "j" THEN xx% = xx% + 1
  IF xlsd3$ = "j" THEN xx% = xx% + 1
  IF xlsd4$ = "j" THEN xx% = xx% + 1
  IF xlsd5$ = "j" THEN xx% = xx% + 1

 IF xlsd1$ = "j" THEN 
     xy% = xy% + 1
     SET STATUS "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
     REQUEST "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"",2
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "sufpdru.sbf") THEN 
     IF OPEN ("sufpdru") THEN CLOSE FILE "sufpdru"
     DELETE GMACodeDir$ + "sufpdru.*"
   END IF 
   REORGANIZE FILE dat1$ TO GMACodeDir$ + "sufpdru.sbf"
   REM CALL Fehler("Reorg " + dat1$,"nach " + GMACodeDir$ + "sufpdru.sbf")
   WAIT FOR 2
   CALL SDRUsuf("SDRU1")
 END IF 

 IF xlsd2$ = "j" THEN 
     xy% = xy% + 1
     SET STATUS "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
     REQUEST "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"",2
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "sufpdru.sbf") THEN 
     IF OPEN ("sufpdru") THEN CLOSE FILE "sufpdru"
     DELETE GMACodeDir$ + "sufpdru.*"
   END IF 
   REORGANIZE FILE dat2$ TO GMACodeDir$ + "sufpdru.sbf"
   WAIT FOR 2
   CALL SDRUsuf("SDRU2")
 END IF 

 IF xlsd3$ = "j" THEN 
     xy% = xy% + 1
     SET STATUS "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
     REQUEST "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"",2
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "sufpdru.sbf") THEN 
     IF OPEN ("sufpdru") THEN CLOSE FILE "sufpdru"
     DELETE GMACodeDir$ + "sufpdru.*"
   END IF 
   REORGANIZE FILE dat3$ TO GMACodeDir$ + "sufpdru.sbf"
   WAIT FOR 2
   CALL SDRUsuf("SDRU3")
 END IF 

 IF xlsd4$ = "j" THEN 
     xy% = xy% + 1
     SET STATUS "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
     REQUEST "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"",2
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "sufpdru.sbf") THEN 
     IF OPEN ("sufpdru") THEN CLOSE FILE "sufpdru"
     DELETE GMACodeDir$ + "sufpdru.*"
   END IF 
   REORGANIZE FILE dat4$ TO GMACodeDir$ + "sufpdru.sbf"
   WAIT FOR 2
   CALL SDRUsuf("SDRU4")
 END IF 

 IF xlsd5$ = "j" THEN 
     xy% = xy% + 1
     SET STATUS "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99")
     REQUEST "Ausgabe der Drucklisten " + STR$ (xy%,"99") + " von " + STR$ (xx%,"99"),"",2
   MOUSE OFF 
   IF EXISTS (GMACodeDir$ + "sufpdru.sbf") THEN 
     IF OPEN ("sufpdru") THEN CLOSE FILE "sufpdru"
     DELETE GMACodeDir$ + "sufpdru.*"
   END IF 
   REORGANIZE FILE dat5$ TO GMACodeDir$ + "sufpdru.sbf"
   WAIT FOR 2
   CALL SDRUsuf("SDRU5")
 END IF 
 REQUEST "Ende der Berichtsausgabe","",2
eSUFP1070220061: 
 MOUSE ON 
 DIRECTORY _netpath$
 MOUSE ON 
 END SUB 
 


SUB SDRUsuf(dat1$)
  ON ERROR GOTO ErrorHandler
  jahr$ = ReadConfig$("PROVIS","SUFPJahr")
  inde$ = ReadConfig$("PROVIS","SUFPindex")
  d$ = "SUFPDRU"
 SELECT CASE UCASE$ (dat1$)
   CASE "SDRU1"
     tex1$ = "öbersicht nach Spartengruppen von: " + jahr$ + " (als Datum wurde verwendet: " + inde$ + ")"
     ord1$ = "SPGruppe.SUFPDRU"
   CASE "SDRU2"
     tex1$ = "öbersicht nach Vermittler von: " + jahr$ + " (als Datum wurde verwendet: " + inde$ + ")"
     ord1$ = "Agentur.SUFPDRU"
   CASE "SDRU3"
     tex1$ = "öbersicht nach Sparten von: " + jahr$ + " (als Datum wurde verwendet: " + inde$ + ")"
     ord1$ = "SParte.SUFPDRU"
   CASE "SDRU4"
     tex1$ = "öbersicht nach Gesellschaften von: " + jahr$ + " (als Datum wurde verwendet: " + inde$ + ")"
     ord1$ = "Gesellschaft.SUFPDRU"
   CASE "SDRU5"
     tex1$ = "öbersicht nach Produkten von: " + jahr$ + " (als Datum wurde verwendet: " + inde$ + ")"
     ord1$ = "Gesspa.SUFPDRU"
 END SELECT 
 FILE "SUFPDRU"
 INDEX ord1$$
 SELECT FIRST 
 CALL PRep(dat1$)
 REPORT ON Jan_Anz.d$ AS "sJan_Anz%",Feb_Anz.d$ AS "sFeb_Anz%",MÑr_Anz.d$ AS "sMÑr_Anz%",Apr_Anz.d$ AS "sApr_Anz%",Mai_Anz.d$ AS "sMai_Anz%",Jun_Anz.d$ AS "sJun_Anz%",Jul_Anz.d$ AS "sJul_Anz%"
 REPORT ON Aug_Anz.d$ AS "sAug_Anz%",Sep_Anz.d$ AS "sSep_Anz%",Okt_Anz.d$ AS "sOkt_Anz%",Nov_Anz.d$ AS "sNov_Anz%",Dez_Anz.d$ AS "sDez_Anz%",Jan_BW.d$ AS "sJan_BW%",Feb_BW.d$ AS "sFeb_BW%",MÑr_BW.d$ AS "sMÑr_BW%"
 REPORT ON Apr_BW.d$ AS "sApr_BW%",Mai_BW.d$ AS "sMai_BW%",Jun_BW.d$ AS "sJun_BW%",Jul_BW.d$ AS "sJul_BW%",Aug_BW.d$ AS "sAug_BW%",Sep_BW.d$ AS "sSep_BW%",Okt_BW.d$ AS "sOkt_BW%",Nov_BW.d$ AS "sNov_BW%"
 REPORT ON Dez_BW.d$ AS "sDez_BW%",Jan_Pkt.d$ AS "sJan_Pkt%",Feb_Pkt.d$ AS "sFeb_Pkt%",MÑr_Pkt.d$ AS "sMÑr_Pkt%",Apr_Pkt.d$ AS "sApr_Pkt%",Mai_Pkt.d$ AS "sMai_Pkt%",Jun_Pkt.d$ AS "sJun_Pkt%",Jul_Pkt.d$ AS "sJul_Pkt%"
 REPORT ON Aug_Pkt.d$ AS "sAug_Pkt%",Sep_Pkt.d$ AS "sSep_Pkt%",Okt_Pkt.d$ AS "sOkt_Pkt%",Nov_Pkt.d$ AS "sNov_Pkt%",Dez_Pkt.d$ AS "sDez_Pkt%",Jan_Prv.d$ AS "sJan_Prv%",Feb_Prv.d$ AS "sFeb_Prv%"
 REPORT ON MÑr_Prv.d$ AS "sMÑr_Prv%",Apr_Prv.d$ AS "sApr_Prv%",Mai_Prv.d$ AS "sMai_Prv%",Jun_Prv.d$ AS "sJun_Prv%",Jul_Prv.d$ AS "sJul_Prv%",Aug_Prv.d$ AS "sAug_Prv%",Sep_Prv.d$ AS "sSep_Prv%"
 REPORT ON Okt_Prv.d$ AS "sOkt_Prv%",Nov_Prv.d$ AS "sNov_Prv%",Dez_Prv.d$ AS "sDez_Prv%",Jan_SR.d$ AS "sJan_SR%",Feb_SR.d$ AS "sFeb_SR%",MÑr_SR.d$ AS "sMÑr_SR%",Apr_SR.d$ AS "sApr_SR%",Mai_SR.d$ AS "sMai_SR%"
 REPORT ON Jun_SR.d$ AS "sJun_SR%",Jul_SR.d$ AS "sJul_SR%",Aug_SR.d$ AS "sAug_SR%",Sep_SR.d$ AS "sSep_SR%",Okt_SR.d$ AS "sOkt_SR%",Nov_SR.d$ AS "sNov_SR%",Dez_SR.d$ AS "sDez_SR%",Jan_AnzSto.d$ AS "sJan_AnzSto%"
 REPORT ON Feb_AnzSto.d$ AS "sFeb_AnzSto%",MÑr_AnzSto.d$ AS "sMÑr_AnzSto%",Apr_AnzSto.d$ AS "sApr_AnzSto%",Mai_AnzSto.d$ AS "sMai_AnzSto%",Jun_AnzSto.d$ AS "sJun_AnzSto%",Jul_AnzSto.d$ AS "sJul_AnzSto%"
 REPORT ON Aug_AnzSto.d$ AS "sAug_AnzSto%",Sep_AnzSto.d$ AS "sSep_AnzSto%",Okt_AnzSto.d$ AS "sOkt_AnzSto%",Nov_AnzSto.d$ AS "sNov_AnzSto%",Dez_AnzSto.d$ AS "sDez_AnzSto%",Jan_PktSto.d$ AS "sJan_PktSto%"
 REPORT ON Feb_PktSto.d$ AS "sFeb_PktSto%",MÑr_PktSto.d$ AS "sMÑr_PktSto%",Apr_PktSto.d$ AS "sApr_PktSto%",Mai_PktSto.d$ AS "sMai_PktSto%",Jun_PktSto.d$ AS "sJun_PktSto%",Jul_PktSto.d$ AS "sJul_PktSto%"
 REPORT ON Aug_PktSto.d$ AS "sAug_PktSto%",Sep_PktSto.d$ AS "sSep_PktSto%",Okt_PktSto.d$ AS "sOkt_PktSto%",Nov_PktSto.d$ AS "sNov_PktSto%",Dez_PktSto.d$ AS "sDez_PktSto%",Jan_BWSto.d$ AS "sJan_BWSto%"
 REPORT ON Feb_BWSto.d$ AS "sFeb_BWSto%",MÑr_BWSto.d$ AS "sMÑr_BWSto%",Apr_BWSto.d$ AS "sApr_BWSto%",Mai_BWSto.d$ AS "sMai_BWSto%",Jun_BWSto.d$ AS "sJun_BWSto%",Jul_BWSto.d$ AS "sJul_BWSto%",Aug_BWSto.d$ AS "sAug_BWSto%"
 REPORT ON Sep_BWSto.d$ AS "sSep_BWSto%",Okt_BWSto.d$ AS "sOkt_BWSto%",Nov_BWSto.d$ AS "sNov_BWSto%",Dez_BWSto.d$ AS "sDez_BWSto%",sumAnz% AS "ssumAnz%",sumBW% AS "ssumBW%",SumPkt% AS "sSumPkt%",SumPrv% AS "sSumPrv%",SumSR% AS "sSumSR%"
 REPORT ON SumAnzSto% AS "sSumAnzSto%",SumPktSto% AS "sSumPktSto%",SumBWSto% AS "sSumBWSto%"
 BEFORE REPORT 
     SET REPORT PAGE "H_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 AFTER REPORT 
     SET REPORT PAGE "F_REPORT"
     OUTPUT REPORT PAGE 
 END REPORT 
 
 HEADING 
     SET REPORT PAGE "H_PAGE"
     OUTPUT REPORT PAGE 
 END HEADING 
 Header$ = tex1$
 AFTER SELECT 
     SET REPORT PAGE "F_SELECT"
     OUTPUT REPORT PAGE 
 END SELECT 
 ON ERROR GOTO ErrorHandler
 SET QUERY OFF 
 SET QUERY LOCK OFF 
 SET FIRST PAGE HEADING OFF 
 SELECT ;
     ORDER REPORT ord1$$
     TO ASK 
 END SELECT 
 END SUB 
 

 


 REM alle Dokumente verschlÅsseln
 REM 0 verschlÅssel
 REM 1 entschlÅsseln

SUB DokschuAlle(art%)
   IF NOT OPEN ("DOKMA") THEN CALL DFile(2,"OFFICE\DOKMA" + _fpw$)
   IF NOT OPEN ("DOKGE") THEN CALL DFile(2,"OFFICE\DOKGE" + _fpw$)
   IF NOT OPEN ("DOKKV") THEN CALL DFile(2,"OFFICE\DOKKV" + _fpw$)
   IF NOT OPEN ("DOKUMENT") THEN CALL DFile(2,"OFFICE\DOKUMENT" + _fpw$)
   SELECT FIRST FILE "stamm"
   IF art% = 0 THEN 
     REQUEST "Soll jetzt alle Dokumente geschÅtzt werden?","",135,req%
   ELSE 
     REQUEST "Sollen jetzt alle Dokumente entschlÅsselt werden?","",135,req%
   END IF 
   IF req% <> 1 THEN GOTO e050420063
   FOR i% = 1 TO 4
     SELECT CASE i%
     CASE 1
       GDokDat$ = "DOKKV"
     CASE 2
       GDokDat$ = "DOKGE"
     CASE 3
       GDokDat$ = "DOKMA"
     CASE 4
       GDokDat$ = "DOKUMENT"
     END SELECT 
     FILE GDokDat$
     INDEX codedok.GDokDat$
     IF RECCOUNT (Gdokdat$) > 0 THEN 
       SELECT FIRST LOCK FILE GDokDat$ INDEX codedok.GDokDat$
     ELSE 
       GOTO e050420062
     END IF 
     j% = RECCOUNT (Gdokdat$)
     k% = 0
     zeitstart% = NOW 
     WHILE NOT EOF (GDokDat$)
       MOUSE OFF 
       codedok% = codedok.GDokDat$
       k% = k% + 1
       SET STATUS STR$ (k%,",99999999") + "/" + STR$ (j%,",99999999") + "   " + GDokDat$
       codedok% = codedok.GDokDat$
       IF art% = 0 THEN 
         IF dokpass.GDokDat$ = "" THEN 
           SELECT FIRST FILE "Stamm"
           passw$ = DokPass.stamm
           passw1$ = ""
           IF passw$ = "" THEN 
             CALL Fehler("Es wurde kein Passwort hinterlegt!","Bitte tragen Sie in Einstellungen->Firmenstammdaten->Dokumentenpasswort ein Passwort ein!")
             GOTO endpw180120061
           END IF 
           IF dokpass1.GDokDat$ = "" THEN 
             REM REQUEST "Soll das Dokument jetzt geschÅtzt werden?","",135,req%
             req% = 1
             IF req% = 1 THEN 
               passw1$ = ""
               CALL EncryptDoks(codedok%,1,passw$,passw1$)
             END IF 
           END IF 
         END IF 
       ELSE 
         IF art% = 1 THEN 
           CALL DecryptDoks(codedok%,"",1)
         END IF 
       END IF 
       FILE GDokDat$
       INDEX codedok.GDokdat$
       SELECT KEY codedok% FILE GDokDat$ INDEX codedok.GDokDat$
       SELECT NEXT LOCK FILE GDokDat$ INDEX codedok.GDokDat$
       IF codedok.GDokDat$ = codedok% THEN 
         GOTO e050420062
       END IF 
     WEND 
e050420062: 
   NEXT i%
   zeitende% = NOW 
   zdiff$ = TIME$ (zeitende% - zeitstart%,"hh:mm:ss")
   MOUSE ON 
   IF art% = 0 THEN 
     CALL Fehler("Es wurden alle Dokumente verschlÅsselt","Dauer: " + zdiff$)
   ELSE 
     CALL Fehler("Es wurden alle Dokumente entschlÅsselt","Dauer: " + zdiff$)
   END IF 
e050420063: 
 MOUSE ON 
 END SUB 
 


 REM AFTER Eintrittsalter.KVERTRAG:CALL TestEintrA()
SUB TestEintrA()
   IF Eintrittsalter.KVERTRAG < 1 OR Eintrittsalter.KVERTRAG > 99 THEN 
     CALL Fehler("Das Eintrittsalter mu· grî·er NULL und kleiner 99 Jahre sein","Bitte korrigieren Sie den Wert!")

     REM ENTER Eintrittsalter.KVERTRAG,0
   END IF 
 END SUB 





 REM *********************************************************************************
 REM                             Vermittler DETAILDATEN
 REM *********************************************************************************
 
 
SUB MADetail()
 maske$ = "MADETAIL"
 MAADRUB% = 0
 _formend% = 0
 WHILE _formend% = 0
   IF FORM <> maske$ THEN 
     SET HEADING title$ + " - Vermittler Detaildaten"
     IF EXISTS (GPrjForm$ + maske$ + ".sbv") THEN 
       OPEN FORM GPrjForm$ + maske$ PAGE 1
     ELSE 
       OPEN FORM GPrjForm$ + maske$ PAGE 1
     END IF 
     SET f = Superbase.Form
     SET STATUS "Vermittler Detaildaten"
     MOUSE OFF 
     MOUSE OFF 
     GAppName$ = _netpath$ + "DOC\adressen.pdf"
   END IF 
   CALL MADRIntro()
   CALL MADRUpdate()
   CALL MNProgramm()
   IF GAgentDetail$ = "TRUE" THEN 
     f.intabr.visible = - 1
     f.intabr.enabled = - 1
     f.s3.visible = - 1
     f.s3.enabled = - 1
     f.s4.visible = - 1
     f.s4.enabled = - 1
     f.s5.visible = - 1
     f.s5.enabled = - 1
   ELSE 
     f.intabr.visible = 0
     f.intabr.enabled = 0
     f.s3.visible = 0
     f.s3.enabled = 0
     f.s4.visible = 0
     f.s4.enabled = 0
     f.s5.visible = 0
     f.s5.enabled = 0
     FORM 
   END IF 
   MAADRUB% = 0
   FORM 
   MENU ON 
 
   WAIT MOUSE OR KEY OR MENU OR FOR 600
   GET k$
   IF k$ = CHR$ (27) THEN 
     IF PAGE = 1 THEN _formend% = 1
     IF PAGE > 1 THEN FORM 1
   END IF 
   SELECT CASE MADRsub%
   CASE 132
     dfeld$ = "DSchufa.maadr"
     IF NOT disabled%("MAADRBEARB") THEN 
       codema% = codema.maadr
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dfeld$$ = ""
       STORE FILE "maadr"
     END IF 
   CASE 131
     dfeld$ = "dpsa.maadr"
     IF NOT disabled%("MAADRBEARB") THEN 
       codema% = codema.maadr
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dfeld$$ = ""
       STORE FILE "maadr"
     END IF 
   CASE 130
     dfeld$ = "davad.maadr"
     IF NOT disabled%("MAADRBEARB") THEN 
       codema% = codema.maadr
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dfeld$$ = ""
       STORE FILE "maadr"
     END IF 
   CASE 129
     dfeld$ = "dpol.maadr"
     IF NOT disabled%("MAADRBEARB") THEN 
       codema% = codema.maadr
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dfeld$$ = ""
       STORE FILE "maadr"
     END IF 
   CASE 128
     dfeld$ = "dleblauf.maadr"
     IF NOT disabled%("MAADRBEARB") THEN 
       codema% = codema.maadr
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dfeld$$ = ""
       STORE FILE "maadr"
     END IF 
   CASE 127
     dfeld$ = "DGEW.maadr"
     IF NOT disabled%("MAADRBEARB") THEN 
       codema% = codema.maadr
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dfeld$$ = ""
       STORE FILE "maadr"
     END IF 
   CASE 126
     dfeld$ = "DGWA.maadr"
     IF NOT disabled%("MAADRBEARB") THEN 
       codema% = codema.maadr
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dfeld$$ = ""
       STORE FILE "maadr"
     END IF 
   CASE 125
     dfeld$ = "dhauptber.maadr"
     IF NOT disabled%("MAADRBEARB") THEN 
       codema% = codema.maadr
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dfeld$$ = ""
       STORE FILE "maadr"
     END IF 
   CASE 124
     dfeld$ = "dhnot.maadr"
     IF NOT disabled%("MAADRBEARB") THEN 
       codema% = codema.maadr
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dfeld$$ = ""
       STORE FILE "maadr"
     END IF 
   CASE 123
     dfeld$ = "dbernot.maadr"
     IF NOT disabled%("MAADRBEARB") THEN 
       codema% = codema.maadr
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dfeld$$ = ""
       STORE FILE "maadr"
     END IF 
   CASE 122
     dfeld$ = "dbwb.maadr"
     IF NOT disabled%("MAADRBEARB") THEN 
       codema% = codema.maadr
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dfeld$$ = ""
       STORE FILE "maadr"
     END IF 
   CASE 121
     dfeld$ = "D34C.maadr"
     IF NOT disabled%("MAADRBEARB") THEN 
       codema% = codema.maadr
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dfeld$$ = ""
       STORE FILE "maadr"
     END IF 
   CASE 120
     REM Lebenslauf mit Lichtbild
     codema% = codema.maadr
     dfeld$ = "DLeblauf.maadr"
     IF LEFT$ (dfeld$$,1) = "\" THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dd$ = UCASE$ (dfeld$$)
       pfad$ = MID$ ( UCASE$ (_netpath$),3)
       l1% = 0
       l1% = LEN (pfad$)
       pos% = 0
       pos% = INSTR (dd$,pfad$)
       IF pos% > 0 THEN 
         dateiname$ = MID$ (dd$,pos% + l1%)
         REM CALL Fehler(dateiname$,dd$)
         dfeld$$ = dateiname$
         ok% = 1
       ELSE 
         t1% = INSTR (4,dd$,"\")
         zw1$ = MID$ (dd$,t1%)
         dfeld$$ = zw1$
         ok% = 1
       END IF 
       IF ok% = 1 THEN 
         IF LEFT$ (dfeld$$,1) = "\" THEN dfeld$$ = MID$ (dfeld$$,2)
         IF RIGHT$ (dfeld$$,1) = "\" THEN 
           l% = LEN (dfeld$$)
           dfeld$$ = LEFT$ (dfeld$$,l% - 1)
         END IF 
         STORE FILE "maadr"
       END IF 
     END IF 
     CALL MADRDok(codema%,"DLeblauf.maadr")
     MADRsub% = 0
   CASE 1
     IF NOT disabled%("MAADRKONDUEBERSICHT") THEN 
       IF nachname.maadr <> "<ohne Zuordnung>" THEN 
         IF NOT disabled%("KONDITIONVIEW") THEN 
           cuma% = CodeMA.maadr
           SELECT FORM KEY codema% FILE "maadr" INDEX codema.maadr
           CALL GEKONDA()
         END IF 
       ELSE 
         CALL Fehler ("FÅr die Agentur <ohne Zuordnung> kînnen keine Konditionen erfa·t werden!","")
       END IF 
     END IF 
     MOUSE OFF 
     CALL MADRUpdate()
     MADRsub% = 0
   CASE 2
     REM 251196 Test CALL VVPEUniRep(0,codema.maadr,0,0,0,0,0,0,1, - 1)
     IF NOT disabled%("MAADRVERTRUEBERSICHT") THEN 
       maab% = CodeMA.maadr
       CALL VertrUniRep(0,codema.maadr,0,0,0,0,0,0,1, - 1,tarif%)
       SELECT FORM KEY maab% FILE "maadr" INDEX codema.maadr
       REM CALL LIST6()
       CALL MADRUpdate()
     END IF 
     MADRsub% = 0
   CASE 3
     maab% = CodeMA.maadr
     IF bearb11$ = "j" THEN 
       FOR i% = 0 TO tfoundadr%
         IF AdrFound$(i%) <> "" AND VAL ( RIGHT$ (Adrfound$(i%),6)) = adrfound% THEN 
           prompt% = i%
         END IF 
       NEXT i%
       LAuswahl1$(0) = LAuswahl$
       AdrFound$ = LAuswahl$
       CREATE DIALOG "ADRSTICHW",0,0,250,260,"Fehlerliste","MS Sans Serif",8
       ADD DIALOG "ADRSTICHW",7,5,6,240,225,2,2,AdrFound$,Lauswahl1$,AdrFound$(prompt%)
       ADD DIALOG "ADRSTICHW",1,43,242,55,16,1,"&Bearbeiten",1,1
       ADD DIALOG "ADRSTICHW",1,103,242,55,16,0,"&Abbrechen",0,0
       DIALOG "ADRSTICHW",req5%
       MOUSE ON 
       REMOVE DIALOG "ADRSTICHW"
       IF req5% = 1 THEN 
         LAuswahl$ = LAuswahl1$(0)
         maab% = VAL ( RIGHT$ (LAuswahl$,6))
         adrfound% = codema%
         bearb11$ = "j"
         SELECT FORM KEY maab% FILE "maadr" INDEX codema.maadr
         FORM 
       END IF 
     ELSE 
       codema1ab% = codema.maadr
       a$ = "alle Mitarbeiter ohne Nachnamen+Vornamen, Mitteilung fÅr kein VorgÑnger od. keine Kondition, Mitteilung aller Mitarbeiter deren VorgÑnger nicht mehr existiert(dort wird dann der VorgÑnger auf <ohne Zurdnung>gesetzt)!"
       CALL Fehler("Folgende Schritte werden durchgefÅhrt: Lîschen aller Konditionen fÅr die kein Mitarbeiter oder keine Gesellschaft und Sparte existiert",a$)
       REQUEST "Start PrÅfung"
       MOUSE OFF 
       FILE "gekond"
       INDEX codema.gekond
       SELECT FIRST 
       SET STATUS "PrÅfung auf Konditionen, fÅr die kein Mitarbeiter existiert"
       REMOVE FROM FILE "gekond" WHERE codema.gekond < 1
       SET STATUS "PrÅfung auf Konditionen, fÅr die kein Produkt existiert"
       REMOVE FROM FILE "gekond" WHERE codege.gekond < 1 AND codeva.gekond < 1
       SELECT FIRST 
       FILE "MAADR"
       REMOVE FROM FILE "maadr" WHERE codema.maadr < 1
       SET STATUS "PrÅfung auf Mitarbeiter ohne Nachname und Vorname"
       REMOVE FROM FILE "maadr" WHERE nachname.maadr = "" AND vorname.maadr = ""
       INDEX nachname.maadr
       SELECT FIRST LOCK 
       REDIM AdrFound$(3 * RECCOUNT ("maadr"))
       a% = 0
       found1% = 0
       
       WHILE NOT EOF ("maadr")
         codema1% = codema.maadr
         codemaold% = codema.maadr
         IF vorgÑnger.maadr < 1 THEN 
           AdrFound$(a%) = "KEIN VORGéNGER DEFINIERT    - " + Nachname.maadr + "," + vorname.maadr + "," + Agenturnr.maadr + SPACE$ (120) + STR$ (codema,"000000")
           a% = a% + 1
         END IF 
         IF NOT EXISTS (codema1%,codema.gekond) THEN 
           AdrFound$(a%) = "keine Konditionen definiert - " + Nachname.maadr + "," + vorname.maadr + "," + Agenturnr.maadr + SPACE$ (120) + STR$ (codema,"000000")
           a% = a% + 1
         END IF 
         IF NOT EXISTS (vorgÑnger.maadr,codema.maadr) AND vorgÑnger.maadr > 0 THEN 
           AdrFound$(a%) = "VORGéNGER gelîscht    - " + Nachname.maadr + "," + vorname.maadr + "," + Agenturnr.maadr + SPACE$ (120) + STR$ (codema,"000000")
           a% = a% + 1
           vorgÑnger.maadr = 0
           STORE FILE "maadr"
           UNLOCK CURRENT FILE "maadr"
         END IF 
         SET STATUS "PrÅfe " + nachname.maadr + ", " + vorname.maadr
       SELECT NEXT LOCK 
       WEND 
       tfoundadr% = a%
       AdrFound$(a%) = ""
       SET STATUS ""
       REQUEST "Ende der PrÅfung"
       MOUSE ON 
       IF a% > 0 THEN 
         bearb11$ = "n"
         LAuswahl$ = AdrFound$(0)
         LAuswahl1$(0) = LAuswahl$
         CREATE DIALOG "ADRSTICHW",0,0,250,260,"Fehlerliste","MS Sans Serif",8
         ADD DIALOG "ADRSTICHW",7,5,6,240,230,2,2,AdrFound$,Lauswahl1$,AdrFound$(0)
         ADD DIALOG "ADRSTICHW",1,43,242,55,16,1,"&Bearbeiten",1,1
         ADD DIALOG "ADRSTICHW",1,103,242,55,16,0,"&Abbrechen",0,0
         DIALOG "ADRSTICHW",req5%
         MOUSE ON 
         REMOVE DIALOG "ADRSTICHW"
         IF req5% = 1 THEN 
           LAuswahl$ = LAuswahl1$(0)
           codema% = VAL ( RIGHT$ (LAuswahl$,6))
           maab% = codema%
           adrfound% = codema%
           bearb11$ = "j"
           SELECT FORM KEY codema% FILE "maadr" INDEX codema.maadr
           FORM 
         END IF 
       ELSE 
         CALL Fehler("Keine Fehler gefunden!","")
       END IF 
       SELECT FORM KEY codema1ab% FILE "maadr" INDEX codema.maadr
     END IF 
     SELECT FORM KEY maab% FILE "maadr" INDEX codema.maadr
     MADRsub% = 0
     CALL MADRUpdate()
   CASE 4
     IF NOT disabled%("MAADRKONDEINRICHTEN") THEN 
       IF nachname.maadr <> "<ohne Zuordnung>" THEN 
         maab% = codema.maadr
         IF vorgÑnger.maadr > 0 THEN 
           maab% = codema.maadr
           CALL VORKONDUebern()
           SELECT FORM KEY maab% FILE "maadr" INDEX codema.maadr
           cuko% = 0
         ELSE 
           CALL Fehler("Geben Sie bitte erst einen VorgÑnger an!","")
         END IF 
         SELECT FORM KEY maab% FILE "maadr" INDEX codema.maadr
       ELSE 
         CALL Fehler ("FÅr die Agentur <ohne Zuordnung> kînnen keine Konditionen Åbernommen werden!","")
       END IF 
       MADRsub% = 0
       CALL MADRUpdate()
     END IF 
     MADRsub% = 0
 
   CASE 5
     IF NOT disabled%("MAADRKONDEINRICHTEN") THEN 
       IF nachname.maadr <> "<ohne Zuordnung>" THEN 
         maab% = codema.maadr
         IF vorgÑnger.maadr > 0 THEN 
           CALL GEKONDUebern()
           cuko% = 0
         ELSE 
           CALL Fehler("Geben Sie bitte erst einen VorgÑnger an!","")
         END IF 
         SELECT FORM KEY maab% FILE "maadr" INDEX codema.maadr
       ELSE 
         CALL Fehler ("FÅr die Agentur <ohne Zuordnung> kînnen keine Konditionen Åbernommen werden!","")
       END IF 
       MADRsub% = 0
       CALL MADRUpdate()
     END IF 
     MADRsub% = 0
   CASE 6
     REM VorgÑnger auswÑhlen
     IF ag$ <> "j" THEN 
       IF codema.maadr > 0 THEN 
         IF NOT disabled%("MAADRSTRUBEARB") THEN 
           maab% = codema.maadr
           CALL VorgNeu(codema.maadr)
           IF GASP% THEN CALL ReadHiera()
           'CALL Vorgaenger()
           'CALL StruAll()
           MADRsub% = 0
           SELECT KEY maab% FILE "maadr" INDEX codema.maadr
           CALL MADRUpdate()
         END IF 
       ELSE 
         CALL Fehler("FÅr diesen Mitarbeiter kînnen Sie keinen VorgÑnger erfassen!","")
       END IF 
     ELSE 
       CALL Fehler("Diese Funktion steht unter der Agenturvariante nicht zur VerfÅgung","")
     END IF 
     MADRsub% = 0
   CASE 7
     IF NOT disabled%("MAADRLIST") THEN 
       codema% = codema.maadr
       IF codema% > 0 THEN 
         CALL StruDruck(codema%)
         SELECT KEY codema% FILE "maadr" INDEX codema.maadr
         MADRsub% = 0
         ON ERROR GOTO we020520021
         IF GASP% THEN CALL ReadHiera()
we020520021: 
         ON ERROR GOTO ErrorHandler
         CALL MADRUpdate()
       ELSE 
         CALL Fehler("FÅr den Vermittler <ohne Zuordnung> kann ein solcher Ausdruck nicht vorgenommen werden! Bitte selektieren Sie Åber den Button <Suchen>","den/die jenige(n) Vermittler/Firma fÅr den/die der Ausdruck der Strukturen erfolgen soll.")
       END IF 
     END IF 
     MADRsub% = 0
   CASE 8
     REM Provisionen drucken
     IF NOT disabled%("MAADRKTODRU") THEN 
       codema% = codema.maadr
       CALL ProvMADruck(codema%)
       SELECT KEY codema% FILE "maadr" INDEX codema.maadr
       MADRsub% = 0
       CALL MADRUpdate()
     END IF 
     MADRsub% = 0
   CASE 9
     REM Provisionen verrechnen
     IF NOT disabled%("MAADRKTOVERRECH") THEN 
       codema% = codema.maadr
       CALL MAKtoVerrech()
       SELECT KEY codema% FILE "maadr" INDEX codema.maadr
       MADRsub% = 0
       CALL MADRUpdate()
     END IF 
     MADRsub% = 0
   CASE 10
     REM Agenturgruppe zuweisen
     IF NOT disabled%("MAADRAGGRUPPE") THEN 
       codema% = codema.maadr
       CALL MaGruppe1Stich()
       MADRsub% = 0
       SELECT KEY codema% FILE "maadr" INDEX codema.maadr
       CALL MADRUpdate()
     END IF 
     MADRsub% = 0
   CASE 11
     REM schufadokument
     codema% = codema.maadr
     dfeld$ = "dschufa.maadr"
     IF LEFT$ (dfeld$$,1) = "\" THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dd$ = UCASE$ (dfeld$$)
       pfad$ = MID$ ( UCASE$ (_netpath$),3)
       l1% = 0
       l1% = LEN (pfad$)
       pos% = 0
       pos% = INSTR (dd$,pfad$)
       IF pos% > 0 THEN 
         dateiname$ = MID$ (dd$,pos% + l1%)
         REM CALL Fehler(dateiname$,dd$)
         dfeld$$ = dateiname$
         ok% = 1
       ELSE 
         t1% = INSTR (4,dd$,"\")
         zw1$ = MID$ (dd$,t1%)
         dfeld$$ = zw1$
         ok% = 1
       END IF 
       IF ok% = 1 THEN 
         IF LEFT$ (dfeld$$,1) = "\" THEN dfeld$$ = MID$ (dfeld$$,2)
         IF RIGHT$ (dfeld$$,1) = "\" THEN 
           l% = LEN (dfeld$$)
           dfeld$$ = LEFT$ (dfeld$$,l% - 1)
         END IF 
         STORE FILE "maadr"
       END IF 
     END IF 
     CALL MADRDok(codema%,"dschufa.maadr")
     MADRsub% = 0
   CASE 12
     REM dpsa
     codema% = codema.maadr
     dfeld$ = "dpsa.maadr"
     IF LEFT$ (dfeld$$,1) = "\" THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dd$ = UCASE$ (dfeld$$)
       pfad$ = MID$ ( UCASE$ (_netpath$),3)
       l1% = 0
       l1% = LEN (pfad$)
       pos% = 0
       pos% = INSTR (dd$,pfad$)
       IF pos% > 0 THEN 
         dateiname$ = MID$ (dd$,pos% + l1%)
         REM CALL Fehler(dateiname$,dd$)
         dfeld$$ = dateiname$
         ok% = 1
       ELSE 
         t1% = INSTR (4,dd$,"\")
         zw1$ = MID$ (dd$,t1%)
         dfeld$$ = zw1$
         ok% = 1
       END IF 
       IF ok% = 1 THEN 
         IF LEFT$ (dfeld$$,1) = "\" THEN dfeld$$ = MID$ (dfeld$$,2)
         IF RIGHT$ (dfeld$$,1) = "\" THEN 
           l% = LEN (dfeld$$)
           dfeld$$ = LEFT$ (dfeld$$,l% - 1)
         END IF 
         STORE FILE "maadr"
       END IF 
     END IF 
 
     CALL MADRDok(codema%,"dpsa.maadr")
     MADRsub% = 0
   CASE 13
     codema% = codema.maadr
     dfeld$ = "davad.maadr"
     IF LEFT$ (dfeld$$,1) = "\" THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dd$ = UCASE$ (dfeld$$)
       pfad$ = MID$ ( UCASE$ (_netpath$),3)
       l1% = 0
       l1% = LEN (pfad$)
       pos% = 0
       pos% = INSTR (dd$,pfad$)
       IF pos% > 0 THEN 
         dateiname$ = MID$ (dd$,pos% + l1%)
         REM CALL Fehler(dateiname$,dd$)
         dfeld$$ = dateiname$
         ok% = 1
       ELSE 
         t1% = INSTR (4,dd$,"\")
         zw1$ = MID$ (dd$,t1%)
         dfeld$$ = zw1$
         ok% = 1
       END IF 
       IF ok% = 1 THEN 
         IF LEFT$ (dfeld$$,1) = "\" THEN dfeld$$ = MID$ (dfeld$$,2)
         IF RIGHT$ (dfeld$$,1) = "\" THEN 
           l% = LEN (dfeld$$)
           dfeld$$ = LEFT$ (dfeld$$,l% - 1)
         END IF 
         STORE FILE "maadr"
       END IF 
     END IF 
 
     CALL MADRDok(codema%,"davad.maadr")
     MADRsub% = 0
   CASE 14
     codema% = codema.maadr
     dfeld$ = "dpol.maadr"
     IF LEFT$ (dfeld$$,1) = "\" THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dd$ = UCASE$ (dfeld$$)
       pfad$ = MID$ ( UCASE$ (_netpath$),3)
       l1% = 0
       l1% = LEN (pfad$)
       pos% = 0
       pos% = INSTR (dd$,pfad$)
       IF pos% > 0 THEN 
         dateiname$ = MID$ (dd$,pos% + l1%)
         REM CALL Fehler(dateiname$,dd$)
         dfeld$$ = dateiname$
         ok% = 1
       ELSE 
         t1% = INSTR (4,dd$,"\")
         zw1$ = MID$ (dd$,t1%)
         dfeld$$ = zw1$
         ok% = 1
       END IF 
       IF ok% = 1 THEN 
         IF LEFT$ (dfeld$$,1) = "\" THEN dfeld$$ = MID$ (dfeld$$,2)
         IF RIGHT$ (dfeld$$,1) = "\" THEN 
           l% = LEN (dfeld$$)
           dfeld$$ = LEFT$ (dfeld$$,l% - 1)
         END IF 
         STORE FILE "maadr"
       END IF 
     END IF 
 
     CALL MADRDok(codema%,"dpol.maadr")
     MADRsub% = 0
   CASE 15
     codema% = codema.maadr
     dfeld$ = "dgew.maadr"
     IF LEFT$ (dfeld$$,1) = "\" THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dd$ = UCASE$ (dfeld$$)
       pfad$ = MID$ ( UCASE$ (_netpath$),3)
       l1% = 0
       l1% = LEN (pfad$)
       pos% = 0
       pos% = INSTR (dd$,pfad$)
       IF pos% > 0 THEN 
         dateiname$ = MID$ (dd$,pos% + l1%)
         REM CALL Fehler(dateiname$,dd$)
         dfeld$$ = dateiname$
         ok% = 1
       ELSE 
         t1% = INSTR (4,dd$,"\")
         zw1$ = MID$ (dd$,t1%)
         dfeld$$ = zw1$
         ok% = 1
       END IF 
       IF ok% = 1 THEN 
         IF LEFT$ (dfeld$$,1) = "\" THEN dfeld$$ = MID$ (dfeld$$,2)
         IF RIGHT$ (dfeld$$,1) = "\" THEN 
           l% = LEN (dfeld$$)
           dfeld$$ = LEFT$ (dfeld$$,l% - 1)
         END IF 
         STORE FILE "maadr"
       END IF 
     END IF 
 
     CALL MADRDok(codema%,"dgew.maadr")
     MADRsub% = 0
   CASE 16
     codema% = codema.maadr
     dfeld$ = "dgwa.maadr"
     IF LEFT$ (dfeld$$,1) = "\" THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dd$ = UCASE$ (dfeld$$)
       pfad$ = MID$ ( UCASE$ (_netpath$),3)
       l1% = 0
       l1% = LEN (pfad$)
       pos% = 0
       pos% = INSTR (dd$,pfad$)
       IF pos% > 0 THEN 
         dateiname$ = MID$ (dd$,pos% + l1%)
         REM CALL Fehler(dateiname$,dd$)
         dfeld$$ = dateiname$
         ok% = 1
       ELSE 
         t1% = INSTR (4,dd$,"\")
         zw1$ = MID$ (dd$,t1%)
         dfeld$$ = zw1$
         ok% = 1
       END IF 
       IF ok% = 1 THEN 
         IF LEFT$ (dfeld$$,1) = "\" THEN dfeld$$ = MID$ (dfeld$$,2)
         IF RIGHT$ (dfeld$$,1) = "\" THEN 
           l% = LEN (dfeld$$)
           dfeld$$ = LEFT$ (dfeld$$,l% - 1)
         END IF 
         STORE FILE "maadr"
       END IF 
     END IF 
 
     CALL MADRDok(codema%,"dgwa.maadr")
     MADRsub% = 0
   CASE 17
     codema% = codema.maadr
     dfeld$ = "dhauptber.maadr"
     IF LEFT$ (dfeld$$,1) = "\" THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dd$ = UCASE$ (dfeld$$)
       pfad$ = MID$ ( UCASE$ (_netpath$),3)
       l1% = 0
       l1% = LEN (pfad$)
       pos% = 0
       pos% = INSTR (dd$,pfad$)
       IF pos% > 0 THEN 
         dateiname$ = MID$ (dd$,pos% + l1%)
         REM CALL Fehler(dateiname$,dd$)
         dfeld$$ = dateiname$
         ok% = 1
       ELSE 
         t1% = INSTR (4,dd$,"\")
         zw1$ = MID$ (dd$,t1%)
         dfeld$$ = zw1$
         ok% = 1
       END IF 
       IF ok% = 1 THEN 
         IF LEFT$ (dfeld$$,1) = "\" THEN dfeld$$ = MID$ (dfeld$$,2)
         IF RIGHT$ (dfeld$$,1) = "\" THEN 
           l% = LEN (dfeld$$)
           dfeld$$ = LEFT$ (dfeld$$,l% - 1)
         END IF 
         STORE FILE "maadr"
       END IF 
     END IF 
 
     CALL MADRDok(codema%,"dhauptber.maadr")
     MADRsub% = 0
   CASE 18
     codema% = codema.maadr
     dfeld$ = "dhnot.maadr"
     IF LEFT$ (dfeld$$,1) = "\" THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dd$ = UCASE$ (dfeld$$)
       pfad$ = MID$ ( UCASE$ (_netpath$),3)
       l1% = 0
       l1% = LEN (pfad$)
       pos% = 0
       pos% = INSTR (dd$,pfad$)
       IF pos% > 0 THEN 
         dateiname$ = MID$ (dd$,pos% + l1%)
         REM CALL Fehler(dateiname$,dd$)
         dfeld$$ = dateiname$
         ok% = 1
       ELSE 
         t1% = INSTR (4,dd$,"\")
         zw1$ = MID$ (dd$,t1%)
         dfeld$$ = zw1$
         ok% = 1
       END IF 
       IF ok% = 1 THEN 
         IF LEFT$ (dfeld$$,1) = "\" THEN dfeld$$ = MID$ (dfeld$$,2)
         IF RIGHT$ (dfeld$$,1) = "\" THEN 
           l% = LEN (dfeld$$)
           dfeld$$ = LEFT$ (dfeld$$,l% - 1)
         END IF 
         STORE FILE "maadr"
       END IF 
     END IF 
 
     CALL MADRDok(codema%,"dhnot.maadr")
     MADRsub% = 0
   CASE 19
     codema% = codema.maadr
     dfeld$ = "dbernot.maadr"
     IF LEFT$ (dfeld$$,1) = "\" THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dd$ = UCASE$ (dfeld$$)
       pfad$ = MID$ ( UCASE$ (_netpath$),3)
       l1% = 0
       l1% = LEN (pfad$)
       pos% = 0
       pos% = INSTR (dd$,pfad$)
       IF pos% > 0 THEN 
         dateiname$ = MID$ (dd$,pos% + l1%)
         REM CALL Fehler(dateiname$,dd$)
         dfeld$$ = dateiname$
         ok% = 1
       ELSE 
         t1% = INSTR (4,dd$,"\")
         zw1$ = MID$ (dd$,t1%)
         dfeld$$ = zw1$
         ok% = 1
       END IF 
       IF ok% = 1 THEN 
         IF LEFT$ (dfeld$$,1) = "\" THEN dfeld$$ = MID$ (dfeld$$,2)
         IF RIGHT$ (dfeld$$,1) = "\" THEN 
           l% = LEN (dfeld$$)
           dfeld$$ = LEFT$ (dfeld$$,l% - 1)
         END IF 
         STORE FILE "maadr"
       END IF 
     END IF 
 
     CALL MADRDok(codema%,"dbernot.maadr")
     MADRsub% = 0
   CASE 20
     codema% = codema.maadr
     dfeld$ = "dbwb.maadr"
     IF LEFT$ (dfeld$$,1) = "\" THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dd$ = UCASE$ (dfeld$$)
       pfad$ = MID$ ( UCASE$ (_netpath$),3)
       l1% = 0
       l1% = LEN (pfad$)
       pos% = 0
       pos% = INSTR (dd$,pfad$)
       IF pos% > 0 THEN 
         dateiname$ = MID$ (dd$,pos% + l1%)
         REM CALL Fehler(dateiname$,dd$)
         dfeld$$ = dateiname$
         ok% = 1
       ELSE 
         t1% = INSTR (4,dd$,"\")
         zw1$ = MID$ (dd$,t1%)
         dfeld$$ = zw1$
         ok% = 1
       END IF 
       IF ok% = 1 THEN 
         IF LEFT$ (dfeld$$,1) = "\" THEN dfeld$$ = MID$ (dfeld$$,2)
         IF RIGHT$ (dfeld$$,1) = "\" THEN 
           l% = LEN (dfeld$$)
           dfeld$$ = LEFT$ (dfeld$$,l% - 1)
         END IF 
         STORE FILE "maadr"
       END IF 
     END IF 
 
     CALL MADRDok(codema%,"dbwb.maadr")
     MADRsub% = 0
   CASE 21
     codema% = codema.maadr
     dfeld$ = "d34c.maadr"
     IF LEFT$ (dfeld$$,1) = "\" THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
       dd$ = UCASE$ (dfeld$$)
       pfad$ = MID$ ( UCASE$ (_netpath$),3)
       l1% = 0
       l1% = LEN (pfad$)
       pos% = 0
       pos% = INSTR (dd$,pfad$)
       IF pos% > 0 THEN 
         dateiname$ = MID$ (dd$,pos% + l1%)
         REM CALL Fehler(dateiname$,dd$)
         dfeld$$ = dateiname$
         ok% = 1
       ELSE 
         t1% = INSTR (4,dd$,"\")
         zw1$ = MID$ (dd$,t1%)
         dfeld$$ = zw1$
         ok% = 1
       END IF 
       IF ok% = 1 THEN 
         IF LEFT$ (dfeld$$,1) = "\" THEN dfeld$$ = MID$ (dfeld$$,2)
         IF RIGHT$ (dfeld$$,1) = "\" THEN 
           l% = LEN (dfeld$$)
           dfeld$$ = LEFT$ (dfeld$$,l% - 1)
         END IF 
         STORE FILE "maadr"
       END IF 
     END IF 
 
     CALL MADRDok(codema%,"d34c.maadr")
     MADRsub% = 0
   CASE 22
     REM Dokumentenverwaltung
     IF codema.maadr > 0 THEN 
       codema% = codema.maadr
       GADRDat$ = "MAADR"
       GADRUni$ = "MAADR"
       GDokDat$ = "DOKMA"
       CALL ADRDokUni("codema.maadr")
     ELSE 
       CALL Fehler("Dokumente sind fÅr diesen Mitarbeiter nicht verfÅgbar!","")
     END IF 
     GADRDat$ = "ADRESSEN"
     GDokDat$ = "DOKUMENT"
     MADRsub% = 0
   CASE 23
     REM Auszahlungsschwelle bei allen Vermittlern eintragen
     codema% = codema.maadr
     ausz% = AuszahlSchw.maadr
     auszeu% = AuszahlSchwEU.maadr
     REQUEST "Wollen Sie den Betrag wirklich bei allen Vermittlern eintragen?","",130,req%
     IF req% = 1 THEN 
       REQUEST "Aktion fortsetzen?","",130,req%
       IF req% = 1 THEN 
         MOUSE OFF 
         UPDATE AuszahlSchw.maadr = ausz%:AuszahlSchwEU.maadr = auszeu%
         END UPDATE 
         MOUSE ON 
       END IF 
     END IF 
     MADRsub% = 0
     SELECT KEY codema% FILE "maadr" INDEX codema.maadr
     CALL MADRUpdate()
   CASE 24
     REM manuelle Stornoauszahlung
     codema% = codema.maadr
     ok% = - 1
     IF disabled%("MAADRBEARB") OR ag$ = "j" OR disabled%("MAADRMANSTORNO") THEN 
       ok% = 0
     END IF 
     IF nachname.maadr <> "<ohne Zuordnung>" AND ok% = - 1 THEN 
testbw1908200101: 
       buchtext$ = "manuelle Auszahlung SR"
       bDat$ = DATE$ ( TODAY ,"0d.mm.yyyy")
       srspalte$ = "j"
       CREATE DIALOG "Konto1",0,0,221,200,"Stornoreserve","MS Sans Serif",8
       ADD DIALOG "Konto1",9,6,7,24,22,2
       ADD DIALOG "Konto1",5,34,8,170,9,0,"SR-Zahlung:"
       ADD DIALOG "Konto1",4,34,14,176,5,0,""
       ADD DIALOG "Konto1",5,34,22,175,16,0,"Wenn Sie einen negativen Betrag eingeben, wird das SR Konto reduziert und"
       ADD DIALOG "Konto1",5,34,40,175,32,0,"ein Buchungssatz mit positivem Auszahlungsbetrag fÅr den Vermittler erzeugt."
       ADD DIALOG "Konto1",5,34,62,175,16,0,"Wenn Sie einen positiven Betrag eingeben, wird das SR Konto erhîht und"
       ADD DIALOG "Konto1",5,34,84,175,32,0,"ein Buchungssatz mit negativem Auszahlungsbetrag fÅr den Vermittler erzeugt."
       ADD DIALOG "Konto1",5,34,111,25,10,0,"Betrag:"
       ADD DIALOG "Konto1",6,70,111,45,11,0,0,Betrag$,10
       ADD DIALOG "Konto1",5,34,123,25,10,0,"Datum:"
       ADD DIALOG "Konto1",6,70,123,45,11,0,0,bDat$,10
       ADD DIALOG "Konto1",5,34,136,45,10,0,"Buchungstext:"
       ADD DIALOG "Konto1",6,34,147,185,11,0,0,buchtext$,60
       ADD DIALOG "Konto1",2,34,162,148,11,0,"Buchung in der SR-Spalte","j","n",srspalte$
       ADD DIALOG "Konto1",1,50,180,55,15,1,"&Weiter",1,1
       ADD DIALOG "Konto1",1,110,180,55,15,0,"&Abbruch",0,0
       DIALOG "Konto1",req%
       REMOVE DIALOG "Konto1"
       IF req% = 1 THEN 
         ON ERROR GOTO testbw1908200101
         wert% = VAL (Betrag$)
         ON ERROR GOTO ErrorHandler
         SELECT FIRST FILE "STAMM"
         SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
         ok% = - 1
         IF wert% <> 0 THEN 
           IF wert% < 0 THEN 
             REM Reduzierung sr konto, PrÅfung ob ausgezahlt werden darf
             IF StornoAb.maadr <> 0 THEN 
               IF Stornoreserve.maadr >= StornoAb.maadr THEN 
                 Stornoreserve.maadr = Stornoreserve.maadr + wert%
                 StornoreserveEU.maadr = VAL ( STR$ (Stornoreserve.maadr / umrechnung.stamm,"999999999.00"))
                 STORE FILE "maadr"
                 UNLOCK CURRENT FILE "maadr"
               ELSE 
                 REQUEST "SR-Konto ist < SR-Auszahlungsschwelle!","Trotzdem auszahlen?",130,req1%
                 IF req1% = 1 THEN 
                   Stornoreserve.maadr = Stornoreserve.maadr + wert%
                   StornoreserveEU.maadr = VAL ( STR$ (Stornoreserve.maadr / umrechnung.stamm,"999999999.00"))
 
                   STORE FILE "maadr"
                   UNLOCK CURRENT FILE "maadr"
                 ELSE 
                   ok% = 0
                 END IF 
               END IF 
             ELSE 
               REQUEST "In SR-Auszahlungsschwelle ist nichts eingetragen!","Trotzdem auszahlen?",130,req1%
               IF req1% = 1 THEN 
                 Stornoreserve.maadr = Stornoreserve.maadr + wert%
                 StornoreserveEU.maadr = VAL ( STR$ (Stornoreserve.maadr / umrechnung.stamm,"999999999.00"))
 
                 STORE FILE "maadr"
                 UNLOCK CURRENT FILE "maadr"
               ELSE 
                 ok% = 0
               END IF 
             END IF 
           ELSE 
             Stornoreserve.maadr = Stornoreserve.maadr + wert%
             StornoreserveEU.maadr = VAL ( STR$ (Stornoreserve.maadr / umrechnung.stamm,"999999999.00"))
 
             STORE FILE "maadr"
             UNLOCK CURRENT FILE "maadr"
           END IF 
         ELSE 
           ok% = 0
         END IF 
         REM ************** jetzt Buchungssatz erzeugen!! ***************************
         SELECT FIRST FILE "stamm"
         IF ok% = - 1 THEN 
           IF PrvVerfahr$ = "ZAHLUNGSEINGANG" THEN 
             CALL DFile(3,"buchung1" + _fpw$)
             SET STATUS "Buchung wird gespeichert"
             BLANK FILE "BUCHUNG1"
             CodeBU.buchung1 = SER ("buchung1",1)
             CodeMA.buchung1 = codema%
             ma% = CodeMA.buchung1
             Datum.buchung1 = bdat$
             Buchungstext.buchung1 = buchtext$
             datumz% = Datum.buchung1
             IF srspalte$ <> "j" THEN 
               REM als normale Buchung
               sr% = 0
               betr% = wert% * - 1
               Betrag.buchung1 = betr%
             ELSE 
               REM komplett in der SR-Spalte ausweisen
               sr.buchung1 = wert%
               sr% = wert%
               betr% = sr% * - 1
               Betrag.buchung1 = betr%
             END IF 
             VTCodema.buchung1 = codema%
             codew1% = codew.stamm
             Codew.buchung1 = codew.stamm
             euro1% = umrechnung.stamm
             umrechnung.buchung1 = umrechnung.stamm
             waehrung1$ = waehrung.stamm
             waehrung.buchung1 = waehrung1$
             CALL FStore("buchung1")
             zusatz% = 1
             eigen% = 1
             PSpAll$ = ""
             PSpAllSeit% = 0
             PROVSpEig$ = ""
             PSpESeit% = 0
             CALL ZentrKTO(ma%,datumz%,betr%,sr%,codew1%,euro1%,waehrung1$,PSpAll$,PSpAllSeit%,PROVSpEig$,PSpESeit%,eigen%,zusatz%)
             SELECT KEY ma% LOCK FILE "maadr" INDEX codema.maadr
             AuszahlAB.maadr = AuszahlAB.maadr + betr%
             AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / euro1%,"999999999.00"))
             AuszProvABGes.maadr = AuszProvABGes.maadr + betr%
             AuszProvABGesEU.maadr = VAL ( STR$ (AuszProvABGes.maadr / euro1%,"999999999.00"))
             zusAuszahl.maadr = zusAuszahl.maadr + betr%
             zusAuszahlEU.maadr = VAL ( STR$ (zusAuszahl.maadr / euro1%,"999999999.00"))
             aktZusB.maadr = aktZusB.maadr + betr%
             aktZusBEU.maadr = VAL ( STR$ (aktZusB.maadr / euro1%,"999999999.00"))
             STORE FILE "maadr"
             UNLOCK CURRENT FILE "maadr"
           ELSE 
             CALL DFile(3,"buchung" + _fpw$)
             SET STATUS "Buchung wird gespeichert"
             BLANK FILE "BUCHUNG"
             CodeBU.buchung = SER ("buchung",1)
             CodeMA.buchung = codema%
             ma% = CodeMA.buchung
             Datum.buchung = bdat$
             Buchungstext.buchung = buchtext$
             datumz% = Datum.buchung
             IF srspalte$ <> "j" THEN 
               REM als normale Buchung
               sr% = 0
               betr% = wert% * - 1
               Betrag.buchung = betr%
             ELSE 
               REM komplett in der SR-Spalte ausweisen
               sr.buchung = wert%
               sr% = wert%
               betr% = sr% * - 1
               Betrag.buchung = betr%
             END IF 
             VTCodema.buchung = codema%
             codew1% = codew.stamm
             Codew.buchung = codew.stamm
             euro1% = umrechnung.stamm
             umrechnung.buchung = umrechnung.stamm
             waehrung1$ = waehrung.stamm
             waehrung.buchung = waehrung1$
             CALL FStore("buchung")
             zusatz% = 1
             eigen% = 1
             PSpAll$ = ""
             PSpAllSeit% = 0
             PROVSpEig$ = ""
             PSpESeit% = 0
             CALL ZentrKTO(ma%,datumz%,betr%,sr%,codew1%,euro1%,waehrung1$,PSpAll$,PSpAllSeit%,PROVSpEig$,PSpESeit%,eigen%,zusatz%)
             SELECT KEY ma% LOCK FILE "maadr" INDEX codema.maadr
             AuszahlAB.maadr = AuszahlAB.maadr + betr%
             AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / euro1%,"999999999.00"))
             AuszProvABGes.maadr = AuszProvABGes.maadr + betr%
             AuszProvABGesEU.maadr = VAL ( STR$ (AuszProvABGes.maadr / euro1%,"999999999.00"))
             zusAuszahl.maadr = zusAuszahl.maadr + betr%
             zusAuszahlEU.maadr = VAL ( STR$ (zusAuszahl.maadr / euro1%,"999999999.00"))
             aktZusB.maadr = aktZusB.maadr + betr%
             aktZusBEU.maadr = VAL ( STR$ (aktZusB.maadr / euro1%,"999999999.00"))
             STORE FILE "maadr"
             UNLOCK CURRENT FILE "maadr"
           END IF 
         END IF 
         REM ************** Ende  Buchungssatz erzeugen!! ***************************
       END IF 
     ELSE 
       IF ag$ <> "j" THEN 
         CALL Fehler("fÅr die Agentur <ohne Zuordnung>  ist diese Funktion nicht durchfÅhrbar!","")
       ELSE 
         CALL Fehler("Diese Funktion steht unter der Agenturvariante nicht zur VerfÅgung","")
       END IF 
     END IF 
     MADRsub% = 0
     SELECT KEY codema% FILE "maadr" INDEX codema.maadr
     CALL MADRUpdate()
   CASE 25
     REM manuelle Umbuchung vom Auszahlungssperrekonto auf das Auszahlungskonto
     codema% = codema.maadr
     ok% = - 1
     IF disabled%("MAADRBEARB") THEN 
       ok% = 0
     END IF 
     IF nachname.maadr <> "<ohne Zuordnung>" AND ok% = - 1 THEN 
testbw2008200101: 
       REM buchtext$ = "manuelle Auszahlung SR"
       REM bDat$ = DATE$ ( TODAY ,"0d.mm.yyyy")
       Betrag$ = "0"
       CREATE DIALOG "Konto1",0,0,221,185,"Auszahlungssperre umbuchen","MS Sans Serif",8
       ADD DIALOG "Konto1",9,6,7,24,22,2
       ADD DIALOG "Konto1",5,34,8,170,9,0,"Auszahlungssperre:"
       ADD DIALOG "Konto1",4,34,14,176,5,0,""
       ADD DIALOG "Konto1",5,34,22,175,16,0,"Wenn Sie einen negativen Betrag eingeben, wird das Auszahlungssperre-Konto um den Betrag reduziert"
       ADD DIALOG "Konto1",5,34,40,175,32,0,"und das Auszahlungskonto um den Betrag erhîht."
       ADD DIALOG "Konto1",5,34,62,175,16,0,"Wenn Sie einen positiven Betrag eingeben, wird das Auszahlungssperre-Konto um den Betrag erhîht und"
       ADD DIALOG "Konto1",5,34,84,175,32,0,"das Auszahlungskonto um den Betrag verringert."
       ADD DIALOG "Konto1",5,34,112,25,10,0,"Betrag:"
       ADD DIALOG "Konto1",6,70,112,45,11,0,0,Betrag$,10
       REM ADD DIALOG "Konto1",5,34,123,25,10,0,"Datum:"
       REM ADD DIALOG "Konto1",6,70,123,45,11,0,0,bDat$,10
       REM ADD DIALOG "Konto1",5,34,136,45,10,0,"Buchungstext:"
       REM ADD DIALOG "Konto1",6,34,147,185,11,0,0,buchtext$,60
       ADD DIALOG "Konto1",1,50,164,55,15,1,"&Weiter",1,1
       ADD DIALOG "Konto1",1,110,164,55,15,0,"&Abbruch",0,0
       DIALOG "Konto1",req%
       REMOVE DIALOG "Konto1"
       IF req% = 1 THEN 
         ON ERROR GOTO testbw2008200101
         wert% = VAL (Betrag$)
         ON ERROR GOTO ErrorHandler
         SELECT FIRST FILE "STAMM"
         SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
         ok% = - 1
         IF wert% <> 0 THEN 
           IF wert% < 0 THEN 
             REM Reduzierung Auszahlungssperre-konto, PrÅfung ob ausgezahlt werden darf
             AuszahlAB.maadr = AuszahlAB.maadr + (wert% * - 1)
             AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / umrechnung.stamm,"999999999.00"))
             AuszahlSperKo.maadr = AuszahlSperKo.maadr + wert%
             AuszahlSperKoEu.maadr = VAL ( STR$ (AuszahlSperKo.maadr / umrechnung.stamm,"999999999.00"))
             STORE FILE "maadr"
             UNLOCK CURRENT FILE "maadr"
           ELSE 
             REM Erhîhung Auszahlungssperre-konto, PrÅfung ob ausgezahlt werden darf
             AuszahlAB.maadr = AuszahlAB.maadr + (wert% * - 1)
             AuszahlEUAB.maadr = VAL ( STR$ (AuszahlAB.maadr / umrechnung.stamm,"999999999.00"))
             AuszahlSperKo.maadr = AuszahlSperKo.maadr + wert%
             AuszahlSperKoEu.maadr = VAL ( STR$ (AuszahlSperKo.maadr / umrechnung.stamm,"999999999.00"))
             STORE FILE "maadr"
             UNLOCK CURRENT FILE "maadr"
           END IF 
         ELSE 
           ok% = 0
         END IF 
       END IF 
     ELSE 
       CALL Fehler("fÅr die Agentur <ohne Zuordnung>  ist diese Funktion nicht durchfÅhrbar!","")
     END IF 
     MADRsub% = 0
     SELECT KEY codema% FILE "maadr" INDEX codema.maadr
     CALL MADRUpdate()
   CASE 26
     REM Foerderprovisionen
     codema% = codema.maadr
     IF GAFSK$ LIKE "TRUE" THEN 
       IF nachname.maadr LIKE "<ohne*" THEN 
         CALL Fehler("FÅr diese Agentur kînnen keine zu betreuenden Agenturen erfa·t werden!","")
       ELSE 
         REM CALL MABetrKond(codema%)
         maab% = codema.maadr
         wks1% = Workstation%
         ma% = MakGetCodeMA%(ma%,Wks1%)
         MOUSE OFF 
         IF ma% > 0 THEN 
           betr$ = ""
           SELECT FIRST FILE "maadr" INDEX codema.maadr
           SELECT KEY ma% FILE "maadr" INDEX codema.maadr
           betr$ = LEFT$ ( LTRIM$ (Nachname.maadr) + "," + LTRIM$ (Vorname.maadr),61)
           SELECT FIRST FILE "maadr" INDEX codema.maadr
           SELECT KEY maab% LOCK FILE "maadr" INDEX codema.maadr
           Maklerbetreuer.maadr = betr$
           CodeMABetreu.maadr = ma%
           CALL QuickStore("maadr")
           MOUSE OFF 
         ELSE 
           REQUEST "Es wurde kein Betreuer ausgewÑhlt!","Soll <ohne Zuordnung> eingetragen werden?",130,req%
           IF req% = 1 THEN 
             MOUSE OFF 
             SELECT FIRST FILE "maadr" INDEX codema.maadr
             SELECT KEY maab% LOCK FILE "maadr" INDEX codema.maadr
             Maklerbetreuer.maadr = "<ohne Zuordnung>"
             CodeMABetreu.maadr = 0
             CALL QuickStore("maadr")
             MOUSE OFF 
           END IF 
         END IF 
         SELECT FORM KEY maab% FILE "maadr" INDEX codema.maadr
         codema% = maab%
       END IF 
     ELSE 
       IF nachname.maadr LIKE "<ohne*" THEN 
         CALL Fehler("FÅr diese Agentur kann keine Fîrderprovision erfa·t werden!","")
       ELSE 
         IF NOT disabled%("FOERKOND") THEN 
           CALL FoerdKond(codema%)
         END IF 
       END IF 
     END IF 
     
     MADRsub% = 0
     SELECT KEY codema% FILE "maadr" INDEX codema.maadr
     CALL MADRUpdate()
     MOUSE ON 
   CASE 27
     REM Titel zuweisen
     codema% = codema.maadr
     feld$ = "Titel"
     FOR i% = 1 TO 25
       feld$ = "Titel" + STR$ (i%,"00") + ".stamm"
       IF feld$$ <> "" THEN 
         Titel$(i% - 1) = STR$ (i%,"00") + " " + feld$$
       ELSE 
         i% = 26
       END IF 
     NEXT i%
     prompt$ = IstTitel.maadr
     CREATE DIALOG "PREISLIS",0,0,190,164,title$,"MS Sans Serif",8
      ADD DIALOG "PREISLIS",4,0,0,189,137,0," Auswahl Titel"
      ADD DIALOG "PREISLIS",7,5,14,139,125,2,2,Titel$,Auswahl1$,prompt$
      ADD DIALOG "PREISLIS",1,37,145,55,16,1,"&OK",1,1
      ADD DIALOG "PREISLIS",1,107,145,55,16,0,"&Abbrechen",0,0
      DIALOG "PREISLIS",req%
      REMOVE DIALOG "PREISLIS"
      IF req% = 1 THEN 
        SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
        IstTitel.maadr = MID$ (Auswahl1$(0),4)
        STORE FILE "maadr"
        UNLOCK CURRENT FILE "maadr"
      END IF 
      MADRsub% = 0
      SELECT KEY codema% FILE "maadr" INDEX codema.maadr
      CALL MADRUpdate()
   CASE 28
     REM BÅro zuweisen
     ok% = - 1
     IF disabled%("MAADRCHANGEOFF") THEN 
       ok% = 0
     END IF 
     _cuma% = codema.maadr
     IF workstation% = 0 AND ok% = - 1 THEN 
       _cuma% = codema.maadr
       REM rep% = VAL (GetWkscodema$( STR$ (_cuma%,"000000"),Workstation%))
       wsold% = Workstation.maadr
       wsneu% = SelectOffice%("BÅro-Auswahl","",1,0)
       REM CALL Fehler("","")
       IF wsneu% <> - 1 THEN 
         SELECT KEY _cuma% LOCK FILE "maadr" INDEX codema.maadr
         Workstation.maadr = wsneu%
         CALL QuickStore("maadr")
         REQUEST "BÅro wurde zugewiesen!"
         REQUEST "Nachfolgend mÅssen jetzt die Daten in den Adressen,","Terminen, Dokumenten und VertrÑgen angepa·t werden!"
         MOUSE OFF 
         CALL DFile(3,"KVERTRAG" + _fpw$)
         CALL DFile(2,"OFFICE\" + "ADRESSEN" + _fpw$)
         CALL DFile(2,"OFFICE\" + "BCKONTAK" + _fpw$)
         CALL DFile(2,"OFFICE\" + "DOKUMENT" + _fpw$)
         CALL DFile(2,"OFFICE\" + "AKQUISE" + _fpw$)
         CALL DFile(2,"OFFICE\" + "AKQUIBCK" + _fpw$)
         CALL DFile(2,"OFFICE\" + "DOKBCK" + _fpw$)
         CALL DFile(2,"OFFICE\" + "DOKMA" + _fpw$)
         CALL DFile(2,"OFFICE\" + "CONBCK" + _fpw$)
         CALL DFile(2,"OFFICE\" + "CONNECT" + _fpw$)
         CALL DFile(2,"OFFICE\" + "TELEFON" + _fpw$)
         CALL DFile(2,"OFFICE\" + "TELBCK" + _fpw$)
         j% = 1
anfanp160320021: 
         anp$ = "ADRESSEN"
         FILE anp$
         INDEX codema.anp$
         SELECT FIRST 
         IF RECCOUNT (anp$) > 0 THEN 
           SELECT KEY _cuma% LOCK FILE anp$ INDEX codema.anp$
         ELSE 
           SELECT LAST 
         END IF 
         ok% = - 1
         i% = 0
         WHILE NOT EOF (anp$) AND codema.anp$ = _cuma%
           IF codema.anp$ = _cuma% THEN 
             i% = i% + 1
             Workstation.anp$ = wsneu%
             CALL QuickStore(anp$)
             SET STATUS STR$ (i%,"999999") + " DatensÑtze in " + anp$ + " umgestellt"
             IF EXISTS (codeku.anp$,codeku.kvertrag) THEN 
               FILE "KVERTRAG"
               INDEX codeku.kvertrag
               SELECT FIRST 
               SELECT KEY codeku.anp$ LOCK FILE "kvertrag" INDEX codeku.kvertrag
               WHILE NOT EOF ("KVERTRAG") AND codeku.kvertrag = codeku.anp$
                 Workstation.kvertrag = wsneu%
                 QWoNo.kvertrag = STR$ (Workstation%,"000000") + STR$ (lfdnr.kvertrag,"000000")
                 CALL QuickStore("KVERTRAG")
                 SELECT NEXT LOCK FILE "kvertrag" INDEX codeku.kvertrag
               WEND 
             END IF 
             IF EXISTS (codeku.anp$,codeku.akquise) THEN 
               FILE "akquise"
               INDEX codeku.akquise
               SELECT FIRST 
               SELECT KEY codeku.anp$ LOCK FILE "akquise" INDEX codeku.akquise
               WHILE NOT EOF ("akquise") AND codeku.akquise = codeku.anp$
                 Workstation.akquise = wsneu%
                 CALL QuickStore("akquise")
                 SELECT NEXT LOCK FILE "akquise" INDEX codeku.akquise
               WEND 
             END IF 
             IF EXISTS (codeku.anp$,codeku.telefon) THEN 
               FILE "telefon"
               INDEX codeku.telefon
               SELECT FIRST 
               SELECT KEY codeku.anp$ LOCK FILE "telefon" INDEX codeku.telefon
               WHILE NOT EOF ("telefon") AND codeku.telefon = codeku.anp$
                 Workstation.telefon = wsneu%
                 CALL QuickStore("telefon")
                 SELECT NEXT LOCK FILE "telefon" INDEX codeku.telefon
               WEND 
             END IF 
 
             IF EXISTS (codeku.anp$,codeku.dokument) THEN 
               FILE "dokument"
               INDEX codeku.dokument
               SELECT FIRST 
               SELECT KEY codeku.anp$ LOCK FILE "dokument" INDEX codeku.dokument
               WHILE NOT EOF ("dokument") AND codeku.dokument = codeku.anp$
                 Workstation.dokument = wsneu%
                 CALL QuickStore("dokument")
                 SELECT NEXT LOCK FILE "dokument" INDEX codeku.dokument
               WEND 
             END IF 
           END IF 
           FILE anp$
           SELECT NEXT LOCK FILE anp$ INDEX codema.anp$
         WEND 
         anp$ = "DOKMA"
         FILE anp$
         INDEX codema.anp$
         SELECT FIRST 
         IF RECCOUNT (anp$) > 0 THEN 
           SELECT KEY _cuma% LOCK FILE anp$ INDEX codema.anp$
         ELSE 
           SELECT LAST 
         END IF 
         ok% = - 1
         i% = 0
         WHILE NOT EOF (anp$) AND codema.anp$ = _cuma%
           IF codema.anp$ = _cuma% THEN 
             i% = i% + 1
             Workstation.anp$ = wsneu%
             CALL QuickStore(anp$)
             SET STATUS STR$ (i%,"999999") + " DatensÑtze in " + anp$ + " umgestellt"
           END IF 
           SELECT NEXT LOCK FILE anp$ INDEX codema.anp$
         WEND 
 
         anp$ = "BCKONTAK"
         GADRDat$ = "BCKONTAK"
         GConDat$ = "CONBCK"
         GTelDat$ = "TELBCK"
         GAkquiDat$ = "AKQUIBCK"
         GDokDat$ = "DOKBCK"
         CALL DFile(2,"OFFICE\" + anp$ + _fpw$)
         FILE anp$
         INDEX codema.anp$
         SELECT FIRST 
         IF RECCOUNT (anp$) > 0 THEN 
           SELECT KEY _cuma% LOCK FILE anp$ INDEX codema.anp$
         ELSE 
           SELECT LAST 
         END IF 
         ok% = - 1
         i% = 0
         WHILE NOT EOF (anp$) AND codema.anp$ = _cuma%
           IF codema.anp$ = _cuma% THEN 
             i% = i% + 1
             Workstation.anp$ = wsneu%
             CALL QuickStore(anp$)
             SET STATUS STR$ (i%,"999999") + " DatensÑtze in " + anp$ + " umgestellt"
           END IF 
             IF EXISTS (codeku.anp$,codeku.akquibck) THEN 
               FILE "akquibck"
               INDEX codeku.akquibck
               SELECT FIRST 
               SELECT KEY codeku.anp$ LOCK FILE "akquibck" INDEX codeku.akquibck
               WHILE NOT EOF ("akquibck") AND codeku.akquibck = codeku.anp$
                 Workstation.akquibck = wsneu%
                 CALL QuickStore("akquibck")
                 SELECT NEXT LOCK FILE "akquibck" INDEX codeku.akquibck
               WEND 
             END IF 
             IF EXISTS (codeku.anp$,codeku.telbck) THEN 
               FILE "telbck"
               INDEX codeku.telbck
               SELECT FIRST 
               SELECT KEY codeku.anp$ LOCK FILE "telbck" INDEX codeku.telbck
               WHILE NOT EOF ("telbck") AND codeku.telbck = codeku.anp$
                 Workstation.telbck = wsneu%
                 CALL QuickStore("telbck")
                 SELECT NEXT LOCK FILE "telbck" INDEX codeku.telbck
               WEND 
             END IF 
 
             IF EXISTS (codeku.anp$,codeku.dokbck) THEN 
               FILE "dokbck"
               INDEX codeku.dokbck
               SELECT FIRST 
               SELECT KEY codeku.anp$ LOCK FILE "dokbck" INDEX codeku.dokbck
               WHILE NOT EOF ("dokbck") AND codeku.dokbck = codeku.anp$
                 Workstation.dokbck = wsneu%
                 CALL QuickStore("dokbck")
                 SELECT NEXT LOCK FILE "dokbck" INDEX codeku.dokbck
               WEND 
             END IF 
           FILE anp$
           SELECT NEXT LOCK FILE anp$ INDEX codema.anp$
         WEND 
 
       END IF 
     ELSE 
       CALL Fehler("Diese Funktion kann nur von der Zentale vorgenommen werden!","")
     END IF 
     GAdrDat$ = "ADRESSEN"
     GConDat$ = "CONNECT"
     GTelDat$ = "TELEFON"
     GAkquiDat$ = "AKQUISE"
     GDokDat$ = "DOKUMENT"
     MOUSE ON 
     SELECT KEY _cuma% LOCK FILE "maadr" INDEX codema.maadr
     MADRsub% = 0
     CALL MADRUpdate()
   CASE 29
     REM GDV Agenturnummer zuweisen
     codema% = codema.maadr
     IF codema% > 0 THEN 
       CALL MAGdvAgent(codema%,0,"")
       REM MAGdvAgent(codematmp%,vonwo%,Agenturnummer$)
     ELSE 
       CALL Fehler("FÅr diese Agentur kînnen keine GDV Agenturnummern erfa·t werden!","")
     END IF 
       _cuma% = codema%
     SELECT KEY _cuma% FILE "maadr" INDEX codema.maadr
     MADRsub% = 0
     CALL MADRUpdate()
   CASE 30
     REM öbertragung Vermittler in Mitarbeiterdatei
     MENU OFF 
     codema1% = codema.maadr
     ok% = - 1
     IF disabled%("MAADRBEARB") THEN 
       ok% = 0
     END IF 
     IF codema1% < 1 OR nachname.maadr LIKE "<ohne Zuordnung>" THEN 
       ok% = 0
       CALL Fehler("<ohne Zuordnung> kann nicht als Mitarbeiter eingetragen werden!","")
     END IF 
     IF ok% = - 1 THEN 
       IF NOT EXISTS (nachname.maadr,nachname.supervis) THEN 
         BLANK FILE "supervis"
         SET STATUS "Datensatz neu angelegt..."
         CodeMA% = SER ("supervis",1)
         Codema.supervis = Codema%
         Workstation.supervis = Workstation.maadr
         Nachname.supervis = Nachname.maadr
         Vorname.supervis = Vorname.maadr
         IF vorname.maadr <> "" THEN 
           Name.supervis = Vorname.maadr + " " + Nachname.maadr
         ELSE 
           Name.supervis = Nachname.maadr
         END IF 
         STORE FILE "supervis"
         UNLOCK CURRENT FILE "supervis"
         CALL Fehler("Der Vermittler wurde als Mitarbeiter eingetragen!","Bitte wechseln Sie in die Vermittlerverwaltung und legen Sie die Mitarbeiterrechte und das Passwort fest!")
       ELSE 
         SELECT FIRST FILE "Supervis" INDEX nachname.supervis
         SELECT KEY nachname.maadr FILE "Supervis" INDEX nachname.supervis
         IF vorname.supervis = Vorname.maadr THEN 
           CALL Fehler("Es ist bereits ein Mitarbeiter " + nachname.supervis + " " + vorname.supervis + " vorhanden!","")
           REQUEST "Wollen Sie trotzdem den Vermittler","als Mitarbeiter eintragen lassen?",130,req%
           IF req% = 1 THEN 
             BLANK FILE "supervis"
             SET STATUS "Datensatz neu angelegt..."
             CodeMA% = SER ("supervis",1)
             Codema.supervis = Codema%
             Workstation.supervis = Workstation.maadr
             Nachname.supervis = Nachname.maadr
             Vorname.supervis = Vorname.maadr
             IF vorname.maadr <> "" THEN 
               Name.supervis = Vorname.maadr + " " + Nachname.maadr
             ELSE 
               Name.supervis = Vorname.maadr
             END IF 
             STORE FILE "supervis"
             UNLOCK CURRENT FILE "supervis"
             CALL Fehler("Der Vermittler wurde als Mitarbeiter eingetragen!","Bitte wechseln Sie in die Vermittlerverwaltung und legen Sie die Mitarbeiterrechte und das Passwort fest!")
           END IF 
         ELSE 
           BLANK FILE "supervis"
           SET STATUS "Datensatz neu angelegt..."
           CodeMA% = SER ("supervis",1)
           Codema.supervis = Codema%
           Workstation.supervis = Workstation.maadr
           Nachname.supervis = Nachname.maadr
           Vorname.supervis = Vorname.maadr
           IF vorname.maadr <> "" THEN 
             Name.supervis = Vorname.maadr + " " + Nachname.maadr
           ELSE 
             Name.supervis = Nachname.maadr
           END IF 
           STORE FILE "supervis"
           UNLOCK CURRENT FILE "supervis"
           CALL Fehler("Der Vermittler wurde als Mitarbeiter eingetragen!","Bitte wechseln Sie in die Vermittlerverwaltung und legen Sie die Mitarbeiterrechte und das Passwort fest!")
         END IF 
       END IF 
     END IF 
     _cuma% = codema1%
     SELECT KEY _cuma% FILE "maadr" INDEX codema.maadr
     MADRsub% = 0
     CALL MADRUpdate()
   CASE 31
     IF disabled%("AGENTNOTIZ2") THEN 
     ELSE 
       f.sichern2.enabled = - 1
       FORM 2
     END IF 
     MADRsub% = 0
   CASE 32
     FORM 1
   CASE 99
     MENU OFF 
     ok% = - 1
     IF disabled%("MAADRBEARB") THEN 
       ok% = 0
     END IF 
     IF nachname.maadr <> "<ohne Zuordnung>" AND ok% = - 1 THEN 
         REDIM Agenturen$( RECCOUNT ("maadr") + 5)
         Agenturen$( RECCOUNT ("maadr") + 5) = ""
         IF RECCOUNT ("maadr") = 0 THEN CALL MADRNeu()
         GMaAnrede$ = Anrede.maadr
         GMaAnrede2$ = Anrede2.maadr
         GMaVorname$ = Vorname.maadr
         GMaVorname2$ = Vorname2.maadr
         GMaNachname$ = Nachname.maadr
         GMaNachname2$ = Nachname2.maadr
         GMaFirmaName$ = FirmaName.maadr
         GMaFirmaName2$ = FirmaName2.maadr
         GMaOrt$ = Ort.maadr
         GMaOrt2$ = Ort2.maadr
         GMaStrasse$ = Stra·e.maadr
         GMaStrasse2$ = Strasse2.maadr
         GMaPLZ$ = plz.maadr
         GMaPLZ2$ = plz2.maadr
         f.bearb2.enabled = 0
         f.sichern2.enabled = - 1
         f.abbruch2.visible = - 1
         f.abbruch2.enabled = - 1
         f.zurueck2.enabled = 0
         sei% = PAGE 
         IF PAGE = 1 THEN ENTER schufa.maadr,0
         IF PAGE = 3 THEN ENTER AKonto01.aumskto,0
         IF PAGE = 5 THEN ENTER PROVSperreEig.maadr,0
         f.bearb2.enabled = - 1
         f.sichern2.enabled = 0
         f.abbruch2.visible = 0
         f.abbruch2.enabled = 0
         f.zurueck2.enabled = - 1
         REM f.seite2.enabled = - 1
         REM CALL ButEnabled()
     ELSE 
       IF ok% = - 1 THEN CALL Fehler ("Die Agentur <ohne Zuordnung> darf und kann nicht geÑndert werden!","")
     END IF 
     MADRsub% = 0
     CALL MADRUpdate()
   CASE 100
     CALL MAADRPrev()
     CALL MADRUpdate()
     MADRsub% = 0
   CASE 101
     CALL MAADRNext()
     MADRsub% = 0
     CALL MADRUpdate()
   CASE 102
     IF gfsc% = - 1 OR GASP% <> - 1 THEN 
       CALL MASuFS24()
     ELSE 
       CALL MADRSuchen()
     END IF 
     MADRsub% = 0
     CALL MADRUpdate()
   CASE 103
     IF NOT disabled%("MAADRSERIE") THEN 
       CALL MASerie()
       MADRsub% = 0
       CALL MADRUpdate()
     END IF 
     maser% = 0
     MADRsub% = 0
   CASE 104
     IF NOT disabled%("MAADRKUEND") THEN 
       CALL MAADRKnd()
     END IF 
     MADRsub% = 0
     CALL MADRUpdate()
   CASE 105
     IF NOT disabled%("MAADRNEU") THEN 
       CALL MADRNeu()
       CALL MADRUpdate()
     ELSE 
       MADRsub% = 0
     END IF 
   CASE 106
     IF NOT disabled%("MAADRSPERRE") THEN 
       IF ag$ <> "j" THEN 
         CALL MAADRSperre()
       ELSE 
         CALL Fehler("Diese Funktion steht unter der Agenturvariante nicht zur VerfÅgung","")
       END IF 
       MADRsub% = 0
       CALL MADRUpdate()
     END IF 
     MADRsub% = 0
   CASE 107
     codema% = codema.maadr
     IF codema.maadr > 0 AND NOT disabled%("MAADRDIREKTION") THEN 
       codema% = codema.maadr
       codeagdirold% = codeagdir.maadr
 
       codeagdir% = GETDirektion%()
       IF codeagdir% <> - 1 THEN 
        IF codeagdirold% <> codeagdir% OR LTRIM$ (Agenturnr.maadr) = "" THEN 
         SELECT FIRST FILE "AGDIR" INDEX codeAGDIR.AGDIR
         SELECT KEY codeagdir% FILE "AGDIR" INDEX codeAGDIR.AGDIR
         SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
         direktion.maadr = direktion.agdir
         IF codeagdir% <> 0 THEN 
           nr$ = STR$ (nummer.agdir,"000")
         ELSE 
           nr$ = "000"
         END IF 
         IF agiteration.agdir > 0 THEN 
           agnr% = AGNummer.agdir + agiteration.agdir
         ELSE 
           agnr% = AGNummer.agdir + 1
         END IF 
         anzag% = AnzahlAGs.agdir + 1
         Agenturnr.maadr = nr$ + "." + STR$ (agnr%,"000000")
         codeagdir.maadr = codeagdir%
         CALL QuickStore("maadr")
         SELECT FIRST FILE "AGDIR" INDEX codeAGDIR.AGDIR
         SELECT KEY codeagdirold% LOCK FILE "AGDIR" INDEX codeAGDIR.AGDIR
         AnzahlAGs.agdir = AnzahlAGs.agdir - 1
         CALL QuickStore("agdir")
         SELECT FIRST FILE "AGDIR" INDEX codeAGDIR.AGDIR
         SELECT KEY codeagdir% LOCK FILE "AGDIR" INDEX codeAGDIR.AGDIR
         AGNummer.agdir = agnr%
         AnzahlAGs.agdir = anzag%
         CALL QuickStore("agdir")
        ELSE 
         SELECT FIRST FILE "AGDIR" INDEX codeAGDIR.AGDIR
         SELECT KEY codeagdir% FILE "AGDIR" INDEX codeAGDIR.AGDIR
         SELECT KEY codema% LOCK FILE "maadr" INDEX codema.maadr
         direktion.maadr = direktion.agdir
         CALL QuickStore("maadr")
        END IF 
       END IF 
     ELSE 
       IF codema% = 0 THEN CALL Fehler("Sie kînnen dem Vermittler <ohne Zuordnung> keine Direktion zuordnen!","")
     END IF 
     MADRsub% = 0
     SELECT KEY codema% FILE "maadr" INDEX codema.maadr
     CALL MADRUpdate()
     MADRsub% = 0
 
   CASE 108
     IF NOT disabled%("MAADRDETAIL") THEN 
       FORM 2
     END IF 
     MADRsub% = 0
     CALL MADRUpdate()
   CASE 109
     REM FORM 1
     _formend% = 1
     MADRsub% = 0
     CALL MADRUpdate()
   CASE 110
     IF NOT disabled%("MAADRDETAIL") THEN 
       FORM 1
     END IF 
     MADRsub% = 0
     REM CALL MADRUpdate()
   CASE 111
     REM interne Abrechnungsstammdaten MAADRDET
     IF NOT disabled%("MAADRKTOINFO") THEN 
       FORM 6
     END IF 
     MADRsub% = 0
     REM CALL MADRUpdate() 
   CASE 112
     REM Seite 3 MAADRDET
     IF NOT disabled%("MAADRKTOINFO") THEN 
       FORM 2
     END IF 
     MADRsub% = 0
     REM CALL MADRUpdate()  
   CASE 113
     REM Seite4 MAADRDET
     IF NOT disabled%("MAADRKTOINFO") THEN 
       FORM 3
     END IF 
     MADRsub% = 0
     REM CALL MADRUpdate()   
   CASE 114
     REM Seite5 MAADRDET
     IF NOT disabled%("MAADRKTOINFO") THEN 
       FORM 4
     END IF 
     MADRsub% = 0
     REM CALL MADRUpdate()   
   CASE 115
     REM Anzeige der Statistikseite
     IF NOT disabled%("MAADRSTATISTIK") THEN 
       REM FORM 5
       codema% = codema.maadr
       OPEN FORM GPrjForm$ + "STMAADR"
       CALL MNProgramm()
       SELECT KEY codema% FILE "maadr" INDEX codema.maadr
       FORM 
       _formend% = 0
       CALL ClearKBDBuffer()
       MENU ON 
       WHILE _formend% = 0
         WAIT MOUSE OR KEY 
         IF k$ = CHR$ (27) THEN _formend% = 1
       WEND 
       _formend% = 0
     END IF 
     MADRsub% = 0
   CASE 116
       codema1% = codema.maadr
       IF GASP% AND workstation% > 0 THEN 
         CALL Fehler("Diese Funktion ist fÅr externe BÅros nicht zugÑnglich!","")
       ELSE 
         REM Button Druck 
         Superbase.Dialogs.Add("ADRFilter")
         SET dlg = Superbase.Dialogs.ADRFilter
         dlg.Move(0,0,320,107)
         dlg.Caption = title$
         dlg.FontName = "MS Sans Serif"
         dlg.FontSize = 8
 
         SET control = dlg.Add("DialogFrame2","DialogFrame")
         control.Move(0,6,320,78)
         control.Caption = "Druckoptionen"
 
         SET control = dlg.Add("DialogOptionButton1","DialogOptionButton")
         control.Move(5,19,228,13)
         control.Caption = "Vermittler - Liste"
         control.Bind("opt%")
         control.ValueOn = 0
         IF NOT disabled1%("KONDITIONVIEW") THEN 
           SET control = dlg.Add("DialogOptionButton5","DialogOptionButton")
           control.Move(5,35,228,13)
           control.Caption = "aktueller Vermittler - Konditionsliste (Kurzliste)"
           control.Bind("opt%")
           control.ValueOn = 1
 
           SET control = dlg.Add("DialogOptionButton2","DialogOptionButton")
           control.Move(5,48,311,14)
           control.Caption = "aktueller Vermittler - Konditionsliste (Langliste)"
           control.Bind("opt%")
           control.ValueOn = 2
         END IF 
 
         SET control = dlg.Add("DialogOptionButton4","DialogOptionButton")
         control.Move(5,64,301,12)
         control.Caption = "aktueller Vermittler - VertragsÅbersicht"
         control.Bind("opt%")
         control.ValueOn = 3
 
         SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
         control.Move(96,89,48,15)
         control.Default = 1
         control.Caption = "&Weiter"
         control.ReturnValue = 1
 
         SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
         control.Move(148,89,48,15)
         control.Caption = "&Abbruch"
         control.ReturnValue = 0
         control.Cancel = 1
         DIALOG "ADRFilter",req%
         REMOVE DIALOG ALL 
         IF req% = 1 THEN 
           IF opt% = 0 THEN 
             REM Vermittler-Liste
             CALL MAADRLIST()
           END IF 
           IF opt% = 1 THEN 
             REM Konditionsliste aktueller Vermittler - Kurzform
             CALL KLIST()
           END IF 
           IF opt% = 2 THEN 
             REM Konditionsliste aktueller Vermittler - Langform
             CALL KLIST2()
           END IF 
           IF opt% = 3 THEN 
             REM Vertragsliste
             IF NOT disabled%("MAADRVERTRUEBERSICHT") THEN 
               maab% = CodeMA.maadr
               CALL VertrUniRep(0,codema.maadr,0,0,0,0,0,0,1, - 1,tarif%)
               SELECT FORM KEY maab% FILE "maadr" INDEX codema.maadr
               REM CALL LIST6()
               CALL MADRUpdate()
             END IF 
           END IF 
         END IF 
       END IF 
     MADRsub% = 0
     SELECT KEY codema1% FILE "maadr" INDEX codema.maadr
     CALL MADRUpdate()
     MADRsub% = 0
  END SELECT 
  MENU ON 
 WEND 
  _formend% = 0
 REM cuma% = 0
 END SUB 
 
 





 REM Export der aktuellen Adresse fÅr CalcuVita in eine XML-Ausgabedatei
 REM z.B. 
SUB ADRExpCalcuV()
  kunr% = codeku.GADRDat$
  IF disabled%("ADRCALCU") THEN END SUB 
  knr% = kunr%
  codeku1% = kunr%
  codeku$ = STR$ (knr%,"000000")
  CALL Fehler("Gibt die aktuelle Adresse in eine XML-Datei aus, die in CalcuVita weiterverarbeitet werden kann!","")
  REQUEST "Soll der Export durchgefÅhrt werden?","",130,req%
  IF req% = 1 THEN 
    IF GCalcuvDir$ <> "" AND UCASE$ (GCalcuvDir$) <> "LEER" THEN 
         IF RIGHT$ (GCalcuvDir$,1) = "\" THEN 
           lenge% = LEN (GCalcuvDir$)
           GCalcuvDir$ = LEFT$ (GCalcuvDir$,lenge% - 1)
         END IF 
         ON ERROR GOTO e150520061
         REGISTER _netpath$ + "CODieLIB.dll","_SBCreateDir","IF"
         a% = CALL ("_SBCreateDir",GScanDir$)
e150520061: 
         REGISTER CLEAR "_SBCreateDir"
         ON ERROR GOTO e150520062
         REGISTER _netpath$ + "CODieLIB.dll","_SBSetCurrentDir","IF"
         a% = CALL ("_SBSetCurrentDir",GScanDir$)
e150520062: 
         ON ERROR GOTO ErrorHandler
         REGISTER CLEAR "_SBSetCurrentDir"
         expodir$ = GCalcuvDir$ + "\"
    ELSE 
      expodir$ = GMACodeDir$ + "CalcuVit"
      expodir$ = "C:\Programme\FSR\XML-IMP"
      ON ERROR GOTO e030520061
      REM MAKE DIRECTORY expodir$
      REGISTER _netpath$ + "CODieLIB.dll","_SBCreateDir","IF"
      a% = CALL ("_SBCreateDir",GScanDir$)
      GOTO e030520062
e030520061: 
      f% = - 1
e030520062: 
      expodir$ = GMACodeDir$ + "CalcuVit\"
      expodir$ = "C:\Programme\FSR\XML-IMP\"
      ON ERROR GOTO ErrorHandler 
    END IF 
       ddatei$ = expodir$ + codeku$ + ".xml"
       a% = CALL ("_SBFileExists",ddatei$)
       IF a% = - 1 THEN 
         a% = CALL ("_SBFileDelete1",ddatei$)
       END IF 
       OPEN ddatei$ FOR OUTPUT 
       ? "<?xml version=" + CHR$ (34) + "1.0" + CHR$ (34) + " encoding=" + CHR$ (34) + "ISO-8859-1" + CHR$ (34) + "?> "
       
       ? "<XML>"
       ? "<Header>"
       ? "   <Version>1</Version>"
       ? "   <Source>Codie</Source>"
       ? "</Header>"
       ? "<Data>"
       ? "   <Person>"
         ? "    <codeku>" + STR$ (codeku.GADRDat$,"000000") + "</codeku>"
         ? "    <ANREDE>" + FN ansi(anrede.GADRDat$) + "</ANREDE>"
         ? "    <TITEL>" + FN ansi(TITEL.GADRDat$) + "</TITEL>"
         ? "    <VORNAME>" + FN ansi(vorname.GADRDat$) + "</VORNAME>"
         ? "    <NAME>" + FN ansi(nachname.GADRDat$) + "</NAME>"
         ? "    <STRASSE>" + FN ansi(Stra·e.GADRDat$) + "</STRASSE>"
         ? "    <PLZ>" + FN ansi(plz.GADRDat$) + "</PLZ>"
         ? "    <ORT>" + FN ansi(ort.GADRDat$) + "</ORT>"
 
         IF geburtstag.GADRDat$ < 1 THEN 
           ? "    <GEBDAT>" + "</GEBDAT>"
         ELSE 
           ? "    <GEBDAT>" + DATE$ (geburtstag.GADRDat$,"0d.mm.yyyy") + "</GEBDAT>"
         END IF 
         ? "    <FSTAND>" + FN ansi(Familienstand.GADRDat$) + "</FSTAND>"
         IF Geschlecht.GADRDat$ = "j" THEN 
           ? "    <GESCHLECHT>Mann" + "    </GESCHLECHT>"
         END IF 
         IF Geschlecht.GADRDat$ = "n" THEN 
           ? "    <GESCHLECHT>Frau" + "    </GESCHLECHT>"
         END IF 
         IF Geschlecht.GADRDat$ <> "j" AND Geschlecht.GADRDat$ <> "n" THEN 
           ? "    <GESCHLECHT>k.A." + "    </GESCHLECHT>"
         END IF 
         ? "    <NATION>" + FN ansi(NationalitÑt.GADRDat$) + "</NATION>"
         ? "    <BERUF>" + FN ansi(BERUF.GADRDat$) + "</BERUF>"
         ? "    <TAETIGKEIT></TAETIGKEIT>"


   REM < TELEFON > 0190 - 123 < / TELEFON > 
   REM < TELEFONBERUFLICH > 123132 < / TELEFONBERUFLICH > 
   REM < ERREICHBARKEIT > keine < / ERREICHBARKEIT > 
   REM < TELEFAX > 0123434 < / TELEFAX > 
   REM < EMAIL > abc@xyz.de < / EMAIL > 
   REM < KONTOVORNAME > Ober < / KONTOVORNAME > 
   REM < KONTONAME > Schlau < / KONTONAME > 
   REM < KTO > 12012030 < / KTO > 
   REM < BLZ > 20050050 < / BLZ > 
   REM < BANK > Zockibank < / BANK > 


         IF EXISTS (codeku1%,codeku.telefon) THEN 
           FILE "telefon"
           INDEX QcodekuTEL.telefon
           SELECT FIRST FILE "telefon" INDEX QcodekuTEL.telefon
           SELECT KEY codeku$ FILE "telefon" INDEX QcodekuTEL.telefon
           fon% = 0
           fax% = 0
           mobil% = 0
           mail% = 0
           www% = 0
           DIM Telart$(20000)
           DIM TelNum$(20000)
           a% = 0
           WHILE NOT EOF (GTelDat$) AND codeku.GTelDat$ = codeku1%
             Telart$(a%) = Art.GTelDat$
             TelNum$(a%) = Nummer.GTelDat$
             a% = a% + 1
             SELECT NEXT FILE GTelDat$
           WEND 
           FOR i% = a% - 1 TO 0 STEP - 1
             IF (Telart$(i%) LIKE "fon*" OR Telart$(i%) LIKE "*fon*") AND fon% = 0 THEN 
               ? "    <TELEFON>" + TelNum$(i%) + "</TELEFON>"
               fon% = 1
             END IF 
             IF (Telart$(i%) LIKE "fax*" OR Telart$(i%) LIKE "*fax*") AND fax% = 0 THEN 
               ? "    <TELEFAX>" + TelNum$(i%) + "</TELEFAX>"
               fax% = 1
             END IF 
             IF (Telart$(i%) LIKE "funk*" OR Telart$(i%) LIKE "*funk*" OR Telart$(i%) LIKE "hand*" OR Telart$(i%) LIKE "*hand*" OR Telart$(i%) LIKE "mobi*" OR Telart$(i%) LIKE "*mobi*") AND mobil% = 0 THEN 
               ? "    <MOBIL>" + TelNum$(i%) + "</MOBIL>"
                mobil% = 1
             END IF 
             IF (Telart$(i%) LIKE "mail*" OR Telart$(i%) LIKE "*mail*") AND mail% = 0 THEN 
               ? "    <EMAIL>" + TelNum$(i%) + "</EMAIL>"
               mail% = 1
             END IF 
           NEXT i%
           IF fon% = 0 THEN ? "    <TELEFON>" + "</TELEFON>"
           IF fax% = 0 THEN ? "    <TELEFAX>" + "</TELEFAX>"
           IF mobil% = 0 THEN ? "    <MOBIL>" + "</MOBIL>"
           IF mail% = 0 THEN ? "    <EMAIL>" + "</EMAIL>"
           REM IF www% = 0 THEN ? " <www>" + "</www>"
         ELSE 
           ? "    <TELEFON>" + "</TELEFON>"
           ? "    <TELEFAX>" + "</TELEFAX>"
           ? "    <MOBIL>" + "</MOBIL>"
           ? "    <EMAIL>" + "</EMAIL>"
         END IF 
         ? "    <KONTOART>" + FN ansi(Bank1ArtKonto.GADRDat$) + "</KONTOART>"
         ? "    <KONTONAME>" + FN ansi(Kontoinh1.GADRDat$) + "</KONTONAME>"
         ? "    <KTO>" + FN ansi(k1Konto.GADRDat$) + "</KTO>"
         ? "    <BLZ>" + FN ansi(k1blz.GADRDat$) + "</BLZ>"
         ? "    <BANK>" + FN ansi(k1bank.GADRDat$) + "</BANK>"
       
       ? "    </Person>"
       ? "  </Data>"
       ? "</XML>"
       
       
       CLOSE OUTPUT 
       CALL Fehler("Der Export wurde erfolgreich beendet!","Sie finden die Datei in: " + expodir$ + ", der Name lautet: " + codeku$ + ".xml")
  ELSE 
    CALL Fehler ("Export wurde abgebrochen","")
  END IF 
 END SUB 
 



 REM monatliche öberweisungsdatei erzeugen
SUB CreBuMaMon()
 IF PrvVerfahr$ LIKE "Zahlungseingang" THEN 
   datei$ = "Buchung1"
 ELSE 
   datei$ = "Buchung"
 END IF 
 IF NOT OPEN (datei$) THEN CALL DFile(3,datei$ + _fpw$)
 IF NOT OPEN ("maadr") THEN CALL DFile(3,"maadr" + _fpw$)
 FILE datei$
 INDEX quickcode.datei$
 FILE "maadr"
 INDEX codema.maadr
 codemaold% = codema.maadr
       CalcDatum$ = DATE$ ( TODAY ,"0d.mm.yyyy")
       vonDATUM$ = ""
       bisDATUM$ = CalcDatum$
a220520061: 
       CREATE DIALOG "STICHTAG",0,0,222,162,"Informationen fÅr die BuchungsÅbernahme","MS Sans Serif",8
       ADD DIALOG "STICHTAG",4,0,0,222,139,0,""
       ADD DIALOG "STICHTAG",9,6,9,23,24,2
       ADD DIALOG "STICHTAG",5,20,15,183,10,0,"Bitte geben Sie an, bis zu welchem Buchungsdatum"
       ADD DIALOG "STICHTAG",5,20,25,183,10,0,"die Buchungen summiert werden sollen:"
       ADD DIALOG "STICHTAG",5,20,40,182,10,0,"(ohne énderung des Datums oder Weglassen"
       ADD DIALOG "STICHTAG",5,20,50,200,10,0,"der Datumsangabe, wird das angezeigte Datum verwendet)"
       ADD DIALOG "STICHTAG",6,94,72,42,12,0,0,vonDATUM$,10
       ADD DIALOG "STICHTAG",5,30,74,58,10,0,"von Datum:"
       ADD DIALOG "STICHTAG",6,94,84,42,12,0,0,bisDATUM$,10
       ADD DIALOG "STICHTAG",5,30,86,58,10,0,"bis Datum:"
       REM ADD DIALOG "STICHTAG",6,94,96,42,12,0,0,CalcDATUM$,10
       REM ADD DIALOG "STICHTAG",5,30,98,58,10,0,"Buchungsdatum:"
       ADD DIALOG "STICHTAG",5,5,110,58,10,0,"öberweisungstext:"
       ADD DIALOG "STICHTAG",6,5,122,192,12,0,0,butxt$,54
       ADD DIALOG "STICHTAG",1,52,142,54,14,1,"&OK",1,1
       ADD DIALOG "STICHTAG",1,109,142,54,14,0,"&Abbrechen",0,0
       DIALOG "STICHTAG",req%
       REMOVE DIALOG "STICHTAG"
       IF req% <> 1 THEN 
         GOTO end220520061
       END IF 
       IF LTRIM$ (vonDatum$) = "" THEN 
         CALL Fehler("ungÅltiges von Datum","Datum darf nicht leer sein!")
         GOTO a220520061
       END IF 
       IF LTRIM$ (bisDatum$) = "" THEN 
         CALL Fehler("ungÅltiges bis Datum","Datum darf nicht leer sein!")
         GOTO a220520061
       END IF 
 MOUSE OFF 
   von% = DAYS (vonDatum$)
   bis% = DAYS (bisDatum$)
   vond$ = DATE$ (von%,"yyyymm0d")
   bisd$ = DATE$ (bis%,"yyyymm0d")
   vond1$ = DATE$ (von%,"0d.mm.yyyy")
   bisd1$ = DATE$ (bis%,"0d.mm.yyyy")
 IF NOT DateOK%(vond1$) THEN 
   CALL Fehler("ungÅltiges <von Datum>","")
   GOTO a220520061
 END IF 
 IF NOT DateOK%(bisd1$) THEN 
   CALL Fehler("ungÅltiges <bis Datum>","")
   GOTO a220520061
 END IF 
 REM CLOSE FILE "maadr"
 REM CALL DFile(3,"maadr" + _fpw$)
 FILE "maadr"
 INDEX nachname.maadr
 SELECT FIRST LOCK FILE "maadr"
 WHILE NOT EOF ("maadr")
   sumGut.maadr = 0:sumGutN.maadr = 0
   codema% = codema.maadr
   agentur$ = nachname.maadr + ", " + vorname.maadr
   summebru% = 0
   summenet% = 0
   summemwst% = 0
   sumap% = 0
   sumcourt% = 0
   sumsr% = 0
   sumpfleg% = 0
   sumdynamik% = 0
   sumvsv% = 0
   sumbetreu% = 0
   sumeinh% = 0
   SUMEigEinh% = 0
   sumkredit% = 0
   sumleads% = 0
   sumvors% = 0
   SUMstowarn% = 0
   sumBewert% = 0
   REM die Firma mu· nicht an sich selbst Åberweisen
   REM CALL Fehler(agentur$,"")
   IF vorgÑnger.maadr = codema% THEN GOTO nextma220520061

   FILE datei$
   ind$ = QuickCode.datei$
   suchanf$ = STR$ (codema%,"000000") + vond$
   INDEX QuickCode.datei$
   IF NOT EXISTS (suchanf$,QuickCode.datei$) THEN 
     REM GOTO nextma220520061
   END IF 
   SELECT FIRST FILE datei$ INDEX QuickCode.datei$
   IF RECCOUNT (datei$) > 0 THEN 
     SELECT KEY suchanf$ LOCK FILE datei$ INDEX QuickCode.datei$
   ELSE 
     SELECT LAST FILE datei$ INDEX QuickCode.datei$
   END IF 
   ok% = - 1
   WHILE NOT EOF (datei$) AND ok% = - 1
     MOUSE OFF 
     SET STATUS "Agentur: " + agentur$ + " " + Buchungstext.datei$ + " Agentur: " + Agentur.datei$
     IF datum.datei$ >= von% AND Datum.datei$ <= bis% AND codema.datei$ = codema% THEN 
       REM CALL Fehler(buchungstext.datei$ + "," + agentur.datei$, STR$ (betrag.datei$,"9999999.00"))
       brutbetr$ = STR$ (betrageu.datei$,"9999999999.00")
       netbetr$ = STR$ (nettoeu.datei$,"9999999999.00")
       mwstbetr$ = STR$ (mwstbetrageu.datei$,"9999999999.00")
       summebru% = summebru% + VAL (brutbetr$)
       summenet% = summenet% + VAL (netbetr$)
       summemwst% = summemwst% + VAL (mwstbetr$)
     ELSE 
       ok% = 0
     END IF 
     SELECT NEXT LOCK FILE datei$ INDEX QuickCode.datei$
   WEND 
nextma220520061: 
   sumGut.maadr = sumGut.maadr + summebru%
   sumGutN.maadr = sumGutN.maadr + summenet%
   ueberwtxt.maadr = butxt$
   STORE FILE "maadr"
 
   FILE "maadr"
   SELECT NEXT LOCK FILE "maadr" INDEX nachname.maadr
 WEND 

 expodir$ = GMACodeDir$ + "DTAUS"
 REM impodir$ = GMACodeDir$ + "ONLBERAT\PROTOKOL\"
 ON ERROR GOTO e230520061
 MAKE DIRECTORY expodir$
 REM ON ERROR GOTO e130620051
 REM MAKE DIRECTORY impodir$
 GOTO e230520062
e230520061: 
 f% = - 1
e230520062: 
 expodir$ = GMACodeDir$ + "DTAUS\"
 ON ERROR GOTO ErrorHandler 
 dtlist$ = expodir$ + "DT" + LEFT$ (bisd$,6) + ".xls"
 CALL Fehler("Es wird jetzt die ProvisionsÅberweisungsliste " + dtlist$ + " erstellt!","Diese kînnen Sie asnchlie·end in EasyDTA importieren und einen DTAUS Datensatz erstellen lassen!")
 IF EXISTS (dtlist$) THEN DELETE dtlist$
 MOUSE OFF 
 FILE "maadr"
 SELECT WHERE sumgut.maadr > 0
 OPEN FIELDS Vorname,Nachname,SumGut,k1Konto,K1BLZ,ueberwtxt
 Superbase.Converters.SBF.SourceFormat = "Superbase":REM Menu:  ExportFile
 Superbase.Converters.SBF.SourceFile = "MAADR"
 Superbase.Converters.SBF.Descending = 0
 Superbase.Converters.SBF.Merge = 0
 Superbase.Converters.SBF.LogErrors = 0
 Superbase.Converters.SBF.MultiResponse = 0
 Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
 Superbase.Converters.XLS.DestFile = dtlist$
 Superbase.Converters.XLS.StartRow = 2
 Superbase.Converters.XLS.StartCol = 1
 Superbase.Converters.XLS.EndRow = - 1
 Superbase.Converters.XLS.EndCol = - 1
 Superbase.Converters.XLS.UseLabels = - 1
 Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
 WAIT FOR 3
 CLOSE FIELDS 
 CALL Fehler("Die erzeugte ProvisionsÅberweisungsliste befindet sich in " + dtlist$,"")
 REQUEST "Mîchten Sie die erzeugt ProvisionsÅberweisungsliste anzeigen?","",130,req1%
 IF req1% = 1 THEN 
   a% = CALL ("ShellExecute",0,"open",dtlist$,"","",1)
 END IF 
end220520061: 
 SELECT WHERE FILE "maadr"
 SELECT FIRST FILE "maadr" INDEX codema.maadr
 SELECT KEY codemaold% FILE "maadr" INDEX codema.maadr
 END SUB 
 


 REM Investhouse AG Kundenimport
SUB InvhouKimp()
 CALL DFile(2,"0-Import\" + "K" + _fpw$)
 CALL Fehler("Investhouse AG Kundenimport","")
 i% = 0
 j% = RECCOUNT ("K")
 a$ = "adressen"
 t$ = "Telefon"
 FILE "K"
 SELECT FIRST 
 WHILE NOT EOF ("K")
   i% = i% + 1
   SET STATUS STR$ (i%,"999999") + "/" + STR$ (j%,"999999")
   FILE a$
   BLANK FILE a$
   codeku.a$ = SER (a$)
   codeku% = codeku.a$
   Kundennummer.a$ = VPN.K
   Anrede.a$ = anrede.k
   Nachname.a$ = Name.K
   Vorname.a$ = vorname.k
   Stra·e.a$ = strasse.k
   plz$ = LEFT$ ( TRIM$ (plz.k))
   lenge% = LEN (plz$)
   IF lenge% > 8 THEN 
     posit% = INSTR (plz$," ")
     plz1$ = LEFT$ (plz$,posit% - 1) + MID$ (plz$,posit% + 1)
     plz$ = plz1$
   END IF 
   plz.a$ = plz$
   ort.a$ = ort.k
   Geburtstag.a$ = geb_dat.K
   K1Bank.a$ = Bankname.k
   k1Konto$ = kto_nr_.k
   IF LEN (k1Konto$) > 17 THEN 
     k1iban.a$ = kto_nr_.k
   ELSE 
     K1Konto.a$ = kto_nr_.k
   END IF 
   k1blz.a$ = blz.k
   Land.a$ = land.k
   beruf.a = beruf.k
   notiz.a$ = "Einmaleinlage: " + Einmaleinlage.k + CHR$ (13) + CHR$ (10)
   notiz.a$ = notiz.a$ + "Bar: " + bar.k + CHR$ (13) + CHR$ (10)
   notiz.a$ = notiz.a$ + "Nominaleinlage: " + LTRIM$ ( STR$ (Nominaleinlage.k,",99999999.")) + CHR$ (13) + CHR$ (10)
   notiz.a$ = notiz.a$ + "Agio 5%: " + LTRIM$ ( STR$ (Agio_5_.k,",99999999.00")) + CHR$ (13) + CHR$ (10)
   notiz.a$ = notiz.a$ + "Vertragssumme: " + LTRIM$ ( STR$ (Vertragssumme.k,",99999999.00")) + CHR$ (13) + CHR$ (10)
   notiz.a$ = notiz.a$ + "Einzahlung: " + Einzahlung.k + CHR$ (13) + CHR$ (10)
   notiz.a$ = notiz.a$ + "Entnahmen: " + Entnahmen.k + CHR$ (13) + CHR$ (10)
   notiz.a$ = notiz.a$ + "Annahmedatum: " + DATE$ (Annahmedat.k,"0d.mm.yyyy") + CHR$ (13) + CHR$ (10)
   notiz.a$ = notiz.a$ + "AnErklÑrung: " + AnErklÑrung.k + CHR$ (13) + CHR$ (10)
   notiz.a$ = notiz.a$ + "Valutiert: " + LTRIM$ ( STR$ (Valutiert_.k,",99999999.00")) + CHR$ (13) + CHR$ (10)
   notiz.a$ = notiz.a$ + "Valutiert CHF: " + LTRIM$ ( STR$ (Valutiert_chf.k,",99999999.00")) + "  am: " + DATE$ (am.k,"0d.mm.yyyy") + CHR$ (13) + CHR$ (10)
   notiz.a$ = notiz.a$ + "provisioniert: " + provisioniert.k + "  am: " + DATE$ (am_01.k,"0d.mm.yyyy") + CHR$ (13) + CHR$ (10)
   notiz.a$ = notiz.a$ + "Vertragsnummer: " + Vertragsnummer.k + CHR$ (13) + CHR$ (10)
   notiz.a$ = notiz.a$ + "Unterschrift am: " + DATE$ (Unterschift_am.k,"0d.mm.yyyy") + CHR$ (13) + CHR$ (10)
   notiz.a$ = notiz.a$ + "ZEBestÑtigung: " + ZEBestÑtigung.k + "  am: " + DATE$ (am_02.k,"0d.mm.yyyy") + CHR$ (13) + CHR$ (10)
   notiz.a$ = notiz.a$ + "öbertragen: " + öbertragen.k + "  am: " + DATE$ (am_03.k,"0d.mm.yyyy") + CHR$ (13) + CHR$ (10)

   CALL QuickStore(a$)
   BLANK FILE t$
   codeku.t$ = codeku%
   codetel.t$ = SER (t$)
   art.t$ = "Telefon"
   nummer.t$ = Telefon.k
   fonoderfax.t$ = "n"
   kart1.t$ = "FON"
   CALL QuickStore(t$)
   FILE "K"
   SELECT NEXT FILE "K"
 WEND 
 CALL Fehler("Kundenimport Investhouse", STR$ (i%,"999999") + "/" + STR$ (j%,"999999"))
 END SUB 


 REM Investhouse AG VMDimport
SUB InvhouVMDimp()
 CALL DFile(2,"0-Import\" + "VMD" + _fpw$)
 CALL Fehler("Investhouse AG VMDimport","")
 i% = 0
 j% = RECCOUNT ("VMD")
 a$ = "maadr"
 vmd$ = "VMD"
 FILE "VMD"
 SELECT FIRST 
 WHILE NOT EOF ("VMD")
   i% = i% + 1
   SET STATUS STR$ (i%,"999999") + "/" + STR$ (j%,"999999")
   FILE a$
   BLANK FILE a$
   codema.a$ = SER (a$)
   codema% = codema.a$
   Agenturnr.a$ = av_nummer.vmd$
   Anrede.a$ = anrede.vmd$
   Nachname.a$ = Name.vmd$
   Vorname.a$ = vorname.vmd$
   IF nachname.a$ = "" THEN 
     nachname.a$ = name_AV.vmd$
   END IF 
   Stra·e.a$ = stra·e_hnr_.vmd$
   plz$ = LEFT$ ( TRIM$ (plz_ort.vmd$))
   lenge% = LEN (plz$)
   ort$ = ""
   plz1$ = ""
   IF lenge% > 0 THEN 
     posit% = INSTR (plz$," ")
     IF posit% > 0 THEN plz1$ = LEFT$ (plz$,posit% - 1)
     IF posit% > 0 THEN ort$ = MID$ (plz$,posit% + 1)
     plz.a$ = plz1$
     ort.a$ = ort$
   END IF 
   Geburtstag.a$ = geb_datum.vmd$
   K1Bank.a$ = LEFT$ (Bank.vmd$,20)
   iban.a$ = iban_kto_nr_.vmd$
   swift.a$ = bic_blz.vmd$
   maseit.a$ = Eintritt.vmd$
   email.a$ = e_mail.vmd$
   telefon1.a$ = s_.vmd$
   telefax.a$ = t_.vmd$
   notiz.a$ = "UID: " + UID_ST_Nr_.vmd$ + CHR$ (13) + CHR$ (10)
   notiz.a$ = notiz.a$ + "Prov.Kennung: " + Prov_Kennung.vmd$ + CHR$ (13) + CHR$ (10)
   IF LEN (Bank.vmd$) > 20 THEN 
     notiz.a$ = notiz.a$ + "kompletter Bankname: " + Bank.vmd$
   END IF 
   CALL QuickStore(a$)
   FILE "VMD"
   SELECT NEXT FILE "VMD"
 WEND 
 CALL Fehler("VMD Investhouse", STR$ (i%,"999999") + "/" + STR$ (j%,"999999"))
 END SUB 
 
 
 REM Investhouse AG VMDimport
SUB InvhouVMimp(vmd$)
 CALL DFile(2,"0-Import\" + vmd$ + _fpw$)
 CALL Fehler("Investhouse AG " + VMD$ + " import","")
 
 i% = 0
 j% = RECCOUNT (vmd$)
 a$ = "maadr"
 
 FILE vmd$
 SELECT FIRST 
 WHILE NOT EOF (vmd$)
   i% = i% + 1
   SET STATUS STR$ (i%,"999999") + "/" + STR$ (j%,"999999")
   FILE a$
   BLANK FILE a$
   codema.a$ = SER (a$)
   codema% = codema.a$
   Agenturnr.a$ = av_nummer.vmd$
   Anrede.a$ = anrede.vmd$
   Nachname.a$ = Name.vmd$
   Vorname.a$ = vorname.vmd$
   IF nachname.a$ = "" THEN 
     nachname.a$ = name_AV.vmd$
   END IF 
   Stra·e.a$ = stra·e_hnr_.vmd$
   plz$ = LEFT$ ( TRIM$ (plz_ort.vmd$))
   lenge% = LEN (plz$)
   ort$ = ""
   plz1$ = ""
   IF lenge% > 0 THEN 
     posit% = INSTR (plz$," ")
     IF posit% > 0 THEN plz1$ = LEFT$ (plz$,posit% - 1)
     IF posit% > 0 THEN ort$ = MID$ (plz$,posit% + 1)
     plz.a$ = plz1$
     ort.a$ = ort$
   END IF 
   Geburtstag.a$ = geb_datum.vmd$
   K1Bank.a$ = LEFT$ (Bank.vmd$,20)
   iban.a$ = iban_kto_nr_.vmd$
   swift.a$ = bic_blz.vmd$
   maseit.a$ = Eintritt.vmd$
   email.a$ = e_mail.vmd$
   telefon1.a$ = s_.vmd$
   telefax.a$ = t_.vmd$
   notiz.a$ = "UID: " + UID_ST_Nr_.vmd$ + CHR$ (13) + CHR$ (10)
   notiz.a$ = notiz.a$ + "Prov.Kennung: " + Prov_Kennung.vmd$ + CHR$ (13) + CHR$ (10)
   IF LEN (Bank.vmd$) > 20 THEN 
     notiz.a$ = notiz.a$ + "kompletter Bankname: " + Bank.vmd$
   END IF 
   CALL QuickStore(a$)
   FILE vmd$
   SELECT NEXT FILE vmd$
 WEND 
 CALL Fehler("VMD Investhouse", STR$ (i%,"999999") + "/" + STR$ (j%,"999999"))
 END SUB 
 
 
 
 REM **********************************************************************************************************
 REM *                   IDEAL Import                                                                     *
 REM **********************************************************************************************************
SUB IDEALImp()
 CALL DFile(2,"OFFICE\" + "DOKKV" + _fpw$)
 CALL DFile(2,"OFFICE\" + "DOKUMENT" + _fpw$)
 CALL DFile(2,"OFFICE\" + "ADRESSEN" + _fpw$)
 CALL DFile(2,"OFFICE\" + "AKQUISE" + _fpw$)
 CALL DFile(2,"OFFICE\" + "AKTIONEN" + _fpw$)
 CALL DFile(2,"OFFICE\" + "TELEFON" + _fpw$)
 CALL DFile(2,"OFFICE\" + "DOKUMENT" + _fpw$)
 CALL DFile(2,"OFFICE\adrstat" + _fpw$)
 CALL DFile(2,"OFFICE\adrgrup" + _fpw$)
 IF OPEN ("adrtemp") THEN 
   IF RECCOUNT ("adrtemp") > 0 THEN REMOVE FROM FILE "adrtemp"
   REM CLOSE FILE "ADRTEMP"
 ELSE 
   CALL DFile(2,"OFFICE\adrtemp" + _fpw$)
   IF RECCOUNT ("adrtemp") > 0 THEN REMOVE FROM FILE "adrtemp"
 END IF 
 CALL DFile(2,"color" + _fpw$)
 CALL DFile(2,"OFFICE\" + GConDat$ + _fpw$)
 CALL DFile(2,"OFFICE\banken" + _fpw$)
 CALL DFile(3,"STAMM" + _fpw$)
 IF _projekt$ LIKE "PROV*" OR GAufrufproj$ LIKE "PROVIS" THEN 
   IF EXISTS (_netpath$ + "PROVIS\kvertrag.sbf") THEN CALL DFile(3,"KVERTRAG" + _fpw$)
   IF EXISTS (_netpath$ + "PROVIS\vermoeg.sbf") THEN CALL DFile(3,"VERMOEG" + _fpw$)
   IF EXISTS (_netpath$ + "PROVIS\vorgang.sbf") THEN CALL DFile(3,"VORGANG" + _fpw$)
   IF EXISTS (_netpath$ + "PROVIS\maadr.sbf") THEN CALL DFile(3,"MAADR" + _fpw$)
   IF EXISTS (_netpath$ + "PROVIS\maadrag.sbf") THEN CALL DFile(3,"MAADRag" + _fpw$)
   IF EXISTS (_netpath$ + "PROVIS\kukto.sbf") THEN CALL DFile(3,"KUKTO" + _fpw$)
   IF EXISTS (_netpath$ + "office\kvhis.sbf") THEN CALL DFile(2,"OFFICE\KVHIS" + _fpw$)
   IF EXISTS (_netpath$ + "PROVIS\geadr.sbf") THEN CALL DFile(3,"geadr" + _fpw$)
   IF EXISTS (_netpath$ + "PROVIS\sparten.sbf") THEN CALL DFile(3,"sparten" + _fpw$)
   IF EXISTS (_netpath$ + "PROVIS\spgruppe.sbf") THEN CALL DFile(3,"spgruppe" + _fpw$)
   IF EXISTS (_netpath$ + "PROVIS\vpspezko.sbf") THEN CALL DFile(3,"vpspezko" + _fpw$)
   IF EXISTS (_netpath$ + "PROVIS\vprodukt.sbf") THEN CALL DFile(3,"vprodukt" + _fpw$)
 
   IF GAFSK$ LIKE "TRUE" THEN 
     IF EXISTS (_netpath$ + "PROVIS\afsksut.sbf") THEN CALL DFile(3,"AFSKSUT" + _fpw$)
   END IF 
 END IF 
 IF MAKLER$ = "TRUE" AND (_projekt$ LIKE "PROV*" OR GAufrufproj$ LIKE "PROV*") THEN 
   IF EXISTS (_netpath$ + "PROVIS\inkstamm.sbf") THEN CALL DFile(3,"INKSTAMM" + _fpw$)
 END IF 
 fehl% = 0
 pp$ = _netpath$ + "IDEAL\"
 CALL Fehler("IDEAL-Import","Es werden jetzt die XML-Importdateien aus dem Verzeichnis " + pp$ + " ausgewertet und importiert, die Sicherheitskopie der verarbeiteten Dateien befindet sich dann im Verzeichnis " + pp$ + "backup.xml\")
 REQUEST "Soll der Import gestartet werden?","",130,req%
 IF req% <> 1 THEN GOTO E020620061
 REM Start Import
 MOUSE OFF 
 cdir$ = DIRECTORY 
 DIRECTORY pp$


 REM nur zum testen
 REM GOTO w020620063

 IF EXISTS (pp$ + "ready.ini") THEN DELETE pp$ + "ready.ini"
 REM GOTO w210420053
 ON ERROR GOTO w020620062
 CALL ICreateALog()
 MOUSE OFF 
 a% = CALL ("ShellExecute",0,"open",pp$ + "IDEALImp.exe","","",1)
 WHILE NOT EXISTS (pp$ + "ready.ini")
   MOUSE OFF 
   WAIT FOR 1
 WEND 
 REM CALL Fehler("Einlesen durch IDEALImp.exe beendet!","")
 REQUEST "Einlesen durch IDEALImp.exe beendet!","",2
 GOTO w020620063
w020620062: 
 fehl% = 1
 CALL Fehler("Es ist ein Fehler aufgetreten!","Bitte prÅfen Sie ob die Datei " + pp$ + "IDEALImp.exe   vorhanden ist!")
 GOTO e020620061
w020620063: 
 ON ERROR GOTO ErrorHandler
 REM feststellen welche INI-Dateien vorhanden sind
 DIM inidat$(10000)
 
 FILLARRAY inidat$,5,"*.ini"
 b% = 0
 FOR a% = 0 TO 9999
   MOUSE OFF 
   IF inidat$(a%) LIKE "ready.ini" THEN GOTO w020620064
   IF inidat$(a%) = "" THEN 
     a% = 10000
     GOTO w020620064
   END IF 
   REM Verarbeitung der Dateien
   inid$ = inidat$(a%)
   b% = b% + 1
   inidl$ = FN lfn(inid$)
   CALL IWriteLogOk("verarbeite Datei " + inidl$)
   CALL IDEALVerarb(pp$ + inid$)
w020620064: 
 NEXT a%
 a$ = LTRIM$ ( STR$ (b%,"999999"))
 CALL Fehler ("Import IDEAL wurde beendet","Es wurden " + a$ + " VertrÑge importiert!")
 CALL IWriteLogOk("Es wurden " + a$ + " VertrÑge verarbeitet!")
 CALL ICloseALog()
E020620061: 
 Superbase.ShowLongFileNames = 0
 DIRECTORY cdir$
 END SUB 
 
SUB IDEALVerarb(inid1$)
 MOUSE OFF 
 REM <TGB> und <TM>
 REM Zukunft = TM=STD und TGB=R106
 REM Bestattungsvorsorge = TM=BEVOP und TGB=K510
 REM Sterbegeld = TM=STD und TGB=K510
 REM Pflegerent= TM=STD und TGB=P101
 
 tm$ = ReadDestiIBM$("ANTRAG","TM",inid1$)
 tgb$ = ReadDestiIBM$("ANTRAG","TGB",inid1$)
 vnr$ = ReadDestiIBM$("iposantrag","iposantragsnummer",inid1$)
 vmnr$ = ReadDestiIBM$("ANTRAG","VMNR",inid1$)
 pp$ = _netpath$ + "IDEAL\"

 datum$ = LEFT$ (ReadDestiIBM$("ANTRAG","ANTRAGSTELLUNGSDATUM",inid1$),10)
 anrede$ = ReadDestiIBM$("VN","ANREDE_TEXT",inid1$)
 
 vorname$ = ReadDestiIBM$("VN","vorname",inid1$)
 name$ = ReadDestiIBM$("VN","name",inid1$)
 REM CALL Fehler(name$,"")
 strasse$ = ReadDestiIBM$("VN","strasse",inid1$) + " " + ReadDestiIBM$("VN","Hausnummer",inid1$)
 plz$ = ReadDestiIBM$("VN","plz",inid1$)
 ort$ = ReadDestiIBM$("VN","ort",inid1$)
 gebdat$ = LEFT$ (ReadDestiIBM$("VN","GEBURTSDATUM",inid1$),10)
 nn$ = (name$ + " " + vorname$ + " " + strasse$ + " " + plz$ + " " + ort$)
 
 CALL IWriteLogOk("Adresse:< " + nn$ + ">    und Vertrag <" + vnr$ + " vom " + datum$ + "> bearbeiten")
 verarb% = 0
 IF tm$ LIKE "STD" THEN 
   IF tgb$ LIKE "R106" THEN 
     REM zukunft
         verarb% = - 1
         eingab$ = ""
         eingab2$ = "IDEAL" + vnr$
         nvt% = 0
         REM viab%=1 sorgt dafÅr, das ohne Anzeige von Dialog geprÅft wird
         viab% = 1
         REM nvt% = GetVertrag%(0)
         nvt% = GetAntrag%(0)
         viab% = 0
         IF nvt% > 0 THEN 
           REM REQUEST "Vertrag wird aktualisiert","",2
           cuvt% = nvt%
           SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
           SELECT KEY cuvt% FILE "kvertrag" INDEX lfdnr.kvertrag
           knr% = codeku.kvertrag
         END IF 
         IF nvt% = 0 THEN 
           CALL IDEALadr(inid1$)
           CALL IDEALvtneu(inid1$,"Zukunftsrente","IDEAL Zukunftsrente")
         END IF 
         IF knr% <> 0 AND cuvt% <> 0 THEN 
           REM Kunde und Vertrag vorhanden, jetzt die Spartensachen in Vertrag eintragen
           CALL IDEALADRUpd(inid1$)
           CALL IDEALZukunft(inid1$)
         END IF 
   END IF 
   IF tgb$ LIKE "K51*" THEN 
     REM sterbegeld
         verarb% = - 1
         eingab$ = ""
         eingab2$ = "IDEAL" + vnr$
         nvt% = 0
         REM viab%=1 sorgt dafÅr, das ohne Anzeige von Dialog geprÅft wird
         viab% = 1
         REM nvt% = GetVertrag%(0)
         nvt% = GetAntrag%(0)
         viab% = 0
         IF nvt% > 0 THEN 
           REQUEST "Vertrag wird aktualisiert","",2
           cuvt% = nvt%
           SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
           SELECT KEY cuvt% FILE "kvertrag" INDEX lfdnr.kvertrag
           knr% = codeku.kvertrag
         END IF 
         IF nvt% = 0 THEN 
           CALL IDEALadr(inid1$)
           CALL IDEALvtneu(inid1$,"Sterbegeld","IDEAL Sterbegeld")
         END IF 
         IF knr% <> 0 AND cuvt% <> 0 THEN 
           REM Kunde und Vertrag vorhanden, jetzt die Spartensachen in Vertrag eintragen
           CALL IDEALSterbe(inid1$)
         END IF 
   END IF 
   IF tgb$ LIKE "P10*" THEN 
     REM Pflegerente
         verarb% = - 1
         eingab$ = ""
         eingab2$ = "IDEAL" + vnr$
         nvt% = 0
         REM viab%=1 sorgt dafÅr, das ohne Anzeige von Dialog geprÅft wird
         viab% = 1
         REM nvt% = GetVertrag%(0)
         nvt% = GetAntrag%(0)
         viab% = 0
         IF nvt% > 0 THEN 
           REQUEST "Vertrag wird aktualisiert","",2
           cuvt% = nvt%
           SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
           SELECT KEY cuvt% FILE "kvertrag" INDEX lfdnr.kvertrag
           knr% = codeku.kvertrag
         END IF 
         IF nvt% = 0 THEN 
           CALL IDEALadr(inid1$)
           CALL IDEALvtneu(inid1$,"Pflegerente","IDEAL Pflegerente")
         END IF 
         IF knr% <> 0 AND cuvt% <> 0 THEN 
           REM Kunde und Vertrag vorhanden, jetzt die Spartensachen in Vertrag eintragen
           CALL IDEALPflege(inid1$)
         END IF 
   END IF 
 ELSE 
   IF tm$ LIKE "BEVOP" THEN 
     IF tgb$ LIKE "K51*" THEN 
       verarb% = - 1
       REM Bestattungsvorsorge
         eingab$ = ""
         eingab2$ = "IDEAL" + vnr$
         nvt% = 0
         REM viab%=1 sorgt dafÅr, das ohne Anzeige von Dialog geprÅft wird
         viab% = 1
         REM nvt% = GetVertrag%(0)
         nvt% = GetAntrag%(0)
         cuvt% = nvt%
         viab% = 0
         IF nvt% > 0 THEN 
           REQUEST "Vertrag wird aktualisiert","",2
           cuvt% = nvt%
           SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
           SELECT KEY cuvt% FILE "kvertrag" INDEX lfdnr.kvertrag
           knr% = codeku.kvertrag
         END IF 
         IF nvt% = 0 THEN 
           CALL IDEALadr(inid1$)
           CALL IDEALvtneu(inid1$,"Bestattungsvorsorge","IDEAL Bestattungsvors")
         END IF 
         IF knr% <> 0 AND cuvt% <> 0 THEN 
           REM Kunde und Vertrag vorhanden, jetzt die Spartensachen in Vertrag eintragen
           CALL IDEALBestatt(inid1$)
         END IF 
     END IF 
   END IF 
 END IF 
 IF verarb% <> - 1 THEN 
   CALL IWriteLogOk("NICHT AUFGENOMMEN !!!! " + vnr$ + "da Produktkennzeichnung in XML Datei falsch: TM=" + tm$ + " ; TGB=" + tgb$)
   GOTO end13060061
 END IF 
 REM CALL Fehler("Verschieben: " + FN LFN(inid1$),"")
 REM verarbeitete INI-Datei nach backup.ini verschieben
 REM jetzt vorher noch die pdf Datei in die Dokumentenverwaltung schaufeln

       pdf1$ = FN lfn(inid1$)
       lenge% = LEN (pdf1$)
       pdfq$ = MID$ (pdf1$,1,lenge% - 7) + "pdf"
       pdfquell$ = pp$ + pdfq$
       a% = CALL ("_SBFileExists",pdfquell$)
       IF a% = - 1 THEN 
         jamo$ = LEFT$ ( DATE$ ( TODAY ,"yyyymm0d"),6)
         docpath0$ = _netpath$ + "PROVIS\VERTR.DOK"
         docpath$ = "PROVIS\VERTR.DOK\" + jamo$
         docpath1$ = _netpath$ + docpath$
         IF GCodie% = - 1 THEN 
           ON ERROR GOTO w070620064
           REGISTER _netpath$ + "CODieLIB.dll","_SBCreateDir","IF"
           a% = CALL ("_SBCreateDir",docpath0$)
           a% = CALL ("_SBCreateDir",docpath1$)
           REGISTER CLEAR "_SBCreateDir"
         ELSE 
           ON ERROR GOTO w070620065
           MAKE DIRECTORY docpath0$
           MAKE DIRECTORY docpath1$
         END IF 
w070620064: 
         ON ERROR GOTO w070620065
         MAKE DIRECTORY docpath1$
w070620065: 
         ON ERROR GOTO ErrorHandler 
         
         
         ON ERROR GOTO w070620066
         MAKE DIRECTORY _netpath$ + docpath$
w070620066: 
         ON ERROR GOTO ErrorHandler
         IF RIGHT$ (docpath$,1) <> "\" THEN docpath$ = docpath$ + "\"
           REM CALL Fehler("Test " + pdfq$,"")
           textvorlage$ = pdfq$
           REM pdf in dokkv aufnehmen und anschlie·end backup.ini moven
           dat$ = "DOKKV"
           BLANK FILE dat$
           CodeDOK.dat$ = SER (dat$,1)
           cudok% = CodeDOK.dat$
           dokument.dat$ = pdfq$
           erstellt_am.dat$ = TODAY 
           letzte_Bearbeit.dat$ = TODAY 
           CodeMA.dat$ = GMACodeMA%
           codeku.dat$ = cuvt%
           SELECT FIRST FILE "supervis" INDEX codema.supervis
           SELECT KEY codema.dat$ FILE "supervis" INDEX codema.supervis
           Bearbeiter.dat$ = nachname.supervis
           Creator.dat$ = nachname.supervis
           endung$ = GetDateiendung$(textvorlage$)
           textdatei$ = docpath$ + LTRIM$ ( STR$ (CodeDOK.dat$,"99999999")) + "." + endung$
           Dateiname.dat$ = textdatei$
           dateiname$ = Dateiname.dat$
           Gruppe.dat$ = "VertrÑge"
           link.dat$ = 0
           CALL QuickStore(dat$)
           FILE "Dokument"
           BLANK 
           CodeDOK.Dokument = SER ("Dokument",1)
           dokument.Dokument = dokument.dat$
           erstellt_am.Dokument = TODAY 
           letzte_Bearbeit.Dokument = TODAY 
           CodeMA.Dokument = GMAcodema%
           REM cc% = codeku.kvertrag
           CodeKU.Dokument = codeku.kvertrag
           Bearbeiter.Dokument = Bearbeiter.dat$
           Creator.Dokument = Creator.dat$
           Dateiname.Dokument = Dateiname.dat$
           Gruppe.Dokument = Gruppe.dat$
           link.Dokument = 0
           CALL QuickStore("Dokument")
           pdfziel$ = _netpath$ + textdatei$
           a% = CALL ("_SBFileExists",pdfziel$)
           IF a% = - 1 THEN 
             a% = CALL ("_SBFileDelete1",pdfziel$)
           END IF 
           a% = CALL ("_SBFileCopy",pdfquell$,pdfziel$)
           WAIT FOR 1
           pdfziel$ = pp$ + "backup.ini\" + pdfq$
           a% = CALL ("_SBFileExists",pdfziel$)
           IF a% = - 1 THEN 
             a% = CALL ("_SBFileDelete1",pdfziel$)
           END IF 
           a% = CALL ("_SBFileCopy",pdfquell$,pdfziel$)
           WAIT FOR 1
           a% = CALL ("_SBFileExists",pdfquell$)
           IF a% = - 1 THEN 
             a% = CALL ("_SBFileDelete1",pdfquell$)
            END IF 
       END IF 


       REM INI Datei umkopieren
       quelle$ = pp$ + FN LFN(inid1$)
       z1$ = FN LFN(inid1$)
       ziel$ = pp$ + "backup.ini\" + z1$

       a% = CALL ("_SBFileExists",ziel$)
       IF a% = - 1 THEN 
         a% = CALL ("_SBFileDelete1",ziel$)
       END IF 
       a% = CALL ("_SBFileCopy",quelle$,ziel$)


       REM COPY quelle$ TO ziel$
       WAIT FOR 1
       a% = CALL ("_SBFileExists",quelle$)
       IF a% = - 1 THEN 
         a% = CALL ("_SBFileDelete1",quelle$)
       END IF 
end13060061:           
 END SUB 


SUB IDEALADRUpd(inid1$)
 datum$ = LEFT$ (ReadDestiIBM$("ANTRAG","ANTRAGSTELLUNGSDATUM",inid1$),10)
 SELECT FIRST FILE "adressen" INDEX codeku.adressen
 SELECT KEY knr% LOCK FILE "adressen" INDEX codeku.adressen
 IF letzter_Kontakt.adressen < DAYS (datum$) THEN letzter_Kontakt.adressen = datum$
 CALL QuickStore("ADRESSEN")
 END SUB 

SUB IDEALadr(inid1$)
 MOUSE OFF 
 vnr$ = ReadDestiIBM$("iposantrag","iposantragsnummer",inid1$)
 vmnr$ = ReadDestiIBM$("ANTRAG","VMNR",inid1$)
 datum$ = LEFT$ (ReadDestiIBM$("ANTRAG","ANTRAGSTELLUNGSDATUM",inid1$),10)
 anrede$ = ReadDestiIBM$("VN","ANREDE_TEXT",inid1$)
 
 vorname$ = ReadDestiIBM$("VN","vorname",inid1$)
 name$ = ReadDestiIBM$("VN","name",inid1$)
 REM CALL Fehler(name$,"")
 strasse$ = ReadDestiIBM$("VN","strasse",inid1$) + " " + ReadDestiIBM$("VN","Hausnummer",inid1$)
 plz$ = ReadDestiIBM$("VN","plz",inid1$)
 ort$ = ReadDestiIBM$("VN","ort",inid1$)
 gebdat$ = LEFT$ (ReadDestiIBM$("VN","GEBURTSDATUM",inid1$),10)
 nn$ = (name$ + " " + vorname$ + " " + strasse$ + " " + plz$ + " " + ort$)

 geschlecht$ = ReadDestiIBM$("VN","geschlecht",inid1$)
 Land$ = ReadDestiIBM$("VN","STAATSANGEHOERIGKEIT",inid1$)
 gebort$ = ReadDestiIBM$("VN","GEBURTSORT",inid1$)
 telefon$ = ReadDestiIBM$("VN","Telefon",inid1$)
 email$ = ReadDestiIBM$("VN","EMAIL",inid1$)
 ausweis$ = ReadDestiIBM$("VN","TYP_TEXT",inid1$)
 ausweisnr$ = ReadDestiIBM$("VN","NUMMER",inid1$)
 agueltigbis$ = LEFT$ (ReadDestiIBM$("VN","GUELTIG_BIS",inid1$),10)
 aBEHOERDE$ = ReadDestiIBM$("VN","BEHOERDE",inid1$)
 
 telefon$ = ReadDestiIBM$("VP","Telefon",inid1$)
 email$ = ReadDestiIBM$("VP","EMAIL",inid1$)

 kto$ = ReadDestiIBM$("BTGZ","KONTONUMMER",inid1$)
 blz$ = ReadDestiIBM$("BTGZ","BANKLEITZAHL",inid1$)
 bank$ = ReadDestiIBM$("BTGZ","GELDINSTITUT",inid1$)
 

  nvt% = 0
   REM prÅfen, ob Adresse vorhanden
   REM CALL Fehler("Vertrag NICHTgefunden","Es wird auf Adresse geprÅft")
   GGSuna$ = name$
   GAFSK$ = "TRUE"
   nn$ = (name$ + " " + vorname$ + " " + strasse$ + " " + plz$ + " " + ort$)
   CALL Fehler("Adresssuche:" + nn$,"")
   adrtest% = ADRSuche%(0)
   GAFSK$ = ""
   IF adrtest% <> 0 THEN 
     knr% = adrtest%
     REM Adresse gefunden, es kann der Vertrag aufgenommen werden
     REM CALL Fehler("Adresse gefunden:" + nn$ + " , es kann der Vertrag aufgenommen werden","")
   ELSE 
     REM Adresse nicht gefunden, muss neu aufgenommen werden
     REM CALL Fehler("Adresssuche:" + nn$,"")
     REM REQUEST "Adresse wurde nicht gefunden!","Soll die Adresse neu aufgenommen werden?",130,req%
     CALL IWriteLogOk("Adresse:< " + nn$ + ">    NICHT gefunden zum Vertrag " + vnr$ + " vom " + datum$)
           GAdrDat$ = "ADRESSEN"
      SELECT FIRST LOCK FILE "stamm"
      IF GADRDat$ LIKE "ADRESSEN" THEN 
        nnum% = LastKunr.stamm + 1
        LastKunr.stamm = nnum%
        STORE FILE "Stamm"
        UNLOCK CURRENT FILE "stamm"
        SELECT FIRST FILE "Stamm"
        prefix$ = LTRIM$ (KUNRPREFIX.stamm)
      ELSE 
        nnum% = LASTIntnr.stamm + 1
        LastIntnr.stamm = nnum%
        STORE FILE "Stamm"
        UNLOCK CURRENT FILE "stamm"
        SELECT FIRST FILE "Stamm"
        prefix$ = LTRIM$ (IntPREFIX.stamm)
      END IF 
      Kundennr$ = prefix$ + LTRIM$ ( STR$ (nnum%,"9999999999"))
      IF GASP% THEN 
        Kundennr$ = prefix$ + LTRIM$ ( STR$ (bueronr%,"000")) + "-" + LTRIM$ ( STR$ (nnum%,"9999999999"))
      END IF 
           BLANK FILE "ADRESSEN"
           CodeKU% = SER (GAdrDat$,1)
           adrtest% = codeku%
           Kundennummer.adressen = Kundennr$
           CodeKU.GAdrDat$ = codeku%
           knr% = codeku%
           EXPInternet.GADRDat$ = "j"
           STORE FILE GAdrDat$
           UNLOCK CURRENT FILE GAdrDat$
           UNLOCK FILE GAdrDat$
           SELECT KEY codeku% LOCK FILE GAdrDat$ INDEX codeku.GAdrDat$
           ADRStatus.GAdrDat$ = "IDEAL Import"
           ADRGruppe.GAdrDat$ = "<OHNE ZUORDNUNG>"
           gdvVMNr$ = vmnr$
           notf% = 0
           IF EXISTS (gdvVMNr$,AGNummer.maadrag) AND LTRIM$ (gdvVMNr$) <> "" THEN 
             SELECT FIRST FILE "maadrag" INDEX AGNummer.maadrag
             SELECT KEY gdvVMNr$ FILE "maadrag" INDEX AGNummer.maadrag
             IF codema.maadrag > 0 AND gdvVMNr$ LIKE AGNummer.maadrag THEN 
               SELECT FIRST FILE "maadr" INDEX codema.maadr
               SELECT KEY codema.maadrag FILE "maadr" INDEX codema.maadr
               codema.adressen = codema.maadr
               AGNachname.GAdrDat$ = Nachname.maadr
               AGVorname.GAdrDat$ = Vorname.maadr
               AGAGNr.gadrdat$ = Agenturnr.maadr
             END IF 
           ELSE 
             CALL Fehler("Agenturnummer: " + vmnr$ + " wurde nicht gefunden, bitte wÑhlen Sie den Vermittler per Hand aus!","")
             codema% = GetCodeMA%(prompt%,Workstation%)
             IF codema% > 0 THEN 
               codema.GAdrDat$ = codema%
               AGNachname.GAdrDat$ = Nachname.maadr
               AGVorname.GAdrDat$ = Vorname.maadr
               AGAGNr.gadrdat$ = Agenturnr.maadr
               notf% = - 1
             END IF 
           END IF 
           nachname.adressen = name$
           vorname.adressen = vorname$
           ort.adressen = ort$
           plz.adressen = plz$
           stra·e.adressen = strasse$
           anrede.adressen = anrede$
           
           Land.adressen = land$
           Geburtstag.adressen = Gebdat$
           
           IF geschlecht$ LIKE "M" THEN 
             Geschlecht.adressen = "j"
           END IF 
           IF geschlecht$ LIKE "W" THEN 
             Geschlecht.adressen = "n"
           END IF 
           IF Kunde_seit.adressen < 1 THEN Kunde_seit.adressen = datum$
           IF Erstkontakt.adressen < 1 THEN Erstkontakt.adressen = datum$
           IF letzter_Kontakt.adressen < DAYS (datum$) THEN letzter_Kontakt.adressen = datum$
           k1konto.adressen = LEFT$ (kto$,17)
           k1blz.adressen = LEFT$ (blz$,20)
           k1bank.adressen = LEFT$ (bank$,50)
           knr% = codeku%
           CALL QuickStore("ADRESSEN")
           IF notf% = - 1 THEN 
             BLANK FILE "maadrag"
             codeag.maadrag = SER ("maadrag",1)
             AGnummer.maadrag = vmnr$
             Notiz.maadrag = "IDEAL"
             codema.maadrag = codema%
             CALL FStore("maadrag")
           END IF 
           REM IF email$ <> "" OR telefon$ <> "" THEN 
             BLANK FILE "telefon"
             codetel.telefon = SER ("Telefon",1)
             codeku.Telefon = knr%
             art.telefon = "Telefon"
             nummer.telefon = telefon$
             fonoderfax.telefon = "n"
             CALL QuickStore("Telefon")
             BLANK FILE "telefon"
             codetel.telefon = SER ("Telefon",1)
             codeku.Telefon = knr%
             art.telefon = "email"
             nummer.telefon = email$
             fonoderfax.telefon = "n"
             CALL QuickStore("Telefon")
           REM END IF 
           CALL IWriteLogOk("Adresse:< " + nn$ + "> NEU aufgenommen")
   END IF 
 
 END SUB 
 
 
SUB IDEALZukunft(inid1$)
 MOUSE OFF 
 vnr$ = ReadDestiIBM$("iposantrag","iposantragsnummer",inid1$)
 datum$ = LEFT$ (ReadDestiIBM$("ANTRAG","ANTRAGSTELLUNGSDATUM",inid1$),10)
 REM ablauf$ = LEFT$ (ReadDestiIBM$("ANTRAG","RENTENBEGINN",inid1$),10)
 vmnr$ = ReadDestiIBM$("ANTRAG","VMNR",inid1$)
 
 tarif$ = ReadDestiIBM$("ANTRAG","TGB",inid1$)

 kto$ = ReadDestiIBM$("BTGZ","KONTONUMMER",inid1$)
 blz$ = ReadDestiIBM$("BTGZ","BANKLEITZAHL",inid1$)
 bank$ = ReadDestiIBM$("BTGZ","GELDINSTITUT",inid1$)
 
 
 vbeginn$ = LEFT$ (ReadDestiIBM$("VMVD","VD_TD_BEG",inid1$),10)
 zdauer% = VAL (ReadDestiIBM$("VMVD","VD_TD_T",inid1$))
 beg% = VAL ( RIGHT$ (vbeginn$,4)) + zdauer%
 ablauf$ = LEFT$ (vbeginn$,6) + STR$ (beg%,"0000")

 Eintritt$ = ReadDestiIBM$("VMVD","VD_VP_XS",inid1$)

 REM zahlweise$ = ReadDestiIBM$("DATA","zahlweise",inid1$)
 zahlweiseb$ = ReadDestiIBM$("VMVD","VD_TD_ZWB",inid1$)
 zahlweiser$ = ReadDestiIBM$("VMVD","VD_TD_ZWR",inid1$)


 waehrung$ = ReadDestiIBM$("VMVD","wkz",inid1$)
 beitrag$ = ReadDestiIBM$("VMBTG","INKASSO",inid1$)
 pos% = 0
 pos% = INSTR (beitrag$,".")
 IF pos% > 0 THEN 
   NUMBASE ("999999999.00")
   beitr1$ = MID$ (beitrag$,1,pos% - 1) + "," + MID$ (beitrag$,pos% + 1)
   beitrag$ = beitr1$
 END IF 
 vsumme$ = ReadDestiIBM$("VMVS","Gesamt",inid1$)
 pos% = 0
 pos% = INSTR (vsumme$,".")
 IF pos% > 0 THEN 
   NUMBASE ("999999999.00")
   beitr1$ = MID$ (vsumme$,1,pos% - 1) + "," + MID$ (vsumme$,pos% + 1)
   vsumme$ = beitr1$
 END IF 
 codema% = 0

 zvP1vName$ = ReadDestiIBM$("VP","VORNAME",inid1$)
 zvP1Name$ = ReadDestiIBM$("VP","NAME",inid1$)
 zvP1Geb$ = LEFT$ (ReadDestiIBM$("VP","GEBURTSDATUM",inid1$),10)
 zvP1Geschlecht$ = ReadDestiIBM$("VP","GESCHLECHT",inid1$)
 zvP1Ort$ = ReadDestiIBM$("VP","ORT",inid1$)
 zvP1PLZ$ = ReadDestiIBM$("VP","PLZ",inid1$)
 zvP1Strasse$ = ReadDestiIBM$("VP","STRASSE",inid1$) + " " + ReadDestiIBM$("VP","HAUSNUMMER",inid1$)

 gebort$ = ReadDestiIBM$("VP","GEBURTSORT",inid1$)
 telefon$ = ReadDestiIBM$("VP","Telefon",inid1$)
 email$ = ReadDestiIBM$("VP","EMAIL",inid1$)
 ausweis$ = ReadDestiIBM$("VP","TYP_TEXT",inid1$)
 ausweisnr$ = ReadDestiIBM$("VP","NUMMER",inid1$)
 agueltigbis$ = LEFT$ (ReadDestiIBM$("VP","GUELTIG_BIS",inid1$),10)
 aBEHOERDE$ = ReadDestiIBM$("VP","BEHOERDE",inid1$)

 bzbevName$ = ReadDestiIBM$("BZB-VE","VORNAME",inid1$)
 bzbeName$ = ReadDestiIBM$("BZB-VE","NAME",inid1$)
 bzbeGeb$ = LEFT$ (ReadDestiIBM$("BZB-VE","GEBURTSDATUM",inid1$),10)
 bzbeGeschlecht$ = ReadDestiIBM$("BZB-VE","GESCHLECHT",inid1$)
 bzbeOrt$ = ReadDestiIBM$("BZB-VE","ORT",inid1$)
 bzbePLZ$ = ReadDestiIBM$("BZB-VE","PLZ",inid1$)
 bzbeStrasse$ = ReadDestiIBM$("BZB-VE","STRASSE",inid1$) + " " + ReadDestiIBM$("BZB-VE","HAUSNUMMER",inid1$)
 bzbePersw$ = ReadDestiIBM$("BZB-VE","PERSONENWAHL",inid1$)
 bzbe$ = ""
 IF bzbevName$ <> "leer" OR bzbeName$ <> "leer" OR bzbePLZ$ <> "leer" OR bzbeOrt$ <> "leer" THEN 
   bzbe$ = "BZ-Erleben: " + bzbevName$ + " " + bzbeName$ + "," + bzbePLZ$ + " " + bzbeOrt$ + "," + bzbeStrasse$ + ", Geb.: " + bzbeGeb$
 END IF 

 bzbtvName$ = ReadDestiIBM$("BZB-VT","VORNAME",inid1$)
 bzbtName$ = ReadDestiIBM$("BZB-VT","NAME",inid1$)
 bzbtGeb$ = LEFT$ (ReadDestiIBM$("BZB-VT","GEBURTSDATUM",inid1$),10)
 bzbtGeschlecht$ = ReadDestiIBM$("BZB-VT","GESCHLECHT",inid1$)
 bzbtOrt$ = ReadDestiIBM$("BZB-VT","ORT",inid1$)
 bzbtPLZ$ = ReadDestiIBM$("BZB-VT","PLZ",inid1$)
 bzbtStrasse$ = ReadDestiIBM$("BZB-VT","STRASSE",inid1$) + " " + ReadDestiIBM$("BZB-VT","HAUSNUMMER",inid1$)
 bzbtPersw$ = ReadDestiIBM$("BZB-VT","PERSONENWAHL",inid1$)
 bzbt$ = ""
 IF bzbtvName$ <> "leer" OR bzbtName$ <> "leer" OR bzbtPLZ$ <> "leer" OR bzbtOrt$ <> "leer" THEN 
   bzbt$ = "BZ-Tod: " + bzbtvName$ + " " + bzbtName$ + "," + bzbtPLZ$ + " " + bzbtOrt$ + "," + bzbtStrasse$ + ", Geb.: " + bzbtGeb$
 END IF 

 vdauer% = VAL (ReadDestiIBM$("VMVD","VD_TD_N",inid1$))
 IF vdauer% > 0 THEN 
   versichd$ = "Versicherungsdauer: " + STR$ (vdauer%,"99")
   note$ = versichd$ + CHR$ (13) + CHR$ (10)
 END IF 
 rentegar% = VAL (ReadDestiIBM$("VMVD","VD_TD_R",inid1$))
 IF rentegar% > 0 THEN 
   rentegar$ = "Rentengarantiezeit: " + STR$ (vdauer%,"99")
   note$ = note$ + rentegar$ + + CHR$ (13) + CHR$ (10)
 END IF 
 bdauer% = VAL (ReadDestiIBM$("VMVD","VD_TD_T",inid1$))
 IF bdauer% > 0 THEN 
   bdauer$ = "Beitragszahlungsdauer: " + STR$ (vdauer%,"99")
   note$ = note$ + bdauer$
 END IF 

 REM CALL Fehler(bzbe$,bzbt$)


 zvp1geb% = VAL ( RIGHT$ (zvP1Geb$,4))
 vbeginn% = VAL ( RIGHT$ (vbeginn$,4))

 SELECT FIRST FILE "KVERTRAG" INDEX lfdnr.kvertrag
 SELECT KEY cuvt% LOCK FILE "KVERTRAG" INDEX lfdnr.kvertrag

 gdvVMNr$ = vmnr$
 IF codema.kvertrag = 0 THEN 
   IF EXISTS (gdvVMNr$,AGNummer.maadrag) AND LTRIM$ (gdvVMNr$) <> "" THEN 
     SELECT FIRST FILE "maadrag" INDEX AGNummer.maadrag
     SELECT KEY gdvVMNr$ FILE "maadrag" INDEX AGNummer.maadrag
     IF codema.maadrag > 0 AND gdvVMNr$ LIKE AGNummer.maadrag THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema.maadrag FILE "maadr" INDEX codema.maadr
       codema% = codema.maadr
     END IF 
   ELSE 
     CALL Fehler("Agenturnummer: " + vmnr$ + " wurde nicht gefunden, bitte wÑhlen Sie den Vermittler per Hand aus!","")
     codema% = GetCodeMA%(prompt%,Workstation%)
   END IF 
 ELSE 
   codema% = codema.kvertrag
 END IF 
 

 SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
 SELECT KEY knr% FILE "ADRESSEN" INDEX codeku.adressen

             IF zahlweiseb$ LIKE "j*" THEN 
               zw.kvertrag = 1
             END IF 
             IF zahlweiseb$ LIKE "h*" THEN 
               zw.kvertrag = 2
             END IF 
             IF zahlweiseb$ LIKE "v*" THEN 
               zw.kvertrag = 4
             END IF 
             IF zahlweiseb$ LIKE "m*" THEN 
               zw.kvertrag = 12
             END IF 
             IF zahlweiseb$ LIKE "e*" THEN 
               zw.kvertrag = 0
             END IF 
             Tarif.kvertrag = tarif$
             Antragsnr.KVERTRAG = "IDEAL" + vnr$
             Bewertungssumme.kvertrag = VAL (beitrag$)
             Beitrag.kvertrag = VAL (beitrag$)
             REM Bewertungssumme.Kvertrag = 
             VS_Beginn.kvertrag = vbeginn$
             Antragsdatum.kvertrag = datum$
             KÅndigung.kvertrag = ablauf$
             vsumme.kvertrag = VAL (vsumme$)
             codema.kvertrag = codema%
             IF zdauer% > 0 THEN DBeitrZahlung.kvertrag = zdauer%
             k1konto.kvertrag = LEFT$ (kto$,17)
             k1blz.kvertrag = LEFT$ (blz$,20)
             k1bank.kvertrag = LEFT$ (bank$,50)
  
             zvP1vName.kvertrag = zvP1vName$
             zvP1Name.kvertrag = zvP1Name$
             zvP1Geb.kvertrag = zvP1Geb$
             
             zvP1Ort.kvertrag = zvP1Ort$
             zvP1PLZ.kvertrag = zvP1PLZ$
             zvP1Strasse.kvertrag = zvP1Strasse$
             IF zvP1geschlecht$ LIKE "M" THEN 
               zvP1Geschlecht.kvertrag = "j"
             END IF 
             IF zvP1geschlecht$ LIKE "W" THEN 
               zvP1Geschlecht.kvertrag = "n"
             END IF 

             Notiz.kvertrag = bzbe$ + CHR$ (13) + CHR$ (10) + bzbt$ + CHR$ (13) + CHR$ (10) + note$

             Eintrittsalter.kvertrag = VAL (Eintritt$)
             CALL QuickStore("KVERTRAG")


  REQUEST "Vertrag wurde aktualisiert","",2
 END SUB 
 

SUB IDEALSterbe(inid1$)
 MOUSE OFF 
 vnr$ = ReadDestiIBM$("iposantrag","iposantragsnummer",inid1$)
 datum$ = LEFT$ (ReadDestiIBM$("ANTRAG","ANTRAGSTELLUNGSDATUM",inid1$),10)
 REM ablauf$ = LEFT$ (ReadDestiIBM$("ANTRAG","RENTENBEGINN",inid1$),10)
 vmnr$ = ReadDestiIBM$("ANTRAG","VMNR",inid1$)
 
 tarif$ = ReadDestiIBM$("ANTRAG","TGB",inid1$) + " " + ReadDestiIBM$("ANTRAG","TM",inid1$)
 
 kto$ = ReadDestiIBM$("BTGZ","KONTONUMMER",inid1$)
 blz$ = ReadDestiIBM$("BTGZ","BANKLEITZAHL",inid1$)
 bank$ = ReadDestiIBM$("BTGZ","GELDINSTITUT",inid1$)
 
 
 vbeginn$ = LEFT$ (ReadDestiIBM$("VMVD","VD_TD_BEG",inid1$),10)
 zdauer% = VAL (ReadDestiIBM$("VMVD","VD_TD_T",inid1$))
 beg% = VAL ( RIGHT$ (vbeginn$,4)) + zdauer%
 ablauf$ = LEFT$ (vbeginn$,6) + STR$ (beg%,"0000")

 Eintritt$ = ReadDestiIBM$("VMVD","VD_VP_XS",inid1$)
 
 REM zahlweise$ = ReadDestiIBM$("DATA","zahlweise",inid1$)
 zahlweiseb$ = ReadDestiIBM$("VMVD","VD_TD_ZWB",inid1$)
 zahlweiser$ = ReadDestiIBM$("VMVD","VD_TD_ZWR",inid1$)
 
 
 waehrung$ = ReadDestiIBM$("VMVD","wkz",inid1$)
 beitrag$ = ReadDestiIBM$("VMBTG","INKASSO",inid1$)
 pos% = 0
 pos% = INSTR (beitrag$,".")
 IF pos% > 0 THEN 
   NUMBASE ("999999999.00")
   beitr1$ = MID$ (beitrag$,1,pos% - 1) + "," + MID$ (beitrag$,pos% + 1)
   beitrag$ = beitr1$
 END IF 
 vsumme$ = ReadDestiIBM$("VMVS","Gesamt",inid1$)
 pos% = 0
 pos% = INSTR (vsumme$,".")
 IF pos% > 0 THEN 
   NUMBASE ("999999999.00")
   beitr1$ = MID$ (vsumme$,1,pos% - 1) + "," + MID$ (vsumme$,pos% + 1)
   vsumme$ = beitr1$
 END IF 

 codema% = 0
 
 zvP1vName$ = ReadDestiIBM$("VP","VORNAME",inid1$)
 zvP1Name$ = ReadDestiIBM$("VP","NAME",inid1$)
 zvP1Geb$ = LEFT$ (ReadDestiIBM$("VP","GEBURTSDATUM",inid1$),10)
 zvP1Geschlecht$ = ReadDestiIBM$("VP","GESCHLECHT",inid1$)
 zvP1Ort$ = ReadDestiIBM$("VP","ORT",inid1$)
 zvP1PLZ$ = ReadDestiIBM$("VP","PLZ",inid1$)
 zvP1Strasse$ = ReadDestiIBM$("VP","STRASSE",inid1$) + " " + ReadDestiIBM$("VP","HAUSNUMMER",inid1$)
 
 gebort$ = ReadDestiIBM$("VP","GEBURTSORT",inid1$)
 telefon$ = ReadDestiIBM$("VP","Telefon",inid1$)
 email$ = ReadDestiIBM$("VP","EMAIL",inid1$)
 ausweis$ = ReadDestiIBM$("VP","TYP_TEXT",inid1$)
 ausweisnr$ = ReadDestiIBM$("VP","NUMMER",inid1$)
 agueltigbis$ = LEFT$ (ReadDestiIBM$("VP","GUELTIG_BIS",inid1$),10)
 aBEHOERDE$ = ReadDestiIBM$("VP","BEHOERDE",inid1$)
 
 bzbevName$ = ReadDestiIBM$("BZB-VE","VORNAME",inid1$)
 bzbeName$ = ReadDestiIBM$("BZB-VE","NAME",inid1$)
 bzbeGeb$ = LEFT$ (ReadDestiIBM$("BZB-VE","GEBURTSDATUM",inid1$),10)
 bzbeGeschlecht$ = ReadDestiIBM$("BZB-VE","GESCHLECHT",inid1$)
 bzbeOrt$ = ReadDestiIBM$("BZB-VE","ORT",inid1$)
 bzbePLZ$ = ReadDestiIBM$("BZB-VE","PLZ",inid1$)
 bzbeStrasse$ = ReadDestiIBM$("BZB-VE","STRASSE",inid1$) + " " + ReadDestiIBM$("BZB-VE","HAUSNUMMER",inid1$)
 bzbePersw$ = ReadDestiIBM$("BZB-VE","PERSONENWAHL",inid1$)
 bzbe$ = ""
 IF bzbevName$ <> "leer" OR bzbeName$ <> "leer" OR bzbePLZ$ <> "leer" OR bzbeOrt$ <> "leer" THEN 
   bzbe$ = "BZ-Erleben: " + bzbevName$ + " " + bzbeName$ + "," + bzbePLZ$ + " " + bzbeOrt$ + "," + bzbeStrasse$ + ", Geb.: " + bzbeGeb$
 END IF 
 bzbtvName$ = ReadDestiIBM$("BZB-VT","VORNAME",inid1$)
 bzbtName$ = ReadDestiIBM$("BZB-VT","NAME",inid1$)
 bzbtGeb$ = LEFT$ (ReadDestiIBM$("BZB-VT","GEBURTSDATUM",inid1$),10)
 bzbtGeschlecht$ = ReadDestiIBM$("BZB-VT","GESCHLECHT",inid1$)
 bzbtOrt$ = ReadDestiIBM$("BZB-VT","ORT",inid1$)
 bzbtPLZ$ = ReadDestiIBM$("BZB-VT","PLZ",inid1$)
 bzbtStrasse$ = ReadDestiIBM$("BZB-VT","STRASSE",inid1$) + " " + ReadDestiIBM$("BZB-VT","HAUSNUMMER",inid1$)
 bzbtPersw$ = ReadDestiIBM$("BZB-VT","PERSONENWAHL",inid1$)
 bzbt$ = ""
 IF bzbtvName$ <> "leer" OR bzbtName$ <> "leer" OR bzbtPLZ$ <> "leer" OR bzbtOrt$ <> "leer" THEN 
   bzbt$ = "BZ-Tod: " + bzbtvName$ + " " + bzbtName$ + "," + bzbtPLZ$ + " " + bzbtOrt$ + "," + bzbtStrasse$ + ", Geb.: " + bzbtGeb$
 END IF 
 REM CALL Fehler(bzbe$,bzbt$)
 zvp1geb% = VAL ( RIGHT$ (zvP1Geb$,4))
 vbeginn% = VAL ( RIGHT$ (vbeginn$,4))
 
 SELECT FIRST FILE "KVERTRAG" INDEX lfdnr.kvertrag
 SELECT KEY cuvt% LOCK FILE "KVERTRAG" INDEX lfdnr.kvertrag
 
 gdvVMNr$ = vmnr$
 IF codema.kvertrag = 0 THEN 
   IF EXISTS (gdvVMNr$,AGNummer.maadrag) AND LTRIM$ (gdvVMNr$) <> "" THEN 
     SELECT FIRST FILE "maadrag" INDEX AGNummer.maadrag
     SELECT KEY gdvVMNr$ FILE "maadrag" INDEX AGNummer.maadrag
     IF codema.maadrag > 0 AND gdvVMNr$ LIKE AGNummer.maadrag THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema.maadrag FILE "maadr" INDEX codema.maadr
       codema% = codema.maadr
     END IF 
   ELSE 
     CALL Fehler("Agenturnummer: " + vmnr$ + " wurde nicht gefunden, bitte wÑhlen Sie den Vermittler per Hand aus!","")
     codema% = GetCodeMA%(prompt%,Workstation%)
   END IF 
 ELSE 
   codema% = codema.kvertrag
 END IF 
 
 
 SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
 SELECT KEY knr% FILE "ADRESSEN" INDEX codeku.adressen
 
             IF zahlweiseb$ LIKE "j*" THEN 
               zw.kvertrag = 1
             END IF 
             IF zahlweiseb$ LIKE "h*" THEN 
               zw.kvertrag = 2
             END IF 
             IF zahlweiseb$ LIKE "v*" THEN 
               zw.kvertrag = 4
             END IF 
             IF zahlweiseb$ LIKE "m*" THEN 
               zw.kvertrag = 12
             END IF 
             IF zahlweiseb$ LIKE "e*" THEN 
               zw.kvertrag = 0
             END IF 
             Tarif.kvertrag = tarif$
             Antragsnr.KVERTRAG = "IDEAL" + vnr$
             Bewertungssumme.kvertrag = VAL (beitrag$)
             Beitrag.kvertrag = VAL (beitrag$)
             REM Bewertungssumme.Kvertrag = 
             VS_Beginn.kvertrag = vbeginn$
             Antragsdatum.kvertrag = datum$
             KÅndigung.kvertrag = ablauf$

             IF zdauer% > 0 THEN 
               DBeitrZahlung.kvertrag = zdauer%
               VS_Dauer.kvertrag = zdauer%
             END IF 
             vsumme.kvertrag = VAL (vsumme$)
             codema.kvertrag = codema%
 
             k1konto.kvertrag = LEFT$ (kto$,17)
             k1blz.kvertrag = LEFT$ (blz$,20)
             k1bank.kvertrag = LEFT$ (bank$,50)
  
             zvP1vName.kvertrag = zvP1vName$
             zvP1Name.kvertrag = zvP1Name$
             zvP1Geb.kvertrag = zvP1Geb$
             
             zvP1Ort.kvertrag = zvP1Ort$
             zvP1PLZ.kvertrag = zvP1PLZ$
             zvP1Strasse.kvertrag = zvP1Strasse$
             IF zvP1geschlecht$ LIKE "M" THEN 
               zvP1Geschlecht.kvertrag = "j"
             END IF 
             IF zvP1geschlecht$ LIKE "W" THEN 
               zvP1Geschlecht.kvertrag = "n"
             END IF 
 
             Notiz.kvertrag = bzbe$ + CHR$ (13) + CHR$ (10) + bzbt$
             Eintrittsalter.kvertrag = VAL (Eintritt$)
             CALL QuickStore("KVERTRAG")
 
 END SUB 
 

SUB IDEALPflege(inid1$)
 MOUSE OFF 
 vnr$ = ReadDestiIBM$("iposantrag","iposantragsnummer",inid1$)
 datum$ = LEFT$ (ReadDestiIBM$("ANTRAG","ANTRAGSTELLUNGSDATUM",inid1$),10)
 
 ablauf$ = LEFT$ (ReadDestiIBM$("ANTRAG","RENTENBEGINN",inid1$),10)
 vmnr$ = ReadDestiIBM$("ANTRAG","VMNR",inid1$)
 
 tarif$ = ReadDestiIBM$("ANTRAG","TGB",inid1$) + " " + ReadDestiIBM$("ANTRAG","TM",inid1$)
 
 kto$ = ReadDestiIBM$("BTGZ","KONTONUMMER",inid1$)
 blz$ = ReadDestiIBM$("BTGZ","BANKLEITZAHL",inid1$)
 bank$ = ReadDestiIBM$("BTGZ","GELDINSTITUT",inid1$)
 
 
 vbeginn$ = LEFT$ (ReadDestiIBM$("VMVD","VD_TD_BEG",inid1$),10)
 Eintritt$ = ReadDestiIBM$("VMVD","VD_VP_XS",inid1$)
 
 REM zahlweise$ = ReadDestiIBM$("DATA","zahlweise",inid1$)
 zahlweiseb$ = ReadDestiIBM$("VMVD","VD_TD_ZWB",inid1$)
 
 vbeginn$ = LEFT$ (ReadDestiIBM$("VMVD","VD_TD_BEG",inid1$),10)
 REM zahlweise$ = ReadDestiIBM$("DATA","zahlweise",inid1$)
 zahlweise$ = "monatlich"
 waehrung$ = ReadDestiIBM$("VMVD","wkz",inid1$)
 beitrag$ = ReadDestiIBM$("VMBTG","INKASSO",inid1$)
 pos% = 0
 pos% = INSTR (beitrag$,".")
 IF pos% > 0 THEN 
   NUMBASE ("999999999.00")
   beitr1$ = MID$ (beitrag$,1,pos% - 1) + "," + MID$ (beitrag$,pos% + 1)
   beitrag$ = beitr1$
 END IF 
 vsumme$ = ReadDestiIBM$("VMVS","Gesamt",inid1$)
 pos% = 0
 pos% = INSTR (vsumme$,".")
 IF pos% > 0 THEN 
   NUMBASE ("999999999.00")
   beitr1$ = MID$ (vsumme$,1,pos% - 1) + "," + MID$ (vsumme$,pos% + 1)
   vsumme$ = beitr1$
 END IF 
 codema% = 0
 
 zvP1vName$ = ReadDestiIBM$("VP","VORNAME",inid1$)
 zvP1Name$ = ReadDestiIBM$("VP","NAME",inid1$)
 zvP1Geb$ = LEFT$ (ReadDestiIBM$("VP","GEBURTSDATUM",inid1$),10)
 zvP1Geschlecht$ = ReadDestiIBM$("VP","GESCHLECHT",inid1$)
 zvP1Ort$ = ReadDestiIBM$("VP","ORT",inid1$)
 zvP1PLZ$ = ReadDestiIBM$("VP","PLZ",inid1$)
 zvP1Strasse$ = ReadDestiIBM$("VP","STRASSE",inid1$) + " " + ReadDestiIBM$("VP","HAUSNUMMER",inid1$)
 
 gebort$ = ReadDestiIBM$("VP","GEBURTSORT",inid1$)
 telefon$ = ReadDestiIBM$("VP","Telefon",inid1$)
 email$ = ReadDestiIBM$("VP","EMAIL",inid1$)
 ausweis$ = ReadDestiIBM$("VP","TYP_TEXT",inid1$)
 ausweisnr$ = ReadDestiIBM$("VP","NUMMER",inid1$)
 agueltigbis$ = ReadDestiIBM$("VP","GUELTIG_BIS",inid1$)
 agueltigbis$ = ReadDestiIBM$("VP","GUELTIG_BIS",inid1$)
 aBEHOERDE$ = ReadDestiIBM$("VP","BEHOERDE",inid1$)
  
 
 bzbevName$ = ReadDestiIBM$("BZB-VE","VORNAME",inid1$)
 bzbeName$ = ReadDestiIBM$("BZB-VE","NAME",inid1$)
 bzbeGeb$ = LEFT$ (ReadDestiIBM$("BZB-VE","GEBURTSDATUM",inid1$),10)
 bzbeGeschlecht$ = ReadDestiIBM$("BZB-VE","GESCHLECHT",inid1$)
 bzbeOrt$ = ReadDestiIBM$("BZB-VE","ORT",inid1$)
 bzbePLZ$ = ReadDestiIBM$("BZB-VE","PLZ",inid1$)
 bzbeStrasse$ = ReadDestiIBM$("BZB-VE","STRASSE",inid1$) + " " + ReadDestiIBM$("BZB-VE","HAUSNUMMER",inid1$)
 bzbePersw$ = ReadDestiIBM$("BZB-VE","PERSONENWAHL",inid1$)
 bzbe$ = ""
 IF bzbevName$ <> "leer" OR bzbeName$ <> "leer" OR bzbePLZ$ <> "leer" OR bzbeOrt$ <> "leer" THEN 
   bzbe$ = "BZ-Erleben: " + bzbevName$ + " " + bzbeName$ + "," + bzbePLZ$ + " " + bzbeOrt$ + "," + bzbeStrasse$ + ", Geb.: " + bzbeGeb$
 END IF 
 
 bzbtvName$ = ReadDestiIBM$("BZB-VT","VORNAME",inid1$)
 bzbtName$ = ReadDestiIBM$("BZB-VT","NAME",inid1$)
 bzbtGeb$ = LEFT$ (ReadDestiIBM$("BZB-VT","GEBURTSDATUM",inid1$),10)
 bzbtGeschlecht$ = ReadDestiIBM$("BZB-VT","GESCHLECHT",inid1$)
 bzbtOrt$ = ReadDestiIBM$("BZB-VT","ORT",inid1$)
 bzbtPLZ$ = ReadDestiIBM$("BZB-VT","PLZ",inid1$)
 bzbtStrasse$ = ReadDestiIBM$("BZB-VT","STRASSE",inid1$) + " " + ReadDestiIBM$("BZB-VT","HAUSNUMMER",inid1$)
 bzbtPersw$ = ReadDestiIBM$("BZB-VT","PERSONENWAHL",inid1$)
 bzbt$ = ""
 IF bzbtvName$ <> "leer" OR bzbtName$ <> "leer" OR bzbtPLZ$ <> "leer" OR bzbtOrt$ <> "leer" THEN 
   bzbt$ = "BZ-Tod: " + bzbtvName$ + " " + bzbtName$ + "," + bzbtPLZ$ + " " + bzbtOrt$ + "," + bzbtStrasse$ + ", Geb.: " + bzbtGeb$
 END IF 
 REM CALL Fehler(bzbe$,bzbt$)
 zvp1geb% = VAL ( RIGHT$ (zvP1Geb$,4))
 vbeginn% = VAL ( RIGHT$ (vbeginn$,4))
 
 SELECT FIRST FILE "KVERTRAG" INDEX lfdnr.kvertrag
 SELECT KEY cuvt% LOCK FILE "KVERTRAG" INDEX lfdnr.kvertrag
 
 gdvVMNr$ = vmnr$
 IF codema.kvertrag = 0 THEN 
   IF EXISTS (gdvVMNr$,AGNummer.maadrag) AND LTRIM$ (gdvVMNr$) <> "" THEN 
     SELECT FIRST FILE "maadrag" INDEX AGNummer.maadrag
     SELECT KEY gdvVMNr$ FILE "maadrag" INDEX AGNummer.maadrag
     IF codema.maadrag > 0 AND gdvVMNr$ LIKE AGNummer.maadrag THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema.maadrag FILE "maadr" INDEX codema.maadr
       codema% = codema.maadr
     END IF 
   ELSE 
     CALL Fehler("Agenturnummer: " + vmnr$ + " wurde nicht gefunden, bitte wÑhlen Sie den Vermittler per Hand aus!","")
     codema% = GetCodeMA%(prompt%,Workstation%)
   END IF 
 ELSE 
   codema% = codema.kvertrag
 END IF 
 
 
 SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
 SELECT KEY knr% FILE "ADRESSEN" INDEX codeku.adressen
 
             IF zahlweise$ LIKE "j*" THEN 
               zw.kvertrag = 1
             END IF 
             IF zahlweise$ LIKE "h*" THEN 
               zw.kvertrag = 2
             END IF 
             IF zahlweise$ LIKE "v*" THEN 
               zw.kvertrag = 4
             END IF 
             IF zahlweise$ LIKE "m*" THEN 
               zw.kvertrag = 12
             END IF 
             IF zahlweiseb$ LIKE "e*" THEN 
               zw.kvertrag = 0
             END IF 
             Tarif.kvertrag = tarif$
             Eintrittsalter.kvertrag = VAL (Eintritt$)
             Antragsnr.KVERTRAG = "IDEAL" + vnr$
             Beitrag.kvertrag = VAL (beitrag$)
             Bewertungssumme.Kvertrag = VAL (beitrag$)
             VS_Beginn.kvertrag = vbeginn$
             Antragsdatum.kvertrag = datum$
             vsumme.kvertrag = VAL (vsumme$)
             codema.kvertrag = codema%
 
             k1konto.kvertrag = LEFT$ (kto$,17)
             k1blz.kvertrag = LEFT$ (blz$,20)
             k1bank.kvertrag = LEFT$ (bank$,50)
  
             zvP1vName.kvertrag = zvP1vName$
             zvP1Name.kvertrag = zvP1Name$
             zvP1Geb.kvertrag = zvP1Geb$
             
             zvP1Ort.kvertrag = zvP1Ort$
             zvP1PLZ.kvertrag = zvP1PLZ$
             zvP1Strasse.kvertrag = zvP1Strasse$
             IF zvP1geschlecht$ LIKE "M" THEN 
               zvP1Geschlecht.kvertrag = "j"
             END IF 
             IF zvP1geschlecht$ LIKE "W" THEN 
               zvP1Geschlecht.kvertrag = "n"
             END IF 
 
             Notiz.kvertrag = bzbe$ + CHR$ (13) + CHR$ (10) + bzbt$
             Eintrittsalter.kvertrag = vbeginn% - zvp1geb%
             CALL QuickStore("KVERTRAG")
 
 
  REQUEST "Vertrag wurde aktualisiert","",2
 END SUB 
 

SUB IDEALBestatt(inid1$)
 MOUSE OFF 
 vnr$ = ReadDestiIBM$("iposantrag","iposantragsnummer",inid1$)
 datum$ = LEFT$ (ReadDestiIBM$("ANTRAG","ANTRAGSTELLUNGSDATUM",inid1$),10)
 vmnr$ = ReadDestiIBM$("ANTRAG","VMNR",inid1$)
 tarif$ = ReadDestiIBM$("ANTRAG","TGB",inid1$) + " " + ReadDestiIBM$("ANTRAG","TM",inid1$)
 Eintritt$ = ReadDestiIBM$("VMVD","VD_VP_XS",inid1$)
 zahlweise$ = ReadDestiIBM$("VMVD","VD_TD_ZWB",inid1$)
 
 kto$ = ReadDestiIBM$("BTGZ","KONTONUMMER",inid1$)
 blz$ = ReadDestiIBM$("BTGZ","BANKLEITZAHL",inid1$)
 bank$ = ReadDestiIBM$("BTGZ","GELDINSTITUT",inid1$)
 
 
 vbeginn$ = LEFT$ (ReadDestiIBM$("VMVD","VD_TD_BEG",inid1$),10)
 vbegjahr% = VAL ( RIGHT$ (vbeginn$,4))
 bdauer% = VAL (ReadDestiIBM$("VMVD","VD_TD_T",inid1$))
 kuenjahr% = vbegjahr% + bdauer%
 kuendig$ = LEFT$ (vbeginn$,6) + STR$ (kuenjahr%,"0000")
 REM zahlweise$ = ReadDestiIBM$("DATA","zahlweise",inid1$)
 
 waehrung$ = ReadDestiIBM$("VMVD","wkz",inid1$)
 beitrag$ = ReadDestiIBM$("VMBTG","INKASSO",inid1$)
 pos% = 0
 pos% = INSTR (beitrag$,".")
 IF pos% > 0 THEN 
   NUMBASE ("999999999.00")
   beitr1$ = MID$ (beitrag$,1,pos% - 1) + "," + MID$ (beitrag$,pos% + 1)
   beitrag$ = beitr1$
 END IF 
 vsumme$ = ReadDestiIBM$("VMVS","Gesamt",inid1$)
 pos% = 0
 pos% = INSTR (vsumme$,".")
 IF pos% > 0 THEN 
   NUMBASE ("999999999.00")
   beitr1$ = MID$ (vsumme$,1,pos% - 1) + "," + MID$ (vsumme$,pos% + 1)
   vsumme$ = beitr1$
 END IF 
 codema% = 0
 
 zvP1vName$ = ReadDestiIBM$("VP","VORNAME",inid1$)
 zvP1Name$ = ReadDestiIBM$("VP","NAME",inid1$)
 zvP1Geb$ = LEFT$ (ReadDestiIBM$("VP","GEBURTSDATUM",inid1$),10)
 zvP1Geschlecht$ = ReadDestiIBM$("VP","GESCHLECHT",inid1$)
 zvP1Ort$ = ReadDestiIBM$("VP","ORT",inid1$)
 zvP1PLZ$ = ReadDestiIBM$("VP","PLZ",inid1$)
 zvP1Strasse$ = ReadDestiIBM$("VP","STRASSE",inid1$) + " " + ReadDestiIBM$("VP","HAUSNUMMER",inid1$)
 
 gebort$ = ReadDestiIBM$("VP","GEBURTSORT",inid1$)
 telefon$ = ReadDestiIBM$("VP","Telefon",inid1$)
 email$ = ReadDestiIBM$("VP","EMAIL",inid1$)
 ausweis$ = ReadDestiIBM$("VP","TYP_TEXT",inid1$)
 ausweisnr$ = ReadDestiIBM$("VP","NUMMER",inid1$)
 agueltigbis$ = LEFT$ (ReadDestiIBM$("VP","GUELTIG_BIS",inid1$),10)
 aBEHOERDE$ = ReadDestiIBM$("VP","BEHOERDE",inid1$)
  
 
 bzbevName$ = ReadDestiIBM$("BZB-VE","VORNAME",inid1$)
 bzbeName$ = ReadDestiIBM$("BZB-VE","NAME",inid1$)
 bzbeGeb$ = LEFT$ (ReadDestiIBM$("BZB-VE","GEBURTSDATUM",inid1$),10)
 bzbeGeschlecht$ = ReadDestiIBM$("BZB-VE","GESCHLECHT",inid1$)
 bzbeOrt$ = ReadDestiIBM$("BZB-VE","ORT",inid1$)
 bzbePLZ$ = ReadDestiIBM$("BZB-VE","PLZ",inid1$)
 bzbeStrasse$ = ReadDestiIBM$("BZB-VE","STRASSE",inid1$) + " " + ReadDestiIBM$("BZB-VE","HAUSNUMMER",inid1$)
 bzbePersw$ = ReadDestiIBM$("BZB-VE","PERSONENWAHL",inid1$)
 bzbe$ = ""
 IF bzbevName$ <> "leer" OR bzbeName$ <> "leer" OR bzbePLZ$ <> "leer" OR bzbeOrt$ <> "leer" THEN 
   bzbe$ = "BZ-Erleben: " + bzbevName$ + " " + bzbeName$ + "," + bzbePLZ$ + " " + bzbeOrt$ + "," + bzbeStrasse$ + ", Geb.: " + bzbeGeb$
 END IF 

 bzbtvName$ = ReadDestiIBM$("BZB-VT","VORNAME",inid1$)
 bzbtName$ = ReadDestiIBM$("BZB-VT","NAME",inid1$)
 bzbtGeb$ = LEFT$ (ReadDestiIBM$("BZB-VT","GEBURTSDATUM",inid1$),10)
 bzbtGeschlecht$ = ReadDestiIBM$("BZB-VT","GESCHLECHT",inid1$)
 bzbtOrt$ = ReadDestiIBM$("BZB-VT","ORT",inid1$)
 bzbtPLZ$ = ReadDestiIBM$("BZB-VT","PLZ",inid1$)
 bzbtStrasse$ = ReadDestiIBM$("BZB-VT","STRASSE",inid1$) + " " + ReadDestiIBM$("BZB-VT","HAUSNUMMER",inid1$)
 bzbtPersw$ = ReadDestiIBM$("BZB-VT","PERSONENWAHL",inid1$)
 bzbt$ = ""
 IF bzbtvName$ <> "leer" OR bzbtName$ <> "leer" OR bzbtPLZ$ <> "leer" OR bzbtOrt$ <> "leer" THEN 
   bzbt$ = "BZ-Tod: " + bzbtvName$ + " " + bzbtName$ + "," + bzbtPLZ$ + " " + bzbtOrt$ + "," + bzbtStrasse$ + ", Geb.: " + bzbtGeb$
 END IF 
 REM CALL Fehler(bzbe$,bzbt$)
 zvp1geb% = VAL ( RIGHT$ (zvP1Geb$,4))
 vbeginn% = VAL ( RIGHT$ (vbeginn$,4))
 
 SELECT FIRST FILE "KVERTRAG" INDEX lfdnr.kvertrag
 SELECT KEY cuvt% LOCK FILE "KVERTRAG" INDEX lfdnr.kvertrag
 
 gdvVMNr$ = vmnr$
 IF codema.kvertrag = 0 THEN 
   IF EXISTS (gdvVMNr$,AGNummer.maadrag) AND LTRIM$ (gdvVMNr$) <> "" THEN 
     SELECT FIRST FILE "maadrag" INDEX AGNummer.maadrag
     SELECT KEY gdvVMNr$ FILE "maadrag" INDEX AGNummer.maadrag
     IF codema.maadrag > 0 AND gdvVMNr$ LIKE AGNummer.maadrag THEN 
       SELECT FIRST FILE "maadr" INDEX codema.maadr
       SELECT KEY codema.maadrag FILE "maadr" INDEX codema.maadr
       codema% = codema.maadr
     END IF 
   ELSE 
     CALL Fehler("Agenturnummer: " + vmnr$ + " wurde nicht gefunden, bitte wÑhlen Sie den Vermittler per Hand aus!","")
     codema% = GetCodeMA%(prompt%,Workstation%)
   END IF 
 ELSE 
   codema% = codema.kvertrag
 END IF 
 
 
 SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
 SELECT KEY knr% FILE "ADRESSEN" INDEX codeku.adressen
 
             IF zahlweise$ LIKE "j*" THEN 
               zw.kvertrag = 1
             END IF 
             IF zahlweise$ LIKE "h*" THEN 
               zw.kvertrag = 2
             END IF 
             IF zahlweise$ LIKE "v*" THEN 
               zw.kvertrag = 4
             END IF 
             IF zahlweise$ LIKE "m*" THEN 
               zw.kvertrag = 12
             END IF 
             IF zahlweiseb$ LIKE "e*" THEN 
               zw.kvertrag = 0
             END IF 
             Antragsnr.KVERTRAG = "IDEAL" + vnr$
             Bewertungssumme.kvertrag = VAL (beitrag$)
             Beitrag.kvertrag = VAL (beitrag$)
             tarif.kvertrag = tarif$
             REM Bewertungssumme.Kvertrag = 
             VS_Beginn.kvertrag = vbeginn$
             Antragsdatum.kvertrag = datum$
             KÅndigung.kvertrag = kuendig$
             IF bdauer% > 0 THEN DBeitrZahlung.kvertrag = bdauer%
             vsumme.kvertrag = VAL (vsumme$)
             codema.kvertrag = codema%
             Eintrittsalter.kvertrag = VAL (eintritt$)
             k1konto.kvertrag = LEFT$ (kto$,17)
             k1blz.kvertrag = LEFT$ (blz$,20)
             k1bank.kvertrag = LEFT$ (bank$,50)
  
             zvP1vName.kvertrag = zvP1vName$
             zvP1Name.kvertrag = zvP1Name$
             zvP1Geb.kvertrag = zvP1Geb$
             
             zvP1Ort.kvertrag = zvP1Ort$
             zvP1PLZ.kvertrag = zvP1PLZ$
             zvP1Strasse.kvertrag = zvP1Strasse$
             IF zvP1geschlecht$ LIKE "M" THEN 
               zvP1Geschlecht.kvertrag = "j"
             END IF 
             IF zvP1geschlecht$ LIKE "W" THEN 
               zvP1Geschlecht.kvertrag = "n"
             END IF 
 
             REM Notiz.kvertrag = bzbe$ + CHR$ (13) + CHR$ (10) + bzbt$
             Eintrittsalter.kvertrag = vbeginn% - zvp1geb%
             CALL QuickStore("KVERTRAG")
 
 
  REM REQUEST "Vertrag wurde aktualisiert","",2
  CALL IWriteLogOk("Vertrag:< " + vnr$ + "> aktualisiert")

 END SUB 
 
 
SUB IDEALvtneu(inid1$,sparte1$,importkz$)
 MOUSE OFF 
 vnr$ = ReadDestiIBM$("iposantrag","iposantragsnummer",inid1$)
 datum$ = LEFT$ (ReadDestiIBM$("ANTRAG","ANTRAGSTELLUNGSDATUM",inid1$),10)
 vmnr$ = ReadDestiIBM$("ANTRAG","VMNR",inid1$)

 kto$ = ReadDestiIBM$("BTGZ","KONTONUMMER",inid1$)
 blz$ = ReadDestiIBM$("BTGZ","BANKLEITZAHL",inid1$)
 bank$ = ReadDestiIBM$("BTGZ","GELDINSTITUT",inid1$)


 vbeginn$ = LEFT$ (ReadDestiIBM$("VMVD","VD_TD_BEG",inid1$),10)
 REM zahlweise$ = ReadDestiIBM$("DATA","zahlweise",inid1$)
 zahlweise$ = "monatlich"
 waehrung$ = ReadDestiIBM$("VMVD","wkz",inid1$)
 beitrag$ = ReadDestiIBM$("VMBTG","INKASSO",inid1$)
 pos% = 0
 pos% = INSTR (beitrag$,".")
 IF pos% > 0 THEN 
   NUMBASE ("999999999.00")
   beitr1$ = MID$ (beitrag$,1,pos% - 1) + "," + MID$ (beitrag$,pos% + 1)
   beitrag$ = beitr1$
 END IF 
 REM CALL Fehler(beitrag$,"")
 beitrag% = VAL (beitrag$)
 codema% = 0
           gdvVMNr$ = vmnr$
           IF EXISTS (gdvVMNr$,AGNummer.maadrag) AND LTRIM$ (gdvVMNr$) <> "" THEN 
             SELECT FIRST FILE "maadrag" INDEX AGNummer.maadrag
             SELECT KEY gdvVMNr$ FILE "maadrag" INDEX AGNummer.maadrag
             IF codema.maadrag > 0 AND gdvVMNr$ LIKE AGNummer.maadrag THEN 
               SELECT FIRST FILE "maadr" INDEX codema.maadr
               SELECT KEY codema.maadrag FILE "maadr" INDEX codema.maadr
               codema% = codema.maadr
             END IF 
           ELSE 
             CALL Fehler("Agenturnummer: " + vmnr$ + " wurde nicht gefunden, bitte wÑhlen Sie den Vermittler per Hand aus!","")
             codema% = GetCodeMA%(prompt%,Workstation%)
           END IF 
 


         SELECT FIRST FILE "ADRESSEN" INDEX codeku.adressen
         SELECT KEY knr% FILE "ADRESSEN" INDEX codeku.adressen
         REM CALL Fehler(nachname.adressen,vorname.adressen)
         REM REQUEST "Vertrag aufnehmen?","",130,reqv1%
         CALL IWriteLogOk("Vertrag:< " + vnr$ + "> NEU aufgenommen vom " + datum$)
         reqv1% = 1
         IF reqv1% = 1 THEN 
           REM CALL Fehler("Bitte suchen Sie ein Produkt aus der nachfolgenden Liste, das den untenstehenden Angaben entspricht!","IDEAL /" + sparte1$)
           viab% = 1
           SELECT FIRST FILE "adressen" INDEX codeku.adressen
           SELECT KEY knr% FILE "adressen" INDEX codeku.adressen
           lfdnr% = CreateVertrImp%(knr%,ImportKZ$)
           
           viab% = 0
           IF lfdnr% > 0 THEN 
             cuvt% = lfdnr%
             SELECT FIRST FILE "KVERTRAG" INDEX lfdnr.kvertrag
             SELECT KEY lfdnr% LOCK FILE "KVERTRAG" INDEX lfdnr.kvertrag
             IF zahlweise$ LIKE "j*" THEN 
               zw.kvertrag = 1
             END IF 
             IF zahlweise$ LIKE "h*" THEN 
               zw.kvertrag = 2
             END IF 
             IF zahlweise$ LIKE "v*" THEN 
               zw.kvertrag = 4
             END IF 
             IF zahlweise$ LIKE "m*" THEN 
               zw.kvertrag = 12
             END IF 
             IF zahlweiseb$ LIKE "e*" THEN 
               zw.kvertrag = 0
             END IF 
             Antragsnr.KVERTRAG = "IDEAL" + vnr$
             Beitrag.kvertrag = VAL (beitrag$)
             REM Bewertungssumme.Kvertrag = 
             VS_Beginn.kvertrag = vbeginn$
             Antragsdatum.kvertrag = datum$
             codema.kvertrag = codema%

             k1konto.kvertrag = LEFT$ (kto$,17)
             k1blz.kvertrag = LEFT$ (blz$,20)
             k1bank.kvertrag = LEFT$ (bank$,50)

             CALL QuickStore("KVERTRAG")
             REM CALL Fehler("Vertrag speich....","")
             nvt% = lfdnr%
           ELSE 
             CALL Fehler("Vertragserfassung abgebrochen!","")
             cuvt% = 0
           END IF 
         END IF 
 
 END SUB 



  REM *******************************************************  
  REM *******************************************************
  REM ***** Handling von LOG-Dateien ************************
  REM *******************************************************
  REM *******************************************************
  
  REM =================================
  REM ====== LOG-Datei erstellen ======
  REM =================================
SUB ICreateALog()
  OPEN _netpath$ + "IDEAL\IDEAL.LOG" FOR OUTPUT 
  ? "Datei " + _netpath$ + "IDEAL\" + "IDEAL.LOG erstellt am " + DATE$ ( TODAY ,"0d.mm.yyyy") + " / " + TIME$ ( NOW ,"hh:mm:ss")
  ? "-------------------------------------------------------------------------"
  ? 
  CLOSE OUTPUT 
 END SUB 
 
  REM =================================
  REM ====== LOG-Datei schlie·en ======
  REM =================================
SUB ICloseALog()
  OPEN _netpath$ + "IDEAL\IDEAL.LOG" FOR APPEND 
  ? 
  ? "-------------------------------------------------------------------------"
  ? "  " + STR$ (gdvFehler%,"9999") + " Fehler aufgetreten !"
  ? "-------------------------------------------------------------------------"
  ? "Eintragung beendet am " + DATE$ ( TODAY ,"0d.mm.yyyy") + "/" + TIME$ ( NOW ,"hh:mm:ss")
  CLOSE OUTPUT 
  CREATE DIALOG "PROT",0,0,244,154,"IDEAL-IMPORT","MS Sans Serif",8
  ADD DIALOG "PROT",4,0,0,244,130,0,""
  ADD DIALOG "PROT",9,6,9,22,22,2
  ADD DIALOG "PROT",5,35,13,194,10,0,"WÑhrend der zuletzt durchgefÅhrten Aktion wurde eine"
  ADD DIALOG "PROT",5,35,23,194,10,0,"Protokolldatei erstellt, in der eventuelle Fehler und Zusatz-"
  ADD DIALOG "PROT",5,35,33,194,10,0,"information gespeichert wurden."
  ADD DIALOG "PROT",5,35,53,194,10,0,"WÑhlen Sie " + CHR$ (34) + "Ja" + CHR$ (34) + ", wenn Sie das Protokoll einsehen und"
  ADD DIALOG "PROT",5,35,63,194,10,0,"eventuell Drucken wollen."
  ADD DIALOG "PROT",5,35,83,194,10,0,"WÑhlen Sie " + CHR$ (34) + "Nein" + CHR$ (34) + ", wenn Sie das Protokoll nicht"
  ADD DIALOG "PROT",5,35,93,194,10,0,"einsehen mîchten."
  ADD DIALOG "PROT",5,35,113,194,10,0,"Wollen Sie das Protokoll einsehen?"
  ADD DIALOG "PROT",1,118,134,55,15,0,"&Nein",0,0
  ADD DIALOG "PROT",1,62,134,55,15,1,"&Ja",1,1
  DIALOG "PROT",gdvBut%
  REMOVE DIALOG "PROT"
  IF gdvBut% = 1 THEN CALL IShowALog()
 END SUB 
 
  REM ===========================================
  REM ====== Fehler in LOG-Datei schreiben ======
  REM ===========================================
SUB IWriteLogFail(TLogText$)
  OPEN _netpath$ + "IDEAL\IDEAL.LOG" FOR APPEND 
  ? FN ansi("**********  FEHLER **********")
  ? TIME$ ( NOW ,"hh:mm:ss") + " " + FN ansi(TLogText$)
  ? FN ansi("*****************************")
  CLOSE OUTPUT 
 END SUB 
  
  REM =================================================
  REM ====== OKAY-Eintrag in LOG-Datei schreiben ======
  REM =================================================
SUB IWriteLogOk(TLogText$)
  OPEN _netpath$ + "IDEAL\IDEAL.LOG" FOR APPEND 
  ? TIME$ ( NOW ,"hh:mm:ss") + " " + FN ansi(TLogText$)
  CLOSE OUTPUT 
 END SUB 
 
  REM ===============================
  REM ====== LOG-Datei lîschen ======
  REM ===============================
SUB IDeleteALog()
  IF EXISTS (_netpath$ + "IDEAL\IDEAL.LOG") THEN DELETE _netpath$ + "IDEAL\IDEAL.LOG"
 END SUB 
 
  REM ================================
  REM ====== LOG-Datei anzeigen ======
  REM ================================
SUB IShowALog()
  SET STATUS "Anzeige des Importprotokolls"
  IF EXISTS (_netpath$ + "IDEAL\IDEAL.LOG") THEN 
    REM LOAD TEXT _netpath$ + "AFSK\AFSK.LOG"
    REM EDIT TEXT 
    atex$ = _netpath$ + "IDEAL\IDEAL.LOG"
    a% = CALL ("ShellExecute",0,"open",atex$,"","",1)
  ELSE 
    CALL Fehler("Es konnte kein Fehlerprotokoll gefunden werden!","")
  END IF 
  SET STATUS "Bereit"
 END SUB 
 
FUNCTION CreateVertrImp%(knr%,ImportKZ$)
 IF NOT OPEN ("statukey") THEN CALL DFile(3,"statukey" + _fpw$)
 IF NOT OPEN ("geadr") THEN CALL DFile(3,"geadr" + _fpw$)
 IF NOT OPEN ("geadr2") THEN CALL DFile(3,"geadr2" + _fpw$)
 IF NOT OPEN ("vprodukt") THEN CALL DFile(3,"vprodukt" + _fpw$)
 FILE "statukey"
 INDEX statuskey.statukey
 SELECT FIRST 
 REM DIM Sparten$( RECCOUNT ("SPARTEN") + 1)
 DIM Sparten$( RECCOUNT ("VPRODUKT") + 2)
 Sparten$(0) = "<keine Zuordnung>" + SPACE$ (80) + "000000"
 cfile$ = FILE 
 FILE "Waehrung"
 INDEX codew.waehrung
 SELECT FIRST 
 REM FILE "SPARTEN"
 REM INDEX CodeVA.SPARTEN
 alle$ = "n"
AnfVertAlle050820061: 
 FILE "VPRODUKT"
 a% = 1
 
 REM CALL Fehler(ImportKZ$,"Produkt")
 IF ImportKZ$ <> "" THEN 
   IF EXISTS (ImportKZ$,Importkz.vprodukt) THEN 
     FILE "vprodukt"
     INDEX ImportKZ.vprodukt
     SELECT FIRST FILE "vprodukt" INDEX importkz.vprodukt
     SELECT KEY importKZ$ FILE "vprodukt" INDEX importkz.vprodukt
     IF ImportKZ.vprodukt LIKE importKZ$ THEN 
       codevp% = codevp.vprodukt
       INDEX codevp.vprodukt
       req% = 1
       GOTO wvp050820061
     END IF 
   END IF 
 END IF 

 FILE "VPRODUKT"
 INDEX codevp.vprodukt
 CALL Fehler("Bitte suchen Sie ein Produkt aus der nachfolgenden Liste, das den untenstehenden Angaben entspricht!",importkz$)
 IF GOldProdSu$ LIKE "TRUE" THEN 
   codevp% = GetVprodukt%(0,0,0)
 ELSE 
   codevp% = NewGetCodeVP%()
 END IF 
wvp050820061: 
 IF codevp% > 0 THEN 
   req% = 1
   Auswahl$(0) = STR$ (codevp%,"000000")
 END IF 
 
 IF req% = 1 THEN 
   nsp% = VAL ( RIGHT$ (Auswahl$(0),6))
   REM SELECT KEY nsp% FILE "Sparten" INDEX codeva.sparten
   SELECT KEY nsp% FILE "vprodukt" INDEX codevp.vprodukt
   mwst% = mwst.vprodukt
   SELECT KEY codeva.vprodukt FILE "sparten" INDEX codeva.sparten
   codeva% = codeva.sparten
   SELECT KEY codege.vprodukt FILE "geadr" INDEX codege.geadr
   sparte$ = sparte.sparten
   ges$ = Gesellschaft.geadr
   codege% = codege.geadr
   wknr$ = wknr.vprodukt
   codegrsp% = codegrsp.sparten
   SELECT KEY codegrsp% FILE "Spgruppe" INDEX codegrsp.spgruppe
   gruppe$ = Gruppe.spgruppe
   IF GAFSK$ LIKE "TRUE" OR viab% = 1 THEN 
     req% = 0
   ELSE 
     REQUEST "Wollen Sie einen Fremdvertrag erfassen?","",135,req%
   END IF 
   SET STATUS "Datensatz neu angelegt..."
   BLANK FILE "KVERTRAG"
   lfdnr% = SER ("KVERTRAG",1)
   CreateVertrImp% = lfdnr%
   ErfasDatum.kvertrag = TODAY 
   lfdnr.KVERTRAG = lfdnr%
   lfdnrtotal.KVERTRAG = lfdnr% * 10000
   SELECT KEY knr% FILE GAdrDat$ INDEX codeku.GAdrDat$
   codeku.KVERTRAG = knr%
   VNehmer.kvertrag = LEFT$ ( LTRIM$ ( TRIM$ (Nachname.adressen)) + "," + LTRIM$ ( TRIM$ (vorname.adressen)) + "," + LTRIM$ ( TRIM$ (Stra·e.adressen)) + "," + LTRIM$ ( TRIM$ (PLZ.adressen + " " + Ort.adressen)),210)
   codevp.kvertrag = nsp%
   ANachname.kvertrag = nachname.GAdrDat$
   AVorname.kvertrag = vorname.GAdrDat$
   AStrasse.kvertrag = Stra·e.GAdrDat$
   AOrt.kvertrag = Ort.GAdrDat$
   APLZ.kvertrag = Plz.GAdrDat$
   letzteBearb.kvertrag = TODAY 
   CodeMV.KVERTRAG = 0
   codeGE.KVERTRAG = codege%
   Gesellschaft.kvertrag = LEFT$ (ges$,30)
   codeMA.KVERTRAG = 0
   codeVA.KVERTRAG = codeva%
   codegrsp.kvertrag = codegrsp%
   sparte.kvertrag = sparte$
   wknr.kvertrag = wknr$
   Spartengruppe.kvertrag = gruppe$
   letzteBearb.KVERTRAG = TODAY 
   Zahlart.KVERTRAG = 1
   Inkart.kvertrag = 2
   mwst.kvertrag = mwst%
   REM 141199
   codew.kvertrag = codew.stamm
   umrechnung.kvertrag = umrechnung.stamm
   waehrung.kvertrag = waehrung.stamm
   REM WaehrungBezeich.kvertrag = WaehrungBezeich.waehrung
   REM REQUEST "Wollen Sie einen Fremdvertrag erfassen?","",135,req%
   IF req% = 1 THEN 
     CodeVStatus.kvertrag = 11
     VStatusTXT.kvertrag = "Fremdvertrag"
     Fremdvertrag.kvertrag = "j"
   ELSE 
     CodeVStatus.kvertrag = 12
     VStatusTxT.kvertrag = "Antrag"
     IF GFPB% = - 1 THEN 
       Statuskey.kvertrag = Statuskey.statukey
       statusintern.kvertrag = keyword.statukey
     END IF 
   END IF 
 
   REM 030697
   ZW.KVERTRAG = 55
   cuvt% = 0
   tarif.Kvertrag = ""
   workstation.kvertrag = workstation.adressen
   IF EXISTS (nsp%,codevp.vpspezko) THEN SpezProvAktiv.kvertrag = "j"
   CALL QuickStore("KVERTRAG")
   REM Einkopieren der Spezialkonditionen
   IF EXISTS (nsp%,codevp.vpspezko) THEN 
     FILE "vpspezko"
     SELECT FIRST FILE "vpspezko" INDEX codevp.vpspezko
     SELECT KEY nsp% FILE "vpspezko" INDEX codevp.vpspezko
     WHILE NOT EOF ("vpspezko") AND codevp.vpspezko = nsp%
        IF codevp.vpspezko = nsp% THEN 
          BLANK FILE "spezkond"
          a% = CopyRecord%("VPSPEZKO","SPEZKOND")
          codekey.spezkond = SER ("spezkond",1)
          codevt.spezkond = lfdnr%
          QCodeVTMA.SPEZKOND = STR$ (codevt.SPEZKOND,"000000") + STR$ (codema.SPEZKOND,"000000")
          STORE FILE "SPEZKOND"
          UNLOCK CURRENT FILE "spezkond"
        ELSE 
          SELECT LAST FILE "vpspezko" INDEX codevp.vpspezko
        END IF 
       SELECT NEXT FILE "vpspezko" INDEX codevp.vpspezko
     WEND 
   END IF 
   REM Ende Einkopieren der Spezialkonditionen
 ELSE 
   CreateVertrag% = 0
 END IF 
 
 END FUNCTION 
 
 
SUB StatisStrMA()
 FILE "maadr"
 cu% = codema.maadr
 _cuma% = codema.maadr
 IF cu% < 1 THEN 
   CALL Fehler("Bitte wÑhlen Sie einen Vermittler aus!","")
   GOTO expend261106
 END IF 
 SET INDEX codema.MAADR
 INDEX codema.MAADR
 SELECT FIRST FILE "maadr" INDEX codema.maadr
 SELECT KEY _cuma% FILE "maadr" INDEX codema.maadr
 CALL HilfstruMA(_cuma%)
 SET INDEX codema.MAADR
 INDEX codema.MAADR
 SELECT FIRST 
 rec% = RECCOUNT ("maadr")
 DIM maa12%(10000)
 DIM maa12st%(10000)
 REM Aufbau eines Arrays mit den Nummern der Mitarbeiter, die der Struktur unterstellt sind
 IF _cuma% = 0 THEN GOTO expend261106
 ok% = 0
 anz% = 1
 anzold% = 0
 maa12%(0) = _cuma%
 REM CALL Fehler ("DEBUG-Beginn","***********************************************************************************************************************************************************************************************************")
 REM CALL Fehler("Export-Feststellung der Vermittler","")
 
 MOUSE OFF 
 ku% = 0
 cuold% = 0
 stold% = 1
startAGSel2611: 
 FILE "maadr"
 SELECT WHERE 
 SELECT WHERE VorgÑnger.maadr = cu%
 SELECT FIRST LOCK 
 REM startanz% = stold%
 WHILE NOT EOF ("maadr")
   ok% = 0
   FOR i% = 0 TO anz%
     IF maa12%(i%) = codema.maadr THEN 
       ok% = 1
       i% = anz%
     END IF 
   NEXT i%
   IF ok% = 0 THEN 
     IF codema.maadr > 0 THEN 
       maa12%(anz%) = codema.maadr
       maa12st%(anz%) = 0
       ExpAG.maadr = "1"
       STORE FILE "maadr"
       anz% = anz% + 1
     END IF 
   END IF 
 SELECT NEXT LOCK 
 WEND 
 
 FOR startanz% = stold% TO anz%
   IF maa12st%(startanz%) = 0 THEN 
     cu% = maa12%(startanz%)
     maa12st%(startanz%) = 1
     stold% = startanz%
     GOTO startAGSel2611:
   END IF 
 NEXT startanz%
 
 REM CALL Fehler("Vermittlerfeststellung beendet","")

  ON ERROR GOTO ErrorHandler
  REM DIRECTORY _netpath$ + "PROVIS"
  DIRECTORY GMACodeDir$
 
  dat$ = "statis0"
 CALL DFile(3,"sparten" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$)
 CALL DFile(3,"geadr2" + _fpw$)
 CALL DFile(3,"gekond" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"vprodukt" + _fpw$)
 CALL DFile(3,"kvertrag" + _fpw$)
 CALL DFile(3,"spgruppe" + _fpw$)
 
 IF EXISTS (dat$ + ".sbf") THEN 
   OPEN FILE GMACodeDir$ + dat$ + ";paris"
 END IF 
 
 
 
 
 FILE "kvertrag"
 Inde$ = "Antragsdatum.kvertrag"
 opt1% = 1
 
 INDEX inde$$
datSUFP261120061: 
 CREATE DIALOG "Konto1",0,0,221,185,title$,"MS Sans Serif",8
 ADD DIALOG "Konto1",9,6,7,24,22,2
 ADD DIALOG "Konto1",5,34,8,170,9,0,"Statistik NeuabschlÅsse:"
 ADD DIALOG "Konto1",4,34,14,176,5,0,""
 ADD DIALOG "Konto1",5,34,22,175,16,0,"Bitte geben Sie ein, fÅr welchen Zeitraum Sie eine öbersicht wÅnschen."
 ADD DIALOG "Konto1",5,34,40,175,32,0,"Wenn Sie keine Angaben zum Zeitraum eintragen, werden alle VertrÑge bis zum heutigen Tag berÅcksichtigt."
 ADD DIALOG "Konto1",5,34,80,12,8,0,"von"
 ADD DIALOG "Konto1",6,53,79,45,11,0,0,von$,10
 ADD DIALOG "Konto1",5,102,80,12,8,0,"bis"
 ADD DIALOG "Konto1",6,116,79,45,11,0,0,bis$,10
 
 ADD DIALOG "Konto1",4,1,97,219,60,0,"Auswahl fÅr Datumsfeld"
 ADD DIALOG "Konto1",3,5,107,92,12,0,"Antragsdatum",1,opt1%
 ADD DIALOG "Konto1",3,5,119,92,12,0,"Erfassungsdatum",2,opt1%
 ADD DIALOG "Konto1",3,5,131,92,12,0,"Vertragsbeginn",3,opt1%
 ADD DIALOG "Konto1",3,5,143,92,12,0,"Policedatum",4,opt1%
 
 ADD DIALOG "Konto1",1,50,164,55,15,1,"&Weiter",1,1
 ADD DIALOG "Konto1",1,110,164,55,15,0,"&Abbruch",0,0
 DIALOG "Konto1",req%
 REMOVE DIALOG "Konto1"
 MOUSE ON 
 IF req% <> 1 THEN GOTO expend261106
 IF von$ = "" THEN 
   von$ = "01.01.0001"
   von% = DAYS ("01.01.0001")
 ELSE 
   IF DateOK%(von$) THEN 
     von% = DAYS (von$)
   ELSE 
     CALL Fehler("Das Datum von: " + von$ + " ist ungÅltig!","Bitte neu eingeben!")
     GOTO datSUFP261120061
   END IF 
 END IF 
 IF bis$ = "" THEN 
   bis% = DAYS ( TODAY )
   bis$ = DATE$ ( TODAY ,"0d.mm.yyyy")
 ELSE 
   IF DateOK%(bis$) THEN 
     bis% = DAYS (bis$)
   ELSE 
     CALL Fehler("Das Datum bis: " + bis$ + " ist ungÅltig!","Bitte neu eingeben!")
     GOTO datSUFP261120061
   END IF 
 END IF 
 
 
 SELECT CASE opt1%
   CASE 1
     Inde$ = "Antragsdatum.kvertrag"
   CASE 2
     Inde$ = "erfasdatum.kvertrag"
   CASE 3
     Inde$ = "VS_Beginn.kvertrag"
   CASE 4
     Inde$ = "Policedatum.kvertrag"
 END SELECT 
 
 
 
 IF EXISTS (GMACodeDir$ + dat$ + ".sbf") THEN 
   IF OPEN (dat$) THEN CLOSE FILE dat$
   ON ERROR GOTO w250420071
   DELETE GMACodeDir$ + dat$ + ".*"
   ON ERROR GOTO ErrorHandler
   GOTO w250420072
 END IF 

w250420071: 
 ON ERROR GOTO ErrorHandler
 CALL Fehler("Eine zu lîschende Datei kann nicht gelîscht werden!","Bitte prÅfen Sie, ob Sie noch die Datei: " + dat$ + ".XLS geîffnet haben!")
w250420072: 

 
 CREATE dat$ + ";paris; paris; paris"
 ADD "CodeKey; NUM; 000000.;0;0"
 MAKE dat$
 FILE dat$
 CALL FldAdd1("Codekey","NUM;000000.",1)
   REM CALL FldAdd1("CodeMA","NUM;000000.",1)
   feld$ = "Agentur"
   CALL FldAdd1(feld$,"TXT;1000",1)
   CALL FldAdd1("Agenturno","TXT;20",1)
   feld$ = "Anzahl"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Einh"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Bewertung"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "Beitrag"
   CALL FldAdd1(feld$,"NUM;,999999999.00",0)
   feld$ = "Jahresbeitrag"
   CALL FldAdd1(feld$,"NUM;,999999999.00",0)
   feld$ = "AnzStorno"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "EinhSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "BWSto"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)

   feld$ = "AnzahlEigen"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "EinhEigen"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "BewertungEigen"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "BeitragEigen"
   CALL FldAdd1(feld$,"NUM;,999999999.00",0)
   feld$ = "JahresbeitragE"
   CALL FldAdd1(feld$,"NUM;,999999999.00",0)
   feld$ = "AnzStornoE"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "EinhStoE"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "BWStoE"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)

   feld$ = "AnzahlStru"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "EinhStru"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "BewertungStru"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "BeitragStru"
   CALL FldAdd1(feld$,"NUM;,999999999.00",0)
   feld$ = "JahresbeitragS"
   CALL FldAdd1(feld$,"NUM;,999999999.00",0)
   feld$ = "AnzStornoS"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "EinhStoS"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "BWStoS"
   CALL FldAdd1(feld$,"NUM;,999999999.",0)
   feld$ = "SR"
   CALL FldAdd1(feld$,"NUM;,999999999.00",0)
   feld$ = "SRAuto"
   CALL FldAdd1(feld$,"NUM;,999999999.00",0)

 SAVE FILE dat$
 DIM Agentur$(anz%)
 DIM Agenturno$(anz%)
 DIM Anzahl%(anz%)
 DIM Einh%(anz%)
 DIM Bewertung%(anz%)
 DIM Beitrag%(anz%)
 DIM Jahresbeitrag%(anz%)
 DIM AnzStorno%(anz%)
 DIM EinhSto%(anz%)
 DIM BWSto%(anz%)
 DIM SR%(anz%)
 DIM SRAuto%(anz%)

 DIM AnzahlEigen%(anz%)
 DIM EinhEigen%(anz%)
 DIM BewertungEigen%(anz%)
 DIM BeitragEigen%(anz%)
 DIM JahresbeitragE%(anz%)
 DIM AnzStornoE%(anz%)
 DIM EinhStoE%(anz%)
 DIM BWStoE%(anz%)

 DIM AnzahlStru%(anz%)
 DIM EinhStru%(anz%)
 DIM BewertungStru%(anz%)
 DIM BeitragStru%(anz%)
 DIM JahresbeitragS%(anz%)
 DIM AnzStornoS%(anz%)
 DIM EinhStoS%(anz%)
 DIM BWStoS%(anz%)

 REM CALL Fehler("Anfang While","")

 SELECT FIRST FILE "kvertrag" INDEX inde$$
 SELECT KEY von% FILE "kvertrag" INDEX inde$$
 ii% = 0
 j% = RECCOUNT ("kvertrag")
 MOUSE OFF 
 WHILE NOT EOF ("kvertrag") AND inde$$ >= von% AND inde$$ <= bis%
   ii% = ii% + 1
   sto% = 0
   leb% = 0
   eig% = 1
   codema% = codema.kvertrag
   IF codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 8 OR codevstatus.kvertrag = 4 OR codevstatus.kvertrag = 15 OR codevstatus.kvertrag = 16 OR codevstatus.kvertrag = 20 OR codevstatus.kvertrag = 21 THEN 
     REM storniert
     sto% = 1
   ELSE 
     IF codevstatus.kvertrag <> 9 AND codevstatus.kvertrag <> 10 AND codevstatus.kvertrag <> 11 AND codevstatus.kvertrag <> 13 THEN 
       REM lebend
       leb% = 1
     END IF 
   END IF 
w261120060: 
   foun% = 0
   FOR i% = 0 TO anz% - 1
     IF maa12%(i%) = codema% THEN 
       foun% = 1
       GOTO w26112061
     END IF 
   NEXT i%
w26112061: 
   IF foun% <> 1 THEN 
     REM VertragsVermittler ist keiner der zu testenden
     GOTO w261120062
   END IF 
   SELECT FIRST FILE "maadr" INDEX codema.maadr
   SELECT KEY codema% FILE "maadr" INDEX codema.maadr
   Agentur$(i%) = Nachname.maadr + ", " + vorname.maadr
   Agenturno$(i%) = Agenturnr.maadr
   SR%(i%) = StornoreserveEU.maadr
   SRAuto%(i%) = SRAutoBerech.maadr
   IF sto% = 0 AND leb% = 0 THEN GOTO w261120062
   IF eig% = 1 THEN 
     eig% = 0
     IF leb% = 1 THEN 
       Anzahl%(i%) = Anzahl%(i%) + 1
       Einh%(i%) = Einh%(i%) + Einheiten.kvertrag
       Bewertung%(i%) = Bewertung%(i%) + Bewertungssumme.kvertrag
       Beitrag%(i%) = Beitrag%(i%) + Beitrag.kvertrag
       Jahresbeitrag%(i%) = Jahresbeitrag%(i%) + (Beitrag.kvertrag * ZW.kvertrag)
       AnzahlEigen%(i%) = AnzahlEigen%(i%) + 1
       EinhEigen%(i%) = EinhEigen%(i%) + Einheiten.kvertrag
       BewertungEigen%(i%) = BewertungEigen%(i%) + Bewertungssumme.kvertrag
       BeitragEigen%(i%) = BeitragEigen%(i%) + Beitrag.kvertrag
       JahresbeitragE%(i%) = JahresbeitragE%(i%) + (Beitrag.kvertrag * ZW.kvertrag)
       
     END IF 
     IF sto% = 1 THEN 
       AnzStorno%(i%) = AnzStorno%(i%) + 1
       EinhSto%(i%) = EinhSto%(i%) + Einheiten.kvertrag
       BWSto%(i%) = BWSto%(i%) + Bewertungssumme.kvertrag
       AnzStornoE%(i%) = AnzStornoE%(i%) + 1
       EinhStoE%(i%) = EinhStoE%(i%) + Einheiten.kvertrag
       BWStoE%(i%) = BWStoE%(i%) + Bewertungssumme.kvertrag
     END IF 
     REM CALL Fehler("Ende eigen","")
   ELSE 
     REM aus Struktur
     IF leb% = 1 THEN 
       Anzahl%(i%) = Anzahl%(i%) + 1
       Einh%(i%) = Einh%(i%) + Einheiten.kvertrag
       Bewertung%(i%) = Bewertung%(i%) + Bewertungssumme.kvertrag
       Beitrag%(i%) = Beitrag%(i%) + Beitrag.kvertrag
       Jahresbeitrag%(i%) = Jahresbeitrag%(i%) + (Beitrag.kvertrag * ZW.kvertrag)
       AnzahlStru%(i%) = AnzahlStru%(i%) + 1
       EinhStru%(i%) = EinhStru%(i%) + Einheiten.kvertrag
       BewertungStru%(i%) = BewertungStru%(i%) + Bewertungssumme.kvertrag
       BeitragStru%(i%) = BeitragStru%(i%) + Beitrag.kvertrag
       JahresbeitragS%(i%) = JahresbeitragS%(i%) + (Beitrag.kvertrag * ZW.kvertrag)
     END IF 
     IF sto% = 1 THEN 
       AnzStornoS%(i%) = AnzStornoS%(i%) + 1
       EinhStoS%(i%) = EinhStoS%(i%) + Einheiten.kvertrag
       BWStoS%(i%) = BWStoS%(i%) + Bewertungssumme.kvertrag
       AnzStornoS%(i%) = AnzStornoS%(i%) + 1
       EinhStoS%(i%) = EinhStoS%(i%) + Einheiten.kvertrag
       BWStoS%(i%) = BWStoS%(i%) + Bewertungssumme.kvertrag
     END IF 
   END IF 
   IF i% = 0 THEN GOTO w261120062
   codema% = vorgÑnger.maadr
   SELECT FIRST FILE "maadr" INDEX codema.maadr
   SELECT KEY codema% FILE "maadr" INDEX codema.maadr
   GOTO w261120060
w261120062: 
   SELECT NEXT FILE "kvertrag" INDEX inde$$
   SET STATUS STR$ (ii%,",999999999") + " von " + STR$ (j%,",999999999")
 WEND 
 REM CALL Fehler("Ende While","")
 MOUSE OFF 
   FOR i% = 0 TO anz% - 1
     REM Ausgabe in Datei
     SELECT FIRST FILE "maadr" INDEX codema.maadr
     SELECT KEY maa12%(i%) FILE "maadr" INDEX codema.maadr
     IF Agentur$(i%) = "" THEN Agentur$(i%) = Nachname.maadr + ", " + vorname.maadr
    FOR xx% = 0 TO GhstruI% - 1
      IF GHilfstru%(xx%,0) = maa12%(i%) THEN 
        Agentur$(i%) = GHilfstru$(xx%)
        yyy% = xx%
        xx% = GhstruI% + 1
      END IF 
    NEXT xx%
     IF Agenturno$(i%) = "" THEN Agenturno$(i%) = Agenturnr.maadr
     FILE "statis0"
     BLANK FILE "statis0"
     codekey = GHilfstru%(yyy%,1)
     Agentur = Agentur$(i%)
     Agenturno = Agenturno$(i%)
     SR = SR%(i%)
     SRAuto = SRAUTO%(i%)
     Anzahl = Anzahl%(i%)
     Einh = Einh%(i%)
     Bewertung = Bewertung%(i%)
     Beitrag = Beitrag%(i%)
     Jahresbeitrag = Jahresbeitrag%(i%)
     AnzStorno = AnzStorno%(i%)
     EinhSto = EinhSto%(i%)
     BWSto = BWSto%(i%)

     AnzahlEigen = AnzahlEigen%(i%)
     EinhEigen = EinhEigen%(i%)
     BewertungEigen = BewertungEigen%(i%)
     BeitragEigen = BeitragEigen%(i%)
     JahresbeitragE = JahresbeitragE%(i%)
     AnzStornoE = AnzStornoE%(i%)
     EinhStoE = EinhStoE%(i%)
     BWStoE = BWStoE%(i%)
 
     AnzahlStru = AnzahlStru%(i%)
     EinhStru = EinhStru%(i%)
     BewertungStru = BewertungStru%(i%)
     BeitragStru = BeitragStru%(i%)
     JahresbeitragS = JahresbeitragS%(i%)
     AnzStornoS = AnzStornoS%(i%)
     EinhStoS = EinhStoS%(i%)
     BWStoS = BWStoS%(i%)

     STORE FILE "statis0"
   NEXT i%
   suanz% = 0
   suEinh% = 0
   suBewert% = 0
   suBeitrag% = 0
   suJahresbeit% = 0
   suAnzStorno% = 0
   suEinhSto% = 0
   suBWSto% = 0
   suSR% = 0
   suSRAuto% = 0

   suAnzahlEigen% = 0
   suEinhEigen% = 0
   suBewertEigen% = 0
   suBeitrEigen% = 0
   suJahresbeitE% = 0
   suAnzStornoE% = 0
   suEinhStoE% = 0
   suBWStoE% = 0

   suAnzahlStru% = 0
   suEinhStru% = 0
   suBewertStru% = 0
   suBeitragStru% = 0
   suJahresbeiS% = 0
   suAnzStornoS% = 0
   suEinhStoS% = 0
   suBWStoS% = 0

   FOR i% = 0 TO anz% - 1
     REM suanz% = suanz% + Anzahl%(i%)
     REM suEinh% = sueinh% + Einh%(i%)
     REM suBewert% = suBewert% + Bewertung%(i%)
     REM suBeitrag% = suBeitrag% + Beitrag%(i%)
     REM suJahresbeit% = suJahresbeit% + Jahresbeitrag%(i%)
     REM suAnzStorno% = suAnzStorno% + AnzStorno%(i%)
     REM suEinhSto% = suEinhSto% + EinhSto%(i%)
     REM suBWSto% = suBWSto% + BWSto%(i%)

     suAnzahlEigen% = suAnzahlEigen% + AnzahlEigen%(i%)
     suEinhEigen% = suEinhEigen% + EinhEigen%(i%)
     suBewertEigen% = suBewertEigen% + BewertungEigen%(i%)
     suBeitrEigen% = suBeitrEigen% + BeitragEigen%(i%)
     suJahresbeitE% = suJahresbeitE% + JahresbeitragE%(i%)
     suAnzStornoE% = suAnzStornoE% + AnzStornoE%(i%)
     suEinhStoE% = suEinhStoE% + EinhStoE%(i%)
     suBWStoE% = suBWStoE% + BWStoE%(i%)
     suSR% = susr% + sr%(i%)
     suSRAuto% = susrauto% + srauto%(i%)
     REM suAnzahlStru% = suAnzahlStru% + AnzahlStru%(i%)
     REM suEinhStru% = suEinhStru% + EinhStru%(i%)
     REM suBewertStru% = suBewertStru% + BewertungStru%(i%)
     REM suBeitragStru% = suBeitragStru% + BeitragStru%(i%)
     REM suJahresbeiS% = suJahresbeiS% + JahresbeitragS%(i%)
     REM suAnzStornoS% = suAnzStornoS% + AnzStornoS%(i%)
     REM suEinhStoS% = suEinhStoS% + EinhStoS%(i%)
     REM suBWStoS% = suBWStoS% + BWStoS%(i%)
   NEXT i%
     REM Leerzeile
     BLANK FILE "statis0"
     codekey = SER ("statis0")
     STORE FILE "statis0"

     BLANK FILE "statis0"
     codekey = SER ("statis0")
     Agentur = "Gesamtsummen"
     Agenturno = ""
     Anzahl = suanz%
     Einh = sueinh%
     Bewertung = suBewert%
     Beitrag = suBeitrag%
     Jahresbeitrag = suJahresbeit%
     AnzStorno = suAnzStorno%
     EinhSto = suEinhSto%
     BWSto = suBWSto%
 
     AnzahlEigen = suAnzahlEigen%
     EinhEigen = suEinhEigen%
     BewertungEigen = suBewertEigen%
     BeitragEigen = suBeitrEigen%
     JahresbeitragE = suJahresbeitE%
     AnzStornoE = suAnzStornoE%
     EinhStoE = suEinhStoE%
     BWStoE = suBWStoE%
 
     AnzahlStru = suAnzahlStru%
     EinhStru = suEinhStru%
     BewertungStru = suBewertStru%
     BeitragStru = suBeitragStru%
     JahresbeitragS = suJahresbeiS%
     AnzStornoS = suAnzStornoS%
     EinhStoS = suEinhStoS%
     BWStoS = suBWStoS%
 
     SR = suSR%
     SRAUTO = suSRAuto%

     STORE FILE "statis0"

   IF EXISTS (GMACodeDir$ + "statis0.xls") THEN 
     DELETE GMACodeDir$ + "statis0.xls"
   END IF 
   FILE "statis0":REM                                       Combo: Current File
   INDEX codekey
   REM                                                    Menu:  FieldSelection
   REM OPEN FIELDS Agentur,Agenturno,Anzahl,Punkte,Bewertung,Provision,SR,AnzStorno,PunkteSto,BWSto 
   Superbase.Converters.SBF.SourceFormat = "Superbase":REM        ExportFile
   Superbase.Converters.SBF.SourceFile = "statis0"
   Superbase.Converters.SBF.Descending = 0
   Superbase.Converters.SBF.Merge = 0
   Superbase.Converters.SBF.LogErrors = 0
   Superbase.Converters.SBF.MultiResponse = 0
   Superbase.Converters.XLS.DestFormat = "Microsoft Excel"
   Superbase.Converters.XLS.DestFile = GMACodeDir$ + "statis0.XLS"
   Superbase.Converters.XLS.StartRow = 2
   Superbase.Converters.XLS.StartCol = 1
   Superbase.Converters.XLS.EndRow = - 1
   Superbase.Converters.XLS.EndCol = - 1
   Superbase.Converters.XLS.UseLabels = - 1
   Superbase.Converters.XLS.Convert(Superbase.Converters.SBF)
   WAIT FOR 3
   REQUEST "Aufruf der MS Excel-Liste","",2
   a% = CALL ("ShellExecute",0,"open",GMACodeDir$ + "statis0.XLS","","",1)


 MOUSE ON 
expend261106: 
 FILE "maadr"
 SELECT WHERE 
 SELECT KEY _cuma% FILE "maadr" INDEX codema.maadr
 END SUB 


SUB HilfstruMA(codema%)
    REM SET ANSICONVERT OFF 
    REDIM GHilfstru$(20000)
    REDIM GHilfstru%(20000,1)
    GhstruI% = 0

    FILE "maadr"
    macount% = 0
    REDIM Nachfolger%(1,1)
    REDIM VorgÑnger%(1,1)
    SELECT KEY codema% FILE "maadr" INDEX codema.maadr
    REM adr$ = "Die StrukturÅbersicht wird ab dem Vermittler " + nachname.maadr + "," + vorname.maadr + "erstellt"
    REM CALL Fehler(adr$,"Wenn Sie die öbersicht Åber die gesamte Struktur wÅnschen, dann suchen Sie die Firma und betÑtigen dann den Button <Ausdruck der Struktur>")
    adr$ = nachname.maadr + "," + vorname.maadr
    MOUSE OFF 
    SELECT FIRST FILE "maadr" INDEX codema.maadr
    WHILE NOT EOF ("maadr")
        IF (codema.maadr <> vorgÑnger.maadr) AND (vorgÑnger.maadr > 0) AND (codema.maadr > 0) THEN 
           SET STATUS nachname.maadr + " gefunden"
            macount% = macount% + 1
            REDIM Nachfolger%(macount%)
            REDIM VorgÑnger%(macount%)
            Nachfolger%(macount%) = codema.maadr
            VorgÑnger%(macount%) = vorgÑnger.maadr
        END IF 
        SELECT NEXT FILE "maadr" INDEX codema.maadr
   WEND 
   REM IF EXISTS (GMACodeDir$ + "mastruk.ini") THEN DELETE GMACodeDir$ + "mastruk.ini"
   REM OPEN GMACodeDir$ + "mastruk.ini" FOR OUTPUT 
 
   REM ? FN ansi("StrukturÅbersicht ab Vermittler ") + FN ansi(adr$) + " vom " + DATE$ ( TODAY ,"0d.mm.yyyy")
   Ganzdown% = 0
   CALL MAStrHDruck(codema%,"")
   REM CALL Fehler( STR$ (Ganzdown%),"")

 END SUB 
 
 
SUB MAStrHDruck(codema%,lines$)
    Ganzdown% = Ganzdown% + 1
    horz$ = "-"
    vert$ = "|"
    einstieg$ = vert$ + horz$
    codema2% = codema%
 
 
    'fÅrs Baum-Zeichnen: die Anzahl der direkten Nachfolger bestimmen
    pos% = 0
    FOR pos% = 1 TO macount%
        'den nÑchsten Nachfolger von codema2% bestimmen
        IF (VorgÑnger%(pos%) = codema2%) THEN 
            maxNachfolger% = Nachfolger%(pos%)
        END IF 
    NEXT pos%
    
    'Ausgabe des (aktuellen) VorgÑngers
    SELECT FIRST FILE "maadr" INDEX codema.maadr
    SELECT KEY codema% FILE "maadr" INDEX codema.maadr
    IF LTRIM$ (agenturnr.maadr) <> "" THEN 
      adr$ = LTRIM$ (Nachname.maadr)
    ELSE 
      adr$ = LTRIM$ (Nachname.maadr)
    END IF 
    IF LTRIM$ (vorname.maadr) <> "" THEN adr$ = adr$ + ", " + LTRIM$ (vorname.maadr)
    IF LTRIM$ (plz.maadr) <> "" THEN adr$ = adr$ + ", " + LTRIM$ (plz.maadr)
    IF LTRIM$ (ort.maadr) <> "" THEN adr$ = adr$ + " " + LTRIM$ (ort.maadr)
    IF LTRIM$ (stra·e.maadr) <> "" THEN adr$ = adr$ + ", " + LTRIM$ (stra·e.maadr)
 
    REM adr$ = adr$ + " (" + STR$ (stufe.maadr,"000.") + ")"
    IF nichtaktiv.maadr = "j" THEN 
      adr$ = adr$ + "  nicht mehr aktiv"
    END IF 
    IF KÅndigung.maadr > 0 THEN 
      adr$ = adr$ + " KÅndigung zum: " + DATE$ (KÅndigung.maadr,"0d.mm.yyyy")
    END IF 
    IF AusgeschAm.maadr > 0 THEN 
      adr$ = adr$ + " Ausgeschieden am: " + DATE$ (AusgeschAm.maadr,"0d.mm.yyyy")
    END IF 
    SET STATUS adr$ + " gedruckt"
    GHilfstru$(GhstruI%) = GHilfstru$(GhstruI%) + adr$
    GHilfstru%(GhstruI%,0) = codema.maadr
    GHilfstru%(GhstruI%,1) = GhstruI%
    GhstruI% = GhstruI% + 1
    tempstufe% = stufe.maadr
 
    pos% = 0
    
    WHILE pos% < macount% + 1
        'den nÑchsten Nachfolger von codema2% bestimmen
        IF (VorgÑnger%(pos%) = codema2%) THEN 
            IF (Nachfolger%(pos%) = maxNachfolger%) THEN 
                sublines$ = lines$ + "  "
            ELSE 
                sublines$ = lines$ + vert$ + " "
            END IF 
            REM ? lines$ + einstieg$;'die Einstiegs-Linie fÅr den Nachfolger 
            GHilfstru$(GhstruI%) = GHilfstru$(GhstruI%) + lines$ + einstieg$
            CALL MAStrHDruck(Nachfolger%(pos%),sublines$)
        END IF 
 
        pos% = pos% + 1
    WEND 
        
    REM IF tempstufe% = 2 THEN ? lines$'sieht besser aus
 
 END SUB 
  
 

 REM Anpassung der VSt in VertrÑgen, wenn VSt geÑndert wurde
SUB VStAnpass(QCodeGEVA$,v0$,v1$,v2$,v3$,v4$,v5$,v6$,v7$,v8$,v9$,opt%,vst%)
           FILE "Kvertrag"
           INDEX QuickGEVA.kvertrag
           SELECT FIRST 
           SELECT KEY QCodeGEVA$ LOCK FILE "Kvertrag" INDEX QuickGEVA.kvertrag
           i% = 0
           WHILE NOT EOF ("Kvertrag") AND QuickGEVA.kvertrag = QCodeGEVA$
             ok1% = 0
             IF v0$ = "j" THEN 
               IF codevstatus.kvertrag = 1 THEN ok1% = - 1
             END IF 
             IF v1$ = "j" THEN 
               IF codevstatus.kvertrag = 2 THEN ok1% = - 1
             END IF 
             IF v2$ = "j" THEN 
               IF codevstatus.kvertrag = 3 THEN ok1% = - 1
             END IF 
             IF v3$ = "j" THEN 
               IF codevstatus.kvertrag = 5 THEN ok1% = - 1
             END IF 
             IF v4$ = "j" THEN 
               IF codevstatus.kvertrag = 6 THEN ok1% = - 1
             END IF 
             IF v5$ = "j" THEN 
               IF codevstatus.kvertrag = 7 THEN ok1% = - 1
             END IF 
             IF v6$ = "j" THEN 
               IF codevstatus.kvertrag = 8 THEN ok1% = - 1
             END IF 
             IF v7$ = "j" THEN 
               IF codevstatus.kvertrag = 11 THEN ok1% = - 1
             END IF 
             IF v8$ = "j" THEN 
               IF codevstatus.kvertrag = 12 THEN ok1% = - 1
             END IF 
             IF v9$ = "j" THEN 
               IF codevstatus.kvertrag = 9 THEN ok1% = - 1
             END IF 
             IF ok1% <> - 1 THEN GOTO end021020052
             cc% = codeva.kvertrag
             SELECT FIRST FILE "sparten" INDEX codeva.sparten
             SELECT KEY cc% FILE "sparten" INDEX codeva.sparten
             IF formular LIKE "VERTR026" THEN GOTO end021020052 
             i% = i% + 1
             mwst.kvertrag = mwst.vprodukt
             rzsonst% = rzusonst.vprodukt
             IF zw.kvertrag = 0 THEN 
               rz% = rzueinmal.vprodukt
             END IF 
             IF zw.kvertrag = 1 THEN 
               rz% = rzujÑhrl.vprodukt
             END IF 
             IF zw.kvertrag = 2 THEN 
               rz% = rzuhalb.vprodukt
             END IF 
             IF zw.kvertrag = 4 THEN 
               rz% = rzuviert.vprodukt
             END IF 
             IF zw.kvertrag = 6 THEN 
               rz% = rzu2mon.vprodukt
             END IF 
             IF zw.kvertrag = 12 THEN 
               rz% = rzumon.vprodukt
             END IF 
             mwst% = mwst.kvertrag
             IF vst% > 0 THEN 
               REM alte vst>0, hei·t erstmal auf Netto rÅckrechnen
               SELECT CASE opt%
               CASE 1
                 REM im Feld Beitrag wurde der Bruttobeitrag eingetragen, von hier aus berechnen
                 Nettobeitrag.kvertrag = VAL ( STR$ (Beitrag.kvertrag / (100 + vst%),"99999999.00"))
               CASE 2
                 REM im Feld Beitrag wurde der Nettobeitrag (GDV-Import) eingetragen, von hier aus berechnen
                 Nettobeitrag.kvertrag = Beitrag.kvertrag
               CASE 3
                 REM im Feld Netto-Beitrag steht der Nettobeitrag , von hier aus berechnen
                 Beitrag.kvertrag = Nettobeitrag.kvertrag
               END SELECT 
             END IF 
             SELECT CASE opt%
               CASE 1
                 REM im Feld Beitrag wurde der Bruttobeitrag eingetragen, von hier aus berechnen
                 IF mwst.kvertrag > 0 THEN 
                   NettoMwst% = Beitrag.kvertrag * 100 / (100 + mwst.kvertrag)
                   NettoMwst$ = STR$ (NettoMwst%,"99999999.00")
                   Nettobeitrag.kvertrag = VAL (NettoMwst$)
                 ELSE 
                   Nettobeitrag.kvertrag = Beitrag.kvertrag
                 END IF 
               CASE 2
                 REM im Feld Beitrag wurde der Nettobeitrag (GDV-Import) eingetragen, von hier aus berechnen
                 IF mwst.kvertrag > 0 THEN 
                   Nettobeitrag.kvertrag = Beitrag.kvertrag
                   Beitrag.kvertrag = Nettobeitrag.kvertrag * (100 + mwst.kvertrag) / 100
                 ELSE 
                   Beitrag.kvertrag = Nettobeitrag.kvertrag
                 END IF 
               CASE 3
                 REM im Feld Netto-Beitrag steht der Nettobeitrag , von hier aus berechnen
                 IF mwst.kvertrag > 0 THEN 
                   Beitrag.kvertrag = Nettobeitrag.kvertrag * (100 + mwst.kvertrag) / 100
                 ELSE 
                   Beitrag.kvertrag = Nettobeitrag.kvertrag
                 END IF 
             END SELECT 
             REM Netto$ = STR$ ((Beitrag.kvertrag * 100) / (100 + mwst.kvertrag),"9999999999.00")
             IF DBeitrZahlung.kvertrag = 0 THEN DBeitrZahlung.kvertrag = VS_Dauer.kvertrag
             IF Bewertungssumme.kvertrag <> 0 AND a$ = "andibarg" THEN 
               bewert% = Bewertungsbasis.vprodukt
               IF bewert% = 0 THEN bewert% = 1
               IF Bewertungsbasis.vprodukt = - 1 THEN 
                 Einheiten.kvertrag = 0
               ELSE 
                 einh$ = STR$ (Bewertungssumme.kvertrag / bewert%,",9999999999.0000")
                 Einheiten.kvertrag = VAL (einh$)
               END IF 
             END IF 
             STORE FILE "Kvertrag"
             UNLOCK CURRENT FILE "kvertrag"
             UNLOCK FILE "kvertrag"
end021020052: 
             SELECT NEXT LOCK FILE "kvertrag" INDEX QuickGEVA.kvertrag
             SET STATUS STR$ (i%,"999999") + " DatensÑtze angepa·t!"
           WEND 
           UNLOCK CURRENT FILE "kvertrag"
           UNLOCK FILE "kvertrag" ALL 
           SELECT KEY QCodeGEVA$ LOCK FILE "vprodukt" INDEX QCodeGEVA.vprodukt
           AnzahlVertr.vprodukt = i%
           STORE FILE "Vprodukt"
           UNLOCK CURRENT FILE "VPRODUKT"
           UNLOCK FILE "vprodukt"
           SET STATUS ""
           GVarI% = GVarI% + i%
 END SUB 

SUB VStChange()
 CALL DFile(3,"VProdukt" + _fpw$)
 CALL DFile(3,"KVERTRAG" + _fpw$)
 CALL DFile(3,"GEKOND" + _fpw$)
 CALL DFile(3,"MAADR" + _fpw$)
 CALL DFile(3,"GEKONDM" + _fpw$)
 CALL DFile(3,"Sparten" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$):CALL DFile(3,"geadr2" + _fpw$)
 CALL DFile(3,"VPSPEZKO" + _fpw$)
 CALL DFile(3,"VPGEKOND" + _fpw$)
 CALL DFile(3,"FOERKOND" + _fpw$)
 CALL DFile(3,"statukey" + _fpw$)
 CALL DFile(3,"spgruppe" + _fpw$)

 CREATE DIALOG "Konto1",0,0,221,165,title$,"MS Sans Serif",8
 ADD DIALOG "Konto1",9,6,7,24,22,2
 ADD DIALOG "Konto1",5,34,8,170,9,0,"Umstellung VSt:"
 ADD DIALOG "Konto1",4,34,14,176,5,0,""
 ADD DIALOG "Konto1",5,34,22,175,16,0,"Bitte geben Sie im Feld <von> ein, fÅr welche VSt Sie eine Umstellung wÅnschen,"
 ADD DIALOG "Konto1",5,34,40,175,32,0,"und im Feld <auf>, den Wert der neuen VSt. Es werden nur diejenigen Produkte angepasst, bei denen die Checkbox <automatische Berechnung> angekreuzt ist."
 ADD DIALOG "Konto1",5,34,90,12,8,0,"von"
 ADD DIALOG "Konto1",6,53,89,45,11,0,0,von$,10
 ADD DIALOG "Konto1",5,102,90,12,8,0,"auf"
 ADD DIALOG "Konto1",6,116,89,45,11,0,0,auf$,10
 REM ADD DIALOG "Konto1",2,34,97,148,11,0,"Liste mit Volumen ausgeben","j","n",volumen$
 REM ADD DIALOG "Konto1",5,44,108,167,25,0,"(es werden auch die Provisionen angezeigt, die wegen fehlender ZahlungsbeitrÑge in der Mahnlist sind)"
 ADD DIALOG "Konto1",1,50,144,55,15,1,"&Weiter",1,1
 ADD DIALOG "Konto1",1,110,144,55,15,0,"&Abbruch",0,0
 DIALOG "Konto1",req%
 REMOVE DIALOG "Konto1"
 IF req% <> 1 THEN GOTO end071220062
 CALL Fehler("Durch diese Operation werden sowohl die Produkte, als auch die zu den Prdukten gehîrenden VertrÑge angepasst!","")
 REQUEST "énderungen wirklich durchfÅhren?","",135,req%
 IF req% <> 1 THEN GOTO end071220062


         opt% = 3
         DIM dlg AS Dialog
         DIM control AS DialogControl
 
         v8$ = "j":REM Antrag
         v0$ = "j":REM lebend
         v1$ = "j":REM leben / kurzfristig / unterjÑhrig 
         REM DIM dlg AS Dialog
         REM DIM control AS DialogControl
 
         Superbase.Dialogs.Add("Dialogname")
         SET dlg = Superbase.Dialogs.Dialogname
         dlg.Move(0,0,218,177)
         dlg.Caption = "Anpassung VSt"
         dlg.FontName = "MS Sans Serif"
         dlg.FontSize = 8
 
         SET control = dlg.Add("DialogLabel12","DialogLabel")
         control.Move(5,1,120,20)
         control.Caption = "Anpassung der VertrÑge die den folgenden Vertragsstatus besitzen"
 
         SET control = dlg.Add("DialogLabel13","DialogLabel")
         control.Move(155,3,86,9)
         control.Caption = "anpassen"
 
         SET control = dlg.Add("DialogLabel1","DialogLabel")
         control.Move(5,19,124,9)
         control.Caption = "lebend"
 
         SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
         control.Move(168,19,12,9)
         control.Caption = ""
         control.Bind("v0$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel2","DialogLabel")
         control.Move(5,30,124,10)
         control.Caption = "leben/kurzfristig/unterjÑhrig"
 
         SET control = dlg.Add("DialogCheckBox3","DialogCheckBox")
         control.Move(168,30,12,10)
         control.Caption = ""
         control.Bind("v1$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel10","DialogLabel")
         control.Move(5,41,124,10)
         control.Caption = "ruhend/Anwartschaft"
 
         SET control = dlg.Add("DialogCheckBox5","DialogCheckBox")
         control.Move(168,41,12,10)
         control.Caption = ""
         control.Bind("v2$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel3","DialogLabel")
         control.Move(5,57,124,10)
         control.Caption = "ruhend/beitragsfrei"
 
         SET control = dlg.Add("DialogCheckBox7","DialogCheckBox")
         control.Move(168,56,12,9)
         control.Caption = ""
         control.Bind("v3$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel4","DialogLabel")
         control.Move(5,73,124,10)
         control.Caption = "beitragsfrei"
 
          SET control = dlg.Add("DialogCheckBox9","DialogCheckBox")
         control.Move(168,72,12,9)
         control.Caption = ""
         control.Bind("v4$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel5","DialogLabel")
         control.Move(5,84,124,10)
         control.Caption = "beitragsfrei durch Leistung"
 
         SET control = dlg.Add("DialogCheckBox11","DialogCheckBox")
         control.Move(168,84,12,10)
         control.Caption = ""
         control.Bind("v5$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel6","DialogLabel")
         control.Move(5,97,124,10)
         control.Caption = "Beitragsstundung"
 
         SET control = dlg.Add("DialogCheckBox13","DialogCheckBox")
         control.Move(168,97,12,10)
         control.Caption = ""
         control.Bind("v6$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel8","DialogLabel")
         control.Move(5,110,124,10)
         control.Caption = "Fremdvertrag"
 
         SET control = dlg.Add("DialogCheckBox19","DialogCheckBox")
         control.Move(168,108,12,10)
         control.Caption = ""
         control.Bind("v7$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel7","DialogLabel")
         control.Move(5,128,124,9)
         control.Caption = "Antrag"
 
         SET control = dlg.Add("DialogCheckBox15","DialogCheckBox")
         control.Move(168,127,12,10)
         control.Caption = ""
         control.Bind("v8$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogLabel9","DialogLabel")
         control.Move(5,140,124,10)
         control.Caption = "Sonstiges"
 
         SET control = dlg.Add("DialogCheckBox17","DialogCheckBox")
         control.Move(168,139,12,9)
         control.Caption = ""
         control.Bind("v9$")
         control.ValueOn = "j"
         control.ValueOff = "n"
 
         SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
         control.Move(118,156,42,13)
         control.Default = 1
         control.Caption = "OK"
         control.ReturnValue = 1
 
         SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
         control.Move(162,156,43,13)
         control.Caption = "Abbruch"
         control.ReturnValue = 0
         DIALOG "Dialogname",req%
         REMOVE DIALOG "Dialogname"
         IF req% <> 1 THEN GOTO end071220062
 
 


 vonmwst% = VAL (von$)
 aufmwst% = VAL (auf$)
 FILE "vprodukt"
 INDEX codevp.vprodukt
 SELECT FIRST LOCK 
 MOUSE OFF 
 i% = 0
 j% = RECCOUNT ("vprodukt")
 GVarI% = 0
 WHILE NOT EOF ("vprodukt")
   i% = i% + 1
   SET STATUS STR$ (i%,",999999") + "/" + STR$ (j%,",999999") + " Produkte geprÅft"
   IF MWST.vprodukt = vonmwst% AND AutomNetBer.vprodukt = "j" THEN 
     QCodeGEVA$ = STR$ (codege.vprodukt,"000000") + STR$ (codeva.vprodukt,"000000")
     MWST.vprodukt = aufmwst%
     STORE FILE "vprodukt"
         FILE "Kvertrag"
         INDEX QuickGEVA.kvertrag
         SELECT FIRST 
 
         IF RECCOUNT ("Kvertrag") > 0 AND EXISTS (QCodeGEVA$,QuickGEVA.kvertrag) THEN 
           CALL VStAnpass(QCodeGEVA$,v0$,v1$,v2$,v3$,v4$,v5$,v6$,v7$,v8$,v9$,opt%,vonmwst%)
         END IF 
 
   END IF 
   SELECT NEXT LOCK FILE "vprodukt" INDEX codevp.vprodukt
 WEND 
 CALL Fehler("Anpassung beendet!","Es wurden " + LTRIM$ ( STR$ (GVarI%,",999999999")) + " VertrÑge angepasst!")
end071220062: 
 MOUSE ON 
 END SUB 

 REM neue Akquise Maske 08.01.2007
SUB ADRAkquiNew()
 knr% = Codeku.adressen
 IF disabled%("AKQUISE") THEN END SUB 
 CALL DFile(2,"OFFICE\akquise" + _fpw$)
 REM cudo% = CodeDOK.DOKUMENT
 _formend% = 0
 SET STATUS "Bereit"
 maske$ = "AKQUIGES"
 
 FILE "AKQUISE"
 SELECT WHERE FILE "AKQUISE"
 INDEX codeku.akquise
 SELECT FIRST 
 WHILE _formend% = 0
   DOKsub% = 0
   IF UCASE$ ( FORM ) <> maske$ THEN 
     FILE "akquise"
     SET HEADING title$ + " - Terminverwaltung"
     befe$ = "SELECT WHERE codeku.akquise = knr%"
     REM EXECUTE befe$
     OPEN FORM GOFFForm$ + maske$
     SET STATUS "Terminverwaltung"
     CALL MNAKQUI1()
     CALL ADRAkquiInt()
     FORM 
     SET DISPLAY ON 
     GAppName$ = _netpath$ + "DOCP\termine.pdf"
   END IF 
   MENU ON 
 adrname$ = Kundennummer.adressen + " - " + Nachname.adressen + ", " + Vorname.adressen
   FORM 
   MOUSE ON 
   dokgrup$ = Gruppe.Dokument
   FORM 
   CALL ClearKBDBuffer()
   WAIT MOUSE OR KEY OR MENU 
    REM ** Tastencodes
   GET k$
   IF k$ = CHR$ (27) THEN _formend% = 1
 
   SELECT CASE DOKsub%
   CASE 1
     REM in Termin springen
     REM CALL QuickStore("adressen")
     GCodeaq% = codeaq.akquise
     cuaq% = codeaq.akquise
     CALL AKQUISE(2)
     IF FORM = adrmaske$ THEN CALL ADRFeldnamen()
     GCodeaq% = 0
   CASE 3
     REM nach Datum sortiert
     maske$ = "AKQUIGE1"
   CASE 4
     REM nach Mitarbeiter sortiert
     maske$ = "AKQUIGE2"
   CASE 5
     REM nach erledigt sortiert
     maske$ = "AKQUIGE3"
   CASE 6
     REM nach Termin sortiert
     maske$ = "AKQUIGES"
   CASE 7
     REM nach Notiz sortiert
     maske$ = "AKQUIGE4"
   CASE 8
     REM nach Wiedervorlage sortiert
     maske$ = "AKQUIGE5"
   CASE 9
     REM nach Aktion sortiert
     maske$ = "AKQUIGE6"
   END SELECT 
 WEND 
 _formend% = 0
 cuaq% = 0
 
 IF GCODieRuf% <> 0 OR GCODieRuf1% <> 0 OR GCODieRuf2% <> 0 THEN 
   ret% = CALL ("_SearchClose")
 END IF 
 GCODieRuf% = 0
 GCODieRuf1% = 0
 GCODieRuf2% = 0
 SELECT WHERE FILE "akquise"
 END SUB 
 
 
SUB MNAKQUI1()
 CALL MNProgramm()
 CALL MNHilfe(2)
 END SUB 
 
SUB ADRAkquiInt()
 SELECT FORM KEY knr% FILE "Adressen" INDEX codeku.adressen
 SELECT FORM KEY knr% FILE "Akquise" INDEX codeku.akquise
 END SUB 
 


SUB BuchKor1()
 CALL DFile(3,"buchung1" + _fpw$)
 CALL DFile(3,"sparten" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$):CALL DFile(3,"geadr2" + _fpw$)
 CALL DFile(3,"gekond" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"maadrgru" + _fpw$)
 CALL DFile(3,"kvertrag" + _fpw$)
 CALL DFile(2,"OFFICE\" + GADRDat$ + _fpw$)
 FILE "kvertrag"
 INDEX lfdnr.kvertrag
 SELECT FIRST 
 FILE "buchung1"
 INDEX datum.buchung1
 SELECT FIRST 
 da% = DAYS ("17.3.2007")
 
 i% = 0
 j% = 0
 CALL Fehler("Sie erhalten jetzt die Mîglichkeit, die Bewertungssummen und die Einheiten in der Buchungsdatei durch die Bewertungssummen und Einheiten aus der Vertragsdatei, fÅr BuchungssÑtze mit dem Buchungsdatum ...von...bis..., zu ersetzen! ","")
anf030520071: 
   CREATE DIALOG "Konto1",0,0,221,145,title$,"MS Sans Serif",8
   ADD DIALOG "Konto1",9,6,7,24,22,2
   ADD DIALOG "Konto1",5,34,8,170,9,0,"Buchungsdateikorrektur:"
   ADD DIALOG "Konto1",4,34,14,176,5,0,""
   ADD DIALOG "Konto1",5,34,22,175,16,0,"Bitte geben Sie ein, fÅr welchen Buchungszeitraum Sie die öbernahme wÅnschen."
   ADD DIALOG "Konto1",5,34,40,175,32,0,"Wenn Sie keine Angaben zum Buchungszeitraum eintragen, werden alle Buchungen angepasst."
   ADD DIALOG "Konto1",5,34,80,13,8,0,"vom"
   ADD DIALOG "Konto1",6,53,79,45,11,0,0,von$,10
   ADD DIALOG "Konto1",5,102,80,12,8,0,"bis"
   ADD DIALOG "Konto1",6,116,79,45,11,0,0,bis$,10
   REM ADD DIALOG "Konto1",2,34,97,148,11,0,"alle berechneten Provisionen einbeziehen","j","n",allProv$
   REM ADD DIALOG "Konto1",5,44,108,167,25,0,"(es werden auch die Provisionen angezeigt, die wegen fehlender ZahlungsbeitrÑge in der Mahnlist sind)"
   ADD DIALOG "Konto1",1,50,124,55,15,1,"&Weiter",1,1
   ADD DIALOG "Konto1",1,110,124,55,15,0,"&Abbruch",0,0
   DIALOG "Konto1",req%
   REMOVE DIALOG "Konto1"
   IF req% <> 1 THEN GOTO end030520071
   IF VAL (von$) < 1 THEN von$ = "01.01.1900"
   IF VAL (bis$) < 1 THEN bis$ = "01.01.2199"
   IF NOT DateOK%(von$) THEN GOTO anf030520071
   IF NOT DateOK%(bis$) THEN GOTO anf030520071
   von% = DAYS (von$)
   bis% = DAYS (bis$)
 
 SELECT KEY von% LOCK FILE "buchung1" INDEX datum.buchung1
 
 ok% = - 1
 WHILE NOT EOF ("buchung1") AND ok% = - 1
   IF datum.buchung1 >= von% AND datum.buchung1 <= bis% THEN 
     i% = i% + 1
     codevt% = codevt.buchung1
     IF EXISTS (codevt%,lfdnr.kvertrag) THEN 
       SELECT KEY codevt% FILE "kvertrag" INDEX lfdnr.kvertrag
       IF lfdnr.kvertrag = codevt% THEN 
         Bewertungssumme.BUCHUNG1 = Bewertungssumme.KVERTRAG
         Einheiten.BUCHUNG1 = Einheiten.KVERTRAG
         STORE FILE "buchung1"
         j% = j% + 1
       END IF 
     END IF 
   END IF 
   SET STATUS STR$ (i%,"999999") + "/" + STR$ (j%,"999999")
   SELECT NEXT LOCK FILE "buchung1" INDEX datum.buchung1
   IF datum.buchung1 > bis% THEN ok% = 0
 WEND 
end030520071: 
 END SUB 
 
SUB TextAnz(textdatei$)
     IF RIGHT$ (textdatei$,3) LIKE "DOC" OR RIGHT$ (textdatei$,3) LIKE "XLS" OR UCASE$ (vista$) <> "TRUE" OR GASP% = - 1 OR GTerminal% = - 1 THEN 
       i% = CALL ("ShellExecute",0,"open",textdatei$,"","",1)
     ELSE 
       REM i% = CALL ("ShellExecute",0,"open","notepad","",textdatei$,1)
       IF NOT EXISTS (GMACodeDir$ + "openurl.exe") THEN COPY _netpath$ + "local\openurl.exe" TO GMACodeDir$ + "openurl.exe"
       prg$ = GMACodeDir$ + "openurl.exe"
       IF EXISTS (GMACodeDir$ + "opurl.bat") THEN DELETE GMACodeDir$ + "opurl.bat"
       OPEN GMACodeDir$ + "opurl.bat" FOR APPEND 
       ? "echo OFF"
       ? textdatei$
       ? 
       CLOSE OUTPUT 
       CALL (GMACodeDir$ + "opurl.bat"),0
     END IF 
 END SUB 



 
FUNCTION LizensOld%()
 LizensOld% = 0
 REM CALL Fehler("Lizensierung","")
 title1$ = title$ + " Version: " + RIGHT$ (GBuildno$,GBuilnolen%) + "-" + PRGVersion$ + "/" + LTRIM$ ( STR$ ( FN sys(5),"999")) + " AP/ " + prv$
 REM CALL Fehler(title1$,"")
 IF NOT EXISTS (_netpath$ + "LICENSE.DLL") THEN 
   CALL Fehler("Fehler in Superbase-Runtime!","Bitte wenden Sie sich an Ihren HÑndler oder an die Hotline.")
   CALL EXIT()
 END IF 
 mp% = 0
 licfound% = CALL ("GetLicense",iAppID%,_netpath$ + "LICENSE.DLL")
 IF licfound% = 1 THEN 
   DiskSize&% = CALL ("AccessItemL",0,0,0)'                                     ; == auf Manipulation testen ==
   lDiskSize&% = CALL ("AccessItemL",11,0,0)
   IF DiskSize&% <> lDiskSize&% THEN mp% = - 1'                                 ; Festplatte gewechselt
   IF CALL ("AccessItemI",12,0,0) <> FN sys(5) THEN mp% = - 1'                  ; andere Netzwerk-Version
   timeout% = CALL ("AccessItemL",9,0,0)
   SELECT FIRST LOCK FILE "config"
   tdt$ = qwono.config
   testtimeout% = VAL (tdt$)
   p$ = DATE$ (testtimeout%,"0dmmyyyy")
   IF timeout% > 0 AND testtimeout% <> timeout% AND qwono.config <> "" AND p$ <> "09092999" THEN mp% = - 1
   heute% = DAYS ( TODAY )
   IF testtimeout% < heute% THEN mp% = - 1
   IF ag$ <> "test9999999" THEN 
     IF timeout% - 30 > DAYS ( TODAY ) AND p$ <> "09092999" THEN 
       mp% = - 1'; Systemzeit manipuliert?
     END IF 
   ELSE 
     IF timeout% - 60 > DAYS ( TODAY ) THEN 
       mp% = - 1'; Systemzeit manipuliert?
     END IF 
   END IF 
   IF mp% THEN 
     a% = CALL ("AccessItemL",9,1,0)'                                           ; AppLicense.Timeout = 0
     a% = CALL ("PutLicense",iAppID%,_netpath$ + "LICENSE.DLL")'                ; TimeOut sperren
     LizensOld% = 0
     GOTO funcend170420081 
   END IF 
 ELSE 
   LizensOld% = 0
   GOTO funcend170420081
 END IF 
 timeout% = 0
 IF licfound% = 1 THEN 
   a% = CALL ("GetLicense",iAppID%,_netpath$ + "LICENSE.DLL")
   timeout% = CALL ("AccessItemL",9,0,0)
   pdemende$ = ""
   IF timeout% <= DAYS ( TODAY ) THEN 
     pdemende$ = DATE$ (timeout%,"0d.mm.yyyy")
     timeout% = - 1
     LizensOld% = 0
     GOTO funcend170420081 
   ELSE 
     pdemende$ = DATE$ (timeout%,"0d.mm.yyyy")
     timeout% = 0'         ; Probezeit abgelaufen ? 
   END IF 
 END IF 
 IF CALL ("AccessItemI",8,0,0) = 255 - FN sys(5) AND NOT mp% THEN 
   SELECT FIRST FILE "config"
   test1$ = maname.config
   test$ = MID$ (PWDecoded1$(test1$),7)
   testser$ = LEFT$ (PWDecoded1$(test1$),6)
   testserial&% = CALL ("AccessItemL",10,0,0)
   testSerie$ = STR$ (testserial&%,"000000")
   REM CALL Fehler(test$,Gserial$)
   REM CALL Fehler(testser$,testSerie$)
   IF testser$ = testSerie$ THEN 
     REM alles OK IST LIZENSIERT
        LizensOld% = - 1
        GOTO funcend170420081
   ELSE 
     licfound% = 0
     mp% = - 1
     LizensOld% = 0
     GOTO funcend170420081 
   END IF 
 ELSE 
   mp% = - 1
 END IF 
 REMOVE DIALOG ALL 
 IF licfound% = 0 OR mp% OR CALL ("AccessItemL",10,0,0) = 0 THEN 
   msg$ = "Registrieren"
   LizensOld% = 0
   GOTO funcend170420081 
 ELSE 
   msg$ = "Freischalten"
   LizensOld% = 0
   GOTO funcend170420081 
 END IF 
 cmReg$ = "&" + msg$
 msg$ = "Wenn Sie das Programm kÑuflich erworben haben oder erwerben wollen, klicken Sie auf die SchaltflÑche '" + msg$ + "'."
 IF NOT timeout% THEN 
   FILE "Supervis"
   LizensOld% = - 1
   GOTO funcend170420081 
 END IF 
 IF timeout% THEN 
   LizensOld% = 0
   GOTO funcend170420081 
 END IF 
funcend170420081: 
 END FUNCTION 
 



SUB KuAkte(codeku%)
  CALL Fehler("Die Kundenakte besteht aus mehreren einzelnen Drucklisten!","Bitte betÑtigen Sie nach der 1.Liste die ENTER-Taste oder die Mouse, um zur nÑchsten Liste zu gelangen!")
  REQUEST "Sollen alle VorgÑnge zu dieser Adresse gedruckt werden?","",135,cmplt%
     knr% = codeku%
     _CodeKU% = CodeKU%
     FILE GTelDat$
     INDEX codeku.GTelDat$
     SELECT KEY _Codeku% FILE GTelDat$ INDEX codeku.GTelDat$
     FILE GAdrDat$
     MOUSE OFF 
     SELECT WHERE FILE GAdrDat$
     EXECUTE "SELECT WHERE codeku.GAdrDat$ = _codeku%"
     REM 071098
     SELECT FIRST 
     KurzLang$ = "n"
     IF anrede.GadrDat$ LIKE "Herr*" OR anrede.GadrDat$ LIKE "FrÑ*" OR anrede.GadrDat$ LIKE "Frau*" OR anrede.GadrDat$ LIKE "Fami*" OR anrede.GadrDat$ LIKE "Ehe*" THEN 
       title2$ = "Adressangaben zu " + nachname.GAdrDat$ + ", " + vorname.GadrDat$
     ELSE 
       title2$ = "Adressangaben zu " + nachname.GAdrDat$ + " " + Geburtsname.GadrDat$
     END IF 
     IF cmplt% = 1 THEN 
       Terminejn$ = "j"
       FILE GAkquiDat$
       INDEX codeku.GAkquiDat$
       SELECT FIRST 
       SELECT KEY _codeku% FILE GAkquiDat$ INDEX codeku.GAkquiDat$
       SELECT WHERE FILE GAkquiDat$
       EXECUTE "SELECT WHERE CodeKU.GAkquiDat$ = _CodeKU%"
       INDEX termin.GAkquiDat$
       SELECT FIRST 
     END IF 
     FILE GAdrDat$
     wbericht$ = GAdrDat$
     CALL VPEADRGr(Wbericht$,FormatPrint$,title2$,Terminejn$,KurzLang$,sort$)
     WAIT MOUSE OR KEY 
     SELECT WHERE FILE GAdrDat$
     SELECT WHERE FILE GAkquiDat$
     REM IF cmplt% = 1 THEN 
       REM SELECT ;
         REM WHERE CodeKU.GAkquiDat$ = _CodeKU% AND codeak.GAkquiDat$ = codeak.aktionen
         REM ORDER Termin.GAkquiDat$,Uhrzeit.GAkquiDat$
         REM TO ASK 
        REM ON ERROR GOTO ErrorHandler
     REM END IF  

     REM Vertragsausdruck
     knr% = codeku%
     SELECT FIRST FILE GADRDat$ INDEX codeku.Gadrdat$
     SELECT KEY knr% FILE GADRDat$ INDEX codeku.Gadrdat$
     CALL VLIST1()
     SELECT FIRST FILE GADRDat$ INDEX codeku.Gadrdat$
     SELECT KEY knr% FILE GADRDat$ INDEX codeku.Gadrdat$
 END SUB 


SUB WEMAILV(codekey%)
 FILE "wemail"
 SELECT WHERE FILE "wemail"
 SELECT FIRST FILE "wemail" INDEX codekey.wemail
 SELECT KEY codekey% FILE "wemail" INDEX codekey.wemail
 ON ERROR GOTO we2904081
 IF EXISTS (GMACodeDir$ + "emailv.txt") THEN DELETE GMACodeDir$ + "emailv.txt"
 GOTO we2904082
we2904081: 
   CALL Fehler("Die temporÑre Datei " + GMACodeDir$ + "emailv.txt kann nicht gelîscht werden!","Sie ist wahrscheinlich in einem anderen Fenster geîffnet!")
   GOTO we2904085
we2904082: 
 ON ERROR GOTO ErrorHandler
 MOUSE OFF 
 etext$ = "Vorlage EMAIL" + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
 etext$ = etext$ + "Beschreibung: " + beschreibung.wemail + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
 etext$ = etext$ + "Betreff: " + emailbetreff.wemail + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
 etext$ = etext$ + "Email-Text: " + emailtext.wemail + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10)
 etext$ = etext$ + "AnhÑnge: " + CHR$ (13) + CHR$ (10)
 IF emailatt1.wemail <> "" THEN 
   etext$ = etext$ + emailatt1.wemail + " / Zentralkopie: " + eatt1.wemail + CHR$ (13) + CHR$ (10)
 END IF 
 IF emailatt2.wemail <> "" THEN 
   etext$ = etext$ + emailatt2.wemail + " / Zentralkopie: " + eatt2.wemail + CHR$ (13) + CHR$ (10)
 END IF 
 IF emailatt3.wemail <> "" THEN 
   etext$ = etext$ + emailatt3.wemail + " / Zentralkopie: " + eatt3.wemail + CHR$ (13) + CHR$ (10)
 END IF 
 IF emailatt4.wemail <> "" THEN 
   etext$ = etext$ + emailatt4.wemail + " / Zentralkopie: " + eatt4.wemail + CHR$ (13) + CHR$ (10)
 END IF 
 IF emailatt5.wemail <> "" THEN 
   etext$ = etext$ + emailatt5.wemail + " / Zentralkopie: " + eatt5.wemail + CHR$ (13) + CHR$ (10)
 END IF 

 OPEN GMACodeDir$ + "emailv.txt" FOR APPEND 
 ? FN ansi(etext$)
 ? FN ansi("Ersteller:  " + Ersteller.wemail + " -> erstellt am: " + DATE$ (EDatum.wemail,"0d.mm.yyyy") + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10))
 ? FN ansi("Bearbeiter: " + Name.wemail + " -> geÑndert am: " + DATE$ (Datum.wemail,"0d.mm.yyyy") + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10))
 CLOSE OUTPUT 
 WAIT FOR 1
 MOUSE ON 
 CALL TextAnz(GMACodeDir$ + "emailv.txt")
we2904085: 
 ON ERROR GOTO ErrorHandler
 END SUB 



FUNCTION ADRStatSu$()
 FILE "adrstat"
 INDEX keyword.adrstat
 MitSuchen% = 0
 SELECT FIRST FILE "adrstat" INDEX keyword.adrstat
 a% = 0
 prompt$ = ""
 MOUSE OFF 
 fzaehl% = RECCOUNT ("adrstat") + 1
 IF fzaehl% > 20000 THEN fzaehl% = 20000
 DIM Agenturen$(fzaehl%,1)
 REDIM Agenturen$(fzaehl%)
 DIM Auswahl$(1)
 WHILE NOT EOF ("adrstat")
   IF keyword.adrstat <> "" THEN 
     Agenturen$(a%) = keyword.adrstat + SPACE$ (120) + STR$ (Codekey.adrstat,"000000")
     a% = a% + 1
   END IF 
   SELECT NEXT FILE "adrstat" INDEX keyword.adrstat
 WEND 
 CREATE DIALOG "MASUCH",0,0,380,284,"Adress-Status","Courier New",10
 ADD DIALOG "MASUCH",4,0,0,380,263,0,""
 ADD DIALOG "MASUCH",9,5,5,21,21,2
 ADD DIALOG "MASUCH",5,37,15,260,10,0,"Adress-Status"
 ADD DIALOG "MASUCH",5,37,5,151,10,0,"Bitte wÑhlen Sie einen Adress-Status aus:"
 ADD DIALOG "MASUCH",7,7,27,368,229,2,2,Agenturen$,Auswahl$,prompt$
 ADD DIALOG "MASUCH",1,116,268,55,15,1,"&OK",1,1
 ADD DIALOG "MASUCH",1,182,268,55,15,0,"&Abbrechen",0,0
 MOUSE ON 
 DIALOG "MASUCH",req%
 REMOVE DIALOG "MASUCH"
 
 IF req% <> 0 THEN 
   codekey% = VAL ( RIGHT$ (Auswahl$(0),6))
   FILE "adrstat"
   INDEX codekey.adrstat
   SELECT FIRST FILE "adrstat" INDEX codekey.adrstat
   SELECT KEY codekey% FILE "adrstat" INDEX codekey.adrstat
   ADRStatSu$ = keyword.adrstat
 ELSE 
   ADRStatSu$ = ""
 END IF 
 FORM 
 END FUNCTION 
 
 
SUB AutoFiVorg()
 SELECT FIRST FILE "stamm"
 oberfirma% = oberfirma.stamm
 IF NOT OPEN ("maadr") THEN CALL DFile(3,"maadr" + _fpw$)
 IF NOT OPEN ("mavorg") THEN CALL DFile(3,"mavorg" + _fpw$)
 FILE "mavorg"
 INDEX codema.mavorg
 FILE "maadr"
 INDEX codema.maadr
 SELECT FIRST FILE "maadr" INDEX codema.maadr
 SELECT KEY oberfirma% FILE "maadr" INDEX codema.maadr
       maname$ = nachname.maadr
       mavorname$ = vorname.maadr
       maagnr$ = Agenturnr.maadr

 SELECT FIRST LOCK FILE "maadr" INDEX codema.maadr
 WHILE NOT EOF ("maadr")
   codema% = codema.maadr
   IF (codema.maadr = vorgÑnger.maadr AND codema.maadr <> oberfirma%) THEN 
     REM Oberfirma zum VorgÑnger machen
     SELECT FIRST FILE "mavorg" INDEX codema.mavorg
     SELECT KEY codema% FILE "mavorg" INDEX codema.mavorg
     IF aktiviert.mavorg = "j" THEN 
       codevma.mavorg = oberfirma%
       NameVMA.mavorg = maname$
       VornameMA.mavorg = mavorname$
       AgenturnrVMA.mavorg = maagnr$
       aktiviert.mavorg = "j"
       STORE FILE "mavorg"
     END IF 
   ELSE 
     IF codema.maadr <> 0 AND vorgÑnger.maadr = 0 THEN 
       REM oberfirma als vorgÑnger aufnehmen
       codema% = codema.maadr
       BLANK FILE "mavorg"
     
       codekey% = SER ("mavorg",1)
       codekey.mavorg = codekey%
       SELECT KEY codekey% LOCK FILE "mavorg" INDEX codekey.mavorg
       codema.mavorg = codema%
       codevma.mavorg = oberfirma%
       NameVMA.mavorg = maname$
       VornameMA.mavorg = mavorname$
       AgenturnrVMA.mavorg = maagnr$
       von.mavorg = "01.01.1990"
       aktiviert.mavorg = "j"
       STORE FILE "mavorg"
       vorgÑnger.maadr = oberfirma%
       STORE FILE "maadr"
     END IF 
   END IF 
   SELECT NEXT LOCK FILE "maadr" INDEX codema.maadr
 WEND 
 END SUB 

 REM Scanner initialisieren - 05.09.2008
FUNCTION Initscan%()
 Initscan% = 0
 
 REM CALL Fehler("Dokument einscannen","")
 MOUSE OFF 
    expodir$ = GMACodeDir$ + "SCAN"
    ON ERROR GOTO e070720081
    MAKE DIRECTORY expodir$
    GOTO e070720082
e070720081: 
    f% = - 1
e070720082: 
    expodir$ = GMACodeDir$ + "SCAN\"
    ON ERROR GOTO e070720083
       REM IF EXISTS (expodir$ + "outlook.xml") THEN 
         DELETE expodir$ + "\scan.pdf"
         REM DELETE expodir$ + "\scan.bat"
       REM END IF 
e070720083: 
       ON ERROR GOTO e070720083a
       DELETE expodir$ + "\fertig"
e070720083a: 
       ON ERROR GOTO e070720084
       DELETE expodir$ + "\ende1"
e070720084: 
       ON ERROR GOTO ErrorHandler 
       datexe$ = GMACodeDir$ + "SCAN\CODieScan.exe"
       a% = CALL ("_SBFileExists",datexe$)
       REM CALL Fehler("kopieren","")
       IF a% <> - 1 THEN 
         von$ = _netpath$ + "LOCAL\CODieScan.exe"
         nach$ = GMACodeDir$ + "SCAN\CODieScan.exe"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\EZCurl.dll"
         nach$ = GMACodeDir$ + "SCAN\EZCurl.dll"
         IF NOT EXISTS (nach$) THEN a% = CALL ("_SBFileCopy",von$,nach$)

         von$ = _netpath$ + "LOCAL\EZDcx.dll"
         nach$ = GMACodeDir$ + "SCAN\EZDcx.dll"
         IF NOT EXISTS (nach$) THEN a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\EZGif.dll"
         nach$ = GMACodeDir$ + "SCAN\EZGif.dll"
         IF NOT EXISTS (nach$) THEN a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\EZJpeg.dll"
         nach$ = GMACodeDir$ + "SCAN\EZJpeg.dll"
         IF NOT EXISTS (nach$) THEN a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\EZOcr.dll"
         nach$ = GMACodeDir$ + "SCAN\EZOcr.dll"
         IF NOT EXISTS (nach$) THEN a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\EZPdf.dll"
         nach$ = GMACodeDir$ + "SCAN\EZPdf.dll"
         IF NOT EXISTS (nach$) THEN a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\EZPng.dll"
         nach$ = GMACodeDir$ + "SCAN\EZPng.dll"
         IF NOT EXISTS (nach$) THEN a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\EZSymbol.dll"
         nach$ = GMACodeDir$ + "SCAN\EZSymbol.dll"
         IF NOT EXISTS (nach$) THEN a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\EZTiff.dll"
         nach$ = GMACodeDir$ + "SCAN\EZTiff.dll"
         IF NOT EXISTS (nach$) THEN a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\Eztwain3.dll"
         nach$ = GMACodeDir$ + "SCAN\Eztwain3.dll"
         IF NOT EXISTS (nach$) THEN a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\CODie.ClassBase.dll"
         nach$ = GMACodeDir$ + "SCAN\CODie.ClassBase.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\CODie.Lib.CompanyLicence.dll"
         nach$ = GMACodeDir$ + "SCAN\CODie.Lib.CompanyLicence.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\CODie.Lib.Crypto.dll"
         nach$ = GMACodeDir$ + "SCAN\CODie.Lib.Crypto.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\CODie.Lib.Licence.dll"
         nach$ = GMACodeDir$ + "SCAN\CODie.Lib.Licence.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
         von$ = _netpath$ + "LOCAL\CODieFunc.dll"
         nach$ = GMACodeDir$ + "SCAN\CODieFunc.dll"
         a% = CALL ("_SBFileCopy",von$,nach$)
 
       END IF 
       IF EXISTS (GMACodeDir$ + "SCAN\scan.bat") THEN DELETE GMACodeDir$ + "SCAN\scan.bat"
       OPEN GMACodeDir$ + "SCAN\scan.bat" FOR APPEND 
       ? "echo OFF"
       ? GMACodeDir$ + "SCAN\CODieScan.exe " + expodir$ + "scan"
       ? 
       CLOSE OUTPUT 
       CALL (GMACodeDir$ + "SCAN\scan.bat"),0
w090720081: 
     zz% = 0
     WHILE NOT EXISTS (expodir$ + "fertig")
       IF EXISTS (expodir$ + "ende1") THEN 
         GOTO w090720082aa
       END IF 
       zz% = zz% + 1
       MOUSE OFF 
       WAIT FOR 1
       IF zz% = 60 THEN 
         CALL Fehler("Der Scannvorgang scheint noch nicht beendet zu sein!","")
         REQUEST "Mîchten Sie weitere 60 Sekunden warten?","",130,req%
         IF req% = 1 THEN 
           GOTO w090720081
         ELSE 
           GOTO w090720082aa
         END IF 
       END IF 
     WEND 
w090720082aa: 
     IF EXISTS (expodir$ + "fertig") THEN 
       Initscan% = - 1
     ELSE 
       Initscan% = 0
     END IF 
 END FUNCTION 

 REM Kundendokument scannen - 05.09.2008

SUB ScanDok(codeku%)
 Gcodie% = - 1
 IF codeku% = 0 THEN knr% = 0
 a% = 0
 a% = Initscan%()
 IF a% = 0 THEN GOTO w090720082
     REM *******************************************************************************
dokprj20080616:   
     Auswahl$ = "allgemeine Schreiben"
 
     CREATE DIALOG "DOKNEU",0,0,253,177,title$,"MS Sans Serif",8
     ADD DIALOG "DOKNEU",4,0,0,253,153,0,""
     ADD DIALOG "DOKNEU",9,6,14,20,21,2
     ADD DIALOG "DOKNEU",5,30,10,205,10,0,"Bitte geben Sie fÅr das neue Dokument eine Bezeichnung ein."
     ADD DIALOG "DOKNEU",5,30,20,134,10,0,"(diese kann bis zu 60 Zeichen enthalten)"
     ADD DIALOG "DOKNEU",5,30,35,214,10,0,"Bei Bedarf kînnen Sie auch die Zuordnung zu einer Dokumenten-"
     ADD DIALOG "DOKNEU",5,30,45,53,10,0,"gruppe Ñndern."
     ADD DIALOG "DOKNEU",5,30,94,79,10,0,"&Bezeichnung"
     ADD DIALOG "DOKNEU",6,30,104,208,12,0,0,dokname$,60
     ADD DIALOG "DOKNEU",5,30,64,65,8,0,"&Gruppe"
     ADD DIALOG "DOKNEU",8,30,73,140,218,259,2,Auswahl$,DOKGruppen$
     REM ADD DIALOG "DOKNEU",1,30,127,208,15,1,prj11$,2,1
     ADD DIALOG "DOKNEU",1,75,157,50,15,1,"&OK",1,1
     ADD DIALOG "DOKNEU",1,130,157,50,15,0,"&Abbrechen",0,0
     DIALOG "DOKNEU",req%
     REMOVE DIALOG "DOKNEU"
     IF req% > 0 THEN Gruppe$ = Auswahl$
     IF req% = 1 THEN 
       REM docpath$ = LEFT$ (_netpath$,2) + ReadConfig$("DOKUMENTE",Gruppe$)
       docpath$ = GetDocPath$(Gruppe$)
       IF RIGHT$ (docpath$,1) <> "\" THEN docpath$ = docpath$ + "\"
       MOUSE OFF 
       SET STATUS "Dokument wird importiert..."
       afo$ = FORM 
       BLANK FILE "dokument"
       CodeDOK.dokument = SER ("dokument",1)
       cudok% = CodeDOK.dokument
       GCodeDok% = cudok%
       REM codeErs.dokument = GMACodema%
       Creator.dokument = GMAName$
       IF dokname$ <> "" THEN 
         dokument.dokument = dokname$
       ELSE 
         dokument.dokument = textvorlage$
       END IF 
       erstellt_am.dokument = TODAY 
       letzte_Bearbeit.dokument = TODAY 
       CodeMA.dokument = GMAcodema%
       SELECT FIRST FILE "supervis" INDEX codema.supervis
       SELECT KEY GMAcodema% FILE "supervis" INDEX codema.supervis
       Bearbeiter.dokument = nachname.supervis
       REM docpath$ = GetDocPath$(Auswahl$)
       textdatei$ = docpath$ + LTRIM$ ( STR$ (CodeDOK.dokument,"99999999")) + ".pdf"
       Dateiname.dokument = textdatei$
       Gruppe.dokument = Auswahl$
       link.dokument = 0
       codeku.dokument = codeku%
       link.DOKUMENT = CodeKU.DOKUMENT
       CALL QuickStore("DOKUMENT")
       IF Gcodie% = - 1 THEN 
         von$ = GMACodeDir$ + "SCAN\scan.pdf"
         nach$ = _netpath$ + textdatei$
         a% = CALL ("_SBFileCopy",von$,nach$)
       END IF 
       REM**************************************************************************     
       textdatei$ = _netpath$ + Dateiname.dokument
       a% = CALL ("_SBFileExists",textdatei$)
       IF a% = - 1 THEN 
       REM IF EXISTS (textdatei$) THEN 
         REM CALL QuickStore("dokument")
         REM CALL Fehler("test","")
         REM i% = CALL ("ShellExecute",0,"open",textdatei$,"","",1)
         CALL TextAnz(textdatei$)
         REM CALL (textdatei$)
       END IF 
       IF codeku% = 0 THEN GOTO w130820081
       IF GTerminfrage% <> - 1 THEN 
         REQUEST "Eintrag in Termindatei vornehmen?","",130,raa%
       ELSE 
         raa% = 1
       END IF 
       IF raa% = 1 THEN CALL ADRDokRegister(CodeDOK.dokument)
w130820081:       
       IF Gdokloevor$ LIKE "TRUE" THEN a% = CALL ("_SBFileDelete2",iniPath$)
     END IF 
     REM *******************************************************************************
      
w090720082: 
 ON ERROR GOTO ErrorHandler
 END SUB 
 
 
 REM Dokumente fÅr Vermittler, gesellschaften,VertrÑge scannen-06.09.2008

SUB DOKMAScan(dat$,code%)
 cdir$ = DIRECTORY 
 cfile$ = FILE 
 FILE dat$
 opt% = 1
 req% = 0
 req% = Initscan%()
 textvorlage$ = GMACodeDir$ + "SCAN\scan.pdf"
 IF req% = - 1 THEN 
   a% = CALL ("_SBFileExists",textvorlage$)
   IF a% = - 1 THEN 
   REM IF EXISTS (textvorlage$) THEN 
     IF FORM LIKE "*MA*" THEN 
       Gruppe$ = "Mitarbeiterdokument"
     END IF 
     vdokf% = 0
     fo$ = FORM 
     IF FORM LIKE "Ver*" OR FORM LIKE "Ker*" OR FORM LIKE "Rer*" OR FORM LIKE "Wer*" OR FORM LIKE "DOKGESKV*" OR FORM LIKE "DOKKV*" THEN vdokf% = 1
     IF FORM LIKE "DOKGE1KV" OR FORM LIKE "DOKGE2KV" OR FORM LIKE "DOKGE3KV" OR FORM LIKE "DOKGE4KV" THEN vdokf% = 1
     IF vdokf% = 1 THEN 
       Gruppe$ = "VertrÑge"
       dokname$ = VS_NR.kvertrag
     END IF 
     IF FORM LIKE "DOKGEGE*" THEN 
       Gruppe$ = "Gesellschaftsdokument"
     END IF 
     CREATE DIALOG "DOKNEU",0,0,250,147,title$,"MS Sans Serif",8
     ADD DIALOG "DOKNEU",5,28,10,205,9,0,"Bitte geben Sie fÅr das Dokument eine Bezeichnung ein."
     ADD DIALOG "DOKNEU",9,4,12,20,21,2
     ADD DIALOG "DOKNEU",5,28,19,134,9,0,"(diese kann bis zu 60 Zeichen enthalten)"
     REM ADD DIALOG "DOKNEU",5,28,34,214,10,0,"Bei Bedarf kînnen Sie auch die Zuordnung zu einer Dokumenten-"
     REM ADD DIALOG "DOKNEU",5,28,44,53,10,0,"gruppe Ñndern."
     ADD DIALOG "DOKNEU",5,28,93,79,9,0,"&Bezeichnung"
     ADD DIALOG "DOKNEU",6,28,103,208,12,0,0,dokname$,60
     REM ADD DIALOG "DOKNEU",5,28,62,65,8,0,"&Gruppe"
     REM ADD DIALOG "DOKNEU",8,28,72,140,48,259,2,Gruppe$,DOKGruppen$
     ADD DIALOG "DOKNEU",1,80,126,49,15,1,"&OK",1,1
     ADD DIALOG "DOKNEU",1,130,126,50,14,0,"&Abbrechen",0,0
     DIALOG "DOKNEU",req%
     REMOVE DIALOG "DOKNEU"
     jamo$ = LEFT$ ( DATE$ ( TODAY ,"yyyymm0d"),6)
     IF req% = 1 THEN 
       IF FORM LIKE "*MA*" THEN 
         docpath0$ = _netpath$ + "PROVIS\MAADR.DOK"
         docpath$ = "PROVIS\MAADR.DOK\" + jamo$
         docpath1$ = _netpath$ + docpath$
         IF GCodie% = - 1 THEN 
           ON ERROR GOTO w060920081
           REGISTER _netpath$ + "CODieLIB.dll","_SBCreateDir","IF"
           a% = CALL ("_SBCreateDir",docpath0$)
           a% = CALL ("_SBCreateDir",docpath1$)
           REGISTER CLEAR "_SBCreateDir"
         ELSE 
           ON ERROR GOTO w060920081a
           MAKE DIRECTORY docpath0$
           MAKE DIRECTORY docpath1$
w060920081a: 
           ON ERROR GOTO w060920081
           MAKE DIRECTORY docpath1$
         END IF 
w060920081: 
         ON ERROR GOTO ErrorHandler
       END IF 
       dokp% = 0
       IF FORM LIKE "Ver*" OR FORM LIKE "Ker*" OR FORM LIKE "Rer*" OR FORM LIKE "Wer*" OR FORM LIKE "DOKGESKV*" OR FORM LIKE "DOKKV*" THEN dokp% = 1
       IF FORM LIKE "DOKGE1KV" OR FORM LIKE "DOKGE2KV" OR FORM LIKE "DOKGE3KV" OR FORM LIKE "DOKGE4KV" THEN dokp% = 1
       IF dokp% = 1 THEN 
         docpath0$ = _netpath$ + "PROVIS\VERTR.DOK"
         docpath$ = "PROVIS\VERTR.DOK\" + jamo$
         docpath1$ = _netpath$ + docpath$
         IF GCodie% = - 1 THEN 
           ON ERROR GOTO w060920082
           REGISTER _netpath$ + "CODieLIB.dll","_SBCreateDir","IF"
           a% = CALL ("_SBCreateDir",docpath0$)
           a% = CALL ("_SBCreateDir",docpath1$)
           REGISTER CLEAR "_SBCreateDir"
         ELSE 
           ON ERROR GOTO w060920082
           MAKE DIRECTORY docpath0$
           MAKE DIRECTORY docpath1$
         END IF 
w060920082: 
         ON ERROR GOTO w060920082a
         MAKE DIRECTORY docpath1$
w060920082a: 
         ON ERROR GOTO ErrorHandler 
       END IF 
       IF FORM LIKE "DOKGEGE*" THEN 
         docpath0$ = _netpath$ + "PROVIS\GEADR.DOK"
         docpath$ = "PROVIS\GEADR.DOK\" + jamo$
         docpath1$ = _netpath$ + docpath$
         IF GCodie% = - 1 THEN 
           ON ERROR GOTO w060920083
           REGISTER _netpath$ + "CODieLIB.dll","_SBCreateDir","IF"
           a% = CALL ("_SBCreateDir",docpath0$)
           a% = CALL ("_SBCreateDir",docpath1$)
           REGISTER CLEAR "_SBCreateDir"
         ELSE 
           ON ERROR GOTO w060920083
           MAKE DIRECTORY docpath0$
           MAKE DIRECTORY docpath1$
         END IF 
w060920083: 
         ON ERROR GOTO w060920083a
         MAKE DIRECTORY docpath1$
w060920083a: 
         ON ERROR GOTO ErrorHandler 
       END IF 
       ON ERROR GOTO mpath15052001
       MAKE DIRECTORY _netpath$ + docpath$
mpath15052001: 
       ON ERROR GOTO ErrorHandler
       IF RIGHT$ (docpath$,1) <> "\" THEN docpath$ = docpath$ + "\"
 
       MOUSE OFF 
       SET STATUS "Dokument in Arbeit..."
       BLANK FILE dat$
       CodeDOK.dat$ = SER (dat$,1)
       cudok% = CodeDOK.dat$
       IF dokname$ <> "" THEN 
         dokument.dat$ = dokname$
       ELSE 
         dokument.dat$ = textvorlage$
       END IF 
       erstellt_am.dat$ = TODAY 
       letzte_Bearbeit.dat$ = TODAY 
       CodeMA.dat$ = GMAcodema%
       codeku.dat$ = code%
       IF dat$ LIKE "DOKKV" THEN CodeVG.dat$ = Gcuvg%
       SELECT FIRST FILE "supervis" INDEX codema.supervis
       SELECT KEY GMAcodema% FILE "supervis" INDEX codema.supervis
       Bearbeiter.dat$ = nachname.supervis
       Creator.dat$ = nachname.supervis
       endung$ = GetDateiendung$(textvorlage$)
       textdatei$ = docpath$ + LTRIM$ ( STR$ (CodeDOK.dat$,"99999999")) + "." + endung$
       REM Dateiname.dat$ = MID$ (textdatei$,3, LEN (textdatei$) - 2)
       Dateiname.dat$ = textdatei$
       dateiname$ = Dateiname.dat$
       Gruppe.dat$ = Gruppe$
       link.dat$ = 0
       CALL QuickStore(dat$)
       REM COPY textvorlage$,_netpath$ + textdatei$
       ziel$ = _netpath$ + textdatei$
       a% = CALL ("_SBFileCopy",textvorlage$,ziel$)
       REM **************************************************
       REM in originale Dokumentendatei eine Kopie ablegen
       dokvf% = 0
       IF FORM LIKE "Ver*" OR FORM LIKE "Ker*" OR FORM LIKE "Rer*" OR FORM LIKE "Wer*" OR FORM LIKE "DOKGESKV*" OR FORM LIKE "DOKKV*" THEN dokvf% = 1
       IF FORM LIKE "DOKGE1KV" OR FORM LIKE "DOKGE2KV" OR FORM LIKE "DOKGE3KV" OR FORM LIKE "DOKGE4KV" THEN dokvf% = 1
       IF dokvf% = 1 THEN 
         FILE "Dokument"
         BLANK 
         CodeDOK.Dokument = SER ("Dokument",1)
         dokument.Dokument = dokument.dat$
         erstellt_am.Dokument = TODAY 
         letzte_Bearbeit.Dokument = TODAY 
         CodeMA.Dokument = GMAcodema%
         REM cc% = codeku.kvertrag
         CodeKU.Dokument = codeku.kvertrag
         Bearbeiter.Dokument = Bearbeiter.dat$
         Creator.Dokument = Creator.dat$
         Dateiname.Dokument = Dateiname.dat$
         Gruppe.Dokument = Gruppe.dat$
         link.Dokument = 0
         CALL QuickStore("Dokument")
         SELECT KEY knr% FILE GADRDat$ INDEX codeku.GadrDat$
         REQUEST "Eintrag in Termindatei vornehmen?","",130,raa%
         IF raa% = 1 THEN CALL ADRDokRegister(CodeDOK.Dokument)
         ddtest$ = Dateiname.dat$
       END IF 
       REM ***********************************************
       FILE dat$
     END IF 
     IF EXISTS (_netpath$ + textdatei$) THEN 
       CALL TextAnz(_netpath$ + textdatei$)
     END IF 
   ELSE 
     ON ERROR GOTO ErrorHandler
   END IF 
 END IF 
 ON ERROR GOTO ErrorHandler
 SELECT FIRST FILE dat$ INDEX CodeDOK.dat$
 SELECT KEY cudok% FILE dat$ INDEX CodeDOK.dat$
 FORM 
 MOUSE ON 
 FILE cfile$
 DIRECTORY cdir$
 END SUB 
  













 REM Logdatei fÅr EURO-Umstellung
 '*******************************************************************************************************************
 '*           Logdatei fÅr EURO-Umstellung                                                                          *
 '*                                                                                                                 *
 '******************************************************************************************************************* 
 REM Anzeige Fehlerprotokoll - Konditionen
SUB ShowLogEU()
 SET STATUS "Anzeige des Fehlerprotokolls"
 IF EXISTS (_netpath$ + "EUUMW.TXT") THEN 
   REM LOAD TEXT _netpath$ + "EUUMW.TXT"
   REM EDIT TEXT 
   a% = CALL ("ShellExecute",0,"open",_netpath$ + "EUUMW.TXT","","",1)
 ELSE 
   CALL Fehler("Es konnte kein Fehlerprotokoll gefunden werden!","")
 END IF 
 SET STATUS "Bereit"
 END SUB 
 
SUB CreateLogEU()
 OPEN _netpath$ + "EUUMW.TXT" FOR OUTPUT 
 ? "Datei " + UCASE$ (_netpath$) + "EUUMW.TXT erstellt am " + DATE$ ( TODAY ,"0d.mm.yyyy") + " / " + TIME$ ( NOW ,"hh:mm:ss")
 ? "-------------------------------------------------------------------------"
 ? 
 CLOSE OUTPUT 
 END SUB 
 
SUB CloseLogEU()
 OPEN _netpath$ + "EUUMW.TXT" FOR APPEND 
 ? 
 ? "-------------------------------------------------------------------------"
 ? "Eintragung beendet am " + DATE$ ( TODAY ,"0d.mm.yyyy") + "/" + TIME$ ( NOW ,"hh:mm:ss")
 CLOSE OUTPUT 
 CREATE DIALOG "PROT",0,0,244,154,title$,"MS Sans Serif",8
 ADD DIALOG "PROT",4,0,0,244,130,0,""
 ADD DIALOG "PROT",9,6,9,22,22,2
 ADD DIALOG "PROT",5,35,13,194,10,0,"WÑhrend der zuletzt durchgefÅhrten Aktion wurde eine"
 ADD DIALOG "PROT",5,35,23,194,10,0,"Protokolldatei erstellt, in der eventuelle Fehler und Zusatz-"
 ADD DIALOG "PROT",5,35,33,194,10,0,"information gespeichert wurden."
 ADD DIALOG "PROT",5,35,53,194,10,0,"WÑhlen Sie " + CHR$ (34) + "Ja" + CHR$ (34) + ", wenn Sie das Protokoll einsehen und"
 ADD DIALOG "PROT",5,35,63,194,10,0,"eventuell drucken wollen."
 ADD DIALOG "PROT",5,35,83,194,10,0,"WÑhlen Sie " + CHR$ (34) + "Nein" + CHR$ (34) + ", wenn Sie das Protokoll nicht"
 ADD DIALOG "PROT",5,35,93,194,10,0,"einsehen mîchten."
 ADD DIALOG "PROT",5,35,113,194,10,0,"Wollen Sie das Protokoll einsehen?"
 ADD DIALOG "PROT",1,118,134,55,15,0,"&Nein",0,0
 ADD DIALOG "PROT",1,62,134,55,15,1,"&Ja",1,1
 DIALOG "PROT",req%
 REMOVE DIALOG "PROT"
 IF req% = 1 THEN CALL ShowLogEU()
 END SUB 
 
SUB WriteLogEU(logtext$)
 OPEN _netpath$ + "EUUMW.TXT" FOR APPEND 
 ? FN ansi(logtext$)
 CLOSE OUTPUT 
 END SUB 
 
SUB DeleteLogEU()
 IF EXISTS (_netpath$ + "EUUMW.TXT") THEN DELETE _netpath$ + "EUUMW.TXT"
 END SUB 
 
 
 
 
 '*******************************************************************************************************************
 '*           EUROUMRECHNUNG                                                                                        *
 '*                                                                                                                 *
 '*******************************************************************************************************************
SUB EuroUmst()
 maske$ = "PROVIS"
 IF IntVerw.stamm LIKE "j" THEN maske$ = "PROVISI"
 CLOSE ALL 
 OPEN FORM GPrjForm$ + maske$
 IF test% = 1 THEN 
   REQUEST "Soll vorher ein komplettes Backup durchgefÅhrt werden?","",130,req%
 ELSE 
   req% = 1
 END IF 
 MOUSE OFF 
 
 IF req% = 1 THEN 
   t0$ = "Sie mÅssen sicherstellen, da· Sie genug Platz auf der Festplatte haben, auf der sich der CODie-Ordner befindet!"
   CALL Fehler("Das Programm fÅhrt jetzt eine komplette Datensicherung des aktuellen CODie-Ordners durch und speichert die gepackte Sicherungsdatei in diesen Ordner!",t0$)
   REQUEST "Soll jetzt ein komplettes Backup durchgefÅhrt werden und","anschlie·end die EURO-Umstellung vorgenommen werden",130,req%
   IF req% <> 1 THEN 
     CALL Fehler("Die EURO-Umstellung wurde abgebrochen!","")
     MOUSE OFF 
     CALL DFile(2,"OPENFILE" + _fpw$)
     CALL DFile(2,"ZERO" + _fpw$)
     CALL DFile(22,"CONFIG" + _fpw$)
     CALL DFile(2,"supervis" + _fpw$)
     CALL DFile(3,"stamm" + _fpw$)
     CALL DFile(3,"VProdukt" + _fpw$)
     CALL DFile(3,"KVERTRAG" + _fpw$)
     CALL DFile(3,"GEKOND" + _fpw$)
     CALL DFile(3,"MAADR" + _fpw$)
     CALL DFile(3,"GEKONDM" + _fpw$)
     CALL DFile(3,"Sparten" + _fpw$)
     CALL DFile(3,"geadr" + _fpw$):CALL DFile(3,"geadr2" + _fpw$)
     CALL DFile(3,"VPSPEZKO" + _fpw$)
     CALL DFile(3,"VPGEKOND" + _fpw$)
     CALL DFile(3,"FOERKOND" + _fpw$)
     CALL DFile(3,"AUMSKTO" + _fpw$)
     CALL DFile(3,"AUMSATZ" + _fpw$)
     CALL DFile(3,"AGDIR" + _fpw$)
     CALL DFile(3,"MAAUSZ" + _fpw$)
     CALL DFile(3,"SPEZKOND" + _fpw$)
     CALL DFile(3,"geadrums" + _fpw$)
     CALL DFile(3,"buchges" + _fpw$)
     CALL DFile(3,"kvfael" + _fpw$)
     CALL DFile(3,"FONDS" + _fpw$)
     CALL DFile(3,"TARIF" + _fpw$)
     CALL DFile(3,"WAEHRUNG" + _fpw$)
     CALL DFile(2,"OFFICE\" + "BCKONTAK" + _fpw$)
     CALL DFile(2,"OFFICE\" + "ADRESSEN" + _fpw$)
     MOUSE ON 
     END SUB 
   END IF 
   a% = CALL ("ShellExecute",0,"open",_netpath$ + "autoback.exe","","",1)
   WAIT FOR 2
   REM WHILE NOT EXISTS (_netpath$ + "autoback.txt")
   REM WAIT FOR 2
   REM WEND 
anf201201001: 
   MOUSE OFF 
   IF EXISTS (_netpath$ + "autoback.txt") THEN 
     DELETE _netpath$ + "autoback.txt"
   ELSE 
     WAIT FOR 2
     GOTO anf201201001
   END IF 
 END IF 
 REQUEST "Soll jetzt wirklich die Euroumstellung durchgefÅhrt werden?","",130,req%
 IF req% <> 1 THEN 
     MOUSE OFF 
     CALL DFile(2,"OPENFILE" + _fpw$)
     CALL DFile(2,"ZERO" + _fpw$)
     CALL DFile(22,"CONFIG" + _fpw$)
     CALL DFile(2,"supervis" + _fpw$)
     CALL DFile(3,"stamm" + _fpw$)
     CALL DFile(3,"VProdukt" + _fpw$)
     CALL DFile(3,"KVERTRAG" + _fpw$)
     CALL DFile(3,"GEKOND" + _fpw$)
     CALL DFile(3,"MAADR" + _fpw$)
     CALL DFile(3,"GEKONDM" + _fpw$)
     CALL DFile(3,"Sparten" + _fpw$)
     CALL DFile(3,"geadr" + _fpw$):CALL DFile(3,"geadr2" + _fpw$)
     CALL DFile(3,"VPSPEZKO" + _fpw$)
     CALL DFile(3,"VPGEKOND" + _fpw$)
     CALL DFile(3,"FOERKOND" + _fpw$)
     CALL DFile(3,"AUMSKTO" + _fpw$)
     CALL DFile(3,"AUMSATZ" + _fpw$)
     CALL DFile(3,"AGDIR" + _fpw$)
     CALL DFile(3,"MAAUSZ" + _fpw$)
     CALL DFile(3,"SPEZKOND" + _fpw$)
     CALL DFile(3,"geadrums" + _fpw$)
     CALL DFile(3,"buchges" + _fpw$)
     CALL DFile(3,"kvfael" + _fpw$)
     CALL DFile(3,"FONDS" + _fpw$)
     CALL DFile(3,"TARIF" + _fpw$)
     CALL DFile(3,"WAEHRUNG" + _fpw$)
     CALL DFile(2,"OFFICE\" + "BCKONTAK" + _fpw$)
     CALL DFile(2,"OFFICE\" + "ADRESSEN" + _fpw$)
     MOUSE ON 
   END SUB 
 END IF 
 CALL DFile(2,"OPENFILE" + _fpw$)
 CALL DFile(2,"ZERO" + _fpw$)
 CALL DFile(22,"CONFIG" + _fpw$)
 CALL DFile(2,"supervis" + _fpw$)
 CALL DFile(3,"stamm" + _fpw$)
 CALL DFile(3,"VProdukt" + _fpw$)
 CALL DFile(3,"KVERTRAG" + _fpw$)
 CALL DFile(3,"GEKOND" + _fpw$)
 CALL DFile(3,"MAADR" + _fpw$)
 CALL DFile(3,"GEKONDM" + _fpw$)
 CALL DFile(3,"Sparten" + _fpw$)
 CALL DFile(3,"geadr" + _fpw$):CALL DFile(3,"geadr2" + _fpw$)
 CALL DFile(3,"VPSPEZKO" + _fpw$)
 CALL DFile(3,"VPGEKOND" + _fpw$)
 CALL DFile(3,"FOERKOND" + _fpw$)
 CALL DFile(3,"AUMSKTO" + _fpw$)
 CALL DFile(3,"AUMSATZ" + _fpw$)
 CALL DFile(3,"AGDIR" + _fpw$)
 CALL DFile(3,"MAAUSZ" + _fpw$)
 CALL DFile(3,"SPEZKOND" + _fpw$)
 CALL DFile(3,"geadrums" + _fpw$)
 CALL DFile(3,"buchges" + _fpw$)
 CALL DFile(3,"kvfael" + _fpw$)
 CALL DFile(3,"FONDS" + _fpw$)
 CALL DFile(3,"TARIF" + _fpw$)
 CALL DFile(3,"WAEHRUNG" + _fpw$)
 CALL DFile(2,"OFFICE\" + "BCKONTAK" + _fpw$)
 CALL DFile(2,"OFFICE\" + "ADRESSEN" + _fpw$)
 IF PrvVerfahr$ <> "ZAHLUNGSEINGANG" THEN 
   CALL DFile(3,"BUCHUNG" + _fpw$)
   CALL DFile(3,"ZEINGANG" + _fpw$)
 ELSE 
   CALL DFile(3,"BUCHUNG1" + _fpw$)
   CALL DFile(3,"ZEINGAN1" + _fpw$)
 END IF 
 OPEN FORM GPrjForm$ + "STAMM"
 SET f = Superbase.Form
 FORM 6
 CALL Fehler("Euroumstellung","")
 REM SELECT FIRST FILE "stamm"
 CALL DeleteLogEU()
 CALL CreateLogEU()
 REM *****************************************************************************************************************
 REM *         ADRESSEN umrechnen BEGINN                                                                             *
 REM *****************************************************************************************************************
 MOUSE OFF 
 dat$ = "ADRESSEN"
 CALL WriteLogEU("Umrechnung Datei: " + dat$)
 FILE dat$
 INDEX codeku.dat$
 j% = RECCOUNT (dat$)
 i% = 0
 CALL Fehler("Sie erhalten jetzt die Mîglichkeit die WÑhrung auszusuchen, in der die Adress-Finanzen erfa·t wurden!","")
 codew% = WaehrSEU%()
 SELECT FIRST FILE "Waehrung" INDEX codew.waehrung
 SELECT KEY codew% FILE "Waehrung" INDEX codew.waehrung
 umrechnung% = umrechnung.waehrung
 FILE dat$
 IF j% > 0 THEN 
   SELECT FIRST LOCK 
 ELSE 
   SELECT LAST 
 END IF 
 MOUSE OFF 
 WHILE NOT EOF (dat$)
   FORM 
   IF EUUmstellung.dat$ <> "j" THEN 
     euinfo$ = "Umrechnung Finanzen von Kunde: " + nachname.dat$ + "         " + STR$ (i%) + " von " + STR$ (j%) + " verarbeitet"
     CALL WriteLogEU(euinfo$)
     FORM 
     EinkKunde.dat$ = VAL ( STR$ (EinkKunde.dat$ / umrechnung%,"999999999.00"))
     Eink2P.dat$ = VAL ( STR$ (Eink2P.dat$ / umrechnung%,"999999999.00"))
     sonstEink.dat$ = VAL ( STR$ (sonstEink.dat$ / umrechnung%,"999999999.00"))
     EinkGesamt.dat$ = VAL ( STR$ (EinkGesamt.dat$ / umrechnung%,"999999999.00"))
     VMGrundbesitz.dat$ = VAL ( STR$ (VMGrundbesitz.dat$ / umrechnung%,"999999999.00"))
     VMVerkehrswert.dat$ = VAL ( STR$ (VMVerkehrswert.dat$ / umrechnung%,"999999999.00"))
     VMKonto.dat$ = VAL ( STR$ (VMKonto.dat$ / umrechnung%,"999999999.00"))
     VMWertpapiere.dat$ = VAL ( STR$ (VMWertpapiere.dat$ / umrechnung%,"999999999.00"))
     VMLebensvers.dat$ = VAL ( STR$ (VMLebensvers.dat$ / umrechnung%,"999999999.00"))
     VMGesamt.dat$ = VAL ( STR$ (VMGesamt.dat$ / umrechnung%,"999999999.00"))
     VBKredite.dat$ = VAL ( STR$ (VBKredite.dat$ / umrechnung%,"999999999.00"))
     VBBÅrgschaften.dat$ = VAL ( STR$ (VBBÅrgschaften.dat$ / umrechnung%,"999999999.00"))
     VBmonatlBelast.dat$ = VAL ( STR$ (VBmonatlBelast.dat$ / umrechnung%,"999999999.00"))
     VBGesamt.dat$ = VAL ( STR$ (VBGesamt.dat$ / umrechnung%,"999999999.00"))
     EUUmstellung.dat$ = "j"
     STORE FILE dat$
     UNLOCK CURRENT FILE dat$
   END IF 
 FILE dat$
 i% = i% + 1
 SELECT NEXT LOCK FILE dat$
 WEND 
 REM *****************************************************************************************************************
 REM *         ADRESSEN umrechnen ENDE                                                                               *
 REM ***************************************************************************************************************** 
 SELECT FIRST LOCK FILE "stamm"
 SELECT FIRST FILE "supervis" INDEX codema.supervis
 SELECT KEY _vcodema% FILE "supervis" INDEX codema.supervis
 letzteEUUmst.stamm = "die letzte Umstellung wurde durch " + vorname.supervis + " " + nachname.supervis + " am " + DATE$ ( TODAY ,"0d.mm.yyyy") + " " + TIME$ ( NOW ,"hh.mm") + " durchgefÅhrt"
 STORE FILE "stamm"
 UNLOCK CURRENT FILE "stamm"
 REM *****************************************************************************************************************
 REM *         Buchung umrechnen BEGINN                                                                              *
 REM *****************************************************************************************************************
 MOUSE OFF 
 IF EUBuch.stamm LIKE "j" THEN 
   IF PrvVerfahr$ <> "ZAHLUNGSEINGANG" THEN 
     dat$ = "Buchung"
   ELSE 
     dat$ = "Buchung1"
   END IF 
   FILE dat$
   INDEX codebu.dat$
   CALL WriteLogEU("Umrechnung Datei: " + dat$)
   j% = RECCOUNT (dat$)
   i% = 0
   IF j% > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   WHILE NOT EOF (dat$)
   FORM 
     IF eualles.stamm LIKE "j" THEN 
       codew% = codew.dat$
     ELSE 
       codew% = eucodew.stamm
     END IF 
     ok% = 0
     IF codew% = codew.dat$ THEN 
       ok% = - 1
     END IF 
     euinfo$ = "Umrechnung Buchung: " + Buchungstext.dat$ + "         " + STR$ (i%) + " von " + STR$ (j%) + " verarbeitet"
     IF eubuchdat.stamm > 0 THEN 
       IF Datum.dat$ > 0 THEN 
         IF Datum.dat$ >= eubuchdat.stamm THEN 
           ok% = - 1
         ELSE 
           ok% = 0
         END IF 
       ELSE 
         ok% = - 1
       END IF 
     ELSE 
       ok% = - 1
     END IF 
     IF ok% = - 1 THEN 
       CALL WriteLogEU(euinfo$)
       betrag.dat$ = VAL ( STR$ (betrag.dat$ / umrechnung.dat$,"999999999.00"))
       sr.dat$ = VAL ( STR$ (sr.dat$ / umrechnung.dat$,"999999999.00"))
       vsumme.dat$ = VAL ( STR$ (vsumme.dat$ / umrechnung.dat$,"999999999.00"))
       volumen.dat$ = VAL ( STR$ (volumen.dat$ / umrechnung.dat$,"999999999.00"))
       Bewertungssumme.dat$ = VAL ( STR$ (Bewertungssumme.dat$ / umrechnung.dat$,"999999999.00"))
       Gesamtbetrag.dat$ = VAL ( STR$ (Gesamtbetrag.dat$ / umrechnung.dat$,"999999999.00"))
       gezahlt.dat$ = VAL ( STR$ (gezahlt.dat$ / umrechnung.dat$,"999999999.00"))
       Einheiten.dat$ = VAL ( STR$ (Einheiten.dat$ / umrechnung.dat$,"999999999.00"))
       EinheitenEU.dat$ = Einheiten.dat$
       Bewertung2.dat$ = VAL ( STR$ (Bewertung2.dat$ / umrechnung.dat$,"999999999.00"))
       BeitragBrut.dat$ = VAL ( STR$ (BeitragBrut.dat$ / umrechnung.dat$,"999999999.00"))
       BeitragNet.dat$ = VAL ( STR$ (BeitragNet.dat$ / umrechnung.dat$,"999999999.00"))
       JahresBBrut.dat$ = VAL ( STR$ (JahresBBrut.dat$ / umrechnung.dat$,"999999999.00"))
       JahresBNet.dat$ = VAL ( STR$ (JahresBNet.dat$ / umrechnung.dat$,"999999999.00"))
       KundEinzahlung.dat$ = VAL ( STR$ (KundEinzahlung.dat$ / umrechnung.dat$,"999999999.00"))
       KundEinzahluEU.dat$ = KundEinzahlung.dat$
       codew.dat$ = 3
       umrechnung.dat$ = 1
       waehrung.dat$ = "EUR"
       FORM 
       STORE FILE dat$
       UNLOCK CURRENT FILE dat$
     END IF 
   FILE dat$
   i% = i% + 1
   SELECT NEXT LOCK FILE dat$
   WEND 
 END IF 
 REM *****************************************************************************************************************
 REM *         Buchung umrechnen ENDE                                                                                *
 REM *****************************************************************************************************************  
 
 REM *****************************************************************************************************************
 REM *         Zahlungseingang umrechnen BEGINN                                                                      *
 REM *****************************************************************************************************************
 MOUSE OFF 
 IF EUZeing.stamm LIKE "j" THEN 
   IF PrvVerfahr$ <> "ZAHLUNGSEINGANG" THEN 
     dat$ = "zeingang"
   ELSE 
     dat$ = "zeingan1"
   END IF 
   FILE dat$
   INDEX codeaz.dat$
   CALL WriteLogEU("Umrechnung Datei: " + dat$)
   j% = RECCOUNT (dat$)
   i% = 0
   IF j% > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   WHILE NOT EOF (dat$)
   FORM 
     REM CALL Fehler("Zahlungseingang","")
     IF eualles.stamm LIKE "j" THEN 
       codew% = codew.dat$
     ELSE 
       codew% = eucodew.stamm
     END IF 
     ok% = 0
     IF codew% = codew.dat$ THEN 
       ok% = - 1
     END IF 
     euinfo$ = "Umrechnung Zahlungseingang: " + vs_nr.dat$ + "         " + STR$ (i%) + " von " + STR$ (j%) + " verarbeitet"
     IF euzahldat.stamm > 0 THEN 
       IF dat$ LIKE "ZEINGAN1" THEN 
         IF BuchungsDatum.dat$ > 0 THEN 
           IF BuchungsDatum.dat$ >= euzahldat.stamm THEN 
             ok% = - 1
           ELSE 
             ok% = 0
           END IF 
         ELSE 
           ok% = - 1
         END IF 
       ELSE 
         IF Datum.dat$ > 0 THEN 
           IF Datum.dat$ >= euzahldat.stamm THEN 
             ok% = - 1
           ELSE 
             ok% = 0
           END IF 
         ELSE 
           ok% = - 1
         END IF 
       END IF 
     ELSE 
       ok% = - 1
     END IF 
     IF ok% = - 1 THEN 
       CALL WriteLogEU(euinfo$)
       betrag.dat$ = VAL ( STR$ (betrag.dat$ / umrechnung.dat$,"999999999.00"))
       Betrag_gezahlt.dat$ = VAL ( STR$ (Betrag_gezahlt.dat$ / umrechnung.dat$,"999999999.00"))
       IF PrvVerfahr$ LIKE "ZAHLUNGSEINGANG" THEN 
         sr.dat$ = VAL ( STR$ (sr.dat$ / umrechnung.dat$,"999999999.00"))
         Bewertung.dat$ = VAL ( STR$ (Bewertung.dat$ / umrechnung.dat$,"999999999.00"))
         KundEinzahlung.dat$ = VAL ( STR$ (KundEinzahlung.dat$ / umrechnung.dat$,"999999999.00"))
         KundEinzahluEU.dat$ = KundEinzahlung.dat$
       END IF 
       codew.dat$ = 3
       umrechnung.dat$ = 1
       waehrung.dat$ = "EUR"
       FORM 
       STORE FILE dat$
       UNLOCK CURRENT FILE dat$
     END IF 
   FILE dat$
   i% = i% + 1
   SELECT NEXT LOCK FILE dat$
   WEND 
 END IF 
 REM *****************************************************************************************************************
 REM *         Zahlungseingang umrechnen ENDE                                                                        *
 REM *****************************************************************************************************************  
 
 REM *****************************************************************************************************************
 REM *         Konditionen umrechnen BEGINN                                                                          *
 REM *****************************************************************************************************************
 MOUSE OFF 
 dat$ = ""
 IF EUKond.stamm LIKE "j" THEN 
 CALL Fehler("Sie erhalten jetzt die Mîglichkeit die WÑhrung auszusuchen, in der die Konditionen erfa·t wurden!","")
 codew% = WaehrSEU%()
 SELECT FIRST FILE "Waehrung" INDEX codew.waehrung
 SELECT KEY codew% FILE "Waehrung" INDEX codew.waehrung
 umrechnung% = umrechnung.waehrung
Kondeu191201001: 
   IF dat$ = "" THEN 
     dat$ = "gekond"
   ELSE 
     IF dat$ = "gekond" THEN 
       dat$ = "gekondm"
     ELSE 
       IF dat$ LIKE "gekondm" THEN 
         dat$ = "Foerkond"
       ELSE 
         IF dat$ LIKE "Foerkond" THEN 
           dat$ = "spezkond"
         ELSE 
           IF dat$ LIKE "spezkond" THEN 
             dat$ = "vpspezko"
           ELSE 
             GOTO Kondeu191201002
           END IF 
         END IF 
       END IF 
     END IF 
   END IF 
   
   FILE dat$
   INDEX codege.dat$
   CALL WriteLogEU("Umrechnung Datei: " + dat$)
   j% = RECCOUNT (dat$)
   i% = 0
   IF j% > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   WHILE NOT EOF (dat$)
   FORM 
     IF EUUmstellung.dat$ <> "j" THEN 
       euinfo$ = "Umrechnung Konditionen: " + gesellschaft.dat$ + "/" + sparte.gekond + "         " + STR$ (i%) + " von " + STR$ (j%) + " verarbeitet"
       FORM 
       CALL WriteLogEU(euinfo$)
       Pauschale.dat$ = VAL ( STR$ (Pauschale.dat$ / umrechnung%,"999999999.00"))
       IF dat$ LIKE "geko*" THEN 
         DMEinheit.dat$ = VAL ( STR$ (DMEinheit.dat$ / umrechnung%,"999999999.00"))
         IF EuroEinheit.dat$ <> DMEinheit.dat$ AND EuroEinheit.dat$ > 0 THEN DMEinheit.dat$ = EuroEinheit.dat$
         IF EuroEinheit.dat$ < 0.01 AND DMEinheit.dat$ > 0 THEN EuroEinheit.dat$ = DMEinheit.dat$
       END IF 
       FORM 
       EUUmstellung.dat$ = "j"
       STORE FILE dat$
       UNLOCK CURRENT FILE dat$
     END IF 
   FILE dat$
   i% = i% + 1
   SELECT NEXT LOCK FILE dat$
   WEND 
   GOTO Kondeu191201001
 END IF 
Kondeu191201002: 
 REM *****************************************************************************************************************
 REM *         Konditionen umrechnen ENDE                                                                            *
 REM *****************************************************************************************************************   
 
 
 
 REM *****************************************************************************************************************
 REM *         Fondsdatei umrechnen BEGINN                                                                           *
 REM *****************************************************************************************************************
 MOUSE OFF 
 IF EUFonds.stamm LIKE "j" THEN 
   dat$ = "fonds"
   FILE dat$
   INDEX codefo.dat$
   CALL WriteLogEU("Umrechnung Datei: " + dat$)
   j% = RECCOUNT (dat$)
   i% = 0
   IF j% > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   WHILE NOT EOF (dat$)
   FORM 
     IF eualles.stamm LIKE "j" THEN 
       codew% = 0
     ELSE 
       codew% = eucodew.stamm
     END IF 
     ok% = 0
     IF codew% = 0 THEN 
       ok% = - 1
     ELSE 
       SELECT FIRST FILE "waehrung" INDEX codew.waehrung
       SELECT KEY codew% FILE "waehrung" INDEX codew.waehrung
       IF wÑhrung.fonds LIKE waehrung.waehrung THEN 
         ok% = - 1
       END IF 
     END IF 
     IF eufondsdat.stamm > 0 THEN 
       IF Datum.dat$ > 0 THEN 
         IF Datum.dat$ >= eufondsdat.stamm THEN 
           ok% = - 1
         ELSE 
           ok% = 0
         END IF 
       ELSE 
         ok% = - 1
       END IF 
     ELSE 
       ok% = - 1
     END IF 
     IF ok% = - 1 THEN 
       SELECT KEY codevt.dat$ FILE "kvertrag" INDEX lfdnr.kvertrag
       vsnr$ = vs_nr.kvertrag
       euinfo$ = "Umrechnung Fondsdatei: " + vs_nr$ + "         " + STR$ (i%) + " von " + STR$ (j%) + " verarbeitet"
       CALL WriteLogEU(euinfo$)
       Preis.dat$ = VAL ( STR$ (Preis.dat$ / KursEuro.dat$,"999999999.00"))
       KursEuro.dat$ = 1
       BKursEuro.dat$ = 1
       wÑhrung.dat$ = "EUR"
       FORM 
       STORE FILE dat$
       UNLOCK CURRENT FILE dat$
     END IF 
   FILE dat$
   i% = i% + 1
   SELECT NEXT LOCK FILE dat$
   WEND 
 END IF 
 REM *****************************************************************************************************************
 REM *         Fondsdatei umrechnen ENDE                                                                             *
 REM *****************************************************************************************************************  
 
 
 
 
 
 REM *****************************************************************************************************************
 REM *         KVERTRAG umrechnen BEGINN                                                                             *
 REM ***************************************************************************************************************** 
 IF eukvertrag.stamm LIKE "j" THEN 
   FILE "Kvertrag"
   INDEX lfdnr.kvertrag
       CALL WriteLogEU("Umrechnung Datei: " + dat$)
       
   j% = RECCOUNT ("KVERTRAG")
   i% = 0
   IF j% > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   codew% = 0
   WHILE NOT EOF ("KVERTRAG")
     IF eualles.stamm LIKE "j" THEN 
       codew% = codew.kvertrag
     ELSE 
       codew% = eucodew.stamm
     END IF 
     IF codew.kvertrag = codew% THEN 
       ok% = 0
       IF KÅndigung.kvertrag < 1 THEN 
         ok% = - 1
       END IF 
       IF KÅndigung.kvertrag > 0 AND KÅndigung.kvertrag > eukuenddat.stamm THEN 
         ok% = - 1
       END IF 
       IF ok% = - 1 THEN 
         i% = i% + 1
         euinfo$ = "umrechnen Vertrag: " + vs_nr.kvertrag
         SELECT FIRST FILE "kvfael" INDEX codevt.kvfael
         IF EXISTS (lfdnr.kvertrag,codevt.kvfael) THEN 
           SELECT KEY lfdnr.kvertrag LOCK FILE "kvfael" INDEX codevt.kvfael
           IF EUUmstellung.kvfael <> "j" THEN 
             ProvBetrag.kvfael = ProvBetragEU.kvfael
             UE.kvfael = VAL ( STR$ (UE.kvfael / umrechnung.kvertrag,"999999999.00"))
             Pool.kvfael = VAL ( STR$ (Pool.kvfael / umrechnung.kvertrag,"999999999.00"))
             gezProv.kvfael = VAL ( STR$ (gezProv.kvfael / umrechnung.kvertrag,"999999999.00"))
             VMProv.kvfael = VAL ( STR$ (VMProv.kvfael / umrechnung.kvertrag,"999999999.00"))
             StornoBetrag.kvfael = VAL ( STR$ (StornoBetrag.kvfael / umrechnung.kvertrag,"999999999.00"))
             EinzBeitrag.kvfael = VAL ( STR$ (EinzBeitrag.kvfael / umrechnung.kvertrag,"999999999.00"))
             Courtage.kvfael = VAL ( STR$ (Courtage.kvfael / umrechnung.kvertrag,"999999999.00"))
             EinzCourtage.kvfael = VAL ( STR$ (EinzCourtage.kvfael / umrechnung.kvertrag,"999999999.00"))
             EinzBeitragOld.kvfael = VAL ( STR$ (EinzBeitragOld.kvfael / umrechnung.kvertrag,"999999999.00"))
             Beitrag.kvfael = VAL ( STR$ (Beitrag.kvfael / umrechnung.kvertrag,"999999999.00"))
             EUUmstellung.kvfael = "j"
             STORE FILE "KVFAEL"
             UNLOCK CURRENT FILE "KVFAEL"
           END IF 
         END IF 
         REM CALL Fehler("KVERTRAG","")
         IF eubwsum.stamm LIKE "j" THEN 
           Bewertungssumme.kvertrag = VAL ( STR$ (Bewertungssumme.kvertrag / umrechnung.kvertrag,"999999999.00"))
           Bewerteinm.kvertrag = VAL ( STR$ (Bewerteinm.kvertrag / umrechnung.kvertrag,"999999999.00"))
           euinfo$ = euinfo$ + ",Bewertungssumme"
         END IF 
         IF euvolumen.stamm LIKE "j" THEN 
           euinfo$ = euinfo$ + ",Volumen"
           Volumen.kvertrag = VAL ( STR$ (Volumen.kvertrag / umrechnung.kvertrag,"999999999.00"))
         END IF 
         IF eubeitrag.stamm LIKE "j" THEN 
           euinfo$ = euinfo$ + ",Beitrag"
           Beitrag.kvertrag = VAL ( STR$ (Beitrag.kvertrag / umrechnung.kvertrag,"999999999.00"))
           NettoBeitrag.kvertrag = VAL ( STR$ (NettoBeitrag.kvertrag / umrechnung.kvertrag,"999999999.00"))
         END IF 
         IF euvssum.stamm LIKE "j" THEN 
           euinfo$ = euinfo$ + ",Versicherungssumme" + "         " + STR$ (i%) + " von " + STR$ (j%) + " verarbeitet"
           Vsumme.kvertrag = VAL ( STR$ (Vsumme.kvertrag / umrechnung.kvertrag,"999999999.00"))
         END IF 
         feld1$ = "F_VS"
         euinfo$ = euinfo$ + ", " + feld1$
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "FKBU_VS"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "LW_VS"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "LWKBU_VS"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "ST_VS"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "STKBU_VS"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "ED_VS"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "EDVANDA_VS"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "EDKBU_VS"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "F_Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "FKBU_Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "LW_Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "LWKBU_Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "ST_Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "STKBU_Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "ED_Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "EDVANDA_Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "EDKBU_Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Gesamtbeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "GAlleGefWert"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "GAlleGEBeitr"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Deckung_Pers"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Deckung_Sach"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Deckung_Verm"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "TÑtigk_SchÑden"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "TÑtigk_SBBetrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Ums_Betrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Lîhne_Betrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Gehalt_Betrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "PersB_Betrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "PersBa_Betrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Ums_Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Lîhne_bEITRAG"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Gehalt_Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "PersB_Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "PersBA_Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "FahrradDM"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Deckung1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "IVSu"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KBUSU"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "GLESU"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "GLPSU"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "ELSU"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "BEWSu"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "IVSB"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KBUSB"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "GLESB"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "GLPSB"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "ELSB"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "BEWSB"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "AnlFond1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "AnlFond2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "AnlFond3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "AnlFond4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "AnlFond5"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "AnlFond6"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "AnliFond1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "AnliFond2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "AnliFond3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "AnliFond4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "AnliFond5"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "AnliFond6"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "SparFond1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "SparFond2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "SparFond3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "SparFond4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "SparFond5"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "SparFond6"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "SpariFond1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "SpariFond2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "SpariFond3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "SpariFond4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "SpariFond5"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "SpariFond6"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "zvp1Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "zvp2Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "zvp3Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "zvp4Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "zvp5Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "zvp6Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "SummeBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Vollinvalid1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Vollinvalid2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Vollinvalid3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Vollinvalid4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Vollinvalid5"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Vollinvalid6"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Basisinvalid1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Basisinvalid2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Basisinvalid3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Basisinvalid4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Basisinvalid5"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Basisinvalid6"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Progression1_1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Progression1_2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Progression1_3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Progression1_4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Progression1_5"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Progression1_6"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Progression2_1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Progression2_2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Progression2_3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Progression2_4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Progression2_5"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Progression2_6"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Todesfall1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Todesfall2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Todesfall3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Todesfall4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Todesfall5"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Todesfall6"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KHT1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KHT2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KHT3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KHT4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KHT5"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KHT6"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Genesungsgeld1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Genesungsgeld2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Genesungsgeld3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Genesungsgeld4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Genesungsgeld5"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Genesungsgeld6"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "öbergangsleist1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "öbergangsleist2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "öbergangsleist3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "öbergangsleist4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "öbergangsleist5"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "öbergangsleist6"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Chir_Leist1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Chir_Leist2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Chir_Leist3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Chir_Leist4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Chir_Leist5"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Chir_Leist6"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Unfallrente1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Unfallrente2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Unfallrente3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Unfallrente4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Unfallrente5"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Unfallrente6"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfBergung1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfBergung2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfBergung3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfBergung4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfBergung5"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfBergung6"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfKurBH1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfKurBH2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfKurBH3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfKurBH4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfKurBH5"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfKurBH6"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfsonAs1"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfsonAs2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfsonAs3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfsonAs4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfsonAs5"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UnfsonAs6"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "TK_Betrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "VK_Betrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZHaftBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZVollkBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZTeilkBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZGesBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Fahrzeugwert"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZ_VSBH"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZ_VSBK"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZ_VSBU"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZ_ZuKH"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZ_ZuVK"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZ_ZuTK"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZ_NaKH"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZ_NaVK"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZ_NaTK"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZ_UnfJBeitr"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZ_UTod"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZ_UInv"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZ_UHeilk"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZ_KTageGe"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZ_UTage"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "RSSelbstDM"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "RSStrafKautDM"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "PHBausumme"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "PHEigenl"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "PHVSSMiet"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "PHVSSSelbst"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "GAlleGefWert"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "GAlleGeBeitr"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "GSelbstbet"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "BeitrSum"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "PflegeDM"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "FEigmittel"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "FDarlBetrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "FBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "FAuszahl"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "FTilgung"
         SummeEinzDM = SummeEinzEur
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "PoolV"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Pool"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "SummeEinzWaehr"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         BAnteilsprDM = BAnteilsprEuro
         feld1$ = "SummeBestWaehr"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "BRÅckkaufWaehr"
         BRÅckkaufDM = BRÅckkaufEuro
         BBestandDM = BBestandEuro
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "BBestandWaehr"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "EinzBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Courtage"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "EinzCourtage"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "EinzBeitragOld"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "TZV_Summe"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "TZV_Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "öZR_Beitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "UZV_Summe"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "StornoBetrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Vollinvalid"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "BURenteMonat"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KuBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KBUBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "GLEBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "GLPBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "ELBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "BEWBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "IVPSumme"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "BEHPHV"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "BEHSumme"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "RSPrivatSB"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "RSPrivatBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "RSBerufSB"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "RSBerufBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "RSVerkSB"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "RSVerkBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "RSVertrSB"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "RSVertrBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "RSRegrSB"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "RSRegrBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "RSSpeziSB"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "RSSpeziBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "RSWohnSB"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "RSWohnBeitrag"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Rechtsumme"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Deckung2"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Deckung3"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "Deckung4"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "VGezGesamtPlus"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "VGezGesamtMinus"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         feld1$ = "KFZ_Genes"
         feld1$$ = VAL ( STR$ (feld1$$ / umrechnung.kvertrag,"999999999.00"))
         waehrung.kvertrag = "EUR"
         umrechnung.kvertrag = 1
         codew.kvertrag = 3
         
         STORE FILE "kvertrag"
         FORM 
         UNLOCK CURRENT FILE "kvertrag"
         CALL WriteLogEU(euinfo$)
         REM CALL Fehler("1 Vertrag verarbeitet","")
       END IF 
     END IF 
     
     FILE "KVERTRAG"
     SELECT NEXT LOCK FILE "KVERTRAG"
   WEND 
 END IF 
 REM *****************************************************************************************************************
 REM *         KVERTRAG umrechnen ENDE                                                                               *
 REM ***************************************************************************************************************** 
 
 
 
 
 REM *****************************************************************************************************************
 REM *               MAADR umrechnen BEGINN                                                                          *
 REM *****************************************************************************************************************
 MOUSE OFF 
 dat$ = "MAADR"
 CALL Fehler("Sie erhalten jetzt die Mîglichkeit die WÑhrung auszusuchen, die im allgemeinen Ihre StandardwÑhrung war!","Dies wird benîtigt, um die Stornoreserve und Einheiten bei den Mitarbeitern umzurechnen!")
 codew% = WaehrSEU%()
 SELECT FIRST FILE "Waehrung" INDEX codew.waehrung
 SELECT KEY codew% FILE "Waehrung" INDEX codew.waehrung
 umrechnung% = umrechnung.waehrung
   FILE dat$
   INDEX codema.dat$
   CALL WriteLogEU("Umrechnung Datei: " + dat$)
   j% = RECCOUNT (dat$)
   i% = 0
   IF j% > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   WHILE NOT EOF (dat$)
   FORM 
     IF EUUmstellung.dat$ <> "j" THEN 
       euinfo$ = "Umrechnung MAADR: " + nachname.dat$ + "         " + STR$ (i%) + " von " + STR$ (j%) + " verarbeitet"
       FORM 
       CALL WriteLogEU(euinfo$)
       einheiten.dat$ = VAL ( STR$ (einheiten.dat$ / umrechnung%,"999999999.00"))
       GesVolumen.dat$ = VAL ( STR$ (GesVolumen.dat$ / umrechnung%,"999999999.00"))
       EigVolumen.dat$ = VAL ( STR$ (EigVolumen.dat$ / umrechnung%,"999999999.00"))
       EigEinheiten.dat$ = VAL ( STR$ (EigEinheiten.dat$ / umrechnung%,"999999999.00"))
       StornoreservV.dat$ = VAL ( STR$ (StornoreservV.dat$ / umrechnung%,"999999999.00"))
       EinheitenV.dat$ = VAL ( STR$ (EinheitenV.dat$ / umrechnung%,"999999999.00"))
       GesVolumenV.dat$ = VAL ( STR$ (GesVolumenV.dat$ / umrechnung%,"999999999.00"))
       EigVolumenV.dat$ = VAL ( STR$ (EigVolumenV.dat$ / umrechnung%,"999999999.00"))
       EigEinheitenV.dat$ = VAL ( STR$ (EigEinheitenV.dat$ / umrechnung%,"999999999.00"))
 
       BWSGes.dat$ = VAL ( STR$ (BWSGes.dat$ / umrechnung%,"999999999.00"))
       EBWSGes.dat$ = VAL ( STR$ (EBWSGes.dat$ / umrechnung%,"999999999.00"))
       MBWSGes.dat$ = VAL ( STR$ (MBWSGes.dat$ / umrechnung%,"999999999.00"))
       VolGes.dat$ = VAL ( STR$ (VolGes.dat$ / umrechnung%,"999999999.00"))
       KontoGes.dat$ = VAL ( STR$ (KontoGes.dat$ / umrechnung%,"999999999.00"))
       EinheitGes.dat$ = VAL ( STR$ (EinheitGes.dat$ / umrechnung%,"999999999.00"))
       SBWSGes.dat$ = VAL ( STR$ (SBWSGes.dat$ / umrechnung%,"999999999.00"))
       SEBWSGes.dat$ = VAL ( STR$ (SEBWSGes.dat$ / umrechnung%,"999999999.00"))
 
       SVolGes.dat$ = VAL ( STR$ (SVolGes.dat$ / umrechnung%,"999999999.00"))
       SKontoGes.dat$ = VAL ( STR$ (SKontoGes.dat$ / umrechnung%,"999999999.00"))
       SEinheitGes.dat$ = VAL ( STR$ (SEinheitGes.dat$ / umrechnung%,"999999999.00"))
       AuszahlAB.dat$ = AuszahlEUAB.dat$
       AuszahlSchw.dat$ = AuszahlSchwEU.dat$
       erfAuszahlAB.dat$ = erfAuszahlEUAB.dat$
       zusAuszahl.dat$ = zusAuszahlEU.dat$
       SollBWS.dat$ = SollBWSEU.dat$
       IstBWS.dat$ = IstBWSEU.dat$
       aktZusB.dat$ = aktZusBEU.dat$
       Stornoreserve.dat$ = StornoreserveEU.dat$
 
       FORM 
       EUUmstellung.dat$ = "j"
       STORE FILE dat$
       UNLOCK CURRENT FILE dat$
     END IF 
   FILE dat$
   i% = i% + 1
   SELECT NEXT LOCK FILE dat$
   WEND 
 REM *****************************************************************************************************************
 REM *               MAADR umrechnen ENDE                                                                            *
 REM *****************************************************************************************************************   
 
 
 REM *****************************************************************************************************************
 REM *               AUMSKTO umrechnen BEGINN                                                                        *
 REM *****************************************************************************************************************
 MOUSE OFF 
 dat$ = "AUMSKTO"
 REM CALL Fehler("Sie erhalten jetzt die Mîglichkeit die WÑhrung auszusuchen, die im allgemeinen Ihre StandardwÑhrung war!","Dies wird benîtigt, um die Stornoreserve und Einheiten bei den Mitarbeitern umzurechnen!")
 REM codew% = WaehrSEU%()
 REM SELECT FIRST FILE "Waehrung" INDEX codew.waehrung
 REM SELECT KEY codew% FILE "Waehrung" INDEX codew.waehrung
 REM umrechnung% = umrechnung.waehrung
   FILE dat$
   INDEX codema.dat$
   CALL WriteLogEU("Umrechnung Datei: " + dat$)
   j% = RECCOUNT (dat$)
   i% = 0
   IF j% > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   WHILE NOT EOF (dat$)
   FORM 
     IF EUUmstellung.dat$ <> "j" THEN 
       SELECT KEY codema.dat$ FILE "maadr" INDEX codema.maadr
       euinfo$ = "Umrechnung AUMSKTO: " + nachname.maadr + "         " + STR$ (i%) + " von " + STR$ (j%) + " verarbeitet"
       FORM 
       CALL WriteLogEU(euinfo$)
 
       feld$ = "Konto"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldq$ = feld$ + STR$ (k%,"00") + "EU"
         feldd$$ = feldq$$
       NEXT k%
 
       feld$ = "AKonto"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldq$ = feld$ + STR$ (k%,"00") + "EU"
         feldd$$ = feldq$$
       NEXT k%
       AKontoGes = AKontoGesEU
       KontoGes = KontoGesEU
 
       feld$ = "sKonto"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldq$ = feld$ + STR$ (k%,"00") + "EU"
         feldd$$ = feldq$$
       NEXT k%
       sKontoGes = sKontoGesEU 
 
       feld$ = "EKonto"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldq$ = feld$ + STR$ (k%,"00") + "EU"
         feldd$$ = feldq$$
       NEXT k%
       EKontoGes = EKontoGesEU 
 
       feld$ = "dKonto"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldq$ = feld$ + STR$ (k%,"00") + "EU"
         feldd$$ = feldq$$
       NEXT k%
       dKontoGes = dKontoGesEU 
 
 
       feld$ = "zKonto"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldq$ = feld$ + STR$ (k%,"00") + "EU"
         feldd$$ = feldq$$
       NEXT k%
       zKontoGes = zKontoGesEU 
 
       feld$ = "dKonto"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldq$ = feld$ + STR$ (k%,"00") + "EU"
         feldd$$ = feldq$$
       NEXT k%
       dKontoGes = dKontoGesEU 
 
 
       FORM 
       EUUmstellung.dat$ = "j"
       codew.dat$ = 3
       Waehrung.dat$ = "EUR"
       umrechnung.dat$ = 1
       STORE FILE dat$
       UNLOCK CURRENT FILE dat$
     END IF 
   FILE dat$
   i% = i% + 1
   SELECT NEXT LOCK FILE dat$
   WEND 
 REM *****************************************************************************************************************
 REM *               AUMSKTO umrechnen ENDE                                                                          *
 REM *****************************************************************************************************************   
 
 REM *****************************************************************************************************************
 REM *               AUMSATZ umrechnen BEGINN                                                                        *
 REM *****************************************************************************************************************
 MOUSE OFF 
 dat$ = "AUMSATZ"
 REM CALL Fehler("Sie erhalten jetzt die Mîglichkeit die WÑhrung auszusuchen, die im allgemeinen Ihre StandardwÑhrung war!","Dies wird benîtigt, um die Stornoreserve und Einheiten bei den Mitarbeitern umzurechnen!")
 REM codew% = WaehrSEU%()
 REM SELECT FIRST FILE "Waehrung" INDEX codew.waehrung
 REM SELECT KEY codew% FILE "Waehrung" INDEX codew.waehrung
 REM umrechnung% = umrechnung.waehrung
   FILE dat$
   INDEX codema.dat$
   CALL WriteLogEU("Umrechnung Datei: " + dat$)
   j% = RECCOUNT (dat$)
   i% = 0
   IF j% > 0 THEN 
     SELECT FIRST LOCK 
   ELSE 
     SELECT LAST 
   END IF 
   WHILE NOT EOF (dat$)
   FORM 
     IF EUUmstellung.dat$ <> "j" THEN 
       SELECT KEY codema.dat$ FILE "maadr" INDEX codema.maadr
       euinfo$ = "Umrechnung AUMSATZ: " + nachname.maadr + "         " + STR$ (i%) + " von " + STR$ (j%) + " verarbeitet"
       FORM 
       CALL WriteLogEU(euinfo$)
       feld$ = "BWS"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldd$$ = VAL ( STR$ (feldd$$ / umrechnung%,"999999999.00"))
       NEXT k%
       BWSGes = VAL ( STR$ (BWSGES / umrechnung%,"999999999.00"))
       KontoGes = KontoGesEU
 
       feld$ = "Konto"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldd$$ = VAL ( STR$ (feldd$$ / umrechnung%,"999999999.00"))
       NEXT k%
       KontoGes = VAL ( STR$ (KontoGES / umrechnung%,"999999999.00"))
 
       feld$ = "Vol"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldd$$ = VAL ( STR$ (feldd$$ / umrechnung%,"999999999.00"))
       NEXT k%
       EKontoGes = VAL ( STR$ (volges / umrechnung%,"999999999.00"))
 
       feld$ = "Einheit"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldd$$ = VAL ( STR$ (feldd$$ / umrechnung%,"999999999.00"))
       NEXT k%
       EinheitGes = VAL ( STR$ (feldd$$ / umrechnung%,"999999999.00"))
 
 
       feld$ = "SBWS"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldd$$ = VAL ( STR$ (feldd$$ / umrechnung%,"999999999.00"))
       NEXT k%
       SBWSGes = VAL ( STR$ (SBWSGES.dat$ / umrechnung%,"999999999.00"))
 
       feld$ = "SKonto"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldd$$ = VAL ( STR$ (feldd$$ / umrechnung%,"999999999.00"))
       NEXT k%
       sKontoGes = VAL ( STR$ (sKontoGes / umrechnung%,"999999999.00"))
 
 
       feld$ = "SVol"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldd$$ = VAL ( STR$ (feldd$$ / umrechnung%,"999999999.00"))
       NEXT k%
       SVolGes = VAL ( STR$ (SVolGes / umrechnung%,"999999999.00"))
 
 
        feld$ = "SEinheit"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldd$$ = VAL ( STR$ (feldd$$ / umrechnung%,"999999999.00"))
       NEXT k%
       SEinheitGes = VAL ( STR$ (SEinheitGes / umrechnung%,"999999999.00"))
 
 
       feld$ = "EBWS"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldd$$ = VAL ( STR$ (feldd$$ / umrechnung%,"999999999.00"))
       NEXT k%
       EBWSGes = VAL ( STR$ (EBWSGes / umrechnung%,"999999999.00"))
 
       feld$ = "SBWS"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldd$$ = VAL ( STR$ (feldd$$ / umrechnung%,"999999999.00"))
       NEXT k%
       SBWSGes = VAL ( STR$ (SBWSGes / umrechnung%,"999999999.00"))
 
       feld$ = "MBWS"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldd$$ = VAL ( STR$ (feldd$$ / umrechnung%,"999999999.00"))
       NEXT k%
       MBWSGes = VAL ( STR$ (MBWSGes / umrechnung%,"999999999.00"))
 
       feld$ = "SEBWS"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldd$$ = VAL ( STR$ (feldd$$ / umrechnung%,"999999999.00"))
       NEXT k%
       SEBWSGes = VAL ( STR$ (SEBWSGes / umrechnung%,"999999999.00"))
 
 
       feld$ = "SMBWS"
       FOR k% = 1 TO 12
         feldd$ = feld$ + STR$ (k%,"00")
         feldd$$ = VAL ( STR$ (feldd$$ / umrechnung%,"999999999.00"))
       NEXT k%
       SMBWSGes = VAL ( STR$ (SMBWSGes / umrechnung%,"999999999.00"))
 
       FORM 
       EUUmstellung.dat$ = "j"
       codew.dat$ = 3
       Waehrung.dat$ = "EUR"
       umrechnung.dat$ = 1
       STORE FILE dat$
       UNLOCK CURRENT FILE dat$
     END IF 
   FILE dat$
   i% = i% + 1
   SELECT NEXT LOCK FILE dat$
   WEND 
 REM *****************************************************************************************************************
 REM *               AUMSATZ umrechnen ENDE                                                                          *
 REM *****************************************************************************************************************   
  
 
 
 
 
 
 SELECT FIRST LOCK FILE "stamm"
 codew.stamm = 3
 umrechnung.stamm = 1
 waehrung.stamm = "EUR"
 STORE FILE "stamm"
 UNLOCK CURRENT FILE "stamm"
 euinfo$ = letzteEUUmst.stamm
 FORM 
 MOUSE ON 
 CALL CloseLogEU()
 CALL Fehler("EURO-Umstellung beendet!","")
 END SUB 
 
 
FUNCTION WaehrSEU%()
     REM WÑhrung Stamm
     ON ERROR GOTO w2105200101es
     DIM Waehrung$( RECCOUNT ("waehrung"))
w2105200101es: 
     ON ERROR GOTO w2105200102e
     DIM Auswahl1$(1)
w2105200102es: 
     ON ERROR GOTO ErrorHandler
     FILE "waehrung"
     
     INDEX Codew.waehrung
     SELECT FIRST 
     a% = 0
     WHILE NOT EOF ("waehrung")
       Waehrung$(a%) = waehrung.waehrung + " (1Euro = " + STR$ (umrechnung.waehrung,",999999.000000") + " " + waehrung.waehrung + ")" + SPACE$ (120) + STR$ (CodeW.waehrung,"000000")
       a% = a% + 1
       SELECT NEXT 
     WEND 
     prompt$ = Waehrung$(0)
     CREATE DIALOG "PREISLIS",0,0,190,164,"Bitte WÑhrung wÑhlen!","MS Sans Serif",8
      ADD DIALOG "PREISLIS",4,0,0,189,137,0," Auswahl WÑhrung"
      ADD DIALOG "PREISLIS",7,5,14,139,125,2,2,Waehrung$,Auswahl1$,prompt$
      ADD DIALOG "PREISLIS",1,37,145,55,16,1,"&OK",1,1
      ADD DIALOG "PREISLIS",1,107,145,55,16,0,"&Abbrechen",0,0
      DIALOG "PREISLIS",req%
      REMOVE DIALOG "PREISLIS"
      IF req% = 1 THEN 
        _cuwaehr% = VAL ( RIGHT$ (Auswahl1$(0),6))
        SELECT KEY _cuwaehr% FILE "waehrung" INDEX codew.waehrung
        _cuwaehr% = CodeW.waehrung
        IF _cuwaehr% > 0 THEN 
           WaehrSEU% = _cuwaehr%
        ELSE 
          WaehrSEU% = 0
        END IF 
        
      END IF 
      MOUSE ON 
      FILE "stamm"
      SELECT FIRST LOCK FILE "stamm"
 END FUNCTION 
 
 

