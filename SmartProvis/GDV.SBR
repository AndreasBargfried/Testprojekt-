  CALL main()
SUB GDVImport()
  GGDVistAN% = - 1
  REM *******************************************************
  REM *******************************************************
  REM ***** Globale Variablen *******************************
  REM *******************************************************
  REM *******************************************************
 IF gdvVarDek% = 0 THEN 
   GLOBAL GID$,gdvStand$,gdvAnzeige$,gdvBegrundung$
   GLOBAL gdvPath$,gdvdatpath$,gdvbkuppath$
   GLOBAL gdvfail1$,gdvfail2$,gdvfehler%,gdvzeile%
   GLOBAL gdvdatname$(50),gdvdatart$(50),gdvdatvsnr$(50)
   GLOBAL gdvdatei$(50,3),gdvstartdat$,gdvImpDat$
   GLOBAL gdvCodeKu%,gdvAnzDat%%,gdvoldvsnr$
   GLOBAL gdvcodekua%,gdvcodekuv%,gdvlfdnrab%,gdvcodemaab%
   GLOBAL gdvTestLog%,GDVIMPSUB1%
   GLOBAL tempAnzeige$,gdvAdrSparte%
   GLOBAL gdvNummer%,AdressFound%,gdvLNR%,VertFound%
   GLOBAL codeimpgdv%,gdvKNZVS$,gdvSparteName$,gdvSparteVST%,gdvDateiDir$,adganz%,adganz1%,gdvAuswDat$,Gold001%
   GLOBAL gdv_v210$(50)

   REM GLOBAL gdvAdrSparte%
   GLOBAL gdvAdrVSNR$,gdvAdrVSNR1$
   GLOBAL gdvAdrBKNZ$
   GLOBAL gdvAdrVu%
   GLOBAL gdvAdrKU%
   GLOBAL gdvN1$
   GLOBAL gdvN2$
   GLOBAL gdvN3$
   GLOBAL gdvO$
   GLOBAL gdvP$,nurVerarb%
   GLOBAL AdrChange%,VertHistory%,ADRnurName%,gdvVMNr$
   GLOBAL GStornoInsert%,GADRVorn$,GADRNachn$,GADRGeb$,GADRPlz$,GADROrt$,GADRStra$,GVSNRVergl%,GADRAnsi$,GAntDatOv$,GAblDatOv$
   GLOBAL KVIndex$,KVIndexName$,Giab%,GMwSt%
   GLOBAL Geurofin$,GBuendel$,GBewertberech$
   GgdvEnde% = 0
   gdvDateiDir$ = ""
   nurVerarb% = 1
   gdvVarDek% = 1
   gdvTestLog% = 1
 END IF 
 
  REM *******************************************************
  REM *******************************************************
  REM ***** LOG -Datei erstellen ****************************
  REM *******************************************************
  REM *******************************************************
 gdvdatpath$ = _netpath$ + "gdv\gdv_dat\"
 CALL GDVCreateLog()
 
 
  REM *******************************************************
  REM *******************************************************
  REM ***** Routine fÅr Formular GDVIMP *********************
  REM *******************************************************
  REM *******************************************************
 
 CALL DFile(3,"GEADR" + _fpw$)
 CALL DFile(3,"KVERTRAG" + _fpw$)
 CALL DFile(3,"GDVGES" + _fpw$)
 CALL DFile(3,"GDVTEMP" + _fpw$)
 CALL DFile(3,"spgruppe" + _fpw$)
 CALL DFile(3,"gekond" + _fpw$)
 CALL DFile(3,"maadr" + _fpw$)
 CALL DFile(3,"maadrag" + _fpw$)
 CALL DFile(3,"vprodukt" + _fpw$)
 REMOVE FROM FILE "GDVTEMP"
   
 FILE "GDVGES"
 _formend% = 0
 seite% = 1
 WHILE _formend% = 0
  
   IF UCASE$ ( FORM ) <> "GDVIMP" THEN 
     GDVIMPSUB1% = 0
     SET HEADING title$ + " - GDV - IMPORT"
     OPEN FORM GPrjForm$ + "GDVIMP"
     SET f = Superbase.Form
     SET STATUS "GDV - IMPORT"
     GAppName$ = _netpath$ + "DOC\gdv.pdf"
     Superbase.DateFormat = "0d.mm.yyyy"
     f.gdvStarten.Enabled = 0
     f.ListBox2.Populate()
     REM f.CommandButton3.Enabled = 0
     GID$ = ""
     gdvStand$ = ""
     gdvAnzeige$ = ""
     gdvBegrundung$ = ""
     FORM seite%
   END IF 
   
   MENU ON 
   MOUSE ON 
   
   CALL ClearKBDBuffer()
   FORM 
   FILE "GDVTEMP"
   IF GDVIMPSUB1% <> 99 THEN WAIT KEY OR MENU OR MOUSE 
   IF GDVIMPSUB1% = 1 THEN 
     
     cuge% = Codege.kvertrag
     CALL GEADR()
     cuge% = 0
     seite% = 2
   END IF 
 MENU ON 
 
 WEND 
 _formend% = 0
 GGDVistAN% = 0
 END SUB 
 
  REM *******************************************************  
  REM *******************************************************
  REM ***** Datei auswÑhlen *********************************
  REM *******************************************************
  REM *******************************************************
SUB GDVDateiAuswahl()
 IF gdvTestLog% = 1 THEN CALL gdvWriteLogOk("***** Routine : GDVDatAuswahl()")
 
 REM ====== Button Dateiauswahl - Dialog ====== 
 IF gdvTestLog% = 1 THEN CALL gdvWriteLogOk("Dateiauswahl starten")
   REM * Setzen der Pfade fÅr GDV *
   gdvStartDir$ = DIRECTORY 
   gdvImpDir$ = _netpath$ + "gdv\"
  
 REM ====== Dateiauswahl-Dialog îffnen ======
   ON ERROR GOTO err0706991tk
    IF gdvAuswDat$ = "" THEN 
      DIRECTORY _netpath$
    ELSE 
      DIRECTORY gdvDateiDir$
      GOTO weit0706991tk
    END IF 
    REM DIRECTORY "c:\"
    GOTO weit0706991tk
err0706991tk: 
    DIRECTORY "c:\"
    GOTO weit0706991tk
weit0706991tk:  
    ON ERROR GOTO ErrorHandler
    REQUEST "Importdatei îffnen ...","",26,gdvButton%,gdvAuswDat$
    gdvDateiDir$ = DIRECTORY 
    DIRECTORY gdvStartDir$
 
 REM ====== Wenn Abbrechen gewÑhlt wurde ======
 IF gdvButton% = 0 THEN 
     REQUEST "GDV-Import abgebrochen (Es wurden keine Daten geÑndert).","Es wurde kein Dateiname ausgewÑhlt",0
     IF gdvTestLog% = 1 THEN CALL gdvWriteLogOk("Es wurde keine Datei ausgewÑhlt - GDV abgebrochen")
    REM END 
    GOTO endab300899
 END IF 
 
  REM *******************************************************  
  REM *******************************************************
  REM ***** Datei prÅfen ************************************
  REM *******************************************************
  REM *******************************************************
TestGDVDatei:  
  gdvVorsatz% = 0
  gdvNachsatz% = 0
  gdvLinkFail% = 0
  gdvSatzFail% = 0
  REM ab
  ON ERROR GOTO REMGDVTEMP1
  REM IF RECCOUNT ("GDVTEMP") > 0 THEN REMOVE FROM FILE "GDVTEMP"
  CLOSE FILE "GDVTEMP"
  CLOSE FILE "gdvta"
REMGDVTEMP1: 
   ON ERROR GOTO REMGDVTEMP2
   CLOSE FILE "gdvta"
REMGDVTEMP2: 
  CALL DFile(3,"GDVTEMP" + _fpw$)
  ON ERROR GOTO ErrorHandler
  CREATE FILE MEMORY "gdvta" FROM FILE "GDVTEMP"
  CLOSE FILE "GDVTEMP"
  CREATE FILE MEMORY "GDVTEMP" FROM FILE "GDVTa"
  CLOSE FILE "GDVta"
  DIRECTORY _ppath$
  OPEN FORM GPrjForm$ + "GDVIMP" PAGE 3
  SET f = Superbase.Form
  OPEN gdvAuswDat$ FOR INPUT 
 IF gdvTestLog% = 1 THEN CALL gdvWriteLogOk("Datei " + gdvAuswDat$ + " wurde geîffnet")
  iab% = 1
  Gold001% = 0
  WHILE NOT EOF ("*")
   MOUSE OFF 
   INPUT LINE gdvZeileInhalt$
   gdvSatzArt$ = MID$ (gdvZeileInhalt$,1,4)
   SET STATUS STR$ (iab%,"999999999") + " Zeilen aus Importdatei gelesen, um die zu importierenden Gesellschaften zu finden!"
   iab% = iab% + 1
   SELECT CASE gdvSatzArt$
    CASE "0001"
     REM CALL Fehler(gdvZeileInhalt$,gdvSatzArt$)
     GOld001% = Gold001% + 1
     IF GOld001% = 1 THEN 
       gdvVorsatz% = gdvVorsatz% + 1
       BLANK FILE "GDVTEMP"
       zero.gdvtemp = 0
       CODEGDV.gdvtemp = gdvVorsatz%
       VUNR.gdvtemp = VAL ( MID$ (gdvZeileInhalt$,5,5))
       GESGDV.gdvtemp = MID$ (gdvZeileInhalt$,10,30)
       IF gdvTestLog% = 1 THEN 
         CALL gdvWriteLogOk( STR$ (Vorsatz%,"00") + " " + MID$ (gdvZeileInhalt$,5,5) + " " + MID$ (gdvZeileInhalt$,10,30) + " erkannt")
       END IF 
       CALL GDVDatum( MID$ (gdvZeileInhalt$,70,8),"STANDG.gdvtemp")
       
       SELECT FIRST FILE "GDVGES"
       SELECT KEY VUNR.gdvtemp FILE "gdvges" INDEX VUNR.gdvges
       IF FOUND ("gdvges") THEN 
         codevu% = codevu.gdvges
         IF Link.gdvges > 0 THEN 
           SELECT FIRST FILE "geadr"
           SELECT KEY Link.gdvges FILE "geadr" INDEX CodeGE.geadr
           GesProg.gdvtemp = Gesellschaft.geadr
          
           REM 240320001
           gdvAdrVu% = codevu%
           link.gdvtemp = Link.gdvges
 
           IF gdvdatd.geadr > 0 THEN StandP.gdvtemp = GDVDATD.geadr
         ELSE 
           gesProg.gdvtemp = "< nicht verknÅpft >"
           gdvLinkFail% = gdvLinkFail% + 1
         END IF 
         codevu.gdvtemp = codevu%
       ELSE 
         gesProg.gdvtemp = "< nicht verknÅpft >"
         BLANK FILE "gdvges"
           codevu% = SER (codevu.gdvges,1)
           codevu.gdvges = codevu%
           vunr.gdvges = vunr.gdvtemp
           vuname.gdvges = gesgdv.gdvtemp
           link.gdvges = 0
           zero.gdvges = 0
         STORE FILE "gdvges"
         gdvLinkFail% = gdvLinkFail% + 1
         codevu.gdvtemp = codevu%
       END IF 
     ELSE 
       GOld001% = 0
     END IF 
    CASE "9999"
     GOld001% = 0
     IF gdvNachsatz% = gdvVorsatz% - 1 THEN 
      gdvNachsatz% = gdvNachsatz% + 1
      ANZSATZ.gdvtemp = VAL ( MID$ (gdvZeileInhalt$,5,10))
      STORE FILE "gdvtemp"
     END IF 
    END CASE 
  WEND 
 
  CLOSE INPUT 
  MOUSE ON 
  Giab% = iab%
  gdvImpDatDir$ = _netpath$ + "gdv\backup\"
  gdvDatName$ = FN name (gdvAuswDat$)
  GID$ = gdvDatName$
  gdvImpDat$ = gdvImpDatDir$ + gdvDatName$
  COPY gdvAuswDat$ TO gdvImpDat$
  f.ListBox2.Populate()
 
  REM *******************************************************  
  REM *******************************************************
  REM ***** Datei prÅfen - Fehlerauswertung *****************
  REM *******************************************************
  REM *******************************************************
    IF gdvVorsatz% = gdvNachsatz% AND gdvVorsatz% > 0 AND gdvNachsatz% = 0 THEN 
     gdvSatzFail% = 0
   ELSE IF gdvVorsatz% < gdvNachsatz% AND gdvVorsatz% > 0 AND gdvNachsatz% = 0 THEN 
     gdvSatzFail% = 1
   ELSE IF gdvVorsatz% > gdvNachsatz% AND gdvVorsatz% > 0 AND gdvNachsatz% = 0 THEN 
     gdvSatzFail% = 2
   END IF 
    
    IF gdvVorsatz% = 0 AND gdvNachsatz% = 0 THEN 
      gdvOK% = 0
      gdvBeg$ = "Dies ist keine GDV - Importdatei !"
    ELSE IF gdvSatzFail% = 0 AND gdvLinkFail% = 0 THEN 
      gdvOK% = - 1
      gdvBeg$ = "Alle GDV-Richtlinien wurden eingehalten."
    ELSE IF gdvSatzFail% = 1 AND gdvLinkFail% = 0 THEN 
      gdvOK% = 0
      gdvBeg$ = "Es sind mehr NachsÑtze als VorsÑtze in der Datei"
    ELSE IF gdvSatzFail% = 2 AND gdvLinkFail% = 0 THEN 
      gdvOK% = 0
      gdvBeg$ = "Es sind mehr VorsÑtze als NachsÑtze in der Datei"
    ELSE IF gdvSatzFail% = 0 AND gdvLinkFail% > 0 THEN 
      gdvOK% = 0
      gdvBeg$ = "Es sind " + LTRIM$ ( STR$ (gdvLinkFail%,"999")) + " Gesellschaften nicht verknÅpft"
    ELSE IF gdvSatzFail% = 1 AND gdvLinkFail% > 0 THEN 
      gdvOK% = 0
      gdvBeg$ = "Es sind mehr NachsÑtze als VorsÑtze in der Datei und es sind " + LTRIM$ ( STR$ (gdvLinkFail%,"999")) + " Gesellschaften nicht verknÅpft"
    ELSE IF gdvSatzFail% = 2 AND gdvLinkFail% > 0 THEN 
      gdvOK% = 0
      gdvBeg$ = "Es sind mehr VorsÑtze als NachsÑtze in der Datei und es sind " + LTRIM$ ( STR$ (gdvLinkFail%,"999")) + " Gesellschaften nicht verknÅpft"
    END IF 
  
  IF gdvOK% = - 1 THEN 'Wenn alles korrekt ist
    f.gdvAnzeige.ForeColor = 35
    f.gdvBeg.ForeColor = 35
    f.gdvStarten.Enabled = - 1
    gdvAnzeige$ = "GDV - Import kann durchgefÅhrt werden !"
  ELSE IF gdvOK% = 0 THEN 'Wenn ein Fehler aufgetreten ist
    f.gdvAnzeige.ForeColor = 2
    f.gdvBeg.ForeColor = 2
    f.gdvStarten.Enabled = 0
    gdvAnzeige$ = "GDV - Import kann nicht durchgefÅhrt werden !"
  END IF 
  gdvBegrundung$ = gdvText$
  FILE "gdvtemp"
  INDEX gesgdv.gdvtemp
  SELECT FIRST 
endab300899: 
  END SUB 
  
  REM *******************************************************  
  REM *******************************************************
  REM ***** Konvertierung eines Strings in ein Datum ******** 
  REM ***** gdvdatumwert$ - Format : tt.mm.yyyy      ********
  REM ***** gdvfeldname$  - FORMAT : Feld.Datei      ********
  REM *******************************************************
  REM *******************************************************
SUB GDVDatum(gdvdatumwert$,gdvfeldname$)
  gdvJahrOK% = 1
  gdvTag$ = MID$ (gdvdatumwert$,1,2)
  gdvMonat$ = MID$ (gdvdatumwert$,3,2)
  gdvJahr$ = MID$ (gdvdatumwert$,5,4)
  REM 161199
  gdvjab% = VAL (gdvJahr$)
  IF gdvJahr$ = "0000" OR gdvJahr$ = "    " OR gdvjab% < 1 THEN gdvJahrOK% = 0
  IF gdvJahrOK% = 1 THEN 
   gdvTagab% = VAL (gdvTag$)
   IF gdvTag$ = "00" OR gdvTag$ > "31" OR gdvTag$ = "  " OR gdvTagab% < 1 OR gdvTagab% > 31 THEN gdvTag$ = "01"
   gdvMonatab% = VAL (gdvMonat$)
   IF gdvMonat$ = "00" OR gdvMonat$ > "12" OR gdvMonat$ = "  " OR gdvMonatab% < 1 OR gdvMonatab% > 12 THEN gdvMonat$ = "01"
   gdvdatumwert$ = gdvTag$ + gdvMonat$ + gdvJahr$
   IF DateOK%(gdvdatumwert$) THEN 
     gdvfeldname$$ = DAYS (gdvdatumwert$)
   END IF 
  END IF 
 END SUB 
 
  
  REM *******************************************************  
  REM *******************************************************
  REM ***** Handling von LOG-Dateien ************************
  REM *******************************************************
  REM *******************************************************
  
  REM =================================
  REM ====== LOG-Datei erstellen ======
  REM =================================
SUB GDVCreateLog()
  OPEN _netpath$ + "gdv\GDV.LOG" FOR OUTPUT 
  ? "Datei " + UCASE$ (gdvDatPath$) + "GDV.LOG erstellt am " + DATE$ ( TODAY ,"0d.mm.yyyy") + " / " + TIME$ ( NOW ,"hh:mm:ss")
  ? "-------------------------------------------------------------------------"
  ? 
  CLOSE OUTPUT 
 END SUB 
 
  REM =================================
  REM ====== LOG-Datei schlie·en ======
  REM =================================
SUB gdvCloseLog()
  OPEN _netpath$ + "gdv\GDV.LOG" FOR APPEND 
  ? 
  ? "-------------------------------------------------------------------------"
  ? "  " + STR$ (gdvFehler%,"9999") + " Fehler aufgetreten !"
  ? "-------------------------------------------------------------------------"
  ? "Eintragung beendet am " + DATE$ ( TODAY ,"0d.mm.yyyy") + "/" + TIME$ ( NOW ,"hh:mm:ss")
  CLOSE OUTPUT 
  nn$ = LEFT$ (gdvAuswDat$, LEN (gdvAuswDat$) - 3) + "IMP"
  IF EXISTS (nn$) THEN 
    DELETE (nn$)
  END IF 
  COPY _netpath$ + "gdv\GDV.LOG" TO nn$
  CREATE DIALOG "PROT",0,0,244,154,"GDV-IMPORT","MS Sans Serif",8
  ADD DIALOG "PROT",4,0,0,244,130,0,""
  ADD DIALOG "PROT",9,6,9,22,22,2
  ADD DIALOG "PROT",5,35,13,194,10,0,"WÑhrend der zuletzt durchgefÅhrten Aktion wurde eine"
  ADD DIALOG "PROT",5,35,23,194,10,0,"Protokolldatei erstellt, in der eventuelle Fehler und Zusatz-"
  ADD DIALOG "PROT",5,35,33,194,10,0,"information gespeichert wurden."
  ADD DIALOG "PROT",5,35,53,194,10,0,"WÑhlen Sie " + CHR$ (34) + "Ja" + CHR$ (34) + ", wenn Sie das Protokoll einsehen und"
  ADD DIALOG "PROT",5,35,63,194,10,0,"eventuell Drucken wollen."
  ADD DIALOG "PROT",5,35,83,194,10,0,"WÑhlen Sie " + CHR$ (34) + "Nein" + CHR$ (34) + ", wenn Sie das Protokoll nicht"
  ADD DIALOG "PROT",5,35,93,194,10,0,"einsehen mîchten."
  ADD DIALOG "PROT",5,35,113,194,10,0,"Wollen Sie das Protokoll einsehen?"
  ADD DIALOG "PROT",1,118,134,55,15,0,"&Nein",0,0
  ADD DIALOG "PROT",1,62,134,55,15,1,"&Ja",1,1
  DIALOG "PROT",gdvBut%
  REMOVE DIALOG "PROT"
  IF gdvBut% = 1 THEN CALL gdvShowLog()
 END SUB 
 
  REM ===========================================
  REM ====== Fehler in LOG-Datei schreiben ======
  REM ===========================================
SUB gdvWriteLogFail(gdvLogText$)
  OPEN _netpath$ + "gdv\GDV.LOG" FOR APPEND 
  ? FN ansi("**********  FEHLER **********")
  ? TIME$ ( NOW ,"hh:mm:ss") + " " + FN ansi(gdvLogText$)
  ? FN ansi("*****************************")
  CLOSE OUTPUT 
 END SUB 
  
  REM =================================================
  REM ====== OKAY-Eintrag in LOG-Datei schreiben ======
  REM =================================================
SUB gdvWriteLogOk(gdvLogText$)
  OPEN _netpath$ + "gdv\GDV.LOG" FOR APPEND 
  ? TIME$ ( NOW ,"hh:mm:ss") + " " + FN ansi(gdvLogText$)
  CLOSE OUTPUT 
 END SUB 
 
  REM ===============================
  REM ====== LOG-Datei lîschen ======
  REM ===============================
SUB gdvDeleteLog()
  IF EXISTS (_netpath$ + "gdv\GDV.LOG") THEN DELETE _netpath$ + "gdv\GDV.LOG"
 END SUB 
 
  REM ================================
  REM ====== LOG-Datei anzeigen ======
  REM ================================
SUB gdvShowLog()
  SET STATUS "Anzeige des Fehlerprotokolls"
  IF EXISTS (_netpath$ + "gdv\GDV.LOG") THEN 
    REM LOAD TEXT _netpath$ + "gdv\GDV.LOG"
    REM EDIT TEXT 
    atext$ = _netpath$ + "gdv\GDV.LOG"
    a% = CALL ("ShellExecute",0,"open",atext$,"","",1)
  ELSE 
    CALL Fehler("Es konnte kein Fehlerprotokoll gefunden werden!","")
  END IF 
  SET STATUS "Bereit"
 END SUB 
  
  REM ==================================
  REM ====== Textdatei bearbeiten ======
  REM ==================================
SUB gdvEditASCIIFile(asciifile$)
  IF EXISTS (asciifile$) THEN 
    REM LOAD TEXT asciifile$
    REM EDIT TEXT
    a% = CALL ("ShellExecute",0,"open",asciifile$,"","",1)
  ELSE 
    CALL Fehler("Die Datei " + UCASE$ (asciifile$) + " konnte nicht gefunden werden!","")
  END IF 
 END SUB 
   
 REM ====================================
 REM ====== Versicherung verbinden ======
SUB GDVGesVerb()
 IF gdvTestLog% = 1 THEN CALL gdvWriteLogOk("***** Routine : GDVGesVerb()")
  gdvCodeGE% = CODEGE.geadr
  SELECT KEY gdvCodeGE% FILE "GDVGES" INDEX LINK.gdvges
  IF FOUND ("GDVGES") THEN 
    REQUEST "Es existiert schon eine VerknÅpfung.","Soll Sie aufgehoben werden",1,gdvBut%
    IF gdvBut% = 0 THEN GOTO weit0806991tk
    CALL Info( STR$ (link.gdvges,"000000"),"")
    LOCK ALL FILE "gdvges"
    link.gdvges = 0
    STORE FILE "gdvges"
    UNLOCK FILE "gdvges" ALL 
    CALL Info( STR$ (link.gdvges,"000000"),"")
  END IF 
  REQUEST "Bitte Gesellschaft auswÑhlen","",25,gdvButt%,gdvRÅck$,70,VUNR.gdvges,VUNAME.gdvges INDEX link.gdvges
  IF gdvButt% = 0 THEN GOTO weit0806991tk
    REM LOCK FILE "GDVGES"
    SELECT KEY VAL (gdvRÅck$) LOCK FILE "GDVGES" INDEX VUNR.gdvges
    link.gdvges = gdvCODEGE%
    STORE FILE "gdvges"
  UNLOCK CURRENT FILE "gdvges"
 
weit0806991tk:  
 SELECT FORM KEY codege.geadr FILE "gdvges" INDEX link.gdvges
  FORM 
 
 END SUB 
 
 REM ====================================
 REM ====== Versicherung verbinden 2======
SUB GDVGesVerb2()
 IF gdvTestLog% = 1 THEN CALL gdvWriteLogOk("***** Routine : GDVGesVerb2()")
  gdvCodeGE% = CODEGE.geadr
  FILE "gdvges"
  SELECT WHERE Link.gdvges = gdvCodeGE%
  f.ListBox1.Populate()
 
  
 END SUB 
 
SUB GDVListAusw()
 IF gdvTestLog% = 1 THEN CALL gdvWriteLogOk("***** Routine : GDVListAusw()")
 gdvTestIndex$ = f.ListBox1.List(1)
 REM gdvTestIndex1% = VAL (gdvTestIndex$)
 REQUEST Me.List(1)
 REM SELECT KEY gdvTestIndex1% FILE "geadr" INDEX CodeGe.geadr
 END SUB 
 
SUB GDVGesZu()
 REM ab
 IF gdvTestLog% = 1 THEN CALL gdvWriteLogOk("***** Routine : GDVGesZu()")
 REM SELECT FORM KEY codege.geadr FILE "gdvges" INDEX link.gdvges
  REM FORM 2
  REM gdvTemp2$ = STR$ (CodeGE.GEADR,"000000")
  REM gdvFilt$ = "Link.gdvges = " + gdvTemp2$
  REM f.ListBox1.Filter = gdvFilt$
  REM f.ListBox1.Populate()
  SELECT FORM FIRST FILE "GDVTEMP" INDEX GESGDV.GDVTEMP
  FORM 
  FORM 2
  END SUB 
 
SUB GDVVor()
 IF gdvTestLog% = 1 THEN CALL gdvWriteLogOk("***** Routine : GDVVor()")
  SELECT NEXT FILE "geadr"
  gdvTemp2$ = STR$ (CodeGE.GEADR,"000000")
  gdvFilt$ = "Link.gdvges = " + gdvTemp2$
  f.ListBox1.Filter = gdvFilt$
  f.ListBox1.Populate()
 END SUB 
 
SUB GDVBack()
 IF gdvTestLog% = 1 THEN CALL gdvWriteLogOk("***** Routine : GDVBack()")
  SELECT PREVIOUS FILE "geadr"
  gdvTemp2$ = STR$ (CodeGE.GEADR,"000000")
  gdvFilt$ = "Link.gdvges = " + gdvTemp2$
  f.ListBox1.Filter = gdvFilt$
  f.ListBox1.Populate()
 END SUB 
 REM ====== Ende ======
 REM ================== 
 
SUB GesZuordAB()
 codegdv% = codegdv.gdvtemp
 codevu% = codevu.gdvtemp
 ge% = GetCodeGE%(ge%)
 IF ge% <> 0 THEN 
   SELECT KEY codegdv% LOCK FILE "gdvtemp" INDEX codegdv.gdvtemp
   SELECT KEY ge% FILE "geadr" INDEX codege.geadr
   link.gdvtemp = ge%
   gesprog.gdvtemp = gesellschaft.geadr
   STORE FILE "gdvtemp"
   SELECT KEY codevu% LOCK FILE "gdvges" INDEX codevu.gdvges
   link.gdvges = ge%
   gesprog.gdvges = gesellschaft.geadr
   STORE FILE "gdvges"
   REM SELECT FORM FIRST FILE "gdvtemp" INDEX gesgdv.gdvtemp
   FORM 
 END IF 
 END SUB 
 
 REM *******************************************************
 REM *******************************************************
 REM ***** Erkennung der verschiedenen DatensÑtze ********** 
 REM *******************************************************  
 REM *******************************************************
SUB GDVErkennung()
    DIM dlg AS Dialog
    DIM control AS DialogControl 
 IF gdvTestLog% = 1 THEN CALL gdvWriteLogOk("***** Routine : GDVErkennung()")
 
 MOUSE ON 
 
 REM Abfrage ob Datenstrukturen geleert werden sollen
 REQUEST "Datenstrukturen","Sollen die Strukturen geleert werden?",130,gdvAnt%
 REM gdvAnt% = 1
    GStornoInsert% = VAL (ReadConfig$("GDVIMPORT","StornoInsert"))
    ADRChange% = VAL (ReadConfig$("GDVIMPORT","ADRChange"))
    VertHistory% = VAL (ReadConfig$("GDVIMPORT","VertHistory"))
    GADRVorn$ = ReadConfig$("GDVIMPORT","ADRVorn")
    GADRNachn$ = ReadConfig$("GDVIMPORT","ADRNachn")
    GADRGeb$ = ReadConfig$("GDVIMPORT","ADRGeb")
    GADRPlz$ = ReadConfig$("GDVIMPORT","ADRPLZ")
    GADROrt$ = ReadConfig$("GDVIMPORT","ADROrt")
    GADRStra$ = ReadConfig$("GDVIMPORT","ADRStra")
    GADRAnsi$ = ReadConfig$("GDVIMPORT","GDVADRANSI")
    GAntDatOv$ = ReadConfig$("GDVIMPORT","GAntDatOv")
    GAblDatOv$ = ReadConfig$("GDVIMPORT","GAblDatOv")
    REM CALL WriteConfig("GDVIMPORT","letzt5AGStell", STR$ (GEurofin%,"0"))
    GEurofin$ = ReadConfig$("GDVIMPORT","letzt5AGStell")
    IF GADRAnsi$ <> "ON" THEN GADRAnsi$ = "OFF"
 
    GVSNRVergl% = VAL (ReadConfig$("GDVIMPORT","VSNRVergl"))
    GVSNRVergl% = 1
    IF GADRVorn$ = "n" AND GADRNachn$ = "n" AND GADRGeb$ = "n" AND GADRPlz$ = "n" AND GADROrt$ = "n" AND GADRStra$ = "n" AND GADRGeb$ = "n" THEN 
      GADRVorn$ = "j"
      GADRNachn$ = "j"
      GADRGeb$ = "j"
    END IF 
    Superbase.Dialogs.Add("Dialogname")
    SET dlg = Superbase.Dialogs.Dialogname
    dlg.Move(0,0,396,292)
    dlg.Caption = "Generelle GDV - Import - Optionen"
    dlg.FontName = "MS Sans Serif"
    dlg.FontSize = 8
 
    SET control = dlg.Add("DialogFrame1","DialogFrame")
    control.Move(1,3,395,54)
    control.Caption = "Optionen zum GDV - Import"
 
    SET control = dlg.Add("DialogCheckBox1","DialogCheckBox")
    control.Move(5,16,304,9)
    control.Caption = "Import noch nicht vorhandener als storniert gekennzeichnete VertrÑge"
    control.Bind("GStornoInsert%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    SET control = dlg.Add("DialogCheckBox2","DialogCheckBox")
    control.Move(5,28,384,10)
    control.Caption = "vorhandene Adressen durch die Adressangaben der Gesellschaft Ñndern (Telefonnummern werden nicht geÑndert)"
    control.Bind("ADRChange%")
    control.ValueOn = 1
    control.ValueOff = 0
 
    REM SET control = dlg.Add("DialogCheckBox3","DialogCheckBox")
    REM control.Move(5,41,304,10)
    REM control.Caption = "vorhandene VertrÑge in einer History - Datenbank speichern (Import dauert lÑnger!)"
    REM control.Bind("VertHistory%")
    REM control.ValueOn = 1
    REM control.ValueOff = 0
 
    SET control = dlg.Add("DialogFrame2","DialogFrame")
    control.Move(1,64,395,65)
    control.Caption = "Festlegen, welche Angaben fÅr den Adressvergleich herangezogen werden sollen "
 
    SET control = dlg.Add("DialogCheckBox4","DialogCheckBox")
    control.Move(5,78,48,10)
    control.Caption = "Vorname"
    control.Bind("GADRVorn$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox7","DialogCheckBox")
    control.Move(56,78,48,10)
    control.Caption = "Nachname"
    control.Bind("GADRNachn$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox8","DialogCheckBox")
    control.Move(132,78,161,10)
    control.Caption = "Ansi ON/OFF fÅr GDV-Import"
    control.Bind("GADRAnsi$")
    control.ValueOn = "ON"
    control.ValueOff = "OFF"
 
    SET control = dlg.Add("DialogLabel4","DialogLabel")
    control.Move(132,88,256,25)
    control.Caption = "falls Sie nach dem Import feststellen, da· bei den Adressen die Umlaute nicht korrekt Åbernommen wurden, diese Checkbox ankreuzen oder, wenn das Kreuz gesetzt war, das Kreuz entfernen, den Import wiederholen"
 
    SET control = dlg.Add("DialogCheckBox5","DialogCheckBox")
    control.Move(5,91,53,9)
    control.Caption = "Geburtstag"
    control.Bind("GADRGeb$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox6","DialogCheckBox")
    control.Move(5,104,33,9)
    control.Caption = "PLZ"
    control.Bind("GADRPlz$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox9","DialogCheckBox")
    control.Move(56,104,33,9)
    control.Caption = "Ort"
    control.Bind("GADROrt$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogLabel5","DialogLabel")
    control.Move(132,113,254,13)
    control.Caption = "dazu dann die Checkbox <vorhandene Adresse durch...> ankreuzen"
 
    SET control = dlg.Add("DialogCheckBox10","DialogCheckBox")
    control.Move(5,116,47,10)
    control.Caption = "Strasse"
    control.Bind("GADRStra$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogFrame3","DialogFrame")
    control.Move(1,134,395,51)
    control.Caption = "Informationen zur Art des Policenummernvergleiches"
 
    SET control = dlg.Add("DialogLabel2","DialogLabel")
    control.Move(5,150,384,11)
    control.Caption = "INFORMATION: es werden zum Vergleich die fÅhrenden Buchstaben und Vornullen abgeschnitten "
 
    SET control = dlg.Add("DialogLabel3","DialogLabel")
    control.Move(5,161,384,11)
    control.Caption = "und nur die danach folgenden Buchstaben und Ziffern verglichen "
 
    SET control = dlg.Add("DialogLabel1","DialogLabel")
    control.Move(5,171,375,13)
    control.Caption = "(Sonderzeichen wie z.B. /-\ . + * und Leerzeichen werden generell nicht berÅcksichtigt)"
 
 
 
    SET control = dlg.Add("DialogCheckBox11","DialogCheckBox")
    control.Move(5,193,253,10)
    control.Caption = "Vertrags-Antragsdatum nicht durch GDV-Antragsdatum Åberschreiben"
    control.Bind("GAntDatOv$")
    control.ValueOn = "j"
    control.ValueOff = "n"
 
    SET control = dlg.Add("DialogCheckBox12","DialogCheckBox")
    control.Move(5,203,253,10)
    control.Caption = "Vertrags-Ablaufdatum nicht durch GDV-Ablaufdatum Åberschreiben"
    control.Bind("GAblDatOv$")
    control.ValueOn = "j"
    control.ValueOff = "n"
  


    SET control = dlg.Add("DialogCheckBox13","DialogCheckBox")
    control.Move(5,213,253,10)
    control.Caption = "nur die letzten 5 Stellen der Agenturnummer zur Suche benutzen"
    control.Bind("Geurofin$")
    control.ValueOn = "TRUE"
    control.ValueOff = "FALSE"


 
    SET control = dlg.Add("DialogCheckBox14","DialogCheckBox")
    control.Move(5,226,253,10)
    control.Caption = "BÅndelungsvertrag nur als 1 Vertrag importieren"
    control.Bind("GBuendel$")
    control.ValueOn = "TRUE"
    control.ValueOff = "FALSE"


    SET control = dlg.Add("DialogCheckBox15","DialogCheckBox")
    control.Move(5,239,253,10)
    control.Caption = "Bewertungssummen neu berechnen"
    control.Bind("GBewertberech$")
    control.ValueOn = "TRUE"
    control.ValueOff = "FALSE"
 
    SET control = dlg.Add("DialogLabel9","DialogLabel")
    control.Move(5,253,356,25)
    control.Caption = "(in Sparten mu· bei BÅndelungsvertrag GDV-Sparte=0 sein und Checkbox ~Sparte ist Standard~ angekreuzt sein)"



 
    SET control = dlg.Add("DialogCommandButton1","DialogCommandButton")
    control.Move(137,273,51,15)
    control.Default = 1
    control.Caption = "OK"
    control.ReturnValue = 1
 
    SET control = dlg.Add("DialogCommandButton2","DialogCommandButton")
    control.Move(190,273,51,15)
    control.Caption = "Abbruch"
    control.ReturnValue = 0
 
    DIALOG "Dialogname",req%
    REMOVE DIALOG ALL 
    IF req% < 1 THEN END SUB 
    CALL WriteConfig("GDVIMPORT","letzt5AGStell",GEurofin$)
    CALL WriteConfig("GDVIMPORT","StornoInsert", STR$ (GStornoInsert%,"0"))
    CALL WriteConfig("GDVIMPORT","ADRChange", STR$ (ADRChange%,"0"))
    CALL WriteConfig("GDVIMPORT","VertHistory", STR$ (VertHistory%,"0"))
    CALL WriteConfig("GDVIMPORT","ADRVorn",GADRVorn$)
    CALL WriteConfig("GDVIMPORT","ADRNachn",GADRNachn$)
    CALL WriteConfig("GDVIMPORT","ADRGeb",GADRGeb$)
    CALL WriteConfig("GDVIMPORT","ADRPLZ",GADRPLZ$)
    CALL WriteConfig("GDVIMPORT","ADROrt",GADROrt$)
    CALL WriteConfig("GDVIMPORT","ADRStra",GADRStra$)
    REM GADRAnsi$ = ReadConfig$("GDVIMPORT","GDVADRANSI")
    CALL WriteConfig("GDVIMPORT","GDVADRANSI",GADRAnsi$)
    CALL WriteConfig("GDVIMPORT","GAntDatOv",GAntDatOv$)
    CALL WriteConfig("GDVIMPORT","GAblDatOv",GAblDatOv$)
    CALL WriteConfig("GDVIMPORT","VSNRVergl", STR$ (GVSNRVergl%,"0"))
 
 
 
 
 REM REQUEST "Sollen durch den Import noch nicht vorhandene,","als storniert gekennzeichnete VertrÑge importiert werden?",135,StornoInsert%
 REM REQUEST "Sollen vorhandene Adressen durch die","Adressangaben der Gesellschaft geÑndert werden?",135,ADRChange%
 REM REQUEST "Sollen zum Adressvergleich nur Vorname und Nachname,","verglichen werden?",130,ADRnurName%
 REM REQUEST "FÅr spÑter: Sollen vorhandene VertrÑge in einer","History - Datenbank gespeichert werden? Import dauert lÑnger!",135,VertHistory%
  IF gdvAnt% = 1 THEN gdvleeren% = 1
  IF gdvAnt% = 0 THEN gdvleeren% = 0
 REQUEST "Soll der GDV-Import begonnen werden?","Haben alle anderen Nutzer die Anwendung beendet?",130,req%
 IF req% <> 1 THEN END SUB 
 REQUEST "Wollen Sie wirklich den Import starten?","(Letzte Mîglichkeit den GDV Import abzubrechen!)",130,req%
 IF req% <> 1 THEN END SUB 
 MOUSE OFF 
 GgdvEnde% = - 1
 ccfile$ = FILE 
 FILE "GDVTEMP"
 SELECT FIRST 
 datumgdv$ = ""
 Notiz$ = ""
 Anzahl% = 0
 DatumGDV% = standg.gdvtemp
 WHILE NOT EOF ("GDVTEMP")
  REM Notiz$ = Notiz$ + gesgdv.gdvtemp + "->" + gesprog.gdvtemp + "=Anzahl:" + LTRIM$ ( STR$ (Anzsatz.gdvtemp,"999999999")) + CHR$ (13) + CHR$ (10)
  Anzahl% = Anzahl% + Anzsatz.gdvtemp
  SELECT NEXT 
 WEND 
 Notiz$ = gesgdv.gdvtemp + "->" + gesprog.gdvtemp + "=Anzahl:" + LTRIM$ ( STR$ (Anzsatz.gdvtemp,"999999999")) + CHR$ (13) + CHR$ (10)
 FILE "GDVHEAD"
 BLANK 
 codeimpgdv% = SER ("gdvhead",1)
 codeimpgdv.gdvhead = codeimpgdv%
 DatumGDV.gdvhead = DatumGDV%
 Notiz.gdvhead = Notiz$
 AnzahlDS.gdvhead = Anzahl%
 DatumImport.gdvhead = TODAY 
 STORE FILE "GDVHEAD"
 FILE ccfile$
 REM Aufruf der Prozedur um Dateien zu îffnen und zu leeren
 CALL GDVLeer(gdvleeren%)
 REM CALL Fehler("","")
 IF gdvleeren% = 0 THEN GOTO abGDVSpFrei310899
 
 REM **********************************
 REM mal Åberspringen des einlesen der zeilen
 REM **********************************
 
 REM GOTO abGDVSpFrei310899
 
 
 
 
 REM ôffnen der lokalen Import-Datei
 gdvpath$ = _netpath$ + "GDV\gdv_dat\"
 DIRECTORY gdvpath$
 OPEN gdvImpDat$ FOR INPUT 
 
  
 
 REM Lesen der einzelnen Zeilen bis zum Ende der Datei
 GOld001% = 0
 gdvzeile% = 0
 xyz% = 0
 a1% = 0:a2% = 0:a3% = 0:a4% = 0:a6% = 0:a7% = 0
 gdvcodekuold% = 0
 WHILE NOT EOF ("*")
   MOUSE OFF 
   INPUT LINE gdvinhalt$
   IF gdvinhalt$ LIKE "*9580274405007*" THEN 
     REM CALL Fehler("9580274405007 gefunden","")
   END IF 
   IF xyz% = 0 THEN 
     aa$ = gdvinhalt$
     a1% = INSTR (aa$, CHR$ (228)):REM  · chr$(238)
     a2% = INSTR (aa$, CHR$ (223))
     a3% = INSTR (aa$, CHR$ (252))
     a4% = INSTR (aa$, CHR$ (246))
     REM a5% = INSTR (gdvinhalt$,"-")
     a6% = INSTR (aa$, CHR$ (220))
     a7% = INSTR (aa$, CHR$ (214))
     IF a1% > 0 OR a2% > 0 OR a3% > 0 OR a4% > 0 OR a6% > 0 OR a7% > 0 THEN 
       xyz% = 1
       REM CALL Fehler( STR$ (xyz%),"")
     END IF 
   END IF 
 
   abtest$ = ""
   IF xyz% > 0 THEN 
     abtest$ = FN ibm(gdvinhalt$)
     gdvinhalt$ = abtest$
   ELSE 
     IF UCASE$ (GADRAnsi$) = "ON" THEN 
       abtest$ = FN ansi(gdvinhalt$)
     ELSE 
       abtest$ = gdvinhalt$
     END IF 
     gdvinhalt$ = abtest$
   END IF 
 
   gdvzeile% = gdvzeile% + 1
   SET STATUS STR$ (gdvzeile%,",99999999") + " Zeilen eingelesen von " + STR$ (Giab%,",99999999")
 
 REM Satzart - ermittelt die Satzart aus der Zeile
   gdvsatzart$ = MID$ (gdvinhalt$,1,4)
   adrkennz$ = MID$ (gdvinhalt$,237,2)
   adrkennz% = VAL (adrkennz$)
   IF gdvinhalt$ LIKE "*30404951076*" THEN 
     REM CALL Fehler("30404951076 gefunden***",adrkennz$ + "***" + LEFT$ (gdvinhalt$,100))
   END IF 
   IF adrkennz% > 2 THEN 
     REM weder VN noch Beitragszahler, da mu· noch ein anderer 100er Datensatz kommen
     REM GOTO wend020920061
   END IF 

 REM Satznummern - ermittelt die Satznummer aus der Zeile
 REM Position 43 
   gdvsatznr43$ = MID$ (gdvinhalt$,43,1)
 REM Position 47
   gdvsatznr47$ = MID$ (gdvinhalt$,47,1)
 REM Position 48
   gdvsatznr48$ = MID$ (gdvinhalt$,48,1)
 REM Position 49 
   gdvsatznr49$ = MID$ (gdvinhalt$,49,1)
 REM Position 50 
   gdvsatznr50$ = MID$ (gdvinhalt$,50,1)
 REM Position 51
   gdvsatznr51$ = MID$ (gdvinhalt$,51,1)
 REM Position 53 
   gdvsatznr53$ = MID$ (gdvinhalt$,53,1)
 REM Position 60
   gdvsatznr60$ = MID$ (gdvinhalt$,60,1)
 REM Position 256
   gdvsatznr256$ = MID$ (gdvinhalt$,256,1)
 
 REM Sparte - ermittelt die Sparte aus der Zeile
   gdvsparte$ = MID$ (gdvinhalt$,11,3)
   IF VAL (gdvsparte$) >= 30 AND VAL (gdvsparte$) <= 39 THEN gdvsparte$ = "030"
   IF VAL (gdvsparte$) >= 40 AND VAL (gdvsparte$) <= 49 THEN 
     gdvsparte$ = "040"
   END IF 
 iiibbb$ = "gdvsatzart$: " + gdvsatzart$
 REM IF gdvinhalt$ LIKE "*RE-V 4520*" THEN CALL Fehler("Sparte " + gdvsparte$ + "  " + iiibbb$ + " LÑnge:" + STR$ (a%,"999"),iiiaaa$ + "   " + gdvinhalt$)
 
 REM Wagnisart - ermittelt die Wagnisart aus der Zeile
   gdvwagnis$ = MID$ (gdvinhalt$,60,1)
 
 
 REM *******************************************************************************************************
 REM Versicherungsscheinnummer - ermittelt die VSNR aus der Zeile
 
   gdvvsnr$ = MID$ (gdvinhalt$,14,17)
 
 REM ******************************************************************************************************* 
 iiiaaa$ = "gdvsatznr256$: " + gdvsatznr256$
 IF gdvsatznr256$ = " " THEN iiiaaa$ = "gdvsatznr256$: leer"
 iiibbb$ = "gdvsatzart$: " + gdvsatzart$
 REM CALL Fehler(iiibbb$ + " LÑnge:" + STR$ (a%,"999"),iiiaaa$ + "   " + gdvinhalt$)
 REM CALL Fehler(gdvsatzart$,"")
 REM 04.10.2005
 SELECT CASE gdvsatzart$
  
   CASE "0001"
       IF gdvsatznr256$ = " " THEN 
         iiiaaa$ = "gdvsatznr256$: 1*leer"
       ELSE 
         IF gdvsatznr256$ = "" THEN 
           iiiaaa$ = "gdvsatznr256$: 0*leer"
         ELSE 
           iiiaaa$ = gdvsatznr256$
         END IF 
       END IF 
       REM CALL Fehler(iiiaaa$,"")
       REM ***** Allgemeine Daten - Vorsatz*****
       SELECT CASE gdvsatznr256$
         CASE "1"," ",""
           CALL GDVKonvert(gdvinhalt$,"vog00111")
           gdvtext$ = "Vorsatz 1/2 : " + MID$ (gdvinhalt$,5,5) + " - " + MID$ (gdvinhalt$,10,30)
         CASE "2"
           CALL GDVKonvert(gdvinhalt$,"vog00112")
       END SELECT 
 
   CASE "0100"
   REM ***** Allgemeine Daten - Adressteil ***** 
     gdvsatznr256% = VAL (gdvsatznr256$)
     SELECT CASE gdvsatznr256%
       CASE 0,1
         REM ankey% = VAL (adrknz.adg10011)
         REM IF ankey% <= 1 THEN 
         gdvCodeKu% = SER ("adg10011",1)
         CALL GDVKonvert(gdvinhalt$,"adg10011")
         gdvtext$ = "Adresse : " + MID$ (gdvinhalt$,44,30) + " , " + MID$ (gdvinhalt$,104,30)
         ankey% = VAL (adrknz.adg10011)
         IF ankey% <= 1 THEN gdvcodekuold% = gdvCodeKu%
       CASE 2
         CALL GDVKonvert(gdvinhalt$,"adg10012")
     END SELECT 
 
   CASE "0200"
   REM ***** Allgemeine Daten - Allgemeiner Vertragsteil *****
     REM 08022003 nachtrÑglich organisieren, da· die Sparte in adg10011 eingetragen wird, wenn sie bei Satzart 100 =0 war
     IF gdvcodekuold% > 0 THEN gdvCodeKu% = gdvcodekuold%
     gdvcodekuold% = 0
     SELECT FIRST FILE "adg10011" INDEX gdvku.adg10011
     SELECT KEY gdvCodeKU% LOCK FILE "adg10011" INDEX gdvku.adg10011
     CALL GDVKonvert(gdvinhalt$,"alg20011")
     REM IF sp.adg10011 < 1 THEN 
       REM sp.adg10011 = sp.alg20011
       REM STORE FILE "adg10011"
     REM END IF 
     gdvtext$ = "Allgemeine Daten"
 
   CASE "0210"
   REM ***** Vertragsspezifischer Teil *****
     REM 08022003 nachtrÑglich organisieren, da· die Sparte in adg10011 eingetragen wird, wenn sie bei Satzart 100 =0 war
     SELECT FIRST FILE "adg10011" INDEX gdvku.adg10011
     SELECT KEY gdvCodeKU% LOCK FILE "adg10011" INDEX gdvku.adg10011
     REM IF sp.adg10011 < 1 THEN 
       REM sp.adg10011 = VAL (gdvsparte$)
       REM STORE FILE "adg10011"
     REM END IF 
     SELECT CASE gdvsparte$
       CASE "050"
         REM CALL Fehler("KFZ1","12102005")
         gdvsatznr256% = VAL (gdvsatznr256$)
         REM 06102005* Kraftfahrzeug *
         IF gdvsatznr256% = 1 OR gdvsatznr256% = 0 THEN 
           REM CALL Fehler("KFZ",gdvinhalt$)
           CALL GDVKonvert(gdvinhalt$,"krg21011")
           gdvtext$ = "Kraftfahrzeug : " + MID$ (gdvinhalt$,114,12) + " - " + MID$ (gdvinhalt$,97,17)
         END IF 
         IF gdvsatznr256% = 2 THEN 
           REM CALL Fehler("KFZ2",gdvinhalt$)
           CALL GDVKonvert(gdvinhalt$,"krg21012")
           gdvtext$ = "Kraftfahrzeug : " + MID$ (gdvinhalt$,114,12) + " - " + MID$ (gdvinhalt$,97,17)
         END IF 
       CASE "040","041","042","043","044","045","046","047","048","049"
       REM * Haftpflicht *
         CALL GDVKonvert(gdvinhalt$,"hag21011")
         gdvtext$ = "Haftpflicht"
       CASE "030","031","032","033","034","035","036","037","038","039"
       REM * Unfall *
         CALL GDVKonvert(gdvinhalt$,"ung21011")
         gdvtext$ = "Unfall"
       CASE "010"
       REM * Leben *
         gdvsatznr256% = VAL (gdvsatznr256$)
         SELECT CASE gdvsatznr256%
           CASE 0,1
             CALL GDVKonvert(gdvinhalt$,"leg21011")
             gdvtext$ = "Leben"
           CASE 2
             CALL GDVKonvert(gdvinhalt$,"leg21012")
           END SELECT 
      CASE "130"
      REM * Verbundene Hausrat *
        CALL GDVKonvert(gdvinhalt$,"vhg21011")
        gdvtext$ = "Verbundene Hausrat"
      CASE "110"
      REM * Glas *
        CALL GDVKonvert(gdvinhalt$,"glg21011")
        gdvtext$ = "Glas"
      CASE "140"
      REM * Verbundene GebÑude *
        CALL GDVKonvert(gdvinhalt$,"vgg21011")
        gdvtext$ = "Verbundene GebÑude"
      CASE "020"
      REM * Kranken *
        CALL GDVKonvert(gdvinhalt$,"kkg21011")
        gdvtext$ = "Kranken"
      CASE "070"
      REM * Rechtsschutz *
        CALL GDVKonvert(gdvinhalt$,"reg21011")
        gdvtext$ = "Rechtsschutz"
      CASE "080","081","082","083","231","089","090","099","100","109","120","150","180","181","210"
      REM * Feuer-Industrie / Gewerbl. Sach *  
        CALL GDVKonvert(gdvinhalt$,"fug21011")
        gdvtext$ = "Feuer-Industrie / Gewerbl. Sach"
      CASE "510"
      REM * Verkehrsservice *
        CALL GDVKonvert(gdvinhalt$,"vsg21011")
        gdvtext$ = "Verkehrsservice"
      CASE "171","172","174","175","176","179","232","290"
      REM * Technische *
        CALL GDVKonvert(gdvinhalt$,"teg21011")
        gdvtext$ = "Technische"
      CASE "190"
      REM * Transport *
        CALL GDVKonvert(gdvinhalt$,"trg21011")
        gdvtext$ = "Transport"
      CASE "060","160","290","233","293","294","299"
      REM * Nicht definierte Sparten *
        SELECT CASE gdvsatznr43$
           CASE "1"," "
             CALL GDVKonvert(gdvinhalt$,"udg21011")
             gdvtext$ = "Nicht einzeln definierte Sparten"
           CASE "2"
             CALL GDVKonvert(gdvinhalt$,"udg21012")
        END SELECT 
      END SELECT 
   CASE "0211"
     SELECT CASE gdvsparte$
       CASE "050"
         gdvtext$ = "KFZ-Fahrzeugdaten"
     END SELECT 
   CASE "0220"
     SELECT CASE gdvsparte$
       CASE "051"
         CALL GDVKonvert(gdvinhalt$,"krg22011")
         gdvtext$ = "KFZ-Haftpflicht"
       CASE "052"
         CALL GDVKonvert(gdvinhalt$,"krg22021")
         gdvtext$ = "KFZ-Vollkasko"
       CASE "053"
         CALL GDVKonvert(gdvinhalt$,"krg22031")
         gdvtext$ = "KFZ-Teilkasko"
       CASE "054"
         CALL GDVKonvert(gdvinhalt$,"krg22041")
         gdvtext$ = "KFZ-Unfall"
       CASE "059"
         CALL GDVKonvert(gdvinhalt$,"krg22051")
         gdvtext$ = "KFZ-GepÑck"
       CASE "055"
         gdvsatznr256% = VAL (gdvsatznr256$)
         SELECT CASE gdvsatznr256%
           CASE 0,1
             CALL GDVKonvert(gdvinhalt$,"krg22061")
             gdvtext$ = "KFZ-Baustein
           CASE 2
             CALL GDVKonvert(gdvinhalt$,"krg22062")
           END SELECT 
       CASE "040","042"
         gdvsatznr51% = VAL (gdvsatznr51$)
         SELECT CASE gdvsatznr51%
           CASE 0,1
             CALL GDVKonvert(gdvinhalt$,"hag22011")
             gdvtext$ = "Wagnisdaten"
           CASE 2
             CALL GDVKonvert(gdvinhalt$,"hag22012")
           END SELECT 
       CASE "030","031","032","033","034","035","036","037","038","039"
         IF gdvsatznr60$ = "9" THEN 
           CALL GDVKonvert(gdvinhalt$,"ung22019")
           gdvtext$ = "Bezugsrecht 
         ELSE 
           IF gdvsatznr43$ = "3" THEN 
             CALL GDVKonvert(gdvinhalt$,"ung22013")
           ELSE IF gdvsatznr43$ = "4" THEN 
             CALL GDVKonvert(gdvinhalt$,"ung22014")
           ELSE 
             IF gdvsatznr49$ = "1" OR gdvsatznr49$ = " " THEN 
               REM CALL Fehler("Wagnisdaten","")
               CALL GDVKonvert(gdvinhalt$,"ung22011")
               gdvtext$ = "Wagnisdaten"
             ELSE IF gdvsatznr49$ = "2" THEN 
               CALL GDVKonvert(gdvinhalt$,"ung22012")
               gdvtext$ = "Wagniszusatz"
             END IF 
           END IF 
         END IF 
       
       CASE "010"
         REM CALL Fehler("0220-010",gdvinhalt$)
         SELECT CASE gdvwagnis$
           CASE "0"
             CALL GDVKonvert(gdvinhalt$,"leg22011")
             gdvtext$ = "Angaben zur versicherten Person"
           CASE "1","3"
             gdvsatznr256% = VAL (gdvsatznr256$)
             SELECT CASE gdvsatznr256%
               CASE 0
                 CALL GDVKonvert(gdvinhalt$,"leg22021")
                 gdvtext$ = "Kapitallebens-/Risikoversicherung"
               CASE 1
                 CALL GDVKonvert(gdvinhalt$,"leg22021")
                 gdvtext$ = "Kapitallebens-/Risikoversicherung"
               CASE 2
                 CALL GDVKonvert(gdvinhalt$,"leg22022")
               CASE 6
                 CALL GDVKonvert(gdvinhalt$,"leg22026")
               CASE 7
                 CALL GDVKonvert(gdvinhalt$,"leg22027")
               CASE 8
                 CALL GDVKonvert(gdvinhalt$,"leg22028")
               CASE 9
                 CALL GDVKonvert(gdvinhalt$,"leg22029")
             END SELECT 
           CASE "4","8"
             gdvsatznr256% = VAL (gdvsatznr256$)
             SELECT CASE gdvsatznr256%
               CASE 0,1
                 CALL GDVKonvert(gdvinhalt$,"leg22031")
                 gdvtext$ = "BerufsunfÑhigkeit"
               CASE 2
                 CALL GDVKonvert(gdvinhalt$,"leg22032")
               CASE 6
                 CALL GDVKonvert(gdvinhalt$,"leg22036")
               CASE 8
                 CALL GDVKonvert(gdvinhalt$,"leg22038")
               CASE 9
                 CALL GDVKonvert(gdvinhalt$,"leg22039")
             END SELECT 
           CASE "6"
             gdvsatznr256% = VAL (gdvsatznr256$)
             SELECT CASE gdvsatznr256%
               CASE 0,1
                 CALL GDVKonvert(gdvinhalt$,"leg22041")
                 gdvtext$ = "Unfall"
               CASE 2
                 CALL GDVKonvert(gdvinhalt$,"leg22042")
               CASE 6
                 CALL GDVKonvert(gdvinhalt$,"leg22046")
               CASE 8
                 CALL GDVKonvert(gdvinhalt$,"leg22048")
               CASE 9
                 CALL GDVKonvert(gdvinhalt$,"leg22049")
             END SELECT 
           CASE "5"
             gdvsatznr256% = VAL (gdvsatznr256$)
             SELECT CASE gdvsatznr256%
               CASE 0,1
                 CALL GDVKonvert(gdvinhalt$,"leg22051")
                 gdvtext$ = "Risikozusatz"
               CASE 2
                 CALL GDVKonvert(gdvinhalt$,"leg22052")
               CASE 6
                 CALL GDVKonvert(gdvinhalt$,"leg22056")
               CASE 8
                 CALL GDVKonvert(gdvinhalt$,"leg22058")
               CASE 9
                 CALL GDVKonvert(gdvinhalt$,"leg22059")
             END SELECT 
           CASE "2"
             gdvsatznr256% = VAL (gdvsatznr256$)
             SELECT CASE gdvsatznr256%
               CASE 0,1
                 CALL GDVKonvert(gdvinhalt$,"leg22061")
                 gdvtext$ = "Rentenversicherung"
               CASE 2
                 CALL GDVKonvert(gdvinhalt$,"leg22062")
               CASE 3
                 CALL GDVKonvert(gdvinhalt$,"leg22063")
               CASE 6
                 CALL GDVKonvert(gdvinhalt$,"leg22066")
               CASE 7
                 CALL GDVKonvert(gdvinhalt$,"leg22067")
               CASE 8
                 CALL GDVKonvert(gdvinhalt$,"leg22068")
               CASE 9
                 CALL GDVKonvert(gdvinhalt$,"leg22069")
             END SELECT 
           CASE "7"
             gdvsatznr256% = VAL (gdvsatznr256$)
             SELECT CASE gdvsatznr256%
               CASE 0,1
                 CALL GDVKonvert(gdvinhalt$,"leg22071")
                 gdvtext$ = "Kapital-/Fondsgebundene LV"
               CASE 2
                 CALL GDVKonvert(gdvinhalt$,"leg22072")
               CASE 6
                 CALL GDVKonvert(gdvinhalt$,"leg22076")
               CASE 8
                 CALL GDVKonvert(gdvinhalt$,"leg22078")
               CASE 9
                 CALL GDVKonvert(gdvinhalt$,"leg22079")
             END SELECT 
          END SELECT 
       CASE "130"
         CALL GDVKonvert(gdvinhalt$,"vhg22011")
         gdvtext$ = "Vertragsdaten"
       CASE "110"
         CALL GDVKonvert(gdvinhalt$,"glg22011")
         gdvtext$ = "Vertragsdaten"
       CASE "140"
         gdvsatznr51% = VAL (gdvsatznr51$)
         SELECT CASE gdvsatznr51%
           CASE 0,1
             CALL GDVKonvert(gdvinhalt$,"vgg22011")
             gdvtext$ = "Vertragsdaten"
           CASE 2
             CALL GDVKonvert(gdvinhalt$,"vgg22012")
           END SELECT 
       CASE "020"
         gdvsatznr48% = VAL (gdvsatznr48$)
         SELECT CASE gdvsatznr48%
           CASE 0,1
             CALL GDVKonvert(gdvinhalt$,"kkg22011")
             gdvtext$ = "Personendaten"
           CASE 2
             CALL GDVKonvert(gdvinhalt$,"kkg22021")
             gdvtext$ = "Allgemeine Tarifdaten"
           CASE 3
             CALL GDVKonvert(gdvinhalt$,"kkg22031")
             gdvtext$ = "Spezielle Tarifdaten"
         END SELECT 
       CASE "070"
         gdvsatznr53% = VAL (gdvsatznr53$)
         SELECT CASE gdvsatznr53%
           CASE 0,1
             CALL GDVKonvert(gdvinhalt$,"reg22011")
             gdvtext$ = "Vertragsdaten"
           CASE 2
             CALL GDVKonvert(gdvinhalt$,"reg22012")
           END SELECT 
       CASE "080","081","082","083","231","089","090","099","100","109","120","150","180","181","210"
         gdvsatznr49% = VAL (gdvsatznr49$)
         SELECT CASE gdvsatznr49%
           CASE 0,1
             CALL GDVKonvert(gdvinhalt$,"fug22011")
             gdvtext$ = "Vertragsdaten"
           CASE 2
             CALL GDVKonvert(gdvinhalt$,"fug22012")
           END SELECT 
       CASE "510"
         CALL GDVKonvert(gdvinhalt$,"vsg22011")
         gdvtext$ = "Vertragsdaten"
       CASE "171","172","174","175","176","179","232","290"
         gdvsatznr50% = VAL (gdvsatznr50$)
         SELECT CASE gdvsatznr50%
           CASE 0,1
             CALL GDVKonvert(gdvinhalt$,"teg22011")
             gdvtext$ = "Vertragsdaten"
           CASE 2
             CALL GDVKonvert(gdvinhalt$,"teg22012")
           CASE 3
             CALL GDVKonvert(gdvinhalt$,"teg22013")
         END SELECT 
       CASE "190"
         gdvsatznr49% = VAL (gdvsatznr49$)
         SELECT CASE gdvsatznr49%
           CASE 0,1
             CALL GDVKonvert(gdvinhalt$,"trg22011")
             gdvtext$ = "Vertragsdaten"
           CASE 2
             CALL GDVKonvert(gdvinhalt$,"trg22012")
             gdvtext$ = "Vertragsdaten"
         END SELECT 
       CASE "060","160","290","233","293","294","299"
         gdvsatznr47% = VAL (gdvsatznr47$)
         SELECT CASE gdvsatznr47%
           CASE 0,1
             CALL GDVKonvert(gdvinhalt$,"udg22011")
             gdvtext$ = "Vertragsdaten"
           CASE 2
             CALL GDVKonvert(gdvinhalt$,"udg22012")
         END SELECT 
       END SELECT 
  
   CASE "0250"
     gdvsatznr51% = VAL (gdvsatznr51$)
     SELECT CASE gdvsatznr51%
       CASE 0,1
         CALL GDVKonvert(gdvinhalt$,"trg25011")
         gdvtext$ = "Einzelanmeldung Teil 1"
       CASE 2
         CALL GDVKonvert(gdvinhalt$,"trg25012")
         gdvtext$ = "Einzelanmeldung Teil 2"
     END SELECT 
 
   CASE "0260"
     CALL GDVKonvert(gdvinhalt$,"trg26011")
     gdvtext$ = "Umsatzanmeldung"
 
   CASE "0300"
     gdvsatznr256% = VAL (gdvsatznr256$)
     SELECT CASE gdvsatznr256%
       CASE 0,1
         CALL GDVKonvert(gdvinhalt$,"big30011")
         gdvtext$ = "Beteiligungsinformationssatz 1/2"
       CASE 2
         CALL GDVKonvert(gdvinhalt$,"big30012")
         gdvtext$ = "Beteiligungsinformationssatz 2/2"
     END SELECT 
  
   CASE "0350"
     REM CALL Fehler("350-Klauseldatensatz",gdvinhalt$)
     CALL GDVKonvert(gdvinhalt$,"kdg35011")
     gdvtext$ = "Klausel-Datensatz"
 
   CASE "0400"
     gdvsatznr256% = VAL (gdvsatznr256$)
     SELECT CASE gdvsatznr256%
       CASE 0,1
         CALL GDVKonvert(gdvinhalt$,"idg40011")
         gdvtext$ = "Inkasso Gesamt 1/2"
       CASE 2
         CALL GDVKonvert(gdvinhalt$,"idg40012")
         gdvtext$ = "Inkasso Gesamt 2/2"
     END SELECT 
 
   CASE "0410"
     CALL GDVKonvert(gdvinhalt$,"idg41011")
     gdvtext$ = "Inkasso Teilsparte"
 
   CASE "0430"
     CALL GDVKonvert(gdvinhalt$,"kdg43011")
     gdvtext$ = "Inkasso Text"
 
   CASE "9999"
     CALL GDVKonvert(gdvinhalt$,"nsg99911")
     gdvtext$ = "Nachsatz"
 END SELECT 
 
   gdvImmer$ = STR$ (gdvZeile%,"000000") + " - " + gdvsatzart$ + " - " + gdvsparte$ + " - " + gdvvsnr$ + " - "
   IF gdvsatzart$ = "0001" OR gdvsatzart$ = "9999" THEN 
     CALL gdvWriteLogOk(gdvtext$)
   ELSE 
     CALL gdvWriteLogOk(gdvImmer$ + gdvtext$)
   END IF 
wend020920061: 
 WEND 
 
 REM CALL Info("","")
 
 CLOSE INPUT 
 
 REM CALL Info("Daten eingelesen","")
 
abGDVSpFrei310899: 
 REM CALL Info("Daten eingelesen","")
 CALL GDVSpartenFrei()
 
 REM CALL Info("Freigabe der Sparten erstellt","")
 REM CALL Fehler( FILE , INDEX )
 REM **********************************************************************
 REM 20022003   Auslesen der Agenturnummern
 fil$ = FILE 
 i1ind$ = INDEX 
 DIM GSVMVect$( RECCOUNT ("ADG10011"))
 DIM GSVMVect1$( RECCOUNT ("ADG10011"))
 FILE "ADG10011"
 
 ON ERROR GOTO GVM200220031
 CREATE INDEX ON GSVM
GVM200220031: 
 ON ERROR GOTO ErrorHandler
 INDEX GSVM.ADG10011
 SELECT FIRST FILE "ADG10011" INDEX GSVM.ADG10011
 
 gsvmges% = RECCOUNT ("ADG10011")
 gsvmoldnr$ = ""
 gsvmnewnr$ = GSVM.ADG10011
 gsvmzaehl% = 0
 gsvma% = 0
 WHILE NOT EOF ("ADG10011")
   gsvmzaehl% = gsvmzaehl% + 1
   SET STATUS "Suche nach Agenturnummern: " + LTRIM$ ( STR$ (gsvmzaehl%,",999999999")) + " von " + LTRIM$ ( STR$ (gsvmges%,",999999999")) + " durchsucht"
   IF Geurofin$ = "TRUE" THEN 
     gsvmnewnr$ = RIGHT$ (GSVM.ADG10011,5)
   ELSE 
     gsvmnewnr$ = GSVM.ADG10011
   END IF 
   IF gsvmoldnr$ <> gsvmnewnr$ THEN 
     gsvmoldnr$ = gsvmnewnr$
     IF EXISTS (gsvmnewnr$,AGNummer.maadrag) AND LTRIM$ (gsvmnewnr$) <> "" THEN 
       SELECT FIRST FILE "maadrag" INDEX AGNummer.maadrag
       SELECT KEY gsvmnewnr$ LOCK FILE "maadrag" INDEX AGNummer.maadrag
       codema% = codema.maadrag
       SELECT FIRST FILE "MAADR" INDEX codema.maadr
       SELECT KEY codema% FILE "MAADR" INDEX codema.maadr
       IF EXISTS (codema%,codema.maadr) THEN 
         GSVMVect$(gsvma%) = gsvmnewnr$ + " " + Nachname.maadr + "/" + Vorname.maadr + " - zugeordnet" + SPACE$ (100) + STR$ (codema%,"000000")
         GSVMVect1$(gsvma%) = gsvmnewnr$
       ELSE 
         SELECT REMOVE FILE "maadrag"
       END IF 
     ELSE 
       GSVMVect$(gsvma%) = gsvmnewnr$ + SPACE$ (100) + "000000"
 
       GSVMVect1$(gsvma%) = gsvmnewnr$
     END IF 
     gsvma% = gsvma% + 1
   END IF 
   SELECT NEXT FILE "ADG10011" INDEX GSVM.ADG10011
 WEND 
 GSVMVect$(gsvma%) = ""
GVM200220032:  
   CREATE DIALOG "maadrag",0,0,243,179,"GDV Vermittlernr.liste","MS Sans Serif",8
   ADD DIALOG "maadrag",5,5,2,120,20,0,"Liste der in der GDV Datei gefundenen Vermittlernr."
   REM ADD DIALOG "maadrag",5,62,6,174,9,128,Kunde$
   ADD DIALOG "maadrag",5,5,22,65,10,0,"VM-Nummer/Name:"
   ADD DIALOG "maadrag",7,5,32,168,137,2,2,GSVMVect$,Auswahl$,prompt$
   ADD DIALOG "maadrag",1,180,32,55,15,1,"Start Import",1,1
   ADD DIALOG "maadrag",1,180,50,55,15,0,"Zuordnen",3,1
   ADD DIALOG "maadrag",1,180,68,55,15,0,"Abbruch",0,0
   MOUSE ON 
   DIALOG "maadrag",req%
   REMOVE DIALOG "maadrag"
   IF Geurofin$ = ";TRUE" THEN 
     OPEN "e:\eurofin\GDVAG.TXT" FOR OUTPUT 
     FOR i% = 0 TO gsvma% - 1
       ? GSVMVect1$(i%)
     NEXT i%
     CLOSE OUTPUT 
   END IF 
   IF req% = 0 THEN 
     CALL Fehler("Das Programm mu· neu gestartet werden!","")
     CALL EXIT()
   END IF 
   IF req% = 3 THEN 
     agneuzuord$ = Auswahl$(0)
     pos% = 0
     pos% = INSTR (agneuzuord$," ")
     agneunr$ = MID$ (agneuzuord$,1,pos% - 1)
     codema% = VAL ( RIGHT$ (Auswahl$(0),6))
     IF codema% = 0 THEN 
       wks1% = Workstation%
       ma% = GetCodeMA%(ma%,Wks1%)
       Agenturnummer$ = agneunr$
     END IF 
     
     IF codema% = 0 THEN 
       CALL MAGdvAgent(ma%,1,Agenturnummer$)
       GOTO GVM200220031
     ELSE 
       CALL Fehler("Vermittlernummer war bereits zugeordnet!","")
       GOTO GVM200220032
     END IF 
   END IF 
 REM CALL Fehler( FILE , INDEX )
 REM FILE fil$
 REM INDEX i1ind$
 REM CALL Fehler( FILE , INDEX )
 REM SELECT FIRST fil$ INDEX i1ind$$
 REQUEST "GDV-Import jetzt durchfÅhren?","",130,req%
 IF req% <> 1 THEN 
   CALL Fehler("Das Programm mu· neu gestartet werden!","")
   CALL EXIT()
 END IF 
 REM **********************************************************************
 CALL VertTest()
 
 CALL gdvCloseLog()
 
 END SUB 
 
  REM *******************************************************
  REM *******************************************************
  REM ***** Konvertieren und Zuordnen der GDV-Daten zu ******
  REM ***** den verschiedenen Strukturen               ******
  REM *******************************************************
  REM ******************************************************* 
SUB GDVKonvert(gdvinhalt$,gdvtempdat$)
  gdv_a% = 0
  
  IF gdvtempdat$ = "vog00111" THEN 
    gdvNummer$ = MID$ (gdvinhalt$,5,5)
    SELECT KEY VAL (gdvNummer$) FILE "gdvges" INDEX vunr.gdvges
    gdvNummer% = link.gdvges
    REM REQUEST gdvNummer$, STR$ (gdvNummer%,"000000"),1,gdvAnt%
  END IF 
  IF gdvtempdat$ LIKE "kdg43011" THEN 
    GOTO endgdvconvert
  END IF 
  IF NOT OPEN (gdvtempdat$) THEN 
    CALL DFile(8,gdvtempdat$ + _fpw$)
  END IF 
  FILE gdvtempdat$
  BLANK FILE gdvtempdat$
  Dyn1$ = UCASE$ ( MID$ (gdvtempdat$,1,2))
  DynCode$ = Dyn1$ + "0" + MID$ (gdvtempdat$,4, LEN (gdvtempdat$) - 3)
  IF Dyn1$ = "ID" THEN 
    DynCode1$ = Dyn1$ + "040011"
  ELSE 
    DynCode1$ = Dyn1$ + "021011"
  END IF 
 
  IF gdvtempdat$ = "vog00111" OR gdvtempdat$ = "vog00112" OR gdvtempdat$ = "nsg99111" THEN 
     gdvanzfeld% = FILEINFO (gdvtempdat$,1)
  ELSE 
     gdvanzfeld% = FILEINFO (gdvtempdat$,1)
  END IF 
  DIM gdvnamefeld$(gdvanzfeld%)
  FILLARRAY gdvnamefeld$,1
  FOR gdv_a% = 0 TO gdvanzfeld% - 1
   gdvfeldm$ = gdvnamefeld$(gdv_a%) + "." + gdvtempdat$
   REM CALL Fehler(gdvfeldm$,gdvtempdat$)
   gdvfeldtyp$ = FIELDINFO$ (gdvnamefeld$(gdv_a%),0)
   gdvformtyp$ = FIELDINFO$ (gdvnamefeld$(gdv_a%),4)
   REM CALL Info(gdvfeldtyp$,gdvformtyp$)
   REM CALL Fehler(gdvfeldtyp$,gdvformtyp$)
   REM CALL Fehler(gdvfeldm$,gdvinhalt$)
   IF UCASE$ (gdvnamefeld$(gdv_a%)) = "GDVKU" THEN 
    gdvfeldm$$ = gdvCodeKu%
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "GDVMA" THEN 
    gdvfeldm$$ = vcodema%
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "GDVVA" THEN 
    gdvfeldm$$ = gdvCodeVa%
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "GDVGE" THEN 
    gdvfeldm$$ = gdvNummer%
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "CODEKU" THEN 
    gdvfeldm$$ = 0
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "CODEGE" THEN 
    gdvfeldm$$ = gdvNummer%
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "CODEVA" THEN 
    gdvfeldm$$ = 0
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "CODEMA" THEN 
    gdvfeldm$$ = vcodema%
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "LFDNR" THEN 
    gdvfeldm$$ = 0
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "LFDNRTOTAL" THEN 
    gdvfeldm$$ = 0
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "CODE200" THEN 
    gdvfeldm$$ = 0
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = UCASE$ ("CODE" + DynCode1$) THEN 
    gdvfeldm$$ = 0
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = UCASE$ ("CODE" + DynCode$) THEN 
    gdvfeldm$$ = 0
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "TIMESTAMP" THEN 
    gdvfeldm$$ = 0
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "SPERRE" THEN 
    gdvfeldm$$ = 0
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "GDVFAIL" THEN 
    gdvfeldm$$ = 0
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "GDVREAD" THEN 
    REM Nichts Ñndern
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "MANAME" THEN 
     REM Nichts Ñndern
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "MACODEMA" THEN 
     REM Nichts Ñndern
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "WORKSTATION" THEN 
   REM
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "QWONO" THEN 
   REM
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "RECSTATUS" THEN 
   REM 
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "AGSPERRE1" THEN 
   REM 
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "AGSPERRE2" THEN 
   REM  
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "AGSPERREAB" THEN 
   REM  
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "MANAME" THEN 
   REM   
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "MACODEMA" THEN 
   REM   
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "MATIMESTAMP" THEN 
   REM   
   ELSE IF UCASE$ (gdvnamefeld$(gdv_a%)) = "MATIMESTAMP1" THEN 
   REM   
   ELSE 
    gdviniwert$ = ""
    gdvitem$ = LTRIM$ ( STR$ (gdv_a% + 1,"99"))
    gdvrw% = CALL ("GetPrivateProfileString",gdvtempdat$,gdvitem$,"",gdviniwert$,250,gdvpath$ + "gdvneu.ini")
    gdvposkomma% = INSTR (gdviniwert$,",")
    gdvpostxt% = VAL ( MID$ (gdviniwert$,1,gdvposkomma% - 1))
    gdvlaengtxt% = VAL ( MID$ (gdviniwert$,gdvposkomma% + 1, LEN (gdviniwert$)))
    SELECT CASE gdvfeldtyp$
     CASE "TXT"
      REM 08022003
      gdvfeldm$$ = MID$ (gdvinhalt$,gdvpostxt%,gdvlaengtxt%)
        REM CALL Fehler( MID$ (gdvinhalt$,gdvpostxt%,gdvlaengtxt%),"")
     CASE "NUM"
      gdvnum% = VAL ( MID$ (gdvinhalt$,gdvpostxt%,gdvlaengtxt%))
       IF RIGHT$ (gdvformtyp$,1) = "." THEN gdvnum% = gdvnum%
       IF RIGHT$ (gdvformtyp$,2) = ".0" THEN gdvnum% = gdvnum% / 10
       IF RIGHT$ (gdvformtyp$,3) = ".00" THEN gdvnum% = gdvnum% / 100
       IF RIGHT$ (gdvformtyp$,4) = ".000" THEN gdvnum% = gdvnum% / 1000
       IF RIGHT$ (gdvformtyp$,5) = ".0000" THEN gdvnum% = gdvnum% / 10000
       IF RIGHT$ (gdvformtyp$,6) = ".00000" THEN gdvnum% = gdvnum% / 100000
       IF RIGHT$ (gdvformtyp$,7) = ".000000" THEN gdvnum% = gdvnum% / 1000000
      gdvfeldm$$ = gdvnum%
     CASE "DAT"
      gdvdatumwert$ = MID$ (gdvinhalt$,gdvpostxt%,gdvlaengtxt%)
     CALL GDVDatum(gdvdatumwert$,gdvfeldm$)
    END SELECT 
   END IF 
  NEXT gdv_a%
  IF gdvtempdat$ LIKE "vog00*" OR gdvtempdat$ LIKE "nsg*" THEN 
  ELSE 
    IF sp.gdvtempdat$ >= 30 AND sp.gdvtempdat$ <= 39 THEN sp.gdvtempdat$ = 30
    IF sp.gdvtempdat$ >= 40 AND sp.gdvtempdat$ <= 49 THEN sp.gdvtempdat$ = 40
  END IF 
  STORE FILE gdvtempdat$
  gdvoldvsnr$ = MID$ (gdvinhalt$,14,17)
endgdvconvert: 
  REM CLOSE FILE gdvtempdat$
  END SUB 
 
 REM *******************************************************
 REM *******************************************************
 REM ***** GDV-Strukturen leeren ***************************
 REM *******************************************************
 REM *******************************************************
SUB GDVLeer(gdvSollLeer%)
    IF NOT PROGRAMFILE ("PROVUPD") THEN LOAD _netpath$ + "PROVUPD.SBR", NEW 
    REM gdvLeermachen% = 1
 IF gdvTestLog% = 1 THEN CALL gdvWriteLogOk("***** Routine : GDVLeer()")
    DIRECTORY _netpath$ + "gdv\gdv_dat\"
    MOUSE OFF 
    ON ERROR GOTO err2605991tk 
    gdv_inipath$ = _netpath$ + "gdv\gdv_dat\gdvneu.ini"
    gdv_dat$ = "Dateien"
   
    gdv_item$ = "Alle"
    gdv_iniwert$ = ""
    RW% = CALL ("GetPrivateProfileString",gdv_dat$,gdv_item$,"",gdv_iniwert$,250,gdv_inipath$)
    gdv_alle% = VAL (gdv_iniwert$)
    GOTO weit2605991tk
 
err2605991tk: 
    gdvfehler% = gdvfehler% + 1
    fail$ = "Die Datei gdvneu.ini wurde nicht im Pfad " + _netpath$ + "gdv\gdv_dat gefunden werden !"
    CALL gdvWriteLogFail(fail$)
    GOTO weit0202995tk
 
weit2605991tk: 
    ON ERROR GOTO ErrorHandler
    CALL gdvWriteLogOk("Die Datei GDVNEU.INI wurde erfolgreich geoeffnet")
    v210z% = 0
    REDIM gdv_v210$(1,1)
    REDIM gdv_v210$(50)
  FOR i% = 1 TO gdv_alle%
    gdv_iniwert$ = ""
    gdv_item$ = LTRIM$ ( STR$ (i%,"999"))
    RW% = CALL ("GetPrivateProfileString",gdv_dat$,gdv_item$,"",gdv_iniwert$,250,gdv_inipath$)
 
    ON ERROR GOTO err2605992tk
    REM open file memory
  REM CALL Info(gdv_iniwert$,gdv_item$)
    CALL DFile(8,gdv_iniwert$ + _fpw$)
    IF gdv_iniwert$ LIKE "*210*" THEN 
      gdv_v210$(v210z%) = gdv_iniwert$
      v210z% = v210z% + 1
    END IF 
    REM CREATE FILE MEMORY "adrt" FROM FILE gdv_iniwert$
    REM CLOSE FILE gdv_iniwert$
    REM CREATE FILE MEMORY gdv_iniwert$ FROM FILE "ADRT"
    REM CLOSE FILE "adrt"
 
 
    FILE gdv_iniwert$
    ON ERROR GOTO weit010600ab
    IF gdvSollLeer% = 1 THEN REMOVE FROM FILE gdv_iniwert$
weit010600ab:   
    ON ERROR GOTO err2605992tk
    GOTO weit2605992tk
 
err2605992tk: 
    gdvfehler% = gdvfehler% + 1
    fail$ = "Die Datei " + gdv_iniwert$ + ".SBF wurde nicht im Pfad " + + _netpath$ + "gdv\gdv_dat gefunden werden !"
    CALL gdvWriteLogFail(fail$)
    GOTO weit2605993tk
 
weit2605992tk: 
    CALL gdvWriteLogOk("Die Datei " + gdv_iniwert$ + ".SBF erfolgreich geleert !")
    NEXT i%
    MOUSE ON 
 
weit2605993tk:  
    ON ERROR GOTO ErrorHandler
 
    ON ERROR GOTO err2605993tk
     CREATE INDEX ON gdvku.adg10011
     CREATE INDEX ON vunr.adg10011
     CREATE INDEX ON gdvku.adg10012
     CREATE INDEX ON gdvku.alg20011
     REM CREATE INDEX ON codeku.kr021011
     REM CREATE INDEX ON codeku.kr022011
     REM CREATE INDEX ON codeku.kr022021
     REM CREATE INDEX ON codeku.kr022031
     REM CREATE INDEX ON codeku.kr022041
    GOTO weit2605994tk
 
err2605993tk: 
    REM CALL Fehler("Fehler1","")
 
weit2605994tk: 
    ON ERROR GOTO ErrorHandler
    CALL gdvWriteLogOk("Alle Datenstrukturen wurden ordnungsgemÑ· geleert")
 
  END SUB 
 
  REM *******************************************************
  REM *******************************************************
  REM ***** Sparten freischalten ****************************
  REM *******************************************************
  REM *******************************************************
SUB GDVSpartenFrei()
  DIM gdvFreieSparte$(50,2)
  
  gdvKFZFrei$ = "True"
  gdvLebenFrei$ = "True"
  gdvGruppeFrei$ = "True"
  CALL gdvWriteLogOk("KFZ-Sparten einlesen       : " + gdvKFZFrei$)
  CALL gdvWriteLogOk("Leben-Sparten einlesen     : " + gdvLebenFrei$)
  CALL gdvWriteLogOk("Restliche Sparten einlesen : " + gdvGruppeFrei$)
 
  gdvFreieSparte$(0,0) = "050"
  gdvFreieSparte$(0,1) = "Kraftfahrzeug"
  gdvFreieSparte$(0,2) = "0"
  gdvFreieSparte$(1,0) = "010"
  gdvFreieSparte$(1,1) = "Leben"
  gdvFreieSparte$(1,2) = "0"
  gdvFreieSparte$(2,0) = "040"
  gdvFreieSparte$(2,1) = "Haftpflicht"
  gdvFreieSparte$(2,2) = "0"
  gdvFreieSparte$(3,0) = "030"
  gdvFreieSparte$(3,1) = "Unfall"
  gdvFreieSparte$(3,2) = "0"
  gdvFreieSparte$(4,0) = "130"
  gdvFreieSparte$(4,1) = "Verbundene Hausrat"
  gdvFreieSparte$(4,2) = "0"
  gdvFreieSparte$(5,0) = "110"
  gdvFreieSparte$(5,1) = "Glas"
  gdvFreieSparte$(5,2) = "0"
  gdvFreieSparte$(6,0) = "140"
  gdvFreieSparte$(6,1) = "Verbundene GebÑude"
  gdvFreieSparte$(6,2) = "0"
  gdvFreieSparte$(7,0) = "020"
  gdvFreieSparte$(7,1) = "Kranken"
  gdvFreieSparte$(7,2) = "0"
  gdvFreieSparte$(8,0) = "070"
  gdvFreieSparte$(8,1) = "Rechtsschutz"
  gdvFreieSparte$(8,2) = "0"
  gdvFreieSparte$(9,0) = "080"
  gdvFreieSparte$(9,1) = "Feuerversicherung"
  gdvFreieSparte$(9,2) = "0"
  gdvFreieSparte$(10,0) = "081"
  gdvFreieSparte$(10,1) = "Feuer-Industrie-Versicherung"
  gdvFreieSparte$(10,2) = "0"
  gdvFreieSparte$(11,0) = "082"
  gdvFreieSparte$(11,1) = "landwirtschaftliche Feuer-Versicherung"
  gdvFreieSparte$(11,2) = "0"
  gdvFreieSparte$(12,0) = "083"
  gdvFreieSparte$(12,1) = "sonstige Feuerversicherung"
  gdvFreieSparte$(12,2) = "0"
  gdvFreieSparte$(13,0) = "231"
  gdvFreieSparte$(13,1) = "Feuer-(Gro·)Betriebsunterbrechungs-Versicherung"
  gdvFreieSparte$(13,2) = "0"
  gdvFreieSparte$(14,0) = "089"
  gdvFreieSparte$(14,1) = "Åbrige und nicht aufgegliederte Feuer-Versicherung"
  gdvFreieSparte$(14,2) = "0"
  gdvFreieSparte$(15,0) = "090"
  gdvFreieSparte$(15,1) = "Einbruch-Diebstahl- und Raub(ED)-Versicherung"
  gdvFreieSparte$(15,2) = "0"
  gdvFreieSparte$(16,0) = "099"
  gdvFreieSparte$(16,1) = "Åbrige und nicht aufgegliederte ED-Versicherung"
  gdvFreieSparte$(16,2) = "0"
  gdvFreieSparte$(17,0) = "100"
  gdvFreieSparte$(17,1) = "Leitungswasser(LW)-Versicherung"
  gdvFreieSparte$(17,2) = "0"
  gdvFreieSparte$(18,0) = "109"
  gdvFreieSparte$(18,1) = "Åbrige und nicht aufgegliederte LW-Versicherung"
  gdvFreieSparte$(18,2) = "0"
  gdvFreieSparte$(19,0) = "120"
  gdvFreieSparte$(19,1) = "Sturm-Versicherung"
  gdvFreieSparte$(19,2) = "0"
  gdvFreieSparte$(20,0) = "150"
  gdvFreieSparte$(20,1) = "Hagel-Versicherung"
  gdvFreieSparte$(20,2) = "0"
  gdvFreieSparte$(21,0) = "180"
  gdvFreieSparte$(21,1) = "Einheits-Versicherung"
  gdvFreieSparte$(21,2) = "0"
  gdvFreieSparte$(22,0) = "181"
  gdvFreieSparte$(22,1) = "Allgemeine Einheitsversicherung"
  gdvFreieSparte$(22,2) = "0"
  gdvFreieSparte$(23,0) = "210"
  gdvFreieSparte$(23,1) = "Extend Coverage(EC)-Versicherung"
  gdvFreieSparte$(23,2) = "0"
  gdvFreieSparte$(24,0) = "510"
  gdvFreieSparte$(24,1) = "Verkehrsservice"
  gdvFreieSparte$(24,2) = "0"
  gdvFreieSparte$(25,0) = "171"
  gdvFreieSparte$(25,1) = "Maschinen-Versicherung"
  gdvFreieSparte$(25,2) = "0"
  gdvFreieSparte$(26,0) = "172"
  gdvFreieSparte$(26,1) = "Elektronik-Versicherung"
  gdvFreieSparte$(26,2) = "0"
  gdvFreieSparte$(27,0) = "174"
  gdvFreieSparte$(27,1) = "Montage-Versicherung"
  gdvFreieSparte$(27,2) = "0"
  gdvFreieSparte$(28,0) = "175"
  gdvFreieSparte$(28,1) = "HaushaltsgerÑteversicherung"
  gdvFreieSparte$(28,2) = "0"
  gdvFreieSparte$(29,0) = "176"
  gdvFreieSparte$(29,1) = "Bauleistungs-Versicherung"
  gdvFreieSparte$(29,2) = "0"
  gdvFreieSparte$(30,0) = "179"
  gdvFreieSparte$(30,1) = "Åbrige Technische Versicherungen"
  gdvFreieSparte$(30,2) = "0"
  gdvFreieSparte$(31,0) = "232"
  gdvFreieSparte$(31,1) = "Technische-Betriebsunterbrechungs-Versicherung"
  gdvFreieSparte$(31,2) = "0"
  gdvFreieSparte$(32,0) = "290"
  gdvFreieSparte$(32,1) = "Maschinen-Garantie-Versicherung"
  gdvFreieSparte$(32,2) = "0"
  gdvFreieSparte$(33,0) = "190"
  gdvFreieSparte$(33,1) = "Transport"
  gdvFreieSparte$(33,2) = "0"
  gdvFreieSparte$(34,0) = "060"
  gdvFreieSparte$(34,1) = "Luftfahrtversicherung"
  gdvFreieSparte$(34,2) = "0"
  gdvFreieSparte$(35,0) = "160"
  gdvFreieSparte$(35,1) = "Tierversicherung"
  gdvFreieSparte$(35,2) = "0"
  gdvFreieSparte$(36,0) = "290"
  gdvFreieSparte$(36,1) = "sonstige Sach-/Schadenversicherung"
  gdvFreieSparte$(36,2) = "0"
  gdvFreieSparte$(37,0) = "233"
  gdvFreieSparte$(37,1) = "sonstige Betriebsunterbrechungsversicherungen"
  gdvFreieSparte$(37,2) = "0"
  gdvFreieSparte$(38,0) = "293"
  gdvFreieSparte$(38,1) = "sonstige Vermîgensschadenversicherungen"
  gdvFreieSparte$(38,2) = "0"
  gdvFreieSparte$(39,0) = "294"
  gdvFreieSparte$(39,1) = "sonstige gemischte Versicherungen"
  gdvFreieSparte$(39,2) = "0"
  gdvFreieSparte$(40,0) = "290"
  gdvFreieSparte$(40,1) = "Åbrige und nich aufgegliederte sonstige Schadenversicherung"
  gdvFreieSparte$(40,2) = "0"
   
  REM Freischalten
   FOR i% = 0 TO 40
     IF i% = 0 AND gdvKFZFrei$ = "True" THEN 
       gdvFreieSparte$(i%,2) = "1"
     ELSE IF i% = 1 AND gdvLebenFrei$ = "True" THEN 
       gdvFreieSparte$(i%,2) = "1"
     ELSE IF i% > 1 AND gdvGruppeFrei$ = "True" THEN 
       gdvFreieSparte$(i%,2) = "1"
     ELSE 
       gdvFreieSparte$(i%,2) = "0"
     END IF 
     CALL gdvWriteLogOk(gdvFreieSparte$(i%,0) + " - " + gdvFreieSparte$(i%,2) + " - " + gdvFreieSparte$(i%,1))
   NEXT i%
 
 REM CALL Info("Sparten frei","")
 END SUB 
  
SUB VertTest()
  REM *******************************************************
  REM *******************************************************
  REM ***** VertrÑge prÅfen *********************************
  REM *******************************************************
  REM *******************************************************
  REM Daten importieren
  
  gdvAdrSpOld% = 0
  gdvAdrVUOld% = 0
 
  REM Alle nîtigen Dateien îffnen
  CALL DFile(2,"OFFICE\telefon" + _fpw$)
  CALL DFile(2,"OFFICE\adressen" + _fpw$)
  CALL DFile(3,"sparten" + _fpw$)
  CALL DFile(3,"kvertrag" + _fpw$)
  CALL DFile(3,"history" + _fpw$)
  REM REMOVE FROM FILE "kvertrag"
  CALL DFile(3,"al020011" + _fpw$)
  REM REMOVE FROM FILE "al020011"
 
 
  REM Jeden Datensatz aus der Datei adg10011 vergleichen
  FILE "adg10011"
  INDEX GDVKU
  SELECT FIRST FILE "adg10011" INDEX gdvku.adg10011
  adganz% = RECCOUNT ("adg10011")
  adganz1% = 1
  gdvkuold% = 0
  viold% = 0
  anz210% = 0
  vi% = 0
  REM CALL Fehler("   Anz in 210:" + STR$ (anz210%,"999999"),"Sparte")
  WHILE NOT EOF ("adg10011")
    FILE "adg10011"
    REM adganz1% = adganz1% + 1 
    ankey% = VAL (adrknz.adg10011)
    IF vsnr.adg10011 LIKE "*30404951076" THEN 
      REM CALL Fehler("das ist n test","1")
    END IF 
    IF ankey% > 1 THEN 
      REM die Adresse ist weder Versicherungsnehmer noch Beitragszahler, da mu· noch eine andere kommen
      nÑchster% = - 1
      GOTO nDS120420001
      IF vsnr.adg10011 LIKE "*30404951076" THEN 
        REM CALL Fehler("das ist n test","2")
      END IF 
    END IF 
    gdvVorname% = 0
    gdvNachname% = 0
    AdressFound% = 0
    VertFound% = 0
    gdvcodekua% = 0
    REM CALL Fehler("Vertrag","Sparte")
    SET STATUS "Vertrag finden" + "   Anz in AGD10011:" + STR$ (adganz1%,"999999") + "/" + STR$ (adganz%,"999999") + "/:" + STR$ (anz210%,"999999")
    REM IF name1.adg10011 LIKE "DRECHSLER-*" THEN 
      REM CALL Fehler("DRECHSLER","Sparte")
    REM END IF 
    REM Alle Daten fÅr Vertrags-Vergleichen aus der Datei adg10011 holen
    gdvAdrSparte% = sp.adg10011
    REM 18082003 Sparte 31 bis 39 behandeln
    IF gdvAdrSparte% >= 30 AND gdvAdrSparte% <= 39 THEN 
      IF EXISTS (gdvAdrSparte%,hauptsparte.sparten) THEN 
      ELSE 
        gdvAdrSparte% = 030
      END IF 
    END IF 
    IF gdvAdrSparte% >= 40 AND gdvAdrSparte% <= 49 THEN 
      IF EXISTS (gdvAdrSparte%,hauptsparte.sparten) THEN 
      ELSE 
        gdvAdrSparte% = 040
      END IF 
    END IF 
    nÑchster% = 0
    testsparte% = sp.adg10011
    IF sp.adg10011 = 0 THEN 
      gefunden% = 0
      REM CALL Fehler("BÅndelungsvertrag","")
      IF GBuendel$ <> "TRUE" THEN 
        REM BÅndelungsvertrag aufsplitten in seine Bestandteile und die EinzelvertrÑge Åbernehmen
        FOR vi% = viold% TO 50
          testfile$ = gdv_v210$(vi%)
          IF LTRIM$ (testfile$) <> "" THEN 
            IF EXISTS (gdvku.adg10011,gdvku.testfile$) AND testfileold$ <> testfile$ THEN 
              viold% = vi% + 1
              IF testfileold$ <> "" THEN 
                REM adganz% = adganz% + 1
              END IF 
              testfileold$ = testfile$
              SELECT FIRST FILE testfile$ INDEX gdvku.testfile$
              SELECT KEY gdvku.adg10011 FILE testfile$ INDEX gdvku.testfile$
              gdvAdrSparte% = sp.testfile$
              vi% = 51
              gefunden% = - 1
            
              REM CALL Fehler(testfile$, STR$ (gdvAdrSparte%,"000"))
            END IF 
          END IF 
        NEXT vi%
        IF gefunden% = 0 THEN 
          nÑchster% = - 1
          testfileold$ = ""
          viold% = 0
          GOTO nDS120420001
        END IF 
      ELSE 
        REM BÅndelungsvertrag soll als einzelner Vertrag Åbernommen werden
        REM CALL Fehler("BÅndelungsvertrag als einzelner","")
        gdvAdrSparte% = 0
        nÑchster% = - 1
      END IF 
    ELSE 
      nÑchster% = - 1
    END IF 
    REM **************************************************************************************
    REM hier Åberlegen welchen Teil der Vertragsnr man vergleichen sollte
        REM CALL Fehler("GDVAnf","")
        IF GVSNRVergl% = 1 THEN 
          gdvAdrVSNR$ = LTRIM$ (VSNRPackNum$(vsnr.adg10011))
        ELSE 
          gdvAdrVSNR$ = LTRIM$ (VSNRPack$(vsnr.adg10011))
        END IF 
        gdvAdrVSNR1$ = LTRIM$ (vsnr.adg10011)
        REM CALL Fehler(vsnr.adg10011,gdvAdrVSNR$)
        REM IF gdvAdrVSNR$ LIKE "PRSV78027392579" THEN CALL Fehler(gdvAdrVSNR$,"")
    REM ************************************************************************************** 
 
    gdvAdrBKNZ$ = bkz.adg10011
    REM 240320002
    SELECT FIRST FILE "gdvtemp"
    vunrab% = VAL (vunr.adg10011)
    SELECT KEY vunrab% FILE "gdvtemp" INDEX vunr.gdvtemp
    gdvAdrVu% = link.gdvtemp
    REM gdvAdrVu% = gdvge.adg10011
    gdvAdrKU% = gdvku.adg10011
 
    REM Alle Daten zum Adress-Vergleichen aus der Datei adg10011 holen
    gdvN1$ = VSNRPack$(NAME1.adg10011)
    gdvN2$ = VSNRPack$(Name2.adg10011)
    gdvN3$ = VSNRPack$(Name3.adg10011)
    gdvStr$ = VSNRPack$(Str.adg10011)
    gdvO$ = VSNRPack$(Ort.adg10011)
    gdvP$ = VSNRPack$(plz.adg10011)
    IF Gebdat.adg10011 > 0 THEN 
      gdvGeb% = Gebdat.adg10011
    ELSE 
      gdvGeb% = 0
    END IF 
    gdvVMNr$ = ""
    IF LTRIM$ (gsvm.adg10011) <> "" THEN 
      gdvVMNr$ = gsvm.adg10011
    END IF 
    REM IF gdvn1$ LIKE "coban" THEN CALL Fehler(gdvn1$,"")
    
 
    REM PrÅfen ob diese Sparte Åberhaupt importiert werden darf
    GDVImport$ = ""
    GDVImport$ = SparteTest$(gdvAdrSparte%)
    CALL Fehler("PrÅfen ob die Sparte importiert werden darf " + STR$ (gdvAdrSparte%,"99999"),GDVImport$)
    IF GDVImport$ <> "j" THEN 
      CALL gdvWriteLogOk("Vertrag wird nicht aufgenommen, da diese Sparte nicht importiert werden soll: " + STR$ (gdvAdrSparte%,"99999") + " " + STR$ (gdvAdrKu%,"000000") + "," + gdvAdrVSNR$ + "," + gdvN1$ + "," + gdvN2$ + "," + gdvN3$)
      GOTO nDS120420001
    END IF 
    REM PrÅfen ob die Sparte verknÅpft ist
 
    VertFound1% = 0
 
    FILE "sparten"
    INDEX hauptsparte.sparten
    SELECT FIRST 
    
    codeva1% = 0
    sname1$ = ""
    vst1% = 0
    IF EXISTS (gdvAdrSparte%,hauptsparte.sparten) THEN 
      SELECT KEY gdvAdrSparte% FILE "sparten" INDEX hauptsparte.sparten
      gdvAdrCodeVa% = codeva.sparten
      gdvSparteName$ = Sparte.sparten
      gdvSparteVST% = vst.sparten
      IF GDVStandardSpar.sparten = 1 THEN 
        codeva1% = codeva.sparten
        sname1$ = sparte.sparten
        vst1% = vst.sparten
      END IF 
    ELSE 
      REM 18082003 hier Sparte 31 bis 39 einarbeiten
 
    END IF 
 
    REM Name der Gesellschaft auslesen
    FILE "geadr"
    INDEX codege.geadr
    SELECT FIRST 
    IF EXISTS (gdvAdrVu%,codege.geadr) THEN 
      SELECT KEY gdvAdrVu% FILE "geadr" INDEX codege.geadr
      gdvGesellName$ = Gesellschaft.geadr
    END IF 
 
 REM CALL Info("Vertrag suchen","")
 
SparteFoundAnf: 
    REM Vertrag suchen
    CALL gdvWriteLogOk("Vertrag suchen : " + STR$ (gdvAdrKu%,"000000") + "," + gdvAdrVSNR$ + "," + gdvN1$ + "," + gdvN2$ + "," + gdvN3$)
    FILE "kvertrag"
    IF GVSNRVergl% = 1 THEN 
      INDEX QNumVSNR.kvertrag
      KVIndexName$ = "QNumVSNR.kvertrag"
    ELSE 
      INDEX QuickVSNR.kvertrag
      KVIndexName$ = "QuickVSNR.kvertrag"
    END IF 
    KVIndex$ = INDEX + ".kvertrag"
    
    SELECT FIRST FILE "kvertrag" INDEX KVIndex$$
 
    REM Neue Vertragssuche nach Andi
    REM CALL Fehler("Neue Vertragssuche nach Andi" + KVIndexName$,gdvAdrVSNR$)
    REM IF gdvAdrVSNR$ LIKE "291890150999" THEN CALL Fehler(gdvAdrVSNR$,"")
    IF EXISTS (gdvAdrVSNR$,KVIndexName$$) THEN 
      SELECT FIRST FILE "kvertrag" INDEX KVIndex$$
      SELECT KEY gdvAdrVSNR$ FILE "kvertrag" INDEX KVIndex$$
      WHILE NOT EOF ("kvertrag") AND KVIndexName$$ = gdvAdrVSNR$ AND VertFound% = 0
        REM wÑre es hier nicht besser den Vergleich auf die Gesellschaft und Sparte rauszulassen und einfach nur 
        REM prÅfen, ob es hier die gleiche Adresse ist?
        IF codege.kvertrag = gdvAdrVu% AND codeva.kvertrag = gdvAdrCodeVA% THEN 
          VertFound% = 1
          gdvcodekua% = codeku.kvertrag
          gdvLNR% = lfdnr.kvertrag
          REM IF lfdnr.kvertrag = 282 THEN CALL Fehler("Breuer Simone","")
          CALL gdvWriteLogOk("Vertrag gefunden : " + STR$ (gdvcodekua%,"000000") + "," + STR$ (gdvLNR%,"000000") + "-" + STR$ (gdvAdrKu%,"000000") + "," + gdvAdrVSNR$ + "," + gdvN1$ + "," + gdvN2$ + "," + gdvN3$)
        END IF 
        SELECT NEXT FILE "kvertrag" INDEX KVIndex$$
      WEND 
    SET STATUS TRIM$ ( LEFT$ (gdvAdrVSNR$ + "," + gdvN1$ + "," + gdvN2$ + "," + gdvN3$,50)) + "   Anz in AGD10011:" + STR$ (adganz1%,"999999") + "/" + STR$ (adganz%,"999999")
    ELSE 
      REM CALL Fehler("Vertrag nicht gefunden","")
      VertFound% = 0
    END IF 
 
    REM Wenn kein Vertrag gefunden,dann prÅfen ob weitere Sparte mit entsprechender Hauptspartennummer existiert
    IF VertFound% = 0 THEN 
      FILE "Sparten"
      SELECT NEXT FILE "Sparten" INDEX hauptsparte.sparten
      IF NOT EOF ("Sparten") AND gdvAdrSparte% = hauptsparte.sparten THEN 
        
        gdvAdrCodeVa% = codeva.sparten
        gdvSparteName$ = Sparte.sparten
        gdvSparteVST% = vst.sparten
        IF GDVStandardSpar.sparten = 1 THEN 
          codeva1% = codeva.sparten
          sname1$ = sparte.sparten
          vst1% = vst.sparten
        END IF 
        GOTO SparteFoundAnf
      END IF 
    END IF 
 
   REM Auswertung der Vertragssuche
    IF VertFound% = 1 THEN 
        CALL gdvWriteLogOk( STR$ (gdvAdrKU%,"000000") + " Vertrag vorhanden : " + STR$ (gdvAdrSparte%,"000") + " - " + gdvAdrVSNR$ + " - " + STR$ (gdvAdrVu%,"000000"))
        REM Adresse öber CODEKU ermitteln
        FILE "Adressen"
        SELECT KEY gdvcodekua% FILE "adressen" INDEX codeku.adressen
        CALL gdvWriteLogOk( STR$ (gdvAdrKU%,"000000") + " Adresse dazu : " + STR$ (codeku.adressen,"000000") + " - " + nachname.adressen + " - " + vorname.adressen)
        AdressFound% = 1
        IF EXISTS (gdvAdrKu%,gdvku.alg20011) THEN 
          IF ADRChange% = 1 THEN CALL GDVAdresse(gdvAdrKu%)
          IF VertHistory% = 1 THEN CALL CopyHistory()
          CALL AddVert(gdvAdrKu%,gdvAdrCodeVA%,gdvAdrVU%,gdvGesellName$)
        ELSE 
          CALL gdvWriteLogOk( STR$ (gdvAdrKU%,"000000") + " 200er Satz nicht da, deshalb Vertrag nicht aufgenommen : " + STR$ (codeku.adressen,"000000") + " - " + nachname.adressen + " - " + vorname.adressen)
        END IF 
     
    ELSE 
        IF codeva1% > 0 THEN 
          gdvAdrCodeVa% = codeva1%
          gdvSparteName$ = Sname1$
          gdvSparteVST% = vst1%
        END IF 
        CALL gdvWriteLogOk( STR$ (gdvAdrKU%,"000000") + " Vertrag fehlt     : " + STR$ (gdvAdrSparte%,"000") + " - " + gdvAdrVSNR$ + " - " + STR$ (gdvAdrVu%,"000000"))
        REM Adresse suchen                                 OKAY
        REM  Wenn vorhanden       -> Adresse Ñndern        OKAY
        REM  Wenn nicht vorhanden -> Adresse hinzufÅgen    OKAY
        REM Vertrag hinzufÅgen
        SET STATUS "Adresse finden" + "   Anz in AGD10011:" + STR$ (adganz1%,"999999") + "/" + STR$ (adganz%,"999999")
 
    REM ****************************************************************************************************************       
    REM *              ADRESSSEN SUCHEN
    REM ****************************************************************************************************************
    REM 01112002 Adresssuche, 
        FILE "adressen"
        ind1$ = INDEX 
        INDEX QNachname.adressen
        tspru$ = VSNRPack$(gdvn1$)
        SELECT FIRST FILE "adressen" INDEX QNachname.adressen
        SELECT KEY tspru$ FILE "adressen" INDEX QNachname.adressen
        gStr% = 0
        gdvNachname% = 0
        gdvVorname% = 0
        gort% = 0
        REM IF gdvn1$ LIKE "DBETHCHUGO" THEN 
          REM CALL Fehler ("ADRSuche","DBETHCHUGO")
        REM END IF 
        WHILE NOT EOF ("adressen") AND ( LTRIM$ (gdvn1$) <> "" OR LTRIM$ (gdvn2$) <> "" OR LTRIM$ (gdvn3$) <> "" OR LTRIM$ (gdvo$) <> "" OR LTRIM$ (gdvp$) <> "")
          OKz% = - 1
          AdressFound% = 0
          REM GADRVorn$,GADRNachn$,GADRGeb$,GADRPlz$,GADROrt$,GADRStra$,GADRGeb$,GVSNRVergl%
          IF GADRVorn$ = "n" AND GADRNachn$ = "n" AND GADRGeb$ = "n" AND GADRPlz$ = "n" AND GADROrt$ = "n" AND GADRStra$ = "n" AND GADRGeb$ = "n" THEN okz% = 0
          IF GADRNachn$ = "j" THEN 
            gdvNTemp1$ = gdvN1$
            gdvNTemp2$ = QNachname.adressen
            p% = 0
            IF gdvN1$ = QNachname.adressen GOTO vn140420051
            p% = INSTR (gdvNTemp2$,gdvNTemp1$)
            IF p% > 0 THEN 
              FOR gdv_n% = 1 TO LEN (gdvNTemp2$) - LEN (gdvNTemp1$) + 1
                gdvtemp$ = MID$ (gdvNTemp2$,gdv_n%, LEN (gdvNTemp1$))
                IF gdvNTemp1$ = gdvtemp$ THEN gdvNachname% = 1
              NEXT gdv_n%
            END IF 
            IF gdvNachname% <> 1 THEN GOTO etest081020041
vn140420051: 
            gdvNachname% = 1
          END IF 
  
          IF GADRVorn$ = "j" THEN 
            gdvNTemp1$ = gdvN3$
            gdvNTemp2$ = QVorname.adressen
            p% = 0
            IF gdvN3$ = QVorname.adressen GOTO vn140420052
            p% = INSTR (gdvNTemp2$,gdvNTemp1$)
            IF p% > 0 THEN 
              FOR gdv_n% = 1 TO LEN (gdvNTemp2$) - LEN (gdvNTemp1$) + 1
                IF gdvNTemp1$ = MID$ (gdvNTemp2$,gdv_n%, LEN (gdvNTemp1$)) THEN gdvVorname% = 1
              NEXT gdv_n%
            ELSE 
              GOTO etest081020041
            END IF 
            IF gdvVorname% = 0 THEN 
              gdvNTemp1$ = gdvN3$
              gdvNTemp2$ = QNachname.adressen
              p% = 0
              p% = INSTR (gdvNTemp2$,gdvNTemp1$)
              IF p% > 0 THEN 
                FOR gdv_n% = 1 TO LEN (gdvNTemp2$) - LEN (gdvNTemp1$) + 1
                  IF gdvNTemp1$ = MID$ (gdvNTemp2$,gdv_n%, LEN (gdvNTemp1$)) THEN gdvVorname% = 1
                NEXT gdv_n%
              ELSE 
                GOTO etest081020041
              END IF 
            END IF 
            IF gdvVorname% <> 1 THEN GOTO etest081020041
vn140420052: 
            gdvVorname% = 1
          END IF 
 
          IF GADRPLZ$ = "j" THEN 
            IF gdvP$ <> "" AND Qplz.adressen <> "" THEN 
              gdvp% = VAL ( FN numeric(gdvP$))
              QPLZ% = VAL ( FN numeric(Qplz.adressen))
              IF QPLZ% <> gdvp% THEN GOTO etest081020041
            END IF 
          END IF 
          IF GADROrt$ = "j" THEN 
            IF gdvO$ <> "" AND Qort.adressen <> "" THEN 
              gdvNTemp1$ = gdvO$
              gdvNTemp2$ = QOrt.adressen
              p% = 0
              IF gdvO$ = QOrt.adressen THEN GOTO vn140420053
              p% = INSTR (gdvNTemp2$,gdvNTemp1$)
              IF p% > 0 THEN 
                FOR gdv_n% = 1 TO LEN (gdvNTemp2$) - LEN (gdvNTemp1$) + 1
                  IF gdvNTemp1$ = MID$ (gdvNTemp2$,gdv_n%, LEN (gdvNTemp1$)) THEN gOrt% = 1
                NEXT gdv_n%
              ELSE 
                GOTO etest081020041
              END IF 
              IF gOrt% <> 1 THEN 
                GOTO etest081020041
              END IF 
            END IF 
vn140420053: 
            gdvOrt% = 1
          END IF 
          IF GADRStra$ = "j" THEN 
            IF gdvStr$ <> "" AND QStra·e.adressen <> "" THEN 
              gdvNTemp1$ = gdvStr$
              gdvNTemp2$ = QStra·e.adressen
              p% = 0
              IF gdvStr$ = QStra·e.adressen THEN GOTO vn140420054
              p% = INSTR (gdvNTemp2$,gdvNTemp1$)
              IF p% > 0 THEN 
                FOR gdv_n% = 1 TO LEN (gdvNTemp2$) - LEN (gdvNTemp1$) + 1
                  IF gdvNTemp1$ = MID$ (gdvNTemp2$,gdv_n%, LEN (gdvNTemp1$)) THEN gStr% = 1
                NEXT gdv_n%
              ELSE 
                GOTO etest081020041
              END IF 
              IF gStr% <> 1 THEN 
                GOTO etest081020041
              END IF 
            END IF 
vn140420054: 
            gdvStr% = 1
          END IF 
          IF GADRGeb$ = "j" THEN 
            IF gdvGeb% > 0 AND Geburtstag.adressen > 0 THEN 
              IF gdvGeb% <> Geburtstag.adressen THEN GOTO etest081020041
            END IF 
          END IF 
          IF okz% = - 1 THEN 
            AdressFound% = 1
            gdvcodekua% = codeku.adressen
            SELECT LAST FILE "adressen"
          END IF 
etest081020041: 
          gStr% = 0
          gdvNachname% = 0
          gdvVorname% = 0
          gort% = 0
 
          SELECT NEXT FILE "adressen"
        WEND 
        INDEX ind1$$
        REM CALL Fehler (gdvN1$ + "/" + gdvN2$ + "/" + gdvN3$, STR$ (AdressFound%,"0") + "/GDVKU: " + STR$ (gdvku.adg10011,"000000"))
        REM CALL Fehler(gdvNTemp1$,"2")
        REM Adressuche auswerten 
        IF AdressFound% = 1 THEN 
         CALL gdvWriteLogOk( STR$ (gdvAdrKU%,"000000") + " Adresse vorhanden : " + STR$ (gdvAdrSparte%,"000") + " - " + gdvAdrVSNR$ + " - " + STR$ (gdvAdrVu%,"000000") + " - " + STR$ (gdvcodekua%,"000000"))
         REM Adresse Ñndern
         IF ADRChange% = 1 THEN CALL GDVAdresse(gdvAdrKu%)
        ELSE 
         CALL gdvWriteLogOk( STR$ (gdvAdrKU%,"000000") + " Adresse fehlt     : " + STR$ (gdvAdrSparte%,"000") + " - " + gdvAdrVSNR$ + " - " + STR$ (gdvAdrVu%,"000000") + " - " + STR$ (gdvcodekua%,"000000"))
         REM Adresse hinzufÅgen
         IF ( LTRIM$ (gdvn1$) <> "" OR LTRIM$ (gdvn2$) <> "" OR LTRIM$ (gdvn3$) <> "" OR LTRIM$ (gdvo$) <> "" OR LTRIM$ (gdvp$) <> "") THEN 
           IF EXISTS (gdvAdrKu%,gdvku.alg20011) THEN 
             CALL GDVAdresse(gdvAdrKu%)
           ELSE 
             CALL gdvWriteLogOk( STR$ (gdvAdrKU%,"000000") + " 200er Satz nicht da, deshalb Adresse+Vertrag nicht aufgenommen : " + STR$ (codeku.adressen,"000000") + " - " + nachname.adressen + " - " + vorname.adressen)
             REM CALL Fehler (gdvN1$ + "/" + gdvN2$ + "/" + gdvN3$, STR$ (AdressFound%,"0") + "/GDVKU: " + STR$ (gdvku.adg10011,"000000"))
           END IF 
         END IF 
        END IF 
        REM CALL Fehler("Test","")
        REM Vertrag hinzufÅgen 
        IF LTRIM$ (gdvn1$) <> "" OR LTRIM$ (gdvn2$) <> "" OR LTRIM$ (gdvn3$) <> "" OR LTRIM$ (gdvo$) <> "" OR LTRIM$ (gdvp$) <> "" THEN 
          IF EXISTS (gdvAdrKu%,gdvku.alg20011) THEN 
            CALL AddVert(gdvAdrKu%,gdvAdrCodeVA%,gdvAdrVU%,gdvGesellName$)
          ELSE 
            CALL gdvWriteLogOk( STR$ (gdvAdrKU%,"000000") + " 200er Satz nicht da, deshalb Vertrag nicht aufgenommen : " + STR$ (codeku.adressen,"000000") + " - " + nachname.adressen + " - " + vorname.adressen)
          END IF 
        END IF 
         
   END IF 
nDS120420001: 
   FILE "adg10011"
   IF nÑchster% = - 1 THEN 
     SELECT NEXT FILE "adg10011"
     adganz1% = adganz1% + 1
   END IF 
   WEND 
 END SUB 
 
SUB AddVert(gdvserial%,gdvspart%,gdvGE%,gdvGNam$)
  CALL DFile(3,"al020011" + _fpw$)
  FILE "alg20011"
  INDEX gdvKu.alg20011
  SELECT FIRST FILE "alg20011" INDEX gdvKu.alg20011
  SELECT KEY gdvserial% FILE "alg20011" INDEX gdvku.alg20011
     satznr% = VAL (satznr.alg20011)
     IF satznr% = 0 OR satznr% = 1 THEN 
     ELSE 
       SELECT NEXT FILE "alg20011" INDEX gdvKu.alg20011
     END IF 

  REM IF gdvAdrVSNR$ LIKE "22956385001*" THEN CALL Fehler(gdvAdrVSNR$,"")
  IF VertFound% = 0 THEN 
 
    IF verstat.alg20011 = "4" THEN 
      IF GStornoInsert% = 1 THEN 
        SET STATUS "Vertrag hinzufÅgen" + "   Anz in AGD10011:" + STR$ (adganz1%,"999999") + "/" + STR$ (adganz%,"999999")
        FILE "kvertrag"
        BLANK FILE "kvertrag"
        gdvPruef% = SER (lfdnr.kvertrag,1)
        lfdnr.kvertrag = gdvPruef%
        lfdnrtotal% = lfdnr.kvertrag * 10000
        gdvneu.kvertrag = TODAY 
        lfdnrtotal.kvertrag = lfdnrtotal%
        ErfasDatum.kvertrag = TODAY 
        REM CALL Info("CODEKU", STR$ (gdvcodekua%,"999999"))
        codeku.kvertrag = gdvcodekua%
        gdvC200% = SER ("al020011",1)
        STORE FILE "kvertrag"
        CALL gdvWriteLogOk("Vertrag hinzufÅgen : " + STR$ (gdvcodekua%,"000000") + "," + STR$ (gdvPruef%,"000000") + "-" + STR$ (gdvAdrKu%,"000000") + "," + gdvAdrVSNR$ + "," + gdvN1$ + "," + gdvN2$ + "," + gdvN3$)
        SELECT FIRST FILE "GDVHEAD"
        SELECT KEY codeimpgdv% LOCK FILE "GDVHEAD" INDEX codeimpgdv.gdvhead
        AnzVertragHinz.gdvhead = AnzVertragHinz.gdvhead + 1
        STORE FILE "GDVHEAD"
      ELSE 
        CALL gdvWriteLogOk("Vertrag nicht hinzugefÅgt, da storniert : " + STR$ (gdvcodekua%,"000000") + "," + STR$ (gdvPruef%,"000000") + "-" + STR$ (gdvAdrKu%,"000000") + "," + gdvAdrVSNR$ + "," + gdvN1$ + "," + gdvN2$ + "," + gdvN3$)
        GOTO eAddVert13042001
      END IF 
    ELSE 
      SET STATUS "Vertrag hinzufÅgen" + "   Anz in AGD10011:" + STR$ (adganz1%,"999999") + "/" + STR$ (adganz%,"999999")
      FILE "kvertrag"
      BLANK FILE "kvertrag"
      gdvPruef% = SER (lfdnr.kvertrag,1)
      lfdnr.kvertrag = gdvPruef%
      lfdnrtotal% = lfdnr.kvertrag * 10000
      gdvneu.kvertrag = TODAY 
      lfdnrtotal.kvertrag = lfdnrtotal%
      ErfasDatum.kvertrag = TODAY 
      REM CALL Info("CODEKU", STR$ (gdvcodekua%,"999999"))
      codeku.kvertrag = gdvcodekua%
      gdvC200% = SER ("al020011",1)
      STORE FILE "kvertrag"
      CALL gdvWriteLogOk("Vertrag hinzufÅgen : " + STR$ (gdvcodekua%,"000000") + "," + STR$ (gdvPruef%,"000000") + "-" + STR$ (gdvAdrKu%,"000000") + "," + gdvAdrVSNR$ + "," + gdvN1$ + "," + gdvN2$ + "," + gdvN3$)
      SELECT KEY codeimpgdv% LOCK FILE "GDVHEAD" INDEX codeimpgdv.gdvhead
      AnzVertragFound.gdvhead = AnzVertragFound.gdvhead + 1
      STORE FILE "GDVHEAD"
    END IF 
 
  ELSE IF VertFound% = 1 THEN 
    CALL gdvWriteLogOk("Vertrag Ñndern : " + STR$ (gdvcodekua%,"000000") + "," + STR$ (gdvLNR%,"000000") + "-" + STR$ (gdvAdrKu%,"000000") + "," + gdvAdrVSNR$ + "," + gdvN1$ + "," + gdvN2$ + "," + gdvN3$)
    SET STATUS "Vertrag Ñndern" + "   Anz in AGD10011:" + STR$ (adganz1%,"999999") + "/" + STR$ (adganz%,"999999")
 
    gdvPruef% = gdvLNR%
    lfdnrtotal% = gdvPruef% * 10000
  END IF 
 
   FILE "al020011"
 
  IF EXISTS (gdvKlfd%,lfdnr.al020011) THEN 
   SELECT FIRST FILE "al020011" INDEX lfdnr.al020011
   SELECT KEY gdvKlfd% LOCK FILE "al020011" INDEX lfdnr.al020011
   REM IF FOUND ("al020011") THEN
    gdvC200% = code200.al020011
    SELECT REMOVE FILE "al020011"
   REM END IF 
  END IF 
 
  BLANK FILE "al020011"
  code200.al020011 = gdvC200%
  STORE FILE "al020011"
  SELECT KEY gdvC200% LOCK FILE "al020011" INDEX code200.al020011
  
  gdvanzfeld% = FILEINFO ("alg20011",1)
  DIM gdvLeFelder$(gdvanzfeld%)
  FILLARRAY gdvLeFelder$,1
  FOR i% = 0 TO gdvanzfeld% - 1
   FTemp1$ = gdvLeFelder$(i%) + ".al020011"
   FTemp2$ = gdvLeFelder$(i%) + ".alg20011"
   FTemp1$$ = FTemp2$$
  NEXT i%
 
  lfdnr.al020011 = gdvPruef%
  lfdnrtotal.al020011 = lfdnrtotal%
  code200.al020011 = gdvC200%
  
  FILE "al020011"
  CALL QuickStore("al020011")
  MOUSE OFF 
  UNLOCK CURRENT FILE "al020011"
  SELECT FIRST FILE "kvertrag" INDEX lfdnr.kvertrag
  SELECT KEY gdvPruef% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
  REM CALL gdvWriteLogOk( STR$ (gdvAdrKU%,"000000") + " Vertrag hinzufÅgen : " + STR$ (gdvPruef%,"0000000"))
  
  REM Diese Angaben in die VHISTORY.SBF eintragen
 
  REM edit
    gdvedit.kvertrag = TODAY 
  REM VSNR     
  avt$ = LTRIM$ (vsnr.alg20011)
  gdvAdrVSNR$ = LTRIM$ (gdvAdrVSNR$)
  IF avt$ LIKE "3180037476*" THEN 
    REM CALL Fehler(gdvAdrVSNR$,vsnr.alg20011)
  END IF 
    REM vs_nr.kvertrag = LTRIM$ (vsnr.alg20011)
    vs_nr.kvertrag = LTRIM$ (gdvAdrVSNR1$)
    VS_Nr$ = LTRIM$ (vs_nr.kvertrag)
    IF VS_nr.kvertrag LIKE "3180037476" THEN 
      REM CALL Fehler("002727493900","")
    END IF 
  REM Sparte
    REM CALL Info( STR$ (gdvspart%),"")
    codeva.kvertrag = gdvspart%
  REM Gesellschaft
    REM CALL Info( STR$ (gdvGE%),"")
    codege.kvertrag = gdvGE%
    gesellschaft.kvertrag = gdvGNam$
  REM Inkassoart
    gdvInkArt$ = inkart.alg20011
    inkart.kvertrag = VAL (gdvInkArt$)
  REM WÑhrung
    REM CALL Fehler(wkey.alg20011,"")
    IF wkey.alg20011 = "DEM" OR wkey.alg20011 LIKE "*001*" THEN 
     codew.kvertrag = 1
     waehrung.kvertrag = "DM"
     waehrungbezeich.kvertrag = "DM"
     umrechnung.kvertrag = 1.95583
    ELSE 
      IF wkey.alg20011 = "EUR" THEN 
        umrechnung.kvertrag = 1
        waehrung.kvertrag = "EUR"
        waehrungbezeich.kvertrag = "EUR"
        codew.kvertrag = 3
      END IF 
    END IF 
  REM Vertragsbeginn
    gdvVBegin$ = DATE$ (verbeg.alg20011,"DDMMYYYY")
    REM CALL Info("Beginn",gdvVBegin$)
    IF LTRIM$ (gdvVBegin$) > "" THEN VS_Beginn.kvertrag = DAYS (gdvVBegin$)
  REM Vertragsablauf
    gdvVAblauf$ = DATE$ (verabl.alg20011,"DDMMYYYY")
    REM CALL Info("Ablauf",gdvVAblauf$)
    IF LTRIM$ (gdvVAblauf$) > "" THEN 
      IF LTRIM$ (gdvVBegin$) > "" THEN 
        REM teab% = DAYS (gdvVAblauf$) - VS_Beginn.kvertrag
        REM IF teab% > 0 AND teab% < 380 THEN 
        IF GAblDatOv$ <> "j" OR KÅndigung.kvertrag < 1 THEN 
          KÅndigung.kvertrag = DAYS (gdvVAblauf$)
        END IF 
        REM IF teab% > 0 THEN 
          REM IF verstat.alg20011 <> "4" THEN 
            REM KÅndigung.kvertrag = 0
          REM ELSE 
            REM KÅndigung.kvertrag = DAYS (gdvVAblauf$)
          REM END IF 
        REM ELSE 
          REM IF GAblDatOv$ <> "j" THEN KÅndigung.kvertrag = DAYS (gdvVAblauf$)
        REM END IF 
      ELSE 
        IF GAblDatOv$ <> "j" OR KÅndigung.kvertrag < 1 THEN KÅndigung.kvertrag = DAYS (gdvVAblauf$)
      END IF 
    END IF 
 
  REM Feststellen, ob Versicherungssteuer anliegt 0=JA 1=NEIN
    gdvKNZVS$ = KNZVS.alg20011
    mwst% = 0
    IF vs_nr.kvertrag LIKE "3180037476*" THEN 
      REM CALL Fehler("3180037476",KNZVS.alg20011)
    END IF 
    REM IF KNZVS.alg20011 LIKE "0" THEN 
      QuickGEVA$ = STR$ (codege.kvertrag,"000000") + STR$ (codeva.kvertrag,"000000")
      IF EXISTS (QuickGEVA$,QCodeGEVA.vprodukt) THEN 
        SELECT FIRST FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
        SELECT KEY QuickGEVA$ FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
        mwst% = mwst.vprodukt
      ELSE 
        BLANK FILE "VProdukt"
        codevp% = SER ("VPRODUKT",1)
        codevp.vprodukt = codevp%
        codege.vprodukt = codege.kvertrag
        codeva.vprodukt = codeva.kvertrag
        gesellschaft.vprodukt = gdvGNam$
        mwst.vprodukt = gdvSparteVST%
        mwst% = gdvSparteVST%
        sparte.vprodukt = gdvSparteName$
        QCodeGEVA.vprodukt = STR$ (CodeGE.vprodukt,"000000") + STR$ (Codeva.vprodukt,"000000")
        QCodeGEVA$ = QCodeGEVA.vprodukt
        GesSpa.Vprodukt = Gesellschaft.vprodukt + Sparte.vprodukt
       STORE FILE "VPRODUKT"
       UNLOCK CURRENT FILE "vprodukt"
       codevp.kvertrag = codevp%
      END IF 
    REM END IF 
    REM Beitrag
    GMwSt% = mwst%
    IF mwst% = 0 THEN 
      REM beitr1ab1$ = STR$ (Beitwe.alg20011,",999999.00")
      Beitrag.kvertrag = Beitwe.alg20011
      NettoBeitrag.kvertrag = Beitwe.alg20011
    ELSE 
      beitr1% = Beitwe.alg20011
      beitr1$ = STR$ (beitr1%,"999999.00")
      bmwst% = (Beitwe.alg20011 * mwst% / 100)
      bmwst$ = STR$ (bmwst%,"999999.00")
      bmwst2% = VAL (bmwst$)
      Beitrag.kvertrag = Beitwe.alg20011 + bmwst2%
      beitr1$ = STR$ (Beitrag.kvertrag,"999999.00")
      NettoBeitrag.kvertrag = Beitwe.alg20011
    END IF 
    REM / 100
 REM Zahlweise
    NUMBASE "z99"
    gdvtemp$ = zahlart.alg20011
    SELECT CASE gdvtemp$
    CASE "1"
      gdvZahlart% = 1
    CASE "2"
      gdvZahlart% = 2
    CASE "4"
      gdvZahlart% = 4
    CASE "6"
      REM einmalig
      gdvZahlart% = 0
    CASE "8"
      gdvZahlart% = 12
    END SELECT 
    ZW.kvertrag = gdvZahlart%
    REM Vertragsstatus
    CodeVStatusOld.kvertrag = CodeVStatus.kvertrag
    VStatusTxTOld.kvertrag = VStatusTxT.kvertrag
    CodeVStatus.kvertrag = VAL (verstat.alg20011)
    GDVStatus.kvertrag = CodeVStatus.kvertrag
    SELECT CASE verstat.alg20011
    CASE "1"
     VStatusTxT.kvertrag = "lebend"
    CASE "2"
     VStatusTxT.kvertrag = "leben / kurzfristig / unterjÑhrig"
    CASE "3"
      VStatusTxT.kvertrag = "ruhend / Anwartschaft"
    CASE "4"
      VStatusTxT.kvertrag = "storniert"
    CASE "5"
      VStatusTxT.kvertrag = "ruhend / beitragsfrei"
    CASE "6"
      VStatusTxT.kvertrag = "beitragsfrei"
    CASE "7"
      VStatusTxT.kvertrag = "beitragsfrei durch Leistung"
    CASE "8"
      VStatusTxT.kvertrag = "Beitragsstundung"
    CASE "9"
      VStatusTxT.kvertrag = "Sonstiges"
    END SELECT 
    GDVStatusTXT.kvertrag = VStatusTxT.kvertrag
    IF VertFound% = 0 THEN 
      CodeVStatusOld.kvertrag = VAL (verstat.alg20011)
      VStatusTxTOld.kvertrag = VStatusTxT.kvertrag
    END IF 
  REM HauptfÑlligkeit
  REM hauptf.alg20011
    gdvVHauptf$ = DATE$ (hauptf.alg20011,"DDMMYYYY")
    REM CALL Info("HauptfÑllig",gdvVHauptf$)
    IF LTRIM$ (gdvVHauptf$) > "" THEN hauptfÑlligkeit.kvertrag = MONTH (gdvVHauptf$)
  REM énderungsdatum
    gdvAeDat$ = DATE$ (aedat.alg20011,"DDMMYYYY")
    REM CALL Info("AeDat",gdvAeDat$)
    IF LTRIM$ (gdvAeDat$) > "" THEN 
      REM GAntDatOv$
      REM CALL Fehler( DATE$ (Antragsdatum.kvertrag,"0d.mm.yyyy"),gdvAeDat$)
      IF Antragsdatum.kvertrag > 0 THEN 
        IF GAntDatOv$ <> "j" THEN 
          Antragsdatum.kvertrag = DAYS (gdvAeDat$)
        END IF 
      ELSE 
        Antragsdatum.kvertrag = DAYS (gdvAeDat$)
      END IF 
    END IF 
  REM Restlaufzeit 
    gdvRestLf% = restver.alg20011
    VS_Dauer.kvertrag = gdvRestLf%
  REM CODE200
   REM 2710991
    REM gdvC200% = SER (kvertrag,1)
    code200.kvertrag = gdvC200%
 REM ***************************************************************************************************
 REM            SONDERVEREINBARUNGEN
   REM alles aus kdg35011
     CALL DFile (8,"kdg35011" + _fpw$)
     FILE "kdg35011"
     INDEX gdvKU.kdg35011
     SELECT FIRST FILE "kdg35011"
     SELECT KEY gdvserial% FILE "kdg35011" INDEX gdvKu.kdg35011
     notizkfz$ = ""
     WHILE NOT EOF ("kdg35011") AND gdvKu.kdg35011 = gdvserial%
     vs1$ = LTRIM$ (vsnr.kdg35011)
       IF LTRIM$ (vsnr.kdg35011) = LTRIM$ (VS_Nr$) THEN 
         notizkfz$ = notizkfz$ + klNR.kdg35011 + " " + kltxt.kdg35011 + " " + zuang.kdg35011 + CHR$ (13) + CHR$ (10)
       END IF 
       SELECT NEXT FILE "kdg35011"
     WEND 
     IF notizkfz$ <> "" THEN 
       notizkfz$ = "Sondervereinbarungen durch GDV-Import: " + notizkfz$
       IF notiz.kvertrag <> notizkfz$ THEN 
         alen% = LEN (notiz.kvertrag)
         blen% = 4000 - alen%
         notiz.kvertrag = notiz.kvertrag + LEFT$ (notizkfz$,blen%)
         REM notiz.kvertrag = LEFT$ ((notiz.kvertrag + notizkfz$),4000)
       ELSE 
         notiz.kvertrag = LEFT$ (notizkfz$,4000)
       END IF 
     END IF 
 REM ******************************************************************************************************
 
  FILE "kvertrag"
  REM CALL Fehler("Quickst-kv","")
  IF Geurofin$ = "TRUE" THEN 
    gdvVMnro$ = gdvVMNr$
    gdvVMNr1$ = RIGHT$ (gdvVMNr$,5)
    gdvVMNr$ = gdvVMNr1$
  END IF 
  REM CALL Fehler(gdvVMNro$,gdvVMNr$)
  GDVAgentNR.kvertrag = gdvVMNr$
  gdsvagnrtmp% = VAL (gdvVMNr$)
  REM CALL Fehler(gdvVMNr$,"")
  REM 30082002 Mitarbeiter an Hand der Agenturnummer zuweisen
  IF EXISTS (gdvVMNr$,AGNummer.maadrag) AND LTRIM$ (gdvVMNr$) <> "" THEN 
    SELECT FIRST FILE "maadrag" INDEX AGNummer.maadrag
    SELECT KEY gdvVMNr$ FILE "maadrag" INDEX AGNummer.maadrag
    
    IF codema.maadrag > 0 THEN 
      SELECT FIRST FILE "maadr" INDEX codema.maadr
      SELECT KEY codema.maadrag FILE "maadr" INDEX codema.maadr
      IF codema.kvertrag < 1 THEN 
        codema.kvertrag = codema.maadrag
      END IF 
    END IF 
  END IF 
  IF GBewertberech$ LIKE "TRUE" THEN 
    bewertold% = bewertungssumme.kvertrag
    bewertungssumme.kvertrag = 0
    proviabold% = proviab.kvertrag
    CALL FeldBerKV()
    IF Bewertungssumme.kvertrag = 0 THEN bewertungssumme.kvertrag = bewertold%
    proviab.kvertrag = proviabold%
  END IF 
  CALL QuickStore("kvertrag")
  codevttmp% = lfdnr.kvertrag
  MOUSE OFF 
  UNLOCK CURRENT FILE "kvertrag"
     REM CALL Fehler( STR$ (gdvAdrSparte%,"999"),"")
   
     SELECT CASE gdvAdrSparte%
       CASE 50
       REM * KFZ *
         CALL gdvKFZ(gdvserial%,gdvspart%,gdvGE%,gdvGName$,gdvPruef%)
       CASE 40
       REM * Haftpflicht *
         CALL gdvHaft(gdvserial%,gdvC200%,gdvPruef%,lfdnrtotal%,gdvPruef%)
       CASE 30
       REM * Unfall *
         CALL gdvUnfall(gdvserial%,gdvC200%,gdvPruef%,lfdnrtotal%,gdvPruef%)
       CASE 10
       REM * Leben *
         CALL gdvLeben(gdvserial%,gdvC200%,gdvPruef%,lfdnrtotal%,gdvPruef%)
       CASE 130
       REM * Verbundene Hausrat *
        CALL gdvHausrat(gdvserial%,gdvC200%,gdvPruef%,lfdnrtotal%,gdvPruef%)
       CASE 110
       REM * Glas *
        CALL gdvGlas(gdvserial%,gdvC200%,gdvPruef%,lfdnrtotal%,gdvPruef%)
       CASE 140
       REM * Verbundene GebÑude *
        CALL gdvGebaude(gdvserial%,gdvC200%,gdvPruef%,lfdnrtotal%,gdvPruef%)
       CASE 20
       REM * Kranken *
        CALL gdvKranken(gdvserial%,gdvC200%,gdvPruef%,lfdnrtotal%,gdvPruef%)
       CASE 70
       REM * Rechtsschutz *
        CALL gdvRecht(gdvserial%,gdvC200%,gdvPruef%,lfdnrtotal%,gdvPruef%)
       CASE 80,81,82,83,231,89,90,99,100,109,120,150,180,181,210
       REM * Feuer-Industrie / Gewerbl. Sach *  
        CALL gdvFeuer(gdvserial%,gdvC200%,gdvPruef%,lfdnrtotal%,gdvPruef%)
       CASE 510
       REM * Verkehrsservice *
        CALL gdvVerkehr(gdvserial%,gdvC200%,gdvPruef%,lfdnrtotal%,gdvPruef%)
       CASE 171,172,174,175,176,179,232,290
       REM * Technische *
        CALL gdvTech(gdvserial%,gdvC200%,gdvPruef%,lfdnrtotal%,gdvPruef%)
        CASE 190
       REM * Transport *
        CALL gdvTrans(gdvserial%,gdvC200%,gdvPruef%,lfdnrtotal%,gdvPruef%)
       CASE 60,160,290,233,293,294,299
       REM * Nicht definierte Sparten *
        CALL gdvUndef(gdvserial%,gdvC200%,gdvPruef%,lfdnrtotal%,gdvPruef%)
       END SELECT 
eAddVert13042001: 
 END SUB 
 
  
 
SUB gdvKFZ(gdvserial%,gdvspart%,gdvGE%,gdvGName$,gdvlf%)
   SELECT FIRST FILE "Kvertrag" INDEX lfdnr.kvertrag
   REM SELECT KEY gdvlf% FILE "kvertrag" INDEX lfdnr.kvertrag
   SELECT KEY gdvlf% LOCK FILE "Kvertrag" INDEX lfdnr.kvertrag
   IF vs_nr.kvertrag LIKE "683700503632" THEN 
     REM CALL Fehler("KFZ","683700503632")
   END IF 
   CodeGE.kvertrag = CodeGE.geadr
   REM Alles aus Datei alg20011
     FILE "alg20011"
     SELECT FIRST FILE "alg20011"
     INDEX gdvKu.alg20011
     SELECT KEY gdvserial% FILE "alg20011" INDEX gdvKu.alg20011
     satznr% = VAL (satznr.alg20011)
     IF satznr% = 0 OR satznr% = 1 THEN 
     ELSE 
       SELECT NEXT FILE "alg20011" INDEX gdvKu.alg20011
     END IF 
     gdvseral2% = gdvKu.alg20011
     satznr% = VAL (satznr.alg20011)
    REM Inkassoart
      gdvInkArt$ = inkart.alg20011
      REM CALL Info(gdvInkArt$,"")
      inkart.kvertrag = VAL (gdvInkArt$)
    REM Vertragsbeginn
      gdvVBegin$ = DATE$ (verbeg.alg20011,"DDMMYYYY")
      IF LTRIM$ (gdvVBeginn$) > "" THEN VS_Beginn.kvertag = DAYS (gdvVBegin$)
    REM Vertragsablauf
      gdvVAblauf$ = DATE$ (verabl.alg20011,"DDMMYYYY")
      IF LTRIM$ (gdvVAblauf$) > "" THEN 
        IF GAblDatOv$ <> "j" OR KÅndigung.kvertrag < 1 THEN KÅndigung.kvertrag = DAYS (gdvVAblauf$)
        IF verstat.alg20011 = "4" THEN 
          KÅndigung.kvertrag = DAYS (gdvVAblauf$)
        END IF 
      END IF 
    REM Zahlweise
      REM NUMBASE "z99"
      gdvtemp$ = zahlart.alg20011
      SELECT CASE gdvtemp$
       CASE "1"
        gdvZahlart% = 1
       CASE "2"
        gdvZahlart% = 2
       CASE "4"
        gdvZahlart% = 4
       CASE "6"
        REM einmalig
        gdvZahlart% = 0
       CASE "8"
        gdvZahlart% = 12
      END SELECT 
      ZW.kvertrag = gdvZahlart%
    REM énderungsdatum 
      NUMBASE "999999999.00"
      gdvAeDat$ = DATE$ (aedat.alg20011,"DDMMYYYY")
      REM CALL Fehler( DATE$ (Antragsdatum.kvertrag,"0d.mm.yyyy"),gdvAeDat$)
      IF LTRIM$ (gdvAeDat$) > "" THEN 
        IF Antragsdatum.kvertrag > 0 THEN 
          IF GAntDatOv$ <> "j" THEN 
            Antragsdatum.kvertrag = DAYS (gdvAeDat$)
          END IF 
        ELSE 
          Antragsdatum.kvertrag = DAYS (gdvAeDat$)
        END IF 
      END IF 
    REM Restlaufzeit 
      gdvRestLf% = restver.alg20011
      VS_Dauer.kvertrag = gdvRestLf%
   
    REM Alles aus krg21011
     CALL DFile (8,"krg21011" + _fpw$)
     FILE "krg21011"
     SELECT FIRST FILE "krg21011"
     INDEX gdvKu.krg21011
     SELECT KEY gdvserial% FILE "krg21011" INDEX gdvKu.krg21011
     REM IF VSNR.krg21011 LIKE "291890150999" THEN CALL Fehler(gdvAdrVSNR$,VSNR.krg21011)
     VS_Nr.kvertrag = LTRIM$ (VSNR.krg21011)
     vs_nr$ = VS_Nr.kvertrag
     REM IF vs_nr$ LIKE "1038859" THEN CALL Fehler(vs_nr$,"")
    REM Hersteller-Name
      gdvhstname$ = LTRIM$ (hstname.krg21011)
      Fabrikat.kvertrag = gdvhstname$
    REM HST-Nr/Typ-Nr
      gdvTypNr$ = LTRIM$ (hstnr.krg21011) + "/" + LTRIM$ (typnr.krg21011)
      typ_Nr.kvertrag = gdvTypNr$
    REM FahrzeigIdNummer
      gdvKfzId$ = LTRIM$ (kfzidnr.krg21011)
      Fahrgestell_Nr.kvertrag = gdvKfzId$
    REM StÑrke 
      gdvStarke% = st.krg21011
      FahrzeugstÑrke.kvertrag = gdvStarke% / 10
    REM Kennzeichen
      gdvKennz$ = LTRIM$ (amtknz.krg21011)
      Kennzeichen.kvertrag = gdvKennz$
    REM Erstzulassung
      gdvErst$ = DATE$ (ez.krg21011,"DDMMYYYY")
      IF LTRIM$ (gdvErst$) > "" THEN Erstzlassung.kvertrag = DAYS (gdvErst$)
    REM Fahrzeugwert 
      gdvWert% = nwert%
      Fahrzeugwert.kvertrag = gdvWert%


     REM Alles aus krg21012  06102005
     CALL DFile (8,"krg21012" + _fpw$)
     FILE "krg21012"
     SELECT FIRST FILE "krg21012"
     INDEX gdvKu.krg21012
     SELECT KEY gdvserial% FILE "krg21012" INDEX gdvKu.krg21012
     NotizKFZ1$ = ""
     NotizKFZ1$ = "Fahrzeugart: " + Fahrzeugart.krg21012 + CHR$ (13) + CHR$ (10)
     IF artKennzeichen.krg21012 <> "" THEN 
       REM 01 = Normal
       REM 02 = GrÅn
       REM 03 = Kurzzeit (öberfÅhrungskennzeichen)
       REM 04 = Saison
       REM 05 = Behîrden
       REM 06 = Ausfuhrkennzeichen (ehemals Zoll)
       REM 07 = Historische Fahrzeuge
       REM 08 = ohne amtl. Kennzeichen
       REM 99 = Sonstige 
       SELECT CASE ArtKennzeichen.krg21012
         CASE "01"
           NotizKFZ1$ = NotizKFZ1$ + "Art Kennzeichen: Normal" + CHR$ (13) + CHR$ (10)
         CASE "02"
           NotizKFZ1$ = NotizKFZ1$ + "Art Kennzeichen: GrÅn" + CHR$ (13) + CHR$ (10)
         CASE "03"
           NotizKFZ1$ = NotizKFZ1$ + "Art Kennzeichen: Kurzzeit (öberfÅhrungskennzeichen)" + CHR$ (13) + CHR$ (10)
         CASE "04"
           NotizKFZ1$ = NotizKFZ1$ + "Art Kennzeichen: Saison" + CHR$ (13) + CHR$ (10)
         CASE "05"
           NotizKFZ1$ = NotizKFZ1$ + "Art Kennzeichen: Behîrden" + CHR$ (13) + CHR$ (10)
         CASE "06"
           NotizKFZ1$ = NotizKFZ1$ + "Art Kennzeichen: Ausfuhrkennzeichen (ehemals Zoll)" + CHR$ (13) + CHR$ (10)
         CASE "07"
           NotizKFZ1$ = NotizKFZ1$ + "Art Kennzeichen: Historische Fahrzeuge" + CHR$ (13) + CHR$ (10)
         CASE "08"
           NotizKFZ1$ = NotizKFZ1$ + "Art Kennzeichen: ohne amtl. Kennzeichen" + CHR$ (13) + CHR$ (10)
         CASE "99"
           NotizKFZ1$ = NotizKFZ1$ + "Art Kennzeichen: Sonstige" + CHR$ (13) + CHR$ (10)
       END SELECT 
     END IF 
     IF LandKennzeich.krg21012 <> "" THEN 
       NotizKFZ1$ = NotizKFZ1$ + "Land des amtl. Kennzeichens: " + LandKennzeich.krg21012 + CHR$ (13) + CHR$ (10)
     END IF 

     IF Baujahr.krg21012 <> "" THEN 
       NotizKFZ1$ = NotizKFZ1$ + "Baujahr: " + Baujahr.krg21012 + CHR$ (13) + CHR$ (10)
     END IF 

     IF Erstzulvn.krg21012 <> "" THEN 
       NotizKFZ1$ = NotizKFZ1$ + "Erstzulassung auf VN: " + Erstzulvn.krg21012 + CHR$ (13) + CHR$ (10)
     END IF 
     IF ArtZulassung.krg21012 <> "" THEN 
       IF ArtZulassung.krg21012 = "01" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Art der Zulassung: Tageszulassung" + CHR$ (13) + CHR$ (10)
       END IF 
       IF ArtZulassung.krg21012 = "02" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Art der Zulassung: Werkszulassung" + CHR$ (13) + CHR$ (10)
       END IF 
       IF ArtZulassung.krg21012 = "03" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Art der Zulassung: Sonstige" + CHR$ (13) + CHR$ (10)
       END IF 
     END IF 
     IF anzVorbesitzer.krg21012 > 0 THEN 
       NotizKFZ1$ = NotizKFZ1$ + "Anzahl Vorbesitzer: " + STR$ (anzVorbesitzer.krg21012,"99") + CHR$ (13) + CHR$ (10)
     END IF 
     IF jFahrlstg.krg21012 > 0 THEN 
       NotizKFZ1$ = NotizKFZ1$ + "jÑhrliche Fahrleistung: " + STR$ (jFahrlstg.krg21012,",999999") + CHR$ (13) + CHR$ (10)
     END IF 
     IF Garage.krg21012 <> "" THEN 
       IF Garage.krg21012 = "00" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Garage: unbekannt" + CHR$ (13) + CHR$ (10)
       END IF 
       IF Garage.krg21012 = "02" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Garage: nicht vorhanden" + CHR$ (13) + CHR$ (10)
       END IF 
       IF Garage.krg21012 = "03" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Garage: abschlie·bare Einzel- und Doppelgarage" + CHR$ (13) + CHR$ (10)
       END IF 
       IF Garage.krg21012 = "04" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Garage: Mehrfach / Tiefgarage (nicht abschlie·bar)" + CHR$ (13) + CHR$ (10)
       END IF 
       IF Garage.krg21012 = "05" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Garage: gesichertes GrundstÅck / Carport" + CHR$ (13) + CHR$ (10)
       END IF 
     END IF 
     IF Nutzungsart.krg21012 <> "" THEN 
       IF Nutzungsart.krg21012 = "01" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Nutzungsart: öberwiegend geschÑftlich " + CHR$ (13) + CHR$ (10)
       END IF 
       IF Nutzungsart.krg21012 = "02" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Nutzungsart: Privat" + CHR$ (13) + CHR$ (10)
       END IF 
       IF Nutzungsart.krg21012 = "03" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Nutzungsart: Taxi" + CHR$ (13) + CHR$ (10)
       END IF 
       IF Nutzungsart.krg21012 = "04" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Nutzungsart: Vermietung" + CHR$ (13) + CHR$ (10)
       END IF 
       IF Nutzungsart.krg21012 = "05" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Nutzungsart: Sonstige" + CHR$ (13) + CHR$ (10)
       END IF 
     END IF 
     IF Eigentumsverh.krg21012 <> "" THEN 
       IF Eigentumsverh.krg21012 = "1" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "EigentumsverhÑltnis (Fahrzeug): Eigentum VN" + CHR$ (13) + CHR$ (10)
       END IF 
       IF Eigentumsverh.krg21012 = "2" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "EigentumsverhÑltnis (Fahrzeug): Eigentum / Finanzierung" + CHR$ (13) + CHR$ (10)
       END IF 
       IF Eigentumsverh.krg21012 = "3" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "EigentumsverhÑltnis (Fahrzeug): Leasing" + CHR$ (13) + CHR$ (10)
       END IF 
     END IF 
     IF Wohneigentum.krg21012 <> "" THEN 
       IF Wohneigentum.krg21012 = "1" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Wohneigentum: Selbstgenutztes Ein/ Zweifamilienhaus" + CHR$ (13) + CHR$ (10)
       END IF 
       IF Wohneigentum.krg21012 = "2" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Wohneigentum: Mehrfamilienhaus" + CHR$ (13) + CHR$ (10)
       END IF 
       IF Wohneigentum.krg21012 = "3" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Wohneigentum: Eigentumswohnung" + CHR$ (13) + CHR$ (10)
       END IF 
       IF Wohneigentum.krg21012 = "4" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Wohneigentum: Sonstiges" + CHR$ (13) + CHR$ (10)
       END IF 
       IF Wohneigentum.krg21012 = "5" THEN 
         NotizKFZ1$ = NotizKFZ1$ + "Wohneigentum: Nein" + CHR$ (13) + CHR$ (10)
       END IF 
     END IF 

     REM alles aus kdg35011
     CALL DFile (8,"kdg35011" + _fpw$)
     FILE "kdg35011"
     SELECT FIRST FILE "kdg35011"
     INDEX gdvKu.kdg35011
     SELECT FIRST FILE "kdg35011" INDEX gdvKu.kdg35011
     SELECT KEY gdvserial% FILE "kdg35011" INDEX gdvKu.kdg35011
     WHILE NOT EOF ("kdg35011") AND gdvKu.kdg35011 = gdvserial%
       le1% = LEN (NotizKFZ1$) + LEN (kltxt.kdg35011) + 3
       IF le1% <= 4000 THEN 
         NotizKFZ1$ = NotizKFZ1$ + kltxt.kdg35011 + CHR$ (13) + CHR$ (10)
       END IF 
       SELECT NEXT FILE "kdg35011" INDEX gdvKu.kdg35011
     WEND 
     Notiz.Kvertrag = LEFT$ (NotizKFZ1$,4000)



     REM alles aus krg22061
     CALL DFile (8,"krg22061" + _fpw$)
     FILE "krg22061"
     SELECT FIRST FILE "krg22061"
     INDEX gdvKu.krg22061
     SELECT FIRST FILE "krg22061" INDEX gdvKu.krg22061
     SELECT KEY gdvserial% FILE "krg22061" INDEX gdvKu.krg22061
     NotizKFZ1$ = ""
     WHILE NOT EOF ("krg22061") AND gdvKu.krg22061 = gdvserial%
       le1% = LEN (NotizKFZ1$) + LEN (bausbez.krg22061) + 3
       IF le1% <= 4000 THEN 
         NotizKFZ1$ = NotizKFZ1$ + bausbez.krg22061 + CHR$ (13) + CHR$ (10)
       END IF 
       SELECT NEXT FILE "krg22061" INDEX gdvKu.krg22061
     WEND 
     Notiz.Kvertrag = LEFT$ (Notiz.Kvertrag + NotizKFZ1$,4000)



   REM Alles aus krg22011
     CALL DFile (8,"krg22011" + _fpw$)
     FILE "krg22011"
     INDEX gdvKu.krg22011
     SELECT FIRST FILE "krg22011"
     SELECT KEY gdvserial% FILE "krg22011" INDEX gdvKu.krg22011
     satznr% = VAL ( RIGHT$ (leerst.krg22011,1))
     IF satznr% = 0 OR satznr% = 1 THEN 
     ELSE 
       SELECT NEXT FILE "krg22011" INDEX gdvKu.krg22011
     END IF 

    REM Haftpflicht Deckungsart
      gdvtemp% = khdart.krg22011
      SELECT CASE gdvtemp%
       CASE 11
        gdvHDArt$ = "unbeg"
        REM 50 mio
       CASE 18
        gdvHDArt$ = "5 Mio"
        REM 2,5 Mio
      END SELECT 
      HaftpflT.kvertrag = gdvHDArt$
    REM kvertrag - typklassehp
      IF LTRIM$ (khtypk.krg22011) <> "" THEN 
        gdvHaTK$ = LTRIM$ (khtypk.krg22011)
        typklassehp.kvertrag = gdvHaTK$
      END IF 
    REM kvertrag - reg_haftpflicht
      gdvHaRK$ = LTRIM$ (khtg.krg22011)
      Reg_Haftpflicht.kvertrag = gdvHaRK$
    REM kvertag - hv_sfr
      gdvHaBs% = khbtgs.krg22011
      hv_sfr.kvertrag = gdvHaBs%
    REM Haftpflicht-DeckDat
      gdvHDekDat$ = DATE$ (khbeg.krg22011,"DDMMYYYY")
      IF LTRIM$ (gdvHDekDat$) > "" THEN HaftpflichtDat.kvertrag = DAYS (gdvHDekDat$)
    REM Haftpflicht-Beitrag
      NUMBASE "99999999.0000"
      gdvHaBei% = khbtg.krg22011
      REM IF gdvZahlart% = 2 THEN gdvHaBei% = gdvHaBei% / 10
      REM IF gdvZahlart% = 4 OR gdvZahlart% = 12 THEN gdvHaBei% = gdvHaBei% / 10
      IF vs_nr.kvertrag LIKE "K 501 919927 0001" THEN 
        REM CALL Fehler("K 501 919927 0001","")
      END IF 
      gdvHaBei$ = STR$ ((gdvHaBei% / 10),"999999.00")
      gdvHaBei% = VAL (gdvHaBei$)
      amwst% = (gdvHaBei% * GMwSt% / 100)
      amwst$ = STR$ (amwst% + 0.005,"999999.00")
      amwst2% = VAL (amwst$)
      gdvHaBei% = gdvHaBei% + amwst2%
 
      REM gdvHaBei% = gdvHaBei% + (gdvHaBei% * 15)
      KFZ_VSBH.kvertrag = gdvHaBei%
    REM SFR-Vorjahr
      kfzsufe1vj.kvertrag = LEFT$ (kfzsufe1.kvertrag,4)
      hv_sfrvj.kvertrag = hv_sfr.kvertrag
    REM SFR-Aktuell
      kfzsufe1.kvertrag = LTRIM$ (khsfs.krg22011)
      hv_sfr.kvertrag = gdvHaBs%
 
   REM Alles aus krg22031
     CALL DFile (8,"krg22031" + _fpw$)
     FILE "krg22031"
     SELECT FIRST FILE "krg22031"
     INDEX gdvKu.krg22031
     satzart31$ = RIGHT$ (leerst.krg22031,1)
     satzart31% = VAL (satzart31$)
     REM CALL Fehler("satzart31$",satzart31$)
     IF satzart31% = 0 OR satzart31% = 1 THEN 
     ELSE 
       SELECT NEXT FILE "krg22031" INDEX gdvKu.krg22031
     END IF 
     satzart31$ = RIGHT$ (leerst.krg22031,1)
     gdvserialabc$ = STR$ (gdvserial%,"000000")
     sbtk$ = STR$ (sbtk.krg22031,"000000")
     IF EXISTS (gdvserial%,gdvKu.krg22031) THEN 
       kfz_tk.kvertrag = "j"
       SELECT KEY gdvserial% FILE "krg22031" INDEX gdvKu.krg22031
       REM Tk Deckungsart
       gdvtemp% = kftdart.krg22031
       SELECT CASE gdvtemp%
         CASE 71
          gdvTDArt% = 0
         CASE 72
          gdvTDArt% = 150
         CASE 73
          gdvTDArt% = 300
         CASE 74
          gdvTDArt% = 1000
         CASE 76
          gdvTDArt% = 2000
         CASE 77
           gdvTDArt% = 5000
       END SELECT 
       REM TK_Betrag.kvertrag = gdvTDArt%
       TK_Betrag.kvertrag = sbtk.krg22031
       REM kvertrag - typklasse
       IF LTRIM$ (kfttk.krg22031) <> "" THEN 
         gdvTkTK$ = LTRIM$ (kfttk.krg22031)
         typklasse.kvertrag = gdvTkTK$
       END IF 
       REM kvertrag - reg_teilkasko 
       gdvTkRK$ = LTRIM$ (kfttg.krg22031)
       Reg_Teilkasko.kvertrag = gdvTkRK$
       REM Tk-DeckDat
       REM gdvTDekDat$ = DATE$ (kftbeg.krg22031,"DDMMYYYY")
       REM Tk-Beitrag
       gdvTkBei% = kftbtg.krg22031
       REM IF gdvZahlart% = 2 THEN gdvTkBei% = gdvTkBei% / 10
       REM IF gdvZahlart% = 4 OR gdvZahlart% = 12 THEN gdvTkBei% = gdvTkBei%:REM / 10
       gdvTkBei$ = STR$ ((gdvTkBei% / 10),"999999.00")
       gdvTkBei% = VAL (gdvTkBei$)
       amwst% = (gdvTkBei% * GMwSt% / 100)
       amwst$ = STR$ (amwst% + 0.005,"999999.00")
       amwst2% = VAL (amwst$)
 
       gdvTkBei% = gdvTkBei% + amwst2%
       REM gdvTkBei% = gdvTkBei% + (gdvTkBei% * 15)
       kfz_vsbk.kvertrag = gdvTkBei%
     ELSE 
       kfz_tk.kvertrag = "n"
     END IF 
    
   REM Alles aus Datei krg22021
     CALL DFile (8,"krg22021" + _fpw$)
     FILE "krg22021"
     SELECT FIRST FILE "krg22021"
     INDEX gdvKu.krg22021
     IF EXISTS (gdvserial%,gdvKu.krg22021) = - 1 THEN 
       kfz_vk.kvertrag = "j"
       kfz_tk.kvertrag = "j"
       SELECT KEY gdvserial% FILE "krg22021" INDEX gdvKu.krg22021
       satzart21$ = RIGHT$ (leerst.krg22021,1)
       satzart21% = VAL (satzart21$)
       REM CALL Fehler("satzart21$",satzart21$)
       IF satzart21% = 0 OR satzart21% = 1 THEN 
       ELSE 
         SELECT NEXT FILE "krg22021" INDEX gdvKu.krg22021
       END IF 
       REM kvertrag - vk Dackungsart
       gdvtemp% = kfvdart.krg22021
       SELECT CASE gdvtemp%
         CASE 21
           gdvVDArt% = 0
         CASE 22,32
           gdvVDArt% = 300
         CASE 23,33
           gdvVDArt% = 650
         CASE 24,34
           gdvVDArt% = 1000
         CASE 25,35
           gdvVDArt% = 2000
         CASE 26,36
           gdvVDArt% = 5000
       END SELECT 
     REM VK_Betrag.kvertrag = gdvVDArt%
       VK_Betrag.kvertrag = sbvk.krg22021
       TK_Betrag.kvertrag = sbtkvk.krg22021
     REM kvertrag - vk-Typklasse
       IF LTRIM$ (kfvtk.krg22021) <> "" THEN 
         gdvVkTK$ = LTRIM$ (kfvtk.krg22021)
         TypklasseVK.kvertrag = gdvVkTK$
       END IF 
     REM kvertrag - vk-Regionalklasse
       gdvVkRK$ = LTRIM$ (kfvtg.krg22021)
       Reg_Vollkasko.kvertrag = gdvVkRK$
     REM kvertrag - vk-Beitragssatz
       gdvVkBs% = kfvbtgs.krg22021
       VK_SFR.kvertrag = gdvVkBs%
     REM kvertrag - vk-DeckDat
       gdvVDekDat$ = DATE$ (kfvbeg.krg22021,"DDMMYYYY")
       REM IF LTRIM$ (gdvVDekDat$) > "" THEN DAYS (gdvVDekDat$)
     REM kvertrag - kfz_vsbk
       gdvVkBei% = kfvbtg.krg22021
       REM IF gdvZahlart% = 2 THEN gdvVkBei% = gdvVkBei% / 10
       REM IF gdvZahlart% = 4 OR gdvZahlart% = 12 THEN gdvVkBei% = gdvVkBei% / 10
       gdvVkBei$ = STR$ ((gdvVkBei% / 10),"999999.00")
       gdvVkBei% = VAL (gdvVkBei$)
       amwst% = (gdvVkBei% * GMwSt% / 100)
       amwst$ = STR$ (amwst% + 0.005,"999999.00")
       amwst2% = VAL (amwst$)
 
       gdvVkBei% = gdvVkBei% + amwst2%
       kfz_vsbk.kvertrag = gdvVkBei%
     REM SFR-Vorjahr
       kfzsufe2vj.kvertrag = kfzsufe2.kvertrag
       vk_sfrvj.kvertrag = vk_sfr.kvertrag
     REM SFR-Aktuell
       kfzsufe2.kvertrag = LTRIM$ (kfvsfs.krg22021)
       vk_sfr.kvertrag = gdvVkBs%
     ELSE 
       kfz_vk.kvertrag = "n"
     END IF 
 
   REM Alles aus Datei krg22041
     CALL DFile (8,"krg22041" + _fpw$)
     FILE "krg22041"
     SELECT FIRST FILE "krg22041"
     INDEX gdvKu.krg22041
     IF EXISTS (gdvserial%,gdvKu.krg22041) = - 1 THEN 
     kfz_unfall.kvertrag = "j"
     SELECT KEY gdvserial% FILE "krg22041" INDEX gdvKu.krg22041
    REM kvertrag - kfz_undeck
      REM gdvUDekDat$ = DATE$ (kubeg.krg22041,"DDMMYYYY")
      REM IF LTRIM$ (gdvUDekDat$) > "" THEN kfz_deck.kvertrag = DAYS (gdvUDekDat$)
    REM kvertrag -  kfz_vsbu
      gdvUBei% = kubtg.krg22041
      REM IF gdvZahlart% = 2 THEN gdvUBei% = gdvUBei% / 10
      REM IF gdvZahlart% = 4 OR gdvZahlart% = 12 THEN gdvUBei% = gdvUBei% / 10
      gdvUBei$ = STR$ ((gdvUBei% / 10) + 0.005,"999999.00")
      gdvUBei% = VAL (gdvUBei$)
       amwst% = (gdvUBei% * GMwSt% / 100)
       amwst$ = STR$ (amwst% + 0.005,"999999.00")
       amwst2% = VAL (amwst$)
 
      gdvUBei% = gdvUBei% + amwst2%
      REM gdvUBei% = gdvUBei% + (gdvUBei% * 15)
      kfz_vsbu.kvertrag = gdvUBei%
    REM kvertrag - kfz_deckunfdat
      gdvUGekDat$ = DATE$ (kubeg.krg22041,"DDMMYYYY")
      IF LTRIM$ (gdvUGekDat$) > "" THEN kfz_deckunfdat.kvertrag = DAYS (gdvUGekDat$)
    REM kvertrag - kfz_utod
      gdvUTod% = tod1.krg22041 * 1000
      kfz_utod.kvertrag = gdvUTod%
    REM kvertrag - kfz_utage
      gdvUTage% = tage1.krg22041
      kfz_utage.kvertrag = gdvUTage%
    REM kvertrag - kfz_uinv
      gdvUInv% = inv1.krg22041 * 1000
      kfz_uinv.kvertrag = gdvUInv%
    REM kvertrag - kfz_uheilk
      gdvUHeil% = heil1.krg22041 * 100
      kfz_uheilk.kvertrag = gdvUHeil%
    REM kvertrag - kfz_uktagege
      gdvUKTage% = krkh1.krg22041
      kfz_ktagege.kvertrag = gdvUKTage%
    REM kvertrag - kfz_genes
      gdvTemp$ = knzkrk1.krg22041
      SELECT CASE gdvtemp$
       CASE "1"
        gdvGenes$ = "mit"
       CASE "0"
        gdvGenes$ = "ohne"
      END SELECT 
    REM kvertrag - risiko1
      gdvtemp$ = kudris1.krg22041
      SELECT CASE gdvtemp$
       CASE "1"
        gdvRisk1$ = "Insassenversicherung nach dem Pauschalsystem"
       CASE "2"
        gdvRisk1$ = "Insassenversicherung nach dem Platzsystem"
       CASE "3"
        gdvRisk1$ = "Insassenversicherung nach dem Pauschalsystem"
       CASE "4"
        gdvRisk1$ = "Berufs- und Beifahrerversicherung unter Ausschlu· der Kraftradbenutzung"
       CASE "5"
        gdvRisk1$ = "Berufs- und Beifahrerversicherung mit Einschlu· der Kraftradbenutzung"
       CASE "9"
        gdvRisk1$ = "Namentliche Unfallversicherung"
      END SELECT 
      risiko1.kvertrag = gdvRisk1$
    ELSE 
     kfz_unfall.kvertrag = "n"
    END IF 
    REM CALL Fehler("Quickst-kv","")
    CALL KFZBeitr()
    REM CALL Fehler("Quickst-kv","")
    IF zw.kvertrag = 0 AND KÅndigung.kvertrag <= TODAY THEN 
      CodeVStatus.kvertrag = 4
      VStatusTxT.kvertrag = "storniert"
    END IF 
    CALL QuickStore("kvertrag")
    lfdnr111% = lfdnr.kvertrag
    SELECT KEY gdvlfdnrab% LOCK FILE "Kvertrag" INDEX lfdnr.kvertrag
    MOUSE OFF 
 END SUB 
 
 
SUB GDVAdresse(gdvserial%)
 IF AdressFound% = 0 THEN 
      SET STATUS "Adresse hinzufÅgen" + "   Anz in AGD10011:" + STR$ (adganz1%,"999999") + "/" + STR$ (adganz%,"999999")
      FILE "adressen"
      BLANK FILE "adressen"
      gdvPruef% = SER (CodeKU.adressen,1)
      gdvcodekua% = gdvPruef%
      CodeKU.adressen = gdvPruef%
      gdvNeu.adressen = TODAY 
      gdvKNr% = VAL (ReadConfig$("NUMMERN","LASTKundennummer")) + 1
       CALL WriteConfig("NUMMERN","LASTKundennummer", LTRIM$ ( STR$ (gdvKNr%,"999999")))
       Kundennummer.ADRESSEN = "K" + LTRIM$ ( STR$ (gdvKNr%,"999999"))
       Debitorkto.adressen = LTRIM$ ( STR$ (gdvKNr%,"999999"))
       AAKunde.adressen = "j"
       AAMakler.adressen = "n"
       AAMitarbeiter.adressen = "n"
       AAInteressent.adressen = "n"
       AALieferant.adressen = "n"
       FIPrivat.adressen = "n"
       FIATEC.adressen = "j"
       FIIMMAK.adressen = "n"
      STORE FILE "adressen"
      SELECT KEY gdvPruef% LOCK FILE "Adressen" INDEX codeku.adressen
      CALL gdvWriteLogOk("Adresse hinzufÅgen : " + STR$ (gdvcodekua%,"000000") + "," + STR$ (gdvLNR%,"000000") + "-" + STR$ (gdvAdrKu%,"000000") + "," + gdvAdrVSNR$ + "," + gdvN1$ + "," + gdvN2$ + "," + gdvN3$)
      SELECT KEY codeimpgdv% LOCK FILE "GDVHEAD" INDEX codeimpgdv.gdvhead
      AnzADrHinz.gdvhead = AnzadrHinz.gdvhead + 1
      STORE FILE "GDVHEAD"
 ELSE IF AdressFound% = 1 THEN 
      SET STATUS "Adresse Ñndern" + "   Anz in AGD10011:" + STR$ (adganz1%,"999999") + "/" + STR$ (adganz%,"999999")
      SELECT FIRST FILE "adressen"
      SELECT KEY gdvcodekua% LOCK FILE "adressen" INDEX codeku.adressen
      CALL gdvWriteLogOk("Adresse Ñndern : " + STR$ (gdvcodekua%,"000000") + "," + STR$ (gdvLNR%,"000000") + "-" + STR$ (gdvAdrKu%,"000000") + "," + gdvAdrVSNR$ + "," + gdvN1$ + "," + gdvN2$ + "," + gdvN3$)
      SELECT KEY codeimpgdv% LOCK FILE "GDVHEAD" INDEX codeimpgdv.gdvhead
      AnzahlADRFound.gdvhead = AnzahlADRFound.gdvhead + 1
      STORE FILE "GDVHEAD"
 END IF 
 
 REM  Alles aus der Datei ad010011
      FILE "adg10011"
      SELECT FIRST FILE "adg10011"
      INDEX gdvKu.adg10011
      SELECT KEY gdvserial% FILE "adg10011" INDEX gdvku.adg10011
 
 REM Edit
       gdvedit.adressen = TODAY 
 
 REM Anrede 
       gdvtemp$ = Ankey.adg10011
       SELECT CASE gdvtemp$
        CASE "0"
         gdvAnrede$ = ""
        CASE "1"
         gdvAnrede$ = "Herr"
        CASE "2"
         gdvAnrede$ = "Frau"
        CASE "3"
         gdvAnrede$ = "Firma"
        CASE "4"
         gdvAnrede$ = "Herr und Frau"
        CASE "5"
         gdvAnrede$ = "FrÑulein"
       END SELECT 
       Anrede.adressen = gdvAnrede$
 REM Name1
       gdvNachname$ = LTRIM$ (name1.adg10011)
       Nachname.adressen = gdvNachname$
       QNachname.adressen = VSNRPack$(gdvNachname$)
 REM Name2
       gdvGebName$ = LTRIM$ (name2.adg10011)
       Geburtsname.adressen = gdvGebName$
 REM Name3
       gdvVorname$ = LTRIM$ (name3.adg10011)
       Vorname.adressen = gdvVorname$
       QVorname.adressen = VSNRPack$(gdvVorname$)
 REM Titel
       gdvTitel$ = LTRIM$ (titel.adg10011)
       Titel.adressen = gdvTitel$
 REM Postleitzahl
       gdvPlz$ = LTRIM$ (plz.adg10011)
       PLZ.adressen = gdvPlz$
       QPLZ.adressen = VSNRPack$(gdvPlz$)
 REM Ort
       gdvOrt$ = LTRIM$ (ort.adg10011)
       Ort.adressen = gdvOrt$
       QOrt.adressen = VSNRPack$(gdvOrt$)
 REM Stra·e
       gdvStra·e$ = LTRIM$ (str.adg10011)
       Stra·e.adressen = gdvStra·e$
       QStra·e.adressen = VSNRPack$(gdvStra·e$)
 REM Postfach
       gdvPostfach$ = LTRIM$ (postf.adg10011)
       REM Postfach.adressen = gdvPostfach$
 REM Geburtstag
       gdvGebDat$ = DATE$ (gebdat.adg10011,"DDMMYYYY")
       IF LTRIM$ (gdvGebDat$) > "" THEN Geburtstag.adressen = DAYS (gdvGebDat$)
 REM LÑnderkennzeichen
       gdvLand$ = LTRIM$ (landknz.adg10011)
       Land.adressen = gdvLand$
 REM Staatsangehîrigkeit
       gdvStaat$ = LTRIM$ (staat.adg10011)
       Staatsangehîrig.adressen = gdvStaat$
 REM ZielgruppenschlÅssel 
       gdvtemp$ = zgkey.adg10011
       SELECT CASE gdvtemp$
        CASE "01"
         gdvBeruf$ = "Beamter"
        CASE "02"
         gdvBeruf$ = "Landwirt"
        CASE "03"
         gdvBeruf$ = "Arzt"
        CASE "99"
         gdvBeruf$ = ""
       END SELECT 
       Beruf.adressen = gdvBeruf$
  
 REM  Alles aus Datei adg10012
      FILE "adg10012"
      SELECT FIRST FILE "adg10012"
      INDEX gdvKu.adg10012
      IF EXISTS (gdvserial%,gdvku.adg10012) THEN 
        SELECT KEY gdvserial% FILE "adg10012" INDEX gdvku.adg10012
  
        REM Kontonummer
        gdvKonto$ = LTRIM$ (ktonr.adg10012)
        K1Konto.adressen = LEFT$ (gdvKonto$,12)
        REM Bankleitzahl
        gdvBlz$ = LTRIM$ (blz.adg10012)
        K1BLZ.adressen = LEFT$ (gdvBlz$,8)
        REM Familienstand
        gdvtemp$ = famst.adg10012
        SELECT CASE gdvtemp$
          CASE "1"
           gdvFamilie$ = "ledig"
          CASE "2"
           gdvFamilie$ = "verheiratet"
          CASE "3"
           gdvFamilie$ = "geschieden"
          CASE "4"
           gdvFamilie$ = "verwitwet"
          CASE "5"
           gdvFamilie$ = "getrennt lebend"
          CASE "9"
           gdvFamilie$ = ""
         END SELECT 
         Familienstand.adressen = gdvFamilie$
      END IF 
 REM ********         Postanschriftsfeld    ***************
     IF Postanschrift.adressen = "" AND stra·e.adressen <> "" AND ort.adressen <> "" THEN 
       Pof% = 1
       p$ = ""
       IF anrede.adressen LIKE "Herr*" OR anrede.adressen LIKE "Fr*" OR anrede.adressen LIKE "Fam*" THEN 
         IF anrede.adressen <> "" THEN 
           p$ = Anrede.adressen + CHR$ (13) + CHR$ (10)
         END IF 
         IF LTRIM$ (Titel.adressen) <> "" THEN 
           p$ = p$ + LTRIM$ (Titel.adressen) + " "
         END IF 
         IF vorname.adressen <> "" THEN 
           p$ = p$ + LTRIM$ (Vorname.adressen) + " " + LTRIM$ (Nachname.adressen) + CHR$ (13) + CHR$ (10)
         ELSE 
           p$ = p$ + LTRIM$ (Nachname.adressen) + CHR$ (13) + CHR$ (10)
         END IF 
         p$ = p$ + Stra·e.adressen + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + plz.adressen + " " + Ort.adressen + CHR$ (13) + CHR$ (10)
         p$ = p$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + briefanrede.adressen
       ELSE 
         p$ = LTRIM$ (Anrede.adressen) + " " + LTRIM$ (titel.adressen) + CHR$ (13) + CHR$ (10)
         IF geburtsname.adressen <> "" THEN 
           p$ = p$ + LTRIM$ (nachname.adressen) + CHR$ (10) + CHR$ (13) + LTRIM$ (geburtsname.adressen) + CHR$ (13) + CHR$ (10) + LTRIM$ (Vorname.adressen) + CHR$ (13) + CHR$ (10)
         ELSE 
           p$ = p$ + LTRIM$ (Nachname.adressen) + CHR$ (13) + CHR$ (10) + LTRIM$ (Vorname.adressen) + CHR$ (13) + CHR$ (10)
         END IF 
         
         p$ = p$ + Stra·e.adressen + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + plz.adressen + " " + Ort.adressen + CHR$ (13) + CHR$ (10)
         IF land.adressen <> "" THEN p$ = p$ + CHR$ (13) + CHR$ (10) + Land.adressen
         p$ = p$ + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + CHR$ (13) + CHR$ (10) + briefanrede.adressen
       END IF 
       Postanschrift.adressen = p$
     END IF 
           GAnredADR$ = anrede.adressen
           GTitelADR$ = Titel.adressen
           GNachnameADR$ = Nachname.adressen
           GVornameADR$ = Vorname.adressen
           GPLZADR$ = plz.adressen
           GStrasseADR$ = Stra·e.adressen
           GOrtADR$ = Ort.adressen
 REM ******************************************************
 
 
 
 
 
       CALL QuickStore("adressen")
    IF EXISTS (gdvserial%,gdvku.adg10012) THEN 
       REM KomNR1
       gdvTelNr1$ = VSNRPack$(komnr1.adg10012)
       gdvtemp$ = komtyp1.adg10012
       SELECT CASE gdvtemp$
        CASE "10"
         gdvTelTyp1$ = "Telefonnr. Privat"
         gdvFax1$ = "n"
        CASE "20"
         gdvTelTyp1$ = "Telefonnr. geschÑftl."
         gdvFax1$ = "n"
        CASE "30"
         gdvTelTyp1$ = "Telefonnr. Mobil"
         gdvFax1$ = "n"
        CASE "40"
         gdvTelTyp1$ = "Telefax"
         gdvFax1$ = "j"
       END SELECT 
       gdvTeleV% = 0
       FILE "telefon"
 
       MOUSE OFF 
       SET STATUS "Telefon bearbeiten"
       IF EXISTS (gdvcodekua%,codeku.telefon) THEN 
         SELECT FIRST FILE "telefon"
         SELECT KEY gdvcodekua% FILE "telefon" INDEX codeku.telefon
         WHILE NOT EOF ("telefon") AND codeku.telefon = gdvcodekua%
          IF codeku.telefon = gdvcodekua% THEN 
           IF VSNRPack$(Nummer.telefon) = gdvTelNr1$ THEN 
            Nummer.telefon = komnr1.adg10012
            art.telefon = gdvTelTyp1$
            fonoderfax.telefon = gdvFax1$
            gdvTeleV% = 1
            SELECT LAST FILE "telefon"
           END IF 
          END IF 
         SELECT NEXT FILE "telefon"
         WEND 
       END IF 
       IF gdvTeleV% = 0 AND LTRIM$ (komnr1.adg10012) <> "" THEN 
        BLANK FILE "telefon"
        codetel.telefon = SER (codetel.telefon,1)
        codeku = gdvcodekua%
        Nummer.telefon = komnr1.adg10012
        art.telefon = gdvTelTyp1$
        fonoderfax.telefon = gdvFax1$
       END IF 
       CALL QuickStore ("telefon")
 
       REM gdvTelNr1$ = LTRIM$ (komnr1.adg10012)
       REM gdvtemp$ = komtyp1.adg10012
       REM SELECT CASE gdvtemp$
       REM  CASE "10"
       REM  gdvTelTyp1$ = "Telefonnr. Privat"
       REM  gdvFax1$ = "n"
       REM   CASE "20"
       REM  gdvTelTyp1$ = "Telefonnr. geschÑftl."
       REM  gdvFax1$ = "n"
       REM   CASE "30"
       REM  gdvTelTyp1$ = "Telefonnr. Mobil"
       REM  gdvFax1$ = "n"
       REM   CASE "40"
       REM  gdvTelTyp1$ = "Telefax"
       REM  gdvFax1$ = "j"
       REM END SELECT 
 REM KomNr2
       gdvTelNr2$ = VSNRPack$(komnr2.adg10012)
       gdvtemp$ = komtyp2.adg10012
       SELECT CASE gdvtemp$
        CASE "10"
         gdvTelTyp1$ = "Telefonnr. Privat"
         gdvFax1$ = "n"
        CASE "20"
         gdvTelTyp2$ = "Telefonnr. geschÑftl."
         gdvFax2$ = "n"
        CASE "30"
         gdvTelTyp2$ = "Telefonnr. Mobil"
         gdvFax2$ = "n"
        CASE "40"
         gdvTelTyp1$ = "Telefax"
         gdvFax2$ = "j"
       END SELECT 
       gdvTeleV% = 0
       FILE "telefon"
       MOUSE OFF 
       SET STATUS "Telefon bearbeiten"
       IF EXISTS (gdvcodekua%,codeku.telefon) THEN 
         SELECT FIRST FILE "telefon"
         SELECT KEY gdvcodekua% FILE "telefon" INDEX codeku.telefon
         WHILE NOT EOF ("telefon") AND codeku.telefon = gdvcodekua%
           IF codeku.telefon = gdvcodekua% THEN 
            IF VSNRPack$(Nummer.telefon) = gdvTelNr2$ THEN 
             Nummer.telefon = komnr2.adg10012
             art.telefon = gdvTelTyp2$
             fonoderfax.telefon = gdvFax2$
             gdvTeleV% = 1
             SELECT LAST FILE "telefon"
           END IF 
         END IF 
         SELECT NEXT FILE "telefon"
         WEND 
       END IF 
       IF gdvTeleV% = 0 THEN 
        BLANK FILE "telefon"
        codetel.telefon = SER (codetel.telefon,1)
        codeku = gdvcodekua%
        Nummer.telefon = komnr2.adg10012
        art.telefon = gdvTelTyp2$
        fonoderfax.telefon = gdvFax2$
       END IF 
       CALL QuickStore ("telefon")
 REM KomNr3
       gdvTelNr3$ = VSNRPack$(komnr3.adg10012)
       gdvtemp$ = komtyp3.adg10012
       SELECT CASE gdvtemp$
        CASE "10"
         gdvTelTyp3$ = "Telefonnr. Privat"
         gdvFax3$ = "n"
        CASE "20"
         gdvTelTyp3$ = "Telefonnr. geschÑftl."
         gdvFax3$ = "n"
        CASE "30"
         gdvTelTyp3$ = "Telefonnr. Mobil"
         gdvFax3$ = "n"
        CASE "40"
         gdvTelTyp3$ = "Telefax"
         gdvFax3$ = "j"
       END SELECT 
       gdvTeleV% = 0
       FILE "telefon"
       MOUSE OFF 
       SET STATUS "Telefon bearbeiten"
       IF EXISTS (gdvcodekua%,codeku.telefon) THEN 
         SELECT FIRST FILE "telefon"
         SELECT KEY gdvcodekua% FILE "telefon" INDEX codeku.telefon
         WHILE NOT EOF ("telefon") AND codeku.telefon = gdvcodekua%
          IF codeku.telefon = gdvcodekua% THEN 
           IF VSNRPack$(Nummer.telefon) = gdvTelNr3$ THEN 
            Nummer.telefon = komnr3.adg10012
            art.telefon = gdvTelTyp3$
            fonoderfax.telefon = gdvFax3$
            gdvTeleV% = 1
            SELECT LAST FILE "telefon"
           END IF 
          END IF 
         SELECT NEXT FILE "telefon"
         WEND 
       END IF 
       IF gdvTeleV% = 0 THEN 
        BLANK FILE "telefon"
        codetel.telefon = SER (codetel.telefon,1)
        codeku = gdvcodekua%
        Nummer.telefon = komnr3.adg10012
        art.telefon = gdvTelTyp3$
        fonoderfax.telefon = gdvFax3$
       END IF 
       CALL QuickStore ("telefon")
 REM KomNr4
       gdvTelNr4$ = VSNRPack$(komnr4.adg10012)
       gdvtemp$ = komtyp4.adg10012
       SELECT CASE gdvtemp$
        CASE "10"
         gdvTelTyp4$ = "Telefonnr. Privat"
         gdvFax4$ = "n"
        CASE "20"
         gdvTelTyp4$ = "Telefonnr. geschÑftl."
         gdvFax4$ = "n"
        CASE "30"
         gdvTelTyp4$ = "Telefonnr. Mobil"
         gdvFax4$ = "n"
        CASE "40"
         gdvTelTyp4$ = "Telefax"
         gdvFax4$ = "j"
       END SELECT 
       gdvTeleV% = 0
       FILE "telefon"
 
       MOUSE OFF 
       SET STATUS "Telefon bearbeiten" + "   Anz in AGD10011:" + STR$ (adganz1%,"999999") + "/" + STR$ (adganz%,"999999")
       IF EXISTS (gdvcodekua%,codeku.telefon) THEN 
         SELECT FIRST FILE "telefon"
         SELECT KEY gdvcodekua% FILE "telefon" INDEX codeku.telefon
         WHILE NOT EOF ("telefon") AND codeku.telefon = gdvcodekua%
          IF codeku.telefon = gdvcodekua% THEN 
           IF VSNRPack$(Nummer.telefon) = gdvTelNr4$ THEN 
            Nummer.telefon = komnr4.adg10012
            art.telefon = gdvTelTyp4$
            fonoderfax.telefon = gdvFax4$
            gdvTeleV% = 1
            SELECT LAST FILE "telefon"
           END IF 
          END IF 
         SELECT NEXT FILE "telefon"
         WEND 
       END IF 
       IF gdvTeleV% = 0 THEN 
        BLANK FILE "telefon"
        codetel.telefon = SER (codetel.telefon,1)
        codeku = gdvcodekua%
        Nummer.telefon = komnr4.adg10012
        art.telefon = gdvTelTyp4$
        fonoderfax.telefon = gdvFax4$
       END IF 
       CALL QuickStore ("telefon")
    REM Familienstand
       REM gdvtemp$ = famst.adg10012
       REM SELECT CASE gdvtemp$
        REM CASE "1"
         REM gdvFamilie$ = "ledig"
        REM CASE "2"
         REM gdvFamilie$ = "verheiratet"
        REM CASE "3"
         REM gdvFamilie$ = "geschieden"
        REM CASE "4"
         REM gdvFamilie$ = "verwitwet"
        REM CASE "5"
         REM gdvFamilie$ = "getrennt lebend"
        REM CASE "9"
         REM gdvFamilie$ = ""
       REM END SELECT 
       REM Familienstand.adressen = gdvFamilie$
 END IF 
 FILE "adressen"
 REM CALL QuickStore("adressen")
 MOUSE OFF 
 UNLOCK CURRENT FILE "adressen"
 END SUB 
 
 REM ********
 REM * GLAS *
 REM ********
SUB gdvGlas(gdvserial%,gdvC200%,gdvKlfd%,lfdnrtotal%,gdvlf%)
 DIM gdvGLFelder$(1)
 DIM gdvFGlas$(1,1)
  gdvFGlas$(0,0) = "gl021011"
  gdvFGlas$(0,1) = "glg21011"
  gdvFGlas$(1,0) = "gl022011"
  gdvFGlas$(1,1) = "glg22011"
  
   
 FOR j% = 0 TO 1
   
   REM Felder fÅr G-Dateien
   gdvFTemp2$ = "gdvku." + gdvFGlas$(j%,1)
   REM Felder fÅr 0-Dateien
   gdvFTemp3$ = "lfdnr." + gdvFGlas$(j%,0)
   gdvFTemp4$ = "code" + gdvFGlas$(j%,0) + "." + gdvFGlas$(j%,0)
   gdvFTemp5$ = "lfdnrtotal." + gdvFGlas$(j%,0)
 
   REM ôffnen der 0-Datei
   CALL DFile(3,gdvFGlas$(j%,0) + _fpw$)
   FILE gdvFGlas$(j%,0)
   INDEX gdvFTemp3$$
   REM wenn in der Datei die lfdnr vorkommt -> durchgehen und alle lîschen
   IF EXISTS (gdvKlfd%,gdvFTemp3$$) THEN 
     SELECT FIRST FILE gdvFGlas$(j%,0) INDEX gdvFTemp3$$
     SELECT KEY gdvKlfd% FILE gdvFGlas$(j%,0) INDEX gdvFTemp3$$
     WHILE NOT EOF (gdvFGlas$(j%,0)) AND gdvFTemp3$$ = gdvKlfd%
       IF gdvFTemp3$$ = gdvKlfd% THEN 
         SELECT CURRENT LOCK FILE gdvFGlas$(j%,0)
         SELECT REMOVE FILE gdvFGlas$(j%,0)
         UNLOCK CURRENT FILE gdvFGlas$(j%,0)
         REM SELECT PREVIOUS FILE gdvFGlas$(j%,0)
         SELECT FIRST FILE gdvFGlas$(j%,0) INDEX gdvFTemp3$$
         SELECT KEY gdvKlfd% FILE gdvFGlas$(j%,0) INDEX gdvFTemp3$$
       ELSE 
         SELECT NEXT FILE gdvFGlas$(j%,0) INDEX gdvFTemp3$$
       END IF 
     WEND 
   END IF 
 
   REM Auf G-Datei setzen
   FILE gdvFGlas$(j%,1)
   INDEX gdvFTemp2$$
   REM PrÅfen ob die GDVKU vorkommt -> Wenn ja durchgehen und alle DatensÑtze nach 0-Datei
   REM                                 Wenn nein zur nÑchsten G-Datei
   IF EXISTS (gdvserial%,gdvFTemp2$$) THEN 
     SELECT FIRST FILE gdvFGlas$(j%,1) INDEX gdvFTemp2$$
     SELECT KEY gdvserial% FILE gdvFGlas$(j%,1) INDEX gdvFTemp2$$
     REM GDVKU in G-Datei vorhanden
     WHILE NOT EOF (gdvFGlas$(j%,1)) AND gdvFTemp2$$ = gdvserial%
       
       REM wenn ein Datensatz mit gleicher GDVKU gefunden wird
       IF gdvFTemp2$$ = gdvserial% THEN 
         
         REM Auf 0-Datei setzen
         FILE gdvFGlas$(j%,0)
 
         BLANK FILE gdvFGlas$(j%,0)
 
         gdvFTemp3$$ = gdvKlfd%
         gdvGL% = SER (gdvFTemp4$$)
         IF UCASE$ (gdvFGlas$(j%,0)) = "GL021011" THEN gdvC210% = gdvGL%
         STORE FILE gdvFGlas$(j%,0)
         SELECT KEY gdvKlfd% LOCK FILE gdvFGlas$(j%,0) INDEX gdvFTemp3$$
  
         gdvanzfeld% = FILEINFO (gdvFGlas$(j%,0),1)
         REDIM gdvGLFelder$(gdvanzfeld%)
         FILLARRAY gdvGLFelder$,1
         FOR i% = 0 TO gdvanzfeld% - 1
           FTemp1$ = gdvGLFelder$(i%) + "." + gdvFGlas$(j%,0)
           FTemp2$ = gdvGLFelder$(i%) + "." + gdvFGlas$(j%,1)
           REM  CALL Info("","")
           REM IF FTemp2$$ > "" OR FTemp2$$ > 0 THEN 
           FTemp1$$ = FTemp2$$
           IF UCASE$ (gdvGLFelder$(i%)) = "CODE200" THEN FTemp1$$ = gdvC200%
           IF UCASE$ (gdvGLFelder$(i%)) = "CODEGL021011" THEN FTemp1$$ = gdvC210%
         NEXT i%
 
         gdvFTemp3$$ = gdvKlfd%
 
         gdvFTemp5$$ = gdvKlfd% * 10000
         gdvFTemp4$$ = gdvGL%
   
         FILE gdvFGlas$(j%,0)
         CALL QuickStore(gdvFGlas$(j%,0))
         MOUSE OFF 
         UNLOCK CURRENT FILE gdvFGlas$(j%,0)
       END IF 
       FILE gdvFGlas$(j%,1)
       SELECT NEXT FILE gdvFGlas$(j%,1) INDEX gdvFTemp2$$
     WEND 
   END IF 
 NEXT j%
 

  IF EXISTS (gdvKlfd%,lfdnr.GL021011) THEN 
    SELECT KEY gdvKlfd% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
    SELECT FIRST FILE "GL021011" INDEX lfdnr.GL021011
    SELECT KEY gdvKlfd% FILE "GL021011" INDEX lfdnr.GL021011
    REM CALL Fehler(tarifbez.le022021,"")
 
    IF BKZ.GL021011 = "1" THEN 
      mwst% = 0
      QuickGEVA$ = STR$ (codege.kvertrag,"000000") + STR$ (codeva.kvertrag,"000000")
      SELECT FIRST FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      SELECT KEY QuickGEVA$ FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      mwst% = mwst.vprodukt
      IF GESBETR.GL021011 > 0 THEN 
        IF mwst% = 0 THEN 
          REM beitr1ab1$ = STR$ (Beitwe.alg20011,",999999.00")
          Beitrag.kvertrag = GESBETR.GL021011
          NettoBeitrag.kvertrag = GESBETR.GL021011
        ELSE 
          bmwst% = (GESBETR.GL021011 * mwst% / 100)
          bmwst$ = STR$ (bmwst% + 0.005,"999999.00")
          bmwst2% = VAL (bmwst$)
          Beitrag.kvertrag = GESBETR.GL021011 + bmwst2%
          NettoBeitrag.kvertrag = GESBETR.GL021011
        END IF 
      END IF 
      IF begdat.GL021011 > 0 THEN VS_Beginn.kvertrag = begdat.GL021011
      IF ausdat.GL021011 > 0 THEN 
        KÅndigung.kvertrag = ausdat.GL021011
      END IF 
    END IF 
    STORE FILE "kvertrag"
  END IF 




 END SUB 
 
 REM *********
 REM * LEBEN *
 REM *********
SUB gdvLeben(gdvserial%,gdvC200%,gdvKlfd%,lfdnrtotal%,gdvlf%)
 DIM gdvLEFelder$(1)
 DIM gdvFLeben$(35,1)
  gdvFLeben$(0,0) = "le021011"
  gdvFLeben$(0,1) = "leg21011"
  gdvFLeben$(1,0) = "le021012"
  gdvFLeben$(1,1) = "leg21012"
  gdvFLeben$(2,0) = "le022011"
  gdvFLeben$(2,1) = "leg22011"
  gdvFLeben$(3,0) = "le022021"
  gdvFLeben$(3,1) = "leg22021"
  gdvFLeben$(4,0) = "le022022"
  gdvFLeben$(4,1) = "leg22022"
  gdvFLeben$(5,0) = "le022026"
  gdvFLeben$(5,1) = "leg22026"
  gdvFLeben$(6,0) = "le022027"
  gdvFLeben$(6,1) = "leg22027"
  gdvFLeben$(7,0) = "le022028"
  gdvFLeben$(7,1) = "leg22028"
  gdvFLeben$(8,0) = "le022029"
  gdvFLeben$(8,1) = "leg22029"
  gdvFLeben$(9,0) = "le022031"
  gdvFLeben$(9,1) = "leg22031"
  gdvFLeben$(10,0) = "le022032"
  gdvFLeben$(10,1) = "leg22032"
  gdvFLeben$(11,0) = "le022036"
  gdvFLeben$(11,1) = "leg22036"
  gdvFLeben$(12,0) = "le022038"
  gdvFLeben$(12,1) = "leg22038"
  gdvFLeben$(13,0) = "le022039"
  gdvFLeben$(13,1) = "leg22039"
  gdvFLeben$(14,0) = "le022041"
  gdvFLeben$(14,1) = "leg22041"
  gdvFLeben$(15,0) = "le022042"
  gdvFLeben$(15,1) = "leg22042"
  gdvFLeben$(16,0) = "le022046"
  gdvFLeben$(16,1) = "leg22046"
  gdvFLeben$(17,0) = "le022048"
  gdvFLeben$(17,1) = "leg22048"
  gdvFLeben$(18,0) = "le022049"
  gdvFLeben$(18,1) = "leg22049"
  gdvFLeben$(19,0) = "le022051"
  gdvFLeben$(19,1) = "leg22051"
  gdvFLeben$(20,0) = "le022052"
  gdvFLeben$(20,1) = "leg22052"
  gdvFLeben$(21,0) = "le022056"
  gdvFLeben$(21,1) = "leg22056"
  gdvFLeben$(22,0) = "le022058"
  gdvFLeben$(22,1) = "leg22058"
  gdvFLeben$(23,0) = "le022059"
  gdvFLeben$(23,1) = "leg22059"
  gdvFLeben$(24,0) = "le022061"
  gdvFLeben$(24,1) = "leg22061"
  gdvFLeben$(25,0) = "le022062"
  gdvFLeben$(25,1) = "leg22062"
  gdvFLeben$(26,0) = "le022063"
  gdvFLeben$(26,1) = "leg22063"
  gdvFLeben$(27,0) = "le022066"
  gdvFLeben$(27,1) = "leg22066"
  gdvFLeben$(28,0) = "le022067"
  gdvFLeben$(28,1) = "leg22067"
  gdvFLeben$(29,0) = "le022068"
  gdvFLeben$(29,1) = "leg22068"
  gdvFLeben$(30,0) = "le022069"
  gdvFLeben$(30,1) = "leg22069"
  gdvFLeben$(31,0) = "le022071"
  gdvFLeben$(31,1) = "leg22071"
  gdvFLeben$(32,0) = "le022072"
  gdvFLeben$(32,1) = "leg22072"
  gdvFLeben$(33,0) = "le022076"
  gdvFLeben$(33,1) = "leg22076"
  gdvFLeben$(34,0) = "le022078"
  gdvFLeben$(34,1) = "leg22078"
  gdvFLeben$(35,0) = "le022079"
  gdvFLeben$(35,1) = "leg22079"
  
  
 FOR j% = 0 TO 35
   
   REM Felder fÅr G-Dateien
   gdvFTemp2$ = "gdvku." + gdvFLeben$(j%,1)
   REM Felder fÅr 0-Dateien
   gdvFTemp3$ = "lfdnr." + gdvFLeben$(j%,0)
   gdvFTemp4$ = "code" + gdvFLeben$(j%,0) + "." + gdvFLeben$(j%,0)
   gdvFTemp5$ = "lfdnrtotal." + gdvFLeben$(j%,0)
 
   REM ôffnen der 0-Datei
   CALL DFile(3,gdvFLeben$(j%,0) + _fpw$)
   FILE gdvFLeben$(j%,0)
   INDEX gdvFTemp3$$
   REM wenn in der Datei die lfdnr vorkommt -> durchgehen und alle lîschen
   IF EXISTS (gdvKlfd%,gdvFTemp3$$) THEN 
     SELECT FIRST FILE gdvFLeben$(j%,0) INDEX gdvFTemp3$$
     SELECT KEY gdvKlfd% FILE gdvFLeben$(j%,0) INDEX gdvFTemp3$$
     WHILE NOT EOF (gdvFLeben$(j%,0)) AND gdvFTemp3$$ = gdvKlfd%
       IF gdvFTemp3$$ = gdvKlfd% THEN 
         SELECT CURRENT LOCK FILE gdvFLeben$(j%,0)
         SELECT REMOVE FILE gdvFLeben$(j%,0)
         UNLOCK CURRENT FILE gdvFLeben$(j%,0)
         REM SELECT PREVIOUS FILE gdvFLeben$(j%,0)
         SELECT FIRST FILE gdvFLeben$(j%,0) INDEX gdvFTemp3$$
         SELECT KEY gdvKlfd% FILE gdvFLeben$(j%,0) INDEX gdvFTemp3$$
       ELSE 
         SELECT NEXT FILE gdvFLeben$(j%,0) INDEX gdvFTemp3$$
       END IF 
     WEND 
   END IF 
 
   REM Auf G-Datei setzen
   FILE gdvFLeben$(j%,1)
   INDEX gdvFTemp2$$
   REM PrÅfen ob die GDVKU vorkommt -> Wenn ja durchgehen und alle DatensÑtze nach 0-Datei
   REM                                 Wenn nein zur nÑchsten G-Datei
   IF EXISTS (gdvserial%,gdvFTemp2$$) THEN 
     SELECT FIRST FILE gdvFLeben$(j%,1) INDEX gdvFTemp2$$
     SELECT KEY gdvserial% FILE gdvFLeben$(j%,1) INDEX gdvFTemp2$$
     REM GDVKU in G-Datei vorhanden
     WHILE NOT EOF (gdvFLeben$(j%,1)) AND gdvFTemp2$$ = gdvserial%
       
       REM wenn ein Datensatz mit gleicher GDVKU gefunden wird
       IF gdvFTemp2$$ = gdvserial% THEN 
         
         REM Auf 0-Datei setzen
         FILE gdvFLeben$(j%,0)
 
         BLANK FILE gdvFLeben$(j%,0)
 
         gdvFTemp3$$ = gdvKlfd%
         gdvLe% = SER (gdvFTemp4$$)
         IF UCASE$ (gdvFLeben$(j%,0)) = "LE021011" THEN gdvC210% = gdvLe%
         STORE FILE gdvFLeben$(j%,0)
         SELECT KEY gdvKlfd% LOCK FILE gdvFLeben$(j%,0) INDEX gdvFTemp3$$
  
         gdvanzfeld% = FILEINFO (gdvFLeben$(j%,0),1)
         REDIM gdvLeFelder$(gdvanzfeld%)
         FILLARRAY gdvLeFelder$,1
         FOR i% = 0 TO gdvanzfeld% - 1
           FTemp1$ = gdvLeFelder$(i%) + "." + gdvFLeben$(j%,0)
           FTemp2$ = gdvLeFelder$(i%) + "." + gdvFLeben$(j%,1)
           REM  CALL Info("","")
           REM IF FTemp2$$ > "" OR FTemp2$$ > 0 THEN 
           FTemp1$$ = FTemp2$$
           IF UCASE$ (gdvLeFelder$(i%)) = "CODE200" THEN FTemp1$$ = gdvC200%
           IF UCASE$ (gdvLeFelder$(i%)) = "CODELE021011" THEN FTemp1$$ = gdvC210%
         NEXT i%
 
         gdvFTemp3$$ = gdvKlfd%
 
         gdvFTemp5$$ = gdvKlfd% * 10000
         gdvFTemp4$$ = gdvLe%
   
         FILE gdvFLeben$(j%,0)
         CALL QuickStore(gdvFLeben$(j%,0))
         MOUSE OFF 
         UNLOCK CURRENT FILE gdvFLeben$(j%,0)
       END IF 
       FILE gdvFLeben$(j%,1)
       SELECT NEXT FILE gdvFLeben$(j%,1) INDEX gdvFTemp2$$
     WEND 
   END IF 
 NEXT j%

  IF EXISTS (gdvKlfd%,lfdnr.LE022021) THEN 
    SELECT KEY gdvKlfd% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
    SELECT FIRST FILE "LE022021" INDEX lfdnr.LE022021
    SELECT KEY gdvKlfd% FILE "LE022021" INDEX lfdnr.LE022021
    REM CALL Fehler(tarifbez.le022021,"")
    Tarif.kvertrag = tarifbez.le022021
    QTarif.kvertrag = LEFT$ (VSNRPack$(Tarif.kvertrag),50)
    STORE FILE "kvertrag"
  END IF 
  REM CALL Fehler("","")
 END SUB 
 
 REM **********
 REM * UNFALL *
 REM **********
SUB gdvUnfall(gdvserial%,gdvC200%,gdvKlfd%,lfdnrtotal%,gdvlf%)
 DIM gdvUNFelder$(1)
 DIM gdvFUnfall$(5,1)
  gdvFUnfall$(0,0) = "un021011"
  gdvFUnfall$(0,1) = "ung21011"
  gdvFUnfall$(1,0) = "un022011"
  gdvFUnfall$(1,1) = "ung22011"
  gdvFUnfall$(2,0) = "un022012"
  gdvFUnfall$(2,1) = "ung22012"
  gdvFUnfall$(3,0) = "un022013"
  gdvFUnfall$(3,1) = "ung22013"
  gdvFUnfall$(4,0) = "un022014"
  gdvFUnfall$(4,1) = "ung22014"
  gdvFUnfall$(5,0) = "un022019"
  gdvFUnfall$(5,1) = "ung22019"
 
   
 FOR j% = 0 TO 5
   
   REM Felder fÅr G-Dateien
   gdvFTemp2$ = "gdvku." + gdvFUnfall$(j%,1)
   REM Felder fÅr 0-Dateien
   gdvFTemp3$ = "lfdnr." + gdvFUnfall$(j%,0)
   gdvFTemp4$ = "code" + gdvFUnfall$(j%,0) + "." + gdvFUnfall$(j%,0)
   gdvFTemp5$ = "lfdnrtotal." + gdvFUnfall$(j%,0)
 
   REM ôffnen der 0-Datei
   CALL DFile(3,gdvFUnfall$(j%,0) + _fpw$)
   FILE gdvFUnfall$(j%,0)
   INDEX gdvFTemp3$$
   REM CALL Fehler(gdvFUnfall$(j%,0),"")
   REM wenn in der Datei die lfdnr vorkommt -> durchgehen und alle lîschen
   IF EXISTS (gdvKlfd%,gdvFTemp3$$) THEN 
     SELECT FIRST FILE gdvFUnfall$(j%,0) INDEX gdvFTemp3$$
     SELECT KEY gdvKlfd% FILE gdvFUnfall$(j%,0) INDEX gdvFTemp3$$
     WHILE NOT EOF (gdvFUnfall$(j%,0)) AND gdvFTemp3$$ = gdvKlfd%
       SELECT CURRENT FILE gdvFUnfall$(j%,0)
       IF gdvFTemp3$$ = gdvKlfd% THEN 
          SELECT CURRENT LOCK FILE gdvFUnfall$(j%,0)
          SELECT REMOVE FILE gdvFUnfall$(j%,0)
          UNLOCK CURRENT FILE gdvFUnfall$(j%,0)
          REM SELECT PREVIOUS FILE gdvFUnfall$(j%,0)
          SELECT FIRST FILE gdvFUnfall$(j%,0) INDEX gdvFTemp3$$
          SELECT KEY gdvKlfd% FILE gdvFUnfall$(j%,0) INDEX gdvFTemp3$$
        ELSE 
          SELECT NEXT FILE gdvFUnfall$(j%,0) INDEX gdvFTemp3$$
        END IF 
        
     WEND 
   END IF 
 
   REM Auf G-Datei setzen
   FILE gdvFUnfall$(j%,1)
   INDEX gdvFTemp2$$
   REM PrÅfen ob die GDVKU vorkommt -> Wenn ja durchgehen und alle DatensÑtze nach 0-Datei
   REM                                 Wenn nein zur nÑchsten G-Datei
   IF EXISTS (gdvserial%,gdvFTemp2$$) THEN 
     SELECT FIRST FILE gdvFUnfall$(j%,1) INDEX gdvFTemp2$$
     SELECT KEY gdvserial% FILE gdvFUnfall$(j%,1) INDEX gdvFTemp2$$
     REM GDVKU in G-Datei vorhanden
     WHILE NOT EOF (gdvFUnfall$(j%,1)) AND gdvFTemp2$$ = gdvserial%
       
       REM wenn ein Datensatz mit gleicher GDVKU gefunden wird
       IF gdvFTemp2$$ = gdvserial% THEN 
         
         REM Auf 0-Datei setzen
         FILE gdvFUnfall$(j%,0)
 
         BLANK FILE gdvFUnfall$(j%,0)
 
         gdvFTemp3$$ = gdvKlfd%
         gdvUN% = SER (gdvFTemp4$$)
         IF UCASE$ (gdvFUnfall$(j%,0)) = "UN021011" THEN gdvC210% = gdvUN%
         STORE FILE gdvFUnfall$(j%,0)
         SELECT KEY gdvKlfd% LOCK FILE gdvFUnfall$(j%,0) INDEX gdvFTemp3$$
  
         gdvanzfeld% = FILEINFO (gdvFUnfall$(j%,0),1)
         REDIM gdvUNFelder$(gdvanzfeld%)
         FILLARRAY gdvUNFelder$,1
         FOR i% = 0 TO gdvanzfeld% - 1
           FTemp1$ = gdvUNFelder$(i%) + "." + gdvFUnfall$(j%,0)
           FTemp2$ = gdvUNFelder$(i%) + "." + gdvFUnfall$(j%,1)
           REM  CALL Info("","")
           REM IF FTemp2$$ > "" OR FTemp2$$ > 0 THEN 
           FTemp1$$ = FTemp2$$
           IF UCASE$ (gdvUNFelder$(i%)) = "CODE200" THEN FTemp1$$ = gdvC200%
           IF UCASE$ (gdvUNFelder$(i%)) = "CODEUN021011" THEN FTemp1$$ = gdvC210%
         NEXT i%
 
         gdvFTemp3$$ = gdvKlfd%
 
         gdvFTemp5$$ = gdvKlfd% * 10000
         gdvFTemp4$$ = gdvUN%
   
         FILE gdvFUnfall$(j%,0)
         CALL QuickStore(gdvFUnfall$(j%,0))
         MOUSE OFF 
         UNLOCK CURRENT FILE gdvFUnfall$(j%,0)
       END IF 
       FILE gdvFUnfall$(j%,1)
       SELECT NEXT FILE gdvFUnfall$(j%,1) INDEX gdvFTemp2$$
     WEND 
   END IF 
 NEXT j%
  IF EXISTS (gdvKlfd%,lfdnr.UN021011) THEN 
    SELECT KEY gdvKlfd% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
    SELECT FIRST FILE "UN021011" INDEX lfdnr.UN021011
    SELECT KEY gdvKlfd% FILE "UN021011" INDEX lfdnr.UN021011
    REM CALL Fehler(tarifbez.le022021,"")
    Tarif.kvertrag = tarifbez.UN021011
    QTarif.kvertrag = LEFT$ (VSNRPack$(Tarif.kvertrag),50)


    IF BKZ.UN021011 = "1" THEN 
      mwst% = 0
      QuickGEVA$ = STR$ (codege.kvertrag,"000000") + STR$ (codeva.kvertrag,"000000")
      SELECT FIRST FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      SELECT KEY QuickGEVA$ FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      mwst% = mwst.vprodukt
      IF GESBETR.UN021011 > 0 THEN 
        IF mwst% = 0 THEN 
          REM beitr1ab1$ = STR$ (Beitwe.alg20011,",999999.00")
          Beitrag.kvertrag = GESBETR.UN021011
          NettoBeitrag.kvertrag = GESBETR.UN021011
        ELSE 
          bmwst% = (GESBETR.UN021011 * mwst% / 100)
          bmwst$ = STR$ (bmwst% + 0.005,"999999.00")
          bmwst2% = VAL (bmwst$)
          Beitrag.kvertrag = GESBETR.UN021011 + bmwst2%
          NettoBeitrag.kvertrag = GESBETR.UN021011
        END IF 
      END IF 
      IF begdat.UN021011 > 0 THEN vs_beginn.kvertrag = begdat.UN021011
      IF ausdat.UN021011 > 0 THEN 
        KÅndigung.kvertrag = ausdat.UN021011
      END IF 
    END IF 
    STORE FILE "kvertrag"
  END IF 
 END SUB 
 
 REM ***************
 REM * HAFTPFLICHT *
 REM ***************
SUB gdvHaft(gdvserial%,gdvC200%,gdvKlfd%,lfdnrtotal%,gdvlf%)
 DIM gdvHAFelder$(1)
 DIM gdvFHaft$(2,1)
  gdvFHaft$(0,0) = "HA021011"
  gdvFHaft$(0,1) = "HAg21011"
  gdvFHaft$(1,0) = "HA022011"
  gdvFHaft$(1,1) = "HAg22011"
  gdvFHaft$(2,0) = "HA022012"
  gdvFHaft$(2,1) = "HAg22012"
  
   
 FOR j% = 0 TO 2
   
   REM Felder fÅr G-Dateien
   gdvFTemp2$ = "gdvku." + gdvFHaft$(j%,1)
   REM Felder fÅr 0-Dateien
   gdvFTemp3$ = "lfdnr." + gdvFHaft$(j%,0)
   gdvFTemp4$ = "code" + gdvFHaft$(j%,0) + "." + gdvFHaft$(j%,0)
   gdvFTemp5$ = "lfdnrtotal." + gdvFHaft$(j%,0)
 
   REM ôffnen der 0-Datei
   CALL DFile(3,gdvFHaft$(j%,0) + _fpw$)
   FILE gdvFHaft$(j%,0)
   INDEX gdvFTemp3$$
   REM wenn in der Datei die lfdnr vorkommt -> durchgehen HAd alle lîschen
   IF EXISTS (gdvKlfd%,gdvFTemp3$$) THEN 
     SELECT FIRST FILE gdvFHaft$(j%,0) INDEX gdvFTemp3$$
     REM 02052004
     SELECT KEY gdvKlfd% FILE gdvFHaft$(j%,0) INDEX gdvFTemp3$$
     WHILE NOT EOF (gdvFHaft$(j%,0)) AND gdvFTemp3$$ = gdvKlfd%
        IF gdvFTemp3$$ = gdvKlfd% THEN 
         SELECT CURRENT LOCK FILE gdvFHaft$(j%,0)
         SELECT REMOVE FILE gdvFHaft$(j%,0)
         UNLOCK CURRENT FILE gdvFHaft$(j%,0)
         SELECT PREVIOUS FILE gdvFHaft$(j%,0)
         SELECT FIRST FILE gdvFHaft$(j%,0) INDEX gdvFTemp3$$
         SELECT KEY gdvKlfd% FILE gdvFHaft$(j%,0) INDEX gdvFTemp3$$
       ELSE 
         SELECT NEXT FILE gdvFHaft$(j%,0)
       END IF 
     WEND 
   END IF 
 
   REM Auf G-Datei setzen
   FILE gdvFHaft$(j%,1)
   INDEX gdvFTemp2$$
   REM PrÅfen ob die GDVKU vorkommt -> Wenn ja durchgehen und alle DatensÑtze nach 0-Datei
   REM                                 Wenn nein zur nÑchsten G-Datei
   IF EXISTS (gdvserial%,gdvFTemp2$$) THEN 
     SELECT FIRST FILE gdvFHaft$(j%,1) INDEX gdvFTemp2$$
     SELECT KEY gdvserial% FILE gdvFHaft$(j%,1) INDEX gdvFTemp2$$
     REM GDVKU in G-Datei vorhanden
     WHILE NOT EOF (gdvFHaft$(j%,1)) AND gdvFTemp2$$ = gdvserial%
       
       REM wenn ein Datensatz mit gleicher GDVKU gefunden wird
       IF gdvFTemp2$$ = gdvserial% THEN 
         
         REM Auf 0-Datei setzen
         FILE gdvFHaft$(j%,0)
 
         BLANK FILE gdvFHaft$(j%,0)
 
         gdvFTemp3$$ = gdvKlfd%
         gdvHA% = SER (gdvFTemp4$$)
         IF UCASE$ (gdvFHaft$(j%,0)) = "HA021011" THEN gdvC210% = gdvHA%
         STORE FILE gdvFHaft$(j%,0)
         SELECT KEY gdvKlfd% LOCK FILE gdvFHaft$(j%,0) INDEX gdvFTemp3$$
  
         gdvanzfeld% = FILEINFO (gdvFHaft$(j%,0),1)
         REDIM gdvHAFelder$(gdvanzfeld%)
         FILLARRAY gdvHAFelder$,1
         FOR i% = 0 TO gdvanzfeld% - 1
           FTemp1$ = gdvHAFelder$(i%) + "." + gdvFHaft$(j%,0)
           FTemp2$ = gdvHAFelder$(i%) + "." + gdvFHaft$(j%,1)
           REM  CALL Info("","")
           REM IF FTemp2$$ > "" OR FTemp2$$ > 0 THEN 
           FTemp1$$ = FTemp2$$
           IF UCASE$ (gdvHAFelder$(i%)) = "CODE200" THEN FTemp1$$ = gdvC200%
           IF UCASE$ (gdvHAFelder$(i%)) = "CODEHA021011" THEN FTemp1$$ = gdvC210%
         NEXT i%
 
         gdvFTemp3$$ = gdvKlfd%
 
         gdvFTemp5$$ = gdvKlfd% * 10000
         gdvFTemp4$$ = gdvHA%
   
         FILE gdvFHaft$(j%,0)
         CALL QuickStore(gdvFHaft$(j%,0))
         MOUSE OFF 
         UNLOCK CURRENT FILE gdvFHaft$(j%,0)
       END IF 
       FILE gdvFHaft$(j%,1)
       SELECT NEXT FILE gdvFHaft$(j%,1)
     WEND 
   END IF 
 NEXT j%
  REM **************************************************************************************************************
  REM *                            Spartenspezifische Eintragungen in KVERTRAG                                     *
  REM **************************************************************************************************************  
  IF EXISTS (gdvKlfd%,lfdnr.HA021011) AND EXISTS (gdvKlfd%,lfdnr.HA022011) THEN 
    SELECT KEY gdvKlfd% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
    SELECT KEY gdvKlfd% FILE "HA021011" INDEX lfdnr.HA021011
    SELECT KEY gdvKlfd% FILE "HA022011" INDEX lfdnr.HA022011
    SELECT KEY gdvKlfd% FILE "HA022012" INDEX lfdnr.HA022012
    textab$ = ""
    zvp1Name.kvertrag = LEFT$ (plzrisk.HA022012 + " " + riskort.HA022012,40)
    zvp1vName.kvertrag = LEFT$ (riskstr.HA022012,40)

    IF bkz.HA021011 = "1" THEN 
      mwst% = 0
      QuickGEVA$ = STR$ (codege.kvertrag,"000000") + STR$ (codeva.kvertrag,"000000")
      SELECT FIRST FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      SELECT KEY QuickGEVA$ FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      mwst% = mwst.vprodukt
      REM CALL Fehler("test","")
      beitr1ab1$ = STR$ (Beitwe.alg20011,",999999.00")
      beitr1ab2$ = STR$ (GESBEI.HA021011,",999999.00")

      IF GESBEI.HA021011 > 0 THEN 
        IF mwst% = 0 THEN 
          Beitrag.kvertrag = GESBEI.HA021011
          NettoBeitrag.kvertrag = GESBEI.HA021011
        ELSE 
          bmwst% = (GESBEI.HA021011 * mwst% / 100)
          bmwst$ = STR$ (bmwst% + 0.005,"999999.00")
          bmwst2% = VAL (bmwst$)
          Beitrag.kvertrag = GESBEI.HA021011 + bmwst2%
          NettoBeitrag.kvertrag = GESBEI.HA021011
        END IF 
      END IF 
      IF begdat.HA021011 > 0 THEN vs_Beginn.kvertrag = begdat.HA021011
      IF auss.HA021011 > 0 THEN 
        KÅndigung.kvertrag = auss.HA021011
      END IF 
    END IF 


    IF EXISTS (gdvKlfd%,lfdnr.HA022012) THEN 
      WHILE NOT EOF ("HA022012") AND lfdnr.HA022012 = gdvKlfd%
        textab$ = textab$ + WTXT.HA022012 + CHR$ (13) + CHR$ (10)
        SELECT NEXT FILE "HA022012"
      WEND 
    END IF 
    rt$ = ""
    IF LTRIM$ (sumart1.ha021011) <> "" THEN 
      SELECT CASE UCASE$ (sumart1.ha021011)
      CASE "1"
        rt$ = "PersonenschÑden"
      CASE "2"
        rt$ = "SachschÑden"
      CASE "3"
        rt$ = "Personen- und SachschÑden"
      CASE "4"
        rt$ = "VermîgensschÑden"
      CASE "5"
        rt$ = "Personen- und VermîgensschÑden"
      CASE "6"
        rt$ = "Sach- und VermîgensschÑden"
      CASE "7"
        rt$ = "Personen-,Vermîgens- und SachschÑden"
      CASE "8"
        rt$ = "MietsachschÑden"
      CASE "9"
        rt$ = "EP(Einheitspauschale)"
      CASE "A"
        rt$ = "Personen- und SachschÑden (pauschal)"
      CASE "B"
        rt$ = "sonstige Sach- und VermîgensschÑden (pauschal)"
      CASE "C"
        rt$ = "PersonenschÑden und sonstige SchÑden (pauschal)"
      CASE "D"
        rt$ = "unbegrenzt (nur fÅr Gabelstapler nach AKB)"
      CASE "Z"
        rt$ = "Sonstiges"
      END SELECT 
      rt1$ = ""
      rt1$ = rt$ + " Deckung: " + STR$ (decksum1.ha021011,",999999999.00")
    END IF 
    IF LTRIM$ (sumart2.ha021011) <> "" THEN 
      SELECT CASE UCASE$ (sumart2.ha021011)
        CASE "1"
          rt$ = "PersonenschÑden"
        CASE "2"
          rt$ = "SachschÑden"
        CASE "3"
          rt$ = "Personen- und SachschÑden"
        CASE "4"
          rt$ = "VermîgensschÑden"
        CASE "5"
          rt$ = "Personen- und VermîgensschÑden"
        CASE "6"
          rt$ = "Sach- und VermîgensschÑden"
        CASE "7"
          rt$ = "Personen-,Vermîgens- und SachschÑden"
        CASE "8"
          rt$ = "MietsachschÑden"
        CASE "9"
          rt$ = "EP(Einheitspauschale)"
        CASE "A"
          rt$ = "Personen- und SachschÑden (pauschal)"
        CASE "B"
          rt$ = "sonstige Sach- und VermîgensschÑden (pauschal)"
        CASE "C"
          rt$ = "PersonenschÑden und sonstige SchÑden (pauschal)"
        CASE "D"
          rt$ = "unbegrenzt (nur fÅr Gabelstapler nach AKB)"
        CASE "Z"
          rt$ = "Sonstiges"
      END SELECT 
      rt2$ = ""
      rt2$ = rt$ + " Deckung: " + STR$ (decksum2.ha021011,",999999999.00")
    END IF 
    IF LTRIM$ (sumart3.ha021011) <> "" THEN 
      SELECT CASE UCASE$ (sumart3.ha021011)
        CASE "1"
          rt$ = "PersonenschÑden"
        CASE "2"
          rt$ = "SachschÑden"
        CASE "3"
          rt$ = "Personen- und SachschÑden"
        CASE "4"
          rt$ = "VermîgensschÑden"
        CASE "5"
          rt$ = "Personen- und VermîgensschÑden"
        CASE "6"
          rt$ = "Sach- und VermîgensschÑden"
        CASE "7"
          rt$ = "Personen-,Vermîgens- und SachschÑden"
        CASE "8"
          rt$ = "MietsachschÑden"
        CASE "9"
          rt$ = "EP(Einheitspauschale)"
        CASE "A"
          rt$ = "Personen- und SachschÑden (pauschal)"
        CASE "B"
          rt$ = "sonstige Sach- und VermîgensschÑden (pauschal)"
        CASE "C"
          rt$ = "PersonenschÑden und sonstige SchÑden (pauschal)"
        CASE "D"
          rt$ = "unbegrenzt (nur fÅr Gabelstapler nach AKB)"
        CASE "Z"
          rt$ = "Sonstiges"
      END SELECT 
      rt3$ = ""
      rt3$ = rt$ + " Deckung: " + STR$ (decksum3.ha021011,",999999999.00")
    END IF 
    IF LTRIM$ (sumart4.ha021011) <> "" THEN 
      SELECT CASE UCASE$ (sumart4.ha021011)
        CASE "1"
          rt$ = "PersonenschÑden"
        CASE "2"
          rt$ = "SachschÑden"
        CASE "3"
          rt$ = "Personen- und SachschÑden"
        CASE "4"
          rt$ = "VermîgensschÑden"
        CASE "5"
          rt$ = "Personen- und VermîgensschÑden"
        CASE "6"
          rt$ = "Sach- und VermîgensschÑden"
        CASE "7"
          rt$ = "Personen-,Vermîgens- und SachschÑden"
        CASE "8"
          rt$ = "MietsachschÑden"
        CASE "9"
          rt$ = "EP(Einheitspauschale)"
        CASE "A"
          rt$ = "Personen- und SachschÑden (pauschal)"
        CASE "B"
          rt$ = "sonstige Sach- und VermîgensschÑden (pauschal)"
        CASE "C"
          rt$ = "PersonenschÑden und sonstige SchÑden (pauschal)"
        CASE "D"
          rt$ = "unbegrenzt (nur fÅr Gabelstapler nach AKB)"
        CASE "Z"
          rt$ = "Sonstiges"
      END SELECT 
      rt4$ = ""
      rt4$ = rt$ + " Deckung: " + STR$ (decksum4.ha021011,",999999999.00")
    END IF 
    rtges$ = ""
    IF rt1$ <> "" THEN rtges$ = rt1$
    IF rt2$ <> "" THEN rtges$ = rtges$ + CHR$ (13) + rt2$
    IF rt3$ <> "" THEN rtges$ = rtges$ + CHR$ (13) + rt3$
    IF rt4$ <> "" THEN rtges$ = rtges$ + CHR$ (13) + rt4$
    rt1$ = "":rt2$ = "":rt3$ = "":rt4$ = ""
    IF LTRIM$ (sumart1.ha022011) <> "" THEN 
      SELECT CASE UCASE$ (sumart1.ha022011)
        CASE "1"
          rt$ = "PS"
        CASE "2"
          rt$ = "SS"
        CASE "3"
          rt$ = "PS+SS"
        CASE "4"
          rt$ = "VS"
        CASE "5"
          rt$ = "PS+VS"
        CASE "6"
          rt$ = "SS+VS"
        CASE "7"
          rt$ = "PS, VS, SS"
        CASE "8"
          rt$ = "frei"
        CASE "9"
          rt$ = "EP (Einheitspauschale)"
        CASE "A"
          rt$ = "= Personen- und SachschÑden (pauschal)"
        CASE "B"
          rt$ = "sonstige Sach- und VermîgensschÑden (pauschal)"
        CASE "C"
          rt$ = "PersonenschÑden und sonstige SchÑden (pauschal)"
        CASE "D"
          rt$ = "unbegrenzt (nur fÅr Gabelstapler nach AKB)"
        CASE "Z"
          rt$ = "sonstiges"
      END SELECT 
      rt1$ = rt$ + " Deckung: " + STR$ (decksum1.ha022011,",999999999.00")
    END IF 
 
    IF LTRIM$ (sumart2.ha022011) <> "" THEN 
      SELECT CASE UCASE$ (sumart2.ha022011)
        CASE "1"
          rt$ = "PS"
        CASE "2"
          rt$ = "SS"
        CASE "3"
          rt$ = "PS+SS"
        CASE "4"
          rt$ = "VS"
        CASE "5"
          rt$ = "PS+VS"
        CASE "6"
          rt$ = "SS+VS"
        CASE "7"
          rt$ = "PS, VS, SS"
        CASE "8"
          rt$ = "frei"
        CASE "9"
          rt$ = "EP (Einheitspauschale)"
        CASE "A"
          rt$ = "= Personen- und SachschÑden (pauschal)"
        CASE "B"
          rt$ = "sonstige Sach- und VermîgensschÑden (pauschal)"
        CASE "C"
          rt$ = "PersonenschÑden und sonstige SchÑden (pauschal)"
        CASE "D"
          rt$ = "unbegrenzt (nur fÅr Gabelstapler nach AKB)"
        CASE "Z"
          rt$ = "sonstiges"
      END SELECT 
      rt2$ = rt$ + " Deckung: " + STR$ (decksum2.ha022011,",999999999.00")
    END IF 
 
    IF LTRIM$ (sumart3.ha022011) <> "" THEN 
      SELECT CASE UCASE$ (sumart3.ha022011)
        CASE "1"
          rt$ = "PS"
        CASE "2"
          rt$ = "SS"
        CASE "3"
          rt$ = "PS+SS"
        CASE "4"
          rt$ = "VS"
        CASE "5"
          rt$ = "PS+VS"
        CASE "6"
          rt$ = "SS+VS"
        CASE "7"
          rt$ = "PS, VS, SS"
        CASE "8"
          rt$ = "frei"
        CASE "9"
          rt$ = "EP (Einheitspauschale)"
        CASE "A"
          rt$ = "= Personen- und SachschÑden (pauschal)"
        CASE "B"
          rt$ = "sonstige Sach- und VermîgensschÑden (pauschal)"
        CASE "C"
          rt$ = "PersonenschÑden und sonstige SchÑden (pauschal)"
        CASE "D"
          rt$ = "unbegrenzt (nur fÅr Gabelstapler nach AKB)"
        CASE "Z"
          rt$ = "sonstiges"
      END SELECT 
      rt3$ = rt$ + " Deckung: " + STR$ (decksum3.ha022011,",999999999.00")
    END IF 
 
 
    IF LTRIM$ (sumart4.ha022011) <> "" THEN 
      SELECT CASE UCASE$ (sumart4.ha022011)
        CASE "1"
          rt$ = "PS"
        CASE "2"
          rt$ = "SS"
        CASE "3"
          rt$ = "PS+SS"
        CASE "4"
          rt$ = "VS"
        CASE "5"
          rt$ = "PS+VS"
        CASE "6"
          rt$ = "SS+VS"
        CASE "7"
          rt$ = "PS, VS, SS"
        CASE "8"
          rt$ = "frei"
        CASE "9"
          rt$ = "EP (Einheitspauschale)"
        CASE "A"
          rt$ = "= Personen- und SachschÑden (pauschal)"
        CASE "B"
          rt$ = "sonstige Sach- und VermîgensschÑden (pauschal)"
        CASE "C"
          rt$ = "PersonenschÑden und sonstige SchÑden (pauschal)"
        CASE "D"
          rt$ = "unbegrenzt (nur fÅr Gabelstapler nach AKB)"
        CASE "Z"
          rt$ = "sonstiges"
      END SELECT 
      rt4$ = rt$ + " Deckung: " + STR$ (decksum4.ha022011,",999999999.00")
    END IF 
    IF rt1$ <> "" THEN rtges$ = rtges$ + CHR$ (13) + rt1$
    IF rt2$ <> "" THEN rtges$ = rtges$ + CHR$ (13) + rt2$
    IF rt3$ <> "" THEN rtges$ = rtges$ + CHR$ (13) + rt3$
    IF rt4$ <> "" THEN rtges$ = rtges$ + CHR$ (13) + rt4$
    rt1$ = "":rt2$ = "":rt3$ = "":rt4$ = ""
 
    risiko.kvertrag = rtges$
    IF textab$ <> "" THEN BesVereinbarung.kvertrag = LEFT$ ("Wagnis:" + CHR$ (13) + CHR$ (10) + textab$,4000)
    CALL QuickStore("KVERTRAG")
  END IF 
  REM **************************************************************************************************************
  REM *                    ENDE  der  Spartenspezifische Eintragungen in KVERTRAG                                  *
  REM **************************************************************************************************************        
 END SUB 
 
 
 REM ****************
 REM * UNDEFINIERTE *
 REM ****************
SUB gdvUndef(gdvserial%,gdvC200%,gdvKlfd%,lfdnrtotal%,gdvlf%)
 DIM gdvUDFelder$(1)
 DIM gdvFUndef$(3,1)
  gdvFUndef$(0,0) = "UD021011"
  gdvFUndef$(0,1) = "UDg21011"
  gdvFUndef$(1,0) = "UD021012"
  gdvFUndef$(1,1) = "UDg21012"
  gdvFUndef$(2,0) = "UD022011"
  gdvFUndef$(2,1) = "UDg22011"
  gdvFUndef$(3,0) = "UD022012"
  gdvFUndef$(3,1) = "UDg22012"
  
  
 FOR j% = 0 TO 3
   
   REM Felder fÅr G-Dateien
   gdvFTemp2$ = "gdvku." + gdvFUndef$(j%,1)
   REM Felder fÅr 0-Dateien
   gdvFTemp3$ = "lfdnr." + gdvFUndef$(j%,0)
   gdvFTemp4$ = "code" + gdvFUndef$(j%,0) + "." + gdvFUndef$(j%,0)
   gdvFTemp5$ = "lfdnrtotal." + gdvFUndef$(j%,0)
 
   REM ôffnen der 0-Datei
   CALL DFile(3,gdvFUndef$(j%,0) + _fpw$)
   FILE gdvFUndef$(j%,0)
   INDEX gdvFTemp3$$
   REM wenn in der Datei die lfdnr vorkommt -> durchgehen und alle lîschen
   IF EXISTS (gdvKlfd%,gdvFTemp3$$) THEN 
     SELECT FIRST FILE gdvFUndef$(j%,0) INDEX gdvFTemp3$$
     SELECT KEY gdvKlfd% FILE gdvFUndef$(j%,0) INDEX gdvFTemp3$$
     WHILE NOT EOF (gdvFUndef$(j%,0)) AND gdvFTemp3$$ = gdvKlfd%
        IF gdvFTemp3$$ = gdvKlfd% THEN 
         SELECT CURRENT LOCK FILE gdvFUndef$(j%,0)
         SELECT REMOVE FILE gdvFUndef$(j%,0)
         UNLOCK CURRENT FILE gdvFUndef$(j%,0)
         REM SELECT PREVIOUS FILE gdvFUndef$(j%,0)
         SELECT FIRST FILE gdvFUndef$(j%,0) INDEX gdvFTemp3$$
         SELECT KEY gdvKlfd% FILE gdvFUndef$(j%,0) INDEX gdvFTemp3$$
       ELSE 
         SELECT NEXT FILE gdvFUndef$(j%,0) INDEX gdvFTemp3$$
       END IF 
     WEND 
   END IF 
 
   REM Auf G-Datei setzen
   FILE gdvFUndef$(j%,1)
   INDEX gdvFTemp2$$
   REM PrÅfen ob die GDVKU vorkommt -> Wenn ja durchgehen HAd alle DatensÑtze nach 0-Datei
   REM                                 Wenn nein zur nÑchsten G-Datei
   IF EXISTS (gdvserial%,gdvFTemp2$$) THEN 
     SELECT FIRST FILE gdvFUndef$(j%,1) INDEX gdvFTemp2$$
     SELECT KEY gdvserial% FILE gdvFUndef$(j%,1) INDEX gdvFTemp2$$
     REM GDVKU in G-Datei vorhanden
     WHILE NOT EOF (gdvFUndef$(j%,1)) AND gdvFTemp2$$ = gdvserial%
       
       REM wenn ein Datensatz mit gleicher GDVKU gefHAden wird
       IF gdvFTemp2$$ = gdvserial% THEN 
         
         REM Auf 0-Datei setzen
         FILE gdvFUndef$(j%,0)
 
         BLANK FILE gdvFUndef$(j%,0)
 
         gdvFTemp3$$ = gdvKlfd%
         gdvUD% = SER (gdvFTemp4$$)
         IF UCASE$ (gdvFUndef$(j%,0)) = "UD021011" THEN gdvC210% = gdvUD%
         STORE FILE gdvFUndef$(j%,0)
         SELECT KEY gdvKlfd% LOCK FILE gdvFUndef$(j%,0) INDEX gdvFTemp3$$
  
         gdvanzfeld% = FILEINFO (gdvFUndef$(j%,0),1)
         REDIM gdvUDFelder$(gdvanzfeld%)
         FILLARRAY gdvUDFelder$,1
         FOR i% = 0 TO gdvanzfeld% - 1
           FTemp1$ = gdvUDFelder$(i%) + "." + gdvFUndef$(j%,0)
           FTemp2$ = gdvUDFelder$(i%) + "." + gdvFUndef$(j%,1)
           REM  CALL Info("","")
           REM IF FTemp2$$ > "" OR FTemp2$$ > 0 THEN 
           FTemp1$$ = FTemp2$$
           IF UCASE$ (gdvUDFelder$(i%)) = "CODE200" THEN FTemp1$$ = gdvC200%
           IF UCASE$ (gdvUDFelder$(i%)) = "CODEUD021011" THEN FTemp1$$ = gdvC210%
         NEXT i%
 
         gdvFTemp3$$ = gdvKlfd%
 
         gdvFTemp5$$ = gdvKlfd% * 10000
         gdvFTemp4$$ = gdvUD%
   
         FILE gdvFUndef$(j%,0)
         CALL QuickStore(gdvFUndef$(j%,0))
         MOUSE OFF 
         UNLOCK CURRENT FILE gdvFUndef$(j%,0)
       END IF 
       FILE gdvFUndef$(j%,1)
       SELECT NEXT FILE gdvFUndef$(j%,1) INDEX gdvFTemp2$$
     WEND 
   END IF 
 NEXT j%
 
 END SUB 
 
 
  REM ****************
 REM * Transport    *
 REM ****************
SUB gdvTrans(gdvserial%,gdvC200%,gdvKlfd%,lfdnrtotal%,gdvlf%)
 DIM gdvTRFelder$(1)
 DIM gdvFTrans$(4,1)
  gdvFTrans$(0,0) = "TR021011"
  gdvFTrans$(0,1) = "TRg21011"
  gdvFTrans$(1,0) = "TR022011"
  gdvFTrans$(1,1) = "TRg22011"
  gdvFTrans$(2,0) = "TR022012"
  gdvFTrans$(2,1) = "TRg22012"
  gdvFTrans$(3,0) = "TR025011"
  gdvFTrans$(3,1) = "TRg25011"
  gdvFTrans$(4,0) = "TR026011"
  gdvFTrans$(4,1) = "TRg26011"
 
  
 FOR j% = 0 TO 4
   
   REM Felder fÅr G-Dateien
   gdvFTemp2$ = "gdvku." + gdvFTrans$(j%,1)
   REM Felder fÅr 0-Dateien
   gdvFTemp3$ = "lfdnr." + gdvFTrans$(j%,0)
   gdvFTemp4$ = "code" + gdvFTrans$(j%,0) + "." + gdvFTrans$(j%,0)
   gdvFTemp5$ = "lfdnrtotal." + gdvFTrans$(j%,0)
 
   REM ôffnen der 0-Datei
   CALL DFile(3,gdvFTrans$(j%,0) + _fpw$)
   FILE gdvFTrans$(j%,0)
   INDEX gdvFTemp3$$
   REM wenn in der Datei die lfdnr vorkommt -> durchgehen und alle lîschen
   IF EXISTS (gdvKlfd%,gdvFTemp3$$) THEN 
     SELECT FIRST FILE gdvFTrans$(j%,0) INDEX gdvFTemp3$$
     SELECT KEY gdvKlfd% FILE gdvFTrans$(j%,0) INDEX gdvFTemp3$$
     WHILE NOT EOF (gdvFTrans$(j%,0)) AND gdvFTemp3$$ = gdvKlfd%
        IF gdvFTemp3$$ = gdvKlfd% THEN 
         SELECT CURRENT LOCK FILE gdvFTrans$(j%,0)
         SELECT REMOVE FILE gdvFTrans$(j%,0)
         UNLOCK CURRENT FILE gdvFTrans$(j%,0)
         REM SELECT PREVIOUS FILE gdvFTrans$(j%,0)
         SELECT FIRST FILE gdvFTrans$(j%,0) INDEX gdvFTemp3$$
         SELECT KEY gdvKlfd% FILE gdvFTrans$(j%,0) INDEX gdvFTemp3$$
       ELSE 
         SELECT NEXT FILE gdvFTrans$(j%,0) INDEX gdvFTemp3$$
       END IF 
 
       
     WEND 
   END IF 
 
   REM Auf G-Datei setzen
   FILE gdvFTrans$(j%,1)
   INDEX gdvFTemp2$$
   REM PrÅfen ob die GDVKU vorkommt -> Wenn ja durchgehen HAd alle DatensÑtze nach 0-Datei
   REM                                 Wenn nein zur nÑchsten G-Datei
   IF EXISTS (gdvserial%,gdvFTemp2$$) THEN 
     SELECT FIRST FILE gdvFTrans$(j%,1) INDEX gdvFTemp2$$
     SELECT KEY gdvserial% FILE gdvFTrans$(j%,1) INDEX gdvFTemp2$$
     REM GDVKU in G-Datei vorhanden
     WHILE NOT EOF (gdvFTrans$(j%,1)) AND gdvFTemp2$$ = gdvserial%
       
       REM wenn ein Datensatz mit gleicher GDVKU gefHAden wird
       IF gdvFTemp2$$ = gdvserial% THEN 
         
         REM Auf 0-Datei setzen
         FILE gdvFTrans$(j%,0)
 
         BLANK FILE gdvFTrans$(j%,0)
 
         gdvFTemp3$$ = gdvKlfd%
         gdvTR% = SER (gdvFTemp4$$)
         IF UCASE$ (gdvFTrans$(j%,0)) = "TR021011" THEN gdvC210% = gdvTR%
         STORE FILE gdvFTrans$(j%,0)
         SELECT KEY gdvKlfd% LOCK FILE gdvFTrans$(j%,0) INDEX gdvFTemp3$$
  
         gdvanzfeld% = FILEINFO (gdvFTrans$(j%,0),1)
         REDIM gdvTRFelder$(gdvanzfeld%)
         FILLARRAY gdvTRFelder$,1
         FOR i% = 0 TO gdvanzfeld% - 1
           FTemp1$ = gdvTRFelder$(i%) + "." + gdvFTrans$(j%,0)
           FTemp2$ = gdvTRFelder$(i%) + "." + gdvFTrans$(j%,1)
           REM  CALL Info("","")
           REM IF FTemp2$$ > "" OR FTemp2$$ > 0 THEN 
           FTemp1$$ = FTemp2$$
           IF UCASE$ (gdvTRFelder$(i%)) = "CODE200" THEN FTemp1$$ = gdvC200%
           IF UCASE$ (gdvTRFelder$(i%)) = "CODETR021011" THEN FTemp1$$ = gdvC210%
         NEXT i%
 
         gdvFTemp3$$ = gdvKlfd%
 
         gdvFTemp5$$ = gdvKlfd% * 10000
         gdvFTemp4$$ = gdvTR%
   
         FILE gdvFTrans$(j%,0)
         CALL QuickStore(gdvFTrans$(j%,0))
         MOUSE OFF 
         UNLOCK CURRENT FILE gdvFTrans$(j%,0)
       END IF 
       FILE gdvFTrans$(j%,1)
       SELECT NEXT FILE gdvFTrans$(j%,1) INDEX gdvFTemp2$$
     WEND 
   END IF 
 NEXT j%
 
  IF EXISTS (gdvKlfd%,lfdnr.TR021011) THEN 
    SELECT KEY gdvKlfd% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
    SELECT FIRST FILE "TR021011" INDEX lfdnr.TR021011
    SELECT KEY gdvKlfd% FILE "TR021011" INDEX lfdnr.TR021011
    REM CALL Fehler(tarifbez.le022021,"")
    VSumme.Kvertrag = GESVSUM.TR021011
 
    IF BKZ.TR021011 = "1" THEN 
      mwst% = 0
      QuickGEVA$ = STR$ (codege.kvertrag,"000000") + STR$ (codeva.kvertrag,"000000")
      SELECT FIRST FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      SELECT KEY QuickGEVA$ FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      mwst% = mwst.vprodukt
      IF GESPR.TR021011 > 0 THEN 
        IF mwst% = 0 THEN 
          REM beitr1ab1$ = STR$ (Beitwe.alg20011,",999999.00")
          Beitrag.kvertrag = GESPR.TR021011
          NettoBeitrag.kvertrag = GESPR.TR021011
        ELSE 
          bmwst% = (GESPR.TR021011 * mwst% / 100)
          bmwst$ = STR$ (bmwst% + 0.005,"999999.00")
          bmwst2% = VAL (bmwst$)
          Beitrag.kvertrag = GESPR.TR021011 + bmwst2%
          NettoBeitrag.kvertrag = GESPR.TR021011
        END IF 
      END IF 
      IF begdat.TR021011 > 0 THEN vs_Beginn.kvertrag = begdat.TR021011
      IF ausdat.TR021011 > 0 THEN 
        KÅndigung.kvertrag = ausdat.TR021011
      END IF 
    END IF 
    STORE FILE "kvertrag"
  END IF 

 END SUB 
 
 
 REM *******************
 REM * Rechtsschutz    *
 REM *******************
SUB gdvRecht(gdvserial%,gdvC200%,gdvKlfd%,lfdnrtotal%,gdvlf%)
 DIM gdvREFelder$(1)
 DIM gdvFRecht$(2,1)
  gdvFRecht$(0,0) = "RE021011"
  gdvFRecht$(0,1) = "REg21011"
  gdvFRecht$(1,0) = "RE022011"
  gdvFRecht$(1,1) = "REg22011"
  gdvFRecht$(2,0) = "RE022012"
  gdvFRecht$(2,1) = "REg22012"
 
  
 FOR j% = 0 TO 2
 
 
   REM Felder fÅr G-Dateien
   gdvFTemp2$ = "gdvku." + gdvFRecht$(j%,1)
   REM Felder fÅr 0-Dateien
   gdvFTemp3$ = "lfdnr." + gdvFRecht$(j%,0)
   gdvFTemp4$ = "code" + gdvFRecht$(j%,0) + "." + gdvFRecht$(j%,0)
   gdvFTemp5$ = "lfdnrtotal." + gdvFRecht$(j%,0)
 
   REM ôffnen der 0-Datei
   CALL DFile(3,gdvFRecht$(j%,0) + _fpw$)
   FILE gdvFRecht$(j%,0)
   INDEX gdvFTemp3$$
   REM wenn in der Datei die lfdnr vorkommt -> durchgehen und alle lîschen
   IF EXISTS (gdvKlfd%,gdvFTemp3$$) THEN 
     SELECT FIRST FILE gdvFRecht$(j%,0) INDEX gdvFTemp3$$
     SELECT KEY gdvKlfd% FILE gdvFRecht$(j%,0) INDEX gdvFTemp3$$
     WHILE NOT EOF (gdvFRecht$(j%,0)) AND gdvFTemp3$$ = gdvKlfd%
        IF gdvFTemp3$$ = gdvKlfd% THEN 
         SELECT CURRENT LOCK FILE gdvFRecht$(j%,0)
         SELECT REMOVE FILE gdvFRecht$(j%,0)
         UNLOCK CURRENT FILE gdvFRecht$(j%,0)
         REM SELECT PREVIOUS FILE gdvFRecht$(j%,0)
         SELECT FIRST FILE gdvFRecht$(j%,0) INDEX gdvFTemp3$$
         SELECT KEY gdvKlfd% FILE gdvFRecht$(j%,0) INDEX gdvFTemp3$$
       ELSE 
         SELECT NEXT FILE gdvFRecht$(j%,0) INDEX gdvFTemp3$$
       END IF 
 
       
     WEND 
   END IF 
 
   REM Auf G-Datei setzen
   FILE gdvFRecht$(j%,1)
   INDEX gdvFTemp2$$
   REM PrÅfen ob die GDVKU vorkommt -> Wenn ja durchgehen HAd alle DatensÑtze nach 0-Datei
   REM                                 Wenn nein zur nÑchsten G-Datei
   IF EXISTS (gdvserial%,gdvFTemp2$$) THEN 
     SELECT FIRST FILE gdvFRecht$(j%,1) INDEX gdvFTemp2$$
     SELECT KEY gdvserial% FILE gdvFRecht$(j%,1) INDEX gdvFTemp2$$
     REM GDVKU in G-Datei vorhanden
     WHILE NOT EOF (gdvFRecht$(j%,1)) AND gdvFTemp2$$ = gdvserial%
       
       REM wenn ein Datensatz mit gleicher GDVKU gefHAden wird
       IF gdvFTemp2$$ = gdvserial% THEN 
         
         REM Auf 0-Datei setzen
         FILE gdvFRecht$(j%,0)
 
         BLANK FILE gdvFRecht$(j%,0)
 
         gdvFTemp3$$ = gdvKlfd%
         gdvRE% = SER (gdvFTemp4$$)
         IF UCASE$ (gdvFRecht$(j%,0)) = "RE021011" THEN gdvC210% = gdvRE%
         STORE FILE gdvFRecht$(j%,0)
         SELECT KEY gdvKlfd% LOCK FILE gdvFRecht$(j%,0) INDEX gdvFTemp3$$
  
         gdvanzfeld% = FILEINFO (gdvFRecht$(j%,0),1)
         REDIM gdvREFelder$(gdvanzfeld%)
         FILLARRAY gdvREFelder$,1
         FOR i% = 0 TO gdvanzfeld% - 1
           FTemp1$ = gdvREFelder$(i%) + "." + gdvFRecht$(j%,0)
           FTemp2$ = gdvREFelder$(i%) + "." + gdvFRecht$(j%,1)
           REM  CALL Info("","")
           REM IF FTemp2$$ > "" OR FTemp2$$ > 0 THEN 
           FTemp1$$ = FTemp2$$
           IF UCASE$ (gdvREFelder$(i%)) = "CODE200" THEN FTemp1$$ = gdvC200%
           IF UCASE$ (gdvREFelder$(i%)) = "CODERE021011" THEN FTemp1$$ = gdvC210%
         NEXT i%
 
         gdvFTemp3$$ = gdvKlfd%
 
         gdvFTemp5$$ = gdvKlfd% * 10000
         gdvFTemp4$$ = gdvRE%
   
         FILE gdvFRecht$(j%,0)
         CALL QuickStore(gdvFRecht$(j%,0))
         MOUSE OFF 
         UNLOCK CURRENT FILE gdvFRecht$(j%,0)
       END IF 
       FILE gdvFRecht$(j%,1)
       SELECT NEXT FILE gdvFRecht$(j%,1) INDEX gdvFTemp2$$
     WEND 
   END IF 
 NEXT j%
  IF EXISTS (gdvKlfd%,lfdnr.RE021011) THEN 
    SELECT KEY gdvKlfd% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
    SELECT FIRST FILE "RE021011" INDEX lfdnr.RE021011
    SELECT KEY gdvKlfd% FILE "RE021011" INDEX lfdnr.RE021011
    REM CALL Fehler(tarifbez.le022021,"")
 
 
    IF BKZ.RE021011 = "1" THEN 
      mwst% = 0
      QuickGEVA$ = STR$ (codege.kvertrag,"000000") + STR$ (codeva.kvertrag,"000000")
      SELECT FIRST FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      SELECT KEY QuickGEVA$ FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      mwst% = mwst.vprodukt
      IF BEITR.RE021011 > 0 THEN 
        IF mwst% = 0 THEN 
          REM beitr1ab1$ = STR$ (Beitwe.alg20011,",999999.00")
          Beitrag.kvertrag = BEITR.RE021011
          NettoBeitrag.kvertrag = BEITR.RE021011
        ELSE 
          bmwst% = (BEITR.RE021011 * mwst% / 100)
          bmwst$ = STR$ (bmwst% + 0.005,"999999.00")
          bmwst2% = VAL (bmwst$)
          Beitrag.kvertrag = BEITR.RE021011 + bmwst2%
          NettoBeitrag.kvertrag = BEITR.RE021011
        END IF 
      END IF 
      IF begdat.RE021011 > 0 THEN vs_Beginn.kvertrag = begdat.RE021011
      IF ausdat.RE021011 > 0 THEN 
        KÅndigung.kvertrag = ausdat.RE021011
      END IF 
    END IF 
    STORE FILE "kvertrag"
  END IF 
 END SUB 
 
  REM *******************
 REM * Technische      *
 REM *******************
SUB gdvTech(gdvserial%,gdvC200%,gdvKlfd%,lfdnrtotal%,gdvlf%)
 DIM gdvTEFelder$(1)
 DIM gdvFTech$(3,1)
  gdvFTech$(0,0) = "TE021011"
  gdvFTech$(0,1) = "TEg21011"
  gdvFTech$(1,0) = "TE022011"
  gdvFTech$(1,1) = "TEg22011"
  gdvFTech$(2,0) = "TE022012"
  gdvFTech$(2,1) = "TEg22012"
  gdvFTech$(3,0) = "TE022013"
  gdvFTech$(3,1) = "TEg22013"
 
  
 FOR j% = 0 TO 3
   
   REM Felder fÅr G-Dateien
   gdvFTemp2$ = "gdvku." + gdvFTech$(j%,1)
   REM Felder fÅr 0-Dateien
   gdvFTemp3$ = "lfdnr." + gdvFTech$(j%,0)
   gdvFTemp4$ = "code" + gdvFTech$(j%,0) + "." + gdvFTech$(j%,0)
   gdvFTemp5$ = "lfdnrtotal." + gdvFTech$(j%,0)
 
   REM ôffnen der 0-Datei
   CALL DFile(3,gdvFTech$(j%,0) + _fpw$)
   FILE gdvFTech$(j%,0)
   INDEX gdvFTemp3$$
   REM wenn in der Datei die lfdnr vorkommt -> durchgehen und alle lîschen
   IF EXISTS (gdvKlfd%,gdvFTemp3$$) THEN 
     SELECT FIRST FILE gdvFTech$(j%,0) INDEX gdvFTemp3$$
     SELECT KEY gdvKlfd% FILE gdvFTech$(j%,0) INDEX gdvFTemp3$$
     WHILE NOT EOF (gdvFTech$(j%,0)) AND gdvFTemp3$$ = gdvKlfd%
        IF gdvFTemp3$$ = gdvKlfd% THEN 
         SELECT CURRENT LOCK FILE gdvFTech$(j%,0)
         SELECT REMOVE FILE gdvFTech$(j%,0)
         UNLOCK CURRENT FILE gdvFTech$(j%,0)
         REM SELECT PREVIOUS FILE gdvFTech$(j%,0)
         SELECT FIRST FILE gdvFTech$(j%,0) INDEX gdvFTemp3$$
         SELECT KEY gdvKlfd% FILE gdvFTech$(j%,0) INDEX gdvFTemp3$$
       ELSE 
         SELECT NEXT FILE gdvFTech$(j%,0) INDEX gdvFTemp3$$
       END IF 
 
       
     WEND 
   END IF 
 
   REM Auf G-Datei setzen
   FILE gdvFTech$(j%,1)
   INDEX gdvFTemp2$$
   REM PrÅfen ob die GDVKU vorkommt -> Wenn ja durchgehen HAd alle DatensÑtze nach 0-Datei
   REM                                 Wenn nein zur nÑchsten G-Datei
   IF EXISTS (gdvserial%,gdvFTemp2$$) THEN 
     SELECT FIRST FILE gdvFTech$(j%,1) INDEX gdvFTemp2$$
     SELECT KEY gdvserial% FILE gdvFTech$(j%,1) INDEX gdvFTemp2$$
     REM GDVKU in G-Datei vorhanden
     WHILE NOT EOF (gdvFTech$(j%,1)) AND gdvFTemp2$$ = gdvserial%
       
       REM wenn ein Datensatz mit gleicher GDVKU gefHAden wird
       IF gdvFTemp2$$ = gdvserial% THEN 
         
         REM Auf 0-Datei setzen
         FILE gdvFTech$(j%,0)
 
         BLANK FILE gdvFTech$(j%,0)
 
         gdvFTemp3$$ = gdvKlfd%
         gdvTE% = SER (gdvFTemp4$$)
         IF UCASE$ (gdvFTech$(j%,0)) = "TE021011" THEN gdvC210% = gdvTE%
         STORE FILE gdvFTech$(j%,0)
         SELECT KEY gdvKlfd% LOCK FILE gdvFTech$(j%,0) INDEX gdvFTemp3$$
  
         gdvanzfeld% = FILEINFO (gdvFTech$(j%,0),1)
         REDIM gdvTEFelder$(gdvanzfeld%)
         FILLARRAY gdvTEFelder$,1
         FOR i% = 0 TO gdvanzfeld% - 1
           FTemp1$ = gdvTEFelder$(i%) + "." + gdvFTech$(j%,0)
           FTemp2$ = gdvTEFelder$(i%) + "." + gdvFTech$(j%,1)
           REM  CALL Info("","")
           REM IF FTemp2$$ > "" OR FTemp2$$ > 0 THEN 
           FTemp1$$ = FTemp2$$
           IF UCASE$ (gdvTEFelder$(i%)) = "CODE200" THEN FTemp1$$ = gdvC200%
           IF UCASE$ (gdvTEFelder$(i%)) = "CODETE021011" THEN FTemp1$$ = gdvC210%
         NEXT i%
 
         gdvFTemp3$$ = gdvKlfd%
 
         gdvFTemp5$$ = gdvKlfd% * 10000
         gdvFTemp4$$ = gdvTE%
   
         FILE gdvFTech$(j%,0)
         CALL QuickStore(gdvFTech$(j%,0))
         MOUSE OFF 
         UNLOCK CURRENT FILE gdvFTech$(j%,0)
       END IF 
       FILE gdvFTech$(j%,1)
       SELECT NEXT FILE gdvFTech$(j%,1) INDEX gdvFTemp2$$
     WEND 
   END IF 
 NEXT j%

  IF EXISTS (gdvKlfd%,lfdnr.TE021011) THEN 
    SELECT KEY gdvKlfd% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
    SELECT FIRST FILE "TE021011" INDEX lfdnr.TE021011
    SELECT KEY gdvKlfd% FILE "TE021011" INDEX lfdnr.TE021011
    REM CALL Fehler(tarifbez.le022021,"")
 
 
    IF BKZ.TE021011 = "1" THEN 
      mwst% = 0
      QuickGEVA$ = STR$ (codege.kvertrag,"000000") + STR$ (codeva.kvertrag,"000000")
      SELECT FIRST FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      SELECT KEY QuickGEVA$ FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      mwst% = mwst.vprodukt
      IF GESBETR.TE021011 > 0 THEN 
        IF mwst% = 0 THEN 
          REM beitr1ab1$ = STR$ (Beitwe.alg20011,",999999.00")
          Beitrag.kvertrag = GESBETR.TE021011
          NettoBeitrag.kvertrag = GESBETR.TE021011
        ELSE 
          bmwst% = (GESBETR.TE021011 * mwst% / 100)
          bmwst$ = STR$ (bmwst% + 0.005,"999999.00")
          bmwst2% = VAL (bmwst$)
          Beitrag.kvertrag = GESBETR.TE021011 + bmwst2%
          NettoBeitrag.kvertrag = GESBETR.TE021011
        END IF 
      END IF 
      IF begdat.TE021011 > 0 THEN vs_Beginn.kvertrag = begdat.TE021011
      IF ausdat.TE021011 > 0 THEN 
        KÅndigung.kvertrag = ausdat.TE021011
      END IF 
    END IF 
    STORE FILE "kvertrag"
  END IF 
 END SUB 
 
   REM *******************
 REM * Verkehr         *
 REM *******************
SUB gdvVerkehr(gdvserial%,gdvC200%,gdvKlfd%,lfdnrtotal%,gdvlf%)
 DIM gdvVSFelder$(1)
 DIM gdvFVerkehr$(1,1)
  gdvFVerkehr$(0,0) = "VS021011"
  gdvFVerkehr$(0,1) = "VSg21011"
  gdvFVerkehr$(1,0) = "VS022011"
  gdvFVerkehr$(1,1) = "VSg22011"
 
  FOR j% = 0 TO 1
   
   REM Felder fÅr G-Dateien
   gdvFTemp2$ = "gdvku." + gdvFVerkehr$(j%,1)
   REM Felder fÅr 0-Dateien
   gdvFTemp3$ = "lfdnr." + gdvFVerkehr$(j%,0)
   gdvFTemp4$ = "code" + gdvFVerkehr$(j%,0) + "." + gdvFVerkehr$(j%,0)
   gdvFTemp5$ = "lfdnrtotal." + gdvFVerkehr$(j%,0)
 
   REM ôffnen der 0-Datei
   CALL DFile(3,gdvFVerkehr$(j%,0) + _fpw$)
   FILE gdvFVerkehr$(j%,0)
   INDEX gdvFTemp3$$
 
   REM wenn in der Datei die lfdnr vorkommt -> durchgehen und alle lîschen
   IF EXISTS (gdvKlfd%,gdvFTemp3$$) THEN 
     SELECT FIRST FILE gdvFVerkehr$(j%,0) INDEX gdvFTemp3$$
     SELECT KEY gdvKlfd% FILE gdvFVerkehr$(j%,0) INDEX gdvFTemp3$$
     WHILE NOT EOF (gdvFVerkehr$(j%,0)) AND gdvFTemp3$$ = gdvKlfd%
        IF gdvFTemp3$$ = gdvKlfd% THEN 
         SELECT CURRENT LOCK FILE gdvFVerkehr$(j%,0)
         SELECT REMOVE FILE gdvFVerkehr$(j%,0)
         UNLOCK CURRENT FILE gdvFVerkehr$(j%,0)
         REM SELECT PREVIOUS FILE gdvFVerkehr$(j%,0)
         SELECT FIRST FILE gdvFVerkehr$(j%,0) INDEX gdvFTemp3$$
         SELECT KEY gdvKlfd% FILE gdvFVerkehr$(j%,0) INDEX gdvFTemp3$$
       ELSE 
         SELECT NEXT FILE gdvFVerkehr$(j%,0) INDEX gdvFTemp3$$
       END IF 
 
     WEND 
   END IF 
 
   REM Auf G-Datei setzen
   FILE gdvFVerkehr$(j%,1)
   INDEX gdvFTemp2$$
   REM PrÅfen ob die GDVKU vorkommt -> Wenn ja durchgehen HAd alle DatensÑtze nach 0-Datei
   REM                                 Wenn nein zur nÑchsten G-Datei
   IF EXISTS (gdvserial%,gdvFTemp2$$) THEN 
     SELECT FIRST FILE gdvFVerkehr$(j%,1) INDEX gdvFTemp2$$
     SELECT KEY gdvserial% FILE gdvFVerkehr$(j%,1) INDEX gdvFTemp2$$
     REM GDVKU in G-Datei vorhanden
     WHILE NOT EOF (gdvFVerkehr$(j%,1)) AND gdvFTemp2$$ = gdvserial%
       
       REM wenn ein Datensatz mit gleicher GDVKU gefHAden wird
       IF gdvFTemp2$$ = gdvserial% THEN 
         
         REM Auf 0-Datei setzen
         FILE gdvFVerkehr$(j%,0)
 
         BLANK FILE gdvFVerkehr$(j%,0)
 
         gdvFTemp3$$ = gdvKlfd%
         gdvVS% = SER (gdvFTemp4$$)
         IF UCASE$ (gdvFVerkehr$(j%,0)) = "VS021011" THEN gdvC210% = gdvVS%
         STORE FILE gdvFVerkehr$(j%,0)
         SELECT KEY gdvKlfd% LOCK FILE gdvFVerkehr$(j%,0) INDEX gdvFTemp3$$
  
         gdvanzfeld% = FILEINFO (gdvFVerkehr$(j%,0),1)
         REDIM gdvVSFelder$(gdvanzfeld%)
         FILLARRAY gdvVSFelder$,1
         FOR i% = 0 TO gdvanzfeld% - 1
           FTemp1$ = gdvVSFelder$(i%) + "." + gdvFVerkehr$(j%,0)
           FTemp2$ = gdvVSFelder$(i%) + "." + gdvFVerkehr$(j%,1)
           REM  CALL Info("","")
           REM IF FTemp2$$ > "" OR FTemp2$$ > 0 THEN 
           FTemp1$$ = FTemp2$$
           IF UCASE$ (gdvVSFelder$(i%)) = "CODE200" THEN FTemp1$$ = gdvC200%
           IF UCASE$ (gdvVSFelder$(i%)) = "CODEVS021011" THEN FTemp1$$ = gdvC210%
         NEXT i%
 
         gdvFTemp3$$ = gdvKlfd%
 
         gdvFTemp5$$ = gdvKlfd% * 10000
         gdvFTemp4$$ = gdvVS%
   
         FILE gdvFVerkehr$(j%,0)
         CALL QuickStore(gdvFVerkehr$(j%,0))
         MOUSE OFF 
         UNLOCK CURRENT FILE gdvFVerkehr$(j%,0)
       END IF 
       FILE gdvFVerkehr$(j%,1)
       SELECT NEXT FILE gdvFVerkehr$(j%,1) INDEX gdvFTemp2$$
     WEND 
   END IF 
 NEXT j%
  IF EXISTS (gdvKlfd%,lfdnr.VS021011) THEN 
    SELECT KEY gdvKlfd% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
    SELECT FIRST FILE "VS021011" INDEX lfdnr.VS021011
    SELECT KEY gdvKlfd% FILE "VS021011" INDEX lfdnr.VS021011
    REM CALL Fehler(tarifbez.le022021,"")
 
 
    IF BKZ.VS021011 = "1" THEN 
      mwst% = 0
      QuickGEVA$ = STR$ (codege.kvertrag,"000000") + STR$ (codeva.kvertrag,"000000")
      SELECT FIRST FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      SELECT KEY QuickGEVA$ FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      mwst% = mwst.vprodukt
      IF BEITR.VS021011 > 0 THEN 
        IF mwst% = 0 THEN 
          REM beitr1ab1$ = STR$ (Beitwe.alg20011,",999999.00")
          Beitrag.kvertrag = BEITR.VS021011
          NettoBeitrag.kvertrag = BEITR.VS021011
        ELSE 
          bmwst% = (BEITR.VS021011 * mwst% / 100)
          bmwst$ = STR$ (bmwst% + 0.005,"999999.00")
          bmwst2% = VAL (bmwst$)
          Beitrag.kvertrag = BEITR.VS021011 + bmwst2%
          NettoBeitrag.kvertrag = BEITR.VS021011
        END IF 
      END IF 
      IF begdat.VS021011 > 0 THEN vs_Beginn.kvertrag = begdat.VS021011
      IF ausdat.VS021011 > 0 THEN 
        KÅndigung.kvertrag = ausdat.VS021011
      END IF 
    END IF 
    STORE FILE "kvertrag"
  END IF 
 END SUB 
 
 REM *******************
 REM * Feuer           *
 REM *******************
SUB gdvFeuer(gdvserial%,gdvC200%,gdvKlfd%,lfdnrtotal%,gdvlf%)
 DIM gdvFUFelder$(1)
 DIM gdvFFeuer$(2,1)
  gdvFFeuer$(0,0) = "FU021011"
  gdvFFeuer$(0,1) = "FUg21011"
  gdvFFeuer$(1,0) = "FU022011"
  gdvFFeuer$(1,1) = "FUg22011"
  gdvFFeuer$(2,0) = "FU022012"
  gdvFFeuer$(2,1) = "FUg22012"
  
             
 FOR j% = 0 TO 2
   
   REM Felder fÅr G-Dateien
   gdvFTemp2$ = "gdvku." + gdvFFeuer$(j%,1)
   REM Felder fÅr 0-Dateien
   gdvFTemp3$ = "lfdnr." + gdvFFeuer$(j%,0)
   gdvFTemp4$ = "code" + gdvFFeuer$(j%,0) + "." + gdvFFeuer$(j%,0)
   gdvFTemp5$ = "lfdnrtotal." + gdvFFeuer$(j%,0)
 
   REM ôffnen der 0-Datei
   CALL DFile(3,gdvFFeuer$(j%,0) + _fpw$)
   FILE gdvFFeuer$(j%,0)
   INDEX gdvFTemp3$$
   REM wenn in der Datei die lfdnr vorkommt -> durchgehen und alle lîschen
   IF EXISTS (gdvKlfd%,gdvFTemp3$$) THEN 
     SELECT FIRST FILE gdvFFeuer$(j%,0) INDEX gdvFTemp3$$
     SELECT KEY gdvKlfd% FILE gdvFFeuer$(j%,0) INDEX gdvFTemp3$$
     WHILE NOT EOF (gdvFFeuer$(j%,0)) AND gdvFTemp3$$ = gdvKlfd%
        IF gdvFTemp3$$ = gdvKlfd% THEN 
         SELECT CURRENT LOCK FILE gdvFFeuer$(j%,0)
         SELECT REMOVE FILE gdvFFeuer$(j%,0)
         UNLOCK CURRENT FILE gdvFFeuer$(j%,0)
         REM SELECT PREVIOUS FILE gdvFFeuer$(j%,0)
         SELECT FIRST FILE gdvFFeuer$(j%,0) INDEX gdvFTemp3$$
         SELECT KEY gdvKlfd% FILE gdvFFeuer$(j%,0) INDEX gdvFTemp3$$
       ELSE 
         SELECT NEXT FILE gdvFFeuer$(j%,0) INDEX gdvFTemp3$$
       END IF 
 
     WEND 
   END IF 
 
   REM Auf G-Datei setzen
   FILE gdvFFeuer$(j%,1)
   INDEX gdvFTemp2$$
   REM PrÅfen ob die GDVKU vorkommt -> Wenn ja durchgehen HAd alle DatensÑtze nach 0-Datei
   REM                                 Wenn nein zur nÑchsten G-Datei
   IF EXISTS (gdvserial%,gdvFTemp2$$) THEN 
     SELECT FIRST FILE gdvFFeuer$(j%,1) INDEX gdvFTemp2$$
     SELECT KEY gdvserial% FILE gdvFFeuer$(j%,1) INDEX gdvFTemp2$$
     REM GDVKU in G-Datei vorhanden
     WHILE NOT EOF (gdvFFeuer$(j%,1)) AND gdvFTemp2$$ = gdvserial%
       
       REM wenn ein Datensatz mit gleicher GDVKU gefHAden wird
       IF gdvFTemp2$$ = gdvserial% THEN 
         
         REM Auf 0-Datei setzen
         FILE gdvFFeuer$(j%,0)
 
         BLANK FILE gdvFFeuer$(j%,0)
 
         gdvFTemp3$$ = gdvKlfd%
         gdvFU% = SER (gdvFTemp4$$)
         IF UCASE$ (gdvFFeuer$(j%,0)) = "FU021011" THEN gdvC210% = gdvFU%
         STORE FILE gdvFFeuer$(j%,0)
         SELECT KEY gdvKlfd% LOCK FILE gdvFFeuer$(j%,0) INDEX gdvFTemp3$$
  
         gdvanzfeld% = FILEINFO (gdvFFeuer$(j%,0),1)
         REDIM gdvFUFelder$(gdvanzfeld%)
         FILLARRAY gdvFUFelder$,1
         FOR i% = 0 TO gdvanzfeld% - 1
           FTemp1$ = gdvFUFelder$(i%) + "." + gdvFFeuer$(j%,0)
           FTemp2$ = gdvFUFelder$(i%) + "." + gdvFFeuer$(j%,1)
           REM  CALL Info("","")
           REM IF FTemp2$$ > "" OR FTemp2$$ > 0 THEN 
           FTemp1$$ = FTemp2$$
           IF UCASE$ (gdvFUFelder$(i%)) = "CODE200" THEN FTemp1$$ = gdvC200%
           IF UCASE$ (gdvFUFelder$(i%)) = "CODEFU021011" THEN FTemp1$$ = gdvC210%
         NEXT i%
 
         gdvFTemp3$$ = gdvKlfd%
 
         gdvFTemp5$$ = gdvKlfd% * 10000
         gdvFTemp4$$ = gdvFU%
   
         FILE gdvFFeuer$(j%,0)
         CALL QuickStore(gdvFFeuer$(j%,0))
         MOUSE OFF 
         UNLOCK CURRENT FILE gdvFFeuer$(j%,0)
       END IF 
       FILE gdvFFeuer$(j%,1)
       SELECT NEXT FILE gdvFFeuer$(j%,1) INDEX gdvFTemp2$$
     WEND 
   END IF 
 NEXT j%
  IF EXISTS (gdvKlfd%,lfdnr.FU021011) THEN 
    SELECT KEY gdvKlfd% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
    SELECT FIRST FILE "FU021011" INDEX lfdnr.FU021011
    SELECT KEY gdvKlfd% FILE "FU021011" INDEX lfdnr.FU021011
 
 
    IF BKZ.FU021011 = "1" THEN 
      mwst% = 0
      QuickGEVA$ = STR$ (codege.kvertrag,"000000") + STR$ (codeva.kvertrag,"000000")
      SELECT FIRST FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      SELECT KEY QuickGEVA$ FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      mwst% = mwst.vprodukt
      IF GESBETR.FU021011 > 0 THEN 
        IF mwst% = 0 THEN 
          REM beitr1ab1$ = STR$ (Beitwe.alg20011,",999999.00")
          Beitrag.kvertrag = GESBETR.FU021011
          NettoBeitrag.kvertrag = GESBETR.FU021011
        ELSE 
          bmwst% = (GESBETR.FU021011 * mwst% / 100)
          bmwst$ = STR$ (bmwst% + 0.005,"999999.00")
          bmwst2% = VAL (bmwst$)
          Beitrag.kvertrag = GESBETR.FU021011 + bmwst2%
          NettoBeitrag.kvertrag = GESBETR.FU021011
        END IF 
      END IF 
      IF begdat.FU021011 > 0 THEN vs_Beginn.kvertrag = begdat.FU021011
      IF ausdat.FU021011 > 0 THEN 
        KÅndigung.kvertrag = ausdat.FU021011
      END IF 
    END IF 
    STORE FILE "kvertrag"
  END IF 
 END SUB 
 
 
 REM *******************
 REM * GebÑude         *
 REM *******************
SUB gdvGebaude(gdvserial%,gdvC200%,gdvKlfd%,lfdnrtotal%,gdvlf%)
 DIM gdvVGFelder$(1)
 DIM gdvFGebaude$(2,1)
  gdvFGebaude$(0,0) = "VG021011"
  gdvFGebaude$(0,1) = "VGg21011"
  gdvFGebaude$(1,0) = "VG022011"
  gdvFGebaude$(1,1) = "VGg22011"
  gdvFGebaude$(2,0) = "VG022012"
  gdvFGebaude$(2,1) = "VGg22012"
 
              
 FOR j% = 0 TO 2
   
   REM Felder fÅr G-Dateien
   gdvFTemp2$ = "gdvku." + gdvFGebaude$(j%,1)
   REM Felder fÅr 0-Dateien
   gdvFTemp3$ = "lfdnr." + gdvFGebaude$(j%,0)
   gdvFTemp4$ = "code" + gdvFGebaude$(j%,0) + "." + gdvFGebaude$(j%,0)
   gdvFTemp5$ = "lfdnrtotal." + gdvFGebaude$(j%,0)
 
   REM ôffnen der 0-Datei
   CALL DFile(3,gdvFGebaude$(j%,0) + _fpw$)
   FILE gdvFGebaude$(j%,0)
   INDEX gdvFTemp3$$
   REM wenn in der Datei die lfdnr vorkommt -> durchgehen und alle lîschen
   IF EXISTS (gdvKlfd%,gdvFTemp3$$) THEN 
     SELECT FIRST FILE gdvFGebaude$(j%,0) INDEX gdvFTemp3$$
     SELECT KEY gdvKlfd% FILE gdvFGebaude$(j%,0) INDEX gdvFTemp3$$
     WHILE NOT EOF (gdvFGebaude$(j%,0)) AND gdvFTemp3$$ = gdvKlfd%
        IF gdvFTemp3$$ = gdvKlfd% THEN 
         SELECT CURRENT LOCK FILE gdvFGebaude$(j%,0)
         SELECT REMOVE FILE gdvFGebaude$(j%,0)
         UNLOCK CURRENT FILE gdvFGebaude$(j%,0)
         REM SELECT PREVIOUS FILE gdvFGebaude$(j%,0)
         SELECT FIRST FILE gdvFGebaude$(j%,0) INDEX gdvFTemp3$$
         SELECT KEY gdvKlfd% FILE gdvFGebaude$(j%,0) INDEX gdvFTemp3$$
       ELSE 
         SELECT NEXT FILE gdvFGebaude$(j%,0) INDEX gdvFTemp3$$
       END IF 
     WEND 
   END IF 
 
   REM Auf G-Datei setzen
   FILE gdvFGebaude$(j%,1)
   INDEX gdvFTemp2$$
   REM PrÅfen ob die GDVKU vorkommt -> Wenn ja durchgehen HAd alle DatensÑtze nach 0-Datei
   REM                                 Wenn nein zur nÑchsten G-Datei

   

   IF EXISTS (gdvserial%,gdvFTemp2$$) THEN 
     SELECT FIRST FILE gdvFGebaude$(j%,1) INDEX gdvFTemp2$$
     SELECT KEY gdvserial% FILE gdvFGebaude$(j%,1) INDEX gdvFTemp2$$
     REM GDVKU in G-Datei vorhanden
     WHILE NOT EOF (gdvFGebaude$(j%,1)) AND gdvFTemp2$$ = gdvserial%
       
       REM wenn ein Datensatz mit gleicher GDVKU gefHAden wird
       IF gdvFTemp2$$ = gdvserial% THEN 
         
         REM Auf 0-Datei setzen
         FILE gdvFGebaude$(j%,0)
 
         BLANK FILE gdvFGebaude$(j%,0)
 
         gdvFTemp3$$ = gdvKlfd%
         gdvVG% = SER (gdvFTemp4$$)
         IF UCASE$ (gdvFGebaude$(j%,0)) = "VG021011" THEN gdvC210% = gdvVG%
         STORE FILE gdvFGebaude$(j%,0)
         SELECT KEY gdvKlfd% LOCK FILE gdvFGebaude$(j%,0) INDEX gdvFTemp3$$
  
         gdvanzfeld% = FILEINFO (gdvFGebaude$(j%,0),1)
         REDIM gdvVGFelder$(gdvanzfeld%)
         FILLARRAY gdvVGFelder$,1
         FOR i% = 0 TO gdvanzfeld% - 1
           FTemp1$ = gdvVGFelder$(i%) + "." + gdvFGebaude$(j%,0)
           FTemp2$ = gdvVGFelder$(i%) + "." + gdvFGebaude$(j%,1)
           REM  CALL Info("","")
           REM IF FTemp2$$ > "" OR FTemp2$$ > 0 THEN 
           FTemp1$$ = FTemp2$$
           IF UCASE$ (gdvVGFelder$(i%)) = "CODE200" THEN FTemp1$$ = gdvC200%
           IF UCASE$ (gdvVGFelder$(i%)) = "CODEVG021011" THEN FTemp1$$ = gdvC210%
         NEXT i%
 
         gdvFTemp3$$ = gdvKlfd%
 
         gdvFTemp5$$ = gdvKlfd% * 10000
         gdvFTemp4$$ = gdvVG%
   
         FILE gdvFGebaude$(j%,0)
         CALL QuickStore(gdvFGebaude$(j%,0))
         MOUSE OFF 
         UNLOCK CURRENT FILE gdvFGebaude$(j%,0)
       END IF 
       FILE gdvFGebaude$(j%,1)
       SELECT NEXT FILE gdvFGebaude$(j%,1) INDEX gdvFTemp2$$
     WEND 
   END IF 
 NEXT j%
 REM CALL Fehler("GebÑudevers","12102005")
  REM **************************************************************************************************************
  REM *                            Spartenspezifische Eintragungen in KVERTRAG                                     *
  REM **************************************************************************************************************  
  IF EXISTS (gdvKlfd%,lfdnr.VG021011) AND EXISTS (gdvKlfd%,lfdnr.VG022011) THEN 
    SELECT KEY gdvKlfd% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
    SELECT KEY gdvKlfd% FILE "VG021011" INDEX lfdnr.VG021011
    SELECT KEY gdvKlfd% FILE "VG022011" INDEX lfdnr.VG022011
    SELECT KEY gdvKlfd% FILE "VG022012" INDEX lfdnr.VG022012
    zvp1Name.kvertrag = LEFT$ (riskplz.VG022011 + " " + riskort.VG022011,40)
    zvp2vName.kvertrag = LEFT$ (riskstr.VG022011,40)
    VSumme.kvertrag = gesvsum.VG021011
    versg$ = LTRIM$ (gefkey.VG022012)
    GBaujahr.kvertrag = baujahr.VG022011
    GAlleGefWert.kvertrag = basvsum.vg022012
    GAlleGeSatz.kvertrag = beitsatz.vg022012
    GAlleGeBeitr.kvertrag = gesbetr.vg021011
 
    IF BKZ.VG021011 = "1" THEN 
      mwst% = 0
      QuickGEVA$ = STR$ (codege.kvertrag,"000000") + STR$ (codeva.kvertrag,"000000")
      SELECT FIRST FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      SELECT KEY QuickGEVA$ FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      mwst% = mwst.vprodukt
      IF GESBETR.VG021011 > 0 THEN 
        IF mwst% = 0 THEN 
          REM beitr1ab1$ = STR$ (Beitwe.alg20011,",999999.00")
          Beitrag.kvertrag = GESBETR.VG021011
          NettoBeitrag.kvertrag = GESBETR.VG021011
        ELSE 
          bmwst% = (GESBETR.VG021011 * mwst% / 100)
          bmwst$ = STR$ (bmwst% + 0.005,"999999.00")
          bmwst2% = VAL (bmwst$)
          Beitrag.kvertrag = GESBETR.VG021011 + bmwst2%
          NettoBeitrag.kvertrag = GESBETR.VG021011
        END IF 
      END IF 
      IF begdat.VG021011 > 0 THEN vs_Beginn.kvertrag = begdat.VG021011
      IF ausdat.VG021011 > 0 THEN 
        KÅndigung.kvertrag = ausdat.VG021011
      END IF 
    END IF 
    IF notiz.kvertrag LIKE versg$ OR notiz.kvertrag LIKE "*" + versg$ OR notiz.kvertrag LIKE versg$ + "*" THEN 
    ELSE 
      IF versg$ <> "" THEN 
        IF notiz.kvertrag = "" THEN 
          notiz.kvertrag = "Versicherte Gefahren(GDV): " + versg$
        ELSE 
          notiz.kvertrag = "Versicherte Gefahren(GDV): " + versg$ + CHR$ (13) + notiz.kvertrag
        END IF 
      END IF 
    END IF 
    besond$ = LTRIM$ (besond.vg022012)
    IF besond$ <> "" THEN 
      IF BesVereinbarung.kvertrag LIKE besond$ OR BesVereinbarung.kvertrag LIKE "*" + besond$ OR BesVereinbarung.kvertrag LIKE besond$ + "*" THEN 
      ELSE 
        IF BesVereinbarung.kvertrag = "" THEN 
          BesVereinbarung.kvertrag = "Besond.Vereinb.(GDV): " + besond$
        ELSE 
          BesVereinbarung.kvertrag = "Besond.Vereinb.(GDV): " + besond$ + CHR$ (13) + BesVereinbarung.kvertrag
        END IF 
      END IF 
    END IF 

    CALL QuickStore("KVERTRAG")
  END IF 
  REM **************************************************************************************************************
  REM *                    ENDE  der  Spartenspezifische Eintragungen in KVERTRAG                                  *
  REM **************************************************************************************************************      
 END SUB 
 
 
 REM *******************
 REM * Hausrat         *
 REM *******************
SUB gdvHausrat(gdvserial%,gdvC200%,gdvKlfd%,lfdnrtotal%,gdvlf%)
 DIM gdvVHFelder$(1)
 DIM gdvFHausrat$(1,1)
  gdvFHausrat$(0,0) = "VH021011"
  gdvFHausrat$(0,1) = "VHg21011"
  gdvFHausrat$(1,0) = "VH022011"
  gdvFHausrat$(1,1) = "VHg22011"
 
 FOR j% = 0 TO 1
   
   REM Felder fÅr G-Dateien
   gdvFTemp2$ = "gdvku." + gdvFHausrat$(j%,1)
   REM Felder fÅr 0-Dateien
   gdvFTemp3$ = "lfdnr." + gdvFHausrat$(j%,0)
   gdvFTemp4$ = "code" + gdvFHausrat$(j%,0) + "." + gdvFHausrat$(j%,0)
   gdvFTemp5$ = "lfdnrtotal." + gdvFHausrat$(j%,0)
 
   REM ôffnen der 0-Datei
   CALL DFile(3,gdvFHausrat$(j%,0) + _fpw$)
   FILE gdvFHausrat$(j%,0)
   INDEX gdvFTemp3$$
   REM wenn in der Datei die lfdnr vorkommt -> durchgehen und alle lîschen
   IF EXISTS (gdvKlfd%,gdvFTemp3$$) THEN 
     SELECT FIRST FILE gdvFHausrat$(j%,0) INDEX gdvFTemp3$$
     SELECT KEY gdvKlfd% FILE gdvFHausrat$(j%,0) INDEX gdvFTemp3$$
     WHILE NOT EOF (gdvFHausrat$(j%,0)) AND gdvFTemp3$$ = gdvKlfd%
        IF gdvFTemp3$$ = gdvKlfd% THEN 
         SELECT CURRENT LOCK FILE gdvFHausrat$(j%,0)
         SELECT REMOVE FILE gdvFHausrat$(j%,0)
         UNLOCK CURRENT FILE gdvFHausrat$(j%,0)
         REM SELECT PREVIOUS FILE gdvFHausrat$(j%,0)
         SELECT FIRST FILE gdvFHausrat$(j%,0) INDEX gdvFTemp3$$
         SELECT KEY gdvKlfd% FILE gdvFHausrat$(j%,0) INDEX gdvFTemp3$$
        ELSE 
         SELECT NEXT FILE gdvFHausrat$(j%,0) INDEX gdvFTemp3$$
        END IF 
     WEND 
   END IF 
 
   REM Auf G-Datei setzen
   FILE gdvFHausrat$(j%,1)
   INDEX gdvFTemp2$$
   REM PrÅfen ob die GDVKU vorkommt -> Wenn ja durchgehen HAd alle DatensÑtze nach 0-Datei
   REM                                 Wenn nein zur nÑchsten G-Datei
   IF EXISTS (gdvserial%,gdvFTemp2$$) THEN 
     SELECT FIRST FILE gdvFHausrat$(j%,1) INDEX gdvFTemp2$$
     SELECT KEY gdvserial% FILE gdvFHausrat$(j%,1) INDEX gdvFTemp2$$
     REM GDVKU in G-Datei vorhanden
     WHILE NOT EOF (gdvFHausrat$(j%,1)) AND gdvFTemp2$$ = gdvserial%
       
       REM wenn ein Datensatz mit gleicher GDVKU gefHAden wird
       IF gdvFTemp2$$ = gdvserial% THEN 
         
         REM Auf 0-Datei setzen
         FILE gdvFHausrat$(j%,0)
 
         BLANK FILE gdvFHausrat$(j%,0)
 
         gdvFTemp3$$ = gdvKlfd%
         gdvVH% = SER (gdvFTemp4$$)
         IF UCASE$ (gdvFHausrat$(j%,0)) = "VH021011" THEN gdvC210% = gdvVH%
         STORE FILE gdvFHausrat$(j%,0)
         SELECT KEY gdvKlfd% LOCK FILE gdvFHausrat$(j%,0) INDEX gdvFTemp3$$
  
         gdvanzfeld% = FILEINFO (gdvFHausrat$(j%,0),1)
         REDIM gdvVHFelder$(gdvanzfeld%)
         FILLARRAY gdvVHFelder$,1
         FOR i% = 0 TO gdvanzfeld% - 1
           FTemp1$ = gdvVHFelder$(i%) + "." + gdvFHausrat$(j%,0)
           FTemp2$ = gdvVHFelder$(i%) + "." + gdvFHausrat$(j%,1)
           REM  CALL Info("","")
           REM IF FTemp2$$ > "" OR FTemp2$$ > 0 THEN 
           FTemp1$$ = FTemp2$$
           IF UCASE$ (gdvVHFelder$(i%)) = "CODE200" THEN FTemp1$$ = gdvC200%
           IF UCASE$ (gdvVHFelder$(i%)) = "CODEVH021011" THEN FTemp1$$ = gdvC210%
         NEXT i%
 
         gdvFTemp3$$ = gdvKlfd%
 
         gdvFTemp5$$ = gdvKlfd% * 10000
         gdvFTemp4$$ = gdvVH%
   
         FILE gdvFHausrat$(j%,0)
         CALL QuickStore(gdvFHausrat$(j%,0))
         MOUSE OFF 
         UNLOCK CURRENT FILE gdvFHausrat$(j%,0)
       END IF 
       FILE gdvFHausrat$(j%,1)
       SELECT NEXT FILE gdvFHausrat$(j%,1) INDEX gdvFTemp2$$
     WEND 
   END IF 
 NEXT j%
 
  REM **************************************************************************************************************
  REM *                            Spartenspezifische Eintragungen in KVERTRAG                                     *
  REM **************************************************************************************************************  
  IF EXISTS (gdvKlfd%,lfdnr.VH021011) THEN 
    SELECT KEY gdvKlfd% LOCK FILE "kvertrag" INDEX lfdnr.kvertrag
 
    SELECT KEY gdvKlfd% FILE "VH021011" INDEX lfdnr.VH021011
    zvp1Name.kvertrag = LEFT$ (riskplz.VH021011 + " " + riskort.VH021011,40)
    zvp2vName.kvertrag = LEFT$ (riskstr.VH021011,40)
    VSumme.kvertrag = gessum.VH021011
    vhb.kvertrag = beding.VH021011
    HRWohnflÑche.kvertrag = WOHNQM.VH021011
    HRTarifzone.kvertrag = Tarzone.VH021011
 
    REM Beitrag
    REM IF GImp210$ = "j" THEN 
    IF BKZ.VH021011 = "1" THEN 
      mwst% = 0
      QuickGEVA$ = STR$ (codege.kvertrag,"000000") + STR$ (codeva.kvertrag,"000000")
      SELECT FIRST FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      SELECT KEY QuickGEVA$ FILE "VPRODUKT" INDEX QCodeGEVA.vprodukt
      mwst% = mwst.vprodukt
      IF GESBEIT.VH021011 > 0 THEN 
        IF mwst% = 0 THEN 
          REM beitr1ab1$ = STR$ (Beitwe.alg20011,",999999.00")
          Beitrag.kvertrag = GESBEIT.VH021011
          NettoBeitrag.kvertrag = GESBEIT.VH021011
        ELSE 
          bmwst% = (GESBEIT.VH021011 * mwst% / 100)
          bmwst$ = STR$ (bmwst% + 0.005,"999999.00")
          bmwst2% = VAL (bmwst$)
          Beitrag.kvertrag = GESBEIT.VH021011 + bmwst2%
          NettoBeitrag.kvertrag = GESBEIT.VH021011
        END IF 
      END IF 
      IF begdat.vh021011 > 0 THEN vs_Beginn.kvertrag = begdat.vh021011
      IF ausdat.vh021011 > 0 THEN 
        KÅndigung.kvertrag = ausdat.vh021011
      END IF 
    END IF 
 
 
    versg$ = LTRIM$ (versgef.VH021011)
    IF notiz.kvertrag LIKE versg$ OR notiz.kvertrag LIKE "*" + versg$ OR notiz.kvertrag LIKE versg$ + "*" THEN 
    ELSE 
      IF versg$ <> "" THEN 
        IF notiz.kvertrag = "" THEN 
          notiz.kvertrag = "Versicherte Gefahren(GDV): " + versg$
        ELSE 
          notiz.kvertrag = "Versicherte Gefahren(GDV): " + versg$ + CHR$ (13) + CHR$ (10) + notiz.kvertrag
        END IF 
      END IF 
    END IF 
    REM 12102005
    IF untverz.VH021011 = "1" THEN HRUnterversVerz.kvertrag = "j"
    vtext$ = ""
    IF vandal.VH021011 = "1" THEN vtext$ = "Vandalismus(GDV): eingeschlossen" + CHR$ (13) + CHR$ (10)
    REM CALL Fehler("Test","Hausrat")
    IF EXISTS (gdvC210%,codevh021011.vh022011) THEN 
      FILE "vh022011"
      INDEX codevh021011.vh022011
      SELECT FIRST 
      SELECT KEY gdvC210% FILE "vh022011" INDEX codevh021011.vh022011
      WHILE NOT EOF ("vh022011") AND codevh021011.vh022011 = gdvC210%
        IF LTRIM$ (leerst.vh022011) <> "" THEN vtext$ = vtext$ + leerst.vh022011 + CHR$ (13) + CHR$ (10)
        SELECT NEXT FILE "vh022011" INDEX codevh021011.vh022011
      WEND 
    END IF 
    HRVertragsinhal.kvertrag = LEFT$ (vtext$,4000)

    CALL QuickStore("KVERTRAG")
  END IF 
  REM **************************************************************************************************************
  REM *                    ENDE  der  Spartenspezifische Eintragungen in KVERTRAG                                  *
  REM **************************************************************************************************************    
 
 
 
 END SUB 
 
 REM *******************
 REM * Kranken         *
 REM *******************
SUB gdvKranken(gdvserial%,gdvC200%,gdvKlfd%,lfdnrtotal%,gdvlf%)
 DIM gdvKKFelder$(1)
 DIM gdvFKranken$(3,1)
  gdvFKranken$(0,0) = "KK021011"
  gdvFKranken$(0,1) = "KKg21011"
  gdvFKranken$(1,0) = "KK022011"
  gdvFKranken$(1,1) = "KKg22011"
  gdvFKranken$(2,0) = "KK022021"
  gdvFKranken$(2,1) = "KKg22021"
  gdvFKranken$(3,0) = "KK022031"
  gdvFKranken$(3,1) = "KKg22031"
 
  
 FOR j% = 0 TO 3
   
   REM Felder fÅr G-Dateien
   gdvFTemp2$ = "gdvku." + gdvFKranken$(j%,1)
   REM Felder fÅr 0-Dateien
   gdvFTemp3$ = "lfdnr." + gdvFKranken$(j%,0)
   gdvFTemp4$ = "code" + gdvFKranken$(j%,0) + "." + gdvFKranken$(j%,0)
   gdvFTemp5$ = "lfdnrtotal." + gdvFKranken$(j%,0)
 
   REM ôffnen der 0-Datei
   CALL DFile(3,gdvFKranken$(j%,0) + _fpw$)
   FILE gdvFKranken$(j%,0)
   INDEX gdvFTemp3$$
 
   REM wenn in der Datei die lfdnr vorkommt -> durchgehen und alle lîschen
   IF EXISTS (gdvKlfd%,gdvFTemp3$$) THEN 
     SELECT FIRST FILE gdvFKranken$(j%,0) INDEX gdvFTemp3$$
     SELECT KEY gdvKlfd% FILE gdvFKranken$(j%,0) INDEX gdvFTemp3$$
     WHILE NOT EOF (gdvFKranken$(j%,0)) AND gdvFTemp3$$ = gdvKlfd%
        IF gdvFTemp3$$ = gdvKlfd% THEN 
         SELECT CURRENT LOCK FILE gdvFKranken$(j%,0)
         SELECT REMOVE FILE gdvFKranken$(j%,0)
         UNLOCK CURRENT FILE gdvFKranken$(j%,0)
         REM SELECT PREVIOUS FILE gdvFKranken$(j%,0)
         SELECT FIRST FILE gdvFKranken$(j%,0) INDEX gdvFTemp3$$
         SELECT KEY gdvKlfd% FILE gdvFKranken$(j%,0) INDEX gdvFTemp3$$
       ELSE 
         SELECT NEXT FILE gdvFKranken$(j%,0) INDEX gdvFTemp3$$
       END IF 
     WEND 
   END IF 
 
   REM Auf G-Datei setzen
   FILE gdvFKranken$(j%,1)
   INDEX gdvFTemp2$$
   REM PrÅfen ob die GDVKU vorkommt -> Wenn ja durchgehen HAd alle DatensÑtze nach 0-Datei
   REM                                 Wenn nein zur nÑchsten G-Datei
   IF EXISTS (gdvserial%,gdvFTemp2$$) THEN 
     REM CALL Fehler(gdvFTemp2$,gdvFKranken$(j%,1))
     REM 02092002 mit dem index und der Positionierung ist neu
     SELECT FIRST FILE gdvFKranken$(j%,1) INDEX gdvFTemp2$$
     SELECT KEY gdvserial% FILE gdvFKranken$(j%,1) INDEX gdvFTemp2$$
     REM GDVKU in G-Datei vorhanden
     WHILE NOT EOF (gdvFKranken$(j%,1)) AND gdvserial% = gdvFTemp2$$
       
       REM wenn ein Datensatz mit gleicher GDVKU gefHAden wird
       IF gdvFTemp2$$ = gdvserial% THEN 
         
         REM Auf 0-Datei setzen
         FILE gdvFKranken$(j%,0)
 
         BLANK FILE gdvFKranken$(j%,0)
         a% = CopyRecord%(gdvFKranken$(j%,1),gdvFKranken$(j%,0))
 
         gdvFTemp3$$ = gdvKlfd%
         gdvKK% = SER (gdvFTemp4$$)
         IF UCASE$ (gdvFKranken$(j%,0)) = "KK021011" THEN 
           gdvC210% = gdvKK%
         END IF 
         FTemp2$ = "CODEKK021011." + gdvFKranken$(j%,0)
         FTemp2$$ = gdvC210%
         FTemp1$ = "Code200." + gdvFKranken$(j%,0)
         ON ERROR GOTO gdvkr020920021
         FTemp1$$ = gdvC200%
gdvkr020920021: 
         ON ERROR GOTO ErrorHandler
         REM STORE FILE gdvFKranken$(j%,0)
         REM SELECT KEY gdvKlfd% LOCK FILE gdvFKranken$(j%,0) INDEX gdvFTemp3$$
  
         REM gdvanzfeld% = FILEINFO (gdvFKranken$(j%,0),1)
         REM REDIM gdvKKFelder$(gdvanzfeld%)
         REM FILLARRAY gdvKKFelder$,1
         REM FOR i% = 0 TO gdvanzfeld% - 1
         REM FTemp1$ = gdvKKFelder$(i%) + "." + gdvFKranken$(j%,0)
         REM FTemp2$ = gdvKKFelder$(i%) + "." + gdvFKranken$(j%,1)
           REM FTemp1$$ = FTemp2$$
           REM IF UCASE$ (gdvKKFelder$(i%)) = "CODE200" THEN FTemp1$$ = gdvC200%
           REM IF UCASE$ (gdvKKFelder$(i%)) = "CODEKK021011" THEN FTemp1$$ = gdvC210%
         REM NEXT i%
 
         gdvFTemp3$$ = gdvKlfd%
 
         gdvFTemp5$$ = gdvKlfd% * 10000
         gdvFTemp4$$ = gdvKK%
   
         FILE gdvFKranken$(j%,0)
         CALL QuickStore(gdvFKranken$(j%,0))
         MOUSE OFF 
         UNLOCK CURRENT FILE gdvFKranken$(j%,0)
       END IF 
       FILE gdvFKranken$(j%,1)
       SELECT NEXT FILE gdvFKranken$(j%,1) INDEX gdvFTemp2$$
     WEND 
   END IF 
 NEXT j%
 REM CALL Fehler("","")
 cfile1$ = FILE 
 FILE "kk021011"
 oldind$ = INDEX 
 INDEX gdvKu.kk021011
 
   SELECT FIRST FILE "Kvertrag" INDEX lfdnr.kvertrag
   REM SELECT KEY gdvlf% FILE "kvertrag" INDEX lfdnr.kvertrag
   SELECT KEY gdvlf% LOCK FILE "Kvertrag" INDEX lfdnr.kvertrag
 
 REM SELECT FIRST FILE "kk021011" INDEX gdvKu.kk021011
 REM SELECT KEY gdvserial% FILE "kk021011" INDEX gdvKu.kk021011
 codeKK021011% = codeKK021011.kk021011
 SELECT FIRST FILE "kk022011" INDEX codeKK021011.kk022011
 SELECT KEY codeKK021011% FILE "kk022011" INDEX codeKK021011.kk022011
 k% = 1
 WHILE NOT EOF ("kk022011") AND codeKK021011.kk022011 = codeKK021011%
   ak% = lfdpnr.kk022011
   
   IF k% < 7 THEN 
     
     f1$ = "zvp" + LTRIM$ ( STR$ (k%,"99")) + "Name.kvertrag"
     f2$ = "zvp" + LTRIM$ ( STR$ (k%,"99")) + "vName.kvertrag"
     f3$ = "KVNotiz" + LTRIM$ ( STR$ (k%,"99")) + ".kvertrag"
     f4$ = "zvp" + LTRIM$ ( STR$ (k%,"99")) + "Beitrag.kvertrag"
     f5$ = "zvp" + LTRIM$ ( STR$ (k%,"99")) + "Geb.kvertrag"
     f1$$ = Namevp.kk022011
     f2$$ = VNameVP.kk022011
     f5$$ = GebVP.kk022011
     f3$$ = bertxt.kk022011 + CHR$ (13) + CHR$ (10)
     f4$$ = Gesbeitr.kk022011
     SELECT FIRST FILE "kk022021" INDEX codeKK021011.kk022021
     SELECT KEY codeKK021011% FILE "kk022021" INDEX codeKK021011.kk022021
     WHILE NOT EOF ("kk022021") AND codeKK021011.kk022021 = codeKK021011%
       IF lfdpnr.kk022021 = ak% AND k% < 7 THEN 
       REM IF k% < 7 THEN 
         f3$$ = f3$$ + Tarif.kk022021 + " " + tariflst.kk022021 + CHR$ (13) + CHR$ (10)
         f3$$ = f3$$ + DATE$ (VersbegT.kk022021,"0d.mm.yyyy") + " " + tariflst.kk022021 + CHR$ (13) + CHR$ (10)
       END IF 
       aaa$ = f3$$
       REM CALL Fehler("Import der Vertragsspezifischen Sachen",aaa$ + "   " + f1$$ + "/" + f2$$ + "  " + STR$ (k%,"99"))
       SELECT NEXT FILE "kk022021" INDEX codeKK021011.kk022021
     WEND 
   END IF 
   SELECT NEXT FILE "kk022011" INDEX codeKK021011.kk022011
   k% = k% + 1
 WEND 
 REM SELECT FIRST FILE "kk022021" INDEX codeKK021011.kk022021
 REM SELECT KEY codeKK021011% FILE "kk022021" INDEX codeKK021011.kk022021
 REM SELECT FIRST FILE "kk022031" INDEX codeKK021011.kk022031
 REM SELECT KEY codeKK021011% FILE "kk022031" INDEX codeKK021011.kk022031
 REM tarif.kvertrag = LEFT$ (Tarif.kk022021 + " " + Tariflst.kk022021,50)
 REM QTarif.kvertrag = LEFT$ (VSNRPack$(Tarif.kvertrag),50)
 REM Notiz.kvertrag = Notiz.kvertrag + Tarif.kk022021 + " " + Tariflst.kk022021 + CHR$ (13) + CHR$ (10)
 SummeBeitrag.Kvertrag = Beitrag.kvertrag
 STORE FILE "KVERTRAG"
 
 INDEX oldind$$
 FILE cfile1$
 END SUB 
 
 
  REM *******************
 REM * Schaden         *
 REM *******************
SUB gdvSchaden(gdvserial%,gdvC200%,gdvKlfd%,lfdnrtotal%,gdvlf%)
 DIM gdvSDFelder$(1)
 DIM gdvFSchaden$(1,1)
  gdvFSchaden$(0,0) = "SD050011"
  gdvFSchaden$(0,1) = "SDg50011"
  gdvFSchaden$(1,0) = "SD055011"
  gdvFSchaden$(1,1) = "SDg55011"
 
  FOR j% = 0 TO 1
   
   REM Felder fÅr G-Dateien
   gdvFTemp2$ = "gdvku." + gdvFSchaden$(j%,1)
   REM Felder fÅr 0-Dateien
   gdvFTemp3$ = "lfdnr." + gdvFSchaden$(j%,0)
   gdvFTemp4$ = "code" + gdvFSchaden$(j%,0) + "." + gdvFSchaden$(j%,0)
   gdvFTemp5$ = "lfdnrtotal." + gdvFSchaden$(j%,0)
 
   REM ôffnen der 0-Datei
   CALL DFile(3,gdvFSchaden$(j%,0) + _fpw$)
   FILE gdvFSchaden$(j%,0)
   INDEX gdvFTemp3$$
   REM wenn in der Datei die lfdnr vorkommt -> durchgehen und alle lîschen
   IF EXISTS (gdvKlfd%,gdvFTemp3$$) THEN 
     SELECT FIRST FILE gdvFSchaden$(j%,0) INDEX gdvFTemp3$$
     SELECT KEY gdvKlfd% FILE gdvFSchaden$(j%,0) INDEX gdvFTemp3$$
     WHILE NOT EOF (gdvFSchaden$(j%,0)) AND gdvFTemp3$$ = gdvKlfd%
       IF gdvFTemp3$$ = gdvKlfd% THEN 
         SELECT CURRENT LOCK FILE gdvFSchaden$(j%,0)
         SELECT REMOVE FILE gdvFSchaden$(j%,0)
         UNLOCK CURRENT FILE gdvFSchaden$(j%,0)
         REM SELECT PREVIOUS FILE gdvFSchaden$(j%,0)
         SELECT FIRST FILE gdvFSchaden$(j%,0) INDEX gdvFTemp3$$
         SELECT KEY gdvKlfd% FILE gdvFSchaden$(j%,0) INDEX gdvFTemp3$$
       ELSE 
         SELECT NEXT FILE gdvFSchaden$(j%,0) INDEX gdvFTemp3$$
       END IF 
     WEND 
   END IF 
 
   REM Auf G-Datei setzen
   FILE gdvFSchaden$(j%,1)
   INDEX gdvFTemp2$$
   REM PrÅfen ob die GDVKU vorkommt -> Wenn ja durchgehen HAd alle DatensÑtze nach 0-Datei
   REM                                 Wenn nein zur nÑchsten G-Datei
   IF EXISTS (gdvserial%,gdvFTemp2$$) THEN 
     SELECT FIRST FILE gdvFSchaden$(j%,1) INDEX gdvFTemp2$$
     SELECT KEY gdvserial% FILE gdvFSchaden$(j%,1) INDEX gdvFTemp2$$
     REM GDVKU in G-Datei vorhanden
     WHILE NOT EOF (gdvFSchaden$(j%,1)) AND gdvFTemp2$$ = gdvserial%
       
       REM wenn ein Datensatz mit gleicher GDVKU gefHAden wird
       IF gdvFTemp2$$ = gdvserial% THEN 
         
         REM Auf 0-Datei setzen
         FILE gdvFSchaden$(j%,0)
 
         BLANK FILE gdvFSchaden$(j%,0)
 
         gdvFTemp3$$ = gdvKlfd%
         gdvSD% = SER (gdvFTemp4$$)
         IF UCASE$ (gdvFSchaden$(j%,0)) = "SD050011" THEN gdvC210% = gdvSD%
         STORE FILE gdvFSchaden$(j%,0)
         SELECT KEY gdvKlfd% LOCK FILE gdvFSchaden$(j%,0) INDEX gdvFTemp3$$
  
         gdvanzfeld% = FILEINFO (gdvFSchaden$(j%,0),1)
         REDIM gdvSDFelder$(gdvanzfeld%)
         FILLARRAY gdvSDFelder$,1
         FOR i% = 0 TO gdvanzfeld% - 1
           FTemp1$ = gdvSDFelder$(i%) + "." + gdvFSchaden$(j%,0)
           FTemp2$ = gdvSDFelder$(i%) + "." + gdvFSchaden$(j%,1)
           REM  CALL Info("","")
           REM IF FTemp2$$ > "" OR FTemp2$$ > 0 THEN 
           FTemp1$$ = FTemp2$$
           IF UCASE$ (gdvSDFelder$(i%)) = "CODE200" THEN FTemp1$$ = gdvC200%
           IF UCASE$ (gdvSDFelder$(i%)) = "CODESD050011" THEN FTemp1$$ = gdvC210%
         NEXT i%
 
         gdvFTemp3$$ = gdvKlfd%
 
         gdvFTemp5$$ = gdvKlfd% * 10000
         gdvFTemp4$$ = gdvSD%
   
         FILE gdvFSchaden$(j%,0)
         CALL QuickStore(gdvFSchaden$(j%,0))
         MOUSE OFF 
         UNLOCK CURRENT FILE gdvFSchaden$(j%,0)
       END IF 
       FILE gdvFSchaden$(j%,1)
       SELECT NEXT FILE gdvFSchaden$(j%,1) INDEX gdvFTemp2$$
     WEND 
   END IF 
 NEXT j%
 
 END SUB 
 
SUB KFZBeitr1()
 IF zw.kvertrag = 55 THEN 
   CALL Fehler("BetÑtigen Sie bitte den Button Sichern und anschlie·end den Button zahlweise, um diese zu definieren!","")
   REM GOTO KFZN1301991
 ELSE 
 RateHalb% = 3
 RateMon% = 5
 NUMBASE "9999999.00"
 zw% = zw.kvertrag
   IF zw.kvertrag = 2 THEN 
     KFZ_VSBH% = (KFZ_VSBH.kvertrag * 100) / (RateHalb% + 100)
     KFZ_VSBK% = (KFZ_VSBK.kvertrag * 100) / (RateHalb% + 100)
     KFZ_VSBU% = (KFZ_VSBU.kvertrag * 100) / (RateHalb% + 100)
   END IF 
   IF zw.kvertrag > 2 THEN 
     KFZ_VSBH% = (KFZ_VSBH.kvertrag * 100) / (RateMon% + 100)
     KFZ_VSBK% = (KFZ_VSBK.kvertrag * 100) / (RateMon% + 100)
     KFZ_VSBU% = (KFZ_VSBU.kvertrag * 100) / (RateMon% + 100)
   END IF 
   IF zw.kvertrag = 1 OR zw.kvertrag = 0 THEN 
     IF zw.kvertrag = 0 THEN zw% = 1
     KFZ_VSBH% = KFZ_VSBH.kvertrag
     KFZ_VSBK% = KFZ_VSBK.kvertrag
     KFZ_VSBU% = KFZ_VSBU.kvertrag
   END IF 
 KFZ_VSBH1% = (KFZ_VSBH% * 100 * zw% / HV_SFR.kvertrag)
 KFZ_VSBK1% = (KFZ_VSBK% * zw% * 100 / VK_SFR.kvertrag)
 KFZ_VSBU1% = (KFZ_VSBU% * zw% * 100 / Unf_SFR.kvertrag)
 
 KFZ_VSBH1$ = STR$ (KFZ_VSBH1% + 0.005,"9999999.0")
 KFZ_VSBK1$ = STR$ (KFZ_VSBK1% + 0.005,"9999999.0")
 KFZ_VSBU1$ = STR$ (KFZ_VSBU1% + 0.005,"9999999.0")
 
 KFZ_VSBH1% = VAL (KFZ_VSBH1$)
 KFZ_VSBK1% = VAL (KFZ_VSBK1$)
 KFZ_VSBU1% = VAL (KFZ_VSBU1$)
 
 
 REM KFZ_VSBH2% = KFZ_VSBH1% + ((KFZ_VSBH1% / 100) * (100 - HV_SFR.kvertrag))
 REM KFZ_VSBK2% = KFZ_VSBK1% + ((KFZ_VSBK1% / 100) * (100 - VK_SFR.kvertrag))
 REM KFZ_VSBU2% = KFZ_VSBU1% + ((KFZ_VSBU1% / 100) * (100 - Unf_SFR.kvertrag))
 
 KFZ_BTGES.kvertrag = KFZ_VSBH.kvertrag + KFZ_VSBK.kvertrag + KFZ_VSBU.kvertrag
  
 KFZHaftBeitrag.kvertrag = KFZ_VSBH1%
 KFZVollkBeitrag.kvertrag = KFZ_VSBK1%
 KFZ_UnfJBeitr.kvertrag = KFZ_VSBU1%
 KFZGesBeitrag.kvertrag = KFZ_VSBH1% + KFZ_VSBK1% + KFZ_VSBU1%
 
 Bewertungssumme.kvertrag = KFZ_VSBH.kvertrag + KFZ_VSBK.kvertrag + KFZ_VSBU.kvertrag
 REM Beitrag.kvertrag = KFZ_VSBH.kvertrag + KFZ_VSBK.kvertrag + KFZ_VSBU.kvertrag
 VSumme.kvertrag = KFZGesBeitrag.kvertrag
 STORE FILE "kvertrag"
 REM KFZN1301991:
 END IF 
 END SUB 
 
 REM *******************************************************
 REM *******************************************************
 REM ***** GDV-Strukturen îffnen ***************************
 REM *******************************************************
 REM *******************************************************
SUB GDVUpdate()
 REM CALL DFile(3,"AD010011" + _fpw$)
 REM UPDATE lfdnrtotal.AD010011 = lfdnr.AD010011 * 10000
 REM CALL DFile(3,"AD010012" + _fpw$)
 REM UPDATE lfdnrtotal.AD010012 = lfdnr.AD010012 * 10000
 CALL DFile(3,"AL020011" + _fpw$)
 UPDATE lfdnrtotal.AL020011 = lfdnr.AL020011 * 10000
 END UPDATE 
 CALL DFile(3,"BI030011" + _fpw$)
 UPDATE lfdnrtotal.BI030011 = lfdnr.BI030011 * 10000
 END UPDATE 
 CALL DFile(3,"BI030012" + _fpw$)
 UPDATE lfdnrtotal.BI030012 = lfdnr.BI030012 * 10000
 END UPDATE 
 CALL DFile(3,"FU021011" + _fpw$)
 UPDATE lfdnrtotal.FU021011 = lfdnr.FU021011 * 10000
 END UPDATE 
 CALL DFile(3,"FU022011" + _fpw$)
 UPDATE lfdnrtotal.FU022011 = lfdnr.FU022011 * 10000
 END UPDATE 
 CALL DFile(3,"FU022012" + _fpw$)
 UPDATE lfdnrtotal.FU022012 = lfdnr.FU022012 * 10000
 END UPDATE 
 CALL DFile(3,"GL021011" + _fpw$)
 UPDATE lfdnrtotal.GL021011 = lfdnr.GL021011 * 10000
 END UPDATE 
 CALL DFile(3,"GL022011" + _fpw$)
 UPDATE lfdnrtotal.GL022011 = lfdnr.GL022011 * 10000
 END UPDATE 
 CALL DFile(3,"HA021011" + _fpw$)
 UPDATE lfdnrtotal.HA021011 = lfdnr.HA021011 * 10000
 END UPDATE 
 CALL DFile(3,"HA022011" + _fpw$)
 UPDATE lfdnrtotal.HA022011 = lfdnr.HA022011 * 10000
 END UPDATE 
 CALL DFile(3,"HA022012" + _fpw$)
 UPDATE lfdnrtotal.HA022012 = lfdnr.HA022012 * 10000
 END UPDATE 
 CALL DFile(3,"ID040011" + _fpw$)
 UPDATE lfdnrtotal.ID040011 = lfdnr.ID040011 * 10000
 END UPDATE 
 CALL DFile(3,"ID040012" + _fpw$)
 UPDATE lfdnrtotal.ID040012 = lfdnr.ID040012 * 10000
 END UPDATE 
 CALL DFile(3,"ID041011" + _fpw$)
 UPDATE lfdnrtotal.ID041011 = lfdnr.ID041011 * 10000
 END UPDATE 
 CALL DFile(3,"ID042011" + _fpw$)
 UPDATE lfdnrtotal.ID042011 = lfdnr.ID042011 * 10000
 END UPDATE 
 CALL DFile(3,"ID043011" + _fpw$)
 UPDATE lfdnrtotal.ID043011 = lfdnr.ID043011 * 10000
 END UPDATE 
 CALL DFile(3,"ID045011" + _fpw$)
 UPDATE lfdnrtotal.ID045011 = lfdnr.ID045011 * 10000
 END UPDATE 
 CALL DFile(3,"KD035011" + _fpw$)
 UPDATE lfdnrtotal.KD035011 = lfdnr.KD035011 * 10000
 END UPDATE 
 CALL DFile(3,"KK021011" + _fpw$)
 UPDATE lfdnrtotal.KK021011 = lfdnr.KK021011 * 10000
 END UPDATE 
 CALL DFile(3,"KK022011" + _fpw$)
 UPDATE lfdnrtotal.KK022011 = lfdnr.KK022011 * 10000
 END UPDATE 
 CALL DFile(3,"KK022021" + _fpw$)
 UPDATE lfdnrtotal.KK022021 = lfdnr.KK022021 * 10000
 END UPDATE 
 CALL DFile(3,"KK022031" + _fpw$)
 UPDATE lfdnrtotal.KK022031 = lfdnr.KK022031 * 10000
 END UPDATE 
 REM CALL DFile(3,"KR021011" + _fpw$)
 REM UPDATE lfdnrtotal.KR021011 = lfdnr.KR021011 * 10000
 REM END UPDATE 
 REM CALL DFile(3,"KR022011" + _fpw$)
 REM UPDATE lfdnrtotal.KR022011 = lfdnr.KR022011 * 10000
 REM END UPDATE 
 REM CALL DFile(3,"KR022021" + _fpw$)
 REM UPDATE lfdnrtotal.KR022021 = lfdnr.KR022021 * 10000
 REM END UPDATE 
 REM CALL DFile(3,"KR022031" + _fpw$)
 REM UPDATE lfdnrtotal.KR022031 = lfdnr.KR022031 * 10000
 REM END UPDATE 
 REM CALL DFile(3,"KR022041" + _fpw$)
 REM UPDATE lfdnrtotal.KR022041 = lfdnr.KR022041 * 10000
 REM END UPDATE 
 REM CALL DFile(3,"KR022051" + _fpw$)
 REM UPDATE lfdnrtotal.KR022051 = lfdnr.KR022051 * 10000
 REM END UPDATE 
 REM CALL DFile(3,"KR022061" + _fpw$)
 REM UPDATE lfdnrtotal.KR022061 = lfdnr.KR022061 * 10000
 REM END UPDATE 
 REM CALL DFile(3,"KR022062" + _fpw$)
 REM UPDATE lfdnrtotal.KR022062 = lfdnr.KR022062 * 10000
 REM END UPDATE 
 CALL DFile(3,"LE021011" + _fpw$)
 UPDATE lfdnrtotal.LE021011 = lfdnr.LE021011 * 10000
 END UPDATE 
 CALL DFile(3,"LE021012" + _fpw$)
 UPDATE lfdnrtotal.LE021012 = lfdnr.LE021012 * 10000
 END UPDATE 
 CALL DFile(3,"LE022011" + _fpw$)
 UPDATE lfdnrtotal.LE022011 = lfdnr.LE022011 * 10000
 END UPDATE 
 CALL DFile(3,"LE022021" + _fpw$)
 UPDATE lfdnrtotal.LE022021 = lfdnr.LE022021 * 10000
 END UPDATE 
 CALL DFile(3,"LE022022" + _fpw$)
 UPDATE lfdnrtotal.LE022022 = lfdnr.LE022022 * 10000
 END UPDATE 
 CALL DFile(3,"LE022026" + _fpw$)
 UPDATE lfdnrtotal.LE022026 = lfdnr.LE022026 * 10000
 END UPDATE 
 CALL DFile(3,"LE022027" + _fpw$)
 UPDATE lfdnrtotal.LE022027 = lfdnr.LE022027 * 10000
 END UPDATE 
 CALL DFile(3,"LE022028" + _fpw$)
 UPDATE lfdnrtotal.LE022028 = lfdnr.LE022028 * 10000
 END UPDATE 
 CALL DFile(3,"LE022029" + _fpw$)
 UPDATE lfdnrtotal.LE022029 = lfdnr.LE022029 * 10000
 END UPDATE 
 CALL DFile(3,"LE022031" + _fpw$)
 UPDATE lfdnrtotal.LE022031 = lfdnr.LE022031 * 10000
 END UPDATE 
 CALL DFile(3,"LE022032" + _fpw$)
 UPDATE lfdnrtotal.LE022032 = lfdnr.LE022032 * 10000
 END UPDATE 
 CALL DFile(3,"LE022036" + _fpw$)
 UPDATE lfdnrtotal.LE022036 = lfdnr.LE022036 * 10000
 END UPDATE 
 CALL DFile(3,"LE022038" + _fpw$)
 UPDATE lfdnrtotal.LE022038 = lfdnr.LE022038 * 10000
 END UPDATE 
 CALL DFile(3,"LE022039" + _fpw$)
 UPDATE lfdnrtotal.LE022039 = lfdnr.LE022039 * 10000
 END UPDATE 
 CALL DFile(3,"LE022041" + _fpw$)
 UPDATE lfdnrtotal.LE022041 = lfdnr.LE022041 * 10000
 END UPDATE 
 CALL DFile(3,"LE022042" + _fpw$)
 UPDATE lfdnrtotal.LE022042 = lfdnr.LE022042 * 10000
 END UPDATE 
 CALL DFile(3,"LE022046" + _fpw$)
 UPDATE lfdnrtotal.LE022046 = lfdnr.LE022046 * 10000
 END UPDATE 
 CALL DFile(3,"LE022048" + _fpw$)
 UPDATE lfdnrtotal.LE022048 = lfdnr.LE022048 * 10000
 END UPDATE 
 CALL DFile(3,"LE022049" + _fpw$)
 UPDATE lfdnrtotal.LE022049 = lfdnr.LE022049 * 10000
 END UPDATE 
 CALL DFile(3,"LE022051" + _fpw$)
 UPDATE lfdnrtotal.LE022051 = lfdnr.LE022051 * 10000
 END UPDATE 
 CALL DFile(3,"LE022052" + _fpw$)
 UPDATE lfdnrtotal.LE022052 = lfdnr.LE022052 * 10000
 END UPDATE 
 CALL DFile(3,"LE022056" + _fpw$)
 UPDATE lfdnrtotal.LE022056 = lfdnr.LE022056 * 10000
 END UPDATE 
 CALL DFile(3,"LE022058" + _fpw$)
 UPDATE lfdnrtotal.LE022058 = lfdnr.LE022058 * 10000
 END UPDATE 
 CALL DFile(3,"LE022059" + _fpw$)
 UPDATE lfdnrtotal.LE022059 = lfdnr.LE022059 * 10000
 END UPDATE 
 CALL DFile(3,"LE022061" + _fpw$)
 UPDATE lfdnrtotal.LE022061 = lfdnr.LE022061 * 10000
 END UPDATE 
 CALL DFile(3,"LE022062" + _fpw$)
 UPDATE lfdnrtotal.LE022062 = lfdnr.LE022062 * 10000
 END UPDATE 
 CALL DFile(3,"LE022063" + _fpw$)
 UPDATE lfdnrtotal.LE022063 = lfdnr.LE022063 * 10000
 END UPDATE 
 CALL DFile(3,"LE022066" + _fpw$)
 UPDATE lfdnrtotal.LE022066 = lfdnr.LE022066 * 10000
 END UPDATE 
 CALL DFile(3,"LE022067" + _fpw$)
 UPDATE lfdnrtotal.LE022067 = lfdnr.LE022067 * 10000
 END UPDATE 
 CALL DFile(3,"LE022068" + _fpw$)
 UPDATE lfdnrtotal.LE022068 = lfdnr.LE022068 * 10000
 END UPDATE 
 CALL DFile(3,"LE022069" + _fpw$)
 UPDATE lfdnrtotal.LE022069 = lfdnr.LE022069 * 10000
 END UPDATE 
 CALL DFile(3,"LE022071" + _fpw$)
 UPDATE lfdnrtotal.LE022071 = lfdnr.LE022071 * 10000
 END UPDATE 
 CALL DFile(3,"LE022072" + _fpw$)
 UPDATE lfdnrtotal.LE022072 = lfdnr.LE022072 * 10000
 END UPDATE 
 CALL DFile(3,"LE022076" + _fpw$)
 UPDATE lfdnrtotal.LE022076 = lfdnr.LE022076 * 10000
 END UPDATE 
 CALL DFile(3,"LE022078" + _fpw$)
 UPDATE lfdnrtotal.LE022078 = lfdnr.LE022078 * 10000
 END UPDATE 
 CALL DFile(3,"LE022079" + _fpw$)
 UPDATE lfdnrtotal.LE022079 = lfdnr.LE022079 * 10000
 END UPDATE 
 CALL DFile(3,"RE021011" + _fpw$)
 UPDATE lfdnrtotal.RE021011 = lfdnr.RE021011 * 10000
 END UPDATE 
 CALL DFile(3,"RE022011" + _fpw$)
 UPDATE lfdnrtotal.RE022011 = lfdnr.RE022011 * 10000
 END UPDATE 
 CALL DFile(3,"RE022012" + _fpw$)
 UPDATE lfdnrtotal.RE022012 = lfdnr.RE022012 * 10000
 END UPDATE 
 CALL DFile(3,"SD050011" + _fpw$)
 UPDATE lfdnrtotal.SD050011 = lfdnr.SD050011 * 10000
 END UPDATE 
 CALL DFile(3,"SD055011" + _fpw$)
 UPDATE lfdnrtotal.SD055011 = lfdnr.SD055011 * 10000
 END UPDATE 
 CALL DFile(3,"TE021011" + _fpw$)
 UPDATE lfdnrtotal.TE021011 = lfdnr.TE021011 * 10000
 END UPDATE 
 CALL DFile(3,"TE022011" + _fpw$)
 UPDATE lfdnrtotal.TE022011 = lfdnr.TE022011 * 10000
 END UPDATE 
 CALL DFile(3,"TE022012" + _fpw$)
 UPDATE lfdnrtotal.TE022012 = lfdnr.TE022012 * 10000
 END UPDATE 
 CALL DFile(3,"TE022013" + _fpw$)
 UPDATE lfdnrtotal.TE022013 = lfdnr.TE022013 * 10000
 END UPDATE 
 CALL DFile(3,"TR021011" + _fpw$)
 UPDATE lfdnrtotal.TR021011 = lfdnr.TR021011 * 10000
 END UPDATE 
 CALL DFile(3,"TR022011" + _fpw$)
 UPDATE lfdnrtotal.TR022011 = lfdnr.TR022011 * 10000
 END UPDATE 
 CALL DFile(3,"TR022012" + _fpw$)
 UPDATE lfdnrtotal.TR022012 = lfdnr.TR022012 * 10000
 END UPDATE 
 CALL DFile(3,"TR025011" + _fpw$)
 UPDATE lfdnrtotal.TR025011 = lfdnr.TR025011 * 10000
 END UPDATE 
 CALL DFile(3,"TR025012" + _fpw$)
 UPDATE lfdnrtotal.TR025012 = lfdnr.TR025012 * 10000
 END UPDATE 
 CALL DFile(3,"TR026011" + _fpw$)
 UPDATE lfdnrtotal.TR026011 = lfdnr.TR026011 * 10000
 END UPDATE 
 CALL DFile(3,"UD021011" + _fpw$)
 UPDATE lfdnrtotal.UD021011 = lfdnr.UD021011 * 10000
 END UPDATE 
 CALL DFile(3,"UD021012" + _fpw$)
 UPDATE lfdnrtotal.UD021012 = lfdnr.UD021012 * 10000
 END UPDATE 
 CALL DFile(3,"UD022011" + _fpw$)
 UPDATE lfdnrtotal.UD022011 = lfdnr.UD022011 * 10000
 END UPDATE 
 CALL DFile(3,"UD022012" + _fpw$)
 UPDATE lfdnrtotal.UD022012 = lfdnr.UD022012 * 10000
 END UPDATE 
 CALL DFile(3,"UN021011" + _fpw$)
 UPDATE lfdnrtotal.UN021011 = lfdnr.UN021011 * 10000
 END UPDATE 
 CALL DFile(3,"UN022011" + _fpw$)
 UPDATE lfdnrtotal.UN022011 = lfdnr.UN022011 * 10000
 END UPDATE 
 CALL DFile(3,"UN022012" + _fpw$)
 UPDATE lfdnrtotal.UN022012 = lfdnr.UN022012 * 10000
 END UPDATE 
 CALL DFile(3,"UN022013" + _fpw$)
 UPDATE lfdnrtotal.UN022013 = lfdnr.UN022013 * 10000
 END UPDATE 
 CALL DFile(3,"UN022014" + _fpw$)
 UPDATE lfdnrtotal.UN022014 = lfdnr.UN022014 * 10000
 END UPDATE 
 CALL DFile(3,"UN022019" + _fpw$)
 UPDATE lfdnrtotal.UN022019 = lfdnr.UN022019 * 10000
 END UPDATE 
 CALL DFile(3,"VG021011" + _fpw$)
 UPDATE lfdnrtotal.VG021011 = lfdnr.VG021011 * 10000
 END UPDATE 
 CALL DFile(3,"VG022011" + _fpw$)
 UPDATE lfdnrtotal.VG022011 = lfdnr.VG022011 * 10000
 END UPDATE 
 CALL DFile(3,"VG022012" + _fpw$)
 UPDATE lfdnrtotal.VG022012 = lfdnr.VG022012 * 10000
 END UPDATE 
 CALL DFile(3,"VH021011" + _fpw$)
 UPDATE lfdnrtotal.VH021011 = lfdnr.VH021011 * 10000
 END UPDATE 
 CALL DFile(3,"VH022011" + _fpw$)
 UPDATE lfdnrtotal.VH022011 = lfdnr.VH022011 * 10000
 END UPDATE 
 CALL Info("","")
 CALL DFile(3,"VS021011" + _fpw$)
 UPDATE lfdnrtotal.VS021011 = lfdnr.VS021011 * 10000
 END UPDATE 
 CALL DFile(3,"VS022011" + _fpw$)
 UPDATE lfdnrtotal.VS022011 = lfdnr.VS022011 * 10000
 END UPDATE 
 
 END SUB 
 
SUB CopyHistory()
  cfile$ = FILE 
  FILE "History"
  BLANK FILE "History"
  CodeHist% = SER ("History",1)
  CodeHist.History = CodeHist%
  STORE FILE "History"
  INDEX codehist.history
  SELECT FIRST 
  SELECT KEY codehist% LOCK FILE "History" INDEX codeHist.History
  
  KVanzfeld% = FILEINFO ("KVERTRAG",1)
  DIM KVFelder$(KVanzfeld%)
  FILLARRAY KVFelder$,1
  FOR i% = 0 TO KVanzfeld% - 1
   FTemp1$ = KVFelder$(i%) + ".History"
   FTemp2$ = KVFelder$(i%) + ".KVERTRAG"
   FTemp1$$ = FTemp2$$
  NEXT i%
  FILE "HISTORY"
  CodeHist.History = CodeHist%
  QHistCodeVT.History = STR$ (Codehist%,"000000") + STR$ (lfdnr.history,"000000")
  CALL QuickStore("HISTORY")
  MOUSE OFF 
  UNLOCK CURRENT FILE "HISTORY"
  FILE cfile$
 END SUB 
 
 
 
 
FUNCTION SparteTest$(gdvAdrSparte%)
    FILE "sparten"
    INDEX hauptsparte.sparten
    SELECT FIRST 
    SparteTest$ = "n"
 
    IF EXISTS (gdvAdrSparte%,hauptsparte.sparten) THEN 
      SELECT KEY gdvAdrSparte% FILE "sparten" INDEX hauptsparte.sparten
      SparteTest$ = "j"
      WHILE NOT EOF ("Sparten") AND hauptsparte.sparten = gdvAdrSparte%
        IF GDVImport.sparten <> "j" THEN 
          SparteTest$ = "n"
          SELECT LAST 
        ELSE 
          SELECT NEXT FILE "sparten" INDEX hauptsparte.sparten
        END IF 
      WEND 
    ELSE 
      IF gdvAdrSparte% >= 30 AND gdvAdrSparte% <= 39 THEN 
        IF EXISTS (030,hauptsparte.sparten) THEN SparteTest$ = "j"
      END IF 
      IF gdvAdrSparte% >= 40 AND gdvAdrSparte% <= 49 THEN 
        IF EXISTS (040,hauptsparte.sparten) THEN SparteTest$ = "j"
      END IF 
    END IF 
 END FUNCTION 
 
 
 
 
 

